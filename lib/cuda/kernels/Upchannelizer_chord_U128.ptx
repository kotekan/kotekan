// PTX kernel code for the CUDA upchannelizer
// This file has been generated automatically by `upchan.jl`.
// Do not modify this file, your changes will be lost.

// PTX CompilerJob of MethodInstance for upchan(::Int32, ::Int32, ::Int32, ::Int32, ::CuDeviceVector{Float16x2, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int32, 1}) for sm_86, minthreads=512, blocks_per_sm=2

//
// Generated by LLVM NVPTX Back-End
//

.version 8.2
.target sm_86
.address_size 64

	// .globl	_Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE // -- Begin function _Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE
.func gpu_report_exception
(
	.param .b64 gpu_report_exception_param_0
)
.noreturn
{
	trap;
}
.func gpu_signal_exception
(
	.param .align 8 .b8 gpu_signal_exception_param_0[16]
)
.noreturn
{
	trap;
}
.func  (.param .b64 func_retval0) julia_power_by_squaring_17555
(
	.param .align 8 .b8 julia_power_by_squaring_17555_param_0[16],
	.param .b64 julia_power_by_squaring_17555_param_1,
	.param .b64 julia_power_by_squaring_17555_param_2
)
.noreturn
{
	trap;
}
.extern .shared .align 32 .b8 shmem[];
.global .align 1 .b8 exception5815[6] = {101, 114, 114, 111, 114, 0};
.global .align 1 .b8 exception1[10] = {101, 120, 99, 101, 112, 116, 105, 111, 110, 0};
                                        // @_Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE
.visible .entry _Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE(
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_0[16],
	.param .u32 _Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_1,
	.param .u32 _Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_2,
	.param .u32 _Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_3,
	.param .u32 _Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_4,
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_5[32],
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_6[32],
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_7[32],
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_8[32]
)
.reqntid 512, 1, 1
.minnctapersm 2
{
	.reg .pred 	%p<305>;
	.reg .b16 	%rs<2396>;
	.reg .b32 	%r<16302>;
	.reg .f32 	%f<1310>;
	.reg .b64 	%rd<123>;

// %bb.0:                               // %conversion
	ld.param.u32 	%r214, [_Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_0+8];
	ld.param.u64 	%rd23, [_Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_0];
	// begin inline asm
	mov.u32 %r219, %dynamic_smem_size;
	// end inline asm
	setp.gt.u32 	%p1, %r219, 66815;
	@%p1 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:                              // %L16
	ld.param.u64 	%rd24, [_Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_8];
	ld.param.u32 	%r215, [_Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_1];
	mov.u32 	%r1, %tid.x;
	mov.u32 	%r2, %ctaid.x;
	shl.b32 	%r220, %r2, 9;
	mov.u32 	%r3, %tid.y;
	shl.b32 	%r4, %r3, 5;
	or.b32  	%r221, %r220, %r1;
	or.b32  	%r222, %r221, %r4;
	mul.wide.u32 	%rd30, %r222, 4;
	add.s64 	%rd3, %rd24, %rd30;
	mov.u32 	%r223, 1;
	st.global.u32 	[%rd3], %r223;
	setp.lt.s32 	%p2, %r215, 0;
	@%p2 bra 	$L__BB0_7;
// %bb.3:                               // %L115
	ld.param.u32 	%r216, [_Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_2];
	setp.lt.s32 	%p3, %r216, %r215;
	setp.gt.s32 	%p4, %r216, 262144;
	or.pred  	%p5, %p3, %p4;
	@%p5 bra 	$L__BB0_7;
// %bb.4:                               // %L125
	ld.param.u32 	%r217, [_Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_3];
	sub.s32 	%r224, %r216, %r215;
	and.b32  	%r225, %r224, 255;
	setp.ne.s32 	%p6, %r225, 0;
	setp.lt.s32 	%p7, %r217, 0;
	or.pred  	%p8, %p6, %p7;
	@%p8 bra 	$L__BB0_7;
// %bb.5:                               // %L131
	ld.param.u32 	%r218, [_Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_4];
	setp.lt.s32 	%p9, %r218, %r217;
	setp.gt.s32 	%p10, %r218, 2048;
	or.pred  	%p11, %p9, %p10;
	@%p11 bra 	$L__BB0_7;
// %bb.6:                               // %L141
	sub.s32 	%r226, %r218, %r217;
	and.b32  	%r227, %r226, 1;
	setp.eq.b32 	%p12, %r227, 1;
	mov.pred 	%p13, 0;
	xor.pred  	%p14, %p12, %p13;
	@%p14 bra 	$L__BB0_8;
	bra.uni 	$L__BB0_7;
$L__BB0_8:                              // %pass145
	bfe.u32 	%r131, %r1, 1, 1;
	and.b32  	%r132, %r1, 1;
	bfe.u32 	%r133, %r1, 2, 1;
	shr.u32 	%r134, %r1, 4;
	shl.b32 	%r236, %r134, 2;
	shl.b32 	%r237, %r133, 3;
	shl.b32 	%r238, %r132, 4;
	shl.b32 	%r239, %r131, 5;
	or.b32  	%r240, %r238, %r239;
	or.b32  	%r241, %r237, %r240;
	or.b32  	%r242, %r236, %r241;
	bfe.u32 	%r136, %r1, 3, 1;
	shl.b32 	%r243, %r136, 1;
	or.b32  	%r137, %r243, %r242;
	or.b32  	%r138, %r137, 64;
	mov.f32 	%f221, 0f40000000;
	mov.f32 	%f222, 0f43FF8000;
	div.approx.f32 	%f159, %f222, %f221;
	cvt.rn.f32.s32 	%f223, %r137;
	sub.f32 	%f224, %f223, %f159;
	mov.f32 	%f253, 0f43000000;
	div.approx.f32 	%f161, %f224, %f253;
	setp.ne.f32 	%p20, %f161, 0f00000000;
	mov.f32 	%f1277, 0f3F800000;
	mov.f32 	%f1262, %f1277;
	@%p20 bra 	$L__BB0_9;
	bra.uni 	$L__BB0_10;
$L__BB0_9:                              // %L646
	sin.approx.f32 	%f254, %f161;
	div.approx.f32 	%f1262, %f254, %f161;
$L__BB0_10:                             // %L649
	cvt.rn.f32.s32 	%f257, %r138;
	sub.f32 	%f258, %f257, %f159;
	div.approx.f32 	%f5, %f258, %f253;
	setp.eq.f32 	%p26, %f5, 0f00000000;
	mov.f32 	%f1263, %f1277;
	@%p26 bra 	$L__BB0_12;
// %bb.11:                              // %L666
	sin.approx.f32 	%f288, %f5;
	div.approx.f32 	%f1263, %f288, %f5;
$L__BB0_12:                             // %L669
	or.b32  	%r261, %r137, 1;
	or.b32  	%r6, %r137, 65;
	cvt.rn.f32.s32 	%f292, %r261;
	sub.f32 	%f293, %f292, %f159;
	div.approx.f32 	%f9, %f293, %f253;
	setp.eq.f32 	%p32, %f9, 0f00000000;
	mov.f32 	%f1264, %f1277;
	@%p32 bra 	$L__BB0_14;
// %bb.13:                              // %L748
	sin.approx.f32 	%f323, %f9;
	div.approx.f32 	%f1264, %f323, %f9;
$L__BB0_14:                             // %L751
	cvt.rn.f32.s32 	%f326, %r6;
	sub.f32 	%f327, %f326, %f159;
	div.approx.f32 	%f14, %f327, %f253;
	setp.eq.f32 	%p38, %f14, 0f00000000;
	mov.f32 	%f1265, %f1277;
	@%p38 bra 	$L__BB0_16;
// %bb.15:                              // %L768
	sin.approx.f32 	%f357, %f14;
	div.approx.f32 	%f1265, %f357, %f14;
$L__BB0_16:                             // %L771
	or.b32  	%r279, %r137, 128;
	or.b32  	%r8, %r137, 192;
	cvt.rn.f32.s32 	%f361, %r279;
	sub.f32 	%f362, %f361, %f159;
	div.approx.f32 	%f18, %f362, %f253;
	setp.eq.f32 	%p44, %f18, 0f00000000;
	mov.f32 	%f1266, %f1277;
	@%p44 bra 	$L__BB0_18;
// %bb.17:                              // %L850
	sin.approx.f32 	%f392, %f18;
	div.approx.f32 	%f1266, %f392, %f18;
$L__BB0_18:                             // %L853
	mov.f32 	%f225, 0f44004000;
	cvt.rn.f32.s32 	%f395, %r8;
	sub.f32 	%f396, %f395, %f159;
	div.approx.f32 	%f23, %f396, %f253;
	setp.eq.f32 	%p50, %f23, 0f00000000;
	mov.f32 	%f1267, %f1277;
	@%p50 bra 	$L__BB0_20;
// %bb.19:                              // %L870
	sin.approx.f32 	%f426, %f23;
	div.approx.f32 	%f1267, %f426, %f23;
$L__BB0_20:                             // %L873
	div.approx.f32 	%f226, %f224, %f225;
	div.approx.f32 	%f260, %f258, %f225;
	div.approx.f32 	%f295, %f293, %f225;
	div.approx.f32 	%f329, %f327, %f225;
	div.approx.f32 	%f364, %f362, %f225;
	div.approx.f32 	%f398, %f396, %f225;
	or.b32  	%r297, %r137, 129;
	or.b32  	%r10, %r137, 193;
	cvt.rn.f32.s32 	%f430, %r297;
	sub.f32 	%f431, %f430, %f159;
	div.approx.f32 	%f433, %f431, %f225;
	div.approx.f32 	%f27, %f431, %f253;
	setp.eq.f32 	%p56, %f27, 0f00000000;
	mov.f32 	%f1268, %f1277;
	@%p56 bra 	$L__BB0_22;
// %bb.21:                              // %L952
	sin.approx.f32 	%f461, %f27;
	div.approx.f32 	%f1268, %f461, %f27;
$L__BB0_22:                             // %L955
	abs.f32 	%f227, %f226;
	abs.f32 	%f261, %f260;
	abs.f32 	%f296, %f295;
	abs.f32 	%f330, %f329;
	abs.f32 	%f365, %f364;
	abs.f32 	%f399, %f398;
	abs.f32 	%f434, %f433;
	cvt.rn.f32.s32 	%f464, %r10;
	sub.f32 	%f465, %f464, %f159;
	div.approx.f32 	%f467, %f465, %f225;
	abs.f32 	%f468, %f467;
	div.approx.f32 	%f32, %f465, %f253;
	setp.eq.f32 	%p62, %f32, 0f00000000;
	mov.f32 	%f1269, %f1277;
	@%p62 bra 	$L__BB0_24;
// %bb.23:                              // %L972
	sin.approx.f32 	%f495, %f32;
	div.approx.f32 	%f1269, %f495, %f32;
$L__BB0_24:                             // %L975
	setp.gt.f32 	%p15, %f227, 0f4B800000;
	mul.f32 	%f228, %f226, 0f00000000;
	setp.gt.f32 	%p21, %f261, 0f4B800000;
	mul.f32 	%f262, %f260, 0f00000000;
	setp.gt.f32 	%p27, %f296, 0f4B800000;
	mul.f32 	%f297, %f295, 0f00000000;
	setp.gt.f32 	%p33, %f330, 0f4B800000;
	mul.f32 	%f331, %f329, 0f00000000;
	setp.gt.f32 	%p39, %f365, 0f4B800000;
	mul.f32 	%f366, %f364, 0f00000000;
	setp.gt.f32 	%p45, %f399, 0f4B800000;
	mul.f32 	%f400, %f398, 0f00000000;
	setp.gt.f32 	%p51, %f434, 0f4B800000;
	mul.f32 	%f435, %f433, 0f00000000;
	setp.gt.f32 	%p57, %f468, 0f4B800000;
	mul.f32 	%f469, %f467, 0f00000000;
	shl.b32 	%r228, %r2, 4;
	or.b32  	%r315, %r137, 256;
	or.b32  	%r12, %r137, 320;
	cvt.rn.f32.s32 	%f499, %r315;
	sub.f32 	%f500, %f499, %f159;
	div.approx.f32 	%f502, %f500, %f225;
	abs.f32 	%f503, %f502;
	setp.gt.f32 	%p63, %f503, 0f4B800000;
	mul.f32 	%f504, %f502, 0f00000000;
	div.approx.f32 	%f36, %f500, %f253;
	setp.eq.f32 	%p68, %f36, 0f00000000;
	mov.f32 	%f1270, %f1277;
	@%p68 bra 	$L__BB0_26;
// %bb.25:                              // %L1054
	sin.approx.f32 	%f530, %f36;
	div.approx.f32 	%f1270, %f530, %f36;
$L__BB0_26:                             // %L1057
	selp.f32 	%f229, %f228, %f226, %p15;
	selp.f32 	%f263, %f262, %f260, %p21;
	selp.f32 	%f298, %f297, %f295, %p27;
	selp.f32 	%f332, %f331, %f329, %p33;
	selp.f32 	%f367, %f366, %f364, %p39;
	selp.f32 	%f401, %f400, %f398, %p45;
	selp.f32 	%f436, %f435, %f433, %p51;
	selp.f32 	%f470, %f469, %f467, %p57;
	selp.f32 	%f505, %f504, %f502, %p63;
	shl.b32 	%r123, %r1, 2;
	and.b32  	%r229, %r228, 1920;
	and.b32  	%r230, %r1, 18;
	cvt.rn.f32.s32 	%f533, %r12;
	sub.f32 	%f534, %f533, %f159;
	div.approx.f32 	%f536, %f534, %f225;
	abs.f32 	%f537, %f536;
	setp.gt.f32 	%p69, %f537, 0f4B800000;
	mul.f32 	%f538, %f536, 0f00000000;
	selp.f32 	%f539, %f538, %f536, %p69;
	div.approx.f32 	%f41, %f534, %f253;
	setp.eq.f32 	%p74, %f41, 0f00000000;
	mov.f32 	%f1271, %f1277;
	@%p74 bra 	$L__BB0_28;
// %bb.27:                              // %L1074
	sin.approx.f32 	%f564, %f41;
	div.approx.f32 	%f1271, %f564, %f41;
$L__BB0_28:                             // %L1077
	add.f32 	%f230, %f229, %f229;
	add.f32 	%f264, %f263, %f263;
	add.f32 	%f299, %f298, %f298;
	add.f32 	%f333, %f332, %f332;
	add.f32 	%f368, %f367, %f367;
	add.f32 	%f402, %f401, %f401;
	add.f32 	%f437, %f436, %f436;
	add.f32 	%f471, %f470, %f470;
	add.f32 	%f506, %f505, %f505;
	add.f32 	%f540, %f539, %f539;
	shl.b32 	%r124, %r1, 1;
	or.b32  	%r231, %r230, %r229;
	and.b32  	%r232, %r123, 36;
	or.b32  	%r333, %r137, 257;
	or.b32  	%r14, %r137, 321;
	cvt.rn.f32.s32 	%f568, %r333;
	sub.f32 	%f569, %f568, %f159;
	div.approx.f32 	%f571, %f569, %f225;
	abs.f32 	%f572, %f571;
	setp.gt.f32 	%p75, %f572, 0f4B800000;
	mul.f32 	%f573, %f571, 0f00000000;
	selp.f32 	%f574, %f573, %f571, %p75;
	add.f32 	%f575, %f574, %f574;
	div.approx.f32 	%f45, %f569, %f253;
	setp.eq.f32 	%p80, %f45, 0f00000000;
	mov.f32 	%f1272, %f1277;
	@%p80 bra 	$L__BB0_30;
// %bb.29:                              // %L1156
	sin.approx.f32 	%f599, %f45;
	div.approx.f32 	%f1272, %f599, %f45;
$L__BB0_30:                             // %L1159
	mov.b32 	%r244, %f230;
	mov.b32 	%r251, %f264;
	mov.b32 	%r262, %f299;
	mov.b32 	%r269, %f333;
	mov.b32 	%r280, %f368;
	mov.b32 	%r287, %f402;
	mov.b32 	%r298, %f437;
	mov.b32 	%r305, %f471;
	mov.b32 	%r316, %f506;
	mov.b32 	%r323, %f540;
	mov.b32 	%r334, %f575;
	and.b32  	%r125, %r124, 8;
	or.b32  	%r233, %r231, %r232;
	cvt.rn.f32.s32 	%f602, %r14;
	sub.f32 	%f603, %f602, %f159;
	div.approx.f32 	%f605, %f603, %f225;
	abs.f32 	%f606, %f605;
	setp.gt.f32 	%p81, %f606, 0f4B800000;
	mul.f32 	%f607, %f605, 0f00000000;
	selp.f32 	%f608, %f607, %f605, %p81;
	add.f32 	%f609, %f608, %f608;
	mov.b32 	%r341, %f609;
	div.approx.f32 	%f50, %f603, %f253;
	setp.eq.f32 	%p86, %f50, 0f00000000;
	mov.f32 	%f1273, %f1277;
	@%p86 bra 	$L__BB0_32;
// %bb.31:                              // %L1176
	sin.approx.f32 	%f633, %f50;
	div.approx.f32 	%f1273, %f633, %f50;
$L__BB0_32:                             // %L1179
	and.b32  	%r245, %r244, -2147483648;
	and.b32  	%r252, %r251, -2147483648;
	and.b32  	%r263, %r262, -2147483648;
	and.b32  	%r270, %r269, -2147483648;
	and.b32  	%r281, %r280, -2147483648;
	and.b32  	%r288, %r287, -2147483648;
	and.b32  	%r299, %r298, -2147483648;
	and.b32  	%r306, %r305, -2147483648;
	and.b32  	%r317, %r316, -2147483648;
	and.b32  	%r324, %r323, -2147483648;
	and.b32  	%r335, %r334, -2147483648;
	and.b32  	%r342, %r341, -2147483648;
	or.b32  	%r234, %r233, %r125;
	or.b32  	%r351, %r137, 384;
	or.b32  	%r16, %r137, 448;
	cvt.rn.f32.s32 	%f637, %r351;
	sub.f32 	%f638, %f637, %f159;
	div.approx.f32 	%f640, %f638, %f225;
	abs.f32 	%f641, %f640;
	setp.gt.f32 	%p87, %f641, 0f4B800000;
	mul.f32 	%f642, %f640, 0f00000000;
	selp.f32 	%f643, %f642, %f640, %p87;
	add.f32 	%f644, %f643, %f643;
	mov.b32 	%r352, %f644;
	and.b32  	%r353, %r352, -2147483648;
	div.approx.f32 	%f54, %f638, %f253;
	setp.eq.f32 	%p92, %f54, 0f00000000;
	mov.f32 	%f1274, %f1277;
	@%p92 bra 	$L__BB0_34;
// %bb.33:                              // %L1258
	sin.approx.f32 	%f668, %f54;
	div.approx.f32 	%f1274, %f668, %f54;
$L__BB0_34:                             // %L1261
	or.b32  	%r246, %r245, 1056964608;
	or.b32  	%r253, %r252, 1056964608;
	or.b32  	%r264, %r263, 1056964608;
	or.b32  	%r271, %r270, 1056964608;
	or.b32  	%r282, %r281, 1056964608;
	or.b32  	%r289, %r288, 1056964608;
	or.b32  	%r300, %r299, 1056964608;
	or.b32  	%r307, %r306, 1056964608;
	or.b32  	%r318, %r317, 1056964608;
	or.b32  	%r325, %r324, 1056964608;
	or.b32  	%r336, %r335, 1056964608;
	or.b32  	%r343, %r342, 1056964608;
	or.b32  	%r354, %r353, 1056964608;
	cvt.u16.u32 	%rs2, %r234;
	cvt.rn.f32.s32 	%f671, %r16;
	sub.f32 	%f672, %f671, %f159;
	div.approx.f32 	%f674, %f672, %f225;
	abs.f32 	%f675, %f674;
	setp.gt.f32 	%p93, %f675, 0f4B800000;
	mul.f32 	%f676, %f674, 0f00000000;
	selp.f32 	%f677, %f676, %f674, %p93;
	add.f32 	%f678, %f677, %f677;
	mov.b32 	%r359, %f678;
	and.b32  	%r360, %r359, -2147483648;
	or.b32  	%r361, %r360, 1056964608;
	div.approx.f32 	%f59, %f672, %f253;
	setp.eq.f32 	%p98, %f59, 0f00000000;
	mov.f32 	%f1275, %f1277;
	@%p98 bra 	$L__BB0_36;
// %bb.35:                              // %L1278
	sin.approx.f32 	%f702, %f59;
	div.approx.f32 	%f1275, %f702, %f59;
$L__BB0_36:                             // %L1281
	mov.b32 	%f231, %r246;
	mov.b32 	%f265, %r253;
	mov.b32 	%f300, %r264;
	mov.b32 	%f334, %r271;
	mov.b32 	%f369, %r282;
	mov.b32 	%f403, %r289;
	mov.b32 	%f438, %r300;
	mov.b32 	%f472, %r307;
	mov.b32 	%f507, %r318;
	mov.b32 	%f541, %r325;
	mov.b32 	%f576, %r336;
	mov.b32 	%f610, %r343;
	mov.b32 	%f645, %r354;
	mov.b32 	%f679, %r361;
	shr.u16 	%rs3, %rs2, 1;
	or.b32  	%r369, %r137, 385;
	or.b32  	%r18, %r137, 449;
	cvt.rn.f32.s32 	%f706, %r369;
	sub.f32 	%f707, %f706, %f159;
	div.approx.f32 	%f709, %f707, %f225;
	abs.f32 	%f710, %f709;
	setp.gt.f32 	%p99, %f710, 0f4B800000;
	mul.f32 	%f711, %f709, 0f00000000;
	selp.f32 	%f712, %f711, %f709, %p99;
	add.f32 	%f713, %f712, %f712;
	mov.b32 	%r370, %f713;
	and.b32  	%r371, %r370, -2147483648;
	or.b32  	%r372, %r371, 1056964608;
	mov.b32 	%f714, %r372;
	div.approx.f32 	%f63, %f707, %f253;
	setp.eq.f32 	%p104, %f63, 0f00000000;
	mov.f32 	%f1276, %f1277;
	@%p104 bra 	$L__BB0_38;
// %bb.37:                              // %L1360
	sin.approx.f32 	%f737, %f63;
	div.approx.f32 	%f1276, %f737, %f63;
$L__BB0_38:                             // %L1363
	add.f32 	%f232, %f230, %f231;
	abs.f32 	%f234, %f230;
	add.f32 	%f266, %f264, %f265;
	abs.f32 	%f268, %f264;
	add.f32 	%f301, %f299, %f300;
	abs.f32 	%f303, %f299;
	add.f32 	%f335, %f333, %f334;
	abs.f32 	%f337, %f333;
	add.f32 	%f370, %f368, %f369;
	abs.f32 	%f372, %f368;
	add.f32 	%f404, %f402, %f403;
	abs.f32 	%f406, %f402;
	add.f32 	%f439, %f437, %f438;
	abs.f32 	%f441, %f437;
	add.f32 	%f473, %f471, %f472;
	abs.f32 	%f475, %f471;
	add.f32 	%f508, %f506, %f507;
	abs.f32 	%f510, %f506;
	add.f32 	%f542, %f540, %f541;
	abs.f32 	%f544, %f540;
	add.f32 	%f577, %f575, %f576;
	abs.f32 	%f579, %f575;
	add.f32 	%f611, %f609, %f610;
	abs.f32 	%f613, %f609;
	add.f32 	%f646, %f644, %f645;
	abs.f32 	%f648, %f644;
	add.f32 	%f680, %f678, %f679;
	abs.f32 	%f682, %f678;
	add.f32 	%f715, %f713, %f714;
	abs.f32 	%f717, %f713;
	or.b16  	%rs1, %rs3, 32;
	shr.u32 	%r130, %r1, 1;
	shr.u32 	%r135, %r1, 3;
	cvt.rn.f32.s32 	%f740, %r18;
	sub.f32 	%f741, %f740, %f159;
	div.approx.f32 	%f743, %f741, %f225;
	abs.f32 	%f744, %f743;
	setp.gt.f32 	%p105, %f744, 0f4B800000;
	mul.f32 	%f745, %f743, 0f00000000;
	selp.f32 	%f746, %f745, %f743, %p105;
	add.f32 	%f747, %f746, %f746;
	mov.b32 	%r377, %f747;
	and.b32  	%r378, %r377, -2147483648;
	or.b32  	%r379, %r378, 1056964608;
	mov.b32 	%f748, %r379;
	add.f32 	%f749, %f747, %f748;
	abs.f32 	%f751, %f747;
	div.approx.f32 	%f68, %f741, %f253;
	setp.eq.f32 	%p110, %f68, 0f00000000;
	@%p110 bra 	$L__BB0_40;
// %bb.39:                              // %L1380
	sin.approx.f32 	%f771, %f68;
	div.approx.f32 	%f1277, %f771, %f68;
$L__BB0_40:                             // %L1383
	cvt.rzi.f32.f32 	%f233, %f232;
	setp.gt.f32 	%p16, %f234, 0f4B000000;
	cvt.rzi.f32.f32 	%f267, %f266;
	setp.gt.f32 	%p22, %f268, 0f4B000000;
	cvt.rzi.f32.f32 	%f302, %f301;
	setp.gt.f32 	%p28, %f303, 0f4B000000;
	cvt.rzi.f32.f32 	%f336, %f335;
	setp.gt.f32 	%p34, %f337, 0f4B000000;
	cvt.rzi.f32.f32 	%f371, %f370;
	setp.gt.f32 	%p40, %f372, 0f4B000000;
	cvt.rzi.f32.f32 	%f405, %f404;
	setp.gt.f32 	%p46, %f406, 0f4B000000;
	cvt.rzi.f32.f32 	%f440, %f439;
	setp.gt.f32 	%p52, %f441, 0f4B000000;
	cvt.rzi.f32.f32 	%f474, %f473;
	setp.gt.f32 	%p58, %f475, 0f4B000000;
	cvt.rzi.f32.f32 	%f509, %f508;
	setp.gt.f32 	%p64, %f510, 0f4B000000;
	cvt.rzi.f32.f32 	%f543, %f542;
	setp.gt.f32 	%p70, %f544, 0f4B000000;
	cvt.rzi.f32.f32 	%f578, %f577;
	setp.gt.f32 	%p76, %f579, 0f4B000000;
	cvt.rzi.f32.f32 	%f612, %f611;
	setp.gt.f32 	%p82, %f613, 0f4B000000;
	cvt.rzi.f32.f32 	%f647, %f646;
	setp.gt.f32 	%p88, %f648, 0f4B000000;
	cvt.rzi.f32.f32 	%f681, %f680;
	setp.gt.f32 	%p94, %f682, 0f4B000000;
	cvt.rzi.f32.f32 	%f716, %f715;
	setp.gt.f32 	%p100, %f717, 0f4B000000;
	cvt.rzi.f32.f32 	%f750, %f749;
	setp.gt.f32 	%p106, %f751, 0f4B000000;
	and.b16  	%rs4, %rs1, 1023;
	mul.lo.s32 	%r399, %r137, 127;
	and.b32  	%r400, %r399, 255;
	cvt.rn.f32.s32 	%f774, %r400;
	div.approx.f32 	%f776, %f774, %f253;
	add.f32 	%f777, %f776, %f776;
	mov.b32 	%r401, %f777;
	and.b32  	%r402, %r401, -2147483648;
	or.b32  	%r403, %r402, 1056964608;
	mov.b32 	%f778, %r403;
	add.f32 	%f779, %f777, %f778;
	cvt.rzi.f32.f32 	%f780, %f779;
	abs.f32 	%f781, %f777;
	setp.gt.f32 	%p111, %f781, 0f4B000000;
	selp.f32 	%f782, %f777, %f780, %p111;
	cvt.rzi.f32.f32 	%f783, %f777;
	setp.lt.f32 	%p112, %f781, 0f3F000000;
	add.s32 	%r409, %r399, 192;
	and.b32  	%r410, %r409, 255;
	cvt.rn.f32.s32 	%f809, %r410;
	div.approx.f32 	%f810, %f809, %f253;
	add.f32 	%f811, %f810, %f810;
	mov.b32 	%r411, %f811;
	and.b32  	%r412, %r411, -2147483648;
	or.b32  	%r413, %r412, 1056964608;
	mov.b32 	%f812, %r413;
	add.f32 	%f813, %f811, %f812;
	cvt.rzi.f32.f32 	%f814, %f813;
	abs.f32 	%f815, %f811;
	setp.gt.f32 	%p118, %f815, 0f4B000000;
	selp.f32 	%f816, %f811, %f814, %p118;
	cvt.rzi.f32.f32 	%f817, %f811;
	setp.lt.f32 	%p119, %f815, 0f3F000000;
	and.b32  	%r419, %r135, 2;
	and.b32  	%r420, %r130, 4;
	or.b32  	%r421, %r133, %r419;
	or.b32  	%r24, %r421, %r420;
	and.b32  	%r422, %r1, 3;
	mul.lo.s32 	%r423, %r422, %r24;
	shl.b32 	%r424, %r423, 1;
	neg.s32 	%r425, %r424;
	cvt.rn.f32.s32 	%f842, %r425;
	mov.f32 	%f843, 0f41000000;
	div.approx.f32 	%f71, %f842, %f843;
	abs.f32 	%f1300, %f71;
	setp.lt.f32 	%p125, %f1300, 0f40000000;
	@%p125 bra 	$L__BB0_132;
// %bb.41:
	setp.gtu.f32 	%p126, %f1300, 0f4B800000;
	@%p126 bra 	$L__BB0_128;
	bra.uni 	$L__BB0_42;
$L__BB0_128:
	mov.b32 	%r140, %f1300;
	and.b32  	%r426, %r140, 8388607;
	or.b32  	%r16271, %r426, 1065353216;
	mov.b32 	%f1299, %r16271;
	add.s32 	%r427, %r140, -1073741824;
	and.b32  	%r16272, %r427, -8388608;
	setp.eq.s32 	%p132, %r16272, 0;
	@%p132 bra 	$L__BB0_131;
// %bb.129:                             // %__nv_fmaf_rn.exit4.i.i.i1743.preheader
	mov.f32 	%f853, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f852,%f853;
	// end inline asm
$L__BB0_130:                            // %__nv_fmaf_rn.exit4.i.i.i1743
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r428, %r16272, 192937984;
	add.s32 	%r429, %r16271, %r428;
	mov.b32 	%f854, %r429;
	mul.f32 	%f855, %f852, %f854;
	sub.f32 	%f856, %f854, %f855;
	fma.rn.f32 	%f857, %f856, %f852, %f855;
	sub.f32 	%f858, %f854, %f857;
	fma.rz.f32 	%f859, %f858, %f852, %f857;
	cvt.rzi.f32.f32 	%f860, %f859;
	sub.f32 	%f1299, %f854, %f860;
	sub.s32 	%r16272, %r16272, %r428;
	mov.b32 	%r16271, %f1299;
	setp.ne.s32 	%p133, %r16272, 0;
	setp.ne.s32 	%p134, %r16271, 0;
	and.pred  	%p135, %p133, %p134;
	@%p135 bra 	$L__BB0_130;
$L__BB0_131:                            // %__internal_fmodf_slowpath_mod.exit.i.i1745
	setp.gt.u32 	%p136, %r140, 2139095039;
	selp.f32 	%f861, 0f7FFFFFFF, 0f4B800000, %p136;
	mul.f32 	%f862, %f1299, 0f34000000;
	mul.f32 	%f1300, %f861, %f862;
	bra.uni 	$L__BB0_132;
$L__BB0_42:                             // %__nv_fast_fdividef.exit.i.i.i1722
	div.approx.f32 	%f845, %f1300, %f221;
	cvt.rzi.f32.f32 	%f1298, %f845;
	fma.rn.f32 	%f163, %f1298, 0fC0000000, %f1300;
	mov.b32 	%r139, %f163;
	setp.lt.u32 	%p127, %r139, 1073741824;
	@%p127 bra 	$L__BB0_127;
// %bb.43:
	setp.lt.u32 	%p128, %r139, -2147483647;
	@%p128 bra 	$L__BB0_125;
// %bb.44:
	add.f32 	%f850, %f1298, 0fBF800000;
	setp.lt.f32 	%p131, %f163, 0fC0000000;
	add.f32 	%f851, %f850, 0fBF800000;
	selp.f32 	%f1298, %f851, %f850, %p131;
	bra.uni 	$L__BB0_127;
$L__BB0_125:
	add.f32 	%f1298, %f1298, 0f3F800000;
	setp.ltu.f32 	%p129, %f163, 0f40800000;
	@%p129 bra 	$L__BB0_127;
// %bb.126:                             // %__nv_fmaf_rn.exit.i.i.i1726
	add.f32 	%f846, %f1298, 0f3F800000;
	fma.rn.f32 	%f848, %f221, 0fC0400000, %f163;
	setp.ge.f32 	%p130, %f848, 0f00000000;
	add.f32 	%f849, %f846, 0f3F800000;
	selp.f32 	%f1298, %f849, %f846, %p130;
$L__BB0_127:                            // %__internal_fmodf_fastpath_quot.exit.i.i1729
	fma.rn.f32 	%f1300, %f1298, 0fC0000000, %f1300;
$L__BB0_132:                            // %__internal_fmodf_kernel.exit.i1748
	selp.f32 	%f235, %f230, %f233, %p16;
	cvt.rzi.f32.f32 	%f236, %f230;
	setp.lt.f32 	%p17, %f234, 0f3F000000;
	selp.f32 	%f269, %f264, %f267, %p22;
	cvt.rzi.f32.f32 	%f270, %f264;
	setp.lt.f32 	%p23, %f268, 0f3F000000;
	selp.f32 	%f304, %f299, %f302, %p28;
	cvt.rzi.f32.f32 	%f305, %f299;
	setp.lt.f32 	%p29, %f303, 0f3F000000;
	selp.f32 	%f338, %f333, %f336, %p34;
	cvt.rzi.f32.f32 	%f339, %f333;
	setp.lt.f32 	%p35, %f337, 0f3F000000;
	selp.f32 	%f373, %f368, %f371, %p40;
	cvt.rzi.f32.f32 	%f374, %f368;
	setp.lt.f32 	%p41, %f372, 0f3F000000;
	selp.f32 	%f407, %f402, %f405, %p46;
	cvt.rzi.f32.f32 	%f408, %f402;
	setp.lt.f32 	%p47, %f406, 0f3F000000;
	selp.f32 	%f442, %f437, %f440, %p52;
	cvt.rzi.f32.f32 	%f443, %f437;
	setp.lt.f32 	%p53, %f441, 0f3F000000;
	selp.f32 	%f476, %f471, %f474, %p58;
	cvt.rzi.f32.f32 	%f477, %f471;
	setp.lt.f32 	%p59, %f475, 0f3F000000;
	selp.f32 	%f511, %f506, %f509, %p64;
	cvt.rzi.f32.f32 	%f512, %f506;
	setp.lt.f32 	%p65, %f510, 0f3F000000;
	selp.f32 	%f545, %f540, %f543, %p70;
	cvt.rzi.f32.f32 	%f546, %f540;
	setp.lt.f32 	%p71, %f544, 0f3F000000;
	selp.f32 	%f580, %f575, %f578, %p76;
	cvt.rzi.f32.f32 	%f581, %f575;
	setp.lt.f32 	%p77, %f579, 0f3F000000;
	selp.f32 	%f614, %f609, %f612, %p82;
	cvt.rzi.f32.f32 	%f615, %f609;
	setp.lt.f32 	%p83, %f613, 0f3F000000;
	selp.f32 	%f649, %f644, %f647, %p88;
	cvt.rzi.f32.f32 	%f650, %f644;
	setp.lt.f32 	%p89, %f648, 0f3F000000;
	selp.f32 	%f683, %f678, %f681, %p94;
	cvt.rzi.f32.f32 	%f684, %f678;
	setp.lt.f32 	%p95, %f682, 0f3F000000;
	selp.f32 	%f718, %f713, %f716, %p100;
	cvt.rzi.f32.f32 	%f719, %f713;
	setp.lt.f32 	%p101, %f717, 0f3F000000;
	selp.f32 	%f752, %f747, %f750, %p106;
	cvt.rzi.f32.f32 	%f753, %f747;
	setp.lt.f32 	%p107, %f751, 0f3F000000;
	selp.f32 	%f784, %f783, %f782, %p112;
	selp.f32 	%f818, %f817, %f816, %p119;
	shr.u32 	%r127, %r234, 1;
	cvt.u32.u16 	%r235, %rs4;
	abs.f32 	%f863, %f1300;
	setp.gtu.f32 	%p137, %f863, 0f7F800000;
	@%p137 bra 	$L__BB0_134;
// %bb.133:
	mov.b32 	%r430, %f71;
	and.b32  	%r431, %r430, -2147483648;
	mov.b32 	%r432, %f1300;
	or.b32  	%r433, %r431, %r432;
	mov.b32 	%f1300, %r433;
$L__BB0_134:                            // %__nv_fmodf.exit1749
	selp.f32 	%f237, %f236, %f235, %p17;
	selp.f32 	%f271, %f270, %f269, %p23;
	selp.f32 	%f306, %f305, %f304, %p29;
	selp.f32 	%f340, %f339, %f338, %p35;
	selp.f32 	%f375, %f374, %f373, %p41;
	selp.f32 	%f409, %f408, %f407, %p47;
	selp.f32 	%f444, %f443, %f442, %p53;
	selp.f32 	%f478, %f477, %f476, %p59;
	selp.f32 	%f513, %f512, %f511, %p65;
	selp.f32 	%f547, %f546, %f545, %p71;
	selp.f32 	%f582, %f581, %f580, %p77;
	selp.f32 	%f616, %f615, %f614, %p83;
	selp.f32 	%f651, %f650, %f649, %p89;
	selp.f32 	%f685, %f684, %f683, %p95;
	selp.f32 	%f720, %f719, %f718, %p101;
	selp.f32 	%f754, %f753, %f752, %p107;
	fma.rn.f32 	%f785, %f784, 0fBF000000, %f776;
	fma.rn.f32 	%f819, %f818, 0fBF000000, %f810;
	ld.param.u64 	%rd1, [_Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_5];
	mul.wide.u32 	%rd31, %r127, 4;
	mul.wide.u32 	%rd33, %r235, 4;
	add.f32 	%f864, %f1300, %f1300;
	mov.b32 	%r434, %f864;
	and.b32  	%r435, %r434, -2147483648;
	or.b32  	%r436, %r435, 1056964608;
	mov.b32 	%f865, %r436;
	add.f32 	%f866, %f864, %f865;
	cvt.rzi.f32.f32 	%f867, %f866;
	abs.f32 	%f868, %f864;
	setp.gt.f32 	%p138, %f868, 0f4B000000;
	selp.f32 	%f869, %f864, %f867, %p138;
	cvt.rzi.f32.f32 	%f870, %f864;
	setp.lt.f32 	%p139, %f868, 0f3F000000;
	selp.f32 	%f871, %f870, %f869, %p139;
	fma.rn.f32 	%f872, %f871, 0fBF000000, %f1300;
	and.b32  	%r442, %r124, 6;
	mov.u32 	%r443, -8;
	sub.s32 	%r444, %r443, %r442;
	mul.lo.s32 	%r445, %r24, %r444;
	cvt.rn.f32.s32 	%f894, %r445;
	div.approx.f32 	%f179, %f894, %f843;
	abs.f32 	%f1280, %f179;
	setp.lt.f32 	%p145, %f1280, 0f40000000;
	@%p145 bra 	$L__BB0_56;
// %bb.45:
	setp.gtu.f32 	%p146, %f1280, 0f4B800000;
	@%p146 bra 	$L__BB0_52;
	bra.uni 	$L__BB0_46;
$L__BB0_52:
	mov.b32 	%r26, %f1280;
	and.b32  	%r446, %r26, 8388607;
	or.b32  	%r16236, %r446, 1065353216;
	mov.b32 	%f1279, %r16236;
	add.s32 	%r447, %r26, -1073741824;
	and.b32  	%r16237, %r447, -8388608;
	setp.eq.s32 	%p152, %r16237, 0;
	@%p152 bra 	$L__BB0_55;
// %bb.53:                              // %__nv_fmaf_rn.exit4.i.i.i.preheader
	mov.f32 	%f905, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f904,%f905;
	// end inline asm
$L__BB0_54:                             // %__nv_fmaf_rn.exit4.i.i.i
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r448, %r16237, 192937984;
	add.s32 	%r449, %r16236, %r448;
	mov.b32 	%f906, %r449;
	mul.f32 	%f907, %f904, %f906;
	sub.f32 	%f908, %f906, %f907;
	fma.rn.f32 	%f909, %f908, %f904, %f907;
	sub.f32 	%f910, %f906, %f909;
	fma.rz.f32 	%f911, %f910, %f904, %f909;
	cvt.rzi.f32.f32 	%f912, %f911;
	sub.f32 	%f1279, %f906, %f912;
	sub.s32 	%r16237, %r16237, %r448;
	mov.b32 	%r16236, %f1279;
	setp.ne.s32 	%p153, %r16237, 0;
	setp.ne.s32 	%p154, %r16236, 0;
	and.pred  	%p155, %p153, %p154;
	@%p155 bra 	$L__BB0_54;
$L__BB0_55:                             // %__internal_fmodf_slowpath_mod.exit.i.i
	setp.gt.u32 	%p156, %r26, 2139095039;
	selp.f32 	%f913, 0f7FFFFFFF, 0f4B800000, %p156;
	mul.f32 	%f914, %f1279, 0f34000000;
	mul.f32 	%f1280, %f913, %f914;
	bra.uni 	$L__BB0_56;
$L__BB0_46:                             // %__nv_fast_fdividef.exit.i.i.i
	div.approx.f32 	%f897, %f1280, %f221;
	cvt.rzi.f32.f32 	%f1278, %f897;
	fma.rn.f32 	%f74, %f1278, 0fC0000000, %f1280;
	mov.b32 	%r25, %f74;
	setp.lt.u32 	%p147, %r25, 1073741824;
	@%p147 bra 	$L__BB0_51;
// %bb.47:
	setp.lt.u32 	%p148, %r25, -2147483647;
	@%p148 bra 	$L__BB0_49;
// %bb.48:
	add.f32 	%f902, %f1278, 0fBF800000;
	setp.lt.f32 	%p151, %f74, 0fC0000000;
	add.f32 	%f903, %f902, 0fBF800000;
	selp.f32 	%f1278, %f903, %f902, %p151;
	bra.uni 	$L__BB0_51;
$L__BB0_49:
	add.f32 	%f1278, %f1278, 0f3F800000;
	setp.ltu.f32 	%p149, %f74, 0f40800000;
	@%p149 bra 	$L__BB0_51;
// %bb.50:                              // %__nv_fmaf_rn.exit.i.i.i
	add.f32 	%f898, %f1278, 0f3F800000;
	fma.rn.f32 	%f900, %f221, 0fC0400000, %f74;
	setp.ge.f32 	%p150, %f900, 0f00000000;
	add.f32 	%f901, %f898, 0f3F800000;
	selp.f32 	%f1278, %f901, %f898, %p150;
$L__BB0_51:                             // %__internal_fmodf_fastpath_quot.exit.i.i
	fma.rn.f32 	%f1280, %f1278, 0fC0000000, %f1280;
$L__BB0_56:                             // %__internal_fmodf_kernel.exit.i
	fma.rn.f32 	%f238, %f237, 0fBF000000, %f229;
	fma.rn.f32 	%f272, %f271, 0fBF000000, %f263;
	fma.rn.f32 	%f307, %f306, 0fBF000000, %f298;
	fma.rn.f32 	%f341, %f340, 0fBF000000, %f332;
	fma.rn.f32 	%f376, %f375, 0fBF000000, %f367;
	fma.rn.f32 	%f410, %f409, 0fBF000000, %f401;
	fma.rn.f32 	%f445, %f444, 0fBF000000, %f436;
	fma.rn.f32 	%f479, %f478, 0fBF000000, %f470;
	fma.rn.f32 	%f514, %f513, 0fBF000000, %f505;
	fma.rn.f32 	%f548, %f547, 0fBF000000, %f539;
	fma.rn.f32 	%f583, %f582, 0fBF000000, %f574;
	fma.rn.f32 	%f617, %f616, 0fBF000000, %f608;
	fma.rn.f32 	%f652, %f651, 0fBF000000, %f643;
	fma.rn.f32 	%f686, %f685, 0fBF000000, %f677;
	fma.rn.f32 	%f721, %f720, 0fBF000000, %f712;
	fma.rn.f32 	%f755, %f754, 0fBF000000, %f746;
	mul.f32 	%f786, %f785, %f785;
	mul.f32 	%f820, %f819, %f819;
	mul.f32 	%f873, %f872, %f872;
	add.s64 	%rd32, %rd1, %rd31;
	add.s64 	%rd34, %rd1, %rd33;
	abs.f32 	%f915, %f1280;
	setp.gtu.f32 	%p157, %f915, 0f7F800000;
	@%p157 bra 	$L__BB0_58;
// %bb.57:
	mov.b32 	%r450, %f179;
	and.b32  	%r451, %r450, -2147483648;
	mov.b32 	%r452, %f1280;
	or.b32  	%r453, %r451, %r452;
	mov.b32 	%f1280, %r453;
$L__BB0_58:                             // %__nv_fmodf.exit
	mul.f32 	%f239, %f238, %f238;
	mul.f32 	%f273, %f272, %f272;
	mul.f32 	%f308, %f307, %f307;
	mul.f32 	%f342, %f341, %f341;
	mul.f32 	%f377, %f376, %f376;
	mul.f32 	%f411, %f410, %f410;
	mul.f32 	%f446, %f445, %f445;
	mul.f32 	%f480, %f479, %f479;
	mul.f32 	%f515, %f514, %f514;
	mul.f32 	%f549, %f548, %f548;
	mul.f32 	%f584, %f583, %f583;
	mul.f32 	%f618, %f617, %f617;
	mul.f32 	%f653, %f652, %f652;
	mul.f32 	%f687, %f686, %f686;
	mul.f32 	%f722, %f721, %f721;
	mul.f32 	%f756, %f755, %f755;
	fma.rn.f32 	%f787, %f786, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f788, %f786, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f821, %f820, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f822, %f820, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f874, %f873, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f875, %f873, 0f3E684E12, 0fBFAAD2E0;
	ld.global.u32 	%r128, [%rd32];
	ld.global.u32 	%r129, [%rd34];
	add.f32 	%f916, %f1280, %f1280;
	mov.b32 	%r466, %f916;
	and.b32  	%r467, %r466, -2147483648;
	or.b32  	%r468, %r467, 1056964608;
	mov.b32 	%f917, %r468;
	add.f32 	%f918, %f916, %f917;
	cvt.rzi.f32.f32 	%f919, %f918;
	abs.f32 	%f920, %f916;
	setp.gt.f32 	%p158, %f920, 0f4B000000;
	selp.f32 	%f921, %f916, %f919, %p158;
	cvt.rzi.f32.f32 	%f922, %f916;
	setp.lt.f32 	%p159, %f920, 0f3F000000;
	selp.f32 	%f923, %f922, %f921, %p159;
	fma.rn.f32 	%f924, %f923, 0fBF000000, %f1280;
	mul.f32 	%f925, %f924, %f924;
	fma.rn.f32 	%f926, %f925, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f927, %f925, 0f3E684E12, 0fBFAAD2E0;
	mul.lo.s32 	%r474, %r132, 2147483646;
	shl.b32 	%r475, %r131, 2;
	sub.s32 	%r476, %r474, %r475;
	mul.lo.s32 	%r477, %r476, %r24;
	shl.b32 	%r37, %r477, 1;
	mov.u64 	%rd35, 2;
	mov.u64 	%rd36, 6;
	{ // callseq 2, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd23;
	st.param.b32 	[param0+8], %r214;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd35;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd36;
	.param .b64 retval0;
	call.uni (retval0), 
	julia_power_by_squaring_17555, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64 	%rd37, [retval0+0];
	} // callseq 2
	cvt.rn.f32.s32 	%f88, %r37;
	cvt.rn.f32.s64 	%f948, %rd37;
	div.approx.f32 	%f89, %f88, %f948;
	abs.f32 	%f1304, %f89;
	setp.lt.f32 	%p165, %f1304, 0f40000000;
	@%p165 bra 	$L__BB0_142;
// %bb.59:
	setp.gtu.f32 	%p166, %f1304, 0f4B800000;
	@%p166 bra 	$L__BB0_138;
	bra.uni 	$L__BB0_60;
$L__BB0_138:
	mov.b32 	%r148, %f1304;
	and.b32  	%r478, %r148, 8388607;
	or.b32  	%r16273, %r478, 1065353216;
	mov.b32 	%f1303, %r16273;
	add.s32 	%r479, %r148, -1073741824;
	and.b32  	%r16274, %r479, -8388608;
	setp.eq.s32 	%p172, %r16274, 0;
	@%p172 bra 	$L__BB0_141;
// %bb.139:                             // %__nv_fmaf_rn.exit4.i.i.i1774.preheader
	mov.f32 	%f958, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f957,%f958;
	// end inline asm
$L__BB0_140:                            // %__nv_fmaf_rn.exit4.i.i.i1774
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r480, %r16274, 192937984;
	add.s32 	%r481, %r16273, %r480;
	mov.b32 	%f959, %r481;
	mul.f32 	%f960, %f957, %f959;
	sub.f32 	%f961, %f959, %f960;
	fma.rn.f32 	%f962, %f961, %f957, %f960;
	sub.f32 	%f963, %f959, %f962;
	fma.rz.f32 	%f964, %f963, %f957, %f962;
	cvt.rzi.f32.f32 	%f965, %f964;
	sub.f32 	%f1303, %f959, %f965;
	sub.s32 	%r16274, %r16274, %r480;
	mov.b32 	%r16273, %f1303;
	setp.ne.s32 	%p173, %r16274, 0;
	setp.ne.s32 	%p174, %r16273, 0;
	and.pred  	%p175, %p173, %p174;
	@%p175 bra 	$L__BB0_140;
$L__BB0_141:                            // %__internal_fmodf_slowpath_mod.exit.i.i1776
	setp.gt.u32 	%p176, %r148, 2139095039;
	selp.f32 	%f966, 0f7FFFFFFF, 0f4B800000, %p176;
	mul.f32 	%f967, %f1303, 0f34000000;
	mul.f32 	%f1304, %f966, %f967;
	bra.uni 	$L__BB0_142;
$L__BB0_60:                             // %__nv_fast_fdividef.exit.i.i.i1753
	div.approx.f32 	%f950, %f1304, %f221;
	cvt.rzi.f32.f32 	%f1302, %f950;
	fma.rn.f32 	%f182, %f1302, 0fC0000000, %f1304;
	mov.b32 	%r147, %f182;
	setp.lt.u32 	%p167, %r147, 1073741824;
	@%p167 bra 	$L__BB0_137;
// %bb.61:
	setp.lt.u32 	%p168, %r147, -2147483647;
	@%p168 bra 	$L__BB0_135;
// %bb.62:
	add.f32 	%f955, %f1302, 0fBF800000;
	setp.lt.f32 	%p171, %f182, 0fC0000000;
	add.f32 	%f956, %f955, 0fBF800000;
	selp.f32 	%f1302, %f956, %f955, %p171;
	bra.uni 	$L__BB0_137;
$L__BB0_135:
	add.f32 	%f1302, %f1302, 0f3F800000;
	setp.ltu.f32 	%p169, %f182, 0f40800000;
	@%p169 bra 	$L__BB0_137;
// %bb.136:                             // %__nv_fmaf_rn.exit.i.i.i1757
	add.f32 	%f951, %f1302, 0f3F800000;
	fma.rn.f32 	%f953, %f221, 0fC0400000, %f182;
	setp.ge.f32 	%p170, %f953, 0f00000000;
	add.f32 	%f954, %f951, 0f3F800000;
	selp.f32 	%f1302, %f954, %f951, %p170;
$L__BB0_137:                            // %__internal_fmodf_fastpath_quot.exit.i.i1760
	fma.rn.f32 	%f1304, %f1302, 0fC0000000, %f1304;
$L__BB0_142:                            // %__internal_fmodf_kernel.exit.i1779
	cvt.rzi.s32.f32 	%r247, %f237;
	fma.rn.f32 	%f240, %f239, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f241, %f239, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r254, %f271;
	fma.rn.f32 	%f274, %f273, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f275, %f273, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r265, %f306;
	fma.rn.f32 	%f309, %f308, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f310, %f308, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r272, %f340;
	fma.rn.f32 	%f343, %f342, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f344, %f342, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r283, %f375;
	fma.rn.f32 	%f378, %f377, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f379, %f377, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r290, %f409;
	fma.rn.f32 	%f412, %f411, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f413, %f411, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r301, %f444;
	fma.rn.f32 	%f447, %f446, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f448, %f446, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r308, %f478;
	fma.rn.f32 	%f481, %f480, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f482, %f480, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r319, %f513;
	fma.rn.f32 	%f516, %f515, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f517, %f515, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r326, %f547;
	fma.rn.f32 	%f550, %f549, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f551, %f549, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r337, %f582;
	fma.rn.f32 	%f585, %f584, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f586, %f584, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r344, %f616;
	fma.rn.f32 	%f619, %f618, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f620, %f618, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r355, %f651;
	fma.rn.f32 	%f654, %f653, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f655, %f653, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r362, %f685;
	fma.rn.f32 	%f688, %f687, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f689, %f687, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r373, %f720;
	fma.rn.f32 	%f723, %f722, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f724, %f722, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r380, %f754;
	fma.rn.f32 	%f757, %f756, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f758, %f756, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r404, %f784;
	fma.rn.f32 	%f789, %f787, %f786, 0fC0A55DF6;
	fma.rn.f32 	%f790, %f788, %f786, 0f4081E0CF;
	fma.rn.f32 	%f791, %f786, %f785, 0f00000000;
	cvt.rzi.s32.f32 	%r414, %f818;
	fma.rn.f32 	%f823, %f821, %f820, 0fC0A55DF6;
	fma.rn.f32 	%f824, %f822, %f820, 0f4081E0CF;
	fma.rn.f32 	%f825, %f820, %f819, 0f00000000;
	cvt.rzi.s32.f32 	%r437, %f871;
	fma.rn.f32 	%f876, %f874, %f873, 0fC0A55DF6;
	fma.rn.f32 	%f877, %f875, %f873, 0f4081E0CF;
	fma.rn.f32 	%f878, %f873, %f872, 0f00000000;
	cvt.rzi.s32.f32 	%r469, %f923;
	fma.rn.f32 	%f928, %f926, %f925, 0fC0A55DF6;
	fma.rn.f32 	%f929, %f927, %f925, 0f4081E0CF;
	fma.rn.f32 	%f930, %f925, %f924, 0f00000000;
	abs.f32 	%f968, %f1304;
	setp.gtu.f32 	%p177, %f968, 0f7F800000;
	@%p177 bra 	$L__BB0_144;
// %bb.143:
	mov.b32 	%r482, %f89;
	and.b32  	%r483, %r482, -2147483648;
	mov.b32 	%r484, %f1304;
	or.b32  	%r485, %r483, %r484;
	mov.b32 	%f1304, %r485;
$L__BB0_144:                            // %__nv_fmodf.exit1780
	add.s32 	%r248, %r247, 1;
	fma.rn.f32 	%f242, %f240, %f239, 0fC0A55DF6;
	fma.rn.f32 	%f243, %f241, %f239, 0f4081E0CF;
	fma.rn.f32 	%f244, %f239, %f238, 0f00000000;
	add.s32 	%r255, %r254, 1;
	fma.rn.f32 	%f276, %f274, %f273, 0fC0A55DF6;
	fma.rn.f32 	%f277, %f275, %f273, 0f4081E0CF;
	fma.rn.f32 	%f278, %f273, %f272, 0f00000000;
	add.s32 	%r266, %r265, 1;
	fma.rn.f32 	%f311, %f309, %f308, 0fC0A55DF6;
	fma.rn.f32 	%f312, %f310, %f308, 0f4081E0CF;
	fma.rn.f32 	%f313, %f308, %f307, 0f00000000;
	add.s32 	%r273, %r272, 1;
	fma.rn.f32 	%f345, %f343, %f342, 0fC0A55DF6;
	fma.rn.f32 	%f346, %f344, %f342, 0f4081E0CF;
	fma.rn.f32 	%f347, %f342, %f341, 0f00000000;
	add.s32 	%r284, %r283, 1;
	fma.rn.f32 	%f380, %f378, %f377, 0fC0A55DF6;
	fma.rn.f32 	%f381, %f379, %f377, 0f4081E0CF;
	fma.rn.f32 	%f382, %f377, %f376, 0f00000000;
	add.s32 	%r291, %r290, 1;
	fma.rn.f32 	%f414, %f412, %f411, 0fC0A55DF6;
	fma.rn.f32 	%f415, %f413, %f411, 0f4081E0CF;
	fma.rn.f32 	%f416, %f411, %f410, 0f00000000;
	add.s32 	%r302, %r301, 1;
	fma.rn.f32 	%f449, %f447, %f446, 0fC0A55DF6;
	fma.rn.f32 	%f450, %f448, %f446, 0f4081E0CF;
	fma.rn.f32 	%f451, %f446, %f445, 0f00000000;
	add.s32 	%r309, %r308, 1;
	fma.rn.f32 	%f483, %f481, %f480, 0fC0A55DF6;
	fma.rn.f32 	%f484, %f482, %f480, 0f4081E0CF;
	fma.rn.f32 	%f485, %f480, %f479, 0f00000000;
	add.s32 	%r320, %r319, 1;
	fma.rn.f32 	%f518, %f516, %f515, 0fC0A55DF6;
	fma.rn.f32 	%f519, %f517, %f515, 0f4081E0CF;
	fma.rn.f32 	%f520, %f515, %f514, 0f00000000;
	add.s32 	%r327, %r326, 1;
	fma.rn.f32 	%f552, %f550, %f549, 0fC0A55DF6;
	fma.rn.f32 	%f553, %f551, %f549, 0f4081E0CF;
	fma.rn.f32 	%f554, %f549, %f548, 0f00000000;
	add.s32 	%r338, %r337, 1;
	fma.rn.f32 	%f587, %f585, %f584, 0fC0A55DF6;
	fma.rn.f32 	%f588, %f586, %f584, 0f4081E0CF;
	fma.rn.f32 	%f589, %f584, %f583, 0f00000000;
	add.s32 	%r345, %r344, 1;
	fma.rn.f32 	%f621, %f619, %f618, 0fC0A55DF6;
	fma.rn.f32 	%f622, %f620, %f618, 0f4081E0CF;
	fma.rn.f32 	%f623, %f618, %f617, 0f00000000;
	add.s32 	%r356, %r355, 1;
	fma.rn.f32 	%f656, %f654, %f653, 0fC0A55DF6;
	fma.rn.f32 	%f657, %f655, %f653, 0f4081E0CF;
	fma.rn.f32 	%f658, %f653, %f652, 0f00000000;
	add.s32 	%r363, %r362, 1;
	fma.rn.f32 	%f690, %f688, %f687, 0fC0A55DF6;
	fma.rn.f32 	%f691, %f689, %f687, 0f4081E0CF;
	fma.rn.f32 	%f692, %f687, %f686, 0f00000000;
	add.s32 	%r374, %r373, 1;
	fma.rn.f32 	%f725, %f723, %f722, 0fC0A55DF6;
	fma.rn.f32 	%f726, %f724, %f722, 0f4081E0CF;
	fma.rn.f32 	%f727, %f722, %f721, 0f00000000;
	add.s32 	%r381, %r380, 1;
	fma.rn.f32 	%f759, %f757, %f756, 0fC0A55DF6;
	fma.rn.f32 	%f760, %f758, %f756, 0f4081E0CF;
	fma.rn.f32 	%f761, %f756, %f755, 0f00000000;
	fma.rn.f32 	%f792, %f790, %f786, 0fC09DE9E6;
	fma.rn.f32 	%f793, %f789, %f791, 0f00000000;
	and.b32  	%r405, %r404, 1;
	fma.rn.f32 	%f826, %f824, %f820, 0fC09DE9E6;
	fma.rn.f32 	%f827, %f823, %f825, 0f00000000;
	and.b32  	%r415, %r414, 1;
	fma.rn.f32 	%f879, %f877, %f873, 0fC09DE9E6;
	fma.rn.f32 	%f880, %f876, %f878, 0f00000000;
	and.b32  	%r438, %r437, 1;
	fma.rn.f32 	%f931, %f929, %f925, 0fC09DE9E6;
	fma.rn.f32 	%f932, %f928, %f930, 0f00000000;
	and.b32  	%r470, %r469, 1;
	add.f32 	%f969, %f1304, %f1304;
	mov.b32 	%r486, %f969;
	and.b32  	%r487, %r486, -2147483648;
	or.b32  	%r488, %r487, 1056964608;
	mov.b32 	%f970, %r488;
	add.f32 	%f971, %f969, %f970;
	cvt.rzi.f32.f32 	%f972, %f971;
	abs.f32 	%f973, %f969;
	setp.gt.f32 	%p178, %f973, 0f4B000000;
	selp.f32 	%f974, %f969, %f972, %p178;
	cvt.rzi.f32.f32 	%f975, %f969;
	setp.lt.f32 	%p179, %f973, 0f3F000000;
	selp.f32 	%f976, %f975, %f974, %p179;
	cvt.rzi.s32.f32 	%r489, %f976;
	fma.rn.f32 	%f977, %f976, 0fBF000000, %f1304;
	mul.f32 	%f978, %f977, %f977;
	fma.rn.f32 	%f979, %f978, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f980, %f978, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f981, %f979, %f978, 0fC0A55DF6;
	fma.rn.f32 	%f982, %f980, %f978, 0f4081E0CF;
	fma.rn.f32 	%f983, %f978, %f977, 0f00000000;
	shl.b32 	%r494, %r24, 4;
	sub.s32 	%r495, %r37, %r494;
	{ // callseq 3, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd23;
	st.param.b32 	[param0+8], %r214;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd35;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd36;
	.param .b64 retval0;
	call.uni (retval0), 
	julia_power_by_squaring_17555, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64 	%rd41, [retval0+0];
	} // callseq 3
	cvt.rn.f32.s32 	%f198, %r495;
	cvt.rn.f32.s64 	%f999, %rd41;
	div.approx.f32 	%f199, %f198, %f999;
	abs.f32 	%f1284, %f199;
	setp.lt.f32 	%p185, %f1284, 0f40000000;
	@%p185 bra 	$L__BB0_74;
// %bb.63:
	setp.gtu.f32 	%p186, %f1284, 0f4B800000;
	@%p186 bra 	$L__BB0_70;
	bra.uni 	$L__BB0_64;
$L__BB0_70:
	mov.b32 	%r39, %f1284;
	and.b32  	%r496, %r39, 8388607;
	or.b32  	%r16238, %r496, 1065353216;
	mov.b32 	%f1283, %r16238;
	add.s32 	%r497, %r39, -1073741824;
	and.b32  	%r16239, %r497, -8388608;
	setp.eq.s32 	%p192, %r16239, 0;
	@%p192 bra 	$L__BB0_73;
// %bb.71:                              // %__nv_fmaf_rn.exit4.i.i.i1619.preheader
	mov.f32 	%f1009, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1008,%f1009;
	// end inline asm
$L__BB0_72:                             // %__nv_fmaf_rn.exit4.i.i.i1619
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r498, %r16239, 192937984;
	add.s32 	%r499, %r16238, %r498;
	mov.b32 	%f1010, %r499;
	mul.f32 	%f1011, %f1008, %f1010;
	sub.f32 	%f1012, %f1010, %f1011;
	fma.rn.f32 	%f1013, %f1012, %f1008, %f1011;
	sub.f32 	%f1014, %f1010, %f1013;
	fma.rz.f32 	%f1015, %f1014, %f1008, %f1013;
	cvt.rzi.f32.f32 	%f1016, %f1015;
	sub.f32 	%f1283, %f1010, %f1016;
	sub.s32 	%r16239, %r16239, %r498;
	mov.b32 	%r16238, %f1283;
	setp.ne.s32 	%p193, %r16239, 0;
	setp.ne.s32 	%p194, %r16238, 0;
	and.pred  	%p195, %p193, %p194;
	@%p195 bra 	$L__BB0_72;
$L__BB0_73:                             // %__internal_fmodf_slowpath_mod.exit.i.i1621
	setp.gt.u32 	%p196, %r39, 2139095039;
	selp.f32 	%f1017, 0f7FFFFFFF, 0f4B800000, %p196;
	mul.f32 	%f1018, %f1283, 0f34000000;
	mul.f32 	%f1284, %f1017, %f1018;
	bra.uni 	$L__BB0_74;
$L__BB0_64:                             // %__nv_fast_fdividef.exit.i.i.i1598
	div.approx.f32 	%f1001, %f1284, %f221;
	cvt.rzi.f32.f32 	%f1282, %f1001;
	fma.rn.f32 	%f92, %f1282, 0fC0000000, %f1284;
	mov.b32 	%r38, %f92;
	setp.lt.u32 	%p187, %r38, 1073741824;
	@%p187 bra 	$L__BB0_69;
// %bb.65:
	setp.lt.u32 	%p188, %r38, -2147483647;
	@%p188 bra 	$L__BB0_67;
// %bb.66:
	add.f32 	%f1006, %f1282, 0fBF800000;
	setp.lt.f32 	%p191, %f92, 0fC0000000;
	add.f32 	%f1007, %f1006, 0fBF800000;
	selp.f32 	%f1282, %f1007, %f1006, %p191;
	bra.uni 	$L__BB0_69;
$L__BB0_67:
	add.f32 	%f1282, %f1282, 0f3F800000;
	setp.ltu.f32 	%p189, %f92, 0f40800000;
	@%p189 bra 	$L__BB0_69;
// %bb.68:                              // %__nv_fmaf_rn.exit.i.i.i1602
	add.f32 	%f1002, %f1282, 0f3F800000;
	fma.rn.f32 	%f1004, %f221, 0fC0400000, %f92;
	setp.ge.f32 	%p190, %f1004, 0f00000000;
	add.f32 	%f1005, %f1002, 0f3F800000;
	selp.f32 	%f1282, %f1005, %f1002, %p190;
$L__BB0_69:                             // %__internal_fmodf_fastpath_quot.exit.i.i1605
	fma.rn.f32 	%f1284, %f1282, 0fC0000000, %f1284;
$L__BB0_74:                             // %__internal_fmodf_kernel.exit.i1624
	fma.rn.f32 	%f245, %f243, %f239, 0fC09DE9E6;
	fma.rn.f32 	%f246, %f242, %f244, 0f00000000;
	and.b32  	%r249, %r248, 1;
	fma.rn.f32 	%f279, %f277, %f273, 0fC09DE9E6;
	fma.rn.f32 	%f280, %f276, %f278, 0f00000000;
	and.b32  	%r256, %r255, 1;
	fma.rn.f32 	%f314, %f312, %f308, 0fC09DE9E6;
	fma.rn.f32 	%f315, %f311, %f313, 0f00000000;
	and.b32  	%r267, %r266, 1;
	fma.rn.f32 	%f348, %f346, %f342, 0fC09DE9E6;
	fma.rn.f32 	%f349, %f345, %f347, 0f00000000;
	and.b32  	%r274, %r273, 1;
	fma.rn.f32 	%f383, %f381, %f377, 0fC09DE9E6;
	fma.rn.f32 	%f384, %f380, %f382, 0f00000000;
	and.b32  	%r285, %r284, 1;
	fma.rn.f32 	%f417, %f415, %f411, 0fC09DE9E6;
	fma.rn.f32 	%f418, %f414, %f416, 0f00000000;
	and.b32  	%r292, %r291, 1;
	fma.rn.f32 	%f452, %f450, %f446, 0fC09DE9E6;
	fma.rn.f32 	%f453, %f449, %f451, 0f00000000;
	and.b32  	%r303, %r302, 1;
	fma.rn.f32 	%f486, %f484, %f480, 0fC09DE9E6;
	fma.rn.f32 	%f487, %f483, %f485, 0f00000000;
	and.b32  	%r310, %r309, 1;
	fma.rn.f32 	%f521, %f519, %f515, 0fC09DE9E6;
	fma.rn.f32 	%f522, %f518, %f520, 0f00000000;
	and.b32  	%r321, %r320, 1;
	fma.rn.f32 	%f555, %f553, %f549, 0fC09DE9E6;
	fma.rn.f32 	%f556, %f552, %f554, 0f00000000;
	and.b32  	%r328, %r327, 1;
	fma.rn.f32 	%f590, %f588, %f584, 0fC09DE9E6;
	fma.rn.f32 	%f591, %f587, %f589, 0f00000000;
	and.b32  	%r339, %r338, 1;
	fma.rn.f32 	%f624, %f622, %f618, 0fC09DE9E6;
	fma.rn.f32 	%f625, %f621, %f623, 0f00000000;
	and.b32  	%r346, %r345, 1;
	fma.rn.f32 	%f659, %f657, %f653, 0fC09DE9E6;
	fma.rn.f32 	%f660, %f656, %f658, 0f00000000;
	and.b32  	%r357, %r356, 1;
	fma.rn.f32 	%f693, %f691, %f687, 0fC09DE9E6;
	fma.rn.f32 	%f694, %f690, %f692, 0f00000000;
	and.b32  	%r364, %r363, 1;
	fma.rn.f32 	%f728, %f726, %f722, 0fC09DE9E6;
	fma.rn.f32 	%f729, %f725, %f727, 0f00000000;
	and.b32  	%r375, %r374, 1;
	fma.rn.f32 	%f762, %f760, %f756, 0fC09DE9E6;
	fma.rn.f32 	%f763, %f759, %f761, 0f00000000;
	and.b32  	%r382, %r381, 1;
	fma.rn.f32 	%f794, %f792, %f786, 0f3F800000;
	fma.rn.f32 	%f795, %f785, 0f40490FDB, %f793;
	setp.eq.b32 	%p113, %r405, 1;
	fma.rn.f32 	%f828, %f826, %f820, 0f3F800000;
	fma.rn.f32 	%f829, %f819, 0f40490FDB, %f827;
	setp.eq.b32 	%p120, %r415, 1;
	fma.rn.f32 	%f881, %f879, %f873, 0f3F800000;
	fma.rn.f32 	%f882, %f872, 0f40490FDB, %f880;
	setp.eq.b32 	%p140, %r438, 1;
	fma.rn.f32 	%f933, %f931, %f925, 0f3F800000;
	fma.rn.f32 	%f934, %f924, 0f40490FDB, %f932;
	setp.eq.b32 	%p160, %r470, 1;
	fma.rn.f32 	%f984, %f982, %f978, 0fC09DE9E6;
	fma.rn.f32 	%f985, %f981, %f983, 0f00000000;
	and.b32  	%r490, %r489, 1;
	abs.f32 	%f1019, %f1284;
	setp.gtu.f32 	%p197, %f1019, 0f7F800000;
	@%p197 bra 	$L__BB0_76;
// %bb.75:
	mov.b32 	%r500, %f199;
	and.b32  	%r501, %r500, -2147483648;
	mov.b32 	%r502, %f1284;
	or.b32  	%r503, %r501, %r502;
	mov.b32 	%f1284, %r503;
$L__BB0_76:                             // %__nv_fmodf.exit1625
	fma.rn.f32 	%f247, %f245, %f239, 0f3F800000;
	fma.rn.f32 	%f248, %f238, 0f40490FDB, %f246;
	setp.eq.b32 	%p18, %r249, 1;
	fma.rn.f32 	%f281, %f279, %f273, 0f3F800000;
	fma.rn.f32 	%f282, %f272, 0f40490FDB, %f280;
	setp.eq.b32 	%p24, %r256, 1;
	fma.rn.f32 	%f316, %f314, %f308, 0f3F800000;
	fma.rn.f32 	%f317, %f307, 0f40490FDB, %f315;
	setp.eq.b32 	%p30, %r267, 1;
	fma.rn.f32 	%f350, %f348, %f342, 0f3F800000;
	fma.rn.f32 	%f351, %f341, 0f40490FDB, %f349;
	setp.eq.b32 	%p36, %r274, 1;
	fma.rn.f32 	%f385, %f383, %f377, 0f3F800000;
	fma.rn.f32 	%f386, %f376, 0f40490FDB, %f384;
	setp.eq.b32 	%p42, %r285, 1;
	fma.rn.f32 	%f419, %f417, %f411, 0f3F800000;
	fma.rn.f32 	%f420, %f410, 0f40490FDB, %f418;
	setp.eq.b32 	%p48, %r292, 1;
	fma.rn.f32 	%f454, %f452, %f446, 0f3F800000;
	fma.rn.f32 	%f455, %f445, 0f40490FDB, %f453;
	setp.eq.b32 	%p54, %r303, 1;
	fma.rn.f32 	%f488, %f486, %f480, 0f3F800000;
	fma.rn.f32 	%f489, %f479, 0f40490FDB, %f487;
	setp.eq.b32 	%p60, %r310, 1;
	fma.rn.f32 	%f523, %f521, %f515, 0f3F800000;
	fma.rn.f32 	%f524, %f514, 0f40490FDB, %f522;
	setp.eq.b32 	%p66, %r321, 1;
	fma.rn.f32 	%f557, %f555, %f549, 0f3F800000;
	fma.rn.f32 	%f558, %f548, 0f40490FDB, %f556;
	setp.eq.b32 	%p72, %r328, 1;
	fma.rn.f32 	%f592, %f590, %f584, 0f3F800000;
	fma.rn.f32 	%f593, %f583, 0f40490FDB, %f591;
	setp.eq.b32 	%p78, %r339, 1;
	fma.rn.f32 	%f626, %f624, %f618, 0f3F800000;
	fma.rn.f32 	%f627, %f617, 0f40490FDB, %f625;
	setp.eq.b32 	%p84, %r346, 1;
	fma.rn.f32 	%f661, %f659, %f653, 0f3F800000;
	fma.rn.f32 	%f662, %f652, 0f40490FDB, %f660;
	setp.eq.b32 	%p90, %r357, 1;
	fma.rn.f32 	%f695, %f693, %f687, 0f3F800000;
	fma.rn.f32 	%f696, %f686, 0f40490FDB, %f694;
	setp.eq.b32 	%p96, %r364, 1;
	fma.rn.f32 	%f730, %f728, %f722, 0f3F800000;
	fma.rn.f32 	%f731, %f721, 0f40490FDB, %f729;
	setp.eq.b32 	%p102, %r375, 1;
	fma.rn.f32 	%f764, %f762, %f756, 0f3F800000;
	fma.rn.f32 	%f765, %f755, 0f40490FDB, %f763;
	setp.eq.b32 	%p108, %r382, 1;
	selp.f32 	%f796, %f794, %f795, %p113;
	and.b32  	%r406, %r404, 2;
	selp.f32 	%f830, %f828, %f829, %p120;
	and.b32  	%r416, %r414, 2;
	selp.f32 	%f883, %f881, %f882, %p140;
	and.b32  	%r439, %r437, 2;
	selp.f32 	%f935, %f933, %f934, %p160;
	and.b32  	%r471, %r469, 2;
	fma.rn.f32 	%f986, %f984, %f978, 0f3F800000;
	fma.rn.f32 	%f987, %f977, 0f40490FDB, %f985;
	setp.eq.b32 	%p180, %r490, 1;
	add.f32 	%f1020, %f1284, %f1284;
	mov.b32 	%r510, %f1020;
	and.b32  	%r511, %r510, -2147483648;
	or.b32  	%r512, %r511, 1056964608;
	mov.b32 	%f1021, %r512;
	add.f32 	%f1022, %f1020, %f1021;
	cvt.rzi.f32.f32 	%f1023, %f1022;
	abs.f32 	%f1024, %f1020;
	setp.gt.f32 	%p198, %f1024, 0f4B000000;
	selp.f32 	%f1025, %f1020, %f1023, %p198;
	cvt.rzi.f32.f32 	%f1026, %f1020;
	setp.lt.f32 	%p199, %f1024, 0f3F000000;
	selp.f32 	%f1027, %f1026, %f1025, %p199;
	cvt.rzi.s32.f32 	%r513, %f1027;
	fma.rn.f32 	%f1028, %f1027, 0fBF000000, %f1284;
	mul.f32 	%f1029, %f1028, %f1028;
	fma.rn.f32 	%f1030, %f1029, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1031, %f1029, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1032, %f1030, %f1029, 0fC0A55DF6;
	fma.rn.f32 	%f1033, %f1031, %f1029, 0f4081E0CF;
	fma.rn.f32 	%f1034, %f1029, %f1028, 0f00000000;
	fma.rn.f32 	%f1035, %f1033, %f1029, 0fC09DE9E6;
	fma.rn.f32 	%f1036, %f1032, %f1034, 0f00000000;
	fma.rn.f32 	%f1037, %f1035, %f1029, 0f3F800000;
	fma.rn.f32 	%f1038, %f1028, 0f40490FDB, %f1036;
	and.b32  	%r514, %r513, 1;
	setp.eq.b32 	%p200, %r514, 1;
	div.approx.f32 	%f106, %f88, %f843;
	abs.f32 	%f1308, %f106;
	setp.lt.f32 	%p205, %f1308, 0f40000000;
	@%p205 bra 	$L__BB0_152;
// %bb.77:
	setp.gtu.f32 	%p206, %f1308, 0f4B800000;
	@%p206 bra 	$L__BB0_148;
	bra.uni 	$L__BB0_78;
$L__BB0_148:
	mov.b32 	%r156, %f1308;
	and.b32  	%r518, %r156, 8388607;
	or.b32  	%r16275, %r518, 1065353216;
	mov.b32 	%f1307, %r16275;
	add.s32 	%r519, %r156, -1073741824;
	and.b32  	%r16276, %r519, -8388608;
	setp.eq.s32 	%p212, %r16276, 0;
	@%p212 bra 	$L__BB0_151;
// %bb.149:                             // %__nv_fmaf_rn.exit4.i.i.i1805.preheader
	mov.f32 	%f1062, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1061,%f1062;
	// end inline asm
$L__BB0_150:                            // %__nv_fmaf_rn.exit4.i.i.i1805
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r520, %r16276, 192937984;
	add.s32 	%r521, %r16275, %r520;
	mov.b32 	%f1063, %r521;
	mul.f32 	%f1064, %f1061, %f1063;
	sub.f32 	%f1065, %f1063, %f1064;
	fma.rn.f32 	%f1066, %f1065, %f1061, %f1064;
	sub.f32 	%f1067, %f1063, %f1066;
	fma.rz.f32 	%f1068, %f1067, %f1061, %f1066;
	cvt.rzi.f32.f32 	%f1069, %f1068;
	sub.f32 	%f1307, %f1063, %f1069;
	sub.s32 	%r16276, %r16276, %r520;
	mov.b32 	%r16275, %f1307;
	setp.ne.s32 	%p213, %r16276, 0;
	setp.ne.s32 	%p214, %r16275, 0;
	and.pred  	%p215, %p213, %p214;
	@%p215 bra 	$L__BB0_150;
$L__BB0_151:                            // %__internal_fmodf_slowpath_mod.exit.i.i1807
	setp.gt.u32 	%p216, %r156, 2139095039;
	selp.f32 	%f1070, 0f7FFFFFFF, 0f4B800000, %p216;
	mul.f32 	%f1071, %f1307, 0f34000000;
	mul.f32 	%f1308, %f1070, %f1071;
	bra.uni 	$L__BB0_152;
$L__BB0_78:                             // %__nv_fast_fdividef.exit.i.i.i1784
	div.approx.f32 	%f1054, %f1308, %f221;
	cvt.rzi.f32.f32 	%f1306, %f1054;
	fma.rn.f32 	%f202, %f1306, 0fC0000000, %f1308;
	mov.b32 	%r155, %f202;
	setp.lt.u32 	%p207, %r155, 1073741824;
	@%p207 bra 	$L__BB0_147;
// %bb.79:
	setp.lt.u32 	%p208, %r155, -2147483647;
	@%p208 bra 	$L__BB0_145;
// %bb.80:
	add.f32 	%f1059, %f1306, 0fBF800000;
	setp.lt.f32 	%p211, %f202, 0fC0000000;
	add.f32 	%f1060, %f1059, 0fBF800000;
	selp.f32 	%f1306, %f1060, %f1059, %p211;
	bra.uni 	$L__BB0_147;
$L__BB0_145:
	add.f32 	%f1306, %f1306, 0f3F800000;
	setp.ltu.f32 	%p209, %f202, 0f40800000;
	@%p209 bra 	$L__BB0_147;
// %bb.146:                             // %__nv_fmaf_rn.exit.i.i.i1788
	add.f32 	%f1055, %f1306, 0f3F800000;
	fma.rn.f32 	%f1057, %f221, 0fC0400000, %f202;
	setp.ge.f32 	%p210, %f1057, 0f00000000;
	add.f32 	%f1058, %f1055, 0f3F800000;
	selp.f32 	%f1306, %f1058, %f1055, %p210;
$L__BB0_147:                            // %__internal_fmodf_fastpath_quot.exit.i.i1791
	fma.rn.f32 	%f1308, %f1306, 0fC0000000, %f1308;
$L__BB0_152:                            // %__internal_fmodf_kernel.exit.i1810
	selp.f32 	%f249, %f247, %f248, %p18;
	and.b32  	%r250, %r248, 2;
	mov.f32 	%f250, 0f00000000;
	selp.f32 	%f283, %f281, %f282, %p24;
	and.b32  	%r257, %r255, 2;
	selp.f32 	%f318, %f316, %f317, %p30;
	and.b32  	%r268, %r266, 2;
	selp.f32 	%f352, %f350, %f351, %p36;
	and.b32  	%r275, %r273, 2;
	selp.f32 	%f387, %f385, %f386, %p42;
	and.b32  	%r286, %r284, 2;
	selp.f32 	%f421, %f419, %f420, %p48;
	and.b32  	%r293, %r291, 2;
	selp.f32 	%f456, %f454, %f455, %p54;
	and.b32  	%r304, %r302, 2;
	selp.f32 	%f490, %f488, %f489, %p60;
	and.b32  	%r311, %r309, 2;
	selp.f32 	%f525, %f523, %f524, %p66;
	and.b32  	%r322, %r320, 2;
	selp.f32 	%f559, %f557, %f558, %p72;
	and.b32  	%r329, %r327, 2;
	selp.f32 	%f594, %f592, %f593, %p78;
	and.b32  	%r340, %r338, 2;
	selp.f32 	%f628, %f626, %f627, %p84;
	and.b32  	%r347, %r345, 2;
	selp.f32 	%f663, %f661, %f662, %p90;
	and.b32  	%r358, %r356, 2;
	selp.f32 	%f697, %f695, %f696, %p96;
	and.b32  	%r365, %r363, 2;
	selp.f32 	%f732, %f730, %f731, %p102;
	and.b32  	%r376, %r374, 2;
	selp.f32 	%f766, %f764, %f765, %p108;
	and.b32  	%r383, %r381, 2;
	setp.eq.s32 	%p114, %r406, 0;
	neg.f32 	%f798, %f796;
	add.s32 	%r407, %r404, 1;
	cvt.rzi.f32.f32 	%f803, %f776;
	setp.eq.s32 	%p121, %r416, 0;
	neg.f32 	%f832, %f830;
	add.s32 	%r417, %r414, 1;
	cvt.rzi.f32.f32 	%f836, %f810;
	setp.eq.s32 	%p141, %r439, 0;
	neg.f32 	%f885, %f883;
	add.s32 	%r440, %r437, 1;
	cvt.rzi.f32.f32 	%f890, %f1300;
	setp.eq.s32 	%p161, %r471, 0;
	neg.f32 	%f937, %f935;
	add.s32 	%r472, %r469, 1;
	cvt.rzi.f32.f32 	%f942, %f1280;
	selp.f32 	%f988, %f986, %f987, %p180;
	and.b32  	%r491, %r489, 2;
	selp.f32 	%f1039, %f1037, %f1038, %p200;
	and.b32  	%r515, %r513, 2;
	abs.f32 	%f1072, %f1308;
	setp.gtu.f32 	%p217, %f1072, 0f7F800000;
	@%p217 bra 	$L__BB0_154;
// %bb.153:
	mov.b32 	%r522, %f106;
	and.b32  	%r523, %r522, -2147483648;
	mov.b32 	%r524, %f1308;
	or.b32  	%r525, %r523, %r524;
	mov.b32 	%f1308, %r525;
$L__BB0_154:                            // %__nv_fmodf.exit1811
	setp.eq.s32 	%p19, %r250, 0;
	sub.f32 	%f251, %f250, %f249;
	setp.eq.s32 	%p25, %r257, 0;
	sub.f32 	%f285, %f250, %f283;
	setp.eq.s32 	%p31, %r268, 0;
	sub.f32 	%f320, %f250, %f318;
	setp.eq.s32 	%p37, %r275, 0;
	sub.f32 	%f354, %f250, %f352;
	setp.eq.s32 	%p43, %r286, 0;
	sub.f32 	%f389, %f250, %f387;
	setp.eq.s32 	%p49, %r293, 0;
	sub.f32 	%f423, %f250, %f421;
	setp.eq.s32 	%p55, %r304, 0;
	sub.f32 	%f458, %f250, %f456;
	setp.eq.s32 	%p61, %r311, 0;
	sub.f32 	%f492, %f250, %f490;
	setp.eq.s32 	%p67, %r322, 0;
	sub.f32 	%f527, %f250, %f525;
	setp.eq.s32 	%p73, %r329, 0;
	sub.f32 	%f561, %f250, %f559;
	setp.eq.s32 	%p79, %r340, 0;
	sub.f32 	%f596, %f250, %f594;
	setp.eq.s32 	%p85, %r347, 0;
	sub.f32 	%f630, %f250, %f628;
	setp.eq.s32 	%p91, %r358, 0;
	sub.f32 	%f665, %f250, %f663;
	setp.eq.s32 	%p97, %r365, 0;
	sub.f32 	%f699, %f250, %f697;
	setp.eq.s32 	%p103, %r376, 0;
	sub.f32 	%f734, %f250, %f732;
	setp.eq.s32 	%p109, %r383, 0;
	sub.f32 	%f768, %f250, %f766;
	selp.f32 	%f797, %f795, %f794, %p113;
	selp.f32 	%f799, %f796, %f798, %p114;
	and.b32  	%r408, %r407, 2;
	setp.eq.f32 	%p116, %f803, %f776;
	mul.f32 	%f804, %f776, 0f00000000;
	selp.f32 	%f831, %f829, %f828, %p120;
	selp.f32 	%f833, %f830, %f832, %p121;
	and.b32  	%r418, %r417, 2;
	setp.eq.f32 	%p123, %f836, %f810;
	mul.f32 	%f837, %f810, 0f00000000;
	selp.f32 	%f884, %f882, %f881, %p140;
	selp.f32 	%f886, %f883, %f885, %p141;
	and.b32  	%r441, %r440, 2;
	setp.eq.f32 	%p143, %f890, %f1300;
	mul.f32 	%f891, %f1300, 0f00000000;
	selp.f32 	%f936, %f934, %f933, %p160;
	selp.f32 	%f938, %f935, %f937, %p161;
	and.b32  	%r473, %r472, 2;
	setp.eq.f32 	%p163, %f942, %f1280;
	mul.f32 	%f943, %f1280, 0f00000000;
	setp.eq.s32 	%p181, %r491, 0;
	neg.f32 	%f990, %f988;
	add.s32 	%r492, %r489, 1;
	cvt.rzi.f32.f32 	%f995, %f1304;
	setp.eq.s32 	%p201, %r515, 0;
	neg.f32 	%f1041, %f1039;
	add.s32 	%r516, %r513, 1;
	cvt.rzi.f32.f32 	%f1046, %f1284;
	add.f32 	%f1073, %f1308, %f1308;
	mov.b32 	%r526, %f1073;
	and.b32  	%r527, %r526, -2147483648;
	or.b32  	%r528, %r527, 1056964608;
	mov.b32 	%f1074, %r528;
	add.f32 	%f1075, %f1073, %f1074;
	cvt.rzi.f32.f32 	%f1076, %f1075;
	abs.f32 	%f1077, %f1073;
	setp.gt.f32 	%p218, %f1077, 0f4B000000;
	selp.f32 	%f1078, %f1073, %f1076, %p218;
	cvt.rzi.f32.f32 	%f1079, %f1073;
	setp.lt.f32 	%p219, %f1077, 0f3F000000;
	selp.f32 	%f1080, %f1079, %f1078, %p219;
	cvt.rzi.s32.f32 	%r529, %f1080;
	fma.rn.f32 	%f1081, %f1080, 0fBF000000, %f1308;
	mul.f32 	%f1082, %f1081, %f1081;
	fma.rn.f32 	%f1083, %f1082, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1084, %f1082, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1085, %f1083, %f1082, 0fC0A55DF6;
	fma.rn.f32 	%f1086, %f1084, %f1082, 0f4081E0CF;
	fma.rn.f32 	%f1087, %f1082, %f1081, 0f00000000;
	fma.rn.f32 	%f1088, %f1086, %f1082, 0fC09DE9E6;
	fma.rn.f32 	%f1089, %f1085, %f1087, 0f00000000;
	fma.rn.f32 	%f1090, %f1088, %f1082, 0f3F800000;
	fma.rn.f32 	%f1091, %f1081, 0f40490FDB, %f1089;
	and.b32  	%r530, %r529, 1;
	setp.eq.b32 	%p220, %r530, 1;
	selp.f32 	%f1092, %f1090, %f1091, %p220;
	selp.f32 	%f1093, %f1091, %f1090, %p220;
	and.b32  	%r531, %r529, 2;
	setp.eq.s32 	%p221, %r531, 0;
	neg.f32 	%f1094, %f1092;
	selp.f32 	%f1095, %f1092, %f1094, %p221;
	add.s32 	%r532, %r529, 1;
	and.b32  	%r533, %r532, 2;
	cvt.rzi.f32.f32 	%f1099, %f1308;
	setp.eq.f32 	%p223, %f1099, %f1308;
	mul.f32 	%f1100, %f1308, 0f00000000;
	div.approx.f32 	%f218, %f198, %f843;
	abs.f32 	%f1288, %f218;
	setp.lt.f32 	%p225, %f1288, 0f40000000;
	@%p225 bra 	$L__BB0_92;
// %bb.81:
	setp.gtu.f32 	%p226, %f1288, 0f4B800000;
	@%p226 bra 	$L__BB0_88;
	bra.uni 	$L__BB0_82;
$L__BB0_88:
	mov.b32 	%r49, %f1288;
	and.b32  	%r534, %r49, 8388607;
	or.b32  	%r16240, %r534, 1065353216;
	mov.b32 	%f1287, %r16240;
	add.s32 	%r535, %r49, -1073741824;
	and.b32  	%r16241, %r535, -8388608;
	setp.eq.s32 	%p232, %r16241, 0;
	@%p232 bra 	$L__BB0_91;
// %bb.89:                              // %__nv_fmaf_rn.exit4.i.i.i1650.preheader
	mov.f32 	%f1113, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1112,%f1113;
	// end inline asm
$L__BB0_90:                             // %__nv_fmaf_rn.exit4.i.i.i1650
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r536, %r16241, 192937984;
	add.s32 	%r537, %r16240, %r536;
	mov.b32 	%f1114, %r537;
	mul.f32 	%f1115, %f1112, %f1114;
	sub.f32 	%f1116, %f1114, %f1115;
	fma.rn.f32 	%f1117, %f1116, %f1112, %f1115;
	sub.f32 	%f1118, %f1114, %f1117;
	fma.rz.f32 	%f1119, %f1118, %f1112, %f1117;
	cvt.rzi.f32.f32 	%f1120, %f1119;
	sub.f32 	%f1287, %f1114, %f1120;
	sub.s32 	%r16241, %r16241, %r536;
	mov.b32 	%r16240, %f1287;
	setp.ne.s32 	%p233, %r16241, 0;
	setp.ne.s32 	%p234, %r16240, 0;
	and.pred  	%p235, %p233, %p234;
	@%p235 bra 	$L__BB0_90;
$L__BB0_91:                             // %__internal_fmodf_slowpath_mod.exit.i.i1652
	setp.gt.u32 	%p236, %r49, 2139095039;
	selp.f32 	%f1121, 0f7FFFFFFF, 0f4B800000, %p236;
	mul.f32 	%f1122, %f1287, 0f34000000;
	mul.f32 	%f1288, %f1121, %f1122;
	bra.uni 	$L__BB0_92;
$L__BB0_82:                             // %__nv_fast_fdividef.exit.i.i.i1629
	div.approx.f32 	%f1105, %f1288, %f221;
	cvt.rzi.f32.f32 	%f1286, %f1105;
	fma.rn.f32 	%f109, %f1286, 0fC0000000, %f1288;
	mov.b32 	%r48, %f109;
	setp.lt.u32 	%p227, %r48, 1073741824;
	@%p227 bra 	$L__BB0_87;
// %bb.83:
	setp.lt.u32 	%p228, %r48, -2147483647;
	@%p228 bra 	$L__BB0_85;
// %bb.84:
	add.f32 	%f1110, %f1286, 0fBF800000;
	setp.lt.f32 	%p231, %f109, 0fC0000000;
	add.f32 	%f1111, %f1110, 0fBF800000;
	selp.f32 	%f1286, %f1111, %f1110, %p231;
	bra.uni 	$L__BB0_87;
$L__BB0_85:
	add.f32 	%f1286, %f1286, 0f3F800000;
	setp.ltu.f32 	%p229, %f109, 0f40800000;
	@%p229 bra 	$L__BB0_87;
// %bb.86:                              // %__nv_fmaf_rn.exit.i.i.i1633
	add.f32 	%f1106, %f1286, 0f3F800000;
	fma.rn.f32 	%f1108, %f221, 0fC0400000, %f109;
	setp.ge.f32 	%p230, %f1108, 0f00000000;
	add.f32 	%f1109, %f1106, 0f3F800000;
	selp.f32 	%f1286, %f1109, %f1106, %p230;
$L__BB0_87:                             // %__internal_fmodf_fastpath_quot.exit.i.i1636
	fma.rn.f32 	%f1288, %f1286, 0fC0000000, %f1288;
$L__BB0_92:                             // %__internal_fmodf_kernel.exit.i1655
	selp.f32 	%f252, %f249, %f251, %p19;
	selp.f32 	%f286, %f283, %f285, %p25;
	selp.f32 	%f321, %f318, %f320, %p31;
	selp.f32 	%f355, %f352, %f354, %p37;
	selp.f32 	%f390, %f387, %f389, %p43;
	selp.f32 	%f424, %f421, %f423, %p49;
	selp.f32 	%f459, %f456, %f458, %p55;
	selp.f32 	%f493, %f490, %f492, %p61;
	selp.f32 	%f528, %f525, %f527, %p67;
	selp.f32 	%f562, %f559, %f561, %p73;
	selp.f32 	%f597, %f594, %f596, %p79;
	selp.f32 	%f631, %f628, %f630, %p85;
	selp.f32 	%f666, %f663, %f665, %p91;
	selp.f32 	%f700, %f697, %f699, %p97;
	selp.f32 	%f735, %f732, %f734, %p103;
	selp.f32 	%f769, %f766, %f768, %p109;
	setp.eq.s32 	%p115, %r408, 0;
	sub.f32 	%f801, %f250, %f797;
	selp.f32 	%f805, %f804, %f799, %p116;
	abs.f32 	%f806, %f776;
	setp.eq.s32 	%p122, %r418, 0;
	sub.f32 	%f834, %f250, %f831;
	selp.f32 	%f838, %f837, %f833, %p123;
	abs.f32 	%f839, %f810;
	setp.eq.s32 	%p142, %r441, 0;
	sub.f32 	%f888, %f250, %f884;
	selp.f32 	%f177, %f891, %f886, %p143;
	abs.f32 	%f892, %f1300;
	setp.eq.s32 	%p162, %r473, 0;
	sub.f32 	%f940, %f250, %f936;
	selp.f32 	%f944, %f943, %f938, %p163;
	abs.f32 	%f945, %f1280;
	selp.f32 	%f989, %f987, %f986, %p180;
	selp.f32 	%f991, %f988, %f990, %p181;
	and.b32  	%r493, %r492, 2;
	setp.eq.f32 	%p183, %f995, %f1304;
	mul.f32 	%f996, %f1304, 0f00000000;
	selp.f32 	%f1040, %f1038, %f1037, %p200;
	selp.f32 	%f1042, %f1039, %f1041, %p201;
	and.b32  	%r517, %r516, 2;
	setp.eq.f32 	%p203, %f1046, %f1284;
	mul.f32 	%f1047, %f1284, 0f00000000;
	setp.eq.s32 	%p222, %r533, 0;
	sub.f32 	%f1097, %f250, %f1093;
	selp.f32 	%f216, %f1100, %f1095, %p223;
	abs.f32 	%f1101, %f1308;
	and.b32  	%r126, %r1, 16;
	abs.f32 	%f1123, %f1288;
	setp.gtu.f32 	%p237, %f1123, 0f7F800000;
	@%p237 bra 	$L__BB0_94;
// %bb.93:
	mov.b32 	%r538, %f218;
	and.b32  	%r539, %r538, -2147483648;
	mov.b32 	%r540, %f1288;
	or.b32  	%r541, %r539, %r540;
	mov.b32 	%f1288, %r541;
$L__BB0_94:                             // %__nv_fmodf.exit1656
	mul.f32 	%f160, %f252, %f252;
	mul.f32 	%f4, %f286, %f286;
	mul.f32 	%f8, %f321, %f321;
	mul.f32 	%f13, %f355, %f355;
	mul.f32 	%f17, %f390, %f390;
	mul.f32 	%f22, %f424, %f424;
	mul.f32 	%f26, %f459, %f459;
	mul.f32 	%f31, %f493, %f493;
	mul.f32 	%f35, %f528, %f528;
	mul.f32 	%f40, %f562, %f562;
	mul.f32 	%f44, %f597, %f597;
	mul.f32 	%f49, %f631, %f631;
	mul.f32 	%f53, %f666, %f666;
	mul.f32 	%f58, %f700, %f700;
	mul.f32 	%f62, %f735, %f735;
	mul.f32 	%f67, %f769, %f769;
	selp.f32 	%f802, %f797, %f801, %p115;
	setp.gt.f32 	%p117, %f806, 0f4B800000;
	add.f32 	%f807, %f805, 0f3F800000;
	selp.f32 	%f835, %f831, %f834, %p122;
	setp.gt.f32 	%p124, %f839, 0f4B800000;
	add.f32 	%f840, %f838, 0f3F800000;
	selp.f32 	%f889, %f884, %f888, %p142;
	setp.gt.f32 	%p144, %f892, 0f4B800000;
	add.f32 	%f893, %f177, 0f3F800000;
	selp.f32 	%f941, %f936, %f940, %p162;
	setp.gt.f32 	%p164, %f945, 0f4B800000;
	add.f32 	%f946, %f944, 0f3F800000;
	setp.eq.s32 	%p182, %r493, 0;
	sub.f32 	%f993, %f250, %f989;
	selp.f32 	%f196, %f996, %f991, %p183;
	abs.f32 	%f997, %f1304;
	setp.eq.s32 	%p202, %r517, 0;
	sub.f32 	%f1044, %f250, %f1040;
	selp.f32 	%f1048, %f1047, %f1042, %p203;
	abs.f32 	%f1049, %f1284;
	selp.f32 	%f1098, %f1093, %f1097, %p222;
	setp.gt.f32 	%p224, %f1101, 0f4B800000;
	add.f32 	%f1102, %f216, 0f3F800000;
	add.f32 	%f1124, %f1288, %f1288;
	mov.b32 	%r554, %f1124;
	and.b32  	%r555, %r554, -2147483648;
	or.b32  	%r556, %r555, 1056964608;
	mov.b32 	%f1125, %r556;
	add.f32 	%f1126, %f1124, %f1125;
	cvt.rzi.f32.f32 	%f1127, %f1126;
	abs.f32 	%f1128, %f1124;
	setp.gt.f32 	%p238, %f1128, 0f4B000000;
	selp.f32 	%f1129, %f1124, %f1127, %p238;
	cvt.rzi.f32.f32 	%f1130, %f1124;
	setp.lt.f32 	%p239, %f1128, 0f3F000000;
	selp.f32 	%f1131, %f1130, %f1129, %p239;
	cvt.rzi.s32.f32 	%r557, %f1131;
	fma.rn.f32 	%f1132, %f1131, 0fBF000000, %f1288;
	mul.f32 	%f1133, %f1132, %f1132;
	fma.rn.f32 	%f1134, %f1133, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1135, %f1133, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1136, %f1134, %f1133, 0fC0A55DF6;
	fma.rn.f32 	%f1137, %f1135, %f1133, 0f4081E0CF;
	fma.rn.f32 	%f1138, %f1133, %f1132, 0f00000000;
	fma.rn.f32 	%f1139, %f1137, %f1133, 0fC09DE9E6;
	fma.rn.f32 	%f1140, %f1136, %f1138, 0f00000000;
	fma.rn.f32 	%f1141, %f1139, %f1133, 0f3F800000;
	fma.rn.f32 	%f1142, %f1132, 0f40490FDB, %f1140;
	and.b32  	%r558, %r557, 1;
	setp.eq.b32 	%p240, %r558, 1;
	selp.f32 	%f1143, %f1141, %f1142, %p240;
	selp.f32 	%f1144, %f1142, %f1141, %p240;
	and.b32  	%r559, %r557, 2;
	setp.eq.s32 	%p241, %r559, 0;
	neg.f32 	%f1145, %f1143;
	selp.f32 	%f1146, %f1143, %f1145, %p241;
	add.s32 	%r560, %r557, 1;
	and.b32  	%r561, %r560, 2;
	setp.eq.s32 	%p242, %r561, 0;
	sub.f32 	%f1148, %f250, %f1144;
	selp.f32 	%f1149, %f1144, %f1148, %p242;
	cvt.rzi.f32.f32 	%f1150, %f1288;
	setp.eq.f32 	%p243, %f1150, %f1288;
	mul.f32 	%f1151, %f1288, 0f00000000;
	selp.f32 	%f1152, %f1151, %f1146, %p243;
	abs.f32 	%f1153, %f1288;
	setp.gt.f32 	%p244, %f1153, 0f4B800000;
	add.f32 	%f1154, %f1152, 0f3F800000;
	mul.lo.s32 	%r562, %r133, 2147483640;
	cvt.u16.u32 	%rs5, %r1;
	shr.u16 	%rs6, %rs5, 8;
	shl.b16 	%rs7, %rs5, 8;
	or.b16  	%rs8, %rs7, %rs6;
	shl.b16 	%rs9, %rs8, 4;
	shr.u16 	%rs10, %rs8, 4;
	and.b16  	%rs11, %rs10, 3840;
	or.b16  	%rs12, %rs11, %rs9;
	and.b16  	%rs13, %rs12, 13107;
	shl.b16 	%rs14, %rs13, 2;
	shr.u16 	%rs15, %rs12, 2;
	and.b16  	%rs16, %rs15, 13107;
	or.b16  	%rs17, %rs16, %rs14;
	and.b16  	%rs18, %rs17, 20480;
	shl.b16 	%rs19, %rs18, 1;
	shr.u16 	%rs20, %rs17, 1;
	and.b16  	%rs21, %rs20, 16384;
	or.b16  	%rs22, %rs21, %rs19;
	shr.u16 	%rs23, %rs22, 13;
	sub.s32 	%r563, %r562, %r126;
	mad.lo.s32 	%r564, %r136, 2147483616, %r563;
	or.b16  	%rs24, %rs23, 1;
	cvt.u32.u16 	%r565, %rs24;
	and.b16  	%rs25, %rs23, 6;
	cvt.u32.u16 	%r566, %rs25;
	sub.s32 	%r567, %r564, %r566;
	shl.b32 	%r568, %r567, 1;
	cvt.rn.f32.s32 	%f1156, %r568;
	div.approx.f32 	%f123, %f1156, %f253;
	abs.f32 	%f1292, %f123;
	setp.lt.f32 	%p245, %f1292, 0f40000000;
	@%p245 bra 	$L__BB0_106;
// %bb.95:
	setp.gtu.f32 	%p246, %f1292, 0f4B800000;
	@%p246 bra 	$L__BB0_102;
	bra.uni 	$L__BB0_96;
$L__BB0_102:
	mov.b32 	%r62, %f1292;
	and.b32  	%r569, %r62, 8388607;
	or.b32  	%r16242, %r569, 1065353216;
	mov.b32 	%f1291, %r16242;
	add.s32 	%r570, %r62, -1073741824;
	and.b32  	%r16243, %r570, -8388608;
	setp.eq.s32 	%p252, %r16243, 0;
	@%p252 bra 	$L__BB0_105;
// %bb.103:                             // %__nv_fmaf_rn.exit4.i.i.i1681.preheader
	mov.f32 	%f1167, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1166,%f1167;
	// end inline asm
$L__BB0_104:                            // %__nv_fmaf_rn.exit4.i.i.i1681
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r571, %r16243, 192937984;
	add.s32 	%r572, %r16242, %r571;
	mov.b32 	%f1168, %r572;
	mul.f32 	%f1169, %f1166, %f1168;
	sub.f32 	%f1170, %f1168, %f1169;
	fma.rn.f32 	%f1171, %f1170, %f1166, %f1169;
	sub.f32 	%f1172, %f1168, %f1171;
	fma.rz.f32 	%f1173, %f1172, %f1166, %f1171;
	cvt.rzi.f32.f32 	%f1174, %f1173;
	sub.f32 	%f1291, %f1168, %f1174;
	sub.s32 	%r16243, %r16243, %r571;
	mov.b32 	%r16242, %f1291;
	setp.ne.s32 	%p253, %r16243, 0;
	setp.ne.s32 	%p254, %r16242, 0;
	and.pred  	%p255, %p253, %p254;
	@%p255 bra 	$L__BB0_104;
$L__BB0_105:                            // %__internal_fmodf_slowpath_mod.exit.i.i1683
	setp.gt.u32 	%p256, %r62, 2139095039;
	selp.f32 	%f1175, 0f7FFFFFFF, 0f4B800000, %p256;
	mul.f32 	%f1176, %f1291, 0f34000000;
	mul.f32 	%f1292, %f1175, %f1176;
	bra.uni 	$L__BB0_106;
$L__BB0_96:                             // %__nv_fast_fdividef.exit.i.i.i1660
	div.approx.f32 	%f1159, %f1292, %f221;
	cvt.rzi.f32.f32 	%f1290, %f1159;
	fma.rn.f32 	%f126, %f1290, 0fC0000000, %f1292;
	mov.b32 	%r61, %f126;
	setp.lt.u32 	%p247, %r61, 1073741824;
	@%p247 bra 	$L__BB0_101;
// %bb.97:
	setp.lt.u32 	%p248, %r61, -2147483647;
	@%p248 bra 	$L__BB0_99;
// %bb.98:
	add.f32 	%f1164, %f1290, 0fBF800000;
	setp.lt.f32 	%p251, %f126, 0fC0000000;
	add.f32 	%f1165, %f1164, 0fBF800000;
	selp.f32 	%f1290, %f1165, %f1164, %p251;
	bra.uni 	$L__BB0_101;
$L__BB0_99:
	add.f32 	%f1290, %f1290, 0f3F800000;
	setp.ltu.f32 	%p249, %f126, 0f40800000;
	@%p249 bra 	$L__BB0_101;
// %bb.100:                             // %__nv_fmaf_rn.exit.i.i.i1664
	add.f32 	%f1160, %f1290, 0f3F800000;
	fma.rn.f32 	%f1162, %f221, 0fC0400000, %f126;
	setp.ge.f32 	%p250, %f1162, 0f00000000;
	add.f32 	%f1163, %f1160, 0f3F800000;
	selp.f32 	%f1290, %f1163, %f1160, %p250;
$L__BB0_101:                            // %__internal_fmodf_fastpath_quot.exit.i.i1667
	fma.rn.f32 	%f1292, %f1290, 0fC0000000, %f1292;
$L__BB0_106:                            // %__internal_fmodf_kernel.exit.i1686
	mul.f32 	%f256, %f160, 0f3B8B2FF9;
	mul.f32 	%f290, %f4, 0f3B8B2FF9;
	mul.f32 	%f325, %f8, 0f3B8B2FF9;
	mul.f32 	%f359, %f13, 0f3B8B2FF9;
	mul.f32 	%f394, %f17, 0f3B8B2FF9;
	mul.f32 	%f428, %f22, 0f3B8B2FF9;
	mul.f32 	%f463, %f26, 0f3B8B2FF9;
	mul.f32 	%f497, %f31, 0f3B8B2FF9;
	mul.f32 	%f532, %f35, 0f3B8B2FF9;
	mul.f32 	%f566, %f40, 0f3B8B2FF9;
	mul.f32 	%f601, %f44, 0f3B8B2FF9;
	mul.f32 	%f635, %f49, 0f3B8B2FF9;
	mul.f32 	%f670, %f53, 0f3B8B2FF9;
	mul.f32 	%f704, %f58, 0f3B8B2FF9;
	mul.f32 	%f739, %f62, 0f3B8B2FF9;
	mul.f32 	%f772, %f67, 0f3B8B2FF9;
	selp.f32 	%f808, %f807, %f802, %p117;
	selp.f32 	%f841, %f840, %f835, %p124;
	selp.f32 	%f178, %f893, %f889, %p144;
	selp.f32 	%f947, %f946, %f941, %p164;
	selp.f32 	%f994, %f989, %f993, %p182;
	setp.gt.f32 	%p184, %f997, 0f4B800000;
	add.f32 	%f998, %f196, 0f3F800000;
	selp.f32 	%f1045, %f1040, %f1044, %p202;
	setp.gt.f32 	%p204, %f1049, 0f4B800000;
	add.f32 	%f1050, %f1048, 0f3F800000;
	selp.f32 	%f217, %f1102, %f1098, %p224;
	selp.f32 	%f1155, %f1154, %f1149, %p244;
	sub.s32 	%r60, %r564, %r565;
	abs.f32 	%f1177, %f1292;
	setp.gtu.f32 	%p257, %f1177, 0f7F800000;
	@%p257 bra 	$L__BB0_108;
// %bb.107:
	mov.b32 	%r573, %f123;
	and.b32  	%r574, %r573, -2147483648;
	mov.b32 	%r575, %f1292;
	or.b32  	%r576, %r574, %r575;
	mov.b32 	%f1292, %r576;
$L__BB0_108:                            // %__nv_fmodf.exit1687
	mul.f32 	%f3, %f256, %f1262;
	mul.f32 	%f291, %f290, %f1263;
	mul.f32 	%f12, %f325, %f1264;
	mul.f32 	%f360, %f359, %f1265;
	mul.f32 	%f21, %f394, %f1266;
	mul.f32 	%f429, %f428, %f1267;
	mul.f32 	%f30, %f463, %f1268;
	mul.f32 	%f498, %f497, %f1269;
	mul.f32 	%f39, %f532, %f1270;
	mul.f32 	%f567, %f566, %f1271;
	mul.f32 	%f48, %f601, %f1272;
	mul.f32 	%f636, %f635, %f1273;
	mul.f32 	%f57, %f670, %f1274;
	mul.f32 	%f705, %f704, %f1275;
	mul.f32 	%f66, %f739, %f1276;
	mul.f32 	%f773, %f772, %f1277;
	mov.b32 	%r388, %f808;
	mov.b32 	%r389, %f841;
	mov.b32 	%r394, %f805;
	mov.b32 	%r395, %f838;
	mov.b32 	%r456, %f947;
	mov.b32 	%r455, %f178;
	mov.b32 	%r462, %f944;
	mov.b32 	%r461, %f177;
	selp.f32 	%f197, %f998, %f994, %p184;
	selp.f32 	%f1051, %f1050, %f1045, %p204;
	mov.b32 	%r544, %f1155;
	mov.b32 	%r543, %f217;
	mov.b32 	%r550, %f1152;
	mov.b32 	%r549, %f216;
	add.f32 	%f1178, %f1292, %f1292;
	mov.b32 	%r577, %f1178;
	and.b32  	%r578, %r577, -2147483648;
	or.b32  	%r579, %r578, 1056964608;
	mov.b32 	%f1179, %r579;
	add.f32 	%f1180, %f1178, %f1179;
	cvt.rzi.f32.f32 	%f1181, %f1180;
	abs.f32 	%f1182, %f1178;
	setp.gt.f32 	%p258, %f1182, 0f4B000000;
	selp.f32 	%f1183, %f1178, %f1181, %p258;
	cvt.rzi.f32.f32 	%f1184, %f1178;
	setp.lt.f32 	%p259, %f1182, 0f3F000000;
	selp.f32 	%f1185, %f1184, %f1183, %p259;
	cvt.rzi.s32.f32 	%r580, %f1185;
	fma.rn.f32 	%f1186, %f1185, 0fBF000000, %f1292;
	mul.f32 	%f1187, %f1186, %f1186;
	fma.rn.f32 	%f1188, %f1187, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1189, %f1187, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1190, %f1188, %f1187, 0fC0A55DF6;
	fma.rn.f32 	%f1191, %f1189, %f1187, 0f4081E0CF;
	fma.rn.f32 	%f1192, %f1187, %f1186, 0f00000000;
	fma.rn.f32 	%f1193, %f1191, %f1187, 0fC09DE9E6;
	fma.rn.f32 	%f1194, %f1190, %f1192, 0f00000000;
	fma.rn.f32 	%f1195, %f1193, %f1187, 0f3F800000;
	fma.rn.f32 	%f1196, %f1186, 0f40490FDB, %f1194;
	and.b32  	%r581, %r580, 1;
	setp.eq.b32 	%p260, %r581, 1;
	selp.f32 	%f1197, %f1195, %f1196, %p260;
	selp.f32 	%f1198, %f1196, %f1195, %p260;
	and.b32  	%r582, %r580, 2;
	setp.eq.s32 	%p261, %r582, 0;
	neg.f32 	%f1199, %f1197;
	selp.f32 	%f1200, %f1197, %f1199, %p261;
	add.s32 	%r583, %r580, 1;
	and.b32  	%r584, %r583, 2;
	setp.eq.s32 	%p262, %r584, 0;
	sub.f32 	%f1202, %f250, %f1198;
	selp.f32 	%f1203, %f1198, %f1202, %p262;
	cvt.rzi.f32.f32 	%f1204, %f1292;
	setp.eq.f32 	%p263, %f1204, %f1292;
	mul.f32 	%f1205, %f1292, 0f00000000;
	selp.f32 	%f140, %f1205, %f1200, %p263;
	abs.f32 	%f1206, %f1292;
	setp.gt.f32 	%p264, %f1206, 0f4B800000;
	add.f32 	%f1207, %f140, 0f3F800000;
	shl.b32 	%r585, %r60, 1;
	cvt.rn.f32.s32 	%f1208, %r585;
	div.approx.f32 	%f142, %f1208, %f253;
	abs.f32 	%f1296, %f142;
	setp.lt.f32 	%p265, %f1296, 0f40000000;
	@%p265 bra 	$L__BB0_120;
// %bb.109:
	setp.gtu.f32 	%p266, %f1296, 0f4B800000;
	@%p266 bra 	$L__BB0_116;
	bra.uni 	$L__BB0_110;
$L__BB0_116:
	mov.b32 	%r70, %f1296;
	and.b32  	%r586, %r70, 8388607;
	or.b32  	%r16244, %r586, 1065353216;
	mov.b32 	%f1295, %r16244;
	add.s32 	%r587, %r70, -1073741824;
	and.b32  	%r16245, %r587, -8388608;
	setp.eq.s32 	%p272, %r16245, 0;
	@%p272 bra 	$L__BB0_119;
// %bb.117:                             // %__nv_fmaf_rn.exit4.i.i.i1712.preheader
	mov.f32 	%f1219, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1218,%f1219;
	// end inline asm
$L__BB0_118:                            // %__nv_fmaf_rn.exit4.i.i.i1712
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r588, %r16245, 192937984;
	add.s32 	%r589, %r16244, %r588;
	mov.b32 	%f1220, %r589;
	mul.f32 	%f1221, %f1218, %f1220;
	sub.f32 	%f1222, %f1220, %f1221;
	fma.rn.f32 	%f1223, %f1222, %f1218, %f1221;
	sub.f32 	%f1224, %f1220, %f1223;
	fma.rz.f32 	%f1225, %f1224, %f1218, %f1223;
	cvt.rzi.f32.f32 	%f1226, %f1225;
	sub.f32 	%f1295, %f1220, %f1226;
	sub.s32 	%r16245, %r16245, %r588;
	mov.b32 	%r16244, %f1295;
	setp.ne.s32 	%p273, %r16245, 0;
	setp.ne.s32 	%p274, %r16244, 0;
	and.pred  	%p275, %p273, %p274;
	@%p275 bra 	$L__BB0_118;
$L__BB0_119:                            // %__internal_fmodf_slowpath_mod.exit.i.i1714
	setp.gt.u32 	%p276, %r70, 2139095039;
	selp.f32 	%f1227, 0f7FFFFFFF, 0f4B800000, %p276;
	mul.f32 	%f1228, %f1295, 0f34000000;
	mul.f32 	%f1296, %f1227, %f1228;
	bra.uni 	$L__BB0_120;
$L__BB0_110:                            // %__nv_fast_fdividef.exit.i.i.i1691
	div.approx.f32 	%f1211, %f1296, %f221;
	cvt.rzi.f32.f32 	%f1294, %f1211;
	fma.rn.f32 	%f145, %f1294, 0fC0000000, %f1296;
	mov.b32 	%r69, %f145;
	setp.lt.u32 	%p267, %r69, 1073741824;
	@%p267 bra 	$L__BB0_115;
// %bb.111:
	setp.lt.u32 	%p268, %r69, -2147483647;
	@%p268 bra 	$L__BB0_113;
// %bb.112:
	add.f32 	%f1216, %f1294, 0fBF800000;
	setp.lt.f32 	%p271, %f145, 0fC0000000;
	add.f32 	%f1217, %f1216, 0fBF800000;
	selp.f32 	%f1294, %f1217, %f1216, %p271;
	bra.uni 	$L__BB0_115;
$L__BB0_113:
	add.f32 	%f1294, %f1294, 0f3F800000;
	setp.ltu.f32 	%p269, %f145, 0f40800000;
	@%p269 bra 	$L__BB0_115;
// %bb.114:                             // %__nv_fmaf_rn.exit.i.i.i1695
	add.f32 	%f1212, %f1294, 0f3F800000;
	fma.rn.f32 	%f1214, %f221, 0fC0400000, %f145;
	setp.ge.f32 	%p270, %f1214, 0f00000000;
	add.f32 	%f1215, %f1212, 0f3F800000;
	selp.f32 	%f1294, %f1215, %f1212, %p270;
$L__BB0_115:                            // %__internal_fmodf_fastpath_quot.exit.i.i1698
	fma.rn.f32 	%f1296, %f1294, 0fC0000000, %f1296;
$L__BB0_120:                            // %__internal_fmodf_kernel.exit.i1717
	mov.b32 	%r260, %f291;
	mov.b32 	%r259, %f3;
	mov.b32 	%r278, %f360;
	mov.b32 	%r277, %f12;
	mov.b32 	%r296, %f429;
	mov.b32 	%r295, %f21;
	mov.b32 	%r314, %f498;
	mov.b32 	%r313, %f30;
	mov.b32 	%r332, %f567;
	mov.b32 	%r331, %f39;
	mov.b32 	%r350, %f636;
	mov.b32 	%r349, %f48;
	mov.b32 	%r368, %f705;
	mov.b32 	%r367, %f57;
	mov.b32 	%r386, %f773;
	mov.b32 	%r385, %f66;
	xor.b32  	%r459, %r462, -2147483648;
	xor.b32  	%r458, %r461, -2147483648;
	mov.b32 	%r506, %f1051;
	mov.b32 	%r505, %f197;
	mov.b32 	%r509, %f1048;
	mov.b32 	%r508, %f196;
	xor.b32  	%r547, %r550, -2147483648;
	xor.b32  	%r546, %r549, -2147483648;
	selp.f32 	%f141, %f1207, %f1203, %p264;
	abs.f32 	%f1229, %f1296;
	setp.gtu.f32 	%p277, %f1229, 0f7F800000;
	@%p277 bra 	$L__BB0_122;
// %bb.121:
	mov.b32 	%r590, %f142;
	and.b32  	%r591, %r590, -2147483648;
	mov.b32 	%r592, %f1296;
	or.b32  	%r593, %r591, %r592;
	mov.b32 	%f1296, %r593;
$L__BB0_122:                            // %__nv_fmodf.exit1718
	ld.param.u64 	%rd2, [_Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_6];
	// begin inline asm
	cvt.rn.f16x2.f32 %r258, %r260, %r259;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r276, %r278, %r277;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r294, %r296, %r295;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r312, %r314, %r313;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r330, %r332, %r331;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r348, %r350, %r349;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r366, %r368, %r367;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r384, %r386, %r385;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r387, %r389, %r388;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r390, %r389, %r388;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r393, %r395, %r394;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r396, %r395, %r394;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r454, %r456, %r455;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r457, %r459, %r458;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r460, %r462, %r461;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r463, %r456, %r455;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r504, %r506, %r505;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r507, %r509, %r508;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r542, %r544, %r543;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r545, %r547, %r546;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r548, %r550, %r549;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r551, %r544, %r543;
	// end inline asm
	add.f32 	%f1230, %f1296, %f1296;
	mov.b32 	%r601, %f1230;
	and.b32  	%r602, %r601, -2147483648;
	or.b32  	%r603, %r602, 1056964608;
	mov.b32 	%f1231, %r603;
	add.f32 	%f1232, %f1230, %f1231;
	cvt.rzi.f32.f32 	%f1233, %f1232;
	abs.f32 	%f1234, %f1230;
	setp.gt.f32 	%p278, %f1234, 0f4B000000;
	selp.f32 	%f1235, %f1230, %f1233, %p278;
	cvt.rzi.f32.f32 	%f1236, %f1230;
	setp.lt.f32 	%p279, %f1234, 0f3F000000;
	selp.f32 	%f1237, %f1236, %f1235, %p279;
	cvt.rzi.s32.f32 	%r604, %f1237;
	fma.rn.f32 	%f1238, %f1237, 0fBF000000, %f1296;
	mul.f32 	%f1239, %f1238, %f1238;
	fma.rn.f32 	%f1240, %f1239, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1241, %f1239, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1242, %f1240, %f1239, 0fC0A55DF6;
	fma.rn.f32 	%f1243, %f1241, %f1239, 0f4081E0CF;
	fma.rn.f32 	%f1244, %f1239, %f1238, 0f00000000;
	fma.rn.f32 	%f1245, %f1243, %f1239, 0fC09DE9E6;
	fma.rn.f32 	%f1246, %f1242, %f1244, 0f00000000;
	fma.rn.f32 	%f1247, %f1245, %f1239, 0f3F800000;
	fma.rn.f32 	%f1248, %f1238, 0f40490FDB, %f1246;
	and.b32  	%r605, %r604, 1;
	setp.eq.b32 	%p280, %r605, 1;
	selp.f32 	%f1249, %f1247, %f1248, %p280;
	selp.f32 	%f1250, %f1248, %f1247, %p280;
	and.b32  	%r606, %r604, 2;
	setp.eq.s32 	%p281, %r606, 0;
	neg.f32 	%f1251, %f1249;
	selp.f32 	%f1252, %f1249, %f1251, %p281;
	add.s32 	%r607, %r604, 1;
	and.b32  	%r608, %r607, 2;
	setp.eq.s32 	%p282, %r608, 0;
	sub.f32 	%f1254, %f250, %f1250;
	selp.f32 	%f1255, %f1250, %f1254, %p282;
	cvt.rzi.f32.f32 	%f1256, %f1296;
	setp.eq.f32 	%p283, %f1256, %f1296;
	mul.f32 	%f1257, %f1296, 0f00000000;
	selp.f32 	%f1258, %f1257, %f1252, %p283;
	abs.f32 	%f1259, %f1296;
	setp.gt.f32 	%p284, %f1259, 0f4B800000;
	add.f32 	%f1260, %f1258, 0f3F800000;
	selp.f32 	%f1261, %f1260, %f1255, %p284;
	mov.b32 	%r596, %f1261;
	mov.b32 	%r595, %f141;
	// begin inline asm
	cvt.rn.f16x2.f32 %r594, %r596, %r595;
	// end inline asm
	mov.b32 	%r599, %f1258;
	mov.b32 	%r598, %f140;
	// begin inline asm
	cvt.rn.f16x2.f32 %r597, %r599, %r598;
	// end inline asm
	shl.b32 	%r609, %r215, 12;
	and.b32  	%r610, %r124, 32;
	shl.b32 	%r611, %r1, 3;
	and.b32  	%r612, %r611, 64;
	or.b32  	%r613, %r610, %r3;
	or.b32  	%r79, %r613, %r612;
	and.b32  	%r614, %r123, 28;
	shl.b32 	%r615, %r2, 5;
	and.b32  	%r616, %r615, 224;
	or.b32  	%r617, %r614, %r616;
	or.b32  	%r80, %r617, %r609;
	bfe.s32 	%r618, %r1, 3, 1;
	and.b32  	%r81, %r1, 8;
	shl.b32 	%r619, %r1, 4;
	or.b32  	%r620, %r619, %r81;
	shr.u32 	%r621, %r620, 2;
	and.b32  	%r622, %r621, 30;
	and.b32  	%r623, %r4, 32;
	shr.u32 	%r624, %r3, 1;
	or.b32  	%r82, %r623, %r624;
	or.b32  	%r83, %r82, 8;
	or.b32  	%r84, %r82, 16;
	or.b32  	%r85, %r82, 24;
	and.b32  	%r625, %r127, 31;
	mul.lo.s32 	%r626, %r625, 65;
	add.s32 	%r86, %r82, %r626;
	add.s32 	%r87, %r83, %r626;
	add.s32 	%r88, %r84, %r626;
	add.s32 	%r89, %r85, %r626;
	and.b16  	%rs26, %rs1, 63;
	mul.lo.s16 	%rs27, %rs26, 65;
	cvt.u32.u16 	%r627, %rs27;
	add.s32 	%r90, %r82, %r627;
	add.s32 	%r91, %r83, %r627;
	add.s32 	%r92, %r84, %r627;
	add.s32 	%r93, %r85, %r627;
	shl.b32 	%r628, %r3, 1;
	or.b32  	%r629, %r628, %r134;
	mul.lo.s32 	%r630, %r629, 65;
	add.s32 	%r631, %r622, %r630;
	mul.wide.u32 	%rd43, %r631, 4;
	mov.u64 	%rd44, shmem;
	add.s64 	%rd4, %rd44, %rd43;
	cvt.u64.u32 	%rd45, %r622;
	cvt.u64.u32 	%rd46, %r630;
	add.s64 	%rd47, %rd46, %rd45;
	shl.b64 	%rd48, %rd47, 2;
	add.s64 	%rd5, %rd44, %rd48;
	or.b32  	%r632, %r629, 32;
	mul.lo.s32 	%r633, %r632, 65;
	add.s32 	%r634, %r633, %r622;
	mul.wide.u32 	%rd49, %r634, 4;
	add.s64 	%rd6, %rd44, %rd49;
	cvt.u64.u32 	%rd50, %r633;
	add.s64 	%rd51, %rd50, %rd45;
	shl.b64 	%rd52, %rd51, 2;
	add.s64 	%rd7, %rd44, %rd52;
	shr.u32 	%r635, %r3, 3;
	mul.lo.s32 	%r636, %r635, 260;
	bfe.s32 	%r637, %r3, 1, 1;
	and.b32  	%r638, %r3, 2;
	setp.eq.s32 	%p285, %r638, 0;
	and.b32  	%r639, %r637, 1040;
	mul.lo.s32 	%r640, %r134, 65;
	and.b32  	%r641, %r3, 1;
	neg.s32 	%r642, %r641;
	and.b32  	%r643, %r642, 2080;
	bfe.s32 	%r644, %r3, 2, 1;
	and.b32  	%r645, %r3, 4;
	setp.eq.s32 	%p286, %r645, 0;
	and.b32  	%r646, %r644, 520;
	or.b32  	%r647, %r643, %r622;
	add.s32 	%r648, %r647, %r636;
	add.s32 	%r649, %r648, %r639;
	add.s32 	%r650, %r649, %r640;
	add.s32 	%r651, %r650, %r646;
	mul.wide.u32 	%rd53, %r651, 4;
	add.s64 	%rd8, %rd44, %rd53;
	selp.b64 	%rd54, 0, 520, %p286;
	cvt.u64.u32 	%rd55, %r640;
	selp.b64 	%rd56, 0, 1040, %p285;
	cvt.u64.u32 	%rd57, %r636;
	cvt.u64.u32 	%rd58, %r647;
	add.s64 	%rd59, %rd58, %rd57;
	add.s64 	%rd60, %rd59, %rd56;
	add.s64 	%rd61, %rd60, %rd55;
	add.s64 	%rd62, %rd61, %rd54;
	shl.b64 	%rd63, %rd62, 2;
	add.s64 	%rd14, %rd44, %rd63;
	cvt.u64.u32 	%rd64, %r648;
	add.s64 	%rd65, %rd64, %rd56;
	add.s64 	%rd66, %rd65, %rd55;
	add.s64 	%rd67, %rd66, %rd54;
	shl.b64 	%rd68, %rd67, 2;
	add.s64 	%rd10, %rd44, %rd68;
	add.s32 	%r652, %r651, 162;
	mul.wide.u32 	%rd69, %r652, 4;
	add.s64 	%rd11, %rd44, %rd69;
	add.s32 	%r653, %r651, 131;
	mul.wide.u32 	%rd70, %r653, 4;
	add.s64 	%rd12, %rd44, %rd70;
	add.s32 	%r654, %r651, 163;
	mul.wide.u32 	%rd71, %r654, 4;
	add.s64 	%rd13, %rd44, %rd71;
	add.s32 	%r655, %r651, 4193;
	mul.wide.u32 	%rd72, %r655, 4;
	add.s64 	%rd15, %rd44, %rd72;
	add.s32 	%r656, %r651, 4162;
	mul.wide.u32 	%rd73, %r656, 4;
	add.s64 	%rd16, %rd44, %rd73;
	add.s32 	%r657, %r651, 4194;
	mul.wide.u32 	%rd74, %r657, 4;
	add.s64 	%rd17, %rd44, %rd74;
	add.s32 	%r658, %r651, 4291;
	mul.wide.u32 	%rd75, %r658, 4;
	add.s64 	%rd18, %rd44, %rd75;
	add.s32 	%r659, %r651, 4323;
	mul.wide.u32 	%rd76, %r659, 4;
	add.s64 	%rd19, %rd44, %rd76;
	add.s32 	%r660, %r651, 4292;
	mul.wide.u32 	%rd77, %r660, 4;
	add.s64 	%rd20, %rd44, %rd77;
	add.s32 	%r661, %r651, 4324;
	mul.wide.u32 	%rd78, %r661, 4;
	add.s64 	%rd21, %rd44, %rd78;
	setp.eq.s32 	%p287, %r132, 0;
	selp.b32 	%r94, 0, 130, %p287;
	and.b32  	%r95, %r618, 1040;
	bfe.s32 	%r662, %r1, 1, 1;
	and.b32  	%r96, %r662, 65;
	mul.lo.s32 	%r97, %r134, 520;
	add.s32 	%r663, %r634, 4193;
	mul.wide.u32 	%rd79, %r663, 4;
	add.s64 	%rd22, %rd44, %rd79;
	mov.u32 	%r16246, 0;
	setp.eq.s32 	%p289, %r81, 0;
	mov.u16 	%rs2387, 25600;
	mov.u16 	%rs2179, 21504;
	mov.u16 	%rs2395, 18432;
	mov.u32 	%r16247, %r16246;
	mov.u32 	%r16248, %r16246;
	mov.u32 	%r16249, %r16246;
	mov.u32 	%r16250, %r16246;
	mov.u32 	%r16251, %r16246;
	mov.u32 	%r16252, %r16246;
	mov.u32 	%r16253, %r16246;
	mov.u32 	%r16254, %r16246;
	mov.u32 	%r16255, %r16246;
	mov.u32 	%r16256, %r16246;
	mov.u32 	%r16257, %r16246;
	mov.u32 	%r16258, %r16246;
	mov.u32 	%r16259, %r16246;
	mov.u32 	%r16260, %r16246;
	mov.u32 	%r16261, %r16246;
	mov.u32 	%r16262, %r16246;
	mov.u32 	%r16263, %r16246;
	mov.u32 	%r16264, %r16246;
	mov.u32 	%r16265, %r16246;
	mov.u32 	%r16266, %r16246;
	mov.u32 	%r16267, %r16246;
	mov.u32 	%r16268, %r16246;
	mov.u32 	%r16269, %r16246;
	mov.u32 	%r16270, %r16246;
$L__BB0_123:                            // %L2064
                                        // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_156 Depth 2
	add.s32 	%r664, %r16270, %r215;
	setp.lt.s32 	%p288, %r664, %r216;
	@%p288 bra 	$L__BB0_155;
	bra.uni 	$L__BB0_124;
$L__BB0_155:                            // %pass771
                                        //   in Loop: Header=BB0_123 Depth=1
	or.b32  	%r731, %r79, %r16270;
	shl.b32 	%r732, %r731, 12;
	add.s32 	%r733, %r80, %r732;
	shr.s32 	%r734, %r733, 31;
	shr.u32 	%r735, %r734, 3;
	add.s32 	%r736, %r733, %r735;
	shr.s32 	%r737, %r736, 29;
	setp.lt.s32 	%p290, %r733, 0;
	and.b32  	%r738, %r736, -536870912;
	setp.ne.s32 	%p291, %r738, %r733;
	and.pred  	%p292, %p290, %p291;
	selp.u32 	%r739, 1, 0, %p292;
	sub.s32 	%r740, %r739, %r737;
	shl.b32 	%r741, %r740, 29;
	add.s32 	%r742, %r741, %r733;
	mul.wide.s32 	%rd80, %r742, 4;
	add.s64 	%rd81, %rd2, %rd80;
	ld.global.v4.u32 	{%r743, %r744, %r745, %r746}, [%rd81];
	or.b32  	%r747, %r732, 65536;
	add.s32 	%r748, %r80, %r747;
	shr.s32 	%r749, %r748, 31;
	shr.u32 	%r750, %r749, 3;
	add.s32 	%r751, %r748, %r750;
	shr.s32 	%r752, %r751, 29;
	setp.lt.s32 	%p293, %r748, 0;
	and.b32  	%r753, %r751, -536870912;
	setp.ne.s32 	%p294, %r753, %r748;
	and.pred  	%p295, %p293, %p294;
	selp.u32 	%r754, 1, 0, %p295;
	sub.s32 	%r755, %r754, %r752;
	shl.b32 	%r756, %r755, 29;
	add.s32 	%r757, %r756, %r748;
	mul.wide.s32 	%rd82, %r757, 4;
	add.s64 	%rd83, %rd2, %rd82;
	ld.global.v4.u32 	{%r758, %r759, %r760, %r761}, [%rd83];
	or.b32  	%r762, %r732, 524288;
	add.s32 	%r763, %r80, %r762;
	shr.s32 	%r764, %r763, 31;
	shr.u32 	%r765, %r764, 3;
	add.s32 	%r766, %r763, %r765;
	shr.s32 	%r767, %r766, 29;
	setp.lt.s32 	%p296, %r763, 0;
	and.b32  	%r768, %r766, -536870912;
	setp.ne.s32 	%p297, %r768, %r763;
	and.pred  	%p298, %p296, %p297;
	selp.u32 	%r769, 1, 0, %p298;
	sub.s32 	%r770, %r769, %r767;
	shl.b32 	%r771, %r770, 29;
	add.s32 	%r772, %r771, %r763;
	mul.wide.s32 	%rd84, %r772, 4;
	add.s64 	%rd85, %rd2, %rd84;
	ld.global.v4.u32 	{%r773, %r774, %r775, %r776}, [%rd85];
	or.b32  	%r777, %r732, 589824;
	add.s32 	%r778, %r80, %r777;
	shr.s32 	%r779, %r778, 31;
	shr.u32 	%r780, %r779, 3;
	add.s32 	%r781, %r778, %r780;
	shr.s32 	%r782, %r781, 29;
	setp.lt.s32 	%p299, %r778, 0;
	and.b32  	%r783, %r781, -536870912;
	setp.ne.s32 	%p300, %r783, %r778;
	and.pred  	%p301, %p299, %p300;
	selp.u32 	%r784, 1, 0, %p301;
	sub.s32 	%r785, %r784, %r782;
	shl.b32 	%r786, %r785, 29;
	add.s32 	%r787, %r786, %r778;
	mul.wide.s32 	%rd86, %r787, 4;
	add.s64 	%rd87, %rd2, %rd86;
	ld.global.v4.u32 	{%r788, %r789, %r790, %r791}, [%rd87];
	selp.b32 	%r792, %r745, %r743, %p289;
	shfl.sync.bfly.b32	%r793, %r792, 8, 31, -1;
	selp.b32 	%r667, %r743, %r793, %p289;
	selp.b32 	%r668, %r793, %r745, %p289;
	selp.b32 	%r794, %r746, %r744, %p289;
	shfl.sync.bfly.b32	%r795, %r794, 8, 31, -1;
	selp.b32 	%r675, %r744, %r795, %p289;
	selp.b32 	%r676, %r795, %r746, %p289;
	selp.b32 	%r796, %r760, %r758, %p289;
	shfl.sync.bfly.b32	%r797, %r796, 8, 31, -1;
	selp.b32 	%r683, %r758, %r797, %p289;
	selp.b32 	%r684, %r797, %r760, %p289;
	selp.b32 	%r798, %r761, %r759, %p289;
	shfl.sync.bfly.b32	%r799, %r798, 8, 31, -1;
	selp.b32 	%r691, %r759, %r799, %p289;
	selp.b32 	%r692, %r799, %r761, %p289;
	selp.b32 	%r800, %r775, %r773, %p289;
	shfl.sync.bfly.b32	%r801, %r800, 8, 31, -1;
	selp.b32 	%r699, %r773, %r801, %p289;
	selp.b32 	%r700, %r801, %r775, %p289;
	selp.b32 	%r802, %r776, %r774, %p289;
	shfl.sync.bfly.b32	%r803, %r802, 8, 31, -1;
	selp.b32 	%r707, %r774, %r803, %p289;
	selp.b32 	%r708, %r803, %r776, %p289;
	selp.b32 	%r804, %r790, %r788, %p289;
	shfl.sync.bfly.b32	%r805, %r804, 8, 31, -1;
	selp.b32 	%r715, %r788, %r805, %p289;
	selp.b32 	%r716, %r805, %r790, %p289;
	selp.b32 	%r806, %r791, %r789, %p289;
	shfl.sync.bfly.b32	%r807, %r806, 8, 31, -1;
	selp.b32 	%r723, %r789, %r807, %p289;
	selp.b32 	%r724, %r807, %r791, %p289;
	mov.u32 	%r16157, 21520;
	// begin inline asm
	prmt.b32 %r666, %r667, %r668, %r16157;
	// end inline asm
	mov.u32 	%r16161, 30258;
	// begin inline asm
	prmt.b32 %r670, %r667, %r668, %r16161;
	// end inline asm
	// begin inline asm
	prmt.b32 %r674, %r675, %r676, %r16157;
	// end inline asm
	// begin inline asm
	prmt.b32 %r678, %r675, %r676, %r16161;
	// end inline asm
	// begin inline asm
	prmt.b32 %r682, %r683, %r684, %r16157;
	// end inline asm
	// begin inline asm
	prmt.b32 %r686, %r683, %r684, %r16161;
	// end inline asm
	// begin inline asm
	prmt.b32 %r690, %r691, %r692, %r16157;
	// end inline asm
	// begin inline asm
	prmt.b32 %r694, %r691, %r692, %r16161;
	// end inline asm
	// begin inline asm
	prmt.b32 %r698, %r699, %r700, %r16157;
	// end inline asm
	// begin inline asm
	prmt.b32 %r702, %r699, %r700, %r16161;
	// end inline asm
	// begin inline asm
	prmt.b32 %r706, %r707, %r708, %r16157;
	// end inline asm
	// begin inline asm
	prmt.b32 %r710, %r707, %r708, %r16161;
	// end inline asm
	// begin inline asm
	prmt.b32 %r714, %r715, %r716, %r16157;
	// end inline asm
	// begin inline asm
	prmt.b32 %r718, %r715, %r716, %r16161;
	// end inline asm
	// begin inline asm
	prmt.b32 %r722, %r723, %r724, %r16157;
	// end inline asm
	// begin inline asm
	prmt.b32 %r726, %r723, %r724, %r16161;
	// end inline asm
	st.shared.u32 	[%rd8], %r666;
	st.shared.u32 	[%rd14+128], %r670;
	st.shared.u32 	[%rd14+4], %r674;
	st.shared.u32 	[%rd14+132], %r678;
	st.shared.u32 	[%rd10+520], %r682;
	st.shared.u32 	[%rd11], %r686;
	st.shared.u32 	[%rd12], %r690;
	st.shared.u32 	[%rd13], %r694;
	st.shared.u32 	[%rd14+16644], %r698;
	st.shared.u32 	[%rd15], %r702;
	st.shared.u32 	[%rd16], %r706;
	st.shared.u32 	[%rd17], %r710;
	st.shared.u32 	[%rd18], %r714;
	st.shared.u32 	[%rd19], %r718;
	st.shared.u32 	[%rd20], %r722;
	st.shared.u32 	[%rd21], %r726;
	bar.sync 	0;
	or.b32  	%r163, %r16270, %r125;
	mov.u32 	%r3152, 0;
	mov.u32 	%r16277, %r3152;
$L__BB0_156:                            // %pass6353
                                        //   Parent Loop BB0_123 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	add.s32 	%r16072, %r163, %r16277;
	bfe.s32 	%r16073, %r16072, 3, 1;
	and.b32  	%r16074, %r16073, 260;
	bfe.s32 	%r16075, %r16072, 7, 1;
	and.b32  	%r16076, %r16075, 4161;
	add.s32 	%r16077, %r82, %r16074;
	add.s32 	%r16078, %r16077, %r16076;
	add.s32 	%r16079, %r16078, %r94;
	add.s32 	%r16080, %r16079, %r95;
	add.s32 	%r16081, %r16080, %r96;
	add.s32 	%r16082, %r16081, %r97;
	mul.wide.u32 	%rd88, %r16082, 4;
	add.s64 	%rd90, %rd44, %rd88;
	ld.shared.u32 	%r16083, [%rd90];
	add.s32 	%r16084, %r83, %r16074;
	add.s32 	%r16085, %r16084, %r16076;
	add.s32 	%r16086, %r16085, %r94;
	add.s32 	%r16087, %r16086, %r95;
	add.s32 	%r16088, %r16087, %r96;
	add.s32 	%r16089, %r16088, %r97;
	mul.wide.u32 	%rd91, %r16089, 4;
	add.s64 	%rd92, %rd44, %rd91;
	ld.shared.u32 	%r16090, [%rd92];
	add.s32 	%r16091, %r84, %r16074;
	add.s32 	%r16092, %r16091, %r16076;
	add.s32 	%r16093, %r16092, %r94;
	add.s32 	%r16094, %r16093, %r95;
	add.s32 	%r16095, %r16094, %r96;
	add.s32 	%r16096, %r16095, %r97;
	mul.wide.u32 	%rd93, %r16096, 4;
	add.s64 	%rd94, %rd44, %rd93;
	ld.shared.u32 	%r16097, [%rd94];
	add.s32 	%r16098, %r85, %r16074;
	add.s32 	%r16099, %r16098, %r16076;
	add.s32 	%r16100, %r16099, %r94;
	add.s32 	%r16101, %r16100, %r95;
	add.s32 	%r16102, %r16101, %r96;
	add.s32 	%r16103, %r16102, %r97;
	mul.wide.u32 	%rd95, %r16103, 4;
	add.s64 	%rd96, %rd44, %rd95;
	ld.shared.u32 	%r16104, [%rd96];
	add.s32 	%r16105, %r16082, 2080;
	mul.wide.u32 	%rd97, %r16105, 4;
	add.s64 	%rd98, %rd44, %rd97;
	ld.shared.u32 	%r16106, [%rd98];
	add.s32 	%r16107, %r16082, 2088;
	mul.wide.u32 	%rd99, %r16107, 4;
	add.s64 	%rd100, %rd44, %rd99;
	ld.shared.u32 	%r16108, [%rd100];
	add.s32 	%r16109, %r16082, 2096;
	mul.wide.u32 	%rd101, %r16109, 4;
	add.s64 	%rd102, %rd44, %rd101;
	ld.shared.u32 	%r16110, [%rd102];
	add.s32 	%r16111, %r16082, 2104;
	mul.wide.u32 	%rd103, %r16111, 4;
	add.s64 	%rd104, %rd44, %rd103;
	ld.shared.u32 	%r16112, [%rd104];
	// begin inline asm
	mov.b32 %r813, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r824, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r812, %r16083, -2004318072;
	mov.u32 	%r811, 983055;
	// begin inline asm
	lop3.b32 %r810, %r811, %r812, %r813, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r814, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r815, %r813, %r814;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r818, %r810, %r815;
	// end inline asm
	mov.u32 	%r822, 15728880;
	// begin inline asm
	lop3.b32 %r821, %r822, %r812, %r824, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r825, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r826, %r824, %r825;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r829, %r821, %r826;
	// end inline asm
	shr.u32 	%r834, %r812, 8;
	// begin inline asm
	lop3.b32 %r832, %r811, %r834, %r813, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r836, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r837, %r813, %r836;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r840, %r832, %r837;
	// end inline asm
	// begin inline asm
	lop3.b32 %r843, %r822, %r834, %r824, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r847, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r848, %r824, %r847;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r851, %r843, %r848;
	// end inline asm
	// begin inline asm
	mov.b32 %r859, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r870, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r858, %r16090, -2004318072;
	// begin inline asm
	lop3.b32 %r856, %r811, %r858, %r859, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r860, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r861, %r859, %r860;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r864, %r856, %r861;
	// end inline asm
	// begin inline asm
	lop3.b32 %r867, %r822, %r858, %r870, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r871, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r872, %r870, %r871;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r875, %r867, %r872;
	// end inline asm
	shr.u32 	%r880, %r858, 8;
	// begin inline asm
	lop3.b32 %r878, %r811, %r880, %r859, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r882, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r883, %r859, %r882;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r886, %r878, %r883;
	// end inline asm
	// begin inline asm
	lop3.b32 %r889, %r822, %r880, %r870, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r893, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r894, %r870, %r893;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r897, %r889, %r894;
	// end inline asm
	// begin inline asm
	mov.b32 %r905, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r916, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r904, %r16097, -2004318072;
	// begin inline asm
	lop3.b32 %r902, %r811, %r904, %r905, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r906, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r907, %r905, %r906;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r910, %r902, %r907;
	// end inline asm
	// begin inline asm
	lop3.b32 %r913, %r822, %r904, %r916, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r917, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r918, %r916, %r917;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r921, %r913, %r918;
	// end inline asm
	shr.u32 	%r926, %r904, 8;
	// begin inline asm
	lop3.b32 %r924, %r811, %r926, %r905, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r928, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r929, %r905, %r928;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r932, %r924, %r929;
	// end inline asm
	// begin inline asm
	lop3.b32 %r935, %r822, %r926, %r916, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r939, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r940, %r916, %r939;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r943, %r935, %r940;
	// end inline asm
	// begin inline asm
	mov.b32 %r951, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r962, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r950, %r16104, -2004318072;
	// begin inline asm
	lop3.b32 %r948, %r811, %r950, %r951, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r952, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r953, %r951, %r952;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r956, %r948, %r953;
	// end inline asm
	// begin inline asm
	lop3.b32 %r959, %r822, %r950, %r962, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r963, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r964, %r962, %r963;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r967, %r959, %r964;
	// end inline asm
	shr.u32 	%r972, %r950, 8;
	// begin inline asm
	lop3.b32 %r970, %r811, %r972, %r951, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r974, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r975, %r951, %r974;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r978, %r970, %r975;
	// end inline asm
	// begin inline asm
	lop3.b32 %r981, %r822, %r972, %r962, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r985, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r986, %r962, %r985;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r989, %r981, %r986;
	// end inline asm
	// begin inline asm
	mov.b32 %r997, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r1008, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r996, %r16106, -2004318072;
	// begin inline asm
	lop3.b32 %r994, %r811, %r996, %r997, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r998, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r999, %r997, %r998;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1002, %r994, %r999;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1005, %r822, %r996, %r1008, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1009, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1010, %r1008, %r1009;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1013, %r1005, %r1010;
	// end inline asm
	shr.u32 	%r1018, %r996, 8;
	// begin inline asm
	lop3.b32 %r1016, %r811, %r1018, %r997, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1020, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1021, %r997, %r1020;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1024, %r1016, %r1021;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1027, %r822, %r1018, %r1008, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1031, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1032, %r1008, %r1031;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1035, %r1027, %r1032;
	// end inline asm
	// begin inline asm
	mov.b32 %r1043, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r1054, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r1042, %r16108, -2004318072;
	// begin inline asm
	lop3.b32 %r1040, %r811, %r1042, %r1043, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1044, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1045, %r1043, %r1044;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1048, %r1040, %r1045;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1051, %r822, %r1042, %r1054, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1055, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1056, %r1054, %r1055;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1059, %r1051, %r1056;
	// end inline asm
	shr.u32 	%r1064, %r1042, 8;
	// begin inline asm
	lop3.b32 %r1062, %r811, %r1064, %r1043, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1066, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1067, %r1043, %r1066;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1070, %r1062, %r1067;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1073, %r822, %r1064, %r1054, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1077, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1078, %r1054, %r1077;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1081, %r1073, %r1078;
	// end inline asm
	// begin inline asm
	mov.b32 %r1089, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r1100, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r1088, %r16110, -2004318072;
	// begin inline asm
	lop3.b32 %r1086, %r811, %r1088, %r1089, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1090, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1091, %r1089, %r1090;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1094, %r1086, %r1091;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1097, %r822, %r1088, %r1100, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1101, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1102, %r1100, %r1101;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1105, %r1097, %r1102;
	// end inline asm
	shr.u32 	%r1110, %r1088, 8;
	// begin inline asm
	lop3.b32 %r1108, %r811, %r1110, %r1089, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1112, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1113, %r1089, %r1112;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1116, %r1108, %r1113;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1119, %r822, %r1110, %r1100, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1123, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1124, %r1100, %r1123;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1127, %r1119, %r1124;
	// end inline asm
	// begin inline asm
	mov.b32 %r1135, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r1146, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r1134, %r16112, -2004318072;
	// begin inline asm
	lop3.b32 %r1132, %r811, %r1134, %r1135, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1136, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1137, %r1135, %r1136;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1140, %r1132, %r1137;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1143, %r822, %r1134, %r1146, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1147, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1148, %r1146, %r1147;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1151, %r1143, %r1148;
	// end inline asm
	shr.u32 	%r1156, %r1134, 8;
	// begin inline asm
	lop3.b32 %r1154, %r811, %r1156, %r1135, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1158, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1159, %r1135, %r1158;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1162, %r1154, %r1159;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1165, %r822, %r1156, %r1146, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1169, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1170, %r1146, %r1169;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1173, %r1165, %r1170;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1176, %r366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1178, %r1176, %r818;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1181, %r366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1183, %r1181, %r829;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1186, %r366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1188, %r1186, %r840;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1191, %r366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1193, %r1191, %r851;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1196, %r366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1198, %r1196, %r864;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1201, %r366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1203, %r1201, %r875;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1206, %r366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1208, %r1206, %r886;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1211, %r366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1213, %r1211, %r897;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1216, %r366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1218, %r1216, %r910;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1221, %r366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1223, %r1221, %r921;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1226, %r366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1228, %r1226, %r932;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1231, %r366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1233, %r1231, %r943;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1236, %r366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1238, %r1236, %r956;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1241, %r366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1243, %r1241, %r967;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1246, %r366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1248, %r1246, %r978;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1251, %r366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1253, %r1251, %r989;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1256, %r384;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1258, %r1256, %r1002;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1261, %r384;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1263, %r1261, %r1013;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1266, %r384;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1268, %r1266, %r1024;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1271, %r384;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1273, %r1271, %r1035;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1276, %r384;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1278, %r1276, %r1048;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1281, %r384;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1283, %r1281, %r1059;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1286, %r384;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1288, %r1286, %r1070;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1291, %r384;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1293, %r1291, %r1081;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1296, %r384;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1298, %r1296, %r1094;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1301, %r384;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1303, %r1301, %r1105;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1306, %r384;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1308, %r1306, %r1116;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1311, %r384;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1313, %r1311, %r1127;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1316, %r384;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1318, %r1316, %r1140;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1321, %r384;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1323, %r1321, %r1151;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1326, %r384;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1328, %r1326, %r1162;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1331, %r384;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1333, %r1331, %r1173;
	// end inline asm
	// begin inline asm
	mov.b32 %r1341, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r1352, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r1340, %r16246, -2004318072;
	// begin inline asm
	lop3.b32 %r1338, %r811, %r1340, %r1341, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1342, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1343, %r1341, %r1342;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1346, %r1338, %r1343;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1349, %r822, %r1340, %r1352, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1353, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1354, %r1352, %r1353;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1357, %r1349, %r1354;
	// end inline asm
	shr.u32 	%r1362, %r1340, 8;
	// begin inline asm
	lop3.b32 %r1360, %r811, %r1362, %r1341, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1364, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1365, %r1341, %r1364;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1368, %r1360, %r1365;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1371, %r822, %r1362, %r1352, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1375, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1376, %r1352, %r1375;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1379, %r1371, %r1376;
	// end inline asm
	// begin inline asm
	mov.b32 %r1387, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r1398, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r1386, %r16247, -2004318072;
	// begin inline asm
	lop3.b32 %r1384, %r811, %r1386, %r1387, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1388, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1389, %r1387, %r1388;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1392, %r1384, %r1389;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1395, %r822, %r1386, %r1398, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1399, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1400, %r1398, %r1399;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1403, %r1395, %r1400;
	// end inline asm
	shr.u32 	%r1408, %r1386, 8;
	// begin inline asm
	lop3.b32 %r1406, %r811, %r1408, %r1387, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1410, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1411, %r1387, %r1410;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1414, %r1406, %r1411;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1417, %r822, %r1408, %r1398, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1421, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1422, %r1398, %r1421;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1425, %r1417, %r1422;
	// end inline asm
	// begin inline asm
	mov.b32 %r1433, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r1444, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r1432, %r16248, -2004318072;
	// begin inline asm
	lop3.b32 %r1430, %r811, %r1432, %r1433, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1434, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1435, %r1433, %r1434;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1438, %r1430, %r1435;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1441, %r822, %r1432, %r1444, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1445, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1446, %r1444, %r1445;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1449, %r1441, %r1446;
	// end inline asm
	shr.u32 	%r1454, %r1432, 8;
	// begin inline asm
	lop3.b32 %r1452, %r811, %r1454, %r1433, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1456, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1457, %r1433, %r1456;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1460, %r1452, %r1457;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1463, %r822, %r1454, %r1444, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1467, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1468, %r1444, %r1467;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1471, %r1463, %r1468;
	// end inline asm
	// begin inline asm
	mov.b32 %r1479, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r1490, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r1478, %r16249, -2004318072;
	// begin inline asm
	lop3.b32 %r1476, %r811, %r1478, %r1479, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1480, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1481, %r1479, %r1480;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1484, %r1476, %r1481;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1487, %r822, %r1478, %r1490, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1491, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1492, %r1490, %r1491;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1495, %r1487, %r1492;
	// end inline asm
	shr.u32 	%r1500, %r1478, 8;
	// begin inline asm
	lop3.b32 %r1498, %r811, %r1500, %r1479, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1502, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1503, %r1479, %r1502;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1506, %r1498, %r1503;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1509, %r822, %r1500, %r1490, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1513, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1514, %r1490, %r1513;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1517, %r1509, %r1514;
	// end inline asm
	// begin inline asm
	mov.b32 %r1525, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r1536, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r1524, %r16258, -2004318072;
	// begin inline asm
	lop3.b32 %r1522, %r811, %r1524, %r1525, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1526, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1527, %r1525, %r1526;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1530, %r1522, %r1527;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1533, %r822, %r1524, %r1536, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1537, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1538, %r1536, %r1537;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1541, %r1533, %r1538;
	// end inline asm
	shr.u32 	%r1546, %r1524, 8;
	// begin inline asm
	lop3.b32 %r1544, %r811, %r1546, %r1525, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1548, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1549, %r1525, %r1548;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1552, %r1544, %r1549;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1555, %r822, %r1546, %r1536, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1559, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1560, %r1536, %r1559;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1563, %r1555, %r1560;
	// end inline asm
	// begin inline asm
	mov.b32 %r1571, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r1582, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r1570, %r16259, -2004318072;
	// begin inline asm
	lop3.b32 %r1568, %r811, %r1570, %r1571, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1572, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1573, %r1571, %r1572;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1576, %r1568, %r1573;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1579, %r822, %r1570, %r1582, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1583, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1584, %r1582, %r1583;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1587, %r1579, %r1584;
	// end inline asm
	shr.u32 	%r1592, %r1570, 8;
	// begin inline asm
	lop3.b32 %r1590, %r811, %r1592, %r1571, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1594, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1595, %r1571, %r1594;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1598, %r1590, %r1595;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1601, %r822, %r1592, %r1582, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1605, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1606, %r1582, %r1605;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1609, %r1601, %r1606;
	// end inline asm
	// begin inline asm
	mov.b32 %r1617, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r1628, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r1616, %r16260, -2004318072;
	// begin inline asm
	lop3.b32 %r1614, %r811, %r1616, %r1617, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1618, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1619, %r1617, %r1618;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1622, %r1614, %r1619;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1625, %r822, %r1616, %r1628, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1629, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1630, %r1628, %r1629;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1633, %r1625, %r1630;
	// end inline asm
	shr.u32 	%r1638, %r1616, 8;
	// begin inline asm
	lop3.b32 %r1636, %r811, %r1638, %r1617, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1640, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1641, %r1617, %r1640;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1644, %r1636, %r1641;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1647, %r822, %r1638, %r1628, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1651, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1652, %r1628, %r1651;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1655, %r1647, %r1652;
	// end inline asm
	// begin inline asm
	mov.b32 %r1663, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r1674, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r1662, %r16261, -2004318072;
	// begin inline asm
	lop3.b32 %r1660, %r811, %r1662, %r1663, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1664, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1665, %r1663, %r1664;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1668, %r1660, %r1665;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1671, %r822, %r1662, %r1674, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1675, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1676, %r1674, %r1675;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1679, %r1671, %r1676;
	// end inline asm
	shr.u32 	%r1684, %r1662, 8;
	// begin inline asm
	lop3.b32 %r1682, %r811, %r1684, %r1663, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1686, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1687, %r1663, %r1686;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1690, %r1682, %r1687;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1693, %r822, %r1684, %r1674, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1697, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1698, %r1674, %r1697;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1701, %r1693, %r1698;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1704, %r258, %r1346, %r1178;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1708, %r258, %r1357, %r1183;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1712, %r258, %r1368, %r1188;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1716, %r258, %r1379, %r1193;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1720, %r258, %r1392, %r1198;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1724, %r258, %r1403, %r1203;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1728, %r258, %r1414, %r1208;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1732, %r258, %r1425, %r1213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1736, %r258, %r1438, %r1218;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1740, %r258, %r1449, %r1223;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1744, %r258, %r1460, %r1228;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1748, %r258, %r1471, %r1233;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1752, %r258, %r1484, %r1238;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1756, %r258, %r1495, %r1243;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1760, %r258, %r1506, %r1248;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1764, %r258, %r1517, %r1253;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1768, %r276, %r1530, %r1258;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1772, %r276, %r1541, %r1263;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1776, %r276, %r1552, %r1268;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1780, %r276, %r1563, %r1273;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1784, %r276, %r1576, %r1278;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1788, %r276, %r1587, %r1283;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1792, %r276, %r1598, %r1288;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1796, %r276, %r1609, %r1293;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1800, %r276, %r1622, %r1298;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1804, %r276, %r1633, %r1303;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1808, %r276, %r1644, %r1308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1812, %r276, %r1655, %r1313;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1816, %r276, %r1668, %r1318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1820, %r276, %r1679, %r1323;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1824, %r276, %r1690, %r1328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1828, %r276, %r1701, %r1333;
	// end inline asm
	// begin inline asm
	mov.b32 %r1837, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r1848, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r1836, %r16250, -2004318072;
	// begin inline asm
	lop3.b32 %r1834, %r811, %r1836, %r1837, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1838, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1839, %r1837, %r1838;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1842, %r1834, %r1839;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1845, %r822, %r1836, %r1848, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1849, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1850, %r1848, %r1849;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1853, %r1845, %r1850;
	// end inline asm
	shr.u32 	%r1858, %r1836, 8;
	// begin inline asm
	lop3.b32 %r1856, %r811, %r1858, %r1837, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1860, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1861, %r1837, %r1860;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1864, %r1856, %r1861;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1867, %r822, %r1858, %r1848, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1871, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1872, %r1848, %r1871;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1875, %r1867, %r1872;
	// end inline asm
	// begin inline asm
	mov.b32 %r1883, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r1894, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r1882, %r16251, -2004318072;
	// begin inline asm
	lop3.b32 %r1880, %r811, %r1882, %r1883, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1884, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1885, %r1883, %r1884;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1888, %r1880, %r1885;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1891, %r822, %r1882, %r1894, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1895, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1896, %r1894, %r1895;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1899, %r1891, %r1896;
	// end inline asm
	shr.u32 	%r1904, %r1882, 8;
	// begin inline asm
	lop3.b32 %r1902, %r811, %r1904, %r1883, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1906, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1907, %r1883, %r1906;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1910, %r1902, %r1907;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1913, %r822, %r1904, %r1894, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1917, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1918, %r1894, %r1917;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1921, %r1913, %r1918;
	// end inline asm
	// begin inline asm
	mov.b32 %r1929, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r1940, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r1928, %r16252, -2004318072;
	// begin inline asm
	lop3.b32 %r1926, %r811, %r1928, %r1929, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1930, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1931, %r1929, %r1930;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1934, %r1926, %r1931;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1937, %r822, %r1928, %r1940, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1941, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1942, %r1940, %r1941;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1945, %r1937, %r1942;
	// end inline asm
	shr.u32 	%r1950, %r1928, 8;
	// begin inline asm
	lop3.b32 %r1948, %r811, %r1950, %r1929, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1952, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1953, %r1929, %r1952;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1956, %r1948, %r1953;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1959, %r822, %r1950, %r1940, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1963, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1964, %r1940, %r1963;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1967, %r1959, %r1964;
	// end inline asm
	// begin inline asm
	mov.b32 %r1975, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r1986, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r1974, %r16253, -2004318072;
	// begin inline asm
	lop3.b32 %r1972, %r811, %r1974, %r1975, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1976, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1977, %r1975, %r1976;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1980, %r1972, %r1977;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1983, %r822, %r1974, %r1986, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1987, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1988, %r1986, %r1987;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1991, %r1983, %r1988;
	// end inline asm
	shr.u32 	%r1996, %r1974, 8;
	// begin inline asm
	lop3.b32 %r1994, %r811, %r1996, %r1975, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1998, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1999, %r1975, %r1998;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2002, %r1994, %r1999;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2005, %r822, %r1996, %r1986, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2009, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2010, %r1986, %r2009;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2013, %r2005, %r2010;
	// end inline asm
	// begin inline asm
	mov.b32 %r2021, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r2032, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r2020, %r16262, -2004318072;
	// begin inline asm
	lop3.b32 %r2018, %r811, %r2020, %r2021, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2022, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2023, %r2021, %r2022;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2026, %r2018, %r2023;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2029, %r822, %r2020, %r2032, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2033, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2034, %r2032, %r2033;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2037, %r2029, %r2034;
	// end inline asm
	shr.u32 	%r2042, %r2020, 8;
	// begin inline asm
	lop3.b32 %r2040, %r811, %r2042, %r2021, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2044, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2045, %r2021, %r2044;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2048, %r2040, %r2045;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2051, %r822, %r2042, %r2032, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2055, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2056, %r2032, %r2055;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2059, %r2051, %r2056;
	// end inline asm
	// begin inline asm
	mov.b32 %r2067, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r2078, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r2066, %r16263, -2004318072;
	// begin inline asm
	lop3.b32 %r2064, %r811, %r2066, %r2067, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2068, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2069, %r2067, %r2068;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2072, %r2064, %r2069;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2075, %r822, %r2066, %r2078, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2079, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2080, %r2078, %r2079;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2083, %r2075, %r2080;
	// end inline asm
	shr.u32 	%r2088, %r2066, 8;
	// begin inline asm
	lop3.b32 %r2086, %r811, %r2088, %r2067, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2090, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2091, %r2067, %r2090;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2094, %r2086, %r2091;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2097, %r822, %r2088, %r2078, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2101, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2102, %r2078, %r2101;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2105, %r2097, %r2102;
	// end inline asm
	// begin inline asm
	mov.b32 %r2113, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r2124, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r2112, %r16264, -2004318072;
	// begin inline asm
	lop3.b32 %r2110, %r811, %r2112, %r2113, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2114, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2115, %r2113, %r2114;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2118, %r2110, %r2115;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2121, %r822, %r2112, %r2124, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2125, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2126, %r2124, %r2125;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2129, %r2121, %r2126;
	// end inline asm
	shr.u32 	%r2134, %r2112, 8;
	// begin inline asm
	lop3.b32 %r2132, %r811, %r2134, %r2113, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2136, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2137, %r2113, %r2136;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2140, %r2132, %r2137;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2143, %r822, %r2134, %r2124, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2147, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2148, %r2124, %r2147;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2151, %r2143, %r2148;
	// end inline asm
	// begin inline asm
	mov.b32 %r2159, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r2170, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r2158, %r16265, -2004318072;
	// begin inline asm
	lop3.b32 %r2156, %r811, %r2158, %r2159, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2160, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2161, %r2159, %r2160;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2164, %r2156, %r2161;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2167, %r822, %r2158, %r2170, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2171, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2172, %r2170, %r2171;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2175, %r2167, %r2172;
	// end inline asm
	shr.u32 	%r2180, %r2158, 8;
	// begin inline asm
	lop3.b32 %r2178, %r811, %r2180, %r2159, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2182, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2183, %r2159, %r2182;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2186, %r2178, %r2183;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2189, %r822, %r2180, %r2170, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2193, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2194, %r2170, %r2193;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2197, %r2189, %r2194;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2200, %r294;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2202, %r2200, %r1842, %r1704;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2206, %r294;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2208, %r2206, %r1853, %r1708;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2212, %r294;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2214, %r2212, %r1864, %r1712;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2218, %r294;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2220, %r2218, %r1875, %r1716;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2224, %r294;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2226, %r2224, %r1888, %r1720;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2230, %r294;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2232, %r2230, %r1899, %r1724;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2236, %r294;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2238, %r2236, %r1910, %r1728;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2242, %r294;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2244, %r2242, %r1921, %r1732;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2248, %r294;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2250, %r2248, %r1934, %r1736;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2254, %r294;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2256, %r2254, %r1945, %r1740;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2260, %r294;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2262, %r2260, %r1956, %r1744;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2266, %r294;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2268, %r2266, %r1967, %r1748;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2272, %r294;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2274, %r2272, %r1980, %r1752;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2278, %r294;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2280, %r2278, %r1991, %r1756;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2284, %r294;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2286, %r2284, %r2002, %r1760;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2290, %r294;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2292, %r2290, %r2013, %r1764;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2296, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2298, %r2296, %r2026, %r1768;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2302, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2304, %r2302, %r2037, %r1772;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2308, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2310, %r2308, %r2048, %r1776;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2314, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2316, %r2314, %r2059, %r1780;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2320, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2322, %r2320, %r2072, %r1784;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2326, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2328, %r2326, %r2083, %r1788;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2332, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2334, %r2332, %r2094, %r1792;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2338, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2340, %r2338, %r2105, %r1796;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2344, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2346, %r2344, %r2118, %r1800;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2350, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2352, %r2350, %r2129, %r1804;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2356, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2358, %r2356, %r2140, %r1808;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2362, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2364, %r2362, %r2151, %r1812;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2368, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2370, %r2368, %r2164, %r1816;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2374, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2376, %r2374, %r2175, %r1820;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2380, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2382, %r2380, %r2186, %r1824;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2386, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2388, %r2386, %r2197, %r1828;
	// end inline asm
	// begin inline asm
	mov.b32 %r2397, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r2408, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r2396, %r16254, -2004318072;
	// begin inline asm
	lop3.b32 %r2394, %r811, %r2396, %r2397, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2398, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2399, %r2397, %r2398;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2402, %r2394, %r2399;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2405, %r822, %r2396, %r2408, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2409, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2410, %r2408, %r2409;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2413, %r2405, %r2410;
	// end inline asm
	shr.u32 	%r2418, %r2396, 8;
	// begin inline asm
	lop3.b32 %r2416, %r811, %r2418, %r2397, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2420, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2421, %r2397, %r2420;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2424, %r2416, %r2421;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2427, %r822, %r2418, %r2408, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2431, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2432, %r2408, %r2431;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2435, %r2427, %r2432;
	// end inline asm
	// begin inline asm
	mov.b32 %r2443, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r2454, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r2442, %r16255, -2004318072;
	// begin inline asm
	lop3.b32 %r2440, %r811, %r2442, %r2443, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2444, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2445, %r2443, %r2444;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2448, %r2440, %r2445;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2451, %r822, %r2442, %r2454, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2455, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2456, %r2454, %r2455;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2459, %r2451, %r2456;
	// end inline asm
	shr.u32 	%r2464, %r2442, 8;
	// begin inline asm
	lop3.b32 %r2462, %r811, %r2464, %r2443, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2466, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2467, %r2443, %r2466;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2470, %r2462, %r2467;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2473, %r822, %r2464, %r2454, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2477, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2478, %r2454, %r2477;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2481, %r2473, %r2478;
	// end inline asm
	// begin inline asm
	mov.b32 %r2489, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r2500, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r2488, %r16256, -2004318072;
	// begin inline asm
	lop3.b32 %r2486, %r811, %r2488, %r2489, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2490, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2491, %r2489, %r2490;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2494, %r2486, %r2491;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2497, %r822, %r2488, %r2500, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2501, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2502, %r2500, %r2501;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2505, %r2497, %r2502;
	// end inline asm
	shr.u32 	%r2510, %r2488, 8;
	// begin inline asm
	lop3.b32 %r2508, %r811, %r2510, %r2489, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2512, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2513, %r2489, %r2512;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2516, %r2508, %r2513;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2519, %r822, %r2510, %r2500, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2523, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2524, %r2500, %r2523;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2527, %r2519, %r2524;
	// end inline asm
	// begin inline asm
	mov.b32 %r2535, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r2546, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r2534, %r16257, -2004318072;
	// begin inline asm
	lop3.b32 %r2532, %r811, %r2534, %r2535, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2536, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2537, %r2535, %r2536;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2540, %r2532, %r2537;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2543, %r822, %r2534, %r2546, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2547, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2548, %r2546, %r2547;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2551, %r2543, %r2548;
	// end inline asm
	shr.u32 	%r2556, %r2534, 8;
	// begin inline asm
	lop3.b32 %r2554, %r811, %r2556, %r2535, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2558, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2559, %r2535, %r2558;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2562, %r2554, %r2559;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2565, %r822, %r2556, %r2546, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2569, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2570, %r2546, %r2569;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2573, %r2565, %r2570;
	// end inline asm
	// begin inline asm
	mov.b32 %r2581, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r2592, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r2580, %r16266, -2004318072;
	// begin inline asm
	lop3.b32 %r2578, %r811, %r2580, %r2581, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2582, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2583, %r2581, %r2582;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2586, %r2578, %r2583;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2589, %r822, %r2580, %r2592, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2593, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2594, %r2592, %r2593;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2597, %r2589, %r2594;
	// end inline asm
	shr.u32 	%r2602, %r2580, 8;
	// begin inline asm
	lop3.b32 %r2600, %r811, %r2602, %r2581, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2604, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2605, %r2581, %r2604;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2608, %r2600, %r2605;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2611, %r822, %r2602, %r2592, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2615, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2616, %r2592, %r2615;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2619, %r2611, %r2616;
	// end inline asm
	// begin inline asm
	mov.b32 %r2627, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r2638, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r2626, %r16267, -2004318072;
	// begin inline asm
	lop3.b32 %r2624, %r811, %r2626, %r2627, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2628, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2629, %r2627, %r2628;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2632, %r2624, %r2629;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2635, %r822, %r2626, %r2638, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2639, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2640, %r2638, %r2639;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2643, %r2635, %r2640;
	// end inline asm
	shr.u32 	%r2648, %r2626, 8;
	// begin inline asm
	lop3.b32 %r2646, %r811, %r2648, %r2627, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2650, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2651, %r2627, %r2650;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2654, %r2646, %r2651;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2657, %r822, %r2648, %r2638, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2661, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2662, %r2638, %r2661;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2665, %r2657, %r2662;
	// end inline asm
	// begin inline asm
	mov.b32 %r2673, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r2684, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r2672, %r16268, -2004318072;
	// begin inline asm
	lop3.b32 %r2670, %r811, %r2672, %r2673, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2674, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2675, %r2673, %r2674;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2678, %r2670, %r2675;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2681, %r822, %r2672, %r2684, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2685, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2686, %r2684, %r2685;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2689, %r2681, %r2686;
	// end inline asm
	shr.u32 	%r2694, %r2672, 8;
	// begin inline asm
	lop3.b32 %r2692, %r811, %r2694, %r2673, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2696, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2697, %r2673, %r2696;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2700, %r2692, %r2697;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2703, %r822, %r2694, %r2684, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2707, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2708, %r2684, %r2707;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2711, %r2703, %r2708;
	// end inline asm
	// begin inline asm
	mov.b32 %r2719, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r2730, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r2718, %r16269, -2004318072;
	// begin inline asm
	lop3.b32 %r2716, %r811, %r2718, %r2719, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2720, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2721, %r2719, %r2720;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2724, %r2716, %r2721;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2727, %r822, %r2718, %r2730, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2731, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2732, %r2730, %r2731;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2735, %r2727, %r2732;
	// end inline asm
	shr.u32 	%r2740, %r2718, 8;
	// begin inline asm
	lop3.b32 %r2738, %r811, %r2740, %r2719, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2742, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2743, %r2719, %r2742;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2746, %r2738, %r2743;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2749, %r822, %r2740, %r2730, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2753, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2754, %r2730, %r2753;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2757, %r2749, %r2754;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2895, %r330, %r2402, %r2202;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2892, %r330, %r2413, %r2208;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2904, %r330, %r2424, %r2214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2901, %r330, %r2435, %r2220;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2913, %r330, %r2448, %r2226;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2910, %r330, %r2459, %r2232;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2922, %r330, %r2470, %r2238;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2919, %r330, %r2481, %r2244;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2931, %r330, %r2494, %r2250;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2928, %r330, %r2505, %r2256;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2940, %r330, %r2516, %r2262;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2937, %r330, %r2527, %r2268;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2949, %r330, %r2540, %r2274;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2946, %r330, %r2551, %r2280;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2958, %r330, %r2562, %r2286;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2955, %r330, %r2573, %r2292;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2967, %r348, %r2586, %r2298;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2964, %r348, %r2597, %r2304;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2976, %r348, %r2608, %r2310;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2973, %r348, %r2619, %r2316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2985, %r348, %r2632, %r2322;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2982, %r348, %r2643, %r2328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2994, %r348, %r2654, %r2334;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2991, %r348, %r2665, %r2340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3003, %r348, %r2678, %r2346;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3000, %r348, %r2689, %r2352;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3012, %r348, %r2700, %r2358;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3009, %r348, %r2711, %r2364;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3021, %r348, %r2724, %r2370;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3018, %r348, %r2735, %r2376;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3030, %r348, %r2746, %r2382;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3027, %r348, %r2757, %r2388;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2888, %r393;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2890, %r2888, %r2892;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2893, %r387, %r2895, %r2890;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2897, %r393;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2899, %r2897, %r2901;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2902, %r387, %r2904, %r2899;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2906, %r393;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2908, %r2906, %r2910;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2911, %r387, %r2913, %r2908;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2915, %r393;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2917, %r2915, %r2919;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2920, %r387, %r2922, %r2917;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2924, %r393;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2926, %r2924, %r2928;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2929, %r387, %r2931, %r2926;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2933, %r393;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2935, %r2933, %r2937;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2938, %r387, %r2940, %r2935;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2942, %r393;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2944, %r2942, %r2946;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2947, %r387, %r2949, %r2944;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2951, %r393;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2953, %r2951, %r2955;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2956, %r387, %r2958, %r2953;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2960, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2962, %r2960, %r2964;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2965, %r390, %r2967, %r2962;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2969, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2971, %r2969, %r2973;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2974, %r390, %r2976, %r2971;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2978, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2980, %r2978, %r2982;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2983, %r390, %r2985, %r2980;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2987, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2989, %r2987, %r2991;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2992, %r390, %r2994, %r2989;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2996, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2998, %r2996, %r3000;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3001, %r390, %r3003, %r2998;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3005, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3007, %r3005, %r3009;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3010, %r390, %r3012, %r3007;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3014, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3016, %r3014, %r3018;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3019, %r390, %r3021, %r3016;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3023, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3025, %r3023, %r3027;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3028, %r390, %r3030, %r3025;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3032, %r393, %r2895;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3035, %r387, %r2892, %r3032;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3039, %r393, %r2904;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3042, %r387, %r2901, %r3039;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3046, %r393, %r2913;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3049, %r387, %r2910, %r3046;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3053, %r393, %r2922;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3056, %r387, %r2919, %r3053;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3060, %r393, %r2931;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3063, %r387, %r2928, %r3060;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3067, %r393, %r2940;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3070, %r387, %r2937, %r3067;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3074, %r393, %r2949;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3077, %r387, %r2946, %r3074;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3081, %r393, %r2958;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3084, %r387, %r2955, %r3081;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3088, %r396, %r2967;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3091, %r390, %r2964, %r3088;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3095, %r396, %r2976;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3098, %r390, %r2973, %r3095;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3102, %r396, %r2985;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3105, %r390, %r2982, %r3102;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3109, %r396, %r2994;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3112, %r390, %r2991, %r3109;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3116, %r396, %r3003;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3119, %r390, %r3000, %r3116;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3123, %r396, %r3012;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3126, %r390, %r3009, %r3123;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3130, %r396, %r3021;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3133, %r390, %r3018, %r3130;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3137, %r396, %r3030;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3140, %r390, %r3027, %r3137;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3311, %r3308}, {%r454, %r460, %r457, %r463}, {%r2893, %r3035}, {%r3152, %r3152};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3320, %r3317}, {%r454, %r460, %r457, %r463}, {%r2902, %r3042}, {%r3152, %r3152};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3329, %r3326}, {%r454, %r460, %r457, %r463}, {%r2911, %r3049}, {%r3152, %r3152};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3338, %r3335}, {%r454, %r460, %r457, %r463}, {%r2920, %r3056}, {%r3152, %r3152};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3347, %r3344}, {%r454, %r460, %r457, %r463}, {%r2929, %r3063}, {%r3152, %r3152};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3356, %r3353}, {%r454, %r460, %r457, %r463}, {%r2938, %r3070}, {%r3152, %r3152};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3365, %r3362}, {%r454, %r460, %r457, %r463}, {%r2947, %r3077}, {%r3152, %r3152};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3374, %r3371}, {%r454, %r460, %r457, %r463}, {%r2956, %r3084}, {%r3152, %r3152};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3383, %r3380}, {%r454, %r460, %r457, %r463}, {%r2965, %r3091}, {%r3152, %r3152};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3392, %r3389}, {%r454, %r460, %r457, %r463}, {%r2974, %r3098}, {%r3152, %r3152};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3401, %r3398}, {%r454, %r460, %r457, %r463}, {%r2983, %r3105}, {%r3152, %r3152};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3410, %r3407}, {%r454, %r460, %r457, %r463}, {%r2992, %r3112}, {%r3152, %r3152};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3419, %r3416}, {%r454, %r460, %r457, %r463}, {%r3001, %r3119}, {%r3152, %r3152};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3428, %r3425}, {%r454, %r460, %r457, %r463}, {%r3010, %r3126}, {%r3152, %r3152};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3437, %r3434}, {%r454, %r460, %r457, %r463}, {%r3019, %r3133}, {%r3152, %r3152};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3446, %r3443}, {%r454, %r460, %r457, %r463}, {%r3028, %r3140}, {%r3152, %r3152};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3304, %r507;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3306, %r3304, %r3308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3309, %r504, %r3311, %r3306;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3313, %r507;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3315, %r3313, %r3317;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3318, %r504, %r3320, %r3315;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3322, %r507;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3324, %r3322, %r3326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3327, %r504, %r3329, %r3324;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3331, %r507;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3333, %r3331, %r3335;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3336, %r504, %r3338, %r3333;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3340, %r507;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3342, %r3340, %r3344;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3345, %r504, %r3347, %r3342;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3349, %r507;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3351, %r3349, %r3353;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3354, %r504, %r3356, %r3351;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3358, %r507;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3360, %r3358, %r3362;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3363, %r504, %r3365, %r3360;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3367, %r507;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3369, %r3367, %r3371;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3372, %r504, %r3374, %r3369;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3376, %r507;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3378, %r3376, %r3380;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3381, %r504, %r3383, %r3378;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3385, %r507;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3387, %r3385, %r3389;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3390, %r504, %r3392, %r3387;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3394, %r507;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3396, %r3394, %r3398;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3399, %r504, %r3401, %r3396;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3403, %r507;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3405, %r3403, %r3407;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3408, %r504, %r3410, %r3405;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3412, %r507;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3414, %r3412, %r3416;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3417, %r504, %r3419, %r3414;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3421, %r507;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3423, %r3421, %r3425;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3426, %r504, %r3428, %r3423;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3430, %r507;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3432, %r3430, %r3434;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3435, %r504, %r3437, %r3432;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3439, %r507;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3441, %r3439, %r3443;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3444, %r504, %r3446, %r3441;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3448, %r507, %r3311;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3451, %r504, %r3308, %r3448;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3455, %r507, %r3320;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3458, %r504, %r3317, %r3455;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3462, %r507, %r3329;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3465, %r504, %r3326, %r3462;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3469, %r507, %r3338;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3472, %r504, %r3335, %r3469;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3476, %r507, %r3347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3479, %r504, %r3344, %r3476;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3483, %r507, %r3356;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3486, %r504, %r3353, %r3483;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3490, %r507, %r3365;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3493, %r504, %r3362, %r3490;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3497, %r507, %r3374;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3500, %r504, %r3371, %r3497;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3504, %r507, %r3383;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3507, %r504, %r3380, %r3504;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3511, %r507, %r3392;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3514, %r504, %r3389, %r3511;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3518, %r507, %r3401;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3521, %r504, %r3398, %r3518;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3525, %r507, %r3410;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3528, %r504, %r3407, %r3525;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3532, %r507, %r3419;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3535, %r504, %r3416, %r3532;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3539, %r507, %r3428;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3542, %r504, %r3425, %r3539;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3546, %r507, %r3437;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3549, %r504, %r3434, %r3546;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3553, %r507, %r3446;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3556, %r504, %r3443, %r3553;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3849, %r3852}, {%r542, %r548, %r545, %r551}, {%r3309, %r3451}, {%r3152, %r3152};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3855, %r3858}, {%r542, %r548, %r545, %r551}, {%r3318, %r3458}, {%r3152, %r3152};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3861, %r3864}, {%r542, %r548, %r545, %r551}, {%r3327, %r3465}, {%r3152, %r3152};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3867, %r3870}, {%r542, %r548, %r545, %r551}, {%r3336, %r3472}, {%r3152, %r3152};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3873, %r3876}, {%r542, %r548, %r545, %r551}, {%r3345, %r3479}, {%r3152, %r3152};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3879, %r3882}, {%r542, %r548, %r545, %r551}, {%r3354, %r3486}, {%r3152, %r3152};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3885, %r3888}, {%r542, %r548, %r545, %r551}, {%r3363, %r3493}, {%r3152, %r3152};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3891, %r3894}, {%r542, %r548, %r545, %r551}, {%r3372, %r3500}, {%r3152, %r3152};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3850, %r3853}, {%r542, %r548, %r545, %r551}, {%r3381, %r3507}, {%r3152, %r3152};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3856, %r3859}, {%r542, %r548, %r545, %r551}, {%r3390, %r3514}, {%r3152, %r3152};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3862, %r3865}, {%r542, %r548, %r545, %r551}, {%r3399, %r3521}, {%r3152, %r3152};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3868, %r3871}, {%r542, %r548, %r545, %r551}, {%r3408, %r3528}, {%r3152, %r3152};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3874, %r3877}, {%r542, %r548, %r545, %r551}, {%r3417, %r3535}, {%r3152, %r3152};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3880, %r3883}, {%r542, %r548, %r545, %r551}, {%r3426, %r3542}, {%r3152, %r3152};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3886, %r3889}, {%r542, %r548, %r545, %r551}, {%r3435, %r3549}, {%r3152, %r3152};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3892, %r3895}, {%r542, %r548, %r545, %r551}, {%r3444, %r3556}, {%r3152, %r3152};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3848, %r3849, %r3850;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3851, %r3852, %r3853;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3854, %r3855, %r3856;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3857, %r3858, %r3859;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3860, %r3861, %r3862;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3863, %r3864, %r3865;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3866, %r3867, %r3868;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3869, %r3870, %r3871;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3872, %r3873, %r3874;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3875, %r3876, %r3877;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3878, %r3879, %r3880;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3881, %r3882, %r3883;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3884, %r3885, %r3886;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3887, %r3888, %r3889;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3890, %r3891, %r3892;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3893, %r3894, %r3895;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3896, %r3849, %r3850;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3899, %r3852, %r3853;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3902, %r3855, %r3856;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3905, %r3858, %r3859;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3908, %r3861, %r3862;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3911, %r3864, %r3865;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3914, %r3867, %r3868;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3917, %r3870, %r3871;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3920, %r3873, %r3874;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3923, %r3876, %r3877;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3926, %r3879, %r3880;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3929, %r3882, %r3883;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3932, %r3885, %r3886;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3935, %r3888, %r3889;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3938, %r3891, %r3892;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3941, %r3894, %r3895;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3944, %r128, %r3848;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3947, %r128, %r3851;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3950, %r128, %r3854;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3953, %r128, %r3857;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3956, %r128, %r3860;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3959, %r128, %r3863;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3962, %r128, %r3866;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3965, %r128, %r3869;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3968, %r128, %r3872;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3971, %r128, %r3875;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3974, %r128, %r3878;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3977, %r128, %r3881;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3980, %r128, %r3884;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3983, %r128, %r3887;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3986, %r128, %r3890;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3989, %r128, %r3893;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3992, %r129, %r3896;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3995, %r129, %r3899;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3998, %r129, %r3902;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4001, %r129, %r3905;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4004, %r129, %r3908;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4007, %r129, %r3911;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4010, %r129, %r3914;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4013, %r129, %r3917;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4016, %r129, %r3920;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4019, %r129, %r3923;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4022, %r129, %r3926;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4025, %r129, %r3929;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4028, %r129, %r3932;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4031, %r129, %r3935;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4034, %r129, %r3938;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4037, %r129, %r3941;
	// end inline asm
	mov.u16 	%rs412, -14592;
	// begin inline asm
	mov.b32 %r4040, {%rs412, %rs412};
	// end inline asm
	mov.u16 	%rs414, 18176;
	// begin inline asm
	mov.b32 %r4041, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4042, %r3944, %r4040;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4045, %r4042, %r4041;
	// end inline asm
	// begin inline asm
	mov.b32 %r4048, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4049, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4050, %r3947, %r4048;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4053, %r4050, %r4049;
	// end inline asm
	// begin inline asm
	mov.b32 %r4056, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4057, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4058, %r3950, %r4056;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4061, %r4058, %r4057;
	// end inline asm
	// begin inline asm
	mov.b32 %r4064, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4065, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4066, %r3953, %r4064;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4069, %r4066, %r4065;
	// end inline asm
	// begin inline asm
	mov.b32 %r4072, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4073, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4074, %r3956, %r4072;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4077, %r4074, %r4073;
	// end inline asm
	// begin inline asm
	mov.b32 %r4080, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4081, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4082, %r3959, %r4080;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4085, %r4082, %r4081;
	// end inline asm
	// begin inline asm
	mov.b32 %r4088, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4089, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4090, %r3962, %r4088;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4093, %r4090, %r4089;
	// end inline asm
	// begin inline asm
	mov.b32 %r4096, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4097, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4098, %r3965, %r4096;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4101, %r4098, %r4097;
	// end inline asm
	// begin inline asm
	mov.b32 %r4104, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4105, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4106, %r3968, %r4104;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4109, %r4106, %r4105;
	// end inline asm
	// begin inline asm
	mov.b32 %r4112, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4113, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4114, %r3971, %r4112;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4117, %r4114, %r4113;
	// end inline asm
	// begin inline asm
	mov.b32 %r4120, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4121, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4122, %r3974, %r4120;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4125, %r4122, %r4121;
	// end inline asm
	// begin inline asm
	mov.b32 %r4128, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4129, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4130, %r3977, %r4128;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4133, %r4130, %r4129;
	// end inline asm
	// begin inline asm
	mov.b32 %r4136, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4137, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4138, %r3980, %r4136;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4141, %r4138, %r4137;
	// end inline asm
	// begin inline asm
	mov.b32 %r4144, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4145, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4146, %r3983, %r4144;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4149, %r4146, %r4145;
	// end inline asm
	// begin inline asm
	mov.b32 %r4152, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4153, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4154, %r3986, %r4152;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4157, %r4154, %r4153;
	// end inline asm
	// begin inline asm
	mov.b32 %r4160, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4161, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4162, %r3989, %r4160;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4165, %r4162, %r4161;
	// end inline asm
	// begin inline asm
	mov.b32 %r4168, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4169, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4170, %r3992, %r4168;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4173, %r4170, %r4169;
	// end inline asm
	// begin inline asm
	mov.b32 %r4176, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4177, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4178, %r3995, %r4176;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4181, %r4178, %r4177;
	// end inline asm
	// begin inline asm
	mov.b32 %r4184, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4185, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4186, %r3998, %r4184;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4189, %r4186, %r4185;
	// end inline asm
	// begin inline asm
	mov.b32 %r4192, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4193, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4194, %r4001, %r4192;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4197, %r4194, %r4193;
	// end inline asm
	// begin inline asm
	mov.b32 %r4200, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4201, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4202, %r4004, %r4200;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4205, %r4202, %r4201;
	// end inline asm
	// begin inline asm
	mov.b32 %r4208, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4209, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4210, %r4007, %r4208;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4213, %r4210, %r4209;
	// end inline asm
	// begin inline asm
	mov.b32 %r4216, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4217, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4218, %r4010, %r4216;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4221, %r4218, %r4217;
	// end inline asm
	// begin inline asm
	mov.b32 %r4224, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4225, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4226, %r4013, %r4224;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4229, %r4226, %r4225;
	// end inline asm
	// begin inline asm
	mov.b32 %r4232, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4233, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4234, %r4016, %r4232;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4237, %r4234, %r4233;
	// end inline asm
	// begin inline asm
	mov.b32 %r4240, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4241, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4242, %r4019, %r4240;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4245, %r4242, %r4241;
	// end inline asm
	// begin inline asm
	mov.b32 %r4248, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4249, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4250, %r4022, %r4248;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4253, %r4250, %r4249;
	// end inline asm
	// begin inline asm
	mov.b32 %r4256, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4257, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4258, %r4025, %r4256;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4261, %r4258, %r4257;
	// end inline asm
	// begin inline asm
	mov.b32 %r4264, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4265, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4266, %r4028, %r4264;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4269, %r4266, %r4265;
	// end inline asm
	// begin inline asm
	mov.b32 %r4272, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4273, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4274, %r4031, %r4272;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4277, %r4274, %r4273;
	// end inline asm
	// begin inline asm
	mov.b32 %r4280, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4281, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4282, %r4034, %r4280;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4285, %r4282, %r4281;
	// end inline asm
	// begin inline asm
	mov.b32 %r4288, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4289, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4290, %r4037, %r4288;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4293, %r4290, %r4289;
	// end inline asm
	// begin inline asm
	mov.b32 %r4299, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r4297, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4298, %r4299, %r4297;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4301, %r4045, %r4298;
	// end inline asm
	// begin inline asm
	mov.b32 %r4304, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4305, %r4299, %r4304;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4308, %r4053, %r4305;
	// end inline asm
	// begin inline asm
	mov.b32 %r4311, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4312, %r4299, %r4311;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4315, %r4061, %r4312;
	// end inline asm
	// begin inline asm
	mov.b32 %r4318, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4319, %r4299, %r4318;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4322, %r4069, %r4319;
	// end inline asm
	mov.u32 	%r4328, 25152;
	// begin inline asm
	prmt.b32 %r4325, %r4301, %r4315, %r4328;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4329, %r4308, %r4322, %r4328;
	// end inline asm
	shl.b32 	%r4336, %r4329, 4;
	mov.u32 	%r4334, 252645135;
	// begin inline asm
	lop3.b32 %r4333, %r4334, %r4325, %r4336, 202;
	// end inline asm
	xor.b32  	%r16113, %r4333, -2004318072;
	// begin inline asm
	mov.b32 %r4340, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r4338, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4339, %r4340, %r4338;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4342, %r4077, %r4339;
	// end inline asm
	// begin inline asm
	mov.b32 %r4345, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4346, %r4340, %r4345;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4349, %r4085, %r4346;
	// end inline asm
	// begin inline asm
	mov.b32 %r4352, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4353, %r4340, %r4352;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4356, %r4093, %r4353;
	// end inline asm
	// begin inline asm
	mov.b32 %r4359, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4360, %r4340, %r4359;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4363, %r4101, %r4360;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4366, %r4342, %r4356, %r4328;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4370, %r4349, %r4363, %r4328;
	// end inline asm
	shl.b32 	%r4377, %r4370, 4;
	// begin inline asm
	lop3.b32 %r4374, %r4334, %r4366, %r4377, 202;
	// end inline asm
	xor.b32  	%r16114, %r4374, -2004318072;
	// begin inline asm
	mov.b32 %r4381, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r4379, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4380, %r4381, %r4379;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4383, %r4109, %r4380;
	// end inline asm
	// begin inline asm
	mov.b32 %r4386, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4387, %r4381, %r4386;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4390, %r4117, %r4387;
	// end inline asm
	// begin inline asm
	mov.b32 %r4393, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4394, %r4381, %r4393;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4397, %r4125, %r4394;
	// end inline asm
	// begin inline asm
	mov.b32 %r4400, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4401, %r4381, %r4400;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4404, %r4133, %r4401;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4407, %r4383, %r4397, %r4328;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4411, %r4390, %r4404, %r4328;
	// end inline asm
	shl.b32 	%r4418, %r4411, 4;
	// begin inline asm
	lop3.b32 %r4415, %r4334, %r4407, %r4418, 202;
	// end inline asm
	xor.b32  	%r16115, %r4415, -2004318072;
	// begin inline asm
	mov.b32 %r4422, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r4420, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4421, %r4422, %r4420;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4424, %r4141, %r4421;
	// end inline asm
	// begin inline asm
	mov.b32 %r4427, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4428, %r4422, %r4427;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4431, %r4149, %r4428;
	// end inline asm
	// begin inline asm
	mov.b32 %r4434, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4435, %r4422, %r4434;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4438, %r4157, %r4435;
	// end inline asm
	// begin inline asm
	mov.b32 %r4441, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4442, %r4422, %r4441;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4445, %r4165, %r4442;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4448, %r4424, %r4438, %r4328;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4452, %r4431, %r4445, %r4328;
	// end inline asm
	shl.b32 	%r4459, %r4452, 4;
	// begin inline asm
	lop3.b32 %r4456, %r4334, %r4448, %r4459, 202;
	// end inline asm
	xor.b32  	%r16116, %r4456, -2004318072;
	// begin inline asm
	mov.b32 %r4463, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r4461, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4462, %r4463, %r4461;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4465, %r4173, %r4462;
	// end inline asm
	// begin inline asm
	mov.b32 %r4468, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4469, %r4463, %r4468;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4472, %r4181, %r4469;
	// end inline asm
	// begin inline asm
	mov.b32 %r4475, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4476, %r4463, %r4475;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4479, %r4189, %r4476;
	// end inline asm
	// begin inline asm
	mov.b32 %r4482, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4483, %r4463, %r4482;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4486, %r4197, %r4483;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4489, %r4465, %r4479, %r4328;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4493, %r4472, %r4486, %r4328;
	// end inline asm
	shl.b32 	%r4500, %r4493, 4;
	// begin inline asm
	lop3.b32 %r4497, %r4334, %r4489, %r4500, 202;
	// end inline asm
	xor.b32  	%r16117, %r4497, -2004318072;
	// begin inline asm
	mov.b32 %r4504, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r4502, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4503, %r4504, %r4502;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4506, %r4205, %r4503;
	// end inline asm
	// begin inline asm
	mov.b32 %r4509, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4510, %r4504, %r4509;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4513, %r4213, %r4510;
	// end inline asm
	// begin inline asm
	mov.b32 %r4516, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4517, %r4504, %r4516;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4520, %r4221, %r4517;
	// end inline asm
	// begin inline asm
	mov.b32 %r4523, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4524, %r4504, %r4523;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4527, %r4229, %r4524;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4530, %r4506, %r4520, %r4328;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4534, %r4513, %r4527, %r4328;
	// end inline asm
	shl.b32 	%r4541, %r4534, 4;
	// begin inline asm
	lop3.b32 %r4538, %r4334, %r4530, %r4541, 202;
	// end inline asm
	xor.b32  	%r16118, %r4538, -2004318072;
	// begin inline asm
	mov.b32 %r4545, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r4543, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4544, %r4545, %r4543;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4547, %r4237, %r4544;
	// end inline asm
	// begin inline asm
	mov.b32 %r4550, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4551, %r4545, %r4550;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4554, %r4245, %r4551;
	// end inline asm
	// begin inline asm
	mov.b32 %r4557, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4558, %r4545, %r4557;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4561, %r4253, %r4558;
	// end inline asm
	// begin inline asm
	mov.b32 %r4564, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4565, %r4545, %r4564;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4568, %r4261, %r4565;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4571, %r4547, %r4561, %r4328;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4575, %r4554, %r4568, %r4328;
	// end inline asm
	shl.b32 	%r4582, %r4575, 4;
	// begin inline asm
	lop3.b32 %r4579, %r4334, %r4571, %r4582, 202;
	// end inline asm
	xor.b32  	%r16119, %r4579, -2004318072;
	// begin inline asm
	mov.b32 %r4586, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r4584, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4585, %r4586, %r4584;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4588, %r4269, %r4585;
	// end inline asm
	// begin inline asm
	mov.b32 %r4591, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4592, %r4586, %r4591;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4595, %r4277, %r4592;
	// end inline asm
	// begin inline asm
	mov.b32 %r4598, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4599, %r4586, %r4598;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4602, %r4285, %r4599;
	// end inline asm
	// begin inline asm
	mov.b32 %r4605, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4606, %r4586, %r4605;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4609, %r4293, %r4606;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4612, %r4588, %r4602, %r4328;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4616, %r4595, %r4609, %r4328;
	// end inline asm
	shl.b32 	%r4623, %r4616, 4;
	// begin inline asm
	lop3.b32 %r4620, %r4334, %r4612, %r4623, 202;
	// end inline asm
	xor.b32  	%r16120, %r4620, -2004318072;
	setp.eq.s32 	%p302, %r16277, 0;
	selp.b32 	%r16121, 0, 4161, %p302;
	add.s32 	%r16122, %r86, %r16121;
	mul.wide.u32 	%rd105, %r16122, 4;
	add.s64 	%rd106, %rd44, %rd105;
	st.shared.u32 	[%rd106], %r16113;
	add.s32 	%r16123, %r87, %r16121;
	mul.wide.u32 	%rd107, %r16123, 4;
	add.s64 	%rd108, %rd44, %rd107;
	st.shared.u32 	[%rd108], %r16114;
	add.s32 	%r16124, %r88, %r16121;
	mul.wide.u32 	%rd109, %r16124, 4;
	add.s64 	%rd110, %rd44, %rd109;
	st.shared.u32 	[%rd110], %r16115;
	add.s32 	%r16125, %r89, %r16121;
	mul.wide.u32 	%rd111, %r16125, 4;
	add.s64 	%rd112, %rd44, %rd111;
	st.shared.u32 	[%rd112], %r16116;
	add.s32 	%r16126, %r90, %r16121;
	mul.wide.u32 	%rd113, %r16126, 4;
	add.s64 	%rd114, %rd44, %rd113;
	st.shared.u32 	[%rd114], %r16117;
	add.s32 	%r16127, %r91, %r16121;
	mul.wide.u32 	%rd115, %r16127, 4;
	add.s64 	%rd116, %rd44, %rd115;
	st.shared.u32 	[%rd116], %r16118;
	add.s32 	%r16128, %r92, %r16121;
	mul.wide.u32 	%rd117, %r16128, 4;
	add.s64 	%rd118, %rd44, %rd117;
	st.shared.u32 	[%rd118], %r16119;
	add.s32 	%r16129, %r93, %r16121;
	mul.wide.u32 	%rd119, %r16129, 4;
	add.s64 	%rd120, %rd44, %rd119;
	st.shared.u32 	[%rd120], %r16120;
	ld.shared.u32 	%r16246, [%rd90];
	ld.shared.u32 	%r16247, [%rd92];
	ld.shared.u32 	%r16248, [%rd94];
	ld.shared.u32 	%r16249, [%rd96];
	ld.shared.u32 	%r16258, [%rd98];
	ld.shared.u32 	%r16259, [%rd100];
	ld.shared.u32 	%r16260, [%rd102];
	ld.shared.u32 	%r16261, [%rd104];
	// begin inline asm
	mov.b32 %r4629, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r4640, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r4628, %r16246, -2004318072;
	// begin inline asm
	lop3.b32 %r4626, %r811, %r4628, %r4629, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4630, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4631, %r4629, %r4630;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4634, %r4626, %r4631;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4637, %r822, %r4628, %r4640, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4641, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4642, %r4640, %r4641;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4645, %r4637, %r4642;
	// end inline asm
	shr.u32 	%r4650, %r4628, 8;
	// begin inline asm
	lop3.b32 %r4648, %r811, %r4650, %r4629, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4652, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4653, %r4629, %r4652;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4656, %r4648, %r4653;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4659, %r822, %r4650, %r4640, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4663, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4664, %r4640, %r4663;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4667, %r4659, %r4664;
	// end inline asm
	// begin inline asm
	mov.b32 %r4675, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r4686, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r4674, %r16247, -2004318072;
	// begin inline asm
	lop3.b32 %r4672, %r811, %r4674, %r4675, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4676, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4677, %r4675, %r4676;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4680, %r4672, %r4677;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4683, %r822, %r4674, %r4686, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4687, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4688, %r4686, %r4687;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4691, %r4683, %r4688;
	// end inline asm
	shr.u32 	%r4696, %r4674, 8;
	// begin inline asm
	lop3.b32 %r4694, %r811, %r4696, %r4675, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4698, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4699, %r4675, %r4698;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4702, %r4694, %r4699;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4705, %r822, %r4696, %r4686, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4709, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4710, %r4686, %r4709;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4713, %r4705, %r4710;
	// end inline asm
	// begin inline asm
	mov.b32 %r4721, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r4732, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r4720, %r16248, -2004318072;
	// begin inline asm
	lop3.b32 %r4718, %r811, %r4720, %r4721, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4722, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4723, %r4721, %r4722;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4726, %r4718, %r4723;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4729, %r822, %r4720, %r4732, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4733, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4734, %r4732, %r4733;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4737, %r4729, %r4734;
	// end inline asm
	shr.u32 	%r4742, %r4720, 8;
	// begin inline asm
	lop3.b32 %r4740, %r811, %r4742, %r4721, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4744, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4745, %r4721, %r4744;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4748, %r4740, %r4745;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4751, %r822, %r4742, %r4732, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4755, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4756, %r4732, %r4755;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4759, %r4751, %r4756;
	// end inline asm
	// begin inline asm
	mov.b32 %r4767, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r4778, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r4766, %r16249, -2004318072;
	// begin inline asm
	lop3.b32 %r4764, %r811, %r4766, %r4767, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4768, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4769, %r4767, %r4768;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4772, %r4764, %r4769;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4775, %r822, %r4766, %r4778, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4779, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4780, %r4778, %r4779;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4783, %r4775, %r4780;
	// end inline asm
	shr.u32 	%r4788, %r4766, 8;
	// begin inline asm
	lop3.b32 %r4786, %r811, %r4788, %r4767, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4790, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4791, %r4767, %r4790;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4794, %r4786, %r4791;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4797, %r822, %r4788, %r4778, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4801, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4802, %r4778, %r4801;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4805, %r4797, %r4802;
	// end inline asm
	// begin inline asm
	mov.b32 %r4813, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r4824, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r4812, %r16258, -2004318072;
	// begin inline asm
	lop3.b32 %r4810, %r811, %r4812, %r4813, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4814, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4815, %r4813, %r4814;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4818, %r4810, %r4815;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4821, %r822, %r4812, %r4824, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4825, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4826, %r4824, %r4825;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4829, %r4821, %r4826;
	// end inline asm
	shr.u32 	%r4834, %r4812, 8;
	// begin inline asm
	lop3.b32 %r4832, %r811, %r4834, %r4813, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4836, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4837, %r4813, %r4836;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4840, %r4832, %r4837;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4843, %r822, %r4834, %r4824, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4847, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4848, %r4824, %r4847;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4851, %r4843, %r4848;
	// end inline asm
	// begin inline asm
	mov.b32 %r4859, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r4870, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r4858, %r16259, -2004318072;
	// begin inline asm
	lop3.b32 %r4856, %r811, %r4858, %r4859, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4860, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4861, %r4859, %r4860;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4864, %r4856, %r4861;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4867, %r822, %r4858, %r4870, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4871, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4872, %r4870, %r4871;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4875, %r4867, %r4872;
	// end inline asm
	shr.u32 	%r4880, %r4858, 8;
	// begin inline asm
	lop3.b32 %r4878, %r811, %r4880, %r4859, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4882, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4883, %r4859, %r4882;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4886, %r4878, %r4883;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4889, %r822, %r4880, %r4870, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4893, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4894, %r4870, %r4893;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4897, %r4889, %r4894;
	// end inline asm
	// begin inline asm
	mov.b32 %r4905, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r4916, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r4904, %r16260, -2004318072;
	// begin inline asm
	lop3.b32 %r4902, %r811, %r4904, %r4905, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4906, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4907, %r4905, %r4906;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4910, %r4902, %r4907;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4913, %r822, %r4904, %r4916, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4917, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4918, %r4916, %r4917;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4921, %r4913, %r4918;
	// end inline asm
	shr.u32 	%r4926, %r4904, 8;
	// begin inline asm
	lop3.b32 %r4924, %r811, %r4926, %r4905, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4928, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4929, %r4905, %r4928;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4932, %r4924, %r4929;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4935, %r822, %r4926, %r4916, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4939, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4940, %r4916, %r4939;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4943, %r4935, %r4940;
	// end inline asm
	// begin inline asm
	mov.b32 %r4951, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r4962, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r4950, %r16261, -2004318072;
	// begin inline asm
	lop3.b32 %r4948, %r811, %r4950, %r4951, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4952, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4953, %r4951, %r4952;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4956, %r4948, %r4953;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4959, %r822, %r4950, %r4962, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4963, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4964, %r4962, %r4963;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4967, %r4959, %r4964;
	// end inline asm
	shr.u32 	%r4972, %r4950, 8;
	// begin inline asm
	lop3.b32 %r4970, %r811, %r4972, %r4951, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4974, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4975, %r4951, %r4974;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4978, %r4970, %r4975;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4981, %r822, %r4972, %r4962, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4985, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4986, %r4962, %r4985;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4989, %r4981, %r4986;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4992, %r366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4994, %r4992, %r4634;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4997, %r366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4999, %r4997, %r4645;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5002, %r366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5004, %r5002, %r4656;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5007, %r366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5009, %r5007, %r4667;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5012, %r366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5014, %r5012, %r4680;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5017, %r366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5019, %r5017, %r4691;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5022, %r366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5024, %r5022, %r4702;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5027, %r366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5029, %r5027, %r4713;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5032, %r366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5034, %r5032, %r4726;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5037, %r366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5039, %r5037, %r4737;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5042, %r366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5044, %r5042, %r4748;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5047, %r366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5049, %r5047, %r4759;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5052, %r366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5054, %r5052, %r4772;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5057, %r366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5059, %r5057, %r4783;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5062, %r366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5064, %r5062, %r4794;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5067, %r366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5069, %r5067, %r4805;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5072, %r384;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5074, %r5072, %r4818;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5077, %r384;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5079, %r5077, %r4829;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5082, %r384;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5084, %r5082, %r4840;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5087, %r384;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5089, %r5087, %r4851;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5092, %r384;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5094, %r5092, %r4864;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5097, %r384;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5099, %r5097, %r4875;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5102, %r384;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5104, %r5102, %r4886;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5107, %r384;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5109, %r5107, %r4897;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5112, %r384;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5114, %r5112, %r4910;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5117, %r384;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5119, %r5117, %r4921;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5122, %r384;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5124, %r5122, %r4932;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5127, %r384;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5129, %r5127, %r4943;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5132, %r384;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5134, %r5132, %r4956;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5137, %r384;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5139, %r5137, %r4967;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5142, %r384;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5144, %r5142, %r4978;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5147, %r384;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5149, %r5147, %r4989;
	// end inline asm
	// begin inline asm
	mov.b32 %r5157, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r5168, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5154, %r811, %r1836, %r5157, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5158, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5159, %r5157, %r5158;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5162, %r5154, %r5159;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5165, %r822, %r1836, %r5168, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5169, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5170, %r5168, %r5169;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5173, %r5165, %r5170;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5176, %r811, %r1858, %r5157, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5180, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5181, %r5157, %r5180;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5184, %r5176, %r5181;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5187, %r822, %r1858, %r5168, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5191, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5192, %r5168, %r5191;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5195, %r5187, %r5192;
	// end inline asm
	// begin inline asm
	mov.b32 %r5203, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r5214, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5200, %r811, %r1882, %r5203, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5204, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5205, %r5203, %r5204;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5208, %r5200, %r5205;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5211, %r822, %r1882, %r5214, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5215, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5216, %r5214, %r5215;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5219, %r5211, %r5216;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5222, %r811, %r1904, %r5203, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5226, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5227, %r5203, %r5226;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5230, %r5222, %r5227;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5233, %r822, %r1904, %r5214, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5237, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5238, %r5214, %r5237;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5241, %r5233, %r5238;
	// end inline asm
	// begin inline asm
	mov.b32 %r5249, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r5260, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5246, %r811, %r1928, %r5249, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5250, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5251, %r5249, %r5250;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5254, %r5246, %r5251;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5257, %r822, %r1928, %r5260, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5261, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5262, %r5260, %r5261;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5265, %r5257, %r5262;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5268, %r811, %r1950, %r5249, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5272, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5273, %r5249, %r5272;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5276, %r5268, %r5273;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5279, %r822, %r1950, %r5260, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5283, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5284, %r5260, %r5283;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5287, %r5279, %r5284;
	// end inline asm
	// begin inline asm
	mov.b32 %r5295, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r5306, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5292, %r811, %r1974, %r5295, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5296, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5297, %r5295, %r5296;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5300, %r5292, %r5297;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5303, %r822, %r1974, %r5306, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5307, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5308, %r5306, %r5307;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5311, %r5303, %r5308;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5314, %r811, %r1996, %r5295, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5318, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5319, %r5295, %r5318;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5322, %r5314, %r5319;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5325, %r822, %r1996, %r5306, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5329, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5330, %r5306, %r5329;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5333, %r5325, %r5330;
	// end inline asm
	// begin inline asm
	mov.b32 %r5341, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r5352, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5338, %r811, %r2020, %r5341, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5342, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5343, %r5341, %r5342;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5346, %r5338, %r5343;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5349, %r822, %r2020, %r5352, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5353, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5354, %r5352, %r5353;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5357, %r5349, %r5354;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5360, %r811, %r2042, %r5341, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5364, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5365, %r5341, %r5364;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5368, %r5360, %r5365;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5371, %r822, %r2042, %r5352, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5375, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5376, %r5352, %r5375;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5379, %r5371, %r5376;
	// end inline asm
	// begin inline asm
	mov.b32 %r5387, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r5398, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5384, %r811, %r2066, %r5387, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5388, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5389, %r5387, %r5388;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5392, %r5384, %r5389;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5395, %r822, %r2066, %r5398, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5399, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5400, %r5398, %r5399;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5403, %r5395, %r5400;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5406, %r811, %r2088, %r5387, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5410, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5411, %r5387, %r5410;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5414, %r5406, %r5411;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5417, %r822, %r2088, %r5398, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5421, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5422, %r5398, %r5421;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5425, %r5417, %r5422;
	// end inline asm
	// begin inline asm
	mov.b32 %r5433, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r5444, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5430, %r811, %r2112, %r5433, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5434, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5435, %r5433, %r5434;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5438, %r5430, %r5435;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5441, %r822, %r2112, %r5444, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5445, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5446, %r5444, %r5445;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5449, %r5441, %r5446;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5452, %r811, %r2134, %r5433, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5456, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5457, %r5433, %r5456;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5460, %r5452, %r5457;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5463, %r822, %r2134, %r5444, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5467, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5468, %r5444, %r5467;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5471, %r5463, %r5468;
	// end inline asm
	// begin inline asm
	mov.b32 %r5479, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r5490, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5476, %r811, %r2158, %r5479, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5480, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5481, %r5479, %r5480;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5484, %r5476, %r5481;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5487, %r822, %r2158, %r5490, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5491, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5492, %r5490, %r5491;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5495, %r5487, %r5492;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5498, %r811, %r2180, %r5479, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5502, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5503, %r5479, %r5502;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5506, %r5498, %r5503;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5509, %r822, %r2180, %r5490, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5513, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5514, %r5490, %r5513;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5517, %r5509, %r5514;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5520, %r258, %r5162, %r4994;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5524, %r258, %r5173, %r4999;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5528, %r258, %r5184, %r5004;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5532, %r258, %r5195, %r5009;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5536, %r258, %r5208, %r5014;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5540, %r258, %r5219, %r5019;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5544, %r258, %r5230, %r5024;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5548, %r258, %r5241, %r5029;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5552, %r258, %r5254, %r5034;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5556, %r258, %r5265, %r5039;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5560, %r258, %r5276, %r5044;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5564, %r258, %r5287, %r5049;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5568, %r258, %r5300, %r5054;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5572, %r258, %r5311, %r5059;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5576, %r258, %r5322, %r5064;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5580, %r258, %r5333, %r5069;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5584, %r276, %r5346, %r5074;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5588, %r276, %r5357, %r5079;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5592, %r276, %r5368, %r5084;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5596, %r276, %r5379, %r5089;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5600, %r276, %r5392, %r5094;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5604, %r276, %r5403, %r5099;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5608, %r276, %r5414, %r5104;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5612, %r276, %r5425, %r5109;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5616, %r276, %r5438, %r5114;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5620, %r276, %r5449, %r5119;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5624, %r276, %r5460, %r5124;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5628, %r276, %r5471, %r5129;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5632, %r276, %r5484, %r5134;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5636, %r276, %r5495, %r5139;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5640, %r276, %r5506, %r5144;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5644, %r276, %r5517, %r5149;
	// end inline asm
	// begin inline asm
	mov.b32 %r5653, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r5664, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5650, %r811, %r2396, %r5653, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5654, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5655, %r5653, %r5654;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5658, %r5650, %r5655;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5661, %r822, %r2396, %r5664, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5665, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5666, %r5664, %r5665;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5669, %r5661, %r5666;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5672, %r811, %r2418, %r5653, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5676, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5677, %r5653, %r5676;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5680, %r5672, %r5677;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5683, %r822, %r2418, %r5664, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5687, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5688, %r5664, %r5687;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5691, %r5683, %r5688;
	// end inline asm
	// begin inline asm
	mov.b32 %r5699, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r5710, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5696, %r811, %r2442, %r5699, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5700, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5701, %r5699, %r5700;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5704, %r5696, %r5701;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5707, %r822, %r2442, %r5710, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5711, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5712, %r5710, %r5711;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5715, %r5707, %r5712;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5718, %r811, %r2464, %r5699, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5722, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5723, %r5699, %r5722;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5726, %r5718, %r5723;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5729, %r822, %r2464, %r5710, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5733, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5734, %r5710, %r5733;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5737, %r5729, %r5734;
	// end inline asm
	// begin inline asm
	mov.b32 %r5745, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r5756, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5742, %r811, %r2488, %r5745, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5746, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5747, %r5745, %r5746;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5750, %r5742, %r5747;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5753, %r822, %r2488, %r5756, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5757, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5758, %r5756, %r5757;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5761, %r5753, %r5758;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5764, %r811, %r2510, %r5745, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5768, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5769, %r5745, %r5768;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5772, %r5764, %r5769;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5775, %r822, %r2510, %r5756, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5779, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5780, %r5756, %r5779;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5783, %r5775, %r5780;
	// end inline asm
	// begin inline asm
	mov.b32 %r5791, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r5802, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5788, %r811, %r2534, %r5791, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5792, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5793, %r5791, %r5792;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5796, %r5788, %r5793;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5799, %r822, %r2534, %r5802, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5803, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5804, %r5802, %r5803;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5807, %r5799, %r5804;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5810, %r811, %r2556, %r5791, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5814, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5815, %r5791, %r5814;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5818, %r5810, %r5815;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5821, %r822, %r2556, %r5802, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5825, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5826, %r5802, %r5825;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5829, %r5821, %r5826;
	// end inline asm
	// begin inline asm
	mov.b32 %r5837, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r5848, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5834, %r811, %r2580, %r5837, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5838, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5839, %r5837, %r5838;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5842, %r5834, %r5839;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5845, %r822, %r2580, %r5848, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5849, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5850, %r5848, %r5849;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5853, %r5845, %r5850;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5856, %r811, %r2602, %r5837, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5860, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5861, %r5837, %r5860;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5864, %r5856, %r5861;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5867, %r822, %r2602, %r5848, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5871, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5872, %r5848, %r5871;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5875, %r5867, %r5872;
	// end inline asm
	// begin inline asm
	mov.b32 %r5883, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r5894, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5880, %r811, %r2626, %r5883, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5884, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5885, %r5883, %r5884;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5888, %r5880, %r5885;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5891, %r822, %r2626, %r5894, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5895, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5896, %r5894, %r5895;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5899, %r5891, %r5896;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5902, %r811, %r2648, %r5883, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5906, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5907, %r5883, %r5906;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5910, %r5902, %r5907;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5913, %r822, %r2648, %r5894, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5917, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5918, %r5894, %r5917;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5921, %r5913, %r5918;
	// end inline asm
	// begin inline asm
	mov.b32 %r5929, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r5940, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5926, %r811, %r2672, %r5929, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5930, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5931, %r5929, %r5930;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5934, %r5926, %r5931;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5937, %r822, %r2672, %r5940, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5941, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5942, %r5940, %r5941;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5945, %r5937, %r5942;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5948, %r811, %r2694, %r5929, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5952, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5953, %r5929, %r5952;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5956, %r5948, %r5953;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5959, %r822, %r2694, %r5940, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5963, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5964, %r5940, %r5963;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5967, %r5959, %r5964;
	// end inline asm
	// begin inline asm
	mov.b32 %r5975, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r5986, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5972, %r811, %r2718, %r5975, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5976, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5977, %r5975, %r5976;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5980, %r5972, %r5977;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5983, %r822, %r2718, %r5986, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5987, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5988, %r5986, %r5987;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5991, %r5983, %r5988;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5994, %r811, %r2740, %r5975, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5998, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5999, %r5975, %r5998;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6002, %r5994, %r5999;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6005, %r822, %r2740, %r5986, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6009, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6010, %r5986, %r6009;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6013, %r6005, %r6010;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6016, %r294;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6018, %r6016, %r5658, %r5520;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6022, %r294;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6024, %r6022, %r5669, %r5524;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6028, %r294;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6030, %r6028, %r5680, %r5528;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6034, %r294;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6036, %r6034, %r5691, %r5532;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6040, %r294;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6042, %r6040, %r5704, %r5536;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6046, %r294;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6048, %r6046, %r5715, %r5540;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6052, %r294;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6054, %r6052, %r5726, %r5544;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6058, %r294;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6060, %r6058, %r5737, %r5548;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6064, %r294;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6066, %r6064, %r5750, %r5552;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6070, %r294;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6072, %r6070, %r5761, %r5556;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6076, %r294;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6078, %r6076, %r5772, %r5560;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6082, %r294;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6084, %r6082, %r5783, %r5564;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6088, %r294;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6090, %r6088, %r5796, %r5568;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6094, %r294;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6096, %r6094, %r5807, %r5572;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6100, %r294;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6102, %r6100, %r5818, %r5576;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6106, %r294;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6108, %r6106, %r5829, %r5580;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6112, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6114, %r6112, %r5842, %r5584;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6118, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6120, %r6118, %r5853, %r5588;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6124, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6126, %r6124, %r5864, %r5592;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6130, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6132, %r6130, %r5875, %r5596;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6136, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6138, %r6136, %r5888, %r5600;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6142, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6144, %r6142, %r5899, %r5604;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6148, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6150, %r6148, %r5910, %r5608;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6154, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6156, %r6154, %r5921, %r5612;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6160, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6162, %r6160, %r5934, %r5616;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6166, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6168, %r6166, %r5945, %r5620;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6172, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6174, %r6172, %r5956, %r5624;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6178, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6180, %r6178, %r5967, %r5628;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6184, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6186, %r6184, %r5980, %r5632;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6190, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6192, %r6190, %r5991, %r5636;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6196, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6198, %r6196, %r6002, %r5640;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6202, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6204, %r6202, %r6013, %r5644;
	// end inline asm
	// begin inline asm
	mov.b32 %r6213, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r6224, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6210, %r811, %r812, %r6213, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6214, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6215, %r6213, %r6214;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6218, %r6210, %r6215;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6221, %r822, %r812, %r6224, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6225, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6226, %r6224, %r6225;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6229, %r6221, %r6226;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6232, %r811, %r834, %r6213, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6236, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6237, %r6213, %r6236;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6240, %r6232, %r6237;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6243, %r822, %r834, %r6224, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6247, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6248, %r6224, %r6247;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6251, %r6243, %r6248;
	// end inline asm
	// begin inline asm
	mov.b32 %r6259, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r6270, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6256, %r811, %r858, %r6259, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6260, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6261, %r6259, %r6260;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6264, %r6256, %r6261;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6267, %r822, %r858, %r6270, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6271, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6272, %r6270, %r6271;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6275, %r6267, %r6272;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6278, %r811, %r880, %r6259, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6282, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6283, %r6259, %r6282;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6286, %r6278, %r6283;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6289, %r822, %r880, %r6270, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6293, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6294, %r6270, %r6293;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6297, %r6289, %r6294;
	// end inline asm
	// begin inline asm
	mov.b32 %r6305, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r6316, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6302, %r811, %r904, %r6305, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6306, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6307, %r6305, %r6306;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6310, %r6302, %r6307;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6313, %r822, %r904, %r6316, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6317, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6318, %r6316, %r6317;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6321, %r6313, %r6318;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6324, %r811, %r926, %r6305, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6328, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6329, %r6305, %r6328;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6332, %r6324, %r6329;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6335, %r822, %r926, %r6316, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6339, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6340, %r6316, %r6339;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6343, %r6335, %r6340;
	// end inline asm
	// begin inline asm
	mov.b32 %r6351, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r6362, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6348, %r811, %r950, %r6351, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6352, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6353, %r6351, %r6352;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6356, %r6348, %r6353;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6359, %r822, %r950, %r6362, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6363, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6364, %r6362, %r6363;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6367, %r6359, %r6364;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6370, %r811, %r972, %r6351, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6374, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6375, %r6351, %r6374;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6378, %r6370, %r6375;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6381, %r822, %r972, %r6362, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6385, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6386, %r6362, %r6385;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6389, %r6381, %r6386;
	// end inline asm
	// begin inline asm
	mov.b32 %r6397, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r6408, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6394, %r811, %r996, %r6397, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6398, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6399, %r6397, %r6398;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6402, %r6394, %r6399;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6405, %r822, %r996, %r6408, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6409, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6410, %r6408, %r6409;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6413, %r6405, %r6410;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6416, %r811, %r1018, %r6397, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6420, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6421, %r6397, %r6420;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6424, %r6416, %r6421;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6427, %r822, %r1018, %r6408, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6431, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6432, %r6408, %r6431;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6435, %r6427, %r6432;
	// end inline asm
	// begin inline asm
	mov.b32 %r6443, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r6454, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6440, %r811, %r1042, %r6443, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6444, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6445, %r6443, %r6444;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6448, %r6440, %r6445;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6451, %r822, %r1042, %r6454, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6455, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6456, %r6454, %r6455;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6459, %r6451, %r6456;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6462, %r811, %r1064, %r6443, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6466, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6467, %r6443, %r6466;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6470, %r6462, %r6467;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6473, %r822, %r1064, %r6454, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6477, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6478, %r6454, %r6477;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6481, %r6473, %r6478;
	// end inline asm
	// begin inline asm
	mov.b32 %r6489, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r6500, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6486, %r811, %r1088, %r6489, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6490, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6491, %r6489, %r6490;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6494, %r6486, %r6491;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6497, %r822, %r1088, %r6500, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6501, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6502, %r6500, %r6501;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6505, %r6497, %r6502;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6508, %r811, %r1110, %r6489, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6512, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6513, %r6489, %r6512;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6516, %r6508, %r6513;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6519, %r822, %r1110, %r6500, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6523, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6524, %r6500, %r6523;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6527, %r6519, %r6524;
	// end inline asm
	// begin inline asm
	mov.b32 %r6535, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r6546, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6532, %r811, %r1134, %r6535, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6536, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6537, %r6535, %r6536;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6540, %r6532, %r6537;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6543, %r822, %r1134, %r6546, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6547, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6548, %r6546, %r6547;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6551, %r6543, %r6548;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6554, %r811, %r1156, %r6535, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6558, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6559, %r6535, %r6558;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6562, %r6554, %r6559;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6565, %r822, %r1156, %r6546, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6569, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6570, %r6546, %r6569;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6573, %r6565, %r6570;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6711, %r330, %r6218, %r6018;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6708, %r330, %r6229, %r6024;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6720, %r330, %r6240, %r6030;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6717, %r330, %r6251, %r6036;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6729, %r330, %r6264, %r6042;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6726, %r330, %r6275, %r6048;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6738, %r330, %r6286, %r6054;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6735, %r330, %r6297, %r6060;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6747, %r330, %r6310, %r6066;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6744, %r330, %r6321, %r6072;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6756, %r330, %r6332, %r6078;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6753, %r330, %r6343, %r6084;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6765, %r330, %r6356, %r6090;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6762, %r330, %r6367, %r6096;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6774, %r330, %r6378, %r6102;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6771, %r330, %r6389, %r6108;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6783, %r348, %r6402, %r6114;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6780, %r348, %r6413, %r6120;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6792, %r348, %r6424, %r6126;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6789, %r348, %r6435, %r6132;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6801, %r348, %r6448, %r6138;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6798, %r348, %r6459, %r6144;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6810, %r348, %r6470, %r6150;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6807, %r348, %r6481, %r6156;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6819, %r348, %r6494, %r6162;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6816, %r348, %r6505, %r6168;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6828, %r348, %r6516, %r6174;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6825, %r348, %r6527, %r6180;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6837, %r348, %r6540, %r6186;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6834, %r348, %r6551, %r6192;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6846, %r348, %r6562, %r6198;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6843, %r348, %r6573, %r6204;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6704, %r393;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6706, %r6704, %r6708;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6709, %r387, %r6711, %r6706;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6713, %r393;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6715, %r6713, %r6717;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6718, %r387, %r6720, %r6715;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6722, %r393;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6724, %r6722, %r6726;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6727, %r387, %r6729, %r6724;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6731, %r393;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6733, %r6731, %r6735;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6736, %r387, %r6738, %r6733;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6740, %r393;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6742, %r6740, %r6744;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6745, %r387, %r6747, %r6742;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6749, %r393;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6751, %r6749, %r6753;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6754, %r387, %r6756, %r6751;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6758, %r393;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6760, %r6758, %r6762;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6763, %r387, %r6765, %r6760;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6767, %r393;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6769, %r6767, %r6771;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6772, %r387, %r6774, %r6769;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6776, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6778, %r6776, %r6780;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6781, %r390, %r6783, %r6778;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6785, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6787, %r6785, %r6789;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6790, %r390, %r6792, %r6787;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6794, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6796, %r6794, %r6798;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6799, %r390, %r6801, %r6796;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6803, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6805, %r6803, %r6807;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6808, %r390, %r6810, %r6805;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6812, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6814, %r6812, %r6816;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6817, %r390, %r6819, %r6814;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6821, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6823, %r6821, %r6825;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6826, %r390, %r6828, %r6823;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6830, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6832, %r6830, %r6834;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6835, %r390, %r6837, %r6832;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6839, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6841, %r6839, %r6843;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6844, %r390, %r6846, %r6841;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6848, %r393, %r6711;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6851, %r387, %r6708, %r6848;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6855, %r393, %r6720;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6858, %r387, %r6717, %r6855;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6862, %r393, %r6729;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6865, %r387, %r6726, %r6862;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6869, %r393, %r6738;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6872, %r387, %r6735, %r6869;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6876, %r393, %r6747;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6879, %r387, %r6744, %r6876;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6883, %r393, %r6756;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6886, %r387, %r6753, %r6883;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6890, %r393, %r6765;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6893, %r387, %r6762, %r6890;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6897, %r393, %r6774;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6900, %r387, %r6771, %r6897;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6904, %r396, %r6783;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6907, %r390, %r6780, %r6904;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6911, %r396, %r6792;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6914, %r390, %r6789, %r6911;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6918, %r396, %r6801;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6921, %r390, %r6798, %r6918;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6925, %r396, %r6810;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6928, %r390, %r6807, %r6925;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6932, %r396, %r6819;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6935, %r390, %r6816, %r6932;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6939, %r396, %r6828;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6942, %r390, %r6825, %r6939;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6946, %r396, %r6837;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6949, %r390, %r6834, %r6946;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6953, %r396, %r6846;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6956, %r390, %r6843, %r6953;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7127, %r7124}, {%r454, %r460, %r457, %r463}, {%r6709, %r6851}, {%r3152, %r3152};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7136, %r7133}, {%r454, %r460, %r457, %r463}, {%r6718, %r6858}, {%r3152, %r3152};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7145, %r7142}, {%r454, %r460, %r457, %r463}, {%r6727, %r6865}, {%r3152, %r3152};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7154, %r7151}, {%r454, %r460, %r457, %r463}, {%r6736, %r6872}, {%r3152, %r3152};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7163, %r7160}, {%r454, %r460, %r457, %r463}, {%r6745, %r6879}, {%r3152, %r3152};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7172, %r7169}, {%r454, %r460, %r457, %r463}, {%r6754, %r6886}, {%r3152, %r3152};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7181, %r7178}, {%r454, %r460, %r457, %r463}, {%r6763, %r6893}, {%r3152, %r3152};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7190, %r7187}, {%r454, %r460, %r457, %r463}, {%r6772, %r6900}, {%r3152, %r3152};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7199, %r7196}, {%r454, %r460, %r457, %r463}, {%r6781, %r6907}, {%r3152, %r3152};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7208, %r7205}, {%r454, %r460, %r457, %r463}, {%r6790, %r6914}, {%r3152, %r3152};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7217, %r7214}, {%r454, %r460, %r457, %r463}, {%r6799, %r6921}, {%r3152, %r3152};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7226, %r7223}, {%r454, %r460, %r457, %r463}, {%r6808, %r6928}, {%r3152, %r3152};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7235, %r7232}, {%r454, %r460, %r457, %r463}, {%r6817, %r6935}, {%r3152, %r3152};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7244, %r7241}, {%r454, %r460, %r457, %r463}, {%r6826, %r6942}, {%r3152, %r3152};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7253, %r7250}, {%r454, %r460, %r457, %r463}, {%r6835, %r6949}, {%r3152, %r3152};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7262, %r7259}, {%r454, %r460, %r457, %r463}, {%r6844, %r6956}, {%r3152, %r3152};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7120, %r507;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7122, %r7120, %r7124;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7125, %r504, %r7127, %r7122;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7129, %r507;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7131, %r7129, %r7133;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7134, %r504, %r7136, %r7131;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7138, %r507;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7140, %r7138, %r7142;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7143, %r504, %r7145, %r7140;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7147, %r507;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7149, %r7147, %r7151;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7152, %r504, %r7154, %r7149;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7156, %r507;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7158, %r7156, %r7160;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7161, %r504, %r7163, %r7158;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7165, %r507;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7167, %r7165, %r7169;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7170, %r504, %r7172, %r7167;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7174, %r507;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7176, %r7174, %r7178;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7179, %r504, %r7181, %r7176;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7183, %r507;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7185, %r7183, %r7187;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7188, %r504, %r7190, %r7185;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7192, %r507;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7194, %r7192, %r7196;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7197, %r504, %r7199, %r7194;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7201, %r507;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7203, %r7201, %r7205;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7206, %r504, %r7208, %r7203;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7210, %r507;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7212, %r7210, %r7214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7215, %r504, %r7217, %r7212;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7219, %r507;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7221, %r7219, %r7223;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7224, %r504, %r7226, %r7221;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7228, %r507;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7230, %r7228, %r7232;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7233, %r504, %r7235, %r7230;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7237, %r507;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7239, %r7237, %r7241;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7242, %r504, %r7244, %r7239;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7246, %r507;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7248, %r7246, %r7250;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7251, %r504, %r7253, %r7248;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7255, %r507;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7257, %r7255, %r7259;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7260, %r504, %r7262, %r7257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7264, %r507, %r7127;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7267, %r504, %r7124, %r7264;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7271, %r507, %r7136;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7274, %r504, %r7133, %r7271;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7278, %r507, %r7145;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7281, %r504, %r7142, %r7278;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7285, %r507, %r7154;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7288, %r504, %r7151, %r7285;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7292, %r507, %r7163;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7295, %r504, %r7160, %r7292;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7299, %r507, %r7172;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7302, %r504, %r7169, %r7299;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7306, %r507, %r7181;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7309, %r504, %r7178, %r7306;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7313, %r507, %r7190;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7316, %r504, %r7187, %r7313;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7320, %r507, %r7199;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7323, %r504, %r7196, %r7320;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7327, %r507, %r7208;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7330, %r504, %r7205, %r7327;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7334, %r507, %r7217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7337, %r504, %r7214, %r7334;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7341, %r507, %r7226;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7344, %r504, %r7223, %r7341;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7348, %r507, %r7235;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7351, %r504, %r7232, %r7348;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7355, %r507, %r7244;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7358, %r504, %r7241, %r7355;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7362, %r507, %r7253;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7365, %r504, %r7250, %r7362;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7369, %r507, %r7262;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7372, %r504, %r7259, %r7369;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7665, %r7668}, {%r542, %r548, %r545, %r551}, {%r7125, %r7267}, {%r3152, %r3152};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7671, %r7674}, {%r542, %r548, %r545, %r551}, {%r7134, %r7274}, {%r3152, %r3152};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7677, %r7680}, {%r542, %r548, %r545, %r551}, {%r7143, %r7281}, {%r3152, %r3152};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7683, %r7686}, {%r542, %r548, %r545, %r551}, {%r7152, %r7288}, {%r3152, %r3152};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7689, %r7692}, {%r542, %r548, %r545, %r551}, {%r7161, %r7295}, {%r3152, %r3152};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7695, %r7698}, {%r542, %r548, %r545, %r551}, {%r7170, %r7302}, {%r3152, %r3152};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7701, %r7704}, {%r542, %r548, %r545, %r551}, {%r7179, %r7309}, {%r3152, %r3152};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7707, %r7710}, {%r542, %r548, %r545, %r551}, {%r7188, %r7316}, {%r3152, %r3152};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7666, %r7669}, {%r542, %r548, %r545, %r551}, {%r7197, %r7323}, {%r3152, %r3152};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7672, %r7675}, {%r542, %r548, %r545, %r551}, {%r7206, %r7330}, {%r3152, %r3152};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7678, %r7681}, {%r542, %r548, %r545, %r551}, {%r7215, %r7337}, {%r3152, %r3152};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7684, %r7687}, {%r542, %r548, %r545, %r551}, {%r7224, %r7344}, {%r3152, %r3152};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7690, %r7693}, {%r542, %r548, %r545, %r551}, {%r7233, %r7351}, {%r3152, %r3152};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7696, %r7699}, {%r542, %r548, %r545, %r551}, {%r7242, %r7358}, {%r3152, %r3152};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7702, %r7705}, {%r542, %r548, %r545, %r551}, {%r7251, %r7365}, {%r3152, %r3152};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7708, %r7711}, {%r542, %r548, %r545, %r551}, {%r7260, %r7372}, {%r3152, %r3152};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7664, %r7665, %r7666;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7667, %r7668, %r7669;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7670, %r7671, %r7672;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7673, %r7674, %r7675;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7676, %r7677, %r7678;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7679, %r7680, %r7681;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7682, %r7683, %r7684;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7685, %r7686, %r7687;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7688, %r7689, %r7690;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7691, %r7692, %r7693;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7694, %r7695, %r7696;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7697, %r7698, %r7699;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7700, %r7701, %r7702;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7703, %r7704, %r7705;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7706, %r7707, %r7708;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7709, %r7710, %r7711;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7712, %r7665, %r7666;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7715, %r7668, %r7669;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7718, %r7671, %r7672;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7721, %r7674, %r7675;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7724, %r7677, %r7678;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7727, %r7680, %r7681;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7730, %r7683, %r7684;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7733, %r7686, %r7687;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7736, %r7689, %r7690;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7739, %r7692, %r7693;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7742, %r7695, %r7696;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7745, %r7698, %r7699;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7748, %r7701, %r7702;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7751, %r7704, %r7705;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7754, %r7707, %r7708;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7757, %r7710, %r7711;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7760, %r128, %r7664;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7763, %r128, %r7667;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7766, %r128, %r7670;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7769, %r128, %r7673;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7772, %r128, %r7676;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7775, %r128, %r7679;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7778, %r128, %r7682;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7781, %r128, %r7685;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7784, %r128, %r7688;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7787, %r128, %r7691;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7790, %r128, %r7694;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7793, %r128, %r7697;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7796, %r128, %r7700;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7799, %r128, %r7703;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7802, %r128, %r7706;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7805, %r128, %r7709;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7808, %r129, %r7712;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7811, %r129, %r7715;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7814, %r129, %r7718;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7817, %r129, %r7721;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7820, %r129, %r7724;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7823, %r129, %r7727;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7826, %r129, %r7730;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7829, %r129, %r7733;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7832, %r129, %r7736;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7835, %r129, %r7739;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7838, %r129, %r7742;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7841, %r129, %r7745;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7844, %r129, %r7748;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7847, %r129, %r7751;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7850, %r129, %r7754;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7853, %r129, %r7757;
	// end inline asm
	// begin inline asm
	mov.b32 %r7856, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r7857, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7858, %r7760, %r7856;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7861, %r7858, %r7857;
	// end inline asm
	// begin inline asm
	mov.b32 %r7864, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r7865, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7866, %r7763, %r7864;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7869, %r7866, %r7865;
	// end inline asm
	// begin inline asm
	mov.b32 %r7872, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r7873, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7874, %r7766, %r7872;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7877, %r7874, %r7873;
	// end inline asm
	// begin inline asm
	mov.b32 %r7880, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r7881, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7882, %r7769, %r7880;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7885, %r7882, %r7881;
	// end inline asm
	// begin inline asm
	mov.b32 %r7888, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r7889, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7890, %r7772, %r7888;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7893, %r7890, %r7889;
	// end inline asm
	// begin inline asm
	mov.b32 %r7896, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r7897, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7898, %r7775, %r7896;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7901, %r7898, %r7897;
	// end inline asm
	// begin inline asm
	mov.b32 %r7904, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r7905, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7906, %r7778, %r7904;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7909, %r7906, %r7905;
	// end inline asm
	// begin inline asm
	mov.b32 %r7912, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r7913, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7914, %r7781, %r7912;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7917, %r7914, %r7913;
	// end inline asm
	// begin inline asm
	mov.b32 %r7920, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r7921, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7922, %r7784, %r7920;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7925, %r7922, %r7921;
	// end inline asm
	// begin inline asm
	mov.b32 %r7928, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r7929, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7930, %r7787, %r7928;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7933, %r7930, %r7929;
	// end inline asm
	// begin inline asm
	mov.b32 %r7936, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r7937, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7938, %r7790, %r7936;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7941, %r7938, %r7937;
	// end inline asm
	// begin inline asm
	mov.b32 %r7944, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r7945, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7946, %r7793, %r7944;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7949, %r7946, %r7945;
	// end inline asm
	// begin inline asm
	mov.b32 %r7952, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r7953, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7954, %r7796, %r7952;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7957, %r7954, %r7953;
	// end inline asm
	// begin inline asm
	mov.b32 %r7960, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r7961, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7962, %r7799, %r7960;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7965, %r7962, %r7961;
	// end inline asm
	// begin inline asm
	mov.b32 %r7968, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r7969, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7970, %r7802, %r7968;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7973, %r7970, %r7969;
	// end inline asm
	// begin inline asm
	mov.b32 %r7976, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r7977, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7978, %r7805, %r7976;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7981, %r7978, %r7977;
	// end inline asm
	// begin inline asm
	mov.b32 %r7984, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r7985, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7986, %r7808, %r7984;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7989, %r7986, %r7985;
	// end inline asm
	// begin inline asm
	mov.b32 %r7992, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r7993, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7994, %r7811, %r7992;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7997, %r7994, %r7993;
	// end inline asm
	// begin inline asm
	mov.b32 %r8000, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r8001, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8002, %r7814, %r8000;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8005, %r8002, %r8001;
	// end inline asm
	// begin inline asm
	mov.b32 %r8008, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r8009, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8010, %r7817, %r8008;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8013, %r8010, %r8009;
	// end inline asm
	// begin inline asm
	mov.b32 %r8016, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r8017, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8018, %r7820, %r8016;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8021, %r8018, %r8017;
	// end inline asm
	// begin inline asm
	mov.b32 %r8024, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r8025, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8026, %r7823, %r8024;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8029, %r8026, %r8025;
	// end inline asm
	// begin inline asm
	mov.b32 %r8032, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r8033, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8034, %r7826, %r8032;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8037, %r8034, %r8033;
	// end inline asm
	// begin inline asm
	mov.b32 %r8040, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r8041, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8042, %r7829, %r8040;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8045, %r8042, %r8041;
	// end inline asm
	// begin inline asm
	mov.b32 %r8048, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r8049, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8050, %r7832, %r8048;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8053, %r8050, %r8049;
	// end inline asm
	// begin inline asm
	mov.b32 %r8056, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r8057, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8058, %r7835, %r8056;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8061, %r8058, %r8057;
	// end inline asm
	// begin inline asm
	mov.b32 %r8064, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r8065, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8066, %r7838, %r8064;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8069, %r8066, %r8065;
	// end inline asm
	// begin inline asm
	mov.b32 %r8072, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r8073, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8074, %r7841, %r8072;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8077, %r8074, %r8073;
	// end inline asm
	// begin inline asm
	mov.b32 %r8080, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r8081, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8082, %r7844, %r8080;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8085, %r8082, %r8081;
	// end inline asm
	// begin inline asm
	mov.b32 %r8088, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r8089, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8090, %r7847, %r8088;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8093, %r8090, %r8089;
	// end inline asm
	// begin inline asm
	mov.b32 %r8096, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r8097, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8098, %r7850, %r8096;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8101, %r8098, %r8097;
	// end inline asm
	// begin inline asm
	mov.b32 %r8104, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r8105, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8106, %r7853, %r8104;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8109, %r8106, %r8105;
	// end inline asm
	// begin inline asm
	mov.b32 %r8115, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r8113, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8114, %r8115, %r8113;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8117, %r7861, %r8114;
	// end inline asm
	// begin inline asm
	mov.b32 %r8120, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8121, %r8115, %r8120;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8124, %r7869, %r8121;
	// end inline asm
	// begin inline asm
	mov.b32 %r8127, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8128, %r8115, %r8127;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8131, %r7877, %r8128;
	// end inline asm
	// begin inline asm
	mov.b32 %r8134, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8135, %r8115, %r8134;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8138, %r7885, %r8135;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8141, %r8117, %r8131, %r4328;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8145, %r8124, %r8138, %r4328;
	// end inline asm
	shl.b32 	%r8152, %r8145, 4;
	// begin inline asm
	lop3.b32 %r8149, %r4334, %r8141, %r8152, 202;
	// end inline asm
	xor.b32  	%r16130, %r8149, -2004318072;
	// begin inline asm
	mov.b32 %r8156, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r8154, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8155, %r8156, %r8154;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8158, %r7893, %r8155;
	// end inline asm
	// begin inline asm
	mov.b32 %r8161, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8162, %r8156, %r8161;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8165, %r7901, %r8162;
	// end inline asm
	// begin inline asm
	mov.b32 %r8168, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8169, %r8156, %r8168;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8172, %r7909, %r8169;
	// end inline asm
	// begin inline asm
	mov.b32 %r8175, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8176, %r8156, %r8175;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8179, %r7917, %r8176;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8182, %r8158, %r8172, %r4328;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8186, %r8165, %r8179, %r4328;
	// end inline asm
	shl.b32 	%r8193, %r8186, 4;
	// begin inline asm
	lop3.b32 %r8190, %r4334, %r8182, %r8193, 202;
	// end inline asm
	xor.b32  	%r16131, %r8190, -2004318072;
	// begin inline asm
	mov.b32 %r8197, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r8195, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8196, %r8197, %r8195;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8199, %r7925, %r8196;
	// end inline asm
	// begin inline asm
	mov.b32 %r8202, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8203, %r8197, %r8202;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8206, %r7933, %r8203;
	// end inline asm
	// begin inline asm
	mov.b32 %r8209, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8210, %r8197, %r8209;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8213, %r7941, %r8210;
	// end inline asm
	// begin inline asm
	mov.b32 %r8216, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8217, %r8197, %r8216;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8220, %r7949, %r8217;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8223, %r8199, %r8213, %r4328;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8227, %r8206, %r8220, %r4328;
	// end inline asm
	shl.b32 	%r8234, %r8227, 4;
	// begin inline asm
	lop3.b32 %r8231, %r4334, %r8223, %r8234, 202;
	// end inline asm
	xor.b32  	%r16132, %r8231, -2004318072;
	// begin inline asm
	mov.b32 %r8238, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r8236, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8237, %r8238, %r8236;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8240, %r7957, %r8237;
	// end inline asm
	// begin inline asm
	mov.b32 %r8243, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8244, %r8238, %r8243;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8247, %r7965, %r8244;
	// end inline asm
	// begin inline asm
	mov.b32 %r8250, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8251, %r8238, %r8250;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8254, %r7973, %r8251;
	// end inline asm
	// begin inline asm
	mov.b32 %r8257, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8258, %r8238, %r8257;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8261, %r7981, %r8258;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8264, %r8240, %r8254, %r4328;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8268, %r8247, %r8261, %r4328;
	// end inline asm
	shl.b32 	%r8275, %r8268, 4;
	// begin inline asm
	lop3.b32 %r8272, %r4334, %r8264, %r8275, 202;
	// end inline asm
	xor.b32  	%r16133, %r8272, -2004318072;
	// begin inline asm
	mov.b32 %r8279, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r8277, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8278, %r8279, %r8277;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8281, %r7989, %r8278;
	// end inline asm
	// begin inline asm
	mov.b32 %r8284, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8285, %r8279, %r8284;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8288, %r7997, %r8285;
	// end inline asm
	// begin inline asm
	mov.b32 %r8291, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8292, %r8279, %r8291;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8295, %r8005, %r8292;
	// end inline asm
	// begin inline asm
	mov.b32 %r8298, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8299, %r8279, %r8298;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8302, %r8013, %r8299;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8305, %r8281, %r8295, %r4328;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8309, %r8288, %r8302, %r4328;
	// end inline asm
	shl.b32 	%r8316, %r8309, 4;
	// begin inline asm
	lop3.b32 %r8313, %r4334, %r8305, %r8316, 202;
	// end inline asm
	xor.b32  	%r16134, %r8313, -2004318072;
	// begin inline asm
	mov.b32 %r8320, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r8318, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8319, %r8320, %r8318;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8322, %r8021, %r8319;
	// end inline asm
	// begin inline asm
	mov.b32 %r8325, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8326, %r8320, %r8325;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8329, %r8029, %r8326;
	// end inline asm
	// begin inline asm
	mov.b32 %r8332, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8333, %r8320, %r8332;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8336, %r8037, %r8333;
	// end inline asm
	// begin inline asm
	mov.b32 %r8339, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8340, %r8320, %r8339;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8343, %r8045, %r8340;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8346, %r8322, %r8336, %r4328;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8350, %r8329, %r8343, %r4328;
	// end inline asm
	shl.b32 	%r8357, %r8350, 4;
	// begin inline asm
	lop3.b32 %r8354, %r4334, %r8346, %r8357, 202;
	// end inline asm
	xor.b32  	%r16135, %r8354, -2004318072;
	// begin inline asm
	mov.b32 %r8361, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r8359, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8360, %r8361, %r8359;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8363, %r8053, %r8360;
	// end inline asm
	// begin inline asm
	mov.b32 %r8366, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8367, %r8361, %r8366;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8370, %r8061, %r8367;
	// end inline asm
	// begin inline asm
	mov.b32 %r8373, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8374, %r8361, %r8373;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8377, %r8069, %r8374;
	// end inline asm
	// begin inline asm
	mov.b32 %r8380, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8381, %r8361, %r8380;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8384, %r8077, %r8381;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8387, %r8363, %r8377, %r4328;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8391, %r8370, %r8384, %r4328;
	// end inline asm
	shl.b32 	%r8398, %r8391, 4;
	// begin inline asm
	lop3.b32 %r8395, %r4334, %r8387, %r8398, 202;
	// end inline asm
	xor.b32  	%r16136, %r8395, -2004318072;
	// begin inline asm
	mov.b32 %r8402, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r8400, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8401, %r8402, %r8400;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8404, %r8085, %r8401;
	// end inline asm
	// begin inline asm
	mov.b32 %r8407, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8408, %r8402, %r8407;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8411, %r8093, %r8408;
	// end inline asm
	// begin inline asm
	mov.b32 %r8414, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8415, %r8402, %r8414;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8418, %r8101, %r8415;
	// end inline asm
	// begin inline asm
	mov.b32 %r8421, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8422, %r8402, %r8421;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8425, %r8109, %r8422;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8428, %r8404, %r8418, %r4328;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8432, %r8411, %r8425, %r4328;
	// end inline asm
	shl.b32 	%r8439, %r8432, 4;
	// begin inline asm
	lop3.b32 %r8436, %r4334, %r8428, %r8439, 202;
	// end inline asm
	xor.b32  	%r16137, %r8436, -2004318072;
	st.shared.u32 	[%rd106], %r16130;
	st.shared.u32 	[%rd108], %r16131;
	st.shared.u32 	[%rd110], %r16132;
	st.shared.u32 	[%rd112], %r16133;
	st.shared.u32 	[%rd114], %r16134;
	st.shared.u32 	[%rd116], %r16135;
	st.shared.u32 	[%rd118], %r16136;
	st.shared.u32 	[%rd120], %r16137;
	ld.shared.u32 	%r16250, [%rd90];
	ld.shared.u32 	%r16251, [%rd92];
	ld.shared.u32 	%r16252, [%rd94];
	ld.shared.u32 	%r16253, [%rd96];
	ld.shared.u32 	%r16262, [%rd98];
	ld.shared.u32 	%r16263, [%rd100];
	ld.shared.u32 	%r16264, [%rd102];
	ld.shared.u32 	%r16265, [%rd104];
	// begin inline asm
	mov.b32 %r8445, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r8456, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r8444, %r16250, -2004318072;
	// begin inline asm
	lop3.b32 %r8442, %r811, %r8444, %r8445, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8446, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8447, %r8445, %r8446;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8450, %r8442, %r8447;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8453, %r822, %r8444, %r8456, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8457, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8458, %r8456, %r8457;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8461, %r8453, %r8458;
	// end inline asm
	shr.u32 	%r8466, %r8444, 8;
	// begin inline asm
	lop3.b32 %r8464, %r811, %r8466, %r8445, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8468, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8469, %r8445, %r8468;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8472, %r8464, %r8469;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8475, %r822, %r8466, %r8456, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8479, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8480, %r8456, %r8479;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8483, %r8475, %r8480;
	// end inline asm
	// begin inline asm
	mov.b32 %r8491, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r8502, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r8490, %r16251, -2004318072;
	// begin inline asm
	lop3.b32 %r8488, %r811, %r8490, %r8491, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8492, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8493, %r8491, %r8492;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8496, %r8488, %r8493;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8499, %r822, %r8490, %r8502, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8503, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8504, %r8502, %r8503;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8507, %r8499, %r8504;
	// end inline asm
	shr.u32 	%r8512, %r8490, 8;
	// begin inline asm
	lop3.b32 %r8510, %r811, %r8512, %r8491, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8514, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8515, %r8491, %r8514;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8518, %r8510, %r8515;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8521, %r822, %r8512, %r8502, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8525, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8526, %r8502, %r8525;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8529, %r8521, %r8526;
	// end inline asm
	// begin inline asm
	mov.b32 %r8537, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r8548, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r8536, %r16252, -2004318072;
	// begin inline asm
	lop3.b32 %r8534, %r811, %r8536, %r8537, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8538, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8539, %r8537, %r8538;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8542, %r8534, %r8539;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8545, %r822, %r8536, %r8548, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8549, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8550, %r8548, %r8549;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8553, %r8545, %r8550;
	// end inline asm
	shr.u32 	%r8558, %r8536, 8;
	// begin inline asm
	lop3.b32 %r8556, %r811, %r8558, %r8537, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8560, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8561, %r8537, %r8560;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8564, %r8556, %r8561;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8567, %r822, %r8558, %r8548, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8571, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8572, %r8548, %r8571;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8575, %r8567, %r8572;
	// end inline asm
	// begin inline asm
	mov.b32 %r8583, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r8594, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r8582, %r16253, -2004318072;
	// begin inline asm
	lop3.b32 %r8580, %r811, %r8582, %r8583, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8584, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8585, %r8583, %r8584;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8588, %r8580, %r8585;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8591, %r822, %r8582, %r8594, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8595, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8596, %r8594, %r8595;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8599, %r8591, %r8596;
	// end inline asm
	shr.u32 	%r8604, %r8582, 8;
	// begin inline asm
	lop3.b32 %r8602, %r811, %r8604, %r8583, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8606, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8607, %r8583, %r8606;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8610, %r8602, %r8607;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8613, %r822, %r8604, %r8594, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8617, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8618, %r8594, %r8617;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8621, %r8613, %r8618;
	// end inline asm
	// begin inline asm
	mov.b32 %r8629, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r8640, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r8628, %r16262, -2004318072;
	// begin inline asm
	lop3.b32 %r8626, %r811, %r8628, %r8629, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8630, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8631, %r8629, %r8630;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8634, %r8626, %r8631;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8637, %r822, %r8628, %r8640, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8641, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8642, %r8640, %r8641;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8645, %r8637, %r8642;
	// end inline asm
	shr.u32 	%r8650, %r8628, 8;
	// begin inline asm
	lop3.b32 %r8648, %r811, %r8650, %r8629, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8652, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8653, %r8629, %r8652;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8656, %r8648, %r8653;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8659, %r822, %r8650, %r8640, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8663, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8664, %r8640, %r8663;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8667, %r8659, %r8664;
	// end inline asm
	// begin inline asm
	mov.b32 %r8675, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r8686, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r8674, %r16263, -2004318072;
	// begin inline asm
	lop3.b32 %r8672, %r811, %r8674, %r8675, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8676, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8677, %r8675, %r8676;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8680, %r8672, %r8677;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8683, %r822, %r8674, %r8686, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8687, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8688, %r8686, %r8687;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8691, %r8683, %r8688;
	// end inline asm
	shr.u32 	%r8696, %r8674, 8;
	// begin inline asm
	lop3.b32 %r8694, %r811, %r8696, %r8675, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8698, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8699, %r8675, %r8698;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8702, %r8694, %r8699;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8705, %r822, %r8696, %r8686, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8709, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8710, %r8686, %r8709;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8713, %r8705, %r8710;
	// end inline asm
	// begin inline asm
	mov.b32 %r8721, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r8732, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r8720, %r16264, -2004318072;
	// begin inline asm
	lop3.b32 %r8718, %r811, %r8720, %r8721, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8722, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8723, %r8721, %r8722;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8726, %r8718, %r8723;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8729, %r822, %r8720, %r8732, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8733, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8734, %r8732, %r8733;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8737, %r8729, %r8734;
	// end inline asm
	shr.u32 	%r8742, %r8720, 8;
	// begin inline asm
	lop3.b32 %r8740, %r811, %r8742, %r8721, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8744, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8745, %r8721, %r8744;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8748, %r8740, %r8745;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8751, %r822, %r8742, %r8732, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8755, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8756, %r8732, %r8755;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8759, %r8751, %r8756;
	// end inline asm
	// begin inline asm
	mov.b32 %r8767, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r8778, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r8766, %r16265, -2004318072;
	// begin inline asm
	lop3.b32 %r8764, %r811, %r8766, %r8767, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8768, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8769, %r8767, %r8768;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8772, %r8764, %r8769;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8775, %r822, %r8766, %r8778, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8779, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8780, %r8778, %r8779;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8783, %r8775, %r8780;
	// end inline asm
	shr.u32 	%r8788, %r8766, 8;
	// begin inline asm
	lop3.b32 %r8786, %r811, %r8788, %r8767, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8790, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8791, %r8767, %r8790;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8794, %r8786, %r8791;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8797, %r822, %r8788, %r8778, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8801, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8802, %r8778, %r8801;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8805, %r8797, %r8802;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8808, %r366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8810, %r8808, %r8450;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8813, %r366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8815, %r8813, %r8461;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8818, %r366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8820, %r8818, %r8472;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8823, %r366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8825, %r8823, %r8483;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8828, %r366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8830, %r8828, %r8496;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8833, %r366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8835, %r8833, %r8507;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8838, %r366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8840, %r8838, %r8518;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8843, %r366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8845, %r8843, %r8529;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8848, %r366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8850, %r8848, %r8542;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8853, %r366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8855, %r8853, %r8553;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8858, %r366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8860, %r8858, %r8564;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8863, %r366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8865, %r8863, %r8575;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8868, %r366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8870, %r8868, %r8588;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8873, %r366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8875, %r8873, %r8599;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8878, %r366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8880, %r8878, %r8610;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8883, %r366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8885, %r8883, %r8621;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8888, %r384;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8890, %r8888, %r8634;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8893, %r384;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8895, %r8893, %r8645;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8898, %r384;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8900, %r8898, %r8656;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8903, %r384;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8905, %r8903, %r8667;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8908, %r384;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8910, %r8908, %r8680;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8913, %r384;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8915, %r8913, %r8691;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8918, %r384;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8920, %r8918, %r8702;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8923, %r384;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8925, %r8923, %r8713;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8928, %r384;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8930, %r8928, %r8726;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8933, %r384;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8935, %r8933, %r8737;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8938, %r384;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8940, %r8938, %r8748;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8943, %r384;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8945, %r8943, %r8759;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8948, %r384;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8950, %r8948, %r8772;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8953, %r384;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8955, %r8953, %r8783;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8958, %r384;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8960, %r8958, %r8794;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8963, %r384;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8965, %r8963, %r8805;
	// end inline asm
	// begin inline asm
	mov.b32 %r8973, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r8984, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r8970, %r811, %r2396, %r8973, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8974, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8975, %r8973, %r8974;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8978, %r8970, %r8975;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8981, %r822, %r2396, %r8984, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8985, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8986, %r8984, %r8985;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8989, %r8981, %r8986;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8992, %r811, %r2418, %r8973, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8996, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8997, %r8973, %r8996;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9000, %r8992, %r8997;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9003, %r822, %r2418, %r8984, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9007, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9008, %r8984, %r9007;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9011, %r9003, %r9008;
	// end inline asm
	// begin inline asm
	mov.b32 %r9019, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r9030, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9016, %r811, %r2442, %r9019, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9020, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9021, %r9019, %r9020;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9024, %r9016, %r9021;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9027, %r822, %r2442, %r9030, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9031, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9032, %r9030, %r9031;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9035, %r9027, %r9032;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9038, %r811, %r2464, %r9019, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9042, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9043, %r9019, %r9042;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9046, %r9038, %r9043;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9049, %r822, %r2464, %r9030, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9053, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9054, %r9030, %r9053;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9057, %r9049, %r9054;
	// end inline asm
	// begin inline asm
	mov.b32 %r9065, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r9076, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9062, %r811, %r2488, %r9065, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9066, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9067, %r9065, %r9066;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9070, %r9062, %r9067;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9073, %r822, %r2488, %r9076, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9077, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9078, %r9076, %r9077;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9081, %r9073, %r9078;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9084, %r811, %r2510, %r9065, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9088, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9089, %r9065, %r9088;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9092, %r9084, %r9089;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9095, %r822, %r2510, %r9076, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9099, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9100, %r9076, %r9099;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9103, %r9095, %r9100;
	// end inline asm
	// begin inline asm
	mov.b32 %r9111, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r9122, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9108, %r811, %r2534, %r9111, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9112, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9113, %r9111, %r9112;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9116, %r9108, %r9113;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9119, %r822, %r2534, %r9122, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9123, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9124, %r9122, %r9123;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9127, %r9119, %r9124;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9130, %r811, %r2556, %r9111, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9134, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9135, %r9111, %r9134;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9138, %r9130, %r9135;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9141, %r822, %r2556, %r9122, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9145, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9146, %r9122, %r9145;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9149, %r9141, %r9146;
	// end inline asm
	// begin inline asm
	mov.b32 %r9157, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r9168, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9154, %r811, %r2580, %r9157, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9158, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9159, %r9157, %r9158;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9162, %r9154, %r9159;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9165, %r822, %r2580, %r9168, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9169, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9170, %r9168, %r9169;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9173, %r9165, %r9170;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9176, %r811, %r2602, %r9157, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9180, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9181, %r9157, %r9180;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9184, %r9176, %r9181;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9187, %r822, %r2602, %r9168, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9191, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9192, %r9168, %r9191;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9195, %r9187, %r9192;
	// end inline asm
	// begin inline asm
	mov.b32 %r9203, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r9214, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9200, %r811, %r2626, %r9203, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9204, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9205, %r9203, %r9204;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9208, %r9200, %r9205;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9211, %r822, %r2626, %r9214, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9215, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9216, %r9214, %r9215;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9219, %r9211, %r9216;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9222, %r811, %r2648, %r9203, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9226, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9227, %r9203, %r9226;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9230, %r9222, %r9227;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9233, %r822, %r2648, %r9214, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9237, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9238, %r9214, %r9237;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9241, %r9233, %r9238;
	// end inline asm
	// begin inline asm
	mov.b32 %r9249, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r9260, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9246, %r811, %r2672, %r9249, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9250, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9251, %r9249, %r9250;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9254, %r9246, %r9251;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9257, %r822, %r2672, %r9260, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9261, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9262, %r9260, %r9261;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9265, %r9257, %r9262;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9268, %r811, %r2694, %r9249, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9272, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9273, %r9249, %r9272;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9276, %r9268, %r9273;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9279, %r822, %r2694, %r9260, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9283, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9284, %r9260, %r9283;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9287, %r9279, %r9284;
	// end inline asm
	// begin inline asm
	mov.b32 %r9295, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r9306, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9292, %r811, %r2718, %r9295, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9296, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9297, %r9295, %r9296;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9300, %r9292, %r9297;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9303, %r822, %r2718, %r9306, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9307, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9308, %r9306, %r9307;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9311, %r9303, %r9308;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9314, %r811, %r2740, %r9295, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9318, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9319, %r9295, %r9318;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9322, %r9314, %r9319;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9325, %r822, %r2740, %r9306, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9329, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9330, %r9306, %r9329;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9333, %r9325, %r9330;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9336, %r258, %r8978, %r8810;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9340, %r258, %r8989, %r8815;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9344, %r258, %r9000, %r8820;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9348, %r258, %r9011, %r8825;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9352, %r258, %r9024, %r8830;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9356, %r258, %r9035, %r8835;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9360, %r258, %r9046, %r8840;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9364, %r258, %r9057, %r8845;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9368, %r258, %r9070, %r8850;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9372, %r258, %r9081, %r8855;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9376, %r258, %r9092, %r8860;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9380, %r258, %r9103, %r8865;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9384, %r258, %r9116, %r8870;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9388, %r258, %r9127, %r8875;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9392, %r258, %r9138, %r8880;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9396, %r258, %r9149, %r8885;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9400, %r276, %r9162, %r8890;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9404, %r276, %r9173, %r8895;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9408, %r276, %r9184, %r8900;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9412, %r276, %r9195, %r8905;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9416, %r276, %r9208, %r8910;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9420, %r276, %r9219, %r8915;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9424, %r276, %r9230, %r8920;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9428, %r276, %r9241, %r8925;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9432, %r276, %r9254, %r8930;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9436, %r276, %r9265, %r8935;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9440, %r276, %r9276, %r8940;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9444, %r276, %r9287, %r8945;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9448, %r276, %r9300, %r8950;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9452, %r276, %r9311, %r8955;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9456, %r276, %r9322, %r8960;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9460, %r276, %r9333, %r8965;
	// end inline asm
	// begin inline asm
	mov.b32 %r9469, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r9480, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9466, %r811, %r812, %r9469, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9470, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9471, %r9469, %r9470;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9474, %r9466, %r9471;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9477, %r822, %r812, %r9480, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9481, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9482, %r9480, %r9481;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9485, %r9477, %r9482;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9488, %r811, %r834, %r9469, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9492, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9493, %r9469, %r9492;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9496, %r9488, %r9493;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9499, %r822, %r834, %r9480, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9503, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9504, %r9480, %r9503;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9507, %r9499, %r9504;
	// end inline asm
	// begin inline asm
	mov.b32 %r9515, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r9526, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9512, %r811, %r858, %r9515, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9516, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9517, %r9515, %r9516;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9520, %r9512, %r9517;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9523, %r822, %r858, %r9526, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9527, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9528, %r9526, %r9527;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9531, %r9523, %r9528;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9534, %r811, %r880, %r9515, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9538, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9539, %r9515, %r9538;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9542, %r9534, %r9539;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9545, %r822, %r880, %r9526, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9549, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9550, %r9526, %r9549;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9553, %r9545, %r9550;
	// end inline asm
	// begin inline asm
	mov.b32 %r9561, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r9572, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9558, %r811, %r904, %r9561, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9562, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9563, %r9561, %r9562;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9566, %r9558, %r9563;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9569, %r822, %r904, %r9572, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9573, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9574, %r9572, %r9573;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9577, %r9569, %r9574;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9580, %r811, %r926, %r9561, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9584, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9585, %r9561, %r9584;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9588, %r9580, %r9585;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9591, %r822, %r926, %r9572, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9595, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9596, %r9572, %r9595;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9599, %r9591, %r9596;
	// end inline asm
	// begin inline asm
	mov.b32 %r9607, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r9618, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9604, %r811, %r950, %r9607, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9608, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9609, %r9607, %r9608;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9612, %r9604, %r9609;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9615, %r822, %r950, %r9618, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9619, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9620, %r9618, %r9619;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9623, %r9615, %r9620;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9626, %r811, %r972, %r9607, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9630, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9631, %r9607, %r9630;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9634, %r9626, %r9631;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9637, %r822, %r972, %r9618, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9641, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9642, %r9618, %r9641;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9645, %r9637, %r9642;
	// end inline asm
	// begin inline asm
	mov.b32 %r9653, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r9664, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9650, %r811, %r996, %r9653, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9654, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9655, %r9653, %r9654;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9658, %r9650, %r9655;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9661, %r822, %r996, %r9664, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9665, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9666, %r9664, %r9665;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9669, %r9661, %r9666;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9672, %r811, %r1018, %r9653, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9676, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9677, %r9653, %r9676;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9680, %r9672, %r9677;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9683, %r822, %r1018, %r9664, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9687, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9688, %r9664, %r9687;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9691, %r9683, %r9688;
	// end inline asm
	// begin inline asm
	mov.b32 %r9699, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r9710, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9696, %r811, %r1042, %r9699, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9700, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9701, %r9699, %r9700;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9704, %r9696, %r9701;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9707, %r822, %r1042, %r9710, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9711, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9712, %r9710, %r9711;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9715, %r9707, %r9712;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9718, %r811, %r1064, %r9699, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9722, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9723, %r9699, %r9722;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9726, %r9718, %r9723;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9729, %r822, %r1064, %r9710, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9733, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9734, %r9710, %r9733;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9737, %r9729, %r9734;
	// end inline asm
	// begin inline asm
	mov.b32 %r9745, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r9756, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9742, %r811, %r1088, %r9745, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9746, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9747, %r9745, %r9746;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9750, %r9742, %r9747;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9753, %r822, %r1088, %r9756, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9757, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9758, %r9756, %r9757;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9761, %r9753, %r9758;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9764, %r811, %r1110, %r9745, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9768, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9769, %r9745, %r9768;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9772, %r9764, %r9769;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9775, %r822, %r1110, %r9756, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9779, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9780, %r9756, %r9779;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9783, %r9775, %r9780;
	// end inline asm
	// begin inline asm
	mov.b32 %r9791, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r9802, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9788, %r811, %r1134, %r9791, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9792, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9793, %r9791, %r9792;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9796, %r9788, %r9793;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9799, %r822, %r1134, %r9802, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9803, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9804, %r9802, %r9803;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9807, %r9799, %r9804;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9810, %r811, %r1156, %r9791, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9814, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9815, %r9791, %r9814;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9818, %r9810, %r9815;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9821, %r822, %r1156, %r9802, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9825, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9826, %r9802, %r9825;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9829, %r9821, %r9826;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9832, %r294;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9834, %r9832, %r9474, %r9336;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9838, %r294;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9840, %r9838, %r9485, %r9340;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9844, %r294;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9846, %r9844, %r9496, %r9344;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9850, %r294;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9852, %r9850, %r9507, %r9348;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9856, %r294;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9858, %r9856, %r9520, %r9352;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9862, %r294;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9864, %r9862, %r9531, %r9356;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9868, %r294;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9870, %r9868, %r9542, %r9360;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9874, %r294;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9876, %r9874, %r9553, %r9364;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9880, %r294;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9882, %r9880, %r9566, %r9368;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9886, %r294;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9888, %r9886, %r9577, %r9372;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9892, %r294;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9894, %r9892, %r9588, %r9376;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9898, %r294;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9900, %r9898, %r9599, %r9380;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9904, %r294;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9906, %r9904, %r9612, %r9384;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9910, %r294;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9912, %r9910, %r9623, %r9388;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9916, %r294;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9918, %r9916, %r9634, %r9392;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9922, %r294;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9924, %r9922, %r9645, %r9396;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9928, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9930, %r9928, %r9658, %r9400;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9934, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9936, %r9934, %r9669, %r9404;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9940, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9942, %r9940, %r9680, %r9408;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9946, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9948, %r9946, %r9691, %r9412;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9952, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9954, %r9952, %r9704, %r9416;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9958, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9960, %r9958, %r9715, %r9420;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9964, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9966, %r9964, %r9726, %r9424;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9970, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9972, %r9970, %r9737, %r9428;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9976, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9978, %r9976, %r9750, %r9432;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9982, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9984, %r9982, %r9761, %r9436;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9988, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9990, %r9988, %r9772, %r9440;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9994, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9996, %r9994, %r9783, %r9444;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10000, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10002, %r10000, %r9796, %r9448;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10006, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10008, %r10006, %r9807, %r9452;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10012, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10014, %r10012, %r9818, %r9456;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10018, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10020, %r10018, %r9829, %r9460;
	// end inline asm
	// begin inline asm
	mov.b32 %r10029, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r10040, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10026, %r811, %r4628, %r10029, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10030, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10031, %r10029, %r10030;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10034, %r10026, %r10031;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10037, %r822, %r4628, %r10040, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10041, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10042, %r10040, %r10041;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10045, %r10037, %r10042;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10048, %r811, %r4650, %r10029, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10052, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10053, %r10029, %r10052;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10056, %r10048, %r10053;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10059, %r822, %r4650, %r10040, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10063, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10064, %r10040, %r10063;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10067, %r10059, %r10064;
	// end inline asm
	// begin inline asm
	mov.b32 %r10075, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r10086, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10072, %r811, %r4674, %r10075, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10076, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10077, %r10075, %r10076;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10080, %r10072, %r10077;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10083, %r822, %r4674, %r10086, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10087, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10088, %r10086, %r10087;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10091, %r10083, %r10088;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10094, %r811, %r4696, %r10075, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10098, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10099, %r10075, %r10098;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10102, %r10094, %r10099;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10105, %r822, %r4696, %r10086, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10109, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10110, %r10086, %r10109;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10113, %r10105, %r10110;
	// end inline asm
	// begin inline asm
	mov.b32 %r10121, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r10132, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10118, %r811, %r4720, %r10121, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10122, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10123, %r10121, %r10122;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10126, %r10118, %r10123;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10129, %r822, %r4720, %r10132, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10133, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10134, %r10132, %r10133;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10137, %r10129, %r10134;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10140, %r811, %r4742, %r10121, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10144, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10145, %r10121, %r10144;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10148, %r10140, %r10145;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10151, %r822, %r4742, %r10132, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10155, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10156, %r10132, %r10155;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10159, %r10151, %r10156;
	// end inline asm
	// begin inline asm
	mov.b32 %r10167, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r10178, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10164, %r811, %r4766, %r10167, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10168, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10169, %r10167, %r10168;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10172, %r10164, %r10169;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10175, %r822, %r4766, %r10178, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10179, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10180, %r10178, %r10179;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10183, %r10175, %r10180;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10186, %r811, %r4788, %r10167, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10190, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10191, %r10167, %r10190;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10194, %r10186, %r10191;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10197, %r822, %r4788, %r10178, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10201, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10202, %r10178, %r10201;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10205, %r10197, %r10202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10213, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r10224, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10210, %r811, %r4812, %r10213, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10214, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10215, %r10213, %r10214;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10218, %r10210, %r10215;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10221, %r822, %r4812, %r10224, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10225, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10226, %r10224, %r10225;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10229, %r10221, %r10226;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10232, %r811, %r4834, %r10213, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10236, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10237, %r10213, %r10236;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10240, %r10232, %r10237;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10243, %r822, %r4834, %r10224, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10247, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10248, %r10224, %r10247;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10251, %r10243, %r10248;
	// end inline asm
	// begin inline asm
	mov.b32 %r10259, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r10270, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10256, %r811, %r4858, %r10259, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10260, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10261, %r10259, %r10260;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10264, %r10256, %r10261;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10267, %r822, %r4858, %r10270, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10271, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10272, %r10270, %r10271;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10275, %r10267, %r10272;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10278, %r811, %r4880, %r10259, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10282, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10283, %r10259, %r10282;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10286, %r10278, %r10283;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10289, %r822, %r4880, %r10270, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10293, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10294, %r10270, %r10293;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10297, %r10289, %r10294;
	// end inline asm
	// begin inline asm
	mov.b32 %r10305, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r10316, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10302, %r811, %r4904, %r10305, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10306, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10307, %r10305, %r10306;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10310, %r10302, %r10307;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10313, %r822, %r4904, %r10316, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10317, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10318, %r10316, %r10317;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10321, %r10313, %r10318;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10324, %r811, %r4926, %r10305, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10328, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10329, %r10305, %r10328;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10332, %r10324, %r10329;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10335, %r822, %r4926, %r10316, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10339, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10340, %r10316, %r10339;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10343, %r10335, %r10340;
	// end inline asm
	// begin inline asm
	mov.b32 %r10351, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r10362, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10348, %r811, %r4950, %r10351, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10352, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10353, %r10351, %r10352;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10356, %r10348, %r10353;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10359, %r822, %r4950, %r10362, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10363, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10364, %r10362, %r10363;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10367, %r10359, %r10364;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10370, %r811, %r4972, %r10351, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10374, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10375, %r10351, %r10374;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10378, %r10370, %r10375;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10381, %r822, %r4972, %r10362, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10385, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10386, %r10362, %r10385;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10389, %r10381, %r10386;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10527, %r330, %r10034, %r9834;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10524, %r330, %r10045, %r9840;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10536, %r330, %r10056, %r9846;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10533, %r330, %r10067, %r9852;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10545, %r330, %r10080, %r9858;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10542, %r330, %r10091, %r9864;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10554, %r330, %r10102, %r9870;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10551, %r330, %r10113, %r9876;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10563, %r330, %r10126, %r9882;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10560, %r330, %r10137, %r9888;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10572, %r330, %r10148, %r9894;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10569, %r330, %r10159, %r9900;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10581, %r330, %r10172, %r9906;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10578, %r330, %r10183, %r9912;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10590, %r330, %r10194, %r9918;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10587, %r330, %r10205, %r9924;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10599, %r348, %r10218, %r9930;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10596, %r348, %r10229, %r9936;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10608, %r348, %r10240, %r9942;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10605, %r348, %r10251, %r9948;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10617, %r348, %r10264, %r9954;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10614, %r348, %r10275, %r9960;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10626, %r348, %r10286, %r9966;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10623, %r348, %r10297, %r9972;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10635, %r348, %r10310, %r9978;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10632, %r348, %r10321, %r9984;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10644, %r348, %r10332, %r9990;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10641, %r348, %r10343, %r9996;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10653, %r348, %r10356, %r10002;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10650, %r348, %r10367, %r10008;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10662, %r348, %r10378, %r10014;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10659, %r348, %r10389, %r10020;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10520, %r393;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10522, %r10520, %r10524;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10525, %r387, %r10527, %r10522;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10529, %r393;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10531, %r10529, %r10533;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10534, %r387, %r10536, %r10531;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10538, %r393;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10540, %r10538, %r10542;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10543, %r387, %r10545, %r10540;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10547, %r393;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10549, %r10547, %r10551;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10552, %r387, %r10554, %r10549;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10556, %r393;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10558, %r10556, %r10560;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10561, %r387, %r10563, %r10558;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10565, %r393;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10567, %r10565, %r10569;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10570, %r387, %r10572, %r10567;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10574, %r393;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10576, %r10574, %r10578;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10579, %r387, %r10581, %r10576;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10583, %r393;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10585, %r10583, %r10587;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10588, %r387, %r10590, %r10585;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10592, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10594, %r10592, %r10596;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10597, %r390, %r10599, %r10594;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10601, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10603, %r10601, %r10605;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10606, %r390, %r10608, %r10603;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10610, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10612, %r10610, %r10614;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10615, %r390, %r10617, %r10612;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10619, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10621, %r10619, %r10623;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10624, %r390, %r10626, %r10621;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10628, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10630, %r10628, %r10632;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10633, %r390, %r10635, %r10630;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10637, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10639, %r10637, %r10641;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10642, %r390, %r10644, %r10639;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10646, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10648, %r10646, %r10650;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10651, %r390, %r10653, %r10648;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10655, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10657, %r10655, %r10659;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10660, %r390, %r10662, %r10657;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10664, %r393, %r10527;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10667, %r387, %r10524, %r10664;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10671, %r393, %r10536;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10674, %r387, %r10533, %r10671;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10678, %r393, %r10545;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10681, %r387, %r10542, %r10678;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10685, %r393, %r10554;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10688, %r387, %r10551, %r10685;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10692, %r393, %r10563;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10695, %r387, %r10560, %r10692;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10699, %r393, %r10572;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10702, %r387, %r10569, %r10699;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10706, %r393, %r10581;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10709, %r387, %r10578, %r10706;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10713, %r393, %r10590;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10716, %r387, %r10587, %r10713;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10720, %r396, %r10599;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10723, %r390, %r10596, %r10720;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10727, %r396, %r10608;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10730, %r390, %r10605, %r10727;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10734, %r396, %r10617;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10737, %r390, %r10614, %r10734;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10741, %r396, %r10626;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10744, %r390, %r10623, %r10741;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10748, %r396, %r10635;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10751, %r390, %r10632, %r10748;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10755, %r396, %r10644;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10758, %r390, %r10641, %r10755;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10762, %r396, %r10653;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10765, %r390, %r10650, %r10762;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10769, %r396, %r10662;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10772, %r390, %r10659, %r10769;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r10943, %r10940}, {%r454, %r460, %r457, %r463}, {%r10525, %r10667}, {%r3152, %r3152};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r10952, %r10949}, {%r454, %r460, %r457, %r463}, {%r10534, %r10674}, {%r3152, %r3152};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r10961, %r10958}, {%r454, %r460, %r457, %r463}, {%r10543, %r10681}, {%r3152, %r3152};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r10970, %r10967}, {%r454, %r460, %r457, %r463}, {%r10552, %r10688}, {%r3152, %r3152};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r10979, %r10976}, {%r454, %r460, %r457, %r463}, {%r10561, %r10695}, {%r3152, %r3152};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r10988, %r10985}, {%r454, %r460, %r457, %r463}, {%r10570, %r10702}, {%r3152, %r3152};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r10997, %r10994}, {%r454, %r460, %r457, %r463}, {%r10579, %r10709}, {%r3152, %r3152};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11006, %r11003}, {%r454, %r460, %r457, %r463}, {%r10588, %r10716}, {%r3152, %r3152};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11015, %r11012}, {%r454, %r460, %r457, %r463}, {%r10597, %r10723}, {%r3152, %r3152};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11024, %r11021}, {%r454, %r460, %r457, %r463}, {%r10606, %r10730}, {%r3152, %r3152};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11033, %r11030}, {%r454, %r460, %r457, %r463}, {%r10615, %r10737}, {%r3152, %r3152};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11042, %r11039}, {%r454, %r460, %r457, %r463}, {%r10624, %r10744}, {%r3152, %r3152};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11051, %r11048}, {%r454, %r460, %r457, %r463}, {%r10633, %r10751}, {%r3152, %r3152};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11060, %r11057}, {%r454, %r460, %r457, %r463}, {%r10642, %r10758}, {%r3152, %r3152};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11069, %r11066}, {%r454, %r460, %r457, %r463}, {%r10651, %r10765}, {%r3152, %r3152};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11078, %r11075}, {%r454, %r460, %r457, %r463}, {%r10660, %r10772}, {%r3152, %r3152};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10936, %r507;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10938, %r10936, %r10940;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10941, %r504, %r10943, %r10938;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10945, %r507;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10947, %r10945, %r10949;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10950, %r504, %r10952, %r10947;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10954, %r507;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10956, %r10954, %r10958;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10959, %r504, %r10961, %r10956;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10963, %r507;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10965, %r10963, %r10967;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10968, %r504, %r10970, %r10965;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10972, %r507;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10974, %r10972, %r10976;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10977, %r504, %r10979, %r10974;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10981, %r507;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10983, %r10981, %r10985;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10986, %r504, %r10988, %r10983;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10990, %r507;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10992, %r10990, %r10994;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10995, %r504, %r10997, %r10992;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10999, %r507;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11001, %r10999, %r11003;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11004, %r504, %r11006, %r11001;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11008, %r507;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11010, %r11008, %r11012;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11013, %r504, %r11015, %r11010;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11017, %r507;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11019, %r11017, %r11021;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11022, %r504, %r11024, %r11019;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11026, %r507;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11028, %r11026, %r11030;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11031, %r504, %r11033, %r11028;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11035, %r507;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11037, %r11035, %r11039;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11040, %r504, %r11042, %r11037;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11044, %r507;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11046, %r11044, %r11048;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11049, %r504, %r11051, %r11046;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11053, %r507;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11055, %r11053, %r11057;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11058, %r504, %r11060, %r11055;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11062, %r507;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11064, %r11062, %r11066;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11067, %r504, %r11069, %r11064;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11071, %r507;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11073, %r11071, %r11075;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11076, %r504, %r11078, %r11073;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11080, %r507, %r10943;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11083, %r504, %r10940, %r11080;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11087, %r507, %r10952;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11090, %r504, %r10949, %r11087;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11094, %r507, %r10961;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11097, %r504, %r10958, %r11094;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11101, %r507, %r10970;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11104, %r504, %r10967, %r11101;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11108, %r507, %r10979;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11111, %r504, %r10976, %r11108;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11115, %r507, %r10988;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11118, %r504, %r10985, %r11115;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11122, %r507, %r10997;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11125, %r504, %r10994, %r11122;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11129, %r507, %r11006;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11132, %r504, %r11003, %r11129;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11136, %r507, %r11015;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11139, %r504, %r11012, %r11136;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11143, %r507, %r11024;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11146, %r504, %r11021, %r11143;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11150, %r507, %r11033;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11153, %r504, %r11030, %r11150;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11157, %r507, %r11042;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11160, %r504, %r11039, %r11157;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11164, %r507, %r11051;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11167, %r504, %r11048, %r11164;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11171, %r507, %r11060;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11174, %r504, %r11057, %r11171;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11178, %r507, %r11069;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11181, %r504, %r11066, %r11178;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11185, %r507, %r11078;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11188, %r504, %r11075, %r11185;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11481, %r11484}, {%r542, %r548, %r545, %r551}, {%r10941, %r11083}, {%r3152, %r3152};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11487, %r11490}, {%r542, %r548, %r545, %r551}, {%r10950, %r11090}, {%r3152, %r3152};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11493, %r11496}, {%r542, %r548, %r545, %r551}, {%r10959, %r11097}, {%r3152, %r3152};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11499, %r11502}, {%r542, %r548, %r545, %r551}, {%r10968, %r11104}, {%r3152, %r3152};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11505, %r11508}, {%r542, %r548, %r545, %r551}, {%r10977, %r11111}, {%r3152, %r3152};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11511, %r11514}, {%r542, %r548, %r545, %r551}, {%r10986, %r11118}, {%r3152, %r3152};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11517, %r11520}, {%r542, %r548, %r545, %r551}, {%r10995, %r11125}, {%r3152, %r3152};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11523, %r11526}, {%r542, %r548, %r545, %r551}, {%r11004, %r11132}, {%r3152, %r3152};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11482, %r11485}, {%r542, %r548, %r545, %r551}, {%r11013, %r11139}, {%r3152, %r3152};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11488, %r11491}, {%r542, %r548, %r545, %r551}, {%r11022, %r11146}, {%r3152, %r3152};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11494, %r11497}, {%r542, %r548, %r545, %r551}, {%r11031, %r11153}, {%r3152, %r3152};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11500, %r11503}, {%r542, %r548, %r545, %r551}, {%r11040, %r11160}, {%r3152, %r3152};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11506, %r11509}, {%r542, %r548, %r545, %r551}, {%r11049, %r11167}, {%r3152, %r3152};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11512, %r11515}, {%r542, %r548, %r545, %r551}, {%r11058, %r11174}, {%r3152, %r3152};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11518, %r11521}, {%r542, %r548, %r545, %r551}, {%r11067, %r11181}, {%r3152, %r3152};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11524, %r11527}, {%r542, %r548, %r545, %r551}, {%r11076, %r11188}, {%r3152, %r3152};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11480, %r11481, %r11482;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11483, %r11484, %r11485;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11486, %r11487, %r11488;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11489, %r11490, %r11491;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11492, %r11493, %r11494;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11495, %r11496, %r11497;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11498, %r11499, %r11500;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11501, %r11502, %r11503;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11504, %r11505, %r11506;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11507, %r11508, %r11509;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11510, %r11511, %r11512;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11513, %r11514, %r11515;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11516, %r11517, %r11518;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11519, %r11520, %r11521;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11522, %r11523, %r11524;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11525, %r11526, %r11527;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11528, %r11481, %r11482;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11531, %r11484, %r11485;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11534, %r11487, %r11488;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11537, %r11490, %r11491;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11540, %r11493, %r11494;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11543, %r11496, %r11497;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11546, %r11499, %r11500;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11549, %r11502, %r11503;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11552, %r11505, %r11506;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11555, %r11508, %r11509;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11558, %r11511, %r11512;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11561, %r11514, %r11515;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11564, %r11517, %r11518;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11567, %r11520, %r11521;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11570, %r11523, %r11524;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11573, %r11526, %r11527;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11576, %r128, %r11480;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11579, %r128, %r11483;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11582, %r128, %r11486;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11585, %r128, %r11489;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11588, %r128, %r11492;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11591, %r128, %r11495;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11594, %r128, %r11498;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11597, %r128, %r11501;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11600, %r128, %r11504;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11603, %r128, %r11507;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11606, %r128, %r11510;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11609, %r128, %r11513;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11612, %r128, %r11516;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11615, %r128, %r11519;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11618, %r128, %r11522;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11621, %r128, %r11525;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11624, %r129, %r11528;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11627, %r129, %r11531;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11630, %r129, %r11534;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11633, %r129, %r11537;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11636, %r129, %r11540;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11639, %r129, %r11543;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11642, %r129, %r11546;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11645, %r129, %r11549;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11648, %r129, %r11552;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11651, %r129, %r11555;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11654, %r129, %r11558;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11657, %r129, %r11561;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11660, %r129, %r11564;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11663, %r129, %r11567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11666, %r129, %r11570;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11669, %r129, %r11573;
	// end inline asm
	// begin inline asm
	mov.b32 %r11672, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11673, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11674, %r11576, %r11672;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11677, %r11674, %r11673;
	// end inline asm
	// begin inline asm
	mov.b32 %r11680, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11681, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11682, %r11579, %r11680;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11685, %r11682, %r11681;
	// end inline asm
	// begin inline asm
	mov.b32 %r11688, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11689, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11690, %r11582, %r11688;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11693, %r11690, %r11689;
	// end inline asm
	// begin inline asm
	mov.b32 %r11696, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11697, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11698, %r11585, %r11696;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11701, %r11698, %r11697;
	// end inline asm
	// begin inline asm
	mov.b32 %r11704, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11705, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11706, %r11588, %r11704;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11709, %r11706, %r11705;
	// end inline asm
	// begin inline asm
	mov.b32 %r11712, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11713, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11714, %r11591, %r11712;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11717, %r11714, %r11713;
	// end inline asm
	// begin inline asm
	mov.b32 %r11720, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11721, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11722, %r11594, %r11720;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11725, %r11722, %r11721;
	// end inline asm
	// begin inline asm
	mov.b32 %r11728, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11729, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11730, %r11597, %r11728;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11733, %r11730, %r11729;
	// end inline asm
	// begin inline asm
	mov.b32 %r11736, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11737, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11738, %r11600, %r11736;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11741, %r11738, %r11737;
	// end inline asm
	// begin inline asm
	mov.b32 %r11744, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11745, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11746, %r11603, %r11744;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11749, %r11746, %r11745;
	// end inline asm
	// begin inline asm
	mov.b32 %r11752, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11753, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11754, %r11606, %r11752;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11757, %r11754, %r11753;
	// end inline asm
	// begin inline asm
	mov.b32 %r11760, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11761, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11762, %r11609, %r11760;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11765, %r11762, %r11761;
	// end inline asm
	// begin inline asm
	mov.b32 %r11768, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11769, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11770, %r11612, %r11768;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11773, %r11770, %r11769;
	// end inline asm
	// begin inline asm
	mov.b32 %r11776, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11777, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11778, %r11615, %r11776;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11781, %r11778, %r11777;
	// end inline asm
	// begin inline asm
	mov.b32 %r11784, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11785, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11786, %r11618, %r11784;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11789, %r11786, %r11785;
	// end inline asm
	// begin inline asm
	mov.b32 %r11792, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11793, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11794, %r11621, %r11792;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11797, %r11794, %r11793;
	// end inline asm
	// begin inline asm
	mov.b32 %r11800, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11801, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11802, %r11624, %r11800;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11805, %r11802, %r11801;
	// end inline asm
	// begin inline asm
	mov.b32 %r11808, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11809, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11810, %r11627, %r11808;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11813, %r11810, %r11809;
	// end inline asm
	// begin inline asm
	mov.b32 %r11816, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11817, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11818, %r11630, %r11816;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11821, %r11818, %r11817;
	// end inline asm
	// begin inline asm
	mov.b32 %r11824, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11825, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11826, %r11633, %r11824;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11829, %r11826, %r11825;
	// end inline asm
	// begin inline asm
	mov.b32 %r11832, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11833, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11834, %r11636, %r11832;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11837, %r11834, %r11833;
	// end inline asm
	// begin inline asm
	mov.b32 %r11840, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11841, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11842, %r11639, %r11840;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11845, %r11842, %r11841;
	// end inline asm
	// begin inline asm
	mov.b32 %r11848, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11849, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11850, %r11642, %r11848;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11853, %r11850, %r11849;
	// end inline asm
	// begin inline asm
	mov.b32 %r11856, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11857, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11858, %r11645, %r11856;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11861, %r11858, %r11857;
	// end inline asm
	// begin inline asm
	mov.b32 %r11864, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11865, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11866, %r11648, %r11864;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11869, %r11866, %r11865;
	// end inline asm
	// begin inline asm
	mov.b32 %r11872, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11873, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11874, %r11651, %r11872;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11877, %r11874, %r11873;
	// end inline asm
	// begin inline asm
	mov.b32 %r11880, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11881, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11882, %r11654, %r11880;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11885, %r11882, %r11881;
	// end inline asm
	// begin inline asm
	mov.b32 %r11888, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11889, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11890, %r11657, %r11888;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11893, %r11890, %r11889;
	// end inline asm
	// begin inline asm
	mov.b32 %r11896, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11897, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11898, %r11660, %r11896;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11901, %r11898, %r11897;
	// end inline asm
	// begin inline asm
	mov.b32 %r11904, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11905, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11906, %r11663, %r11904;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11909, %r11906, %r11905;
	// end inline asm
	// begin inline asm
	mov.b32 %r11912, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11913, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11914, %r11666, %r11912;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11917, %r11914, %r11913;
	// end inline asm
	// begin inline asm
	mov.b32 %r11920, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11921, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11922, %r11669, %r11920;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11925, %r11922, %r11921;
	// end inline asm
	// begin inline asm
	mov.b32 %r11931, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r11929, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11930, %r11931, %r11929;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11933, %r11677, %r11930;
	// end inline asm
	// begin inline asm
	mov.b32 %r11936, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11937, %r11931, %r11936;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11940, %r11685, %r11937;
	// end inline asm
	// begin inline asm
	mov.b32 %r11943, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11944, %r11931, %r11943;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11947, %r11693, %r11944;
	// end inline asm
	// begin inline asm
	mov.b32 %r11950, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11951, %r11931, %r11950;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11954, %r11701, %r11951;
	// end inline asm
	// begin inline asm
	prmt.b32 %r11957, %r11933, %r11947, %r4328;
	// end inline asm
	// begin inline asm
	prmt.b32 %r11961, %r11940, %r11954, %r4328;
	// end inline asm
	shl.b32 	%r11968, %r11961, 4;
	// begin inline asm
	lop3.b32 %r11965, %r4334, %r11957, %r11968, 202;
	// end inline asm
	xor.b32  	%r16138, %r11965, -2004318072;
	// begin inline asm
	mov.b32 %r11972, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r11970, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11971, %r11972, %r11970;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11974, %r11709, %r11971;
	// end inline asm
	// begin inline asm
	mov.b32 %r11977, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11978, %r11972, %r11977;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11981, %r11717, %r11978;
	// end inline asm
	// begin inline asm
	mov.b32 %r11984, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11985, %r11972, %r11984;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11988, %r11725, %r11985;
	// end inline asm
	// begin inline asm
	mov.b32 %r11991, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11992, %r11972, %r11991;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11995, %r11733, %r11992;
	// end inline asm
	// begin inline asm
	prmt.b32 %r11998, %r11974, %r11988, %r4328;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12002, %r11981, %r11995, %r4328;
	// end inline asm
	shl.b32 	%r12009, %r12002, 4;
	// begin inline asm
	lop3.b32 %r12006, %r4334, %r11998, %r12009, 202;
	// end inline asm
	xor.b32  	%r16139, %r12006, -2004318072;
	// begin inline asm
	mov.b32 %r12013, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r12011, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12012, %r12013, %r12011;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12015, %r11741, %r12012;
	// end inline asm
	// begin inline asm
	mov.b32 %r12018, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12019, %r12013, %r12018;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12022, %r11749, %r12019;
	// end inline asm
	// begin inline asm
	mov.b32 %r12025, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12026, %r12013, %r12025;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12029, %r11757, %r12026;
	// end inline asm
	// begin inline asm
	mov.b32 %r12032, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12033, %r12013, %r12032;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12036, %r11765, %r12033;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12039, %r12015, %r12029, %r4328;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12043, %r12022, %r12036, %r4328;
	// end inline asm
	shl.b32 	%r12050, %r12043, 4;
	// begin inline asm
	lop3.b32 %r12047, %r4334, %r12039, %r12050, 202;
	// end inline asm
	xor.b32  	%r16140, %r12047, -2004318072;
	// begin inline asm
	mov.b32 %r12054, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r12052, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12053, %r12054, %r12052;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12056, %r11773, %r12053;
	// end inline asm
	// begin inline asm
	mov.b32 %r12059, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12060, %r12054, %r12059;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12063, %r11781, %r12060;
	// end inline asm
	// begin inline asm
	mov.b32 %r12066, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12067, %r12054, %r12066;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12070, %r11789, %r12067;
	// end inline asm
	// begin inline asm
	mov.b32 %r12073, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12074, %r12054, %r12073;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12077, %r11797, %r12074;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12080, %r12056, %r12070, %r4328;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12084, %r12063, %r12077, %r4328;
	// end inline asm
	shl.b32 	%r12091, %r12084, 4;
	// begin inline asm
	lop3.b32 %r12088, %r4334, %r12080, %r12091, 202;
	// end inline asm
	xor.b32  	%r16141, %r12088, -2004318072;
	// begin inline asm
	mov.b32 %r12095, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r12093, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12094, %r12095, %r12093;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12097, %r11805, %r12094;
	// end inline asm
	// begin inline asm
	mov.b32 %r12100, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12101, %r12095, %r12100;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12104, %r11813, %r12101;
	// end inline asm
	// begin inline asm
	mov.b32 %r12107, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12108, %r12095, %r12107;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12111, %r11821, %r12108;
	// end inline asm
	// begin inline asm
	mov.b32 %r12114, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12115, %r12095, %r12114;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12118, %r11829, %r12115;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12121, %r12097, %r12111, %r4328;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12125, %r12104, %r12118, %r4328;
	// end inline asm
	shl.b32 	%r12132, %r12125, 4;
	// begin inline asm
	lop3.b32 %r12129, %r4334, %r12121, %r12132, 202;
	// end inline asm
	xor.b32  	%r16142, %r12129, -2004318072;
	// begin inline asm
	mov.b32 %r12136, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r12134, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12135, %r12136, %r12134;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12138, %r11837, %r12135;
	// end inline asm
	// begin inline asm
	mov.b32 %r12141, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12142, %r12136, %r12141;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12145, %r11845, %r12142;
	// end inline asm
	// begin inline asm
	mov.b32 %r12148, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12149, %r12136, %r12148;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12152, %r11853, %r12149;
	// end inline asm
	// begin inline asm
	mov.b32 %r12155, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12156, %r12136, %r12155;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12159, %r11861, %r12156;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12162, %r12138, %r12152, %r4328;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12166, %r12145, %r12159, %r4328;
	// end inline asm
	shl.b32 	%r12173, %r12166, 4;
	// begin inline asm
	lop3.b32 %r12170, %r4334, %r12162, %r12173, 202;
	// end inline asm
	xor.b32  	%r16143, %r12170, -2004318072;
	// begin inline asm
	mov.b32 %r12177, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r12175, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12176, %r12177, %r12175;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12179, %r11869, %r12176;
	// end inline asm
	// begin inline asm
	mov.b32 %r12182, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12183, %r12177, %r12182;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12186, %r11877, %r12183;
	// end inline asm
	// begin inline asm
	mov.b32 %r12189, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12190, %r12177, %r12189;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12193, %r11885, %r12190;
	// end inline asm
	// begin inline asm
	mov.b32 %r12196, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12197, %r12177, %r12196;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12200, %r11893, %r12197;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12203, %r12179, %r12193, %r4328;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12207, %r12186, %r12200, %r4328;
	// end inline asm
	shl.b32 	%r12214, %r12207, 4;
	// begin inline asm
	lop3.b32 %r12211, %r4334, %r12203, %r12214, 202;
	// end inline asm
	xor.b32  	%r16144, %r12211, -2004318072;
	// begin inline asm
	mov.b32 %r12218, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r12216, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12217, %r12218, %r12216;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12220, %r11901, %r12217;
	// end inline asm
	// begin inline asm
	mov.b32 %r12223, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12224, %r12218, %r12223;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12227, %r11909, %r12224;
	// end inline asm
	// begin inline asm
	mov.b32 %r12230, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12231, %r12218, %r12230;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12234, %r11917, %r12231;
	// end inline asm
	// begin inline asm
	mov.b32 %r12237, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12238, %r12218, %r12237;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12241, %r11925, %r12238;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12244, %r12220, %r12234, %r4328;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12248, %r12227, %r12241, %r4328;
	// end inline asm
	shl.b32 	%r12255, %r12248, 4;
	// begin inline asm
	lop3.b32 %r12252, %r4334, %r12244, %r12255, 202;
	// end inline asm
	xor.b32  	%r16145, %r12252, -2004318072;
	st.shared.u32 	[%rd106], %r16138;
	st.shared.u32 	[%rd108], %r16139;
	st.shared.u32 	[%rd110], %r16140;
	st.shared.u32 	[%rd112], %r16141;
	st.shared.u32 	[%rd114], %r16142;
	st.shared.u32 	[%rd116], %r16143;
	st.shared.u32 	[%rd118], %r16144;
	st.shared.u32 	[%rd120], %r16145;
	ld.shared.u32 	%r16254, [%rd90];
	ld.shared.u32 	%r16255, [%rd92];
	ld.shared.u32 	%r16256, [%rd94];
	ld.shared.u32 	%r16257, [%rd96];
	ld.shared.u32 	%r16266, [%rd98];
	ld.shared.u32 	%r16267, [%rd100];
	ld.shared.u32 	%r16268, [%rd102];
	ld.shared.u32 	%r16269, [%rd104];
	// begin inline asm
	mov.b32 %r12261, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r12272, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r12260, %r16254, -2004318072;
	// begin inline asm
	lop3.b32 %r12258, %r811, %r12260, %r12261, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12262, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12263, %r12261, %r12262;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12266, %r12258, %r12263;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12269, %r822, %r12260, %r12272, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12273, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12274, %r12272, %r12273;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12277, %r12269, %r12274;
	// end inline asm
	shr.u32 	%r12282, %r12260, 8;
	// begin inline asm
	lop3.b32 %r12280, %r811, %r12282, %r12261, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12284, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12285, %r12261, %r12284;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12288, %r12280, %r12285;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12291, %r822, %r12282, %r12272, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12295, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12296, %r12272, %r12295;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12299, %r12291, %r12296;
	// end inline asm
	// begin inline asm
	mov.b32 %r12307, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r12318, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r12306, %r16255, -2004318072;
	// begin inline asm
	lop3.b32 %r12304, %r811, %r12306, %r12307, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12308, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12309, %r12307, %r12308;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12312, %r12304, %r12309;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12315, %r822, %r12306, %r12318, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12319, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12320, %r12318, %r12319;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12323, %r12315, %r12320;
	// end inline asm
	shr.u32 	%r12328, %r12306, 8;
	// begin inline asm
	lop3.b32 %r12326, %r811, %r12328, %r12307, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12330, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12331, %r12307, %r12330;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12334, %r12326, %r12331;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12337, %r822, %r12328, %r12318, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12341, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12342, %r12318, %r12341;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12345, %r12337, %r12342;
	// end inline asm
	// begin inline asm
	mov.b32 %r12353, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r12364, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r12352, %r16256, -2004318072;
	// begin inline asm
	lop3.b32 %r12350, %r811, %r12352, %r12353, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12354, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12355, %r12353, %r12354;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12358, %r12350, %r12355;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12361, %r822, %r12352, %r12364, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12365, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12366, %r12364, %r12365;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12369, %r12361, %r12366;
	// end inline asm
	shr.u32 	%r12374, %r12352, 8;
	// begin inline asm
	lop3.b32 %r12372, %r811, %r12374, %r12353, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12376, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12377, %r12353, %r12376;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12380, %r12372, %r12377;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12383, %r822, %r12374, %r12364, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12387, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12388, %r12364, %r12387;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12391, %r12383, %r12388;
	// end inline asm
	// begin inline asm
	mov.b32 %r12399, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r12410, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r12398, %r16257, -2004318072;
	// begin inline asm
	lop3.b32 %r12396, %r811, %r12398, %r12399, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12400, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12401, %r12399, %r12400;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12404, %r12396, %r12401;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12407, %r822, %r12398, %r12410, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12411, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12412, %r12410, %r12411;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12415, %r12407, %r12412;
	// end inline asm
	shr.u32 	%r12420, %r12398, 8;
	// begin inline asm
	lop3.b32 %r12418, %r811, %r12420, %r12399, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12422, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12423, %r12399, %r12422;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12426, %r12418, %r12423;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12429, %r822, %r12420, %r12410, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12433, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12434, %r12410, %r12433;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12437, %r12429, %r12434;
	// end inline asm
	// begin inline asm
	mov.b32 %r12445, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r12456, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r12444, %r16266, -2004318072;
	// begin inline asm
	lop3.b32 %r12442, %r811, %r12444, %r12445, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12446, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12447, %r12445, %r12446;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12450, %r12442, %r12447;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12453, %r822, %r12444, %r12456, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12457, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12458, %r12456, %r12457;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12461, %r12453, %r12458;
	// end inline asm
	shr.u32 	%r12466, %r12444, 8;
	// begin inline asm
	lop3.b32 %r12464, %r811, %r12466, %r12445, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12468, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12469, %r12445, %r12468;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12472, %r12464, %r12469;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12475, %r822, %r12466, %r12456, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12479, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12480, %r12456, %r12479;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12483, %r12475, %r12480;
	// end inline asm
	// begin inline asm
	mov.b32 %r12491, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r12502, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r12490, %r16267, -2004318072;
	// begin inline asm
	lop3.b32 %r12488, %r811, %r12490, %r12491, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12492, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12493, %r12491, %r12492;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12496, %r12488, %r12493;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12499, %r822, %r12490, %r12502, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12503, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12504, %r12502, %r12503;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12507, %r12499, %r12504;
	// end inline asm
	shr.u32 	%r12512, %r12490, 8;
	// begin inline asm
	lop3.b32 %r12510, %r811, %r12512, %r12491, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12514, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12515, %r12491, %r12514;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12518, %r12510, %r12515;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12521, %r822, %r12512, %r12502, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12525, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12526, %r12502, %r12525;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12529, %r12521, %r12526;
	// end inline asm
	// begin inline asm
	mov.b32 %r12537, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r12548, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r12536, %r16268, -2004318072;
	// begin inline asm
	lop3.b32 %r12534, %r811, %r12536, %r12537, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12538, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12539, %r12537, %r12538;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12542, %r12534, %r12539;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12545, %r822, %r12536, %r12548, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12549, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12550, %r12548, %r12549;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12553, %r12545, %r12550;
	// end inline asm
	shr.u32 	%r12558, %r12536, 8;
	// begin inline asm
	lop3.b32 %r12556, %r811, %r12558, %r12537, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12560, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12561, %r12537, %r12560;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12564, %r12556, %r12561;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12567, %r822, %r12558, %r12548, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12571, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12572, %r12548, %r12571;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12575, %r12567, %r12572;
	// end inline asm
	// begin inline asm
	mov.b32 %r12583, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r12594, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r12582, %r16269, -2004318072;
	// begin inline asm
	lop3.b32 %r12580, %r811, %r12582, %r12583, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12584, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12585, %r12583, %r12584;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12588, %r12580, %r12585;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12591, %r822, %r12582, %r12594, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12595, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12596, %r12594, %r12595;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12599, %r12591, %r12596;
	// end inline asm
	shr.u32 	%r12604, %r12582, 8;
	// begin inline asm
	lop3.b32 %r12602, %r811, %r12604, %r12583, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12606, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12607, %r12583, %r12606;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12610, %r12602, %r12607;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12613, %r822, %r12604, %r12594, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12617, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12618, %r12594, %r12617;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12621, %r12613, %r12618;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12624, %r366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12626, %r12624, %r12266;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12629, %r366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12631, %r12629, %r12277;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12634, %r366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12636, %r12634, %r12288;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12639, %r366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12641, %r12639, %r12299;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12644, %r366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12646, %r12644, %r12312;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12649, %r366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12651, %r12649, %r12323;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12654, %r366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12656, %r12654, %r12334;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12659, %r366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12661, %r12659, %r12345;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12664, %r366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12666, %r12664, %r12358;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12669, %r366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12671, %r12669, %r12369;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12674, %r366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12676, %r12674, %r12380;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12679, %r366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12681, %r12679, %r12391;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12684, %r366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12686, %r12684, %r12404;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12689, %r366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12691, %r12689, %r12415;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12694, %r366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12696, %r12694, %r12426;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12699, %r366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12701, %r12699, %r12437;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12704, %r384;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12706, %r12704, %r12450;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12709, %r384;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12711, %r12709, %r12461;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12714, %r384;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12716, %r12714, %r12472;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12719, %r384;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12721, %r12719, %r12483;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12724, %r384;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12726, %r12724, %r12496;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12729, %r384;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12731, %r12729, %r12507;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12734, %r384;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12736, %r12734, %r12518;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12739, %r384;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12741, %r12739, %r12529;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12744, %r384;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12746, %r12744, %r12542;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12749, %r384;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12751, %r12749, %r12553;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12754, %r384;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12756, %r12754, %r12564;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12759, %r384;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12761, %r12759, %r12575;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12764, %r384;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12766, %r12764, %r12588;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12769, %r384;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12771, %r12769, %r12599;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12774, %r384;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12776, %r12774, %r12610;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12779, %r384;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12781, %r12779, %r12621;
	// end inline asm
	// begin inline asm
	mov.b32 %r12789, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r12800, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12786, %r811, %r812, %r12789, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12790, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12791, %r12789, %r12790;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12794, %r12786, %r12791;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12797, %r822, %r812, %r12800, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12801, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12802, %r12800, %r12801;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12805, %r12797, %r12802;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12808, %r811, %r834, %r12789, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12812, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12813, %r12789, %r12812;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12816, %r12808, %r12813;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12819, %r822, %r834, %r12800, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12823, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12824, %r12800, %r12823;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12827, %r12819, %r12824;
	// end inline asm
	// begin inline asm
	mov.b32 %r12835, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r12846, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12832, %r811, %r858, %r12835, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12836, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12837, %r12835, %r12836;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12840, %r12832, %r12837;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12843, %r822, %r858, %r12846, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12847, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12848, %r12846, %r12847;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12851, %r12843, %r12848;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12854, %r811, %r880, %r12835, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12858, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12859, %r12835, %r12858;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12862, %r12854, %r12859;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12865, %r822, %r880, %r12846, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12869, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12870, %r12846, %r12869;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12873, %r12865, %r12870;
	// end inline asm
	// begin inline asm
	mov.b32 %r12881, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r12892, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12878, %r811, %r904, %r12881, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12882, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12883, %r12881, %r12882;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12886, %r12878, %r12883;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12889, %r822, %r904, %r12892, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12893, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12894, %r12892, %r12893;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12897, %r12889, %r12894;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12900, %r811, %r926, %r12881, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12904, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12905, %r12881, %r12904;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12908, %r12900, %r12905;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12911, %r822, %r926, %r12892, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12915, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12916, %r12892, %r12915;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12919, %r12911, %r12916;
	// end inline asm
	// begin inline asm
	mov.b32 %r12927, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r12938, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12924, %r811, %r950, %r12927, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12928, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12929, %r12927, %r12928;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12932, %r12924, %r12929;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12935, %r822, %r950, %r12938, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12939, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12940, %r12938, %r12939;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12943, %r12935, %r12940;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12946, %r811, %r972, %r12927, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12950, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12951, %r12927, %r12950;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12954, %r12946, %r12951;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12957, %r822, %r972, %r12938, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12961, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12962, %r12938, %r12961;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12965, %r12957, %r12962;
	// end inline asm
	// begin inline asm
	mov.b32 %r12973, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r12984, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12970, %r811, %r996, %r12973, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12974, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12975, %r12973, %r12974;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12978, %r12970, %r12975;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12981, %r822, %r996, %r12984, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12985, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12986, %r12984, %r12985;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12989, %r12981, %r12986;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12992, %r811, %r1018, %r12973, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12996, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12997, %r12973, %r12996;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13000, %r12992, %r12997;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13003, %r822, %r1018, %r12984, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13007, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13008, %r12984, %r13007;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13011, %r13003, %r13008;
	// end inline asm
	// begin inline asm
	mov.b32 %r13019, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r13030, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13016, %r811, %r1042, %r13019, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13020, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13021, %r13019, %r13020;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13024, %r13016, %r13021;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13027, %r822, %r1042, %r13030, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13031, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13032, %r13030, %r13031;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13035, %r13027, %r13032;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13038, %r811, %r1064, %r13019, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13042, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13043, %r13019, %r13042;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13046, %r13038, %r13043;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13049, %r822, %r1064, %r13030, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13053, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13054, %r13030, %r13053;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13057, %r13049, %r13054;
	// end inline asm
	// begin inline asm
	mov.b32 %r13065, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r13076, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13062, %r811, %r1088, %r13065, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13066, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13067, %r13065, %r13066;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13070, %r13062, %r13067;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13073, %r822, %r1088, %r13076, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13077, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13078, %r13076, %r13077;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13081, %r13073, %r13078;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13084, %r811, %r1110, %r13065, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13088, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13089, %r13065, %r13088;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13092, %r13084, %r13089;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13095, %r822, %r1110, %r13076, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13099, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13100, %r13076, %r13099;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13103, %r13095, %r13100;
	// end inline asm
	// begin inline asm
	mov.b32 %r13111, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r13122, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13108, %r811, %r1134, %r13111, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13112, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13113, %r13111, %r13112;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13116, %r13108, %r13113;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13119, %r822, %r1134, %r13122, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13123, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13124, %r13122, %r13123;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13127, %r13119, %r13124;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13130, %r811, %r1156, %r13111, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13134, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13135, %r13111, %r13134;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13138, %r13130, %r13135;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13141, %r822, %r1156, %r13122, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13145, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13146, %r13122, %r13145;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13149, %r13141, %r13146;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13152, %r258, %r12794, %r12626;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13156, %r258, %r12805, %r12631;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13160, %r258, %r12816, %r12636;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13164, %r258, %r12827, %r12641;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13168, %r258, %r12840, %r12646;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13172, %r258, %r12851, %r12651;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13176, %r258, %r12862, %r12656;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13180, %r258, %r12873, %r12661;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13184, %r258, %r12886, %r12666;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13188, %r258, %r12897, %r12671;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13192, %r258, %r12908, %r12676;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13196, %r258, %r12919, %r12681;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13200, %r258, %r12932, %r12686;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13204, %r258, %r12943, %r12691;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13208, %r258, %r12954, %r12696;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13212, %r258, %r12965, %r12701;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13216, %r276, %r12978, %r12706;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13220, %r276, %r12989, %r12711;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13224, %r276, %r13000, %r12716;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13228, %r276, %r13011, %r12721;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13232, %r276, %r13024, %r12726;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13236, %r276, %r13035, %r12731;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13240, %r276, %r13046, %r12736;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13244, %r276, %r13057, %r12741;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13248, %r276, %r13070, %r12746;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13252, %r276, %r13081, %r12751;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13256, %r276, %r13092, %r12756;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13260, %r276, %r13103, %r12761;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13264, %r276, %r13116, %r12766;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13268, %r276, %r13127, %r12771;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13272, %r276, %r13138, %r12776;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13276, %r276, %r13149, %r12781;
	// end inline asm
	// begin inline asm
	mov.b32 %r13285, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r13296, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13282, %r811, %r4628, %r13285, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13286, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13287, %r13285, %r13286;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13290, %r13282, %r13287;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13293, %r822, %r4628, %r13296, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13297, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13298, %r13296, %r13297;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13301, %r13293, %r13298;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13304, %r811, %r4650, %r13285, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13308, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13309, %r13285, %r13308;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13312, %r13304, %r13309;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13315, %r822, %r4650, %r13296, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13319, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13320, %r13296, %r13319;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13323, %r13315, %r13320;
	// end inline asm
	// begin inline asm
	mov.b32 %r13331, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r13342, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13328, %r811, %r4674, %r13331, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13332, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13333, %r13331, %r13332;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13336, %r13328, %r13333;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13339, %r822, %r4674, %r13342, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13343, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13344, %r13342, %r13343;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13347, %r13339, %r13344;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13350, %r811, %r4696, %r13331, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13354, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13355, %r13331, %r13354;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13358, %r13350, %r13355;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13361, %r822, %r4696, %r13342, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13365, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13366, %r13342, %r13365;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13369, %r13361, %r13366;
	// end inline asm
	// begin inline asm
	mov.b32 %r13377, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r13388, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13374, %r811, %r4720, %r13377, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13378, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13379, %r13377, %r13378;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13382, %r13374, %r13379;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13385, %r822, %r4720, %r13388, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13389, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13390, %r13388, %r13389;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13393, %r13385, %r13390;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13396, %r811, %r4742, %r13377, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13400, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13401, %r13377, %r13400;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13404, %r13396, %r13401;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13407, %r822, %r4742, %r13388, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13411, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13412, %r13388, %r13411;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13415, %r13407, %r13412;
	// end inline asm
	// begin inline asm
	mov.b32 %r13423, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r13434, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13420, %r811, %r4766, %r13423, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13424, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13425, %r13423, %r13424;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13428, %r13420, %r13425;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13431, %r822, %r4766, %r13434, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13435, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13436, %r13434, %r13435;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13439, %r13431, %r13436;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13442, %r811, %r4788, %r13423, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13446, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13447, %r13423, %r13446;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13450, %r13442, %r13447;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13453, %r822, %r4788, %r13434, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13457, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13458, %r13434, %r13457;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13461, %r13453, %r13458;
	// end inline asm
	// begin inline asm
	mov.b32 %r13469, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r13480, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13466, %r811, %r4812, %r13469, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13470, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13471, %r13469, %r13470;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13474, %r13466, %r13471;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13477, %r822, %r4812, %r13480, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13481, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13482, %r13480, %r13481;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13485, %r13477, %r13482;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13488, %r811, %r4834, %r13469, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13492, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13493, %r13469, %r13492;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13496, %r13488, %r13493;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13499, %r822, %r4834, %r13480, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13503, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13504, %r13480, %r13503;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13507, %r13499, %r13504;
	// end inline asm
	// begin inline asm
	mov.b32 %r13515, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r13526, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13512, %r811, %r4858, %r13515, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13516, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13517, %r13515, %r13516;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13520, %r13512, %r13517;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13523, %r822, %r4858, %r13526, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13527, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13528, %r13526, %r13527;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13531, %r13523, %r13528;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13534, %r811, %r4880, %r13515, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13538, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13539, %r13515, %r13538;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13542, %r13534, %r13539;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13545, %r822, %r4880, %r13526, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13549, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13550, %r13526, %r13549;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13553, %r13545, %r13550;
	// end inline asm
	// begin inline asm
	mov.b32 %r13561, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r13572, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13558, %r811, %r4904, %r13561, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13562, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13563, %r13561, %r13562;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13566, %r13558, %r13563;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13569, %r822, %r4904, %r13572, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13573, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13574, %r13572, %r13573;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13577, %r13569, %r13574;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13580, %r811, %r4926, %r13561, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13584, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13585, %r13561, %r13584;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13588, %r13580, %r13585;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13591, %r822, %r4926, %r13572, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13595, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13596, %r13572, %r13595;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13599, %r13591, %r13596;
	// end inline asm
	// begin inline asm
	mov.b32 %r13607, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r13618, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13604, %r811, %r4950, %r13607, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13608, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13609, %r13607, %r13608;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13612, %r13604, %r13609;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13615, %r822, %r4950, %r13618, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13619, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13620, %r13618, %r13619;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13623, %r13615, %r13620;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13626, %r811, %r4972, %r13607, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13630, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13631, %r13607, %r13630;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13634, %r13626, %r13631;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13637, %r822, %r4972, %r13618, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13641, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13642, %r13618, %r13641;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13645, %r13637, %r13642;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13648, %r294;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13650, %r13648, %r13290, %r13152;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13654, %r294;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13656, %r13654, %r13301, %r13156;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13660, %r294;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13662, %r13660, %r13312, %r13160;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13666, %r294;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13668, %r13666, %r13323, %r13164;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13672, %r294;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13674, %r13672, %r13336, %r13168;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13678, %r294;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13680, %r13678, %r13347, %r13172;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13684, %r294;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13686, %r13684, %r13358, %r13176;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13690, %r294;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13692, %r13690, %r13369, %r13180;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13696, %r294;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13698, %r13696, %r13382, %r13184;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13702, %r294;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13704, %r13702, %r13393, %r13188;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13708, %r294;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13710, %r13708, %r13404, %r13192;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13714, %r294;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13716, %r13714, %r13415, %r13196;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13720, %r294;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13722, %r13720, %r13428, %r13200;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13726, %r294;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13728, %r13726, %r13439, %r13204;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13732, %r294;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13734, %r13732, %r13450, %r13208;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13738, %r294;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13740, %r13738, %r13461, %r13212;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13744, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13746, %r13744, %r13474, %r13216;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13750, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13752, %r13750, %r13485, %r13220;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13756, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13758, %r13756, %r13496, %r13224;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13762, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13764, %r13762, %r13507, %r13228;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13768, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13770, %r13768, %r13520, %r13232;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13774, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13776, %r13774, %r13531, %r13236;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13780, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13782, %r13780, %r13542, %r13240;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13786, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13788, %r13786, %r13553, %r13244;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13792, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13794, %r13792, %r13566, %r13248;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13798, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13800, %r13798, %r13577, %r13252;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13804, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13806, %r13804, %r13588, %r13256;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13810, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13812, %r13810, %r13599, %r13260;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13816, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13818, %r13816, %r13612, %r13264;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13822, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13824, %r13822, %r13623, %r13268;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13828, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13830, %r13828, %r13634, %r13272;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13834, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13836, %r13834, %r13645, %r13276;
	// end inline asm
	// begin inline asm
	mov.b32 %r13845, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r13856, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13842, %r811, %r8444, %r13845, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13846, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13847, %r13845, %r13846;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13850, %r13842, %r13847;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13853, %r822, %r8444, %r13856, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13857, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13858, %r13856, %r13857;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13861, %r13853, %r13858;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13864, %r811, %r8466, %r13845, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13868, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13869, %r13845, %r13868;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13872, %r13864, %r13869;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13875, %r822, %r8466, %r13856, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13879, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13880, %r13856, %r13879;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13883, %r13875, %r13880;
	// end inline asm
	// begin inline asm
	mov.b32 %r13891, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r13902, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13888, %r811, %r8490, %r13891, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13892, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13893, %r13891, %r13892;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13896, %r13888, %r13893;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13899, %r822, %r8490, %r13902, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13903, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13904, %r13902, %r13903;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13907, %r13899, %r13904;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13910, %r811, %r8512, %r13891, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13914, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13915, %r13891, %r13914;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13918, %r13910, %r13915;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13921, %r822, %r8512, %r13902, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13925, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13926, %r13902, %r13925;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13929, %r13921, %r13926;
	// end inline asm
	// begin inline asm
	mov.b32 %r13937, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r13948, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13934, %r811, %r8536, %r13937, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13938, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13939, %r13937, %r13938;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13942, %r13934, %r13939;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13945, %r822, %r8536, %r13948, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13949, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13950, %r13948, %r13949;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13953, %r13945, %r13950;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13956, %r811, %r8558, %r13937, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13960, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13961, %r13937, %r13960;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13964, %r13956, %r13961;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13967, %r822, %r8558, %r13948, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13971, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13972, %r13948, %r13971;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13975, %r13967, %r13972;
	// end inline asm
	// begin inline asm
	mov.b32 %r13983, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r13994, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13980, %r811, %r8582, %r13983, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13984, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13985, %r13983, %r13984;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13988, %r13980, %r13985;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13991, %r822, %r8582, %r13994, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13995, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13996, %r13994, %r13995;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13999, %r13991, %r13996;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14002, %r811, %r8604, %r13983, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14006, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14007, %r13983, %r14006;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14010, %r14002, %r14007;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14013, %r822, %r8604, %r13994, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14017, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14018, %r13994, %r14017;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14021, %r14013, %r14018;
	// end inline asm
	// begin inline asm
	mov.b32 %r14029, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r14040, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14026, %r811, %r8628, %r14029, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14030, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14031, %r14029, %r14030;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14034, %r14026, %r14031;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14037, %r822, %r8628, %r14040, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14041, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14042, %r14040, %r14041;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14045, %r14037, %r14042;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14048, %r811, %r8650, %r14029, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14052, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14053, %r14029, %r14052;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14056, %r14048, %r14053;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14059, %r822, %r8650, %r14040, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14063, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14064, %r14040, %r14063;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14067, %r14059, %r14064;
	// end inline asm
	// begin inline asm
	mov.b32 %r14075, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r14086, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14072, %r811, %r8674, %r14075, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14076, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14077, %r14075, %r14076;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14080, %r14072, %r14077;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14083, %r822, %r8674, %r14086, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14087, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14088, %r14086, %r14087;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14091, %r14083, %r14088;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14094, %r811, %r8696, %r14075, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14098, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14099, %r14075, %r14098;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14102, %r14094, %r14099;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14105, %r822, %r8696, %r14086, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14109, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14110, %r14086, %r14109;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14113, %r14105, %r14110;
	// end inline asm
	// begin inline asm
	mov.b32 %r14121, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r14132, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14118, %r811, %r8720, %r14121, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14122, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14123, %r14121, %r14122;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14126, %r14118, %r14123;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14129, %r822, %r8720, %r14132, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14133, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14134, %r14132, %r14133;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14137, %r14129, %r14134;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14140, %r811, %r8742, %r14121, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14144, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14145, %r14121, %r14144;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14148, %r14140, %r14145;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14151, %r822, %r8742, %r14132, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14155, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14156, %r14132, %r14155;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14159, %r14151, %r14156;
	// end inline asm
	// begin inline asm
	mov.b32 %r14167, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r14178, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14164, %r811, %r8766, %r14167, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14168, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14169, %r14167, %r14168;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14172, %r14164, %r14169;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14175, %r822, %r8766, %r14178, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14179, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14180, %r14178, %r14179;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14183, %r14175, %r14180;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14186, %r811, %r8788, %r14167, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14190, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14191, %r14167, %r14190;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14194, %r14186, %r14191;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14197, %r822, %r8788, %r14178, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14201, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14202, %r14178, %r14201;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14205, %r14197, %r14202;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14343, %r330, %r13850, %r13650;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14340, %r330, %r13861, %r13656;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14352, %r330, %r13872, %r13662;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14349, %r330, %r13883, %r13668;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14361, %r330, %r13896, %r13674;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14358, %r330, %r13907, %r13680;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14370, %r330, %r13918, %r13686;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14367, %r330, %r13929, %r13692;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14379, %r330, %r13942, %r13698;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14376, %r330, %r13953, %r13704;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14388, %r330, %r13964, %r13710;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14385, %r330, %r13975, %r13716;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14397, %r330, %r13988, %r13722;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14394, %r330, %r13999, %r13728;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14406, %r330, %r14010, %r13734;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14403, %r330, %r14021, %r13740;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14415, %r348, %r14034, %r13746;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14412, %r348, %r14045, %r13752;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14424, %r348, %r14056, %r13758;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14421, %r348, %r14067, %r13764;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14433, %r348, %r14080, %r13770;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14430, %r348, %r14091, %r13776;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14442, %r348, %r14102, %r13782;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14439, %r348, %r14113, %r13788;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14451, %r348, %r14126, %r13794;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14448, %r348, %r14137, %r13800;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14460, %r348, %r14148, %r13806;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14457, %r348, %r14159, %r13812;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14469, %r348, %r14172, %r13818;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14466, %r348, %r14183, %r13824;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14478, %r348, %r14194, %r13830;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14475, %r348, %r14205, %r13836;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14336, %r393;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14338, %r14336, %r14340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14341, %r387, %r14343, %r14338;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14345, %r393;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14347, %r14345, %r14349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14350, %r387, %r14352, %r14347;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14354, %r393;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14356, %r14354, %r14358;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14359, %r387, %r14361, %r14356;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14363, %r393;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14365, %r14363, %r14367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14368, %r387, %r14370, %r14365;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14372, %r393;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14374, %r14372, %r14376;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14377, %r387, %r14379, %r14374;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14381, %r393;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14383, %r14381, %r14385;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14386, %r387, %r14388, %r14383;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14390, %r393;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14392, %r14390, %r14394;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14395, %r387, %r14397, %r14392;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14399, %r393;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14401, %r14399, %r14403;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14404, %r387, %r14406, %r14401;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14408, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14410, %r14408, %r14412;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14413, %r390, %r14415, %r14410;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14417, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14419, %r14417, %r14421;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14422, %r390, %r14424, %r14419;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14426, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14428, %r14426, %r14430;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14431, %r390, %r14433, %r14428;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14435, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14437, %r14435, %r14439;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14440, %r390, %r14442, %r14437;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14444, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14446, %r14444, %r14448;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14449, %r390, %r14451, %r14446;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14453, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14455, %r14453, %r14457;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14458, %r390, %r14460, %r14455;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14462, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14464, %r14462, %r14466;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14467, %r390, %r14469, %r14464;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14471, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14473, %r14471, %r14475;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14476, %r390, %r14478, %r14473;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14480, %r393, %r14343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14483, %r387, %r14340, %r14480;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14487, %r393, %r14352;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14490, %r387, %r14349, %r14487;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14494, %r393, %r14361;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14497, %r387, %r14358, %r14494;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14501, %r393, %r14370;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14504, %r387, %r14367, %r14501;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14508, %r393, %r14379;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14511, %r387, %r14376, %r14508;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14515, %r393, %r14388;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14518, %r387, %r14385, %r14515;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14522, %r393, %r14397;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14525, %r387, %r14394, %r14522;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14529, %r393, %r14406;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14532, %r387, %r14403, %r14529;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14536, %r396, %r14415;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14539, %r390, %r14412, %r14536;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14543, %r396, %r14424;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14546, %r390, %r14421, %r14543;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14550, %r396, %r14433;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14553, %r390, %r14430, %r14550;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14557, %r396, %r14442;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14560, %r390, %r14439, %r14557;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14564, %r396, %r14451;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14567, %r390, %r14448, %r14564;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14571, %r396, %r14460;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14574, %r390, %r14457, %r14571;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14578, %r396, %r14469;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14581, %r390, %r14466, %r14578;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14585, %r396, %r14478;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14588, %r390, %r14475, %r14585;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14759, %r14756}, {%r454, %r460, %r457, %r463}, {%r14341, %r14483}, {%r3152, %r3152};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14768, %r14765}, {%r454, %r460, %r457, %r463}, {%r14350, %r14490}, {%r3152, %r3152};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14777, %r14774}, {%r454, %r460, %r457, %r463}, {%r14359, %r14497}, {%r3152, %r3152};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14786, %r14783}, {%r454, %r460, %r457, %r463}, {%r14368, %r14504}, {%r3152, %r3152};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14795, %r14792}, {%r454, %r460, %r457, %r463}, {%r14377, %r14511}, {%r3152, %r3152};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14804, %r14801}, {%r454, %r460, %r457, %r463}, {%r14386, %r14518}, {%r3152, %r3152};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14813, %r14810}, {%r454, %r460, %r457, %r463}, {%r14395, %r14525}, {%r3152, %r3152};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14822, %r14819}, {%r454, %r460, %r457, %r463}, {%r14404, %r14532}, {%r3152, %r3152};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14831, %r14828}, {%r454, %r460, %r457, %r463}, {%r14413, %r14539}, {%r3152, %r3152};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14840, %r14837}, {%r454, %r460, %r457, %r463}, {%r14422, %r14546}, {%r3152, %r3152};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14849, %r14846}, {%r454, %r460, %r457, %r463}, {%r14431, %r14553}, {%r3152, %r3152};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14858, %r14855}, {%r454, %r460, %r457, %r463}, {%r14440, %r14560}, {%r3152, %r3152};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14867, %r14864}, {%r454, %r460, %r457, %r463}, {%r14449, %r14567}, {%r3152, %r3152};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14876, %r14873}, {%r454, %r460, %r457, %r463}, {%r14458, %r14574}, {%r3152, %r3152};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14885, %r14882}, {%r454, %r460, %r457, %r463}, {%r14467, %r14581}, {%r3152, %r3152};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14894, %r14891}, {%r454, %r460, %r457, %r463}, {%r14476, %r14588}, {%r3152, %r3152};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14752, %r507;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14754, %r14752, %r14756;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14757, %r504, %r14759, %r14754;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14761, %r507;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14763, %r14761, %r14765;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14766, %r504, %r14768, %r14763;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14770, %r507;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14772, %r14770, %r14774;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14775, %r504, %r14777, %r14772;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14779, %r507;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14781, %r14779, %r14783;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14784, %r504, %r14786, %r14781;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14788, %r507;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14790, %r14788, %r14792;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14793, %r504, %r14795, %r14790;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14797, %r507;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14799, %r14797, %r14801;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14802, %r504, %r14804, %r14799;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14806, %r507;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14808, %r14806, %r14810;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14811, %r504, %r14813, %r14808;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14815, %r507;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14817, %r14815, %r14819;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14820, %r504, %r14822, %r14817;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14824, %r507;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14826, %r14824, %r14828;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14829, %r504, %r14831, %r14826;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14833, %r507;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14835, %r14833, %r14837;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14838, %r504, %r14840, %r14835;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14842, %r507;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14844, %r14842, %r14846;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14847, %r504, %r14849, %r14844;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14851, %r507;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14853, %r14851, %r14855;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14856, %r504, %r14858, %r14853;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14860, %r507;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14862, %r14860, %r14864;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14865, %r504, %r14867, %r14862;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14869, %r507;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14871, %r14869, %r14873;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14874, %r504, %r14876, %r14871;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14878, %r507;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14880, %r14878, %r14882;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14883, %r504, %r14885, %r14880;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14887, %r507;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14889, %r14887, %r14891;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14892, %r504, %r14894, %r14889;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14896, %r507, %r14759;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14899, %r504, %r14756, %r14896;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14903, %r507, %r14768;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14906, %r504, %r14765, %r14903;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14910, %r507, %r14777;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14913, %r504, %r14774, %r14910;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14917, %r507, %r14786;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14920, %r504, %r14783, %r14917;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14924, %r507, %r14795;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14927, %r504, %r14792, %r14924;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14931, %r507, %r14804;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14934, %r504, %r14801, %r14931;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14938, %r507, %r14813;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14941, %r504, %r14810, %r14938;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14945, %r507, %r14822;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14948, %r504, %r14819, %r14945;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14952, %r507, %r14831;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14955, %r504, %r14828, %r14952;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14959, %r507, %r14840;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14962, %r504, %r14837, %r14959;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14966, %r507, %r14849;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14969, %r504, %r14846, %r14966;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14973, %r507, %r14858;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14976, %r504, %r14855, %r14973;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14980, %r507, %r14867;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14983, %r504, %r14864, %r14980;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14987, %r507, %r14876;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14990, %r504, %r14873, %r14987;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14994, %r507, %r14885;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14997, %r504, %r14882, %r14994;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15001, %r507, %r14894;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15004, %r504, %r14891, %r15001;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15297, %r15300}, {%r542, %r548, %r545, %r551}, {%r14757, %r14899}, {%r3152, %r3152};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15303, %r15306}, {%r542, %r548, %r545, %r551}, {%r14766, %r14906}, {%r3152, %r3152};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15309, %r15312}, {%r542, %r548, %r545, %r551}, {%r14775, %r14913}, {%r3152, %r3152};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15315, %r15318}, {%r542, %r548, %r545, %r551}, {%r14784, %r14920}, {%r3152, %r3152};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15321, %r15324}, {%r542, %r548, %r545, %r551}, {%r14793, %r14927}, {%r3152, %r3152};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15327, %r15330}, {%r542, %r548, %r545, %r551}, {%r14802, %r14934}, {%r3152, %r3152};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15333, %r15336}, {%r542, %r548, %r545, %r551}, {%r14811, %r14941}, {%r3152, %r3152};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15339, %r15342}, {%r542, %r548, %r545, %r551}, {%r14820, %r14948}, {%r3152, %r3152};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15298, %r15301}, {%r542, %r548, %r545, %r551}, {%r14829, %r14955}, {%r3152, %r3152};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15304, %r15307}, {%r542, %r548, %r545, %r551}, {%r14838, %r14962}, {%r3152, %r3152};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15310, %r15313}, {%r542, %r548, %r545, %r551}, {%r14847, %r14969}, {%r3152, %r3152};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15316, %r15319}, {%r542, %r548, %r545, %r551}, {%r14856, %r14976}, {%r3152, %r3152};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15322, %r15325}, {%r542, %r548, %r545, %r551}, {%r14865, %r14983}, {%r3152, %r3152};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15328, %r15331}, {%r542, %r548, %r545, %r551}, {%r14874, %r14990}, {%r3152, %r3152};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15334, %r15337}, {%r542, %r548, %r545, %r551}, {%r14883, %r14997}, {%r3152, %r3152};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15340, %r15343}, {%r542, %r548, %r545, %r551}, {%r14892, %r15004}, {%r3152, %r3152};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15296, %r15297, %r15298;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15299, %r15300, %r15301;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15302, %r15303, %r15304;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15305, %r15306, %r15307;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15308, %r15309, %r15310;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15311, %r15312, %r15313;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15314, %r15315, %r15316;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15317, %r15318, %r15319;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15320, %r15321, %r15322;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15323, %r15324, %r15325;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15326, %r15327, %r15328;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15329, %r15330, %r15331;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15332, %r15333, %r15334;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15335, %r15336, %r15337;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15338, %r15339, %r15340;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15341, %r15342, %r15343;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15344, %r15297, %r15298;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15347, %r15300, %r15301;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15350, %r15303, %r15304;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15353, %r15306, %r15307;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15356, %r15309, %r15310;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15359, %r15312, %r15313;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15362, %r15315, %r15316;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15365, %r15318, %r15319;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15368, %r15321, %r15322;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15371, %r15324, %r15325;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15374, %r15327, %r15328;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15377, %r15330, %r15331;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15380, %r15333, %r15334;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15383, %r15336, %r15337;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15386, %r15339, %r15340;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15389, %r15342, %r15343;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15392, %r128, %r15296;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15395, %r128, %r15299;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15398, %r128, %r15302;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15401, %r128, %r15305;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15404, %r128, %r15308;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15407, %r128, %r15311;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15410, %r128, %r15314;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15413, %r128, %r15317;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15416, %r128, %r15320;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15419, %r128, %r15323;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15422, %r128, %r15326;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15425, %r128, %r15329;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15428, %r128, %r15332;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15431, %r128, %r15335;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15434, %r128, %r15338;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15437, %r128, %r15341;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15440, %r129, %r15344;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15443, %r129, %r15347;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15446, %r129, %r15350;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15449, %r129, %r15353;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15452, %r129, %r15356;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15455, %r129, %r15359;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15458, %r129, %r15362;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15461, %r129, %r15365;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15464, %r129, %r15368;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15467, %r129, %r15371;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15470, %r129, %r15374;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15473, %r129, %r15377;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15476, %r129, %r15380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15479, %r129, %r15383;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15482, %r129, %r15386;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15485, %r129, %r15389;
	// end inline asm
	// begin inline asm
	mov.b32 %r15488, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15489, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15490, %r15392, %r15488;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15493, %r15490, %r15489;
	// end inline asm
	// begin inline asm
	mov.b32 %r15496, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15497, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15498, %r15395, %r15496;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15501, %r15498, %r15497;
	// end inline asm
	// begin inline asm
	mov.b32 %r15504, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15505, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15506, %r15398, %r15504;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15509, %r15506, %r15505;
	// end inline asm
	// begin inline asm
	mov.b32 %r15512, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15513, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15514, %r15401, %r15512;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15517, %r15514, %r15513;
	// end inline asm
	// begin inline asm
	mov.b32 %r15520, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15521, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15522, %r15404, %r15520;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15525, %r15522, %r15521;
	// end inline asm
	// begin inline asm
	mov.b32 %r15528, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15529, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15530, %r15407, %r15528;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15533, %r15530, %r15529;
	// end inline asm
	// begin inline asm
	mov.b32 %r15536, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15537, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15538, %r15410, %r15536;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15541, %r15538, %r15537;
	// end inline asm
	// begin inline asm
	mov.b32 %r15544, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15545, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15546, %r15413, %r15544;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15549, %r15546, %r15545;
	// end inline asm
	// begin inline asm
	mov.b32 %r15552, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15553, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15554, %r15416, %r15552;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15557, %r15554, %r15553;
	// end inline asm
	// begin inline asm
	mov.b32 %r15560, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15561, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15562, %r15419, %r15560;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15565, %r15562, %r15561;
	// end inline asm
	// begin inline asm
	mov.b32 %r15568, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15569, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15570, %r15422, %r15568;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15573, %r15570, %r15569;
	// end inline asm
	// begin inline asm
	mov.b32 %r15576, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15577, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15578, %r15425, %r15576;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15581, %r15578, %r15577;
	// end inline asm
	// begin inline asm
	mov.b32 %r15584, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15585, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15586, %r15428, %r15584;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15589, %r15586, %r15585;
	// end inline asm
	// begin inline asm
	mov.b32 %r15592, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15593, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15594, %r15431, %r15592;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15597, %r15594, %r15593;
	// end inline asm
	// begin inline asm
	mov.b32 %r15600, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15601, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15602, %r15434, %r15600;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15605, %r15602, %r15601;
	// end inline asm
	// begin inline asm
	mov.b32 %r15608, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15609, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15610, %r15437, %r15608;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15613, %r15610, %r15609;
	// end inline asm
	// begin inline asm
	mov.b32 %r15616, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15617, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15618, %r15440, %r15616;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15621, %r15618, %r15617;
	// end inline asm
	// begin inline asm
	mov.b32 %r15624, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15625, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15626, %r15443, %r15624;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15629, %r15626, %r15625;
	// end inline asm
	// begin inline asm
	mov.b32 %r15632, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15633, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15634, %r15446, %r15632;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15637, %r15634, %r15633;
	// end inline asm
	// begin inline asm
	mov.b32 %r15640, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15641, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15642, %r15449, %r15640;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15645, %r15642, %r15641;
	// end inline asm
	// begin inline asm
	mov.b32 %r15648, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15649, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15650, %r15452, %r15648;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15653, %r15650, %r15649;
	// end inline asm
	// begin inline asm
	mov.b32 %r15656, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15657, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15658, %r15455, %r15656;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15661, %r15658, %r15657;
	// end inline asm
	// begin inline asm
	mov.b32 %r15664, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15665, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15666, %r15458, %r15664;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15669, %r15666, %r15665;
	// end inline asm
	// begin inline asm
	mov.b32 %r15672, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15673, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15674, %r15461, %r15672;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15677, %r15674, %r15673;
	// end inline asm
	// begin inline asm
	mov.b32 %r15680, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15681, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15682, %r15464, %r15680;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15685, %r15682, %r15681;
	// end inline asm
	// begin inline asm
	mov.b32 %r15688, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15689, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15690, %r15467, %r15688;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15693, %r15690, %r15689;
	// end inline asm
	// begin inline asm
	mov.b32 %r15696, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15697, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15698, %r15470, %r15696;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15701, %r15698, %r15697;
	// end inline asm
	// begin inline asm
	mov.b32 %r15704, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15705, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15706, %r15473, %r15704;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15709, %r15706, %r15705;
	// end inline asm
	// begin inline asm
	mov.b32 %r15712, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15713, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15714, %r15476, %r15712;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15717, %r15714, %r15713;
	// end inline asm
	// begin inline asm
	mov.b32 %r15720, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15721, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15722, %r15479, %r15720;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15725, %r15722, %r15721;
	// end inline asm
	// begin inline asm
	mov.b32 %r15728, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15729, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15730, %r15482, %r15728;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15733, %r15730, %r15729;
	// end inline asm
	// begin inline asm
	mov.b32 %r15736, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15737, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15738, %r15485, %r15736;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15741, %r15738, %r15737;
	// end inline asm
	// begin inline asm
	mov.b32 %r15747, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r15745, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15746, %r15747, %r15745;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15749, %r15493, %r15746;
	// end inline asm
	// begin inline asm
	mov.b32 %r15752, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15753, %r15747, %r15752;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15756, %r15501, %r15753;
	// end inline asm
	// begin inline asm
	mov.b32 %r15759, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15760, %r15747, %r15759;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15763, %r15509, %r15760;
	// end inline asm
	// begin inline asm
	mov.b32 %r15766, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15767, %r15747, %r15766;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15770, %r15517, %r15767;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15773, %r15749, %r15763, %r4328;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15777, %r15756, %r15770, %r4328;
	// end inline asm
	shl.b32 	%r15784, %r15777, 4;
	// begin inline asm
	lop3.b32 %r15781, %r4334, %r15773, %r15784, 202;
	// end inline asm
	xor.b32  	%r16146, %r15781, -2004318072;
	// begin inline asm
	mov.b32 %r15788, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r15786, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15787, %r15788, %r15786;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15790, %r15525, %r15787;
	// end inline asm
	// begin inline asm
	mov.b32 %r15793, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15794, %r15788, %r15793;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15797, %r15533, %r15794;
	// end inline asm
	// begin inline asm
	mov.b32 %r15800, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15801, %r15788, %r15800;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15804, %r15541, %r15801;
	// end inline asm
	// begin inline asm
	mov.b32 %r15807, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15808, %r15788, %r15807;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15811, %r15549, %r15808;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15814, %r15790, %r15804, %r4328;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15818, %r15797, %r15811, %r4328;
	// end inline asm
	shl.b32 	%r15825, %r15818, 4;
	// begin inline asm
	lop3.b32 %r15822, %r4334, %r15814, %r15825, 202;
	// end inline asm
	xor.b32  	%r16147, %r15822, -2004318072;
	// begin inline asm
	mov.b32 %r15829, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r15827, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15828, %r15829, %r15827;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15831, %r15557, %r15828;
	// end inline asm
	// begin inline asm
	mov.b32 %r15834, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15835, %r15829, %r15834;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15838, %r15565, %r15835;
	// end inline asm
	// begin inline asm
	mov.b32 %r15841, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15842, %r15829, %r15841;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15845, %r15573, %r15842;
	// end inline asm
	// begin inline asm
	mov.b32 %r15848, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15849, %r15829, %r15848;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15852, %r15581, %r15849;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15855, %r15831, %r15845, %r4328;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15859, %r15838, %r15852, %r4328;
	// end inline asm
	shl.b32 	%r15866, %r15859, 4;
	// begin inline asm
	lop3.b32 %r15863, %r4334, %r15855, %r15866, 202;
	// end inline asm
	xor.b32  	%r16148, %r15863, -2004318072;
	// begin inline asm
	mov.b32 %r15870, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r15868, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15869, %r15870, %r15868;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15872, %r15589, %r15869;
	// end inline asm
	// begin inline asm
	mov.b32 %r15875, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15876, %r15870, %r15875;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15879, %r15597, %r15876;
	// end inline asm
	// begin inline asm
	mov.b32 %r15882, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15883, %r15870, %r15882;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15886, %r15605, %r15883;
	// end inline asm
	// begin inline asm
	mov.b32 %r15889, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15890, %r15870, %r15889;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15893, %r15613, %r15890;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15896, %r15872, %r15886, %r4328;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15900, %r15879, %r15893, %r4328;
	// end inline asm
	shl.b32 	%r15907, %r15900, 4;
	// begin inline asm
	lop3.b32 %r15904, %r4334, %r15896, %r15907, 202;
	// end inline asm
	xor.b32  	%r16149, %r15904, -2004318072;
	// begin inline asm
	mov.b32 %r15911, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r15909, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15910, %r15911, %r15909;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15913, %r15621, %r15910;
	// end inline asm
	// begin inline asm
	mov.b32 %r15916, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15917, %r15911, %r15916;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15920, %r15629, %r15917;
	// end inline asm
	// begin inline asm
	mov.b32 %r15923, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15924, %r15911, %r15923;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15927, %r15637, %r15924;
	// end inline asm
	// begin inline asm
	mov.b32 %r15930, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15931, %r15911, %r15930;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15934, %r15645, %r15931;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15937, %r15913, %r15927, %r4328;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15941, %r15920, %r15934, %r4328;
	// end inline asm
	shl.b32 	%r15948, %r15941, 4;
	// begin inline asm
	lop3.b32 %r15945, %r4334, %r15937, %r15948, 202;
	// end inline asm
	xor.b32  	%r16150, %r15945, -2004318072;
	// begin inline asm
	mov.b32 %r15952, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r15950, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15951, %r15952, %r15950;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15954, %r15653, %r15951;
	// end inline asm
	// begin inline asm
	mov.b32 %r15957, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15958, %r15952, %r15957;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15961, %r15661, %r15958;
	// end inline asm
	// begin inline asm
	mov.b32 %r15964, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15965, %r15952, %r15964;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15968, %r15669, %r15965;
	// end inline asm
	// begin inline asm
	mov.b32 %r15971, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15972, %r15952, %r15971;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15975, %r15677, %r15972;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15978, %r15954, %r15968, %r4328;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15982, %r15961, %r15975, %r4328;
	// end inline asm
	shl.b32 	%r15989, %r15982, 4;
	// begin inline asm
	lop3.b32 %r15986, %r4334, %r15978, %r15989, 202;
	// end inline asm
	xor.b32  	%r16151, %r15986, -2004318072;
	// begin inline asm
	mov.b32 %r15993, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r15991, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15992, %r15993, %r15991;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15995, %r15685, %r15992;
	// end inline asm
	// begin inline asm
	mov.b32 %r15998, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15999, %r15993, %r15998;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16002, %r15693, %r15999;
	// end inline asm
	// begin inline asm
	mov.b32 %r16005, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16006, %r15993, %r16005;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16009, %r15701, %r16006;
	// end inline asm
	// begin inline asm
	mov.b32 %r16012, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16013, %r15993, %r16012;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16016, %r15709, %r16013;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16019, %r15995, %r16009, %r4328;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16023, %r16002, %r16016, %r4328;
	// end inline asm
	shl.b32 	%r16030, %r16023, 4;
	// begin inline asm
	lop3.b32 %r16027, %r4334, %r16019, %r16030, 202;
	// end inline asm
	xor.b32  	%r16152, %r16027, -2004318072;
	// begin inline asm
	mov.b32 %r16034, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r16032, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16033, %r16034, %r16032;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16036, %r15717, %r16033;
	// end inline asm
	// begin inline asm
	mov.b32 %r16039, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16040, %r16034, %r16039;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16043, %r15725, %r16040;
	// end inline asm
	// begin inline asm
	mov.b32 %r16046, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16047, %r16034, %r16046;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16050, %r15733, %r16047;
	// end inline asm
	// begin inline asm
	mov.b32 %r16053, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16054, %r16034, %r16053;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16057, %r15741, %r16054;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16060, %r16036, %r16050, %r4328;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16064, %r16043, %r16057, %r4328;
	// end inline asm
	shl.b32 	%r16071, %r16064, 4;
	// begin inline asm
	lop3.b32 %r16068, %r4334, %r16060, %r16071, 202;
	// end inline asm
	xor.b32  	%r16153, %r16068, -2004318072;
	st.shared.u32 	[%rd106], %r16146;
	st.shared.u32 	[%rd108], %r16147;
	st.shared.u32 	[%rd110], %r16148;
	st.shared.u32 	[%rd112], %r16149;
	st.shared.u32 	[%rd114], %r16150;
	st.shared.u32 	[%rd116], %r16151;
	st.shared.u32 	[%rd118], %r16152;
	st.shared.u32 	[%rd120], %r16153;
	add.s32 	%r16277, %r16277, 128;
	setp.ne.s32 	%p303, %r16277, 256;
	@%p303 bra 	$L__BB0_156;
// %bb.157:                             // %guard_exit29770
                                        //   in Loop: Header=BB0_123 Depth=1
	bar.sync 	0;
	ld.shared.u32 	%r16159, [%rd4];
	ld.shared.u32 	%r16160, [%rd5+128];
	ld.shared.u32 	%r16167, [%rd5+4];
	ld.shared.u32 	%r16168, [%rd5+132];
	ld.shared.u32 	%r16175, [%rd6];
	ld.shared.u32 	%r16176, [%rd7+128];
	ld.shared.u32 	%r16183, [%rd7+4];
	ld.shared.u32 	%r16184, [%rd7+132];
	ld.shared.u32 	%r16191, [%rd4+16644];
	ld.shared.u32 	%r16192, [%rd5+16772];
	ld.shared.u32 	%r16199, [%rd5+16648];
	ld.shared.u32 	%r16200, [%rd5+16776];
	ld.shared.u32 	%r16207, [%rd6+16644];
	ld.shared.u32 	%r16208, [%rd22];
	ld.shared.u32 	%r16215, [%rd7+16648];
	ld.shared.u32 	%r16216, [%rd7+16776];
	// begin inline asm
	prmt.b32 %r16154, %r16159, %r16160, %r16157;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16158, %r16159, %r16160, %r16161;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16162, %r16167, %r16168, %r16157;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16166, %r16167, %r16168, %r16161;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16170, %r16175, %r16176, %r16157;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16174, %r16175, %r16176, %r16161;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16178, %r16183, %r16184, %r16157;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16182, %r16183, %r16184, %r16161;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16186, %r16191, %r16192, %r16157;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16190, %r16191, %r16192, %r16161;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16194, %r16199, %r16200, %r16157;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16198, %r16199, %r16200, %r16161;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16202, %r16207, %r16208, %r16157;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16206, %r16207, %r16208, %r16161;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16210, %r16215, %r16216, %r16157;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16214, %r16215, %r16216, %r16161;
	// end inline asm
	selp.b32 	%r16219, %r16158, %r16154, %p289;
	shfl.sync.bfly.b32	%r16220, %r16219, 8, 31, -1;
	selp.b32 	%r16221, %r16166, %r16162, %p289;
	shfl.sync.bfly.b32	%r16222, %r16221, 8, 31, -1;
	selp.b32 	%r16223, %r16174, %r16170, %p289;
	shfl.sync.bfly.b32	%r16224, %r16223, 8, 31, -1;
	selp.b32 	%r16225, %r16182, %r16178, %p289;
	shfl.sync.bfly.b32	%r16226, %r16225, 8, 31, -1;
	selp.b32 	%r16227, %r16190, %r16186, %p289;
	shfl.sync.bfly.b32	%r16228, %r16227, 8, 31, -1;
	selp.b32 	%r16229, %r16198, %r16194, %p289;
	shfl.sync.bfly.b32	%r16230, %r16229, 8, 31, -1;
	selp.b32 	%r16231, %r16206, %r16202, %p289;
	shfl.sync.bfly.b32	%r16232, %r16231, 8, 31, -1;
	selp.b32 	%r16233, %r16214, %r16210, %p289;
	shfl.sync.bfly.b32	%r16234, %r16233, 8, 31, -1;
	mov.u32 	%r16270, 256;
	bra.uni 	$L__BB0_123;
$L__BB0_124:                            // %L70523
	mov.u32 	%r665, 0;
	st.global.u32 	[%rd3], %r665;
	ret;
$L__BB0_7:                              // %L157
	mov.u32 	%r16235, 2;
	st.global.u32 	[%rd3], %r16235;
	mov.u64 	%rd121, exception5815;
	cvta.global.u64 	%rd122, %rd121;
	{ // callseq 4, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd122;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 4
	{ // callseq 5, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd23;
	st.param.b32 	[param0+8], %r214;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 5
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
$L__BB0_1:                              // %L8
	mov.u64 	%rd28, exception1;
	cvta.global.u64 	%rd29, %rd28;
	{ // callseq 0, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd29;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 0
	{ // callseq 1, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd23;
	st.param.b32 	[param0+8], %r214;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 1
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
                                        // -- End function
}
