// PTX kernel code for the CUDA upchannelizer
// This file has been generated automatically by `upchan.jl`.
// Do not modify this file, your changes will be lost.

// PTX CompilerJob of MethodInstance for upchan(::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Float16x2, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int32, 1}) for sm_86, minthreads=512, blocks_per_sm=2

//
// Generated by LLVM NVPTX Back-End
//

.version 8.2
.target sm_86
.address_size 64

	// .globl	_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE // -- Begin function _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE
.func gpu_report_exception
(
	.param .b64 gpu_report_exception_param_0
)
.noreturn
{
	trap;
}
.func gpu_signal_exception
(
	.param .align 8 .b8 gpu_signal_exception_param_0[16]
)
.noreturn
{
	trap;
}
.extern .shared .align 32 .b8 shmem[];
.global .align 1 .b8 exception5808[6] = {101, 114, 114, 111, 114, 0};
.global .align 1 .b8 exception1[10] = {101, 120, 99, 101, 112, 116, 105, 111, 110, 0};
                                        // @_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE
.visible .entry _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE(
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_0[16],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_1[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_2[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_3[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_4[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_5[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_6[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_7[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_8[32]
)
.reqntid 512, 1, 1
.minnctapersm 2
{
	.reg .pred 	%p<340>;
	.reg .b16 	%rs<2390>;
	.reg .b32 	%r<16445>;
	.reg .f32 	%f<1392>;
	.reg .b64 	%rd<173>;

// %bb.0:                               // %conversion
	ld.param.u32 	%r270, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_0+8];
	ld.param.u64 	%rd24, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_0];
	// begin inline asm
	mov.u32 %r271, %dynamic_smem_size;
	// end inline asm
	setp.gt.u32 	%p1, %r271, 66815;
	@%p1 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:                              // %L10
	ld.param.u64 	%rd41, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_8];
	ld.param.u64 	%rd25, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_1];
	mov.u32 	%r1, %tid.x;
	mov.u32 	%r2, %ctaid.x;
	shl.b32 	%r272, %r2, 9;
	mov.u32 	%r3, %tid.y;
	shl.b32 	%r4, %r3, 5;
	or.b32  	%r273, %r272, %r1;
	or.b32  	%r274, %r273, %r4;
	mul.wide.u32 	%rd47, %r274, 4;
	add.s64 	%rd4, %rd41, %rd47;
	mov.u32 	%r275, 1;
	st.global.u32 	[%rd4], %r275;
	ld.global.u32 	%r5, [%rd25];
	setp.lt.s32 	%p2, %r5, 0;
	@%p2 bra 	$L__BB0_7;
// %bb.3:                               // %L204
	ld.param.u64 	%rd29, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_2];
	ld.global.u32 	%r6, [%rd29];
	setp.lt.s32 	%p3, %r6, %r5;
	setp.gt.s32 	%p4, %r6, 262144;
	or.pred  	%p5, %p3, %p4;
	@%p5 bra 	$L__BB0_7;
// %bb.4:                               // %L214
	ld.param.u64 	%rd33, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_3];
	ld.global.u32 	%r7, [%rd33];
	sub.s32 	%r276, %r6, %r5;
	and.b32  	%r277, %r276, 255;
	setp.ne.s32 	%p6, %r277, 0;
	setp.lt.s32 	%p7, %r7, 0;
	or.pred  	%p8, %p6, %p7;
	@%p8 bra 	$L__BB0_7;
// %bb.5:                               // %L220
	ld.param.u64 	%rd37, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_4];
	ld.global.u32 	%r8, [%rd37];
	setp.lt.s32 	%p9, %r8, %r7;
	setp.gt.s32 	%p10, %r8, 2048;
	or.pred  	%p11, %p9, %p10;
	@%p11 bra 	$L__BB0_7;
// %bb.6:                               // %L230
	sub.s32 	%r278, %r8, %r7;
	and.b32  	%r279, %r278, 1;
	setp.eq.b32 	%p12, %r279, 1;
	mov.pred 	%p13, 0;
	xor.pred  	%p14, %p12, %p13;
	@%p14 bra 	$L__BB0_8;
	bra.uni 	$L__BB0_7;
$L__BB0_8:                              // %pass170
	bfe.u32 	%r238, %r1, 1, 1;
	and.b32  	%r239, %r1, 1;
	bfe.u32 	%r241, %r1, 2, 1;
	shr.u32 	%r242, %r1, 4;
	shl.b32 	%r291, %r242, 2;
	shl.b32 	%r292, %r241, 3;
	shl.b32 	%r293, %r239, 4;
	shl.b32 	%r294, %r238, 5;
	or.b32  	%r295, %r293, %r294;
	or.b32  	%r296, %r292, %r295;
	or.b32  	%r297, %r291, %r296;
	bfe.u32 	%r244, %r1, 3, 1;
	shl.b32 	%r298, %r244, 1;
	or.b32  	%r245, %r298, %r297;
	or.b32  	%r246, %r245, 64;
	mov.f32 	%f257, 0f40000000;
	mov.f32 	%f258, 0f43FF8000;
	div.approx.f32 	%f253, %f258, %f257;
	cvt.rn.f32.s32 	%f259, %r245;
	sub.f32 	%f260, %f259, %f253;
	mov.f32 	%f289, 0f43000000;
	div.approx.f32 	%f255, %f260, %f289;
	setp.ne.f32 	%p20, %f255, 0f00000000;
	mov.f32 	%f1351, 0f3F800000;
	mov.f32 	%f1336, %f1351;
	@%p20 bra 	$L__BB0_9;
	bra.uni 	$L__BB0_10;
$L__BB0_9:                              // %L735
	sin.approx.f32 	%f290, %f255;
	div.approx.f32 	%f1336, %f290, %f255;
$L__BB0_10:                             // %L738
	cvt.rn.f32.s32 	%f293, %r246;
	sub.f32 	%f294, %f293, %f253;
	div.approx.f32 	%f5, %f294, %f289;
	setp.eq.f32 	%p26, %f5, 0f00000000;
	mov.f32 	%f1337, %f1351;
	@%p26 bra 	$L__BB0_12;
// %bb.11:                              // %L755
	sin.approx.f32 	%f324, %f5;
	div.approx.f32 	%f1337, %f324, %f5;
$L__BB0_12:                             // %L758
	or.b32  	%r316, %r245, 1;
	or.b32  	%r10, %r245, 65;
	cvt.rn.f32.s32 	%f328, %r316;
	sub.f32 	%f329, %f328, %f253;
	div.approx.f32 	%f9, %f329, %f289;
	setp.eq.f32 	%p32, %f9, 0f00000000;
	mov.f32 	%f1338, %f1351;
	@%p32 bra 	$L__BB0_14;
// %bb.13:                              // %L837
	sin.approx.f32 	%f359, %f9;
	div.approx.f32 	%f1338, %f359, %f9;
$L__BB0_14:                             // %L840
	cvt.rn.f32.s32 	%f362, %r10;
	sub.f32 	%f363, %f362, %f253;
	div.approx.f32 	%f14, %f363, %f289;
	setp.eq.f32 	%p38, %f14, 0f00000000;
	mov.f32 	%f1339, %f1351;
	@%p38 bra 	$L__BB0_16;
// %bb.15:                              // %L857
	sin.approx.f32 	%f393, %f14;
	div.approx.f32 	%f1339, %f393, %f14;
$L__BB0_16:                             // %L860
	or.b32  	%r334, %r245, 128;
	or.b32  	%r12, %r245, 192;
	cvt.rn.f32.s32 	%f397, %r334;
	sub.f32 	%f398, %f397, %f253;
	div.approx.f32 	%f18, %f398, %f289;
	setp.eq.f32 	%p44, %f18, 0f00000000;
	mov.f32 	%f1340, %f1351;
	@%p44 bra 	$L__BB0_18;
// %bb.17:                              // %L939
	sin.approx.f32 	%f428, %f18;
	div.approx.f32 	%f1340, %f428, %f18;
$L__BB0_18:                             // %L942
	cvt.rn.f32.s32 	%f431, %r12;
	sub.f32 	%f432, %f431, %f253;
	div.approx.f32 	%f23, %f432, %f289;
	setp.eq.f32 	%p50, %f23, 0f00000000;
	mov.f32 	%f1341, %f1351;
	@%p50 bra 	$L__BB0_20;
// %bb.19:                              // %L959
	sin.approx.f32 	%f462, %f23;
	div.approx.f32 	%f1341, %f462, %f23;
$L__BB0_20:                             // %L962
	or.b32  	%r352, %r245, 129;
	or.b32  	%r14, %r245, 193;
	cvt.rn.f32.s32 	%f466, %r352;
	sub.f32 	%f467, %f466, %f253;
	div.approx.f32 	%f27, %f467, %f289;
	setp.eq.f32 	%p56, %f27, 0f00000000;
	mov.f32 	%f1342, %f1351;
	@%p56 bra 	$L__BB0_22;
// %bb.21:                              // %L1041
	sin.approx.f32 	%f497, %f27;
	div.approx.f32 	%f1342, %f497, %f27;
$L__BB0_22:                             // %L1044
	cvt.rn.f32.s32 	%f500, %r14;
	sub.f32 	%f501, %f500, %f253;
	div.approx.f32 	%f32, %f501, %f289;
	setp.eq.f32 	%p62, %f32, 0f00000000;
	mov.f32 	%f1343, %f1351;
	@%p62 bra 	$L__BB0_24;
// %bb.23:                              // %L1061
	sin.approx.f32 	%f531, %f32;
	div.approx.f32 	%f1343, %f531, %f32;
$L__BB0_24:                             // %L1064
	or.b32  	%r370, %r245, 256;
	or.b32  	%r16, %r245, 320;
	cvt.rn.f32.s32 	%f535, %r370;
	sub.f32 	%f536, %f535, %f253;
	div.approx.f32 	%f36, %f536, %f289;
	setp.eq.f32 	%p68, %f36, 0f00000000;
	mov.f32 	%f1344, %f1351;
	@%p68 bra 	$L__BB0_26;
// %bb.25:                              // %L1143
	sin.approx.f32 	%f566, %f36;
	div.approx.f32 	%f1344, %f566, %f36;
$L__BB0_26:                             // %L1146
	mov.f32 	%f261, 0f44004000;
	cvt.rn.f32.s32 	%f569, %r16;
	sub.f32 	%f570, %f569, %f253;
	div.approx.f32 	%f41, %f570, %f289;
	setp.eq.f32 	%p74, %f41, 0f00000000;
	mov.f32 	%f1345, %f1351;
	@%p74 bra 	$L__BB0_28;
// %bb.27:                              // %L1163
	sin.approx.f32 	%f600, %f41;
	div.approx.f32 	%f1345, %f600, %f41;
$L__BB0_28:                             // %L1166
	div.approx.f32 	%f262, %f260, %f261;
	div.approx.f32 	%f296, %f294, %f261;
	div.approx.f32 	%f331, %f329, %f261;
	div.approx.f32 	%f365, %f363, %f261;
	div.approx.f32 	%f400, %f398, %f261;
	div.approx.f32 	%f434, %f432, %f261;
	div.approx.f32 	%f469, %f467, %f261;
	div.approx.f32 	%f503, %f501, %f261;
	div.approx.f32 	%f538, %f536, %f261;
	div.approx.f32 	%f572, %f570, %f261;
	or.b32  	%r388, %r245, 257;
	or.b32  	%r18, %r245, 321;
	cvt.rn.f32.s32 	%f604, %r388;
	sub.f32 	%f605, %f604, %f253;
	div.approx.f32 	%f607, %f605, %f261;
	div.approx.f32 	%f45, %f605, %f289;
	setp.eq.f32 	%p80, %f45, 0f00000000;
	mov.f32 	%f1346, %f1351;
	@%p80 bra 	$L__BB0_30;
// %bb.29:                              // %L1245
	sin.approx.f32 	%f635, %f45;
	div.approx.f32 	%f1346, %f635, %f45;
$L__BB0_30:                             // %L1248
	abs.f32 	%f263, %f262;
	abs.f32 	%f297, %f296;
	abs.f32 	%f332, %f331;
	abs.f32 	%f366, %f365;
	abs.f32 	%f401, %f400;
	abs.f32 	%f435, %f434;
	abs.f32 	%f470, %f469;
	abs.f32 	%f504, %f503;
	abs.f32 	%f539, %f538;
	abs.f32 	%f573, %f572;
	abs.f32 	%f608, %f607;
	cvt.rn.f32.s32 	%f638, %r18;
	sub.f32 	%f639, %f638, %f253;
	div.approx.f32 	%f641, %f639, %f261;
	abs.f32 	%f642, %f641;
	div.approx.f32 	%f50, %f639, %f289;
	setp.eq.f32 	%p86, %f50, 0f00000000;
	mov.f32 	%f1347, %f1351;
	@%p86 bra 	$L__BB0_32;
// %bb.31:                              // %L1265
	sin.approx.f32 	%f669, %f50;
	div.approx.f32 	%f1347, %f669, %f50;
$L__BB0_32:                             // %L1268
	setp.gt.f32 	%p15, %f263, 0f4B800000;
	mul.f32 	%f264, %f262, 0f00000000;
	setp.gt.f32 	%p21, %f297, 0f4B800000;
	mul.f32 	%f298, %f296, 0f00000000;
	setp.gt.f32 	%p27, %f332, 0f4B800000;
	mul.f32 	%f333, %f331, 0f00000000;
	setp.gt.f32 	%p33, %f366, 0f4B800000;
	mul.f32 	%f367, %f365, 0f00000000;
	setp.gt.f32 	%p39, %f401, 0f4B800000;
	mul.f32 	%f402, %f400, 0f00000000;
	setp.gt.f32 	%p45, %f435, 0f4B800000;
	mul.f32 	%f436, %f434, 0f00000000;
	setp.gt.f32 	%p51, %f470, 0f4B800000;
	mul.f32 	%f471, %f469, 0f00000000;
	setp.gt.f32 	%p57, %f504, 0f4B800000;
	mul.f32 	%f505, %f503, 0f00000000;
	setp.gt.f32 	%p63, %f539, 0f4B800000;
	mul.f32 	%f540, %f538, 0f00000000;
	setp.gt.f32 	%p69, %f573, 0f4B800000;
	mul.f32 	%f574, %f572, 0f00000000;
	setp.gt.f32 	%p75, %f608, 0f4B800000;
	mul.f32 	%f609, %f607, 0f00000000;
	setp.gt.f32 	%p81, %f642, 0f4B800000;
	mul.f32 	%f643, %f641, 0f00000000;
	or.b32  	%r406, %r245, 384;
	or.b32  	%r20, %r245, 448;
	cvt.rn.f32.s32 	%f673, %r406;
	sub.f32 	%f674, %f673, %f253;
	div.approx.f32 	%f676, %f674, %f261;
	abs.f32 	%f677, %f676;
	setp.gt.f32 	%p87, %f677, 0f4B800000;
	mul.f32 	%f678, %f676, 0f00000000;
	div.approx.f32 	%f54, %f674, %f289;
	setp.eq.f32 	%p92, %f54, 0f00000000;
	mov.f32 	%f1348, %f1351;
	@%p92 bra 	$L__BB0_34;
// %bb.33:                              // %L1347
	sin.approx.f32 	%f704, %f54;
	div.approx.f32 	%f1348, %f704, %f54;
$L__BB0_34:                             // %L1350
	selp.f32 	%f265, %f264, %f262, %p15;
	selp.f32 	%f299, %f298, %f296, %p21;
	selp.f32 	%f334, %f333, %f331, %p27;
	selp.f32 	%f368, %f367, %f365, %p33;
	selp.f32 	%f403, %f402, %f400, %p39;
	selp.f32 	%f437, %f436, %f434, %p45;
	selp.f32 	%f472, %f471, %f469, %p51;
	selp.f32 	%f506, %f505, %f503, %p57;
	selp.f32 	%f541, %f540, %f538, %p63;
	selp.f32 	%f575, %f574, %f572, %p69;
	selp.f32 	%f610, %f609, %f607, %p75;
	selp.f32 	%f644, %f643, %f641, %p81;
	selp.f32 	%f679, %f678, %f676, %p87;
	cvt.rn.f32.s32 	%f707, %r20;
	sub.f32 	%f708, %f707, %f253;
	div.approx.f32 	%f710, %f708, %f261;
	abs.f32 	%f711, %f710;
	setp.gt.f32 	%p93, %f711, 0f4B800000;
	mul.f32 	%f712, %f710, 0f00000000;
	selp.f32 	%f713, %f712, %f710, %p93;
	div.approx.f32 	%f59, %f708, %f289;
	setp.eq.f32 	%p98, %f59, 0f00000000;
	mov.f32 	%f1349, %f1351;
	@%p98 bra 	$L__BB0_36;
// %bb.35:                              // %L1367
	sin.approx.f32 	%f738, %f59;
	div.approx.f32 	%f1349, %f738, %f59;
$L__BB0_36:                             // %L1370
	add.f32 	%f266, %f265, %f265;
	add.f32 	%f300, %f299, %f299;
	add.f32 	%f335, %f334, %f334;
	add.f32 	%f369, %f368, %f368;
	add.f32 	%f404, %f403, %f403;
	add.f32 	%f438, %f437, %f437;
	add.f32 	%f473, %f472, %f472;
	add.f32 	%f507, %f506, %f506;
	add.f32 	%f542, %f541, %f541;
	add.f32 	%f576, %f575, %f575;
	add.f32 	%f611, %f610, %f610;
	add.f32 	%f645, %f644, %f644;
	add.f32 	%f680, %f679, %f679;
	add.f32 	%f714, %f713, %f713;
	or.b32  	%r424, %r245, 385;
	or.b32  	%r22, %r245, 449;
	cvt.rn.f32.s32 	%f742, %r424;
	sub.f32 	%f743, %f742, %f253;
	div.approx.f32 	%f745, %f743, %f261;
	abs.f32 	%f746, %f745;
	setp.gt.f32 	%p99, %f746, 0f4B800000;
	mul.f32 	%f747, %f745, 0f00000000;
	selp.f32 	%f748, %f747, %f745, %p99;
	add.f32 	%f749, %f748, %f748;
	div.approx.f32 	%f63, %f743, %f289;
	setp.eq.f32 	%p104, %f63, 0f00000000;
	mov.f32 	%f1350, %f1351;
	@%p104 bra 	$L__BB0_38;
// %bb.37:                              // %L1449
	sin.approx.f32 	%f773, %f63;
	div.approx.f32 	%f1350, %f773, %f63;
$L__BB0_38:                             // %L1452
	mov.b32 	%r299, %f266;
	mov.b32 	%r306, %f300;
	mov.b32 	%r317, %f335;
	mov.b32 	%r324, %f369;
	mov.b32 	%r335, %f404;
	mov.b32 	%r342, %f438;
	mov.b32 	%r353, %f473;
	mov.b32 	%r360, %f507;
	mov.b32 	%r371, %f542;
	mov.b32 	%r378, %f576;
	mov.b32 	%r389, %f611;
	mov.b32 	%r396, %f645;
	mov.b32 	%r407, %f680;
	mov.b32 	%r414, %f714;
	mov.b32 	%r425, %f749;
	cvt.rn.f32.s32 	%f776, %r22;
	sub.f32 	%f777, %f776, %f253;
	div.approx.f32 	%f779, %f777, %f261;
	abs.f32 	%f780, %f779;
	setp.gt.f32 	%p105, %f780, 0f4B800000;
	mul.f32 	%f781, %f779, 0f00000000;
	selp.f32 	%f782, %f781, %f779, %p105;
	add.f32 	%f783, %f782, %f782;
	mov.b32 	%r432, %f783;
	div.approx.f32 	%f68, %f777, %f289;
	setp.eq.f32 	%p110, %f68, 0f00000000;
	@%p110 bra 	$L__BB0_40;
// %bb.39:                              // %L1469
	sin.approx.f32 	%f807, %f68;
	div.approx.f32 	%f1351, %f807, %f68;
$L__BB0_40:                             // %L1472
	and.b32  	%r300, %r299, -2147483648;
	and.b32  	%r307, %r306, -2147483648;
	and.b32  	%r318, %r317, -2147483648;
	and.b32  	%r325, %r324, -2147483648;
	and.b32  	%r336, %r335, -2147483648;
	and.b32  	%r343, %r342, -2147483648;
	and.b32  	%r354, %r353, -2147483648;
	and.b32  	%r361, %r360, -2147483648;
	and.b32  	%r372, %r371, -2147483648;
	and.b32  	%r379, %r378, -2147483648;
	and.b32  	%r390, %r389, -2147483648;
	and.b32  	%r397, %r396, -2147483648;
	and.b32  	%r408, %r407, -2147483648;
	and.b32  	%r415, %r414, -2147483648;
	and.b32  	%r426, %r425, -2147483648;
	and.b32  	%r433, %r432, -2147483648;
	mul.lo.s32 	%r24, %r245, 127;
	cvt.rn.f32.s32 	%f810, %r24;
	div.approx.f32 	%f71, %f810, %f289;
	abs.f32 	%f1354, %f71;
	setp.lt.f32 	%p111, %f1354, 0f40000000;
	@%p111 bra 	$L__BB0_52;
// %bb.41:
	setp.gtu.f32 	%p112, %f1354, 0f4B800000;
	@%p112 bra 	$L__BB0_48;
	bra.uni 	$L__BB0_42;
$L__BB0_48:
	mov.b32 	%r26, %f1354;
	and.b32  	%r442, %r26, 8388607;
	or.b32  	%r16375, %r442, 1065353216;
	mov.b32 	%f1353, %r16375;
	add.s32 	%r443, %r26, -1073741824;
	and.b32  	%r16376, %r443, -8388608;
	setp.eq.s32 	%p118, %r16376, 0;
	@%p118 bra 	$L__BB0_51;
// %bb.49:                              // %__nv_fmaf_rn.exit4.i.i.i.preheader
	mov.f32 	%f821, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f820,%f821;
	// end inline asm
$L__BB0_50:                             // %__nv_fmaf_rn.exit4.i.i.i
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r444, %r16376, 192937984;
	add.s32 	%r445, %r16375, %r444;
	mov.b32 	%f822, %r445;
	mul.f32 	%f823, %f820, %f822;
	sub.f32 	%f824, %f822, %f823;
	fma.rn.f32 	%f825, %f824, %f820, %f823;
	sub.f32 	%f826, %f822, %f825;
	fma.rz.f32 	%f827, %f826, %f820, %f825;
	cvt.rzi.f32.f32 	%f828, %f827;
	sub.f32 	%f1353, %f822, %f828;
	sub.s32 	%r16376, %r16376, %r444;
	mov.b32 	%r16375, %f1353;
	setp.ne.s32 	%p119, %r16376, 0;
	setp.ne.s32 	%p120, %r16375, 0;
	and.pred  	%p121, %p119, %p120;
	@%p121 bra 	$L__BB0_50;
$L__BB0_51:                             // %__internal_fmodf_slowpath_mod.exit.i.i
	setp.gt.u32 	%p122, %r26, 2139095039;
	selp.f32 	%f829, 0f7FFFFFFF, 0f4B800000, %p122;
	mul.f32 	%f830, %f1353, 0f34000000;
	mul.f32 	%f1354, %f829, %f830;
	bra.uni 	$L__BB0_52;
$L__BB0_42:                             // %__nv_fast_fdividef.exit.i.i.i
	div.approx.f32 	%f813, %f1354, %f257;
	cvt.rzi.f32.f32 	%f1352, %f813;
	fma.rn.f32 	%f74, %f1352, 0fC0000000, %f1354;
	mov.b32 	%r25, %f74;
	setp.lt.u32 	%p113, %r25, 1073741824;
	@%p113 bra 	$L__BB0_47;
// %bb.43:
	setp.lt.u32 	%p114, %r25, -2147483647;
	@%p114 bra 	$L__BB0_45;
// %bb.44:
	add.f32 	%f818, %f1352, 0fBF800000;
	setp.lt.f32 	%p117, %f74, 0fC0000000;
	add.f32 	%f819, %f818, 0fBF800000;
	selp.f32 	%f1352, %f819, %f818, %p117;
	bra.uni 	$L__BB0_47;
$L__BB0_45:
	add.f32 	%f1352, %f1352, 0f3F800000;
	setp.ltu.f32 	%p115, %f74, 0f40800000;
	@%p115 bra 	$L__BB0_47;
// %bb.46:                              // %__nv_fmaf_rn.exit.i.i.i
	add.f32 	%f814, %f1352, 0f3F800000;
	fma.rn.f32 	%f816, %f257, 0fC0400000, %f74;
	setp.ge.f32 	%p116, %f816, 0f00000000;
	add.f32 	%f817, %f814, 0f3F800000;
	selp.f32 	%f1352, %f817, %f814, %p116;
$L__BB0_47:                             // %__internal_fmodf_fastpath_quot.exit.i.i
	fma.rn.f32 	%f1354, %f1352, 0fC0000000, %f1354;
$L__BB0_52:                             // %__internal_fmodf_kernel.exit.i
	or.b32  	%r301, %r300, 1056964608;
	or.b32  	%r308, %r307, 1056964608;
	or.b32  	%r319, %r318, 1056964608;
	or.b32  	%r326, %r325, 1056964608;
	or.b32  	%r337, %r336, 1056964608;
	or.b32  	%r344, %r343, 1056964608;
	or.b32  	%r355, %r354, 1056964608;
	or.b32  	%r362, %r361, 1056964608;
	or.b32  	%r373, %r372, 1056964608;
	or.b32  	%r380, %r379, 1056964608;
	or.b32  	%r391, %r390, 1056964608;
	or.b32  	%r398, %r397, 1056964608;
	or.b32  	%r409, %r408, 1056964608;
	or.b32  	%r416, %r415, 1056964608;
	or.b32  	%r427, %r426, 1056964608;
	or.b32  	%r434, %r433, 1056964608;
	abs.f32 	%f831, %f1354;
	setp.gtu.f32 	%p123, %f831, 0f7F800000;
	@%p123 bra 	$L__BB0_54;
// %bb.53:
	mov.b32 	%r446, %f71;
	and.b32  	%r447, %r446, -2147483648;
	mov.b32 	%r448, %f1354;
	or.b32  	%r449, %r447, %r448;
	mov.b32 	%f1354, %r449;
$L__BB0_54:                             // %__nv_fmodf.exit
	mov.b32 	%f267, %r301;
	mov.b32 	%f301, %r308;
	mov.b32 	%f336, %r319;
	mov.b32 	%f370, %r326;
	mov.b32 	%f405, %r337;
	mov.b32 	%f439, %r344;
	mov.b32 	%f474, %r355;
	mov.b32 	%f508, %r362;
	mov.b32 	%f543, %r373;
	mov.b32 	%f577, %r380;
	mov.b32 	%f612, %r391;
	mov.b32 	%f646, %r398;
	mov.b32 	%f681, %r409;
	mov.b32 	%f715, %r416;
	mov.b32 	%f750, %r427;
	mov.b32 	%f784, %r434;
	add.f32 	%f832, %f1354, %f1354;
	mov.b32 	%r450, %f832;
	and.b32  	%r451, %r450, -2147483648;
	or.b32  	%r452, %r451, 1056964608;
	mov.b32 	%f833, %r452;
	add.f32 	%f834, %f832, %f833;
	abs.f32 	%f836, %f832;
	add.s32 	%r458, %r24, 8128;
	cvt.rn.f32.s32 	%f862, %r458;
	div.approx.f32 	%f90, %f862, %f289;
	abs.f32 	%f1358, %f90;
	setp.lt.f32 	%p131, %f1358, 0f40000000;
	@%p131 bra 	$L__BB0_66;
// %bb.55:
	setp.gtu.f32 	%p132, %f1358, 0f4B800000;
	@%p132 bra 	$L__BB0_62;
	bra.uni 	$L__BB0_56;
$L__BB0_62:
	mov.b32 	%r34, %f1358;
	and.b32  	%r459, %r34, 8388607;
	or.b32  	%r16377, %r459, 1065353216;
	mov.b32 	%f1357, %r16377;
	add.s32 	%r460, %r34, -1073741824;
	and.b32  	%r16378, %r460, -8388608;
	setp.eq.s32 	%p138, %r16378, 0;
	@%p138 bra 	$L__BB0_65;
// %bb.63:                              // %__nv_fmaf_rn.exit4.i.i.i1655.preheader
	mov.f32 	%f873, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f872,%f873;
	// end inline asm
$L__BB0_64:                             // %__nv_fmaf_rn.exit4.i.i.i1655
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r461, %r16378, 192937984;
	add.s32 	%r462, %r16377, %r461;
	mov.b32 	%f874, %r462;
	mul.f32 	%f875, %f872, %f874;
	sub.f32 	%f876, %f874, %f875;
	fma.rn.f32 	%f877, %f876, %f872, %f875;
	sub.f32 	%f878, %f874, %f877;
	fma.rz.f32 	%f879, %f878, %f872, %f877;
	cvt.rzi.f32.f32 	%f880, %f879;
	sub.f32 	%f1357, %f874, %f880;
	sub.s32 	%r16378, %r16378, %r461;
	mov.b32 	%r16377, %f1357;
	setp.ne.s32 	%p139, %r16378, 0;
	setp.ne.s32 	%p140, %r16377, 0;
	and.pred  	%p141, %p139, %p140;
	@%p141 bra 	$L__BB0_64;
$L__BB0_65:                             // %__internal_fmodf_slowpath_mod.exit.i.i1657
	setp.gt.u32 	%p142, %r34, 2139095039;
	selp.f32 	%f881, 0f7FFFFFFF, 0f4B800000, %p142;
	mul.f32 	%f882, %f1357, 0f34000000;
	mul.f32 	%f1358, %f881, %f882;
	bra.uni 	$L__BB0_66;
$L__BB0_56:                             // %__nv_fast_fdividef.exit.i.i.i1634
	div.approx.f32 	%f865, %f1358, %f257;
	cvt.rzi.f32.f32 	%f1356, %f865;
	fma.rn.f32 	%f93, %f1356, 0fC0000000, %f1358;
	mov.b32 	%r33, %f93;
	setp.lt.u32 	%p133, %r33, 1073741824;
	@%p133 bra 	$L__BB0_61;
// %bb.57:
	setp.lt.u32 	%p134, %r33, -2147483647;
	@%p134 bra 	$L__BB0_59;
// %bb.58:
	add.f32 	%f870, %f1356, 0fBF800000;
	setp.lt.f32 	%p137, %f93, 0fC0000000;
	add.f32 	%f871, %f870, 0fBF800000;
	selp.f32 	%f1356, %f871, %f870, %p137;
	bra.uni 	$L__BB0_61;
$L__BB0_59:
	add.f32 	%f1356, %f1356, 0f3F800000;
	setp.ltu.f32 	%p135, %f93, 0f40800000;
	@%p135 bra 	$L__BB0_61;
// %bb.60:                              // %__nv_fmaf_rn.exit.i.i.i1638
	add.f32 	%f866, %f1356, 0f3F800000;
	fma.rn.f32 	%f868, %f257, 0fC0400000, %f93;
	setp.ge.f32 	%p136, %f868, 0f00000000;
	add.f32 	%f869, %f866, 0f3F800000;
	selp.f32 	%f1356, %f869, %f866, %p136;
$L__BB0_61:                             // %__internal_fmodf_fastpath_quot.exit.i.i1641
	fma.rn.f32 	%f1358, %f1356, 0fC0000000, %f1358;
$L__BB0_66:                             // %__internal_fmodf_kernel.exit.i1660
	add.f32 	%f268, %f266, %f267;
	abs.f32 	%f270, %f266;
	add.f32 	%f302, %f300, %f301;
	abs.f32 	%f304, %f300;
	add.f32 	%f337, %f335, %f336;
	abs.f32 	%f339, %f335;
	add.f32 	%f371, %f369, %f370;
	abs.f32 	%f373, %f369;
	add.f32 	%f406, %f404, %f405;
	abs.f32 	%f408, %f404;
	add.f32 	%f440, %f438, %f439;
	abs.f32 	%f442, %f438;
	add.f32 	%f475, %f473, %f474;
	abs.f32 	%f477, %f473;
	add.f32 	%f509, %f507, %f508;
	abs.f32 	%f511, %f507;
	add.f32 	%f544, %f542, %f543;
	abs.f32 	%f546, %f542;
	add.f32 	%f578, %f576, %f577;
	abs.f32 	%f580, %f576;
	add.f32 	%f613, %f611, %f612;
	abs.f32 	%f615, %f611;
	add.f32 	%f647, %f645, %f646;
	abs.f32 	%f649, %f645;
	add.f32 	%f682, %f680, %f681;
	abs.f32 	%f684, %f680;
	add.f32 	%f716, %f714, %f715;
	abs.f32 	%f718, %f714;
	add.f32 	%f751, %f749, %f750;
	abs.f32 	%f753, %f749;
	add.f32 	%f785, %f783, %f784;
	abs.f32 	%f787, %f783;
	cvt.rzi.f32.f32 	%f835, %f834;
	setp.gt.f32 	%p124, %f836, 0f4B000000;
	shr.u32 	%r237, %r1, 1;
	shr.u32 	%r243, %r1, 3;
	abs.f32 	%f883, %f1358;
	setp.gtu.f32 	%p143, %f883, 0f7F800000;
	@%p143 bra 	$L__BB0_68;
// %bb.67:
	mov.b32 	%r463, %f90;
	and.b32  	%r464, %r463, -2147483648;
	mov.b32 	%r465, %f1358;
	or.b32  	%r466, %r464, %r465;
	mov.b32 	%f1358, %r466;
$L__BB0_68:                             // %__nv_fmodf.exit1661
	cvt.rzi.f32.f32 	%f269, %f268;
	setp.gt.f32 	%p16, %f270, 0f4B000000;
	cvt.rzi.f32.f32 	%f303, %f302;
	setp.gt.f32 	%p22, %f304, 0f4B000000;
	cvt.rzi.f32.f32 	%f338, %f337;
	setp.gt.f32 	%p28, %f339, 0f4B000000;
	cvt.rzi.f32.f32 	%f372, %f371;
	setp.gt.f32 	%p34, %f373, 0f4B000000;
	cvt.rzi.f32.f32 	%f407, %f406;
	setp.gt.f32 	%p40, %f408, 0f4B000000;
	cvt.rzi.f32.f32 	%f441, %f440;
	setp.gt.f32 	%p46, %f442, 0f4B000000;
	cvt.rzi.f32.f32 	%f476, %f475;
	setp.gt.f32 	%p52, %f477, 0f4B000000;
	cvt.rzi.f32.f32 	%f510, %f509;
	setp.gt.f32 	%p58, %f511, 0f4B000000;
	cvt.rzi.f32.f32 	%f545, %f544;
	setp.gt.f32 	%p64, %f546, 0f4B000000;
	cvt.rzi.f32.f32 	%f579, %f578;
	setp.gt.f32 	%p70, %f580, 0f4B000000;
	cvt.rzi.f32.f32 	%f614, %f613;
	setp.gt.f32 	%p76, %f615, 0f4B000000;
	cvt.rzi.f32.f32 	%f648, %f647;
	setp.gt.f32 	%p82, %f649, 0f4B000000;
	cvt.rzi.f32.f32 	%f683, %f682;
	setp.gt.f32 	%p88, %f684, 0f4B000000;
	cvt.rzi.f32.f32 	%f717, %f716;
	setp.gt.f32 	%p94, %f718, 0f4B000000;
	cvt.rzi.f32.f32 	%f752, %f751;
	setp.gt.f32 	%p100, %f753, 0f4B000000;
	cvt.rzi.f32.f32 	%f786, %f785;
	setp.gt.f32 	%p106, %f787, 0f4B000000;
	selp.f32 	%f837, %f832, %f835, %p124;
	cvt.rzi.f32.f32 	%f838, %f832;
	setp.lt.f32 	%p125, %f836, 0f3F000000;
	add.f32 	%f884, %f1358, %f1358;
	mov.b32 	%r479, %f884;
	and.b32  	%r480, %r479, -2147483648;
	or.b32  	%r481, %r480, 1056964608;
	mov.b32 	%f885, %r481;
	add.f32 	%f886, %f884, %f885;
	cvt.rzi.f32.f32 	%f887, %f886;
	abs.f32 	%f888, %f884;
	setp.gt.f32 	%p144, %f888, 0f4B000000;
	selp.f32 	%f889, %f884, %f887, %p144;
	cvt.rzi.f32.f32 	%f890, %f884;
	setp.lt.f32 	%p145, %f888, 0f3F000000;
	and.b32  	%r487, %r243, 2;
	or.b32  	%r488, %r241, %r487;
	and.b32  	%r489, %r237, 4;
	or.b32  	%r45, %r488, %r489;
	and.b32  	%r490, %r1, 3;
	mul.lo.s32 	%r491, %r490, %r45;
	shl.b32 	%r492, %r491, 1;
	neg.s32 	%r493, %r492;
	cvt.rn.f32.s32 	%f916, %r493;
	mov.f32 	%f917, 0f41000000;
	div.approx.f32 	%f107, %f916, %f917;
	abs.f32 	%f1362, %f107;
	setp.lt.f32 	%p151, %f1362, 0f40000000;
	@%p151 bra 	$L__BB0_80;
// %bb.69:
	setp.gtu.f32 	%p152, %f1362, 0f4B800000;
	@%p152 bra 	$L__BB0_76;
	bra.uni 	$L__BB0_70;
$L__BB0_76:
	mov.b32 	%r47, %f1362;
	and.b32  	%r494, %r47, 8388607;
	or.b32  	%r16379, %r494, 1065353216;
	mov.b32 	%f1361, %r16379;
	add.s32 	%r495, %r47, -1073741824;
	and.b32  	%r16380, %r495, -8388608;
	setp.eq.s32 	%p158, %r16380, 0;
	@%p158 bra 	$L__BB0_79;
// %bb.77:                              // %__nv_fmaf_rn.exit4.i.i.i1686.preheader
	mov.f32 	%f927, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f926,%f927;
	// end inline asm
$L__BB0_78:                             // %__nv_fmaf_rn.exit4.i.i.i1686
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r496, %r16380, 192937984;
	add.s32 	%r497, %r16379, %r496;
	mov.b32 	%f928, %r497;
	mul.f32 	%f929, %f926, %f928;
	sub.f32 	%f930, %f928, %f929;
	fma.rn.f32 	%f931, %f930, %f926, %f929;
	sub.f32 	%f932, %f928, %f931;
	fma.rz.f32 	%f933, %f932, %f926, %f931;
	cvt.rzi.f32.f32 	%f934, %f933;
	sub.f32 	%f1361, %f928, %f934;
	sub.s32 	%r16380, %r16380, %r496;
	mov.b32 	%r16379, %f1361;
	setp.ne.s32 	%p159, %r16380, 0;
	setp.ne.s32 	%p160, %r16379, 0;
	and.pred  	%p161, %p159, %p160;
	@%p161 bra 	$L__BB0_78;
$L__BB0_79:                             // %__internal_fmodf_slowpath_mod.exit.i.i1688
	setp.gt.u32 	%p162, %r47, 2139095039;
	selp.f32 	%f935, 0f7FFFFFFF, 0f4B800000, %p162;
	mul.f32 	%f936, %f1361, 0f34000000;
	mul.f32 	%f1362, %f935, %f936;
	bra.uni 	$L__BB0_80;
$L__BB0_70:                             // %__nv_fast_fdividef.exit.i.i.i1665
	div.approx.f32 	%f919, %f1362, %f257;
	cvt.rzi.f32.f32 	%f1360, %f919;
	fma.rn.f32 	%f110, %f1360, 0fC0000000, %f1362;
	mov.b32 	%r46, %f110;
	setp.lt.u32 	%p153, %r46, 1073741824;
	@%p153 bra 	$L__BB0_75;
// %bb.71:
	setp.lt.u32 	%p154, %r46, -2147483647;
	@%p154 bra 	$L__BB0_73;
// %bb.72:
	add.f32 	%f924, %f1360, 0fBF800000;
	setp.lt.f32 	%p157, %f110, 0fC0000000;
	add.f32 	%f925, %f924, 0fBF800000;
	selp.f32 	%f1360, %f925, %f924, %p157;
	bra.uni 	$L__BB0_75;
$L__BB0_73:
	add.f32 	%f1360, %f1360, 0f3F800000;
	setp.ltu.f32 	%p155, %f110, 0f40800000;
	@%p155 bra 	$L__BB0_75;
// %bb.74:                              // %__nv_fmaf_rn.exit.i.i.i1669
	add.f32 	%f920, %f1360, 0f3F800000;
	fma.rn.f32 	%f922, %f257, 0fC0400000, %f110;
	setp.ge.f32 	%p156, %f922, 0f00000000;
	add.f32 	%f923, %f920, 0f3F800000;
	selp.f32 	%f1360, %f923, %f920, %p156;
$L__BB0_75:                             // %__internal_fmodf_fastpath_quot.exit.i.i1672
	fma.rn.f32 	%f1362, %f1360, 0fC0000000, %f1362;
$L__BB0_80:                             // %__internal_fmodf_kernel.exit.i1691
	selp.f32 	%f271, %f266, %f269, %p16;
	cvt.rzi.f32.f32 	%f272, %f266;
	setp.lt.f32 	%p17, %f270, 0f3F000000;
	selp.f32 	%f305, %f300, %f303, %p22;
	cvt.rzi.f32.f32 	%f306, %f300;
	setp.lt.f32 	%p23, %f304, 0f3F000000;
	selp.f32 	%f340, %f335, %f338, %p28;
	cvt.rzi.f32.f32 	%f341, %f335;
	setp.lt.f32 	%p29, %f339, 0f3F000000;
	selp.f32 	%f374, %f369, %f372, %p34;
	cvt.rzi.f32.f32 	%f375, %f369;
	setp.lt.f32 	%p35, %f373, 0f3F000000;
	selp.f32 	%f409, %f404, %f407, %p40;
	cvt.rzi.f32.f32 	%f410, %f404;
	setp.lt.f32 	%p41, %f408, 0f3F000000;
	selp.f32 	%f443, %f438, %f441, %p46;
	cvt.rzi.f32.f32 	%f444, %f438;
	setp.lt.f32 	%p47, %f442, 0f3F000000;
	selp.f32 	%f478, %f473, %f476, %p52;
	cvt.rzi.f32.f32 	%f479, %f473;
	setp.lt.f32 	%p53, %f477, 0f3F000000;
	selp.f32 	%f512, %f507, %f510, %p58;
	cvt.rzi.f32.f32 	%f513, %f507;
	setp.lt.f32 	%p59, %f511, 0f3F000000;
	selp.f32 	%f547, %f542, %f545, %p64;
	cvt.rzi.f32.f32 	%f548, %f542;
	setp.lt.f32 	%p65, %f546, 0f3F000000;
	selp.f32 	%f581, %f576, %f579, %p70;
	cvt.rzi.f32.f32 	%f582, %f576;
	setp.lt.f32 	%p71, %f580, 0f3F000000;
	selp.f32 	%f616, %f611, %f614, %p76;
	cvt.rzi.f32.f32 	%f617, %f611;
	setp.lt.f32 	%p77, %f615, 0f3F000000;
	selp.f32 	%f650, %f645, %f648, %p82;
	cvt.rzi.f32.f32 	%f651, %f645;
	setp.lt.f32 	%p83, %f649, 0f3F000000;
	selp.f32 	%f685, %f680, %f683, %p88;
	cvt.rzi.f32.f32 	%f686, %f680;
	setp.lt.f32 	%p89, %f684, 0f3F000000;
	selp.f32 	%f719, %f714, %f717, %p94;
	cvt.rzi.f32.f32 	%f720, %f714;
	setp.lt.f32 	%p95, %f718, 0f3F000000;
	selp.f32 	%f754, %f749, %f752, %p100;
	cvt.rzi.f32.f32 	%f755, %f749;
	setp.lt.f32 	%p101, %f753, 0f3F000000;
	selp.f32 	%f788, %f783, %f786, %p106;
	cvt.rzi.f32.f32 	%f789, %f783;
	setp.lt.f32 	%p107, %f787, 0f3F000000;
	selp.f32 	%f839, %f838, %f837, %p125;
	selp.f32 	%f891, %f890, %f889, %p145;
	shl.b32 	%r228, %r1, 1;
	abs.f32 	%f937, %f1362;
	setp.gtu.f32 	%p163, %f937, 0f7F800000;
	@%p163 bra 	$L__BB0_82;
// %bb.81:
	mov.b32 	%r498, %f107;
	and.b32  	%r499, %r498, -2147483648;
	mov.b32 	%r500, %f1362;
	or.b32  	%r501, %r499, %r500;
	mov.b32 	%f1362, %r501;
$L__BB0_82:                             // %__nv_fmodf.exit1692
	selp.f32 	%f273, %f272, %f271, %p17;
	selp.f32 	%f307, %f306, %f305, %p23;
	selp.f32 	%f342, %f341, %f340, %p29;
	selp.f32 	%f376, %f375, %f374, %p35;
	selp.f32 	%f411, %f410, %f409, %p41;
	selp.f32 	%f445, %f444, %f443, %p47;
	selp.f32 	%f480, %f479, %f478, %p53;
	selp.f32 	%f514, %f513, %f512, %p59;
	selp.f32 	%f549, %f548, %f547, %p65;
	selp.f32 	%f583, %f582, %f581, %p71;
	selp.f32 	%f618, %f617, %f616, %p77;
	selp.f32 	%f652, %f651, %f650, %p83;
	selp.f32 	%f687, %f686, %f685, %p89;
	selp.f32 	%f721, %f720, %f719, %p95;
	selp.f32 	%f756, %f755, %f754, %p101;
	selp.f32 	%f790, %f789, %f788, %p107;
	fma.rn.f32 	%f840, %f839, 0fBF000000, %f1354;
	fma.rn.f32 	%f892, %f891, 0fBF000000, %f1358;
	add.f32 	%f938, %f1362, %f1362;
	mov.b32 	%r502, %f938;
	and.b32  	%r503, %r502, -2147483648;
	or.b32  	%r504, %r503, 1056964608;
	mov.b32 	%f939, %r504;
	add.f32 	%f940, %f938, %f939;
	cvt.rzi.f32.f32 	%f941, %f940;
	abs.f32 	%f942, %f938;
	setp.gt.f32 	%p164, %f942, 0f4B000000;
	selp.f32 	%f943, %f938, %f941, %p164;
	cvt.rzi.f32.f32 	%f944, %f938;
	setp.lt.f32 	%p165, %f942, 0f3F000000;
	selp.f32 	%f945, %f944, %f943, %p165;
	fma.rn.f32 	%f946, %f945, 0fBF000000, %f1362;
	and.b32  	%r510, %r228, 6;
	mov.u32 	%r511, -8;
	sub.s32 	%r512, %r511, %r510;
	mul.lo.s32 	%r513, %r45, %r512;
	cvt.rn.f32.s32 	%f968, %r513;
	div.approx.f32 	%f126, %f968, %f917;
	abs.f32 	%f1366, %f126;
	setp.lt.f32 	%p171, %f1366, 0f40000000;
	@%p171 bra 	$L__BB0_94;
// %bb.83:
	setp.gtu.f32 	%p172, %f1366, 0f4B800000;
	@%p172 bra 	$L__BB0_90;
	bra.uni 	$L__BB0_84;
$L__BB0_90:
	mov.b32 	%r55, %f1366;
	and.b32  	%r514, %r55, 8388607;
	or.b32  	%r16381, %r514, 1065353216;
	mov.b32 	%f1365, %r16381;
	add.s32 	%r515, %r55, -1073741824;
	and.b32  	%r16382, %r515, -8388608;
	setp.eq.s32 	%p178, %r16382, 0;
	@%p178 bra 	$L__BB0_93;
// %bb.91:                              // %__nv_fmaf_rn.exit4.i.i.i1717.preheader
	mov.f32 	%f979, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f978,%f979;
	// end inline asm
$L__BB0_92:                             // %__nv_fmaf_rn.exit4.i.i.i1717
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r516, %r16382, 192937984;
	add.s32 	%r517, %r16381, %r516;
	mov.b32 	%f980, %r517;
	mul.f32 	%f981, %f978, %f980;
	sub.f32 	%f982, %f980, %f981;
	fma.rn.f32 	%f983, %f982, %f978, %f981;
	sub.f32 	%f984, %f980, %f983;
	fma.rz.f32 	%f985, %f984, %f978, %f983;
	cvt.rzi.f32.f32 	%f986, %f985;
	sub.f32 	%f1365, %f980, %f986;
	sub.s32 	%r16382, %r16382, %r516;
	mov.b32 	%r16381, %f1365;
	setp.ne.s32 	%p179, %r16382, 0;
	setp.ne.s32 	%p180, %r16381, 0;
	and.pred  	%p181, %p179, %p180;
	@%p181 bra 	$L__BB0_92;
$L__BB0_93:                             // %__internal_fmodf_slowpath_mod.exit.i.i1719
	setp.gt.u32 	%p182, %r55, 2139095039;
	selp.f32 	%f987, 0f7FFFFFFF, 0f4B800000, %p182;
	mul.f32 	%f988, %f1365, 0f34000000;
	mul.f32 	%f1366, %f987, %f988;
	bra.uni 	$L__BB0_94;
$L__BB0_84:                             // %__nv_fast_fdividef.exit.i.i.i1696
	div.approx.f32 	%f971, %f1366, %f257;
	cvt.rzi.f32.f32 	%f1364, %f971;
	fma.rn.f32 	%f129, %f1364, 0fC0000000, %f1366;
	mov.b32 	%r54, %f129;
	setp.lt.u32 	%p173, %r54, 1073741824;
	@%p173 bra 	$L__BB0_89;
// %bb.85:
	setp.lt.u32 	%p174, %r54, -2147483647;
	@%p174 bra 	$L__BB0_87;
// %bb.86:
	add.f32 	%f976, %f1364, 0fBF800000;
	setp.lt.f32 	%p177, %f129, 0fC0000000;
	add.f32 	%f977, %f976, 0fBF800000;
	selp.f32 	%f1364, %f977, %f976, %p177;
	bra.uni 	$L__BB0_89;
$L__BB0_87:
	add.f32 	%f1364, %f1364, 0f3F800000;
	setp.ltu.f32 	%p175, %f129, 0f40800000;
	@%p175 bra 	$L__BB0_89;
// %bb.88:                              // %__nv_fmaf_rn.exit.i.i.i1700
	add.f32 	%f972, %f1364, 0f3F800000;
	fma.rn.f32 	%f974, %f257, 0fC0400000, %f129;
	setp.ge.f32 	%p176, %f974, 0f00000000;
	add.f32 	%f975, %f972, 0f3F800000;
	selp.f32 	%f1364, %f975, %f972, %p176;
$L__BB0_89:                             // %__internal_fmodf_fastpath_quot.exit.i.i1703
	fma.rn.f32 	%f1366, %f1364, 0fC0000000, %f1366;
$L__BB0_94:                             // %__internal_fmodf_kernel.exit.i1722
	fma.rn.f32 	%f274, %f273, 0fBF000000, %f265;
	fma.rn.f32 	%f308, %f307, 0fBF000000, %f299;
	fma.rn.f32 	%f343, %f342, 0fBF000000, %f334;
	fma.rn.f32 	%f377, %f376, 0fBF000000, %f368;
	fma.rn.f32 	%f412, %f411, 0fBF000000, %f403;
	fma.rn.f32 	%f446, %f445, 0fBF000000, %f437;
	fma.rn.f32 	%f481, %f480, 0fBF000000, %f472;
	fma.rn.f32 	%f515, %f514, 0fBF000000, %f506;
	fma.rn.f32 	%f550, %f549, 0fBF000000, %f541;
	fma.rn.f32 	%f584, %f583, 0fBF000000, %f575;
	fma.rn.f32 	%f619, %f618, 0fBF000000, %f610;
	fma.rn.f32 	%f653, %f652, 0fBF000000, %f644;
	fma.rn.f32 	%f688, %f687, 0fBF000000, %f679;
	fma.rn.f32 	%f722, %f721, 0fBF000000, %f713;
	fma.rn.f32 	%f757, %f756, 0fBF000000, %f748;
	fma.rn.f32 	%f791, %f790, 0fBF000000, %f782;
	mul.f32 	%f841, %f840, %f840;
	mul.f32 	%f893, %f892, %f892;
	mul.f32 	%f947, %f946, %f946;
	abs.f32 	%f989, %f1366;
	setp.gtu.f32 	%p183, %f989, 0f7F800000;
	@%p183 bra 	$L__BB0_96;
// %bb.95:
	mov.b32 	%r518, %f126;
	and.b32  	%r519, %r518, -2147483648;
	mov.b32 	%r520, %f1366;
	or.b32  	%r521, %r519, %r520;
	mov.b32 	%f1366, %r521;
$L__BB0_96:                             // %__nv_fmodf.exit1723
	mul.f32 	%f275, %f274, %f274;
	mul.f32 	%f309, %f308, %f308;
	mul.f32 	%f344, %f343, %f343;
	mul.f32 	%f378, %f377, %f377;
	mul.f32 	%f413, %f412, %f412;
	mul.f32 	%f447, %f446, %f446;
	mul.f32 	%f482, %f481, %f481;
	mul.f32 	%f516, %f515, %f515;
	mul.f32 	%f551, %f550, %f550;
	mul.f32 	%f585, %f584, %f584;
	mul.f32 	%f620, %f619, %f619;
	mul.f32 	%f654, %f653, %f653;
	mul.f32 	%f689, %f688, %f688;
	mul.f32 	%f723, %f722, %f722;
	mul.f32 	%f758, %f757, %f757;
	mul.f32 	%f792, %f791, %f791;
	fma.rn.f32 	%f842, %f841, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f843, %f841, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f894, %f893, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f895, %f893, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f948, %f947, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f949, %f947, 0f3E684E12, 0fBFAAD2E0;
	add.f32 	%f990, %f1366, %f1366;
	mov.b32 	%r534, %f990;
	and.b32  	%r535, %r534, -2147483648;
	or.b32  	%r536, %r535, 1056964608;
	mov.b32 	%f991, %r536;
	add.f32 	%f992, %f990, %f991;
	cvt.rzi.f32.f32 	%f993, %f992;
	abs.f32 	%f994, %f990;
	setp.gt.f32 	%p184, %f994, 0f4B000000;
	selp.f32 	%f995, %f990, %f993, %p184;
	cvt.rzi.f32.f32 	%f996, %f990;
	setp.lt.f32 	%p185, %f994, 0f3F000000;
	selp.f32 	%f997, %f996, %f995, %p185;
	fma.rn.f32 	%f998, %f997, 0fBF000000, %f1366;
	mul.f32 	%f999, %f998, %f998;
	fma.rn.f32 	%f1000, %f999, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1001, %f999, 0f3E684E12, 0fBFAAD2E0;
	mul.lo.s32 	%r542, %r239, 2147483646;
	shl.b32 	%r543, %r238, 2;
	sub.s32 	%r544, %r542, %r543;
	mul.lo.s32 	%r545, %r544, %r45;
	shl.b32 	%r66, %r545, 1;
	cvt.rn.f32.s32 	%f143, %r66;
	div.approx.f32 	%f144, %f143, %f289;
	abs.f32 	%f1370, %f144;
	setp.lt.f32 	%p191, %f1370, 0f40000000;
	@%p191 bra 	$L__BB0_108;
// %bb.97:
	setp.gtu.f32 	%p192, %f1370, 0f4B800000;
	@%p192 bra 	$L__BB0_104;
	bra.uni 	$L__BB0_98;
$L__BB0_104:
	mov.b32 	%r68, %f1370;
	and.b32  	%r546, %r68, 8388607;
	or.b32  	%r16383, %r546, 1065353216;
	mov.b32 	%f1369, %r16383;
	add.s32 	%r547, %r68, -1073741824;
	and.b32  	%r16384, %r547, -8388608;
	setp.eq.s32 	%p198, %r16384, 0;
	@%p198 bra 	$L__BB0_107;
// %bb.105:                             // %__nv_fmaf_rn.exit4.i.i.i1748.preheader
	mov.f32 	%f1032, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1031,%f1032;
	// end inline asm
$L__BB0_106:                            // %__nv_fmaf_rn.exit4.i.i.i1748
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r548, %r16384, 192937984;
	add.s32 	%r549, %r16383, %r548;
	mov.b32 	%f1033, %r549;
	mul.f32 	%f1034, %f1031, %f1033;
	sub.f32 	%f1035, %f1033, %f1034;
	fma.rn.f32 	%f1036, %f1035, %f1031, %f1034;
	sub.f32 	%f1037, %f1033, %f1036;
	fma.rz.f32 	%f1038, %f1037, %f1031, %f1036;
	cvt.rzi.f32.f32 	%f1039, %f1038;
	sub.f32 	%f1369, %f1033, %f1039;
	sub.s32 	%r16384, %r16384, %r548;
	mov.b32 	%r16383, %f1369;
	setp.ne.s32 	%p199, %r16384, 0;
	setp.ne.s32 	%p200, %r16383, 0;
	and.pred  	%p201, %p199, %p200;
	@%p201 bra 	$L__BB0_106;
$L__BB0_107:                            // %__internal_fmodf_slowpath_mod.exit.i.i1750
	setp.gt.u32 	%p202, %r68, 2139095039;
	selp.f32 	%f1040, 0f7FFFFFFF, 0f4B800000, %p202;
	mul.f32 	%f1041, %f1369, 0f34000000;
	mul.f32 	%f1370, %f1040, %f1041;
	bra.uni 	$L__BB0_108;
$L__BB0_98:                             // %__nv_fast_fdividef.exit.i.i.i1727
	div.approx.f32 	%f1024, %f1370, %f257;
	cvt.rzi.f32.f32 	%f1368, %f1024;
	fma.rn.f32 	%f147, %f1368, 0fC0000000, %f1370;
	mov.b32 	%r67, %f147;
	setp.lt.u32 	%p193, %r67, 1073741824;
	@%p193 bra 	$L__BB0_103;
// %bb.99:
	setp.lt.u32 	%p194, %r67, -2147483647;
	@%p194 bra 	$L__BB0_101;
// %bb.100:
	add.f32 	%f1029, %f1368, 0fBF800000;
	setp.lt.f32 	%p197, %f147, 0fC0000000;
	add.f32 	%f1030, %f1029, 0fBF800000;
	selp.f32 	%f1368, %f1030, %f1029, %p197;
	bra.uni 	$L__BB0_103;
$L__BB0_101:
	add.f32 	%f1368, %f1368, 0f3F800000;
	setp.ltu.f32 	%p195, %f147, 0f40800000;
	@%p195 bra 	$L__BB0_103;
// %bb.102:                             // %__nv_fmaf_rn.exit.i.i.i1731
	add.f32 	%f1025, %f1368, 0f3F800000;
	fma.rn.f32 	%f1027, %f257, 0fC0400000, %f147;
	setp.ge.f32 	%p196, %f1027, 0f00000000;
	add.f32 	%f1028, %f1025, 0f3F800000;
	selp.f32 	%f1368, %f1028, %f1025, %p196;
$L__BB0_103:                            // %__internal_fmodf_fastpath_quot.exit.i.i1734
	fma.rn.f32 	%f1370, %f1368, 0fC0000000, %f1370;
$L__BB0_108:                            // %__internal_fmodf_kernel.exit.i1753
	cvt.rzi.s32.f32 	%r302, %f273;
	fma.rn.f32 	%f276, %f275, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f277, %f275, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r309, %f307;
	fma.rn.f32 	%f310, %f309, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f311, %f309, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r320, %f342;
	fma.rn.f32 	%f345, %f344, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f346, %f344, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r327, %f376;
	fma.rn.f32 	%f379, %f378, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f380, %f378, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r338, %f411;
	fma.rn.f32 	%f414, %f413, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f415, %f413, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r345, %f445;
	fma.rn.f32 	%f448, %f447, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f449, %f447, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r356, %f480;
	fma.rn.f32 	%f483, %f482, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f484, %f482, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r363, %f514;
	fma.rn.f32 	%f517, %f516, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f518, %f516, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r374, %f549;
	fma.rn.f32 	%f552, %f551, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f553, %f551, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r381, %f583;
	fma.rn.f32 	%f586, %f585, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f587, %f585, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r392, %f618;
	fma.rn.f32 	%f621, %f620, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f622, %f620, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r399, %f652;
	fma.rn.f32 	%f655, %f654, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f656, %f654, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r410, %f687;
	fma.rn.f32 	%f690, %f689, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f691, %f689, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r417, %f721;
	fma.rn.f32 	%f724, %f723, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f725, %f723, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r428, %f756;
	fma.rn.f32 	%f759, %f758, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f760, %f758, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r435, %f790;
	fma.rn.f32 	%f793, %f792, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f794, %f792, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r453, %f839;
	fma.rn.f32 	%f844, %f842, %f841, 0fC0A55DF6;
	fma.rn.f32 	%f845, %f843, %f841, 0f4081E0CF;
	fma.rn.f32 	%f846, %f841, %f840, 0f00000000;
	cvt.rzi.s32.f32 	%r482, %f891;
	fma.rn.f32 	%f896, %f894, %f893, 0fC0A55DF6;
	fma.rn.f32 	%f897, %f895, %f893, 0f4081E0CF;
	fma.rn.f32 	%f898, %f893, %f892, 0f00000000;
	cvt.rzi.s32.f32 	%r505, %f945;
	fma.rn.f32 	%f950, %f948, %f947, 0fC0A55DF6;
	fma.rn.f32 	%f951, %f949, %f947, 0f4081E0CF;
	fma.rn.f32 	%f952, %f947, %f946, 0f00000000;
	cvt.rzi.s32.f32 	%r537, %f997;
	fma.rn.f32 	%f1002, %f1000, %f999, 0fC0A55DF6;
	fma.rn.f32 	%f1003, %f1001, %f999, 0f4081E0CF;
	fma.rn.f32 	%f1004, %f999, %f998, 0f00000000;
	abs.f32 	%f1042, %f1370;
	setp.gtu.f32 	%p203, %f1042, 0f7F800000;
	@%p203 bra 	$L__BB0_110;
// %bb.109:
	mov.b32 	%r550, %f144;
	and.b32  	%r551, %r550, -2147483648;
	mov.b32 	%r552, %f1370;
	or.b32  	%r553, %r551, %r552;
	mov.b32 	%f1370, %r553;
$L__BB0_110:                            // %__nv_fmodf.exit1754
	add.s32 	%r303, %r302, 1;
	fma.rn.f32 	%f278, %f276, %f275, 0fC0A55DF6;
	fma.rn.f32 	%f279, %f277, %f275, 0f4081E0CF;
	fma.rn.f32 	%f280, %f275, %f274, 0f00000000;
	add.s32 	%r310, %r309, 1;
	fma.rn.f32 	%f312, %f310, %f309, 0fC0A55DF6;
	fma.rn.f32 	%f313, %f311, %f309, 0f4081E0CF;
	fma.rn.f32 	%f314, %f309, %f308, 0f00000000;
	add.s32 	%r321, %r320, 1;
	fma.rn.f32 	%f347, %f345, %f344, 0fC0A55DF6;
	fma.rn.f32 	%f348, %f346, %f344, 0f4081E0CF;
	fma.rn.f32 	%f349, %f344, %f343, 0f00000000;
	add.s32 	%r328, %r327, 1;
	fma.rn.f32 	%f381, %f379, %f378, 0fC0A55DF6;
	fma.rn.f32 	%f382, %f380, %f378, 0f4081E0CF;
	fma.rn.f32 	%f383, %f378, %f377, 0f00000000;
	add.s32 	%r339, %r338, 1;
	fma.rn.f32 	%f416, %f414, %f413, 0fC0A55DF6;
	fma.rn.f32 	%f417, %f415, %f413, 0f4081E0CF;
	fma.rn.f32 	%f418, %f413, %f412, 0f00000000;
	add.s32 	%r346, %r345, 1;
	fma.rn.f32 	%f450, %f448, %f447, 0fC0A55DF6;
	fma.rn.f32 	%f451, %f449, %f447, 0f4081E0CF;
	fma.rn.f32 	%f452, %f447, %f446, 0f00000000;
	add.s32 	%r357, %r356, 1;
	fma.rn.f32 	%f485, %f483, %f482, 0fC0A55DF6;
	fma.rn.f32 	%f486, %f484, %f482, 0f4081E0CF;
	fma.rn.f32 	%f487, %f482, %f481, 0f00000000;
	add.s32 	%r364, %r363, 1;
	fma.rn.f32 	%f519, %f517, %f516, 0fC0A55DF6;
	fma.rn.f32 	%f520, %f518, %f516, 0f4081E0CF;
	fma.rn.f32 	%f521, %f516, %f515, 0f00000000;
	add.s32 	%r375, %r374, 1;
	fma.rn.f32 	%f554, %f552, %f551, 0fC0A55DF6;
	fma.rn.f32 	%f555, %f553, %f551, 0f4081E0CF;
	fma.rn.f32 	%f556, %f551, %f550, 0f00000000;
	add.s32 	%r382, %r381, 1;
	fma.rn.f32 	%f588, %f586, %f585, 0fC0A55DF6;
	fma.rn.f32 	%f589, %f587, %f585, 0f4081E0CF;
	fma.rn.f32 	%f590, %f585, %f584, 0f00000000;
	add.s32 	%r393, %r392, 1;
	fma.rn.f32 	%f623, %f621, %f620, 0fC0A55DF6;
	fma.rn.f32 	%f624, %f622, %f620, 0f4081E0CF;
	fma.rn.f32 	%f625, %f620, %f619, 0f00000000;
	add.s32 	%r400, %r399, 1;
	fma.rn.f32 	%f657, %f655, %f654, 0fC0A55DF6;
	fma.rn.f32 	%f658, %f656, %f654, 0f4081E0CF;
	fma.rn.f32 	%f659, %f654, %f653, 0f00000000;
	add.s32 	%r411, %r410, 1;
	fma.rn.f32 	%f692, %f690, %f689, 0fC0A55DF6;
	fma.rn.f32 	%f693, %f691, %f689, 0f4081E0CF;
	fma.rn.f32 	%f694, %f689, %f688, 0f00000000;
	add.s32 	%r418, %r417, 1;
	fma.rn.f32 	%f726, %f724, %f723, 0fC0A55DF6;
	fma.rn.f32 	%f727, %f725, %f723, 0f4081E0CF;
	fma.rn.f32 	%f728, %f723, %f722, 0f00000000;
	add.s32 	%r429, %r428, 1;
	fma.rn.f32 	%f761, %f759, %f758, 0fC0A55DF6;
	fma.rn.f32 	%f762, %f760, %f758, 0f4081E0CF;
	fma.rn.f32 	%f763, %f758, %f757, 0f00000000;
	add.s32 	%r436, %r435, 1;
	fma.rn.f32 	%f795, %f793, %f792, 0fC0A55DF6;
	fma.rn.f32 	%f796, %f794, %f792, 0f4081E0CF;
	fma.rn.f32 	%f797, %f792, %f791, 0f00000000;
	fma.rn.f32 	%f847, %f845, %f841, 0fC09DE9E6;
	fma.rn.f32 	%f848, %f844, %f846, 0f00000000;
	and.b32  	%r454, %r453, 1;
	fma.rn.f32 	%f899, %f897, %f893, 0fC09DE9E6;
	fma.rn.f32 	%f900, %f896, %f898, 0f00000000;
	and.b32  	%r483, %r482, 1;
	fma.rn.f32 	%f953, %f951, %f947, 0fC09DE9E6;
	fma.rn.f32 	%f954, %f950, %f952, 0f00000000;
	and.b32  	%r506, %r505, 1;
	fma.rn.f32 	%f1005, %f1003, %f999, 0fC09DE9E6;
	fma.rn.f32 	%f1006, %f1002, %f1004, 0f00000000;
	and.b32  	%r538, %r537, 1;
	add.f32 	%f1043, %f1370, %f1370;
	mov.b32 	%r554, %f1043;
	and.b32  	%r555, %r554, -2147483648;
	or.b32  	%r556, %r555, 1056964608;
	mov.b32 	%f1044, %r556;
	add.f32 	%f1045, %f1043, %f1044;
	cvt.rzi.f32.f32 	%f1046, %f1045;
	abs.f32 	%f1047, %f1043;
	setp.gt.f32 	%p204, %f1047, 0f4B000000;
	selp.f32 	%f1048, %f1043, %f1046, %p204;
	cvt.rzi.f32.f32 	%f1049, %f1043;
	setp.lt.f32 	%p205, %f1047, 0f3F000000;
	selp.f32 	%f1050, %f1049, %f1048, %p205;
	cvt.rzi.s32.f32 	%r557, %f1050;
	fma.rn.f32 	%f1051, %f1050, 0fBF000000, %f1370;
	mul.f32 	%f1052, %f1051, %f1051;
	fma.rn.f32 	%f1053, %f1052, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1054, %f1052, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1055, %f1053, %f1052, 0fC0A55DF6;
	fma.rn.f32 	%f1056, %f1054, %f1052, 0f4081E0CF;
	fma.rn.f32 	%f1057, %f1052, %f1051, 0f00000000;
	shl.b32 	%r562, %r45, 4;
	sub.s32 	%r563, %r66, %r562;
	cvt.rn.f32.s32 	%f163, %r563;
	div.approx.f32 	%f164, %f163, %f289;
	abs.f32 	%f1374, %f164;
	setp.lt.f32 	%p211, %f1374, 0f40000000;
	@%p211 bra 	$L__BB0_122;
// %bb.111:
	setp.gtu.f32 	%p212, %f1374, 0f4B800000;
	@%p212 bra 	$L__BB0_118;
	bra.uni 	$L__BB0_112;
$L__BB0_118:
	mov.b32 	%r76, %f1374;
	and.b32  	%r564, %r76, 8388607;
	or.b32  	%r16385, %r564, 1065353216;
	mov.b32 	%f1373, %r16385;
	add.s32 	%r565, %r76, -1073741824;
	and.b32  	%r16386, %r565, -8388608;
	setp.eq.s32 	%p218, %r16386, 0;
	@%p218 bra 	$L__BB0_121;
// %bb.119:                             // %__nv_fmaf_rn.exit4.i.i.i1779.preheader
	mov.f32 	%f1083, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1082,%f1083;
	// end inline asm
$L__BB0_120:                            // %__nv_fmaf_rn.exit4.i.i.i1779
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r566, %r16386, 192937984;
	add.s32 	%r567, %r16385, %r566;
	mov.b32 	%f1084, %r567;
	mul.f32 	%f1085, %f1082, %f1084;
	sub.f32 	%f1086, %f1084, %f1085;
	fma.rn.f32 	%f1087, %f1086, %f1082, %f1085;
	sub.f32 	%f1088, %f1084, %f1087;
	fma.rz.f32 	%f1089, %f1088, %f1082, %f1087;
	cvt.rzi.f32.f32 	%f1090, %f1089;
	sub.f32 	%f1373, %f1084, %f1090;
	sub.s32 	%r16386, %r16386, %r566;
	mov.b32 	%r16385, %f1373;
	setp.ne.s32 	%p219, %r16386, 0;
	setp.ne.s32 	%p220, %r16385, 0;
	and.pred  	%p221, %p219, %p220;
	@%p221 bra 	$L__BB0_120;
$L__BB0_121:                            // %__internal_fmodf_slowpath_mod.exit.i.i1781
	setp.gt.u32 	%p222, %r76, 2139095039;
	selp.f32 	%f1091, 0f7FFFFFFF, 0f4B800000, %p222;
	mul.f32 	%f1092, %f1373, 0f34000000;
	mul.f32 	%f1374, %f1091, %f1092;
	bra.uni 	$L__BB0_122;
$L__BB0_112:                            // %__nv_fast_fdividef.exit.i.i.i1758
	div.approx.f32 	%f1075, %f1374, %f257;
	cvt.rzi.f32.f32 	%f1372, %f1075;
	fma.rn.f32 	%f167, %f1372, 0fC0000000, %f1374;
	mov.b32 	%r75, %f167;
	setp.lt.u32 	%p213, %r75, 1073741824;
	@%p213 bra 	$L__BB0_117;
// %bb.113:
	setp.lt.u32 	%p214, %r75, -2147483647;
	@%p214 bra 	$L__BB0_115;
// %bb.114:
	add.f32 	%f1080, %f1372, 0fBF800000;
	setp.lt.f32 	%p217, %f167, 0fC0000000;
	add.f32 	%f1081, %f1080, 0fBF800000;
	selp.f32 	%f1372, %f1081, %f1080, %p217;
	bra.uni 	$L__BB0_117;
$L__BB0_115:
	add.f32 	%f1372, %f1372, 0f3F800000;
	setp.ltu.f32 	%p215, %f167, 0f40800000;
	@%p215 bra 	$L__BB0_117;
// %bb.116:                             // %__nv_fmaf_rn.exit.i.i.i1762
	add.f32 	%f1076, %f1372, 0f3F800000;
	fma.rn.f32 	%f1078, %f257, 0fC0400000, %f167;
	setp.ge.f32 	%p216, %f1078, 0f00000000;
	add.f32 	%f1079, %f1076, 0f3F800000;
	selp.f32 	%f1372, %f1079, %f1076, %p216;
$L__BB0_117:                            // %__internal_fmodf_fastpath_quot.exit.i.i1765
	fma.rn.f32 	%f1374, %f1372, 0fC0000000, %f1374;
$L__BB0_122:                            // %__internal_fmodf_kernel.exit.i1784
	and.b32  	%r233, %r1, 18;
	fma.rn.f32 	%f281, %f279, %f275, 0fC09DE9E6;
	fma.rn.f32 	%f282, %f278, %f280, 0f00000000;
	and.b32  	%r304, %r303, 1;
	fma.rn.f32 	%f315, %f313, %f309, 0fC09DE9E6;
	fma.rn.f32 	%f316, %f312, %f314, 0f00000000;
	and.b32  	%r311, %r310, 1;
	fma.rn.f32 	%f350, %f348, %f344, 0fC09DE9E6;
	fma.rn.f32 	%f351, %f347, %f349, 0f00000000;
	and.b32  	%r322, %r321, 1;
	fma.rn.f32 	%f384, %f382, %f378, 0fC09DE9E6;
	fma.rn.f32 	%f385, %f381, %f383, 0f00000000;
	and.b32  	%r329, %r328, 1;
	fma.rn.f32 	%f419, %f417, %f413, 0fC09DE9E6;
	fma.rn.f32 	%f420, %f416, %f418, 0f00000000;
	and.b32  	%r340, %r339, 1;
	fma.rn.f32 	%f453, %f451, %f447, 0fC09DE9E6;
	fma.rn.f32 	%f454, %f450, %f452, 0f00000000;
	and.b32  	%r347, %r346, 1;
	fma.rn.f32 	%f488, %f486, %f482, 0fC09DE9E6;
	fma.rn.f32 	%f489, %f485, %f487, 0f00000000;
	and.b32  	%r358, %r357, 1;
	fma.rn.f32 	%f522, %f520, %f516, 0fC09DE9E6;
	fma.rn.f32 	%f523, %f519, %f521, 0f00000000;
	and.b32  	%r365, %r364, 1;
	fma.rn.f32 	%f557, %f555, %f551, 0fC09DE9E6;
	fma.rn.f32 	%f558, %f554, %f556, 0f00000000;
	and.b32  	%r376, %r375, 1;
	fma.rn.f32 	%f591, %f589, %f585, 0fC09DE9E6;
	fma.rn.f32 	%f592, %f588, %f590, 0f00000000;
	and.b32  	%r383, %r382, 1;
	fma.rn.f32 	%f626, %f624, %f620, 0fC09DE9E6;
	fma.rn.f32 	%f627, %f623, %f625, 0f00000000;
	and.b32  	%r394, %r393, 1;
	fma.rn.f32 	%f660, %f658, %f654, 0fC09DE9E6;
	fma.rn.f32 	%f661, %f657, %f659, 0f00000000;
	and.b32  	%r401, %r400, 1;
	fma.rn.f32 	%f695, %f693, %f689, 0fC09DE9E6;
	fma.rn.f32 	%f696, %f692, %f694, 0f00000000;
	and.b32  	%r412, %r411, 1;
	fma.rn.f32 	%f729, %f727, %f723, 0fC09DE9E6;
	fma.rn.f32 	%f730, %f726, %f728, 0f00000000;
	and.b32  	%r419, %r418, 1;
	fma.rn.f32 	%f764, %f762, %f758, 0fC09DE9E6;
	fma.rn.f32 	%f765, %f761, %f763, 0f00000000;
	and.b32  	%r430, %r429, 1;
	fma.rn.f32 	%f798, %f796, %f792, 0fC09DE9E6;
	fma.rn.f32 	%f799, %f795, %f797, 0f00000000;
	and.b32  	%r437, %r436, 1;
	fma.rn.f32 	%f849, %f847, %f841, 0f3F800000;
	fma.rn.f32 	%f850, %f840, 0f40490FDB, %f848;
	setp.eq.b32 	%p126, %r454, 1;
	fma.rn.f32 	%f901, %f899, %f893, 0f3F800000;
	fma.rn.f32 	%f902, %f892, 0f40490FDB, %f900;
	setp.eq.b32 	%p146, %r483, 1;
	fma.rn.f32 	%f955, %f953, %f947, 0f3F800000;
	fma.rn.f32 	%f956, %f946, 0f40490FDB, %f954;
	setp.eq.b32 	%p166, %r506, 1;
	fma.rn.f32 	%f1007, %f1005, %f999, 0f3F800000;
	fma.rn.f32 	%f1008, %f998, 0f40490FDB, %f1006;
	setp.eq.b32 	%p186, %r538, 1;
	fma.rn.f32 	%f1058, %f1056, %f1052, 0fC09DE9E6;
	fma.rn.f32 	%f1059, %f1055, %f1057, 0f00000000;
	and.b32  	%r558, %r557, 1;
	abs.f32 	%f1093, %f1374;
	setp.gtu.f32 	%p223, %f1093, 0f7F800000;
	@%p223 bra 	$L__BB0_124;
// %bb.123:
	mov.b32 	%r568, %f164;
	and.b32  	%r569, %r568, -2147483648;
	mov.b32 	%r570, %f1374;
	or.b32  	%r571, %r569, %r570;
	mov.b32 	%f1374, %r571;
$L__BB0_124:                            // %__nv_fmodf.exit1785
	shl.b32 	%r226, %r1, 2;
	and.b32  	%r229, %r228, 8;
	or.b32  	%r235, %r233, 64;
	fma.rn.f32 	%f283, %f281, %f275, 0f3F800000;
	fma.rn.f32 	%f284, %f274, 0f40490FDB, %f282;
	setp.eq.b32 	%p18, %r304, 1;
	fma.rn.f32 	%f317, %f315, %f309, 0f3F800000;
	fma.rn.f32 	%f318, %f308, 0f40490FDB, %f316;
	setp.eq.b32 	%p24, %r311, 1;
	fma.rn.f32 	%f352, %f350, %f344, 0f3F800000;
	fma.rn.f32 	%f353, %f343, 0f40490FDB, %f351;
	setp.eq.b32 	%p30, %r322, 1;
	fma.rn.f32 	%f386, %f384, %f378, 0f3F800000;
	fma.rn.f32 	%f387, %f377, 0f40490FDB, %f385;
	setp.eq.b32 	%p36, %r329, 1;
	fma.rn.f32 	%f421, %f419, %f413, 0f3F800000;
	fma.rn.f32 	%f422, %f412, 0f40490FDB, %f420;
	setp.eq.b32 	%p42, %r340, 1;
	fma.rn.f32 	%f455, %f453, %f447, 0f3F800000;
	fma.rn.f32 	%f456, %f446, 0f40490FDB, %f454;
	setp.eq.b32 	%p48, %r347, 1;
	fma.rn.f32 	%f490, %f488, %f482, 0f3F800000;
	fma.rn.f32 	%f491, %f481, 0f40490FDB, %f489;
	setp.eq.b32 	%p54, %r358, 1;
	fma.rn.f32 	%f524, %f522, %f516, 0f3F800000;
	fma.rn.f32 	%f525, %f515, 0f40490FDB, %f523;
	setp.eq.b32 	%p60, %r365, 1;
	fma.rn.f32 	%f559, %f557, %f551, 0f3F800000;
	fma.rn.f32 	%f560, %f550, 0f40490FDB, %f558;
	setp.eq.b32 	%p66, %r376, 1;
	fma.rn.f32 	%f593, %f591, %f585, 0f3F800000;
	fma.rn.f32 	%f594, %f584, 0f40490FDB, %f592;
	setp.eq.b32 	%p72, %r383, 1;
	fma.rn.f32 	%f628, %f626, %f620, 0f3F800000;
	fma.rn.f32 	%f629, %f619, 0f40490FDB, %f627;
	setp.eq.b32 	%p78, %r394, 1;
	fma.rn.f32 	%f662, %f660, %f654, 0f3F800000;
	fma.rn.f32 	%f663, %f653, 0f40490FDB, %f661;
	setp.eq.b32 	%p84, %r401, 1;
	fma.rn.f32 	%f697, %f695, %f689, 0f3F800000;
	fma.rn.f32 	%f698, %f688, 0f40490FDB, %f696;
	setp.eq.b32 	%p90, %r412, 1;
	fma.rn.f32 	%f731, %f729, %f723, 0f3F800000;
	fma.rn.f32 	%f732, %f722, 0f40490FDB, %f730;
	setp.eq.b32 	%p96, %r419, 1;
	fma.rn.f32 	%f766, %f764, %f758, 0f3F800000;
	fma.rn.f32 	%f767, %f757, 0f40490FDB, %f765;
	setp.eq.b32 	%p102, %r430, 1;
	fma.rn.f32 	%f800, %f798, %f792, 0f3F800000;
	fma.rn.f32 	%f801, %f791, 0f40490FDB, %f799;
	setp.eq.b32 	%p108, %r437, 1;
	selp.f32 	%f851, %f849, %f850, %p126;
	and.b32  	%r455, %r453, 2;
	selp.f32 	%f903, %f901, %f902, %p146;
	and.b32  	%r484, %r482, 2;
	selp.f32 	%f957, %f955, %f956, %p166;
	and.b32  	%r507, %r505, 2;
	selp.f32 	%f1009, %f1007, %f1008, %p186;
	and.b32  	%r539, %r537, 2;
	fma.rn.f32 	%f1060, %f1058, %f1052, 0f3F800000;
	fma.rn.f32 	%f1061, %f1051, 0f40490FDB, %f1059;
	setp.eq.b32 	%p206, %r558, 1;
	add.f32 	%f1094, %f1374, %f1374;
	mov.b32 	%r578, %f1094;
	and.b32  	%r579, %r578, -2147483648;
	or.b32  	%r580, %r579, 1056964608;
	mov.b32 	%f1095, %r580;
	add.f32 	%f1096, %f1094, %f1095;
	cvt.rzi.f32.f32 	%f1097, %f1096;
	abs.f32 	%f1098, %f1094;
	setp.gt.f32 	%p224, %f1098, 0f4B000000;
	selp.f32 	%f1099, %f1094, %f1097, %p224;
	cvt.rzi.f32.f32 	%f1100, %f1094;
	setp.lt.f32 	%p225, %f1098, 0f3F000000;
	selp.f32 	%f1101, %f1100, %f1099, %p225;
	cvt.rzi.s32.f32 	%r581, %f1101;
	fma.rn.f32 	%f1102, %f1101, 0fBF000000, %f1374;
	mul.f32 	%f1103, %f1102, %f1102;
	fma.rn.f32 	%f1104, %f1103, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1105, %f1103, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1106, %f1104, %f1103, 0fC0A55DF6;
	fma.rn.f32 	%f1107, %f1105, %f1103, 0f4081E0CF;
	fma.rn.f32 	%f1108, %f1103, %f1102, 0f00000000;
	fma.rn.f32 	%f1109, %f1107, %f1103, 0fC09DE9E6;
	fma.rn.f32 	%f1110, %f1106, %f1108, 0f00000000;
	fma.rn.f32 	%f1111, %f1109, %f1103, 0f3F800000;
	fma.rn.f32 	%f1112, %f1102, 0f40490FDB, %f1110;
	and.b32  	%r582, %r581, 1;
	setp.eq.b32 	%p226, %r582, 1;
	mov.f32 	%f1126, 0f41800000;
	div.approx.f32 	%f181, %f143, %f1126;
	abs.f32 	%f1378, %f181;
	setp.lt.f32 	%p231, %f1378, 0f40000000;
	@%p231 bra 	$L__BB0_136;
// %bb.125:
	setp.gtu.f32 	%p232, %f1378, 0f4B800000;
	@%p232 bra 	$L__BB0_132;
	bra.uni 	$L__BB0_126;
$L__BB0_132:
	mov.b32 	%r86, %f1378;
	and.b32  	%r586, %r86, 8388607;
	or.b32  	%r16387, %r586, 1065353216;
	mov.b32 	%f1377, %r16387;
	add.s32 	%r587, %r86, -1073741824;
	and.b32  	%r16388, %r587, -8388608;
	setp.eq.s32 	%p238, %r16388, 0;
	@%p238 bra 	$L__BB0_135;
// %bb.133:                             // %__nv_fmaf_rn.exit4.i.i.i1810.preheader
	mov.f32 	%f1136, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1135,%f1136;
	// end inline asm
$L__BB0_134:                            // %__nv_fmaf_rn.exit4.i.i.i1810
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r588, %r16388, 192937984;
	add.s32 	%r589, %r16387, %r588;
	mov.b32 	%f1137, %r589;
	mul.f32 	%f1138, %f1135, %f1137;
	sub.f32 	%f1139, %f1137, %f1138;
	fma.rn.f32 	%f1140, %f1139, %f1135, %f1138;
	sub.f32 	%f1141, %f1137, %f1140;
	fma.rz.f32 	%f1142, %f1141, %f1135, %f1140;
	cvt.rzi.f32.f32 	%f1143, %f1142;
	sub.f32 	%f1377, %f1137, %f1143;
	sub.s32 	%r16388, %r16388, %r588;
	mov.b32 	%r16387, %f1377;
	setp.ne.s32 	%p239, %r16388, 0;
	setp.ne.s32 	%p240, %r16387, 0;
	and.pred  	%p241, %p239, %p240;
	@%p241 bra 	$L__BB0_134;
$L__BB0_135:                            // %__internal_fmodf_slowpath_mod.exit.i.i1812
	setp.gt.u32 	%p242, %r86, 2139095039;
	selp.f32 	%f1144, 0f7FFFFFFF, 0f4B800000, %p242;
	mul.f32 	%f1145, %f1377, 0f34000000;
	mul.f32 	%f1378, %f1144, %f1145;
	bra.uni 	$L__BB0_136;
$L__BB0_126:                            // %__nv_fast_fdividef.exit.i.i.i1789
	div.approx.f32 	%f1128, %f1378, %f257;
	cvt.rzi.f32.f32 	%f1376, %f1128;
	fma.rn.f32 	%f184, %f1376, 0fC0000000, %f1378;
	mov.b32 	%r85, %f184;
	setp.lt.u32 	%p233, %r85, 1073741824;
	@%p233 bra 	$L__BB0_131;
// %bb.127:
	setp.lt.u32 	%p234, %r85, -2147483647;
	@%p234 bra 	$L__BB0_129;
// %bb.128:
	add.f32 	%f1133, %f1376, 0fBF800000;
	setp.lt.f32 	%p237, %f184, 0fC0000000;
	add.f32 	%f1134, %f1133, 0fBF800000;
	selp.f32 	%f1376, %f1134, %f1133, %p237;
	bra.uni 	$L__BB0_131;
$L__BB0_129:
	add.f32 	%f1376, %f1376, 0f3F800000;
	setp.ltu.f32 	%p235, %f184, 0f40800000;
	@%p235 bra 	$L__BB0_131;
// %bb.130:                             // %__nv_fmaf_rn.exit.i.i.i1793
	add.f32 	%f1129, %f1376, 0f3F800000;
	fma.rn.f32 	%f1131, %f257, 0fC0400000, %f184;
	setp.ge.f32 	%p236, %f1131, 0f00000000;
	add.f32 	%f1132, %f1129, 0f3F800000;
	selp.f32 	%f1376, %f1132, %f1129, %p236;
$L__BB0_131:                            // %__internal_fmodf_fastpath_quot.exit.i.i1796
	fma.rn.f32 	%f1378, %f1376, 0fC0000000, %f1378;
$L__BB0_136:                            // %__internal_fmodf_kernel.exit.i1815
	and.b32  	%r227, %r226, 4;
	shl.b32 	%r280, %r2, 4;
	or.b32  	%r281, %r233, %r229;
	or.b32  	%r286, %r235, %r229;
	selp.f32 	%f285, %f283, %f284, %p18;
	and.b32  	%r305, %r303, 2;
	mov.f32 	%f286, 0f00000000;
	selp.f32 	%f319, %f317, %f318, %p24;
	and.b32  	%r312, %r310, 2;
	selp.f32 	%f354, %f352, %f353, %p30;
	and.b32  	%r323, %r321, 2;
	selp.f32 	%f388, %f386, %f387, %p36;
	and.b32  	%r330, %r328, 2;
	selp.f32 	%f423, %f421, %f422, %p42;
	and.b32  	%r341, %r339, 2;
	selp.f32 	%f457, %f455, %f456, %p48;
	and.b32  	%r348, %r346, 2;
	selp.f32 	%f492, %f490, %f491, %p54;
	and.b32  	%r359, %r357, 2;
	selp.f32 	%f526, %f524, %f525, %p60;
	and.b32  	%r366, %r364, 2;
	selp.f32 	%f561, %f559, %f560, %p66;
	and.b32  	%r377, %r375, 2;
	selp.f32 	%f595, %f593, %f594, %p72;
	and.b32  	%r384, %r382, 2;
	selp.f32 	%f630, %f628, %f629, %p78;
	and.b32  	%r395, %r393, 2;
	selp.f32 	%f664, %f662, %f663, %p84;
	and.b32  	%r402, %r400, 2;
	selp.f32 	%f699, %f697, %f698, %p90;
	and.b32  	%r413, %r411, 2;
	selp.f32 	%f733, %f731, %f732, %p96;
	and.b32  	%r420, %r418, 2;
	selp.f32 	%f768, %f766, %f767, %p102;
	and.b32  	%r431, %r429, 2;
	selp.f32 	%f802, %f800, %f801, %p108;
	and.b32  	%r438, %r436, 2;
	setp.eq.s32 	%p127, %r455, 0;
	neg.f32 	%f853, %f851;
	add.s32 	%r456, %r453, 1;
	cvt.rzi.f32.f32 	%f858, %f1354;
	setp.eq.s32 	%p147, %r484, 0;
	neg.f32 	%f905, %f903;
	add.s32 	%r485, %r482, 1;
	cvt.rzi.f32.f32 	%f910, %f1358;
	setp.eq.s32 	%p167, %r507, 0;
	neg.f32 	%f959, %f957;
	add.s32 	%r508, %r505, 1;
	cvt.rzi.f32.f32 	%f964, %f1362;
	setp.eq.s32 	%p187, %r539, 0;
	neg.f32 	%f1011, %f1009;
	add.s32 	%r540, %r537, 1;
	cvt.rzi.f32.f32 	%f1016, %f1366;
	selp.f32 	%f1062, %f1060, %f1061, %p206;
	and.b32  	%r559, %r557, 2;
	selp.f32 	%f1113, %f1111, %f1112, %p226;
	and.b32  	%r583, %r581, 2;
	abs.f32 	%f1146, %f1378;
	setp.gtu.f32 	%p243, %f1146, 0f7F800000;
	@%p243 bra 	$L__BB0_138;
// %bb.137:
	mov.b32 	%r590, %f181;
	and.b32  	%r591, %r590, -2147483648;
	mov.b32 	%r592, %f1378;
	or.b32  	%r593, %r591, %r592;
	mov.b32 	%f1378, %r593;
$L__BB0_138:                            // %__nv_fmodf.exit1816
	and.b32  	%r231, %r280, 1920;
	or.b32  	%r282, %r281, %r227;
	or.b32  	%r287, %r286, %r227;
	setp.eq.s32 	%p19, %r305, 0;
	sub.f32 	%f287, %f286, %f285;
	setp.eq.s32 	%p25, %r312, 0;
	sub.f32 	%f321, %f286, %f319;
	setp.eq.s32 	%p31, %r323, 0;
	sub.f32 	%f356, %f286, %f354;
	setp.eq.s32 	%p37, %r330, 0;
	sub.f32 	%f390, %f286, %f388;
	setp.eq.s32 	%p43, %r341, 0;
	sub.f32 	%f425, %f286, %f423;
	setp.eq.s32 	%p49, %r348, 0;
	sub.f32 	%f459, %f286, %f457;
	setp.eq.s32 	%p55, %r359, 0;
	sub.f32 	%f494, %f286, %f492;
	setp.eq.s32 	%p61, %r366, 0;
	sub.f32 	%f528, %f286, %f526;
	setp.eq.s32 	%p67, %r377, 0;
	sub.f32 	%f563, %f286, %f561;
	setp.eq.s32 	%p73, %r384, 0;
	sub.f32 	%f597, %f286, %f595;
	setp.eq.s32 	%p79, %r395, 0;
	sub.f32 	%f632, %f286, %f630;
	setp.eq.s32 	%p85, %r402, 0;
	sub.f32 	%f666, %f286, %f664;
	setp.eq.s32 	%p91, %r413, 0;
	sub.f32 	%f701, %f286, %f699;
	setp.eq.s32 	%p97, %r420, 0;
	sub.f32 	%f735, %f286, %f733;
	setp.eq.s32 	%p103, %r431, 0;
	sub.f32 	%f770, %f286, %f768;
	setp.eq.s32 	%p109, %r438, 0;
	sub.f32 	%f804, %f286, %f802;
	selp.f32 	%f852, %f850, %f849, %p126;
	selp.f32 	%f854, %f851, %f853, %p127;
	and.b32  	%r457, %r456, 2;
	setp.eq.f32 	%p129, %f858, %f1354;
	mul.f32 	%f859, %f1354, 0f00000000;
	selp.f32 	%f904, %f902, %f901, %p146;
	selp.f32 	%f906, %f903, %f905, %p147;
	and.b32  	%r486, %r485, 2;
	setp.eq.f32 	%p149, %f910, %f1358;
	mul.f32 	%f911, %f1358, 0f00000000;
	selp.f32 	%f958, %f956, %f955, %p166;
	selp.f32 	%f960, %f957, %f959, %p167;
	and.b32  	%r509, %r508, 2;
	setp.eq.f32 	%p169, %f964, %f1362;
	mul.f32 	%f965, %f1362, 0f00000000;
	selp.f32 	%f1010, %f1008, %f1007, %p186;
	selp.f32 	%f1012, %f1009, %f1011, %p187;
	and.b32  	%r541, %r540, 2;
	setp.eq.f32 	%p189, %f1016, %f1366;
	mul.f32 	%f1017, %f1366, 0f00000000;
	setp.eq.s32 	%p207, %r559, 0;
	neg.f32 	%f1064, %f1062;
	add.s32 	%r560, %r557, 1;
	cvt.rzi.f32.f32 	%f1069, %f1370;
	setp.eq.s32 	%p227, %r583, 0;
	neg.f32 	%f1115, %f1113;
	add.s32 	%r584, %r581, 1;
	cvt.rzi.f32.f32 	%f1120, %f1374;
	add.f32 	%f1147, %f1378, %f1378;
	mov.b32 	%r594, %f1147;
	and.b32  	%r595, %r594, -2147483648;
	or.b32  	%r596, %r595, 1056964608;
	mov.b32 	%f1148, %r596;
	add.f32 	%f1149, %f1147, %f1148;
	cvt.rzi.f32.f32 	%f1150, %f1149;
	abs.f32 	%f1151, %f1147;
	setp.gt.f32 	%p244, %f1151, 0f4B000000;
	selp.f32 	%f1152, %f1147, %f1150, %p244;
	cvt.rzi.f32.f32 	%f1153, %f1147;
	setp.lt.f32 	%p245, %f1151, 0f3F000000;
	selp.f32 	%f1154, %f1153, %f1152, %p245;
	cvt.rzi.s32.f32 	%r597, %f1154;
	fma.rn.f32 	%f1155, %f1154, 0fBF000000, %f1378;
	mul.f32 	%f1156, %f1155, %f1155;
	fma.rn.f32 	%f1157, %f1156, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1158, %f1156, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1159, %f1157, %f1156, 0fC0A55DF6;
	fma.rn.f32 	%f1160, %f1158, %f1156, 0f4081E0CF;
	fma.rn.f32 	%f1161, %f1156, %f1155, 0f00000000;
	fma.rn.f32 	%f1162, %f1160, %f1156, 0fC09DE9E6;
	fma.rn.f32 	%f1163, %f1159, %f1161, 0f00000000;
	fma.rn.f32 	%f1164, %f1162, %f1156, 0f3F800000;
	fma.rn.f32 	%f1165, %f1155, 0f40490FDB, %f1163;
	and.b32  	%r598, %r597, 1;
	setp.eq.b32 	%p246, %r598, 1;
	selp.f32 	%f1166, %f1164, %f1165, %p246;
	selp.f32 	%f1167, %f1165, %f1164, %p246;
	and.b32  	%r599, %r597, 2;
	setp.eq.s32 	%p247, %r599, 0;
	neg.f32 	%f1168, %f1166;
	selp.f32 	%f1169, %f1166, %f1168, %p247;
	add.s32 	%r600, %r597, 1;
	and.b32  	%r601, %r600, 2;
	cvt.rzi.f32.f32 	%f1173, %f1378;
	setp.eq.f32 	%p249, %f1173, %f1378;
	mul.f32 	%f1174, %f1378, 0f00000000;
	div.approx.f32 	%f200, %f163, %f1126;
	abs.f32 	%f1382, %f200;
	setp.lt.f32 	%p251, %f1382, 0f40000000;
	@%p251 bra 	$L__BB0_150;
// %bb.139:
	setp.gtu.f32 	%p252, %f1382, 0f4B800000;
	@%p252 bra 	$L__BB0_146;
	bra.uni 	$L__BB0_140;
$L__BB0_146:
	mov.b32 	%r94, %f1382;
	and.b32  	%r602, %r94, 8388607;
	or.b32  	%r16389, %r602, 1065353216;
	mov.b32 	%f1381, %r16389;
	add.s32 	%r603, %r94, -1073741824;
	and.b32  	%r16390, %r603, -8388608;
	setp.eq.s32 	%p258, %r16390, 0;
	@%p258 bra 	$L__BB0_149;
// %bb.147:                             // %__nv_fmaf_rn.exit4.i.i.i1841.preheader
	mov.f32 	%f1187, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1186,%f1187;
	// end inline asm
$L__BB0_148:                            // %__nv_fmaf_rn.exit4.i.i.i1841
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r604, %r16390, 192937984;
	add.s32 	%r605, %r16389, %r604;
	mov.b32 	%f1188, %r605;
	mul.f32 	%f1189, %f1186, %f1188;
	sub.f32 	%f1190, %f1188, %f1189;
	fma.rn.f32 	%f1191, %f1190, %f1186, %f1189;
	sub.f32 	%f1192, %f1188, %f1191;
	fma.rz.f32 	%f1193, %f1192, %f1186, %f1191;
	cvt.rzi.f32.f32 	%f1194, %f1193;
	sub.f32 	%f1381, %f1188, %f1194;
	sub.s32 	%r16390, %r16390, %r604;
	mov.b32 	%r16389, %f1381;
	setp.ne.s32 	%p259, %r16390, 0;
	setp.ne.s32 	%p260, %r16389, 0;
	and.pred  	%p261, %p259, %p260;
	@%p261 bra 	$L__BB0_148;
$L__BB0_149:                            // %__internal_fmodf_slowpath_mod.exit.i.i1843
	setp.gt.u32 	%p262, %r94, 2139095039;
	selp.f32 	%f1195, 0f7FFFFFFF, 0f4B800000, %p262;
	mul.f32 	%f1196, %f1381, 0f34000000;
	mul.f32 	%f1382, %f1195, %f1196;
	bra.uni 	$L__BB0_150;
$L__BB0_140:                            // %__nv_fast_fdividef.exit.i.i.i1820
	div.approx.f32 	%f1179, %f1382, %f257;
	cvt.rzi.f32.f32 	%f1380, %f1179;
	fma.rn.f32 	%f203, %f1380, 0fC0000000, %f1382;
	mov.b32 	%r93, %f203;
	setp.lt.u32 	%p253, %r93, 1073741824;
	@%p253 bra 	$L__BB0_145;
// %bb.141:
	setp.lt.u32 	%p254, %r93, -2147483647;
	@%p254 bra 	$L__BB0_143;
// %bb.142:
	add.f32 	%f1184, %f1380, 0fBF800000;
	setp.lt.f32 	%p257, %f203, 0fC0000000;
	add.f32 	%f1185, %f1184, 0fBF800000;
	selp.f32 	%f1380, %f1185, %f1184, %p257;
	bra.uni 	$L__BB0_145;
$L__BB0_143:
	add.f32 	%f1380, %f1380, 0f3F800000;
	setp.ltu.f32 	%p255, %f203, 0f40800000;
	@%p255 bra 	$L__BB0_145;
// %bb.144:                             // %__nv_fmaf_rn.exit.i.i.i1824
	add.f32 	%f1180, %f1380, 0f3F800000;
	fma.rn.f32 	%f1182, %f257, 0fC0400000, %f203;
	setp.ge.f32 	%p256, %f1182, 0f00000000;
	add.f32 	%f1183, %f1180, 0f3F800000;
	selp.f32 	%f1380, %f1183, %f1180, %p256;
$L__BB0_145:                            // %__internal_fmodf_fastpath_quot.exit.i.i1827
	fma.rn.f32 	%f1382, %f1380, 0fC0000000, %f1382;
$L__BB0_150:                            // %__internal_fmodf_kernel.exit.i1846
	and.b32  	%r232, %r226, 32;
	or.b32  	%r283, %r282, %r231;
	or.b32  	%r288, %r287, %r231;
	selp.f32 	%f288, %f285, %f287, %p19;
	selp.f32 	%f322, %f319, %f321, %p25;
	selp.f32 	%f357, %f354, %f356, %p31;
	selp.f32 	%f391, %f388, %f390, %p37;
	selp.f32 	%f426, %f423, %f425, %p43;
	selp.f32 	%f460, %f457, %f459, %p49;
	selp.f32 	%f495, %f492, %f494, %p55;
	selp.f32 	%f529, %f526, %f528, %p61;
	selp.f32 	%f564, %f561, %f563, %p67;
	selp.f32 	%f598, %f595, %f597, %p73;
	selp.f32 	%f633, %f630, %f632, %p79;
	selp.f32 	%f667, %f664, %f666, %p85;
	selp.f32 	%f702, %f699, %f701, %p91;
	selp.f32 	%f736, %f733, %f735, %p97;
	selp.f32 	%f771, %f768, %f770, %p103;
	selp.f32 	%f805, %f802, %f804, %p109;
	setp.eq.s32 	%p128, %r457, 0;
	sub.f32 	%f856, %f286, %f852;
	selp.f32 	%f88, %f859, %f854, %p129;
	abs.f32 	%f860, %f1354;
	setp.eq.s32 	%p148, %r486, 0;
	sub.f32 	%f908, %f286, %f904;
	selp.f32 	%f912, %f911, %f906, %p149;
	abs.f32 	%f913, %f1358;
	setp.eq.s32 	%p168, %r509, 0;
	sub.f32 	%f962, %f286, %f958;
	selp.f32 	%f124, %f965, %f960, %p169;
	abs.f32 	%f966, %f1362;
	setp.eq.s32 	%p188, %r541, 0;
	sub.f32 	%f1014, %f286, %f1010;
	selp.f32 	%f1018, %f1017, %f1012, %p189;
	abs.f32 	%f1019, %f1366;
	selp.f32 	%f1063, %f1061, %f1060, %p206;
	selp.f32 	%f1065, %f1062, %f1064, %p207;
	and.b32  	%r561, %r560, 2;
	setp.eq.f32 	%p209, %f1069, %f1370;
	mul.f32 	%f1070, %f1370, 0f00000000;
	selp.f32 	%f1114, %f1112, %f1111, %p226;
	selp.f32 	%f1116, %f1113, %f1115, %p227;
	and.b32  	%r585, %r584, 2;
	setp.eq.f32 	%p229, %f1120, %f1374;
	mul.f32 	%f1121, %f1374, 0f00000000;
	setp.eq.s32 	%p248, %r601, 0;
	sub.f32 	%f1171, %f286, %f1167;
	selp.f32 	%f198, %f1174, %f1169, %p249;
	abs.f32 	%f1175, %f1378;
	and.b32  	%r230, %r1, 16;
	abs.f32 	%f1197, %f1382;
	setp.gtu.f32 	%p263, %f1197, 0f7F800000;
	@%p263 bra 	$L__BB0_152;
// %bb.151:
	mov.b32 	%r606, %f200;
	and.b32  	%r607, %r606, -2147483648;
	mov.b32 	%r608, %f1382;
	or.b32  	%r609, %r607, %r608;
	mov.b32 	%f1382, %r609;
$L__BB0_152:                            // %__nv_fmodf.exit1847
	or.b32  	%r284, %r283, %r232;
	or.b32  	%r289, %r288, %r232;
	mul.f32 	%f254, %f288, %f288;
	mul.f32 	%f4, %f322, %f322;
	mul.f32 	%f8, %f357, %f357;
	mul.f32 	%f13, %f391, %f391;
	mul.f32 	%f17, %f426, %f426;
	mul.f32 	%f22, %f460, %f460;
	mul.f32 	%f26, %f495, %f495;
	mul.f32 	%f31, %f529, %f529;
	mul.f32 	%f35, %f564, %f564;
	mul.f32 	%f40, %f598, %f598;
	mul.f32 	%f44, %f633, %f633;
	mul.f32 	%f49, %f667, %f667;
	mul.f32 	%f53, %f702, %f702;
	mul.f32 	%f58, %f736, %f736;
	mul.f32 	%f62, %f771, %f771;
	mul.f32 	%f67, %f805, %f805;
	selp.f32 	%f857, %f852, %f856, %p128;
	setp.gt.f32 	%p130, %f860, 0f4B800000;
	add.f32 	%f861, %f88, 0f3F800000;
	selp.f32 	%f909, %f904, %f908, %p148;
	setp.gt.f32 	%p150, %f913, 0f4B800000;
	add.f32 	%f914, %f912, 0f3F800000;
	selp.f32 	%f963, %f958, %f962, %p168;
	setp.gt.f32 	%p170, %f966, 0f4B800000;
	add.f32 	%f967, %f124, 0f3F800000;
	selp.f32 	%f1015, %f1010, %f1014, %p188;
	setp.gt.f32 	%p190, %f1019, 0f4B800000;
	add.f32 	%f1020, %f1018, 0f3F800000;
	setp.eq.s32 	%p208, %r561, 0;
	sub.f32 	%f1067, %f286, %f1063;
	selp.f32 	%f161, %f1070, %f1065, %p209;
	abs.f32 	%f1071, %f1370;
	setp.eq.s32 	%p228, %r585, 0;
	sub.f32 	%f1118, %f286, %f1114;
	selp.f32 	%f1122, %f1121, %f1116, %p229;
	abs.f32 	%f1123, %f1374;
	selp.f32 	%f1172, %f1167, %f1171, %p248;
	setp.gt.f32 	%p250, %f1175, 0f4B800000;
	add.f32 	%f1176, %f198, 0f3F800000;
	add.f32 	%f1198, %f1382, %f1382;
	mov.b32 	%r622, %f1198;
	and.b32  	%r623, %r622, -2147483648;
	or.b32  	%r624, %r623, 1056964608;
	mov.b32 	%f1199, %r624;
	add.f32 	%f1200, %f1198, %f1199;
	cvt.rzi.f32.f32 	%f1201, %f1200;
	abs.f32 	%f1202, %f1198;
	setp.gt.f32 	%p264, %f1202, 0f4B000000;
	selp.f32 	%f1203, %f1198, %f1201, %p264;
	cvt.rzi.f32.f32 	%f1204, %f1198;
	setp.lt.f32 	%p265, %f1202, 0f3F000000;
	selp.f32 	%f1205, %f1204, %f1203, %p265;
	cvt.rzi.s32.f32 	%r625, %f1205;
	fma.rn.f32 	%f1206, %f1205, 0fBF000000, %f1382;
	mul.f32 	%f1207, %f1206, %f1206;
	fma.rn.f32 	%f1208, %f1207, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1209, %f1207, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1210, %f1208, %f1207, 0fC0A55DF6;
	fma.rn.f32 	%f1211, %f1209, %f1207, 0f4081E0CF;
	fma.rn.f32 	%f1212, %f1207, %f1206, 0f00000000;
	fma.rn.f32 	%f1213, %f1211, %f1207, 0fC09DE9E6;
	fma.rn.f32 	%f1214, %f1210, %f1212, 0f00000000;
	fma.rn.f32 	%f1215, %f1213, %f1207, 0f3F800000;
	fma.rn.f32 	%f1216, %f1206, 0f40490FDB, %f1214;
	and.b32  	%r626, %r625, 1;
	setp.eq.b32 	%p266, %r626, 1;
	selp.f32 	%f1217, %f1215, %f1216, %p266;
	selp.f32 	%f1218, %f1216, %f1215, %p266;
	and.b32  	%r627, %r625, 2;
	setp.eq.s32 	%p267, %r627, 0;
	neg.f32 	%f1219, %f1217;
	selp.f32 	%f1220, %f1217, %f1219, %p267;
	add.s32 	%r628, %r625, 1;
	and.b32  	%r629, %r628, 2;
	setp.eq.s32 	%p268, %r629, 0;
	sub.f32 	%f1222, %f286, %f1218;
	selp.f32 	%f1223, %f1218, %f1222, %p268;
	cvt.rzi.f32.f32 	%f1224, %f1382;
	setp.eq.f32 	%p269, %f1224, %f1382;
	mul.f32 	%f1225, %f1382, 0f00000000;
	selp.f32 	%f1226, %f1225, %f1220, %p269;
	abs.f32 	%f1227, %f1382;
	setp.gt.f32 	%p270, %f1227, 0f4B800000;
	add.f32 	%f1228, %f1226, 0f3F800000;
	mul.lo.s32 	%r630, %r241, 2147483640;
	cvt.u16.u32 	%rs1, %r1;
	shr.u16 	%rs2, %rs1, 8;
	shl.b16 	%rs3, %rs1, 8;
	or.b16  	%rs4, %rs3, %rs2;
	shl.b16 	%rs5, %rs4, 4;
	shr.u16 	%rs6, %rs4, 4;
	and.b16  	%rs7, %rs6, 3840;
	or.b16  	%rs8, %rs7, %rs5;
	and.b16  	%rs9, %rs8, 13107;
	shl.b16 	%rs10, %rs9, 2;
	shr.u16 	%rs11, %rs8, 2;
	and.b16  	%rs12, %rs11, 13107;
	or.b16  	%rs13, %rs12, %rs10;
	and.b16  	%rs14, %rs13, 20480;
	shl.b16 	%rs15, %rs14, 1;
	shr.u16 	%rs16, %rs13, 1;
	and.b16  	%rs17, %rs16, 16384;
	or.b16  	%rs18, %rs17, %rs15;
	shr.u16 	%rs19, %rs18, 13;
	sub.s32 	%r631, %r630, %r230;
	mad.lo.s32 	%r632, %r244, 2147483616, %r631;
	or.b16  	%rs20, %rs19, 1;
	cvt.u32.u16 	%r633, %rs20;
	and.b16  	%rs21, %rs19, 6;
	cvt.u32.u16 	%r634, %rs21;
	sub.s32 	%r635, %r632, %r634;
	shl.b32 	%r636, %r635, 1;
	cvt.rn.f32.s32 	%f1230, %r636;
	div.approx.f32 	%f217, %f1230, %f289;
	abs.f32 	%f1386, %f217;
	setp.lt.f32 	%p271, %f1386, 0f40000000;
	@%p271 bra 	$L__BB0_164;
// %bb.153:
	setp.gtu.f32 	%p272, %f1386, 0f4B800000;
	@%p272 bra 	$L__BB0_160;
	bra.uni 	$L__BB0_154;
$L__BB0_160:
	mov.b32 	%r107, %f1386;
	and.b32  	%r637, %r107, 8388607;
	or.b32  	%r16391, %r637, 1065353216;
	mov.b32 	%f1385, %r16391;
	add.s32 	%r638, %r107, -1073741824;
	and.b32  	%r16392, %r638, -8388608;
	setp.eq.s32 	%p278, %r16392, 0;
	@%p278 bra 	$L__BB0_163;
// %bb.161:                             // %__nv_fmaf_rn.exit4.i.i.i1872.preheader
	mov.f32 	%f1241, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1240,%f1241;
	// end inline asm
$L__BB0_162:                            // %__nv_fmaf_rn.exit4.i.i.i1872
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r639, %r16392, 192937984;
	add.s32 	%r640, %r16391, %r639;
	mov.b32 	%f1242, %r640;
	mul.f32 	%f1243, %f1240, %f1242;
	sub.f32 	%f1244, %f1242, %f1243;
	fma.rn.f32 	%f1245, %f1244, %f1240, %f1243;
	sub.f32 	%f1246, %f1242, %f1245;
	fma.rz.f32 	%f1247, %f1246, %f1240, %f1245;
	cvt.rzi.f32.f32 	%f1248, %f1247;
	sub.f32 	%f1385, %f1242, %f1248;
	sub.s32 	%r16392, %r16392, %r639;
	mov.b32 	%r16391, %f1385;
	setp.ne.s32 	%p279, %r16392, 0;
	setp.ne.s32 	%p280, %r16391, 0;
	and.pred  	%p281, %p279, %p280;
	@%p281 bra 	$L__BB0_162;
$L__BB0_163:                            // %__internal_fmodf_slowpath_mod.exit.i.i1874
	setp.gt.u32 	%p282, %r107, 2139095039;
	selp.f32 	%f1249, 0f7FFFFFFF, 0f4B800000, %p282;
	mul.f32 	%f1250, %f1385, 0f34000000;
	mul.f32 	%f1386, %f1249, %f1250;
	bra.uni 	$L__BB0_164;
$L__BB0_154:                            // %__nv_fast_fdividef.exit.i.i.i1851
	div.approx.f32 	%f1233, %f1386, %f257;
	cvt.rzi.f32.f32 	%f1384, %f1233;
	fma.rn.f32 	%f220, %f1384, 0fC0000000, %f1386;
	mov.b32 	%r106, %f220;
	setp.lt.u32 	%p273, %r106, 1073741824;
	@%p273 bra 	$L__BB0_159;
// %bb.155:
	setp.lt.u32 	%p274, %r106, -2147483647;
	@%p274 bra 	$L__BB0_157;
// %bb.156:
	add.f32 	%f1238, %f1384, 0fBF800000;
	setp.lt.f32 	%p277, %f220, 0fC0000000;
	add.f32 	%f1239, %f1238, 0fBF800000;
	selp.f32 	%f1384, %f1239, %f1238, %p277;
	bra.uni 	$L__BB0_159;
$L__BB0_157:
	add.f32 	%f1384, %f1384, 0f3F800000;
	setp.ltu.f32 	%p275, %f220, 0f40800000;
	@%p275 bra 	$L__BB0_159;
// %bb.158:                             // %__nv_fmaf_rn.exit.i.i.i1855
	add.f32 	%f1234, %f1384, 0f3F800000;
	fma.rn.f32 	%f1236, %f257, 0fC0400000, %f220;
	setp.ge.f32 	%p276, %f1236, 0f00000000;
	add.f32 	%f1237, %f1234, 0f3F800000;
	selp.f32 	%f1384, %f1237, %f1234, %p276;
$L__BB0_159:                            // %__internal_fmodf_fastpath_quot.exit.i.i1858
	fma.rn.f32 	%f1386, %f1384, 0fC0000000, %f1386;
$L__BB0_164:                            // %__internal_fmodf_kernel.exit.i1877
	shr.u32 	%r285, %r284, 1;
	bfe.u32 	%r290, %r289, 1, 10;
	mul.f32 	%f292, %f254, 0f3B8B2FF9;
	mul.f32 	%f326, %f4, 0f3B8B2FF9;
	mul.f32 	%f361, %f8, 0f3B8B2FF9;
	mul.f32 	%f395, %f13, 0f3B8B2FF9;
	mul.f32 	%f430, %f17, 0f3B8B2FF9;
	mul.f32 	%f464, %f22, 0f3B8B2FF9;
	mul.f32 	%f499, %f26, 0f3B8B2FF9;
	mul.f32 	%f533, %f31, 0f3B8B2FF9;
	mul.f32 	%f568, %f35, 0f3B8B2FF9;
	mul.f32 	%f602, %f40, 0f3B8B2FF9;
	mul.f32 	%f637, %f44, 0f3B8B2FF9;
	mul.f32 	%f671, %f49, 0f3B8B2FF9;
	mul.f32 	%f706, %f53, 0f3B8B2FF9;
	mul.f32 	%f740, %f58, 0f3B8B2FF9;
	mul.f32 	%f775, %f62, 0f3B8B2FF9;
	mul.f32 	%f808, %f67, 0f3B8B2FF9;
	selp.f32 	%f89, %f861, %f857, %p130;
	selp.f32 	%f915, %f914, %f909, %p150;
	selp.f32 	%f125, %f967, %f963, %p170;
	selp.f32 	%f1021, %f1020, %f1015, %p190;
	selp.f32 	%f1068, %f1063, %f1067, %p208;
	setp.gt.f32 	%p210, %f1071, 0f4B800000;
	add.f32 	%f1072, %f161, 0f3F800000;
	selp.f32 	%f1119, %f1114, %f1118, %p228;
	setp.gt.f32 	%p230, %f1123, 0f4B800000;
	add.f32 	%f1124, %f1122, 0f3F800000;
	selp.f32 	%f199, %f1176, %f1172, %p250;
	selp.f32 	%f1229, %f1228, %f1223, %p270;
	sub.s32 	%r105, %r632, %r633;
	abs.f32 	%f1251, %f1386;
	setp.gtu.f32 	%p283, %f1251, 0f7F800000;
	@%p283 bra 	$L__BB0_166;
// %bb.165:
	mov.b32 	%r641, %f217;
	and.b32  	%r642, %r641, -2147483648;
	mov.b32 	%r643, %f1386;
	or.b32  	%r644, %r642, %r643;
	mov.b32 	%f1386, %r644;
$L__BB0_166:                            // %__nv_fmodf.exit1878
	ld.param.u64 	%rd1, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_5];
	mul.wide.u32 	%rd48, %r285, 4;
	mul.wide.u32 	%rd50, %r290, 4;
	mul.f32 	%f3, %f292, %f1336;
	mul.f32 	%f327, %f326, %f1337;
	mul.f32 	%f12, %f361, %f1338;
	mul.f32 	%f396, %f395, %f1339;
	mul.f32 	%f21, %f430, %f1340;
	mul.f32 	%f465, %f464, %f1341;
	mul.f32 	%f30, %f499, %f1342;
	mul.f32 	%f534, %f533, %f1343;
	mul.f32 	%f39, %f568, %f1344;
	mul.f32 	%f603, %f602, %f1345;
	mul.f32 	%f48, %f637, %f1346;
	mul.f32 	%f672, %f671, %f1347;
	mul.f32 	%f57, %f706, %f1348;
	mul.f32 	%f741, %f740, %f1349;
	mul.f32 	%f66, %f775, %f1350;
	mul.f32 	%f809, %f808, %f1351;
	mov.b32 	%r469, %f915;
	mov.b32 	%r468, %f89;
	mov.b32 	%r475, %f912;
	mov.b32 	%r474, %f88;
	mov.b32 	%r524, %f1021;
	mov.b32 	%r523, %f125;
	mov.b32 	%r530, %f1018;
	mov.b32 	%r529, %f124;
	selp.f32 	%f162, %f1072, %f1068, %p210;
	selp.f32 	%f1125, %f1124, %f1119, %p230;
	mov.b32 	%r612, %f1229;
	mov.b32 	%r611, %f199;
	mov.b32 	%r618, %f1226;
	mov.b32 	%r617, %f198;
	add.f32 	%f1252, %f1386, %f1386;
	mov.b32 	%r645, %f1252;
	and.b32  	%r646, %r645, -2147483648;
	or.b32  	%r647, %r646, 1056964608;
	mov.b32 	%f1253, %r647;
	add.f32 	%f1254, %f1252, %f1253;
	cvt.rzi.f32.f32 	%f1255, %f1254;
	abs.f32 	%f1256, %f1252;
	setp.gt.f32 	%p284, %f1256, 0f4B000000;
	selp.f32 	%f1257, %f1252, %f1255, %p284;
	cvt.rzi.f32.f32 	%f1258, %f1252;
	setp.lt.f32 	%p285, %f1256, 0f3F000000;
	selp.f32 	%f1259, %f1258, %f1257, %p285;
	cvt.rzi.s32.f32 	%r648, %f1259;
	fma.rn.f32 	%f1260, %f1259, 0fBF000000, %f1386;
	mul.f32 	%f1261, %f1260, %f1260;
	fma.rn.f32 	%f1262, %f1261, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1263, %f1261, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1264, %f1262, %f1261, 0fC0A55DF6;
	fma.rn.f32 	%f1265, %f1263, %f1261, 0f4081E0CF;
	fma.rn.f32 	%f1266, %f1261, %f1260, 0f00000000;
	fma.rn.f32 	%f1267, %f1265, %f1261, 0fC09DE9E6;
	fma.rn.f32 	%f1268, %f1264, %f1266, 0f00000000;
	fma.rn.f32 	%f1269, %f1267, %f1261, 0f3F800000;
	fma.rn.f32 	%f1270, %f1260, 0f40490FDB, %f1268;
	and.b32  	%r649, %r648, 1;
	setp.eq.b32 	%p286, %r649, 1;
	selp.f32 	%f1271, %f1269, %f1270, %p286;
	selp.f32 	%f1272, %f1270, %f1269, %p286;
	and.b32  	%r650, %r648, 2;
	setp.eq.s32 	%p287, %r650, 0;
	neg.f32 	%f1273, %f1271;
	selp.f32 	%f1274, %f1271, %f1273, %p287;
	add.s32 	%r651, %r648, 1;
	and.b32  	%r652, %r651, 2;
	setp.eq.s32 	%p288, %r652, 0;
	sub.f32 	%f1276, %f286, %f1272;
	selp.f32 	%f1277, %f1272, %f1276, %p288;
	cvt.rzi.f32.f32 	%f1278, %f1386;
	setp.eq.f32 	%p289, %f1278, %f1386;
	mul.f32 	%f1279, %f1386, 0f00000000;
	selp.f32 	%f234, %f1279, %f1274, %p289;
	abs.f32 	%f1280, %f1386;
	setp.gt.f32 	%p290, %f1280, 0f4B800000;
	add.f32 	%f1281, %f234, 0f3F800000;
	shl.b32 	%r653, %r105, 1;
	cvt.rn.f32.s32 	%f1282, %r653;
	div.approx.f32 	%f236, %f1282, %f289;
	abs.f32 	%f1390, %f236;
	setp.lt.f32 	%p291, %f1390, 0f40000000;
	@%p291 bra 	$L__BB0_178;
// %bb.167:
	setp.gtu.f32 	%p292, %f1390, 0f4B800000;
	@%p292 bra 	$L__BB0_174;
	bra.uni 	$L__BB0_168;
$L__BB0_174:
	mov.b32 	%r115, %f1390;
	and.b32  	%r654, %r115, 8388607;
	or.b32  	%r16393, %r654, 1065353216;
	mov.b32 	%f1389, %r16393;
	add.s32 	%r655, %r115, -1073741824;
	and.b32  	%r16394, %r655, -8388608;
	setp.eq.s32 	%p298, %r16394, 0;
	@%p298 bra 	$L__BB0_177;
// %bb.175:                             // %__nv_fmaf_rn.exit4.i.i.i1903.preheader
	mov.f32 	%f1293, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1292,%f1293;
	// end inline asm
$L__BB0_176:                            // %__nv_fmaf_rn.exit4.i.i.i1903
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r656, %r16394, 192937984;
	add.s32 	%r657, %r16393, %r656;
	mov.b32 	%f1294, %r657;
	mul.f32 	%f1295, %f1292, %f1294;
	sub.f32 	%f1296, %f1294, %f1295;
	fma.rn.f32 	%f1297, %f1296, %f1292, %f1295;
	sub.f32 	%f1298, %f1294, %f1297;
	fma.rz.f32 	%f1299, %f1298, %f1292, %f1297;
	cvt.rzi.f32.f32 	%f1300, %f1299;
	sub.f32 	%f1389, %f1294, %f1300;
	sub.s32 	%r16394, %r16394, %r656;
	mov.b32 	%r16393, %f1389;
	setp.ne.s32 	%p299, %r16394, 0;
	setp.ne.s32 	%p300, %r16393, 0;
	and.pred  	%p301, %p299, %p300;
	@%p301 bra 	$L__BB0_176;
$L__BB0_177:                            // %__internal_fmodf_slowpath_mod.exit.i.i1905
	setp.gt.u32 	%p302, %r115, 2139095039;
	selp.f32 	%f1301, 0f7FFFFFFF, 0f4B800000, %p302;
	mul.f32 	%f1302, %f1389, 0f34000000;
	mul.f32 	%f1390, %f1301, %f1302;
	bra.uni 	$L__BB0_178;
$L__BB0_168:                            // %__nv_fast_fdividef.exit.i.i.i1882
	div.approx.f32 	%f1285, %f1390, %f257;
	cvt.rzi.f32.f32 	%f1388, %f1285;
	fma.rn.f32 	%f239, %f1388, 0fC0000000, %f1390;
	mov.b32 	%r114, %f239;
	setp.lt.u32 	%p293, %r114, 1073741824;
	@%p293 bra 	$L__BB0_173;
// %bb.169:
	setp.lt.u32 	%p294, %r114, -2147483647;
	@%p294 bra 	$L__BB0_171;
// %bb.170:
	add.f32 	%f1290, %f1388, 0fBF800000;
	setp.lt.f32 	%p297, %f239, 0fC0000000;
	add.f32 	%f1291, %f1290, 0fBF800000;
	selp.f32 	%f1388, %f1291, %f1290, %p297;
	bra.uni 	$L__BB0_173;
$L__BB0_171:
	add.f32 	%f1388, %f1388, 0f3F800000;
	setp.ltu.f32 	%p295, %f239, 0f40800000;
	@%p295 bra 	$L__BB0_173;
// %bb.172:                             // %__nv_fmaf_rn.exit.i.i.i1886
	add.f32 	%f1286, %f1388, 0f3F800000;
	fma.rn.f32 	%f1288, %f257, 0fC0400000, %f239;
	setp.ge.f32 	%p296, %f1288, 0f00000000;
	add.f32 	%f1289, %f1286, 0f3F800000;
	selp.f32 	%f1388, %f1289, %f1286, %p296;
$L__BB0_173:                            // %__internal_fmodf_fastpath_quot.exit.i.i1889
	fma.rn.f32 	%f1390, %f1388, 0fC0000000, %f1390;
$L__BB0_178:                            // %__internal_fmodf_kernel.exit.i1908
	add.s64 	%rd49, %rd1, %rd48;
	add.s64 	%rd51, %rd1, %rd50;
	shr.u32 	%r240, %r1, 2;
	mov.b32 	%r315, %f327;
	mov.b32 	%r314, %f3;
	mov.b32 	%r333, %f396;
	mov.b32 	%r332, %f12;
	mov.b32 	%r351, %f465;
	mov.b32 	%r350, %f21;
	mov.b32 	%r369, %f534;
	mov.b32 	%r368, %f30;
	mov.b32 	%r387, %f603;
	mov.b32 	%r386, %f39;
	mov.b32 	%r405, %f672;
	mov.b32 	%r404, %f48;
	mov.b32 	%r423, %f741;
	mov.b32 	%r422, %f57;
	mov.b32 	%r441, %f809;
	mov.b32 	%r440, %f66;
	xor.b32  	%r527, %r530, -2147483648;
	xor.b32  	%r526, %r529, -2147483648;
	mov.b32 	%r574, %f1125;
	mov.b32 	%r573, %f162;
	mov.b32 	%r577, %f1122;
	mov.b32 	%r576, %f161;
	xor.b32  	%r615, %r618, -2147483648;
	xor.b32  	%r614, %r617, -2147483648;
	selp.f32 	%f235, %f1281, %f1277, %p290;
	abs.f32 	%f1303, %f1390;
	setp.gtu.f32 	%p303, %f1303, 0f7F800000;
	@%p303 bra 	$L__BB0_180;
// %bb.179:
	mov.b32 	%r658, %f236;
	and.b32  	%r659, %r658, -2147483648;
	mov.b32 	%r660, %f1390;
	or.b32  	%r661, %r659, %r660;
	mov.b32 	%f1390, %r661;
$L__BB0_180:                            // %__nv_fmodf.exit1909
	ld.param.u64 	%rd2, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_6];
	ld.param.u64 	%rd3, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_7];
	ld.global.u32 	%r234, [%rd49];
	ld.global.u32 	%r236, [%rd51];
	// begin inline asm
	cvt.rn.f16x2.f32 %r313, %r315, %r314;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r331, %r333, %r332;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r349, %r351, %r350;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r367, %r369, %r368;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r385, %r387, %r386;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r403, %r405, %r404;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r421, %r423, %r422;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r439, %r441, %r440;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r467, %r469, %r468;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r470, %r469, %r468;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r473, %r475, %r474;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r476, %r475, %r474;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r522, %r524, %r523;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r525, %r527, %r526;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r528, %r530, %r529;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r531, %r524, %r523;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r572, %r574, %r573;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r575, %r577, %r576;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r610, %r612, %r611;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r613, %r615, %r614;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r616, %r618, %r617;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r619, %r612, %r611;
	// end inline asm
	add.f32 	%f1304, %f1390, %f1390;
	mov.b32 	%r669, %f1304;
	and.b32  	%r670, %r669, -2147483648;
	or.b32  	%r671, %r670, 1056964608;
	mov.b32 	%f1305, %r671;
	add.f32 	%f1306, %f1304, %f1305;
	cvt.rzi.f32.f32 	%f1307, %f1306;
	abs.f32 	%f1308, %f1304;
	setp.gt.f32 	%p304, %f1308, 0f4B000000;
	selp.f32 	%f1309, %f1304, %f1307, %p304;
	cvt.rzi.f32.f32 	%f1310, %f1304;
	setp.lt.f32 	%p305, %f1308, 0f3F000000;
	selp.f32 	%f1311, %f1310, %f1309, %p305;
	cvt.rzi.s32.f32 	%r672, %f1311;
	fma.rn.f32 	%f1312, %f1311, 0fBF000000, %f1390;
	mul.f32 	%f1313, %f1312, %f1312;
	fma.rn.f32 	%f1314, %f1313, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1315, %f1313, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1316, %f1314, %f1313, 0fC0A55DF6;
	fma.rn.f32 	%f1317, %f1315, %f1313, 0f4081E0CF;
	fma.rn.f32 	%f1318, %f1313, %f1312, 0f00000000;
	fma.rn.f32 	%f1319, %f1317, %f1313, 0fC09DE9E6;
	fma.rn.f32 	%f1320, %f1316, %f1318, 0f00000000;
	fma.rn.f32 	%f1321, %f1319, %f1313, 0f3F800000;
	fma.rn.f32 	%f1322, %f1312, 0f40490FDB, %f1320;
	and.b32  	%r673, %r672, 1;
	setp.eq.b32 	%p306, %r673, 1;
	selp.f32 	%f1323, %f1321, %f1322, %p306;
	selp.f32 	%f1324, %f1322, %f1321, %p306;
	and.b32  	%r674, %r672, 2;
	setp.eq.s32 	%p307, %r674, 0;
	neg.f32 	%f1325, %f1323;
	selp.f32 	%f1326, %f1323, %f1325, %p307;
	add.s32 	%r675, %r672, 1;
	and.b32  	%r676, %r675, 2;
	setp.eq.s32 	%p308, %r676, 0;
	sub.f32 	%f1328, %f286, %f1324;
	selp.f32 	%f1329, %f1324, %f1328, %p308;
	cvt.rzi.f32.f32 	%f1330, %f1390;
	setp.eq.f32 	%p309, %f1330, %f1390;
	mul.f32 	%f1331, %f1390, 0f00000000;
	selp.f32 	%f1332, %f1331, %f1326, %p309;
	abs.f32 	%f1333, %f1390;
	setp.gt.f32 	%p310, %f1333, 0f4B800000;
	add.f32 	%f1334, %f1332, 0f3F800000;
	selp.f32 	%f1335, %f1334, %f1329, %p310;
	mov.b32 	%r664, %f1335;
	mov.b32 	%r663, %f235;
	// begin inline asm
	cvt.rn.f16x2.f32 %r662, %r664, %r663;
	// end inline asm
	mov.b32 	%r667, %f1332;
	mov.b32 	%r666, %f234;
	// begin inline asm
	cvt.rn.f16x2.f32 %r665, %r667, %r666;
	// end inline asm
	shl.b32 	%r677, %r5, 12;
	and.b32  	%r678, %r226, 28;
	shl.b32 	%r679, %r2, 5;
	and.b32  	%r680, %r679, 96;
	or.b32  	%r124, %r678, %r680;
	and.b32  	%r125, %r679, 128;
	or.b32  	%r681, %r125, %r124;
	shl.b32 	%r682, %r1, 3;
	and.b32  	%r683, %r682, 64;
	or.b32  	%r126, %r683, %r3;
	or.b32  	%r127, %r677, %r681;
	and.b32  	%r128, %r1, 8;
	shl.b32 	%r684, %r1, 4;
	or.b32  	%r685, %r684, %r128;
	shr.u32 	%r686, %r685, 2;
	and.b32  	%r687, %r686, 30;
	and.b32  	%r129, %r684, 48;
	and.b32  	%r688, %r240, 6;
	or.b32  	%r689, %r229, %r129;
	or.b32  	%r130, %r689, %r688;
	shr.u32 	%r690, %r3, 1;
	and.b32  	%r691, %r4, 32;
	or.b32  	%r131, %r691, %r690;
	or.b32  	%r132, %r131, 8;
	or.b32  	%r133, %r131, 16;
	or.b32  	%r134, %r131, 24;
	or.b32  	%r692, %r233, %r227;
	or.b32  	%r693, %r692, %r229;
	or.b32  	%r694, %r693, %r232;
	shr.u32 	%r695, %r694, 1;
	mul.lo.s32 	%r696, %r695, 65;
	add.s32 	%r135, %r131, %r696;
	add.s32 	%r136, %r132, %r696;
	add.s32 	%r137, %r133, %r696;
	add.s32 	%r138, %r134, %r696;
	or.b32  	%r697, %r235, %r227;
	or.b32  	%r698, %r697, %r229;
	or.b32  	%r699, %r698, %r232;
	shr.u32 	%r700, %r699, 1;
	mul.lo.s32 	%r701, %r700, 65;
	add.s32 	%r139, %r131, %r701;
	add.s32 	%r140, %r132, %r701;
	add.s32 	%r141, %r133, %r701;
	add.s32 	%r142, %r134, %r701;
	shl.b32 	%r702, %r3, 1;
	or.b32  	%r703, %r702, %r242;
	mul.lo.s32 	%r704, %r703, 65;
	add.s32 	%r705, %r687, %r704;
	mul.wide.u32 	%rd52, %r705, 4;
	mov.u64 	%rd53, shmem;
	add.s64 	%rd5, %rd53, %rd52;
	cvt.u64.u32 	%rd54, %r687;
	cvt.u64.u32 	%rd55, %r704;
	add.s64 	%rd56, %rd55, %rd54;
	shl.b64 	%rd57, %rd56, 2;
	add.s64 	%rd6, %rd53, %rd57;
	or.b32  	%r706, %r703, 32;
	mul.lo.s32 	%r707, %r706, 65;
	add.s32 	%r708, %r687, %r707;
	mul.wide.u32 	%rd58, %r708, 4;
	add.s64 	%rd7, %rd53, %rd58;
	cvt.u64.u32 	%rd59, %r707;
	add.s64 	%rd60, %rd59, %rd54;
	shl.b64 	%rd61, %rd60, 2;
	add.s64 	%rd8, %rd53, %rd61;
	shl.b32 	%r709, %r7, 19;
	add.s32 	%r710, %r709, -1572864;
	shl.b32 	%r711, %r3, 10;
	or.b32  	%r712, %r231, %r243;
	shl.b32 	%r713, %r712, 8;
	or.b32  	%r143, %r711, %r713;
	cvt.s64.s32 	%rd9, %r710;
	or.b32  	%r144, %r143, 16384;
	bfe.u32 	%r714, %r684, 5, 1;
	and.b32  	%r715, %r3, 1;
	neg.s32 	%r716, %r715;
	and.b32  	%r717, %r716, 2080;
	bfe.s32 	%r718, %r3, 1, 1;
	and.b32  	%r719, %r3, 2;
	setp.eq.s32 	%p311, %r719, 0;
	and.b32  	%r720, %r718, 1040;
	shr.u32 	%r721, %r3, 3;
	mul.lo.s32 	%r722, %r721, 260;
	bfe.s32 	%r723, %r3, 2, 1;
	and.b32  	%r724, %r3, 4;
	setp.eq.s32 	%p312, %r724, 0;
	and.b32  	%r725, %r723, 520;
	mul.lo.s32 	%r726, %r242, 65;
	or.b32  	%r727, %r717, %r687;
	add.s32 	%r728, %r727, %r720;
	add.s32 	%r729, %r728, %r722;
	add.s32 	%r730, %r729, %r725;
	add.s32 	%r731, %r730, %r726;
	mul.wide.u32 	%rd62, %r731, 4;
	add.s64 	%rd10, %rd53, %rd62;
	cvt.u64.u32 	%rd63, %r726;
	selp.b64 	%rd64, 0, 520, %p312;
	cvt.u64.u32 	%rd65, %r722;
	selp.b64 	%rd66, 0, 1040, %p311;
	cvt.u64.u32 	%rd67, %r727;
	add.s64 	%rd68, %rd67, %rd66;
	add.s64 	%rd69, %rd68, %rd65;
	add.s64 	%rd70, %rd69, %rd64;
	add.s64 	%rd71, %rd70, %rd63;
	shl.b64 	%rd72, %rd71, 2;
	add.s64 	%rd12, %rd53, %rd72;
	add.s32 	%r732, %r731, 162;
	mul.wide.u32 	%rd73, %r732, 4;
	add.s64 	%rd13, %rd53, %rd73;
	add.s32 	%r733, %r731, 131;
	mul.wide.u32 	%rd74, %r733, 4;
	add.s64 	%rd14, %rd53, %rd74;
	add.s32 	%r734, %r731, 163;
	mul.wide.u32 	%rd75, %r734, 4;
	add.s64 	%rd15, %rd53, %rd75;
	add.s32 	%r735, %r731, 4193;
	mul.wide.u32 	%rd76, %r735, 4;
	add.s64 	%rd16, %rd53, %rd76;
	add.s32 	%r736, %r731, 4162;
	mul.wide.u32 	%rd77, %r736, 4;
	add.s64 	%rd17, %rd53, %rd77;
	add.s32 	%r737, %r731, 4194;
	mul.wide.u32 	%rd78, %r737, 4;
	add.s64 	%rd18, %rd53, %rd78;
	add.s32 	%r738, %r731, 4291;
	mul.wide.u32 	%rd79, %r738, 4;
	add.s64 	%rd19, %rd53, %rd79;
	add.s32 	%r739, %r731, 4323;
	mul.wide.u32 	%rd80, %r739, 4;
	add.s64 	%rd20, %rd53, %rd80;
	add.s32 	%r740, %r731, 4292;
	mul.wide.u32 	%rd81, %r740, 4;
	add.s64 	%rd21, %rd53, %rd81;
	add.s32 	%r741, %r731, 4324;
	mul.wide.u32 	%rd82, %r741, 4;
	add.s64 	%rd22, %rd53, %rd82;
	mul.lo.s32 	%r145, %r714, 65;
	add.s32 	%r146, %r131, 2080;
	add.s32 	%r147, %r132, 2080;
	add.s32 	%r148, %r133, 2080;
	add.s32 	%r149, %r134, 2080;
	add.s32 	%r742, %r708, 4193;
	mul.wide.u32 	%rd83, %r742, 4;
	add.s64 	%rd23, %rd53, %rd83;
	mov.u32 	%r16395, 0;
	setp.eq.s32 	%p314, %r128, 0;
	mov.u16 	%rs2381, 25600;
	mov.u16 	%rs2173, 21504;
	mov.u16 	%rs2389, 18432;
	mov.u16 	%rs2307, -14592;
	mov.u32 	%r16396, %r16395;
	mov.u32 	%r16397, %r16395;
	mov.u32 	%r16398, %r16395;
	mov.u32 	%r16399, %r16395;
	mov.u32 	%r16400, %r16395;
	mov.u32 	%r16401, %r16395;
	mov.u32 	%r16402, %r16395;
	mov.u32 	%r16403, %r16395;
	mov.u32 	%r16404, %r16395;
	mov.u32 	%r16405, %r16395;
	mov.u32 	%r16406, %r16395;
	mov.u32 	%r16407, %r16395;
	mov.u32 	%r16408, %r16395;
	mov.u32 	%r16409, %r16395;
	mov.u32 	%r16410, %r16395;
	mov.u32 	%r16411, %r16395;
	mov.u32 	%r16412, %r16395;
	mov.u32 	%r16413, %r16395;
	mov.u32 	%r16414, %r16395;
	mov.u32 	%r16415, %r16395;
	mov.u32 	%r16416, %r16395;
	mov.u32 	%r16417, %r16395;
	mov.u32 	%r16418, %r16395;
	mov.u32 	%r16419, %r16395;
	bra.uni 	$L__BB0_181;
$L__BB0_187:                            // %L70753
                                        //   in Loop: Header=BB0_181 Depth=1
	add.s32 	%r225, %r16419, 256;
	setp.ne.s32 	%p339, %r16419, 130816;
	mov.u32 	%r16419, %r225;
	@%p339 bra 	$L__BB0_181;
	bra.uni 	$L__BB0_188;
$L__BB0_181:                            // %L2417
                                        // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_183 Depth 2
	add.s32 	%r743, %r16419, %r5;
	setp.gt.s32 	%p313, %r6, %r743;
	@%p313 bra 	$L__BB0_182;
	bra.uni 	$L__BB0_188;
$L__BB0_182:                            // %pass886
                                        //   in Loop: Header=BB0_181 Depth=1
	or.b32  	%r809, %r16419, %r228;
	and.b32  	%r810, %r809, 130848;
	or.b32  	%r811, %r126, %r810;
	shl.b32 	%r812, %r811, 12;
	add.s32 	%r813, %r127, %r812;
	shr.s32 	%r814, %r813, 31;
	shr.u32 	%r815, %r814, 3;
	add.s32 	%r816, %r813, %r815;
	shr.s32 	%r817, %r816, 29;
	setp.lt.s32 	%p315, %r813, 0;
	and.b32  	%r818, %r816, -536870912;
	setp.ne.s32 	%p316, %r818, %r813;
	and.pred  	%p317, %p315, %p316;
	selp.u32 	%r819, 1, 0, %p317;
	sub.s32 	%r820, %r819, %r817;
	shl.b32 	%r821, %r820, 29;
	add.s32 	%r822, %r821, %r813;
	mul.wide.s32 	%rd84, %r822, 4;
	add.s64 	%rd85, %rd2, %rd84;
	ld.global.v4.u32 	{%r823, %r824, %r825, %r826}, [%rd85];
	or.b32  	%r827, %r812, 65536;
	add.s32 	%r828, %r127, %r827;
	shr.s32 	%r829, %r828, 31;
	shr.u32 	%r830, %r829, 3;
	add.s32 	%r831, %r828, %r830;
	shr.s32 	%r832, %r831, 29;
	setp.lt.s32 	%p318, %r828, 0;
	and.b32  	%r833, %r831, -536870912;
	setp.ne.s32 	%p319, %r833, %r828;
	and.pred  	%p320, %p318, %p319;
	selp.u32 	%r834, 1, 0, %p320;
	sub.s32 	%r835, %r834, %r832;
	shl.b32 	%r836, %r835, 29;
	add.s32 	%r837, %r836, %r828;
	mul.wide.s32 	%rd86, %r837, 4;
	add.s64 	%rd87, %rd2, %rd86;
	ld.global.v4.u32 	{%r838, %r839, %r840, %r841}, [%rd87];
	or.b32  	%r842, %r812, 524288;
	add.s32 	%r843, %r127, %r842;
	shr.s32 	%r844, %r843, 31;
	shr.u32 	%r845, %r844, 3;
	add.s32 	%r846, %r843, %r845;
	shr.s32 	%r847, %r846, 29;
	setp.lt.s32 	%p321, %r843, 0;
	and.b32  	%r848, %r846, -536870912;
	setp.ne.s32 	%p322, %r848, %r843;
	and.pred  	%p323, %p321, %p322;
	selp.u32 	%r849, 1, 0, %p323;
	sub.s32 	%r850, %r849, %r847;
	shl.b32 	%r851, %r850, 29;
	add.s32 	%r852, %r851, %r843;
	mul.wide.s32 	%rd88, %r852, 4;
	add.s64 	%rd89, %rd2, %rd88;
	ld.global.v4.u32 	{%r853, %r854, %r855, %r856}, [%rd89];
	or.b32  	%r857, %r812, 589824;
	add.s32 	%r858, %r127, %r857;
	shr.s32 	%r859, %r858, 31;
	shr.u32 	%r860, %r859, 3;
	add.s32 	%r861, %r858, %r860;
	shr.s32 	%r862, %r861, 29;
	setp.lt.s32 	%p324, %r858, 0;
	and.b32  	%r863, %r861, -536870912;
	setp.ne.s32 	%p325, %r863, %r858;
	and.pred  	%p326, %p324, %p325;
	selp.u32 	%r864, 1, 0, %p326;
	sub.s32 	%r865, %r864, %r862;
	shl.b32 	%r866, %r865, 29;
	add.s32 	%r867, %r866, %r858;
	mul.wide.s32 	%rd90, %r867, 4;
	add.s64 	%rd91, %rd2, %rd90;
	ld.global.v4.u32 	{%r868, %r869, %r870, %r871}, [%rd91];
	selp.b32 	%r872, %r825, %r823, %p314;
	shfl.sync.bfly.b32	%r873, %r872, 8, 31, -1;
	selp.b32 	%r745, %r823, %r873, %p314;
	selp.b32 	%r746, %r873, %r825, %p314;
	selp.b32 	%r874, %r826, %r824, %p314;
	shfl.sync.bfly.b32	%r875, %r874, 8, 31, -1;
	selp.b32 	%r753, %r824, %r875, %p314;
	selp.b32 	%r754, %r875, %r826, %p314;
	selp.b32 	%r876, %r840, %r838, %p314;
	shfl.sync.bfly.b32	%r877, %r876, 8, 31, -1;
	selp.b32 	%r761, %r838, %r877, %p314;
	selp.b32 	%r762, %r877, %r840, %p314;
	selp.b32 	%r878, %r841, %r839, %p314;
	shfl.sync.bfly.b32	%r879, %r878, 8, 31, -1;
	selp.b32 	%r769, %r839, %r879, %p314;
	selp.b32 	%r770, %r879, %r841, %p314;
	selp.b32 	%r880, %r855, %r853, %p314;
	shfl.sync.bfly.b32	%r881, %r880, 8, 31, -1;
	selp.b32 	%r777, %r853, %r881, %p314;
	selp.b32 	%r778, %r881, %r855, %p314;
	selp.b32 	%r882, %r856, %r854, %p314;
	shfl.sync.bfly.b32	%r883, %r882, 8, 31, -1;
	selp.b32 	%r785, %r854, %r883, %p314;
	selp.b32 	%r786, %r883, %r856, %p314;
	selp.b32 	%r884, %r870, %r868, %p314;
	shfl.sync.bfly.b32	%r885, %r884, 8, 31, -1;
	selp.b32 	%r793, %r868, %r885, %p314;
	selp.b32 	%r794, %r885, %r870, %p314;
	selp.b32 	%r886, %r871, %r869, %p314;
	shfl.sync.bfly.b32	%r887, %r886, 8, 31, -1;
	selp.b32 	%r801, %r869, %r887, %p314;
	selp.b32 	%r802, %r887, %r871, %p314;
	mov.u32 	%r803, 21520;
	// begin inline asm
	prmt.b32 %r744, %r745, %r746, %r803;
	// end inline asm
	mov.u32 	%r807, 30258;
	// begin inline asm
	prmt.b32 %r748, %r745, %r746, %r807;
	// end inline asm
	// begin inline asm
	prmt.b32 %r752, %r753, %r754, %r803;
	// end inline asm
	// begin inline asm
	prmt.b32 %r756, %r753, %r754, %r807;
	// end inline asm
	// begin inline asm
	prmt.b32 %r760, %r761, %r762, %r803;
	// end inline asm
	// begin inline asm
	prmt.b32 %r764, %r761, %r762, %r807;
	// end inline asm
	// begin inline asm
	prmt.b32 %r768, %r769, %r770, %r803;
	// end inline asm
	// begin inline asm
	prmt.b32 %r772, %r769, %r770, %r807;
	// end inline asm
	// begin inline asm
	prmt.b32 %r776, %r777, %r778, %r803;
	// end inline asm
	// begin inline asm
	prmt.b32 %r780, %r777, %r778, %r807;
	// end inline asm
	// begin inline asm
	prmt.b32 %r784, %r785, %r786, %r803;
	// end inline asm
	// begin inline asm
	prmt.b32 %r788, %r785, %r786, %r807;
	// end inline asm
	// begin inline asm
	prmt.b32 %r792, %r793, %r794, %r803;
	// end inline asm
	// begin inline asm
	prmt.b32 %r796, %r793, %r794, %r807;
	// end inline asm
	// begin inline asm
	prmt.b32 %r800, %r801, %r802, %r803;
	// end inline asm
	// begin inline asm
	prmt.b32 %r804, %r801, %r802, %r807;
	// end inline asm
	st.shared.u32 	[%rd10], %r744;
	st.shared.u32 	[%rd12+128], %r748;
	st.shared.u32 	[%rd12+4], %r752;
	st.shared.u32 	[%rd12+132], %r756;
	st.shared.u32 	[%rd12+520], %r760;
	st.shared.u32 	[%rd13], %r764;
	st.shared.u32 	[%rd14], %r768;
	st.shared.u32 	[%rd15], %r772;
	st.shared.u32 	[%rd10+16644], %r776;
	st.shared.u32 	[%rd16], %r780;
	st.shared.u32 	[%rd17], %r784;
	st.shared.u32 	[%rd18], %r788;
	st.shared.u32 	[%rd19], %r792;
	st.shared.u32 	[%rd20], %r796;
	st.shared.u32 	[%rd21], %r800;
	st.shared.u32 	[%rd22], %r804;
	bar.sync 	0;
	or.b32  	%r247, %r130, %r16419;
	or.b32  	%r888, %r16419, %r129;
	or.b32  	%r889, %r888, %r229;
	or.b32  	%r890, %r240, %r889;
	or.b32  	%r248, %r890, 1;
	mov.u32 	%r808, 0;
	mov.u32 	%r16444, %r808;
$L__BB0_183:                            // %L13860
                                        //   Parent Loop BB0_181 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	add.s32 	%r16155, %r247, %r16444;
	bfe.s32 	%r16156, %r16155, 4, 1;
	and.b32  	%r16157, %r16156, 130;
	bfe.s32 	%r16158, %r16155, 1, 1;
	and.b32  	%r16159, %r16158, 1040;
	bfe.s32 	%r16160, %r16155, 3, 1;
	and.b32  	%r16161, %r16160, 260;
	bfe.s32 	%r16162, %r16155, 2, 1;
	and.b32  	%r16163, %r16162, 520;
	bfe.s32 	%r16164, %r16155, 7, 1;
	and.b32  	%r16165, %r16164, 4161;
	add.s32 	%r16166, %r131, %r16157;
	or.b32  	%r16167, %r16166, %r16159;
	add.s32 	%r16168, %r16167, %r16161;
	add.s32 	%r16169, %r16168, %r16163;
	add.s32 	%r16170, %r16169, %r145;
	add.s32 	%r16171, %r16170, %r16165;
	mul.wide.u32 	%rd92, %r16171, 4;
	add.s64 	%rd94, %rd53, %rd92;
	ld.shared.u32 	%r16172, [%rd94];
	add.s32 	%r16173, %r132, %r16157;
	add.s32 	%r16174, %r16173, %r16159;
	add.s32 	%r16175, %r16174, %r16161;
	add.s32 	%r16176, %r16175, %r16163;
	add.s32 	%r16177, %r16176, %r145;
	add.s32 	%r16178, %r16177, %r16165;
	mul.wide.u32 	%rd95, %r16178, 4;
	add.s64 	%rd96, %rd53, %rd95;
	ld.shared.u32 	%r16179, [%rd96];
	add.s32 	%r16180, %r133, %r16157;
	add.s32 	%r16181, %r16180, %r16159;
	add.s32 	%r16182, %r16181, %r16161;
	add.s32 	%r16183, %r16182, %r16163;
	add.s32 	%r16184, %r16183, %r145;
	add.s32 	%r16185, %r16184, %r16165;
	mul.wide.u32 	%rd97, %r16185, 4;
	add.s64 	%rd98, %rd53, %rd97;
	ld.shared.u32 	%r16186, [%rd98];
	add.s32 	%r16187, %r134, %r16157;
	add.s32 	%r16188, %r16187, %r16159;
	add.s32 	%r16189, %r16188, %r16161;
	add.s32 	%r16190, %r16189, %r16163;
	add.s32 	%r16191, %r16190, %r145;
	add.s32 	%r16192, %r16191, %r16165;
	mul.wide.u32 	%rd99, %r16192, 4;
	add.s64 	%rd100, %rd53, %rd99;
	ld.shared.u32 	%r16193, [%rd100];
	add.s32 	%r16194, %r248, %r16444;
	bfe.s32 	%r16195, %r16194, 4, 1;
	and.b32  	%r16196, %r16195, 130;
	bfe.s32 	%r16197, %r16194, 1, 1;
	and.b32  	%r16198, %r16197, 1040;
	bfe.s32 	%r16199, %r16194, 3, 1;
	and.b32  	%r16200, %r16199, 260;
	bfe.s32 	%r16201, %r16194, 2, 1;
	and.b32  	%r16202, %r16201, 520;
	bfe.s32 	%r16203, %r16194, 5, 1;
	and.b32  	%r16204, %r16203, 65;
	bfe.s32 	%r16205, %r16194, 7, 1;
	and.b32  	%r16206, %r16205, 4161;
	add.s32 	%r16207, %r146, %r16196;
	or.b32  	%r16208, %r16207, %r16198;
	add.s32 	%r16209, %r16208, %r16200;
	add.s32 	%r16210, %r16209, %r16202;
	add.s32 	%r16211, %r16210, %r16204;
	add.s32 	%r16212, %r16211, %r16206;
	mul.wide.u32 	%rd101, %r16212, 4;
	add.s64 	%rd102, %rd53, %rd101;
	ld.shared.u32 	%r16213, [%rd102];
	add.s32 	%r16214, %r147, %r16196;
	add.s32 	%r16215, %r16214, %r16198;
	add.s32 	%r16216, %r16215, %r16200;
	add.s32 	%r16217, %r16216, %r16202;
	add.s32 	%r16218, %r16217, %r16204;
	add.s32 	%r16219, %r16218, %r16206;
	mul.wide.u32 	%rd103, %r16219, 4;
	add.s64 	%rd104, %rd53, %rd103;
	ld.shared.u32 	%r16220, [%rd104];
	add.s32 	%r16221, %r148, %r16196;
	add.s32 	%r16222, %r16221, %r16198;
	add.s32 	%r16223, %r16222, %r16200;
	add.s32 	%r16224, %r16223, %r16202;
	add.s32 	%r16225, %r16224, %r16204;
	add.s32 	%r16226, %r16225, %r16206;
	mul.wide.u32 	%rd105, %r16226, 4;
	add.s64 	%rd106, %rd53, %rd105;
	ld.shared.u32 	%r16227, [%rd106];
	add.s32 	%r16228, %r149, %r16196;
	add.s32 	%r16229, %r16228, %r16198;
	add.s32 	%r16230, %r16229, %r16200;
	add.s32 	%r16231, %r16230, %r16202;
	add.s32 	%r16232, %r16231, %r16204;
	add.s32 	%r16233, %r16232, %r16206;
	mul.wide.u32 	%rd107, %r16233, 4;
	add.s64 	%rd108, %rd53, %rd107;
	ld.shared.u32 	%r16234, [%rd108];
	// begin inline asm
	mov.b32 %r896, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r907, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r895, %r16172, -2004318072;
	mov.u32 	%r894, 983055;
	// begin inline asm
	lop3.b32 %r893, %r894, %r895, %r896, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r897, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r898, %r896, %r897;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r901, %r893, %r898;
	// end inline asm
	mov.u32 	%r905, 15728880;
	// begin inline asm
	lop3.b32 %r904, %r905, %r895, %r907, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r908, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r909, %r907, %r908;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r912, %r904, %r909;
	// end inline asm
	shr.u32 	%r917, %r895, 8;
	// begin inline asm
	lop3.b32 %r915, %r894, %r917, %r896, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r919, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r920, %r896, %r919;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r923, %r915, %r920;
	// end inline asm
	// begin inline asm
	lop3.b32 %r926, %r905, %r917, %r907, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r930, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r931, %r907, %r930;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r934, %r926, %r931;
	// end inline asm
	// begin inline asm
	mov.b32 %r942, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r953, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r941, %r16179, -2004318072;
	// begin inline asm
	lop3.b32 %r939, %r894, %r941, %r942, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r943, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r944, %r942, %r943;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r947, %r939, %r944;
	// end inline asm
	// begin inline asm
	lop3.b32 %r950, %r905, %r941, %r953, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r954, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r955, %r953, %r954;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r958, %r950, %r955;
	// end inline asm
	shr.u32 	%r963, %r941, 8;
	// begin inline asm
	lop3.b32 %r961, %r894, %r963, %r942, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r965, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r966, %r942, %r965;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r969, %r961, %r966;
	// end inline asm
	// begin inline asm
	lop3.b32 %r972, %r905, %r963, %r953, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r976, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r977, %r953, %r976;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r980, %r972, %r977;
	// end inline asm
	// begin inline asm
	mov.b32 %r988, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r999, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r987, %r16186, -2004318072;
	// begin inline asm
	lop3.b32 %r985, %r894, %r987, %r988, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r989, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r990, %r988, %r989;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r993, %r985, %r990;
	// end inline asm
	// begin inline asm
	lop3.b32 %r996, %r905, %r987, %r999, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1000, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1001, %r999, %r1000;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1004, %r996, %r1001;
	// end inline asm
	shr.u32 	%r1009, %r987, 8;
	// begin inline asm
	lop3.b32 %r1007, %r894, %r1009, %r988, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1011, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1012, %r988, %r1011;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1015, %r1007, %r1012;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1018, %r905, %r1009, %r999, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1022, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1023, %r999, %r1022;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1026, %r1018, %r1023;
	// end inline asm
	// begin inline asm
	mov.b32 %r1034, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1045, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1033, %r16193, -2004318072;
	// begin inline asm
	lop3.b32 %r1031, %r894, %r1033, %r1034, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1035, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1036, %r1034, %r1035;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1039, %r1031, %r1036;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1042, %r905, %r1033, %r1045, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1046, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1047, %r1045, %r1046;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1050, %r1042, %r1047;
	// end inline asm
	shr.u32 	%r1055, %r1033, 8;
	// begin inline asm
	lop3.b32 %r1053, %r894, %r1055, %r1034, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1057, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1058, %r1034, %r1057;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1061, %r1053, %r1058;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1064, %r905, %r1055, %r1045, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1068, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1069, %r1045, %r1068;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1072, %r1064, %r1069;
	// end inline asm
	// begin inline asm
	mov.b32 %r1080, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1091, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1079, %r16213, -2004318072;
	// begin inline asm
	lop3.b32 %r1077, %r894, %r1079, %r1080, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1081, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1082, %r1080, %r1081;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1085, %r1077, %r1082;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1088, %r905, %r1079, %r1091, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1092, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1093, %r1091, %r1092;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1096, %r1088, %r1093;
	// end inline asm
	shr.u32 	%r1101, %r1079, 8;
	// begin inline asm
	lop3.b32 %r1099, %r894, %r1101, %r1080, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1103, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1104, %r1080, %r1103;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1107, %r1099, %r1104;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1110, %r905, %r1101, %r1091, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1114, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1115, %r1091, %r1114;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1118, %r1110, %r1115;
	// end inline asm
	// begin inline asm
	mov.b32 %r1126, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1137, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1125, %r16220, -2004318072;
	// begin inline asm
	lop3.b32 %r1123, %r894, %r1125, %r1126, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1127, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1128, %r1126, %r1127;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1131, %r1123, %r1128;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1134, %r905, %r1125, %r1137, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1138, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1139, %r1137, %r1138;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1142, %r1134, %r1139;
	// end inline asm
	shr.u32 	%r1147, %r1125, 8;
	// begin inline asm
	lop3.b32 %r1145, %r894, %r1147, %r1126, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1149, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1150, %r1126, %r1149;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1153, %r1145, %r1150;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1156, %r905, %r1147, %r1137, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1160, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1161, %r1137, %r1160;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1164, %r1156, %r1161;
	// end inline asm
	// begin inline asm
	mov.b32 %r1172, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1183, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1171, %r16227, -2004318072;
	// begin inline asm
	lop3.b32 %r1169, %r894, %r1171, %r1172, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1173, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1174, %r1172, %r1173;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1177, %r1169, %r1174;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1180, %r905, %r1171, %r1183, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1184, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1185, %r1183, %r1184;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1188, %r1180, %r1185;
	// end inline asm
	shr.u32 	%r1193, %r1171, 8;
	// begin inline asm
	lop3.b32 %r1191, %r894, %r1193, %r1172, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1195, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1196, %r1172, %r1195;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1199, %r1191, %r1196;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1202, %r905, %r1193, %r1183, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1206, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1207, %r1183, %r1206;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1210, %r1202, %r1207;
	// end inline asm
	// begin inline asm
	mov.b32 %r1218, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1229, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1217, %r16234, -2004318072;
	// begin inline asm
	lop3.b32 %r1215, %r894, %r1217, %r1218, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1219, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1220, %r1218, %r1219;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1223, %r1215, %r1220;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1226, %r905, %r1217, %r1229, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1230, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1231, %r1229, %r1230;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1234, %r1226, %r1231;
	// end inline asm
	shr.u32 	%r1239, %r1217, 8;
	// begin inline asm
	lop3.b32 %r1237, %r894, %r1239, %r1218, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1241, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1242, %r1218, %r1241;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1245, %r1237, %r1242;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1248, %r905, %r1239, %r1229, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1252, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1253, %r1229, %r1252;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1256, %r1248, %r1253;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1259, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1261, %r1259, %r901;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1264, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1266, %r1264, %r912;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1269, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1271, %r1269, %r923;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1274, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1276, %r1274, %r934;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1279, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1281, %r1279, %r947;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1284, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1286, %r1284, %r958;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1289, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1291, %r1289, %r969;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1294, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1296, %r1294, %r980;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1299, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1301, %r1299, %r993;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1304, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1306, %r1304, %r1004;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1309, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1311, %r1309, %r1015;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1314, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1316, %r1314, %r1026;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1319, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1321, %r1319, %r1039;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1324, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1326, %r1324, %r1050;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1329, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1331, %r1329, %r1061;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1334, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1336, %r1334, %r1072;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1339, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1341, %r1339, %r1085;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1344, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1346, %r1344, %r1096;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1349, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1351, %r1349, %r1107;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1354, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1356, %r1354, %r1118;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1359, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1361, %r1359, %r1131;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1364, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1366, %r1364, %r1142;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1369, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1371, %r1369, %r1153;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1374, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1376, %r1374, %r1164;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1379, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1381, %r1379, %r1177;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1384, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1386, %r1384, %r1188;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1389, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1391, %r1389, %r1199;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1394, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1396, %r1394, %r1210;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1399, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1401, %r1399, %r1223;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1404, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1406, %r1404, %r1234;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1409, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1411, %r1409, %r1245;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1414, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1416, %r1414, %r1256;
	// end inline asm
	// begin inline asm
	mov.b32 %r1424, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1435, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1423, %r16395, -2004318072;
	// begin inline asm
	lop3.b32 %r1421, %r894, %r1423, %r1424, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1425, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1426, %r1424, %r1425;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1429, %r1421, %r1426;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1432, %r905, %r1423, %r1435, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1436, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1437, %r1435, %r1436;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1440, %r1432, %r1437;
	// end inline asm
	shr.u32 	%r1445, %r1423, 8;
	// begin inline asm
	lop3.b32 %r1443, %r894, %r1445, %r1424, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1447, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1448, %r1424, %r1447;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1451, %r1443, %r1448;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1454, %r905, %r1445, %r1435, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1458, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1459, %r1435, %r1458;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1462, %r1454, %r1459;
	// end inline asm
	// begin inline asm
	mov.b32 %r1470, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1481, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1469, %r16396, -2004318072;
	// begin inline asm
	lop3.b32 %r1467, %r894, %r1469, %r1470, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1471, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1472, %r1470, %r1471;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1475, %r1467, %r1472;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1478, %r905, %r1469, %r1481, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1482, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1483, %r1481, %r1482;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1486, %r1478, %r1483;
	// end inline asm
	shr.u32 	%r1491, %r1469, 8;
	// begin inline asm
	lop3.b32 %r1489, %r894, %r1491, %r1470, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1493, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1494, %r1470, %r1493;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1497, %r1489, %r1494;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1500, %r905, %r1491, %r1481, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1504, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1505, %r1481, %r1504;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1508, %r1500, %r1505;
	// end inline asm
	// begin inline asm
	mov.b32 %r1516, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1527, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1515, %r16397, -2004318072;
	// begin inline asm
	lop3.b32 %r1513, %r894, %r1515, %r1516, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1517, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1518, %r1516, %r1517;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1521, %r1513, %r1518;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1524, %r905, %r1515, %r1527, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1528, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1529, %r1527, %r1528;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1532, %r1524, %r1529;
	// end inline asm
	shr.u32 	%r1537, %r1515, 8;
	// begin inline asm
	lop3.b32 %r1535, %r894, %r1537, %r1516, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1539, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1540, %r1516, %r1539;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1543, %r1535, %r1540;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1546, %r905, %r1537, %r1527, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1550, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1551, %r1527, %r1550;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1554, %r1546, %r1551;
	// end inline asm
	// begin inline asm
	mov.b32 %r1562, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1573, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1561, %r16398, -2004318072;
	// begin inline asm
	lop3.b32 %r1559, %r894, %r1561, %r1562, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1563, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1564, %r1562, %r1563;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1567, %r1559, %r1564;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1570, %r905, %r1561, %r1573, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1574, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1575, %r1573, %r1574;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1578, %r1570, %r1575;
	// end inline asm
	shr.u32 	%r1583, %r1561, 8;
	// begin inline asm
	lop3.b32 %r1581, %r894, %r1583, %r1562, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1585, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1586, %r1562, %r1585;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1589, %r1581, %r1586;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1592, %r905, %r1583, %r1573, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1596, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1597, %r1573, %r1596;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1600, %r1592, %r1597;
	// end inline asm
	// begin inline asm
	mov.b32 %r1608, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1619, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1607, %r16407, -2004318072;
	// begin inline asm
	lop3.b32 %r1605, %r894, %r1607, %r1608, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1609, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1610, %r1608, %r1609;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1613, %r1605, %r1610;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1616, %r905, %r1607, %r1619, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1620, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1621, %r1619, %r1620;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1624, %r1616, %r1621;
	// end inline asm
	shr.u32 	%r1629, %r1607, 8;
	// begin inline asm
	lop3.b32 %r1627, %r894, %r1629, %r1608, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1631, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1632, %r1608, %r1631;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1635, %r1627, %r1632;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1638, %r905, %r1629, %r1619, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1642, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1643, %r1619, %r1642;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1646, %r1638, %r1643;
	// end inline asm
	// begin inline asm
	mov.b32 %r1654, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1665, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1653, %r16408, -2004318072;
	// begin inline asm
	lop3.b32 %r1651, %r894, %r1653, %r1654, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1655, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1656, %r1654, %r1655;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1659, %r1651, %r1656;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1662, %r905, %r1653, %r1665, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1666, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1667, %r1665, %r1666;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1670, %r1662, %r1667;
	// end inline asm
	shr.u32 	%r1675, %r1653, 8;
	// begin inline asm
	lop3.b32 %r1673, %r894, %r1675, %r1654, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1677, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1678, %r1654, %r1677;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1681, %r1673, %r1678;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1684, %r905, %r1675, %r1665, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1688, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1689, %r1665, %r1688;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1692, %r1684, %r1689;
	// end inline asm
	// begin inline asm
	mov.b32 %r1700, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1711, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1699, %r16409, -2004318072;
	// begin inline asm
	lop3.b32 %r1697, %r894, %r1699, %r1700, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1701, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1702, %r1700, %r1701;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1705, %r1697, %r1702;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1708, %r905, %r1699, %r1711, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1712, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1713, %r1711, %r1712;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1716, %r1708, %r1713;
	// end inline asm
	shr.u32 	%r1721, %r1699, 8;
	// begin inline asm
	lop3.b32 %r1719, %r894, %r1721, %r1700, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1723, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1724, %r1700, %r1723;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1727, %r1719, %r1724;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1730, %r905, %r1721, %r1711, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1734, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1735, %r1711, %r1734;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1738, %r1730, %r1735;
	// end inline asm
	// begin inline asm
	mov.b32 %r1746, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1757, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1745, %r16410, -2004318072;
	// begin inline asm
	lop3.b32 %r1743, %r894, %r1745, %r1746, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1747, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1748, %r1746, %r1747;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1751, %r1743, %r1748;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1754, %r905, %r1745, %r1757, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1758, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1759, %r1757, %r1758;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1762, %r1754, %r1759;
	// end inline asm
	shr.u32 	%r1767, %r1745, 8;
	// begin inline asm
	lop3.b32 %r1765, %r894, %r1767, %r1746, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1769, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1770, %r1746, %r1769;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1773, %r1765, %r1770;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1776, %r905, %r1767, %r1757, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1780, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1781, %r1757, %r1780;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1784, %r1776, %r1781;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1787, %r313, %r1429, %r1261;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1791, %r313, %r1440, %r1266;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1795, %r313, %r1451, %r1271;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1799, %r313, %r1462, %r1276;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1803, %r313, %r1475, %r1281;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1807, %r313, %r1486, %r1286;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1811, %r313, %r1497, %r1291;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1815, %r313, %r1508, %r1296;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1819, %r313, %r1521, %r1301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1823, %r313, %r1532, %r1306;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1827, %r313, %r1543, %r1311;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1831, %r313, %r1554, %r1316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1835, %r313, %r1567, %r1321;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1839, %r313, %r1578, %r1326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1843, %r313, %r1589, %r1331;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1847, %r313, %r1600, %r1336;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1851, %r331, %r1613, %r1341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1855, %r331, %r1624, %r1346;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1859, %r331, %r1635, %r1351;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1863, %r331, %r1646, %r1356;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1867, %r331, %r1659, %r1361;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1871, %r331, %r1670, %r1366;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1875, %r331, %r1681, %r1371;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1879, %r331, %r1692, %r1376;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1883, %r331, %r1705, %r1381;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1887, %r331, %r1716, %r1386;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1891, %r331, %r1727, %r1391;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1895, %r331, %r1738, %r1396;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1899, %r331, %r1751, %r1401;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1903, %r331, %r1762, %r1406;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1907, %r331, %r1773, %r1411;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1911, %r331, %r1784, %r1416;
	// end inline asm
	// begin inline asm
	mov.b32 %r1920, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1931, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1919, %r16399, -2004318072;
	// begin inline asm
	lop3.b32 %r1917, %r894, %r1919, %r1920, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1921, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1922, %r1920, %r1921;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1925, %r1917, %r1922;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1928, %r905, %r1919, %r1931, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1932, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1933, %r1931, %r1932;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1936, %r1928, %r1933;
	// end inline asm
	shr.u32 	%r1941, %r1919, 8;
	// begin inline asm
	lop3.b32 %r1939, %r894, %r1941, %r1920, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1943, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1944, %r1920, %r1943;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1947, %r1939, %r1944;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1950, %r905, %r1941, %r1931, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1954, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1955, %r1931, %r1954;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1958, %r1950, %r1955;
	// end inline asm
	// begin inline asm
	mov.b32 %r1966, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1977, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1965, %r16400, -2004318072;
	// begin inline asm
	lop3.b32 %r1963, %r894, %r1965, %r1966, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1967, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1968, %r1966, %r1967;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1971, %r1963, %r1968;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1974, %r905, %r1965, %r1977, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1978, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1979, %r1977, %r1978;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1982, %r1974, %r1979;
	// end inline asm
	shr.u32 	%r1987, %r1965, 8;
	// begin inline asm
	lop3.b32 %r1985, %r894, %r1987, %r1966, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1989, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1990, %r1966, %r1989;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1993, %r1985, %r1990;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1996, %r905, %r1987, %r1977, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2000, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2001, %r1977, %r2000;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2004, %r1996, %r2001;
	// end inline asm
	// begin inline asm
	mov.b32 %r2012, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2023, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2011, %r16401, -2004318072;
	// begin inline asm
	lop3.b32 %r2009, %r894, %r2011, %r2012, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2013, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2014, %r2012, %r2013;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2017, %r2009, %r2014;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2020, %r905, %r2011, %r2023, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2024, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2025, %r2023, %r2024;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2028, %r2020, %r2025;
	// end inline asm
	shr.u32 	%r2033, %r2011, 8;
	// begin inline asm
	lop3.b32 %r2031, %r894, %r2033, %r2012, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2035, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2036, %r2012, %r2035;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2039, %r2031, %r2036;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2042, %r905, %r2033, %r2023, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2046, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2047, %r2023, %r2046;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2050, %r2042, %r2047;
	// end inline asm
	// begin inline asm
	mov.b32 %r2058, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2069, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2057, %r16402, -2004318072;
	// begin inline asm
	lop3.b32 %r2055, %r894, %r2057, %r2058, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2059, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2060, %r2058, %r2059;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2063, %r2055, %r2060;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2066, %r905, %r2057, %r2069, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2070, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2071, %r2069, %r2070;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2074, %r2066, %r2071;
	// end inline asm
	shr.u32 	%r2079, %r2057, 8;
	// begin inline asm
	lop3.b32 %r2077, %r894, %r2079, %r2058, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2081, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2082, %r2058, %r2081;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2085, %r2077, %r2082;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2088, %r905, %r2079, %r2069, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2092, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2093, %r2069, %r2092;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2096, %r2088, %r2093;
	// end inline asm
	// begin inline asm
	mov.b32 %r2104, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2115, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2103, %r16411, -2004318072;
	// begin inline asm
	lop3.b32 %r2101, %r894, %r2103, %r2104, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2105, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2106, %r2104, %r2105;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2109, %r2101, %r2106;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2112, %r905, %r2103, %r2115, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2116, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2117, %r2115, %r2116;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2120, %r2112, %r2117;
	// end inline asm
	shr.u32 	%r2125, %r2103, 8;
	// begin inline asm
	lop3.b32 %r2123, %r894, %r2125, %r2104, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2127, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2128, %r2104, %r2127;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2131, %r2123, %r2128;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2134, %r905, %r2125, %r2115, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2138, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2139, %r2115, %r2138;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2142, %r2134, %r2139;
	// end inline asm
	// begin inline asm
	mov.b32 %r2150, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2161, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2149, %r16412, -2004318072;
	// begin inline asm
	lop3.b32 %r2147, %r894, %r2149, %r2150, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2151, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2152, %r2150, %r2151;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2155, %r2147, %r2152;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2158, %r905, %r2149, %r2161, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2162, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2163, %r2161, %r2162;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2166, %r2158, %r2163;
	// end inline asm
	shr.u32 	%r2171, %r2149, 8;
	// begin inline asm
	lop3.b32 %r2169, %r894, %r2171, %r2150, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2173, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2174, %r2150, %r2173;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2177, %r2169, %r2174;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2180, %r905, %r2171, %r2161, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2184, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2185, %r2161, %r2184;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2188, %r2180, %r2185;
	// end inline asm
	// begin inline asm
	mov.b32 %r2196, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2207, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2195, %r16413, -2004318072;
	// begin inline asm
	lop3.b32 %r2193, %r894, %r2195, %r2196, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2197, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2198, %r2196, %r2197;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2201, %r2193, %r2198;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2204, %r905, %r2195, %r2207, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2208, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2209, %r2207, %r2208;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2212, %r2204, %r2209;
	// end inline asm
	shr.u32 	%r2217, %r2195, 8;
	// begin inline asm
	lop3.b32 %r2215, %r894, %r2217, %r2196, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2219, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2220, %r2196, %r2219;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2223, %r2215, %r2220;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2226, %r905, %r2217, %r2207, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2230, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2231, %r2207, %r2230;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2234, %r2226, %r2231;
	// end inline asm
	// begin inline asm
	mov.b32 %r2242, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2253, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2241, %r16414, -2004318072;
	// begin inline asm
	lop3.b32 %r2239, %r894, %r2241, %r2242, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2243, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2244, %r2242, %r2243;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2247, %r2239, %r2244;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2250, %r905, %r2241, %r2253, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2254, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2255, %r2253, %r2254;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2258, %r2250, %r2255;
	// end inline asm
	shr.u32 	%r2263, %r2241, 8;
	// begin inline asm
	lop3.b32 %r2261, %r894, %r2263, %r2242, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2265, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2266, %r2242, %r2265;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2269, %r2261, %r2266;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2272, %r905, %r2263, %r2253, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2276, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2277, %r2253, %r2276;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2280, %r2272, %r2277;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2283, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2285, %r2283, %r1925, %r1787;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2289, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2291, %r2289, %r1936, %r1791;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2295, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2297, %r2295, %r1947, %r1795;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2301, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2303, %r2301, %r1958, %r1799;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2307, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2309, %r2307, %r1971, %r1803;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2313, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2315, %r2313, %r1982, %r1807;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2319, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2321, %r2319, %r1993, %r1811;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2325, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2327, %r2325, %r2004, %r1815;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2331, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2333, %r2331, %r2017, %r1819;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2337, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2339, %r2337, %r2028, %r1823;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2343, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2345, %r2343, %r2039, %r1827;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2349, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2351, %r2349, %r2050, %r1831;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2355, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2357, %r2355, %r2063, %r1835;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2361, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2363, %r2361, %r2074, %r1839;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2367, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2369, %r2367, %r2085, %r1843;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2373, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2375, %r2373, %r2096, %r1847;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2379, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2381, %r2379, %r2109, %r1851;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2385, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2387, %r2385, %r2120, %r1855;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2391, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2393, %r2391, %r2131, %r1859;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2397, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2399, %r2397, %r2142, %r1863;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2403, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2405, %r2403, %r2155, %r1867;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2409, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2411, %r2409, %r2166, %r1871;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2415, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2417, %r2415, %r2177, %r1875;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2421, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2423, %r2421, %r2188, %r1879;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2427, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2429, %r2427, %r2201, %r1883;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2433, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2435, %r2433, %r2212, %r1887;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2439, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2441, %r2439, %r2223, %r1891;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2445, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2447, %r2445, %r2234, %r1895;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2451, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2453, %r2451, %r2247, %r1899;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2457, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2459, %r2457, %r2258, %r1903;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2463, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2465, %r2463, %r2269, %r1907;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2469, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2471, %r2469, %r2280, %r1911;
	// end inline asm
	// begin inline asm
	mov.b32 %r2480, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2491, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2479, %r16403, -2004318072;
	// begin inline asm
	lop3.b32 %r2477, %r894, %r2479, %r2480, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2481, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2482, %r2480, %r2481;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2485, %r2477, %r2482;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2488, %r905, %r2479, %r2491, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2492, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2493, %r2491, %r2492;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2496, %r2488, %r2493;
	// end inline asm
	shr.u32 	%r2501, %r2479, 8;
	// begin inline asm
	lop3.b32 %r2499, %r894, %r2501, %r2480, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2503, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2504, %r2480, %r2503;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2507, %r2499, %r2504;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2510, %r905, %r2501, %r2491, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2514, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2515, %r2491, %r2514;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2518, %r2510, %r2515;
	// end inline asm
	// begin inline asm
	mov.b32 %r2526, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2537, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2525, %r16404, -2004318072;
	// begin inline asm
	lop3.b32 %r2523, %r894, %r2525, %r2526, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2527, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2528, %r2526, %r2527;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2531, %r2523, %r2528;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2534, %r905, %r2525, %r2537, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2538, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2539, %r2537, %r2538;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2542, %r2534, %r2539;
	// end inline asm
	shr.u32 	%r2547, %r2525, 8;
	// begin inline asm
	lop3.b32 %r2545, %r894, %r2547, %r2526, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2549, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2550, %r2526, %r2549;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2553, %r2545, %r2550;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2556, %r905, %r2547, %r2537, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2560, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2561, %r2537, %r2560;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2564, %r2556, %r2561;
	// end inline asm
	// begin inline asm
	mov.b32 %r2572, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2583, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2571, %r16405, -2004318072;
	// begin inline asm
	lop3.b32 %r2569, %r894, %r2571, %r2572, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2573, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2574, %r2572, %r2573;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2577, %r2569, %r2574;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2580, %r905, %r2571, %r2583, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2584, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2585, %r2583, %r2584;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2588, %r2580, %r2585;
	// end inline asm
	shr.u32 	%r2593, %r2571, 8;
	// begin inline asm
	lop3.b32 %r2591, %r894, %r2593, %r2572, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2595, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2596, %r2572, %r2595;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2599, %r2591, %r2596;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2602, %r905, %r2593, %r2583, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2606, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2607, %r2583, %r2606;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2610, %r2602, %r2607;
	// end inline asm
	// begin inline asm
	mov.b32 %r2618, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2629, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2617, %r16406, -2004318072;
	// begin inline asm
	lop3.b32 %r2615, %r894, %r2617, %r2618, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2619, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2620, %r2618, %r2619;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2623, %r2615, %r2620;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2626, %r905, %r2617, %r2629, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2630, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2631, %r2629, %r2630;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2634, %r2626, %r2631;
	// end inline asm
	shr.u32 	%r2639, %r2617, 8;
	// begin inline asm
	lop3.b32 %r2637, %r894, %r2639, %r2618, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2641, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2642, %r2618, %r2641;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2645, %r2637, %r2642;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2648, %r905, %r2639, %r2629, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2652, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2653, %r2629, %r2652;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2656, %r2648, %r2653;
	// end inline asm
	// begin inline asm
	mov.b32 %r2664, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2675, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2663, %r16415, -2004318072;
	// begin inline asm
	lop3.b32 %r2661, %r894, %r2663, %r2664, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2665, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2666, %r2664, %r2665;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2669, %r2661, %r2666;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2672, %r905, %r2663, %r2675, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2676, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2677, %r2675, %r2676;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2680, %r2672, %r2677;
	// end inline asm
	shr.u32 	%r2685, %r2663, 8;
	// begin inline asm
	lop3.b32 %r2683, %r894, %r2685, %r2664, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2687, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2688, %r2664, %r2687;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2691, %r2683, %r2688;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2694, %r905, %r2685, %r2675, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2698, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2699, %r2675, %r2698;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2702, %r2694, %r2699;
	// end inline asm
	// begin inline asm
	mov.b32 %r2710, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2721, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2709, %r16416, -2004318072;
	// begin inline asm
	lop3.b32 %r2707, %r894, %r2709, %r2710, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2711, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2712, %r2710, %r2711;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2715, %r2707, %r2712;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2718, %r905, %r2709, %r2721, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2722, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2723, %r2721, %r2722;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2726, %r2718, %r2723;
	// end inline asm
	shr.u32 	%r2731, %r2709, 8;
	// begin inline asm
	lop3.b32 %r2729, %r894, %r2731, %r2710, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2733, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2734, %r2710, %r2733;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2737, %r2729, %r2734;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2740, %r905, %r2731, %r2721, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2744, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2745, %r2721, %r2744;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2748, %r2740, %r2745;
	// end inline asm
	// begin inline asm
	mov.b32 %r2756, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2767, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2755, %r16417, -2004318072;
	// begin inline asm
	lop3.b32 %r2753, %r894, %r2755, %r2756, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2757, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2758, %r2756, %r2757;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2761, %r2753, %r2758;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2764, %r905, %r2755, %r2767, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2768, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2769, %r2767, %r2768;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2772, %r2764, %r2769;
	// end inline asm
	shr.u32 	%r2777, %r2755, 8;
	// begin inline asm
	lop3.b32 %r2775, %r894, %r2777, %r2756, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2779, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2780, %r2756, %r2779;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2783, %r2775, %r2780;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2786, %r905, %r2777, %r2767, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2790, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2791, %r2767, %r2790;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2794, %r2786, %r2791;
	// end inline asm
	// begin inline asm
	mov.b32 %r2802, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2813, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2801, %r16418, -2004318072;
	// begin inline asm
	lop3.b32 %r2799, %r894, %r2801, %r2802, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2803, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2804, %r2802, %r2803;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2807, %r2799, %r2804;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2810, %r905, %r2801, %r2813, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2814, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2815, %r2813, %r2814;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2818, %r2810, %r2815;
	// end inline asm
	shr.u32 	%r2823, %r2801, 8;
	// begin inline asm
	lop3.b32 %r2821, %r894, %r2823, %r2802, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2825, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2826, %r2802, %r2825;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2829, %r2821, %r2826;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2832, %r905, %r2823, %r2813, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2836, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2837, %r2813, %r2836;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2840, %r2832, %r2837;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2978, %r385, %r2485, %r2285;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2975, %r385, %r2496, %r2291;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2987, %r385, %r2507, %r2297;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2984, %r385, %r2518, %r2303;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2996, %r385, %r2531, %r2309;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2993, %r385, %r2542, %r2315;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3005, %r385, %r2553, %r2321;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3002, %r385, %r2564, %r2327;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3014, %r385, %r2577, %r2333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3011, %r385, %r2588, %r2339;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3023, %r385, %r2599, %r2345;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3020, %r385, %r2610, %r2351;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3032, %r385, %r2623, %r2357;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3029, %r385, %r2634, %r2363;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3041, %r385, %r2645, %r2369;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3038, %r385, %r2656, %r2375;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3050, %r403, %r2669, %r2381;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3047, %r403, %r2680, %r2387;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3059, %r403, %r2691, %r2393;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3056, %r403, %r2702, %r2399;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3068, %r403, %r2715, %r2405;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3065, %r403, %r2726, %r2411;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3077, %r403, %r2737, %r2417;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3074, %r403, %r2748, %r2423;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3086, %r403, %r2761, %r2429;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3083, %r403, %r2772, %r2435;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3095, %r403, %r2783, %r2441;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3092, %r403, %r2794, %r2447;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3104, %r403, %r2807, %r2453;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3101, %r403, %r2818, %r2459;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3113, %r403, %r2829, %r2465;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3110, %r403, %r2840, %r2471;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2971, %r473;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2973, %r2971, %r2975;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2976, %r467, %r2978, %r2973;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2980, %r473;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2982, %r2980, %r2984;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2985, %r467, %r2987, %r2982;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2989, %r473;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2991, %r2989, %r2993;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2994, %r467, %r2996, %r2991;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2998, %r473;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3000, %r2998, %r3002;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3003, %r467, %r3005, %r3000;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3007, %r473;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3009, %r3007, %r3011;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3012, %r467, %r3014, %r3009;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3016, %r473;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3018, %r3016, %r3020;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3021, %r467, %r3023, %r3018;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3025, %r473;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3027, %r3025, %r3029;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3030, %r467, %r3032, %r3027;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3034, %r473;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3036, %r3034, %r3038;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3039, %r467, %r3041, %r3036;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3043, %r476;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3045, %r3043, %r3047;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3048, %r470, %r3050, %r3045;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3052, %r476;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3054, %r3052, %r3056;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3057, %r470, %r3059, %r3054;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3061, %r476;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3063, %r3061, %r3065;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3066, %r470, %r3068, %r3063;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3070, %r476;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3072, %r3070, %r3074;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3075, %r470, %r3077, %r3072;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3079, %r476;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3081, %r3079, %r3083;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3084, %r470, %r3086, %r3081;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3088, %r476;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3090, %r3088, %r3092;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3093, %r470, %r3095, %r3090;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3097, %r476;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3099, %r3097, %r3101;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3102, %r470, %r3104, %r3099;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3106, %r476;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3108, %r3106, %r3110;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3111, %r470, %r3113, %r3108;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3115, %r473, %r2978;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3118, %r467, %r2975, %r3115;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3122, %r473, %r2987;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3125, %r467, %r2984, %r3122;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3129, %r473, %r2996;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3132, %r467, %r2993, %r3129;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3136, %r473, %r3005;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3139, %r467, %r3002, %r3136;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3143, %r473, %r3014;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3146, %r467, %r3011, %r3143;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3150, %r473, %r3023;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3153, %r467, %r3020, %r3150;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3157, %r473, %r3032;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3160, %r467, %r3029, %r3157;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3164, %r473, %r3041;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3167, %r467, %r3038, %r3164;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3171, %r476, %r3050;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3174, %r470, %r3047, %r3171;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3178, %r476, %r3059;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3181, %r470, %r3056, %r3178;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3185, %r476, %r3068;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3188, %r470, %r3065, %r3185;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3192, %r476, %r3077;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3195, %r470, %r3074, %r3192;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3199, %r476, %r3086;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3202, %r470, %r3083, %r3199;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3206, %r476, %r3095;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3209, %r470, %r3092, %r3206;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3213, %r476, %r3104;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3216, %r470, %r3101, %r3213;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3220, %r476, %r3113;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3223, %r470, %r3110, %r3220;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3394, %r3391}, {%r522, %r528, %r525, %r531}, {%r2976, %r3118}, {%r808, %r808};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3403, %r3400}, {%r522, %r528, %r525, %r531}, {%r2985, %r3125}, {%r808, %r808};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3412, %r3409}, {%r522, %r528, %r525, %r531}, {%r2994, %r3132}, {%r808, %r808};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3421, %r3418}, {%r522, %r528, %r525, %r531}, {%r3003, %r3139}, {%r808, %r808};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3430, %r3427}, {%r522, %r528, %r525, %r531}, {%r3012, %r3146}, {%r808, %r808};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3439, %r3436}, {%r522, %r528, %r525, %r531}, {%r3021, %r3153}, {%r808, %r808};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3448, %r3445}, {%r522, %r528, %r525, %r531}, {%r3030, %r3160}, {%r808, %r808};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3457, %r3454}, {%r522, %r528, %r525, %r531}, {%r3039, %r3167}, {%r808, %r808};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3466, %r3463}, {%r522, %r528, %r525, %r531}, {%r3048, %r3174}, {%r808, %r808};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3475, %r3472}, {%r522, %r528, %r525, %r531}, {%r3057, %r3181}, {%r808, %r808};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3484, %r3481}, {%r522, %r528, %r525, %r531}, {%r3066, %r3188}, {%r808, %r808};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3493, %r3490}, {%r522, %r528, %r525, %r531}, {%r3075, %r3195}, {%r808, %r808};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3502, %r3499}, {%r522, %r528, %r525, %r531}, {%r3084, %r3202}, {%r808, %r808};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3511, %r3508}, {%r522, %r528, %r525, %r531}, {%r3093, %r3209}, {%r808, %r808};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3520, %r3517}, {%r522, %r528, %r525, %r531}, {%r3102, %r3216}, {%r808, %r808};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3529, %r3526}, {%r522, %r528, %r525, %r531}, {%r3111, %r3223}, {%r808, %r808};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3387, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3389, %r3387, %r3391;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3392, %r572, %r3394, %r3389;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3396, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3398, %r3396, %r3400;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3401, %r572, %r3403, %r3398;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3405, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3407, %r3405, %r3409;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3410, %r572, %r3412, %r3407;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3414, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3416, %r3414, %r3418;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3419, %r572, %r3421, %r3416;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3423, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3425, %r3423, %r3427;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3428, %r572, %r3430, %r3425;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3432, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3434, %r3432, %r3436;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3437, %r572, %r3439, %r3434;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3441, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3443, %r3441, %r3445;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3446, %r572, %r3448, %r3443;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3450, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3452, %r3450, %r3454;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3455, %r572, %r3457, %r3452;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3459, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3461, %r3459, %r3463;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3464, %r572, %r3466, %r3461;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3468, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3470, %r3468, %r3472;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3473, %r572, %r3475, %r3470;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3477, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3479, %r3477, %r3481;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3482, %r572, %r3484, %r3479;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3486, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3488, %r3486, %r3490;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3491, %r572, %r3493, %r3488;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3495, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3497, %r3495, %r3499;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3500, %r572, %r3502, %r3497;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3504, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3506, %r3504, %r3508;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3509, %r572, %r3511, %r3506;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3513, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3515, %r3513, %r3517;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3518, %r572, %r3520, %r3515;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3522, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3524, %r3522, %r3526;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3527, %r572, %r3529, %r3524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3531, %r575, %r3394;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3534, %r572, %r3391, %r3531;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3538, %r575, %r3403;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3541, %r572, %r3400, %r3538;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3545, %r575, %r3412;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3548, %r572, %r3409, %r3545;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3552, %r575, %r3421;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3555, %r572, %r3418, %r3552;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3559, %r575, %r3430;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3562, %r572, %r3427, %r3559;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3566, %r575, %r3439;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3569, %r572, %r3436, %r3566;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3573, %r575, %r3448;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3576, %r572, %r3445, %r3573;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3580, %r575, %r3457;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3583, %r572, %r3454, %r3580;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3587, %r575, %r3466;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3590, %r572, %r3463, %r3587;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3594, %r575, %r3475;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3597, %r572, %r3472, %r3594;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3601, %r575, %r3484;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3604, %r572, %r3481, %r3601;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3608, %r575, %r3493;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3611, %r572, %r3490, %r3608;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3615, %r575, %r3502;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3618, %r572, %r3499, %r3615;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3622, %r575, %r3511;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3625, %r572, %r3508, %r3622;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3629, %r575, %r3520;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3632, %r572, %r3517, %r3629;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3636, %r575, %r3529;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3639, %r572, %r3526, %r3636;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3932, %r3935}, {%r610, %r616, %r613, %r619}, {%r3392, %r3534}, {%r808, %r808};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3938, %r3941}, {%r610, %r616, %r613, %r619}, {%r3401, %r3541}, {%r808, %r808};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3944, %r3947}, {%r610, %r616, %r613, %r619}, {%r3410, %r3548}, {%r808, %r808};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3950, %r3953}, {%r610, %r616, %r613, %r619}, {%r3419, %r3555}, {%r808, %r808};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3956, %r3959}, {%r610, %r616, %r613, %r619}, {%r3428, %r3562}, {%r808, %r808};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3962, %r3965}, {%r610, %r616, %r613, %r619}, {%r3437, %r3569}, {%r808, %r808};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3968, %r3971}, {%r610, %r616, %r613, %r619}, {%r3446, %r3576}, {%r808, %r808};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3974, %r3977}, {%r610, %r616, %r613, %r619}, {%r3455, %r3583}, {%r808, %r808};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3933, %r3936}, {%r610, %r616, %r613, %r619}, {%r3464, %r3590}, {%r808, %r808};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3939, %r3942}, {%r610, %r616, %r613, %r619}, {%r3473, %r3597}, {%r808, %r808};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3945, %r3948}, {%r610, %r616, %r613, %r619}, {%r3482, %r3604}, {%r808, %r808};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3951, %r3954}, {%r610, %r616, %r613, %r619}, {%r3491, %r3611}, {%r808, %r808};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3957, %r3960}, {%r610, %r616, %r613, %r619}, {%r3500, %r3618}, {%r808, %r808};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3963, %r3966}, {%r610, %r616, %r613, %r619}, {%r3509, %r3625}, {%r808, %r808};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3969, %r3972}, {%r610, %r616, %r613, %r619}, {%r3518, %r3632}, {%r808, %r808};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3975, %r3978}, {%r610, %r616, %r613, %r619}, {%r3527, %r3639}, {%r808, %r808};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3931, %r3932, %r3933;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3934, %r3935, %r3936;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3937, %r3938, %r3939;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3940, %r3941, %r3942;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3943, %r3944, %r3945;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3946, %r3947, %r3948;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3949, %r3950, %r3951;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3952, %r3953, %r3954;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3955, %r3956, %r3957;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3958, %r3959, %r3960;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3961, %r3962, %r3963;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3964, %r3965, %r3966;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3967, %r3968, %r3969;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3970, %r3971, %r3972;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3973, %r3974, %r3975;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3976, %r3977, %r3978;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3979, %r3932, %r3933;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3982, %r3935, %r3936;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3985, %r3938, %r3939;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3988, %r3941, %r3942;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3991, %r3944, %r3945;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3994, %r3947, %r3948;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3997, %r3950, %r3951;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4000, %r3953, %r3954;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4003, %r3956, %r3957;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4006, %r3959, %r3960;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4009, %r3962, %r3963;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4012, %r3965, %r3966;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4015, %r3968, %r3969;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4018, %r3971, %r3972;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4021, %r3974, %r3975;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4024, %r3977, %r3978;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4027, %r234, %r3931;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4030, %r234, %r3934;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4033, %r234, %r3937;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4036, %r234, %r3940;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4039, %r234, %r3943;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4042, %r234, %r3946;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4045, %r234, %r3949;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4048, %r234, %r3952;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4051, %r234, %r3955;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4054, %r234, %r3958;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4057, %r234, %r3961;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4060, %r234, %r3964;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4063, %r234, %r3967;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4066, %r234, %r3970;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4069, %r234, %r3973;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4072, %r234, %r3976;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4075, %r236, %r3979;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4078, %r236, %r3982;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4081, %r236, %r3985;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4084, %r236, %r3988;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4087, %r236, %r3991;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4090, %r236, %r3994;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4093, %r236, %r3997;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4096, %r236, %r4000;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4099, %r236, %r4003;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4102, %r236, %r4006;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4105, %r236, %r4009;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4108, %r236, %r4012;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4111, %r236, %r4015;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4114, %r236, %r4018;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4117, %r236, %r4021;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4120, %r236, %r4024;
	// end inline asm
	// begin inline asm
	mov.b32 %r4123, {%rs2307, %rs2307};
	// end inline asm
	mov.u16 	%rs408, 18176;
	// begin inline asm
	mov.b32 %r4124, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4125, %r4027, %r4123;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4128, %r4125, %r4124;
	// end inline asm
	// begin inline asm
	mov.b32 %r4131, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4132, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4133, %r4030, %r4131;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4136, %r4133, %r4132;
	// end inline asm
	// begin inline asm
	mov.b32 %r4139, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4140, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4141, %r4033, %r4139;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4144, %r4141, %r4140;
	// end inline asm
	// begin inline asm
	mov.b32 %r4147, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4148, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4149, %r4036, %r4147;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4152, %r4149, %r4148;
	// end inline asm
	// begin inline asm
	mov.b32 %r4155, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4156, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4157, %r4039, %r4155;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4160, %r4157, %r4156;
	// end inline asm
	// begin inline asm
	mov.b32 %r4163, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4164, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4165, %r4042, %r4163;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4168, %r4165, %r4164;
	// end inline asm
	// begin inline asm
	mov.b32 %r4171, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4172, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4173, %r4045, %r4171;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4176, %r4173, %r4172;
	// end inline asm
	// begin inline asm
	mov.b32 %r4179, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4180, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4181, %r4048, %r4179;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4184, %r4181, %r4180;
	// end inline asm
	// begin inline asm
	mov.b32 %r4187, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4188, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4189, %r4051, %r4187;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4192, %r4189, %r4188;
	// end inline asm
	// begin inline asm
	mov.b32 %r4195, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4196, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4197, %r4054, %r4195;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4200, %r4197, %r4196;
	// end inline asm
	// begin inline asm
	mov.b32 %r4203, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4204, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4205, %r4057, %r4203;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4208, %r4205, %r4204;
	// end inline asm
	// begin inline asm
	mov.b32 %r4211, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4212, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4213, %r4060, %r4211;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4216, %r4213, %r4212;
	// end inline asm
	// begin inline asm
	mov.b32 %r4219, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4220, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4221, %r4063, %r4219;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4224, %r4221, %r4220;
	// end inline asm
	// begin inline asm
	mov.b32 %r4227, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4228, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4229, %r4066, %r4227;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4232, %r4229, %r4228;
	// end inline asm
	// begin inline asm
	mov.b32 %r4235, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4236, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4237, %r4069, %r4235;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4240, %r4237, %r4236;
	// end inline asm
	// begin inline asm
	mov.b32 %r4243, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4244, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4245, %r4072, %r4243;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4248, %r4245, %r4244;
	// end inline asm
	// begin inline asm
	mov.b32 %r4251, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4252, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4253, %r4075, %r4251;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4256, %r4253, %r4252;
	// end inline asm
	// begin inline asm
	mov.b32 %r4259, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4260, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4261, %r4078, %r4259;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4264, %r4261, %r4260;
	// end inline asm
	// begin inline asm
	mov.b32 %r4267, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4268, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4269, %r4081, %r4267;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4272, %r4269, %r4268;
	// end inline asm
	// begin inline asm
	mov.b32 %r4275, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4276, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4277, %r4084, %r4275;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4280, %r4277, %r4276;
	// end inline asm
	// begin inline asm
	mov.b32 %r4283, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4284, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4285, %r4087, %r4283;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4288, %r4285, %r4284;
	// end inline asm
	// begin inline asm
	mov.b32 %r4291, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4292, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4293, %r4090, %r4291;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4296, %r4293, %r4292;
	// end inline asm
	// begin inline asm
	mov.b32 %r4299, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4300, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4301, %r4093, %r4299;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4304, %r4301, %r4300;
	// end inline asm
	// begin inline asm
	mov.b32 %r4307, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4308, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4309, %r4096, %r4307;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4312, %r4309, %r4308;
	// end inline asm
	// begin inline asm
	mov.b32 %r4315, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4316, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4317, %r4099, %r4315;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4320, %r4317, %r4316;
	// end inline asm
	// begin inline asm
	mov.b32 %r4323, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4324, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4325, %r4102, %r4323;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4328, %r4325, %r4324;
	// end inline asm
	// begin inline asm
	mov.b32 %r4331, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4332, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4333, %r4105, %r4331;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4336, %r4333, %r4332;
	// end inline asm
	// begin inline asm
	mov.b32 %r4339, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4340, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4341, %r4108, %r4339;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4344, %r4341, %r4340;
	// end inline asm
	// begin inline asm
	mov.b32 %r4347, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4348, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4349, %r4111, %r4347;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4352, %r4349, %r4348;
	// end inline asm
	// begin inline asm
	mov.b32 %r4355, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4356, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4357, %r4114, %r4355;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4360, %r4357, %r4356;
	// end inline asm
	// begin inline asm
	mov.b32 %r4363, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4364, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4365, %r4117, %r4363;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4368, %r4365, %r4364;
	// end inline asm
	// begin inline asm
	mov.b32 %r4371, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4372, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4373, %r4120, %r4371;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4376, %r4373, %r4372;
	// end inline asm
	// begin inline asm
	mov.b32 %r4382, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4380, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4381, %r4382, %r4380;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4384, %r4128, %r4381;
	// end inline asm
	// begin inline asm
	mov.b32 %r4387, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4388, %r4382, %r4387;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4391, %r4136, %r4388;
	// end inline asm
	// begin inline asm
	mov.b32 %r4394, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4395, %r4382, %r4394;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4398, %r4144, %r4395;
	// end inline asm
	// begin inline asm
	mov.b32 %r4401, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4402, %r4382, %r4401;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4405, %r4152, %r4402;
	// end inline asm
	mov.u32 	%r4411, 25152;
	// begin inline asm
	prmt.b32 %r4408, %r4384, %r4398, %r4411;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4412, %r4391, %r4405, %r4411;
	// end inline asm
	shl.b32 	%r4419, %r4412, 4;
	mov.u32 	%r4417, 252645135;
	// begin inline asm
	lop3.b32 %r4416, %r4417, %r4408, %r4419, 202;
	// end inline asm
	xor.b32  	%r16235, %r4416, -2004318072;
	// begin inline asm
	mov.b32 %r4423, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4421, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4422, %r4423, %r4421;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4425, %r4160, %r4422;
	// end inline asm
	// begin inline asm
	mov.b32 %r4428, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4429, %r4423, %r4428;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4432, %r4168, %r4429;
	// end inline asm
	// begin inline asm
	mov.b32 %r4435, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4436, %r4423, %r4435;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4439, %r4176, %r4436;
	// end inline asm
	// begin inline asm
	mov.b32 %r4442, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4443, %r4423, %r4442;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4446, %r4184, %r4443;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4449, %r4425, %r4439, %r4411;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4453, %r4432, %r4446, %r4411;
	// end inline asm
	shl.b32 	%r4460, %r4453, 4;
	// begin inline asm
	lop3.b32 %r4457, %r4417, %r4449, %r4460, 202;
	// end inline asm
	xor.b32  	%r16236, %r4457, -2004318072;
	// begin inline asm
	mov.b32 %r4464, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4462, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4463, %r4464, %r4462;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4466, %r4192, %r4463;
	// end inline asm
	// begin inline asm
	mov.b32 %r4469, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4470, %r4464, %r4469;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4473, %r4200, %r4470;
	// end inline asm
	// begin inline asm
	mov.b32 %r4476, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4477, %r4464, %r4476;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4480, %r4208, %r4477;
	// end inline asm
	// begin inline asm
	mov.b32 %r4483, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4484, %r4464, %r4483;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4487, %r4216, %r4484;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4490, %r4466, %r4480, %r4411;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4494, %r4473, %r4487, %r4411;
	// end inline asm
	shl.b32 	%r4501, %r4494, 4;
	// begin inline asm
	lop3.b32 %r4498, %r4417, %r4490, %r4501, 202;
	// end inline asm
	xor.b32  	%r16237, %r4498, -2004318072;
	// begin inline asm
	mov.b32 %r4505, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4503, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4504, %r4505, %r4503;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4507, %r4224, %r4504;
	// end inline asm
	// begin inline asm
	mov.b32 %r4510, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4511, %r4505, %r4510;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4514, %r4232, %r4511;
	// end inline asm
	// begin inline asm
	mov.b32 %r4517, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4518, %r4505, %r4517;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4521, %r4240, %r4518;
	// end inline asm
	// begin inline asm
	mov.b32 %r4524, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4525, %r4505, %r4524;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4528, %r4248, %r4525;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4531, %r4507, %r4521, %r4411;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4535, %r4514, %r4528, %r4411;
	// end inline asm
	shl.b32 	%r4542, %r4535, 4;
	// begin inline asm
	lop3.b32 %r4539, %r4417, %r4531, %r4542, 202;
	// end inline asm
	xor.b32  	%r16238, %r4539, -2004318072;
	// begin inline asm
	mov.b32 %r4546, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4544, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4545, %r4546, %r4544;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4548, %r4256, %r4545;
	// end inline asm
	// begin inline asm
	mov.b32 %r4551, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4552, %r4546, %r4551;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4555, %r4264, %r4552;
	// end inline asm
	// begin inline asm
	mov.b32 %r4558, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4559, %r4546, %r4558;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4562, %r4272, %r4559;
	// end inline asm
	// begin inline asm
	mov.b32 %r4565, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4566, %r4546, %r4565;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4569, %r4280, %r4566;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4572, %r4548, %r4562, %r4411;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4576, %r4555, %r4569, %r4411;
	// end inline asm
	shl.b32 	%r4583, %r4576, 4;
	// begin inline asm
	lop3.b32 %r4580, %r4417, %r4572, %r4583, 202;
	// end inline asm
	xor.b32  	%r16239, %r4580, -2004318072;
	// begin inline asm
	mov.b32 %r4587, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4585, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4586, %r4587, %r4585;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4589, %r4288, %r4586;
	// end inline asm
	// begin inline asm
	mov.b32 %r4592, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4593, %r4587, %r4592;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4596, %r4296, %r4593;
	// end inline asm
	// begin inline asm
	mov.b32 %r4599, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4600, %r4587, %r4599;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4603, %r4304, %r4600;
	// end inline asm
	// begin inline asm
	mov.b32 %r4606, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4607, %r4587, %r4606;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4610, %r4312, %r4607;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4613, %r4589, %r4603, %r4411;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4617, %r4596, %r4610, %r4411;
	// end inline asm
	shl.b32 	%r4624, %r4617, 4;
	// begin inline asm
	lop3.b32 %r4621, %r4417, %r4613, %r4624, 202;
	// end inline asm
	xor.b32  	%r16240, %r4621, -2004318072;
	// begin inline asm
	mov.b32 %r4628, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4626, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4627, %r4628, %r4626;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4630, %r4320, %r4627;
	// end inline asm
	// begin inline asm
	mov.b32 %r4633, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4634, %r4628, %r4633;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4637, %r4328, %r4634;
	// end inline asm
	// begin inline asm
	mov.b32 %r4640, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4641, %r4628, %r4640;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4644, %r4336, %r4641;
	// end inline asm
	// begin inline asm
	mov.b32 %r4647, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4648, %r4628, %r4647;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4651, %r4344, %r4648;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4654, %r4630, %r4644, %r4411;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4658, %r4637, %r4651, %r4411;
	// end inline asm
	shl.b32 	%r4665, %r4658, 4;
	// begin inline asm
	lop3.b32 %r4662, %r4417, %r4654, %r4665, 202;
	// end inline asm
	xor.b32  	%r16241, %r4662, -2004318072;
	// begin inline asm
	mov.b32 %r4669, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4667, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4668, %r4669, %r4667;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4671, %r4352, %r4668;
	// end inline asm
	// begin inline asm
	mov.b32 %r4674, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4675, %r4669, %r4674;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4678, %r4360, %r4675;
	// end inline asm
	// begin inline asm
	mov.b32 %r4681, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4682, %r4669, %r4681;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4685, %r4368, %r4682;
	// end inline asm
	// begin inline asm
	mov.b32 %r4688, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4689, %r4669, %r4688;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4692, %r4376, %r4689;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4695, %r4671, %r4685, %r4411;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4699, %r4678, %r4692, %r4411;
	// end inline asm
	shl.b32 	%r4706, %r4699, 4;
	// begin inline asm
	lop3.b32 %r4703, %r4417, %r4695, %r4706, 202;
	// end inline asm
	xor.b32  	%r16242, %r4703, -2004318072;
	setp.eq.s32 	%p327, %r16444, 0;
	selp.b32 	%r16243, 0, 4161, %p327;
	add.s32 	%r16244, %r135, %r16243;
	mul.wide.u32 	%rd109, %r16244, 4;
	add.s64 	%rd110, %rd53, %rd109;
	st.shared.u32 	[%rd110], %r16235;
	add.s32 	%r16245, %r136, %r16243;
	mul.wide.u32 	%rd111, %r16245, 4;
	add.s64 	%rd112, %rd53, %rd111;
	st.shared.u32 	[%rd112], %r16236;
	add.s32 	%r16246, %r137, %r16243;
	mul.wide.u32 	%rd113, %r16246, 4;
	add.s64 	%rd114, %rd53, %rd113;
	st.shared.u32 	[%rd114], %r16237;
	add.s32 	%r16247, %r138, %r16243;
	mul.wide.u32 	%rd115, %r16247, 4;
	add.s64 	%rd116, %rd53, %rd115;
	st.shared.u32 	[%rd116], %r16238;
	add.s32 	%r16248, %r139, %r16243;
	mul.wide.u32 	%rd117, %r16248, 4;
	add.s64 	%rd118, %rd53, %rd117;
	st.shared.u32 	[%rd118], %r16239;
	add.s32 	%r16249, %r140, %r16243;
	mul.wide.u32 	%rd119, %r16249, 4;
	add.s64 	%rd120, %rd53, %rd119;
	st.shared.u32 	[%rd120], %r16240;
	add.s32 	%r16250, %r141, %r16243;
	mul.wide.u32 	%rd121, %r16250, 4;
	add.s64 	%rd122, %rd53, %rd121;
	st.shared.u32 	[%rd122], %r16241;
	add.s32 	%r16251, %r142, %r16243;
	mul.wide.u32 	%rd123, %r16251, 4;
	add.s64 	%rd124, %rd53, %rd123;
	st.shared.u32 	[%rd124], %r16242;
	ld.shared.u32 	%r16395, [%rd94];
	ld.shared.u32 	%r16396, [%rd96];
	ld.shared.u32 	%r16397, [%rd98];
	ld.shared.u32 	%r16398, [%rd100];
	ld.shared.u32 	%r16407, [%rd102];
	ld.shared.u32 	%r16408, [%rd104];
	ld.shared.u32 	%r16409, [%rd106];
	ld.shared.u32 	%r16410, [%rd108];
	// begin inline asm
	mov.b32 %r4712, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4723, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4711, %r16395, -2004318072;
	// begin inline asm
	lop3.b32 %r4709, %r894, %r4711, %r4712, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4713, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4714, %r4712, %r4713;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4717, %r4709, %r4714;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4720, %r905, %r4711, %r4723, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4724, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4725, %r4723, %r4724;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4728, %r4720, %r4725;
	// end inline asm
	shr.u32 	%r4733, %r4711, 8;
	// begin inline asm
	lop3.b32 %r4731, %r894, %r4733, %r4712, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4735, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4736, %r4712, %r4735;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4739, %r4731, %r4736;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4742, %r905, %r4733, %r4723, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4746, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4747, %r4723, %r4746;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4750, %r4742, %r4747;
	// end inline asm
	// begin inline asm
	mov.b32 %r4758, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4769, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4757, %r16396, -2004318072;
	// begin inline asm
	lop3.b32 %r4755, %r894, %r4757, %r4758, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4759, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4760, %r4758, %r4759;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4763, %r4755, %r4760;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4766, %r905, %r4757, %r4769, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4770, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4771, %r4769, %r4770;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4774, %r4766, %r4771;
	// end inline asm
	shr.u32 	%r4779, %r4757, 8;
	// begin inline asm
	lop3.b32 %r4777, %r894, %r4779, %r4758, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4781, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4782, %r4758, %r4781;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4785, %r4777, %r4782;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4788, %r905, %r4779, %r4769, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4792, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4793, %r4769, %r4792;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4796, %r4788, %r4793;
	// end inline asm
	// begin inline asm
	mov.b32 %r4804, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4815, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4803, %r16397, -2004318072;
	// begin inline asm
	lop3.b32 %r4801, %r894, %r4803, %r4804, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4805, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4806, %r4804, %r4805;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4809, %r4801, %r4806;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4812, %r905, %r4803, %r4815, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4816, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4817, %r4815, %r4816;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4820, %r4812, %r4817;
	// end inline asm
	shr.u32 	%r4825, %r4803, 8;
	// begin inline asm
	lop3.b32 %r4823, %r894, %r4825, %r4804, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4827, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4828, %r4804, %r4827;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4831, %r4823, %r4828;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4834, %r905, %r4825, %r4815, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4838, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4839, %r4815, %r4838;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4842, %r4834, %r4839;
	// end inline asm
	// begin inline asm
	mov.b32 %r4850, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4861, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4849, %r16398, -2004318072;
	// begin inline asm
	lop3.b32 %r4847, %r894, %r4849, %r4850, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4851, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4852, %r4850, %r4851;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4855, %r4847, %r4852;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4858, %r905, %r4849, %r4861, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4862, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4863, %r4861, %r4862;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4866, %r4858, %r4863;
	// end inline asm
	shr.u32 	%r4871, %r4849, 8;
	// begin inline asm
	lop3.b32 %r4869, %r894, %r4871, %r4850, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4873, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4874, %r4850, %r4873;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4877, %r4869, %r4874;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4880, %r905, %r4871, %r4861, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4884, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4885, %r4861, %r4884;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4888, %r4880, %r4885;
	// end inline asm
	// begin inline asm
	mov.b32 %r4896, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4907, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4895, %r16407, -2004318072;
	// begin inline asm
	lop3.b32 %r4893, %r894, %r4895, %r4896, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4897, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4898, %r4896, %r4897;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4901, %r4893, %r4898;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4904, %r905, %r4895, %r4907, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4908, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4909, %r4907, %r4908;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4912, %r4904, %r4909;
	// end inline asm
	shr.u32 	%r4917, %r4895, 8;
	// begin inline asm
	lop3.b32 %r4915, %r894, %r4917, %r4896, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4919, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4920, %r4896, %r4919;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4923, %r4915, %r4920;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4926, %r905, %r4917, %r4907, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4930, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4931, %r4907, %r4930;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4934, %r4926, %r4931;
	// end inline asm
	// begin inline asm
	mov.b32 %r4942, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4953, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4941, %r16408, -2004318072;
	// begin inline asm
	lop3.b32 %r4939, %r894, %r4941, %r4942, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4943, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4944, %r4942, %r4943;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4947, %r4939, %r4944;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4950, %r905, %r4941, %r4953, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4954, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4955, %r4953, %r4954;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4958, %r4950, %r4955;
	// end inline asm
	shr.u32 	%r4963, %r4941, 8;
	// begin inline asm
	lop3.b32 %r4961, %r894, %r4963, %r4942, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4965, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4966, %r4942, %r4965;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4969, %r4961, %r4966;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4972, %r905, %r4963, %r4953, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4976, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4977, %r4953, %r4976;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4980, %r4972, %r4977;
	// end inline asm
	// begin inline asm
	mov.b32 %r4988, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4999, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4987, %r16409, -2004318072;
	// begin inline asm
	lop3.b32 %r4985, %r894, %r4987, %r4988, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4989, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4990, %r4988, %r4989;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4993, %r4985, %r4990;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4996, %r905, %r4987, %r4999, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5000, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5001, %r4999, %r5000;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5004, %r4996, %r5001;
	// end inline asm
	shr.u32 	%r5009, %r4987, 8;
	// begin inline asm
	lop3.b32 %r5007, %r894, %r5009, %r4988, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5011, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5012, %r4988, %r5011;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5015, %r5007, %r5012;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5018, %r905, %r5009, %r4999, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5022, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5023, %r4999, %r5022;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5026, %r5018, %r5023;
	// end inline asm
	// begin inline asm
	mov.b32 %r5034, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5045, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r5033, %r16410, -2004318072;
	// begin inline asm
	lop3.b32 %r5031, %r894, %r5033, %r5034, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5035, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5036, %r5034, %r5035;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5039, %r5031, %r5036;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5042, %r905, %r5033, %r5045, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5046, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5047, %r5045, %r5046;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5050, %r5042, %r5047;
	// end inline asm
	shr.u32 	%r5055, %r5033, 8;
	// begin inline asm
	lop3.b32 %r5053, %r894, %r5055, %r5034, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5057, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5058, %r5034, %r5057;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5061, %r5053, %r5058;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5064, %r905, %r5055, %r5045, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5068, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5069, %r5045, %r5068;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5072, %r5064, %r5069;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5075, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5077, %r5075, %r4717;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5080, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5082, %r5080, %r4728;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5085, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5087, %r5085, %r4739;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5090, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5092, %r5090, %r4750;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5095, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5097, %r5095, %r4763;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5100, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5102, %r5100, %r4774;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5105, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5107, %r5105, %r4785;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5110, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5112, %r5110, %r4796;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5115, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5117, %r5115, %r4809;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5120, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5122, %r5120, %r4820;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5125, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5127, %r5125, %r4831;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5130, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5132, %r5130, %r4842;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5135, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5137, %r5135, %r4855;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5140, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5142, %r5140, %r4866;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5145, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5147, %r5145, %r4877;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5150, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5152, %r5150, %r4888;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5155, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5157, %r5155, %r4901;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5160, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5162, %r5160, %r4912;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5165, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5167, %r5165, %r4923;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5170, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5172, %r5170, %r4934;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5175, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5177, %r5175, %r4947;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5180, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5182, %r5180, %r4958;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5185, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5187, %r5185, %r4969;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5190, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5192, %r5190, %r4980;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5195, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5197, %r5195, %r4993;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5200, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5202, %r5200, %r5004;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5205, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5207, %r5205, %r5015;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5210, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5212, %r5210, %r5026;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5215, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5217, %r5215, %r5039;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5220, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5222, %r5220, %r5050;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5225, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5227, %r5225, %r5061;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5230, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5232, %r5230, %r5072;
	// end inline asm
	// begin inline asm
	mov.b32 %r5240, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5251, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5237, %r894, %r1919, %r5240, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5241, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5242, %r5240, %r5241;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5245, %r5237, %r5242;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5248, %r905, %r1919, %r5251, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5252, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5253, %r5251, %r5252;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5256, %r5248, %r5253;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5259, %r894, %r1941, %r5240, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5263, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5264, %r5240, %r5263;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5267, %r5259, %r5264;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5270, %r905, %r1941, %r5251, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5274, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5275, %r5251, %r5274;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5278, %r5270, %r5275;
	// end inline asm
	// begin inline asm
	mov.b32 %r5286, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5297, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5283, %r894, %r1965, %r5286, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5287, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5288, %r5286, %r5287;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5291, %r5283, %r5288;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5294, %r905, %r1965, %r5297, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5298, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5299, %r5297, %r5298;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5302, %r5294, %r5299;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5305, %r894, %r1987, %r5286, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5309, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5310, %r5286, %r5309;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5313, %r5305, %r5310;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5316, %r905, %r1987, %r5297, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5320, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5321, %r5297, %r5320;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5324, %r5316, %r5321;
	// end inline asm
	// begin inline asm
	mov.b32 %r5332, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5343, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5329, %r894, %r2011, %r5332, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5333, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5334, %r5332, %r5333;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5337, %r5329, %r5334;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5340, %r905, %r2011, %r5343, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5344, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5345, %r5343, %r5344;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5348, %r5340, %r5345;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5351, %r894, %r2033, %r5332, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5355, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5356, %r5332, %r5355;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5359, %r5351, %r5356;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5362, %r905, %r2033, %r5343, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5366, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5367, %r5343, %r5366;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5370, %r5362, %r5367;
	// end inline asm
	// begin inline asm
	mov.b32 %r5378, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5389, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5375, %r894, %r2057, %r5378, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5379, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5380, %r5378, %r5379;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5383, %r5375, %r5380;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5386, %r905, %r2057, %r5389, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5390, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5391, %r5389, %r5390;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5394, %r5386, %r5391;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5397, %r894, %r2079, %r5378, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5401, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5402, %r5378, %r5401;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5405, %r5397, %r5402;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5408, %r905, %r2079, %r5389, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5412, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5413, %r5389, %r5412;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5416, %r5408, %r5413;
	// end inline asm
	// begin inline asm
	mov.b32 %r5424, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5435, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5421, %r894, %r2103, %r5424, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5425, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5426, %r5424, %r5425;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5429, %r5421, %r5426;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5432, %r905, %r2103, %r5435, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5436, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5437, %r5435, %r5436;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5440, %r5432, %r5437;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5443, %r894, %r2125, %r5424, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5447, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5448, %r5424, %r5447;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5451, %r5443, %r5448;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5454, %r905, %r2125, %r5435, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5458, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5459, %r5435, %r5458;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5462, %r5454, %r5459;
	// end inline asm
	// begin inline asm
	mov.b32 %r5470, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5481, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5467, %r894, %r2149, %r5470, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5471, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5472, %r5470, %r5471;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5475, %r5467, %r5472;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5478, %r905, %r2149, %r5481, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5482, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5483, %r5481, %r5482;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5486, %r5478, %r5483;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5489, %r894, %r2171, %r5470, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5493, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5494, %r5470, %r5493;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5497, %r5489, %r5494;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5500, %r905, %r2171, %r5481, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5504, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5505, %r5481, %r5504;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5508, %r5500, %r5505;
	// end inline asm
	// begin inline asm
	mov.b32 %r5516, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5527, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5513, %r894, %r2195, %r5516, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5517, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5518, %r5516, %r5517;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5521, %r5513, %r5518;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5524, %r905, %r2195, %r5527, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5528, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5529, %r5527, %r5528;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5532, %r5524, %r5529;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5535, %r894, %r2217, %r5516, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5539, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5540, %r5516, %r5539;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5543, %r5535, %r5540;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5546, %r905, %r2217, %r5527, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5550, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5551, %r5527, %r5550;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5554, %r5546, %r5551;
	// end inline asm
	// begin inline asm
	mov.b32 %r5562, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5573, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5559, %r894, %r2241, %r5562, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5563, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5564, %r5562, %r5563;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5567, %r5559, %r5564;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5570, %r905, %r2241, %r5573, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5574, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5575, %r5573, %r5574;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5578, %r5570, %r5575;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5581, %r894, %r2263, %r5562, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5585, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5586, %r5562, %r5585;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5589, %r5581, %r5586;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5592, %r905, %r2263, %r5573, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5596, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5597, %r5573, %r5596;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5600, %r5592, %r5597;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5603, %r313, %r5245, %r5077;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5607, %r313, %r5256, %r5082;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5611, %r313, %r5267, %r5087;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5615, %r313, %r5278, %r5092;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5619, %r313, %r5291, %r5097;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5623, %r313, %r5302, %r5102;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5627, %r313, %r5313, %r5107;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5631, %r313, %r5324, %r5112;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5635, %r313, %r5337, %r5117;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5639, %r313, %r5348, %r5122;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5643, %r313, %r5359, %r5127;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5647, %r313, %r5370, %r5132;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5651, %r313, %r5383, %r5137;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5655, %r313, %r5394, %r5142;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5659, %r313, %r5405, %r5147;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5663, %r313, %r5416, %r5152;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5667, %r331, %r5429, %r5157;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5671, %r331, %r5440, %r5162;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5675, %r331, %r5451, %r5167;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5679, %r331, %r5462, %r5172;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5683, %r331, %r5475, %r5177;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5687, %r331, %r5486, %r5182;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5691, %r331, %r5497, %r5187;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5695, %r331, %r5508, %r5192;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5699, %r331, %r5521, %r5197;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5703, %r331, %r5532, %r5202;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5707, %r331, %r5543, %r5207;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5711, %r331, %r5554, %r5212;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5715, %r331, %r5567, %r5217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5719, %r331, %r5578, %r5222;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5723, %r331, %r5589, %r5227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5727, %r331, %r5600, %r5232;
	// end inline asm
	// begin inline asm
	mov.b32 %r5736, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5747, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5733, %r894, %r2479, %r5736, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5737, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5738, %r5736, %r5737;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5741, %r5733, %r5738;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5744, %r905, %r2479, %r5747, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5748, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5749, %r5747, %r5748;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5752, %r5744, %r5749;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5755, %r894, %r2501, %r5736, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5759, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5760, %r5736, %r5759;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5763, %r5755, %r5760;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5766, %r905, %r2501, %r5747, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5770, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5771, %r5747, %r5770;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5774, %r5766, %r5771;
	// end inline asm
	// begin inline asm
	mov.b32 %r5782, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5793, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5779, %r894, %r2525, %r5782, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5783, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5784, %r5782, %r5783;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5787, %r5779, %r5784;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5790, %r905, %r2525, %r5793, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5794, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5795, %r5793, %r5794;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5798, %r5790, %r5795;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5801, %r894, %r2547, %r5782, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5805, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5806, %r5782, %r5805;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5809, %r5801, %r5806;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5812, %r905, %r2547, %r5793, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5816, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5817, %r5793, %r5816;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5820, %r5812, %r5817;
	// end inline asm
	// begin inline asm
	mov.b32 %r5828, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5839, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5825, %r894, %r2571, %r5828, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5829, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5830, %r5828, %r5829;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5833, %r5825, %r5830;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5836, %r905, %r2571, %r5839, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5840, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5841, %r5839, %r5840;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5844, %r5836, %r5841;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5847, %r894, %r2593, %r5828, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5851, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5852, %r5828, %r5851;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5855, %r5847, %r5852;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5858, %r905, %r2593, %r5839, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5862, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5863, %r5839, %r5862;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5866, %r5858, %r5863;
	// end inline asm
	// begin inline asm
	mov.b32 %r5874, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5885, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5871, %r894, %r2617, %r5874, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5875, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5876, %r5874, %r5875;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5879, %r5871, %r5876;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5882, %r905, %r2617, %r5885, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5886, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5887, %r5885, %r5886;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5890, %r5882, %r5887;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5893, %r894, %r2639, %r5874, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5897, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5898, %r5874, %r5897;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5901, %r5893, %r5898;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5904, %r905, %r2639, %r5885, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5908, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5909, %r5885, %r5908;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5912, %r5904, %r5909;
	// end inline asm
	// begin inline asm
	mov.b32 %r5920, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5931, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5917, %r894, %r2663, %r5920, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5921, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5922, %r5920, %r5921;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5925, %r5917, %r5922;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5928, %r905, %r2663, %r5931, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5932, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5933, %r5931, %r5932;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5936, %r5928, %r5933;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5939, %r894, %r2685, %r5920, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5943, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5944, %r5920, %r5943;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5947, %r5939, %r5944;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5950, %r905, %r2685, %r5931, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5954, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5955, %r5931, %r5954;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5958, %r5950, %r5955;
	// end inline asm
	// begin inline asm
	mov.b32 %r5966, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5977, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5963, %r894, %r2709, %r5966, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5967, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5968, %r5966, %r5967;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5971, %r5963, %r5968;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5974, %r905, %r2709, %r5977, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5978, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5979, %r5977, %r5978;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5982, %r5974, %r5979;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5985, %r894, %r2731, %r5966, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5989, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5990, %r5966, %r5989;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5993, %r5985, %r5990;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5996, %r905, %r2731, %r5977, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6000, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6001, %r5977, %r6000;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6004, %r5996, %r6001;
	// end inline asm
	// begin inline asm
	mov.b32 %r6012, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6023, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6009, %r894, %r2755, %r6012, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6013, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6014, %r6012, %r6013;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6017, %r6009, %r6014;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6020, %r905, %r2755, %r6023, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6024, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6025, %r6023, %r6024;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6028, %r6020, %r6025;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6031, %r894, %r2777, %r6012, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6035, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6036, %r6012, %r6035;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6039, %r6031, %r6036;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6042, %r905, %r2777, %r6023, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6046, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6047, %r6023, %r6046;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6050, %r6042, %r6047;
	// end inline asm
	// begin inline asm
	mov.b32 %r6058, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6069, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6055, %r894, %r2801, %r6058, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6059, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6060, %r6058, %r6059;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6063, %r6055, %r6060;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6066, %r905, %r2801, %r6069, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6070, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6071, %r6069, %r6070;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6074, %r6066, %r6071;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6077, %r894, %r2823, %r6058, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6081, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6082, %r6058, %r6081;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6085, %r6077, %r6082;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6088, %r905, %r2823, %r6069, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6092, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6093, %r6069, %r6092;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6096, %r6088, %r6093;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6099, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6101, %r6099, %r5741, %r5603;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6105, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6107, %r6105, %r5752, %r5607;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6111, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6113, %r6111, %r5763, %r5611;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6117, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6119, %r6117, %r5774, %r5615;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6123, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6125, %r6123, %r5787, %r5619;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6129, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6131, %r6129, %r5798, %r5623;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6135, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6137, %r6135, %r5809, %r5627;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6141, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6143, %r6141, %r5820, %r5631;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6147, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6149, %r6147, %r5833, %r5635;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6153, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6155, %r6153, %r5844, %r5639;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6159, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6161, %r6159, %r5855, %r5643;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6165, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6167, %r6165, %r5866, %r5647;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6171, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6173, %r6171, %r5879, %r5651;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6177, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6179, %r6177, %r5890, %r5655;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6183, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6185, %r6183, %r5901, %r5659;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6189, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6191, %r6189, %r5912, %r5663;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6195, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6197, %r6195, %r5925, %r5667;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6201, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6203, %r6201, %r5936, %r5671;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6207, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6209, %r6207, %r5947, %r5675;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6213, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6215, %r6213, %r5958, %r5679;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6219, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6221, %r6219, %r5971, %r5683;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6225, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6227, %r6225, %r5982, %r5687;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6231, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6233, %r6231, %r5993, %r5691;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6237, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6239, %r6237, %r6004, %r5695;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6243, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6245, %r6243, %r6017, %r5699;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6249, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6251, %r6249, %r6028, %r5703;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6255, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6257, %r6255, %r6039, %r5707;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6261, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6263, %r6261, %r6050, %r5711;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6267, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6269, %r6267, %r6063, %r5715;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6273, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6275, %r6273, %r6074, %r5719;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6279, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6281, %r6279, %r6085, %r5723;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6285, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6287, %r6285, %r6096, %r5727;
	// end inline asm
	// begin inline asm
	mov.b32 %r6296, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6307, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6293, %r894, %r895, %r6296, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6297, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6298, %r6296, %r6297;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6301, %r6293, %r6298;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6304, %r905, %r895, %r6307, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6308, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6309, %r6307, %r6308;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6312, %r6304, %r6309;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6315, %r894, %r917, %r6296, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6319, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6320, %r6296, %r6319;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6323, %r6315, %r6320;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6326, %r905, %r917, %r6307, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6330, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6331, %r6307, %r6330;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6334, %r6326, %r6331;
	// end inline asm
	// begin inline asm
	mov.b32 %r6342, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6353, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6339, %r894, %r941, %r6342, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6343, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6344, %r6342, %r6343;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6347, %r6339, %r6344;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6350, %r905, %r941, %r6353, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6354, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6355, %r6353, %r6354;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6358, %r6350, %r6355;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6361, %r894, %r963, %r6342, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6365, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6366, %r6342, %r6365;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6369, %r6361, %r6366;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6372, %r905, %r963, %r6353, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6376, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6377, %r6353, %r6376;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6380, %r6372, %r6377;
	// end inline asm
	// begin inline asm
	mov.b32 %r6388, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6399, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6385, %r894, %r987, %r6388, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6389, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6390, %r6388, %r6389;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6393, %r6385, %r6390;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6396, %r905, %r987, %r6399, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6400, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6401, %r6399, %r6400;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6404, %r6396, %r6401;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6407, %r894, %r1009, %r6388, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6411, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6412, %r6388, %r6411;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6415, %r6407, %r6412;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6418, %r905, %r1009, %r6399, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6422, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6423, %r6399, %r6422;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6426, %r6418, %r6423;
	// end inline asm
	// begin inline asm
	mov.b32 %r6434, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6445, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6431, %r894, %r1033, %r6434, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6435, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6436, %r6434, %r6435;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6439, %r6431, %r6436;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6442, %r905, %r1033, %r6445, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6446, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6447, %r6445, %r6446;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6450, %r6442, %r6447;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6453, %r894, %r1055, %r6434, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6457, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6458, %r6434, %r6457;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6461, %r6453, %r6458;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6464, %r905, %r1055, %r6445, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6468, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6469, %r6445, %r6468;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6472, %r6464, %r6469;
	// end inline asm
	// begin inline asm
	mov.b32 %r6480, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6491, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6477, %r894, %r1079, %r6480, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6481, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6482, %r6480, %r6481;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6485, %r6477, %r6482;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6488, %r905, %r1079, %r6491, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6492, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6493, %r6491, %r6492;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6496, %r6488, %r6493;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6499, %r894, %r1101, %r6480, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6503, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6504, %r6480, %r6503;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6507, %r6499, %r6504;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6510, %r905, %r1101, %r6491, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6514, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6515, %r6491, %r6514;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6518, %r6510, %r6515;
	// end inline asm
	// begin inline asm
	mov.b32 %r6526, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6537, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6523, %r894, %r1125, %r6526, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6527, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6528, %r6526, %r6527;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6531, %r6523, %r6528;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6534, %r905, %r1125, %r6537, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6538, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6539, %r6537, %r6538;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6542, %r6534, %r6539;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6545, %r894, %r1147, %r6526, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6549, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6550, %r6526, %r6549;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6553, %r6545, %r6550;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6556, %r905, %r1147, %r6537, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6560, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6561, %r6537, %r6560;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6564, %r6556, %r6561;
	// end inline asm
	// begin inline asm
	mov.b32 %r6572, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6583, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6569, %r894, %r1171, %r6572, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6573, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6574, %r6572, %r6573;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6577, %r6569, %r6574;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6580, %r905, %r1171, %r6583, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6584, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6585, %r6583, %r6584;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6588, %r6580, %r6585;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6591, %r894, %r1193, %r6572, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6595, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6596, %r6572, %r6595;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6599, %r6591, %r6596;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6602, %r905, %r1193, %r6583, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6606, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6607, %r6583, %r6606;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6610, %r6602, %r6607;
	// end inline asm
	// begin inline asm
	mov.b32 %r6618, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6629, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6615, %r894, %r1217, %r6618, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6619, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6620, %r6618, %r6619;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6623, %r6615, %r6620;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6626, %r905, %r1217, %r6629, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6630, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6631, %r6629, %r6630;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6634, %r6626, %r6631;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6637, %r894, %r1239, %r6618, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6641, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6642, %r6618, %r6641;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6645, %r6637, %r6642;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6648, %r905, %r1239, %r6629, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6652, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6653, %r6629, %r6652;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6656, %r6648, %r6653;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6794, %r385, %r6301, %r6101;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6791, %r385, %r6312, %r6107;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6803, %r385, %r6323, %r6113;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6800, %r385, %r6334, %r6119;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6812, %r385, %r6347, %r6125;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6809, %r385, %r6358, %r6131;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6821, %r385, %r6369, %r6137;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6818, %r385, %r6380, %r6143;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6830, %r385, %r6393, %r6149;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6827, %r385, %r6404, %r6155;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6839, %r385, %r6415, %r6161;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6836, %r385, %r6426, %r6167;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6848, %r385, %r6439, %r6173;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6845, %r385, %r6450, %r6179;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6857, %r385, %r6461, %r6185;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6854, %r385, %r6472, %r6191;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6866, %r403, %r6485, %r6197;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6863, %r403, %r6496, %r6203;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6875, %r403, %r6507, %r6209;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6872, %r403, %r6518, %r6215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6884, %r403, %r6531, %r6221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6881, %r403, %r6542, %r6227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6893, %r403, %r6553, %r6233;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6890, %r403, %r6564, %r6239;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6902, %r403, %r6577, %r6245;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6899, %r403, %r6588, %r6251;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6911, %r403, %r6599, %r6257;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6908, %r403, %r6610, %r6263;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6920, %r403, %r6623, %r6269;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6917, %r403, %r6634, %r6275;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6929, %r403, %r6645, %r6281;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6926, %r403, %r6656, %r6287;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6787, %r473;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6789, %r6787, %r6791;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6792, %r467, %r6794, %r6789;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6796, %r473;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6798, %r6796, %r6800;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6801, %r467, %r6803, %r6798;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6805, %r473;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6807, %r6805, %r6809;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6810, %r467, %r6812, %r6807;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6814, %r473;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6816, %r6814, %r6818;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6819, %r467, %r6821, %r6816;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6823, %r473;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6825, %r6823, %r6827;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6828, %r467, %r6830, %r6825;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6832, %r473;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6834, %r6832, %r6836;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6837, %r467, %r6839, %r6834;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6841, %r473;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6843, %r6841, %r6845;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6846, %r467, %r6848, %r6843;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6850, %r473;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6852, %r6850, %r6854;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6855, %r467, %r6857, %r6852;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6859, %r476;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6861, %r6859, %r6863;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6864, %r470, %r6866, %r6861;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6868, %r476;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6870, %r6868, %r6872;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6873, %r470, %r6875, %r6870;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6877, %r476;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6879, %r6877, %r6881;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6882, %r470, %r6884, %r6879;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6886, %r476;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6888, %r6886, %r6890;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6891, %r470, %r6893, %r6888;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6895, %r476;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6897, %r6895, %r6899;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6900, %r470, %r6902, %r6897;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6904, %r476;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6906, %r6904, %r6908;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6909, %r470, %r6911, %r6906;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6913, %r476;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6915, %r6913, %r6917;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6918, %r470, %r6920, %r6915;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6922, %r476;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6924, %r6922, %r6926;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6927, %r470, %r6929, %r6924;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6931, %r473, %r6794;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6934, %r467, %r6791, %r6931;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6938, %r473, %r6803;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6941, %r467, %r6800, %r6938;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6945, %r473, %r6812;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6948, %r467, %r6809, %r6945;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6952, %r473, %r6821;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6955, %r467, %r6818, %r6952;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6959, %r473, %r6830;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6962, %r467, %r6827, %r6959;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6966, %r473, %r6839;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6969, %r467, %r6836, %r6966;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6973, %r473, %r6848;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6976, %r467, %r6845, %r6973;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6980, %r473, %r6857;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6983, %r467, %r6854, %r6980;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6987, %r476, %r6866;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6990, %r470, %r6863, %r6987;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6994, %r476, %r6875;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6997, %r470, %r6872, %r6994;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7001, %r476, %r6884;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7004, %r470, %r6881, %r7001;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7008, %r476, %r6893;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7011, %r470, %r6890, %r7008;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7015, %r476, %r6902;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7018, %r470, %r6899, %r7015;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7022, %r476, %r6911;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7025, %r470, %r6908, %r7022;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7029, %r476, %r6920;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7032, %r470, %r6917, %r7029;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7036, %r476, %r6929;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7039, %r470, %r6926, %r7036;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7210, %r7207}, {%r522, %r528, %r525, %r531}, {%r6792, %r6934}, {%r808, %r808};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7219, %r7216}, {%r522, %r528, %r525, %r531}, {%r6801, %r6941}, {%r808, %r808};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7228, %r7225}, {%r522, %r528, %r525, %r531}, {%r6810, %r6948}, {%r808, %r808};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7237, %r7234}, {%r522, %r528, %r525, %r531}, {%r6819, %r6955}, {%r808, %r808};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7246, %r7243}, {%r522, %r528, %r525, %r531}, {%r6828, %r6962}, {%r808, %r808};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7255, %r7252}, {%r522, %r528, %r525, %r531}, {%r6837, %r6969}, {%r808, %r808};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7264, %r7261}, {%r522, %r528, %r525, %r531}, {%r6846, %r6976}, {%r808, %r808};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7273, %r7270}, {%r522, %r528, %r525, %r531}, {%r6855, %r6983}, {%r808, %r808};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7282, %r7279}, {%r522, %r528, %r525, %r531}, {%r6864, %r6990}, {%r808, %r808};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7291, %r7288}, {%r522, %r528, %r525, %r531}, {%r6873, %r6997}, {%r808, %r808};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7300, %r7297}, {%r522, %r528, %r525, %r531}, {%r6882, %r7004}, {%r808, %r808};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7309, %r7306}, {%r522, %r528, %r525, %r531}, {%r6891, %r7011}, {%r808, %r808};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7318, %r7315}, {%r522, %r528, %r525, %r531}, {%r6900, %r7018}, {%r808, %r808};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7327, %r7324}, {%r522, %r528, %r525, %r531}, {%r6909, %r7025}, {%r808, %r808};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7336, %r7333}, {%r522, %r528, %r525, %r531}, {%r6918, %r7032}, {%r808, %r808};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7345, %r7342}, {%r522, %r528, %r525, %r531}, {%r6927, %r7039}, {%r808, %r808};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7203, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7205, %r7203, %r7207;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7208, %r572, %r7210, %r7205;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7212, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7214, %r7212, %r7216;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7217, %r572, %r7219, %r7214;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7221, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7223, %r7221, %r7225;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7226, %r572, %r7228, %r7223;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7230, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7232, %r7230, %r7234;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7235, %r572, %r7237, %r7232;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7239, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7241, %r7239, %r7243;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7244, %r572, %r7246, %r7241;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7248, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7250, %r7248, %r7252;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7253, %r572, %r7255, %r7250;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7257, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7259, %r7257, %r7261;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7262, %r572, %r7264, %r7259;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7266, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7268, %r7266, %r7270;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7271, %r572, %r7273, %r7268;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7275, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7277, %r7275, %r7279;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7280, %r572, %r7282, %r7277;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7284, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7286, %r7284, %r7288;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7289, %r572, %r7291, %r7286;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7293, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7295, %r7293, %r7297;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7298, %r572, %r7300, %r7295;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7302, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7304, %r7302, %r7306;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7307, %r572, %r7309, %r7304;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7311, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7313, %r7311, %r7315;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7316, %r572, %r7318, %r7313;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7320, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7322, %r7320, %r7324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7325, %r572, %r7327, %r7322;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7329, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7331, %r7329, %r7333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7334, %r572, %r7336, %r7331;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7338, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7340, %r7338, %r7342;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7343, %r572, %r7345, %r7340;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7347, %r575, %r7210;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7350, %r572, %r7207, %r7347;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7354, %r575, %r7219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7357, %r572, %r7216, %r7354;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7361, %r575, %r7228;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7364, %r572, %r7225, %r7361;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7368, %r575, %r7237;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7371, %r572, %r7234, %r7368;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7375, %r575, %r7246;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7378, %r572, %r7243, %r7375;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7382, %r575, %r7255;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7385, %r572, %r7252, %r7382;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7389, %r575, %r7264;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7392, %r572, %r7261, %r7389;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7396, %r575, %r7273;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7399, %r572, %r7270, %r7396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7403, %r575, %r7282;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7406, %r572, %r7279, %r7403;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7410, %r575, %r7291;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7413, %r572, %r7288, %r7410;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7417, %r575, %r7300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7420, %r572, %r7297, %r7417;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7424, %r575, %r7309;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7427, %r572, %r7306, %r7424;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7431, %r575, %r7318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7434, %r572, %r7315, %r7431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7438, %r575, %r7327;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7441, %r572, %r7324, %r7438;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7445, %r575, %r7336;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7448, %r572, %r7333, %r7445;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7452, %r575, %r7345;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7455, %r572, %r7342, %r7452;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7748, %r7751}, {%r610, %r616, %r613, %r619}, {%r7208, %r7350}, {%r808, %r808};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7754, %r7757}, {%r610, %r616, %r613, %r619}, {%r7217, %r7357}, {%r808, %r808};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7760, %r7763}, {%r610, %r616, %r613, %r619}, {%r7226, %r7364}, {%r808, %r808};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7766, %r7769}, {%r610, %r616, %r613, %r619}, {%r7235, %r7371}, {%r808, %r808};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7772, %r7775}, {%r610, %r616, %r613, %r619}, {%r7244, %r7378}, {%r808, %r808};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7778, %r7781}, {%r610, %r616, %r613, %r619}, {%r7253, %r7385}, {%r808, %r808};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7784, %r7787}, {%r610, %r616, %r613, %r619}, {%r7262, %r7392}, {%r808, %r808};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7790, %r7793}, {%r610, %r616, %r613, %r619}, {%r7271, %r7399}, {%r808, %r808};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7749, %r7752}, {%r610, %r616, %r613, %r619}, {%r7280, %r7406}, {%r808, %r808};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7755, %r7758}, {%r610, %r616, %r613, %r619}, {%r7289, %r7413}, {%r808, %r808};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7761, %r7764}, {%r610, %r616, %r613, %r619}, {%r7298, %r7420}, {%r808, %r808};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7767, %r7770}, {%r610, %r616, %r613, %r619}, {%r7307, %r7427}, {%r808, %r808};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7773, %r7776}, {%r610, %r616, %r613, %r619}, {%r7316, %r7434}, {%r808, %r808};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7779, %r7782}, {%r610, %r616, %r613, %r619}, {%r7325, %r7441}, {%r808, %r808};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7785, %r7788}, {%r610, %r616, %r613, %r619}, {%r7334, %r7448}, {%r808, %r808};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7791, %r7794}, {%r610, %r616, %r613, %r619}, {%r7343, %r7455}, {%r808, %r808};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7747, %r7748, %r7749;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7750, %r7751, %r7752;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7753, %r7754, %r7755;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7756, %r7757, %r7758;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7759, %r7760, %r7761;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7762, %r7763, %r7764;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7765, %r7766, %r7767;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7768, %r7769, %r7770;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7771, %r7772, %r7773;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7774, %r7775, %r7776;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7777, %r7778, %r7779;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7780, %r7781, %r7782;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7783, %r7784, %r7785;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7786, %r7787, %r7788;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7789, %r7790, %r7791;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7792, %r7793, %r7794;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7795, %r7748, %r7749;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7798, %r7751, %r7752;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7801, %r7754, %r7755;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7804, %r7757, %r7758;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7807, %r7760, %r7761;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7810, %r7763, %r7764;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7813, %r7766, %r7767;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7816, %r7769, %r7770;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7819, %r7772, %r7773;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7822, %r7775, %r7776;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7825, %r7778, %r7779;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7828, %r7781, %r7782;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7831, %r7784, %r7785;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7834, %r7787, %r7788;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7837, %r7790, %r7791;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7840, %r7793, %r7794;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7843, %r234, %r7747;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7846, %r234, %r7750;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7849, %r234, %r7753;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7852, %r234, %r7756;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7855, %r234, %r7759;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7858, %r234, %r7762;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7861, %r234, %r7765;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7864, %r234, %r7768;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7867, %r234, %r7771;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7870, %r234, %r7774;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7873, %r234, %r7777;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7876, %r234, %r7780;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7879, %r234, %r7783;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7882, %r234, %r7786;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7885, %r234, %r7789;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7888, %r234, %r7792;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7891, %r236, %r7795;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7894, %r236, %r7798;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7897, %r236, %r7801;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7900, %r236, %r7804;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7903, %r236, %r7807;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7906, %r236, %r7810;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7909, %r236, %r7813;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7912, %r236, %r7816;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7915, %r236, %r7819;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7918, %r236, %r7822;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7921, %r236, %r7825;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7924, %r236, %r7828;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7927, %r236, %r7831;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7930, %r236, %r7834;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7933, %r236, %r7837;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7936, %r236, %r7840;
	// end inline asm
	// begin inline asm
	mov.b32 %r7939, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7940, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7941, %r7843, %r7939;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7944, %r7941, %r7940;
	// end inline asm
	// begin inline asm
	mov.b32 %r7947, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7948, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7949, %r7846, %r7947;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7952, %r7949, %r7948;
	// end inline asm
	// begin inline asm
	mov.b32 %r7955, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7956, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7957, %r7849, %r7955;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7960, %r7957, %r7956;
	// end inline asm
	// begin inline asm
	mov.b32 %r7963, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7964, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7965, %r7852, %r7963;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7968, %r7965, %r7964;
	// end inline asm
	// begin inline asm
	mov.b32 %r7971, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7972, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7973, %r7855, %r7971;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7976, %r7973, %r7972;
	// end inline asm
	// begin inline asm
	mov.b32 %r7979, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7980, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7981, %r7858, %r7979;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7984, %r7981, %r7980;
	// end inline asm
	// begin inline asm
	mov.b32 %r7987, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7988, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7989, %r7861, %r7987;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7992, %r7989, %r7988;
	// end inline asm
	// begin inline asm
	mov.b32 %r7995, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7996, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7997, %r7864, %r7995;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8000, %r7997, %r7996;
	// end inline asm
	// begin inline asm
	mov.b32 %r8003, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8004, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8005, %r7867, %r8003;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8008, %r8005, %r8004;
	// end inline asm
	// begin inline asm
	mov.b32 %r8011, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8012, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8013, %r7870, %r8011;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8016, %r8013, %r8012;
	// end inline asm
	// begin inline asm
	mov.b32 %r8019, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8020, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8021, %r7873, %r8019;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8024, %r8021, %r8020;
	// end inline asm
	// begin inline asm
	mov.b32 %r8027, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8028, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8029, %r7876, %r8027;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8032, %r8029, %r8028;
	// end inline asm
	// begin inline asm
	mov.b32 %r8035, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8036, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8037, %r7879, %r8035;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8040, %r8037, %r8036;
	// end inline asm
	// begin inline asm
	mov.b32 %r8043, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8044, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8045, %r7882, %r8043;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8048, %r8045, %r8044;
	// end inline asm
	// begin inline asm
	mov.b32 %r8051, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8052, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8053, %r7885, %r8051;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8056, %r8053, %r8052;
	// end inline asm
	// begin inline asm
	mov.b32 %r8059, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8060, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8061, %r7888, %r8059;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8064, %r8061, %r8060;
	// end inline asm
	// begin inline asm
	mov.b32 %r8067, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8068, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8069, %r7891, %r8067;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8072, %r8069, %r8068;
	// end inline asm
	// begin inline asm
	mov.b32 %r8075, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8076, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8077, %r7894, %r8075;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8080, %r8077, %r8076;
	// end inline asm
	// begin inline asm
	mov.b32 %r8083, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8084, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8085, %r7897, %r8083;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8088, %r8085, %r8084;
	// end inline asm
	// begin inline asm
	mov.b32 %r8091, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8092, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8093, %r7900, %r8091;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8096, %r8093, %r8092;
	// end inline asm
	// begin inline asm
	mov.b32 %r8099, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8100, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8101, %r7903, %r8099;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8104, %r8101, %r8100;
	// end inline asm
	// begin inline asm
	mov.b32 %r8107, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8108, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8109, %r7906, %r8107;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8112, %r8109, %r8108;
	// end inline asm
	// begin inline asm
	mov.b32 %r8115, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8116, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8117, %r7909, %r8115;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8120, %r8117, %r8116;
	// end inline asm
	// begin inline asm
	mov.b32 %r8123, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8124, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8125, %r7912, %r8123;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8128, %r8125, %r8124;
	// end inline asm
	// begin inline asm
	mov.b32 %r8131, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8132, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8133, %r7915, %r8131;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8136, %r8133, %r8132;
	// end inline asm
	// begin inline asm
	mov.b32 %r8139, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8140, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8141, %r7918, %r8139;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8144, %r8141, %r8140;
	// end inline asm
	// begin inline asm
	mov.b32 %r8147, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8148, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8149, %r7921, %r8147;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8152, %r8149, %r8148;
	// end inline asm
	// begin inline asm
	mov.b32 %r8155, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8156, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8157, %r7924, %r8155;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8160, %r8157, %r8156;
	// end inline asm
	// begin inline asm
	mov.b32 %r8163, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8164, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8165, %r7927, %r8163;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8168, %r8165, %r8164;
	// end inline asm
	// begin inline asm
	mov.b32 %r8171, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8172, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8173, %r7930, %r8171;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8176, %r8173, %r8172;
	// end inline asm
	// begin inline asm
	mov.b32 %r8179, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8180, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8181, %r7933, %r8179;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8184, %r8181, %r8180;
	// end inline asm
	// begin inline asm
	mov.b32 %r8187, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8188, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8189, %r7936, %r8187;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8192, %r8189, %r8188;
	// end inline asm
	// begin inline asm
	mov.b32 %r8198, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8196, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8197, %r8198, %r8196;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8200, %r7944, %r8197;
	// end inline asm
	// begin inline asm
	mov.b32 %r8203, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8204, %r8198, %r8203;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8207, %r7952, %r8204;
	// end inline asm
	// begin inline asm
	mov.b32 %r8210, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8211, %r8198, %r8210;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8214, %r7960, %r8211;
	// end inline asm
	// begin inline asm
	mov.b32 %r8217, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8218, %r8198, %r8217;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8221, %r7968, %r8218;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8224, %r8200, %r8214, %r4411;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8228, %r8207, %r8221, %r4411;
	// end inline asm
	shl.b32 	%r8235, %r8228, 4;
	// begin inline asm
	lop3.b32 %r8232, %r4417, %r8224, %r8235, 202;
	// end inline asm
	xor.b32  	%r16252, %r8232, -2004318072;
	// begin inline asm
	mov.b32 %r8239, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8237, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8238, %r8239, %r8237;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8241, %r7976, %r8238;
	// end inline asm
	// begin inline asm
	mov.b32 %r8244, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8245, %r8239, %r8244;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8248, %r7984, %r8245;
	// end inline asm
	// begin inline asm
	mov.b32 %r8251, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8252, %r8239, %r8251;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8255, %r7992, %r8252;
	// end inline asm
	// begin inline asm
	mov.b32 %r8258, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8259, %r8239, %r8258;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8262, %r8000, %r8259;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8265, %r8241, %r8255, %r4411;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8269, %r8248, %r8262, %r4411;
	// end inline asm
	shl.b32 	%r8276, %r8269, 4;
	// begin inline asm
	lop3.b32 %r8273, %r4417, %r8265, %r8276, 202;
	// end inline asm
	xor.b32  	%r16253, %r8273, -2004318072;
	// begin inline asm
	mov.b32 %r8280, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8278, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8279, %r8280, %r8278;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8282, %r8008, %r8279;
	// end inline asm
	// begin inline asm
	mov.b32 %r8285, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8286, %r8280, %r8285;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8289, %r8016, %r8286;
	// end inline asm
	// begin inline asm
	mov.b32 %r8292, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8293, %r8280, %r8292;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8296, %r8024, %r8293;
	// end inline asm
	// begin inline asm
	mov.b32 %r8299, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8300, %r8280, %r8299;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8303, %r8032, %r8300;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8306, %r8282, %r8296, %r4411;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8310, %r8289, %r8303, %r4411;
	// end inline asm
	shl.b32 	%r8317, %r8310, 4;
	// begin inline asm
	lop3.b32 %r8314, %r4417, %r8306, %r8317, 202;
	// end inline asm
	xor.b32  	%r16254, %r8314, -2004318072;
	// begin inline asm
	mov.b32 %r8321, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8319, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8320, %r8321, %r8319;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8323, %r8040, %r8320;
	// end inline asm
	// begin inline asm
	mov.b32 %r8326, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8327, %r8321, %r8326;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8330, %r8048, %r8327;
	// end inline asm
	// begin inline asm
	mov.b32 %r8333, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8334, %r8321, %r8333;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8337, %r8056, %r8334;
	// end inline asm
	// begin inline asm
	mov.b32 %r8340, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8341, %r8321, %r8340;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8344, %r8064, %r8341;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8347, %r8323, %r8337, %r4411;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8351, %r8330, %r8344, %r4411;
	// end inline asm
	shl.b32 	%r8358, %r8351, 4;
	// begin inline asm
	lop3.b32 %r8355, %r4417, %r8347, %r8358, 202;
	// end inline asm
	xor.b32  	%r16255, %r8355, -2004318072;
	// begin inline asm
	mov.b32 %r8362, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8360, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8361, %r8362, %r8360;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8364, %r8072, %r8361;
	// end inline asm
	// begin inline asm
	mov.b32 %r8367, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8368, %r8362, %r8367;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8371, %r8080, %r8368;
	// end inline asm
	// begin inline asm
	mov.b32 %r8374, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8375, %r8362, %r8374;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8378, %r8088, %r8375;
	// end inline asm
	// begin inline asm
	mov.b32 %r8381, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8382, %r8362, %r8381;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8385, %r8096, %r8382;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8388, %r8364, %r8378, %r4411;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8392, %r8371, %r8385, %r4411;
	// end inline asm
	shl.b32 	%r8399, %r8392, 4;
	// begin inline asm
	lop3.b32 %r8396, %r4417, %r8388, %r8399, 202;
	// end inline asm
	xor.b32  	%r16256, %r8396, -2004318072;
	// begin inline asm
	mov.b32 %r8403, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8401, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8402, %r8403, %r8401;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8405, %r8104, %r8402;
	// end inline asm
	// begin inline asm
	mov.b32 %r8408, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8409, %r8403, %r8408;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8412, %r8112, %r8409;
	// end inline asm
	// begin inline asm
	mov.b32 %r8415, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8416, %r8403, %r8415;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8419, %r8120, %r8416;
	// end inline asm
	// begin inline asm
	mov.b32 %r8422, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8423, %r8403, %r8422;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8426, %r8128, %r8423;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8429, %r8405, %r8419, %r4411;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8433, %r8412, %r8426, %r4411;
	// end inline asm
	shl.b32 	%r8440, %r8433, 4;
	// begin inline asm
	lop3.b32 %r8437, %r4417, %r8429, %r8440, 202;
	// end inline asm
	xor.b32  	%r16257, %r8437, -2004318072;
	// begin inline asm
	mov.b32 %r8444, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8442, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8443, %r8444, %r8442;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8446, %r8136, %r8443;
	// end inline asm
	// begin inline asm
	mov.b32 %r8449, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8450, %r8444, %r8449;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8453, %r8144, %r8450;
	// end inline asm
	// begin inline asm
	mov.b32 %r8456, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8457, %r8444, %r8456;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8460, %r8152, %r8457;
	// end inline asm
	// begin inline asm
	mov.b32 %r8463, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8464, %r8444, %r8463;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8467, %r8160, %r8464;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8470, %r8446, %r8460, %r4411;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8474, %r8453, %r8467, %r4411;
	// end inline asm
	shl.b32 	%r8481, %r8474, 4;
	// begin inline asm
	lop3.b32 %r8478, %r4417, %r8470, %r8481, 202;
	// end inline asm
	xor.b32  	%r16258, %r8478, -2004318072;
	// begin inline asm
	mov.b32 %r8485, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8483, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8484, %r8485, %r8483;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8487, %r8168, %r8484;
	// end inline asm
	// begin inline asm
	mov.b32 %r8490, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8491, %r8485, %r8490;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8494, %r8176, %r8491;
	// end inline asm
	// begin inline asm
	mov.b32 %r8497, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8498, %r8485, %r8497;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8501, %r8184, %r8498;
	// end inline asm
	// begin inline asm
	mov.b32 %r8504, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8505, %r8485, %r8504;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8508, %r8192, %r8505;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8511, %r8487, %r8501, %r4411;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8515, %r8494, %r8508, %r4411;
	// end inline asm
	shl.b32 	%r8522, %r8515, 4;
	// begin inline asm
	lop3.b32 %r8519, %r4417, %r8511, %r8522, 202;
	// end inline asm
	xor.b32  	%r16259, %r8519, -2004318072;
	st.shared.u32 	[%rd110], %r16252;
	st.shared.u32 	[%rd112], %r16253;
	st.shared.u32 	[%rd114], %r16254;
	st.shared.u32 	[%rd116], %r16255;
	st.shared.u32 	[%rd118], %r16256;
	st.shared.u32 	[%rd120], %r16257;
	st.shared.u32 	[%rd122], %r16258;
	st.shared.u32 	[%rd124], %r16259;
	ld.shared.u32 	%r16399, [%rd94];
	ld.shared.u32 	%r16400, [%rd96];
	ld.shared.u32 	%r16401, [%rd98];
	ld.shared.u32 	%r16402, [%rd100];
	ld.shared.u32 	%r16411, [%rd102];
	ld.shared.u32 	%r16412, [%rd104];
	ld.shared.u32 	%r16413, [%rd106];
	ld.shared.u32 	%r16414, [%rd108];
	// begin inline asm
	mov.b32 %r8528, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8539, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8527, %r16399, -2004318072;
	// begin inline asm
	lop3.b32 %r8525, %r894, %r8527, %r8528, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8529, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8530, %r8528, %r8529;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8533, %r8525, %r8530;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8536, %r905, %r8527, %r8539, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8540, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8541, %r8539, %r8540;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8544, %r8536, %r8541;
	// end inline asm
	shr.u32 	%r8549, %r8527, 8;
	// begin inline asm
	lop3.b32 %r8547, %r894, %r8549, %r8528, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8551, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8552, %r8528, %r8551;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8555, %r8547, %r8552;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8558, %r905, %r8549, %r8539, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8562, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8563, %r8539, %r8562;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8566, %r8558, %r8563;
	// end inline asm
	// begin inline asm
	mov.b32 %r8574, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8585, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8573, %r16400, -2004318072;
	// begin inline asm
	lop3.b32 %r8571, %r894, %r8573, %r8574, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8575, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8576, %r8574, %r8575;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8579, %r8571, %r8576;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8582, %r905, %r8573, %r8585, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8586, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8587, %r8585, %r8586;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8590, %r8582, %r8587;
	// end inline asm
	shr.u32 	%r8595, %r8573, 8;
	// begin inline asm
	lop3.b32 %r8593, %r894, %r8595, %r8574, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8597, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8598, %r8574, %r8597;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8601, %r8593, %r8598;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8604, %r905, %r8595, %r8585, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8608, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8609, %r8585, %r8608;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8612, %r8604, %r8609;
	// end inline asm
	// begin inline asm
	mov.b32 %r8620, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8631, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8619, %r16401, -2004318072;
	// begin inline asm
	lop3.b32 %r8617, %r894, %r8619, %r8620, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8621, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8622, %r8620, %r8621;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8625, %r8617, %r8622;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8628, %r905, %r8619, %r8631, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8632, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8633, %r8631, %r8632;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8636, %r8628, %r8633;
	// end inline asm
	shr.u32 	%r8641, %r8619, 8;
	// begin inline asm
	lop3.b32 %r8639, %r894, %r8641, %r8620, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8643, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8644, %r8620, %r8643;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8647, %r8639, %r8644;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8650, %r905, %r8641, %r8631, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8654, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8655, %r8631, %r8654;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8658, %r8650, %r8655;
	// end inline asm
	// begin inline asm
	mov.b32 %r8666, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8677, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8665, %r16402, -2004318072;
	// begin inline asm
	lop3.b32 %r8663, %r894, %r8665, %r8666, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8667, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8668, %r8666, %r8667;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8671, %r8663, %r8668;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8674, %r905, %r8665, %r8677, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8678, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8679, %r8677, %r8678;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8682, %r8674, %r8679;
	// end inline asm
	shr.u32 	%r8687, %r8665, 8;
	// begin inline asm
	lop3.b32 %r8685, %r894, %r8687, %r8666, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8689, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8690, %r8666, %r8689;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8693, %r8685, %r8690;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8696, %r905, %r8687, %r8677, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8700, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8701, %r8677, %r8700;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8704, %r8696, %r8701;
	// end inline asm
	// begin inline asm
	mov.b32 %r8712, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8723, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8711, %r16411, -2004318072;
	// begin inline asm
	lop3.b32 %r8709, %r894, %r8711, %r8712, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8713, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8714, %r8712, %r8713;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8717, %r8709, %r8714;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8720, %r905, %r8711, %r8723, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8724, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8725, %r8723, %r8724;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8728, %r8720, %r8725;
	// end inline asm
	shr.u32 	%r8733, %r8711, 8;
	// begin inline asm
	lop3.b32 %r8731, %r894, %r8733, %r8712, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8735, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8736, %r8712, %r8735;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8739, %r8731, %r8736;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8742, %r905, %r8733, %r8723, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8746, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8747, %r8723, %r8746;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8750, %r8742, %r8747;
	// end inline asm
	// begin inline asm
	mov.b32 %r8758, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8769, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8757, %r16412, -2004318072;
	// begin inline asm
	lop3.b32 %r8755, %r894, %r8757, %r8758, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8759, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8760, %r8758, %r8759;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8763, %r8755, %r8760;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8766, %r905, %r8757, %r8769, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8770, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8771, %r8769, %r8770;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8774, %r8766, %r8771;
	// end inline asm
	shr.u32 	%r8779, %r8757, 8;
	// begin inline asm
	lop3.b32 %r8777, %r894, %r8779, %r8758, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8781, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8782, %r8758, %r8781;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8785, %r8777, %r8782;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8788, %r905, %r8779, %r8769, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8792, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8793, %r8769, %r8792;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8796, %r8788, %r8793;
	// end inline asm
	// begin inline asm
	mov.b32 %r8804, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8815, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8803, %r16413, -2004318072;
	// begin inline asm
	lop3.b32 %r8801, %r894, %r8803, %r8804, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8805, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8806, %r8804, %r8805;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8809, %r8801, %r8806;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8812, %r905, %r8803, %r8815, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8816, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8817, %r8815, %r8816;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8820, %r8812, %r8817;
	// end inline asm
	shr.u32 	%r8825, %r8803, 8;
	// begin inline asm
	lop3.b32 %r8823, %r894, %r8825, %r8804, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8827, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8828, %r8804, %r8827;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8831, %r8823, %r8828;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8834, %r905, %r8825, %r8815, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8838, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8839, %r8815, %r8838;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8842, %r8834, %r8839;
	// end inline asm
	// begin inline asm
	mov.b32 %r8850, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8861, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8849, %r16414, -2004318072;
	// begin inline asm
	lop3.b32 %r8847, %r894, %r8849, %r8850, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8851, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8852, %r8850, %r8851;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8855, %r8847, %r8852;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8858, %r905, %r8849, %r8861, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8862, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8863, %r8861, %r8862;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8866, %r8858, %r8863;
	// end inline asm
	shr.u32 	%r8871, %r8849, 8;
	// begin inline asm
	lop3.b32 %r8869, %r894, %r8871, %r8850, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8873, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8874, %r8850, %r8873;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8877, %r8869, %r8874;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8880, %r905, %r8871, %r8861, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8884, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8885, %r8861, %r8884;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8888, %r8880, %r8885;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8891, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8893, %r8891, %r8533;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8896, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8898, %r8896, %r8544;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8901, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8903, %r8901, %r8555;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8906, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8908, %r8906, %r8566;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8911, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8913, %r8911, %r8579;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8916, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8918, %r8916, %r8590;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8921, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8923, %r8921, %r8601;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8926, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8928, %r8926, %r8612;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8931, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8933, %r8931, %r8625;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8936, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8938, %r8936, %r8636;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8941, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8943, %r8941, %r8647;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8946, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8948, %r8946, %r8658;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8951, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8953, %r8951, %r8671;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8956, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8958, %r8956, %r8682;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8961, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8963, %r8961, %r8693;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8966, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8968, %r8966, %r8704;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8971, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8973, %r8971, %r8717;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8976, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8978, %r8976, %r8728;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8981, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8983, %r8981, %r8739;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8986, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8988, %r8986, %r8750;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8991, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8993, %r8991, %r8763;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8996, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8998, %r8996, %r8774;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9001, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9003, %r9001, %r8785;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9006, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9008, %r9006, %r8796;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9011, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9013, %r9011, %r8809;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9016, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9018, %r9016, %r8820;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9021, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9023, %r9021, %r8831;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9026, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9028, %r9026, %r8842;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9031, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9033, %r9031, %r8855;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9036, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9038, %r9036, %r8866;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9041, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9043, %r9041, %r8877;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9046, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9048, %r9046, %r8888;
	// end inline asm
	// begin inline asm
	mov.b32 %r9056, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9067, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9053, %r894, %r2479, %r9056, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9057, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9058, %r9056, %r9057;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9061, %r9053, %r9058;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9064, %r905, %r2479, %r9067, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9068, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9069, %r9067, %r9068;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9072, %r9064, %r9069;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9075, %r894, %r2501, %r9056, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9079, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9080, %r9056, %r9079;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9083, %r9075, %r9080;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9086, %r905, %r2501, %r9067, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9090, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9091, %r9067, %r9090;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9094, %r9086, %r9091;
	// end inline asm
	// begin inline asm
	mov.b32 %r9102, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9113, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9099, %r894, %r2525, %r9102, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9103, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9104, %r9102, %r9103;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9107, %r9099, %r9104;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9110, %r905, %r2525, %r9113, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9114, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9115, %r9113, %r9114;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9118, %r9110, %r9115;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9121, %r894, %r2547, %r9102, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9125, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9126, %r9102, %r9125;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9129, %r9121, %r9126;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9132, %r905, %r2547, %r9113, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9136, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9137, %r9113, %r9136;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9140, %r9132, %r9137;
	// end inline asm
	// begin inline asm
	mov.b32 %r9148, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9159, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9145, %r894, %r2571, %r9148, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9149, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9150, %r9148, %r9149;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9153, %r9145, %r9150;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9156, %r905, %r2571, %r9159, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9160, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9161, %r9159, %r9160;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9164, %r9156, %r9161;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9167, %r894, %r2593, %r9148, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9171, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9172, %r9148, %r9171;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9175, %r9167, %r9172;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9178, %r905, %r2593, %r9159, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9182, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9183, %r9159, %r9182;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9186, %r9178, %r9183;
	// end inline asm
	// begin inline asm
	mov.b32 %r9194, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9205, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9191, %r894, %r2617, %r9194, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9195, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9196, %r9194, %r9195;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9199, %r9191, %r9196;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9202, %r905, %r2617, %r9205, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9206, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9207, %r9205, %r9206;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9210, %r9202, %r9207;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9213, %r894, %r2639, %r9194, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9217, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9218, %r9194, %r9217;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9221, %r9213, %r9218;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9224, %r905, %r2639, %r9205, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9228, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9229, %r9205, %r9228;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9232, %r9224, %r9229;
	// end inline asm
	// begin inline asm
	mov.b32 %r9240, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9251, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9237, %r894, %r2663, %r9240, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9241, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9242, %r9240, %r9241;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9245, %r9237, %r9242;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9248, %r905, %r2663, %r9251, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9252, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9253, %r9251, %r9252;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9256, %r9248, %r9253;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9259, %r894, %r2685, %r9240, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9263, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9264, %r9240, %r9263;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9267, %r9259, %r9264;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9270, %r905, %r2685, %r9251, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9274, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9275, %r9251, %r9274;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9278, %r9270, %r9275;
	// end inline asm
	// begin inline asm
	mov.b32 %r9286, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9297, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9283, %r894, %r2709, %r9286, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9287, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9288, %r9286, %r9287;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9291, %r9283, %r9288;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9294, %r905, %r2709, %r9297, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9298, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9299, %r9297, %r9298;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9302, %r9294, %r9299;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9305, %r894, %r2731, %r9286, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9309, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9310, %r9286, %r9309;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9313, %r9305, %r9310;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9316, %r905, %r2731, %r9297, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9320, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9321, %r9297, %r9320;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9324, %r9316, %r9321;
	// end inline asm
	// begin inline asm
	mov.b32 %r9332, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9343, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9329, %r894, %r2755, %r9332, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9333, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9334, %r9332, %r9333;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9337, %r9329, %r9334;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9340, %r905, %r2755, %r9343, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9344, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9345, %r9343, %r9344;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9348, %r9340, %r9345;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9351, %r894, %r2777, %r9332, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9355, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9356, %r9332, %r9355;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9359, %r9351, %r9356;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9362, %r905, %r2777, %r9343, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9366, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9367, %r9343, %r9366;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9370, %r9362, %r9367;
	// end inline asm
	// begin inline asm
	mov.b32 %r9378, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9389, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9375, %r894, %r2801, %r9378, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9379, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9380, %r9378, %r9379;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9383, %r9375, %r9380;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9386, %r905, %r2801, %r9389, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9390, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9391, %r9389, %r9390;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9394, %r9386, %r9391;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9397, %r894, %r2823, %r9378, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9401, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9402, %r9378, %r9401;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9405, %r9397, %r9402;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9408, %r905, %r2823, %r9389, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9412, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9413, %r9389, %r9412;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9416, %r9408, %r9413;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9419, %r313, %r9061, %r8893;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9423, %r313, %r9072, %r8898;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9427, %r313, %r9083, %r8903;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9431, %r313, %r9094, %r8908;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9435, %r313, %r9107, %r8913;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9439, %r313, %r9118, %r8918;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9443, %r313, %r9129, %r8923;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9447, %r313, %r9140, %r8928;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9451, %r313, %r9153, %r8933;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9455, %r313, %r9164, %r8938;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9459, %r313, %r9175, %r8943;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9463, %r313, %r9186, %r8948;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9467, %r313, %r9199, %r8953;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9471, %r313, %r9210, %r8958;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9475, %r313, %r9221, %r8963;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9479, %r313, %r9232, %r8968;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9483, %r331, %r9245, %r8973;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9487, %r331, %r9256, %r8978;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9491, %r331, %r9267, %r8983;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9495, %r331, %r9278, %r8988;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9499, %r331, %r9291, %r8993;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9503, %r331, %r9302, %r8998;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9507, %r331, %r9313, %r9003;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9511, %r331, %r9324, %r9008;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9515, %r331, %r9337, %r9013;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9519, %r331, %r9348, %r9018;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9523, %r331, %r9359, %r9023;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9527, %r331, %r9370, %r9028;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9531, %r331, %r9383, %r9033;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9535, %r331, %r9394, %r9038;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9539, %r331, %r9405, %r9043;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9543, %r331, %r9416, %r9048;
	// end inline asm
	// begin inline asm
	mov.b32 %r9552, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9563, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9549, %r894, %r895, %r9552, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9553, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9554, %r9552, %r9553;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9557, %r9549, %r9554;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9560, %r905, %r895, %r9563, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9564, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9565, %r9563, %r9564;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9568, %r9560, %r9565;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9571, %r894, %r917, %r9552, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9575, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9576, %r9552, %r9575;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9579, %r9571, %r9576;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9582, %r905, %r917, %r9563, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9586, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9587, %r9563, %r9586;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9590, %r9582, %r9587;
	// end inline asm
	// begin inline asm
	mov.b32 %r9598, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9609, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9595, %r894, %r941, %r9598, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9599, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9600, %r9598, %r9599;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9603, %r9595, %r9600;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9606, %r905, %r941, %r9609, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9610, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9611, %r9609, %r9610;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9614, %r9606, %r9611;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9617, %r894, %r963, %r9598, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9621, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9622, %r9598, %r9621;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9625, %r9617, %r9622;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9628, %r905, %r963, %r9609, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9632, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9633, %r9609, %r9632;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9636, %r9628, %r9633;
	// end inline asm
	// begin inline asm
	mov.b32 %r9644, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9655, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9641, %r894, %r987, %r9644, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9645, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9646, %r9644, %r9645;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9649, %r9641, %r9646;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9652, %r905, %r987, %r9655, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9656, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9657, %r9655, %r9656;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9660, %r9652, %r9657;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9663, %r894, %r1009, %r9644, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9667, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9668, %r9644, %r9667;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9671, %r9663, %r9668;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9674, %r905, %r1009, %r9655, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9678, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9679, %r9655, %r9678;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9682, %r9674, %r9679;
	// end inline asm
	// begin inline asm
	mov.b32 %r9690, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9701, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9687, %r894, %r1033, %r9690, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9691, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9692, %r9690, %r9691;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9695, %r9687, %r9692;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9698, %r905, %r1033, %r9701, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9702, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9703, %r9701, %r9702;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9706, %r9698, %r9703;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9709, %r894, %r1055, %r9690, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9713, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9714, %r9690, %r9713;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9717, %r9709, %r9714;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9720, %r905, %r1055, %r9701, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9724, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9725, %r9701, %r9724;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9728, %r9720, %r9725;
	// end inline asm
	// begin inline asm
	mov.b32 %r9736, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9747, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9733, %r894, %r1079, %r9736, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9737, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9738, %r9736, %r9737;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9741, %r9733, %r9738;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9744, %r905, %r1079, %r9747, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9748, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9749, %r9747, %r9748;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9752, %r9744, %r9749;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9755, %r894, %r1101, %r9736, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9759, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9760, %r9736, %r9759;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9763, %r9755, %r9760;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9766, %r905, %r1101, %r9747, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9770, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9771, %r9747, %r9770;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9774, %r9766, %r9771;
	// end inline asm
	// begin inline asm
	mov.b32 %r9782, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9793, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9779, %r894, %r1125, %r9782, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9783, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9784, %r9782, %r9783;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9787, %r9779, %r9784;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9790, %r905, %r1125, %r9793, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9794, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9795, %r9793, %r9794;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9798, %r9790, %r9795;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9801, %r894, %r1147, %r9782, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9805, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9806, %r9782, %r9805;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9809, %r9801, %r9806;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9812, %r905, %r1147, %r9793, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9816, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9817, %r9793, %r9816;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9820, %r9812, %r9817;
	// end inline asm
	// begin inline asm
	mov.b32 %r9828, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9839, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9825, %r894, %r1171, %r9828, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9829, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9830, %r9828, %r9829;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9833, %r9825, %r9830;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9836, %r905, %r1171, %r9839, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9840, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9841, %r9839, %r9840;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9844, %r9836, %r9841;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9847, %r894, %r1193, %r9828, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9851, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9852, %r9828, %r9851;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9855, %r9847, %r9852;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9858, %r905, %r1193, %r9839, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9862, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9863, %r9839, %r9862;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9866, %r9858, %r9863;
	// end inline asm
	// begin inline asm
	mov.b32 %r9874, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9885, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9871, %r894, %r1217, %r9874, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9875, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9876, %r9874, %r9875;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9879, %r9871, %r9876;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9882, %r905, %r1217, %r9885, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9886, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9887, %r9885, %r9886;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9890, %r9882, %r9887;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9893, %r894, %r1239, %r9874, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9897, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9898, %r9874, %r9897;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9901, %r9893, %r9898;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9904, %r905, %r1239, %r9885, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9908, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9909, %r9885, %r9908;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9912, %r9904, %r9909;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9915, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9917, %r9915, %r9557, %r9419;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9921, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9923, %r9921, %r9568, %r9423;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9927, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9929, %r9927, %r9579, %r9427;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9933, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9935, %r9933, %r9590, %r9431;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9939, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9941, %r9939, %r9603, %r9435;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9945, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9947, %r9945, %r9614, %r9439;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9951, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9953, %r9951, %r9625, %r9443;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9957, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9959, %r9957, %r9636, %r9447;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9963, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9965, %r9963, %r9649, %r9451;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9969, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9971, %r9969, %r9660, %r9455;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9975, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9977, %r9975, %r9671, %r9459;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9981, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9983, %r9981, %r9682, %r9463;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9987, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9989, %r9987, %r9695, %r9467;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9993, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9995, %r9993, %r9706, %r9471;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9999, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10001, %r9999, %r9717, %r9475;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10005, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10007, %r10005, %r9728, %r9479;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10011, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10013, %r10011, %r9741, %r9483;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10017, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10019, %r10017, %r9752, %r9487;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10023, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10025, %r10023, %r9763, %r9491;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10029, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10031, %r10029, %r9774, %r9495;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10035, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10037, %r10035, %r9787, %r9499;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10041, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10043, %r10041, %r9798, %r9503;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10047, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10049, %r10047, %r9809, %r9507;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10053, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10055, %r10053, %r9820, %r9511;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10059, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10061, %r10059, %r9833, %r9515;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10065, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10067, %r10065, %r9844, %r9519;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10071, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10073, %r10071, %r9855, %r9523;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10077, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10079, %r10077, %r9866, %r9527;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10083, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10085, %r10083, %r9879, %r9531;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10089, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10091, %r10089, %r9890, %r9535;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10095, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10097, %r10095, %r9901, %r9539;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10101, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10103, %r10101, %r9912, %r9543;
	// end inline asm
	// begin inline asm
	mov.b32 %r10112, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10123, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10109, %r894, %r4711, %r10112, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10113, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10114, %r10112, %r10113;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10117, %r10109, %r10114;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10120, %r905, %r4711, %r10123, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10124, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10125, %r10123, %r10124;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10128, %r10120, %r10125;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10131, %r894, %r4733, %r10112, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10135, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10136, %r10112, %r10135;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10139, %r10131, %r10136;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10142, %r905, %r4733, %r10123, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10146, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10147, %r10123, %r10146;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10150, %r10142, %r10147;
	// end inline asm
	// begin inline asm
	mov.b32 %r10158, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10169, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10155, %r894, %r4757, %r10158, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10159, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10160, %r10158, %r10159;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10163, %r10155, %r10160;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10166, %r905, %r4757, %r10169, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10170, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10171, %r10169, %r10170;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10174, %r10166, %r10171;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10177, %r894, %r4779, %r10158, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10181, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10182, %r10158, %r10181;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10185, %r10177, %r10182;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10188, %r905, %r4779, %r10169, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10192, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10193, %r10169, %r10192;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10196, %r10188, %r10193;
	// end inline asm
	// begin inline asm
	mov.b32 %r10204, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10215, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10201, %r894, %r4803, %r10204, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10205, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10206, %r10204, %r10205;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10209, %r10201, %r10206;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10212, %r905, %r4803, %r10215, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10216, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10217, %r10215, %r10216;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10220, %r10212, %r10217;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10223, %r894, %r4825, %r10204, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10227, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10228, %r10204, %r10227;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10231, %r10223, %r10228;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10234, %r905, %r4825, %r10215, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10238, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10239, %r10215, %r10238;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10242, %r10234, %r10239;
	// end inline asm
	// begin inline asm
	mov.b32 %r10250, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10261, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10247, %r894, %r4849, %r10250, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10251, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10252, %r10250, %r10251;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10255, %r10247, %r10252;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10258, %r905, %r4849, %r10261, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10262, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10263, %r10261, %r10262;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10266, %r10258, %r10263;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10269, %r894, %r4871, %r10250, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10273, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10274, %r10250, %r10273;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10277, %r10269, %r10274;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10280, %r905, %r4871, %r10261, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10284, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10285, %r10261, %r10284;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10288, %r10280, %r10285;
	// end inline asm
	// begin inline asm
	mov.b32 %r10296, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10307, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10293, %r894, %r4895, %r10296, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10297, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10298, %r10296, %r10297;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10301, %r10293, %r10298;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10304, %r905, %r4895, %r10307, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10308, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10309, %r10307, %r10308;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10312, %r10304, %r10309;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10315, %r894, %r4917, %r10296, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10319, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10320, %r10296, %r10319;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10323, %r10315, %r10320;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10326, %r905, %r4917, %r10307, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10330, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10331, %r10307, %r10330;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10334, %r10326, %r10331;
	// end inline asm
	// begin inline asm
	mov.b32 %r10342, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10353, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10339, %r894, %r4941, %r10342, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10343, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10344, %r10342, %r10343;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10347, %r10339, %r10344;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10350, %r905, %r4941, %r10353, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10354, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10355, %r10353, %r10354;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10358, %r10350, %r10355;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10361, %r894, %r4963, %r10342, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10365, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10366, %r10342, %r10365;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10369, %r10361, %r10366;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10372, %r905, %r4963, %r10353, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10376, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10377, %r10353, %r10376;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10380, %r10372, %r10377;
	// end inline asm
	// begin inline asm
	mov.b32 %r10388, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10399, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10385, %r894, %r4987, %r10388, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10389, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10390, %r10388, %r10389;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10393, %r10385, %r10390;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10396, %r905, %r4987, %r10399, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10400, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10401, %r10399, %r10400;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10404, %r10396, %r10401;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10407, %r894, %r5009, %r10388, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10411, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10412, %r10388, %r10411;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10415, %r10407, %r10412;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10418, %r905, %r5009, %r10399, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10422, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10423, %r10399, %r10422;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10426, %r10418, %r10423;
	// end inline asm
	// begin inline asm
	mov.b32 %r10434, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10445, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10431, %r894, %r5033, %r10434, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10435, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10436, %r10434, %r10435;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10439, %r10431, %r10436;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10442, %r905, %r5033, %r10445, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10446, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10447, %r10445, %r10446;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10450, %r10442, %r10447;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10453, %r894, %r5055, %r10434, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10457, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10458, %r10434, %r10457;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10461, %r10453, %r10458;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10464, %r905, %r5055, %r10445, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10468, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10469, %r10445, %r10468;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10472, %r10464, %r10469;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10610, %r385, %r10117, %r9917;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10607, %r385, %r10128, %r9923;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10619, %r385, %r10139, %r9929;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10616, %r385, %r10150, %r9935;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10628, %r385, %r10163, %r9941;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10625, %r385, %r10174, %r9947;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10637, %r385, %r10185, %r9953;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10634, %r385, %r10196, %r9959;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10646, %r385, %r10209, %r9965;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10643, %r385, %r10220, %r9971;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10655, %r385, %r10231, %r9977;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10652, %r385, %r10242, %r9983;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10664, %r385, %r10255, %r9989;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10661, %r385, %r10266, %r9995;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10673, %r385, %r10277, %r10001;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10670, %r385, %r10288, %r10007;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10682, %r403, %r10301, %r10013;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10679, %r403, %r10312, %r10019;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10691, %r403, %r10323, %r10025;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10688, %r403, %r10334, %r10031;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10700, %r403, %r10347, %r10037;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10697, %r403, %r10358, %r10043;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10709, %r403, %r10369, %r10049;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10706, %r403, %r10380, %r10055;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10718, %r403, %r10393, %r10061;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10715, %r403, %r10404, %r10067;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10727, %r403, %r10415, %r10073;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10724, %r403, %r10426, %r10079;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10736, %r403, %r10439, %r10085;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10733, %r403, %r10450, %r10091;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10745, %r403, %r10461, %r10097;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10742, %r403, %r10472, %r10103;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10603, %r473;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10605, %r10603, %r10607;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10608, %r467, %r10610, %r10605;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10612, %r473;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10614, %r10612, %r10616;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10617, %r467, %r10619, %r10614;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10621, %r473;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10623, %r10621, %r10625;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10626, %r467, %r10628, %r10623;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10630, %r473;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10632, %r10630, %r10634;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10635, %r467, %r10637, %r10632;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10639, %r473;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10641, %r10639, %r10643;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10644, %r467, %r10646, %r10641;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10648, %r473;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10650, %r10648, %r10652;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10653, %r467, %r10655, %r10650;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10657, %r473;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10659, %r10657, %r10661;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10662, %r467, %r10664, %r10659;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10666, %r473;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10668, %r10666, %r10670;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10671, %r467, %r10673, %r10668;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10675, %r476;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10677, %r10675, %r10679;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10680, %r470, %r10682, %r10677;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10684, %r476;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10686, %r10684, %r10688;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10689, %r470, %r10691, %r10686;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10693, %r476;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10695, %r10693, %r10697;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10698, %r470, %r10700, %r10695;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10702, %r476;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10704, %r10702, %r10706;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10707, %r470, %r10709, %r10704;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10711, %r476;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10713, %r10711, %r10715;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10716, %r470, %r10718, %r10713;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10720, %r476;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10722, %r10720, %r10724;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10725, %r470, %r10727, %r10722;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10729, %r476;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10731, %r10729, %r10733;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10734, %r470, %r10736, %r10731;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10738, %r476;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10740, %r10738, %r10742;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10743, %r470, %r10745, %r10740;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10747, %r473, %r10610;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10750, %r467, %r10607, %r10747;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10754, %r473, %r10619;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10757, %r467, %r10616, %r10754;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10761, %r473, %r10628;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10764, %r467, %r10625, %r10761;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10768, %r473, %r10637;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10771, %r467, %r10634, %r10768;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10775, %r473, %r10646;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10778, %r467, %r10643, %r10775;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10782, %r473, %r10655;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10785, %r467, %r10652, %r10782;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10789, %r473, %r10664;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10792, %r467, %r10661, %r10789;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10796, %r473, %r10673;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10799, %r467, %r10670, %r10796;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10803, %r476, %r10682;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10806, %r470, %r10679, %r10803;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10810, %r476, %r10691;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10813, %r470, %r10688, %r10810;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10817, %r476, %r10700;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10820, %r470, %r10697, %r10817;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10824, %r476, %r10709;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10827, %r470, %r10706, %r10824;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10831, %r476, %r10718;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10834, %r470, %r10715, %r10831;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10838, %r476, %r10727;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10841, %r470, %r10724, %r10838;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10845, %r476, %r10736;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10848, %r470, %r10733, %r10845;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10852, %r476, %r10745;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10855, %r470, %r10742, %r10852;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11026, %r11023}, {%r522, %r528, %r525, %r531}, {%r10608, %r10750}, {%r808, %r808};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11035, %r11032}, {%r522, %r528, %r525, %r531}, {%r10617, %r10757}, {%r808, %r808};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11044, %r11041}, {%r522, %r528, %r525, %r531}, {%r10626, %r10764}, {%r808, %r808};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11053, %r11050}, {%r522, %r528, %r525, %r531}, {%r10635, %r10771}, {%r808, %r808};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11062, %r11059}, {%r522, %r528, %r525, %r531}, {%r10644, %r10778}, {%r808, %r808};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11071, %r11068}, {%r522, %r528, %r525, %r531}, {%r10653, %r10785}, {%r808, %r808};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11080, %r11077}, {%r522, %r528, %r525, %r531}, {%r10662, %r10792}, {%r808, %r808};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11089, %r11086}, {%r522, %r528, %r525, %r531}, {%r10671, %r10799}, {%r808, %r808};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11098, %r11095}, {%r522, %r528, %r525, %r531}, {%r10680, %r10806}, {%r808, %r808};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11107, %r11104}, {%r522, %r528, %r525, %r531}, {%r10689, %r10813}, {%r808, %r808};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11116, %r11113}, {%r522, %r528, %r525, %r531}, {%r10698, %r10820}, {%r808, %r808};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11125, %r11122}, {%r522, %r528, %r525, %r531}, {%r10707, %r10827}, {%r808, %r808};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11134, %r11131}, {%r522, %r528, %r525, %r531}, {%r10716, %r10834}, {%r808, %r808};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11143, %r11140}, {%r522, %r528, %r525, %r531}, {%r10725, %r10841}, {%r808, %r808};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11152, %r11149}, {%r522, %r528, %r525, %r531}, {%r10734, %r10848}, {%r808, %r808};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11161, %r11158}, {%r522, %r528, %r525, %r531}, {%r10743, %r10855}, {%r808, %r808};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11019, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11021, %r11019, %r11023;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11024, %r572, %r11026, %r11021;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11028, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11030, %r11028, %r11032;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11033, %r572, %r11035, %r11030;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11037, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11039, %r11037, %r11041;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11042, %r572, %r11044, %r11039;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11046, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11048, %r11046, %r11050;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11051, %r572, %r11053, %r11048;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11055, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11057, %r11055, %r11059;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11060, %r572, %r11062, %r11057;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11064, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11066, %r11064, %r11068;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11069, %r572, %r11071, %r11066;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11073, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11075, %r11073, %r11077;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11078, %r572, %r11080, %r11075;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11082, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11084, %r11082, %r11086;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11087, %r572, %r11089, %r11084;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11091, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11093, %r11091, %r11095;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11096, %r572, %r11098, %r11093;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11100, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11102, %r11100, %r11104;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11105, %r572, %r11107, %r11102;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11109, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11111, %r11109, %r11113;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11114, %r572, %r11116, %r11111;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11118, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11120, %r11118, %r11122;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11123, %r572, %r11125, %r11120;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11127, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11129, %r11127, %r11131;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11132, %r572, %r11134, %r11129;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11136, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11138, %r11136, %r11140;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11141, %r572, %r11143, %r11138;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11145, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11147, %r11145, %r11149;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11150, %r572, %r11152, %r11147;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11154, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11156, %r11154, %r11158;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11159, %r572, %r11161, %r11156;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11163, %r575, %r11026;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11166, %r572, %r11023, %r11163;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11170, %r575, %r11035;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11173, %r572, %r11032, %r11170;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11177, %r575, %r11044;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11180, %r572, %r11041, %r11177;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11184, %r575, %r11053;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11187, %r572, %r11050, %r11184;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11191, %r575, %r11062;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11194, %r572, %r11059, %r11191;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11198, %r575, %r11071;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11201, %r572, %r11068, %r11198;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11205, %r575, %r11080;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11208, %r572, %r11077, %r11205;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11212, %r575, %r11089;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11215, %r572, %r11086, %r11212;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11219, %r575, %r11098;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11222, %r572, %r11095, %r11219;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11226, %r575, %r11107;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11229, %r572, %r11104, %r11226;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11233, %r575, %r11116;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11236, %r572, %r11113, %r11233;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11240, %r575, %r11125;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11243, %r572, %r11122, %r11240;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11247, %r575, %r11134;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11250, %r572, %r11131, %r11247;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11254, %r575, %r11143;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11257, %r572, %r11140, %r11254;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11261, %r575, %r11152;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11264, %r572, %r11149, %r11261;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11268, %r575, %r11161;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11271, %r572, %r11158, %r11268;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11564, %r11567}, {%r610, %r616, %r613, %r619}, {%r11024, %r11166}, {%r808, %r808};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11570, %r11573}, {%r610, %r616, %r613, %r619}, {%r11033, %r11173}, {%r808, %r808};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11576, %r11579}, {%r610, %r616, %r613, %r619}, {%r11042, %r11180}, {%r808, %r808};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11582, %r11585}, {%r610, %r616, %r613, %r619}, {%r11051, %r11187}, {%r808, %r808};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11588, %r11591}, {%r610, %r616, %r613, %r619}, {%r11060, %r11194}, {%r808, %r808};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11594, %r11597}, {%r610, %r616, %r613, %r619}, {%r11069, %r11201}, {%r808, %r808};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11600, %r11603}, {%r610, %r616, %r613, %r619}, {%r11078, %r11208}, {%r808, %r808};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11606, %r11609}, {%r610, %r616, %r613, %r619}, {%r11087, %r11215}, {%r808, %r808};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11565, %r11568}, {%r610, %r616, %r613, %r619}, {%r11096, %r11222}, {%r808, %r808};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11571, %r11574}, {%r610, %r616, %r613, %r619}, {%r11105, %r11229}, {%r808, %r808};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11577, %r11580}, {%r610, %r616, %r613, %r619}, {%r11114, %r11236}, {%r808, %r808};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11583, %r11586}, {%r610, %r616, %r613, %r619}, {%r11123, %r11243}, {%r808, %r808};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11589, %r11592}, {%r610, %r616, %r613, %r619}, {%r11132, %r11250}, {%r808, %r808};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11595, %r11598}, {%r610, %r616, %r613, %r619}, {%r11141, %r11257}, {%r808, %r808};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11601, %r11604}, {%r610, %r616, %r613, %r619}, {%r11150, %r11264}, {%r808, %r808};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11607, %r11610}, {%r610, %r616, %r613, %r619}, {%r11159, %r11271}, {%r808, %r808};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11563, %r11564, %r11565;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11566, %r11567, %r11568;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11569, %r11570, %r11571;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11572, %r11573, %r11574;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11575, %r11576, %r11577;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11578, %r11579, %r11580;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11581, %r11582, %r11583;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11584, %r11585, %r11586;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11587, %r11588, %r11589;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11590, %r11591, %r11592;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11593, %r11594, %r11595;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11596, %r11597, %r11598;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11599, %r11600, %r11601;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11602, %r11603, %r11604;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11605, %r11606, %r11607;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11608, %r11609, %r11610;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11611, %r11564, %r11565;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11614, %r11567, %r11568;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11617, %r11570, %r11571;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11620, %r11573, %r11574;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11623, %r11576, %r11577;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11626, %r11579, %r11580;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11629, %r11582, %r11583;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11632, %r11585, %r11586;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11635, %r11588, %r11589;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11638, %r11591, %r11592;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11641, %r11594, %r11595;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11644, %r11597, %r11598;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11647, %r11600, %r11601;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11650, %r11603, %r11604;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11653, %r11606, %r11607;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11656, %r11609, %r11610;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11659, %r234, %r11563;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11662, %r234, %r11566;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11665, %r234, %r11569;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11668, %r234, %r11572;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11671, %r234, %r11575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11674, %r234, %r11578;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11677, %r234, %r11581;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11680, %r234, %r11584;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11683, %r234, %r11587;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11686, %r234, %r11590;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11689, %r234, %r11593;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11692, %r234, %r11596;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11695, %r234, %r11599;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11698, %r234, %r11602;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11701, %r234, %r11605;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11704, %r234, %r11608;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11707, %r236, %r11611;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11710, %r236, %r11614;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11713, %r236, %r11617;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11716, %r236, %r11620;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11719, %r236, %r11623;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11722, %r236, %r11626;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11725, %r236, %r11629;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11728, %r236, %r11632;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11731, %r236, %r11635;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11734, %r236, %r11638;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11737, %r236, %r11641;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11740, %r236, %r11644;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11743, %r236, %r11647;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11746, %r236, %r11650;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11749, %r236, %r11653;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11752, %r236, %r11656;
	// end inline asm
	// begin inline asm
	mov.b32 %r11755, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11756, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11757, %r11659, %r11755;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11760, %r11757, %r11756;
	// end inline asm
	// begin inline asm
	mov.b32 %r11763, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11764, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11765, %r11662, %r11763;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11768, %r11765, %r11764;
	// end inline asm
	// begin inline asm
	mov.b32 %r11771, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11772, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11773, %r11665, %r11771;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11776, %r11773, %r11772;
	// end inline asm
	// begin inline asm
	mov.b32 %r11779, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11780, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11781, %r11668, %r11779;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11784, %r11781, %r11780;
	// end inline asm
	// begin inline asm
	mov.b32 %r11787, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11788, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11789, %r11671, %r11787;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11792, %r11789, %r11788;
	// end inline asm
	// begin inline asm
	mov.b32 %r11795, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11796, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11797, %r11674, %r11795;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11800, %r11797, %r11796;
	// end inline asm
	// begin inline asm
	mov.b32 %r11803, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11804, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11805, %r11677, %r11803;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11808, %r11805, %r11804;
	// end inline asm
	// begin inline asm
	mov.b32 %r11811, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11812, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11813, %r11680, %r11811;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11816, %r11813, %r11812;
	// end inline asm
	// begin inline asm
	mov.b32 %r11819, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11820, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11821, %r11683, %r11819;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11824, %r11821, %r11820;
	// end inline asm
	// begin inline asm
	mov.b32 %r11827, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11828, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11829, %r11686, %r11827;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11832, %r11829, %r11828;
	// end inline asm
	// begin inline asm
	mov.b32 %r11835, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11836, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11837, %r11689, %r11835;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11840, %r11837, %r11836;
	// end inline asm
	// begin inline asm
	mov.b32 %r11843, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11844, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11845, %r11692, %r11843;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11848, %r11845, %r11844;
	// end inline asm
	// begin inline asm
	mov.b32 %r11851, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11852, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11853, %r11695, %r11851;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11856, %r11853, %r11852;
	// end inline asm
	// begin inline asm
	mov.b32 %r11859, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11860, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11861, %r11698, %r11859;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11864, %r11861, %r11860;
	// end inline asm
	// begin inline asm
	mov.b32 %r11867, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11868, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11869, %r11701, %r11867;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11872, %r11869, %r11868;
	// end inline asm
	// begin inline asm
	mov.b32 %r11875, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11876, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11877, %r11704, %r11875;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11880, %r11877, %r11876;
	// end inline asm
	// begin inline asm
	mov.b32 %r11883, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11884, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11885, %r11707, %r11883;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11888, %r11885, %r11884;
	// end inline asm
	// begin inline asm
	mov.b32 %r11891, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11892, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11893, %r11710, %r11891;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11896, %r11893, %r11892;
	// end inline asm
	// begin inline asm
	mov.b32 %r11899, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11900, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11901, %r11713, %r11899;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11904, %r11901, %r11900;
	// end inline asm
	// begin inline asm
	mov.b32 %r11907, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11908, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11909, %r11716, %r11907;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11912, %r11909, %r11908;
	// end inline asm
	// begin inline asm
	mov.b32 %r11915, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11916, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11917, %r11719, %r11915;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11920, %r11917, %r11916;
	// end inline asm
	// begin inline asm
	mov.b32 %r11923, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11924, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11925, %r11722, %r11923;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11928, %r11925, %r11924;
	// end inline asm
	// begin inline asm
	mov.b32 %r11931, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11932, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11933, %r11725, %r11931;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11936, %r11933, %r11932;
	// end inline asm
	// begin inline asm
	mov.b32 %r11939, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11940, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11941, %r11728, %r11939;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11944, %r11941, %r11940;
	// end inline asm
	// begin inline asm
	mov.b32 %r11947, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11948, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11949, %r11731, %r11947;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11952, %r11949, %r11948;
	// end inline asm
	// begin inline asm
	mov.b32 %r11955, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11956, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11957, %r11734, %r11955;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11960, %r11957, %r11956;
	// end inline asm
	// begin inline asm
	mov.b32 %r11963, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11964, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11965, %r11737, %r11963;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11968, %r11965, %r11964;
	// end inline asm
	// begin inline asm
	mov.b32 %r11971, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11972, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11973, %r11740, %r11971;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11976, %r11973, %r11972;
	// end inline asm
	// begin inline asm
	mov.b32 %r11979, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11980, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11981, %r11743, %r11979;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11984, %r11981, %r11980;
	// end inline asm
	// begin inline asm
	mov.b32 %r11987, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11988, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11989, %r11746, %r11987;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11992, %r11989, %r11988;
	// end inline asm
	// begin inline asm
	mov.b32 %r11995, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11996, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11997, %r11749, %r11995;
	// end inline asm
	// begin inline asm
	min.f16x2 %r12000, %r11997, %r11996;
	// end inline asm
	// begin inline asm
	mov.b32 %r12003, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r12004, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r12005, %r11752, %r12003;
	// end inline asm
	// begin inline asm
	min.f16x2 %r12008, %r12005, %r12004;
	// end inline asm
	// begin inline asm
	mov.b32 %r12014, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12012, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12013, %r12014, %r12012;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12016, %r11760, %r12013;
	// end inline asm
	// begin inline asm
	mov.b32 %r12019, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12020, %r12014, %r12019;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12023, %r11768, %r12020;
	// end inline asm
	// begin inline asm
	mov.b32 %r12026, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12027, %r12014, %r12026;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12030, %r11776, %r12027;
	// end inline asm
	// begin inline asm
	mov.b32 %r12033, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12034, %r12014, %r12033;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12037, %r11784, %r12034;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12040, %r12016, %r12030, %r4411;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12044, %r12023, %r12037, %r4411;
	// end inline asm
	shl.b32 	%r12051, %r12044, 4;
	// begin inline asm
	lop3.b32 %r12048, %r4417, %r12040, %r12051, 202;
	// end inline asm
	xor.b32  	%r16260, %r12048, -2004318072;
	// begin inline asm
	mov.b32 %r12055, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12053, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12054, %r12055, %r12053;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12057, %r11792, %r12054;
	// end inline asm
	// begin inline asm
	mov.b32 %r12060, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12061, %r12055, %r12060;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12064, %r11800, %r12061;
	// end inline asm
	// begin inline asm
	mov.b32 %r12067, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12068, %r12055, %r12067;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12071, %r11808, %r12068;
	// end inline asm
	// begin inline asm
	mov.b32 %r12074, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12075, %r12055, %r12074;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12078, %r11816, %r12075;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12081, %r12057, %r12071, %r4411;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12085, %r12064, %r12078, %r4411;
	// end inline asm
	shl.b32 	%r12092, %r12085, 4;
	// begin inline asm
	lop3.b32 %r12089, %r4417, %r12081, %r12092, 202;
	// end inline asm
	xor.b32  	%r16261, %r12089, -2004318072;
	// begin inline asm
	mov.b32 %r12096, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12094, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12095, %r12096, %r12094;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12098, %r11824, %r12095;
	// end inline asm
	// begin inline asm
	mov.b32 %r12101, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12102, %r12096, %r12101;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12105, %r11832, %r12102;
	// end inline asm
	// begin inline asm
	mov.b32 %r12108, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12109, %r12096, %r12108;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12112, %r11840, %r12109;
	// end inline asm
	// begin inline asm
	mov.b32 %r12115, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12116, %r12096, %r12115;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12119, %r11848, %r12116;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12122, %r12098, %r12112, %r4411;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12126, %r12105, %r12119, %r4411;
	// end inline asm
	shl.b32 	%r12133, %r12126, 4;
	// begin inline asm
	lop3.b32 %r12130, %r4417, %r12122, %r12133, 202;
	// end inline asm
	xor.b32  	%r16262, %r12130, -2004318072;
	// begin inline asm
	mov.b32 %r12137, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12135, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12136, %r12137, %r12135;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12139, %r11856, %r12136;
	// end inline asm
	// begin inline asm
	mov.b32 %r12142, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12143, %r12137, %r12142;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12146, %r11864, %r12143;
	// end inline asm
	// begin inline asm
	mov.b32 %r12149, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12150, %r12137, %r12149;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12153, %r11872, %r12150;
	// end inline asm
	// begin inline asm
	mov.b32 %r12156, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12157, %r12137, %r12156;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12160, %r11880, %r12157;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12163, %r12139, %r12153, %r4411;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12167, %r12146, %r12160, %r4411;
	// end inline asm
	shl.b32 	%r12174, %r12167, 4;
	// begin inline asm
	lop3.b32 %r12171, %r4417, %r12163, %r12174, 202;
	// end inline asm
	xor.b32  	%r16263, %r12171, -2004318072;
	// begin inline asm
	mov.b32 %r12178, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12176, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12177, %r12178, %r12176;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12180, %r11888, %r12177;
	// end inline asm
	// begin inline asm
	mov.b32 %r12183, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12184, %r12178, %r12183;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12187, %r11896, %r12184;
	// end inline asm
	// begin inline asm
	mov.b32 %r12190, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12191, %r12178, %r12190;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12194, %r11904, %r12191;
	// end inline asm
	// begin inline asm
	mov.b32 %r12197, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12198, %r12178, %r12197;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12201, %r11912, %r12198;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12204, %r12180, %r12194, %r4411;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12208, %r12187, %r12201, %r4411;
	// end inline asm
	shl.b32 	%r12215, %r12208, 4;
	// begin inline asm
	lop3.b32 %r12212, %r4417, %r12204, %r12215, 202;
	// end inline asm
	xor.b32  	%r16264, %r12212, -2004318072;
	// begin inline asm
	mov.b32 %r12219, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12217, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12218, %r12219, %r12217;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12221, %r11920, %r12218;
	// end inline asm
	// begin inline asm
	mov.b32 %r12224, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12225, %r12219, %r12224;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12228, %r11928, %r12225;
	// end inline asm
	// begin inline asm
	mov.b32 %r12231, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12232, %r12219, %r12231;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12235, %r11936, %r12232;
	// end inline asm
	// begin inline asm
	mov.b32 %r12238, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12239, %r12219, %r12238;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12242, %r11944, %r12239;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12245, %r12221, %r12235, %r4411;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12249, %r12228, %r12242, %r4411;
	// end inline asm
	shl.b32 	%r12256, %r12249, 4;
	// begin inline asm
	lop3.b32 %r12253, %r4417, %r12245, %r12256, 202;
	// end inline asm
	xor.b32  	%r16265, %r12253, -2004318072;
	// begin inline asm
	mov.b32 %r12260, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12258, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12259, %r12260, %r12258;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12262, %r11952, %r12259;
	// end inline asm
	// begin inline asm
	mov.b32 %r12265, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12266, %r12260, %r12265;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12269, %r11960, %r12266;
	// end inline asm
	// begin inline asm
	mov.b32 %r12272, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12273, %r12260, %r12272;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12276, %r11968, %r12273;
	// end inline asm
	// begin inline asm
	mov.b32 %r12279, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12280, %r12260, %r12279;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12283, %r11976, %r12280;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12286, %r12262, %r12276, %r4411;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12290, %r12269, %r12283, %r4411;
	// end inline asm
	shl.b32 	%r12297, %r12290, 4;
	// begin inline asm
	lop3.b32 %r12294, %r4417, %r12286, %r12297, 202;
	// end inline asm
	xor.b32  	%r16266, %r12294, -2004318072;
	// begin inline asm
	mov.b32 %r12301, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12299, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12300, %r12301, %r12299;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12303, %r11984, %r12300;
	// end inline asm
	// begin inline asm
	mov.b32 %r12306, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12307, %r12301, %r12306;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12310, %r11992, %r12307;
	// end inline asm
	// begin inline asm
	mov.b32 %r12313, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12314, %r12301, %r12313;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12317, %r12000, %r12314;
	// end inline asm
	// begin inline asm
	mov.b32 %r12320, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12321, %r12301, %r12320;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12324, %r12008, %r12321;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12327, %r12303, %r12317, %r4411;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12331, %r12310, %r12324, %r4411;
	// end inline asm
	shl.b32 	%r12338, %r12331, 4;
	// begin inline asm
	lop3.b32 %r12335, %r4417, %r12327, %r12338, 202;
	// end inline asm
	xor.b32  	%r16267, %r12335, -2004318072;
	st.shared.u32 	[%rd110], %r16260;
	st.shared.u32 	[%rd112], %r16261;
	st.shared.u32 	[%rd114], %r16262;
	st.shared.u32 	[%rd116], %r16263;
	st.shared.u32 	[%rd118], %r16264;
	st.shared.u32 	[%rd120], %r16265;
	st.shared.u32 	[%rd122], %r16266;
	st.shared.u32 	[%rd124], %r16267;
	ld.shared.u32 	%r16403, [%rd94];
	ld.shared.u32 	%r16404, [%rd96];
	ld.shared.u32 	%r16405, [%rd98];
	ld.shared.u32 	%r16406, [%rd100];
	ld.shared.u32 	%r16415, [%rd102];
	ld.shared.u32 	%r16416, [%rd104];
	ld.shared.u32 	%r16417, [%rd106];
	ld.shared.u32 	%r16418, [%rd108];
	// begin inline asm
	mov.b32 %r12344, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12355, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12343, %r16403, -2004318072;
	// begin inline asm
	lop3.b32 %r12341, %r894, %r12343, %r12344, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12345, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12346, %r12344, %r12345;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12349, %r12341, %r12346;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12352, %r905, %r12343, %r12355, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12356, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12357, %r12355, %r12356;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12360, %r12352, %r12357;
	// end inline asm
	shr.u32 	%r12365, %r12343, 8;
	// begin inline asm
	lop3.b32 %r12363, %r894, %r12365, %r12344, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12367, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12368, %r12344, %r12367;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12371, %r12363, %r12368;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12374, %r905, %r12365, %r12355, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12378, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12379, %r12355, %r12378;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12382, %r12374, %r12379;
	// end inline asm
	// begin inline asm
	mov.b32 %r12390, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12401, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12389, %r16404, -2004318072;
	// begin inline asm
	lop3.b32 %r12387, %r894, %r12389, %r12390, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12391, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12392, %r12390, %r12391;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12395, %r12387, %r12392;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12398, %r905, %r12389, %r12401, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12402, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12403, %r12401, %r12402;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12406, %r12398, %r12403;
	// end inline asm
	shr.u32 	%r12411, %r12389, 8;
	// begin inline asm
	lop3.b32 %r12409, %r894, %r12411, %r12390, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12413, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12414, %r12390, %r12413;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12417, %r12409, %r12414;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12420, %r905, %r12411, %r12401, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12424, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12425, %r12401, %r12424;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12428, %r12420, %r12425;
	// end inline asm
	// begin inline asm
	mov.b32 %r12436, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12447, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12435, %r16405, -2004318072;
	// begin inline asm
	lop3.b32 %r12433, %r894, %r12435, %r12436, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12437, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12438, %r12436, %r12437;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12441, %r12433, %r12438;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12444, %r905, %r12435, %r12447, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12448, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12449, %r12447, %r12448;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12452, %r12444, %r12449;
	// end inline asm
	shr.u32 	%r12457, %r12435, 8;
	// begin inline asm
	lop3.b32 %r12455, %r894, %r12457, %r12436, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12459, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12460, %r12436, %r12459;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12463, %r12455, %r12460;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12466, %r905, %r12457, %r12447, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12470, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12471, %r12447, %r12470;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12474, %r12466, %r12471;
	// end inline asm
	// begin inline asm
	mov.b32 %r12482, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12493, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12481, %r16406, -2004318072;
	// begin inline asm
	lop3.b32 %r12479, %r894, %r12481, %r12482, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12483, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12484, %r12482, %r12483;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12487, %r12479, %r12484;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12490, %r905, %r12481, %r12493, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12494, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12495, %r12493, %r12494;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12498, %r12490, %r12495;
	// end inline asm
	shr.u32 	%r12503, %r12481, 8;
	// begin inline asm
	lop3.b32 %r12501, %r894, %r12503, %r12482, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12505, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12506, %r12482, %r12505;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12509, %r12501, %r12506;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12512, %r905, %r12503, %r12493, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12516, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12517, %r12493, %r12516;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12520, %r12512, %r12517;
	// end inline asm
	// begin inline asm
	mov.b32 %r12528, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12539, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12527, %r16415, -2004318072;
	// begin inline asm
	lop3.b32 %r12525, %r894, %r12527, %r12528, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12529, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12530, %r12528, %r12529;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12533, %r12525, %r12530;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12536, %r905, %r12527, %r12539, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12540, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12541, %r12539, %r12540;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12544, %r12536, %r12541;
	// end inline asm
	shr.u32 	%r12549, %r12527, 8;
	// begin inline asm
	lop3.b32 %r12547, %r894, %r12549, %r12528, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12551, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12552, %r12528, %r12551;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12555, %r12547, %r12552;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12558, %r905, %r12549, %r12539, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12562, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12563, %r12539, %r12562;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12566, %r12558, %r12563;
	// end inline asm
	// begin inline asm
	mov.b32 %r12574, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12585, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12573, %r16416, -2004318072;
	// begin inline asm
	lop3.b32 %r12571, %r894, %r12573, %r12574, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12575, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12576, %r12574, %r12575;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12579, %r12571, %r12576;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12582, %r905, %r12573, %r12585, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12586, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12587, %r12585, %r12586;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12590, %r12582, %r12587;
	// end inline asm
	shr.u32 	%r12595, %r12573, 8;
	// begin inline asm
	lop3.b32 %r12593, %r894, %r12595, %r12574, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12597, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12598, %r12574, %r12597;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12601, %r12593, %r12598;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12604, %r905, %r12595, %r12585, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12608, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12609, %r12585, %r12608;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12612, %r12604, %r12609;
	// end inline asm
	// begin inline asm
	mov.b32 %r12620, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12631, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12619, %r16417, -2004318072;
	// begin inline asm
	lop3.b32 %r12617, %r894, %r12619, %r12620, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12621, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12622, %r12620, %r12621;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12625, %r12617, %r12622;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12628, %r905, %r12619, %r12631, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12632, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12633, %r12631, %r12632;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12636, %r12628, %r12633;
	// end inline asm
	shr.u32 	%r12641, %r12619, 8;
	// begin inline asm
	lop3.b32 %r12639, %r894, %r12641, %r12620, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12643, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12644, %r12620, %r12643;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12647, %r12639, %r12644;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12650, %r905, %r12641, %r12631, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12654, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12655, %r12631, %r12654;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12658, %r12650, %r12655;
	// end inline asm
	// begin inline asm
	mov.b32 %r12666, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12677, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12665, %r16418, -2004318072;
	// begin inline asm
	lop3.b32 %r12663, %r894, %r12665, %r12666, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12667, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12668, %r12666, %r12667;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12671, %r12663, %r12668;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12674, %r905, %r12665, %r12677, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12678, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12679, %r12677, %r12678;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12682, %r12674, %r12679;
	// end inline asm
	shr.u32 	%r12687, %r12665, 8;
	// begin inline asm
	lop3.b32 %r12685, %r894, %r12687, %r12666, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12689, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12690, %r12666, %r12689;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12693, %r12685, %r12690;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12696, %r905, %r12687, %r12677, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12700, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12701, %r12677, %r12700;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12704, %r12696, %r12701;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12707, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12709, %r12707, %r12349;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12712, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12714, %r12712, %r12360;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12717, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12719, %r12717, %r12371;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12722, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12724, %r12722, %r12382;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12727, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12729, %r12727, %r12395;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12732, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12734, %r12732, %r12406;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12737, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12739, %r12737, %r12417;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12742, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12744, %r12742, %r12428;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12747, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12749, %r12747, %r12441;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12752, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12754, %r12752, %r12452;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12757, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12759, %r12757, %r12463;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12762, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12764, %r12762, %r12474;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12767, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12769, %r12767, %r12487;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12772, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12774, %r12772, %r12498;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12777, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12779, %r12777, %r12509;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12782, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12784, %r12782, %r12520;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12787, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12789, %r12787, %r12533;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12792, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12794, %r12792, %r12544;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12797, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12799, %r12797, %r12555;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12802, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12804, %r12802, %r12566;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12807, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12809, %r12807, %r12579;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12812, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12814, %r12812, %r12590;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12817, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12819, %r12817, %r12601;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12822, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12824, %r12822, %r12612;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12827, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12829, %r12827, %r12625;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12832, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12834, %r12832, %r12636;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12837, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12839, %r12837, %r12647;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12842, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12844, %r12842, %r12658;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12847, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12849, %r12847, %r12671;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12852, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12854, %r12852, %r12682;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12857, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12859, %r12857, %r12693;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12862, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12864, %r12862, %r12704;
	// end inline asm
	// begin inline asm
	mov.b32 %r12872, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12883, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12869, %r894, %r895, %r12872, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12873, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12874, %r12872, %r12873;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12877, %r12869, %r12874;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12880, %r905, %r895, %r12883, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12884, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12885, %r12883, %r12884;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12888, %r12880, %r12885;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12891, %r894, %r917, %r12872, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12895, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12896, %r12872, %r12895;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12899, %r12891, %r12896;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12902, %r905, %r917, %r12883, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12906, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12907, %r12883, %r12906;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12910, %r12902, %r12907;
	// end inline asm
	// begin inline asm
	mov.b32 %r12918, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12929, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12915, %r894, %r941, %r12918, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12919, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12920, %r12918, %r12919;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12923, %r12915, %r12920;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12926, %r905, %r941, %r12929, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12930, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12931, %r12929, %r12930;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12934, %r12926, %r12931;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12937, %r894, %r963, %r12918, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12941, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12942, %r12918, %r12941;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12945, %r12937, %r12942;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12948, %r905, %r963, %r12929, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12952, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12953, %r12929, %r12952;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12956, %r12948, %r12953;
	// end inline asm
	// begin inline asm
	mov.b32 %r12964, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12975, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12961, %r894, %r987, %r12964, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12965, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12966, %r12964, %r12965;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12969, %r12961, %r12966;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12972, %r905, %r987, %r12975, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12976, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12977, %r12975, %r12976;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12980, %r12972, %r12977;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12983, %r894, %r1009, %r12964, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12987, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12988, %r12964, %r12987;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12991, %r12983, %r12988;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12994, %r905, %r1009, %r12975, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12998, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12999, %r12975, %r12998;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13002, %r12994, %r12999;
	// end inline asm
	// begin inline asm
	mov.b32 %r13010, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13021, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13007, %r894, %r1033, %r13010, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13011, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13012, %r13010, %r13011;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13015, %r13007, %r13012;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13018, %r905, %r1033, %r13021, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13022, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13023, %r13021, %r13022;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13026, %r13018, %r13023;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13029, %r894, %r1055, %r13010, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13033, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13034, %r13010, %r13033;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13037, %r13029, %r13034;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13040, %r905, %r1055, %r13021, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13044, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13045, %r13021, %r13044;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13048, %r13040, %r13045;
	// end inline asm
	// begin inline asm
	mov.b32 %r13056, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13067, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13053, %r894, %r1079, %r13056, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13057, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13058, %r13056, %r13057;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13061, %r13053, %r13058;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13064, %r905, %r1079, %r13067, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13068, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13069, %r13067, %r13068;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13072, %r13064, %r13069;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13075, %r894, %r1101, %r13056, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13079, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13080, %r13056, %r13079;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13083, %r13075, %r13080;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13086, %r905, %r1101, %r13067, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13090, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13091, %r13067, %r13090;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13094, %r13086, %r13091;
	// end inline asm
	// begin inline asm
	mov.b32 %r13102, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13113, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13099, %r894, %r1125, %r13102, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13103, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13104, %r13102, %r13103;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13107, %r13099, %r13104;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13110, %r905, %r1125, %r13113, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13114, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13115, %r13113, %r13114;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13118, %r13110, %r13115;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13121, %r894, %r1147, %r13102, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13125, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13126, %r13102, %r13125;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13129, %r13121, %r13126;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13132, %r905, %r1147, %r13113, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13136, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13137, %r13113, %r13136;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13140, %r13132, %r13137;
	// end inline asm
	// begin inline asm
	mov.b32 %r13148, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13159, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13145, %r894, %r1171, %r13148, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13149, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13150, %r13148, %r13149;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13153, %r13145, %r13150;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13156, %r905, %r1171, %r13159, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13160, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13161, %r13159, %r13160;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13164, %r13156, %r13161;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13167, %r894, %r1193, %r13148, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13171, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13172, %r13148, %r13171;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13175, %r13167, %r13172;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13178, %r905, %r1193, %r13159, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13182, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13183, %r13159, %r13182;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13186, %r13178, %r13183;
	// end inline asm
	// begin inline asm
	mov.b32 %r13194, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13205, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13191, %r894, %r1217, %r13194, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13195, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13196, %r13194, %r13195;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13199, %r13191, %r13196;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13202, %r905, %r1217, %r13205, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13206, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13207, %r13205, %r13206;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13210, %r13202, %r13207;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13213, %r894, %r1239, %r13194, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13217, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13218, %r13194, %r13217;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13221, %r13213, %r13218;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13224, %r905, %r1239, %r13205, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13228, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13229, %r13205, %r13228;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13232, %r13224, %r13229;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13235, %r313, %r12877, %r12709;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13239, %r313, %r12888, %r12714;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13243, %r313, %r12899, %r12719;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13247, %r313, %r12910, %r12724;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13251, %r313, %r12923, %r12729;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13255, %r313, %r12934, %r12734;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13259, %r313, %r12945, %r12739;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13263, %r313, %r12956, %r12744;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13267, %r313, %r12969, %r12749;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13271, %r313, %r12980, %r12754;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13275, %r313, %r12991, %r12759;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13279, %r313, %r13002, %r12764;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13283, %r313, %r13015, %r12769;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13287, %r313, %r13026, %r12774;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13291, %r313, %r13037, %r12779;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13295, %r313, %r13048, %r12784;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13299, %r331, %r13061, %r12789;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13303, %r331, %r13072, %r12794;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13307, %r331, %r13083, %r12799;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13311, %r331, %r13094, %r12804;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13315, %r331, %r13107, %r12809;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13319, %r331, %r13118, %r12814;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13323, %r331, %r13129, %r12819;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13327, %r331, %r13140, %r12824;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13331, %r331, %r13153, %r12829;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13335, %r331, %r13164, %r12834;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13339, %r331, %r13175, %r12839;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13343, %r331, %r13186, %r12844;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13347, %r331, %r13199, %r12849;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13351, %r331, %r13210, %r12854;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13355, %r331, %r13221, %r12859;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13359, %r331, %r13232, %r12864;
	// end inline asm
	// begin inline asm
	mov.b32 %r13368, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13379, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13365, %r894, %r4711, %r13368, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13369, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13370, %r13368, %r13369;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13373, %r13365, %r13370;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13376, %r905, %r4711, %r13379, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13380, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13381, %r13379, %r13380;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13384, %r13376, %r13381;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13387, %r894, %r4733, %r13368, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13391, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13392, %r13368, %r13391;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13395, %r13387, %r13392;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13398, %r905, %r4733, %r13379, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13402, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13403, %r13379, %r13402;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13406, %r13398, %r13403;
	// end inline asm
	// begin inline asm
	mov.b32 %r13414, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13425, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13411, %r894, %r4757, %r13414, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13415, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13416, %r13414, %r13415;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13419, %r13411, %r13416;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13422, %r905, %r4757, %r13425, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13426, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13427, %r13425, %r13426;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13430, %r13422, %r13427;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13433, %r894, %r4779, %r13414, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13437, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13438, %r13414, %r13437;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13441, %r13433, %r13438;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13444, %r905, %r4779, %r13425, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13448, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13449, %r13425, %r13448;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13452, %r13444, %r13449;
	// end inline asm
	// begin inline asm
	mov.b32 %r13460, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13471, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13457, %r894, %r4803, %r13460, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13461, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13462, %r13460, %r13461;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13465, %r13457, %r13462;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13468, %r905, %r4803, %r13471, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13472, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13473, %r13471, %r13472;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13476, %r13468, %r13473;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13479, %r894, %r4825, %r13460, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13483, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13484, %r13460, %r13483;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13487, %r13479, %r13484;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13490, %r905, %r4825, %r13471, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13494, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13495, %r13471, %r13494;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13498, %r13490, %r13495;
	// end inline asm
	// begin inline asm
	mov.b32 %r13506, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13517, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13503, %r894, %r4849, %r13506, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13507, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13508, %r13506, %r13507;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13511, %r13503, %r13508;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13514, %r905, %r4849, %r13517, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13518, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13519, %r13517, %r13518;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13522, %r13514, %r13519;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13525, %r894, %r4871, %r13506, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13529, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13530, %r13506, %r13529;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13533, %r13525, %r13530;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13536, %r905, %r4871, %r13517, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13540, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13541, %r13517, %r13540;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13544, %r13536, %r13541;
	// end inline asm
	// begin inline asm
	mov.b32 %r13552, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13563, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13549, %r894, %r4895, %r13552, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13553, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13554, %r13552, %r13553;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13557, %r13549, %r13554;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13560, %r905, %r4895, %r13563, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13564, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13565, %r13563, %r13564;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13568, %r13560, %r13565;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13571, %r894, %r4917, %r13552, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13575, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13576, %r13552, %r13575;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13579, %r13571, %r13576;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13582, %r905, %r4917, %r13563, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13586, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13587, %r13563, %r13586;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13590, %r13582, %r13587;
	// end inline asm
	// begin inline asm
	mov.b32 %r13598, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13609, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13595, %r894, %r4941, %r13598, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13599, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13600, %r13598, %r13599;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13603, %r13595, %r13600;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13606, %r905, %r4941, %r13609, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13610, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13611, %r13609, %r13610;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13614, %r13606, %r13611;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13617, %r894, %r4963, %r13598, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13621, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13622, %r13598, %r13621;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13625, %r13617, %r13622;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13628, %r905, %r4963, %r13609, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13632, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13633, %r13609, %r13632;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13636, %r13628, %r13633;
	// end inline asm
	// begin inline asm
	mov.b32 %r13644, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13655, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13641, %r894, %r4987, %r13644, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13645, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13646, %r13644, %r13645;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13649, %r13641, %r13646;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13652, %r905, %r4987, %r13655, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13656, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13657, %r13655, %r13656;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13660, %r13652, %r13657;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13663, %r894, %r5009, %r13644, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13667, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13668, %r13644, %r13667;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13671, %r13663, %r13668;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13674, %r905, %r5009, %r13655, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13678, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13679, %r13655, %r13678;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13682, %r13674, %r13679;
	// end inline asm
	// begin inline asm
	mov.b32 %r13690, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13701, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13687, %r894, %r5033, %r13690, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13691, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13692, %r13690, %r13691;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13695, %r13687, %r13692;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13698, %r905, %r5033, %r13701, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13702, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13703, %r13701, %r13702;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13706, %r13698, %r13703;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13709, %r894, %r5055, %r13690, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13713, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13714, %r13690, %r13713;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13717, %r13709, %r13714;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13720, %r905, %r5055, %r13701, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13724, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13725, %r13701, %r13724;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13728, %r13720, %r13725;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13731, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13733, %r13731, %r13373, %r13235;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13737, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13739, %r13737, %r13384, %r13239;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13743, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13745, %r13743, %r13395, %r13243;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13749, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13751, %r13749, %r13406, %r13247;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13755, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13757, %r13755, %r13419, %r13251;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13761, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13763, %r13761, %r13430, %r13255;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13767, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13769, %r13767, %r13441, %r13259;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13773, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13775, %r13773, %r13452, %r13263;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13779, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13781, %r13779, %r13465, %r13267;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13785, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13787, %r13785, %r13476, %r13271;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13791, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13793, %r13791, %r13487, %r13275;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13797, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13799, %r13797, %r13498, %r13279;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13803, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13805, %r13803, %r13511, %r13283;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13809, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13811, %r13809, %r13522, %r13287;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13815, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13817, %r13815, %r13533, %r13291;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13821, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13823, %r13821, %r13544, %r13295;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13827, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13829, %r13827, %r13557, %r13299;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13833, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13835, %r13833, %r13568, %r13303;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13839, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13841, %r13839, %r13579, %r13307;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13845, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13847, %r13845, %r13590, %r13311;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13851, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13853, %r13851, %r13603, %r13315;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13857, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13859, %r13857, %r13614, %r13319;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13863, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13865, %r13863, %r13625, %r13323;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13869, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13871, %r13869, %r13636, %r13327;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13875, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13877, %r13875, %r13649, %r13331;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13881, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13883, %r13881, %r13660, %r13335;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13887, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13889, %r13887, %r13671, %r13339;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13893, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13895, %r13893, %r13682, %r13343;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13899, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13901, %r13899, %r13695, %r13347;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13905, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13907, %r13905, %r13706, %r13351;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13911, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13913, %r13911, %r13717, %r13355;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13917, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13919, %r13917, %r13728, %r13359;
	// end inline asm
	// begin inline asm
	mov.b32 %r13928, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13939, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13925, %r894, %r8527, %r13928, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13929, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13930, %r13928, %r13929;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13933, %r13925, %r13930;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13936, %r905, %r8527, %r13939, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13940, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13941, %r13939, %r13940;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13944, %r13936, %r13941;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13947, %r894, %r8549, %r13928, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13951, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13952, %r13928, %r13951;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13955, %r13947, %r13952;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13958, %r905, %r8549, %r13939, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13962, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13963, %r13939, %r13962;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13966, %r13958, %r13963;
	// end inline asm
	// begin inline asm
	mov.b32 %r13974, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13985, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13971, %r894, %r8573, %r13974, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13975, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13976, %r13974, %r13975;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13979, %r13971, %r13976;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13982, %r905, %r8573, %r13985, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13986, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13987, %r13985, %r13986;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13990, %r13982, %r13987;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13993, %r894, %r8595, %r13974, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13997, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13998, %r13974, %r13997;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14001, %r13993, %r13998;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14004, %r905, %r8595, %r13985, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14008, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14009, %r13985, %r14008;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14012, %r14004, %r14009;
	// end inline asm
	// begin inline asm
	mov.b32 %r14020, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r14031, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14017, %r894, %r8619, %r14020, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14021, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14022, %r14020, %r14021;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14025, %r14017, %r14022;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14028, %r905, %r8619, %r14031, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14032, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14033, %r14031, %r14032;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14036, %r14028, %r14033;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14039, %r894, %r8641, %r14020, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14043, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14044, %r14020, %r14043;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14047, %r14039, %r14044;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14050, %r905, %r8641, %r14031, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14054, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14055, %r14031, %r14054;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14058, %r14050, %r14055;
	// end inline asm
	// begin inline asm
	mov.b32 %r14066, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r14077, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14063, %r894, %r8665, %r14066, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14067, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14068, %r14066, %r14067;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14071, %r14063, %r14068;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14074, %r905, %r8665, %r14077, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14078, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14079, %r14077, %r14078;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14082, %r14074, %r14079;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14085, %r894, %r8687, %r14066, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14089, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14090, %r14066, %r14089;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14093, %r14085, %r14090;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14096, %r905, %r8687, %r14077, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14100, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14101, %r14077, %r14100;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14104, %r14096, %r14101;
	// end inline asm
	// begin inline asm
	mov.b32 %r14112, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r14123, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14109, %r894, %r8711, %r14112, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14113, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14114, %r14112, %r14113;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14117, %r14109, %r14114;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14120, %r905, %r8711, %r14123, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14124, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14125, %r14123, %r14124;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14128, %r14120, %r14125;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14131, %r894, %r8733, %r14112, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14135, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14136, %r14112, %r14135;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14139, %r14131, %r14136;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14142, %r905, %r8733, %r14123, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14146, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14147, %r14123, %r14146;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14150, %r14142, %r14147;
	// end inline asm
	// begin inline asm
	mov.b32 %r14158, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r14169, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14155, %r894, %r8757, %r14158, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14159, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14160, %r14158, %r14159;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14163, %r14155, %r14160;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14166, %r905, %r8757, %r14169, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14170, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14171, %r14169, %r14170;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14174, %r14166, %r14171;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14177, %r894, %r8779, %r14158, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14181, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14182, %r14158, %r14181;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14185, %r14177, %r14182;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14188, %r905, %r8779, %r14169, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14192, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14193, %r14169, %r14192;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14196, %r14188, %r14193;
	// end inline asm
	// begin inline asm
	mov.b32 %r14204, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r14215, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14201, %r894, %r8803, %r14204, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14205, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14206, %r14204, %r14205;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14209, %r14201, %r14206;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14212, %r905, %r8803, %r14215, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14216, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14217, %r14215, %r14216;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14220, %r14212, %r14217;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14223, %r894, %r8825, %r14204, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14227, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14228, %r14204, %r14227;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14231, %r14223, %r14228;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14234, %r905, %r8825, %r14215, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14238, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14239, %r14215, %r14238;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14242, %r14234, %r14239;
	// end inline asm
	// begin inline asm
	mov.b32 %r14250, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r14261, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14247, %r894, %r8849, %r14250, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14251, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14252, %r14250, %r14251;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14255, %r14247, %r14252;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14258, %r905, %r8849, %r14261, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14262, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14263, %r14261, %r14262;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14266, %r14258, %r14263;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14269, %r894, %r8871, %r14250, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14273, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14274, %r14250, %r14273;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14277, %r14269, %r14274;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14280, %r905, %r8871, %r14261, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14284, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14285, %r14261, %r14284;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14288, %r14280, %r14285;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14426, %r385, %r13933, %r13733;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14423, %r385, %r13944, %r13739;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14435, %r385, %r13955, %r13745;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14432, %r385, %r13966, %r13751;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14444, %r385, %r13979, %r13757;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14441, %r385, %r13990, %r13763;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14453, %r385, %r14001, %r13769;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14450, %r385, %r14012, %r13775;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14462, %r385, %r14025, %r13781;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14459, %r385, %r14036, %r13787;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14471, %r385, %r14047, %r13793;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14468, %r385, %r14058, %r13799;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14480, %r385, %r14071, %r13805;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14477, %r385, %r14082, %r13811;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14489, %r385, %r14093, %r13817;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14486, %r385, %r14104, %r13823;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14498, %r403, %r14117, %r13829;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14495, %r403, %r14128, %r13835;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14507, %r403, %r14139, %r13841;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14504, %r403, %r14150, %r13847;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14516, %r403, %r14163, %r13853;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14513, %r403, %r14174, %r13859;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14525, %r403, %r14185, %r13865;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14522, %r403, %r14196, %r13871;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14534, %r403, %r14209, %r13877;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14531, %r403, %r14220, %r13883;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14543, %r403, %r14231, %r13889;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14540, %r403, %r14242, %r13895;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14552, %r403, %r14255, %r13901;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14549, %r403, %r14266, %r13907;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14561, %r403, %r14277, %r13913;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14558, %r403, %r14288, %r13919;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14419, %r473;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14421, %r14419, %r14423;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14424, %r467, %r14426, %r14421;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14428, %r473;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14430, %r14428, %r14432;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14433, %r467, %r14435, %r14430;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14437, %r473;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14439, %r14437, %r14441;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14442, %r467, %r14444, %r14439;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14446, %r473;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14448, %r14446, %r14450;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14451, %r467, %r14453, %r14448;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14455, %r473;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14457, %r14455, %r14459;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14460, %r467, %r14462, %r14457;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14464, %r473;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14466, %r14464, %r14468;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14469, %r467, %r14471, %r14466;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14473, %r473;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14475, %r14473, %r14477;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14478, %r467, %r14480, %r14475;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14482, %r473;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14484, %r14482, %r14486;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14487, %r467, %r14489, %r14484;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14491, %r476;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14493, %r14491, %r14495;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14496, %r470, %r14498, %r14493;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14500, %r476;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14502, %r14500, %r14504;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14505, %r470, %r14507, %r14502;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14509, %r476;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14511, %r14509, %r14513;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14514, %r470, %r14516, %r14511;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14518, %r476;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14520, %r14518, %r14522;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14523, %r470, %r14525, %r14520;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14527, %r476;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14529, %r14527, %r14531;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14532, %r470, %r14534, %r14529;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14536, %r476;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14538, %r14536, %r14540;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14541, %r470, %r14543, %r14538;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14545, %r476;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14547, %r14545, %r14549;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14550, %r470, %r14552, %r14547;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14554, %r476;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14556, %r14554, %r14558;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14559, %r470, %r14561, %r14556;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14563, %r473, %r14426;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14566, %r467, %r14423, %r14563;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14570, %r473, %r14435;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14573, %r467, %r14432, %r14570;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14577, %r473, %r14444;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14580, %r467, %r14441, %r14577;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14584, %r473, %r14453;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14587, %r467, %r14450, %r14584;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14591, %r473, %r14462;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14594, %r467, %r14459, %r14591;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14598, %r473, %r14471;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14601, %r467, %r14468, %r14598;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14605, %r473, %r14480;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14608, %r467, %r14477, %r14605;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14612, %r473, %r14489;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14615, %r467, %r14486, %r14612;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14619, %r476, %r14498;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14622, %r470, %r14495, %r14619;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14626, %r476, %r14507;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14629, %r470, %r14504, %r14626;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14633, %r476, %r14516;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14636, %r470, %r14513, %r14633;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14640, %r476, %r14525;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14643, %r470, %r14522, %r14640;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14647, %r476, %r14534;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14650, %r470, %r14531, %r14647;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14654, %r476, %r14543;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14657, %r470, %r14540, %r14654;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14661, %r476, %r14552;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14664, %r470, %r14549, %r14661;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14668, %r476, %r14561;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14671, %r470, %r14558, %r14668;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14842, %r14839}, {%r522, %r528, %r525, %r531}, {%r14424, %r14566}, {%r808, %r808};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14851, %r14848}, {%r522, %r528, %r525, %r531}, {%r14433, %r14573}, {%r808, %r808};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14860, %r14857}, {%r522, %r528, %r525, %r531}, {%r14442, %r14580}, {%r808, %r808};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14869, %r14866}, {%r522, %r528, %r525, %r531}, {%r14451, %r14587}, {%r808, %r808};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14878, %r14875}, {%r522, %r528, %r525, %r531}, {%r14460, %r14594}, {%r808, %r808};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14887, %r14884}, {%r522, %r528, %r525, %r531}, {%r14469, %r14601}, {%r808, %r808};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14896, %r14893}, {%r522, %r528, %r525, %r531}, {%r14478, %r14608}, {%r808, %r808};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14905, %r14902}, {%r522, %r528, %r525, %r531}, {%r14487, %r14615}, {%r808, %r808};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14914, %r14911}, {%r522, %r528, %r525, %r531}, {%r14496, %r14622}, {%r808, %r808};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14923, %r14920}, {%r522, %r528, %r525, %r531}, {%r14505, %r14629}, {%r808, %r808};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14932, %r14929}, {%r522, %r528, %r525, %r531}, {%r14514, %r14636}, {%r808, %r808};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14941, %r14938}, {%r522, %r528, %r525, %r531}, {%r14523, %r14643}, {%r808, %r808};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14950, %r14947}, {%r522, %r528, %r525, %r531}, {%r14532, %r14650}, {%r808, %r808};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14959, %r14956}, {%r522, %r528, %r525, %r531}, {%r14541, %r14657}, {%r808, %r808};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14968, %r14965}, {%r522, %r528, %r525, %r531}, {%r14550, %r14664}, {%r808, %r808};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14977, %r14974}, {%r522, %r528, %r525, %r531}, {%r14559, %r14671}, {%r808, %r808};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14835, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14837, %r14835, %r14839;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14840, %r572, %r14842, %r14837;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14844, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14846, %r14844, %r14848;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14849, %r572, %r14851, %r14846;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14853, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14855, %r14853, %r14857;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14858, %r572, %r14860, %r14855;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14862, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14864, %r14862, %r14866;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14867, %r572, %r14869, %r14864;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14871, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14873, %r14871, %r14875;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14876, %r572, %r14878, %r14873;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14880, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14882, %r14880, %r14884;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14885, %r572, %r14887, %r14882;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14889, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14891, %r14889, %r14893;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14894, %r572, %r14896, %r14891;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14898, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14900, %r14898, %r14902;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14903, %r572, %r14905, %r14900;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14907, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14909, %r14907, %r14911;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14912, %r572, %r14914, %r14909;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14916, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14918, %r14916, %r14920;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14921, %r572, %r14923, %r14918;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14925, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14927, %r14925, %r14929;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14930, %r572, %r14932, %r14927;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14934, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14936, %r14934, %r14938;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14939, %r572, %r14941, %r14936;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14943, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14945, %r14943, %r14947;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14948, %r572, %r14950, %r14945;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14952, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14954, %r14952, %r14956;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14957, %r572, %r14959, %r14954;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14961, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14963, %r14961, %r14965;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14966, %r572, %r14968, %r14963;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14970, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14972, %r14970, %r14974;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14975, %r572, %r14977, %r14972;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14979, %r575, %r14842;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14982, %r572, %r14839, %r14979;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14986, %r575, %r14851;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14989, %r572, %r14848, %r14986;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14993, %r575, %r14860;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14996, %r572, %r14857, %r14993;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15000, %r575, %r14869;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15003, %r572, %r14866, %r15000;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15007, %r575, %r14878;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15010, %r572, %r14875, %r15007;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15014, %r575, %r14887;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15017, %r572, %r14884, %r15014;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15021, %r575, %r14896;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15024, %r572, %r14893, %r15021;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15028, %r575, %r14905;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15031, %r572, %r14902, %r15028;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15035, %r575, %r14914;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15038, %r572, %r14911, %r15035;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15042, %r575, %r14923;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15045, %r572, %r14920, %r15042;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15049, %r575, %r14932;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15052, %r572, %r14929, %r15049;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15056, %r575, %r14941;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15059, %r572, %r14938, %r15056;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15063, %r575, %r14950;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15066, %r572, %r14947, %r15063;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15070, %r575, %r14959;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15073, %r572, %r14956, %r15070;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15077, %r575, %r14968;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15080, %r572, %r14965, %r15077;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15084, %r575, %r14977;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15087, %r572, %r14974, %r15084;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15380, %r15383}, {%r610, %r616, %r613, %r619}, {%r14840, %r14982}, {%r808, %r808};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15386, %r15389}, {%r610, %r616, %r613, %r619}, {%r14849, %r14989}, {%r808, %r808};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15392, %r15395}, {%r610, %r616, %r613, %r619}, {%r14858, %r14996}, {%r808, %r808};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15398, %r15401}, {%r610, %r616, %r613, %r619}, {%r14867, %r15003}, {%r808, %r808};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15404, %r15407}, {%r610, %r616, %r613, %r619}, {%r14876, %r15010}, {%r808, %r808};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15410, %r15413}, {%r610, %r616, %r613, %r619}, {%r14885, %r15017}, {%r808, %r808};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15416, %r15419}, {%r610, %r616, %r613, %r619}, {%r14894, %r15024}, {%r808, %r808};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15422, %r15425}, {%r610, %r616, %r613, %r619}, {%r14903, %r15031}, {%r808, %r808};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15381, %r15384}, {%r610, %r616, %r613, %r619}, {%r14912, %r15038}, {%r808, %r808};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15387, %r15390}, {%r610, %r616, %r613, %r619}, {%r14921, %r15045}, {%r808, %r808};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15393, %r15396}, {%r610, %r616, %r613, %r619}, {%r14930, %r15052}, {%r808, %r808};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15399, %r15402}, {%r610, %r616, %r613, %r619}, {%r14939, %r15059}, {%r808, %r808};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15405, %r15408}, {%r610, %r616, %r613, %r619}, {%r14948, %r15066}, {%r808, %r808};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15411, %r15414}, {%r610, %r616, %r613, %r619}, {%r14957, %r15073}, {%r808, %r808};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15417, %r15420}, {%r610, %r616, %r613, %r619}, {%r14966, %r15080}, {%r808, %r808};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15423, %r15426}, {%r610, %r616, %r613, %r619}, {%r14975, %r15087}, {%r808, %r808};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15379, %r15380, %r15381;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15382, %r15383, %r15384;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15385, %r15386, %r15387;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15388, %r15389, %r15390;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15391, %r15392, %r15393;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15394, %r15395, %r15396;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15397, %r15398, %r15399;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15400, %r15401, %r15402;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15403, %r15404, %r15405;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15406, %r15407, %r15408;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15409, %r15410, %r15411;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15412, %r15413, %r15414;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15415, %r15416, %r15417;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15418, %r15419, %r15420;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15421, %r15422, %r15423;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15424, %r15425, %r15426;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15427, %r15380, %r15381;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15430, %r15383, %r15384;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15433, %r15386, %r15387;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15436, %r15389, %r15390;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15439, %r15392, %r15393;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15442, %r15395, %r15396;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15445, %r15398, %r15399;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15448, %r15401, %r15402;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15451, %r15404, %r15405;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15454, %r15407, %r15408;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15457, %r15410, %r15411;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15460, %r15413, %r15414;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15463, %r15416, %r15417;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15466, %r15419, %r15420;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15469, %r15422, %r15423;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15472, %r15425, %r15426;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15475, %r234, %r15379;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15478, %r234, %r15382;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15481, %r234, %r15385;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15484, %r234, %r15388;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15487, %r234, %r15391;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15490, %r234, %r15394;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15493, %r234, %r15397;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15496, %r234, %r15400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15499, %r234, %r15403;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15502, %r234, %r15406;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15505, %r234, %r15409;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15508, %r234, %r15412;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15511, %r234, %r15415;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15514, %r234, %r15418;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15517, %r234, %r15421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15520, %r234, %r15424;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15523, %r236, %r15427;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15526, %r236, %r15430;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15529, %r236, %r15433;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15532, %r236, %r15436;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15535, %r236, %r15439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15538, %r236, %r15442;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15541, %r236, %r15445;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15544, %r236, %r15448;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15547, %r236, %r15451;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15550, %r236, %r15454;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15553, %r236, %r15457;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15556, %r236, %r15460;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15559, %r236, %r15463;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15562, %r236, %r15466;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15565, %r236, %r15469;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15568, %r236, %r15472;
	// end inline asm
	// begin inline asm
	mov.b32 %r15571, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15572, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15573, %r15475, %r15571;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15576, %r15573, %r15572;
	// end inline asm
	// begin inline asm
	mov.b32 %r15579, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15580, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15581, %r15478, %r15579;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15584, %r15581, %r15580;
	// end inline asm
	// begin inline asm
	mov.b32 %r15587, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15588, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15589, %r15481, %r15587;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15592, %r15589, %r15588;
	// end inline asm
	// begin inline asm
	mov.b32 %r15595, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15596, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15597, %r15484, %r15595;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15600, %r15597, %r15596;
	// end inline asm
	// begin inline asm
	mov.b32 %r15603, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15604, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15605, %r15487, %r15603;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15608, %r15605, %r15604;
	// end inline asm
	// begin inline asm
	mov.b32 %r15611, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15612, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15613, %r15490, %r15611;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15616, %r15613, %r15612;
	// end inline asm
	// begin inline asm
	mov.b32 %r15619, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15620, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15621, %r15493, %r15619;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15624, %r15621, %r15620;
	// end inline asm
	// begin inline asm
	mov.b32 %r15627, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15628, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15629, %r15496, %r15627;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15632, %r15629, %r15628;
	// end inline asm
	// begin inline asm
	mov.b32 %r15635, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15636, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15637, %r15499, %r15635;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15640, %r15637, %r15636;
	// end inline asm
	// begin inline asm
	mov.b32 %r15643, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15644, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15645, %r15502, %r15643;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15648, %r15645, %r15644;
	// end inline asm
	// begin inline asm
	mov.b32 %r15651, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15652, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15653, %r15505, %r15651;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15656, %r15653, %r15652;
	// end inline asm
	// begin inline asm
	mov.b32 %r15659, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15660, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15661, %r15508, %r15659;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15664, %r15661, %r15660;
	// end inline asm
	// begin inline asm
	mov.b32 %r15667, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15668, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15669, %r15511, %r15667;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15672, %r15669, %r15668;
	// end inline asm
	// begin inline asm
	mov.b32 %r15675, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15676, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15677, %r15514, %r15675;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15680, %r15677, %r15676;
	// end inline asm
	// begin inline asm
	mov.b32 %r15683, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15684, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15685, %r15517, %r15683;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15688, %r15685, %r15684;
	// end inline asm
	// begin inline asm
	mov.b32 %r15691, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15692, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15693, %r15520, %r15691;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15696, %r15693, %r15692;
	// end inline asm
	// begin inline asm
	mov.b32 %r15699, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15700, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15701, %r15523, %r15699;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15704, %r15701, %r15700;
	// end inline asm
	// begin inline asm
	mov.b32 %r15707, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15708, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15709, %r15526, %r15707;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15712, %r15709, %r15708;
	// end inline asm
	// begin inline asm
	mov.b32 %r15715, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15716, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15717, %r15529, %r15715;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15720, %r15717, %r15716;
	// end inline asm
	// begin inline asm
	mov.b32 %r15723, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15724, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15725, %r15532, %r15723;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15728, %r15725, %r15724;
	// end inline asm
	// begin inline asm
	mov.b32 %r15731, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15732, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15733, %r15535, %r15731;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15736, %r15733, %r15732;
	// end inline asm
	// begin inline asm
	mov.b32 %r15739, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15740, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15741, %r15538, %r15739;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15744, %r15741, %r15740;
	// end inline asm
	// begin inline asm
	mov.b32 %r15747, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15748, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15749, %r15541, %r15747;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15752, %r15749, %r15748;
	// end inline asm
	// begin inline asm
	mov.b32 %r15755, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15756, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15757, %r15544, %r15755;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15760, %r15757, %r15756;
	// end inline asm
	// begin inline asm
	mov.b32 %r15763, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15764, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15765, %r15547, %r15763;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15768, %r15765, %r15764;
	// end inline asm
	// begin inline asm
	mov.b32 %r15771, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15772, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15773, %r15550, %r15771;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15776, %r15773, %r15772;
	// end inline asm
	// begin inline asm
	mov.b32 %r15779, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15780, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15781, %r15553, %r15779;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15784, %r15781, %r15780;
	// end inline asm
	// begin inline asm
	mov.b32 %r15787, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15788, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15789, %r15556, %r15787;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15792, %r15789, %r15788;
	// end inline asm
	// begin inline asm
	mov.b32 %r15795, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15796, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15797, %r15559, %r15795;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15800, %r15797, %r15796;
	// end inline asm
	// begin inline asm
	mov.b32 %r15803, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15804, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15805, %r15562, %r15803;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15808, %r15805, %r15804;
	// end inline asm
	// begin inline asm
	mov.b32 %r15811, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15812, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15813, %r15565, %r15811;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15816, %r15813, %r15812;
	// end inline asm
	// begin inline asm
	mov.b32 %r15819, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15820, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15821, %r15568, %r15819;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15824, %r15821, %r15820;
	// end inline asm
	// begin inline asm
	mov.b32 %r15830, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r15828, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15829, %r15830, %r15828;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15832, %r15576, %r15829;
	// end inline asm
	// begin inline asm
	mov.b32 %r15835, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15836, %r15830, %r15835;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15839, %r15584, %r15836;
	// end inline asm
	// begin inline asm
	mov.b32 %r15842, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15843, %r15830, %r15842;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15846, %r15592, %r15843;
	// end inline asm
	// begin inline asm
	mov.b32 %r15849, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15850, %r15830, %r15849;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15853, %r15600, %r15850;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15856, %r15832, %r15846, %r4411;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15860, %r15839, %r15853, %r4411;
	// end inline asm
	shl.b32 	%r15867, %r15860, 4;
	// begin inline asm
	lop3.b32 %r15864, %r4417, %r15856, %r15867, 202;
	// end inline asm
	xor.b32  	%r16268, %r15864, -2004318072;
	// begin inline asm
	mov.b32 %r15871, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r15869, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15870, %r15871, %r15869;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15873, %r15608, %r15870;
	// end inline asm
	// begin inline asm
	mov.b32 %r15876, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15877, %r15871, %r15876;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15880, %r15616, %r15877;
	// end inline asm
	// begin inline asm
	mov.b32 %r15883, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15884, %r15871, %r15883;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15887, %r15624, %r15884;
	// end inline asm
	// begin inline asm
	mov.b32 %r15890, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15891, %r15871, %r15890;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15894, %r15632, %r15891;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15897, %r15873, %r15887, %r4411;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15901, %r15880, %r15894, %r4411;
	// end inline asm
	shl.b32 	%r15908, %r15901, 4;
	// begin inline asm
	lop3.b32 %r15905, %r4417, %r15897, %r15908, 202;
	// end inline asm
	xor.b32  	%r16269, %r15905, -2004318072;
	// begin inline asm
	mov.b32 %r15912, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r15910, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15911, %r15912, %r15910;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15914, %r15640, %r15911;
	// end inline asm
	// begin inline asm
	mov.b32 %r15917, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15918, %r15912, %r15917;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15921, %r15648, %r15918;
	// end inline asm
	// begin inline asm
	mov.b32 %r15924, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15925, %r15912, %r15924;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15928, %r15656, %r15925;
	// end inline asm
	// begin inline asm
	mov.b32 %r15931, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15932, %r15912, %r15931;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15935, %r15664, %r15932;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15938, %r15914, %r15928, %r4411;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15942, %r15921, %r15935, %r4411;
	// end inline asm
	shl.b32 	%r15949, %r15942, 4;
	// begin inline asm
	lop3.b32 %r15946, %r4417, %r15938, %r15949, 202;
	// end inline asm
	xor.b32  	%r16270, %r15946, -2004318072;
	// begin inline asm
	mov.b32 %r15953, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r15951, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15952, %r15953, %r15951;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15955, %r15672, %r15952;
	// end inline asm
	// begin inline asm
	mov.b32 %r15958, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15959, %r15953, %r15958;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15962, %r15680, %r15959;
	// end inline asm
	// begin inline asm
	mov.b32 %r15965, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15966, %r15953, %r15965;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15969, %r15688, %r15966;
	// end inline asm
	// begin inline asm
	mov.b32 %r15972, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15973, %r15953, %r15972;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15976, %r15696, %r15973;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15979, %r15955, %r15969, %r4411;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15983, %r15962, %r15976, %r4411;
	// end inline asm
	shl.b32 	%r15990, %r15983, 4;
	// begin inline asm
	lop3.b32 %r15987, %r4417, %r15979, %r15990, 202;
	// end inline asm
	xor.b32  	%r16271, %r15987, -2004318072;
	// begin inline asm
	mov.b32 %r15994, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r15992, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15993, %r15994, %r15992;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15996, %r15704, %r15993;
	// end inline asm
	// begin inline asm
	mov.b32 %r15999, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16000, %r15994, %r15999;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16003, %r15712, %r16000;
	// end inline asm
	// begin inline asm
	mov.b32 %r16006, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16007, %r15994, %r16006;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16010, %r15720, %r16007;
	// end inline asm
	// begin inline asm
	mov.b32 %r16013, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16014, %r15994, %r16013;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16017, %r15728, %r16014;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16020, %r15996, %r16010, %r4411;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16024, %r16003, %r16017, %r4411;
	// end inline asm
	shl.b32 	%r16031, %r16024, 4;
	// begin inline asm
	lop3.b32 %r16028, %r4417, %r16020, %r16031, 202;
	// end inline asm
	xor.b32  	%r16272, %r16028, -2004318072;
	// begin inline asm
	mov.b32 %r16035, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r16033, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16034, %r16035, %r16033;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16037, %r15736, %r16034;
	// end inline asm
	// begin inline asm
	mov.b32 %r16040, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16041, %r16035, %r16040;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16044, %r15744, %r16041;
	// end inline asm
	// begin inline asm
	mov.b32 %r16047, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16048, %r16035, %r16047;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16051, %r15752, %r16048;
	// end inline asm
	// begin inline asm
	mov.b32 %r16054, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16055, %r16035, %r16054;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16058, %r15760, %r16055;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16061, %r16037, %r16051, %r4411;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16065, %r16044, %r16058, %r4411;
	// end inline asm
	shl.b32 	%r16072, %r16065, 4;
	// begin inline asm
	lop3.b32 %r16069, %r4417, %r16061, %r16072, 202;
	// end inline asm
	xor.b32  	%r16273, %r16069, -2004318072;
	// begin inline asm
	mov.b32 %r16076, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r16074, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16075, %r16076, %r16074;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16078, %r15768, %r16075;
	// end inline asm
	// begin inline asm
	mov.b32 %r16081, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16082, %r16076, %r16081;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16085, %r15776, %r16082;
	// end inline asm
	// begin inline asm
	mov.b32 %r16088, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16089, %r16076, %r16088;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16092, %r15784, %r16089;
	// end inline asm
	// begin inline asm
	mov.b32 %r16095, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16096, %r16076, %r16095;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16099, %r15792, %r16096;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16102, %r16078, %r16092, %r4411;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16106, %r16085, %r16099, %r4411;
	// end inline asm
	shl.b32 	%r16113, %r16106, 4;
	// begin inline asm
	lop3.b32 %r16110, %r4417, %r16102, %r16113, 202;
	// end inline asm
	xor.b32  	%r16274, %r16110, -2004318072;
	// begin inline asm
	mov.b32 %r16117, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r16115, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16116, %r16117, %r16115;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16119, %r15800, %r16116;
	// end inline asm
	// begin inline asm
	mov.b32 %r16122, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16123, %r16117, %r16122;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16126, %r15808, %r16123;
	// end inline asm
	// begin inline asm
	mov.b32 %r16129, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16130, %r16117, %r16129;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16133, %r15816, %r16130;
	// end inline asm
	// begin inline asm
	mov.b32 %r16136, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16137, %r16117, %r16136;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16140, %r15824, %r16137;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16143, %r16119, %r16133, %r4411;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16147, %r16126, %r16140, %r4411;
	// end inline asm
	shl.b32 	%r16154, %r16147, 4;
	// begin inline asm
	lop3.b32 %r16151, %r4417, %r16143, %r16154, 202;
	// end inline asm
	xor.b32  	%r16275, %r16151, -2004318072;
	st.shared.u32 	[%rd110], %r16268;
	st.shared.u32 	[%rd112], %r16269;
	st.shared.u32 	[%rd114], %r16270;
	st.shared.u32 	[%rd116], %r16271;
	st.shared.u32 	[%rd118], %r16272;
	st.shared.u32 	[%rd120], %r16273;
	st.shared.u32 	[%rd122], %r16274;
	st.shared.u32 	[%rd124], %r16275;
	add.s32 	%r16444, %r16444, 128;
	setp.eq.s32 	%p328, %r16444, 256;
	@%p328 bra 	$L__BB0_184;
	bra.uni 	$L__BB0_183;
$L__BB0_184:                            // %guard_exit29817
                                        //   in Loop: Header=BB0_181 Depth=1
	bar.sync 	0;
	ld.shared.u32 	%r16281, [%rd5];
	ld.shared.u32 	%r16282, [%rd6+128];
	ld.shared.u32 	%r16289, [%rd6+4];
	ld.shared.u32 	%r16290, [%rd6+132];
	ld.shared.u32 	%r16297, [%rd7];
	ld.shared.u32 	%r16298, [%rd8+128];
	ld.shared.u32 	%r16305, [%rd8+4];
	ld.shared.u32 	%r16306, [%rd8+132];
	ld.shared.u32 	%r16313, [%rd5+16644];
	ld.shared.u32 	%r16314, [%rd6+16772];
	ld.shared.u32 	%r16321, [%rd6+16648];
	ld.shared.u32 	%r16322, [%rd6+16776];
	ld.shared.u32 	%r16329, [%rd7+16644];
	ld.shared.u32 	%r16330, [%rd23];
	ld.shared.u32 	%r16337, [%rd8+16648];
	ld.shared.u32 	%r16338, [%rd8+16776];
	// begin inline asm
	prmt.b32 %r16276, %r16281, %r16282, %r803;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16280, %r16281, %r16282, %r807;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16284, %r16289, %r16290, %r803;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16288, %r16289, %r16290, %r807;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16292, %r16297, %r16298, %r803;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16296, %r16297, %r16298, %r807;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16300, %r16305, %r16306, %r803;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16304, %r16305, %r16306, %r807;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16308, %r16313, %r16314, %r803;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16312, %r16313, %r16314, %r807;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16316, %r16321, %r16322, %r803;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16320, %r16321, %r16322, %r807;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16324, %r16329, %r16330, %r803;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16328, %r16329, %r16330, %r807;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16332, %r16337, %r16338, %r803;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16336, %r16337, %r16338, %r807;
	// end inline asm
	selp.b32 	%r16340, %r16280, %r16276, %p314;
	shfl.sync.bfly.b32	%r257, %r16340, 8, 31, -1;
	selp.b32 	%r16341, %r16288, %r16284, %p314;
	shfl.sync.bfly.b32	%r258, %r16341, 8, 31, -1;
	selp.b32 	%r16342, %r16296, %r16292, %p314;
	shfl.sync.bfly.b32	%r259, %r16342, 8, 31, -1;
	selp.b32 	%r16343, %r16304, %r16300, %p314;
	shfl.sync.bfly.b32	%r260, %r16343, 8, 31, -1;
	selp.b32 	%r16344, %r16312, %r16308, %p314;
	shfl.sync.bfly.b32	%r16345, %r16344, 8, 31, -1;
	selp.b32 	%r16346, %r16320, %r16316, %p314;
	shfl.sync.bfly.b32	%r16347, %r16346, 8, 31, -1;
	selp.b32 	%r16348, %r16328, %r16324, %p314;
	shfl.sync.bfly.b32	%r16349, %r16348, 8, 31, -1;
	selp.b32 	%r16350, %r16336, %r16332, %p314;
	shfl.sync.bfly.b32	%r16351, %r16350, 8, 31, -1;
	and.b32  	%r269, %r16419, 768;
	setp.lt.u32 	%p330, %r269, 384;
	shl.b32 	%r16374, %r16419, 12;
	@%p330 bra 	$L__BB0_186;
// %bb.185:                             // %pass28458
                                        //   in Loop: Header=BB0_181 Depth=1
	selp.b32 	%r16352, %r260, %r16304, %p314;
	selp.b32 	%r16353, %r16300, %r260, %p314;
	selp.b32 	%r16354, %r259, %r16296, %p314;
	selp.b32 	%r16355, %r16292, %r259, %p314;
	selp.b32 	%r16356, %r258, %r16288, %p314;
	selp.b32 	%r16357, %r16284, %r258, %p314;
	selp.b32 	%r16358, %r257, %r16280, %p314;
	selp.b32 	%r16359, %r16276, %r257, %p314;
	or.b32  	%r16361, %r16374, %r124;
	or.b32  	%r16362, %r16361, %r125;
	or.b32  	%r16363, %r16362, %r143;
	cvt.u64.u32 	%rd125, %r16363;
	add.s64 	%rd126, %rd125, %rd9;
	shr.u64 	%rd127, %rd126, 35;
	add.s64 	%rd128, %rd126, %rd127;
	shr.s64 	%rd129, %rd128, 29;
	setp.lt.s64 	%p332, %rd126, 0;
	and.b64  	%rd130, %rd128, -536870912;
	setp.ne.s64 	%p333, %rd130, %rd126;
	and.pred  	%p334, %p332, %p333;
	selp.u64 	%rd131, 1, 0, %p334;
	sub.s64 	%rd132, %rd131, %rd129;
	shl.b64 	%rd133, %rd132, 29;
	add.s64 	%rd134, %rd133, %rd126;
	shl.b64 	%rd135, %rd134, 2;
	add.s64 	%rd136, %rd3, %rd135;
	st.global.v4.u32 	[%rd136], {%r16359, %r16357, %r16358, %r16356};
	or.b32  	%r16364, %r16362, %r144;
	cvt.u64.u32 	%rd137, %r16364;
	add.s64 	%rd138, %rd137, %rd9;
	shr.u64 	%rd139, %rd138, 35;
	add.s64 	%rd140, %rd138, %rd139;
	shr.u64 	%rd141, %rd140, 29;
	shr.u64 	%rd142, %rd138, 63;
	sub.s64 	%rd143, %rd142, %rd141;
	shl.b64 	%rd144, %rd143, 29;
	add.s64 	%rd145, %rd144, %rd138;
	shl.b64 	%rd146, %rd145, 2;
	add.s64 	%rd147, %rd3, %rd146;
	st.global.v4.u32 	[%rd147], {%r16355, %r16353, %r16354, %r16352};
$L__BB0_186:                            // %pass28635
                                        //   in Loop: Header=BB0_181 Depth=1
	or.b32  	%r16365, %r269, 128;
	setp.lt.u32 	%p335, %r16365, 384;
	@%p335 bra 	$L__BB0_187;
// %bb.189:                             // %pass28678
                                        //   in Loop: Header=BB0_181 Depth=1
	selp.b32 	%r261, %r16308, %r16345, %p314;
	selp.b32 	%r262, %r16345, %r16312, %p314;
	selp.b32 	%r263, %r16316, %r16347, %p314;
	selp.b32 	%r264, %r16347, %r16320, %p314;
	selp.b32 	%r265, %r16324, %r16349, %p314;
	selp.b32 	%r266, %r16349, %r16328, %p314;
	selp.b32 	%r267, %r16332, %r16351, %p314;
	selp.b32 	%r268, %r16351, %r16336, %p314;
	or.b32  	%r16367, %r16374, %r124;
	or.b32  	%r16368, %r16367, %r125;
	or.b32  	%r16369, %r16368, 524288;
	or.b32  	%r16370, %r143, %r16369;
	cvt.u64.u32 	%rd148, %r16370;
	add.s64 	%rd149, %rd148, %rd9;
	shr.u64 	%rd150, %rd149, 35;
	add.s64 	%rd151, %rd149, %rd150;
	shr.s64 	%rd152, %rd151, 29;
	setp.lt.s64 	%p336, %rd149, 0;
	and.b64  	%rd153, %rd151, -536870912;
	setp.ne.s64 	%p337, %rd153, %rd149;
	and.pred  	%p338, %p336, %p337;
	selp.u64 	%rd154, 1, 0, %p338;
	sub.s64 	%rd155, %rd154, %rd152;
	shl.b64 	%rd156, %rd155, 29;
	add.s64 	%rd157, %rd156, %rd149;
	shl.b64 	%rd158, %rd157, 2;
	add.s64 	%rd159, %rd3, %rd158;
	st.global.v4.u32 	[%rd159], {%r261, %r263, %r262, %r264};
	or.b32  	%r16371, %r144, %r16369;
	cvt.u64.u32 	%rd160, %r16371;
	add.s64 	%rd161, %rd160, %rd9;
	shr.u64 	%rd162, %rd161, 35;
	add.s64 	%rd163, %rd161, %rd162;
	shr.u64 	%rd164, %rd163, 29;
	shr.u64 	%rd165, %rd161, 63;
	sub.s64 	%rd166, %rd165, %rd164;
	shl.b64 	%rd167, %rd166, 29;
	add.s64 	%rd168, %rd167, %rd161;
	shl.b64 	%rd169, %rd168, 2;
	add.s64 	%rd170, %rd3, %rd169;
	st.global.v4.u32 	[%rd170], {%r265, %r267, %r266, %r268};
	bra.uni 	$L__BB0_187;
$L__BB0_188:                            // %L70764
	mov.u32 	%r16372, 0;
	st.global.u32 	[%rd4], %r16372;
	ret;
$L__BB0_7:                              // %L246
	mov.u32 	%r16373, 2;
	st.global.u32 	[%rd4], %r16373;
	mov.u64 	%rd171, exception5808;
	cvta.global.u64 	%rd172, %rd171;
	{ // callseq 2, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd172;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 2
	{ // callseq 3, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd24;
	st.param.b32 	[param0+8], %r270;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 3
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
$L__BB0_1:                              // %L8
	mov.u64 	%rd45, exception1;
	cvta.global.u64 	%rd46, %rd45;
	{ // callseq 0, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd46;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 0
	{ // callseq 1, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd24;
	st.param.b32 	[param0+8], %r270;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 1
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
                                        // -- End function
}
