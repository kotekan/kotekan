// PTX kernel code for the CUDA upchannelizer
// This file has been generated automatically by `upchan.jl`.
// Do not modify this file, your changes will be lost.

// PTX CompilerJob of MethodInstance for upchan128(::Int32, ::Int32, ::Int32, ::Int32, ::Int32, ::Int32, ::CuDeviceVector{Float16x2, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int32, 1}) for sm_86, minthreads=512, blocks_per_sm=2

//
// Generated by LLVM NVPTX Back-End
//

.version 8.2
.target sm_86
.address_size 64

	// .globl	_Z9upchan1285Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE // -- Begin function _Z9upchan1285Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE
.extern .func julia_AssertionError_9958
()
;
.func gpu_report_exception
(
	.param .b64 gpu_report_exception_param_0
)
.noreturn
{
	trap;
}
.func gpu_signal_exception
(
	.param .align 8 .b8 gpu_signal_exception_param_0[16]
)
.noreturn
{
	trap;
}
.global .align 1 .b8 exception2780[6] = {101, 114, 114, 111, 114, 0};
.global .align 1 .b8 exception12805[10] = {101, 120, 99, 101, 112, 116, 105, 111, 110, 0};
                                        // @_Z9upchan1285Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE
.visible .entry _Z9upchan1285Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE(
	.param .align 8 .b8 _Z9upchan1285Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_0[16],
	.param .u32 _Z9upchan1285Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_1,
	.param .u32 _Z9upchan1285Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_2,
	.param .u32 _Z9upchan1285Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_3,
	.param .u32 _Z9upchan1285Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_4,
	.param .u32 _Z9upchan1285Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_5,
	.param .u32 _Z9upchan1285Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_6,
	.param .align 8 .b8 _Z9upchan1285Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_7[32],
	.param .align 8 .b8 _Z9upchan1285Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_8[32],
	.param .align 8 .b8 _Z9upchan1285Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_9[32],
	.param .align 8 .b8 _Z9upchan1285Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_10[32]
)
.reqntid 512, 1, 1
.minnctapersm 2
{
	.reg .pred 	%p<196>;
	.reg .b32 	%r<309>;
	.reg .f32 	%f<1001>;
	.reg .b64 	%rd<15>;

// %bb.0:                               // %conversion
	ld.param.u32 	%r7, [_Z9upchan1285Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_0+8];
	ld.param.u64 	%rd3, [_Z9upchan1285Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_0];
	// begin inline asm
	mov.u32 %r14, %dynamic_smem_size;
	// end inline asm
	setp.gt.u32 	%p1, %r14, 33407;
	@%p1 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:                              // %L10
	// begin inline asm
	mov.u32 %r15, %dynamic_smem_size;
	// end inline asm
	setp.gt.u32 	%p2, %r15, 33407;
	@%p2 bra 	$L__BB0_4;
	bra.uni 	$L__BB0_3;
$L__BB0_4:                              // %L26
	ld.param.u32 	%r8, [_Z9upchan1285Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_1];
	ld.param.u64 	%rd1, [_Z9upchan1285Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_10];
	mov.u32 	%r1, %tid.x;
	mov.u32 	%r16, %tid.y;
	shl.b32 	%r17, %r16, 5;
	mov.u32 	%r18, %ctaid.x;
	shl.b32 	%r19, %r18, 9;
	or.b32  	%r20, %r17, %r1;
	or.b32  	%r21, %r20, %r19;
	mul.wide.u32 	%rd8, %r21, 4;
	add.s64 	%rd2, %rd1, %rd8;
	mov.u32 	%r22, 1;
	st.global.u32 	[%rd2], %r22;
	setp.gt.u32 	%p3, %r8, 32767;
	@%p3 bra 	$L__BB0_9;
// %bb.5:                               // %L133
	ld.param.u32 	%r9, [_Z9upchan1285Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_2];
	setp.lt.s32 	%p4, %r9, %r8;
	setp.gt.s32 	%p5, %r9, 65535;
	or.pred  	%p6, %p4, %p5;
	@%p6 bra 	$L__BB0_9;
// %bb.6:                               // %L140
	ld.param.u32 	%r10, [_Z9upchan1285Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_3];
	sub.s32 	%r23, %r9, %r8;
	and.b32  	%r24, %r23, 255;
	setp.ne.s32 	%p7, %r24, 0;
	setp.gt.u32 	%p8, %r10, 255;
	or.pred  	%p9, %p7, %p8;
	@%p9 bra 	$L__BB0_9;
// %bb.7:                               // %L151
	ld.param.u32 	%r11, [_Z9upchan1285Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_4];
	setp.lt.s32 	%p10, %r11, %r10;
	setp.gt.s32 	%p11, %r11, 511;
	or.pred  	%p12, %p10, %p11;
	@%p12 bra 	$L__BB0_9;
// %bb.8:                               // %L158
	sub.s32 	%r25, %r11, %r10;
	and.b32  	%r26, %r25, 1;
	setp.eq.b32 	%p13, %r26, 1;
	mov.pred 	%p14, 0;
	xor.pred  	%p15, %p13, %p14;
	@%p15 bra 	$L__BB0_10;
$L__BB0_9:                              // %L180
	mov.u32 	%r308, 2;
	st.global.u32 	[%rd2], %r308;
	mov.u64 	%rd13, exception2780;
	cvta.global.u64 	%rd14, %rd13;
	{ // callseq 9, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd14;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 9
	{ // callseq 10, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd3;
	st.param.b32 	[param0+8], %r7;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 10
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
$L__BB0_1:                              // %L8
	mov.u64 	%rd4, exception12805;
	cvta.global.u64 	%rd5, %rd4;
	{ // callseq 0, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd5;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 0
	{ // callseq 1, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd3;
	st.param.b32 	[param0+8], %r7;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 1
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
$L__BB0_3:                              // %L24
	mov.u64 	%rd6, exception12805;
	cvta.global.u64 	%rd7, %rd6;
	{ // callseq 2, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd7;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 2
	{ // callseq 3, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd3;
	st.param.b32 	[param0+8], %r7;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 3
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
$L__BB0_10:                             // %L273
	ld.param.u32 	%r12, [_Z9upchan1285Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_5];
	setp.lt.s32 	%p16, %r12, 0;
	@%p16 bra 	$L__BB0_12;
// %bb.11:                              // %L275
	ld.param.u32 	%r13, [_Z9upchan1285Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_6];
	setp.le.s32 	%p17, %r12, %r13;
	setp.lt.s32 	%p18, %r13, 49;
	and.pred  	%p19, %p17, %p18;
	@%p19 bra 	$L__BB0_13;
	bra.uni 	$L__BB0_12;
$L__BB0_13:                             // %pass271
	shr.u32 	%r27, %r1, 2;
	bfe.u32 	%r3, %r1, 2, 1;
	and.b32  	%r28, %r27, 4;
	shl.b32 	%r29, %r3, 3;
	shl.b32 	%r30, %r1, 4;
	and.b32  	%r31, %r30, 48;
	or.b32  	%r32, %r29, %r31;
	or.b32  	%r33, %r28, %r32;
	and.b32  	%r34, %r27, 2;
	or.b32  	%r5, %r34, %r33;
	shl.b32 	%r6, %r5, 1;
	or.b32  	%r35, %r6, -511;
	cvt.rn.f32.s32 	%f90, %r35;
	mov.f32 	%f91, 0f44804000;
	div.approx.f32 	%f86, %f90, %f91;
	mul.f32 	%f88, %f86, 0f40800000;
	or.b32  	%r49, %r6, -383;
	cvt.rn.f32.s32 	%f148, %r49;
	div.approx.f32 	%f4, %f148, %f91;
	mul.f32 	%f6, %f4, 0f40800000;
	setp.eq.f32 	%p36, %f6, 0f00000000;
	or.b32  	%r66, %r6, -509;
	cvt.rn.f32.s32 	%f204, %r66;
	div.approx.f32 	%f9, %f204, %f91;
	mul.f32 	%f11, %f9, 0f40800000;
	setp.eq.f32 	%p47, %f11, 0f00000000;
	or.b32  	%r80, %r6, -381;
	cvt.rn.f32.s32 	%f262, %r80;
	div.approx.f32 	%f15, %f262, %f91;
	mul.f32 	%f17, %f15, 0f40800000;
	setp.eq.f32 	%p58, %f17, 0f00000000;
	or.b32  	%r97, %r6, -255;
	cvt.rn.f32.s32 	%f318, %r97;
	div.approx.f32 	%f20, %f318, %f91;
	mul.f32 	%f22, %f20, 0f40800000;
	setp.eq.f32 	%p69, %f22, 0f00000000;
	or.b32  	%r111, %r6, -127;
	cvt.rn.f32.s32 	%f376, %r111;
	div.approx.f32 	%f26, %f376, %f91;
	mul.f32 	%f28, %f26, 0f40800000;
	setp.eq.f32 	%p80, %f28, 0f00000000;
	or.b32  	%r128, %r6, -253;
	cvt.rn.f32.s32 	%f432, %r128;
	div.approx.f32 	%f31, %f432, %f91;
	mul.f32 	%f33, %f31, 0f40800000;
	setp.eq.f32 	%p91, %f33, 0f00000000;
	or.b32  	%r142, %r6, -125;
	cvt.rn.f32.s32 	%f490, %r142;
	div.approx.f32 	%f37, %f490, %f91;
	mul.f32 	%f39, %f37, 0f40800000;
	setp.eq.f32 	%p102, %f39, 0f00000000;
	or.b32  	%r159, %r6, 1;
	cvt.rn.f32.s32 	%f546, %r159;
	div.approx.f32 	%f42, %f546, %f91;
	mul.f32 	%f44, %f42, 0f40800000;
	setp.eq.f32 	%p113, %f44, 0f00000000;
	or.b32  	%r173, %r6, 129;
	cvt.rn.f32.s32 	%f604, %r173;
	div.approx.f32 	%f48, %f604, %f91;
	mul.f32 	%f50, %f48, 0f40800000;
	setp.eq.f32 	%p124, %f50, 0f00000000;
	or.b32  	%r190, %r6, 3;
	cvt.rn.f32.s32 	%f660, %r190;
	div.approx.f32 	%f53, %f660, %f91;
	mul.f32 	%f55, %f53, 0f40800000;
	setp.eq.f32 	%p135, %f55, 0f00000000;
	or.b32  	%r204, %r6, 131;
	cvt.rn.f32.s32 	%f718, %r204;
	div.approx.f32 	%f59, %f718, %f91;
	mul.f32 	%f61, %f59, 0f40800000;
	setp.eq.f32 	%p146, %f61, 0f00000000;
	or.b32  	%r221, %r6, 257;
	cvt.rn.f32.s32 	%f774, %r221;
	div.approx.f32 	%f64, %f774, %f91;
	mul.f32 	%f66, %f64, 0f40800000;
	setp.eq.f32 	%p157, %f66, 0f00000000;
	or.b32  	%r235, %r6, 385;
	cvt.rn.f32.s32 	%f832, %r235;
	div.approx.f32 	%f70, %f832, %f91;
	mul.f32 	%f72, %f70, 0f40800000;
	setp.eq.f32 	%p168, %f72, 0f00000000;
	or.b32  	%r252, %r6, 259;
	cvt.rn.f32.s32 	%f888, %r252;
	div.approx.f32 	%f75, %f888, %f91;
	mul.f32 	%f77, %f75, 0f40800000;
	setp.eq.f32 	%p179, %f77, 0f00000000;
	or.b32  	%r266, %r6, 387;
	cvt.rn.f32.s32 	%f946, %r266;
	div.approx.f32 	%f81, %f946, %f91;
	mul.f32 	%f83, %f81, 0f40800000;
	setp.eq.f32 	%p190, %f83, 0f00000000;
	setp.neu.f32 	%p25, %f88, 0f00000000;
	{ // callseq 4, 0
	.reg .b32 temp_param_reg;
	call.uni 
	julia_AssertionError_9958, 
	(
	);
	} // callseq 4
	mov.u64 	%rd9, exception12805;
	cvta.global.u64 	%rd10, %rd9;
	{ // callseq 5, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd10;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 5
	{ // callseq 6, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd3;
	st.param.b32 	[param0+8], %r7;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 6
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
$L__BB0_12:                             // %L288
	mov.u32 	%r307, 3;
	st.global.u32 	[%rd2], %r307;
	mov.u64 	%rd11, exception2780;
	cvta.global.u64 	%rd12, %rd11;
	{ // callseq 7, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd12;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 7
	{ // callseq 8, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd3;
	st.param.b32 	[param0+8], %r7;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 8
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
                                        // -- End function
}
