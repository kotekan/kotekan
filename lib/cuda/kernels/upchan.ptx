// PTX CompilerJob of kernel #upchan(CuDeviceVector{Float16x2, 1}, CuDeviceVector{Int4x8, 1}, CuDeviceVector{Int4x8, 1}, CuDeviceVector{Int32, 1}) for sm_86, minthreads=512, blocks_per_sm=2

//
// Generated by LLVM NVPTX Back-End
//

.version 7.1
.target sm_86
.address_size 64

	// .globl	_Z17julia_upchan_376513CuDeviceArrayI9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS1_Li1ELi1EES_I5Int32Li1ELi1EE // -- Begin function _Z17julia_upchan_376513CuDeviceArrayI9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS1_Li1ELi1EES_I5Int32Li1ELi1EE
.func gpu_report_exception
(
	.param .b64 gpu_report_exception_param_0
)
.noreturn
{
	trap;
}
.func gpu_signal_exception
(
	.param .align 8 .b8 gpu_signal_exception_param_0[8]
)
.noreturn
{
	trap;
}
.extern .shared .align 32 .b8 shmem[];
.global .align 1 .b8 exception1[10] = {101, 120, 99, 101, 112, 116, 105, 111, 110, 0};
                                        // @_Z17julia_upchan_376513CuDeviceArrayI9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS1_Li1ELi1EES_I5Int32Li1ELi1EE
.visible .entry _Z17julia_upchan_376513CuDeviceArrayI9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS1_Li1ELi1EES_I5Int32Li1ELi1EE(
	.param .align 8 .b8 _Z17julia_upchan_376513CuDeviceArrayI9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS1_Li1ELi1EES_I5Int32Li1ELi1EE_param_0[8],
	.param .align 8 .b8 _Z17julia_upchan_376513CuDeviceArrayI9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS1_Li1ELi1EES_I5Int32Li1ELi1EE_param_1[32],
	.param .align 8 .b8 _Z17julia_upchan_376513CuDeviceArrayI9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS1_Li1ELi1EES_I5Int32Li1ELi1EE_param_2[32],
	.param .align 8 .b8 _Z17julia_upchan_376513CuDeviceArrayI9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS1_Li1ELi1EES_I5Int32Li1ELi1EE_param_3[32],
	.param .align 8 .b8 _Z17julia_upchan_376513CuDeviceArrayI9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS1_Li1ELi1EES_I5Int32Li1ELi1EE_param_4[32]
)
.reqntid 512, 1, 1
.minnctapersm 2
{
	.reg .pred 	%p<215>;
	.reg .b16 	%rs<93>;
	.reg .b32 	%r<1112>;
	.reg .f32 	%f<943>;
	.reg .b64 	%rd<89>;

// %bb.0:                               // %conversion
	// begin inline asm
	mov.u32 %r122, %dynamic_smem_size;
	// end inline asm
	setp.gt.u32 	%p1, %r122, 69887;
	@%p1 bra 	LBB0_2;
	bra.uni 	LBB0_1;
LBB0_2:                                 // %L10
	ld.param.u64 	%rd26, [_Z17julia_upchan_376513CuDeviceArrayI9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS1_Li1ELi1EES_I5Int32Li1ELi1EE_param_4];
	mov.u32 	%r1, %tid.x;
	mov.u32 	%r2, %tid.y;
	shl.b32 	%r123, %r2, 5;
	mov.u32 	%r3, %ctaid.x;
	shl.b32 	%r4, %r3, 9;
	or.b32  	%r124, %r123, %r1;
	or.b32  	%r125, %r124, %r4;
	mul.wide.u32 	%rd32, %r125, 4;
	add.s64 	%rd3, %rd26, %rd32;
	mov.u32 	%r126, 1;
	st.global.u32 	[%rd3], %r126;
	shl.b32 	%r6, %r1, 1;
	bfe.u32 	%r10, %r1, 2, 1;
	and.b32  	%r132, %r6, 2;
	and.b32  	%r133, %r6, 4;
	or.b32  	%r134, %r10, %r132;
	or.b32  	%r11, %r134, %r133;
	or.b32  	%r12, %r11, 8;
	mov.f32 	%f184, 0f40000000;
	mov.f32 	%f185, 0f427C0000;
	div.approx.f32 	%f1, %f185, %f184;
	cvt.rn.f32.s32 	%f186, %r11;
	sub.f32 	%f187, %f186, %f1;
	mov.f32 	%f188, 0f42820000;
	div.approx.f32 	%f189, %f187, %f188;
	abs.f32 	%f190, %f189;
	setp.gt.f32 	%p2, %f190, 0f4B800000;
	mul.f32 	%f191, %f189, 0f00000000;
	selp.f32 	%f192, %f191, %f189, %p2;
	add.f32 	%f193, %f192, %f192;
	mov.f32 	%f217, 0f41800000;
	div.approx.f32 	%f3, %f187, %f217;
	setp.eq.f32 	%p7, %f3, 0f00000000;
	mov.f32 	%f910, 0f3F800000;
	mov.f32 	%f903, %f910;
	@%p7 bra 	LBB0_4;
// %bb.3:                               // %L266
	sin.approx.f32 	%f218, %f3;
	div.approx.f32 	%f903, %f218, %f3;
LBB0_4:                                 // %L269
	mov.b32 	%r135, %f193;
	cvt.rn.f32.s32 	%f221, %r12;
	sub.f32 	%f222, %f221, %f1;
	div.approx.f32 	%f224, %f222, %f188;
	abs.f32 	%f225, %f224;
	setp.gt.f32 	%p8, %f225, 0f4B800000;
	mul.f32 	%f226, %f224, 0f00000000;
	selp.f32 	%f227, %f226, %f224, %p8;
	add.f32 	%f228, %f227, %f227;
	mov.b32 	%r142, %f228;
	div.approx.f32 	%f8, %f222, %f217;
	setp.eq.f32 	%p13, %f8, 0f00000000;
	mov.f32 	%f904, %f910;
	@%p13 bra 	LBB0_6;
// %bb.5:                               // %L286
	sin.approx.f32 	%f253, %f8;
	div.approx.f32 	%f904, %f253, %f8;
LBB0_6:                                 // %L289
	and.b32  	%r136, %r135, -2147483648;
	and.b32  	%r143, %r142, -2147483648;
	or.b32  	%r152, %r11, 16;
	or.b32  	%r14, %r11, 24;
	cvt.rn.f32.s32 	%f257, %r152;
	sub.f32 	%f258, %f257, %f1;
	div.approx.f32 	%f260, %f258, %f188;
	abs.f32 	%f261, %f260;
	setp.gt.f32 	%p14, %f261, 0f4B800000;
	mul.f32 	%f262, %f260, 0f00000000;
	selp.f32 	%f263, %f262, %f260, %p14;
	add.f32 	%f264, %f263, %f263;
	mov.b32 	%r153, %f264;
	and.b32  	%r154, %r153, -2147483648;
	div.approx.f32 	%f12, %f258, %f217;
	setp.eq.f32 	%p19, %f12, 0f00000000;
	mov.f32 	%f905, %f910;
	@%p19 bra 	LBB0_8;
// %bb.7:                               // %L342
	sin.approx.f32 	%f289, %f12;
	div.approx.f32 	%f905, %f289, %f12;
LBB0_8:                                 // %L345
	or.b32  	%r137, %r136, 1056964608;
	or.b32  	%r144, %r143, 1056964608;
	or.b32  	%r155, %r154, 1056964608;
	cvt.rn.f32.s32 	%f292, %r14;
	sub.f32 	%f293, %f292, %f1;
	div.approx.f32 	%f295, %f293, %f188;
	abs.f32 	%f296, %f295;
	setp.gt.f32 	%p20, %f296, 0f4B800000;
	mul.f32 	%f297, %f295, 0f00000000;
	selp.f32 	%f298, %f297, %f295, %p20;
	add.f32 	%f299, %f298, %f298;
	mov.b32 	%r160, %f299;
	and.b32  	%r161, %r160, -2147483648;
	or.b32  	%r162, %r161, 1056964608;
	div.approx.f32 	%f17, %f293, %f217;
	setp.eq.f32 	%p25, %f17, 0f00000000;
	mov.f32 	%f906, %f910;
	@%p25 bra 	LBB0_10;
// %bb.9:                               // %L362
	sin.approx.f32 	%f324, %f17;
	div.approx.f32 	%f906, %f324, %f17;
LBB0_10:                                // %L365
	mov.b32 	%f194, %r137;
	mov.b32 	%f229, %r144;
	mov.b32 	%f265, %r155;
	mov.b32 	%f300, %r162;
	or.b32  	%r170, %r11, 32;
	or.b32  	%r16, %r11, 40;
	cvt.rn.f32.s32 	%f328, %r170;
	sub.f32 	%f329, %f328, %f1;
	div.approx.f32 	%f331, %f329, %f188;
	abs.f32 	%f332, %f331;
	setp.gt.f32 	%p26, %f332, 0f4B800000;
	mul.f32 	%f333, %f331, 0f00000000;
	selp.f32 	%f334, %f333, %f331, %p26;
	add.f32 	%f335, %f334, %f334;
	mov.b32 	%r171, %f335;
	and.b32  	%r172, %r171, -2147483648;
	or.b32  	%r173, %r172, 1056964608;
	mov.b32 	%f336, %r173;
	div.approx.f32 	%f21, %f329, %f217;
	setp.eq.f32 	%p31, %f21, 0f00000000;
	mov.f32 	%f907, %f910;
	@%p31 bra 	LBB0_12;
// %bb.11:                              // %L418
	sin.approx.f32 	%f360, %f21;
	div.approx.f32 	%f907, %f360, %f21;
LBB0_12:                                // %L421
	add.f32 	%f195, %f193, %f194;
	abs.f32 	%f197, %f193;
	add.f32 	%f230, %f228, %f229;
	abs.f32 	%f232, %f228;
	add.f32 	%f266, %f264, %f265;
	abs.f32 	%f268, %f264;
	add.f32 	%f301, %f299, %f300;
	abs.f32 	%f303, %f299;
	add.f32 	%f337, %f335, %f336;
	abs.f32 	%f339, %f335;
	cvt.rn.f32.s32 	%f363, %r16;
	sub.f32 	%f364, %f363, %f1;
	div.approx.f32 	%f366, %f364, %f188;
	abs.f32 	%f367, %f366;
	setp.gt.f32 	%p32, %f367, 0f4B800000;
	mul.f32 	%f368, %f366, 0f00000000;
	selp.f32 	%f369, %f368, %f366, %p32;
	add.f32 	%f370, %f369, %f369;
	mov.b32 	%r178, %f370;
	and.b32  	%r179, %r178, -2147483648;
	or.b32  	%r180, %r179, 1056964608;
	mov.b32 	%f371, %r180;
	add.f32 	%f372, %f370, %f371;
	abs.f32 	%f374, %f370;
	div.approx.f32 	%f26, %f364, %f217;
	setp.eq.f32 	%p37, %f26, 0f00000000;
	mov.f32 	%f908, %f910;
	@%p37 bra 	LBB0_14;
// %bb.13:                              // %L438
	sin.approx.f32 	%f395, %f26;
	div.approx.f32 	%f908, %f395, %f26;
LBB0_14:                                // %L441
	cvt.rzi.f32.f32 	%f196, %f195;
	setp.gt.f32 	%p3, %f197, 0f4B000000;
	cvt.rzi.f32.f32 	%f231, %f230;
	setp.gt.f32 	%p9, %f232, 0f4B000000;
	cvt.rzi.f32.f32 	%f267, %f266;
	setp.gt.f32 	%p15, %f268, 0f4B000000;
	cvt.rzi.f32.f32 	%f302, %f301;
	setp.gt.f32 	%p21, %f303, 0f4B000000;
	cvt.rzi.f32.f32 	%f338, %f337;
	setp.gt.f32 	%p27, %f339, 0f4B000000;
	cvt.rzi.f32.f32 	%f373, %f372;
	setp.gt.f32 	%p33, %f374, 0f4B000000;
	or.b32  	%r188, %r11, 48;
	or.b32  	%r18, %r11, 56;
	cvt.rn.f32.s32 	%f399, %r188;
	sub.f32 	%f400, %f399, %f1;
	div.approx.f32 	%f402, %f400, %f188;
	abs.f32 	%f403, %f402;
	setp.gt.f32 	%p38, %f403, 0f4B800000;
	mul.f32 	%f404, %f402, 0f00000000;
	selp.f32 	%f405, %f404, %f402, %p38;
	add.f32 	%f406, %f405, %f405;
	mov.b32 	%r189, %f406;
	and.b32  	%r190, %r189, -2147483648;
	or.b32  	%r191, %r190, 1056964608;
	mov.b32 	%f407, %r191;
	add.f32 	%f408, %f406, %f407;
	cvt.rzi.f32.f32 	%f409, %f408;
	abs.f32 	%f410, %f406;
	setp.gt.f32 	%p39, %f410, 0f4B000000;
	div.approx.f32 	%f30, %f400, %f217;
	setp.eq.f32 	%p43, %f30, 0f00000000;
	mov.f32 	%f909, %f910;
	@%p43 bra 	LBB0_16;
// %bb.15:                              // %L494
	sin.approx.f32 	%f431, %f30;
	div.approx.f32 	%f909, %f431, %f30;
LBB0_16:                                // %L497
	selp.f32 	%f198, %f193, %f196, %p3;
	cvt.rzi.f32.f32 	%f199, %f193;
	setp.lt.f32 	%p4, %f197, 0f3F000000;
	selp.f32 	%f233, %f228, %f231, %p9;
	cvt.rzi.f32.f32 	%f234, %f228;
	setp.lt.f32 	%p10, %f232, 0f3F000000;
	selp.f32 	%f269, %f264, %f267, %p15;
	cvt.rzi.f32.f32 	%f270, %f264;
	setp.lt.f32 	%p16, %f268, 0f3F000000;
	selp.f32 	%f304, %f299, %f302, %p21;
	cvt.rzi.f32.f32 	%f305, %f299;
	setp.lt.f32 	%p22, %f303, 0f3F000000;
	selp.f32 	%f340, %f335, %f338, %p27;
	cvt.rzi.f32.f32 	%f341, %f335;
	setp.lt.f32 	%p28, %f339, 0f3F000000;
	selp.f32 	%f375, %f370, %f373, %p33;
	cvt.rzi.f32.f32 	%f376, %f370;
	setp.lt.f32 	%p34, %f374, 0f3F000000;
	selp.f32 	%f411, %f406, %f409, %p39;
	cvt.rzi.f32.f32 	%f412, %f406;
	setp.lt.f32 	%p40, %f410, 0f3F000000;
	cvt.rn.f32.s32 	%f434, %r18;
	sub.f32 	%f435, %f434, %f1;
	div.approx.f32 	%f437, %f435, %f188;
	abs.f32 	%f438, %f437;
	setp.gt.f32 	%p44, %f438, 0f4B800000;
	mul.f32 	%f439, %f437, 0f00000000;
	selp.f32 	%f440, %f439, %f437, %p44;
	add.f32 	%f441, %f440, %f440;
	mov.b32 	%r196, %f441;
	and.b32  	%r197, %r196, -2147483648;
	or.b32  	%r198, %r197, 1056964608;
	mov.b32 	%f442, %r198;
	add.f32 	%f443, %f441, %f442;
	cvt.rzi.f32.f32 	%f444, %f443;
	abs.f32 	%f445, %f441;
	setp.gt.f32 	%p45, %f445, 0f4B000000;
	selp.f32 	%f446, %f441, %f444, %p45;
	cvt.rzi.f32.f32 	%f447, %f441;
	setp.lt.f32 	%p46, %f445, 0f3F000000;
	div.approx.f32 	%f35, %f435, %f217;
	setp.eq.f32 	%p49, %f35, 0f00000000;
	@%p49 bra 	LBB0_18;
// %bb.17:                              // %L514
	sin.approx.f32 	%f466, %f35;
	div.approx.f32 	%f910, %f466, %f35;
LBB0_18:                                // %L517
	selp.f32 	%f200, %f199, %f198, %p4;
	selp.f32 	%f235, %f234, %f233, %p10;
	selp.f32 	%f271, %f270, %f269, %p16;
	selp.f32 	%f306, %f305, %f304, %p22;
	selp.f32 	%f342, %f341, %f340, %p28;
	selp.f32 	%f377, %f376, %f375, %p34;
	selp.f32 	%f413, %f412, %f411, %p40;
	selp.f32 	%f448, %f447, %f446, %p46;
	mul.lo.s32 	%r20, %r11, 15;
	cvt.rn.f32.s32 	%f469, %r20;
	div.approx.f32 	%f38, %f469, %f217;
	abs.f32 	%f929, %f38;
	setp.lt.f32 	%p50, %f929, 0f40000000;
	@%p50 bra 	LBB0_92;
// %bb.19:
	setp.gtu.f32 	%p51, %f929, 0f4B800000;
	@%p51 bra 	LBB0_88;
	bra.uni 	LBB0_20;
LBB0_88:
	mov.b32 	%r73, %f929;
	and.b32  	%r206, %r73, 8388607;
	or.b32  	%r1104, %r206, 1065353216;
	mov.b32 	%f928, %r1104;
	add.s32 	%r207, %r73, -1073741824;
	and.b32  	%r1105, %r207, -8388608;
	setp.eq.s32 	%p57, %r1105, 0;
	@%p57 bra 	LBB0_91;
// %bb.89:                              // %__nv_fmaf_rn.exit4.i.i.i823.preheader
	mov.f32 	%f480, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f479,%f480;
	// end inline asm
LBB0_90:                                // %__nv_fmaf_rn.exit4.i.i.i823
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r208, %r1105, 192937984;
	add.s32 	%r209, %r208, %r1104;
	mov.b32 	%f481, %r209;
	mul.f32 	%f482, %f479, %f481;
	sub.f32 	%f483, %f481, %f482;
	fma.rn.f32 	%f484, %f483, %f479, %f482;
	sub.f32 	%f485, %f481, %f484;
	fma.rz.f32 	%f486, %f485, %f479, %f484;
	cvt.rzi.f32.f32 	%f487, %f486;
	sub.f32 	%f928, %f481, %f487;
	sub.s32 	%r1105, %r1105, %r208;
	mov.b32 	%r1104, %f928;
	setp.ne.s32 	%p58, %r1105, 0;
	setp.ne.s32 	%p59, %r1104, 0;
	and.pred  	%p60, %p58, %p59;
	@%p60 bra 	LBB0_90;
LBB0_91:                                // %__internal_fmodf_slowpath_mod.exit.i.i825
	setp.gt.u32 	%p61, %r73, 2139095039;
	selp.f32 	%f488, 0f7FFFFFFF, 0f4B800000, %p61;
	mul.f32 	%f489, %f928, 0f34000000;
	mul.f32 	%f929, %f488, %f489;
	bra.uni 	LBB0_92;
LBB0_20:                                // %__nv_fast_fdividef.exit.i.i.i795
	div.approx.f32 	%f472, %f929, %f184;
	cvt.rzi.f32.f32 	%f927, %f472;
	fma.rn.f32 	%f113, %f927, 0fC0000000, %f929;
	mov.b32 	%r72, %f113;
	setp.lt.u32 	%p52, %r72, 1073741824;
	@%p52 bra 	LBB0_87;
// %bb.21:
	setp.lt.u32 	%p53, %r72, -2147483647;
	@%p53 bra 	LBB0_85;
// %bb.22:
	add.f32 	%f477, %f927, 0fBF800000;
	setp.lt.f32 	%p56, %f113, 0fC0000000;
	add.f32 	%f478, %f477, 0fBF800000;
	selp.f32 	%f927, %f478, %f477, %p56;
	bra.uni 	LBB0_87;
LBB0_85:
	add.f32 	%f927, %f927, 0f3F800000;
	setp.ltu.f32 	%p54, %f113, 0f40800000;
	@%p54 bra 	LBB0_87;
// %bb.86:                              // %__nv_fmaf_rn.exit.i.i.i800
	add.f32 	%f473, %f927, 0f3F800000;
	fma.rn.f32 	%f475, %f184, 0fC0400000, %f113;
	setp.ge.f32 	%p55, %f475, 0f00000000;
	add.f32 	%f476, %f473, 0f3F800000;
	selp.f32 	%f927, %f476, %f473, %p55;
LBB0_87:                                // %__internal_fmodf_fastpath_quot.exit.i.i804
	fma.rn.f32 	%f929, %f927, 0fC0000000, %f929;
LBB0_92:                                // %__internal_fmodf_kernel.exit.i829
	fma.rn.f32 	%f201, %f200, 0fBF000000, %f192;
	fma.rn.f32 	%f236, %f235, 0fBF000000, %f227;
	fma.rn.f32 	%f272, %f271, 0fBF000000, %f263;
	fma.rn.f32 	%f307, %f306, 0fBF000000, %f298;
	fma.rn.f32 	%f343, %f342, 0fBF000000, %f334;
	fma.rn.f32 	%f378, %f377, 0fBF000000, %f369;
	fma.rn.f32 	%f414, %f413, 0fBF000000, %f405;
	fma.rn.f32 	%f449, %f448, 0fBF000000, %f440;
	abs.f32 	%f490, %f929;
	setp.gtu.f32 	%p62, %f490, 0f7F800000;
	@%p62 bra 	LBB0_94;
// %bb.93:
	mov.b32 	%r210, %f38;
	and.b32  	%r211, %r210, -2147483648;
	mov.b32 	%r212, %f929;
	or.b32  	%r213, %r211, %r212;
	mov.b32 	%f929, %r213;
LBB0_94:                                // %__nv_fmodf.exit830
	cvt.rzi.s32.f32 	%r138, %f200;
	mul.f32 	%f202, %f201, 0f34222169;
	cvt.rzi.s32.f32 	%r145, %f235;
	mul.f32 	%f237, %f236, 0f34222169;
	cvt.rzi.s32.f32 	%r156, %f271;
	mul.f32 	%f273, %f272, 0f34222169;
	cvt.rzi.s32.f32 	%r163, %f306;
	mul.f32 	%f308, %f307, 0f34222169;
	cvt.rzi.s32.f32 	%r174, %f342;
	mul.f32 	%f344, %f343, 0f34222169;
	cvt.rzi.s32.f32 	%r181, %f377;
	mul.f32 	%f379, %f378, 0f34222169;
	cvt.rzi.s32.f32 	%r192, %f413;
	mul.f32 	%f415, %f414, 0f34222169;
	cvt.rzi.s32.f32 	%r199, %f448;
	mul.f32 	%f450, %f449, 0f34222169;
	add.f32 	%f491, %f929, %f929;
	mov.b32 	%r214, %f491;
	and.b32  	%r215, %r214, -2147483648;
	or.b32  	%r216, %r215, 1056964608;
	mov.b32 	%f492, %r216;
	add.f32 	%f493, %f491, %f492;
	cvt.rzi.f32.f32 	%f494, %f493;
	abs.f32 	%f495, %f491;
	setp.gt.f32 	%p63, %f495, 0f4B000000;
	selp.f32 	%f496, %f491, %f494, %p63;
	cvt.rzi.f32.f32 	%f497, %f491;
	setp.lt.f32 	%p64, %f495, 0f3F000000;
	selp.f32 	%f498, %f497, %f496, %p64;
	fma.rn.f32 	%f499, %f498, 0fBF000000, %f929;
	mul.f32 	%f500, %f499, 0f34222169;
	add.s32 	%r222, %r20, 120;
	cvt.rn.f32.s32 	%f522, %r222;
	div.approx.f32 	%f129, %f522, %f217;
	abs.f32 	%f933, %f129;
	setp.lt.f32 	%p70, %f933, 0f40000000;
	@%p70 bra 	LBB0_106;
// %bb.95:
	setp.gtu.f32 	%p71, %f933, 0f4B800000;
	@%p71 bra 	LBB0_102;
	bra.uni 	LBB0_96;
LBB0_102:
	mov.b32 	%r81, %f933;
	and.b32  	%r223, %r81, 8388607;
	or.b32  	%r1106, %r223, 1065353216;
	mov.b32 	%f932, %r1106;
	add.s32 	%r224, %r81, -1073741824;
	and.b32  	%r1107, %r224, -8388608;
	setp.eq.s32 	%p77, %r1107, 0;
	@%p77 bra 	LBB0_105;
// %bb.103:                             // %__nv_fmaf_rn.exit4.i.i.i869.preheader
	mov.f32 	%f533, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f532,%f533;
	// end inline asm
LBB0_104:                               // %__nv_fmaf_rn.exit4.i.i.i869
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r225, %r1107, 192937984;
	add.s32 	%r226, %r225, %r1106;
	mov.b32 	%f534, %r226;
	mul.f32 	%f535, %f532, %f534;
	sub.f32 	%f536, %f534, %f535;
	fma.rn.f32 	%f537, %f536, %f532, %f535;
	sub.f32 	%f538, %f534, %f537;
	fma.rz.f32 	%f539, %f538, %f532, %f537;
	cvt.rzi.f32.f32 	%f540, %f539;
	sub.f32 	%f932, %f534, %f540;
	sub.s32 	%r1107, %r1107, %r225;
	mov.b32 	%r1106, %f932;
	setp.ne.s32 	%p78, %r1107, 0;
	setp.ne.s32 	%p79, %r1106, 0;
	and.pred  	%p80, %p78, %p79;
	@%p80 bra 	LBB0_104;
LBB0_105:                               // %__internal_fmodf_slowpath_mod.exit.i.i871
	setp.gt.u32 	%p81, %r81, 2139095039;
	selp.f32 	%f541, 0f7FFFFFFF, 0f4B800000, %p81;
	mul.f32 	%f542, %f932, 0f34000000;
	mul.f32 	%f933, %f541, %f542;
	bra.uni 	LBB0_106;
LBB0_96:                                // %__nv_fast_fdividef.exit.i.i.i841
	div.approx.f32 	%f525, %f933, %f184;
	cvt.rzi.f32.f32 	%f931, %f525;
	fma.rn.f32 	%f132, %f931, 0fC0000000, %f933;
	mov.b32 	%r80, %f132;
	setp.lt.u32 	%p72, %r80, 1073741824;
	@%p72 bra 	LBB0_101;
// %bb.97:
	setp.lt.u32 	%p73, %r80, -2147483647;
	@%p73 bra 	LBB0_99;
// %bb.98:
	add.f32 	%f530, %f931, 0fBF800000;
	setp.lt.f32 	%p76, %f132, 0fC0000000;
	add.f32 	%f531, %f530, 0fBF800000;
	selp.f32 	%f931, %f531, %f530, %p76;
	bra.uni 	LBB0_101;
LBB0_99:
	add.f32 	%f931, %f931, 0f3F800000;
	setp.ltu.f32 	%p74, %f132, 0f40800000;
	@%p74 bra 	LBB0_101;
// %bb.100:                             // %__nv_fmaf_rn.exit.i.i.i846
	add.f32 	%f526, %f931, 0f3F800000;
	fma.rn.f32 	%f528, %f184, 0fC0400000, %f132;
	setp.ge.f32 	%p75, %f528, 0f00000000;
	add.f32 	%f529, %f526, 0f3F800000;
	selp.f32 	%f931, %f529, %f526, %p75;
LBB0_101:                               // %__internal_fmodf_fastpath_quot.exit.i.i850
	fma.rn.f32 	%f933, %f931, 0fC0000000, %f933;
LBB0_106:                               // %__internal_fmodf_kernel.exit.i875
	fma.rn.f32 	%f203, %f201, 0f40490FDA, %f202;
	add.s32 	%r139, %r138, 1;
	fma.rn.f32 	%f238, %f236, 0f40490FDA, %f237;
	add.s32 	%r146, %r145, 1;
	fma.rn.f32 	%f274, %f272, 0f40490FDA, %f273;
	add.s32 	%r157, %r156, 1;
	fma.rn.f32 	%f309, %f307, 0f40490FDA, %f308;
	add.s32 	%r164, %r163, 1;
	fma.rn.f32 	%f345, %f343, 0f40490FDA, %f344;
	add.s32 	%r175, %r174, 1;
	fma.rn.f32 	%f380, %f378, 0f40490FDA, %f379;
	add.s32 	%r182, %r181, 1;
	fma.rn.f32 	%f416, %f414, 0f40490FDA, %f415;
	add.s32 	%r193, %r192, 1;
	fma.rn.f32 	%f451, %f449, 0f40490FDA, %f450;
	add.s32 	%r200, %r199, 1;
	fma.rn.f32 	%f501, %f499, 0f40490FDA, %f500;
	shr.u32 	%r9, %r1, 2;
	abs.f32 	%f543, %f933;
	setp.gtu.f32 	%p82, %f543, 0f7F800000;
	@%p82 bra 	LBB0_108;
// %bb.107:
	mov.b32 	%r227, %f129;
	and.b32  	%r228, %r227, -2147483648;
	mov.b32 	%r229, %f933;
	or.b32  	%r230, %r228, %r229;
	mov.b32 	%f933, %r230;
LBB0_108:                               // %__nv_fmodf.exit876
	mul.f32 	%f204, %f203, %f203;
	and.b32  	%r140, %r139, 1;
	mul.f32 	%f239, %f238, %f238;
	and.b32  	%r147, %r146, 1;
	mul.f32 	%f275, %f274, %f274;
	and.b32  	%r158, %r157, 1;
	mul.f32 	%f310, %f309, %f309;
	and.b32  	%r165, %r164, 1;
	mul.f32 	%f346, %f345, %f345;
	and.b32  	%r176, %r175, 1;
	mul.f32 	%f381, %f380, %f380;
	and.b32  	%r183, %r182, 1;
	mul.f32 	%f417, %f416, %f416;
	and.b32  	%r194, %r193, 1;
	mul.f32 	%f452, %f451, %f451;
	and.b32  	%r201, %r200, 1;
	mul.f32 	%f502, %f501, %f501;
	add.f32 	%f544, %f933, %f933;
	mov.b32 	%r237, %f544;
	and.b32  	%r238, %r237, -2147483648;
	or.b32  	%r239, %r238, 1056964608;
	mov.b32 	%f545, %r239;
	add.f32 	%f546, %f544, %f545;
	cvt.rzi.f32.f32 	%f547, %f546;
	abs.f32 	%f548, %f544;
	setp.gt.f32 	%p83, %f548, 0f4B000000;
	selp.f32 	%f549, %f544, %f547, %p83;
	cvt.rzi.f32.f32 	%f550, %f544;
	setp.lt.f32 	%p84, %f548, 0f3F000000;
	selp.f32 	%f551, %f550, %f549, %p84;
	fma.rn.f32 	%f552, %f551, 0fBF000000, %f933;
	mul.f32 	%f553, %f552, 0f34222169;
	fma.rn.f32 	%f554, %f552, 0f40490FDA, %f553;
	mul.f32 	%f555, %f554, %f554;
	and.b32  	%r245, %r1, 3;
	mul.wide.u32 	%rd35, %r245, %r9;
	shl.b64 	%rd36, %rd35, 1;
	neg.s64 	%rd37, %rd36;
	cvt.rn.f32.s64 	%f577, %rd37;
	mov.f32 	%f578, 0f41000000;
	div.approx.f32 	%f146, %f577, %f578;
	abs.f32 	%f913, %f146;
	setp.lt.f32 	%p90, %f913, 0f40000000;
	@%p90 bra 	LBB0_34;
// %bb.23:
	setp.gtu.f32 	%p91, %f913, 0f4B800000;
	@%p91 bra 	LBB0_30;
	bra.uni 	LBB0_24;
LBB0_30:
	mov.b32 	%r22, %f913;
	and.b32  	%r246, %r22, 8388607;
	or.b32  	%r1088, %r246, 1065353216;
	mov.b32 	%f912, %r1088;
	add.s32 	%r247, %r22, -1073741824;
	and.b32  	%r1089, %r247, -8388608;
	setp.eq.s32 	%p97, %r1089, 0;
	@%p97 bra 	LBB0_33;
// %bb.31:                              // %__nv_fmaf_rn.exit4.i.i.i.preheader
	mov.f32 	%f588, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f587,%f588;
	// end inline asm
LBB0_32:                                // %__nv_fmaf_rn.exit4.i.i.i
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r248, %r1089, 192937984;
	add.s32 	%r249, %r248, %r1088;
	mov.b32 	%f589, %r249;
	mul.f32 	%f590, %f587, %f589;
	sub.f32 	%f591, %f589, %f590;
	fma.rn.f32 	%f592, %f591, %f587, %f590;
	sub.f32 	%f593, %f589, %f592;
	fma.rz.f32 	%f594, %f593, %f587, %f592;
	cvt.rzi.f32.f32 	%f595, %f594;
	sub.f32 	%f912, %f589, %f595;
	sub.s32 	%r1089, %r1089, %r248;
	mov.b32 	%r1088, %f912;
	setp.ne.s32 	%p98, %r1089, 0;
	setp.ne.s32 	%p99, %r1088, 0;
	and.pred  	%p100, %p98, %p99;
	@%p100 bra 	LBB0_32;
LBB0_33:                                // %__internal_fmodf_slowpath_mod.exit.i.i
	setp.gt.u32 	%p101, %r22, 2139095039;
	selp.f32 	%f596, 0f7FFFFFFF, 0f4B800000, %p101;
	mul.f32 	%f597, %f912, 0f34000000;
	mul.f32 	%f913, %f596, %f597;
	bra.uni 	LBB0_34;
LBB0_24:                                // %__nv_fast_fdividef.exit.i.i.i
	div.approx.f32 	%f580, %f913, %f184;
	cvt.rzi.f32.f32 	%f911, %f580;
	fma.rn.f32 	%f41, %f911, 0fC0000000, %f913;
	mov.b32 	%r21, %f41;
	setp.lt.u32 	%p92, %r21, 1073741824;
	@%p92 bra 	LBB0_29;
// %bb.25:
	setp.lt.u32 	%p93, %r21, -2147483647;
	@%p93 bra 	LBB0_27;
// %bb.26:
	add.f32 	%f585, %f911, 0fBF800000;
	setp.lt.f32 	%p96, %f41, 0fC0000000;
	add.f32 	%f586, %f585, 0fBF800000;
	selp.f32 	%f911, %f586, %f585, %p96;
	bra.uni 	LBB0_29;
LBB0_27:
	add.f32 	%f911, %f911, 0f3F800000;
	setp.ltu.f32 	%p94, %f41, 0f40800000;
	@%p94 bra 	LBB0_29;
// %bb.28:                              // %__nv_fmaf_rn.exit.i.i.i
	add.f32 	%f581, %f911, 0f3F800000;
	fma.rn.f32 	%f583, %f184, 0fC0400000, %f41;
	setp.ge.f32 	%p95, %f583, 0f00000000;
	add.f32 	%f584, %f581, 0f3F800000;
	selp.f32 	%f911, %f584, %f581, %p95;
LBB0_29:                                // %__internal_fmodf_fastpath_quot.exit.i.i
	fma.rn.f32 	%f913, %f911, 0fC0000000, %f913;
LBB0_34:                                // %__internal_fmodf_kernel.exit.i
	setp.eq.b32 	%p5, %r140, 1;
	fma.rn.f32 	%f207, %f204, 0f37CBAC00, 0fBAB607ED;
	setp.eq.b32 	%p11, %r147, 1;
	fma.rn.f32 	%f242, %f239, 0f37CBAC00, 0fBAB607ED;
	setp.eq.b32 	%p17, %r158, 1;
	fma.rn.f32 	%f278, %f275, 0f37CBAC00, 0fBAB607ED;
	setp.eq.b32 	%p23, %r165, 1;
	fma.rn.f32 	%f313, %f310, 0f37CBAC00, 0fBAB607ED;
	setp.eq.b32 	%p29, %r176, 1;
	fma.rn.f32 	%f349, %f346, 0f37CBAC00, 0fBAB607ED;
	setp.eq.b32 	%p35, %r183, 1;
	fma.rn.f32 	%f384, %f381, 0f37CBAC00, 0fBAB607ED;
	setp.eq.b32 	%p41, %r194, 1;
	fma.rn.f32 	%f420, %f417, 0f37CBAC00, 0fBAB607ED;
	setp.eq.b32 	%p47, %r201, 1;
	fma.rn.f32 	%f455, %f452, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f503, %f502, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f556, %f555, 0f37CBAC00, 0fBAB607ED;
	or.b32  	%r91, %r245, 4;
	cvt.u64.u32 	%rd10, %r9;
	abs.f32 	%f598, %f913;
	setp.gtu.f32 	%p102, %f598, 0f7F800000;
	@%p102 bra 	LBB0_36;
// %bb.35:
	mov.b32 	%r250, %f146;
	and.b32  	%r251, %r250, -2147483648;
	mov.b32 	%r252, %f913;
	or.b32  	%r253, %r251, %r252;
	mov.b32 	%f913, %r253;
LBB0_36:                                // %__nv_fmodf.exit
	selp.f32 	%f209, 0f3D2AAABB, 0f3C0885E4, %p5;
	selp.f32 	%f210, %f207, 0fB94D4153, %p5;
	selp.f32 	%f244, 0f3D2AAABB, 0f3C0885E4, %p11;
	selp.f32 	%f245, %f242, 0fB94D4153, %p11;
	selp.f32 	%f280, 0f3D2AAABB, 0f3C0885E4, %p17;
	selp.f32 	%f281, %f278, 0fB94D4153, %p17;
	selp.f32 	%f315, 0f3D2AAABB, 0f3C0885E4, %p23;
	selp.f32 	%f316, %f313, 0fB94D4153, %p23;
	selp.f32 	%f351, 0f3D2AAABB, 0f3C0885E4, %p29;
	selp.f32 	%f352, %f349, 0fB94D4153, %p29;
	selp.f32 	%f386, 0f3D2AAABB, 0f3C0885E4, %p35;
	selp.f32 	%f387, %f384, 0fB94D4153, %p35;
	selp.f32 	%f422, 0f3D2AAABB, 0f3C0885E4, %p41;
	selp.f32 	%f423, %f420, 0fB94D4153, %p41;
	selp.f32 	%f457, 0f3D2AAABB, 0f3C0885E4, %p47;
	selp.f32 	%f458, %f455, 0fB94D4153, %p47;
	cvt.rzi.s32.f32 	%r217, %f498;
	fma.rn.f32 	%f504, %f503, %f502, 0f3D2AAABB;
	fma.rn.f32 	%f508, %f502, 0fB94D4153, 0f3C0885E4;
	cvt.rzi.s32.f32 	%r240, %f551;
	fma.rn.f32 	%f557, %f556, %f555, 0f3D2AAABB;
	fma.rn.f32 	%f561, %f555, 0fB94D4153, 0f3C0885E4;
	add.f32 	%f599, %f913, %f913;
	mov.b32 	%r254, %f599;
	and.b32  	%r255, %r254, -2147483648;
	or.b32  	%r256, %r255, 1056964608;
	mov.b32 	%f600, %r256;
	add.f32 	%f601, %f599, %f600;
	cvt.rzi.f32.f32 	%f602, %f601;
	abs.f32 	%f603, %f599;
	setp.gt.f32 	%p103, %f603, 0f4B000000;
	selp.f32 	%f604, %f599, %f602, %p103;
	cvt.rzi.f32.f32 	%f605, %f599;
	setp.lt.f32 	%p104, %f603, 0f3F000000;
	selp.f32 	%f606, %f605, %f604, %p104;
	cvt.rzi.s32.f32 	%r257, %f606;
	fma.rn.f32 	%f607, %f606, 0fBF000000, %f913;
	mul.f32 	%f608, %f607, 0f34222169;
	fma.rn.f32 	%f609, %f607, 0f40490FDA, %f608;
	mul.f32 	%f610, %f609, %f609;
	fma.rn.f32 	%f611, %f610, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f612, %f611, %f610, 0f3D2AAABB;
	fma.rn.f32 	%f613, %f612, %f610, 0fBEFFFFFF;
	fma.rn.f32 	%f615, %f610, %f609, 0f00000000;
	fma.rn.f32 	%f616, %f610, 0fB94D4153, 0f3C0885E4;
	fma.rn.f32 	%f617, %f616, %f610, 0fBE2AAAA8;
	and.b32  	%r258, %r257, 1;
	cvt.u64.u32 	%rd38, %r91;
	mul.lo.s64 	%rd39, %rd38, %rd10;
	shl.b64 	%rd40, %rd39, 1;
	neg.s64 	%rd41, %rd40;
	cvt.rn.f32.s64 	%f630, %rd41;
	div.approx.f32 	%f57, %f630, %f578;
	abs.f32 	%f917, %f57;
	setp.lt.f32 	%p110, %f917, 0f40000000;
	@%p110 bra 	LBB0_48;
// %bb.37:
	setp.gtu.f32 	%p111, %f917, 0f4B800000;
	@%p111 bra 	LBB0_44;
	bra.uni 	LBB0_38;
LBB0_44:
	mov.b32 	%r30, %f917;
	and.b32  	%r262, %r30, 8388607;
	or.b32  	%r1090, %r262, 1065353216;
	mov.b32 	%f916, %r1090;
	add.s32 	%r263, %r30, -1073741824;
	and.b32  	%r1091, %r263, -8388608;
	setp.eq.s32 	%p117, %r1091, 0;
	@%p117 bra 	LBB0_47;
// %bb.45:                              // %__nv_fmaf_rn.exit4.i.i.i497.preheader
	mov.f32 	%f641, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f640,%f641;
	// end inline asm
LBB0_46:                                // %__nv_fmaf_rn.exit4.i.i.i497
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r264, %r1091, 192937984;
	add.s32 	%r265, %r264, %r1090;
	mov.b32 	%f642, %r265;
	mul.f32 	%f643, %f640, %f642;
	sub.f32 	%f644, %f642, %f643;
	fma.rn.f32 	%f645, %f644, %f640, %f643;
	sub.f32 	%f646, %f642, %f645;
	fma.rz.f32 	%f647, %f646, %f640, %f645;
	cvt.rzi.f32.f32 	%f648, %f647;
	sub.f32 	%f916, %f642, %f648;
	sub.s32 	%r1091, %r1091, %r264;
	mov.b32 	%r1090, %f916;
	setp.ne.s32 	%p118, %r1091, 0;
	setp.ne.s32 	%p119, %r1090, 0;
	and.pred  	%p120, %p118, %p119;
	@%p120 bra 	LBB0_46;
LBB0_47:                                // %__internal_fmodf_slowpath_mod.exit.i.i499
	setp.gt.u32 	%p121, %r30, 2139095039;
	selp.f32 	%f649, 0f7FFFFFFF, 0f4B800000, %p121;
	mul.f32 	%f650, %f916, 0f34000000;
	mul.f32 	%f917, %f649, %f650;
	bra.uni 	LBB0_48;
LBB0_38:                                // %__nv_fast_fdividef.exit.i.i.i469
	div.approx.f32 	%f633, %f917, %f184;
	cvt.rzi.f32.f32 	%f915, %f633;
	fma.rn.f32 	%f60, %f915, 0fC0000000, %f917;
	mov.b32 	%r29, %f60;
	setp.lt.u32 	%p112, %r29, 1073741824;
	@%p112 bra 	LBB0_43;
// %bb.39:
	setp.lt.u32 	%p113, %r29, -2147483647;
	@%p113 bra 	LBB0_41;
// %bb.40:
	add.f32 	%f638, %f915, 0fBF800000;
	setp.lt.f32 	%p116, %f60, 0fC0000000;
	add.f32 	%f639, %f638, 0fBF800000;
	selp.f32 	%f915, %f639, %f638, %p116;
	bra.uni 	LBB0_43;
LBB0_41:
	add.f32 	%f915, %f915, 0f3F800000;
	setp.ltu.f32 	%p114, %f60, 0f40800000;
	@%p114 bra 	LBB0_43;
// %bb.42:                              // %__nv_fmaf_rn.exit.i.i.i474
	add.f32 	%f634, %f915, 0f3F800000;
	fma.rn.f32 	%f636, %f184, 0fC0400000, %f60;
	setp.ge.f32 	%p115, %f636, 0f00000000;
	add.f32 	%f637, %f634, 0f3F800000;
	selp.f32 	%f915, %f637, %f634, %p115;
LBB0_43:                                // %__internal_fmodf_fastpath_quot.exit.i.i478
	fma.rn.f32 	%f917, %f915, 0fC0000000, %f917;
LBB0_48:                                // %__internal_fmodf_kernel.exit.i503
	selp.f32 	%f205, 0f3F800000, %f203, %p5;
	selp.f32 	%f208, 0fBEFFFFFF, 0fBE2AAAA8, %p5;
	fma.rn.f32 	%f211, %f210, %f204, %f209;
	selp.f32 	%f240, 0f3F800000, %f238, %p11;
	selp.f32 	%f243, 0fBEFFFFFF, 0fBE2AAAA8, %p11;
	fma.rn.f32 	%f246, %f245, %f239, %f244;
	selp.f32 	%f276, 0f3F800000, %f274, %p17;
	selp.f32 	%f279, 0fBEFFFFFF, 0fBE2AAAA8, %p17;
	fma.rn.f32 	%f282, %f281, %f275, %f280;
	selp.f32 	%f311, 0f3F800000, %f309, %p23;
	selp.f32 	%f314, 0fBEFFFFFF, 0fBE2AAAA8, %p23;
	fma.rn.f32 	%f317, %f316, %f310, %f315;
	selp.f32 	%f347, 0f3F800000, %f345, %p29;
	selp.f32 	%f350, 0fBEFFFFFF, 0fBE2AAAA8, %p29;
	fma.rn.f32 	%f353, %f352, %f346, %f351;
	selp.f32 	%f382, 0f3F800000, %f380, %p35;
	selp.f32 	%f385, 0fBEFFFFFF, 0fBE2AAAA8, %p35;
	fma.rn.f32 	%f388, %f387, %f381, %f386;
	selp.f32 	%f418, 0f3F800000, %f416, %p41;
	selp.f32 	%f421, 0fBEFFFFFF, 0fBE2AAAA8, %p41;
	fma.rn.f32 	%f424, %f423, %f417, %f422;
	selp.f32 	%f453, 0f3F800000, %f451, %p47;
	selp.f32 	%f456, 0fBEFFFFFF, 0fBE2AAAA8, %p47;
	fma.rn.f32 	%f459, %f458, %f452, %f457;
	fma.rn.f32 	%f505, %f504, %f502, 0fBEFFFFFF;
	fma.rn.f32 	%f507, %f502, %f501, 0f00000000;
	fma.rn.f32 	%f509, %f508, %f502, 0fBE2AAAA8;
	and.b32  	%r218, %r217, 1;
	fma.rn.f32 	%f558, %f557, %f555, 0fBEFFFFFF;
	fma.rn.f32 	%f560, %f555, %f554, 0f00000000;
	fma.rn.f32 	%f562, %f561, %f555, 0fBE2AAAA8;
	and.b32  	%r241, %r240, 1;
	fma.rn.f32 	%f614, %f613, %f610, 0f3F800000;
	fma.rn.f32 	%f618, %f617, %f615, %f609;
	setp.eq.b32 	%p105, %r258, 1;
	mov.f32 	%f214, 0f00000000;
	abs.f32 	%f651, %f917;
	setp.gtu.f32 	%p122, %f651, 0f7F800000;
	@%p122 bra 	LBB0_50;
// %bb.49:
	mov.b32 	%r266, %f57;
	and.b32  	%r267, %r266, -2147483648;
	mov.b32 	%r268, %f917;
	or.b32  	%r269, %r267, %r268;
	mov.b32 	%f917, %r269;
LBB0_50:                                // %__nv_fmodf.exit504
	fma.rn.f32 	%f206, %f204, %f205, 0f00000000;
	fma.rn.f32 	%f212, %f211, %f204, %f208;
	fma.rn.f32 	%f241, %f239, %f240, 0f00000000;
	fma.rn.f32 	%f247, %f246, %f239, %f243;
	fma.rn.f32 	%f277, %f275, %f276, 0f00000000;
	fma.rn.f32 	%f283, %f282, %f275, %f279;
	fma.rn.f32 	%f312, %f310, %f311, 0f00000000;
	fma.rn.f32 	%f318, %f317, %f310, %f314;
	fma.rn.f32 	%f348, %f346, %f347, 0f00000000;
	fma.rn.f32 	%f354, %f353, %f346, %f350;
	fma.rn.f32 	%f383, %f381, %f382, 0f00000000;
	fma.rn.f32 	%f389, %f388, %f381, %f385;
	fma.rn.f32 	%f419, %f417, %f418, 0f00000000;
	fma.rn.f32 	%f425, %f424, %f417, %f421;
	fma.rn.f32 	%f454, %f452, %f453, 0f00000000;
	fma.rn.f32 	%f460, %f459, %f452, %f456;
	fma.rn.f32 	%f506, %f505, %f502, 0f3F800000;
	fma.rn.f32 	%f510, %f509, %f507, %f501;
	setp.eq.b32 	%p65, %r218, 1;
	fma.rn.f32 	%f559, %f558, %f555, 0f3F800000;
	fma.rn.f32 	%f563, %f562, %f560, %f554;
	setp.eq.b32 	%p85, %r241, 1;
	selp.f32 	%f619, %f614, %f618, %p105;
	and.b32  	%r259, %r257, 2;
	add.f32 	%f652, %f917, %f917;
	mov.b32 	%r282, %f652;
	and.b32  	%r283, %r282, -2147483648;
	or.b32  	%r284, %r283, 1056964608;
	mov.b32 	%f653, %r284;
	add.f32 	%f654, %f652, %f653;
	cvt.rzi.f32.f32 	%f655, %f654;
	abs.f32 	%f656, %f652;
	setp.gt.f32 	%p123, %f656, 0f4B000000;
	selp.f32 	%f657, %f652, %f655, %p123;
	cvt.rzi.f32.f32 	%f658, %f652;
	setp.lt.f32 	%p124, %f656, 0f3F000000;
	selp.f32 	%f659, %f658, %f657, %p124;
	cvt.rzi.s32.f32 	%r285, %f659;
	fma.rn.f32 	%f660, %f659, 0fBF000000, %f917;
	mul.f32 	%f661, %f660, 0f34222169;
	fma.rn.f32 	%f662, %f660, 0f40490FDA, %f661;
	mul.f32 	%f663, %f662, %f662;
	fma.rn.f32 	%f664, %f663, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f665, %f664, %f663, 0f3D2AAABB;
	fma.rn.f32 	%f666, %f665, %f663, 0fBEFFFFFF;
	fma.rn.f32 	%f667, %f666, %f663, 0f3F800000;
	fma.rn.f32 	%f668, %f663, %f662, 0f00000000;
	fma.rn.f32 	%f669, %f663, 0fB94D4153, 0f3C0885E4;
	fma.rn.f32 	%f670, %f669, %f663, 0fBE2AAAA8;
	fma.rn.f32 	%f671, %f670, %f668, %f662;
	and.b32  	%r286, %r285, 1;
	setp.eq.b32 	%p125, %r286, 1;
	selp.f32 	%f672, %f667, %f671, %p125;
	and.b32  	%r287, %r285, 2;
	div.approx.f32 	%f74, %f214, %f217;
	abs.f32 	%f921, %f74;
	setp.lt.f32 	%p130, %f921, 0f40000000;
	@%p130 bra 	LBB0_62;
// %bb.51:
	setp.gtu.f32 	%p131, %f921, 0f4B800000;
	@%p131 bra 	LBB0_58;
	bra.uni 	LBB0_52;
LBB0_58:
	mov.b32 	%r42, %f921;
	and.b32  	%r290, %r42, 8388607;
	or.b32  	%r1092, %r290, 1065353216;
	mov.b32 	%f920, %r1092;
	add.s32 	%r291, %r42, -1073741824;
	and.b32  	%r1093, %r291, -8388608;
	setp.eq.s32 	%p137, %r1093, 0;
	@%p137 bra 	LBB0_61;
// %bb.59:                              // %__nv_fmaf_rn.exit4.i.i.i543.preheader
	mov.f32 	%f695, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f694,%f695;
	// end inline asm
LBB0_60:                                // %__nv_fmaf_rn.exit4.i.i.i543
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r292, %r1093, 192937984;
	add.s32 	%r293, %r292, %r1092;
	mov.b32 	%f696, %r293;
	mul.f32 	%f697, %f694, %f696;
	sub.f32 	%f698, %f696, %f697;
	fma.rn.f32 	%f699, %f698, %f694, %f697;
	sub.f32 	%f700, %f696, %f699;
	fma.rz.f32 	%f701, %f700, %f694, %f699;
	cvt.rzi.f32.f32 	%f702, %f701;
	sub.f32 	%f920, %f696, %f702;
	sub.s32 	%r1093, %r1093, %r292;
	mov.b32 	%r1092, %f920;
	setp.ne.s32 	%p138, %r1093, 0;
	setp.ne.s32 	%p139, %r1092, 0;
	and.pred  	%p140, %p138, %p139;
	@%p140 bra 	LBB0_60;
LBB0_61:                                // %__internal_fmodf_slowpath_mod.exit.i.i545
	setp.gt.u32 	%p141, %r42, 2139095039;
	selp.f32 	%f703, 0f7FFFFFFF, 0f4B800000, %p141;
	mul.f32 	%f704, %f920, 0f34000000;
	mul.f32 	%f921, %f703, %f704;
	bra.uni 	LBB0_62;
LBB0_52:                                // %__nv_fast_fdividef.exit.i.i.i515
	div.approx.f32 	%f687, %f921, %f184;
	cvt.rzi.f32.f32 	%f919, %f687;
	fma.rn.f32 	%f77, %f919, 0fC0000000, %f921;
	mov.b32 	%r41, %f77;
	setp.lt.u32 	%p132, %r41, 1073741824;
	@%p132 bra 	LBB0_57;
// %bb.53:
	setp.lt.u32 	%p133, %r41, -2147483647;
	@%p133 bra 	LBB0_55;
// %bb.54:
	add.f32 	%f692, %f919, 0fBF800000;
	setp.lt.f32 	%p136, %f77, 0fC0000000;
	add.f32 	%f693, %f692, 0fBF800000;
	selp.f32 	%f919, %f693, %f692, %p136;
	bra.uni 	LBB0_57;
LBB0_55:
	add.f32 	%f919, %f919, 0f3F800000;
	setp.ltu.f32 	%p134, %f77, 0f40800000;
	@%p134 bra 	LBB0_57;
// %bb.56:                              // %__nv_fmaf_rn.exit.i.i.i520
	add.f32 	%f688, %f919, 0f3F800000;
	fma.rn.f32 	%f690, %f184, 0fC0400000, %f77;
	setp.ge.f32 	%p135, %f690, 0f00000000;
	add.f32 	%f691, %f688, 0f3F800000;
	selp.f32 	%f919, %f691, %f688, %p135;
LBB0_57:                                // %__internal_fmodf_fastpath_quot.exit.i.i524
	fma.rn.f32 	%f921, %f919, 0fC0000000, %f921;
LBB0_62:                                // %__internal_fmodf_kernel.exit.i549
	fma.rn.f32 	%f213, %f212, %f206, %f205;
	and.b32  	%r141, %r139, 2;
	fma.rn.f32 	%f248, %f247, %f241, %f240;
	and.b32  	%r148, %r146, 2;
	fma.rn.f32 	%f284, %f283, %f277, %f276;
	and.b32  	%r159, %r157, 2;
	fma.rn.f32 	%f319, %f318, %f312, %f311;
	and.b32  	%r166, %r164, 2;
	fma.rn.f32 	%f355, %f354, %f348, %f347;
	and.b32  	%r177, %r175, 2;
	fma.rn.f32 	%f390, %f389, %f383, %f382;
	and.b32  	%r184, %r182, 2;
	fma.rn.f32 	%f426, %f425, %f419, %f418;
	and.b32  	%r195, %r193, 2;
	fma.rn.f32 	%f461, %f460, %f454, %f453;
	and.b32  	%r202, %r200, 2;
	selp.f32 	%f511, %f506, %f510, %p65;
	and.b32  	%r219, %r217, 2;
	selp.f32 	%f564, %f559, %f563, %p85;
	and.b32  	%r242, %r240, 2;
	setp.eq.s32 	%p106, %r259, 0;
	neg.f32 	%f621, %f619;
	add.s32 	%r260, %r257, 1;
	cvt.rzi.f32.f32 	%f626, %f913;
	setp.eq.s32 	%p126, %r287, 0;
	neg.f32 	%f674, %f672;
	add.s32 	%r288, %r285, 1;
	cvt.rzi.f32.f32 	%f679, %f917;
	abs.f32 	%f705, %f921;
	setp.gtu.f32 	%p142, %f705, 0f7F800000;
	@%p142 bra 	LBB0_64;
// %bb.63:
	mov.b32 	%r294, %f74;
	and.b32  	%r295, %r294, -2147483648;
	mov.b32 	%r296, %f921;
	or.b32  	%r297, %r295, %r296;
	mov.b32 	%f921, %r297;
LBB0_64:                                // %__nv_fmodf.exit550
	shl.b32 	%r5, %r1, 2;
	and.b32  	%r128, %r6, 8;
	and.b32  	%r129, %r1, 2;
	setp.eq.s32 	%p6, %r141, 0;
	sub.f32 	%f215, %f214, %f213;
	setp.eq.s32 	%p12, %r148, 0;
	sub.f32 	%f250, %f214, %f248;
	setp.eq.s32 	%p18, %r159, 0;
	sub.f32 	%f286, %f214, %f284;
	setp.eq.s32 	%p24, %r166, 0;
	sub.f32 	%f321, %f214, %f319;
	setp.eq.s32 	%p30, %r177, 0;
	sub.f32 	%f357, %f214, %f355;
	setp.eq.s32 	%p36, %r184, 0;
	sub.f32 	%f392, %f214, %f390;
	setp.eq.s32 	%p42, %r195, 0;
	sub.f32 	%f428, %f214, %f426;
	setp.eq.s32 	%p48, %r202, 0;
	sub.f32 	%f463, %f214, %f461;
	setp.eq.s32 	%p66, %r219, 0;
	neg.f32 	%f513, %f511;
	add.s32 	%r220, %r217, 1;
	cvt.rzi.f32.f32 	%f518, %f929;
	setp.eq.s32 	%p86, %r242, 0;
	neg.f32 	%f566, %f564;
	add.s32 	%r243, %r240, 1;
	cvt.rzi.f32.f32 	%f571, %f933;
	selp.f32 	%f620, %f618, %f614, %p105;
	selp.f32 	%f622, %f619, %f621, %p106;
	and.b32  	%r261, %r260, 2;
	setp.eq.f32 	%p108, %f626, %f913;
	mul.f32 	%f627, %f913, 0f00000000;
	selp.f32 	%f673, %f671, %f667, %p125;
	selp.f32 	%f675, %f672, %f674, %p126;
	and.b32  	%r289, %r288, 2;
	setp.eq.f32 	%p128, %f679, %f917;
	mul.f32 	%f680, %f917, 0f00000000;
	add.f32 	%f706, %f921, %f921;
	mov.b32 	%r298, %f706;
	and.b32  	%r299, %r298, -2147483648;
	or.b32  	%r300, %r299, 1056964608;
	mov.b32 	%f707, %r300;
	add.f32 	%f708, %f706, %f707;
	cvt.rzi.f32.f32 	%f709, %f708;
	abs.f32 	%f710, %f706;
	setp.gt.f32 	%p143, %f710, 0f4B000000;
	selp.f32 	%f711, %f706, %f709, %p143;
	cvt.rzi.f32.f32 	%f712, %f706;
	setp.lt.f32 	%p144, %f710, 0f3F000000;
	selp.f32 	%f713, %f712, %f711, %p144;
	cvt.rzi.s32.f32 	%r301, %f713;
	fma.rn.f32 	%f714, %f713, 0fBF000000, %f921;
	mul.f32 	%f715, %f714, 0f34222169;
	fma.rn.f32 	%f716, %f714, 0f40490FDA, %f715;
	mul.f32 	%f717, %f716, %f716;
	fma.rn.f32 	%f718, %f717, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f719, %f718, %f717, 0f3D2AAABB;
	fma.rn.f32 	%f720, %f719, %f717, 0fBEFFFFFF;
	fma.rn.f32 	%f721, %f720, %f717, 0f3F800000;
	fma.rn.f32 	%f722, %f717, %f716, 0f00000000;
	fma.rn.f32 	%f723, %f717, 0fB94D4153, 0f3C0885E4;
	fma.rn.f32 	%f724, %f723, %f717, 0fBE2AAAA8;
	fma.rn.f32 	%f725, %f724, %f722, %f716;
	and.b32  	%r302, %r301, 1;
	setp.eq.b32 	%p145, %r302, 1;
	selp.f32 	%f726, %f721, %f725, %p145;
	and.b32  	%r303, %r301, 2;
	setp.eq.s32 	%p146, %r303, 0;
	neg.f32 	%f728, %f726;
	add.s32 	%r304, %r301, 1;
	cvt.rzi.f32.f32 	%f733, %f921;
	shl.b64 	%rd42, %rd10, 1;
	neg.s64 	%rd43, %rd42;
	cvt.rn.f32.s64 	%f737, %rd43;
	div.approx.f32 	%f93, %f737, %f217;
	abs.f32 	%f925, %f93;
	setp.lt.f32 	%p150, %f925, 0f40000000;
	@%p150 bra 	LBB0_76;
// %bb.65:
	setp.gtu.f32 	%p151, %f925, 0f4B800000;
	@%p151 bra 	LBB0_72;
	bra.uni 	LBB0_66;
LBB0_72:
	mov.b32 	%r50, %f925;
	and.b32  	%r306, %r50, 8388607;
	or.b32  	%r1094, %r306, 1065353216;
	mov.b32 	%f924, %r1094;
	add.s32 	%r307, %r50, -1073741824;
	and.b32  	%r1095, %r307, -8388608;
	setp.eq.s32 	%p157, %r1095, 0;
	@%p157 bra 	LBB0_75;
// %bb.73:                              // %__nv_fmaf_rn.exit4.i.i.i589.preheader
	mov.f32 	%f748, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f747,%f748;
	// end inline asm
LBB0_74:                                // %__nv_fmaf_rn.exit4.i.i.i589
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r308, %r1095, 192937984;
	add.s32 	%r309, %r308, %r1094;
	mov.b32 	%f749, %r309;
	mul.f32 	%f750, %f747, %f749;
	sub.f32 	%f751, %f749, %f750;
	fma.rn.f32 	%f752, %f751, %f747, %f750;
	sub.f32 	%f753, %f749, %f752;
	fma.rz.f32 	%f754, %f753, %f747, %f752;
	cvt.rzi.f32.f32 	%f755, %f754;
	sub.f32 	%f924, %f749, %f755;
	sub.s32 	%r1095, %r1095, %r308;
	mov.b32 	%r1094, %f924;
	setp.ne.s32 	%p158, %r1095, 0;
	setp.ne.s32 	%p159, %r1094, 0;
	and.pred  	%p160, %p158, %p159;
	@%p160 bra 	LBB0_74;
LBB0_75:                                // %__internal_fmodf_slowpath_mod.exit.i.i591
	setp.gt.u32 	%p161, %r50, 2139095039;
	selp.f32 	%f756, 0f7FFFFFFF, 0f4B800000, %p161;
	mul.f32 	%f757, %f924, 0f34000000;
	mul.f32 	%f925, %f756, %f757;
	bra.uni 	LBB0_76;
LBB0_66:                                // %__nv_fast_fdividef.exit.i.i.i561
	div.approx.f32 	%f740, %f925, %f184;
	cvt.rzi.f32.f32 	%f923, %f740;
	fma.rn.f32 	%f96, %f923, 0fC0000000, %f925;
	mov.b32 	%r49, %f96;
	setp.lt.u32 	%p152, %r49, 1073741824;
	@%p152 bra 	LBB0_71;
// %bb.67:
	setp.lt.u32 	%p153, %r49, -2147483647;
	@%p153 bra 	LBB0_69;
// %bb.68:
	add.f32 	%f745, %f923, 0fBF800000;
	setp.lt.f32 	%p156, %f96, 0fC0000000;
	add.f32 	%f746, %f745, 0fBF800000;
	selp.f32 	%f923, %f746, %f745, %p156;
	bra.uni 	LBB0_71;
LBB0_69:
	add.f32 	%f923, %f923, 0f3F800000;
	setp.ltu.f32 	%p154, %f96, 0f40800000;
	@%p154 bra 	LBB0_71;
// %bb.70:                              // %__nv_fmaf_rn.exit.i.i.i566
	add.f32 	%f741, %f923, 0f3F800000;
	fma.rn.f32 	%f743, %f184, 0fC0400000, %f96;
	setp.ge.f32 	%p155, %f743, 0f00000000;
	add.f32 	%f744, %f741, 0f3F800000;
	selp.f32 	%f923, %f744, %f741, %p155;
LBB0_71:                                // %__internal_fmodf_fastpath_quot.exit.i.i570
	fma.rn.f32 	%f925, %f923, 0fC0000000, %f925;
LBB0_76:                                // %__internal_fmodf_kernel.exit.i595
	and.b32  	%r127, %r5, 4;
	or.b32  	%r130, %r128, %r129;
	selp.f32 	%f216, %f213, %f215, %p6;
	selp.f32 	%f251, %f248, %f250, %p12;
	selp.f32 	%f287, %f284, %f286, %p18;
	selp.f32 	%f322, %f319, %f321, %p24;
	selp.f32 	%f358, %f355, %f357, %p30;
	selp.f32 	%f393, %f390, %f392, %p36;
	selp.f32 	%f429, %f426, %f428, %p42;
	selp.f32 	%f464, %f461, %f463, %p48;
	selp.f32 	%f512, %f510, %f506, %p65;
	selp.f32 	%f514, %f511, %f513, %p66;
	and.b32  	%r221, %r220, 2;
	setp.eq.f32 	%p68, %f518, %f929;
	mul.f32 	%f519, %f929, 0f00000000;
	selp.f32 	%f565, %f563, %f559, %p85;
	selp.f32 	%f567, %f564, %f566, %p86;
	and.b32  	%r244, %r243, 2;
	setp.eq.f32 	%p88, %f571, %f933;
	mul.f32 	%f572, %f933, 0f00000000;
	setp.eq.s32 	%p107, %r261, 0;
	sub.f32 	%f624, %f214, %f620;
	selp.f32 	%f55, %f627, %f622, %p108;
	abs.f32 	%f628, %f913;
	setp.eq.s32 	%p127, %r289, 0;
	sub.f32 	%f677, %f214, %f673;
	selp.f32 	%f681, %f680, %f675, %p128;
	abs.f32 	%f682, %f917;
	selp.f32 	%f727, %f725, %f721, %p145;
	selp.f32 	%f729, %f726, %f728, %p146;
	and.b32  	%r305, %r304, 2;
	setp.eq.f32 	%p148, %f733, %f921;
	mul.f32 	%f734, %f921, 0f00000000;
	abs.f32 	%f758, %f925;
	setp.gtu.f32 	%p162, %f758, 0f7F800000;
	@%p162 bra 	LBB0_78;
// %bb.77:
	mov.b32 	%r310, %f93;
	and.b32  	%r311, %r310, -2147483648;
	mov.b32 	%r312, %f925;
	or.b32  	%r313, %r311, %r312;
	mov.b32 	%f925, %r313;
LBB0_78:                                // %__nv_fmodf.exit596
	or.b32  	%r131, %r130, %r127;
	mul.f32 	%f2, %f216, %f216;
	mul.f32 	%f7, %f251, %f251;
	mul.f32 	%f11, %f287, %f287;
	mul.f32 	%f16, %f322, %f322;
	mul.f32 	%f20, %f358, %f358;
	mul.f32 	%f25, %f393, %f393;
	mul.f32 	%f29, %f429, %f429;
	mul.f32 	%f34, %f464, %f464;
	setp.eq.s32 	%p67, %r221, 0;
	sub.f32 	%f516, %f214, %f512;
	selp.f32 	%f127, %f519, %f514, %p68;
	abs.f32 	%f520, %f929;
	setp.eq.s32 	%p87, %r244, 0;
	sub.f32 	%f569, %f214, %f565;
	selp.f32 	%f573, %f572, %f567, %p88;
	abs.f32 	%f574, %f933;
	selp.f32 	%f625, %f620, %f624, %p107;
	setp.gt.f32 	%p109, %f628, 0f4B800000;
	add.f32 	%f629, %f55, 0f3F800000;
	selp.f32 	%f678, %f673, %f677, %p127;
	setp.gt.f32 	%p129, %f682, 0f4B800000;
	add.f32 	%f683, %f681, 0f3F800000;
	setp.eq.s32 	%p147, %r305, 0;
	sub.f32 	%f731, %f214, %f727;
	selp.f32 	%f91, %f734, %f729, %p148;
	abs.f32 	%f735, %f921;
	and.b32  	%r90, %r9, 2;
	add.f32 	%f759, %f925, %f925;
	mov.b32 	%r320, %f759;
	and.b32  	%r321, %r320, -2147483648;
	or.b32  	%r322, %r321, 1056964608;
	mov.b32 	%f760, %r322;
	add.f32 	%f761, %f759, %f760;
	cvt.rzi.f32.f32 	%f762, %f761;
	abs.f32 	%f763, %f759;
	setp.gt.f32 	%p163, %f763, 0f4B000000;
	selp.f32 	%f764, %f759, %f762, %p163;
	cvt.rzi.f32.f32 	%f765, %f759;
	setp.lt.f32 	%p164, %f763, 0f3F000000;
	selp.f32 	%f766, %f765, %f764, %p164;
	cvt.rzi.s32.f32 	%r323, %f766;
	fma.rn.f32 	%f767, %f766, 0fBF000000, %f925;
	mul.f32 	%f768, %f767, 0f34222169;
	fma.rn.f32 	%f769, %f767, 0f40490FDA, %f768;
	mul.f32 	%f770, %f769, %f769;
	fma.rn.f32 	%f771, %f770, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f772, %f771, %f770, 0f3D2AAABB;
	fma.rn.f32 	%f773, %f772, %f770, 0fBEFFFFFF;
	fma.rn.f32 	%f774, %f773, %f770, 0f3F800000;
	fma.rn.f32 	%f775, %f770, %f769, 0f00000000;
	fma.rn.f32 	%f776, %f770, 0fB94D4153, 0f3C0885E4;
	fma.rn.f32 	%f777, %f776, %f770, 0fBE2AAAA8;
	fma.rn.f32 	%f778, %f777, %f775, %f769;
	and.b32  	%r324, %r323, 1;
	setp.eq.b32 	%p165, %r324, 1;
	selp.f32 	%f779, %f774, %f778, %p165;
	selp.f32 	%f780, %f778, %f774, %p165;
	and.b32  	%r325, %r323, 2;
	setp.eq.s32 	%p166, %r325, 0;
	neg.f32 	%f781, %f779;
	selp.f32 	%f782, %f779, %f781, %p166;
	add.s32 	%r326, %r323, 1;
	and.b32  	%r327, %r326, 2;
	setp.eq.s32 	%p167, %r327, 0;
	sub.f32 	%f784, %f214, %f780;
	cvt.rzi.f32.f32 	%f786, %f925;
	setp.eq.f32 	%p168, %f786, %f925;
	mul.f32 	%f787, %f925, 0f00000000;
	selp.f32 	%f788, %f787, %f782, %p168;
	abs.f32 	%f789, %f925;
	shr.u32 	%r59, %r1, 4;
	cvt.u16.u32 	%rs1, %r1;
	shr.u16 	%rs2, %rs1, 8;
	shl.b16 	%rs3, %rs1, 8;
	or.b16  	%rs4, %rs3, %rs2;
	shl.b16 	%rs5, %rs4, 4;
	shr.u16 	%rs6, %rs4, 4;
	and.b16  	%rs7, %rs6, 3840;
	or.b16  	%rs8, %rs7, %rs5;
	and.b16  	%rs9, %rs8, 13107;
	shl.b16 	%rs10, %rs9, 2;
	shr.u16 	%rs11, %rs8, 2;
	and.b16  	%rs12, %rs11, 13107;
	or.b16  	%rs13, %rs12, %rs10;
	shr.u16 	%rs14, %rs13, 1;
	and.b16  	%rs15, %rs13, 16384;
	shl.b16 	%rs16, %rs15, 1;
	or.b16  	%rs17, %rs14, %rs16;
	shr.u16 	%rs18, %rs17, 14;
	div.approx.f32 	%f110, %f214, %f184;
	abs.f32 	%f937, %f110;
	setp.lt.f32 	%p170, %f937, 0f40000000;
	@%p170 bra 	LBB0_116;
// %bb.79:
	setp.gtu.f32 	%p171, %f937, 0f4B800000;
	@%p171 bra 	LBB0_112;
	bra.uni 	LBB0_80;
LBB0_112:
	mov.b32 	%r94, %f937;
	and.b32  	%r328, %r94, 8388607;
	or.b32  	%r1108, %r328, 1065353216;
	mov.b32 	%f936, %r1108;
	add.s32 	%r329, %r94, -1073741824;
	and.b32  	%r1109, %r329, -8388608;
	setp.eq.s32 	%p177, %r1109, 0;
	@%p177 bra 	LBB0_115;
// %bb.113:                             // %__nv_fmaf_rn.exit4.i.i.i915.preheader
	mov.f32 	%f802, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f801,%f802;
	// end inline asm
LBB0_114:                               // %__nv_fmaf_rn.exit4.i.i.i915
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r330, %r1109, 192937984;
	add.s32 	%r331, %r330, %r1108;
	mov.b32 	%f803, %r331;
	mul.f32 	%f804, %f801, %f803;
	sub.f32 	%f805, %f803, %f804;
	fma.rn.f32 	%f806, %f805, %f801, %f804;
	sub.f32 	%f807, %f803, %f806;
	fma.rz.f32 	%f808, %f807, %f801, %f806;
	cvt.rzi.f32.f32 	%f809, %f808;
	sub.f32 	%f936, %f803, %f809;
	sub.s32 	%r1109, %r1109, %r330;
	mov.b32 	%r1108, %f936;
	setp.ne.s32 	%p178, %r1109, 0;
	setp.ne.s32 	%p179, %r1108, 0;
	and.pred  	%p180, %p178, %p179;
	@%p180 bra 	LBB0_114;
LBB0_115:                               // %__internal_fmodf_slowpath_mod.exit.i.i917
	setp.gt.u32 	%p181, %r94, 2139095039;
	selp.f32 	%f810, 0f7FFFFFFF, 0f4B800000, %p181;
	mul.f32 	%f811, %f936, 0f34000000;
	mul.f32 	%f937, %f810, %f811;
	bra.uni 	LBB0_116;
LBB0_80:                                // %__nv_fast_fdividef.exit.i.i.i887
	div.approx.f32 	%f794, %f937, %f184;
	cvt.rzi.f32.f32 	%f935, %f794;
	fma.rn.f32 	%f149, %f935, 0fC0000000, %f937;
	mov.b32 	%r93, %f149;
	setp.lt.u32 	%p172, %r93, 1073741824;
	@%p172 bra 	LBB0_111;
// %bb.81:
	setp.lt.u32 	%p173, %r93, -2147483647;
	@%p173 bra 	LBB0_109;
// %bb.82:
	add.f32 	%f799, %f935, 0fBF800000;
	setp.lt.f32 	%p176, %f149, 0fC0000000;
	add.f32 	%f800, %f799, 0fBF800000;
	selp.f32 	%f935, %f800, %f799, %p176;
	bra.uni 	LBB0_111;
LBB0_109:
	add.f32 	%f935, %f935, 0f3F800000;
	setp.ltu.f32 	%p174, %f149, 0f40800000;
	@%p174 bra 	LBB0_111;
// %bb.110:                             // %__nv_fmaf_rn.exit.i.i.i892
	add.f32 	%f795, %f935, 0f3F800000;
	fma.rn.f32 	%f797, %f184, 0fC0400000, %f149;
	setp.ge.f32 	%p175, %f797, 0f00000000;
	add.f32 	%f798, %f795, 0f3F800000;
	selp.f32 	%f935, %f798, %f795, %p175;
LBB0_111:                               // %__internal_fmodf_fastpath_quot.exit.i.i896
	fma.rn.f32 	%f937, %f935, 0fC0000000, %f937;
LBB0_116:                               // %__internal_fmodf_kernel.exit.i921
	shr.u32 	%r7, %r131, 1;
	mul.f32 	%f220, %f2, 0f3D09A17B;
	mul.f32 	%f255, %f7, 0f3D09A17B;
	mul.f32 	%f291, %f11, 0f3D09A17B;
	mul.f32 	%f326, %f16, 0f3D09A17B;
	mul.f32 	%f362, %f20, 0f3D09A17B;
	mul.f32 	%f397, %f25, 0f3D09A17B;
	mul.f32 	%f433, %f29, 0f3D09A17B;
	mul.f32 	%f467, %f34, 0f3D09A17B;
	selp.f32 	%f517, %f512, %f516, %p67;
	setp.gt.f32 	%p69, %f520, 0f4B800000;
	add.f32 	%f521, %f127, 0f3F800000;
	selp.f32 	%f570, %f565, %f569, %p87;
	setp.gt.f32 	%p89, %f574, 0f4B800000;
	add.f32 	%f575, %f573, 0f3F800000;
	selp.f32 	%f56, %f629, %f625, %p109;
	selp.f32 	%f684, %f683, %f678, %p129;
	selp.f32 	%f732, %f727, %f731, %p147;
	setp.gt.f32 	%p149, %f735, 0f4B800000;
	add.f32 	%f736, %f91, 0f3F800000;
	selp.f32 	%f785, %f780, %f784, %p167;
	setp.gt.f32 	%p169, %f789, 0f4B800000;
	add.f32 	%f790, %f788, 0f3F800000;
	cvt.u32.u16 	%r60, %rs18;
	or.b32  	%r61, %r90, %r59;
	abs.f32 	%f812, %f937;
	setp.gtu.f32 	%p182, %f812, 0f7F800000;
	@%p182 bra 	LBB0_118;
// %bb.117:
	mov.b32 	%r332, %f110;
	and.b32  	%r333, %r332, -2147483648;
	mov.b32 	%r334, %f937;
	or.b32  	%r335, %r333, %r334;
	mov.b32 	%f937, %r335;
LBB0_118:                               // %__nv_fmodf.exit922
	ld.param.u64 	%rd22, [_Z17julia_upchan_376513CuDeviceArrayI9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS1_Li1ELi1EES_I5Int32Li1ELi1EE_param_1];
	mul.wide.u32 	%rd33, %r7, 4;
	mul.f32 	%f6, %f220, %f903;
	mul.f32 	%f256, %f255, %f904;
	mul.f32 	%f15, %f291, %f905;
	mul.f32 	%f327, %f326, %f906;
	mul.f32 	%f24, %f362, %f907;
	mul.f32 	%f398, %f397, %f908;
	mul.f32 	%f33, %f433, %f909;
	mul.f32 	%f468, %f467, %f910;
	selp.f32 	%f128, %f521, %f517, %p69;
	selp.f32 	%f576, %f575, %f570, %p89;
	mov.b32 	%r272, %f684;
	mov.b32 	%r271, %f56;
	mov.b32 	%r278, %f681;
	mov.b32 	%r277, %f55;
	selp.f32 	%f92, %f736, %f732, %p149;
	selp.f32 	%f791, %f790, %f785, %p169;
	setp.eq.s32 	%p183, %r61, %r60;
	add.f32 	%f813, %f937, %f937;
	mov.b32 	%r336, %f813;
	and.b32  	%r337, %r336, -2147483648;
	or.b32  	%r338, %r337, 1056964608;
	mov.b32 	%f814, %r338;
	add.f32 	%f815, %f813, %f814;
	cvt.rzi.f32.f32 	%f816, %f815;
	abs.f32 	%f817, %f813;
	setp.gt.f32 	%p184, %f817, 0f4B000000;
	selp.f32 	%f818, %f813, %f816, %p184;
	cvt.rzi.f32.f32 	%f819, %f813;
	setp.lt.f32 	%p185, %f817, 0f3F000000;
	selp.f32 	%f820, %f819, %f818, %p185;
	cvt.rzi.s32.f32 	%r339, %f820;
	fma.rn.f32 	%f821, %f820, 0fBF000000, %f937;
	mul.f32 	%f822, %f821, 0f34222169;
	fma.rn.f32 	%f823, %f821, 0f40490FDA, %f822;
	mul.f32 	%f824, %f823, %f823;
	fma.rn.f32 	%f825, %f824, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f826, %f825, %f824, 0f3D2AAABB;
	fma.rn.f32 	%f827, %f826, %f824, 0fBEFFFFFF;
	fma.rn.f32 	%f828, %f827, %f824, 0f3F800000;
	fma.rn.f32 	%f829, %f824, %f823, 0f00000000;
	fma.rn.f32 	%f830, %f824, 0fB94D4153, 0f3C0885E4;
	fma.rn.f32 	%f831, %f830, %f824, 0fBE2AAAA8;
	fma.rn.f32 	%f832, %f831, %f829, %f823;
	and.b32  	%r340, %r339, 1;
	setp.eq.b32 	%p186, %r340, 1;
	selp.f32 	%f833, %f828, %f832, %p186;
	selp.f32 	%f834, %f832, %f828, %p186;
	and.b32  	%r341, %r339, 2;
	setp.eq.s32 	%p187, %r341, 0;
	neg.f32 	%f835, %f833;
	selp.f32 	%f836, %f833, %f835, %p187;
	add.s32 	%r342, %r339, 1;
	and.b32  	%r343, %r342, 2;
	setp.eq.s32 	%p188, %r343, 0;
	sub.f32 	%f838, %f214, %f834;
	selp.f32 	%f839, %f834, %f838, %p188;
	cvt.rzi.f32.f32 	%f840, %f937;
	setp.eq.f32 	%p189, %f840, %f937;
	mul.f32 	%f841, %f937, 0f00000000;
	selp.f32 	%f842, %f841, %f836, %p189;
	abs.f32 	%f843, %f937;
	setp.gt.f32 	%p190, %f843, 0f4B800000;
	add.f32 	%f844, %f842, 0f3F800000;
	selp.f32 	%f845, %f844, %f839, %p190;
	selp.f32 	%f163, 0f3F800000, 0f00000000, %p183;
	mul.wide.u32 	%rd44, %r10, 2;
	neg.s64 	%rd45, %rd44;
	cvt.rn.f32.s64 	%f846, %rd45;
	div.approx.f32 	%f166, %f846, %f184;
	abs.f32 	%f941, %f166;
	setp.lt.f32 	%p191, %f941, 0f40000000;
	@%p191 bra 	LBB0_130;
// %bb.119:
	setp.gtu.f32 	%p192, %f941, 0f4B800000;
	@%p192 bra 	LBB0_126;
	bra.uni 	LBB0_120;
LBB0_126:
	mov.b32 	%r102, %f941;
	and.b32  	%r344, %r102, 8388607;
	or.b32  	%r1110, %r344, 1065353216;
	mov.b32 	%f940, %r1110;
	add.s32 	%r345, %r102, -1073741824;
	and.b32  	%r1111, %r345, -8388608;
	setp.eq.s32 	%p198, %r1111, 0;
	@%p198 bra 	LBB0_129;
// %bb.127:                             // %__nv_fmaf_rn.exit4.i.i.i961.preheader
	mov.f32 	%f857, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f856,%f857;
	// end inline asm
LBB0_128:                               // %__nv_fmaf_rn.exit4.i.i.i961
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r346, %r1111, 192937984;
	add.s32 	%r347, %r346, %r1110;
	mov.b32 	%f858, %r347;
	mul.f32 	%f859, %f856, %f858;
	sub.f32 	%f860, %f858, %f859;
	fma.rn.f32 	%f861, %f860, %f856, %f859;
	sub.f32 	%f862, %f858, %f861;
	fma.rz.f32 	%f863, %f862, %f856, %f861;
	cvt.rzi.f32.f32 	%f864, %f863;
	sub.f32 	%f940, %f858, %f864;
	sub.s32 	%r1111, %r1111, %r346;
	mov.b32 	%r1110, %f940;
	setp.ne.s32 	%p199, %r1111, 0;
	setp.ne.s32 	%p200, %r1110, 0;
	and.pred  	%p201, %p199, %p200;
	@%p201 bra 	LBB0_128;
LBB0_129:                               // %__internal_fmodf_slowpath_mod.exit.i.i963
	setp.gt.u32 	%p202, %r102, 2139095039;
	selp.f32 	%f865, 0f7FFFFFFF, 0f4B800000, %p202;
	mul.f32 	%f866, %f940, 0f34000000;
	mul.f32 	%f941, %f865, %f866;
	bra.uni 	LBB0_130;
LBB0_120:                               // %__nv_fast_fdividef.exit.i.i.i933
	div.approx.f32 	%f849, %f941, %f184;
	cvt.rzi.f32.f32 	%f939, %f849;
	fma.rn.f32 	%f169, %f939, 0fC0000000, %f941;
	mov.b32 	%r101, %f169;
	setp.lt.u32 	%p193, %r101, 1073741824;
	@%p193 bra 	LBB0_125;
// %bb.121:
	setp.lt.u32 	%p194, %r101, -2147483647;
	@%p194 bra 	LBB0_123;
// %bb.122:
	add.f32 	%f854, %f939, 0fBF800000;
	setp.lt.f32 	%p197, %f169, 0fC0000000;
	add.f32 	%f855, %f854, 0fBF800000;
	selp.f32 	%f939, %f855, %f854, %p197;
	bra.uni 	LBB0_125;
LBB0_123:
	add.f32 	%f939, %f939, 0f3F800000;
	setp.ltu.f32 	%p195, %f169, 0f40800000;
	@%p195 bra 	LBB0_125;
// %bb.124:                             // %__nv_fmaf_rn.exit.i.i.i938
	add.f32 	%f850, %f939, 0f3F800000;
	fma.rn.f32 	%f852, %f184, 0fC0400000, %f169;
	setp.ge.f32 	%p196, %f852, 0f00000000;
	add.f32 	%f853, %f850, 0f3F800000;
	selp.f32 	%f939, %f853, %f850, %p196;
LBB0_125:                               // %__internal_fmodf_fastpath_quot.exit.i.i942
	fma.rn.f32 	%f941, %f939, 0fC0000000, %f941;
LBB0_130:                               // %__internal_fmodf_kernel.exit.i967
	add.s64 	%rd34, %rd22, %rd33;
	mov.b32 	%r151, %f256;
	mov.b32 	%r150, %f6;
	mov.b32 	%r169, %f327;
	mov.b32 	%r168, %f15;
	mov.b32 	%r187, %f398;
	mov.b32 	%r186, %f24;
	mov.b32 	%r205, %f468;
	mov.b32 	%r204, %f33;
	mov.b32 	%r233, %f576;
	mov.b32 	%r232, %f128;
	mov.b32 	%r236, %f573;
	mov.b32 	%r235, %f127;
	xor.b32  	%r275, %r278, -2147483648;
	xor.b32  	%r274, %r277, -2147483648;
	mov.b32 	%r316, %f791;
	mov.b32 	%r315, %f92;
	mov.b32 	%r319, %f788;
	mov.b32 	%r318, %f91;
	mul.f32 	%f164, %f845, %f163;
	mul.f32 	%f165, %f842, %f163;
	abs.f32 	%f867, %f941;
	setp.gtu.f32 	%p203, %f867, 0f7F800000;
	@%p203 bra 	LBB0_132;
// %bb.131:
	mov.b32 	%r348, %f166;
	and.b32  	%r349, %r348, -2147483648;
	mov.b32 	%r350, %f941;
	or.b32  	%r351, %r349, %r350;
	mov.b32 	%f941, %r351;
LBB0_132:                               // %__nv_fmodf.exit968
	ld.param.u64 	%rd1, [_Z17julia_upchan_376513CuDeviceArrayI9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS1_Li1ELi1EES_I5Int32Li1ELi1EE_param_2];
	ld.param.u64 	%rd2, [_Z17julia_upchan_376513CuDeviceArrayI9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS1_Li1ELi1EES_I5Int32Li1ELi1EE_param_3];
	ld.global.u32 	%r8, [%rd34];
	// begin inline asm
	cvt.rn.f16x2.f32 %r149, %r151, %r150;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r167, %r169, %r168;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r185, %r187, %r186;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r203, %r205, %r204;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r231, %r233, %r232;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r234, %r236, %r235;
	// end inline asm
	and.b32  	%r92, %r9, 4;
	// begin inline asm
	cvt.rn.f16x2.f32 %r270, %r272, %r271;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r273, %r275, %r274;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r276, %r278, %r277;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r279, %r272, %r271;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r314, %r316, %r315;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r317, %r319, %r318;
	// end inline asm
	add.f32 	%f868, %f941, %f941;
	mov.b32 	%r365, %f868;
	and.b32  	%r366, %r365, -2147483648;
	or.b32  	%r367, %r366, 1056964608;
	mov.b32 	%f869, %r367;
	add.f32 	%f870, %f868, %f869;
	cvt.rzi.f32.f32 	%f871, %f870;
	abs.f32 	%f872, %f868;
	setp.gt.f32 	%p204, %f872, 0f4B000000;
	selp.f32 	%f873, %f868, %f871, %p204;
	cvt.rzi.f32.f32 	%f874, %f868;
	setp.lt.f32 	%p205, %f872, 0f3F000000;
	selp.f32 	%f875, %f874, %f873, %p205;
	cvt.rzi.s32.f32 	%r368, %f875;
	fma.rn.f32 	%f876, %f875, 0fBF000000, %f941;
	mul.f32 	%f877, %f876, 0f34222169;
	fma.rn.f32 	%f878, %f876, 0f40490FDA, %f877;
	mul.f32 	%f879, %f878, %f878;
	fma.rn.f32 	%f880, %f879, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f881, %f880, %f879, 0f3D2AAABB;
	fma.rn.f32 	%f882, %f881, %f879, 0fBEFFFFFF;
	fma.rn.f32 	%f883, %f882, %f879, 0f3F800000;
	fma.rn.f32 	%f884, %f879, %f878, 0f00000000;
	fma.rn.f32 	%f885, %f879, 0fB94D4153, 0f3C0885E4;
	fma.rn.f32 	%f886, %f885, %f879, 0fBE2AAAA8;
	fma.rn.f32 	%f887, %f886, %f884, %f878;
	and.b32  	%r369, %r368, 1;
	setp.eq.b32 	%p206, %r369, 1;
	selp.f32 	%f888, %f883, %f887, %p206;
	selp.f32 	%f889, %f887, %f883, %p206;
	and.b32  	%r370, %r368, 2;
	setp.eq.s32 	%p207, %r370, 0;
	neg.f32 	%f890, %f888;
	selp.f32 	%f891, %f888, %f890, %p207;
	add.s32 	%r371, %r368, 1;
	and.b32  	%r372, %r371, 2;
	setp.eq.s32 	%p208, %r372, 0;
	sub.f32 	%f893, %f214, %f889;
	selp.f32 	%f894, %f889, %f893, %p208;
	cvt.rzi.f32.f32 	%f895, %f941;
	setp.eq.f32 	%p209, %f895, %f941;
	mul.f32 	%f896, %f941, 0f00000000;
	selp.f32 	%f897, %f896, %f891, %p209;
	abs.f32 	%f898, %f941;
	setp.gt.f32 	%p210, %f898, 0f4B800000;
	add.f32 	%f899, %f897, 0f3F800000;
	selp.f32 	%f900, %f899, %f894, %p210;
	mul.f32 	%f901, %f900, %f163;
	mul.f32 	%f902, %f897, %f163;
	mov.b32 	%r354, %f901;
	mov.b32 	%r353, %f164;
	// begin inline asm
	cvt.rn.f16x2.f32 %r109, %r354, %r353;
	// end inline asm
	mov.b32 	%r360, %f902;
	xor.b32  	%r357, %r360, -2147483648;
	mov.b32 	%r359, %f165;
	xor.b32  	%r356, %r359, -2147483648;
	// begin inline asm
	cvt.rn.f16x2.f32 %r110, %r357, %r356;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r111, %r360, %r359;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r112, %r354, %r353;
	// end inline asm
	and.b32  	%r373, %r4, 2048;
	and.b32  	%r374, %r5, 28;
	shl.b32 	%r375, %r3, 5;
	and.b32  	%r376, %r375, 96;
	and.b32  	%r113, %r1, 8;
	shl.b32 	%r114, %r2, 16;
	shl.b32 	%r377, %r3, 4;
	and.b32  	%r378, %r377, 1920;
	or.b32  	%r379, %r376, %r114;
	or.b32  	%r380, %r379, %r374;
	or.b32  	%r381, %r380, %r373;
	or.b32  	%r115, %r381, %r378;
	or.b32  	%r116, %r9, %r113;
	mul.lo.s32 	%r382, %r59, 65;
	mul.lo.s32 	%r383, %r2, 545;
	shl.b32 	%r384, %r1, 4;
	or.b32  	%r385, %r113, %r384;
	shr.u32 	%r386, %r385, 2;
	and.b32  	%r387, %r386, 30;
	add.s32 	%r388, %r382, %r383;
	add.s32 	%r389, %r388, %r387;
	mul.wide.u32 	%rd46, %r389, 4;
	mov.u64 	%rd47, shmem;
	add.s64 	%rd11, %rd47, %rd46;
	cvt.u64.u32 	%rd48, %r387;
	cvt.u64.u32 	%rd49, %r382;
	cvt.u64.u32 	%rd50, %r383;
	add.s64 	%rd51, %rd50, %rd49;
	add.s64 	%rd52, %rd51, %rd48;
	shl.b64 	%rd53, %rd52, 2;
	add.s64 	%rd12, %rd47, %rd53;
	shl.b32 	%r390, %r2, 2;
	and.b32  	%r391, %r390, 32;
	bfe.u32 	%r392, %r1, 1, 1;
	and.b32  	%r393, %r1, 1;
	and.b32  	%r394, %r390, 28;
	shl.b32 	%r395, %r1, 3;
	and.b32  	%r396, %r395, 64;
	or.b32  	%r397, %r394, %r396;
	and.b32  	%r398, %r6, 32;
	or.b32  	%r399, %r397, %r398;
	shr.u32 	%r400, %r399, 2;
	mad.lo.s32 	%r401, %r393, 130, %r391;
	mad.lo.s32 	%r402, %r392, 65, %r401;
	mad.lo.s32 	%r403, %r10, 260, %r402;
	add.s32 	%r404, %r403, %r400;
	or.b32  	%r405, %r400, %r391;
	mad.lo.s32 	%r406, %r7, 65, %r405;
	or.b32  	%r407, %r59, 2;
	mul.lo.s32 	%r408, %r407, 65;
	add.s32 	%r409, %r408, %r383;
	add.s32 	%r410, %r409, %r387;
	mul.wide.u32 	%rd54, %r410, 4;
	add.s64 	%rd13, %rd47, %rd54;
	cvt.u64.u32 	%rd55, %r408;
	add.s64 	%rd56, %rd50, %rd55;
	add.s64 	%rd57, %rd56, %rd48;
	shl.b64 	%rd58, %rd57, 2;
	add.s64 	%rd14, %rd47, %rd58;
	or.b32  	%r411, %r59, 4;
	mul.lo.s32 	%r412, %r411, 65;
	add.s32 	%r413, %r412, %r383;
	add.s32 	%r414, %r413, %r387;
	mul.wide.u32 	%rd59, %r414, 4;
	add.s64 	%rd15, %rd47, %rd59;
	cvt.u64.u32 	%rd60, %r412;
	add.s64 	%rd61, %rd50, %rd60;
	add.s64 	%rd62, %rd61, %rd48;
	shl.b64 	%rd63, %rd62, 2;
	add.s64 	%rd16, %rd47, %rd63;
	or.b32  	%r415, %r59, 6;
	mul.lo.s32 	%r416, %r415, 65;
	add.s32 	%r417, %r416, %r383;
	add.s32 	%r418, %r417, %r387;
	mul.wide.u32 	%rd64, %r418, 4;
	add.s64 	%rd17, %rd47, %rd64;
	cvt.u64.u32 	%rd65, %r416;
	add.s64 	%rd66, %rd50, %rd65;
	add.s64 	%rd67, %rd66, %rd48;
	shl.b64 	%rd68, %rd67, 2;
	add.s64 	%rd18, %rd47, %rd68;
	shl.b32 	%r419, %r3, 1;
	and.b32  	%r420, %r419, 240;
	shr.u32 	%r421, %r1, 3;
	or.b32  	%r422, %r420, %r421;
	shl.b32 	%r423, %r422, 7;
	shl.b32 	%r424, %r3, 13;
	and.b32  	%r425, %r424, 32768;
	or.b32  	%r426, %r374, %r376;
	or.b32  	%r427, %r423, %r425;
	or.b32  	%r117, %r427, %r426;
	or.b32  	%r118, %r117, 512;
	or.b32  	%r119, %r117, 1024;
	or.b32  	%r120, %r117, 1536;
	mul.wide.u32 	%rd69, %r406, 4;
	add.s64 	%rd19, %rd47, %rd69;
	mul.wide.u32 	%rd70, %r404, 4;
	add.s64 	%rd20, %rd47, %rd70;
	mov.u32 	%r1101, 0;
	setp.eq.s32 	%p211, %r113, 0;
	mov.u16 	%rs84, 25600;
	mov.u16 	%rs58, 21504;
	mov.u16 	%rs92, 18432;
	mov.u16 	%rs80, -14592;
	mov.u32 	%r1102, %r1101;
	mov.u32 	%r1103, %r1101;
	mov.u32 	%r1099, %r1101;
LBB0_83:                                // %L935
                                        // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_84 Depth 2
	or.b32  	%r493, %r113, %r1099;
	or.b32  	%r494, %r493, %r92;
	shl.b32 	%r495, %r494, 12;
	or.b32  	%r496, %r115, %r495;
	mul.wide.s32 	%rd71, %r496, 4;
	add.s64 	%rd72, %rd1, %rd71;
	ld.global.v4.u32 	{%r497, %r498, %r499, %r500}, [%rd72];
	or.b32  	%r501, %r496, 4096;
	mul.wide.s32 	%rd73, %r501, 4;
	add.s64 	%rd74, %rd1, %rd73;
	ld.global.v4.u32 	{%r502, %r503, %r504, %r505}, [%rd74];
	or.b32  	%r506, %r496, 8192;
	mul.wide.s32 	%rd75, %r506, 4;
	add.s64 	%rd76, %rd1, %rd75;
	ld.global.v4.u32 	{%r507, %r508, %r509, %r510}, [%rd76];
	or.b32  	%r511, %r116, %r1099;
	shl.b32 	%r512, %r511, 12;
	or.b32  	%r513, %r115, %r512;
	or.b32  	%r514, %r513, 12288;
	mul.wide.s32 	%rd77, %r514, 4;
	add.s64 	%rd78, %rd1, %rd77;
	ld.global.v4.u32 	{%r515, %r516, %r517, %r518}, [%rd78];
	selp.b32 	%r519, %r499, %r497, %p211;
	shfl.sync.bfly.b32	%r520, %r519, 8, 31, -1;
	selp.b32 	%r429, %r497, %r520, %p211;
	selp.b32 	%r430, %r520, %r499, %p211;
	selp.b32 	%r521, %r500, %r498, %p211;
	shfl.sync.bfly.b32	%r522, %r521, 8, 31, -1;
	selp.b32 	%r437, %r498, %r522, %p211;
	selp.b32 	%r438, %r522, %r500, %p211;
	selp.b32 	%r523, %r504, %r502, %p211;
	shfl.sync.bfly.b32	%r524, %r523, 8, 31, -1;
	selp.b32 	%r445, %r502, %r524, %p211;
	selp.b32 	%r446, %r524, %r504, %p211;
	selp.b32 	%r525, %r505, %r503, %p211;
	shfl.sync.bfly.b32	%r526, %r525, 8, 31, -1;
	selp.b32 	%r453, %r503, %r526, %p211;
	selp.b32 	%r454, %r526, %r505, %p211;
	selp.b32 	%r527, %r509, %r507, %p211;
	shfl.sync.bfly.b32	%r528, %r527, 8, 31, -1;
	selp.b32 	%r461, %r507, %r528, %p211;
	selp.b32 	%r462, %r528, %r509, %p211;
	selp.b32 	%r529, %r510, %r508, %p211;
	shfl.sync.bfly.b32	%r530, %r529, 8, 31, -1;
	selp.b32 	%r469, %r508, %r530, %p211;
	selp.b32 	%r470, %r530, %r510, %p211;
	selp.b32 	%r531, %r517, %r515, %p211;
	shfl.sync.bfly.b32	%r532, %r531, 8, 31, -1;
	selp.b32 	%r477, %r515, %r532, %p211;
	selp.b32 	%r478, %r532, %r517, %p211;
	selp.b32 	%r533, %r518, %r516, %p211;
	shfl.sync.bfly.b32	%r534, %r533, 8, 31, -1;
	selp.b32 	%r485, %r516, %r534, %p211;
	selp.b32 	%r486, %r534, %r518, %p211;
	mov.u32 	%r487, 21520;
	// begin inline asm
	prmt.b32 %r428, %r429, %r430, %r487;
	// end inline asm
	mov.u32 	%r491, 30258;
	// begin inline asm
	prmt.b32 %r432, %r429, %r430, %r491;
	// end inline asm
	// begin inline asm
	prmt.b32 %r436, %r437, %r438, %r487;
	// end inline asm
	// begin inline asm
	prmt.b32 %r440, %r437, %r438, %r491;
	// end inline asm
	// begin inline asm
	prmt.b32 %r444, %r445, %r446, %r487;
	// end inline asm
	// begin inline asm
	prmt.b32 %r448, %r445, %r446, %r491;
	// end inline asm
	// begin inline asm
	prmt.b32 %r452, %r453, %r454, %r487;
	// end inline asm
	// begin inline asm
	prmt.b32 %r456, %r453, %r454, %r491;
	// end inline asm
	// begin inline asm
	prmt.b32 %r460, %r461, %r462, %r487;
	// end inline asm
	// begin inline asm
	prmt.b32 %r464, %r461, %r462, %r491;
	// end inline asm
	// begin inline asm
	prmt.b32 %r468, %r469, %r470, %r487;
	// end inline asm
	// begin inline asm
	prmt.b32 %r472, %r469, %r470, %r491;
	// end inline asm
	// begin inline asm
	prmt.b32 %r476, %r477, %r478, %r487;
	// end inline asm
	// begin inline asm
	prmt.b32 %r480, %r477, %r478, %r491;
	// end inline asm
	// begin inline asm
	prmt.b32 %r484, %r485, %r486, %r487;
	// end inline asm
	// begin inline asm
	prmt.b32 %r488, %r485, %r486, %r491;
	// end inline asm
	st.shared.u32 	[%rd11], %r428;
	st.shared.u32 	[%rd12+128], %r432;
	st.shared.u32 	[%rd12+4], %r436;
	st.shared.u32 	[%rd12+132], %r440;
	st.shared.u32 	[%rd12+1040], %r444;
	st.shared.u32 	[%rd12+1168], %r448;
	st.shared.u32 	[%rd12+1044], %r452;
	st.shared.u32 	[%rd12+1172], %r456;
	st.shared.u32 	[%rd12+520], %r460;
	st.shared.u32 	[%rd12+648], %r464;
	st.shared.u32 	[%rd12+524], %r468;
	st.shared.u32 	[%rd12+652], %r472;
	st.shared.u32 	[%rd12+1560], %r476;
	st.shared.u32 	[%rd12+1688], %r480;
	st.shared.u32 	[%rd12+1564], %r484;
	st.shared.u32 	[%rd12+1692], %r488;
	bar.sync 	0;
	mov.u32 	%r1100, 256;
	mov.u64 	%rd87, %rd20;
	mov.u64 	%rd88, %rd19;
LBB0_84:                                // %L8956
                                        //   Parent Loop BB0_83 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	mov.u32 	%r69, %r1103;
	mov.u32 	%r68, %r1102;
	ld.shared.u32 	%r1103, [%rd87];
	// begin inline asm
	mov.b32 %r540, {%rs84, %rs84};
	// end inline asm
	// begin inline asm
	mov.b32 %r551, {%rs58, %rs58};
	// end inline asm
	xor.b32  	%r539, %r1103, -2004318072;
	mov.u32 	%r538, 983055;
	// begin inline asm
	lop3.b32 %r537, %r538, %r539, %r540, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r541, {%rs92, %rs92};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r542, %r540, %r541;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r545, %r537, %r542;
	// end inline asm
	mov.u32 	%r549, 15728880;
	// begin inline asm
	lop3.b32 %r548, %r549, %r539, %r551, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r552, {%rs92, %rs92};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r553, %r551, %r552;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r556, %r548, %r553;
	// end inline asm
	shr.u32 	%r561, %r539, 8;
	// begin inline asm
	lop3.b32 %r559, %r538, %r561, %r540, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r563, {%rs92, %rs92};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r564, %r540, %r563;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r567, %r559, %r564;
	// end inline asm
	// begin inline asm
	lop3.b32 %r570, %r549, %r561, %r551, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r574, {%rs92, %rs92};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r575, %r551, %r574;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r578, %r570, %r575;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r581, %r203;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r583, %r581, %r545;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r586, %r203;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r588, %r586, %r556;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r591, %r203;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r593, %r591, %r567;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r596, %r203;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r598, %r596, %r578;
	// end inline asm
	// begin inline asm
	mov.b32 %r606, {%rs84, %rs84};
	// end inline asm
	// begin inline asm
	mov.b32 %r617, {%rs58, %rs58};
	// end inline asm
	xor.b32  	%r605, %r1101, -2004318072;
	// begin inline asm
	lop3.b32 %r603, %r538, %r605, %r606, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r607, {%rs92, %rs92};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r608, %r606, %r607;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r611, %r603, %r608;
	// end inline asm
	// begin inline asm
	lop3.b32 %r614, %r549, %r605, %r617, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r618, {%rs92, %rs92};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r619, %r617, %r618;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r622, %r614, %r619;
	// end inline asm
	shr.u32 	%r627, %r605, 8;
	// begin inline asm
	lop3.b32 %r625, %r538, %r627, %r606, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r629, {%rs92, %rs92};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r630, %r606, %r629;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r633, %r625, %r630;
	// end inline asm
	// begin inline asm
	lop3.b32 %r636, %r549, %r627, %r617, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r640, {%rs92, %rs92};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r641, %r617, %r640;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r644, %r636, %r641;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r647, %r149, %r611, %r583;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r651, %r149, %r622, %r588;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r655, %r149, %r633, %r593;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r659, %r149, %r644, %r598;
	// end inline asm
	// begin inline asm
	mov.b32 %r668, {%rs84, %rs84};
	// end inline asm
	// begin inline asm
	mov.b32 %r679, {%rs58, %rs58};
	// end inline asm
	xor.b32  	%r667, %r68, -2004318072;
	// begin inline asm
	lop3.b32 %r665, %r538, %r667, %r668, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r669, {%rs92, %rs92};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r670, %r668, %r669;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r673, %r665, %r670;
	// end inline asm
	// begin inline asm
	lop3.b32 %r676, %r549, %r667, %r679, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r680, {%rs92, %rs92};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r681, %r679, %r680;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r684, %r676, %r681;
	// end inline asm
	shr.u32 	%r689, %r667, 8;
	// begin inline asm
	lop3.b32 %r687, %r538, %r689, %r668, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r691, {%rs92, %rs92};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r692, %r668, %r691;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r695, %r687, %r692;
	// end inline asm
	// begin inline asm
	lop3.b32 %r698, %r549, %r689, %r679, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r702, {%rs92, %rs92};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r703, %r679, %r702;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r706, %r698, %r703;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r709, %r167;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r711, %r709, %r673, %r647;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r715, %r167;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r717, %r715, %r684, %r651;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r721, %r167;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r723, %r721, %r695, %r655;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r727, %r167;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r729, %r727, %r706, %r659;
	// end inline asm
	// begin inline asm
	mov.b32 %r738, {%rs84, %rs84};
	// end inline asm
	// begin inline asm
	mov.b32 %r749, {%rs58, %rs58};
	// end inline asm
	xor.b32  	%r737, %r69, -2004318072;
	// begin inline asm
	lop3.b32 %r735, %r538, %r737, %r738, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r739, {%rs92, %rs92};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r740, %r738, %r739;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r743, %r735, %r740;
	// end inline asm
	// begin inline asm
	lop3.b32 %r746, %r549, %r737, %r749, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r750, {%rs92, %rs92};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r751, %r749, %r750;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r754, %r746, %r751;
	// end inline asm
	shr.u32 	%r759, %r737, 8;
	// begin inline asm
	lop3.b32 %r757, %r538, %r759, %r738, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r761, {%rs92, %rs92};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r762, %r738, %r761;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r765, %r757, %r762;
	// end inline asm
	// begin inline asm
	lop3.b32 %r768, %r549, %r759, %r749, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r772, {%rs92, %rs92};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r773, %r749, %r772;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r776, %r768, %r773;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r802, %r185, %r743, %r711;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r799, %r185, %r754, %r717;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r811, %r185, %r765, %r723;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r808, %r185, %r776, %r729;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r795, %r234;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r797, %r795, %r799;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r800, %r231, %r802, %r797;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r804, %r234;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r806, %r804, %r808;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r809, %r231, %r811, %r806;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r813, %r234, %r802;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r816, %r231, %r799, %r813;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r820, %r234, %r811;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r823, %r231, %r808, %r820;
	// end inline asm
	mov.u32 	%r898, 0;
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r854, %r851}, {%r270, %r276, %r273, %r279}, {%r800, %r816}, {%r898, %r898};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r863, %r860}, {%r270, %r276, %r273, %r279}, {%r809, %r823}, {%r898, %r898};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r847, %r317;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r849, %r847, %r851;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r852, %r314, %r854, %r849;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r856, %r317;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r858, %r856, %r860;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r861, %r314, %r863, %r858;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r865, %r317, %r854;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r868, %r314, %r851, %r865;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r872, %r317, %r863;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r875, %r314, %r860, %r872;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r879, %r880}, {%r109, %r111, %r110, %r112}, {%r852, %r868}, {%r898, %r898};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r889, %r890}, {%r109, %r111, %r110, %r112}, {%r861, %r875}, {%r898, %r898};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r899, %r8, %r879;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r902, %r8, %r880;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r905, %r8, %r889;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r908, %r8, %r890;
	// end inline asm
	// begin inline asm
	mov.b32 %r911, {%rs80, %rs80};
	// end inline asm
	mov.u16 	%rs69, 18176;
	// begin inline asm
	mov.b32 %r912, {%rs69, %rs69};
	// end inline asm
	// begin inline asm
	max.f16x2 %r913, %r899, %r911;
	// end inline asm
	// begin inline asm
	min.f16x2 %r916, %r913, %r912;
	// end inline asm
	// begin inline asm
	mov.b32 %r919, {%rs80, %rs80};
	// end inline asm
	// begin inline asm
	mov.b32 %r920, {%rs69, %rs69};
	// end inline asm
	// begin inline asm
	max.f16x2 %r921, %r902, %r919;
	// end inline asm
	// begin inline asm
	min.f16x2 %r924, %r921, %r920;
	// end inline asm
	// begin inline asm
	mov.b32 %r927, {%rs80, %rs80};
	// end inline asm
	// begin inline asm
	mov.b32 %r928, {%rs69, %rs69};
	// end inline asm
	// begin inline asm
	max.f16x2 %r929, %r905, %r927;
	// end inline asm
	// begin inline asm
	min.f16x2 %r932, %r929, %r928;
	// end inline asm
	// begin inline asm
	mov.b32 %r935, {%rs80, %rs80};
	// end inline asm
	// begin inline asm
	mov.b32 %r936, {%rs69, %rs69};
	// end inline asm
	// begin inline asm
	max.f16x2 %r937, %r908, %r935;
	// end inline asm
	// begin inline asm
	min.f16x2 %r940, %r937, %r936;
	// end inline asm
	// begin inline asm
	mov.b32 %r946, {%rs84, %rs84};
	// end inline asm
	// begin inline asm
	mov.b32 %r944, {%rs92, %rs92};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r945, %r946, %r944;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r948, %r916, %r945;
	// end inline asm
	// begin inline asm
	mov.b32 %r951, {%rs92, %rs92};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r952, %r946, %r951;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r955, %r924, %r952;
	// end inline asm
	// begin inline asm
	mov.b32 %r958, {%rs92, %rs92};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r959, %r946, %r958;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r962, %r932, %r959;
	// end inline asm
	// begin inline asm
	mov.b32 %r965, {%rs92, %rs92};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r966, %r946, %r965;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r969, %r940, %r966;
	// end inline asm
	mov.u32 	%r975, 25152;
	// begin inline asm
	prmt.b32 %r972, %r948, %r962, %r975;
	// end inline asm
	// begin inline asm
	prmt.b32 %r976, %r955, %r969, %r975;
	// end inline asm
	shl.b32 	%r983, %r976, 4;
	mov.u32 	%r981, 252645135;
	// begin inline asm
	lop3.b32 %r980, %r981, %r972, %r983, 202;
	// end inline asm
	xor.b32  	%r984, %r980, -2004318072;
	st.shared.u32 	[%rd88], %r984;
	add.s32 	%r1100, %r1100, -16;
	add.s64 	%rd88, %rd88, 2180;
	add.s64 	%rd87, %rd87, 2180;
	setp.eq.s32 	%p212, %r1100, 0;
	mov.u32 	%r1101, %r68;
	mov.u32 	%r1102, %r69;
	@%p212 bra 	LBB0_133;
	bra.uni 	LBB0_84;
LBB0_133:                               // %guard_pass6340
                                        //   in Loop: Header=BB0_83 Depth=1
	bar.sync 	0;
	ld.shared.u32 	%r990, [%rd11];
	ld.shared.u32 	%r991, [%rd12+128];
	ld.shared.u32 	%r998, [%rd12+4];
	ld.shared.u32 	%r999, [%rd12+132];
	ld.shared.u32 	%r1006, [%rd13];
	ld.shared.u32 	%r1007, [%rd14+128];
	ld.shared.u32 	%r1014, [%rd14+4];
	ld.shared.u32 	%r1015, [%rd14+132];
	ld.shared.u32 	%r1022, [%rd15];
	ld.shared.u32 	%r1023, [%rd16+128];
	ld.shared.u32 	%r1030, [%rd16+4];
	ld.shared.u32 	%r1031, [%rd16+132];
	ld.shared.u32 	%r1038, [%rd17];
	ld.shared.u32 	%r1039, [%rd18+128];
	ld.shared.u32 	%r1046, [%rd18+4];
	ld.shared.u32 	%r1047, [%rd18+132];
	// begin inline asm
	prmt.b32 %r985, %r990, %r991, %r487;
	// end inline asm
	// begin inline asm
	prmt.b32 %r989, %r990, %r991, %r491;
	// end inline asm
	// begin inline asm
	prmt.b32 %r993, %r998, %r999, %r487;
	// end inline asm
	// begin inline asm
	prmt.b32 %r997, %r998, %r999, %r491;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1001, %r1006, %r1007, %r487;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1005, %r1006, %r1007, %r491;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1009, %r1014, %r1015, %r487;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1013, %r1014, %r1015, %r491;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1017, %r1022, %r1023, %r487;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1021, %r1022, %r1023, %r491;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1025, %r1030, %r1031, %r487;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1029, %r1030, %r1031, %r491;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1033, %r1038, %r1039, %r487;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1037, %r1038, %r1039, %r491;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1041, %r1046, %r1047, %r487;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1045, %r1046, %r1047, %r491;
	// end inline asm
	selp.b32 	%r1049, %r989, %r985, %p211;
	shfl.sync.bfly.b32	%r1050, %r1049, 8, 31, -1;
	selp.b32 	%r1051, %r985, %r1050, %p211;
	selp.b32 	%r1052, %r1050, %r989, %p211;
	selp.b32 	%r1053, %r997, %r993, %p211;
	shfl.sync.bfly.b32	%r1054, %r1053, 8, 31, -1;
	selp.b32 	%r1055, %r993, %r1054, %p211;
	selp.b32 	%r1056, %r1054, %r997, %p211;
	selp.b32 	%r1057, %r1005, %r1001, %p211;
	shfl.sync.bfly.b32	%r1058, %r1057, 8, 31, -1;
	selp.b32 	%r1059, %r1001, %r1058, %p211;
	selp.b32 	%r1060, %r1058, %r1005, %p211;
	selp.b32 	%r1061, %r1013, %r1009, %p211;
	shfl.sync.bfly.b32	%r1062, %r1061, 8, 31, -1;
	selp.b32 	%r1063, %r1009, %r1062, %p211;
	selp.b32 	%r1064, %r1062, %r1013, %p211;
	selp.b32 	%r1065, %r1021, %r1017, %p211;
	shfl.sync.bfly.b32	%r1066, %r1065, 8, 31, -1;
	selp.b32 	%r1067, %r1017, %r1066, %p211;
	selp.b32 	%r1068, %r1066, %r1021, %p211;
	selp.b32 	%r1069, %r1029, %r1025, %p211;
	shfl.sync.bfly.b32	%r1070, %r1069, 8, 31, -1;
	selp.b32 	%r1071, %r1025, %r1070, %p211;
	selp.b32 	%r1072, %r1070, %r1029, %p211;
	selp.b32 	%r1073, %r1037, %r1033, %p211;
	shfl.sync.bfly.b32	%r1074, %r1073, 8, 31, -1;
	selp.b32 	%r1075, %r1033, %r1074, %p211;
	selp.b32 	%r1076, %r1074, %r1037, %p211;
	selp.b32 	%r1077, %r1045, %r1041, %p211;
	shfl.sync.bfly.b32	%r1078, %r1077, 8, 31, -1;
	selp.b32 	%r1079, %r1041, %r1078, %p211;
	selp.b32 	%r1080, %r1078, %r1045, %p211;
	shl.b32 	%r1081, %r1099, 12;
	or.b32  	%r1082, %r114, %r1081;
	or.b32  	%r1083, %r1082, %r117;
	mul.wide.u32 	%rd79, %r1083, 4;
	add.s64 	%rd80, %rd2, %rd79;
	st.global.v4.u32 	[%rd80], {%r1051, %r1055, %r1052, %r1056};
	add.s32 	%r1084, %r1082, %r118;
	mul.wide.s32 	%rd81, %r1084, 4;
	add.s64 	%rd82, %rd2, %rd81;
	st.global.v4.u32 	[%rd82], {%r1059, %r1063, %r1060, %r1064};
	add.s32 	%r1085, %r1082, %r119;
	mul.wide.s32 	%rd83, %r1085, 4;
	add.s64 	%rd84, %rd2, %rd83;
	st.global.v4.u32 	[%rd84], {%r1067, %r1071, %r1068, %r1072};
	add.s32 	%r1086, %r1082, %r120;
	mul.wide.s32 	%rd85, %r1086, 4;
	add.s64 	%rd86, %rd2, %rd85;
	st.global.v4.u32 	[%rd86], {%r1075, %r1079, %r1076, %r1080};
	add.s32 	%r121, %r1099, 256;
	setp.eq.s32 	%p214, %r1099, 32512;
	mov.u32 	%r1101, %r68;
	mov.u32 	%r1102, %r69;
	mov.u32 	%r1099, %r121;
	@%p214 bra 	LBB0_134;
	bra.uni 	LBB0_83;
LBB0_134:                               // %L15330
	st.global.u32 	[%rd3], %r898;
	ret;
LBB0_1:                                 // %L8
	ld.param.u64 	%rd21, [_Z17julia_upchan_376513CuDeviceArrayI9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS1_Li1ELi1EES_I5Int32Li1ELi1EE_param_0];
	mov.u64 	%rd30, exception1;
	cvta.global.u64 	%rd31, %rd30;
	{ // callseq 0, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd31;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 0
	{ // callseq 1, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd21;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 1
	// begin inline asm
	exit;
	// end inline asm
                                        // -- End function
}
