// PTX CompilerJob of MethodInstance for upchan(::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Float16x2, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int32, 1}) for sm_86, minthreads=512, blocks_per_sm=2

//
// Generated by LLVM NVPTX Back-End
//

.version 8.1
.target sm_86
.address_size 64

	// .globl	_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE // -- Begin function _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE
.func gpu_report_exception
(
	.param .b64 gpu_report_exception_param_0
)
.noreturn
{
	trap;
}
.func gpu_signal_exception
(
	.param .align 8 .b8 gpu_signal_exception_param_0[16]
)
.noreturn
{
	trap;
}
.extern .shared .align 32 .b8 shmem[];
.global .align 1 .b8 exception5110[6] = {101, 114, 114, 111, 114, 0};
.global .align 1 .b8 exception1[10] = {101, 120, 99, 101, 112, 116, 105, 111, 110, 0};
                                        // @_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE
.visible .entry _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE(
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_0[16],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_1[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_2[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_3[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_4[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_5[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_6[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_7[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_8[32]
)
.reqntid 512, 1, 1
.minnctapersm 2
{
	.reg .pred 	%p<329>;
	.reg .b16 	%rs<2390>;
	.reg .b32 	%r<16264>;
	.reg .f32 	%f<1394>;
	.reg .b64 	%rd<127>;

// %bb.0:                               // %conversion
	ld.param.u32 	%r243, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_0+8];
	ld.param.u64 	%rd36, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_0];
	// begin inline asm
	mov.u32 %r244, %dynamic_smem_size;
	// end inline asm
	setp.gt.u32 	%p1, %r244, 66815;
	@%p1 bra 	LBB0_2;
	bra.uni 	LBB0_1;
LBB0_2:                                 // %L10
	ld.param.u64 	%rd53, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_8];
	ld.param.u64 	%rd37, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_1];
	mov.u32 	%r1, %tid.y;
	shl.b32 	%r2, %r1, 5;
	mov.u32 	%r3, %tid.x;
	mov.u32 	%r4, %ctaid.x;
	shl.b32 	%r245, %r4, 9;
	or.b32  	%r246, %r2, %r3;
	or.b32  	%r247, %r246, %r245;
	mul.wide.u32 	%rd59, %r247, 4;
	add.s64 	%rd4, %rd53, %rd59;
	mov.u32 	%r248, 1;
	st.global.u32 	[%rd4], %r248;
	ld.global.u32 	%r5, [%rd37];
	setp.lt.s32 	%p2, %r5, 0;
	@%p2 bra 	LBB0_7;
// %bb.3:                               // %L205
	ld.param.u64 	%rd41, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_2];
	ld.global.u32 	%r6, [%rd41];
	setp.lt.s32 	%p3, %r6, %r5;
	setp.gt.s32 	%p4, %r6, 262144;
	or.pred  	%p5, %p3, %p4;
	@%p5 bra 	LBB0_7;
// %bb.4:                               // %L215
	ld.param.u64 	%rd45, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_3];
	ld.global.u32 	%r7, [%rd45];
	sub.s32 	%r249, %r6, %r5;
	and.b32  	%r250, %r249, 255;
	setp.ne.s32 	%p6, %r250, 0;
	setp.lt.s32 	%p7, %r7, 0;
	or.pred  	%p8, %p6, %p7;
	@%p8 bra 	LBB0_7;
// %bb.5:                               // %L221
	ld.param.u64 	%rd49, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_4];
	ld.global.u32 	%r8, [%rd49];
	setp.lt.s32 	%p9, %r8, %r7;
	setp.gt.s32 	%p10, %r8, 2048;
	or.pred  	%p11, %p9, %p10;
	@%p11 bra 	LBB0_7;
// %bb.6:                               // %L231
	sub.s32 	%r251, %r8, %r7;
	and.b32  	%r252, %r251, 1;
	setp.eq.b32 	%p12, %r252, 1;
	mov.pred 	%p13, 0;
	xor.pred  	%p14, %p12, %p13;
	@%p14 bra 	LBB0_8;
	bra.uni 	LBB0_7;
LBB0_8:                                 // %L341
	bfe.u32 	%r19, %r3, 1, 1;
	and.b32  	%r20, %r3, 1;
	bfe.u32 	%r22, %r3, 2, 1;
	shr.u32 	%r23, %r3, 4;
	shl.b32 	%r257, %r23, 2;
	shl.b32 	%r258, %r22, 3;
	shl.b32 	%r259, %r20, 4;
	shl.b32 	%r260, %r19, 5;
	or.b32  	%r261, %r259, %r260;
	or.b32  	%r262, %r258, %r261;
	or.b32  	%r263, %r257, %r262;
	bfe.u32 	%r25, %r3, 3, 1;
	shl.b32 	%r264, %r25, 1;
	or.b32  	%r26, %r264, %r263;
	or.b32  	%r27, %r26, 64;
	mov.f32 	%f255, 0f40000000;
	mov.f32 	%f256, 0f43FF8000;
	div.approx.f32 	%f1, %f256, %f255;
	cvt.rn.f32.s32 	%f257, %r26;
	sub.f32 	%f258, %f257, %f1;
	mov.f32 	%f287, 0f43000000;
	div.approx.f32 	%f3, %f258, %f287;
	setp.eq.f32 	%p20, %f3, 0f00000000;
	mov.f32 	%f1353, 0f3F800000;
	mov.f32 	%f1338, %f1353;
	@%p20 bra 	LBB0_10;
// %bb.9:                               // %L691
	sin.approx.f32 	%f288, %f3;
	div.approx.f32 	%f1338, %f288, %f3;
LBB0_10:                                // %L694
	cvt.rn.f32.s32 	%f291, %r27;
	sub.f32 	%f292, %f291, %f1;
	div.approx.f32 	%f8, %f292, %f287;
	setp.eq.f32 	%p26, %f8, 0f00000000;
	mov.f32 	%f1339, %f1353;
	@%p26 bra 	LBB0_12;
// %bb.11:                              // %L711
	sin.approx.f32 	%f322, %f8;
	div.approx.f32 	%f1339, %f322, %f8;
LBB0_12:                                // %L714
	or.b32  	%r282, %r26, 1;
	or.b32  	%r29, %r26, 65;
	cvt.rn.f32.s32 	%f326, %r282;
	sub.f32 	%f327, %f326, %f1;
	div.approx.f32 	%f12, %f327, %f287;
	setp.eq.f32 	%p32, %f12, 0f00000000;
	mov.f32 	%f1340, %f1353;
	@%p32 bra 	LBB0_14;
// %bb.13:                              // %L793
	sin.approx.f32 	%f357, %f12;
	div.approx.f32 	%f1340, %f357, %f12;
LBB0_14:                                // %L796
	cvt.rn.f32.s32 	%f360, %r29;
	sub.f32 	%f361, %f360, %f1;
	div.approx.f32 	%f17, %f361, %f287;
	setp.eq.f32 	%p38, %f17, 0f00000000;
	mov.f32 	%f1341, %f1353;
	@%p38 bra 	LBB0_16;
// %bb.15:                              // %L813
	sin.approx.f32 	%f391, %f17;
	div.approx.f32 	%f1341, %f391, %f17;
LBB0_16:                                // %L816
	or.b32  	%r300, %r26, 128;
	or.b32  	%r31, %r26, 192;
	cvt.rn.f32.s32 	%f395, %r300;
	sub.f32 	%f396, %f395, %f1;
	div.approx.f32 	%f21, %f396, %f287;
	setp.eq.f32 	%p44, %f21, 0f00000000;
	mov.f32 	%f1342, %f1353;
	@%p44 bra 	LBB0_18;
// %bb.17:                              // %L895
	sin.approx.f32 	%f426, %f21;
	div.approx.f32 	%f1342, %f426, %f21;
LBB0_18:                                // %L898
	cvt.rn.f32.s32 	%f429, %r31;
	sub.f32 	%f430, %f429, %f1;
	div.approx.f32 	%f26, %f430, %f287;
	setp.eq.f32 	%p50, %f26, 0f00000000;
	mov.f32 	%f1343, %f1353;
	@%p50 bra 	LBB0_20;
// %bb.19:                              // %L915
	sin.approx.f32 	%f460, %f26;
	div.approx.f32 	%f1343, %f460, %f26;
LBB0_20:                                // %L918
	or.b32  	%r318, %r26, 129;
	or.b32  	%r33, %r26, 193;
	cvt.rn.f32.s32 	%f464, %r318;
	sub.f32 	%f465, %f464, %f1;
	div.approx.f32 	%f30, %f465, %f287;
	setp.eq.f32 	%p56, %f30, 0f00000000;
	mov.f32 	%f1344, %f1353;
	@%p56 bra 	LBB0_22;
// %bb.21:                              // %L997
	sin.approx.f32 	%f495, %f30;
	div.approx.f32 	%f1344, %f495, %f30;
LBB0_22:                                // %L1000
	cvt.rn.f32.s32 	%f498, %r33;
	sub.f32 	%f499, %f498, %f1;
	div.approx.f32 	%f35, %f499, %f287;
	setp.eq.f32 	%p62, %f35, 0f00000000;
	mov.f32 	%f1345, %f1353;
	@%p62 bra 	LBB0_24;
// %bb.23:                              // %L1017
	sin.approx.f32 	%f529, %f35;
	div.approx.f32 	%f1345, %f529, %f35;
LBB0_24:                                // %L1020
	or.b32  	%r336, %r26, 256;
	or.b32  	%r35, %r26, 320;
	cvt.rn.f32.s32 	%f533, %r336;
	sub.f32 	%f534, %f533, %f1;
	div.approx.f32 	%f39, %f534, %f287;
	setp.eq.f32 	%p68, %f39, 0f00000000;
	mov.f32 	%f1346, %f1353;
	@%p68 bra 	LBB0_26;
// %bb.25:                              // %L1099
	sin.approx.f32 	%f564, %f39;
	div.approx.f32 	%f1346, %f564, %f39;
LBB0_26:                                // %L1102
	cvt.rn.f32.s32 	%f567, %r35;
	sub.f32 	%f568, %f567, %f1;
	div.approx.f32 	%f44, %f568, %f287;
	setp.eq.f32 	%p74, %f44, 0f00000000;
	mov.f32 	%f1347, %f1353;
	@%p74 bra 	LBB0_28;
// %bb.27:                              // %L1119
	sin.approx.f32 	%f598, %f44;
	div.approx.f32 	%f1347, %f598, %f44;
LBB0_28:                                // %L1122
	or.b32  	%r354, %r26, 257;
	or.b32  	%r37, %r26, 321;
	cvt.rn.f32.s32 	%f602, %r354;
	sub.f32 	%f603, %f602, %f1;
	div.approx.f32 	%f48, %f603, %f287;
	setp.eq.f32 	%p80, %f48, 0f00000000;
	mov.f32 	%f1348, %f1353;
	@%p80 bra 	LBB0_30;
// %bb.29:                              // %L1201
	sin.approx.f32 	%f633, %f48;
	div.approx.f32 	%f1348, %f633, %f48;
LBB0_30:                                // %L1204
	cvt.rn.f32.s32 	%f636, %r37;
	sub.f32 	%f637, %f636, %f1;
	div.approx.f32 	%f53, %f637, %f287;
	setp.eq.f32 	%p86, %f53, 0f00000000;
	mov.f32 	%f1349, %f1353;
	@%p86 bra 	LBB0_32;
// %bb.31:                              // %L1221
	sin.approx.f32 	%f667, %f53;
	div.approx.f32 	%f1349, %f667, %f53;
LBB0_32:                                // %L1224
	or.b32  	%r372, %r26, 384;
	or.b32  	%r39, %r26, 448;
	cvt.rn.f32.s32 	%f671, %r372;
	sub.f32 	%f672, %f671, %f1;
	div.approx.f32 	%f57, %f672, %f287;
	setp.eq.f32 	%p92, %f57, 0f00000000;
	mov.f32 	%f1350, %f1353;
	@%p92 bra 	LBB0_34;
// %bb.33:                              // %L1303
	sin.approx.f32 	%f702, %f57;
	div.approx.f32 	%f1350, %f702, %f57;
LBB0_34:                                // %L1306
	cvt.rn.f32.s32 	%f705, %r39;
	sub.f32 	%f706, %f705, %f1;
	div.approx.f32 	%f62, %f706, %f287;
	setp.eq.f32 	%p98, %f62, 0f00000000;
	mov.f32 	%f1351, %f1353;
	@%p98 bra 	LBB0_36;
// %bb.35:                              // %L1323
	sin.approx.f32 	%f736, %f62;
	div.approx.f32 	%f1351, %f736, %f62;
LBB0_36:                                // %L1326
	or.b32  	%r390, %r26, 385;
	or.b32  	%r41, %r26, 449;
	cvt.rn.f32.s32 	%f740, %r390;
	sub.f32 	%f741, %f740, %f1;
	div.approx.f32 	%f66, %f741, %f287;
	setp.eq.f32 	%p104, %f66, 0f00000000;
	mov.f32 	%f1352, %f1353;
	@%p104 bra 	LBB0_38;
// %bb.37:                              // %L1405
	sin.approx.f32 	%f771, %f66;
	div.approx.f32 	%f1352, %f771, %f66;
LBB0_38:                                // %L1408
	cvt.rn.f32.s32 	%f774, %r41;
	sub.f32 	%f775, %f774, %f1;
	div.approx.f32 	%f71, %f775, %f287;
	setp.eq.f32 	%p110, %f71, 0f00000000;
	@%p110 bra 	LBB0_40;
// %bb.39:                              // %L1425
	sin.approx.f32 	%f805, %f71;
	div.approx.f32 	%f1353, %f805, %f71;
LBB0_40:                                // %L1428
	mul.lo.s32 	%r43, %r26, 127;
	cvt.rn.f32.s32 	%f808, %r43;
	div.approx.f32 	%f74, %f808, %f287;
	abs.f32 	%f1356, %f74;
	setp.lt.f32 	%p111, %f1356, 0f40000000;
	@%p111 bra 	LBB0_52;
// %bb.41:
	setp.gtu.f32 	%p112, %f1356, 0f4B800000;
	@%p112 bra 	LBB0_48;
	bra.uni 	LBB0_42;
LBB0_48:
	mov.b32 	%r45, %f1356;
	and.b32  	%r408, %r45, 8388607;
	or.b32  	%r16194, %r408, 1065353216;
	mov.b32 	%f1355, %r16194;
	add.s32 	%r409, %r45, -1073741824;
	and.b32  	%r16195, %r409, -8388608;
	setp.eq.s32 	%p118, %r16195, 0;
	@%p118 bra 	LBB0_51;
// %bb.49:                              // %__nv_fmaf_rn.exit4.i.i.i.preheader
	mov.f32 	%f819, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f818,%f819;
	// end inline asm
LBB0_50:                                // %__nv_fmaf_rn.exit4.i.i.i
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r410, %r16195, 192937984;
	add.s32 	%r411, %r410, %r16194;
	mov.b32 	%f820, %r411;
	mul.f32 	%f821, %f818, %f820;
	sub.f32 	%f822, %f820, %f821;
	fma.rn.f32 	%f823, %f822, %f818, %f821;
	sub.f32 	%f824, %f820, %f823;
	fma.rz.f32 	%f825, %f824, %f818, %f823;
	cvt.rzi.f32.f32 	%f826, %f825;
	sub.f32 	%f1355, %f820, %f826;
	sub.s32 	%r16195, %r16195, %r410;
	mov.b32 	%r16194, %f1355;
	setp.ne.s32 	%p119, %r16195, 0;
	setp.ne.s32 	%p120, %r16194, 0;
	and.pred  	%p121, %p119, %p120;
	@%p121 bra 	LBB0_50;
LBB0_51:                                // %__internal_fmodf_slowpath_mod.exit.i.i
	setp.gt.u32 	%p122, %r45, 2139095039;
	selp.f32 	%f827, 0f7FFFFFFF, 0f4B800000, %p122;
	mul.f32 	%f828, %f1355, 0f34000000;
	mul.f32 	%f1356, %f827, %f828;
	bra.uni 	LBB0_52;
LBB0_42:                                // %__nv_fast_fdividef.exit.i.i.i
	div.approx.f32 	%f811, %f1356, %f255;
	cvt.rzi.f32.f32 	%f1354, %f811;
	fma.rn.f32 	%f77, %f1354, 0fC0000000, %f1356;
	mov.b32 	%r44, %f77;
	setp.lt.u32 	%p113, %r44, 1073741824;
	@%p113 bra 	LBB0_47;
// %bb.43:
	setp.lt.u32 	%p114, %r44, -2147483647;
	@%p114 bra 	LBB0_45;
// %bb.44:
	add.f32 	%f816, %f1354, 0fBF800000;
	setp.lt.f32 	%p117, %f77, 0fC0000000;
	add.f32 	%f817, %f816, 0fBF800000;
	selp.f32 	%f1354, %f817, %f816, %p117;
	bra.uni 	LBB0_47;
LBB0_45:
	add.f32 	%f1354, %f1354, 0f3F800000;
	setp.ltu.f32 	%p115, %f77, 0f40800000;
	@%p115 bra 	LBB0_47;
// %bb.46:                              // %__nv_fmaf_rn.exit.i.i.i
	add.f32 	%f812, %f1354, 0f3F800000;
	fma.rn.f32 	%f814, %f255, 0fC0400000, %f77;
	setp.ge.f32 	%p116, %f814, 0f00000000;
	add.f32 	%f815, %f812, 0f3F800000;
	selp.f32 	%f1354, %f815, %f812, %p116;
LBB0_47:                                // %__internal_fmodf_fastpath_quot.exit.i.i
	fma.rn.f32 	%f1356, %f1354, 0fC0000000, %f1356;
LBB0_52:                                // %__internal_fmodf_kernel.exit.i
	abs.f32 	%f829, %f1356;
	setp.gtu.f32 	%p123, %f829, 0f7F800000;
	@%p123 bra 	LBB0_54;
// %bb.53:
	mov.b32 	%r412, %f74;
	and.b32  	%r413, %r412, -2147483648;
	mov.b32 	%r414, %f1356;
	or.b32  	%r415, %r413, %r414;
	mov.b32 	%f1356, %r415;
LBB0_54:                                // %__nv_fmodf.exit
	add.s32 	%r424, %r43, 8128;
	cvt.rn.f32.s32 	%f860, %r424;
	div.approx.f32 	%f93, %f860, %f287;
	abs.f32 	%f1360, %f93;
	setp.lt.f32 	%p131, %f1360, 0f40000000;
	@%p131 bra 	LBB0_66;
// %bb.55:
	setp.gtu.f32 	%p132, %f1360, 0f4B800000;
	@%p132 bra 	LBB0_62;
	bra.uni 	LBB0_56;
LBB0_62:
	mov.b32 	%r53, %f1360;
	and.b32  	%r425, %r53, 8388607;
	or.b32  	%r16196, %r425, 1065353216;
	mov.b32 	%f1359, %r16196;
	add.s32 	%r426, %r53, -1073741824;
	and.b32  	%r16197, %r426, -8388608;
	setp.eq.s32 	%p138, %r16197, 0;
	@%p138 bra 	LBB0_65;
// %bb.63:                              // %__nv_fmaf_rn.exit4.i.i.i2256.preheader
	mov.f32 	%f871, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f870,%f871;
	// end inline asm
LBB0_64:                                // %__nv_fmaf_rn.exit4.i.i.i2256
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r427, %r16197, 192937984;
	add.s32 	%r428, %r427, %r16196;
	mov.b32 	%f872, %r428;
	mul.f32 	%f873, %f870, %f872;
	sub.f32 	%f874, %f872, %f873;
	fma.rn.f32 	%f875, %f874, %f870, %f873;
	sub.f32 	%f876, %f872, %f875;
	fma.rz.f32 	%f877, %f876, %f870, %f875;
	cvt.rzi.f32.f32 	%f878, %f877;
	sub.f32 	%f1359, %f872, %f878;
	sub.s32 	%r16197, %r16197, %r427;
	mov.b32 	%r16196, %f1359;
	setp.ne.s32 	%p139, %r16197, 0;
	setp.ne.s32 	%p140, %r16196, 0;
	and.pred  	%p141, %p139, %p140;
	@%p141 bra 	LBB0_64;
LBB0_65:                                // %__internal_fmodf_slowpath_mod.exit.i.i2258
	setp.gt.u32 	%p142, %r53, 2139095039;
	selp.f32 	%f879, 0f7FFFFFFF, 0f4B800000, %p142;
	mul.f32 	%f880, %f1359, 0f34000000;
	mul.f32 	%f1360, %f879, %f880;
	bra.uni 	LBB0_66;
LBB0_56:                                // %__nv_fast_fdividef.exit.i.i.i2228
	div.approx.f32 	%f863, %f1360, %f255;
	cvt.rzi.f32.f32 	%f1358, %f863;
	fma.rn.f32 	%f96, %f1358, 0fC0000000, %f1360;
	mov.b32 	%r52, %f96;
	setp.lt.u32 	%p133, %r52, 1073741824;
	@%p133 bra 	LBB0_61;
// %bb.57:
	setp.lt.u32 	%p134, %r52, -2147483647;
	@%p134 bra 	LBB0_59;
// %bb.58:
	add.f32 	%f868, %f1358, 0fBF800000;
	setp.lt.f32 	%p137, %f96, 0fC0000000;
	add.f32 	%f869, %f868, 0fBF800000;
	selp.f32 	%f1358, %f869, %f868, %p137;
	bra.uni 	LBB0_61;
LBB0_59:
	add.f32 	%f1358, %f1358, 0f3F800000;
	setp.ltu.f32 	%p135, %f96, 0f40800000;
	@%p135 bra 	LBB0_61;
// %bb.60:                              // %__nv_fmaf_rn.exit.i.i.i2233
	add.f32 	%f864, %f1358, 0f3F800000;
	fma.rn.f32 	%f866, %f255, 0fC0400000, %f96;
	setp.ge.f32 	%p136, %f866, 0f00000000;
	add.f32 	%f867, %f864, 0f3F800000;
	selp.f32 	%f1358, %f867, %f864, %p136;
LBB0_61:                                // %__internal_fmodf_fastpath_quot.exit.i.i2237
	fma.rn.f32 	%f1360, %f1358, 0fC0000000, %f1360;
LBB0_66:                                // %__internal_fmodf_kernel.exit.i2262
	shr.u32 	%r21, %r3, 2;
	abs.f32 	%f881, %f1360;
	setp.gtu.f32 	%p143, %f881, 0f7F800000;
	@%p143 bra 	LBB0_68;
// %bb.67:
	mov.b32 	%r429, %f93;
	and.b32  	%r430, %r429, -2147483648;
	mov.b32 	%r431, %f1360;
	or.b32  	%r432, %r430, %r431;
	mov.b32 	%f1360, %r432;
LBB0_68:                                // %__nv_fmodf.exit2263
	and.b32  	%r453, %r3, 3;
	mul.lo.s32 	%r454, %r453, %r21;
	shl.b32 	%r455, %r454, 1;
	neg.s32 	%r64, %r455;
	cvt.rn.f32.s32 	%f914, %r64;
	mov.f32 	%f915, 0f41000000;
	div.approx.f32 	%f110, %f914, %f915;
	abs.f32 	%f1364, %f110;
	setp.lt.f32 	%p151, %f1364, 0f40000000;
	@%p151 bra 	LBB0_80;
// %bb.69:
	setp.gtu.f32 	%p152, %f1364, 0f4B800000;
	@%p152 bra 	LBB0_76;
	bra.uni 	LBB0_70;
LBB0_76:
	mov.b32 	%r66, %f1364;
	and.b32  	%r456, %r66, 8388607;
	or.b32  	%r16198, %r456, 1065353216;
	mov.b32 	%f1363, %r16198;
	add.s32 	%r457, %r66, -1073741824;
	and.b32  	%r16199, %r457, -8388608;
	setp.eq.s32 	%p158, %r16199, 0;
	@%p158 bra 	LBB0_79;
// %bb.77:                              // %__nv_fmaf_rn.exit4.i.i.i2302.preheader
	mov.f32 	%f925, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f924,%f925;
	// end inline asm
LBB0_78:                                // %__nv_fmaf_rn.exit4.i.i.i2302
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r458, %r16199, 192937984;
	add.s32 	%r459, %r458, %r16198;
	mov.b32 	%f926, %r459;
	mul.f32 	%f927, %f924, %f926;
	sub.f32 	%f928, %f926, %f927;
	fma.rn.f32 	%f929, %f928, %f924, %f927;
	sub.f32 	%f930, %f926, %f929;
	fma.rz.f32 	%f931, %f930, %f924, %f929;
	cvt.rzi.f32.f32 	%f932, %f931;
	sub.f32 	%f1363, %f926, %f932;
	sub.s32 	%r16199, %r16199, %r458;
	mov.b32 	%r16198, %f1363;
	setp.ne.s32 	%p159, %r16199, 0;
	setp.ne.s32 	%p160, %r16198, 0;
	and.pred  	%p161, %p159, %p160;
	@%p161 bra 	LBB0_78;
LBB0_79:                                // %__internal_fmodf_slowpath_mod.exit.i.i2304
	setp.gt.u32 	%p162, %r66, 2139095039;
	selp.f32 	%f933, 0f7FFFFFFF, 0f4B800000, %p162;
	mul.f32 	%f934, %f1363, 0f34000000;
	mul.f32 	%f1364, %f933, %f934;
	bra.uni 	LBB0_80;
LBB0_70:                                // %__nv_fast_fdividef.exit.i.i.i2274
	div.approx.f32 	%f917, %f1364, %f255;
	cvt.rzi.f32.f32 	%f1362, %f917;
	fma.rn.f32 	%f113, %f1362, 0fC0000000, %f1364;
	mov.b32 	%r65, %f113;
	setp.lt.u32 	%p153, %r65, 1073741824;
	@%p153 bra 	LBB0_75;
// %bb.71:
	setp.lt.u32 	%p154, %r65, -2147483647;
	@%p154 bra 	LBB0_73;
// %bb.72:
	add.f32 	%f922, %f1362, 0fBF800000;
	setp.lt.f32 	%p157, %f113, 0fC0000000;
	add.f32 	%f923, %f922, 0fBF800000;
	selp.f32 	%f1362, %f923, %f922, %p157;
	bra.uni 	LBB0_75;
LBB0_73:
	add.f32 	%f1362, %f1362, 0f3F800000;
	setp.ltu.f32 	%p155, %f113, 0f40800000;
	@%p155 bra 	LBB0_75;
// %bb.74:                              // %__nv_fmaf_rn.exit.i.i.i2279
	add.f32 	%f918, %f1362, 0f3F800000;
	fma.rn.f32 	%f920, %f255, 0fC0400000, %f113;
	setp.ge.f32 	%p156, %f920, 0f00000000;
	add.f32 	%f921, %f918, 0f3F800000;
	selp.f32 	%f1362, %f921, %f918, %p156;
LBB0_75:                                // %__internal_fmodf_fastpath_quot.exit.i.i2283
	fma.rn.f32 	%f1364, %f1362, 0fC0000000, %f1364;
LBB0_80:                                // %__internal_fmodf_kernel.exit.i2308
	abs.f32 	%f935, %f1364;
	setp.gtu.f32 	%p163, %f935, 0f7F800000;
	@%p163 bra 	LBB0_82;
// %bb.81:
	mov.b32 	%r460, %f110;
	and.b32  	%r461, %r460, -2147483648;
	mov.b32 	%r462, %f1364;
	or.b32  	%r463, %r461, %r462;
	mov.b32 	%f1364, %r463;
LBB0_82:                                // %__nv_fmodf.exit2309
	shl.b32 	%r73, %r21, 3;
	sub.s32 	%r472, %r64, %r73;
	cvt.rn.f32.s32 	%f966, %r472;
	div.approx.f32 	%f129, %f966, %f915;
	abs.f32 	%f1368, %f129;
	setp.lt.f32 	%p171, %f1368, 0f40000000;
	@%p171 bra 	LBB0_94;
// %bb.83:
	setp.gtu.f32 	%p172, %f1368, 0f4B800000;
	@%p172 bra 	LBB0_90;
	bra.uni 	LBB0_84;
LBB0_90:
	mov.b32 	%r75, %f1368;
	and.b32  	%r473, %r75, 8388607;
	or.b32  	%r16200, %r473, 1065353216;
	mov.b32 	%f1367, %r16200;
	add.s32 	%r474, %r75, -1073741824;
	and.b32  	%r16201, %r474, -8388608;
	setp.eq.s32 	%p178, %r16201, 0;
	@%p178 bra 	LBB0_93;
// %bb.91:                              // %__nv_fmaf_rn.exit4.i.i.i2348.preheader
	mov.f32 	%f977, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f976,%f977;
	// end inline asm
LBB0_92:                                // %__nv_fmaf_rn.exit4.i.i.i2348
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r475, %r16201, 192937984;
	add.s32 	%r476, %r475, %r16200;
	mov.b32 	%f978, %r476;
	mul.f32 	%f979, %f976, %f978;
	sub.f32 	%f980, %f978, %f979;
	fma.rn.f32 	%f981, %f980, %f976, %f979;
	sub.f32 	%f982, %f978, %f981;
	fma.rz.f32 	%f983, %f982, %f976, %f981;
	cvt.rzi.f32.f32 	%f984, %f983;
	sub.f32 	%f1367, %f978, %f984;
	sub.s32 	%r16201, %r16201, %r475;
	mov.b32 	%r16200, %f1367;
	setp.ne.s32 	%p179, %r16201, 0;
	setp.ne.s32 	%p180, %r16200, 0;
	and.pred  	%p181, %p179, %p180;
	@%p181 bra 	LBB0_92;
LBB0_93:                                // %__internal_fmodf_slowpath_mod.exit.i.i2350
	setp.gt.u32 	%p182, %r75, 2139095039;
	selp.f32 	%f985, 0f7FFFFFFF, 0f4B800000, %p182;
	mul.f32 	%f986, %f1367, 0f34000000;
	mul.f32 	%f1368, %f985, %f986;
	bra.uni 	LBB0_94;
LBB0_84:                                // %__nv_fast_fdividef.exit.i.i.i2320
	div.approx.f32 	%f969, %f1368, %f255;
	cvt.rzi.f32.f32 	%f1366, %f969;
	fma.rn.f32 	%f132, %f1366, 0fC0000000, %f1368;
	mov.b32 	%r74, %f132;
	setp.lt.u32 	%p173, %r74, 1073741824;
	@%p173 bra 	LBB0_89;
// %bb.85:
	setp.lt.u32 	%p174, %r74, -2147483647;
	@%p174 bra 	LBB0_87;
// %bb.86:
	add.f32 	%f974, %f1366, 0fBF800000;
	setp.lt.f32 	%p177, %f132, 0fC0000000;
	add.f32 	%f975, %f974, 0fBF800000;
	selp.f32 	%f1366, %f975, %f974, %p177;
	bra.uni 	LBB0_89;
LBB0_87:
	add.f32 	%f1366, %f1366, 0f3F800000;
	setp.ltu.f32 	%p175, %f132, 0f40800000;
	@%p175 bra 	LBB0_89;
// %bb.88:                              // %__nv_fmaf_rn.exit.i.i.i2325
	add.f32 	%f970, %f1366, 0f3F800000;
	fma.rn.f32 	%f972, %f255, 0fC0400000, %f132;
	setp.ge.f32 	%p176, %f972, 0f00000000;
	add.f32 	%f973, %f970, 0f3F800000;
	selp.f32 	%f1366, %f973, %f970, %p176;
LBB0_89:                                // %__internal_fmodf_fastpath_quot.exit.i.i2329
	fma.rn.f32 	%f1368, %f1366, 0fC0000000, %f1368;
LBB0_94:                                // %__internal_fmodf_kernel.exit.i2354
	shl.b32 	%r11, %r3, 1;
	abs.f32 	%f987, %f1368;
	setp.gtu.f32 	%p183, %f987, 0f7F800000;
	@%p183 bra 	LBB0_96;
// %bb.95:
	mov.b32 	%r477, %f129;
	and.b32  	%r478, %r477, -2147483648;
	mov.b32 	%r479, %f1368;
	or.b32  	%r480, %r478, %r479;
	mov.b32 	%f1368, %r480;
LBB0_96:                                // %__nv_fmodf.exit2355
	and.b32  	%r501, %r11, 6;
	shl.b32 	%r502, %r501, 1;
	neg.s32 	%r86, %r502;
	mul.lo.s32 	%r87, %r86, %r21;
	cvt.rn.f32.s32 	%f1020, %r87;
	div.approx.f32 	%f146, %f1020, %f287;
	abs.f32 	%f1372, %f146;
	setp.lt.f32 	%p191, %f1372, 0f40000000;
	@%p191 bra 	LBB0_108;
// %bb.97:
	setp.gtu.f32 	%p192, %f1372, 0f4B800000;
	@%p192 bra 	LBB0_104;
	bra.uni 	LBB0_98;
LBB0_104:
	mov.b32 	%r89, %f1372;
	and.b32  	%r503, %r89, 8388607;
	or.b32  	%r16202, %r503, 1065353216;
	mov.b32 	%f1371, %r16202;
	add.s32 	%r504, %r89, -1073741824;
	and.b32  	%r16203, %r504, -8388608;
	setp.eq.s32 	%p198, %r16203, 0;
	@%p198 bra 	LBB0_107;
// %bb.105:                             // %__nv_fmaf_rn.exit4.i.i.i2394.preheader
	mov.f32 	%f1031, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1030,%f1031;
	// end inline asm
LBB0_106:                               // %__nv_fmaf_rn.exit4.i.i.i2394
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r505, %r16203, 192937984;
	add.s32 	%r506, %r505, %r16202;
	mov.b32 	%f1032, %r506;
	mul.f32 	%f1033, %f1030, %f1032;
	sub.f32 	%f1034, %f1032, %f1033;
	fma.rn.f32 	%f1035, %f1034, %f1030, %f1033;
	sub.f32 	%f1036, %f1032, %f1035;
	fma.rz.f32 	%f1037, %f1036, %f1030, %f1035;
	cvt.rzi.f32.f32 	%f1038, %f1037;
	sub.f32 	%f1371, %f1032, %f1038;
	sub.s32 	%r16203, %r16203, %r505;
	mov.b32 	%r16202, %f1371;
	setp.ne.s32 	%p199, %r16203, 0;
	setp.ne.s32 	%p200, %r16202, 0;
	and.pred  	%p201, %p199, %p200;
	@%p201 bra 	LBB0_106;
LBB0_107:                               // %__internal_fmodf_slowpath_mod.exit.i.i2396
	setp.gt.u32 	%p202, %r89, 2139095039;
	selp.f32 	%f1039, 0f7FFFFFFF, 0f4B800000, %p202;
	mul.f32 	%f1040, %f1371, 0f34000000;
	mul.f32 	%f1372, %f1039, %f1040;
	bra.uni 	LBB0_108;
LBB0_98:                                // %__nv_fast_fdividef.exit.i.i.i2366
	div.approx.f32 	%f1023, %f1372, %f255;
	cvt.rzi.f32.f32 	%f1370, %f1023;
	fma.rn.f32 	%f149, %f1370, 0fC0000000, %f1372;
	mov.b32 	%r88, %f149;
	setp.lt.u32 	%p193, %r88, 1073741824;
	@%p193 bra 	LBB0_103;
// %bb.99:
	setp.lt.u32 	%p194, %r88, -2147483647;
	@%p194 bra 	LBB0_101;
// %bb.100:
	add.f32 	%f1028, %f1370, 0fBF800000;
	setp.lt.f32 	%p197, %f149, 0fC0000000;
	add.f32 	%f1029, %f1028, 0fBF800000;
	selp.f32 	%f1370, %f1029, %f1028, %p197;
	bra.uni 	LBB0_103;
LBB0_101:
	add.f32 	%f1370, %f1370, 0f3F800000;
	setp.ltu.f32 	%p195, %f149, 0f40800000;
	@%p195 bra 	LBB0_103;
// %bb.102:                             // %__nv_fmaf_rn.exit.i.i.i2371
	add.f32 	%f1024, %f1370, 0f3F800000;
	fma.rn.f32 	%f1026, %f255, 0fC0400000, %f149;
	setp.ge.f32 	%p196, %f1026, 0f00000000;
	add.f32 	%f1027, %f1024, 0f3F800000;
	selp.f32 	%f1370, %f1027, %f1024, %p196;
LBB0_103:                               // %__internal_fmodf_fastpath_quot.exit.i.i2375
	fma.rn.f32 	%f1372, %f1370, 0fC0000000, %f1372;
LBB0_108:                               // %__internal_fmodf_kernel.exit.i2400
	abs.f32 	%f1041, %f1372;
	setp.gtu.f32 	%p203, %f1041, 0f7F800000;
	@%p203 bra 	LBB0_110;
// %bb.109:
	mov.b32 	%r507, %f146;
	and.b32  	%r508, %r507, -2147483648;
	mov.b32 	%r509, %f1372;
	or.b32  	%r510, %r508, %r509;
	mov.b32 	%f1372, %r510;
LBB0_110:                               // %__nv_fmodf.exit2401
	sub.s32 	%r519, %r87, %r73;
	cvt.rn.f32.s32 	%f1072, %r519;
	div.approx.f32 	%f165, %f1072, %f287;
	abs.f32 	%f1376, %f165;
	setp.lt.f32 	%p211, %f1376, 0f40000000;
	@%p211 bra 	LBB0_122;
// %bb.111:
	setp.gtu.f32 	%p212, %f1376, 0f4B800000;
	@%p212 bra 	LBB0_118;
	bra.uni 	LBB0_112;
LBB0_118:
	mov.b32 	%r97, %f1376;
	and.b32  	%r520, %r97, 8388607;
	or.b32  	%r16204, %r520, 1065353216;
	mov.b32 	%f1375, %r16204;
	add.s32 	%r521, %r97, -1073741824;
	and.b32  	%r16205, %r521, -8388608;
	setp.eq.s32 	%p218, %r16205, 0;
	@%p218 bra 	LBB0_121;
// %bb.119:                             // %__nv_fmaf_rn.exit4.i.i.i2440.preheader
	mov.f32 	%f1083, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1082,%f1083;
	// end inline asm
LBB0_120:                               // %__nv_fmaf_rn.exit4.i.i.i2440
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r522, %r16205, 192937984;
	add.s32 	%r523, %r522, %r16204;
	mov.b32 	%f1084, %r523;
	mul.f32 	%f1085, %f1082, %f1084;
	sub.f32 	%f1086, %f1084, %f1085;
	fma.rn.f32 	%f1087, %f1086, %f1082, %f1085;
	sub.f32 	%f1088, %f1084, %f1087;
	fma.rz.f32 	%f1089, %f1088, %f1082, %f1087;
	cvt.rzi.f32.f32 	%f1090, %f1089;
	sub.f32 	%f1375, %f1084, %f1090;
	sub.s32 	%r16205, %r16205, %r522;
	mov.b32 	%r16204, %f1375;
	setp.ne.s32 	%p219, %r16205, 0;
	setp.ne.s32 	%p220, %r16204, 0;
	and.pred  	%p221, %p219, %p220;
	@%p221 bra 	LBB0_120;
LBB0_121:                               // %__internal_fmodf_slowpath_mod.exit.i.i2442
	setp.gt.u32 	%p222, %r97, 2139095039;
	selp.f32 	%f1091, 0f7FFFFFFF, 0f4B800000, %p222;
	mul.f32 	%f1092, %f1375, 0f34000000;
	mul.f32 	%f1376, %f1091, %f1092;
	bra.uni 	LBB0_122;
LBB0_112:                               // %__nv_fast_fdividef.exit.i.i.i2412
	div.approx.f32 	%f1075, %f1376, %f255;
	cvt.rzi.f32.f32 	%f1374, %f1075;
	fma.rn.f32 	%f168, %f1374, 0fC0000000, %f1376;
	mov.b32 	%r96, %f168;
	setp.lt.u32 	%p213, %r96, 1073741824;
	@%p213 bra 	LBB0_117;
// %bb.113:
	setp.lt.u32 	%p214, %r96, -2147483647;
	@%p214 bra 	LBB0_115;
// %bb.114:
	add.f32 	%f1080, %f1374, 0fBF800000;
	setp.lt.f32 	%p217, %f168, 0fC0000000;
	add.f32 	%f1081, %f1080, 0fBF800000;
	selp.f32 	%f1374, %f1081, %f1080, %p217;
	bra.uni 	LBB0_117;
LBB0_115:
	add.f32 	%f1374, %f1374, 0f3F800000;
	setp.ltu.f32 	%p215, %f168, 0f40800000;
	@%p215 bra 	LBB0_117;
// %bb.116:                             // %__nv_fmaf_rn.exit.i.i.i2417
	add.f32 	%f1076, %f1374, 0f3F800000;
	fma.rn.f32 	%f1078, %f255, 0fC0400000, %f168;
	setp.ge.f32 	%p216, %f1078, 0f00000000;
	add.f32 	%f1079, %f1076, 0f3F800000;
	selp.f32 	%f1374, %f1079, %f1076, %p216;
LBB0_117:                               // %__internal_fmodf_fastpath_quot.exit.i.i2421
	fma.rn.f32 	%f1376, %f1374, 0fC0000000, %f1376;
LBB0_122:                               // %__internal_fmodf_kernel.exit.i2446
	shr.u32 	%r18, %r3, 1;
	shr.u32 	%r24, %r3, 3;
	abs.f32 	%f1093, %f1376;
	setp.gtu.f32 	%p223, %f1093, 0f7F800000;
	@%p223 bra 	LBB0_124;
// %bb.123:
	mov.b32 	%r524, %f165;
	and.b32  	%r525, %r524, -2147483648;
	mov.b32 	%r526, %f1376;
	or.b32  	%r527, %r525, %r526;
	mov.b32 	%f1376, %r527;
LBB0_124:                               // %__nv_fmodf.exit2447
	and.b32  	%r542, %r24, 2;
	and.b32  	%r543, %r18, 4;
	or.b32  	%r544, %r22, %r542;
	or.b32  	%r106, %r544, %r543;
	mul.lo.s32 	%r107, %r86, %r106;
	cvt.rn.f32.s32 	%f1126, %r107;
	mov.f32 	%f1127, 0f41800000;
	div.approx.f32 	%f182, %f1126, %f1127;
	abs.f32 	%f1380, %f182;
	setp.lt.f32 	%p231, %f1380, 0f40000000;
	@%p231 bra 	LBB0_136;
// %bb.125:
	setp.gtu.f32 	%p232, %f1380, 0f4B800000;
	@%p232 bra 	LBB0_132;
	bra.uni 	LBB0_126;
LBB0_132:
	mov.b32 	%r109, %f1380;
	and.b32  	%r545, %r109, 8388607;
	or.b32  	%r16206, %r545, 1065353216;
	mov.b32 	%f1379, %r16206;
	add.s32 	%r546, %r109, -1073741824;
	and.b32  	%r16207, %r546, -8388608;
	setp.eq.s32 	%p238, %r16207, 0;
	@%p238 bra 	LBB0_135;
// %bb.133:                             // %__nv_fmaf_rn.exit4.i.i.i2486.preheader
	mov.f32 	%f1137, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1136,%f1137;
	// end inline asm
LBB0_134:                               // %__nv_fmaf_rn.exit4.i.i.i2486
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r547, %r16207, 192937984;
	add.s32 	%r548, %r547, %r16206;
	mov.b32 	%f1138, %r548;
	mul.f32 	%f1139, %f1136, %f1138;
	sub.f32 	%f1140, %f1138, %f1139;
	fma.rn.f32 	%f1141, %f1140, %f1136, %f1139;
	sub.f32 	%f1142, %f1138, %f1141;
	fma.rz.f32 	%f1143, %f1142, %f1136, %f1141;
	cvt.rzi.f32.f32 	%f1144, %f1143;
	sub.f32 	%f1379, %f1138, %f1144;
	sub.s32 	%r16207, %r16207, %r547;
	mov.b32 	%r16206, %f1379;
	setp.ne.s32 	%p239, %r16207, 0;
	setp.ne.s32 	%p240, %r16206, 0;
	and.pred  	%p241, %p239, %p240;
	@%p241 bra 	LBB0_134;
LBB0_135:                               // %__internal_fmodf_slowpath_mod.exit.i.i2488
	setp.gt.u32 	%p242, %r109, 2139095039;
	selp.f32 	%f1145, 0f7FFFFFFF, 0f4B800000, %p242;
	mul.f32 	%f1146, %f1379, 0f34000000;
	mul.f32 	%f1380, %f1145, %f1146;
	bra.uni 	LBB0_136;
LBB0_126:                               // %__nv_fast_fdividef.exit.i.i.i2458
	div.approx.f32 	%f1129, %f1380, %f255;
	cvt.rzi.f32.f32 	%f1378, %f1129;
	fma.rn.f32 	%f185, %f1378, 0fC0000000, %f1380;
	mov.b32 	%r108, %f185;
	setp.lt.u32 	%p233, %r108, 1073741824;
	@%p233 bra 	LBB0_131;
// %bb.127:
	setp.lt.u32 	%p234, %r108, -2147483647;
	@%p234 bra 	LBB0_129;
// %bb.128:
	add.f32 	%f1134, %f1378, 0fBF800000;
	setp.lt.f32 	%p237, %f185, 0fC0000000;
	add.f32 	%f1135, %f1134, 0fBF800000;
	selp.f32 	%f1378, %f1135, %f1134, %p237;
	bra.uni 	LBB0_131;
LBB0_129:
	add.f32 	%f1378, %f1378, 0f3F800000;
	setp.ltu.f32 	%p235, %f185, 0f40800000;
	@%p235 bra 	LBB0_131;
// %bb.130:                             // %__nv_fmaf_rn.exit.i.i.i2463
	add.f32 	%f1130, %f1378, 0f3F800000;
	fma.rn.f32 	%f1132, %f255, 0fC0400000, %f185;
	setp.ge.f32 	%p236, %f1132, 0f00000000;
	add.f32 	%f1133, %f1130, 0f3F800000;
	selp.f32 	%f1378, %f1133, %f1130, %p236;
LBB0_131:                               // %__internal_fmodf_fastpath_quot.exit.i.i2467
	fma.rn.f32 	%f1380, %f1378, 0fC0000000, %f1380;
LBB0_136:                               // %__internal_fmodf_kernel.exit.i2492
	abs.f32 	%f1147, %f1380;
	setp.gtu.f32 	%p243, %f1147, 0f7F800000;
	@%p243 bra 	LBB0_138;
// %bb.137:
	mov.b32 	%r549, %f182;
	and.b32  	%r550, %r549, -2147483648;
	mov.b32 	%r551, %f1380;
	or.b32  	%r552, %r550, %r551;
	mov.b32 	%f1380, %r552;
LBB0_138:                               // %__nv_fmodf.exit2493
	shl.b32 	%r561, %r106, 3;
	sub.s32 	%r562, %r107, %r561;
	cvt.rn.f32.s32 	%f1178, %r562;
	div.approx.f32 	%f201, %f1178, %f1127;
	abs.f32 	%f1384, %f201;
	setp.lt.f32 	%p251, %f1384, 0f40000000;
	@%p251 bra 	LBB0_150;
// %bb.139:
	setp.gtu.f32 	%p252, %f1384, 0f4B800000;
	@%p252 bra 	LBB0_146;
	bra.uni 	LBB0_140;
LBB0_146:
	mov.b32 	%r117, %f1384;
	and.b32  	%r563, %r117, 8388607;
	or.b32  	%r16208, %r563, 1065353216;
	mov.b32 	%f1383, %r16208;
	add.s32 	%r564, %r117, -1073741824;
	and.b32  	%r16209, %r564, -8388608;
	setp.eq.s32 	%p258, %r16209, 0;
	@%p258 bra 	LBB0_149;
// %bb.147:                             // %__nv_fmaf_rn.exit4.i.i.i2532.preheader
	mov.f32 	%f1189, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1188,%f1189;
	// end inline asm
LBB0_148:                               // %__nv_fmaf_rn.exit4.i.i.i2532
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r565, %r16209, 192937984;
	add.s32 	%r566, %r565, %r16208;
	mov.b32 	%f1190, %r566;
	mul.f32 	%f1191, %f1188, %f1190;
	sub.f32 	%f1192, %f1190, %f1191;
	fma.rn.f32 	%f1193, %f1192, %f1188, %f1191;
	sub.f32 	%f1194, %f1190, %f1193;
	fma.rz.f32 	%f1195, %f1194, %f1188, %f1193;
	cvt.rzi.f32.f32 	%f1196, %f1195;
	sub.f32 	%f1383, %f1190, %f1196;
	sub.s32 	%r16209, %r16209, %r565;
	mov.b32 	%r16208, %f1383;
	setp.ne.s32 	%p259, %r16209, 0;
	setp.ne.s32 	%p260, %r16208, 0;
	and.pred  	%p261, %p259, %p260;
	@%p261 bra 	LBB0_148;
LBB0_149:                               // %__internal_fmodf_slowpath_mod.exit.i.i2534
	setp.gt.u32 	%p262, %r117, 2139095039;
	selp.f32 	%f1197, 0f7FFFFFFF, 0f4B800000, %p262;
	mul.f32 	%f1198, %f1383, 0f34000000;
	mul.f32 	%f1384, %f1197, %f1198;
	bra.uni 	LBB0_150;
LBB0_140:                               // %__nv_fast_fdividef.exit.i.i.i2504
	div.approx.f32 	%f1181, %f1384, %f255;
	cvt.rzi.f32.f32 	%f1382, %f1181;
	fma.rn.f32 	%f204, %f1382, 0fC0000000, %f1384;
	mov.b32 	%r116, %f204;
	setp.lt.u32 	%p253, %r116, 1073741824;
	@%p253 bra 	LBB0_145;
// %bb.141:
	setp.lt.u32 	%p254, %r116, -2147483647;
	@%p254 bra 	LBB0_143;
// %bb.142:
	add.f32 	%f1186, %f1382, 0fBF800000;
	setp.lt.f32 	%p257, %f204, 0fC0000000;
	add.f32 	%f1187, %f1186, 0fBF800000;
	selp.f32 	%f1382, %f1187, %f1186, %p257;
	bra.uni 	LBB0_145;
LBB0_143:
	add.f32 	%f1382, %f1382, 0f3F800000;
	setp.ltu.f32 	%p255, %f204, 0f40800000;
	@%p255 bra 	LBB0_145;
// %bb.144:                             // %__nv_fmaf_rn.exit.i.i.i2509
	add.f32 	%f1182, %f1382, 0f3F800000;
	fma.rn.f32 	%f1184, %f255, 0fC0400000, %f204;
	setp.ge.f32 	%p256, %f1184, 0f00000000;
	add.f32 	%f1185, %f1182, 0f3F800000;
	selp.f32 	%f1382, %f1185, %f1182, %p256;
LBB0_145:                               // %__internal_fmodf_fastpath_quot.exit.i.i2513
	fma.rn.f32 	%f1384, %f1382, 0fC0000000, %f1384;
LBB0_150:                               // %__internal_fmodf_kernel.exit.i2538
	and.b32  	%r14, %r3, 16;
	abs.f32 	%f1199, %f1384;
	setp.gtu.f32 	%p263, %f1199, 0f7F800000;
	@%p263 bra 	LBB0_152;
// %bb.151:
	mov.b32 	%r567, %f201;
	and.b32  	%r568, %r567, -2147483648;
	mov.b32 	%r569, %f1384;
	or.b32  	%r570, %r568, %r569;
	mov.b32 	%f1384, %r570;
LBB0_152:                               // %__nv_fmodf.exit2539
	cvt.u16.u32 	%rs1, %r3;
	shr.u16 	%rs2, %rs1, 8;
	shl.b16 	%rs3, %rs1, 8;
	or.b16  	%rs4, %rs3, %rs2;
	shl.b16 	%rs5, %rs4, 4;
	shr.u16 	%rs6, %rs4, 4;
	and.b16  	%rs7, %rs6, 3840;
	or.b16  	%rs8, %rs7, %rs5;
	and.b16  	%rs9, %rs8, 13107;
	shl.b16 	%rs10, %rs9, 2;
	shr.u16 	%rs11, %rs8, 2;
	and.b16  	%rs12, %rs11, 13107;
	or.b16  	%rs13, %rs12, %rs10;
	and.b16  	%rs14, %rs13, 20480;
	shl.b16 	%rs15, %rs14, 1;
	shr.u16 	%rs16, %rs13, 1;
	and.b16  	%rs17, %rs16, 16384;
	or.b16  	%rs18, %rs17, %rs15;
	shr.u16 	%rs19, %rs18, 13;
	add.s32 	%r592, %r258, %r14;
	neg.s32 	%r593, %r592;
	mad.lo.s32 	%r594, %r25, -32, %r593;
	or.b16  	%rs20, %rs19, 1;
	cvt.u32.u16 	%r595, %rs20;
	and.b16  	%rs21, %rs19, 6;
	cvt.u32.u16 	%r596, %rs21;
	sub.s32 	%r597, %r594, %r596;
	shl.b32 	%r598, %r597, 1;
	cvt.rn.f32.s32 	%f1232, %r598;
	div.approx.f32 	%f218, %f1232, %f287;
	abs.f32 	%f1388, %f218;
	setp.lt.f32 	%p271, %f1388, 0f40000000;
	@%p271 bra 	LBB0_164;
// %bb.153:
	setp.gtu.f32 	%p272, %f1388, 0f4B800000;
	@%p272 bra 	LBB0_160;
	bra.uni 	LBB0_154;
LBB0_160:
	mov.b32 	%r130, %f1388;
	and.b32  	%r599, %r130, 8388607;
	or.b32  	%r16210, %r599, 1065353216;
	mov.b32 	%f1387, %r16210;
	add.s32 	%r600, %r130, -1073741824;
	and.b32  	%r16211, %r600, -8388608;
	setp.eq.s32 	%p278, %r16211, 0;
	@%p278 bra 	LBB0_163;
// %bb.161:                             // %__nv_fmaf_rn.exit4.i.i.i2578.preheader
	mov.f32 	%f1243, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1242,%f1243;
	// end inline asm
LBB0_162:                               // %__nv_fmaf_rn.exit4.i.i.i2578
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r601, %r16211, 192937984;
	add.s32 	%r602, %r601, %r16210;
	mov.b32 	%f1244, %r602;
	mul.f32 	%f1245, %f1242, %f1244;
	sub.f32 	%f1246, %f1244, %f1245;
	fma.rn.f32 	%f1247, %f1246, %f1242, %f1245;
	sub.f32 	%f1248, %f1244, %f1247;
	fma.rz.f32 	%f1249, %f1248, %f1242, %f1247;
	cvt.rzi.f32.f32 	%f1250, %f1249;
	sub.f32 	%f1387, %f1244, %f1250;
	sub.s32 	%r16211, %r16211, %r601;
	mov.b32 	%r16210, %f1387;
	setp.ne.s32 	%p279, %r16211, 0;
	setp.ne.s32 	%p280, %r16210, 0;
	and.pred  	%p281, %p279, %p280;
	@%p281 bra 	LBB0_162;
LBB0_163:                               // %__internal_fmodf_slowpath_mod.exit.i.i2580
	setp.gt.u32 	%p282, %r130, 2139095039;
	selp.f32 	%f1251, 0f7FFFFFFF, 0f4B800000, %p282;
	mul.f32 	%f1252, %f1387, 0f34000000;
	mul.f32 	%f1388, %f1251, %f1252;
	bra.uni 	LBB0_164;
LBB0_154:                               // %__nv_fast_fdividef.exit.i.i.i2550
	div.approx.f32 	%f1235, %f1388, %f255;
	cvt.rzi.f32.f32 	%f1386, %f1235;
	fma.rn.f32 	%f221, %f1386, 0fC0000000, %f1388;
	mov.b32 	%r129, %f221;
	setp.lt.u32 	%p273, %r129, 1073741824;
	@%p273 bra 	LBB0_159;
// %bb.155:
	setp.lt.u32 	%p274, %r129, -2147483647;
	@%p274 bra 	LBB0_157;
// %bb.156:
	add.f32 	%f1240, %f1386, 0fBF800000;
	setp.lt.f32 	%p277, %f221, 0fC0000000;
	add.f32 	%f1241, %f1240, 0fBF800000;
	selp.f32 	%f1386, %f1241, %f1240, %p277;
	bra.uni 	LBB0_159;
LBB0_157:
	add.f32 	%f1386, %f1386, 0f3F800000;
	setp.ltu.f32 	%p275, %f221, 0f40800000;
	@%p275 bra 	LBB0_159;
// %bb.158:                             // %__nv_fmaf_rn.exit.i.i.i2555
	add.f32 	%f1236, %f1386, 0f3F800000;
	fma.rn.f32 	%f1238, %f255, 0fC0400000, %f221;
	setp.ge.f32 	%p276, %f1238, 0f00000000;
	add.f32 	%f1239, %f1236, 0f3F800000;
	selp.f32 	%f1386, %f1239, %f1236, %p276;
LBB0_159:                               // %__internal_fmodf_fastpath_quot.exit.i.i2559
	fma.rn.f32 	%f1388, %f1386, 0fC0000000, %f1388;
LBB0_164:                               // %__internal_fmodf_kernel.exit.i2584
	sub.s32 	%r128, %r594, %r595;
	abs.f32 	%f1253, %f1388;
	setp.gtu.f32 	%p283, %f1253, 0f7F800000;
	@%p283 bra 	LBB0_166;
// %bb.165:
	mov.b32 	%r603, %f218;
	and.b32  	%r604, %r603, -2147483648;
	mov.b32 	%r605, %f1388;
	or.b32  	%r606, %r604, %r605;
	mov.b32 	%f1388, %r606;
LBB0_166:                               // %__nv_fmodf.exit2585
	shl.b32 	%r615, %r128, 1;
	cvt.rn.f32.s32 	%f1284, %r615;
	div.approx.f32 	%f237, %f1284, %f287;
	abs.f32 	%f1392, %f237;
	setp.lt.f32 	%p291, %f1392, 0f40000000;
	@%p291 bra 	LBB0_178;
// %bb.167:
	setp.gtu.f32 	%p292, %f1392, 0f4B800000;
	@%p292 bra 	LBB0_174;
	bra.uni 	LBB0_168;
LBB0_174:
	mov.b32 	%r138, %f1392;
	and.b32  	%r616, %r138, 8388607;
	or.b32  	%r16212, %r616, 1065353216;
	mov.b32 	%f1391, %r16212;
	add.s32 	%r617, %r138, -1073741824;
	and.b32  	%r16213, %r617, -8388608;
	setp.eq.s32 	%p298, %r16213, 0;
	@%p298 bra 	LBB0_177;
// %bb.175:                             // %__nv_fmaf_rn.exit4.i.i.i2624.preheader
	mov.f32 	%f1295, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1294,%f1295;
	// end inline asm
LBB0_176:                               // %__nv_fmaf_rn.exit4.i.i.i2624
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r618, %r16213, 192937984;
	add.s32 	%r619, %r618, %r16212;
	mov.b32 	%f1296, %r619;
	mul.f32 	%f1297, %f1294, %f1296;
	sub.f32 	%f1298, %f1296, %f1297;
	fma.rn.f32 	%f1299, %f1298, %f1294, %f1297;
	sub.f32 	%f1300, %f1296, %f1299;
	fma.rz.f32 	%f1301, %f1300, %f1294, %f1299;
	cvt.rzi.f32.f32 	%f1302, %f1301;
	sub.f32 	%f1391, %f1296, %f1302;
	sub.s32 	%r16213, %r16213, %r618;
	mov.b32 	%r16212, %f1391;
	setp.ne.s32 	%p299, %r16213, 0;
	setp.ne.s32 	%p300, %r16212, 0;
	and.pred  	%p301, %p299, %p300;
	@%p301 bra 	LBB0_176;
LBB0_177:                               // %__internal_fmodf_slowpath_mod.exit.i.i2626
	setp.gt.u32 	%p302, %r138, 2139095039;
	selp.f32 	%f1303, 0f7FFFFFFF, 0f4B800000, %p302;
	mul.f32 	%f1304, %f1391, 0f34000000;
	mul.f32 	%f1392, %f1303, %f1304;
	bra.uni 	LBB0_178;
LBB0_168:                               // %__nv_fast_fdividef.exit.i.i.i2596
	div.approx.f32 	%f1287, %f1392, %f255;
	cvt.rzi.f32.f32 	%f1390, %f1287;
	fma.rn.f32 	%f240, %f1390, 0fC0000000, %f1392;
	mov.b32 	%r137, %f240;
	setp.lt.u32 	%p293, %r137, 1073741824;
	@%p293 bra 	LBB0_173;
// %bb.169:
	setp.lt.u32 	%p294, %r137, -2147483647;
	@%p294 bra 	LBB0_171;
// %bb.170:
	add.f32 	%f1292, %f1390, 0fBF800000;
	setp.lt.f32 	%p297, %f240, 0fC0000000;
	add.f32 	%f1293, %f1292, 0fBF800000;
	selp.f32 	%f1390, %f1293, %f1292, %p297;
	bra.uni 	LBB0_173;
LBB0_171:
	add.f32 	%f1390, %f1390, 0f3F800000;
	setp.ltu.f32 	%p295, %f240, 0f40800000;
	@%p295 bra 	LBB0_173;
// %bb.172:                             // %__nv_fmaf_rn.exit.i.i.i2601
	add.f32 	%f1288, %f1390, 0f3F800000;
	fma.rn.f32 	%f1290, %f255, 0fC0400000, %f240;
	setp.ge.f32 	%p296, %f1290, 0f00000000;
	add.f32 	%f1291, %f1288, 0f3F800000;
	selp.f32 	%f1390, %f1291, %f1288, %p296;
LBB0_173:                               // %__internal_fmodf_fastpath_quot.exit.i.i2605
	fma.rn.f32 	%f1392, %f1390, 0fC0000000, %f1392;
LBB0_178:                               // %__internal_fmodf_kernel.exit.i2630
	abs.f32 	%f1305, %f1392;
	setp.gtu.f32 	%p303, %f1305, 0f7F800000;
	@%p303 bra 	LBB0_180;
// %bb.179:
	mov.b32 	%r620, %f237;
	and.b32  	%r621, %r620, -2147483648;
	mov.b32 	%r622, %f1392;
	or.b32  	%r623, %r621, %r622;
	mov.b32 	%f1392, %r623;
LBB0_180:                               // %__nv_fmodf.exit2631
	setp.le.s32 	%p311, %r6, %r5;
	mov.u32 	%r16193, 0;
	@%p311 bra 	LBB0_187;
// %bb.181:                             // %L2193.lr.ph
	mov.f32 	%f259, 0f44004000;
	div.approx.f32 	%f260, %f258, %f259;
	div.approx.f32 	%f294, %f292, %f259;
	div.approx.f32 	%f329, %f327, %f259;
	div.approx.f32 	%f363, %f361, %f259;
	div.approx.f32 	%f398, %f396, %f259;
	div.approx.f32 	%f432, %f430, %f259;
	div.approx.f32 	%f467, %f465, %f259;
	div.approx.f32 	%f501, %f499, %f259;
	div.approx.f32 	%f536, %f534, %f259;
	div.approx.f32 	%f570, %f568, %f259;
	div.approx.f32 	%f605, %f603, %f259;
	div.approx.f32 	%f639, %f637, %f259;
	div.approx.f32 	%f674, %f672, %f259;
	div.approx.f32 	%f708, %f706, %f259;
	div.approx.f32 	%f743, %f741, %f259;
	div.approx.f32 	%f777, %f775, %f259;
	abs.f32 	%f261, %f260;
	abs.f32 	%f295, %f294;
	abs.f32 	%f330, %f329;
	abs.f32 	%f364, %f363;
	abs.f32 	%f399, %f398;
	abs.f32 	%f433, %f432;
	abs.f32 	%f468, %f467;
	abs.f32 	%f502, %f501;
	abs.f32 	%f537, %f536;
	abs.f32 	%f571, %f570;
	abs.f32 	%f606, %f605;
	abs.f32 	%f640, %f639;
	abs.f32 	%f675, %f674;
	abs.f32 	%f709, %f708;
	abs.f32 	%f744, %f743;
	abs.f32 	%f778, %f777;
	setp.gt.f32 	%p15, %f261, 0f4B800000;
	mul.f32 	%f262, %f260, 0f00000000;
	setp.gt.f32 	%p21, %f295, 0f4B800000;
	mul.f32 	%f296, %f294, 0f00000000;
	setp.gt.f32 	%p27, %f330, 0f4B800000;
	mul.f32 	%f331, %f329, 0f00000000;
	setp.gt.f32 	%p33, %f364, 0f4B800000;
	mul.f32 	%f365, %f363, 0f00000000;
	setp.gt.f32 	%p39, %f399, 0f4B800000;
	mul.f32 	%f400, %f398, 0f00000000;
	setp.gt.f32 	%p45, %f433, 0f4B800000;
	mul.f32 	%f434, %f432, 0f00000000;
	setp.gt.f32 	%p51, %f468, 0f4B800000;
	mul.f32 	%f469, %f467, 0f00000000;
	setp.gt.f32 	%p57, %f502, 0f4B800000;
	mul.f32 	%f503, %f501, 0f00000000;
	setp.gt.f32 	%p63, %f537, 0f4B800000;
	mul.f32 	%f538, %f536, 0f00000000;
	setp.gt.f32 	%p69, %f571, 0f4B800000;
	mul.f32 	%f572, %f570, 0f00000000;
	setp.gt.f32 	%p75, %f606, 0f4B800000;
	mul.f32 	%f607, %f605, 0f00000000;
	setp.gt.f32 	%p81, %f640, 0f4B800000;
	mul.f32 	%f641, %f639, 0f00000000;
	setp.gt.f32 	%p87, %f675, 0f4B800000;
	mul.f32 	%f676, %f674, 0f00000000;
	setp.gt.f32 	%p93, %f709, 0f4B800000;
	mul.f32 	%f710, %f708, 0f00000000;
	setp.gt.f32 	%p99, %f744, 0f4B800000;
	mul.f32 	%f745, %f743, 0f00000000;
	setp.gt.f32 	%p105, %f778, 0f4B800000;
	mul.f32 	%f779, %f777, 0f00000000;
	selp.f32 	%f263, %f262, %f260, %p15;
	selp.f32 	%f297, %f296, %f294, %p21;
	selp.f32 	%f332, %f331, %f329, %p27;
	selp.f32 	%f366, %f365, %f363, %p33;
	selp.f32 	%f401, %f400, %f398, %p39;
	selp.f32 	%f435, %f434, %f432, %p45;
	selp.f32 	%f470, %f469, %f467, %p51;
	selp.f32 	%f504, %f503, %f501, %p57;
	selp.f32 	%f539, %f538, %f536, %p63;
	selp.f32 	%f573, %f572, %f570, %p69;
	selp.f32 	%f608, %f607, %f605, %p75;
	selp.f32 	%f642, %f641, %f639, %p81;
	selp.f32 	%f677, %f676, %f674, %p87;
	selp.f32 	%f711, %f710, %f708, %p93;
	selp.f32 	%f746, %f745, %f743, %p99;
	selp.f32 	%f780, %f779, %f777, %p105;
	add.f32 	%f830, %f1356, %f1356;
	add.f32 	%f882, %f1360, %f1360;
	add.f32 	%f936, %f1364, %f1364;
	add.f32 	%f988, %f1368, %f1368;
	add.f32 	%f1148, %f1380, %f1380;
	add.f32 	%f1200, %f1384, %f1384;
	add.f32 	%f264, %f263, %f263;
	add.f32 	%f298, %f297, %f297;
	add.f32 	%f333, %f332, %f332;
	add.f32 	%f367, %f366, %f366;
	add.f32 	%f402, %f401, %f401;
	add.f32 	%f436, %f435, %f435;
	add.f32 	%f471, %f470, %f470;
	add.f32 	%f505, %f504, %f504;
	add.f32 	%f540, %f539, %f539;
	add.f32 	%f574, %f573, %f573;
	add.f32 	%f609, %f608, %f608;
	add.f32 	%f643, %f642, %f642;
	add.f32 	%f678, %f677, %f677;
	add.f32 	%f712, %f711, %f711;
	add.f32 	%f747, %f746, %f746;
	add.f32 	%f781, %f780, %f780;
	mov.b32 	%r416, %f830;
	mov.b32 	%r445, %f882;
	mov.b32 	%r464, %f936;
	mov.b32 	%r493, %f988;
	add.f32 	%f1042, %f1372, %f1372;
	add.f32 	%f1094, %f1376, %f1376;
	mov.b32 	%r553, %f1148;
	mov.b32 	%r583, %f1200;
	mov.b32 	%r265, %f264;
	mov.b32 	%r272, %f298;
	mov.b32 	%r283, %f333;
	mov.b32 	%r290, %f367;
	mov.b32 	%r301, %f402;
	mov.b32 	%r308, %f436;
	mov.b32 	%r319, %f471;
	mov.b32 	%r326, %f505;
	mov.b32 	%r337, %f540;
	mov.b32 	%r344, %f574;
	mov.b32 	%r355, %f609;
	mov.b32 	%r362, %f643;
	mov.b32 	%r373, %f678;
	mov.b32 	%r380, %f712;
	mov.b32 	%r391, %f747;
	mov.b32 	%r398, %f781;
	and.b32  	%r417, %r416, -2147483648;
	and.b32  	%r446, %r445, -2147483648;
	and.b32  	%r465, %r464, -2147483648;
	and.b32  	%r494, %r493, -2147483648;
	mov.b32 	%r511, %f1042;
	mov.b32 	%r534, %f1094;
	and.b32  	%r554, %r553, -2147483648;
	and.b32  	%r584, %r583, -2147483648;
	add.f32 	%f1254, %f1388, %f1388;
	and.b32  	%r266, %r265, -2147483648;
	and.b32  	%r273, %r272, -2147483648;
	and.b32  	%r284, %r283, -2147483648;
	and.b32  	%r291, %r290, -2147483648;
	and.b32  	%r302, %r301, -2147483648;
	and.b32  	%r309, %r308, -2147483648;
	and.b32  	%r320, %r319, -2147483648;
	and.b32  	%r327, %r326, -2147483648;
	and.b32  	%r338, %r337, -2147483648;
	and.b32  	%r345, %r344, -2147483648;
	and.b32  	%r356, %r355, -2147483648;
	and.b32  	%r363, %r362, -2147483648;
	and.b32  	%r374, %r373, -2147483648;
	and.b32  	%r381, %r380, -2147483648;
	and.b32  	%r392, %r391, -2147483648;
	and.b32  	%r399, %r398, -2147483648;
	or.b32  	%r418, %r417, 1056964608;
	or.b32  	%r447, %r446, 1056964608;
	or.b32  	%r466, %r465, 1056964608;
	or.b32  	%r495, %r494, 1056964608;
	and.b32  	%r512, %r511, -2147483648;
	and.b32  	%r535, %r534, -2147483648;
	or.b32  	%r555, %r554, 1056964608;
	or.b32  	%r585, %r584, 1056964608;
	mov.b32 	%r607, %f1254;
	or.b32  	%r267, %r266, 1056964608;
	or.b32  	%r274, %r273, 1056964608;
	or.b32  	%r285, %r284, 1056964608;
	or.b32  	%r292, %r291, 1056964608;
	or.b32  	%r303, %r302, 1056964608;
	or.b32  	%r310, %r309, 1056964608;
	or.b32  	%r321, %r320, 1056964608;
	or.b32  	%r328, %r327, 1056964608;
	or.b32  	%r339, %r338, 1056964608;
	or.b32  	%r346, %r345, 1056964608;
	or.b32  	%r357, %r356, 1056964608;
	or.b32  	%r364, %r363, 1056964608;
	or.b32  	%r375, %r374, 1056964608;
	or.b32  	%r382, %r381, 1056964608;
	or.b32  	%r393, %r392, 1056964608;
	or.b32  	%r400, %r399, 1056964608;
	mov.b32 	%f831, %r418;
	mov.b32 	%f883, %r447;
	mov.b32 	%f937, %r466;
	mov.b32 	%f989, %r495;
	or.b32  	%r513, %r512, 1056964608;
	or.b32  	%r536, %r535, 1056964608;
	mov.b32 	%f1149, %r555;
	mov.b32 	%f1201, %r585;
	and.b32  	%r608, %r607, -2147483648;
	mov.b32 	%f265, %r267;
	mov.b32 	%f299, %r274;
	mov.b32 	%f334, %r285;
	mov.b32 	%f368, %r292;
	mov.b32 	%f403, %r303;
	mov.b32 	%f437, %r310;
	mov.b32 	%f472, %r321;
	mov.b32 	%f506, %r328;
	mov.b32 	%f541, %r339;
	mov.b32 	%f575, %r346;
	mov.b32 	%f610, %r357;
	mov.b32 	%f644, %r364;
	mov.b32 	%f679, %r375;
	mov.b32 	%f713, %r382;
	mov.b32 	%f748, %r393;
	mov.b32 	%f782, %r400;
	add.f32 	%f832, %f830, %f831;
	abs.f32 	%f834, %f830;
	add.f32 	%f884, %f882, %f883;
	abs.f32 	%f886, %f882;
	add.f32 	%f938, %f936, %f937;
	abs.f32 	%f940, %f936;
	add.f32 	%f990, %f988, %f989;
	abs.f32 	%f992, %f988;
	mov.b32 	%f1043, %r513;
	mov.b32 	%f1095, %r536;
	add.f32 	%f1150, %f1148, %f1149;
	abs.f32 	%f1152, %f1148;
	add.f32 	%f1202, %f1200, %f1201;
	abs.f32 	%f1204, %f1200;
	or.b32  	%r609, %r608, 1056964608;
	add.f32 	%f266, %f264, %f265;
	abs.f32 	%f268, %f264;
	add.f32 	%f300, %f298, %f299;
	abs.f32 	%f302, %f298;
	add.f32 	%f335, %f333, %f334;
	abs.f32 	%f337, %f333;
	add.f32 	%f369, %f367, %f368;
	abs.f32 	%f371, %f367;
	add.f32 	%f404, %f402, %f403;
	abs.f32 	%f406, %f402;
	add.f32 	%f438, %f436, %f437;
	abs.f32 	%f440, %f436;
	add.f32 	%f473, %f471, %f472;
	abs.f32 	%f475, %f471;
	add.f32 	%f507, %f505, %f506;
	abs.f32 	%f509, %f505;
	add.f32 	%f542, %f540, %f541;
	abs.f32 	%f544, %f540;
	add.f32 	%f576, %f574, %f575;
	abs.f32 	%f578, %f574;
	add.f32 	%f611, %f609, %f610;
	abs.f32 	%f613, %f609;
	add.f32 	%f645, %f643, %f644;
	abs.f32 	%f647, %f643;
	add.f32 	%f680, %f678, %f679;
	abs.f32 	%f682, %f678;
	add.f32 	%f714, %f712, %f713;
	abs.f32 	%f716, %f712;
	add.f32 	%f749, %f747, %f748;
	abs.f32 	%f751, %f747;
	add.f32 	%f783, %f781, %f782;
	abs.f32 	%f785, %f781;
	cvt.rzi.f32.f32 	%f833, %f832;
	setp.gt.f32 	%p124, %f834, 0f4B000000;
	cvt.rzi.f32.f32 	%f885, %f884;
	setp.gt.f32 	%p144, %f886, 0f4B000000;
	cvt.rzi.f32.f32 	%f939, %f938;
	setp.gt.f32 	%p164, %f940, 0f4B000000;
	cvt.rzi.f32.f32 	%f991, %f990;
	setp.gt.f32 	%p184, %f992, 0f4B000000;
	add.f32 	%f1044, %f1042, %f1043;
	abs.f32 	%f1046, %f1042;
	add.f32 	%f1096, %f1094, %f1095;
	abs.f32 	%f1098, %f1094;
	cvt.rzi.f32.f32 	%f1151, %f1150;
	setp.gt.f32 	%p244, %f1152, 0f4B000000;
	cvt.rzi.f32.f32 	%f1203, %f1202;
	setp.gt.f32 	%p264, %f1204, 0f4B000000;
	mov.b32 	%f1255, %r609;
	cvt.rzi.f32.f32 	%f267, %f266;
	setp.gt.f32 	%p16, %f268, 0f4B000000;
	cvt.rzi.f32.f32 	%f301, %f300;
	setp.gt.f32 	%p22, %f302, 0f4B000000;
	cvt.rzi.f32.f32 	%f336, %f335;
	setp.gt.f32 	%p28, %f337, 0f4B000000;
	cvt.rzi.f32.f32 	%f370, %f369;
	setp.gt.f32 	%p34, %f371, 0f4B000000;
	cvt.rzi.f32.f32 	%f405, %f404;
	setp.gt.f32 	%p40, %f406, 0f4B000000;
	cvt.rzi.f32.f32 	%f439, %f438;
	setp.gt.f32 	%p46, %f440, 0f4B000000;
	cvt.rzi.f32.f32 	%f474, %f473;
	setp.gt.f32 	%p52, %f475, 0f4B000000;
	cvt.rzi.f32.f32 	%f508, %f507;
	setp.gt.f32 	%p58, %f509, 0f4B000000;
	cvt.rzi.f32.f32 	%f543, %f542;
	setp.gt.f32 	%p64, %f544, 0f4B000000;
	cvt.rzi.f32.f32 	%f577, %f576;
	setp.gt.f32 	%p70, %f578, 0f4B000000;
	cvt.rzi.f32.f32 	%f612, %f611;
	setp.gt.f32 	%p76, %f613, 0f4B000000;
	cvt.rzi.f32.f32 	%f646, %f645;
	setp.gt.f32 	%p82, %f647, 0f4B000000;
	cvt.rzi.f32.f32 	%f681, %f680;
	setp.gt.f32 	%p88, %f682, 0f4B000000;
	cvt.rzi.f32.f32 	%f715, %f714;
	setp.gt.f32 	%p94, %f716, 0f4B000000;
	cvt.rzi.f32.f32 	%f750, %f749;
	setp.gt.f32 	%p100, %f751, 0f4B000000;
	cvt.rzi.f32.f32 	%f784, %f783;
	setp.gt.f32 	%p106, %f785, 0f4B000000;
	selp.f32 	%f835, %f830, %f833, %p124;
	cvt.rzi.f32.f32 	%f836, %f830;
	setp.lt.f32 	%p125, %f834, 0f3F000000;
	selp.f32 	%f887, %f882, %f885, %p144;
	cvt.rzi.f32.f32 	%f888, %f882;
	setp.lt.f32 	%p145, %f886, 0f3F000000;
	selp.f32 	%f941, %f936, %f939, %p164;
	cvt.rzi.f32.f32 	%f942, %f936;
	setp.lt.f32 	%p165, %f940, 0f3F000000;
	selp.f32 	%f993, %f988, %f991, %p184;
	cvt.rzi.f32.f32 	%f994, %f988;
	setp.lt.f32 	%p185, %f992, 0f3F000000;
	cvt.rzi.f32.f32 	%f1045, %f1044;
	setp.gt.f32 	%p204, %f1046, 0f4B000000;
	cvt.rzi.f32.f32 	%f1097, %f1096;
	setp.gt.f32 	%p224, %f1098, 0f4B000000;
	selp.f32 	%f1153, %f1148, %f1151, %p244;
	cvt.rzi.f32.f32 	%f1154, %f1148;
	setp.lt.f32 	%p245, %f1152, 0f3F000000;
	selp.f32 	%f1205, %f1200, %f1203, %p264;
	cvt.rzi.f32.f32 	%f1206, %f1200;
	setp.lt.f32 	%p265, %f1204, 0f3F000000;
	add.f32 	%f1256, %f1254, %f1255;
	abs.f32 	%f1258, %f1254;
	selp.f32 	%f269, %f264, %f267, %p16;
	cvt.rzi.f32.f32 	%f270, %f264;
	setp.lt.f32 	%p17, %f268, 0f3F000000;
	selp.f32 	%f303, %f298, %f301, %p22;
	cvt.rzi.f32.f32 	%f304, %f298;
	setp.lt.f32 	%p23, %f302, 0f3F000000;
	selp.f32 	%f338, %f333, %f336, %p28;
	cvt.rzi.f32.f32 	%f339, %f333;
	setp.lt.f32 	%p29, %f337, 0f3F000000;
	selp.f32 	%f372, %f367, %f370, %p34;
	cvt.rzi.f32.f32 	%f373, %f367;
	setp.lt.f32 	%p35, %f371, 0f3F000000;
	selp.f32 	%f407, %f402, %f405, %p40;
	cvt.rzi.f32.f32 	%f408, %f402;
	setp.lt.f32 	%p41, %f406, 0f3F000000;
	selp.f32 	%f441, %f436, %f439, %p46;
	cvt.rzi.f32.f32 	%f442, %f436;
	setp.lt.f32 	%p47, %f440, 0f3F000000;
	selp.f32 	%f476, %f471, %f474, %p52;
	cvt.rzi.f32.f32 	%f477, %f471;
	setp.lt.f32 	%p53, %f475, 0f3F000000;
	selp.f32 	%f510, %f505, %f508, %p58;
	cvt.rzi.f32.f32 	%f511, %f505;
	setp.lt.f32 	%p59, %f509, 0f3F000000;
	selp.f32 	%f545, %f540, %f543, %p64;
	cvt.rzi.f32.f32 	%f546, %f540;
	setp.lt.f32 	%p65, %f544, 0f3F000000;
	selp.f32 	%f579, %f574, %f577, %p70;
	cvt.rzi.f32.f32 	%f580, %f574;
	setp.lt.f32 	%p71, %f578, 0f3F000000;
	selp.f32 	%f614, %f609, %f612, %p76;
	cvt.rzi.f32.f32 	%f615, %f609;
	setp.lt.f32 	%p77, %f613, 0f3F000000;
	selp.f32 	%f648, %f643, %f646, %p82;
	cvt.rzi.f32.f32 	%f649, %f643;
	setp.lt.f32 	%p83, %f647, 0f3F000000;
	selp.f32 	%f683, %f678, %f681, %p88;
	cvt.rzi.f32.f32 	%f684, %f678;
	setp.lt.f32 	%p89, %f682, 0f3F000000;
	selp.f32 	%f717, %f712, %f715, %p94;
	cvt.rzi.f32.f32 	%f718, %f712;
	setp.lt.f32 	%p95, %f716, 0f3F000000;
	selp.f32 	%f752, %f747, %f750, %p100;
	cvt.rzi.f32.f32 	%f753, %f747;
	setp.lt.f32 	%p101, %f751, 0f3F000000;
	selp.f32 	%f786, %f781, %f784, %p106;
	cvt.rzi.f32.f32 	%f787, %f781;
	setp.lt.f32 	%p107, %f785, 0f3F000000;
	selp.f32 	%f837, %f836, %f835, %p125;
	selp.f32 	%f889, %f888, %f887, %p145;
	selp.f32 	%f943, %f942, %f941, %p165;
	selp.f32 	%f995, %f994, %f993, %p185;
	selp.f32 	%f1047, %f1042, %f1045, %p204;
	cvt.rzi.f32.f32 	%f1048, %f1042;
	setp.lt.f32 	%p205, %f1046, 0f3F000000;
	selp.f32 	%f1099, %f1094, %f1097, %p224;
	cvt.rzi.f32.f32 	%f1100, %f1094;
	setp.lt.f32 	%p225, %f1098, 0f3F000000;
	selp.f32 	%f1155, %f1154, %f1153, %p245;
	selp.f32 	%f1207, %f1206, %f1205, %p265;
	cvt.rzi.f32.f32 	%f1257, %f1256;
	setp.gt.f32 	%p284, %f1258, 0f4B000000;
	selp.f32 	%f271, %f270, %f269, %p17;
	selp.f32 	%f305, %f304, %f303, %p23;
	selp.f32 	%f340, %f339, %f338, %p29;
	selp.f32 	%f374, %f373, %f372, %p35;
	selp.f32 	%f409, %f408, %f407, %p41;
	selp.f32 	%f443, %f442, %f441, %p47;
	selp.f32 	%f478, %f477, %f476, %p53;
	selp.f32 	%f512, %f511, %f510, %p59;
	selp.f32 	%f547, %f546, %f545, %p65;
	selp.f32 	%f581, %f580, %f579, %p71;
	selp.f32 	%f616, %f615, %f614, %p77;
	selp.f32 	%f650, %f649, %f648, %p83;
	selp.f32 	%f685, %f684, %f683, %p89;
	selp.f32 	%f719, %f718, %f717, %p95;
	selp.f32 	%f754, %f753, %f752, %p101;
	selp.f32 	%f788, %f787, %f786, %p107;
	fma.rn.f32 	%f838, %f837, 0fBF000000, %f1356;
	fma.rn.f32 	%f890, %f889, 0fBF000000, %f1360;
	fma.rn.f32 	%f944, %f943, 0fBF000000, %f1364;
	fma.rn.f32 	%f996, %f995, 0fBF000000, %f1368;
	selp.f32 	%f1049, %f1048, %f1047, %p205;
	selp.f32 	%f1101, %f1100, %f1099, %p225;
	fma.rn.f32 	%f1156, %f1155, 0fBF000000, %f1380;
	fma.rn.f32 	%f1208, %f1207, 0fBF000000, %f1384;
	selp.f32 	%f1259, %f1254, %f1257, %p284;
	cvt.rzi.f32.f32 	%f1260, %f1254;
	setp.lt.f32 	%p285, %f1258, 0f3F000000;
	fma.rn.f32 	%f272, %f271, 0fBF000000, %f263;
	fma.rn.f32 	%f306, %f305, 0fBF000000, %f297;
	fma.rn.f32 	%f341, %f340, 0fBF000000, %f332;
	fma.rn.f32 	%f375, %f374, 0fBF000000, %f366;
	fma.rn.f32 	%f410, %f409, 0fBF000000, %f401;
	fma.rn.f32 	%f444, %f443, 0fBF000000, %f435;
	fma.rn.f32 	%f479, %f478, 0fBF000000, %f470;
	fma.rn.f32 	%f513, %f512, 0fBF000000, %f504;
	fma.rn.f32 	%f548, %f547, 0fBF000000, %f539;
	fma.rn.f32 	%f582, %f581, 0fBF000000, %f573;
	fma.rn.f32 	%f617, %f616, 0fBF000000, %f608;
	fma.rn.f32 	%f651, %f650, 0fBF000000, %f642;
	fma.rn.f32 	%f686, %f685, 0fBF000000, %f677;
	fma.rn.f32 	%f720, %f719, 0fBF000000, %f711;
	fma.rn.f32 	%f755, %f754, 0fBF000000, %f746;
	fma.rn.f32 	%f789, %f788, 0fBF000000, %f780;
	mul.f32 	%f839, %f838, %f838;
	mul.f32 	%f891, %f890, %f890;
	mul.f32 	%f945, %f944, %f944;
	mul.f32 	%f997, %f996, %f996;
	fma.rn.f32 	%f1050, %f1049, 0fBF000000, %f1372;
	fma.rn.f32 	%f1102, %f1101, 0fBF000000, %f1376;
	mul.f32 	%f1157, %f1156, %f1156;
	mul.f32 	%f1209, %f1208, %f1208;
	selp.f32 	%f1261, %f1260, %f1259, %p285;
	mul.f32 	%f273, %f272, %f272;
	mul.f32 	%f307, %f306, %f306;
	mul.f32 	%f342, %f341, %f341;
	mul.f32 	%f376, %f375, %f375;
	mul.f32 	%f411, %f410, %f410;
	mul.f32 	%f445, %f444, %f444;
	mul.f32 	%f480, %f479, %f479;
	mul.f32 	%f514, %f513, %f513;
	mul.f32 	%f549, %f548, %f548;
	mul.f32 	%f583, %f582, %f582;
	mul.f32 	%f618, %f617, %f617;
	mul.f32 	%f652, %f651, %f651;
	mul.f32 	%f687, %f686, %f686;
	mul.f32 	%f721, %f720, %f720;
	mul.f32 	%f756, %f755, %f755;
	mul.f32 	%f790, %f789, %f789;
	fma.rn.f32 	%f840, %f839, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f841, %f839, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f892, %f891, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f893, %f891, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f946, %f945, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f947, %f945, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f998, %f997, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f999, %f997, 0f3E684E12, 0fBFAAD2E0;
	mul.f32 	%f1051, %f1050, %f1050;
	mul.f32 	%f1103, %f1102, %f1102;
	fma.rn.f32 	%f1158, %f1157, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1159, %f1157, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1210, %f1209, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1211, %f1209, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1262, %f1261, 0fBF000000, %f1388;
	cvt.rzi.s32.f32 	%r268, %f271;
	fma.rn.f32 	%f274, %f273, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f275, %f273, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r275, %f305;
	fma.rn.f32 	%f308, %f307, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f309, %f307, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r286, %f340;
	fma.rn.f32 	%f343, %f342, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f344, %f342, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r293, %f374;
	fma.rn.f32 	%f377, %f376, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f378, %f376, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r304, %f409;
	fma.rn.f32 	%f412, %f411, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f413, %f411, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r311, %f443;
	fma.rn.f32 	%f446, %f445, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f447, %f445, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r322, %f478;
	fma.rn.f32 	%f481, %f480, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f482, %f480, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r329, %f512;
	fma.rn.f32 	%f515, %f514, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f516, %f514, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r340, %f547;
	fma.rn.f32 	%f550, %f549, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f551, %f549, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r347, %f581;
	fma.rn.f32 	%f584, %f583, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f585, %f583, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r358, %f616;
	fma.rn.f32 	%f619, %f618, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f620, %f618, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r365, %f650;
	fma.rn.f32 	%f653, %f652, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f654, %f652, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r376, %f685;
	fma.rn.f32 	%f688, %f687, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f689, %f687, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r383, %f719;
	fma.rn.f32 	%f722, %f721, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f723, %f721, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r394, %f754;
	fma.rn.f32 	%f757, %f756, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f758, %f756, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r401, %f788;
	fma.rn.f32 	%f791, %f790, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f792, %f790, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r419, %f837;
	fma.rn.f32 	%f842, %f840, %f839, 0fC0A55DF6;
	fma.rn.f32 	%f843, %f841, %f839, 0f4081E0CF;
	fma.rn.f32 	%f844, %f839, %f838, 0f00000000;
	cvt.rzi.s32.f32 	%r448, %f889;
	fma.rn.f32 	%f894, %f892, %f891, 0fC0A55DF6;
	fma.rn.f32 	%f895, %f893, %f891, 0f4081E0CF;
	fma.rn.f32 	%f896, %f891, %f890, 0f00000000;
	cvt.rzi.s32.f32 	%r467, %f943;
	fma.rn.f32 	%f948, %f946, %f945, 0fC0A55DF6;
	fma.rn.f32 	%f949, %f947, %f945, 0f4081E0CF;
	fma.rn.f32 	%f950, %f945, %f944, 0f00000000;
	cvt.rzi.s32.f32 	%r496, %f995;
	fma.rn.f32 	%f1000, %f998, %f997, 0fC0A55DF6;
	fma.rn.f32 	%f1001, %f999, %f997, 0f4081E0CF;
	fma.rn.f32 	%f1002, %f997, %f996, 0f00000000;
	fma.rn.f32 	%f1052, %f1051, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1053, %f1051, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1104, %f1103, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1105, %f1103, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r556, %f1155;
	fma.rn.f32 	%f1160, %f1158, %f1157, 0fC0A55DF6;
	fma.rn.f32 	%f1161, %f1159, %f1157, 0f4081E0CF;
	fma.rn.f32 	%f1162, %f1157, %f1156, 0f00000000;
	cvt.rzi.s32.f32 	%r586, %f1207;
	fma.rn.f32 	%f1212, %f1210, %f1209, 0fC0A55DF6;
	fma.rn.f32 	%f1213, %f1211, %f1209, 0f4081E0CF;
	fma.rn.f32 	%f1214, %f1209, %f1208, 0f00000000;
	mul.f32 	%f1263, %f1262, %f1262;
	add.s32 	%r269, %r268, 1;
	fma.rn.f32 	%f276, %f274, %f273, 0fC0A55DF6;
	fma.rn.f32 	%f277, %f275, %f273, 0f4081E0CF;
	fma.rn.f32 	%f278, %f273, %f272, 0f00000000;
	add.s32 	%r276, %r275, 1;
	fma.rn.f32 	%f310, %f308, %f307, 0fC0A55DF6;
	fma.rn.f32 	%f311, %f309, %f307, 0f4081E0CF;
	fma.rn.f32 	%f312, %f307, %f306, 0f00000000;
	add.s32 	%r287, %r286, 1;
	fma.rn.f32 	%f345, %f343, %f342, 0fC0A55DF6;
	fma.rn.f32 	%f346, %f344, %f342, 0f4081E0CF;
	fma.rn.f32 	%f347, %f342, %f341, 0f00000000;
	add.s32 	%r294, %r293, 1;
	fma.rn.f32 	%f379, %f377, %f376, 0fC0A55DF6;
	fma.rn.f32 	%f380, %f378, %f376, 0f4081E0CF;
	fma.rn.f32 	%f381, %f376, %f375, 0f00000000;
	add.s32 	%r305, %r304, 1;
	fma.rn.f32 	%f414, %f412, %f411, 0fC0A55DF6;
	fma.rn.f32 	%f415, %f413, %f411, 0f4081E0CF;
	fma.rn.f32 	%f416, %f411, %f410, 0f00000000;
	add.s32 	%r312, %r311, 1;
	fma.rn.f32 	%f448, %f446, %f445, 0fC0A55DF6;
	fma.rn.f32 	%f449, %f447, %f445, 0f4081E0CF;
	fma.rn.f32 	%f450, %f445, %f444, 0f00000000;
	add.s32 	%r323, %r322, 1;
	fma.rn.f32 	%f483, %f481, %f480, 0fC0A55DF6;
	fma.rn.f32 	%f484, %f482, %f480, 0f4081E0CF;
	fma.rn.f32 	%f485, %f480, %f479, 0f00000000;
	add.s32 	%r330, %r329, 1;
	fma.rn.f32 	%f517, %f515, %f514, 0fC0A55DF6;
	fma.rn.f32 	%f518, %f516, %f514, 0f4081E0CF;
	fma.rn.f32 	%f519, %f514, %f513, 0f00000000;
	add.s32 	%r341, %r340, 1;
	fma.rn.f32 	%f552, %f550, %f549, 0fC0A55DF6;
	fma.rn.f32 	%f553, %f551, %f549, 0f4081E0CF;
	fma.rn.f32 	%f554, %f549, %f548, 0f00000000;
	add.s32 	%r348, %r347, 1;
	fma.rn.f32 	%f586, %f584, %f583, 0fC0A55DF6;
	fma.rn.f32 	%f587, %f585, %f583, 0f4081E0CF;
	fma.rn.f32 	%f588, %f583, %f582, 0f00000000;
	add.s32 	%r359, %r358, 1;
	fma.rn.f32 	%f621, %f619, %f618, 0fC0A55DF6;
	fma.rn.f32 	%f622, %f620, %f618, 0f4081E0CF;
	fma.rn.f32 	%f623, %f618, %f617, 0f00000000;
	add.s32 	%r366, %r365, 1;
	fma.rn.f32 	%f655, %f653, %f652, 0fC0A55DF6;
	fma.rn.f32 	%f656, %f654, %f652, 0f4081E0CF;
	fma.rn.f32 	%f657, %f652, %f651, 0f00000000;
	add.s32 	%r377, %r376, 1;
	fma.rn.f32 	%f690, %f688, %f687, 0fC0A55DF6;
	fma.rn.f32 	%f691, %f689, %f687, 0f4081E0CF;
	fma.rn.f32 	%f692, %f687, %f686, 0f00000000;
	add.s32 	%r384, %r383, 1;
	fma.rn.f32 	%f724, %f722, %f721, 0fC0A55DF6;
	fma.rn.f32 	%f725, %f723, %f721, 0f4081E0CF;
	fma.rn.f32 	%f726, %f721, %f720, 0f00000000;
	add.s32 	%r395, %r394, 1;
	fma.rn.f32 	%f759, %f757, %f756, 0fC0A55DF6;
	fma.rn.f32 	%f760, %f758, %f756, 0f4081E0CF;
	fma.rn.f32 	%f761, %f756, %f755, 0f00000000;
	add.s32 	%r402, %r401, 1;
	fma.rn.f32 	%f793, %f791, %f790, 0fC0A55DF6;
	fma.rn.f32 	%f794, %f792, %f790, 0f4081E0CF;
	fma.rn.f32 	%f795, %f790, %f789, 0f00000000;
	fma.rn.f32 	%f845, %f843, %f839, 0fC09DE9E6;
	fma.rn.f32 	%f846, %f842, %f844, 0f00000000;
	and.b32  	%r420, %r419, 1;
	fma.rn.f32 	%f897, %f895, %f891, 0fC09DE9E6;
	fma.rn.f32 	%f898, %f894, %f896, 0f00000000;
	and.b32  	%r449, %r448, 1;
	fma.rn.f32 	%f951, %f949, %f945, 0fC09DE9E6;
	fma.rn.f32 	%f952, %f948, %f950, 0f00000000;
	and.b32  	%r468, %r467, 1;
	fma.rn.f32 	%f1003, %f1001, %f997, 0fC09DE9E6;
	fma.rn.f32 	%f1004, %f1000, %f1002, 0f00000000;
	and.b32  	%r497, %r496, 1;
	cvt.rzi.s32.f32 	%r514, %f1049;
	fma.rn.f32 	%f1054, %f1052, %f1051, 0fC0A55DF6;
	fma.rn.f32 	%f1055, %f1053, %f1051, 0f4081E0CF;
	fma.rn.f32 	%f1056, %f1051, %f1050, 0f00000000;
	cvt.rzi.s32.f32 	%r537, %f1101;
	fma.rn.f32 	%f1106, %f1104, %f1103, 0fC0A55DF6;
	fma.rn.f32 	%f1107, %f1105, %f1103, 0f4081E0CF;
	fma.rn.f32 	%f1108, %f1103, %f1102, 0f00000000;
	fma.rn.f32 	%f1163, %f1161, %f1157, 0fC09DE9E6;
	fma.rn.f32 	%f1164, %f1160, %f1162, 0f00000000;
	and.b32  	%r557, %r556, 1;
	fma.rn.f32 	%f1215, %f1213, %f1209, 0fC09DE9E6;
	fma.rn.f32 	%f1216, %f1212, %f1214, 0f00000000;
	and.b32  	%r587, %r586, 1;
	fma.rn.f32 	%f1264, %f1263, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1265, %f1263, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f279, %f277, %f273, 0fC09DE9E6;
	fma.rn.f32 	%f280, %f276, %f278, 0f00000000;
	and.b32  	%r270, %r269, 1;
	fma.rn.f32 	%f313, %f311, %f307, 0fC09DE9E6;
	fma.rn.f32 	%f314, %f310, %f312, 0f00000000;
	and.b32  	%r277, %r276, 1;
	fma.rn.f32 	%f348, %f346, %f342, 0fC09DE9E6;
	fma.rn.f32 	%f349, %f345, %f347, 0f00000000;
	and.b32  	%r288, %r287, 1;
	fma.rn.f32 	%f382, %f380, %f376, 0fC09DE9E6;
	fma.rn.f32 	%f383, %f379, %f381, 0f00000000;
	and.b32  	%r295, %r294, 1;
	fma.rn.f32 	%f417, %f415, %f411, 0fC09DE9E6;
	fma.rn.f32 	%f418, %f414, %f416, 0f00000000;
	and.b32  	%r306, %r305, 1;
	fma.rn.f32 	%f451, %f449, %f445, 0fC09DE9E6;
	fma.rn.f32 	%f452, %f448, %f450, 0f00000000;
	and.b32  	%r313, %r312, 1;
	fma.rn.f32 	%f486, %f484, %f480, 0fC09DE9E6;
	fma.rn.f32 	%f487, %f483, %f485, 0f00000000;
	and.b32  	%r324, %r323, 1;
	fma.rn.f32 	%f520, %f518, %f514, 0fC09DE9E6;
	fma.rn.f32 	%f521, %f517, %f519, 0f00000000;
	and.b32  	%r331, %r330, 1;
	fma.rn.f32 	%f555, %f553, %f549, 0fC09DE9E6;
	fma.rn.f32 	%f556, %f552, %f554, 0f00000000;
	and.b32  	%r342, %r341, 1;
	fma.rn.f32 	%f589, %f587, %f583, 0fC09DE9E6;
	fma.rn.f32 	%f590, %f586, %f588, 0f00000000;
	and.b32  	%r349, %r348, 1;
	fma.rn.f32 	%f624, %f622, %f618, 0fC09DE9E6;
	fma.rn.f32 	%f625, %f621, %f623, 0f00000000;
	and.b32  	%r360, %r359, 1;
	fma.rn.f32 	%f658, %f656, %f652, 0fC09DE9E6;
	fma.rn.f32 	%f659, %f655, %f657, 0f00000000;
	and.b32  	%r367, %r366, 1;
	fma.rn.f32 	%f693, %f691, %f687, 0fC09DE9E6;
	fma.rn.f32 	%f694, %f690, %f692, 0f00000000;
	and.b32  	%r378, %r377, 1;
	fma.rn.f32 	%f727, %f725, %f721, 0fC09DE9E6;
	fma.rn.f32 	%f728, %f724, %f726, 0f00000000;
	and.b32  	%r385, %r384, 1;
	fma.rn.f32 	%f762, %f760, %f756, 0fC09DE9E6;
	fma.rn.f32 	%f763, %f759, %f761, 0f00000000;
	and.b32  	%r396, %r395, 1;
	fma.rn.f32 	%f796, %f794, %f790, 0fC09DE9E6;
	fma.rn.f32 	%f797, %f793, %f795, 0f00000000;
	and.b32  	%r403, %r402, 1;
	fma.rn.f32 	%f847, %f845, %f839, 0f3F800000;
	fma.rn.f32 	%f848, %f838, 0f40490FDB, %f846;
	setp.eq.b32 	%p126, %r420, 1;
	fma.rn.f32 	%f899, %f897, %f891, 0f3F800000;
	fma.rn.f32 	%f900, %f890, 0f40490FDB, %f898;
	setp.eq.b32 	%p146, %r449, 1;
	fma.rn.f32 	%f953, %f951, %f945, 0f3F800000;
	fma.rn.f32 	%f954, %f944, 0f40490FDB, %f952;
	setp.eq.b32 	%p166, %r468, 1;
	fma.rn.f32 	%f1005, %f1003, %f997, 0f3F800000;
	fma.rn.f32 	%f1006, %f996, 0f40490FDB, %f1004;
	setp.eq.b32 	%p186, %r497, 1;
	fma.rn.f32 	%f1057, %f1055, %f1051, 0fC09DE9E6;
	fma.rn.f32 	%f1058, %f1054, %f1056, 0f00000000;
	and.b32  	%r515, %r514, 1;
	fma.rn.f32 	%f1109, %f1107, %f1103, 0fC09DE9E6;
	fma.rn.f32 	%f1110, %f1106, %f1108, 0f00000000;
	and.b32  	%r538, %r537, 1;
	fma.rn.f32 	%f1165, %f1163, %f1157, 0f3F800000;
	fma.rn.f32 	%f1166, %f1156, 0f40490FDB, %f1164;
	setp.eq.b32 	%p246, %r557, 1;
	fma.rn.f32 	%f1217, %f1215, %f1209, 0f3F800000;
	fma.rn.f32 	%f1218, %f1208, 0f40490FDB, %f1216;
	setp.eq.b32 	%p266, %r587, 1;
	cvt.rzi.s32.f32 	%r610, %f1261;
	fma.rn.f32 	%f1266, %f1264, %f1263, 0fC0A55DF6;
	fma.rn.f32 	%f1267, %f1265, %f1263, 0f4081E0CF;
	fma.rn.f32 	%f1268, %f1263, %f1262, 0f00000000;
	shl.b32 	%r9, %r3, 2;
	fma.rn.f32 	%f281, %f279, %f273, 0f3F800000;
	fma.rn.f32 	%f282, %f272, 0f40490FDB, %f280;
	setp.eq.b32 	%p18, %r270, 1;
	fma.rn.f32 	%f315, %f313, %f307, 0f3F800000;
	fma.rn.f32 	%f316, %f306, 0f40490FDB, %f314;
	setp.eq.b32 	%p24, %r277, 1;
	fma.rn.f32 	%f350, %f348, %f342, 0f3F800000;
	fma.rn.f32 	%f351, %f341, 0f40490FDB, %f349;
	setp.eq.b32 	%p30, %r288, 1;
	fma.rn.f32 	%f384, %f382, %f376, 0f3F800000;
	fma.rn.f32 	%f385, %f375, 0f40490FDB, %f383;
	setp.eq.b32 	%p36, %r295, 1;
	fma.rn.f32 	%f419, %f417, %f411, 0f3F800000;
	fma.rn.f32 	%f420, %f410, 0f40490FDB, %f418;
	setp.eq.b32 	%p42, %r306, 1;
	fma.rn.f32 	%f453, %f451, %f445, 0f3F800000;
	fma.rn.f32 	%f454, %f444, 0f40490FDB, %f452;
	setp.eq.b32 	%p48, %r313, 1;
	fma.rn.f32 	%f488, %f486, %f480, 0f3F800000;
	fma.rn.f32 	%f489, %f479, 0f40490FDB, %f487;
	setp.eq.b32 	%p54, %r324, 1;
	fma.rn.f32 	%f522, %f520, %f514, 0f3F800000;
	fma.rn.f32 	%f523, %f513, 0f40490FDB, %f521;
	setp.eq.b32 	%p60, %r331, 1;
	fma.rn.f32 	%f557, %f555, %f549, 0f3F800000;
	fma.rn.f32 	%f558, %f548, 0f40490FDB, %f556;
	setp.eq.b32 	%p66, %r342, 1;
	fma.rn.f32 	%f591, %f589, %f583, 0f3F800000;
	fma.rn.f32 	%f592, %f582, 0f40490FDB, %f590;
	setp.eq.b32 	%p72, %r349, 1;
	fma.rn.f32 	%f626, %f624, %f618, 0f3F800000;
	fma.rn.f32 	%f627, %f617, 0f40490FDB, %f625;
	setp.eq.b32 	%p78, %r360, 1;
	fma.rn.f32 	%f660, %f658, %f652, 0f3F800000;
	fma.rn.f32 	%f661, %f651, 0f40490FDB, %f659;
	setp.eq.b32 	%p84, %r367, 1;
	fma.rn.f32 	%f695, %f693, %f687, 0f3F800000;
	fma.rn.f32 	%f696, %f686, 0f40490FDB, %f694;
	setp.eq.b32 	%p90, %r378, 1;
	fma.rn.f32 	%f729, %f727, %f721, 0f3F800000;
	fma.rn.f32 	%f730, %f720, 0f40490FDB, %f728;
	setp.eq.b32 	%p96, %r385, 1;
	fma.rn.f32 	%f764, %f762, %f756, 0f3F800000;
	fma.rn.f32 	%f765, %f755, 0f40490FDB, %f763;
	setp.eq.b32 	%p102, %r396, 1;
	fma.rn.f32 	%f798, %f796, %f790, 0f3F800000;
	fma.rn.f32 	%f799, %f789, 0f40490FDB, %f797;
	setp.eq.b32 	%p108, %r403, 1;
	selp.f32 	%f849, %f847, %f848, %p126;
	and.b32  	%r421, %r419, 2;
	selp.f32 	%f901, %f899, %f900, %p146;
	and.b32  	%r450, %r448, 2;
	selp.f32 	%f955, %f953, %f954, %p166;
	and.b32  	%r469, %r467, 2;
	selp.f32 	%f1007, %f1005, %f1006, %p186;
	and.b32  	%r498, %r496, 2;
	fma.rn.f32 	%f1059, %f1057, %f1051, 0f3F800000;
	fma.rn.f32 	%f1060, %f1050, 0f40490FDB, %f1058;
	setp.eq.b32 	%p206, %r515, 1;
	fma.rn.f32 	%f1111, %f1109, %f1103, 0f3F800000;
	fma.rn.f32 	%f1112, %f1102, 0f40490FDB, %f1110;
	setp.eq.b32 	%p226, %r538, 1;
	selp.f32 	%f1167, %f1165, %f1166, %p246;
	and.b32  	%r558, %r556, 2;
	selp.f32 	%f1219, %f1217, %f1218, %p266;
	and.b32  	%r588, %r586, 2;
	fma.rn.f32 	%f1269, %f1267, %f1263, 0fC09DE9E6;
	fma.rn.f32 	%f1270, %f1266, %f1268, 0f00000000;
	and.b32  	%r611, %r610, 1;
	and.b32  	%r10, %r9, 4;
	and.b32  	%r15, %r3, 18;
	selp.f32 	%f283, %f281, %f282, %p18;
	and.b32  	%r271, %r269, 2;
	mov.f32 	%f284, 0f00000000;
	selp.f32 	%f317, %f315, %f316, %p24;
	and.b32  	%r278, %r276, 2;
	selp.f32 	%f352, %f350, %f351, %p30;
	and.b32  	%r289, %r287, 2;
	selp.f32 	%f386, %f384, %f385, %p36;
	and.b32  	%r296, %r294, 2;
	selp.f32 	%f421, %f419, %f420, %p42;
	and.b32  	%r307, %r305, 2;
	selp.f32 	%f455, %f453, %f454, %p48;
	and.b32  	%r314, %r312, 2;
	selp.f32 	%f490, %f488, %f489, %p54;
	and.b32  	%r325, %r323, 2;
	selp.f32 	%f524, %f522, %f523, %p60;
	and.b32  	%r332, %r330, 2;
	selp.f32 	%f559, %f557, %f558, %p66;
	and.b32  	%r343, %r341, 2;
	selp.f32 	%f593, %f591, %f592, %p72;
	and.b32  	%r350, %r348, 2;
	selp.f32 	%f628, %f626, %f627, %p78;
	and.b32  	%r361, %r359, 2;
	selp.f32 	%f662, %f660, %f661, %p84;
	and.b32  	%r368, %r366, 2;
	selp.f32 	%f697, %f695, %f696, %p90;
	and.b32  	%r379, %r377, 2;
	selp.f32 	%f731, %f729, %f730, %p96;
	and.b32  	%r386, %r384, 2;
	selp.f32 	%f766, %f764, %f765, %p102;
	and.b32  	%r397, %r395, 2;
	selp.f32 	%f800, %f798, %f799, %p108;
	and.b32  	%r404, %r402, 2;
	setp.eq.s32 	%p127, %r421, 0;
	neg.f32 	%f851, %f849;
	add.s32 	%r422, %r419, 1;
	cvt.rzi.f32.f32 	%f856, %f1356;
	setp.eq.s32 	%p147, %r450, 0;
	neg.f32 	%f903, %f901;
	add.s32 	%r451, %r448, 1;
	cvt.rzi.f32.f32 	%f908, %f1360;
	setp.eq.s32 	%p167, %r469, 0;
	neg.f32 	%f957, %f955;
	add.s32 	%r470, %r467, 1;
	cvt.rzi.f32.f32 	%f962, %f1364;
	setp.eq.s32 	%p187, %r498, 0;
	neg.f32 	%f1009, %f1007;
	add.s32 	%r499, %r496, 1;
	cvt.rzi.f32.f32 	%f1014, %f1368;
	selp.f32 	%f1061, %f1059, %f1060, %p206;
	and.b32  	%r516, %r514, 2;
	selp.f32 	%f1113, %f1111, %f1112, %p226;
	and.b32  	%r539, %r537, 2;
	setp.eq.s32 	%p247, %r558, 0;
	neg.f32 	%f1169, %f1167;
	add.s32 	%r559, %r556, 1;
	cvt.rzi.f32.f32 	%f1174, %f1380;
	setp.eq.s32 	%p267, %r588, 0;
	neg.f32 	%f1221, %f1219;
	add.s32 	%r589, %r586, 1;
	cvt.rzi.f32.f32 	%f1226, %f1384;
	fma.rn.f32 	%f1271, %f1269, %f1263, 0f3F800000;
	fma.rn.f32 	%f1272, %f1262, 0f40490FDB, %f1270;
	setp.eq.b32 	%p286, %r611, 1;
	and.b32  	%r12, %r11, 8;
	or.b32  	%r253, %r15, %r10;
	setp.eq.s32 	%p19, %r271, 0;
	sub.f32 	%f285, %f284, %f283;
	setp.eq.s32 	%p25, %r278, 0;
	sub.f32 	%f319, %f284, %f317;
	setp.eq.s32 	%p31, %r289, 0;
	sub.f32 	%f354, %f284, %f352;
	setp.eq.s32 	%p37, %r296, 0;
	sub.f32 	%f388, %f284, %f386;
	setp.eq.s32 	%p43, %r307, 0;
	sub.f32 	%f423, %f284, %f421;
	setp.eq.s32 	%p49, %r314, 0;
	sub.f32 	%f457, %f284, %f455;
	setp.eq.s32 	%p55, %r325, 0;
	sub.f32 	%f492, %f284, %f490;
	setp.eq.s32 	%p61, %r332, 0;
	sub.f32 	%f526, %f284, %f524;
	setp.eq.s32 	%p67, %r343, 0;
	sub.f32 	%f561, %f284, %f559;
	setp.eq.s32 	%p73, %r350, 0;
	sub.f32 	%f595, %f284, %f593;
	setp.eq.s32 	%p79, %r361, 0;
	sub.f32 	%f630, %f284, %f628;
	setp.eq.s32 	%p85, %r368, 0;
	sub.f32 	%f664, %f284, %f662;
	setp.eq.s32 	%p91, %r379, 0;
	sub.f32 	%f699, %f284, %f697;
	setp.eq.s32 	%p97, %r386, 0;
	sub.f32 	%f733, %f284, %f731;
	setp.eq.s32 	%p103, %r397, 0;
	sub.f32 	%f768, %f284, %f766;
	setp.eq.s32 	%p109, %r404, 0;
	sub.f32 	%f802, %f284, %f800;
	selp.f32 	%f850, %f848, %f847, %p126;
	selp.f32 	%f852, %f849, %f851, %p127;
	and.b32  	%r423, %r422, 2;
	setp.eq.f32 	%p129, %f856, %f1356;
	mul.f32 	%f857, %f1356, 0f00000000;
	selp.f32 	%f902, %f900, %f899, %p146;
	selp.f32 	%f904, %f901, %f903, %p147;
	and.b32  	%r452, %r451, 2;
	setp.eq.f32 	%p149, %f908, %f1360;
	mul.f32 	%f909, %f1360, 0f00000000;
	selp.f32 	%f956, %f954, %f953, %p166;
	selp.f32 	%f958, %f955, %f957, %p167;
	and.b32  	%r471, %r470, 2;
	setp.eq.f32 	%p169, %f962, %f1364;
	mul.f32 	%f963, %f1364, 0f00000000;
	selp.f32 	%f1008, %f1006, %f1005, %p186;
	selp.f32 	%f1010, %f1007, %f1009, %p187;
	and.b32  	%r500, %r499, 2;
	setp.eq.f32 	%p189, %f1014, %f1368;
	mul.f32 	%f1015, %f1368, 0f00000000;
	setp.eq.s32 	%p207, %r516, 0;
	neg.f32 	%f1063, %f1061;
	add.s32 	%r517, %r514, 1;
	cvt.rzi.f32.f32 	%f1068, %f1372;
	setp.eq.s32 	%p227, %r539, 0;
	neg.f32 	%f1115, %f1113;
	add.s32 	%r540, %r537, 1;
	cvt.rzi.f32.f32 	%f1120, %f1376;
	selp.f32 	%f1168, %f1166, %f1165, %p246;
	selp.f32 	%f1170, %f1167, %f1169, %p247;
	and.b32  	%r560, %r559, 2;
	setp.eq.f32 	%p249, %f1174, %f1380;
	mul.f32 	%f1175, %f1380, 0f00000000;
	selp.f32 	%f1220, %f1218, %f1217, %p266;
	selp.f32 	%f1222, %f1219, %f1221, %p267;
	and.b32  	%r590, %r589, 2;
	setp.eq.f32 	%p269, %f1226, %f1384;
	mul.f32 	%f1227, %f1384, 0f00000000;
	selp.f32 	%f1273, %f1271, %f1272, %p286;
	and.b32  	%r612, %r610, 2;
	and.b32  	%r13, %r9, 32;
	or.b32  	%r254, %r253, %r12;
	selp.f32 	%f286, %f283, %f285, %p19;
	selp.f32 	%f320, %f317, %f319, %p25;
	selp.f32 	%f355, %f352, %f354, %p31;
	selp.f32 	%f389, %f386, %f388, %p37;
	selp.f32 	%f424, %f421, %f423, %p43;
	selp.f32 	%f458, %f455, %f457, %p49;
	selp.f32 	%f493, %f490, %f492, %p55;
	selp.f32 	%f527, %f524, %f526, %p61;
	selp.f32 	%f562, %f559, %f561, %p67;
	selp.f32 	%f596, %f593, %f595, %p73;
	selp.f32 	%f631, %f628, %f630, %p79;
	selp.f32 	%f665, %f662, %f664, %p85;
	selp.f32 	%f700, %f697, %f699, %p91;
	selp.f32 	%f734, %f731, %f733, %p97;
	selp.f32 	%f769, %f766, %f768, %p103;
	selp.f32 	%f803, %f800, %f802, %p109;
	setp.eq.s32 	%p128, %r423, 0;
	sub.f32 	%f854, %f284, %f850;
	selp.f32 	%f91, %f857, %f852, %p129;
	abs.f32 	%f858, %f1356;
	setp.eq.s32 	%p148, %r452, 0;
	sub.f32 	%f906, %f284, %f902;
	selp.f32 	%f910, %f909, %f904, %p149;
	abs.f32 	%f911, %f1360;
	setp.eq.s32 	%p168, %r471, 0;
	sub.f32 	%f960, %f284, %f956;
	selp.f32 	%f127, %f963, %f958, %p169;
	abs.f32 	%f964, %f1364;
	setp.eq.s32 	%p188, %r500, 0;
	sub.f32 	%f1012, %f284, %f1008;
	selp.f32 	%f1016, %f1015, %f1010, %p189;
	abs.f32 	%f1017, %f1368;
	selp.f32 	%f1062, %f1060, %f1059, %p206;
	selp.f32 	%f1064, %f1061, %f1063, %p207;
	and.b32  	%r518, %r517, 2;
	setp.eq.f32 	%p209, %f1068, %f1372;
	mul.f32 	%f1069, %f1372, 0f00000000;
	selp.f32 	%f1114, %f1112, %f1111, %p226;
	selp.f32 	%f1116, %f1113, %f1115, %p227;
	and.b32  	%r541, %r540, 2;
	setp.eq.f32 	%p229, %f1120, %f1376;
	mul.f32 	%f1121, %f1376, 0f00000000;
	setp.eq.s32 	%p248, %r560, 0;
	sub.f32 	%f1172, %f284, %f1168;
	selp.f32 	%f199, %f1175, %f1170, %p249;
	abs.f32 	%f1176, %f1380;
	setp.eq.s32 	%p268, %r590, 0;
	sub.f32 	%f1224, %f284, %f1220;
	selp.f32 	%f1228, %f1227, %f1222, %p269;
	abs.f32 	%f1229, %f1384;
	setp.eq.s32 	%p287, %r612, 0;
	neg.f32 	%f1275, %f1273;
	add.s32 	%r613, %r610, 1;
	cvt.rzi.f32.f32 	%f1280, %f1388;
	or.b32  	%r255, %r254, %r13;
	mul.f32 	%f2, %f286, %f286;
	mul.f32 	%f7, %f320, %f320;
	mul.f32 	%f11, %f355, %f355;
	mul.f32 	%f16, %f389, %f389;
	mul.f32 	%f20, %f424, %f424;
	mul.f32 	%f25, %f458, %f458;
	mul.f32 	%f29, %f493, %f493;
	mul.f32 	%f34, %f527, %f527;
	mul.f32 	%f38, %f562, %f562;
	mul.f32 	%f43, %f596, %f596;
	mul.f32 	%f47, %f631, %f631;
	mul.f32 	%f52, %f665, %f665;
	mul.f32 	%f56, %f700, %f700;
	mul.f32 	%f61, %f734, %f734;
	mul.f32 	%f65, %f769, %f769;
	mul.f32 	%f70, %f803, %f803;
	selp.f32 	%f855, %f850, %f854, %p128;
	setp.gt.f32 	%p130, %f858, 0f4B800000;
	add.f32 	%f859, %f91, 0f3F800000;
	selp.f32 	%f907, %f902, %f906, %p148;
	setp.gt.f32 	%p150, %f911, 0f4B800000;
	add.f32 	%f912, %f910, 0f3F800000;
	selp.f32 	%f961, %f956, %f960, %p168;
	setp.gt.f32 	%p170, %f964, 0f4B800000;
	add.f32 	%f965, %f127, 0f3F800000;
	selp.f32 	%f1013, %f1008, %f1012, %p188;
	setp.gt.f32 	%p190, %f1017, 0f4B800000;
	add.f32 	%f1018, %f1016, 0f3F800000;
	setp.eq.s32 	%p208, %r518, 0;
	sub.f32 	%f1066, %f284, %f1062;
	selp.f32 	%f163, %f1069, %f1064, %p209;
	abs.f32 	%f1070, %f1372;
	setp.eq.s32 	%p228, %r541, 0;
	sub.f32 	%f1118, %f284, %f1114;
	selp.f32 	%f1122, %f1121, %f1116, %p229;
	abs.f32 	%f1123, %f1376;
	selp.f32 	%f1173, %f1168, %f1172, %p248;
	setp.gt.f32 	%p250, %f1176, 0f4B800000;
	add.f32 	%f1177, %f199, 0f3F800000;
	selp.f32 	%f1225, %f1220, %f1224, %p268;
	setp.gt.f32 	%p270, %f1229, 0f4B800000;
	add.f32 	%f1230, %f1228, 0f3F800000;
	selp.f32 	%f1274, %f1272, %f1271, %p286;
	selp.f32 	%f1276, %f1273, %f1275, %p287;
	and.b32  	%r614, %r613, 2;
	setp.eq.f32 	%p289, %f1280, %f1388;
	mul.f32 	%f1281, %f1388, 0f00000000;
	shr.u32 	%r256, %r255, 1;
	mul.f32 	%f290, %f2, 0f3B8B2FF9;
	mul.f32 	%f324, %f7, 0f3B8B2FF9;
	mul.f32 	%f359, %f11, 0f3B8B2FF9;
	mul.f32 	%f393, %f16, 0f3B8B2FF9;
	mul.f32 	%f428, %f20, 0f3B8B2FF9;
	mul.f32 	%f462, %f25, 0f3B8B2FF9;
	mul.f32 	%f497, %f29, 0f3B8B2FF9;
	mul.f32 	%f531, %f34, 0f3B8B2FF9;
	mul.f32 	%f566, %f38, 0f3B8B2FF9;
	mul.f32 	%f600, %f43, 0f3B8B2FF9;
	mul.f32 	%f635, %f47, 0f3B8B2FF9;
	mul.f32 	%f669, %f52, 0f3B8B2FF9;
	mul.f32 	%f704, %f56, 0f3B8B2FF9;
	mul.f32 	%f738, %f61, 0f3B8B2FF9;
	mul.f32 	%f773, %f65, 0f3B8B2FF9;
	mul.f32 	%f806, %f70, 0f3B8B2FF9;
	selp.f32 	%f92, %f859, %f855, %p130;
	selp.f32 	%f913, %f912, %f907, %p150;
	selp.f32 	%f128, %f965, %f961, %p170;
	selp.f32 	%f1019, %f1018, %f1013, %p190;
	selp.f32 	%f1067, %f1062, %f1066, %p208;
	setp.gt.f32 	%p210, %f1070, 0f4B800000;
	add.f32 	%f1071, %f163, 0f3F800000;
	selp.f32 	%f1119, %f1114, %f1118, %p228;
	setp.gt.f32 	%p230, %f1123, 0f4B800000;
	add.f32 	%f1124, %f1122, 0f3F800000;
	selp.f32 	%f200, %f1177, %f1173, %p250;
	selp.f32 	%f1231, %f1230, %f1225, %p270;
	setp.eq.s32 	%p288, %r614, 0;
	sub.f32 	%f1278, %f284, %f1274;
	selp.f32 	%f235, %f1281, %f1276, %p289;
	abs.f32 	%f1282, %f1388;
	ld.param.u64 	%rd1, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_5];
	mul.wide.u32 	%rd60, %r256, 4;
	mul.f32 	%f6, %f290, %f1338;
	mul.f32 	%f325, %f324, %f1339;
	mul.f32 	%f15, %f359, %f1340;
	mul.f32 	%f394, %f393, %f1341;
	mul.f32 	%f24, %f428, %f1342;
	mul.f32 	%f463, %f462, %f1343;
	mul.f32 	%f33, %f497, %f1344;
	mul.f32 	%f532, %f531, %f1345;
	mul.f32 	%f42, %f566, %f1346;
	mul.f32 	%f601, %f600, %f1347;
	mul.f32 	%f51, %f635, %f1348;
	mul.f32 	%f670, %f669, %f1349;
	mul.f32 	%f60, %f704, %f1350;
	mul.f32 	%f739, %f738, %f1351;
	mul.f32 	%f69, %f773, %f1352;
	mul.f32 	%f807, %f806, %f1353;
	mov.b32 	%r435, %f913;
	mov.b32 	%r434, %f92;
	mov.b32 	%r441, %f910;
	mov.b32 	%r440, %f91;
	mov.b32 	%r483, %f1019;
	mov.b32 	%r482, %f128;
	mov.b32 	%r489, %f1016;
	mov.b32 	%r488, %f127;
	selp.f32 	%f164, %f1071, %f1067, %p210;
	selp.f32 	%f1125, %f1124, %f1119, %p230;
	mov.b32 	%r573, %f1231;
	mov.b32 	%r572, %f200;
	mov.b32 	%r579, %f1228;
	mov.b32 	%r578, %f199;
	selp.f32 	%f1279, %f1274, %f1278, %p288;
	setp.gt.f32 	%p290, %f1282, 0f4B800000;
	add.f32 	%f1283, %f235, 0f3F800000;
	add.s64 	%rd61, %rd1, %rd60;
	mov.b32 	%r281, %f325;
	mov.b32 	%r280, %f6;
	mov.b32 	%r299, %f394;
	mov.b32 	%r298, %f15;
	mov.b32 	%r317, %f463;
	mov.b32 	%r316, %f24;
	mov.b32 	%r335, %f532;
	mov.b32 	%r334, %f33;
	mov.b32 	%r353, %f601;
	mov.b32 	%r352, %f42;
	mov.b32 	%r371, %f670;
	mov.b32 	%r370, %f51;
	mov.b32 	%r389, %f739;
	mov.b32 	%r388, %f60;
	mov.b32 	%r407, %f807;
	mov.b32 	%r406, %f69;
	xor.b32  	%r486, %r489, -2147483648;
	xor.b32  	%r485, %r488, -2147483648;
	mov.b32 	%r530, %f1125;
	mov.b32 	%r529, %f164;
	mov.b32 	%r533, %f1122;
	mov.b32 	%r532, %f163;
	xor.b32  	%r576, %r579, -2147483648;
	xor.b32  	%r575, %r578, -2147483648;
	selp.f32 	%f236, %f1283, %f1279, %p290;
	ld.param.u64 	%rd2, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_6];
	ld.param.u64 	%rd3, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_7];
	ld.global.u32 	%r16, [%rd61];
	ld.global.u32 	%r17, [%rd61+128];
	// begin inline asm
	cvt.rn.f16x2.f32 %r279, %r281, %r280;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r297, %r299, %r298;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r315, %r317, %r316;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r333, %r335, %r334;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r351, %r353, %r352;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r369, %r371, %r370;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r387, %r389, %r388;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r405, %r407, %r406;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r433, %r435, %r434;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r436, %r435, %r434;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r439, %r441, %r440;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r442, %r441, %r440;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r481, %r483, %r482;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r484, %r486, %r485;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r487, %r489, %r488;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r490, %r483, %r482;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r528, %r530, %r529;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r531, %r533, %r532;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r571, %r573, %r572;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r574, %r576, %r575;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r577, %r579, %r578;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r580, %r573, %r572;
	// end inline asm
	add.f32 	%f1306, %f1392, %f1392;
	mov.b32 	%r630, %f1306;
	and.b32  	%r631, %r630, -2147483648;
	or.b32  	%r632, %r631, 1056964608;
	mov.b32 	%f1307, %r632;
	add.f32 	%f1308, %f1306, %f1307;
	cvt.rzi.f32.f32 	%f1309, %f1308;
	abs.f32 	%f1310, %f1306;
	setp.gt.f32 	%p304, %f1310, 0f4B000000;
	selp.f32 	%f1311, %f1306, %f1309, %p304;
	cvt.rzi.f32.f32 	%f1312, %f1306;
	setp.lt.f32 	%p305, %f1310, 0f3F000000;
	selp.f32 	%f1313, %f1312, %f1311, %p305;
	cvt.rzi.s32.f32 	%r633, %f1313;
	fma.rn.f32 	%f1314, %f1313, 0fBF000000, %f1392;
	mul.f32 	%f1315, %f1314, %f1314;
	fma.rn.f32 	%f1316, %f1315, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1317, %f1315, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1318, %f1316, %f1315, 0fC0A55DF6;
	fma.rn.f32 	%f1319, %f1317, %f1315, 0f4081E0CF;
	fma.rn.f32 	%f1320, %f1315, %f1314, 0f00000000;
	fma.rn.f32 	%f1321, %f1319, %f1315, 0fC09DE9E6;
	fma.rn.f32 	%f1322, %f1318, %f1320, 0f00000000;
	fma.rn.f32 	%f1323, %f1321, %f1315, 0f3F800000;
	fma.rn.f32 	%f1324, %f1314, 0f40490FDB, %f1322;
	and.b32  	%r634, %r633, 1;
	setp.eq.b32 	%p306, %r634, 1;
	selp.f32 	%f1325, %f1323, %f1324, %p306;
	selp.f32 	%f1326, %f1324, %f1323, %p306;
	and.b32  	%r635, %r633, 2;
	setp.eq.s32 	%p307, %r635, 0;
	neg.f32 	%f1327, %f1325;
	selp.f32 	%f1328, %f1325, %f1327, %p307;
	add.s32 	%r636, %r633, 1;
	and.b32  	%r637, %r636, 2;
	setp.eq.s32 	%p308, %r637, 0;
	sub.f32 	%f1330, %f284, %f1326;
	selp.f32 	%f1331, %f1326, %f1330, %p308;
	cvt.rzi.f32.f32 	%f1332, %f1392;
	setp.eq.f32 	%p309, %f1332, %f1392;
	mul.f32 	%f1333, %f1392, 0f00000000;
	selp.f32 	%f1334, %f1333, %f1328, %p309;
	abs.f32 	%f1335, %f1392;
	setp.gt.f32 	%p310, %f1335, 0f4B800000;
	add.f32 	%f1336, %f1334, 0f3F800000;
	selp.f32 	%f1337, %f1336, %f1331, %p310;
	mov.b32 	%r626, %f1337;
	mov.b32 	%r625, %f236;
	// begin inline asm
	cvt.rn.f16x2.f32 %r624, %r626, %r625;
	// end inline asm
	mov.b32 	%r629, %f1334;
	mov.b32 	%r628, %f235;
	// begin inline asm
	cvt.rn.f16x2.f32 %r627, %r629, %r628;
	// end inline asm
	shl.b32 	%r147, %r5, 12;
	shl.b32 	%r639, %r3, 3;
	and.b32  	%r640, %r639, 64;
	and.b32  	%r641, %r11, 32;
	or.b32  	%r642, %r640, %r1;
	or.b32  	%r148, %r642, %r641;
	and.b32  	%r643, %r9, 28;
	shl.b32 	%r644, %r4, 5;
	and.b32  	%r645, %r644, 96;
	or.b32  	%r149, %r645, %r643;
	and.b32  	%r150, %r644, 128;
	or.b32  	%r646, %r149, %r150;
	or.b32  	%r151, %r646, %r147;
	and.b32  	%r152, %r3, 8;
	shr.u32 	%r647, %r1, 3;
	mul.lo.s32 	%r648, %r647, 260;
	shr.u32 	%r649, %r1, 1;
	bfe.u32 	%r650, %r1, 1, 1;
	shl.b32 	%r651, %r3, 4;
	or.b32  	%r652, %r651, %r152;
	shr.u32 	%r653, %r652, 2;
	and.b32  	%r654, %r653, 30;
	and.b32  	%r655, %r1, 1;
	bfe.u32 	%r656, %r1, 2, 1;
	mad.lo.s32 	%r657, %r23, 65, %r648;
	mad.lo.s32 	%r658, %r655, 2080, %r657;
	mad.lo.s32 	%r659, %r650, 1040, %r658;
	mad.lo.s32 	%r660, %r656, 520, %r659;
	add.s32 	%r661, %r660, %r654;
	mul.wide.u32 	%rd62, %r661, 4;
	mov.u64 	%rd63, shmem;
	add.s64 	%rd5, %rd63, %rd62;
	add.s32 	%r662, %r661, 32;
	mul.wide.u32 	%rd64, %r662, 4;
	add.s64 	%rd6, %rd63, %rd64;
	add.s32 	%r663, %r661, 1;
	mul.wide.u32 	%rd65, %r663, 4;
	add.s64 	%rd7, %rd63, %rd65;
	add.s32 	%r664, %r661, 33;
	mul.wide.u32 	%rd66, %r664, 4;
	add.s64 	%rd8, %rd63, %rd66;
	add.s32 	%r665, %r661, 130;
	mul.wide.u32 	%rd67, %r665, 4;
	add.s64 	%rd9, %rd63, %rd67;
	add.s32 	%r666, %r661, 162;
	mul.wide.u32 	%rd68, %r666, 4;
	add.s64 	%rd10, %rd63, %rd68;
	add.s32 	%r667, %r661, 131;
	mul.wide.u32 	%rd69, %r667, 4;
	add.s64 	%rd11, %rd63, %rd69;
	add.s32 	%r668, %r661, 163;
	mul.wide.u32 	%rd70, %r668, 4;
	add.s64 	%rd12, %rd63, %rd70;
	mul.lo.s32 	%r669, %r22, 260;
	mul.lo.s32 	%r670, %r25, 1040;
	mul.lo.s32 	%r671, %r20, 130;
	and.b32  	%r672, %r2, 32;
	mul.lo.s32 	%r673, %r19, 65;
	mul.lo.s32 	%r674, %r23, 520;
	add.s32 	%r675, %r671, %r649;
	add.s32 	%r676, %r675, %r672;
	add.s32 	%r677, %r676, %r674;
	add.s32 	%r678, %r677, %r669;
	add.s32 	%r679, %r678, %r670;
	add.s32 	%r680, %r679, %r673;
	or.b32  	%r681, %r649, 8;
	add.s32 	%r682, %r671, %r681;
	add.s32 	%r683, %r682, %r672;
	add.s32 	%r684, %r683, %r674;
	add.s32 	%r685, %r684, %r669;
	add.s32 	%r686, %r685, %r670;
	add.s32 	%r687, %r686, %r673;
	or.b32  	%r688, %r649, 16;
	add.s32 	%r689, %r671, %r688;
	add.s32 	%r690, %r689, %r672;
	add.s32 	%r691, %r690, %r674;
	add.s32 	%r692, %r691, %r669;
	add.s32 	%r693, %r692, %r670;
	add.s32 	%r694, %r693, %r673;
	or.b32  	%r695, %r649, 24;
	add.s32 	%r696, %r671, %r695;
	add.s32 	%r697, %r696, %r672;
	add.s32 	%r698, %r697, %r674;
	add.s32 	%r699, %r698, %r669;
	add.s32 	%r700, %r699, %r670;
	add.s32 	%r701, %r700, %r673;
	or.b32  	%r702, %r649, 2080;
	add.s32 	%r703, %r702, %r671;
	add.s32 	%r704, %r703, %r672;
	add.s32 	%r705, %r704, %r674;
	add.s32 	%r706, %r705, %r669;
	add.s32 	%r707, %r706, %r670;
	add.s32 	%r708, %r707, %r673;
	or.b32  	%r709, %r649, 2088;
	add.s32 	%r710, %r709, %r671;
	add.s32 	%r711, %r710, %r672;
	add.s32 	%r712, %r711, %r674;
	add.s32 	%r713, %r712, %r669;
	add.s32 	%r714, %r713, %r670;
	add.s32 	%r715, %r714, %r673;
	or.b32  	%r716, %r649, 2096;
	add.s32 	%r717, %r716, %r671;
	add.s32 	%r718, %r717, %r672;
	add.s32 	%r719, %r718, %r674;
	add.s32 	%r720, %r719, %r669;
	add.s32 	%r721, %r720, %r670;
	add.s32 	%r722, %r721, %r673;
	or.b32  	%r723, %r649, 2104;
	add.s32 	%r724, %r723, %r671;
	add.s32 	%r725, %r724, %r672;
	add.s32 	%r726, %r725, %r674;
	add.s32 	%r727, %r726, %r669;
	add.s32 	%r728, %r727, %r670;
	add.s32 	%r729, %r728, %r673;
	or.b32  	%r730, %r15, %r12;
	or.b32  	%r731, %r730, %r13;
	or.b32  	%r732, %r731, %r10;
	shr.u32 	%r733, %r732, 1;
	mul.lo.s32 	%r734, %r733, 65;
	or.b32  	%r735, %r672, %r649;
	add.s32 	%r736, %r735, %r734;
	or.b32  	%r737, %r672, %r681;
	add.s32 	%r738, %r737, %r734;
	or.b32  	%r739, %r672, %r688;
	add.s32 	%r740, %r739, %r734;
	or.b32  	%r741, %r672, %r695;
	add.s32 	%r742, %r741, %r734;
	shl.b32 	%r743, %r4, 4;
	and.b32  	%r744, %r743, 1920;
	add.s32 	%r745, %r734, 2080;
	add.s32 	%r746, %r735, %r745;
	add.s32 	%r747, %r737, %r745;
	add.s32 	%r748, %r739, %r745;
	add.s32 	%r749, %r741, %r745;
	shl.b32 	%r750, %r1, 1;
	or.b32  	%r751, %r750, %r23;
	mul.lo.s32 	%r752, %r751, 65;
	add.s32 	%r753, %r654, %r752;
	mul.wide.u32 	%rd71, %r753, 4;
	add.s64 	%rd13, %rd63, %rd71;
	cvt.u64.u32 	%rd72, %r654;
	cvt.u64.u32 	%rd73, %r752;
	add.s64 	%rd74, %rd73, %rd72;
	shl.b64 	%rd75, %rd74, 2;
	add.s64 	%rd14, %rd63, %rd75;
	or.b32  	%r754, %r751, 32;
	mul.lo.s32 	%r755, %r754, 65;
	add.s32 	%r756, %r654, %r755;
	mul.wide.u32 	%rd76, %r756, 4;
	add.s64 	%rd15, %rd63, %rd76;
	cvt.u64.u32 	%rd77, %r755;
	add.s64 	%rd78, %rd72, %rd77;
	shl.b64 	%rd79, %rd78, 2;
	add.s64 	%rd16, %rd63, %rd79;
	shl.b32 	%r757, %r7, 19;
	add.s32 	%r758, %r757, -1572864;
	shl.b32 	%r759, %r1, 2;
	or.b32  	%r760, %r24, %r759;
	cvt.s64.s32 	%rd17, %r758;
	or.b32  	%r761, %r760, %r744;
	shl.b32 	%r153, %r761, 8;
	or.b32  	%r154, %r153, 16384;
	mul.wide.u32 	%rd18, %r749, 4;
	mul.wide.u32 	%rd19, %r748, 4;
	mul.wide.u32 	%rd20, %r747, 4;
	mul.wide.u32 	%rd21, %r746, 4;
	mul.wide.u32 	%rd22, %r742, 4;
	mul.wide.u32 	%rd23, %r740, 4;
	mul.wide.u32 	%rd24, %r738, 4;
	mul.wide.u32 	%rd25, %r736, 4;
	mul.wide.u32 	%rd26, %r729, 4;
	mul.wide.u32 	%rd27, %r722, 4;
	mul.wide.u32 	%rd28, %r715, 4;
	mul.wide.u32 	%rd29, %r708, 4;
	mul.wide.u32 	%rd30, %r701, 4;
	mul.wide.u32 	%rd31, %r694, 4;
	mul.wide.u32 	%rd32, %r687, 4;
	mul.wide.u32 	%rd33, %r680, 4;
	setp.eq.s32 	%p312, %r152, 0;
	mov.u16 	%rs2381, 25600;
	mov.u16 	%rs2173, 21504;
	mov.u16 	%rs2389, 18432;
	mov.u16 	%rs2307, -14592;
	mov.u32 	%r16214, %r16193;
	mov.u32 	%r16263, %r16193;
	mov.u32 	%r16262, %r16193;
	mov.u32 	%r16261, %r16193;
	mov.u32 	%r16260, %r16193;
	mov.u32 	%r16259, %r16193;
	mov.u32 	%r16258, %r16193;
	mov.u32 	%r16257, %r16193;
	mov.u32 	%r16256, %r16193;
	mov.u32 	%r16255, %r16193;
	mov.u32 	%r16254, %r16193;
	mov.u32 	%r16253, %r16193;
	mov.u32 	%r16252, %r16193;
	mov.u32 	%r16251, %r16193;
	mov.u32 	%r16250, %r16193;
	mov.u32 	%r16249, %r16193;
	mov.u32 	%r16248, %r16193;
	mov.u32 	%r16247, %r16193;
	mov.u32 	%r16246, %r16193;
	mov.u32 	%r16245, %r16193;
	mov.u32 	%r16244, %r16193;
	mov.u32 	%r16243, %r16193;
	mov.u32 	%r16242, %r16193;
	mov.u32 	%r16241, %r16193;
	mov.u32 	%r16240, %r16193;
	bra.uni 	LBB0_182;
LBB0_186:                               // %L63833
                                        //   in Loop: Header=BB0_182 Depth=1
	setp.ne.s32 	%p326, %r16214, 130816;
	add.s32 	%r16214, %r16214, 256;
	add.s32 	%r16190, %r16214, %r5;
	setp.gt.s32 	%p327, %r6, %r16190;
	and.pred  	%p328, %p326, %p327;
	@%p328 bra 	LBB0_182;
	bra.uni 	LBB0_187;
LBB0_182:                               // %L2193
                                        // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_183 Depth 2
	or.b32  	%r795, %r148, %r16214;
	shl.b32 	%r796, %r795, 12;
	add.s32 	%r797, %r151, %r796;
	shr.s32 	%r798, %r797, 31;
	shr.u32 	%r799, %r798, 3;
	add.s32 	%r800, %r797, %r799;
	shr.s32 	%r801, %r800, 29;
	setp.lt.s32 	%p313, %r797, 0;
	and.b32  	%r802, %r800, -536870912;
	setp.ne.s32 	%p314, %r802, %r797;
	and.pred  	%p315, %p313, %p314;
	selp.u32 	%r803, 1, 0, %p315;
	sub.s32 	%r804, %r803, %r801;
	shl.b32 	%r805, %r804, 29;
	add.s32 	%r806, %r805, %r797;
	mul.wide.s32 	%rd81, %r806, 4;
	add.s64 	%rd82, %rd2, %rd81;
	ld.global.v4.u32 	{%r807, %r808, %r809, %r810}, [%rd82];
	or.b32  	%r811, %r796, %r149;
	or.b32  	%r812, %r811, %r150;
	or.b32  	%r813, %r812, 65536;
	add.s32 	%r814, %r813, %r147;
	shr.s32 	%r815, %r814, 31;
	shr.u32 	%r816, %r815, 3;
	add.s32 	%r817, %r814, %r816;
	shr.s32 	%r818, %r817, 29;
	setp.lt.s32 	%p316, %r814, 0;
	and.b32  	%r819, %r817, -536870912;
	setp.ne.s32 	%p317, %r819, %r814;
	and.pred  	%p318, %p316, %p317;
	selp.u32 	%r820, 1, 0, %p318;
	sub.s32 	%r821, %r820, %r818;
	shl.b32 	%r822, %r821, 29;
	add.s32 	%r823, %r822, %r814;
	mul.wide.s32 	%rd83, %r823, 4;
	add.s64 	%rd84, %rd2, %rd83;
	ld.global.v4.u32 	{%r824, %r825, %r826, %r827}, [%rd84];
	selp.b32 	%r828, %r809, %r807, %p312;
	shfl.sync.bfly.b32	%r829, %r828, 8, 31, -1;
	selp.b32 	%r763, %r807, %r829, %p312;
	selp.b32 	%r764, %r829, %r809, %p312;
	selp.b32 	%r830, %r810, %r808, %p312;
	shfl.sync.bfly.b32	%r831, %r830, 8, 31, -1;
	selp.b32 	%r771, %r808, %r831, %p312;
	selp.b32 	%r772, %r831, %r810, %p312;
	selp.b32 	%r832, %r826, %r824, %p312;
	shfl.sync.bfly.b32	%r833, %r832, 8, 31, -1;
	selp.b32 	%r779, %r824, %r833, %p312;
	selp.b32 	%r780, %r833, %r826, %p312;
	selp.b32 	%r834, %r827, %r825, %p312;
	shfl.sync.bfly.b32	%r835, %r834, 8, 31, -1;
	selp.b32 	%r787, %r825, %r835, %p312;
	selp.b32 	%r788, %r835, %r827, %p312;
	mov.u32 	%r789, 21520;
	// begin inline asm
	prmt.b32 %r762, %r763, %r764, %r789;
	// end inline asm
	mov.u32 	%r793, 30258;
	// begin inline asm
	prmt.b32 %r766, %r763, %r764, %r793;
	// end inline asm
	// begin inline asm
	prmt.b32 %r770, %r771, %r772, %r789;
	// end inline asm
	// begin inline asm
	prmt.b32 %r774, %r771, %r772, %r793;
	// end inline asm
	// begin inline asm
	prmt.b32 %r778, %r779, %r780, %r789;
	// end inline asm
	// begin inline asm
	prmt.b32 %r782, %r779, %r780, %r793;
	// end inline asm
	// begin inline asm
	prmt.b32 %r786, %r787, %r788, %r789;
	// end inline asm
	// begin inline asm
	prmt.b32 %r790, %r787, %r788, %r793;
	// end inline asm
	st.shared.u32 	[%rd5], %r762;
	st.shared.u32 	[%rd6], %r766;
	st.shared.u32 	[%rd7], %r770;
	st.shared.u32 	[%rd8], %r774;
	st.shared.u32 	[%rd9], %r778;
	st.shared.u32 	[%rd10], %r782;
	st.shared.u32 	[%rd11], %r786;
	st.shared.u32 	[%rd12], %r790;
	bar.sync 	0;
	mov.u32 	%r16239, 256;
	mov.u64 	%rd126, %rd63;
LBB0_183:                               // %L9213
                                        //   Parent Loop BB0_182 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	add.s64 	%rd85, %rd126, %rd33;
	ld.shared.u32 	%r16100, [%rd85];
	add.s64 	%rd86, %rd126, %rd32;
	ld.shared.u32 	%r16101, [%rd86];
	add.s64 	%rd87, %rd126, %rd31;
	ld.shared.u32 	%r16102, [%rd87];
	add.s64 	%rd88, %rd126, %rd30;
	ld.shared.u32 	%r16103, [%rd88];
	add.s64 	%rd89, %rd126, %rd29;
	ld.shared.u32 	%r16104, [%rd89];
	add.s64 	%rd90, %rd126, %rd28;
	ld.shared.u32 	%r16105, [%rd90];
	add.s64 	%rd91, %rd126, %rd27;
	ld.shared.u32 	%r16106, [%rd91];
	add.s64 	%rd92, %rd126, %rd26;
	ld.shared.u32 	%r16107, [%rd92];
	// begin inline asm
	mov.b32 %r841, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r852, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r840, %r16100, -2004318072;
	mov.u32 	%r839, 983055;
	// begin inline asm
	lop3.b32 %r838, %r839, %r840, %r841, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r842, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r843, %r841, %r842;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r846, %r838, %r843;
	// end inline asm
	mov.u32 	%r850, 15728880;
	// begin inline asm
	lop3.b32 %r849, %r850, %r840, %r852, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r853, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r854, %r852, %r853;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r857, %r849, %r854;
	// end inline asm
	shr.u32 	%r862, %r840, 8;
	// begin inline asm
	lop3.b32 %r860, %r839, %r862, %r841, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r864, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r865, %r841, %r864;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r868, %r860, %r865;
	// end inline asm
	// begin inline asm
	lop3.b32 %r871, %r850, %r862, %r852, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r875, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r876, %r852, %r875;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r879, %r871, %r876;
	// end inline asm
	// begin inline asm
	mov.b32 %r887, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r898, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r886, %r16101, -2004318072;
	// begin inline asm
	lop3.b32 %r884, %r839, %r886, %r887, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r888, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r889, %r887, %r888;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r892, %r884, %r889;
	// end inline asm
	// begin inline asm
	lop3.b32 %r895, %r850, %r886, %r898, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r899, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r900, %r898, %r899;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r903, %r895, %r900;
	// end inline asm
	shr.u32 	%r908, %r886, 8;
	// begin inline asm
	lop3.b32 %r906, %r839, %r908, %r887, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r910, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r911, %r887, %r910;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r914, %r906, %r911;
	// end inline asm
	// begin inline asm
	lop3.b32 %r917, %r850, %r908, %r898, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r921, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r922, %r898, %r921;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r925, %r917, %r922;
	// end inline asm
	// begin inline asm
	mov.b32 %r933, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r944, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r932, %r16102, -2004318072;
	// begin inline asm
	lop3.b32 %r930, %r839, %r932, %r933, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r934, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r935, %r933, %r934;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r938, %r930, %r935;
	// end inline asm
	// begin inline asm
	lop3.b32 %r941, %r850, %r932, %r944, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r945, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r946, %r944, %r945;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r949, %r941, %r946;
	// end inline asm
	shr.u32 	%r954, %r932, 8;
	// begin inline asm
	lop3.b32 %r952, %r839, %r954, %r933, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r956, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r957, %r933, %r956;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r960, %r952, %r957;
	// end inline asm
	// begin inline asm
	lop3.b32 %r963, %r850, %r954, %r944, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r967, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r968, %r944, %r967;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r971, %r963, %r968;
	// end inline asm
	// begin inline asm
	mov.b32 %r979, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r990, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r978, %r16103, -2004318072;
	// begin inline asm
	lop3.b32 %r976, %r839, %r978, %r979, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r980, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r981, %r979, %r980;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r984, %r976, %r981;
	// end inline asm
	// begin inline asm
	lop3.b32 %r987, %r850, %r978, %r990, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r991, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r992, %r990, %r991;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r995, %r987, %r992;
	// end inline asm
	shr.u32 	%r1000, %r978, 8;
	// begin inline asm
	lop3.b32 %r998, %r839, %r1000, %r979, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1002, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1003, %r979, %r1002;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1006, %r998, %r1003;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1009, %r850, %r1000, %r990, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1013, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1014, %r990, %r1013;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1017, %r1009, %r1014;
	// end inline asm
	// begin inline asm
	mov.b32 %r1025, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1036, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1024, %r16104, -2004318072;
	// begin inline asm
	lop3.b32 %r1022, %r839, %r1024, %r1025, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1026, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1027, %r1025, %r1026;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1030, %r1022, %r1027;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1033, %r850, %r1024, %r1036, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1037, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1038, %r1036, %r1037;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1041, %r1033, %r1038;
	// end inline asm
	shr.u32 	%r1046, %r1024, 8;
	// begin inline asm
	lop3.b32 %r1044, %r839, %r1046, %r1025, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1048, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1049, %r1025, %r1048;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1052, %r1044, %r1049;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1055, %r850, %r1046, %r1036, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1059, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1060, %r1036, %r1059;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1063, %r1055, %r1060;
	// end inline asm
	// begin inline asm
	mov.b32 %r1071, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1082, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1070, %r16105, -2004318072;
	// begin inline asm
	lop3.b32 %r1068, %r839, %r1070, %r1071, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1072, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1073, %r1071, %r1072;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1076, %r1068, %r1073;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1079, %r850, %r1070, %r1082, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1083, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1084, %r1082, %r1083;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1087, %r1079, %r1084;
	// end inline asm
	shr.u32 	%r1092, %r1070, 8;
	// begin inline asm
	lop3.b32 %r1090, %r839, %r1092, %r1071, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1094, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1095, %r1071, %r1094;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1098, %r1090, %r1095;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1101, %r850, %r1092, %r1082, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1105, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1106, %r1082, %r1105;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1109, %r1101, %r1106;
	// end inline asm
	// begin inline asm
	mov.b32 %r1117, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1128, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1116, %r16106, -2004318072;
	// begin inline asm
	lop3.b32 %r1114, %r839, %r1116, %r1117, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1118, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1119, %r1117, %r1118;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1122, %r1114, %r1119;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1125, %r850, %r1116, %r1128, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1129, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1130, %r1128, %r1129;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1133, %r1125, %r1130;
	// end inline asm
	shr.u32 	%r1138, %r1116, 8;
	// begin inline asm
	lop3.b32 %r1136, %r839, %r1138, %r1117, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1140, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1141, %r1117, %r1140;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1144, %r1136, %r1141;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1147, %r850, %r1138, %r1128, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1151, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1152, %r1128, %r1151;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1155, %r1147, %r1152;
	// end inline asm
	// begin inline asm
	mov.b32 %r1163, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1174, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1162, %r16107, -2004318072;
	// begin inline asm
	lop3.b32 %r1160, %r839, %r1162, %r1163, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1164, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1165, %r1163, %r1164;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1168, %r1160, %r1165;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1171, %r850, %r1162, %r1174, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1175, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1176, %r1174, %r1175;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1179, %r1171, %r1176;
	// end inline asm
	shr.u32 	%r1184, %r1162, 8;
	// begin inline asm
	lop3.b32 %r1182, %r839, %r1184, %r1163, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1186, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1187, %r1163, %r1186;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1190, %r1182, %r1187;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1193, %r850, %r1184, %r1174, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1197, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1198, %r1174, %r1197;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1201, %r1193, %r1198;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1204, %r387;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1206, %r1204, %r846;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1209, %r387;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1211, %r1209, %r857;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1214, %r387;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1216, %r1214, %r868;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1219, %r387;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1221, %r1219, %r879;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1224, %r387;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1226, %r1224, %r892;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1229, %r387;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1231, %r1229, %r903;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1234, %r387;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1236, %r1234, %r914;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1239, %r387;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1241, %r1239, %r925;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1244, %r387;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1246, %r1244, %r938;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1249, %r387;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1251, %r1249, %r949;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1254, %r387;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1256, %r1254, %r960;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1259, %r387;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1261, %r1259, %r971;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1264, %r387;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1266, %r1264, %r984;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1269, %r387;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1271, %r1269, %r995;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1274, %r387;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1276, %r1274, %r1006;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1279, %r387;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1281, %r1279, %r1017;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1284, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1286, %r1284, %r1030;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1289, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1291, %r1289, %r1041;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1294, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1296, %r1294, %r1052;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1299, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1301, %r1299, %r1063;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1304, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1306, %r1304, %r1076;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1309, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1311, %r1309, %r1087;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1314, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1316, %r1314, %r1098;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1319, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1321, %r1319, %r1109;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1324, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1326, %r1324, %r1122;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1329, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1331, %r1329, %r1133;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1334, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1336, %r1334, %r1144;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1339, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1341, %r1339, %r1155;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1344, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1346, %r1344, %r1168;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1349, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1351, %r1349, %r1179;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1354, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1356, %r1354, %r1190;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1359, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1361, %r1359, %r1201;
	// end inline asm
	// begin inline asm
	mov.b32 %r1369, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1380, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1368, %r16240, -2004318072;
	// begin inline asm
	lop3.b32 %r1366, %r839, %r1368, %r1369, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1370, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1371, %r1369, %r1370;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1374, %r1366, %r1371;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1377, %r850, %r1368, %r1380, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1381, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1382, %r1380, %r1381;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1385, %r1377, %r1382;
	// end inline asm
	shr.u32 	%r1390, %r1368, 8;
	// begin inline asm
	lop3.b32 %r1388, %r839, %r1390, %r1369, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1392, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1393, %r1369, %r1392;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1396, %r1388, %r1393;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1399, %r850, %r1390, %r1380, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1403, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1404, %r1380, %r1403;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1407, %r1399, %r1404;
	// end inline asm
	// begin inline asm
	mov.b32 %r1415, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1426, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1414, %r16241, -2004318072;
	// begin inline asm
	lop3.b32 %r1412, %r839, %r1414, %r1415, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1416, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1417, %r1415, %r1416;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1420, %r1412, %r1417;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1423, %r850, %r1414, %r1426, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1427, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1428, %r1426, %r1427;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1431, %r1423, %r1428;
	// end inline asm
	shr.u32 	%r1436, %r1414, 8;
	// begin inline asm
	lop3.b32 %r1434, %r839, %r1436, %r1415, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1438, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1439, %r1415, %r1438;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1442, %r1434, %r1439;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1445, %r850, %r1436, %r1426, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1449, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1450, %r1426, %r1449;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1453, %r1445, %r1450;
	// end inline asm
	// begin inline asm
	mov.b32 %r1461, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1472, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1460, %r16242, -2004318072;
	// begin inline asm
	lop3.b32 %r1458, %r839, %r1460, %r1461, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1462, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1463, %r1461, %r1462;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1466, %r1458, %r1463;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1469, %r850, %r1460, %r1472, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1473, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1474, %r1472, %r1473;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1477, %r1469, %r1474;
	// end inline asm
	shr.u32 	%r1482, %r1460, 8;
	// begin inline asm
	lop3.b32 %r1480, %r839, %r1482, %r1461, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1484, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1485, %r1461, %r1484;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1488, %r1480, %r1485;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1491, %r850, %r1482, %r1472, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1495, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1496, %r1472, %r1495;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1499, %r1491, %r1496;
	// end inline asm
	// begin inline asm
	mov.b32 %r1507, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1518, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1506, %r16243, -2004318072;
	// begin inline asm
	lop3.b32 %r1504, %r839, %r1506, %r1507, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1508, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1509, %r1507, %r1508;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1512, %r1504, %r1509;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1515, %r850, %r1506, %r1518, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1519, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1520, %r1518, %r1519;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1523, %r1515, %r1520;
	// end inline asm
	shr.u32 	%r1528, %r1506, 8;
	// begin inline asm
	lop3.b32 %r1526, %r839, %r1528, %r1507, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1530, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1531, %r1507, %r1530;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1534, %r1526, %r1531;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1537, %r850, %r1528, %r1518, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1541, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1542, %r1518, %r1541;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1545, %r1537, %r1542;
	// end inline asm
	// begin inline asm
	mov.b32 %r1553, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1564, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1552, %r16252, -2004318072;
	// begin inline asm
	lop3.b32 %r1550, %r839, %r1552, %r1553, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1554, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1555, %r1553, %r1554;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1558, %r1550, %r1555;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1561, %r850, %r1552, %r1564, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1565, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1566, %r1564, %r1565;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1569, %r1561, %r1566;
	// end inline asm
	shr.u32 	%r1574, %r1552, 8;
	// begin inline asm
	lop3.b32 %r1572, %r839, %r1574, %r1553, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1576, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1577, %r1553, %r1576;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1580, %r1572, %r1577;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1583, %r850, %r1574, %r1564, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1587, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1588, %r1564, %r1587;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1591, %r1583, %r1588;
	// end inline asm
	// begin inline asm
	mov.b32 %r1599, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1610, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1598, %r16253, -2004318072;
	// begin inline asm
	lop3.b32 %r1596, %r839, %r1598, %r1599, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1600, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1601, %r1599, %r1600;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1604, %r1596, %r1601;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1607, %r850, %r1598, %r1610, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1611, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1612, %r1610, %r1611;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1615, %r1607, %r1612;
	// end inline asm
	shr.u32 	%r1620, %r1598, 8;
	// begin inline asm
	lop3.b32 %r1618, %r839, %r1620, %r1599, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1622, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1623, %r1599, %r1622;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1626, %r1618, %r1623;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1629, %r850, %r1620, %r1610, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1633, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1634, %r1610, %r1633;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1637, %r1629, %r1634;
	// end inline asm
	// begin inline asm
	mov.b32 %r1645, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1656, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1644, %r16254, -2004318072;
	// begin inline asm
	lop3.b32 %r1642, %r839, %r1644, %r1645, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1646, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1647, %r1645, %r1646;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1650, %r1642, %r1647;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1653, %r850, %r1644, %r1656, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1657, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1658, %r1656, %r1657;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1661, %r1653, %r1658;
	// end inline asm
	shr.u32 	%r1666, %r1644, 8;
	// begin inline asm
	lop3.b32 %r1664, %r839, %r1666, %r1645, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1668, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1669, %r1645, %r1668;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1672, %r1664, %r1669;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1675, %r850, %r1666, %r1656, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1679, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1680, %r1656, %r1679;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1683, %r1675, %r1680;
	// end inline asm
	// begin inline asm
	mov.b32 %r1691, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1702, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1690, %r16255, -2004318072;
	// begin inline asm
	lop3.b32 %r1688, %r839, %r1690, %r1691, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1692, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1693, %r1691, %r1692;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1696, %r1688, %r1693;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1699, %r850, %r1690, %r1702, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1703, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1704, %r1702, %r1703;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1707, %r1699, %r1704;
	// end inline asm
	shr.u32 	%r1712, %r1690, 8;
	// begin inline asm
	lop3.b32 %r1710, %r839, %r1712, %r1691, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1714, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1715, %r1691, %r1714;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1718, %r1710, %r1715;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1721, %r850, %r1712, %r1702, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1725, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1726, %r1702, %r1725;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1729, %r1721, %r1726;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1732, %r279, %r1374, %r1206;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1736, %r279, %r1385, %r1211;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1740, %r279, %r1396, %r1216;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1744, %r279, %r1407, %r1221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1748, %r279, %r1420, %r1226;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1752, %r279, %r1431, %r1231;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1756, %r279, %r1442, %r1236;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1760, %r279, %r1453, %r1241;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1764, %r279, %r1466, %r1246;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1768, %r279, %r1477, %r1251;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1772, %r279, %r1488, %r1256;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1776, %r279, %r1499, %r1261;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1780, %r279, %r1512, %r1266;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1784, %r279, %r1523, %r1271;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1788, %r279, %r1534, %r1276;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1792, %r279, %r1545, %r1281;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1796, %r297, %r1558, %r1286;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1800, %r297, %r1569, %r1291;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1804, %r297, %r1580, %r1296;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1808, %r297, %r1591, %r1301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1812, %r297, %r1604, %r1306;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1816, %r297, %r1615, %r1311;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1820, %r297, %r1626, %r1316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1824, %r297, %r1637, %r1321;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1828, %r297, %r1650, %r1326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1832, %r297, %r1661, %r1331;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1836, %r297, %r1672, %r1336;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1840, %r297, %r1683, %r1341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1844, %r297, %r1696, %r1346;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1848, %r297, %r1707, %r1351;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1852, %r297, %r1718, %r1356;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1856, %r297, %r1729, %r1361;
	// end inline asm
	// begin inline asm
	mov.b32 %r1865, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1876, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1864, %r16244, -2004318072;
	// begin inline asm
	lop3.b32 %r1862, %r839, %r1864, %r1865, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1866, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1867, %r1865, %r1866;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1870, %r1862, %r1867;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1873, %r850, %r1864, %r1876, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1877, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1878, %r1876, %r1877;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1881, %r1873, %r1878;
	// end inline asm
	shr.u32 	%r1886, %r1864, 8;
	// begin inline asm
	lop3.b32 %r1884, %r839, %r1886, %r1865, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1888, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1889, %r1865, %r1888;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1892, %r1884, %r1889;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1895, %r850, %r1886, %r1876, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1899, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1900, %r1876, %r1899;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1903, %r1895, %r1900;
	// end inline asm
	// begin inline asm
	mov.b32 %r1911, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1922, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1910, %r16245, -2004318072;
	// begin inline asm
	lop3.b32 %r1908, %r839, %r1910, %r1911, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1912, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1913, %r1911, %r1912;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1916, %r1908, %r1913;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1919, %r850, %r1910, %r1922, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1923, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1924, %r1922, %r1923;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1927, %r1919, %r1924;
	// end inline asm
	shr.u32 	%r1932, %r1910, 8;
	// begin inline asm
	lop3.b32 %r1930, %r839, %r1932, %r1911, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1934, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1935, %r1911, %r1934;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1938, %r1930, %r1935;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1941, %r850, %r1932, %r1922, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1945, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1946, %r1922, %r1945;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1949, %r1941, %r1946;
	// end inline asm
	// begin inline asm
	mov.b32 %r1957, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1968, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1956, %r16246, -2004318072;
	// begin inline asm
	lop3.b32 %r1954, %r839, %r1956, %r1957, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1958, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1959, %r1957, %r1958;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1962, %r1954, %r1959;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1965, %r850, %r1956, %r1968, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1969, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1970, %r1968, %r1969;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1973, %r1965, %r1970;
	// end inline asm
	shr.u32 	%r1978, %r1956, 8;
	// begin inline asm
	lop3.b32 %r1976, %r839, %r1978, %r1957, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1980, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1981, %r1957, %r1980;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1984, %r1976, %r1981;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1987, %r850, %r1978, %r1968, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1991, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1992, %r1968, %r1991;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1995, %r1987, %r1992;
	// end inline asm
	// begin inline asm
	mov.b32 %r2003, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2014, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2002, %r16247, -2004318072;
	// begin inline asm
	lop3.b32 %r2000, %r839, %r2002, %r2003, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2004, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2005, %r2003, %r2004;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2008, %r2000, %r2005;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2011, %r850, %r2002, %r2014, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2015, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2016, %r2014, %r2015;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2019, %r2011, %r2016;
	// end inline asm
	shr.u32 	%r2024, %r2002, 8;
	// begin inline asm
	lop3.b32 %r2022, %r839, %r2024, %r2003, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2026, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2027, %r2003, %r2026;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2030, %r2022, %r2027;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2033, %r850, %r2024, %r2014, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2037, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2038, %r2014, %r2037;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2041, %r2033, %r2038;
	// end inline asm
	// begin inline asm
	mov.b32 %r2049, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2060, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2048, %r16256, -2004318072;
	// begin inline asm
	lop3.b32 %r2046, %r839, %r2048, %r2049, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2050, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2051, %r2049, %r2050;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2054, %r2046, %r2051;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2057, %r850, %r2048, %r2060, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2061, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2062, %r2060, %r2061;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2065, %r2057, %r2062;
	// end inline asm
	shr.u32 	%r2070, %r2048, 8;
	// begin inline asm
	lop3.b32 %r2068, %r839, %r2070, %r2049, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2072, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2073, %r2049, %r2072;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2076, %r2068, %r2073;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2079, %r850, %r2070, %r2060, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2083, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2084, %r2060, %r2083;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2087, %r2079, %r2084;
	// end inline asm
	// begin inline asm
	mov.b32 %r2095, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2106, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2094, %r16257, -2004318072;
	// begin inline asm
	lop3.b32 %r2092, %r839, %r2094, %r2095, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2096, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2097, %r2095, %r2096;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2100, %r2092, %r2097;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2103, %r850, %r2094, %r2106, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2107, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2108, %r2106, %r2107;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2111, %r2103, %r2108;
	// end inline asm
	shr.u32 	%r2116, %r2094, 8;
	// begin inline asm
	lop3.b32 %r2114, %r839, %r2116, %r2095, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2118, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2119, %r2095, %r2118;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2122, %r2114, %r2119;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2125, %r850, %r2116, %r2106, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2129, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2130, %r2106, %r2129;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2133, %r2125, %r2130;
	// end inline asm
	// begin inline asm
	mov.b32 %r2141, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2152, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2140, %r16258, -2004318072;
	// begin inline asm
	lop3.b32 %r2138, %r839, %r2140, %r2141, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2142, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2143, %r2141, %r2142;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2146, %r2138, %r2143;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2149, %r850, %r2140, %r2152, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2153, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2154, %r2152, %r2153;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2157, %r2149, %r2154;
	// end inline asm
	shr.u32 	%r2162, %r2140, 8;
	// begin inline asm
	lop3.b32 %r2160, %r839, %r2162, %r2141, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2164, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2165, %r2141, %r2164;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2168, %r2160, %r2165;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2171, %r850, %r2162, %r2152, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2175, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2176, %r2152, %r2175;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2179, %r2171, %r2176;
	// end inline asm
	// begin inline asm
	mov.b32 %r2187, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2198, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2186, %r16259, -2004318072;
	// begin inline asm
	lop3.b32 %r2184, %r839, %r2186, %r2187, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2188, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2189, %r2187, %r2188;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2192, %r2184, %r2189;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2195, %r850, %r2186, %r2198, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2199, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2200, %r2198, %r2199;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2203, %r2195, %r2200;
	// end inline asm
	shr.u32 	%r2208, %r2186, 8;
	// begin inline asm
	lop3.b32 %r2206, %r839, %r2208, %r2187, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2210, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2211, %r2187, %r2210;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2214, %r2206, %r2211;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2217, %r850, %r2208, %r2198, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2221, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2222, %r2198, %r2221;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2225, %r2217, %r2222;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2228, %r315;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2230, %r2228, %r1870, %r1732;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2234, %r315;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2236, %r2234, %r1881, %r1736;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2240, %r315;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2242, %r2240, %r1892, %r1740;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2246, %r315;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2248, %r2246, %r1903, %r1744;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2252, %r315;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2254, %r2252, %r1916, %r1748;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2258, %r315;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2260, %r2258, %r1927, %r1752;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2264, %r315;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2266, %r2264, %r1938, %r1756;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2270, %r315;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2272, %r2270, %r1949, %r1760;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2276, %r315;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2278, %r2276, %r1962, %r1764;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2282, %r315;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2284, %r2282, %r1973, %r1768;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2288, %r315;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2290, %r2288, %r1984, %r1772;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2294, %r315;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2296, %r2294, %r1995, %r1776;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2300, %r315;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2302, %r2300, %r2008, %r1780;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2306, %r315;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2308, %r2306, %r2019, %r1784;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2312, %r315;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2314, %r2312, %r2030, %r1788;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2318, %r315;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2320, %r2318, %r2041, %r1792;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2324, %r333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2326, %r2324, %r2054, %r1796;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2330, %r333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2332, %r2330, %r2065, %r1800;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2336, %r333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2338, %r2336, %r2076, %r1804;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2342, %r333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2344, %r2342, %r2087, %r1808;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2348, %r333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2350, %r2348, %r2100, %r1812;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2354, %r333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2356, %r2354, %r2111, %r1816;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2360, %r333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2362, %r2360, %r2122, %r1820;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2366, %r333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2368, %r2366, %r2133, %r1824;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2372, %r333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2374, %r2372, %r2146, %r1828;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2378, %r333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2380, %r2378, %r2157, %r1832;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2384, %r333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2386, %r2384, %r2168, %r1836;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2390, %r333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2392, %r2390, %r2179, %r1840;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2396, %r333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2398, %r2396, %r2192, %r1844;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2402, %r333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2404, %r2402, %r2203, %r1848;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2408, %r333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2410, %r2408, %r2214, %r1852;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2414, %r333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2416, %r2414, %r2225, %r1856;
	// end inline asm
	// begin inline asm
	mov.b32 %r2425, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2436, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2424, %r16248, -2004318072;
	// begin inline asm
	lop3.b32 %r2422, %r839, %r2424, %r2425, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2426, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2427, %r2425, %r2426;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2430, %r2422, %r2427;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2433, %r850, %r2424, %r2436, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2437, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2438, %r2436, %r2437;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2441, %r2433, %r2438;
	// end inline asm
	shr.u32 	%r2446, %r2424, 8;
	// begin inline asm
	lop3.b32 %r2444, %r839, %r2446, %r2425, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2448, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2449, %r2425, %r2448;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2452, %r2444, %r2449;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2455, %r850, %r2446, %r2436, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2459, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2460, %r2436, %r2459;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2463, %r2455, %r2460;
	// end inline asm
	// begin inline asm
	mov.b32 %r2471, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2482, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2470, %r16249, -2004318072;
	// begin inline asm
	lop3.b32 %r2468, %r839, %r2470, %r2471, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2472, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2473, %r2471, %r2472;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2476, %r2468, %r2473;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2479, %r850, %r2470, %r2482, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2483, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2484, %r2482, %r2483;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2487, %r2479, %r2484;
	// end inline asm
	shr.u32 	%r2492, %r2470, 8;
	// begin inline asm
	lop3.b32 %r2490, %r839, %r2492, %r2471, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2494, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2495, %r2471, %r2494;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2498, %r2490, %r2495;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2501, %r850, %r2492, %r2482, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2505, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2506, %r2482, %r2505;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2509, %r2501, %r2506;
	// end inline asm
	// begin inline asm
	mov.b32 %r2517, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2528, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2516, %r16250, -2004318072;
	// begin inline asm
	lop3.b32 %r2514, %r839, %r2516, %r2517, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2518, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2519, %r2517, %r2518;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2522, %r2514, %r2519;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2525, %r850, %r2516, %r2528, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2529, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2530, %r2528, %r2529;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2533, %r2525, %r2530;
	// end inline asm
	shr.u32 	%r2538, %r2516, 8;
	// begin inline asm
	lop3.b32 %r2536, %r839, %r2538, %r2517, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2540, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2541, %r2517, %r2540;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2544, %r2536, %r2541;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2547, %r850, %r2538, %r2528, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2551, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2552, %r2528, %r2551;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2555, %r2547, %r2552;
	// end inline asm
	// begin inline asm
	mov.b32 %r2563, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2574, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2562, %r16251, -2004318072;
	// begin inline asm
	lop3.b32 %r2560, %r839, %r2562, %r2563, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2564, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2565, %r2563, %r2564;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2568, %r2560, %r2565;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2571, %r850, %r2562, %r2574, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2575, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2576, %r2574, %r2575;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2579, %r2571, %r2576;
	// end inline asm
	shr.u32 	%r2584, %r2562, 8;
	// begin inline asm
	lop3.b32 %r2582, %r839, %r2584, %r2563, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2586, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2587, %r2563, %r2586;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2590, %r2582, %r2587;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2593, %r850, %r2584, %r2574, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2597, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2598, %r2574, %r2597;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2601, %r2593, %r2598;
	// end inline asm
	// begin inline asm
	mov.b32 %r2609, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2620, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2608, %r16260, -2004318072;
	// begin inline asm
	lop3.b32 %r2606, %r839, %r2608, %r2609, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2610, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2611, %r2609, %r2610;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2614, %r2606, %r2611;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2617, %r850, %r2608, %r2620, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2621, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2622, %r2620, %r2621;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2625, %r2617, %r2622;
	// end inline asm
	shr.u32 	%r2630, %r2608, 8;
	// begin inline asm
	lop3.b32 %r2628, %r839, %r2630, %r2609, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2632, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2633, %r2609, %r2632;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2636, %r2628, %r2633;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2639, %r850, %r2630, %r2620, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2643, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2644, %r2620, %r2643;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2647, %r2639, %r2644;
	// end inline asm
	// begin inline asm
	mov.b32 %r2655, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2666, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2654, %r16261, -2004318072;
	// begin inline asm
	lop3.b32 %r2652, %r839, %r2654, %r2655, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2656, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2657, %r2655, %r2656;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2660, %r2652, %r2657;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2663, %r850, %r2654, %r2666, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2667, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2668, %r2666, %r2667;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2671, %r2663, %r2668;
	// end inline asm
	shr.u32 	%r2676, %r2654, 8;
	// begin inline asm
	lop3.b32 %r2674, %r839, %r2676, %r2655, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2678, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2679, %r2655, %r2678;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2682, %r2674, %r2679;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2685, %r850, %r2676, %r2666, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2689, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2690, %r2666, %r2689;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2693, %r2685, %r2690;
	// end inline asm
	// begin inline asm
	mov.b32 %r2701, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2712, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2700, %r16262, -2004318072;
	// begin inline asm
	lop3.b32 %r2698, %r839, %r2700, %r2701, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2702, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2703, %r2701, %r2702;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2706, %r2698, %r2703;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2709, %r850, %r2700, %r2712, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2713, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2714, %r2712, %r2713;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2717, %r2709, %r2714;
	// end inline asm
	shr.u32 	%r2722, %r2700, 8;
	// begin inline asm
	lop3.b32 %r2720, %r839, %r2722, %r2701, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2724, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2725, %r2701, %r2724;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2728, %r2720, %r2725;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2731, %r850, %r2722, %r2712, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2735, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2736, %r2712, %r2735;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2739, %r2731, %r2736;
	// end inline asm
	// begin inline asm
	mov.b32 %r2747, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2758, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2746, %r16263, -2004318072;
	// begin inline asm
	lop3.b32 %r2744, %r839, %r2746, %r2747, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2748, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2749, %r2747, %r2748;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2752, %r2744, %r2749;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2755, %r850, %r2746, %r2758, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2759, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2760, %r2758, %r2759;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2763, %r2755, %r2760;
	// end inline asm
	shr.u32 	%r2768, %r2746, 8;
	// begin inline asm
	lop3.b32 %r2766, %r839, %r2768, %r2747, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2770, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2771, %r2747, %r2770;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2774, %r2766, %r2771;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2777, %r850, %r2768, %r2758, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2781, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2782, %r2758, %r2781;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2785, %r2777, %r2782;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2923, %r351, %r2430, %r2230;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2920, %r351, %r2441, %r2236;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2932, %r351, %r2452, %r2242;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2929, %r351, %r2463, %r2248;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2941, %r351, %r2476, %r2254;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2938, %r351, %r2487, %r2260;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2950, %r351, %r2498, %r2266;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2947, %r351, %r2509, %r2272;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2959, %r351, %r2522, %r2278;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2956, %r351, %r2533, %r2284;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2968, %r351, %r2544, %r2290;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2965, %r351, %r2555, %r2296;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2977, %r351, %r2568, %r2302;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2974, %r351, %r2579, %r2308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2986, %r351, %r2590, %r2314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2983, %r351, %r2601, %r2320;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2995, %r369, %r2614, %r2326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2992, %r369, %r2625, %r2332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3004, %r369, %r2636, %r2338;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3001, %r369, %r2647, %r2344;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3013, %r369, %r2660, %r2350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3010, %r369, %r2671, %r2356;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3022, %r369, %r2682, %r2362;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3019, %r369, %r2693, %r2368;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3031, %r369, %r2706, %r2374;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3028, %r369, %r2717, %r2380;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3040, %r369, %r2728, %r2386;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3037, %r369, %r2739, %r2392;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3049, %r369, %r2752, %r2398;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3046, %r369, %r2763, %r2404;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3058, %r369, %r2774, %r2410;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3055, %r369, %r2785, %r2416;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2916, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2918, %r2916, %r2920;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2921, %r433, %r2923, %r2918;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2925, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2927, %r2925, %r2929;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2930, %r433, %r2932, %r2927;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2934, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2936, %r2934, %r2938;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2939, %r433, %r2941, %r2936;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2943, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2945, %r2943, %r2947;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2948, %r433, %r2950, %r2945;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2952, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2954, %r2952, %r2956;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2957, %r433, %r2959, %r2954;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2961, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2963, %r2961, %r2965;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2966, %r433, %r2968, %r2963;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2970, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2972, %r2970, %r2974;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2975, %r433, %r2977, %r2972;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2979, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2981, %r2979, %r2983;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2984, %r433, %r2986, %r2981;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2988, %r442;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2990, %r2988, %r2992;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2993, %r436, %r2995, %r2990;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2997, %r442;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2999, %r2997, %r3001;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3002, %r436, %r3004, %r2999;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3006, %r442;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3008, %r3006, %r3010;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3011, %r436, %r3013, %r3008;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3015, %r442;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3017, %r3015, %r3019;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3020, %r436, %r3022, %r3017;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3024, %r442;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3026, %r3024, %r3028;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3029, %r436, %r3031, %r3026;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3033, %r442;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3035, %r3033, %r3037;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3038, %r436, %r3040, %r3035;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3042, %r442;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3044, %r3042, %r3046;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3047, %r436, %r3049, %r3044;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3051, %r442;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3053, %r3051, %r3055;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3056, %r436, %r3058, %r3053;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3060, %r439, %r2923;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3063, %r433, %r2920, %r3060;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3067, %r439, %r2932;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3070, %r433, %r2929, %r3067;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3074, %r439, %r2941;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3077, %r433, %r2938, %r3074;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3081, %r439, %r2950;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3084, %r433, %r2947, %r3081;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3088, %r439, %r2959;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3091, %r433, %r2956, %r3088;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3095, %r439, %r2968;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3098, %r433, %r2965, %r3095;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3102, %r439, %r2977;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3105, %r433, %r2974, %r3102;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3109, %r439, %r2986;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3112, %r433, %r2983, %r3109;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3116, %r442, %r2995;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3119, %r436, %r2992, %r3116;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3123, %r442, %r3004;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3126, %r436, %r3001, %r3123;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3130, %r442, %r3013;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3133, %r436, %r3010, %r3130;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3137, %r442, %r3022;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3140, %r436, %r3019, %r3137;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3144, %r442, %r3031;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3147, %r436, %r3028, %r3144;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3151, %r442, %r3040;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3154, %r436, %r3037, %r3151;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3158, %r442, %r3049;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3161, %r436, %r3046, %r3158;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3165, %r442, %r3058;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3168, %r436, %r3055, %r3165;
	// end inline asm
	mov.u32 	%r3180, 0;
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3339, %r3336}, {%r481, %r487, %r484, %r490}, {%r2921, %r3063}, {%r3180, %r3180};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3348, %r3345}, {%r481, %r487, %r484, %r490}, {%r2930, %r3070}, {%r3180, %r3180};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3357, %r3354}, {%r481, %r487, %r484, %r490}, {%r2939, %r3077}, {%r3180, %r3180};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3366, %r3363}, {%r481, %r487, %r484, %r490}, {%r2948, %r3084}, {%r3180, %r3180};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3375, %r3372}, {%r481, %r487, %r484, %r490}, {%r2957, %r3091}, {%r3180, %r3180};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3384, %r3381}, {%r481, %r487, %r484, %r490}, {%r2966, %r3098}, {%r3180, %r3180};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3393, %r3390}, {%r481, %r487, %r484, %r490}, {%r2975, %r3105}, {%r3180, %r3180};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3402, %r3399}, {%r481, %r487, %r484, %r490}, {%r2984, %r3112}, {%r3180, %r3180};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3411, %r3408}, {%r481, %r487, %r484, %r490}, {%r2993, %r3119}, {%r3180, %r3180};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3420, %r3417}, {%r481, %r487, %r484, %r490}, {%r3002, %r3126}, {%r3180, %r3180};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3429, %r3426}, {%r481, %r487, %r484, %r490}, {%r3011, %r3133}, {%r3180, %r3180};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3438, %r3435}, {%r481, %r487, %r484, %r490}, {%r3020, %r3140}, {%r3180, %r3180};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3447, %r3444}, {%r481, %r487, %r484, %r490}, {%r3029, %r3147}, {%r3180, %r3180};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3456, %r3453}, {%r481, %r487, %r484, %r490}, {%r3038, %r3154}, {%r3180, %r3180};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3465, %r3462}, {%r481, %r487, %r484, %r490}, {%r3047, %r3161}, {%r3180, %r3180};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3474, %r3471}, {%r481, %r487, %r484, %r490}, {%r3056, %r3168}, {%r3180, %r3180};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3332, %r531;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3334, %r3332, %r3336;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3337, %r528, %r3339, %r3334;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3341, %r531;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3343, %r3341, %r3345;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3346, %r528, %r3348, %r3343;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3350, %r531;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3352, %r3350, %r3354;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3355, %r528, %r3357, %r3352;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3359, %r531;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3361, %r3359, %r3363;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3364, %r528, %r3366, %r3361;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3368, %r531;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3370, %r3368, %r3372;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3373, %r528, %r3375, %r3370;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3377, %r531;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3379, %r3377, %r3381;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3382, %r528, %r3384, %r3379;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3386, %r531;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3388, %r3386, %r3390;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3391, %r528, %r3393, %r3388;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3395, %r531;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3397, %r3395, %r3399;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3400, %r528, %r3402, %r3397;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3404, %r531;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3406, %r3404, %r3408;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3409, %r528, %r3411, %r3406;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3413, %r531;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3415, %r3413, %r3417;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3418, %r528, %r3420, %r3415;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3422, %r531;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3424, %r3422, %r3426;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3427, %r528, %r3429, %r3424;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3431, %r531;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3433, %r3431, %r3435;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3436, %r528, %r3438, %r3433;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3440, %r531;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3442, %r3440, %r3444;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3445, %r528, %r3447, %r3442;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3449, %r531;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3451, %r3449, %r3453;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3454, %r528, %r3456, %r3451;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3458, %r531;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3460, %r3458, %r3462;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3463, %r528, %r3465, %r3460;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3467, %r531;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3469, %r3467, %r3471;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3472, %r528, %r3474, %r3469;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3476, %r531, %r3339;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3479, %r528, %r3336, %r3476;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3483, %r531, %r3348;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3486, %r528, %r3345, %r3483;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3490, %r531, %r3357;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3493, %r528, %r3354, %r3490;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3497, %r531, %r3366;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3500, %r528, %r3363, %r3497;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3504, %r531, %r3375;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3507, %r528, %r3372, %r3504;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3511, %r531, %r3384;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3514, %r528, %r3381, %r3511;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3518, %r531, %r3393;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3521, %r528, %r3390, %r3518;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3525, %r531, %r3402;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3528, %r528, %r3399, %r3525;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3532, %r531, %r3411;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3535, %r528, %r3408, %r3532;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3539, %r531, %r3420;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3542, %r528, %r3417, %r3539;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3546, %r531, %r3429;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3549, %r528, %r3426, %r3546;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3553, %r531, %r3438;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3556, %r528, %r3435, %r3553;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3560, %r531, %r3447;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3563, %r528, %r3444, %r3560;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3567, %r531, %r3456;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3570, %r528, %r3453, %r3567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3574, %r531, %r3465;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3577, %r528, %r3462, %r3574;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3581, %r531, %r3474;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3584, %r528, %r3471, %r3581;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3877, %r3880}, {%r571, %r577, %r574, %r580}, {%r3337, %r3479}, {%r3180, %r3180};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3883, %r3886}, {%r571, %r577, %r574, %r580}, {%r3346, %r3486}, {%r3180, %r3180};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3889, %r3892}, {%r571, %r577, %r574, %r580}, {%r3355, %r3493}, {%r3180, %r3180};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3895, %r3898}, {%r571, %r577, %r574, %r580}, {%r3364, %r3500}, {%r3180, %r3180};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3901, %r3904}, {%r571, %r577, %r574, %r580}, {%r3373, %r3507}, {%r3180, %r3180};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3907, %r3910}, {%r571, %r577, %r574, %r580}, {%r3382, %r3514}, {%r3180, %r3180};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3913, %r3916}, {%r571, %r577, %r574, %r580}, {%r3391, %r3521}, {%r3180, %r3180};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3919, %r3922}, {%r571, %r577, %r574, %r580}, {%r3400, %r3528}, {%r3180, %r3180};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3878, %r3881}, {%r571, %r577, %r574, %r580}, {%r3409, %r3535}, {%r3180, %r3180};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3884, %r3887}, {%r571, %r577, %r574, %r580}, {%r3418, %r3542}, {%r3180, %r3180};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3890, %r3893}, {%r571, %r577, %r574, %r580}, {%r3427, %r3549}, {%r3180, %r3180};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3896, %r3899}, {%r571, %r577, %r574, %r580}, {%r3436, %r3556}, {%r3180, %r3180};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3902, %r3905}, {%r571, %r577, %r574, %r580}, {%r3445, %r3563}, {%r3180, %r3180};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3908, %r3911}, {%r571, %r577, %r574, %r580}, {%r3454, %r3570}, {%r3180, %r3180};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3914, %r3917}, {%r571, %r577, %r574, %r580}, {%r3463, %r3577}, {%r3180, %r3180};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3920, %r3923}, {%r571, %r577, %r574, %r580}, {%r3472, %r3584}, {%r3180, %r3180};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3876, %r3877, %r3878;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3879, %r3880, %r3881;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3882, %r3883, %r3884;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3885, %r3886, %r3887;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3888, %r3889, %r3890;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3891, %r3892, %r3893;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3894, %r3895, %r3896;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3897, %r3898, %r3899;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3900, %r3901, %r3902;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3903, %r3904, %r3905;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3906, %r3907, %r3908;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3909, %r3910, %r3911;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3912, %r3913, %r3914;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3915, %r3916, %r3917;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3918, %r3919, %r3920;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3921, %r3922, %r3923;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3924, %r3877, %r3878;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3927, %r3880, %r3881;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3930, %r3883, %r3884;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3933, %r3886, %r3887;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3936, %r3889, %r3890;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3939, %r3892, %r3893;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3942, %r3895, %r3896;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3945, %r3898, %r3899;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3948, %r3901, %r3902;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3951, %r3904, %r3905;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3954, %r3907, %r3908;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3957, %r3910, %r3911;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3960, %r3913, %r3914;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3963, %r3916, %r3917;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3966, %r3919, %r3920;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3969, %r3922, %r3923;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3972, %r16, %r3876;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3975, %r16, %r3879;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3978, %r16, %r3882;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3981, %r16, %r3885;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3984, %r16, %r3888;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3987, %r16, %r3891;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3990, %r16, %r3894;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3993, %r16, %r3897;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3996, %r16, %r3900;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3999, %r16, %r3903;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4002, %r16, %r3906;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4005, %r16, %r3909;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4008, %r16, %r3912;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4011, %r16, %r3915;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4014, %r16, %r3918;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4017, %r16, %r3921;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4020, %r17, %r3924;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4023, %r17, %r3927;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4026, %r17, %r3930;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4029, %r17, %r3933;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4032, %r17, %r3936;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4035, %r17, %r3939;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4038, %r17, %r3942;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4041, %r17, %r3945;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4044, %r17, %r3948;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4047, %r17, %r3951;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4050, %r17, %r3954;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4053, %r17, %r3957;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4056, %r17, %r3960;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4059, %r17, %r3963;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4062, %r17, %r3966;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4065, %r17, %r3969;
	// end inline asm
	// begin inline asm
	mov.b32 %r4068, {%rs2307, %rs2307};
	// end inline asm
	mov.u16 	%rs408, 18176;
	// begin inline asm
	mov.b32 %r4069, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4070, %r3972, %r4068;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4073, %r4070, %r4069;
	// end inline asm
	// begin inline asm
	mov.b32 %r4076, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4077, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4078, %r3975, %r4076;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4081, %r4078, %r4077;
	// end inline asm
	// begin inline asm
	mov.b32 %r4084, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4085, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4086, %r3978, %r4084;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4089, %r4086, %r4085;
	// end inline asm
	// begin inline asm
	mov.b32 %r4092, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4093, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4094, %r3981, %r4092;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4097, %r4094, %r4093;
	// end inline asm
	// begin inline asm
	mov.b32 %r4100, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4101, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4102, %r3984, %r4100;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4105, %r4102, %r4101;
	// end inline asm
	// begin inline asm
	mov.b32 %r4108, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4109, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4110, %r3987, %r4108;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4113, %r4110, %r4109;
	// end inline asm
	// begin inline asm
	mov.b32 %r4116, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4117, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4118, %r3990, %r4116;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4121, %r4118, %r4117;
	// end inline asm
	// begin inline asm
	mov.b32 %r4124, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4125, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4126, %r3993, %r4124;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4129, %r4126, %r4125;
	// end inline asm
	// begin inline asm
	mov.b32 %r4132, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4133, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4134, %r3996, %r4132;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4137, %r4134, %r4133;
	// end inline asm
	// begin inline asm
	mov.b32 %r4140, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4141, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4142, %r3999, %r4140;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4145, %r4142, %r4141;
	// end inline asm
	// begin inline asm
	mov.b32 %r4148, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4149, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4150, %r4002, %r4148;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4153, %r4150, %r4149;
	// end inline asm
	// begin inline asm
	mov.b32 %r4156, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4157, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4158, %r4005, %r4156;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4161, %r4158, %r4157;
	// end inline asm
	// begin inline asm
	mov.b32 %r4164, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4165, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4166, %r4008, %r4164;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4169, %r4166, %r4165;
	// end inline asm
	// begin inline asm
	mov.b32 %r4172, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4173, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4174, %r4011, %r4172;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4177, %r4174, %r4173;
	// end inline asm
	// begin inline asm
	mov.b32 %r4180, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4181, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4182, %r4014, %r4180;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4185, %r4182, %r4181;
	// end inline asm
	// begin inline asm
	mov.b32 %r4188, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4189, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4190, %r4017, %r4188;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4193, %r4190, %r4189;
	// end inline asm
	// begin inline asm
	mov.b32 %r4196, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4197, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4198, %r4020, %r4196;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4201, %r4198, %r4197;
	// end inline asm
	// begin inline asm
	mov.b32 %r4204, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4205, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4206, %r4023, %r4204;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4209, %r4206, %r4205;
	// end inline asm
	// begin inline asm
	mov.b32 %r4212, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4213, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4214, %r4026, %r4212;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4217, %r4214, %r4213;
	// end inline asm
	// begin inline asm
	mov.b32 %r4220, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4221, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4222, %r4029, %r4220;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4225, %r4222, %r4221;
	// end inline asm
	// begin inline asm
	mov.b32 %r4228, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4229, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4230, %r4032, %r4228;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4233, %r4230, %r4229;
	// end inline asm
	// begin inline asm
	mov.b32 %r4236, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4237, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4238, %r4035, %r4236;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4241, %r4238, %r4237;
	// end inline asm
	// begin inline asm
	mov.b32 %r4244, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4245, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4246, %r4038, %r4244;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4249, %r4246, %r4245;
	// end inline asm
	// begin inline asm
	mov.b32 %r4252, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4253, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4254, %r4041, %r4252;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4257, %r4254, %r4253;
	// end inline asm
	// begin inline asm
	mov.b32 %r4260, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4261, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4262, %r4044, %r4260;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4265, %r4262, %r4261;
	// end inline asm
	// begin inline asm
	mov.b32 %r4268, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4269, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4270, %r4047, %r4268;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4273, %r4270, %r4269;
	// end inline asm
	// begin inline asm
	mov.b32 %r4276, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4277, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4278, %r4050, %r4276;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4281, %r4278, %r4277;
	// end inline asm
	// begin inline asm
	mov.b32 %r4284, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4285, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4286, %r4053, %r4284;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4289, %r4286, %r4285;
	// end inline asm
	// begin inline asm
	mov.b32 %r4292, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4293, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4294, %r4056, %r4292;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4297, %r4294, %r4293;
	// end inline asm
	// begin inline asm
	mov.b32 %r4300, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4301, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4302, %r4059, %r4300;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4305, %r4302, %r4301;
	// end inline asm
	// begin inline asm
	mov.b32 %r4308, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4309, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4310, %r4062, %r4308;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4313, %r4310, %r4309;
	// end inline asm
	// begin inline asm
	mov.b32 %r4316, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4317, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4318, %r4065, %r4316;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4321, %r4318, %r4317;
	// end inline asm
	// begin inline asm
	mov.b32 %r4327, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4325, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4326, %r4327, %r4325;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4329, %r4073, %r4326;
	// end inline asm
	// begin inline asm
	mov.b32 %r4332, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4333, %r4327, %r4332;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4336, %r4081, %r4333;
	// end inline asm
	// begin inline asm
	mov.b32 %r4339, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4340, %r4327, %r4339;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4343, %r4089, %r4340;
	// end inline asm
	// begin inline asm
	mov.b32 %r4346, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4347, %r4327, %r4346;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4350, %r4097, %r4347;
	// end inline asm
	mov.u32 	%r4356, 25152;
	// begin inline asm
	prmt.b32 %r4353, %r4329, %r4343, %r4356;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4357, %r4336, %r4350, %r4356;
	// end inline asm
	shl.b32 	%r4364, %r4357, 4;
	mov.u32 	%r4362, 252645135;
	// begin inline asm
	lop3.b32 %r4361, %r4362, %r4353, %r4364, 202;
	// end inline asm
	xor.b32  	%r16108, %r4361, -2004318072;
	// begin inline asm
	mov.b32 %r4368, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4366, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4367, %r4368, %r4366;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4370, %r4105, %r4367;
	// end inline asm
	// begin inline asm
	mov.b32 %r4373, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4374, %r4368, %r4373;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4377, %r4113, %r4374;
	// end inline asm
	// begin inline asm
	mov.b32 %r4380, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4381, %r4368, %r4380;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4384, %r4121, %r4381;
	// end inline asm
	// begin inline asm
	mov.b32 %r4387, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4388, %r4368, %r4387;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4391, %r4129, %r4388;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4394, %r4370, %r4384, %r4356;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4398, %r4377, %r4391, %r4356;
	// end inline asm
	shl.b32 	%r4405, %r4398, 4;
	// begin inline asm
	lop3.b32 %r4402, %r4362, %r4394, %r4405, 202;
	// end inline asm
	xor.b32  	%r16109, %r4402, -2004318072;
	// begin inline asm
	mov.b32 %r4409, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4407, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4408, %r4409, %r4407;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4411, %r4137, %r4408;
	// end inline asm
	// begin inline asm
	mov.b32 %r4414, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4415, %r4409, %r4414;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4418, %r4145, %r4415;
	// end inline asm
	// begin inline asm
	mov.b32 %r4421, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4422, %r4409, %r4421;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4425, %r4153, %r4422;
	// end inline asm
	// begin inline asm
	mov.b32 %r4428, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4429, %r4409, %r4428;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4432, %r4161, %r4429;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4435, %r4411, %r4425, %r4356;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4439, %r4418, %r4432, %r4356;
	// end inline asm
	shl.b32 	%r4446, %r4439, 4;
	// begin inline asm
	lop3.b32 %r4443, %r4362, %r4435, %r4446, 202;
	// end inline asm
	xor.b32  	%r16110, %r4443, -2004318072;
	// begin inline asm
	mov.b32 %r4450, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4448, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4449, %r4450, %r4448;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4452, %r4169, %r4449;
	// end inline asm
	// begin inline asm
	mov.b32 %r4455, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4456, %r4450, %r4455;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4459, %r4177, %r4456;
	// end inline asm
	// begin inline asm
	mov.b32 %r4462, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4463, %r4450, %r4462;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4466, %r4185, %r4463;
	// end inline asm
	// begin inline asm
	mov.b32 %r4469, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4470, %r4450, %r4469;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4473, %r4193, %r4470;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4476, %r4452, %r4466, %r4356;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4480, %r4459, %r4473, %r4356;
	// end inline asm
	shl.b32 	%r4487, %r4480, 4;
	// begin inline asm
	lop3.b32 %r4484, %r4362, %r4476, %r4487, 202;
	// end inline asm
	xor.b32  	%r16111, %r4484, -2004318072;
	// begin inline asm
	mov.b32 %r4491, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4489, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4490, %r4491, %r4489;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4493, %r4201, %r4490;
	// end inline asm
	// begin inline asm
	mov.b32 %r4496, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4497, %r4491, %r4496;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4500, %r4209, %r4497;
	// end inline asm
	// begin inline asm
	mov.b32 %r4503, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4504, %r4491, %r4503;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4507, %r4217, %r4504;
	// end inline asm
	// begin inline asm
	mov.b32 %r4510, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4511, %r4491, %r4510;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4514, %r4225, %r4511;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4517, %r4493, %r4507, %r4356;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4521, %r4500, %r4514, %r4356;
	// end inline asm
	shl.b32 	%r4528, %r4521, 4;
	// begin inline asm
	lop3.b32 %r4525, %r4362, %r4517, %r4528, 202;
	// end inline asm
	xor.b32  	%r16112, %r4525, -2004318072;
	// begin inline asm
	mov.b32 %r4532, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4530, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4531, %r4532, %r4530;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4534, %r4233, %r4531;
	// end inline asm
	// begin inline asm
	mov.b32 %r4537, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4538, %r4532, %r4537;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4541, %r4241, %r4538;
	// end inline asm
	// begin inline asm
	mov.b32 %r4544, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4545, %r4532, %r4544;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4548, %r4249, %r4545;
	// end inline asm
	// begin inline asm
	mov.b32 %r4551, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4552, %r4532, %r4551;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4555, %r4257, %r4552;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4558, %r4534, %r4548, %r4356;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4562, %r4541, %r4555, %r4356;
	// end inline asm
	shl.b32 	%r4569, %r4562, 4;
	// begin inline asm
	lop3.b32 %r4566, %r4362, %r4558, %r4569, 202;
	// end inline asm
	xor.b32  	%r16113, %r4566, -2004318072;
	// begin inline asm
	mov.b32 %r4573, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4571, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4572, %r4573, %r4571;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4575, %r4265, %r4572;
	// end inline asm
	// begin inline asm
	mov.b32 %r4578, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4579, %r4573, %r4578;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4582, %r4273, %r4579;
	// end inline asm
	// begin inline asm
	mov.b32 %r4585, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4586, %r4573, %r4585;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4589, %r4281, %r4586;
	// end inline asm
	// begin inline asm
	mov.b32 %r4592, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4593, %r4573, %r4592;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4596, %r4289, %r4593;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4599, %r4575, %r4589, %r4356;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4603, %r4582, %r4596, %r4356;
	// end inline asm
	shl.b32 	%r4610, %r4603, 4;
	// begin inline asm
	lop3.b32 %r4607, %r4362, %r4599, %r4610, 202;
	// end inline asm
	xor.b32  	%r16114, %r4607, -2004318072;
	// begin inline asm
	mov.b32 %r4614, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4612, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4613, %r4614, %r4612;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4616, %r4297, %r4613;
	// end inline asm
	// begin inline asm
	mov.b32 %r4619, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4620, %r4614, %r4619;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4623, %r4305, %r4620;
	// end inline asm
	// begin inline asm
	mov.b32 %r4626, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4627, %r4614, %r4626;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4630, %r4313, %r4627;
	// end inline asm
	// begin inline asm
	mov.b32 %r4633, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4634, %r4614, %r4633;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4637, %r4321, %r4634;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4640, %r4616, %r4630, %r4356;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4644, %r4623, %r4637, %r4356;
	// end inline asm
	shl.b32 	%r4651, %r4644, 4;
	// begin inline asm
	lop3.b32 %r4648, %r4362, %r4640, %r4651, 202;
	// end inline asm
	xor.b32  	%r16115, %r4648, -2004318072;
	add.s64 	%rd93, %rd126, %rd25;
	st.shared.u32 	[%rd93], %r16108;
	add.s64 	%rd94, %rd126, %rd24;
	st.shared.u32 	[%rd94], %r16109;
	add.s64 	%rd95, %rd126, %rd23;
	st.shared.u32 	[%rd95], %r16110;
	add.s64 	%rd96, %rd126, %rd22;
	st.shared.u32 	[%rd96], %r16111;
	add.s64 	%rd97, %rd126, %rd21;
	st.shared.u32 	[%rd97], %r16112;
	add.s64 	%rd98, %rd126, %rd20;
	st.shared.u32 	[%rd98], %r16113;
	add.s64 	%rd99, %rd126, %rd19;
	st.shared.u32 	[%rd99], %r16114;
	add.s64 	%rd100, %rd126, %rd18;
	st.shared.u32 	[%rd100], %r16115;
	ld.shared.u32 	%r16240, [%rd85];
	ld.shared.u32 	%r16241, [%rd86];
	ld.shared.u32 	%r16242, [%rd87];
	ld.shared.u32 	%r16243, [%rd88];
	ld.shared.u32 	%r16252, [%rd89];
	ld.shared.u32 	%r16253, [%rd90];
	ld.shared.u32 	%r16254, [%rd91];
	ld.shared.u32 	%r16255, [%rd92];
	// begin inline asm
	mov.b32 %r4657, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4668, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4656, %r16240, -2004318072;
	// begin inline asm
	lop3.b32 %r4654, %r839, %r4656, %r4657, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4658, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4659, %r4657, %r4658;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4662, %r4654, %r4659;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4665, %r850, %r4656, %r4668, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4669, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4670, %r4668, %r4669;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4673, %r4665, %r4670;
	// end inline asm
	shr.u32 	%r4678, %r4656, 8;
	// begin inline asm
	lop3.b32 %r4676, %r839, %r4678, %r4657, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4680, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4681, %r4657, %r4680;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4684, %r4676, %r4681;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4687, %r850, %r4678, %r4668, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4691, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4692, %r4668, %r4691;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4695, %r4687, %r4692;
	// end inline asm
	// begin inline asm
	mov.b32 %r4703, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4714, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4702, %r16241, -2004318072;
	// begin inline asm
	lop3.b32 %r4700, %r839, %r4702, %r4703, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4704, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4705, %r4703, %r4704;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4708, %r4700, %r4705;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4711, %r850, %r4702, %r4714, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4715, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4716, %r4714, %r4715;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4719, %r4711, %r4716;
	// end inline asm
	shr.u32 	%r4724, %r4702, 8;
	// begin inline asm
	lop3.b32 %r4722, %r839, %r4724, %r4703, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4726, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4727, %r4703, %r4726;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4730, %r4722, %r4727;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4733, %r850, %r4724, %r4714, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4737, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4738, %r4714, %r4737;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4741, %r4733, %r4738;
	// end inline asm
	// begin inline asm
	mov.b32 %r4749, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4760, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4748, %r16242, -2004318072;
	// begin inline asm
	lop3.b32 %r4746, %r839, %r4748, %r4749, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4750, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4751, %r4749, %r4750;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4754, %r4746, %r4751;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4757, %r850, %r4748, %r4760, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4761, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4762, %r4760, %r4761;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4765, %r4757, %r4762;
	// end inline asm
	shr.u32 	%r4770, %r4748, 8;
	// begin inline asm
	lop3.b32 %r4768, %r839, %r4770, %r4749, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4772, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4773, %r4749, %r4772;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4776, %r4768, %r4773;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4779, %r850, %r4770, %r4760, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4783, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4784, %r4760, %r4783;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4787, %r4779, %r4784;
	// end inline asm
	// begin inline asm
	mov.b32 %r4795, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4806, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4794, %r16243, -2004318072;
	// begin inline asm
	lop3.b32 %r4792, %r839, %r4794, %r4795, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4796, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4797, %r4795, %r4796;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4800, %r4792, %r4797;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4803, %r850, %r4794, %r4806, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4807, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4808, %r4806, %r4807;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4811, %r4803, %r4808;
	// end inline asm
	shr.u32 	%r4816, %r4794, 8;
	// begin inline asm
	lop3.b32 %r4814, %r839, %r4816, %r4795, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4818, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4819, %r4795, %r4818;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4822, %r4814, %r4819;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4825, %r850, %r4816, %r4806, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4829, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4830, %r4806, %r4829;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4833, %r4825, %r4830;
	// end inline asm
	// begin inline asm
	mov.b32 %r4841, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4852, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4840, %r16252, -2004318072;
	// begin inline asm
	lop3.b32 %r4838, %r839, %r4840, %r4841, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4842, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4843, %r4841, %r4842;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4846, %r4838, %r4843;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4849, %r850, %r4840, %r4852, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4853, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4854, %r4852, %r4853;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4857, %r4849, %r4854;
	// end inline asm
	shr.u32 	%r4862, %r4840, 8;
	// begin inline asm
	lop3.b32 %r4860, %r839, %r4862, %r4841, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4864, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4865, %r4841, %r4864;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4868, %r4860, %r4865;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4871, %r850, %r4862, %r4852, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4875, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4876, %r4852, %r4875;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4879, %r4871, %r4876;
	// end inline asm
	// begin inline asm
	mov.b32 %r4887, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4898, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4886, %r16253, -2004318072;
	// begin inline asm
	lop3.b32 %r4884, %r839, %r4886, %r4887, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4888, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4889, %r4887, %r4888;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4892, %r4884, %r4889;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4895, %r850, %r4886, %r4898, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4899, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4900, %r4898, %r4899;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4903, %r4895, %r4900;
	// end inline asm
	shr.u32 	%r4908, %r4886, 8;
	// begin inline asm
	lop3.b32 %r4906, %r839, %r4908, %r4887, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4910, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4911, %r4887, %r4910;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4914, %r4906, %r4911;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4917, %r850, %r4908, %r4898, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4921, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4922, %r4898, %r4921;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4925, %r4917, %r4922;
	// end inline asm
	// begin inline asm
	mov.b32 %r4933, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4944, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4932, %r16254, -2004318072;
	// begin inline asm
	lop3.b32 %r4930, %r839, %r4932, %r4933, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4934, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4935, %r4933, %r4934;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4938, %r4930, %r4935;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4941, %r850, %r4932, %r4944, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4945, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4946, %r4944, %r4945;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4949, %r4941, %r4946;
	// end inline asm
	shr.u32 	%r4954, %r4932, 8;
	// begin inline asm
	lop3.b32 %r4952, %r839, %r4954, %r4933, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4956, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4957, %r4933, %r4956;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4960, %r4952, %r4957;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4963, %r850, %r4954, %r4944, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4967, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4968, %r4944, %r4967;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4971, %r4963, %r4968;
	// end inline asm
	// begin inline asm
	mov.b32 %r4979, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4990, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4978, %r16255, -2004318072;
	// begin inline asm
	lop3.b32 %r4976, %r839, %r4978, %r4979, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4980, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4981, %r4979, %r4980;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4984, %r4976, %r4981;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4987, %r850, %r4978, %r4990, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4991, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4992, %r4990, %r4991;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4995, %r4987, %r4992;
	// end inline asm
	shr.u32 	%r5000, %r4978, 8;
	// begin inline asm
	lop3.b32 %r4998, %r839, %r5000, %r4979, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5002, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5003, %r4979, %r5002;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5006, %r4998, %r5003;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5009, %r850, %r5000, %r4990, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5013, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5014, %r4990, %r5013;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5017, %r5009, %r5014;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5020, %r387;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5022, %r5020, %r4662;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5025, %r387;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5027, %r5025, %r4673;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5030, %r387;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5032, %r5030, %r4684;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5035, %r387;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5037, %r5035, %r4695;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5040, %r387;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5042, %r5040, %r4708;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5045, %r387;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5047, %r5045, %r4719;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5050, %r387;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5052, %r5050, %r4730;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5055, %r387;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5057, %r5055, %r4741;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5060, %r387;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5062, %r5060, %r4754;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5065, %r387;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5067, %r5065, %r4765;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5070, %r387;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5072, %r5070, %r4776;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5075, %r387;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5077, %r5075, %r4787;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5080, %r387;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5082, %r5080, %r4800;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5085, %r387;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5087, %r5085, %r4811;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5090, %r387;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5092, %r5090, %r4822;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5095, %r387;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5097, %r5095, %r4833;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5100, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5102, %r5100, %r4846;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5105, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5107, %r5105, %r4857;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5110, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5112, %r5110, %r4868;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5115, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5117, %r5115, %r4879;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5120, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5122, %r5120, %r4892;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5125, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5127, %r5125, %r4903;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5130, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5132, %r5130, %r4914;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5135, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5137, %r5135, %r4925;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5140, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5142, %r5140, %r4938;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5145, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5147, %r5145, %r4949;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5150, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5152, %r5150, %r4960;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5155, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5157, %r5155, %r4971;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5160, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5162, %r5160, %r4984;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5165, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5167, %r5165, %r4995;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5170, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5172, %r5170, %r5006;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5175, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5177, %r5175, %r5017;
	// end inline asm
	// begin inline asm
	mov.b32 %r5185, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5196, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5182, %r839, %r1864, %r5185, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5186, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5187, %r5185, %r5186;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5190, %r5182, %r5187;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5193, %r850, %r1864, %r5196, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5197, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5198, %r5196, %r5197;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5201, %r5193, %r5198;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5204, %r839, %r1886, %r5185, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5208, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5209, %r5185, %r5208;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5212, %r5204, %r5209;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5215, %r850, %r1886, %r5196, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5219, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5220, %r5196, %r5219;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5223, %r5215, %r5220;
	// end inline asm
	// begin inline asm
	mov.b32 %r5231, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5242, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5228, %r839, %r1910, %r5231, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5232, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5233, %r5231, %r5232;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5236, %r5228, %r5233;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5239, %r850, %r1910, %r5242, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5243, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5244, %r5242, %r5243;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5247, %r5239, %r5244;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5250, %r839, %r1932, %r5231, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5254, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5255, %r5231, %r5254;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5258, %r5250, %r5255;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5261, %r850, %r1932, %r5242, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5265, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5266, %r5242, %r5265;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5269, %r5261, %r5266;
	// end inline asm
	// begin inline asm
	mov.b32 %r5277, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5288, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5274, %r839, %r1956, %r5277, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5278, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5279, %r5277, %r5278;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5282, %r5274, %r5279;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5285, %r850, %r1956, %r5288, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5289, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5290, %r5288, %r5289;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5293, %r5285, %r5290;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5296, %r839, %r1978, %r5277, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5300, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5301, %r5277, %r5300;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5304, %r5296, %r5301;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5307, %r850, %r1978, %r5288, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5311, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5312, %r5288, %r5311;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5315, %r5307, %r5312;
	// end inline asm
	// begin inline asm
	mov.b32 %r5323, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5334, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5320, %r839, %r2002, %r5323, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5324, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5325, %r5323, %r5324;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5328, %r5320, %r5325;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5331, %r850, %r2002, %r5334, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5335, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5336, %r5334, %r5335;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5339, %r5331, %r5336;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5342, %r839, %r2024, %r5323, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5346, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5347, %r5323, %r5346;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5350, %r5342, %r5347;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5353, %r850, %r2024, %r5334, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5357, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5358, %r5334, %r5357;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5361, %r5353, %r5358;
	// end inline asm
	// begin inline asm
	mov.b32 %r5369, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5380, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5366, %r839, %r2048, %r5369, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5370, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5371, %r5369, %r5370;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5374, %r5366, %r5371;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5377, %r850, %r2048, %r5380, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5381, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5382, %r5380, %r5381;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5385, %r5377, %r5382;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5388, %r839, %r2070, %r5369, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5392, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5393, %r5369, %r5392;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5396, %r5388, %r5393;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5399, %r850, %r2070, %r5380, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5403, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5404, %r5380, %r5403;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5407, %r5399, %r5404;
	// end inline asm
	// begin inline asm
	mov.b32 %r5415, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5426, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5412, %r839, %r2094, %r5415, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5416, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5417, %r5415, %r5416;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5420, %r5412, %r5417;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5423, %r850, %r2094, %r5426, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5427, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5428, %r5426, %r5427;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5431, %r5423, %r5428;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5434, %r839, %r2116, %r5415, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5438, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5439, %r5415, %r5438;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5442, %r5434, %r5439;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5445, %r850, %r2116, %r5426, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5449, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5450, %r5426, %r5449;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5453, %r5445, %r5450;
	// end inline asm
	// begin inline asm
	mov.b32 %r5461, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5472, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5458, %r839, %r2140, %r5461, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5462, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5463, %r5461, %r5462;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5466, %r5458, %r5463;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5469, %r850, %r2140, %r5472, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5473, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5474, %r5472, %r5473;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5477, %r5469, %r5474;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5480, %r839, %r2162, %r5461, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5484, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5485, %r5461, %r5484;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5488, %r5480, %r5485;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5491, %r850, %r2162, %r5472, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5495, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5496, %r5472, %r5495;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5499, %r5491, %r5496;
	// end inline asm
	// begin inline asm
	mov.b32 %r5507, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5518, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5504, %r839, %r2186, %r5507, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5508, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5509, %r5507, %r5508;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5512, %r5504, %r5509;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5515, %r850, %r2186, %r5518, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5519, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5520, %r5518, %r5519;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5523, %r5515, %r5520;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5526, %r839, %r2208, %r5507, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5530, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5531, %r5507, %r5530;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5534, %r5526, %r5531;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5537, %r850, %r2208, %r5518, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5541, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5542, %r5518, %r5541;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5545, %r5537, %r5542;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5548, %r279, %r5190, %r5022;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5552, %r279, %r5201, %r5027;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5556, %r279, %r5212, %r5032;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5560, %r279, %r5223, %r5037;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5564, %r279, %r5236, %r5042;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5568, %r279, %r5247, %r5047;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5572, %r279, %r5258, %r5052;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5576, %r279, %r5269, %r5057;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5580, %r279, %r5282, %r5062;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5584, %r279, %r5293, %r5067;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5588, %r279, %r5304, %r5072;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5592, %r279, %r5315, %r5077;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5596, %r279, %r5328, %r5082;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5600, %r279, %r5339, %r5087;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5604, %r279, %r5350, %r5092;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5608, %r279, %r5361, %r5097;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5612, %r297, %r5374, %r5102;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5616, %r297, %r5385, %r5107;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5620, %r297, %r5396, %r5112;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5624, %r297, %r5407, %r5117;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5628, %r297, %r5420, %r5122;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5632, %r297, %r5431, %r5127;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5636, %r297, %r5442, %r5132;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5640, %r297, %r5453, %r5137;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5644, %r297, %r5466, %r5142;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5648, %r297, %r5477, %r5147;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5652, %r297, %r5488, %r5152;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5656, %r297, %r5499, %r5157;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5660, %r297, %r5512, %r5162;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5664, %r297, %r5523, %r5167;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5668, %r297, %r5534, %r5172;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5672, %r297, %r5545, %r5177;
	// end inline asm
	// begin inline asm
	mov.b32 %r5681, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5692, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5678, %r839, %r2424, %r5681, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5682, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5683, %r5681, %r5682;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5686, %r5678, %r5683;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5689, %r850, %r2424, %r5692, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5693, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5694, %r5692, %r5693;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5697, %r5689, %r5694;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5700, %r839, %r2446, %r5681, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5704, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5705, %r5681, %r5704;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5708, %r5700, %r5705;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5711, %r850, %r2446, %r5692, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5715, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5716, %r5692, %r5715;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5719, %r5711, %r5716;
	// end inline asm
	// begin inline asm
	mov.b32 %r5727, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5738, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5724, %r839, %r2470, %r5727, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5728, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5729, %r5727, %r5728;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5732, %r5724, %r5729;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5735, %r850, %r2470, %r5738, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5739, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5740, %r5738, %r5739;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5743, %r5735, %r5740;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5746, %r839, %r2492, %r5727, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5750, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5751, %r5727, %r5750;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5754, %r5746, %r5751;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5757, %r850, %r2492, %r5738, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5761, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5762, %r5738, %r5761;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5765, %r5757, %r5762;
	// end inline asm
	// begin inline asm
	mov.b32 %r5773, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5784, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5770, %r839, %r2516, %r5773, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5774, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5775, %r5773, %r5774;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5778, %r5770, %r5775;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5781, %r850, %r2516, %r5784, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5785, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5786, %r5784, %r5785;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5789, %r5781, %r5786;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5792, %r839, %r2538, %r5773, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5796, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5797, %r5773, %r5796;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5800, %r5792, %r5797;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5803, %r850, %r2538, %r5784, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5807, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5808, %r5784, %r5807;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5811, %r5803, %r5808;
	// end inline asm
	// begin inline asm
	mov.b32 %r5819, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5830, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5816, %r839, %r2562, %r5819, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5820, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5821, %r5819, %r5820;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5824, %r5816, %r5821;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5827, %r850, %r2562, %r5830, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5831, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5832, %r5830, %r5831;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5835, %r5827, %r5832;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5838, %r839, %r2584, %r5819, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5842, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5843, %r5819, %r5842;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5846, %r5838, %r5843;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5849, %r850, %r2584, %r5830, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5853, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5854, %r5830, %r5853;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5857, %r5849, %r5854;
	// end inline asm
	// begin inline asm
	mov.b32 %r5865, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5876, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5862, %r839, %r2608, %r5865, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5866, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5867, %r5865, %r5866;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5870, %r5862, %r5867;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5873, %r850, %r2608, %r5876, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5877, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5878, %r5876, %r5877;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5881, %r5873, %r5878;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5884, %r839, %r2630, %r5865, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5888, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5889, %r5865, %r5888;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5892, %r5884, %r5889;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5895, %r850, %r2630, %r5876, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5899, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5900, %r5876, %r5899;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5903, %r5895, %r5900;
	// end inline asm
	// begin inline asm
	mov.b32 %r5911, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5922, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5908, %r839, %r2654, %r5911, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5912, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5913, %r5911, %r5912;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5916, %r5908, %r5913;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5919, %r850, %r2654, %r5922, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5923, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5924, %r5922, %r5923;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5927, %r5919, %r5924;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5930, %r839, %r2676, %r5911, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5934, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5935, %r5911, %r5934;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5938, %r5930, %r5935;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5941, %r850, %r2676, %r5922, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5945, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5946, %r5922, %r5945;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5949, %r5941, %r5946;
	// end inline asm
	// begin inline asm
	mov.b32 %r5957, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5968, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5954, %r839, %r2700, %r5957, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5958, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5959, %r5957, %r5958;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5962, %r5954, %r5959;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5965, %r850, %r2700, %r5968, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5969, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5970, %r5968, %r5969;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5973, %r5965, %r5970;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5976, %r839, %r2722, %r5957, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5980, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5981, %r5957, %r5980;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5984, %r5976, %r5981;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5987, %r850, %r2722, %r5968, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5991, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5992, %r5968, %r5991;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5995, %r5987, %r5992;
	// end inline asm
	// begin inline asm
	mov.b32 %r6003, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6014, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6000, %r839, %r2746, %r6003, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6004, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6005, %r6003, %r6004;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6008, %r6000, %r6005;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6011, %r850, %r2746, %r6014, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6015, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6016, %r6014, %r6015;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6019, %r6011, %r6016;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6022, %r839, %r2768, %r6003, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6026, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6027, %r6003, %r6026;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6030, %r6022, %r6027;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6033, %r850, %r2768, %r6014, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6037, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6038, %r6014, %r6037;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6041, %r6033, %r6038;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6044, %r315;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6046, %r6044, %r5686, %r5548;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6050, %r315;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6052, %r6050, %r5697, %r5552;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6056, %r315;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6058, %r6056, %r5708, %r5556;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6062, %r315;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6064, %r6062, %r5719, %r5560;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6068, %r315;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6070, %r6068, %r5732, %r5564;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6074, %r315;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6076, %r6074, %r5743, %r5568;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6080, %r315;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6082, %r6080, %r5754, %r5572;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6086, %r315;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6088, %r6086, %r5765, %r5576;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6092, %r315;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6094, %r6092, %r5778, %r5580;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6098, %r315;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6100, %r6098, %r5789, %r5584;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6104, %r315;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6106, %r6104, %r5800, %r5588;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6110, %r315;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6112, %r6110, %r5811, %r5592;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6116, %r315;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6118, %r6116, %r5824, %r5596;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6122, %r315;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6124, %r6122, %r5835, %r5600;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6128, %r315;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6130, %r6128, %r5846, %r5604;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6134, %r315;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6136, %r6134, %r5857, %r5608;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6140, %r333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6142, %r6140, %r5870, %r5612;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6146, %r333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6148, %r6146, %r5881, %r5616;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6152, %r333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6154, %r6152, %r5892, %r5620;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6158, %r333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6160, %r6158, %r5903, %r5624;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6164, %r333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6166, %r6164, %r5916, %r5628;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6170, %r333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6172, %r6170, %r5927, %r5632;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6176, %r333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6178, %r6176, %r5938, %r5636;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6182, %r333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6184, %r6182, %r5949, %r5640;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6188, %r333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6190, %r6188, %r5962, %r5644;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6194, %r333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6196, %r6194, %r5973, %r5648;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6200, %r333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6202, %r6200, %r5984, %r5652;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6206, %r333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6208, %r6206, %r5995, %r5656;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6212, %r333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6214, %r6212, %r6008, %r5660;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6218, %r333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6220, %r6218, %r6019, %r5664;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6224, %r333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6226, %r6224, %r6030, %r5668;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6230, %r333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6232, %r6230, %r6041, %r5672;
	// end inline asm
	// begin inline asm
	mov.b32 %r6241, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6252, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6238, %r839, %r840, %r6241, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6242, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6243, %r6241, %r6242;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6246, %r6238, %r6243;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6249, %r850, %r840, %r6252, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6253, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6254, %r6252, %r6253;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6257, %r6249, %r6254;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6260, %r839, %r862, %r6241, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6264, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6265, %r6241, %r6264;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6268, %r6260, %r6265;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6271, %r850, %r862, %r6252, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6275, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6276, %r6252, %r6275;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6279, %r6271, %r6276;
	// end inline asm
	// begin inline asm
	mov.b32 %r6287, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6298, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6284, %r839, %r886, %r6287, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6288, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6289, %r6287, %r6288;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6292, %r6284, %r6289;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6295, %r850, %r886, %r6298, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6299, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6300, %r6298, %r6299;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6303, %r6295, %r6300;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6306, %r839, %r908, %r6287, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6310, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6311, %r6287, %r6310;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6314, %r6306, %r6311;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6317, %r850, %r908, %r6298, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6321, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6322, %r6298, %r6321;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6325, %r6317, %r6322;
	// end inline asm
	// begin inline asm
	mov.b32 %r6333, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6344, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6330, %r839, %r932, %r6333, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6334, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6335, %r6333, %r6334;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6338, %r6330, %r6335;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6341, %r850, %r932, %r6344, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6345, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6346, %r6344, %r6345;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6349, %r6341, %r6346;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6352, %r839, %r954, %r6333, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6356, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6357, %r6333, %r6356;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6360, %r6352, %r6357;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6363, %r850, %r954, %r6344, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6367, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6368, %r6344, %r6367;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6371, %r6363, %r6368;
	// end inline asm
	// begin inline asm
	mov.b32 %r6379, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6390, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6376, %r839, %r978, %r6379, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6380, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6381, %r6379, %r6380;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6384, %r6376, %r6381;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6387, %r850, %r978, %r6390, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6391, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6392, %r6390, %r6391;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6395, %r6387, %r6392;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6398, %r839, %r1000, %r6379, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6402, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6403, %r6379, %r6402;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6406, %r6398, %r6403;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6409, %r850, %r1000, %r6390, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6413, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6414, %r6390, %r6413;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6417, %r6409, %r6414;
	// end inline asm
	// begin inline asm
	mov.b32 %r6425, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6436, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6422, %r839, %r1024, %r6425, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6426, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6427, %r6425, %r6426;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6430, %r6422, %r6427;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6433, %r850, %r1024, %r6436, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6437, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6438, %r6436, %r6437;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6441, %r6433, %r6438;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6444, %r839, %r1046, %r6425, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6448, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6449, %r6425, %r6448;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6452, %r6444, %r6449;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6455, %r850, %r1046, %r6436, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6459, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6460, %r6436, %r6459;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6463, %r6455, %r6460;
	// end inline asm
	// begin inline asm
	mov.b32 %r6471, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6482, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6468, %r839, %r1070, %r6471, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6472, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6473, %r6471, %r6472;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6476, %r6468, %r6473;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6479, %r850, %r1070, %r6482, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6483, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6484, %r6482, %r6483;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6487, %r6479, %r6484;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6490, %r839, %r1092, %r6471, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6494, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6495, %r6471, %r6494;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6498, %r6490, %r6495;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6501, %r850, %r1092, %r6482, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6505, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6506, %r6482, %r6505;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6509, %r6501, %r6506;
	// end inline asm
	// begin inline asm
	mov.b32 %r6517, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6528, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6514, %r839, %r1116, %r6517, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6518, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6519, %r6517, %r6518;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6522, %r6514, %r6519;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6525, %r850, %r1116, %r6528, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6529, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6530, %r6528, %r6529;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6533, %r6525, %r6530;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6536, %r839, %r1138, %r6517, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6540, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6541, %r6517, %r6540;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6544, %r6536, %r6541;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6547, %r850, %r1138, %r6528, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6551, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6552, %r6528, %r6551;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6555, %r6547, %r6552;
	// end inline asm
	// begin inline asm
	mov.b32 %r6563, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6574, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6560, %r839, %r1162, %r6563, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6564, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6565, %r6563, %r6564;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6568, %r6560, %r6565;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6571, %r850, %r1162, %r6574, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6575, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6576, %r6574, %r6575;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6579, %r6571, %r6576;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6582, %r839, %r1184, %r6563, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6586, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6587, %r6563, %r6586;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6590, %r6582, %r6587;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6593, %r850, %r1184, %r6574, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6597, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6598, %r6574, %r6597;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6601, %r6593, %r6598;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6739, %r351, %r6246, %r6046;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6736, %r351, %r6257, %r6052;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6748, %r351, %r6268, %r6058;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6745, %r351, %r6279, %r6064;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6757, %r351, %r6292, %r6070;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6754, %r351, %r6303, %r6076;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6766, %r351, %r6314, %r6082;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6763, %r351, %r6325, %r6088;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6775, %r351, %r6338, %r6094;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6772, %r351, %r6349, %r6100;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6784, %r351, %r6360, %r6106;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6781, %r351, %r6371, %r6112;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6793, %r351, %r6384, %r6118;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6790, %r351, %r6395, %r6124;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6802, %r351, %r6406, %r6130;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6799, %r351, %r6417, %r6136;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6811, %r369, %r6430, %r6142;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6808, %r369, %r6441, %r6148;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6820, %r369, %r6452, %r6154;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6817, %r369, %r6463, %r6160;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6829, %r369, %r6476, %r6166;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6826, %r369, %r6487, %r6172;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6838, %r369, %r6498, %r6178;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6835, %r369, %r6509, %r6184;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6847, %r369, %r6522, %r6190;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6844, %r369, %r6533, %r6196;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6856, %r369, %r6544, %r6202;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6853, %r369, %r6555, %r6208;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6865, %r369, %r6568, %r6214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6862, %r369, %r6579, %r6220;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6874, %r369, %r6590, %r6226;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6871, %r369, %r6601, %r6232;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6732, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6734, %r6732, %r6736;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6737, %r433, %r6739, %r6734;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6741, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6743, %r6741, %r6745;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6746, %r433, %r6748, %r6743;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6750, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6752, %r6750, %r6754;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6755, %r433, %r6757, %r6752;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6759, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6761, %r6759, %r6763;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6764, %r433, %r6766, %r6761;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6768, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6770, %r6768, %r6772;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6773, %r433, %r6775, %r6770;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6777, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6779, %r6777, %r6781;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6782, %r433, %r6784, %r6779;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6786, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6788, %r6786, %r6790;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6791, %r433, %r6793, %r6788;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6795, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6797, %r6795, %r6799;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6800, %r433, %r6802, %r6797;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6804, %r442;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6806, %r6804, %r6808;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6809, %r436, %r6811, %r6806;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6813, %r442;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6815, %r6813, %r6817;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6818, %r436, %r6820, %r6815;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6822, %r442;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6824, %r6822, %r6826;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6827, %r436, %r6829, %r6824;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6831, %r442;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6833, %r6831, %r6835;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6836, %r436, %r6838, %r6833;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6840, %r442;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6842, %r6840, %r6844;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6845, %r436, %r6847, %r6842;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6849, %r442;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6851, %r6849, %r6853;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6854, %r436, %r6856, %r6851;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6858, %r442;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6860, %r6858, %r6862;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6863, %r436, %r6865, %r6860;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6867, %r442;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6869, %r6867, %r6871;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6872, %r436, %r6874, %r6869;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6876, %r439, %r6739;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6879, %r433, %r6736, %r6876;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6883, %r439, %r6748;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6886, %r433, %r6745, %r6883;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6890, %r439, %r6757;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6893, %r433, %r6754, %r6890;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6897, %r439, %r6766;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6900, %r433, %r6763, %r6897;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6904, %r439, %r6775;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6907, %r433, %r6772, %r6904;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6911, %r439, %r6784;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6914, %r433, %r6781, %r6911;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6918, %r439, %r6793;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6921, %r433, %r6790, %r6918;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6925, %r439, %r6802;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6928, %r433, %r6799, %r6925;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6932, %r442, %r6811;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6935, %r436, %r6808, %r6932;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6939, %r442, %r6820;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6942, %r436, %r6817, %r6939;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6946, %r442, %r6829;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6949, %r436, %r6826, %r6946;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6953, %r442, %r6838;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6956, %r436, %r6835, %r6953;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6960, %r442, %r6847;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6963, %r436, %r6844, %r6960;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6967, %r442, %r6856;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6970, %r436, %r6853, %r6967;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6974, %r442, %r6865;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6977, %r436, %r6862, %r6974;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6981, %r442, %r6874;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6984, %r436, %r6871, %r6981;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7155, %r7152}, {%r481, %r487, %r484, %r490}, {%r6737, %r6879}, {%r3180, %r3180};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7164, %r7161}, {%r481, %r487, %r484, %r490}, {%r6746, %r6886}, {%r3180, %r3180};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7173, %r7170}, {%r481, %r487, %r484, %r490}, {%r6755, %r6893}, {%r3180, %r3180};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7182, %r7179}, {%r481, %r487, %r484, %r490}, {%r6764, %r6900}, {%r3180, %r3180};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7191, %r7188}, {%r481, %r487, %r484, %r490}, {%r6773, %r6907}, {%r3180, %r3180};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7200, %r7197}, {%r481, %r487, %r484, %r490}, {%r6782, %r6914}, {%r3180, %r3180};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7209, %r7206}, {%r481, %r487, %r484, %r490}, {%r6791, %r6921}, {%r3180, %r3180};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7218, %r7215}, {%r481, %r487, %r484, %r490}, {%r6800, %r6928}, {%r3180, %r3180};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7227, %r7224}, {%r481, %r487, %r484, %r490}, {%r6809, %r6935}, {%r3180, %r3180};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7236, %r7233}, {%r481, %r487, %r484, %r490}, {%r6818, %r6942}, {%r3180, %r3180};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7245, %r7242}, {%r481, %r487, %r484, %r490}, {%r6827, %r6949}, {%r3180, %r3180};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7254, %r7251}, {%r481, %r487, %r484, %r490}, {%r6836, %r6956}, {%r3180, %r3180};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7263, %r7260}, {%r481, %r487, %r484, %r490}, {%r6845, %r6963}, {%r3180, %r3180};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7272, %r7269}, {%r481, %r487, %r484, %r490}, {%r6854, %r6970}, {%r3180, %r3180};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7281, %r7278}, {%r481, %r487, %r484, %r490}, {%r6863, %r6977}, {%r3180, %r3180};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7290, %r7287}, {%r481, %r487, %r484, %r490}, {%r6872, %r6984}, {%r3180, %r3180};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7148, %r531;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7150, %r7148, %r7152;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7153, %r528, %r7155, %r7150;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7157, %r531;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7159, %r7157, %r7161;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7162, %r528, %r7164, %r7159;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7166, %r531;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7168, %r7166, %r7170;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7171, %r528, %r7173, %r7168;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7175, %r531;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7177, %r7175, %r7179;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7180, %r528, %r7182, %r7177;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7184, %r531;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7186, %r7184, %r7188;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7189, %r528, %r7191, %r7186;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7193, %r531;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7195, %r7193, %r7197;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7198, %r528, %r7200, %r7195;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7202, %r531;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7204, %r7202, %r7206;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7207, %r528, %r7209, %r7204;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7211, %r531;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7213, %r7211, %r7215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7216, %r528, %r7218, %r7213;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7220, %r531;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7222, %r7220, %r7224;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7225, %r528, %r7227, %r7222;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7229, %r531;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7231, %r7229, %r7233;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7234, %r528, %r7236, %r7231;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7238, %r531;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7240, %r7238, %r7242;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7243, %r528, %r7245, %r7240;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7247, %r531;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7249, %r7247, %r7251;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7252, %r528, %r7254, %r7249;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7256, %r531;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7258, %r7256, %r7260;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7261, %r528, %r7263, %r7258;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7265, %r531;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7267, %r7265, %r7269;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7270, %r528, %r7272, %r7267;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7274, %r531;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7276, %r7274, %r7278;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7279, %r528, %r7281, %r7276;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7283, %r531;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7285, %r7283, %r7287;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7288, %r528, %r7290, %r7285;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7292, %r531, %r7155;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7295, %r528, %r7152, %r7292;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7299, %r531, %r7164;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7302, %r528, %r7161, %r7299;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7306, %r531, %r7173;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7309, %r528, %r7170, %r7306;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7313, %r531, %r7182;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7316, %r528, %r7179, %r7313;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7320, %r531, %r7191;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7323, %r528, %r7188, %r7320;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7327, %r531, %r7200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7330, %r528, %r7197, %r7327;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7334, %r531, %r7209;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7337, %r528, %r7206, %r7334;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7341, %r531, %r7218;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7344, %r528, %r7215, %r7341;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7348, %r531, %r7227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7351, %r528, %r7224, %r7348;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7355, %r531, %r7236;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7358, %r528, %r7233, %r7355;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7362, %r531, %r7245;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7365, %r528, %r7242, %r7362;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7369, %r531, %r7254;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7372, %r528, %r7251, %r7369;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7376, %r531, %r7263;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7379, %r528, %r7260, %r7376;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7383, %r531, %r7272;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7386, %r528, %r7269, %r7383;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7390, %r531, %r7281;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7393, %r528, %r7278, %r7390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7397, %r531, %r7290;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7400, %r528, %r7287, %r7397;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7693, %r7696}, {%r571, %r577, %r574, %r580}, {%r7153, %r7295}, {%r3180, %r3180};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7699, %r7702}, {%r571, %r577, %r574, %r580}, {%r7162, %r7302}, {%r3180, %r3180};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7705, %r7708}, {%r571, %r577, %r574, %r580}, {%r7171, %r7309}, {%r3180, %r3180};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7711, %r7714}, {%r571, %r577, %r574, %r580}, {%r7180, %r7316}, {%r3180, %r3180};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7717, %r7720}, {%r571, %r577, %r574, %r580}, {%r7189, %r7323}, {%r3180, %r3180};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7723, %r7726}, {%r571, %r577, %r574, %r580}, {%r7198, %r7330}, {%r3180, %r3180};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7729, %r7732}, {%r571, %r577, %r574, %r580}, {%r7207, %r7337}, {%r3180, %r3180};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7735, %r7738}, {%r571, %r577, %r574, %r580}, {%r7216, %r7344}, {%r3180, %r3180};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7694, %r7697}, {%r571, %r577, %r574, %r580}, {%r7225, %r7351}, {%r3180, %r3180};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7700, %r7703}, {%r571, %r577, %r574, %r580}, {%r7234, %r7358}, {%r3180, %r3180};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7706, %r7709}, {%r571, %r577, %r574, %r580}, {%r7243, %r7365}, {%r3180, %r3180};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7712, %r7715}, {%r571, %r577, %r574, %r580}, {%r7252, %r7372}, {%r3180, %r3180};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7718, %r7721}, {%r571, %r577, %r574, %r580}, {%r7261, %r7379}, {%r3180, %r3180};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7724, %r7727}, {%r571, %r577, %r574, %r580}, {%r7270, %r7386}, {%r3180, %r3180};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7730, %r7733}, {%r571, %r577, %r574, %r580}, {%r7279, %r7393}, {%r3180, %r3180};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7736, %r7739}, {%r571, %r577, %r574, %r580}, {%r7288, %r7400}, {%r3180, %r3180};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7692, %r7693, %r7694;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7695, %r7696, %r7697;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7698, %r7699, %r7700;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7701, %r7702, %r7703;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7704, %r7705, %r7706;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7707, %r7708, %r7709;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7710, %r7711, %r7712;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7713, %r7714, %r7715;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7716, %r7717, %r7718;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7719, %r7720, %r7721;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7722, %r7723, %r7724;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7725, %r7726, %r7727;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7728, %r7729, %r7730;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7731, %r7732, %r7733;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7734, %r7735, %r7736;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7737, %r7738, %r7739;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7740, %r7693, %r7694;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7743, %r7696, %r7697;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7746, %r7699, %r7700;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7749, %r7702, %r7703;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7752, %r7705, %r7706;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7755, %r7708, %r7709;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7758, %r7711, %r7712;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7761, %r7714, %r7715;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7764, %r7717, %r7718;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7767, %r7720, %r7721;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7770, %r7723, %r7724;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7773, %r7726, %r7727;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7776, %r7729, %r7730;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7779, %r7732, %r7733;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7782, %r7735, %r7736;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7785, %r7738, %r7739;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7788, %r16, %r7692;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7791, %r16, %r7695;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7794, %r16, %r7698;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7797, %r16, %r7701;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7800, %r16, %r7704;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7803, %r16, %r7707;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7806, %r16, %r7710;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7809, %r16, %r7713;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7812, %r16, %r7716;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7815, %r16, %r7719;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7818, %r16, %r7722;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7821, %r16, %r7725;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7824, %r16, %r7728;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7827, %r16, %r7731;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7830, %r16, %r7734;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7833, %r16, %r7737;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7836, %r17, %r7740;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7839, %r17, %r7743;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7842, %r17, %r7746;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7845, %r17, %r7749;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7848, %r17, %r7752;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7851, %r17, %r7755;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7854, %r17, %r7758;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7857, %r17, %r7761;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7860, %r17, %r7764;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7863, %r17, %r7767;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7866, %r17, %r7770;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7869, %r17, %r7773;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7872, %r17, %r7776;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7875, %r17, %r7779;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7878, %r17, %r7782;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7881, %r17, %r7785;
	// end inline asm
	// begin inline asm
	mov.b32 %r7884, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7885, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7886, %r7788, %r7884;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7889, %r7886, %r7885;
	// end inline asm
	// begin inline asm
	mov.b32 %r7892, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7893, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7894, %r7791, %r7892;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7897, %r7894, %r7893;
	// end inline asm
	// begin inline asm
	mov.b32 %r7900, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7901, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7902, %r7794, %r7900;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7905, %r7902, %r7901;
	// end inline asm
	// begin inline asm
	mov.b32 %r7908, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7909, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7910, %r7797, %r7908;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7913, %r7910, %r7909;
	// end inline asm
	// begin inline asm
	mov.b32 %r7916, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7917, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7918, %r7800, %r7916;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7921, %r7918, %r7917;
	// end inline asm
	// begin inline asm
	mov.b32 %r7924, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7925, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7926, %r7803, %r7924;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7929, %r7926, %r7925;
	// end inline asm
	// begin inline asm
	mov.b32 %r7932, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7933, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7934, %r7806, %r7932;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7937, %r7934, %r7933;
	// end inline asm
	// begin inline asm
	mov.b32 %r7940, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7941, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7942, %r7809, %r7940;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7945, %r7942, %r7941;
	// end inline asm
	// begin inline asm
	mov.b32 %r7948, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7949, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7950, %r7812, %r7948;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7953, %r7950, %r7949;
	// end inline asm
	// begin inline asm
	mov.b32 %r7956, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7957, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7958, %r7815, %r7956;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7961, %r7958, %r7957;
	// end inline asm
	// begin inline asm
	mov.b32 %r7964, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7965, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7966, %r7818, %r7964;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7969, %r7966, %r7965;
	// end inline asm
	// begin inline asm
	mov.b32 %r7972, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7973, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7974, %r7821, %r7972;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7977, %r7974, %r7973;
	// end inline asm
	// begin inline asm
	mov.b32 %r7980, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7981, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7982, %r7824, %r7980;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7985, %r7982, %r7981;
	// end inline asm
	// begin inline asm
	mov.b32 %r7988, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7989, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7990, %r7827, %r7988;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7993, %r7990, %r7989;
	// end inline asm
	// begin inline asm
	mov.b32 %r7996, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7997, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7998, %r7830, %r7996;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8001, %r7998, %r7997;
	// end inline asm
	// begin inline asm
	mov.b32 %r8004, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8005, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8006, %r7833, %r8004;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8009, %r8006, %r8005;
	// end inline asm
	// begin inline asm
	mov.b32 %r8012, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8013, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8014, %r7836, %r8012;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8017, %r8014, %r8013;
	// end inline asm
	// begin inline asm
	mov.b32 %r8020, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8021, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8022, %r7839, %r8020;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8025, %r8022, %r8021;
	// end inline asm
	// begin inline asm
	mov.b32 %r8028, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8029, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8030, %r7842, %r8028;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8033, %r8030, %r8029;
	// end inline asm
	// begin inline asm
	mov.b32 %r8036, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8037, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8038, %r7845, %r8036;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8041, %r8038, %r8037;
	// end inline asm
	// begin inline asm
	mov.b32 %r8044, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8045, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8046, %r7848, %r8044;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8049, %r8046, %r8045;
	// end inline asm
	// begin inline asm
	mov.b32 %r8052, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8053, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8054, %r7851, %r8052;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8057, %r8054, %r8053;
	// end inline asm
	// begin inline asm
	mov.b32 %r8060, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8061, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8062, %r7854, %r8060;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8065, %r8062, %r8061;
	// end inline asm
	// begin inline asm
	mov.b32 %r8068, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8069, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8070, %r7857, %r8068;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8073, %r8070, %r8069;
	// end inline asm
	// begin inline asm
	mov.b32 %r8076, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8077, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8078, %r7860, %r8076;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8081, %r8078, %r8077;
	// end inline asm
	// begin inline asm
	mov.b32 %r8084, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8085, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8086, %r7863, %r8084;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8089, %r8086, %r8085;
	// end inline asm
	// begin inline asm
	mov.b32 %r8092, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8093, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8094, %r7866, %r8092;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8097, %r8094, %r8093;
	// end inline asm
	// begin inline asm
	mov.b32 %r8100, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8101, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8102, %r7869, %r8100;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8105, %r8102, %r8101;
	// end inline asm
	// begin inline asm
	mov.b32 %r8108, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8109, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8110, %r7872, %r8108;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8113, %r8110, %r8109;
	// end inline asm
	// begin inline asm
	mov.b32 %r8116, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8117, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8118, %r7875, %r8116;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8121, %r8118, %r8117;
	// end inline asm
	// begin inline asm
	mov.b32 %r8124, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8125, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8126, %r7878, %r8124;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8129, %r8126, %r8125;
	// end inline asm
	// begin inline asm
	mov.b32 %r8132, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8133, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8134, %r7881, %r8132;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8137, %r8134, %r8133;
	// end inline asm
	// begin inline asm
	mov.b32 %r8143, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8141, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8142, %r8143, %r8141;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8145, %r7889, %r8142;
	// end inline asm
	// begin inline asm
	mov.b32 %r8148, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8149, %r8143, %r8148;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8152, %r7897, %r8149;
	// end inline asm
	// begin inline asm
	mov.b32 %r8155, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8156, %r8143, %r8155;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8159, %r7905, %r8156;
	// end inline asm
	// begin inline asm
	mov.b32 %r8162, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8163, %r8143, %r8162;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8166, %r7913, %r8163;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8169, %r8145, %r8159, %r4356;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8173, %r8152, %r8166, %r4356;
	// end inline asm
	shl.b32 	%r8180, %r8173, 4;
	// begin inline asm
	lop3.b32 %r8177, %r4362, %r8169, %r8180, 202;
	// end inline asm
	xor.b32  	%r16116, %r8177, -2004318072;
	// begin inline asm
	mov.b32 %r8184, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8182, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8183, %r8184, %r8182;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8186, %r7921, %r8183;
	// end inline asm
	// begin inline asm
	mov.b32 %r8189, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8190, %r8184, %r8189;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8193, %r7929, %r8190;
	// end inline asm
	// begin inline asm
	mov.b32 %r8196, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8197, %r8184, %r8196;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8200, %r7937, %r8197;
	// end inline asm
	// begin inline asm
	mov.b32 %r8203, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8204, %r8184, %r8203;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8207, %r7945, %r8204;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8210, %r8186, %r8200, %r4356;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8214, %r8193, %r8207, %r4356;
	// end inline asm
	shl.b32 	%r8221, %r8214, 4;
	// begin inline asm
	lop3.b32 %r8218, %r4362, %r8210, %r8221, 202;
	// end inline asm
	xor.b32  	%r16117, %r8218, -2004318072;
	// begin inline asm
	mov.b32 %r8225, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8223, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8224, %r8225, %r8223;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8227, %r7953, %r8224;
	// end inline asm
	// begin inline asm
	mov.b32 %r8230, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8231, %r8225, %r8230;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8234, %r7961, %r8231;
	// end inline asm
	// begin inline asm
	mov.b32 %r8237, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8238, %r8225, %r8237;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8241, %r7969, %r8238;
	// end inline asm
	// begin inline asm
	mov.b32 %r8244, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8245, %r8225, %r8244;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8248, %r7977, %r8245;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8251, %r8227, %r8241, %r4356;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8255, %r8234, %r8248, %r4356;
	// end inline asm
	shl.b32 	%r8262, %r8255, 4;
	// begin inline asm
	lop3.b32 %r8259, %r4362, %r8251, %r8262, 202;
	// end inline asm
	xor.b32  	%r16118, %r8259, -2004318072;
	// begin inline asm
	mov.b32 %r8266, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8264, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8265, %r8266, %r8264;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8268, %r7985, %r8265;
	// end inline asm
	// begin inline asm
	mov.b32 %r8271, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8272, %r8266, %r8271;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8275, %r7993, %r8272;
	// end inline asm
	// begin inline asm
	mov.b32 %r8278, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8279, %r8266, %r8278;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8282, %r8001, %r8279;
	// end inline asm
	// begin inline asm
	mov.b32 %r8285, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8286, %r8266, %r8285;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8289, %r8009, %r8286;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8292, %r8268, %r8282, %r4356;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8296, %r8275, %r8289, %r4356;
	// end inline asm
	shl.b32 	%r8303, %r8296, 4;
	// begin inline asm
	lop3.b32 %r8300, %r4362, %r8292, %r8303, 202;
	// end inline asm
	xor.b32  	%r16119, %r8300, -2004318072;
	// begin inline asm
	mov.b32 %r8307, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8305, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8306, %r8307, %r8305;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8309, %r8017, %r8306;
	// end inline asm
	// begin inline asm
	mov.b32 %r8312, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8313, %r8307, %r8312;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8316, %r8025, %r8313;
	// end inline asm
	// begin inline asm
	mov.b32 %r8319, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8320, %r8307, %r8319;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8323, %r8033, %r8320;
	// end inline asm
	// begin inline asm
	mov.b32 %r8326, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8327, %r8307, %r8326;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8330, %r8041, %r8327;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8333, %r8309, %r8323, %r4356;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8337, %r8316, %r8330, %r4356;
	// end inline asm
	shl.b32 	%r8344, %r8337, 4;
	// begin inline asm
	lop3.b32 %r8341, %r4362, %r8333, %r8344, 202;
	// end inline asm
	xor.b32  	%r16120, %r8341, -2004318072;
	// begin inline asm
	mov.b32 %r8348, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8346, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8347, %r8348, %r8346;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8350, %r8049, %r8347;
	// end inline asm
	// begin inline asm
	mov.b32 %r8353, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8354, %r8348, %r8353;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8357, %r8057, %r8354;
	// end inline asm
	// begin inline asm
	mov.b32 %r8360, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8361, %r8348, %r8360;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8364, %r8065, %r8361;
	// end inline asm
	// begin inline asm
	mov.b32 %r8367, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8368, %r8348, %r8367;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8371, %r8073, %r8368;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8374, %r8350, %r8364, %r4356;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8378, %r8357, %r8371, %r4356;
	// end inline asm
	shl.b32 	%r8385, %r8378, 4;
	// begin inline asm
	lop3.b32 %r8382, %r4362, %r8374, %r8385, 202;
	// end inline asm
	xor.b32  	%r16121, %r8382, -2004318072;
	// begin inline asm
	mov.b32 %r8389, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8387, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8388, %r8389, %r8387;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8391, %r8081, %r8388;
	// end inline asm
	// begin inline asm
	mov.b32 %r8394, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8395, %r8389, %r8394;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8398, %r8089, %r8395;
	// end inline asm
	// begin inline asm
	mov.b32 %r8401, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8402, %r8389, %r8401;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8405, %r8097, %r8402;
	// end inline asm
	// begin inline asm
	mov.b32 %r8408, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8409, %r8389, %r8408;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8412, %r8105, %r8409;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8415, %r8391, %r8405, %r4356;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8419, %r8398, %r8412, %r4356;
	// end inline asm
	shl.b32 	%r8426, %r8419, 4;
	// begin inline asm
	lop3.b32 %r8423, %r4362, %r8415, %r8426, 202;
	// end inline asm
	xor.b32  	%r16122, %r8423, -2004318072;
	// begin inline asm
	mov.b32 %r8430, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8428, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8429, %r8430, %r8428;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8432, %r8113, %r8429;
	// end inline asm
	// begin inline asm
	mov.b32 %r8435, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8436, %r8430, %r8435;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8439, %r8121, %r8436;
	// end inline asm
	// begin inline asm
	mov.b32 %r8442, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8443, %r8430, %r8442;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8446, %r8129, %r8443;
	// end inline asm
	// begin inline asm
	mov.b32 %r8449, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8450, %r8430, %r8449;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8453, %r8137, %r8450;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8456, %r8432, %r8446, %r4356;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8460, %r8439, %r8453, %r4356;
	// end inline asm
	shl.b32 	%r8467, %r8460, 4;
	// begin inline asm
	lop3.b32 %r8464, %r4362, %r8456, %r8467, 202;
	// end inline asm
	xor.b32  	%r16123, %r8464, -2004318072;
	st.shared.u32 	[%rd93], %r16116;
	st.shared.u32 	[%rd94], %r16117;
	st.shared.u32 	[%rd95], %r16118;
	st.shared.u32 	[%rd96], %r16119;
	st.shared.u32 	[%rd97], %r16120;
	st.shared.u32 	[%rd98], %r16121;
	st.shared.u32 	[%rd99], %r16122;
	st.shared.u32 	[%rd100], %r16123;
	ld.shared.u32 	%r16244, [%rd85];
	ld.shared.u32 	%r16245, [%rd86];
	ld.shared.u32 	%r16246, [%rd87];
	ld.shared.u32 	%r16247, [%rd88];
	ld.shared.u32 	%r16256, [%rd89];
	ld.shared.u32 	%r16257, [%rd90];
	ld.shared.u32 	%r16258, [%rd91];
	ld.shared.u32 	%r16259, [%rd92];
	// begin inline asm
	mov.b32 %r8473, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8484, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8472, %r16244, -2004318072;
	// begin inline asm
	lop3.b32 %r8470, %r839, %r8472, %r8473, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8474, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8475, %r8473, %r8474;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8478, %r8470, %r8475;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8481, %r850, %r8472, %r8484, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8485, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8486, %r8484, %r8485;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8489, %r8481, %r8486;
	// end inline asm
	shr.u32 	%r8494, %r8472, 8;
	// begin inline asm
	lop3.b32 %r8492, %r839, %r8494, %r8473, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8496, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8497, %r8473, %r8496;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8500, %r8492, %r8497;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8503, %r850, %r8494, %r8484, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8507, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8508, %r8484, %r8507;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8511, %r8503, %r8508;
	// end inline asm
	// begin inline asm
	mov.b32 %r8519, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8530, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8518, %r16245, -2004318072;
	// begin inline asm
	lop3.b32 %r8516, %r839, %r8518, %r8519, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8520, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8521, %r8519, %r8520;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8524, %r8516, %r8521;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8527, %r850, %r8518, %r8530, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8531, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8532, %r8530, %r8531;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8535, %r8527, %r8532;
	// end inline asm
	shr.u32 	%r8540, %r8518, 8;
	// begin inline asm
	lop3.b32 %r8538, %r839, %r8540, %r8519, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8542, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8543, %r8519, %r8542;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8546, %r8538, %r8543;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8549, %r850, %r8540, %r8530, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8553, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8554, %r8530, %r8553;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8557, %r8549, %r8554;
	// end inline asm
	// begin inline asm
	mov.b32 %r8565, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8576, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8564, %r16246, -2004318072;
	// begin inline asm
	lop3.b32 %r8562, %r839, %r8564, %r8565, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8566, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8567, %r8565, %r8566;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8570, %r8562, %r8567;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8573, %r850, %r8564, %r8576, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8577, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8578, %r8576, %r8577;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8581, %r8573, %r8578;
	// end inline asm
	shr.u32 	%r8586, %r8564, 8;
	// begin inline asm
	lop3.b32 %r8584, %r839, %r8586, %r8565, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8588, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8589, %r8565, %r8588;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8592, %r8584, %r8589;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8595, %r850, %r8586, %r8576, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8599, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8600, %r8576, %r8599;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8603, %r8595, %r8600;
	// end inline asm
	// begin inline asm
	mov.b32 %r8611, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8622, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8610, %r16247, -2004318072;
	// begin inline asm
	lop3.b32 %r8608, %r839, %r8610, %r8611, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8612, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8613, %r8611, %r8612;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8616, %r8608, %r8613;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8619, %r850, %r8610, %r8622, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8623, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8624, %r8622, %r8623;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8627, %r8619, %r8624;
	// end inline asm
	shr.u32 	%r8632, %r8610, 8;
	// begin inline asm
	lop3.b32 %r8630, %r839, %r8632, %r8611, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8634, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8635, %r8611, %r8634;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8638, %r8630, %r8635;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8641, %r850, %r8632, %r8622, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8645, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8646, %r8622, %r8645;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8649, %r8641, %r8646;
	// end inline asm
	// begin inline asm
	mov.b32 %r8657, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8668, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8656, %r16256, -2004318072;
	// begin inline asm
	lop3.b32 %r8654, %r839, %r8656, %r8657, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8658, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8659, %r8657, %r8658;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8662, %r8654, %r8659;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8665, %r850, %r8656, %r8668, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8669, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8670, %r8668, %r8669;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8673, %r8665, %r8670;
	// end inline asm
	shr.u32 	%r8678, %r8656, 8;
	// begin inline asm
	lop3.b32 %r8676, %r839, %r8678, %r8657, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8680, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8681, %r8657, %r8680;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8684, %r8676, %r8681;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8687, %r850, %r8678, %r8668, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8691, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8692, %r8668, %r8691;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8695, %r8687, %r8692;
	// end inline asm
	// begin inline asm
	mov.b32 %r8703, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8714, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8702, %r16257, -2004318072;
	// begin inline asm
	lop3.b32 %r8700, %r839, %r8702, %r8703, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8704, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8705, %r8703, %r8704;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8708, %r8700, %r8705;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8711, %r850, %r8702, %r8714, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8715, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8716, %r8714, %r8715;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8719, %r8711, %r8716;
	// end inline asm
	shr.u32 	%r8724, %r8702, 8;
	// begin inline asm
	lop3.b32 %r8722, %r839, %r8724, %r8703, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8726, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8727, %r8703, %r8726;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8730, %r8722, %r8727;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8733, %r850, %r8724, %r8714, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8737, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8738, %r8714, %r8737;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8741, %r8733, %r8738;
	// end inline asm
	// begin inline asm
	mov.b32 %r8749, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8760, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8748, %r16258, -2004318072;
	// begin inline asm
	lop3.b32 %r8746, %r839, %r8748, %r8749, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8750, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8751, %r8749, %r8750;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8754, %r8746, %r8751;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8757, %r850, %r8748, %r8760, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8761, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8762, %r8760, %r8761;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8765, %r8757, %r8762;
	// end inline asm
	shr.u32 	%r8770, %r8748, 8;
	// begin inline asm
	lop3.b32 %r8768, %r839, %r8770, %r8749, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8772, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8773, %r8749, %r8772;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8776, %r8768, %r8773;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8779, %r850, %r8770, %r8760, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8783, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8784, %r8760, %r8783;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8787, %r8779, %r8784;
	// end inline asm
	// begin inline asm
	mov.b32 %r8795, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8806, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8794, %r16259, -2004318072;
	// begin inline asm
	lop3.b32 %r8792, %r839, %r8794, %r8795, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8796, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8797, %r8795, %r8796;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8800, %r8792, %r8797;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8803, %r850, %r8794, %r8806, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8807, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8808, %r8806, %r8807;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8811, %r8803, %r8808;
	// end inline asm
	shr.u32 	%r8816, %r8794, 8;
	// begin inline asm
	lop3.b32 %r8814, %r839, %r8816, %r8795, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8818, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8819, %r8795, %r8818;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8822, %r8814, %r8819;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8825, %r850, %r8816, %r8806, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8829, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8830, %r8806, %r8829;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8833, %r8825, %r8830;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8836, %r387;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8838, %r8836, %r8478;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8841, %r387;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8843, %r8841, %r8489;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8846, %r387;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8848, %r8846, %r8500;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8851, %r387;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8853, %r8851, %r8511;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8856, %r387;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8858, %r8856, %r8524;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8861, %r387;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8863, %r8861, %r8535;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8866, %r387;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8868, %r8866, %r8546;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8871, %r387;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8873, %r8871, %r8557;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8876, %r387;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8878, %r8876, %r8570;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8881, %r387;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8883, %r8881, %r8581;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8886, %r387;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8888, %r8886, %r8592;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8891, %r387;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8893, %r8891, %r8603;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8896, %r387;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8898, %r8896, %r8616;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8901, %r387;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8903, %r8901, %r8627;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8906, %r387;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8908, %r8906, %r8638;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8911, %r387;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8913, %r8911, %r8649;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8916, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8918, %r8916, %r8662;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8921, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8923, %r8921, %r8673;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8926, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8928, %r8926, %r8684;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8931, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8933, %r8931, %r8695;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8936, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8938, %r8936, %r8708;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8941, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8943, %r8941, %r8719;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8946, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8948, %r8946, %r8730;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8951, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8953, %r8951, %r8741;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8956, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8958, %r8956, %r8754;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8961, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8963, %r8961, %r8765;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8966, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8968, %r8966, %r8776;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8971, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8973, %r8971, %r8787;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8976, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8978, %r8976, %r8800;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8981, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8983, %r8981, %r8811;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8986, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8988, %r8986, %r8822;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8991, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8993, %r8991, %r8833;
	// end inline asm
	// begin inline asm
	mov.b32 %r9001, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9012, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r8998, %r839, %r2424, %r9001, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9002, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9003, %r9001, %r9002;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9006, %r8998, %r9003;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9009, %r850, %r2424, %r9012, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9013, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9014, %r9012, %r9013;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9017, %r9009, %r9014;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9020, %r839, %r2446, %r9001, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9024, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9025, %r9001, %r9024;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9028, %r9020, %r9025;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9031, %r850, %r2446, %r9012, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9035, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9036, %r9012, %r9035;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9039, %r9031, %r9036;
	// end inline asm
	// begin inline asm
	mov.b32 %r9047, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9058, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9044, %r839, %r2470, %r9047, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9048, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9049, %r9047, %r9048;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9052, %r9044, %r9049;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9055, %r850, %r2470, %r9058, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9059, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9060, %r9058, %r9059;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9063, %r9055, %r9060;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9066, %r839, %r2492, %r9047, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9070, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9071, %r9047, %r9070;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9074, %r9066, %r9071;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9077, %r850, %r2492, %r9058, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9081, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9082, %r9058, %r9081;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9085, %r9077, %r9082;
	// end inline asm
	// begin inline asm
	mov.b32 %r9093, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9104, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9090, %r839, %r2516, %r9093, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9094, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9095, %r9093, %r9094;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9098, %r9090, %r9095;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9101, %r850, %r2516, %r9104, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9105, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9106, %r9104, %r9105;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9109, %r9101, %r9106;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9112, %r839, %r2538, %r9093, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9116, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9117, %r9093, %r9116;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9120, %r9112, %r9117;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9123, %r850, %r2538, %r9104, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9127, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9128, %r9104, %r9127;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9131, %r9123, %r9128;
	// end inline asm
	// begin inline asm
	mov.b32 %r9139, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9150, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9136, %r839, %r2562, %r9139, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9140, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9141, %r9139, %r9140;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9144, %r9136, %r9141;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9147, %r850, %r2562, %r9150, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9151, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9152, %r9150, %r9151;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9155, %r9147, %r9152;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9158, %r839, %r2584, %r9139, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9162, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9163, %r9139, %r9162;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9166, %r9158, %r9163;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9169, %r850, %r2584, %r9150, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9173, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9174, %r9150, %r9173;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9177, %r9169, %r9174;
	// end inline asm
	// begin inline asm
	mov.b32 %r9185, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9196, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9182, %r839, %r2608, %r9185, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9186, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9187, %r9185, %r9186;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9190, %r9182, %r9187;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9193, %r850, %r2608, %r9196, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9197, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9198, %r9196, %r9197;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9201, %r9193, %r9198;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9204, %r839, %r2630, %r9185, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9208, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9209, %r9185, %r9208;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9212, %r9204, %r9209;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9215, %r850, %r2630, %r9196, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9219, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9220, %r9196, %r9219;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9223, %r9215, %r9220;
	// end inline asm
	// begin inline asm
	mov.b32 %r9231, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9242, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9228, %r839, %r2654, %r9231, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9232, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9233, %r9231, %r9232;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9236, %r9228, %r9233;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9239, %r850, %r2654, %r9242, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9243, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9244, %r9242, %r9243;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9247, %r9239, %r9244;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9250, %r839, %r2676, %r9231, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9254, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9255, %r9231, %r9254;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9258, %r9250, %r9255;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9261, %r850, %r2676, %r9242, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9265, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9266, %r9242, %r9265;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9269, %r9261, %r9266;
	// end inline asm
	// begin inline asm
	mov.b32 %r9277, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9288, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9274, %r839, %r2700, %r9277, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9278, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9279, %r9277, %r9278;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9282, %r9274, %r9279;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9285, %r850, %r2700, %r9288, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9289, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9290, %r9288, %r9289;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9293, %r9285, %r9290;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9296, %r839, %r2722, %r9277, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9300, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9301, %r9277, %r9300;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9304, %r9296, %r9301;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9307, %r850, %r2722, %r9288, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9311, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9312, %r9288, %r9311;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9315, %r9307, %r9312;
	// end inline asm
	// begin inline asm
	mov.b32 %r9323, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9334, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9320, %r839, %r2746, %r9323, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9324, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9325, %r9323, %r9324;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9328, %r9320, %r9325;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9331, %r850, %r2746, %r9334, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9335, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9336, %r9334, %r9335;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9339, %r9331, %r9336;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9342, %r839, %r2768, %r9323, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9346, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9347, %r9323, %r9346;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9350, %r9342, %r9347;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9353, %r850, %r2768, %r9334, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9357, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9358, %r9334, %r9357;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9361, %r9353, %r9358;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9364, %r279, %r9006, %r8838;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9368, %r279, %r9017, %r8843;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9372, %r279, %r9028, %r8848;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9376, %r279, %r9039, %r8853;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9380, %r279, %r9052, %r8858;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9384, %r279, %r9063, %r8863;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9388, %r279, %r9074, %r8868;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9392, %r279, %r9085, %r8873;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9396, %r279, %r9098, %r8878;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9400, %r279, %r9109, %r8883;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9404, %r279, %r9120, %r8888;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9408, %r279, %r9131, %r8893;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9412, %r279, %r9144, %r8898;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9416, %r279, %r9155, %r8903;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9420, %r279, %r9166, %r8908;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9424, %r279, %r9177, %r8913;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9428, %r297, %r9190, %r8918;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9432, %r297, %r9201, %r8923;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9436, %r297, %r9212, %r8928;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9440, %r297, %r9223, %r8933;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9444, %r297, %r9236, %r8938;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9448, %r297, %r9247, %r8943;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9452, %r297, %r9258, %r8948;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9456, %r297, %r9269, %r8953;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9460, %r297, %r9282, %r8958;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9464, %r297, %r9293, %r8963;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9468, %r297, %r9304, %r8968;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9472, %r297, %r9315, %r8973;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9476, %r297, %r9328, %r8978;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9480, %r297, %r9339, %r8983;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9484, %r297, %r9350, %r8988;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9488, %r297, %r9361, %r8993;
	// end inline asm
	// begin inline asm
	mov.b32 %r9497, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9508, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9494, %r839, %r840, %r9497, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9498, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9499, %r9497, %r9498;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9502, %r9494, %r9499;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9505, %r850, %r840, %r9508, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9509, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9510, %r9508, %r9509;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9513, %r9505, %r9510;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9516, %r839, %r862, %r9497, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9520, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9521, %r9497, %r9520;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9524, %r9516, %r9521;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9527, %r850, %r862, %r9508, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9531, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9532, %r9508, %r9531;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9535, %r9527, %r9532;
	// end inline asm
	// begin inline asm
	mov.b32 %r9543, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9554, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9540, %r839, %r886, %r9543, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9544, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9545, %r9543, %r9544;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9548, %r9540, %r9545;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9551, %r850, %r886, %r9554, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9555, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9556, %r9554, %r9555;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9559, %r9551, %r9556;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9562, %r839, %r908, %r9543, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9566, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9567, %r9543, %r9566;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9570, %r9562, %r9567;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9573, %r850, %r908, %r9554, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9577, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9578, %r9554, %r9577;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9581, %r9573, %r9578;
	// end inline asm
	// begin inline asm
	mov.b32 %r9589, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9600, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9586, %r839, %r932, %r9589, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9590, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9591, %r9589, %r9590;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9594, %r9586, %r9591;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9597, %r850, %r932, %r9600, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9601, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9602, %r9600, %r9601;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9605, %r9597, %r9602;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9608, %r839, %r954, %r9589, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9612, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9613, %r9589, %r9612;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9616, %r9608, %r9613;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9619, %r850, %r954, %r9600, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9623, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9624, %r9600, %r9623;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9627, %r9619, %r9624;
	// end inline asm
	// begin inline asm
	mov.b32 %r9635, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9646, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9632, %r839, %r978, %r9635, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9636, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9637, %r9635, %r9636;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9640, %r9632, %r9637;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9643, %r850, %r978, %r9646, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9647, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9648, %r9646, %r9647;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9651, %r9643, %r9648;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9654, %r839, %r1000, %r9635, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9658, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9659, %r9635, %r9658;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9662, %r9654, %r9659;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9665, %r850, %r1000, %r9646, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9669, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9670, %r9646, %r9669;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9673, %r9665, %r9670;
	// end inline asm
	// begin inline asm
	mov.b32 %r9681, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9692, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9678, %r839, %r1024, %r9681, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9682, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9683, %r9681, %r9682;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9686, %r9678, %r9683;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9689, %r850, %r1024, %r9692, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9693, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9694, %r9692, %r9693;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9697, %r9689, %r9694;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9700, %r839, %r1046, %r9681, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9704, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9705, %r9681, %r9704;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9708, %r9700, %r9705;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9711, %r850, %r1046, %r9692, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9715, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9716, %r9692, %r9715;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9719, %r9711, %r9716;
	// end inline asm
	// begin inline asm
	mov.b32 %r9727, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9738, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9724, %r839, %r1070, %r9727, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9728, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9729, %r9727, %r9728;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9732, %r9724, %r9729;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9735, %r850, %r1070, %r9738, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9739, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9740, %r9738, %r9739;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9743, %r9735, %r9740;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9746, %r839, %r1092, %r9727, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9750, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9751, %r9727, %r9750;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9754, %r9746, %r9751;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9757, %r850, %r1092, %r9738, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9761, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9762, %r9738, %r9761;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9765, %r9757, %r9762;
	// end inline asm
	// begin inline asm
	mov.b32 %r9773, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9784, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9770, %r839, %r1116, %r9773, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9774, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9775, %r9773, %r9774;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9778, %r9770, %r9775;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9781, %r850, %r1116, %r9784, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9785, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9786, %r9784, %r9785;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9789, %r9781, %r9786;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9792, %r839, %r1138, %r9773, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9796, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9797, %r9773, %r9796;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9800, %r9792, %r9797;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9803, %r850, %r1138, %r9784, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9807, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9808, %r9784, %r9807;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9811, %r9803, %r9808;
	// end inline asm
	// begin inline asm
	mov.b32 %r9819, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9830, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9816, %r839, %r1162, %r9819, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9820, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9821, %r9819, %r9820;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9824, %r9816, %r9821;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9827, %r850, %r1162, %r9830, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9831, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9832, %r9830, %r9831;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9835, %r9827, %r9832;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9838, %r839, %r1184, %r9819, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9842, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9843, %r9819, %r9842;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9846, %r9838, %r9843;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9849, %r850, %r1184, %r9830, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9853, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9854, %r9830, %r9853;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9857, %r9849, %r9854;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9860, %r315;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9862, %r9860, %r9502, %r9364;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9866, %r315;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9868, %r9866, %r9513, %r9368;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9872, %r315;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9874, %r9872, %r9524, %r9372;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9878, %r315;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9880, %r9878, %r9535, %r9376;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9884, %r315;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9886, %r9884, %r9548, %r9380;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9890, %r315;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9892, %r9890, %r9559, %r9384;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9896, %r315;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9898, %r9896, %r9570, %r9388;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9902, %r315;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9904, %r9902, %r9581, %r9392;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9908, %r315;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9910, %r9908, %r9594, %r9396;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9914, %r315;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9916, %r9914, %r9605, %r9400;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9920, %r315;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9922, %r9920, %r9616, %r9404;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9926, %r315;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9928, %r9926, %r9627, %r9408;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9932, %r315;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9934, %r9932, %r9640, %r9412;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9938, %r315;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9940, %r9938, %r9651, %r9416;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9944, %r315;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9946, %r9944, %r9662, %r9420;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9950, %r315;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9952, %r9950, %r9673, %r9424;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9956, %r333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9958, %r9956, %r9686, %r9428;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9962, %r333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9964, %r9962, %r9697, %r9432;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9968, %r333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9970, %r9968, %r9708, %r9436;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9974, %r333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9976, %r9974, %r9719, %r9440;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9980, %r333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9982, %r9980, %r9732, %r9444;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9986, %r333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9988, %r9986, %r9743, %r9448;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9992, %r333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9994, %r9992, %r9754, %r9452;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9998, %r333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10000, %r9998, %r9765, %r9456;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10004, %r333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10006, %r10004, %r9778, %r9460;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10010, %r333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10012, %r10010, %r9789, %r9464;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10016, %r333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10018, %r10016, %r9800, %r9468;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10022, %r333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10024, %r10022, %r9811, %r9472;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10028, %r333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10030, %r10028, %r9824, %r9476;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10034, %r333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10036, %r10034, %r9835, %r9480;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10040, %r333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10042, %r10040, %r9846, %r9484;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10046, %r333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10048, %r10046, %r9857, %r9488;
	// end inline asm
	// begin inline asm
	mov.b32 %r10057, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10068, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10054, %r839, %r4656, %r10057, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10058, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10059, %r10057, %r10058;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10062, %r10054, %r10059;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10065, %r850, %r4656, %r10068, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10069, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10070, %r10068, %r10069;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10073, %r10065, %r10070;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10076, %r839, %r4678, %r10057, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10080, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10081, %r10057, %r10080;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10084, %r10076, %r10081;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10087, %r850, %r4678, %r10068, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10091, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10092, %r10068, %r10091;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10095, %r10087, %r10092;
	// end inline asm
	// begin inline asm
	mov.b32 %r10103, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10114, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10100, %r839, %r4702, %r10103, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10104, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10105, %r10103, %r10104;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10108, %r10100, %r10105;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10111, %r850, %r4702, %r10114, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10115, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10116, %r10114, %r10115;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10119, %r10111, %r10116;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10122, %r839, %r4724, %r10103, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10126, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10127, %r10103, %r10126;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10130, %r10122, %r10127;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10133, %r850, %r4724, %r10114, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10137, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10138, %r10114, %r10137;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10141, %r10133, %r10138;
	// end inline asm
	// begin inline asm
	mov.b32 %r10149, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10160, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10146, %r839, %r4748, %r10149, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10150, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10151, %r10149, %r10150;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10154, %r10146, %r10151;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10157, %r850, %r4748, %r10160, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10161, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10162, %r10160, %r10161;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10165, %r10157, %r10162;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10168, %r839, %r4770, %r10149, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10172, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10173, %r10149, %r10172;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10176, %r10168, %r10173;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10179, %r850, %r4770, %r10160, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10183, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10184, %r10160, %r10183;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10187, %r10179, %r10184;
	// end inline asm
	// begin inline asm
	mov.b32 %r10195, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10206, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10192, %r839, %r4794, %r10195, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10196, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10197, %r10195, %r10196;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10200, %r10192, %r10197;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10203, %r850, %r4794, %r10206, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10207, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10208, %r10206, %r10207;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10211, %r10203, %r10208;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10214, %r839, %r4816, %r10195, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10218, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10219, %r10195, %r10218;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10222, %r10214, %r10219;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10225, %r850, %r4816, %r10206, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10229, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10230, %r10206, %r10229;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10233, %r10225, %r10230;
	// end inline asm
	// begin inline asm
	mov.b32 %r10241, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10252, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10238, %r839, %r4840, %r10241, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10242, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10243, %r10241, %r10242;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10246, %r10238, %r10243;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10249, %r850, %r4840, %r10252, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10253, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10254, %r10252, %r10253;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10257, %r10249, %r10254;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10260, %r839, %r4862, %r10241, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10264, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10265, %r10241, %r10264;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10268, %r10260, %r10265;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10271, %r850, %r4862, %r10252, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10275, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10276, %r10252, %r10275;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10279, %r10271, %r10276;
	// end inline asm
	// begin inline asm
	mov.b32 %r10287, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10298, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10284, %r839, %r4886, %r10287, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10288, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10289, %r10287, %r10288;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10292, %r10284, %r10289;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10295, %r850, %r4886, %r10298, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10299, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10300, %r10298, %r10299;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10303, %r10295, %r10300;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10306, %r839, %r4908, %r10287, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10310, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10311, %r10287, %r10310;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10314, %r10306, %r10311;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10317, %r850, %r4908, %r10298, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10321, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10322, %r10298, %r10321;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10325, %r10317, %r10322;
	// end inline asm
	// begin inline asm
	mov.b32 %r10333, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10344, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10330, %r839, %r4932, %r10333, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10334, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10335, %r10333, %r10334;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10338, %r10330, %r10335;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10341, %r850, %r4932, %r10344, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10345, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10346, %r10344, %r10345;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10349, %r10341, %r10346;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10352, %r839, %r4954, %r10333, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10356, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10357, %r10333, %r10356;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10360, %r10352, %r10357;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10363, %r850, %r4954, %r10344, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10367, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10368, %r10344, %r10367;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10371, %r10363, %r10368;
	// end inline asm
	// begin inline asm
	mov.b32 %r10379, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10390, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10376, %r839, %r4978, %r10379, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10380, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10381, %r10379, %r10380;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10384, %r10376, %r10381;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10387, %r850, %r4978, %r10390, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10391, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10392, %r10390, %r10391;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10395, %r10387, %r10392;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10398, %r839, %r5000, %r10379, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10402, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10403, %r10379, %r10402;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10406, %r10398, %r10403;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10409, %r850, %r5000, %r10390, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10413, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10414, %r10390, %r10413;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10417, %r10409, %r10414;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10555, %r351, %r10062, %r9862;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10552, %r351, %r10073, %r9868;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10564, %r351, %r10084, %r9874;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10561, %r351, %r10095, %r9880;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10573, %r351, %r10108, %r9886;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10570, %r351, %r10119, %r9892;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10582, %r351, %r10130, %r9898;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10579, %r351, %r10141, %r9904;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10591, %r351, %r10154, %r9910;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10588, %r351, %r10165, %r9916;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10600, %r351, %r10176, %r9922;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10597, %r351, %r10187, %r9928;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10609, %r351, %r10200, %r9934;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10606, %r351, %r10211, %r9940;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10618, %r351, %r10222, %r9946;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10615, %r351, %r10233, %r9952;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10627, %r369, %r10246, %r9958;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10624, %r369, %r10257, %r9964;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10636, %r369, %r10268, %r9970;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10633, %r369, %r10279, %r9976;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10645, %r369, %r10292, %r9982;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10642, %r369, %r10303, %r9988;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10654, %r369, %r10314, %r9994;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10651, %r369, %r10325, %r10000;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10663, %r369, %r10338, %r10006;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10660, %r369, %r10349, %r10012;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10672, %r369, %r10360, %r10018;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10669, %r369, %r10371, %r10024;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10681, %r369, %r10384, %r10030;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10678, %r369, %r10395, %r10036;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10690, %r369, %r10406, %r10042;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10687, %r369, %r10417, %r10048;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10548, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10550, %r10548, %r10552;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10553, %r433, %r10555, %r10550;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10557, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10559, %r10557, %r10561;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10562, %r433, %r10564, %r10559;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10566, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10568, %r10566, %r10570;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10571, %r433, %r10573, %r10568;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10575, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10577, %r10575, %r10579;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10580, %r433, %r10582, %r10577;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10584, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10586, %r10584, %r10588;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10589, %r433, %r10591, %r10586;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10593, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10595, %r10593, %r10597;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10598, %r433, %r10600, %r10595;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10602, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10604, %r10602, %r10606;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10607, %r433, %r10609, %r10604;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10611, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10613, %r10611, %r10615;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10616, %r433, %r10618, %r10613;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10620, %r442;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10622, %r10620, %r10624;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10625, %r436, %r10627, %r10622;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10629, %r442;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10631, %r10629, %r10633;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10634, %r436, %r10636, %r10631;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10638, %r442;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10640, %r10638, %r10642;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10643, %r436, %r10645, %r10640;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10647, %r442;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10649, %r10647, %r10651;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10652, %r436, %r10654, %r10649;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10656, %r442;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10658, %r10656, %r10660;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10661, %r436, %r10663, %r10658;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10665, %r442;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10667, %r10665, %r10669;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10670, %r436, %r10672, %r10667;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10674, %r442;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10676, %r10674, %r10678;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10679, %r436, %r10681, %r10676;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10683, %r442;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10685, %r10683, %r10687;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10688, %r436, %r10690, %r10685;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10692, %r439, %r10555;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10695, %r433, %r10552, %r10692;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10699, %r439, %r10564;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10702, %r433, %r10561, %r10699;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10706, %r439, %r10573;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10709, %r433, %r10570, %r10706;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10713, %r439, %r10582;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10716, %r433, %r10579, %r10713;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10720, %r439, %r10591;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10723, %r433, %r10588, %r10720;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10727, %r439, %r10600;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10730, %r433, %r10597, %r10727;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10734, %r439, %r10609;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10737, %r433, %r10606, %r10734;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10741, %r439, %r10618;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10744, %r433, %r10615, %r10741;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10748, %r442, %r10627;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10751, %r436, %r10624, %r10748;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10755, %r442, %r10636;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10758, %r436, %r10633, %r10755;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10762, %r442, %r10645;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10765, %r436, %r10642, %r10762;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10769, %r442, %r10654;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10772, %r436, %r10651, %r10769;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10776, %r442, %r10663;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10779, %r436, %r10660, %r10776;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10783, %r442, %r10672;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10786, %r436, %r10669, %r10783;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10790, %r442, %r10681;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10793, %r436, %r10678, %r10790;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10797, %r442, %r10690;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10800, %r436, %r10687, %r10797;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r10971, %r10968}, {%r481, %r487, %r484, %r490}, {%r10553, %r10695}, {%r3180, %r3180};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r10980, %r10977}, {%r481, %r487, %r484, %r490}, {%r10562, %r10702}, {%r3180, %r3180};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r10989, %r10986}, {%r481, %r487, %r484, %r490}, {%r10571, %r10709}, {%r3180, %r3180};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r10998, %r10995}, {%r481, %r487, %r484, %r490}, {%r10580, %r10716}, {%r3180, %r3180};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11007, %r11004}, {%r481, %r487, %r484, %r490}, {%r10589, %r10723}, {%r3180, %r3180};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11016, %r11013}, {%r481, %r487, %r484, %r490}, {%r10598, %r10730}, {%r3180, %r3180};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11025, %r11022}, {%r481, %r487, %r484, %r490}, {%r10607, %r10737}, {%r3180, %r3180};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11034, %r11031}, {%r481, %r487, %r484, %r490}, {%r10616, %r10744}, {%r3180, %r3180};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11043, %r11040}, {%r481, %r487, %r484, %r490}, {%r10625, %r10751}, {%r3180, %r3180};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11052, %r11049}, {%r481, %r487, %r484, %r490}, {%r10634, %r10758}, {%r3180, %r3180};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11061, %r11058}, {%r481, %r487, %r484, %r490}, {%r10643, %r10765}, {%r3180, %r3180};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11070, %r11067}, {%r481, %r487, %r484, %r490}, {%r10652, %r10772}, {%r3180, %r3180};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11079, %r11076}, {%r481, %r487, %r484, %r490}, {%r10661, %r10779}, {%r3180, %r3180};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11088, %r11085}, {%r481, %r487, %r484, %r490}, {%r10670, %r10786}, {%r3180, %r3180};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11097, %r11094}, {%r481, %r487, %r484, %r490}, {%r10679, %r10793}, {%r3180, %r3180};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11106, %r11103}, {%r481, %r487, %r484, %r490}, {%r10688, %r10800}, {%r3180, %r3180};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10964, %r531;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10966, %r10964, %r10968;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10969, %r528, %r10971, %r10966;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10973, %r531;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10975, %r10973, %r10977;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10978, %r528, %r10980, %r10975;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10982, %r531;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10984, %r10982, %r10986;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10987, %r528, %r10989, %r10984;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10991, %r531;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10993, %r10991, %r10995;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10996, %r528, %r10998, %r10993;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11000, %r531;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11002, %r11000, %r11004;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11005, %r528, %r11007, %r11002;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11009, %r531;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11011, %r11009, %r11013;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11014, %r528, %r11016, %r11011;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11018, %r531;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11020, %r11018, %r11022;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11023, %r528, %r11025, %r11020;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11027, %r531;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11029, %r11027, %r11031;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11032, %r528, %r11034, %r11029;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11036, %r531;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11038, %r11036, %r11040;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11041, %r528, %r11043, %r11038;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11045, %r531;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11047, %r11045, %r11049;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11050, %r528, %r11052, %r11047;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11054, %r531;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11056, %r11054, %r11058;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11059, %r528, %r11061, %r11056;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11063, %r531;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11065, %r11063, %r11067;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11068, %r528, %r11070, %r11065;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11072, %r531;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11074, %r11072, %r11076;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11077, %r528, %r11079, %r11074;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11081, %r531;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11083, %r11081, %r11085;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11086, %r528, %r11088, %r11083;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11090, %r531;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11092, %r11090, %r11094;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11095, %r528, %r11097, %r11092;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11099, %r531;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11101, %r11099, %r11103;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11104, %r528, %r11106, %r11101;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11108, %r531, %r10971;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11111, %r528, %r10968, %r11108;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11115, %r531, %r10980;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11118, %r528, %r10977, %r11115;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11122, %r531, %r10989;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11125, %r528, %r10986, %r11122;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11129, %r531, %r10998;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11132, %r528, %r10995, %r11129;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11136, %r531, %r11007;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11139, %r528, %r11004, %r11136;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11143, %r531, %r11016;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11146, %r528, %r11013, %r11143;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11150, %r531, %r11025;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11153, %r528, %r11022, %r11150;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11157, %r531, %r11034;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11160, %r528, %r11031, %r11157;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11164, %r531, %r11043;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11167, %r528, %r11040, %r11164;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11171, %r531, %r11052;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11174, %r528, %r11049, %r11171;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11178, %r531, %r11061;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11181, %r528, %r11058, %r11178;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11185, %r531, %r11070;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11188, %r528, %r11067, %r11185;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11192, %r531, %r11079;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11195, %r528, %r11076, %r11192;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11199, %r531, %r11088;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11202, %r528, %r11085, %r11199;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11206, %r531, %r11097;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11209, %r528, %r11094, %r11206;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11213, %r531, %r11106;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11216, %r528, %r11103, %r11213;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11509, %r11512}, {%r571, %r577, %r574, %r580}, {%r10969, %r11111}, {%r3180, %r3180};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11515, %r11518}, {%r571, %r577, %r574, %r580}, {%r10978, %r11118}, {%r3180, %r3180};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11521, %r11524}, {%r571, %r577, %r574, %r580}, {%r10987, %r11125}, {%r3180, %r3180};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11527, %r11530}, {%r571, %r577, %r574, %r580}, {%r10996, %r11132}, {%r3180, %r3180};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11533, %r11536}, {%r571, %r577, %r574, %r580}, {%r11005, %r11139}, {%r3180, %r3180};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11539, %r11542}, {%r571, %r577, %r574, %r580}, {%r11014, %r11146}, {%r3180, %r3180};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11545, %r11548}, {%r571, %r577, %r574, %r580}, {%r11023, %r11153}, {%r3180, %r3180};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11551, %r11554}, {%r571, %r577, %r574, %r580}, {%r11032, %r11160}, {%r3180, %r3180};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11510, %r11513}, {%r571, %r577, %r574, %r580}, {%r11041, %r11167}, {%r3180, %r3180};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11516, %r11519}, {%r571, %r577, %r574, %r580}, {%r11050, %r11174}, {%r3180, %r3180};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11522, %r11525}, {%r571, %r577, %r574, %r580}, {%r11059, %r11181}, {%r3180, %r3180};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11528, %r11531}, {%r571, %r577, %r574, %r580}, {%r11068, %r11188}, {%r3180, %r3180};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11534, %r11537}, {%r571, %r577, %r574, %r580}, {%r11077, %r11195}, {%r3180, %r3180};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11540, %r11543}, {%r571, %r577, %r574, %r580}, {%r11086, %r11202}, {%r3180, %r3180};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11546, %r11549}, {%r571, %r577, %r574, %r580}, {%r11095, %r11209}, {%r3180, %r3180};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11552, %r11555}, {%r571, %r577, %r574, %r580}, {%r11104, %r11216}, {%r3180, %r3180};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11508, %r11509, %r11510;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11511, %r11512, %r11513;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11514, %r11515, %r11516;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11517, %r11518, %r11519;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11520, %r11521, %r11522;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11523, %r11524, %r11525;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11526, %r11527, %r11528;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11529, %r11530, %r11531;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11532, %r11533, %r11534;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11535, %r11536, %r11537;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11538, %r11539, %r11540;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11541, %r11542, %r11543;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11544, %r11545, %r11546;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11547, %r11548, %r11549;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11550, %r11551, %r11552;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11553, %r11554, %r11555;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11556, %r11509, %r11510;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11559, %r11512, %r11513;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11562, %r11515, %r11516;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11565, %r11518, %r11519;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11568, %r11521, %r11522;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11571, %r11524, %r11525;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11574, %r11527, %r11528;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11577, %r11530, %r11531;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11580, %r11533, %r11534;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11583, %r11536, %r11537;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11586, %r11539, %r11540;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11589, %r11542, %r11543;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11592, %r11545, %r11546;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11595, %r11548, %r11549;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11598, %r11551, %r11552;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11601, %r11554, %r11555;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11604, %r16, %r11508;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11607, %r16, %r11511;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11610, %r16, %r11514;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11613, %r16, %r11517;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11616, %r16, %r11520;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11619, %r16, %r11523;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11622, %r16, %r11526;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11625, %r16, %r11529;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11628, %r16, %r11532;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11631, %r16, %r11535;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11634, %r16, %r11538;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11637, %r16, %r11541;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11640, %r16, %r11544;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11643, %r16, %r11547;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11646, %r16, %r11550;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11649, %r16, %r11553;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11652, %r17, %r11556;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11655, %r17, %r11559;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11658, %r17, %r11562;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11661, %r17, %r11565;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11664, %r17, %r11568;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11667, %r17, %r11571;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11670, %r17, %r11574;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11673, %r17, %r11577;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11676, %r17, %r11580;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11679, %r17, %r11583;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11682, %r17, %r11586;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11685, %r17, %r11589;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11688, %r17, %r11592;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11691, %r17, %r11595;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11694, %r17, %r11598;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11697, %r17, %r11601;
	// end inline asm
	// begin inline asm
	mov.b32 %r11700, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11701, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11702, %r11604, %r11700;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11705, %r11702, %r11701;
	// end inline asm
	// begin inline asm
	mov.b32 %r11708, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11709, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11710, %r11607, %r11708;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11713, %r11710, %r11709;
	// end inline asm
	// begin inline asm
	mov.b32 %r11716, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11717, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11718, %r11610, %r11716;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11721, %r11718, %r11717;
	// end inline asm
	// begin inline asm
	mov.b32 %r11724, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11725, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11726, %r11613, %r11724;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11729, %r11726, %r11725;
	// end inline asm
	// begin inline asm
	mov.b32 %r11732, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11733, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11734, %r11616, %r11732;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11737, %r11734, %r11733;
	// end inline asm
	// begin inline asm
	mov.b32 %r11740, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11741, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11742, %r11619, %r11740;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11745, %r11742, %r11741;
	// end inline asm
	// begin inline asm
	mov.b32 %r11748, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11749, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11750, %r11622, %r11748;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11753, %r11750, %r11749;
	// end inline asm
	// begin inline asm
	mov.b32 %r11756, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11757, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11758, %r11625, %r11756;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11761, %r11758, %r11757;
	// end inline asm
	// begin inline asm
	mov.b32 %r11764, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11765, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11766, %r11628, %r11764;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11769, %r11766, %r11765;
	// end inline asm
	// begin inline asm
	mov.b32 %r11772, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11773, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11774, %r11631, %r11772;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11777, %r11774, %r11773;
	// end inline asm
	// begin inline asm
	mov.b32 %r11780, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11781, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11782, %r11634, %r11780;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11785, %r11782, %r11781;
	// end inline asm
	// begin inline asm
	mov.b32 %r11788, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11789, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11790, %r11637, %r11788;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11793, %r11790, %r11789;
	// end inline asm
	// begin inline asm
	mov.b32 %r11796, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11797, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11798, %r11640, %r11796;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11801, %r11798, %r11797;
	// end inline asm
	// begin inline asm
	mov.b32 %r11804, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11805, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11806, %r11643, %r11804;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11809, %r11806, %r11805;
	// end inline asm
	// begin inline asm
	mov.b32 %r11812, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11813, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11814, %r11646, %r11812;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11817, %r11814, %r11813;
	// end inline asm
	// begin inline asm
	mov.b32 %r11820, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11821, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11822, %r11649, %r11820;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11825, %r11822, %r11821;
	// end inline asm
	// begin inline asm
	mov.b32 %r11828, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11829, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11830, %r11652, %r11828;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11833, %r11830, %r11829;
	// end inline asm
	// begin inline asm
	mov.b32 %r11836, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11837, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11838, %r11655, %r11836;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11841, %r11838, %r11837;
	// end inline asm
	// begin inline asm
	mov.b32 %r11844, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11845, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11846, %r11658, %r11844;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11849, %r11846, %r11845;
	// end inline asm
	// begin inline asm
	mov.b32 %r11852, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11853, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11854, %r11661, %r11852;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11857, %r11854, %r11853;
	// end inline asm
	// begin inline asm
	mov.b32 %r11860, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11861, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11862, %r11664, %r11860;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11865, %r11862, %r11861;
	// end inline asm
	// begin inline asm
	mov.b32 %r11868, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11869, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11870, %r11667, %r11868;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11873, %r11870, %r11869;
	// end inline asm
	// begin inline asm
	mov.b32 %r11876, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11877, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11878, %r11670, %r11876;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11881, %r11878, %r11877;
	// end inline asm
	// begin inline asm
	mov.b32 %r11884, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11885, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11886, %r11673, %r11884;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11889, %r11886, %r11885;
	// end inline asm
	// begin inline asm
	mov.b32 %r11892, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11893, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11894, %r11676, %r11892;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11897, %r11894, %r11893;
	// end inline asm
	// begin inline asm
	mov.b32 %r11900, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11901, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11902, %r11679, %r11900;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11905, %r11902, %r11901;
	// end inline asm
	// begin inline asm
	mov.b32 %r11908, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11909, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11910, %r11682, %r11908;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11913, %r11910, %r11909;
	// end inline asm
	// begin inline asm
	mov.b32 %r11916, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11917, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11918, %r11685, %r11916;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11921, %r11918, %r11917;
	// end inline asm
	// begin inline asm
	mov.b32 %r11924, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11925, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11926, %r11688, %r11924;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11929, %r11926, %r11925;
	// end inline asm
	// begin inline asm
	mov.b32 %r11932, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11933, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11934, %r11691, %r11932;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11937, %r11934, %r11933;
	// end inline asm
	// begin inline asm
	mov.b32 %r11940, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11941, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11942, %r11694, %r11940;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11945, %r11942, %r11941;
	// end inline asm
	// begin inline asm
	mov.b32 %r11948, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11949, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11950, %r11697, %r11948;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11953, %r11950, %r11949;
	// end inline asm
	// begin inline asm
	mov.b32 %r11959, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r11957, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11958, %r11959, %r11957;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11961, %r11705, %r11958;
	// end inline asm
	// begin inline asm
	mov.b32 %r11964, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11965, %r11959, %r11964;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11968, %r11713, %r11965;
	// end inline asm
	// begin inline asm
	mov.b32 %r11971, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11972, %r11959, %r11971;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11975, %r11721, %r11972;
	// end inline asm
	// begin inline asm
	mov.b32 %r11978, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11979, %r11959, %r11978;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11982, %r11729, %r11979;
	// end inline asm
	// begin inline asm
	prmt.b32 %r11985, %r11961, %r11975, %r4356;
	// end inline asm
	// begin inline asm
	prmt.b32 %r11989, %r11968, %r11982, %r4356;
	// end inline asm
	shl.b32 	%r11996, %r11989, 4;
	// begin inline asm
	lop3.b32 %r11993, %r4362, %r11985, %r11996, 202;
	// end inline asm
	xor.b32  	%r16124, %r11993, -2004318072;
	// begin inline asm
	mov.b32 %r12000, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r11998, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11999, %r12000, %r11998;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12002, %r11737, %r11999;
	// end inline asm
	// begin inline asm
	mov.b32 %r12005, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12006, %r12000, %r12005;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12009, %r11745, %r12006;
	// end inline asm
	// begin inline asm
	mov.b32 %r12012, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12013, %r12000, %r12012;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12016, %r11753, %r12013;
	// end inline asm
	// begin inline asm
	mov.b32 %r12019, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12020, %r12000, %r12019;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12023, %r11761, %r12020;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12026, %r12002, %r12016, %r4356;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12030, %r12009, %r12023, %r4356;
	// end inline asm
	shl.b32 	%r12037, %r12030, 4;
	// begin inline asm
	lop3.b32 %r12034, %r4362, %r12026, %r12037, 202;
	// end inline asm
	xor.b32  	%r16125, %r12034, -2004318072;
	// begin inline asm
	mov.b32 %r12041, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12039, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12040, %r12041, %r12039;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12043, %r11769, %r12040;
	// end inline asm
	// begin inline asm
	mov.b32 %r12046, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12047, %r12041, %r12046;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12050, %r11777, %r12047;
	// end inline asm
	// begin inline asm
	mov.b32 %r12053, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12054, %r12041, %r12053;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12057, %r11785, %r12054;
	// end inline asm
	// begin inline asm
	mov.b32 %r12060, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12061, %r12041, %r12060;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12064, %r11793, %r12061;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12067, %r12043, %r12057, %r4356;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12071, %r12050, %r12064, %r4356;
	// end inline asm
	shl.b32 	%r12078, %r12071, 4;
	// begin inline asm
	lop3.b32 %r12075, %r4362, %r12067, %r12078, 202;
	// end inline asm
	xor.b32  	%r16126, %r12075, -2004318072;
	// begin inline asm
	mov.b32 %r12082, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12080, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12081, %r12082, %r12080;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12084, %r11801, %r12081;
	// end inline asm
	// begin inline asm
	mov.b32 %r12087, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12088, %r12082, %r12087;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12091, %r11809, %r12088;
	// end inline asm
	// begin inline asm
	mov.b32 %r12094, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12095, %r12082, %r12094;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12098, %r11817, %r12095;
	// end inline asm
	// begin inline asm
	mov.b32 %r12101, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12102, %r12082, %r12101;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12105, %r11825, %r12102;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12108, %r12084, %r12098, %r4356;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12112, %r12091, %r12105, %r4356;
	// end inline asm
	shl.b32 	%r12119, %r12112, 4;
	// begin inline asm
	lop3.b32 %r12116, %r4362, %r12108, %r12119, 202;
	// end inline asm
	xor.b32  	%r16127, %r12116, -2004318072;
	// begin inline asm
	mov.b32 %r12123, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12121, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12122, %r12123, %r12121;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12125, %r11833, %r12122;
	// end inline asm
	// begin inline asm
	mov.b32 %r12128, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12129, %r12123, %r12128;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12132, %r11841, %r12129;
	// end inline asm
	// begin inline asm
	mov.b32 %r12135, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12136, %r12123, %r12135;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12139, %r11849, %r12136;
	// end inline asm
	// begin inline asm
	mov.b32 %r12142, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12143, %r12123, %r12142;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12146, %r11857, %r12143;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12149, %r12125, %r12139, %r4356;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12153, %r12132, %r12146, %r4356;
	// end inline asm
	shl.b32 	%r12160, %r12153, 4;
	// begin inline asm
	lop3.b32 %r12157, %r4362, %r12149, %r12160, 202;
	// end inline asm
	xor.b32  	%r16128, %r12157, -2004318072;
	// begin inline asm
	mov.b32 %r12164, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12162, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12163, %r12164, %r12162;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12166, %r11865, %r12163;
	// end inline asm
	// begin inline asm
	mov.b32 %r12169, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12170, %r12164, %r12169;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12173, %r11873, %r12170;
	// end inline asm
	// begin inline asm
	mov.b32 %r12176, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12177, %r12164, %r12176;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12180, %r11881, %r12177;
	// end inline asm
	// begin inline asm
	mov.b32 %r12183, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12184, %r12164, %r12183;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12187, %r11889, %r12184;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12190, %r12166, %r12180, %r4356;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12194, %r12173, %r12187, %r4356;
	// end inline asm
	shl.b32 	%r12201, %r12194, 4;
	// begin inline asm
	lop3.b32 %r12198, %r4362, %r12190, %r12201, 202;
	// end inline asm
	xor.b32  	%r16129, %r12198, -2004318072;
	// begin inline asm
	mov.b32 %r12205, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12203, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12204, %r12205, %r12203;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12207, %r11897, %r12204;
	// end inline asm
	// begin inline asm
	mov.b32 %r12210, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12211, %r12205, %r12210;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12214, %r11905, %r12211;
	// end inline asm
	// begin inline asm
	mov.b32 %r12217, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12218, %r12205, %r12217;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12221, %r11913, %r12218;
	// end inline asm
	// begin inline asm
	mov.b32 %r12224, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12225, %r12205, %r12224;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12228, %r11921, %r12225;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12231, %r12207, %r12221, %r4356;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12235, %r12214, %r12228, %r4356;
	// end inline asm
	shl.b32 	%r12242, %r12235, 4;
	// begin inline asm
	lop3.b32 %r12239, %r4362, %r12231, %r12242, 202;
	// end inline asm
	xor.b32  	%r16130, %r12239, -2004318072;
	// begin inline asm
	mov.b32 %r12246, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12244, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12245, %r12246, %r12244;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12248, %r11929, %r12245;
	// end inline asm
	// begin inline asm
	mov.b32 %r12251, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12252, %r12246, %r12251;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12255, %r11937, %r12252;
	// end inline asm
	// begin inline asm
	mov.b32 %r12258, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12259, %r12246, %r12258;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12262, %r11945, %r12259;
	// end inline asm
	// begin inline asm
	mov.b32 %r12265, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12266, %r12246, %r12265;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12269, %r11953, %r12266;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12272, %r12248, %r12262, %r4356;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12276, %r12255, %r12269, %r4356;
	// end inline asm
	shl.b32 	%r12283, %r12276, 4;
	// begin inline asm
	lop3.b32 %r12280, %r4362, %r12272, %r12283, 202;
	// end inline asm
	xor.b32  	%r16131, %r12280, -2004318072;
	st.shared.u32 	[%rd93], %r16124;
	st.shared.u32 	[%rd94], %r16125;
	st.shared.u32 	[%rd95], %r16126;
	st.shared.u32 	[%rd96], %r16127;
	st.shared.u32 	[%rd97], %r16128;
	st.shared.u32 	[%rd98], %r16129;
	st.shared.u32 	[%rd99], %r16130;
	st.shared.u32 	[%rd100], %r16131;
	ld.shared.u32 	%r16248, [%rd85];
	ld.shared.u32 	%r16249, [%rd86];
	ld.shared.u32 	%r16250, [%rd87];
	ld.shared.u32 	%r16251, [%rd88];
	ld.shared.u32 	%r16260, [%rd89];
	ld.shared.u32 	%r16261, [%rd90];
	ld.shared.u32 	%r16262, [%rd91];
	ld.shared.u32 	%r16263, [%rd92];
	// begin inline asm
	mov.b32 %r12289, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12300, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12288, %r16248, -2004318072;
	// begin inline asm
	lop3.b32 %r12286, %r839, %r12288, %r12289, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12290, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12291, %r12289, %r12290;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12294, %r12286, %r12291;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12297, %r850, %r12288, %r12300, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12301, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12302, %r12300, %r12301;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12305, %r12297, %r12302;
	// end inline asm
	shr.u32 	%r12310, %r12288, 8;
	// begin inline asm
	lop3.b32 %r12308, %r839, %r12310, %r12289, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12312, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12313, %r12289, %r12312;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12316, %r12308, %r12313;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12319, %r850, %r12310, %r12300, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12323, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12324, %r12300, %r12323;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12327, %r12319, %r12324;
	// end inline asm
	// begin inline asm
	mov.b32 %r12335, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12346, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12334, %r16249, -2004318072;
	// begin inline asm
	lop3.b32 %r12332, %r839, %r12334, %r12335, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12336, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12337, %r12335, %r12336;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12340, %r12332, %r12337;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12343, %r850, %r12334, %r12346, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12347, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12348, %r12346, %r12347;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12351, %r12343, %r12348;
	// end inline asm
	shr.u32 	%r12356, %r12334, 8;
	// begin inline asm
	lop3.b32 %r12354, %r839, %r12356, %r12335, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12358, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12359, %r12335, %r12358;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12362, %r12354, %r12359;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12365, %r850, %r12356, %r12346, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12369, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12370, %r12346, %r12369;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12373, %r12365, %r12370;
	// end inline asm
	// begin inline asm
	mov.b32 %r12381, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12392, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12380, %r16250, -2004318072;
	// begin inline asm
	lop3.b32 %r12378, %r839, %r12380, %r12381, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12382, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12383, %r12381, %r12382;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12386, %r12378, %r12383;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12389, %r850, %r12380, %r12392, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12393, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12394, %r12392, %r12393;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12397, %r12389, %r12394;
	// end inline asm
	shr.u32 	%r12402, %r12380, 8;
	// begin inline asm
	lop3.b32 %r12400, %r839, %r12402, %r12381, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12404, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12405, %r12381, %r12404;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12408, %r12400, %r12405;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12411, %r850, %r12402, %r12392, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12415, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12416, %r12392, %r12415;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12419, %r12411, %r12416;
	// end inline asm
	// begin inline asm
	mov.b32 %r12427, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12438, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12426, %r16251, -2004318072;
	// begin inline asm
	lop3.b32 %r12424, %r839, %r12426, %r12427, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12428, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12429, %r12427, %r12428;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12432, %r12424, %r12429;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12435, %r850, %r12426, %r12438, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12439, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12440, %r12438, %r12439;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12443, %r12435, %r12440;
	// end inline asm
	shr.u32 	%r12448, %r12426, 8;
	// begin inline asm
	lop3.b32 %r12446, %r839, %r12448, %r12427, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12450, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12451, %r12427, %r12450;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12454, %r12446, %r12451;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12457, %r850, %r12448, %r12438, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12461, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12462, %r12438, %r12461;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12465, %r12457, %r12462;
	// end inline asm
	// begin inline asm
	mov.b32 %r12473, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12484, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12472, %r16260, -2004318072;
	// begin inline asm
	lop3.b32 %r12470, %r839, %r12472, %r12473, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12474, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12475, %r12473, %r12474;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12478, %r12470, %r12475;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12481, %r850, %r12472, %r12484, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12485, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12486, %r12484, %r12485;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12489, %r12481, %r12486;
	// end inline asm
	shr.u32 	%r12494, %r12472, 8;
	// begin inline asm
	lop3.b32 %r12492, %r839, %r12494, %r12473, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12496, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12497, %r12473, %r12496;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12500, %r12492, %r12497;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12503, %r850, %r12494, %r12484, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12507, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12508, %r12484, %r12507;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12511, %r12503, %r12508;
	// end inline asm
	// begin inline asm
	mov.b32 %r12519, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12530, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12518, %r16261, -2004318072;
	// begin inline asm
	lop3.b32 %r12516, %r839, %r12518, %r12519, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12520, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12521, %r12519, %r12520;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12524, %r12516, %r12521;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12527, %r850, %r12518, %r12530, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12531, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12532, %r12530, %r12531;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12535, %r12527, %r12532;
	// end inline asm
	shr.u32 	%r12540, %r12518, 8;
	// begin inline asm
	lop3.b32 %r12538, %r839, %r12540, %r12519, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12542, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12543, %r12519, %r12542;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12546, %r12538, %r12543;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12549, %r850, %r12540, %r12530, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12553, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12554, %r12530, %r12553;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12557, %r12549, %r12554;
	// end inline asm
	// begin inline asm
	mov.b32 %r12565, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12576, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12564, %r16262, -2004318072;
	// begin inline asm
	lop3.b32 %r12562, %r839, %r12564, %r12565, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12566, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12567, %r12565, %r12566;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12570, %r12562, %r12567;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12573, %r850, %r12564, %r12576, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12577, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12578, %r12576, %r12577;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12581, %r12573, %r12578;
	// end inline asm
	shr.u32 	%r12586, %r12564, 8;
	// begin inline asm
	lop3.b32 %r12584, %r839, %r12586, %r12565, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12588, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12589, %r12565, %r12588;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12592, %r12584, %r12589;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12595, %r850, %r12586, %r12576, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12599, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12600, %r12576, %r12599;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12603, %r12595, %r12600;
	// end inline asm
	// begin inline asm
	mov.b32 %r12611, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12622, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12610, %r16263, -2004318072;
	// begin inline asm
	lop3.b32 %r12608, %r839, %r12610, %r12611, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12612, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12613, %r12611, %r12612;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12616, %r12608, %r12613;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12619, %r850, %r12610, %r12622, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12623, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12624, %r12622, %r12623;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12627, %r12619, %r12624;
	// end inline asm
	shr.u32 	%r12632, %r12610, 8;
	// begin inline asm
	lop3.b32 %r12630, %r839, %r12632, %r12611, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12634, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12635, %r12611, %r12634;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12638, %r12630, %r12635;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12641, %r850, %r12632, %r12622, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12645, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12646, %r12622, %r12645;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12649, %r12641, %r12646;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12652, %r387;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12654, %r12652, %r12294;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12657, %r387;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12659, %r12657, %r12305;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12662, %r387;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12664, %r12662, %r12316;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12667, %r387;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12669, %r12667, %r12327;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12672, %r387;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12674, %r12672, %r12340;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12677, %r387;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12679, %r12677, %r12351;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12682, %r387;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12684, %r12682, %r12362;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12687, %r387;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12689, %r12687, %r12373;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12692, %r387;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12694, %r12692, %r12386;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12697, %r387;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12699, %r12697, %r12397;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12702, %r387;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12704, %r12702, %r12408;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12707, %r387;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12709, %r12707, %r12419;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12712, %r387;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12714, %r12712, %r12432;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12717, %r387;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12719, %r12717, %r12443;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12722, %r387;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12724, %r12722, %r12454;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12727, %r387;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12729, %r12727, %r12465;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12732, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12734, %r12732, %r12478;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12737, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12739, %r12737, %r12489;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12742, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12744, %r12742, %r12500;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12747, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12749, %r12747, %r12511;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12752, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12754, %r12752, %r12524;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12757, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12759, %r12757, %r12535;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12762, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12764, %r12762, %r12546;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12767, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12769, %r12767, %r12557;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12772, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12774, %r12772, %r12570;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12777, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12779, %r12777, %r12581;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12782, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12784, %r12782, %r12592;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12787, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12789, %r12787, %r12603;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12792, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12794, %r12792, %r12616;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12797, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12799, %r12797, %r12627;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12802, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12804, %r12802, %r12638;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12807, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12809, %r12807, %r12649;
	// end inline asm
	// begin inline asm
	mov.b32 %r12817, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12828, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12814, %r839, %r840, %r12817, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12818, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12819, %r12817, %r12818;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12822, %r12814, %r12819;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12825, %r850, %r840, %r12828, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12829, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12830, %r12828, %r12829;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12833, %r12825, %r12830;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12836, %r839, %r862, %r12817, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12840, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12841, %r12817, %r12840;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12844, %r12836, %r12841;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12847, %r850, %r862, %r12828, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12851, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12852, %r12828, %r12851;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12855, %r12847, %r12852;
	// end inline asm
	// begin inline asm
	mov.b32 %r12863, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12874, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12860, %r839, %r886, %r12863, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12864, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12865, %r12863, %r12864;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12868, %r12860, %r12865;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12871, %r850, %r886, %r12874, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12875, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12876, %r12874, %r12875;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12879, %r12871, %r12876;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12882, %r839, %r908, %r12863, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12886, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12887, %r12863, %r12886;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12890, %r12882, %r12887;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12893, %r850, %r908, %r12874, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12897, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12898, %r12874, %r12897;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12901, %r12893, %r12898;
	// end inline asm
	// begin inline asm
	mov.b32 %r12909, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12920, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12906, %r839, %r932, %r12909, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12910, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12911, %r12909, %r12910;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12914, %r12906, %r12911;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12917, %r850, %r932, %r12920, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12921, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12922, %r12920, %r12921;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12925, %r12917, %r12922;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12928, %r839, %r954, %r12909, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12932, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12933, %r12909, %r12932;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12936, %r12928, %r12933;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12939, %r850, %r954, %r12920, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12943, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12944, %r12920, %r12943;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12947, %r12939, %r12944;
	// end inline asm
	// begin inline asm
	mov.b32 %r12955, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12966, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12952, %r839, %r978, %r12955, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12956, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12957, %r12955, %r12956;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12960, %r12952, %r12957;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12963, %r850, %r978, %r12966, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12967, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12968, %r12966, %r12967;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12971, %r12963, %r12968;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12974, %r839, %r1000, %r12955, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12978, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12979, %r12955, %r12978;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12982, %r12974, %r12979;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12985, %r850, %r1000, %r12966, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12989, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12990, %r12966, %r12989;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12993, %r12985, %r12990;
	// end inline asm
	// begin inline asm
	mov.b32 %r13001, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13012, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12998, %r839, %r1024, %r13001, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13002, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13003, %r13001, %r13002;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13006, %r12998, %r13003;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13009, %r850, %r1024, %r13012, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13013, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13014, %r13012, %r13013;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13017, %r13009, %r13014;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13020, %r839, %r1046, %r13001, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13024, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13025, %r13001, %r13024;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13028, %r13020, %r13025;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13031, %r850, %r1046, %r13012, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13035, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13036, %r13012, %r13035;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13039, %r13031, %r13036;
	// end inline asm
	// begin inline asm
	mov.b32 %r13047, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13058, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13044, %r839, %r1070, %r13047, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13048, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13049, %r13047, %r13048;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13052, %r13044, %r13049;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13055, %r850, %r1070, %r13058, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13059, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13060, %r13058, %r13059;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13063, %r13055, %r13060;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13066, %r839, %r1092, %r13047, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13070, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13071, %r13047, %r13070;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13074, %r13066, %r13071;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13077, %r850, %r1092, %r13058, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13081, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13082, %r13058, %r13081;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13085, %r13077, %r13082;
	// end inline asm
	// begin inline asm
	mov.b32 %r13093, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13104, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13090, %r839, %r1116, %r13093, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13094, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13095, %r13093, %r13094;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13098, %r13090, %r13095;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13101, %r850, %r1116, %r13104, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13105, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13106, %r13104, %r13105;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13109, %r13101, %r13106;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13112, %r839, %r1138, %r13093, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13116, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13117, %r13093, %r13116;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13120, %r13112, %r13117;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13123, %r850, %r1138, %r13104, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13127, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13128, %r13104, %r13127;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13131, %r13123, %r13128;
	// end inline asm
	// begin inline asm
	mov.b32 %r13139, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13150, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13136, %r839, %r1162, %r13139, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13140, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13141, %r13139, %r13140;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13144, %r13136, %r13141;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13147, %r850, %r1162, %r13150, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13151, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13152, %r13150, %r13151;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13155, %r13147, %r13152;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13158, %r839, %r1184, %r13139, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13162, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13163, %r13139, %r13162;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13166, %r13158, %r13163;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13169, %r850, %r1184, %r13150, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13173, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13174, %r13150, %r13173;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13177, %r13169, %r13174;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13180, %r279, %r12822, %r12654;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13184, %r279, %r12833, %r12659;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13188, %r279, %r12844, %r12664;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13192, %r279, %r12855, %r12669;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13196, %r279, %r12868, %r12674;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13200, %r279, %r12879, %r12679;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13204, %r279, %r12890, %r12684;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13208, %r279, %r12901, %r12689;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13212, %r279, %r12914, %r12694;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13216, %r279, %r12925, %r12699;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13220, %r279, %r12936, %r12704;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13224, %r279, %r12947, %r12709;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13228, %r279, %r12960, %r12714;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13232, %r279, %r12971, %r12719;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13236, %r279, %r12982, %r12724;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13240, %r279, %r12993, %r12729;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13244, %r297, %r13006, %r12734;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13248, %r297, %r13017, %r12739;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13252, %r297, %r13028, %r12744;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13256, %r297, %r13039, %r12749;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13260, %r297, %r13052, %r12754;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13264, %r297, %r13063, %r12759;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13268, %r297, %r13074, %r12764;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13272, %r297, %r13085, %r12769;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13276, %r297, %r13098, %r12774;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13280, %r297, %r13109, %r12779;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13284, %r297, %r13120, %r12784;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13288, %r297, %r13131, %r12789;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13292, %r297, %r13144, %r12794;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13296, %r297, %r13155, %r12799;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13300, %r297, %r13166, %r12804;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13304, %r297, %r13177, %r12809;
	// end inline asm
	// begin inline asm
	mov.b32 %r13313, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13324, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13310, %r839, %r4656, %r13313, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13314, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13315, %r13313, %r13314;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13318, %r13310, %r13315;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13321, %r850, %r4656, %r13324, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13325, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13326, %r13324, %r13325;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13329, %r13321, %r13326;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13332, %r839, %r4678, %r13313, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13336, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13337, %r13313, %r13336;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13340, %r13332, %r13337;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13343, %r850, %r4678, %r13324, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13347, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13348, %r13324, %r13347;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13351, %r13343, %r13348;
	// end inline asm
	// begin inline asm
	mov.b32 %r13359, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13370, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13356, %r839, %r4702, %r13359, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13360, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13361, %r13359, %r13360;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13364, %r13356, %r13361;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13367, %r850, %r4702, %r13370, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13371, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13372, %r13370, %r13371;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13375, %r13367, %r13372;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13378, %r839, %r4724, %r13359, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13382, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13383, %r13359, %r13382;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13386, %r13378, %r13383;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13389, %r850, %r4724, %r13370, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13393, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13394, %r13370, %r13393;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13397, %r13389, %r13394;
	// end inline asm
	// begin inline asm
	mov.b32 %r13405, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13416, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13402, %r839, %r4748, %r13405, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13406, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13407, %r13405, %r13406;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13410, %r13402, %r13407;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13413, %r850, %r4748, %r13416, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13417, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13418, %r13416, %r13417;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13421, %r13413, %r13418;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13424, %r839, %r4770, %r13405, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13428, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13429, %r13405, %r13428;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13432, %r13424, %r13429;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13435, %r850, %r4770, %r13416, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13439, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13440, %r13416, %r13439;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13443, %r13435, %r13440;
	// end inline asm
	// begin inline asm
	mov.b32 %r13451, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13462, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13448, %r839, %r4794, %r13451, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13452, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13453, %r13451, %r13452;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13456, %r13448, %r13453;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13459, %r850, %r4794, %r13462, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13463, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13464, %r13462, %r13463;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13467, %r13459, %r13464;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13470, %r839, %r4816, %r13451, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13474, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13475, %r13451, %r13474;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13478, %r13470, %r13475;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13481, %r850, %r4816, %r13462, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13485, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13486, %r13462, %r13485;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13489, %r13481, %r13486;
	// end inline asm
	// begin inline asm
	mov.b32 %r13497, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13508, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13494, %r839, %r4840, %r13497, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13498, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13499, %r13497, %r13498;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13502, %r13494, %r13499;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13505, %r850, %r4840, %r13508, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13509, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13510, %r13508, %r13509;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13513, %r13505, %r13510;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13516, %r839, %r4862, %r13497, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13520, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13521, %r13497, %r13520;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13524, %r13516, %r13521;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13527, %r850, %r4862, %r13508, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13531, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13532, %r13508, %r13531;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13535, %r13527, %r13532;
	// end inline asm
	// begin inline asm
	mov.b32 %r13543, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13554, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13540, %r839, %r4886, %r13543, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13544, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13545, %r13543, %r13544;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13548, %r13540, %r13545;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13551, %r850, %r4886, %r13554, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13555, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13556, %r13554, %r13555;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13559, %r13551, %r13556;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13562, %r839, %r4908, %r13543, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13566, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13567, %r13543, %r13566;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13570, %r13562, %r13567;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13573, %r850, %r4908, %r13554, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13577, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13578, %r13554, %r13577;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13581, %r13573, %r13578;
	// end inline asm
	// begin inline asm
	mov.b32 %r13589, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13600, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13586, %r839, %r4932, %r13589, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13590, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13591, %r13589, %r13590;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13594, %r13586, %r13591;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13597, %r850, %r4932, %r13600, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13601, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13602, %r13600, %r13601;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13605, %r13597, %r13602;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13608, %r839, %r4954, %r13589, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13612, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13613, %r13589, %r13612;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13616, %r13608, %r13613;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13619, %r850, %r4954, %r13600, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13623, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13624, %r13600, %r13623;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13627, %r13619, %r13624;
	// end inline asm
	// begin inline asm
	mov.b32 %r13635, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13646, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13632, %r839, %r4978, %r13635, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13636, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13637, %r13635, %r13636;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13640, %r13632, %r13637;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13643, %r850, %r4978, %r13646, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13647, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13648, %r13646, %r13647;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13651, %r13643, %r13648;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13654, %r839, %r5000, %r13635, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13658, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13659, %r13635, %r13658;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13662, %r13654, %r13659;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13665, %r850, %r5000, %r13646, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13669, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13670, %r13646, %r13669;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13673, %r13665, %r13670;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13676, %r315;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13678, %r13676, %r13318, %r13180;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13682, %r315;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13684, %r13682, %r13329, %r13184;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13688, %r315;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13690, %r13688, %r13340, %r13188;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13694, %r315;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13696, %r13694, %r13351, %r13192;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13700, %r315;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13702, %r13700, %r13364, %r13196;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13706, %r315;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13708, %r13706, %r13375, %r13200;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13712, %r315;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13714, %r13712, %r13386, %r13204;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13718, %r315;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13720, %r13718, %r13397, %r13208;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13724, %r315;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13726, %r13724, %r13410, %r13212;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13730, %r315;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13732, %r13730, %r13421, %r13216;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13736, %r315;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13738, %r13736, %r13432, %r13220;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13742, %r315;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13744, %r13742, %r13443, %r13224;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13748, %r315;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13750, %r13748, %r13456, %r13228;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13754, %r315;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13756, %r13754, %r13467, %r13232;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13760, %r315;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13762, %r13760, %r13478, %r13236;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13766, %r315;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13768, %r13766, %r13489, %r13240;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13772, %r333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13774, %r13772, %r13502, %r13244;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13778, %r333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13780, %r13778, %r13513, %r13248;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13784, %r333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13786, %r13784, %r13524, %r13252;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13790, %r333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13792, %r13790, %r13535, %r13256;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13796, %r333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13798, %r13796, %r13548, %r13260;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13802, %r333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13804, %r13802, %r13559, %r13264;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13808, %r333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13810, %r13808, %r13570, %r13268;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13814, %r333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13816, %r13814, %r13581, %r13272;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13820, %r333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13822, %r13820, %r13594, %r13276;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13826, %r333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13828, %r13826, %r13605, %r13280;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13832, %r333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13834, %r13832, %r13616, %r13284;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13838, %r333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13840, %r13838, %r13627, %r13288;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13844, %r333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13846, %r13844, %r13640, %r13292;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13850, %r333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13852, %r13850, %r13651, %r13296;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13856, %r333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13858, %r13856, %r13662, %r13300;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13862, %r333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13864, %r13862, %r13673, %r13304;
	// end inline asm
	// begin inline asm
	mov.b32 %r13873, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13884, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13870, %r839, %r8472, %r13873, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13874, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13875, %r13873, %r13874;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13878, %r13870, %r13875;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13881, %r850, %r8472, %r13884, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13885, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13886, %r13884, %r13885;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13889, %r13881, %r13886;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13892, %r839, %r8494, %r13873, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13896, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13897, %r13873, %r13896;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13900, %r13892, %r13897;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13903, %r850, %r8494, %r13884, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13907, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13908, %r13884, %r13907;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13911, %r13903, %r13908;
	// end inline asm
	// begin inline asm
	mov.b32 %r13919, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13930, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13916, %r839, %r8518, %r13919, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13920, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13921, %r13919, %r13920;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13924, %r13916, %r13921;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13927, %r850, %r8518, %r13930, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13931, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13932, %r13930, %r13931;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13935, %r13927, %r13932;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13938, %r839, %r8540, %r13919, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13942, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13943, %r13919, %r13942;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13946, %r13938, %r13943;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13949, %r850, %r8540, %r13930, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13953, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13954, %r13930, %r13953;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13957, %r13949, %r13954;
	// end inline asm
	// begin inline asm
	mov.b32 %r13965, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13976, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13962, %r839, %r8564, %r13965, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13966, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13967, %r13965, %r13966;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13970, %r13962, %r13967;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13973, %r850, %r8564, %r13976, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13977, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13978, %r13976, %r13977;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13981, %r13973, %r13978;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13984, %r839, %r8586, %r13965, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13988, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13989, %r13965, %r13988;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13992, %r13984, %r13989;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13995, %r850, %r8586, %r13976, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13999, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14000, %r13976, %r13999;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14003, %r13995, %r14000;
	// end inline asm
	// begin inline asm
	mov.b32 %r14011, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r14022, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14008, %r839, %r8610, %r14011, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14012, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14013, %r14011, %r14012;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14016, %r14008, %r14013;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14019, %r850, %r8610, %r14022, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14023, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14024, %r14022, %r14023;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14027, %r14019, %r14024;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14030, %r839, %r8632, %r14011, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14034, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14035, %r14011, %r14034;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14038, %r14030, %r14035;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14041, %r850, %r8632, %r14022, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14045, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14046, %r14022, %r14045;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14049, %r14041, %r14046;
	// end inline asm
	// begin inline asm
	mov.b32 %r14057, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r14068, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14054, %r839, %r8656, %r14057, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14058, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14059, %r14057, %r14058;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14062, %r14054, %r14059;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14065, %r850, %r8656, %r14068, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14069, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14070, %r14068, %r14069;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14073, %r14065, %r14070;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14076, %r839, %r8678, %r14057, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14080, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14081, %r14057, %r14080;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14084, %r14076, %r14081;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14087, %r850, %r8678, %r14068, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14091, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14092, %r14068, %r14091;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14095, %r14087, %r14092;
	// end inline asm
	// begin inline asm
	mov.b32 %r14103, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r14114, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14100, %r839, %r8702, %r14103, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14104, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14105, %r14103, %r14104;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14108, %r14100, %r14105;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14111, %r850, %r8702, %r14114, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14115, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14116, %r14114, %r14115;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14119, %r14111, %r14116;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14122, %r839, %r8724, %r14103, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14126, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14127, %r14103, %r14126;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14130, %r14122, %r14127;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14133, %r850, %r8724, %r14114, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14137, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14138, %r14114, %r14137;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14141, %r14133, %r14138;
	// end inline asm
	// begin inline asm
	mov.b32 %r14149, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r14160, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14146, %r839, %r8748, %r14149, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14150, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14151, %r14149, %r14150;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14154, %r14146, %r14151;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14157, %r850, %r8748, %r14160, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14161, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14162, %r14160, %r14161;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14165, %r14157, %r14162;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14168, %r839, %r8770, %r14149, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14172, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14173, %r14149, %r14172;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14176, %r14168, %r14173;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14179, %r850, %r8770, %r14160, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14183, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14184, %r14160, %r14183;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14187, %r14179, %r14184;
	// end inline asm
	// begin inline asm
	mov.b32 %r14195, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r14206, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14192, %r839, %r8794, %r14195, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14196, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14197, %r14195, %r14196;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14200, %r14192, %r14197;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14203, %r850, %r8794, %r14206, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14207, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14208, %r14206, %r14207;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14211, %r14203, %r14208;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14214, %r839, %r8816, %r14195, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14218, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14219, %r14195, %r14218;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14222, %r14214, %r14219;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14225, %r850, %r8816, %r14206, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14229, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14230, %r14206, %r14229;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14233, %r14225, %r14230;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14371, %r351, %r13878, %r13678;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14368, %r351, %r13889, %r13684;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14380, %r351, %r13900, %r13690;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14377, %r351, %r13911, %r13696;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14389, %r351, %r13924, %r13702;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14386, %r351, %r13935, %r13708;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14398, %r351, %r13946, %r13714;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14395, %r351, %r13957, %r13720;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14407, %r351, %r13970, %r13726;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14404, %r351, %r13981, %r13732;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14416, %r351, %r13992, %r13738;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14413, %r351, %r14003, %r13744;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14425, %r351, %r14016, %r13750;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14422, %r351, %r14027, %r13756;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14434, %r351, %r14038, %r13762;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14431, %r351, %r14049, %r13768;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14443, %r369, %r14062, %r13774;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14440, %r369, %r14073, %r13780;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14452, %r369, %r14084, %r13786;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14449, %r369, %r14095, %r13792;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14461, %r369, %r14108, %r13798;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14458, %r369, %r14119, %r13804;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14470, %r369, %r14130, %r13810;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14467, %r369, %r14141, %r13816;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14479, %r369, %r14154, %r13822;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14476, %r369, %r14165, %r13828;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14488, %r369, %r14176, %r13834;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14485, %r369, %r14187, %r13840;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14497, %r369, %r14200, %r13846;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14494, %r369, %r14211, %r13852;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14506, %r369, %r14222, %r13858;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14503, %r369, %r14233, %r13864;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14364, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14366, %r14364, %r14368;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14369, %r433, %r14371, %r14366;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14373, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14375, %r14373, %r14377;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14378, %r433, %r14380, %r14375;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14382, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14384, %r14382, %r14386;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14387, %r433, %r14389, %r14384;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14391, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14393, %r14391, %r14395;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14396, %r433, %r14398, %r14393;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14400, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14402, %r14400, %r14404;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14405, %r433, %r14407, %r14402;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14409, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14411, %r14409, %r14413;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14414, %r433, %r14416, %r14411;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14418, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14420, %r14418, %r14422;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14423, %r433, %r14425, %r14420;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14427, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14429, %r14427, %r14431;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14432, %r433, %r14434, %r14429;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14436, %r442;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14438, %r14436, %r14440;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14441, %r436, %r14443, %r14438;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14445, %r442;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14447, %r14445, %r14449;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14450, %r436, %r14452, %r14447;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14454, %r442;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14456, %r14454, %r14458;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14459, %r436, %r14461, %r14456;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14463, %r442;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14465, %r14463, %r14467;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14468, %r436, %r14470, %r14465;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14472, %r442;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14474, %r14472, %r14476;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14477, %r436, %r14479, %r14474;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14481, %r442;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14483, %r14481, %r14485;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14486, %r436, %r14488, %r14483;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14490, %r442;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14492, %r14490, %r14494;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14495, %r436, %r14497, %r14492;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14499, %r442;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14501, %r14499, %r14503;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14504, %r436, %r14506, %r14501;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14508, %r439, %r14371;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14511, %r433, %r14368, %r14508;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14515, %r439, %r14380;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14518, %r433, %r14377, %r14515;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14522, %r439, %r14389;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14525, %r433, %r14386, %r14522;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14529, %r439, %r14398;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14532, %r433, %r14395, %r14529;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14536, %r439, %r14407;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14539, %r433, %r14404, %r14536;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14543, %r439, %r14416;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14546, %r433, %r14413, %r14543;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14550, %r439, %r14425;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14553, %r433, %r14422, %r14550;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14557, %r439, %r14434;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14560, %r433, %r14431, %r14557;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14564, %r442, %r14443;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14567, %r436, %r14440, %r14564;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14571, %r442, %r14452;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14574, %r436, %r14449, %r14571;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14578, %r442, %r14461;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14581, %r436, %r14458, %r14578;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14585, %r442, %r14470;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14588, %r436, %r14467, %r14585;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14592, %r442, %r14479;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14595, %r436, %r14476, %r14592;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14599, %r442, %r14488;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14602, %r436, %r14485, %r14599;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14606, %r442, %r14497;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14609, %r436, %r14494, %r14606;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14613, %r442, %r14506;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14616, %r436, %r14503, %r14613;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14787, %r14784}, {%r481, %r487, %r484, %r490}, {%r14369, %r14511}, {%r3180, %r3180};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14796, %r14793}, {%r481, %r487, %r484, %r490}, {%r14378, %r14518}, {%r3180, %r3180};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14805, %r14802}, {%r481, %r487, %r484, %r490}, {%r14387, %r14525}, {%r3180, %r3180};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14814, %r14811}, {%r481, %r487, %r484, %r490}, {%r14396, %r14532}, {%r3180, %r3180};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14823, %r14820}, {%r481, %r487, %r484, %r490}, {%r14405, %r14539}, {%r3180, %r3180};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14832, %r14829}, {%r481, %r487, %r484, %r490}, {%r14414, %r14546}, {%r3180, %r3180};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14841, %r14838}, {%r481, %r487, %r484, %r490}, {%r14423, %r14553}, {%r3180, %r3180};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14850, %r14847}, {%r481, %r487, %r484, %r490}, {%r14432, %r14560}, {%r3180, %r3180};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14859, %r14856}, {%r481, %r487, %r484, %r490}, {%r14441, %r14567}, {%r3180, %r3180};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14868, %r14865}, {%r481, %r487, %r484, %r490}, {%r14450, %r14574}, {%r3180, %r3180};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14877, %r14874}, {%r481, %r487, %r484, %r490}, {%r14459, %r14581}, {%r3180, %r3180};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14886, %r14883}, {%r481, %r487, %r484, %r490}, {%r14468, %r14588}, {%r3180, %r3180};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14895, %r14892}, {%r481, %r487, %r484, %r490}, {%r14477, %r14595}, {%r3180, %r3180};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14904, %r14901}, {%r481, %r487, %r484, %r490}, {%r14486, %r14602}, {%r3180, %r3180};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14913, %r14910}, {%r481, %r487, %r484, %r490}, {%r14495, %r14609}, {%r3180, %r3180};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14922, %r14919}, {%r481, %r487, %r484, %r490}, {%r14504, %r14616}, {%r3180, %r3180};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14780, %r531;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14782, %r14780, %r14784;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14785, %r528, %r14787, %r14782;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14789, %r531;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14791, %r14789, %r14793;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14794, %r528, %r14796, %r14791;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14798, %r531;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14800, %r14798, %r14802;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14803, %r528, %r14805, %r14800;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14807, %r531;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14809, %r14807, %r14811;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14812, %r528, %r14814, %r14809;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14816, %r531;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14818, %r14816, %r14820;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14821, %r528, %r14823, %r14818;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14825, %r531;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14827, %r14825, %r14829;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14830, %r528, %r14832, %r14827;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14834, %r531;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14836, %r14834, %r14838;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14839, %r528, %r14841, %r14836;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14843, %r531;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14845, %r14843, %r14847;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14848, %r528, %r14850, %r14845;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14852, %r531;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14854, %r14852, %r14856;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14857, %r528, %r14859, %r14854;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14861, %r531;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14863, %r14861, %r14865;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14866, %r528, %r14868, %r14863;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14870, %r531;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14872, %r14870, %r14874;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14875, %r528, %r14877, %r14872;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14879, %r531;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14881, %r14879, %r14883;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14884, %r528, %r14886, %r14881;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14888, %r531;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14890, %r14888, %r14892;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14893, %r528, %r14895, %r14890;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14897, %r531;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14899, %r14897, %r14901;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14902, %r528, %r14904, %r14899;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14906, %r531;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14908, %r14906, %r14910;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14911, %r528, %r14913, %r14908;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14915, %r531;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14917, %r14915, %r14919;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14920, %r528, %r14922, %r14917;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14924, %r531, %r14787;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14927, %r528, %r14784, %r14924;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14931, %r531, %r14796;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14934, %r528, %r14793, %r14931;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14938, %r531, %r14805;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14941, %r528, %r14802, %r14938;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14945, %r531, %r14814;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14948, %r528, %r14811, %r14945;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14952, %r531, %r14823;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14955, %r528, %r14820, %r14952;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14959, %r531, %r14832;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14962, %r528, %r14829, %r14959;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14966, %r531, %r14841;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14969, %r528, %r14838, %r14966;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14973, %r531, %r14850;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14976, %r528, %r14847, %r14973;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14980, %r531, %r14859;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14983, %r528, %r14856, %r14980;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14987, %r531, %r14868;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14990, %r528, %r14865, %r14987;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14994, %r531, %r14877;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14997, %r528, %r14874, %r14994;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15001, %r531, %r14886;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15004, %r528, %r14883, %r15001;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15008, %r531, %r14895;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15011, %r528, %r14892, %r15008;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15015, %r531, %r14904;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15018, %r528, %r14901, %r15015;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15022, %r531, %r14913;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15025, %r528, %r14910, %r15022;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15029, %r531, %r14922;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15032, %r528, %r14919, %r15029;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15325, %r15328}, {%r571, %r577, %r574, %r580}, {%r14785, %r14927}, {%r3180, %r3180};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15331, %r15334}, {%r571, %r577, %r574, %r580}, {%r14794, %r14934}, {%r3180, %r3180};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15337, %r15340}, {%r571, %r577, %r574, %r580}, {%r14803, %r14941}, {%r3180, %r3180};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15343, %r15346}, {%r571, %r577, %r574, %r580}, {%r14812, %r14948}, {%r3180, %r3180};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15349, %r15352}, {%r571, %r577, %r574, %r580}, {%r14821, %r14955}, {%r3180, %r3180};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15355, %r15358}, {%r571, %r577, %r574, %r580}, {%r14830, %r14962}, {%r3180, %r3180};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15361, %r15364}, {%r571, %r577, %r574, %r580}, {%r14839, %r14969}, {%r3180, %r3180};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15367, %r15370}, {%r571, %r577, %r574, %r580}, {%r14848, %r14976}, {%r3180, %r3180};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15326, %r15329}, {%r571, %r577, %r574, %r580}, {%r14857, %r14983}, {%r3180, %r3180};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15332, %r15335}, {%r571, %r577, %r574, %r580}, {%r14866, %r14990}, {%r3180, %r3180};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15338, %r15341}, {%r571, %r577, %r574, %r580}, {%r14875, %r14997}, {%r3180, %r3180};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15344, %r15347}, {%r571, %r577, %r574, %r580}, {%r14884, %r15004}, {%r3180, %r3180};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15350, %r15353}, {%r571, %r577, %r574, %r580}, {%r14893, %r15011}, {%r3180, %r3180};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15356, %r15359}, {%r571, %r577, %r574, %r580}, {%r14902, %r15018}, {%r3180, %r3180};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15362, %r15365}, {%r571, %r577, %r574, %r580}, {%r14911, %r15025}, {%r3180, %r3180};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15368, %r15371}, {%r571, %r577, %r574, %r580}, {%r14920, %r15032}, {%r3180, %r3180};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15324, %r15325, %r15326;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15327, %r15328, %r15329;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15330, %r15331, %r15332;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15333, %r15334, %r15335;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15336, %r15337, %r15338;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15339, %r15340, %r15341;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15342, %r15343, %r15344;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15345, %r15346, %r15347;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15348, %r15349, %r15350;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15351, %r15352, %r15353;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15354, %r15355, %r15356;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15357, %r15358, %r15359;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15360, %r15361, %r15362;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15363, %r15364, %r15365;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15366, %r15367, %r15368;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15369, %r15370, %r15371;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15372, %r15325, %r15326;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15375, %r15328, %r15329;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15378, %r15331, %r15332;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15381, %r15334, %r15335;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15384, %r15337, %r15338;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15387, %r15340, %r15341;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15390, %r15343, %r15344;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15393, %r15346, %r15347;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15396, %r15349, %r15350;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15399, %r15352, %r15353;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15402, %r15355, %r15356;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15405, %r15358, %r15359;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15408, %r15361, %r15362;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15411, %r15364, %r15365;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15414, %r15367, %r15368;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15417, %r15370, %r15371;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15420, %r16, %r15324;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15423, %r16, %r15327;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15426, %r16, %r15330;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15429, %r16, %r15333;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15432, %r16, %r15336;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15435, %r16, %r15339;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15438, %r16, %r15342;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15441, %r16, %r15345;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15444, %r16, %r15348;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15447, %r16, %r15351;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15450, %r16, %r15354;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15453, %r16, %r15357;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15456, %r16, %r15360;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15459, %r16, %r15363;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15462, %r16, %r15366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15465, %r16, %r15369;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15468, %r17, %r15372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15471, %r17, %r15375;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15474, %r17, %r15378;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15477, %r17, %r15381;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15480, %r17, %r15384;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15483, %r17, %r15387;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15486, %r17, %r15390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15489, %r17, %r15393;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15492, %r17, %r15396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15495, %r17, %r15399;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15498, %r17, %r15402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15501, %r17, %r15405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15504, %r17, %r15408;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15507, %r17, %r15411;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15510, %r17, %r15414;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15513, %r17, %r15417;
	// end inline asm
	// begin inline asm
	mov.b32 %r15516, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15517, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15518, %r15420, %r15516;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15521, %r15518, %r15517;
	// end inline asm
	// begin inline asm
	mov.b32 %r15524, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15525, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15526, %r15423, %r15524;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15529, %r15526, %r15525;
	// end inline asm
	// begin inline asm
	mov.b32 %r15532, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15533, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15534, %r15426, %r15532;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15537, %r15534, %r15533;
	// end inline asm
	// begin inline asm
	mov.b32 %r15540, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15541, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15542, %r15429, %r15540;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15545, %r15542, %r15541;
	// end inline asm
	// begin inline asm
	mov.b32 %r15548, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15549, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15550, %r15432, %r15548;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15553, %r15550, %r15549;
	// end inline asm
	// begin inline asm
	mov.b32 %r15556, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15557, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15558, %r15435, %r15556;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15561, %r15558, %r15557;
	// end inline asm
	// begin inline asm
	mov.b32 %r15564, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15565, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15566, %r15438, %r15564;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15569, %r15566, %r15565;
	// end inline asm
	// begin inline asm
	mov.b32 %r15572, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15573, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15574, %r15441, %r15572;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15577, %r15574, %r15573;
	// end inline asm
	// begin inline asm
	mov.b32 %r15580, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15581, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15582, %r15444, %r15580;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15585, %r15582, %r15581;
	// end inline asm
	// begin inline asm
	mov.b32 %r15588, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15589, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15590, %r15447, %r15588;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15593, %r15590, %r15589;
	// end inline asm
	// begin inline asm
	mov.b32 %r15596, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15597, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15598, %r15450, %r15596;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15601, %r15598, %r15597;
	// end inline asm
	// begin inline asm
	mov.b32 %r15604, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15605, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15606, %r15453, %r15604;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15609, %r15606, %r15605;
	// end inline asm
	// begin inline asm
	mov.b32 %r15612, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15613, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15614, %r15456, %r15612;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15617, %r15614, %r15613;
	// end inline asm
	// begin inline asm
	mov.b32 %r15620, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15621, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15622, %r15459, %r15620;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15625, %r15622, %r15621;
	// end inline asm
	// begin inline asm
	mov.b32 %r15628, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15629, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15630, %r15462, %r15628;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15633, %r15630, %r15629;
	// end inline asm
	// begin inline asm
	mov.b32 %r15636, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15637, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15638, %r15465, %r15636;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15641, %r15638, %r15637;
	// end inline asm
	// begin inline asm
	mov.b32 %r15644, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15645, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15646, %r15468, %r15644;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15649, %r15646, %r15645;
	// end inline asm
	// begin inline asm
	mov.b32 %r15652, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15653, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15654, %r15471, %r15652;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15657, %r15654, %r15653;
	// end inline asm
	// begin inline asm
	mov.b32 %r15660, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15661, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15662, %r15474, %r15660;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15665, %r15662, %r15661;
	// end inline asm
	// begin inline asm
	mov.b32 %r15668, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15669, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15670, %r15477, %r15668;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15673, %r15670, %r15669;
	// end inline asm
	// begin inline asm
	mov.b32 %r15676, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15677, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15678, %r15480, %r15676;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15681, %r15678, %r15677;
	// end inline asm
	// begin inline asm
	mov.b32 %r15684, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15685, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15686, %r15483, %r15684;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15689, %r15686, %r15685;
	// end inline asm
	// begin inline asm
	mov.b32 %r15692, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15693, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15694, %r15486, %r15692;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15697, %r15694, %r15693;
	// end inline asm
	// begin inline asm
	mov.b32 %r15700, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15701, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15702, %r15489, %r15700;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15705, %r15702, %r15701;
	// end inline asm
	// begin inline asm
	mov.b32 %r15708, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15709, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15710, %r15492, %r15708;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15713, %r15710, %r15709;
	// end inline asm
	// begin inline asm
	mov.b32 %r15716, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15717, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15718, %r15495, %r15716;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15721, %r15718, %r15717;
	// end inline asm
	// begin inline asm
	mov.b32 %r15724, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15725, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15726, %r15498, %r15724;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15729, %r15726, %r15725;
	// end inline asm
	// begin inline asm
	mov.b32 %r15732, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15733, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15734, %r15501, %r15732;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15737, %r15734, %r15733;
	// end inline asm
	// begin inline asm
	mov.b32 %r15740, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15741, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15742, %r15504, %r15740;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15745, %r15742, %r15741;
	// end inline asm
	// begin inline asm
	mov.b32 %r15748, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15749, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15750, %r15507, %r15748;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15753, %r15750, %r15749;
	// end inline asm
	// begin inline asm
	mov.b32 %r15756, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15757, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15758, %r15510, %r15756;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15761, %r15758, %r15757;
	// end inline asm
	// begin inline asm
	mov.b32 %r15764, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15765, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15766, %r15513, %r15764;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15769, %r15766, %r15765;
	// end inline asm
	// begin inline asm
	mov.b32 %r15775, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r15773, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15774, %r15775, %r15773;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15777, %r15521, %r15774;
	// end inline asm
	// begin inline asm
	mov.b32 %r15780, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15781, %r15775, %r15780;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15784, %r15529, %r15781;
	// end inline asm
	// begin inline asm
	mov.b32 %r15787, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15788, %r15775, %r15787;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15791, %r15537, %r15788;
	// end inline asm
	// begin inline asm
	mov.b32 %r15794, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15795, %r15775, %r15794;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15798, %r15545, %r15795;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15801, %r15777, %r15791, %r4356;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15805, %r15784, %r15798, %r4356;
	// end inline asm
	shl.b32 	%r15812, %r15805, 4;
	// begin inline asm
	lop3.b32 %r15809, %r4362, %r15801, %r15812, 202;
	// end inline asm
	xor.b32  	%r16132, %r15809, -2004318072;
	// begin inline asm
	mov.b32 %r15816, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r15814, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15815, %r15816, %r15814;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15818, %r15553, %r15815;
	// end inline asm
	// begin inline asm
	mov.b32 %r15821, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15822, %r15816, %r15821;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15825, %r15561, %r15822;
	// end inline asm
	// begin inline asm
	mov.b32 %r15828, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15829, %r15816, %r15828;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15832, %r15569, %r15829;
	// end inline asm
	// begin inline asm
	mov.b32 %r15835, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15836, %r15816, %r15835;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15839, %r15577, %r15836;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15842, %r15818, %r15832, %r4356;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15846, %r15825, %r15839, %r4356;
	// end inline asm
	shl.b32 	%r15853, %r15846, 4;
	// begin inline asm
	lop3.b32 %r15850, %r4362, %r15842, %r15853, 202;
	// end inline asm
	xor.b32  	%r16133, %r15850, -2004318072;
	// begin inline asm
	mov.b32 %r15857, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r15855, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15856, %r15857, %r15855;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15859, %r15585, %r15856;
	// end inline asm
	// begin inline asm
	mov.b32 %r15862, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15863, %r15857, %r15862;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15866, %r15593, %r15863;
	// end inline asm
	// begin inline asm
	mov.b32 %r15869, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15870, %r15857, %r15869;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15873, %r15601, %r15870;
	// end inline asm
	// begin inline asm
	mov.b32 %r15876, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15877, %r15857, %r15876;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15880, %r15609, %r15877;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15883, %r15859, %r15873, %r4356;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15887, %r15866, %r15880, %r4356;
	// end inline asm
	shl.b32 	%r15894, %r15887, 4;
	// begin inline asm
	lop3.b32 %r15891, %r4362, %r15883, %r15894, 202;
	// end inline asm
	xor.b32  	%r16134, %r15891, -2004318072;
	// begin inline asm
	mov.b32 %r15898, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r15896, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15897, %r15898, %r15896;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15900, %r15617, %r15897;
	// end inline asm
	// begin inline asm
	mov.b32 %r15903, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15904, %r15898, %r15903;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15907, %r15625, %r15904;
	// end inline asm
	// begin inline asm
	mov.b32 %r15910, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15911, %r15898, %r15910;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15914, %r15633, %r15911;
	// end inline asm
	// begin inline asm
	mov.b32 %r15917, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15918, %r15898, %r15917;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15921, %r15641, %r15918;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15924, %r15900, %r15914, %r4356;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15928, %r15907, %r15921, %r4356;
	// end inline asm
	shl.b32 	%r15935, %r15928, 4;
	// begin inline asm
	lop3.b32 %r15932, %r4362, %r15924, %r15935, 202;
	// end inline asm
	xor.b32  	%r16135, %r15932, -2004318072;
	// begin inline asm
	mov.b32 %r15939, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r15937, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15938, %r15939, %r15937;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15941, %r15649, %r15938;
	// end inline asm
	// begin inline asm
	mov.b32 %r15944, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15945, %r15939, %r15944;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15948, %r15657, %r15945;
	// end inline asm
	// begin inline asm
	mov.b32 %r15951, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15952, %r15939, %r15951;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15955, %r15665, %r15952;
	// end inline asm
	// begin inline asm
	mov.b32 %r15958, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15959, %r15939, %r15958;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15962, %r15673, %r15959;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15965, %r15941, %r15955, %r4356;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15969, %r15948, %r15962, %r4356;
	// end inline asm
	shl.b32 	%r15976, %r15969, 4;
	// begin inline asm
	lop3.b32 %r15973, %r4362, %r15965, %r15976, 202;
	// end inline asm
	xor.b32  	%r16136, %r15973, -2004318072;
	// begin inline asm
	mov.b32 %r15980, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r15978, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15979, %r15980, %r15978;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15982, %r15681, %r15979;
	// end inline asm
	// begin inline asm
	mov.b32 %r15985, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15986, %r15980, %r15985;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15989, %r15689, %r15986;
	// end inline asm
	// begin inline asm
	mov.b32 %r15992, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15993, %r15980, %r15992;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15996, %r15697, %r15993;
	// end inline asm
	// begin inline asm
	mov.b32 %r15999, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16000, %r15980, %r15999;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16003, %r15705, %r16000;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16006, %r15982, %r15996, %r4356;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16010, %r15989, %r16003, %r4356;
	// end inline asm
	shl.b32 	%r16017, %r16010, 4;
	// begin inline asm
	lop3.b32 %r16014, %r4362, %r16006, %r16017, 202;
	// end inline asm
	xor.b32  	%r16137, %r16014, -2004318072;
	// begin inline asm
	mov.b32 %r16021, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r16019, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16020, %r16021, %r16019;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16023, %r15713, %r16020;
	// end inline asm
	// begin inline asm
	mov.b32 %r16026, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16027, %r16021, %r16026;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16030, %r15721, %r16027;
	// end inline asm
	// begin inline asm
	mov.b32 %r16033, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16034, %r16021, %r16033;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16037, %r15729, %r16034;
	// end inline asm
	// begin inline asm
	mov.b32 %r16040, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16041, %r16021, %r16040;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16044, %r15737, %r16041;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16047, %r16023, %r16037, %r4356;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16051, %r16030, %r16044, %r4356;
	// end inline asm
	shl.b32 	%r16058, %r16051, 4;
	// begin inline asm
	lop3.b32 %r16055, %r4362, %r16047, %r16058, 202;
	// end inline asm
	xor.b32  	%r16138, %r16055, -2004318072;
	// begin inline asm
	mov.b32 %r16062, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r16060, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16061, %r16062, %r16060;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16064, %r15745, %r16061;
	// end inline asm
	// begin inline asm
	mov.b32 %r16067, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16068, %r16062, %r16067;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16071, %r15753, %r16068;
	// end inline asm
	// begin inline asm
	mov.b32 %r16074, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16075, %r16062, %r16074;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16078, %r15761, %r16075;
	// end inline asm
	// begin inline asm
	mov.b32 %r16081, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16082, %r16062, %r16081;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16085, %r15769, %r16082;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16088, %r16064, %r16078, %r4356;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16092, %r16071, %r16085, %r4356;
	// end inline asm
	shl.b32 	%r16099, %r16092, 4;
	// begin inline asm
	lop3.b32 %r16096, %r4362, %r16088, %r16099, 202;
	// end inline asm
	xor.b32  	%r16139, %r16096, -2004318072;
	st.shared.u32 	[%rd93], %r16132;
	st.shared.u32 	[%rd94], %r16133;
	st.shared.u32 	[%rd95], %r16134;
	st.shared.u32 	[%rd96], %r16135;
	st.shared.u32 	[%rd97], %r16136;
	st.shared.u32 	[%rd98], %r16137;
	st.shared.u32 	[%rd99], %r16138;
	st.shared.u32 	[%rd100], %r16139;
	add.s32 	%r16239, %r16239, -128;
	add.s64 	%rd126, %rd126, 16644;
	setp.eq.s32 	%p319, %r16239, 0;
	@%p319 bra 	LBB0_184;
	bra.uni 	LBB0_183;
LBB0_184:                               // %guard_pass23043
                                        //   in Loop: Header=BB0_182 Depth=1
	bar.sync 	0;
	ld.shared.u32 	%r16145, [%rd13];
	ld.shared.u32 	%r16146, [%rd14+128];
	ld.shared.u32 	%r16153, [%rd14+4];
	ld.shared.u32 	%r16154, [%rd14+132];
	ld.shared.u32 	%r16161, [%rd15];
	ld.shared.u32 	%r16162, [%rd16+128];
	ld.shared.u32 	%r16169, [%rd16+4];
	ld.shared.u32 	%r16170, [%rd16+132];
	// begin inline asm
	prmt.b32 %r16140, %r16145, %r16146, %r789;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16144, %r16145, %r16146, %r793;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16148, %r16153, %r16154, %r789;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16152, %r16153, %r16154, %r793;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16156, %r16161, %r16162, %r789;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16160, %r16161, %r16162, %r793;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16164, %r16169, %r16170, %r789;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16168, %r16169, %r16170, %r793;
	// end inline asm
	selp.b32 	%r16172, %r16144, %r16140, %p312;
	shfl.sync.bfly.b32	%r239, %r16172, 8, 31, -1;
	selp.b32 	%r16173, %r16152, %r16148, %p312;
	shfl.sync.bfly.b32	%r240, %r16173, 8, 31, -1;
	selp.b32 	%r16174, %r16160, %r16156, %p312;
	shfl.sync.bfly.b32	%r241, %r16174, 8, 31, -1;
	selp.b32 	%r16175, %r16168, %r16164, %p312;
	shfl.sync.bfly.b32	%r242, %r16175, 8, 31, -1;
	and.b32  	%r16176, %r16214, 768;
	setp.lt.u32 	%p321, %r16176, 384;
	@%p321 bra 	LBB0_186;
// %bb.185:                             // %L63372
                                        //   in Loop: Header=BB0_182 Depth=1
	selp.b32 	%r16177, %r242, %r16168, %p312;
	selp.b32 	%r16178, %r16164, %r242, %p312;
	selp.b32 	%r16179, %r241, %r16160, %p312;
	selp.b32 	%r16180, %r16156, %r241, %p312;
	selp.b32 	%r16181, %r240, %r16152, %p312;
	selp.b32 	%r16182, %r16148, %r240, %p312;
	selp.b32 	%r16183, %r239, %r16144, %p312;
	selp.b32 	%r16184, %r16140, %r239, %p312;
	shl.b32 	%r16185, %r16214, 12;
	or.b32  	%r16186, %r16185, %r149;
	or.b32  	%r16187, %r16186, %r150;
	or.b32  	%r16188, %r16187, %r153;
	cvt.u64.u32 	%rd101, %r16188;
	add.s64 	%rd102, %rd101, %rd17;
	shr.u64 	%rd103, %rd102, 35;
	add.s64 	%rd104, %rd102, %rd103;
	shr.s64 	%rd105, %rd104, 29;
	setp.lt.s64 	%p323, %rd102, 0;
	and.b64  	%rd106, %rd104, -536870912;
	setp.ne.s64 	%p324, %rd106, %rd102;
	and.pred  	%p325, %p323, %p324;
	selp.u64 	%rd107, 1, 0, %p325;
	sub.s64 	%rd108, %rd107, %rd105;
	shl.b64 	%rd109, %rd108, 29;
	add.s64 	%rd110, %rd109, %rd102;
	shl.b64 	%rd111, %rd110, 2;
	add.s64 	%rd112, %rd3, %rd111;
	st.global.v4.u32 	[%rd112], {%r16184, %r16182, %r16183, %r16181};
	or.b32  	%r16189, %r16187, %r154;
	cvt.s64.s32 	%rd113, %r16189;
	add.s64 	%rd114, %rd113, %rd17;
	shr.u64 	%rd115, %rd114, 35;
	add.s64 	%rd116, %rd114, %rd115;
	shr.u64 	%rd117, %rd116, 29;
	shr.u64 	%rd118, %rd114, 63;
	sub.s64 	%rd119, %rd118, %rd117;
	shl.b64 	%rd120, %rd119, 29;
	add.s64 	%rd121, %rd120, %rd114;
	shl.b64 	%rd122, %rd121, 2;
	add.s64 	%rd123, %rd3, %rd122;
	st.global.v4.u32 	[%rd123], {%r16180, %r16178, %r16179, %r16177};
	bra.uni 	LBB0_186;
LBB0_187:                               // %L63844
	st.global.u32 	[%rd4], %r16193;
	ret;
LBB0_7:                                 // %L247
	mov.u32 	%r16192, 2;
	st.global.u32 	[%rd4], %r16192;
	mov.u64 	%rd124, exception5110;
	cvta.global.u64 	%rd125, %rd124;
	{ // callseq 2, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd125;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 2
	{ // callseq 3, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd36;
	st.param.b32 	[param0+8], %r243;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 3
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
LBB0_1:                                 // %L8
	mov.u64 	%rd57, exception1;
	cvta.global.u64 	%rd58, %rd57;
	{ // callseq 0, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd58;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 0
	{ // callseq 1, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd36;
	st.param.b32 	[param0+8], %r243;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 1
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
                                        // -- End function
}
