// PTX CompilerJob of MethodInstance for upchan(::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Float16x2, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int32, 1}) for sm_86, minthreads=512, blocks_per_sm=2

//
// Generated by LLVM NVPTX Back-End
//

.version 7.1
.target sm_86
.address_size 64

	// .globl	_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE // -- Begin function _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE
.func gpu_report_exception
(
	.param .b64 gpu_report_exception_param_0
)
.noreturn
{
	trap;
}
.func gpu_signal_exception
(
	.param .align 8 .b8 gpu_signal_exception_param_0[8]
)
.noreturn
{
	trap;
}
.extern .shared .align 32 .b8 shmem[];
.global .align 1 .b8 exception5095[6] = {101, 114, 114, 111, 114, 0};
.global .align 1 .b8 exception1[10] = {101, 120, 99, 101, 112, 116, 105, 111, 110, 0};
                                        // @_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE
.visible .entry _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE(
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_0[8],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_1[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_2[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_3[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_4[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_5[32]
)
.reqntid 512, 1, 1
.minnctapersm 2
{
	.reg .pred 	%p<307>;
	.reg .b16 	%rs<2390>;
	.reg .b32 	%r<16234>;
	.reg .f32 	%f<1404>;
	.reg .b64 	%rd<95>;

// %bb.0:                               // %conversion
	ld.param.u64 	%rd35, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_0];
	// begin inline asm
	mov.u32 %r236, %dynamic_smem_size;
	// end inline asm
	setp.gt.u32 	%p1, %r236, 66815;
	@%p1 bra 	LBB0_2;
	bra.uni 	LBB0_1;
LBB0_2:                                 // %L10
	ld.param.u64 	%rd40, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_5];
	ld.param.u64 	%rd36, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_1];
	mov.u32 	%r1, %tid.x;
	mov.u32 	%r2, %ctaid.x;
	shl.b32 	%r3, %r2, 9;
	mov.u32 	%r4, %tid.y;
	shl.b32 	%r5, %r4, 5;
	or.b32  	%r237, %r3, %r1;
	or.b32  	%r238, %r237, %r5;
	mul.wide.u32 	%rd46, %r238, 4;
	add.s64 	%rd4, %rd40, %rd46;
	mov.u32 	%r239, 1;
	st.global.u32 	[%rd4], %r239;
	ld.global.u32 	%r6, [%rd36];
	and.b32  	%r240, %r6, -32513;
	setp.eq.s32 	%p2, %r240, 0;
	@%p2 bra 	LBB0_4;
	bra.uni 	LBB0_3;
LBB0_4:                                 // %pass71
	bfe.u32 	%r215, %r1, 1, 1;
	and.b32  	%r216, %r1, 1;
	bfe.u32 	%r218, %r1, 2, 1;
	shr.u32 	%r219, %r1, 4;
	shl.b32 	%r249, %r219, 2;
	shl.b32 	%r250, %r218, 3;
	shl.b32 	%r251, %r216, 4;
	shl.b32 	%r252, %r215, 5;
	or.b32  	%r253, %r251, %r252;
	or.b32  	%r254, %r250, %r253;
	or.b32  	%r255, %r249, %r254;
	bfe.u32 	%r221, %r1, 3, 1;
	shl.b32 	%r256, %r221, 1;
	or.b32  	%r222, %r256, %r255;
	or.b32  	%r223, %r222, 64;
	mov.f32 	%f255, 0f40000000;
	mov.f32 	%f256, 0f43FF8000;
	div.approx.f32 	%f251, %f256, %f255;
	cvt.rn.f32.s32 	%f257, %r222;
	sub.f32 	%f258, %f257, %f251;
	mov.f32 	%f287, 0f43000000;
	div.approx.f32 	%f253, %f258, %f287;
	setp.ne.f32 	%p8, %f253, 0f00000000;
	mov.f32 	%f1363, 0f3F800000;
	mov.f32 	%f1348, %f1363;
	@%p8 bra 	LBB0_5;
	bra.uni 	LBB0_6;
LBB0_5:                                 // %L606
	sin.approx.f32 	%f288, %f253;
	div.approx.f32 	%f1348, %f288, %f253;
LBB0_6:                                 // %L609
	cvt.rn.f32.s32 	%f291, %r223;
	sub.f32 	%f292, %f291, %f251;
	div.approx.f32 	%f5, %f292, %f287;
	setp.eq.f32 	%p14, %f5, 0f00000000;
	mov.f32 	%f1349, %f1363;
	@%p14 bra 	LBB0_8;
// %bb.7:                               // %L626
	sin.approx.f32 	%f322, %f5;
	div.approx.f32 	%f1349, %f322, %f5;
LBB0_8:                                 // %L629
	or.b32  	%r274, %r222, 1;
	or.b32  	%r8, %r222, 65;
	cvt.rn.f32.s32 	%f326, %r274;
	sub.f32 	%f327, %f326, %f251;
	div.approx.f32 	%f9, %f327, %f287;
	setp.eq.f32 	%p20, %f9, 0f00000000;
	mov.f32 	%f1350, %f1363;
	@%p20 bra 	LBB0_10;
// %bb.9:                               // %L708
	sin.approx.f32 	%f357, %f9;
	div.approx.f32 	%f1350, %f357, %f9;
LBB0_10:                                // %L711
	cvt.rn.f32.s32 	%f360, %r8;
	sub.f32 	%f361, %f360, %f251;
	div.approx.f32 	%f14, %f361, %f287;
	setp.eq.f32 	%p26, %f14, 0f00000000;
	mov.f32 	%f1351, %f1363;
	@%p26 bra 	LBB0_12;
// %bb.11:                              // %L728
	sin.approx.f32 	%f391, %f14;
	div.approx.f32 	%f1351, %f391, %f14;
LBB0_12:                                // %L731
	or.b32  	%r292, %r222, 128;
	or.b32  	%r10, %r222, 192;
	cvt.rn.f32.s32 	%f395, %r292;
	sub.f32 	%f396, %f395, %f251;
	div.approx.f32 	%f18, %f396, %f287;
	setp.eq.f32 	%p32, %f18, 0f00000000;
	mov.f32 	%f1352, %f1363;
	@%p32 bra 	LBB0_14;
// %bb.13:                              // %L810
	sin.approx.f32 	%f426, %f18;
	div.approx.f32 	%f1352, %f426, %f18;
LBB0_14:                                // %L813
	cvt.rn.f32.s32 	%f429, %r10;
	sub.f32 	%f430, %f429, %f251;
	div.approx.f32 	%f23, %f430, %f287;
	setp.eq.f32 	%p38, %f23, 0f00000000;
	mov.f32 	%f1353, %f1363;
	@%p38 bra 	LBB0_16;
// %bb.15:                              // %L830
	sin.approx.f32 	%f460, %f23;
	div.approx.f32 	%f1353, %f460, %f23;
LBB0_16:                                // %L833
	or.b32  	%r310, %r222, 129;
	or.b32  	%r12, %r222, 193;
	cvt.rn.f32.s32 	%f464, %r310;
	sub.f32 	%f465, %f464, %f251;
	div.approx.f32 	%f27, %f465, %f287;
	setp.eq.f32 	%p44, %f27, 0f00000000;
	mov.f32 	%f1354, %f1363;
	@%p44 bra 	LBB0_18;
// %bb.17:                              // %L912
	sin.approx.f32 	%f495, %f27;
	div.approx.f32 	%f1354, %f495, %f27;
LBB0_18:                                // %L915
	cvt.rn.f32.s32 	%f498, %r12;
	sub.f32 	%f499, %f498, %f251;
	div.approx.f32 	%f32, %f499, %f287;
	setp.eq.f32 	%p50, %f32, 0f00000000;
	mov.f32 	%f1355, %f1363;
	@%p50 bra 	LBB0_20;
// %bb.19:                              // %L932
	sin.approx.f32 	%f529, %f32;
	div.approx.f32 	%f1355, %f529, %f32;
LBB0_20:                                // %L935
	or.b32  	%r328, %r222, 256;
	or.b32  	%r14, %r222, 320;
	cvt.rn.f32.s32 	%f533, %r328;
	sub.f32 	%f534, %f533, %f251;
	div.approx.f32 	%f36, %f534, %f287;
	setp.eq.f32 	%p56, %f36, 0f00000000;
	mov.f32 	%f1356, %f1363;
	@%p56 bra 	LBB0_22;
// %bb.21:                              // %L1014
	sin.approx.f32 	%f564, %f36;
	div.approx.f32 	%f1356, %f564, %f36;
LBB0_22:                                // %L1017
	mov.f32 	%f259, 0f44004000;
	cvt.rn.f32.s32 	%f567, %r14;
	sub.f32 	%f568, %f567, %f251;
	div.approx.f32 	%f41, %f568, %f287;
	setp.eq.f32 	%p62, %f41, 0f00000000;
	mov.f32 	%f1357, %f1363;
	@%p62 bra 	LBB0_24;
// %bb.23:                              // %L1034
	sin.approx.f32 	%f598, %f41;
	div.approx.f32 	%f1357, %f598, %f41;
LBB0_24:                                // %L1037
	div.approx.f32 	%f260, %f258, %f259;
	div.approx.f32 	%f294, %f292, %f259;
	div.approx.f32 	%f329, %f327, %f259;
	div.approx.f32 	%f363, %f361, %f259;
	div.approx.f32 	%f398, %f396, %f259;
	div.approx.f32 	%f432, %f430, %f259;
	div.approx.f32 	%f467, %f465, %f259;
	div.approx.f32 	%f501, %f499, %f259;
	div.approx.f32 	%f536, %f534, %f259;
	div.approx.f32 	%f570, %f568, %f259;
	or.b32  	%r346, %r222, 257;
	or.b32  	%r16, %r222, 321;
	cvt.rn.f32.s32 	%f602, %r346;
	sub.f32 	%f603, %f602, %f251;
	div.approx.f32 	%f605, %f603, %f259;
	div.approx.f32 	%f45, %f603, %f287;
	setp.eq.f32 	%p68, %f45, 0f00000000;
	mov.f32 	%f1358, %f1363;
	@%p68 bra 	LBB0_26;
// %bb.25:                              // %L1116
	sin.approx.f32 	%f633, %f45;
	div.approx.f32 	%f1358, %f633, %f45;
LBB0_26:                                // %L1119
	abs.f32 	%f261, %f260;
	abs.f32 	%f295, %f294;
	abs.f32 	%f330, %f329;
	abs.f32 	%f364, %f363;
	abs.f32 	%f399, %f398;
	abs.f32 	%f433, %f432;
	abs.f32 	%f468, %f467;
	abs.f32 	%f502, %f501;
	abs.f32 	%f537, %f536;
	abs.f32 	%f571, %f570;
	abs.f32 	%f606, %f605;
	cvt.rn.f32.s32 	%f636, %r16;
	sub.f32 	%f637, %f636, %f251;
	div.approx.f32 	%f639, %f637, %f259;
	abs.f32 	%f640, %f639;
	div.approx.f32 	%f50, %f637, %f287;
	setp.eq.f32 	%p74, %f50, 0f00000000;
	mov.f32 	%f1359, %f1363;
	@%p74 bra 	LBB0_28;
// %bb.27:                              // %L1136
	sin.approx.f32 	%f667, %f50;
	div.approx.f32 	%f1359, %f667, %f50;
LBB0_28:                                // %L1139
	setp.gt.f32 	%p3, %f261, 0f4B800000;
	mul.f32 	%f262, %f260, 0f00000000;
	setp.gt.f32 	%p9, %f295, 0f4B800000;
	mul.f32 	%f296, %f294, 0f00000000;
	setp.gt.f32 	%p15, %f330, 0f4B800000;
	mul.f32 	%f331, %f329, 0f00000000;
	setp.gt.f32 	%p21, %f364, 0f4B800000;
	mul.f32 	%f365, %f363, 0f00000000;
	setp.gt.f32 	%p27, %f399, 0f4B800000;
	mul.f32 	%f400, %f398, 0f00000000;
	setp.gt.f32 	%p33, %f433, 0f4B800000;
	mul.f32 	%f434, %f432, 0f00000000;
	setp.gt.f32 	%p39, %f468, 0f4B800000;
	mul.f32 	%f469, %f467, 0f00000000;
	setp.gt.f32 	%p45, %f502, 0f4B800000;
	mul.f32 	%f503, %f501, 0f00000000;
	setp.gt.f32 	%p51, %f537, 0f4B800000;
	mul.f32 	%f538, %f536, 0f00000000;
	setp.gt.f32 	%p57, %f571, 0f4B800000;
	mul.f32 	%f572, %f570, 0f00000000;
	setp.gt.f32 	%p63, %f606, 0f4B800000;
	mul.f32 	%f607, %f605, 0f00000000;
	setp.gt.f32 	%p69, %f640, 0f4B800000;
	mul.f32 	%f641, %f639, 0f00000000;
	or.b32  	%r364, %r222, 384;
	or.b32  	%r18, %r222, 448;
	cvt.rn.f32.s32 	%f671, %r364;
	sub.f32 	%f672, %f671, %f251;
	div.approx.f32 	%f674, %f672, %f259;
	abs.f32 	%f675, %f674;
	setp.gt.f32 	%p75, %f675, 0f4B800000;
	mul.f32 	%f676, %f674, 0f00000000;
	div.approx.f32 	%f54, %f672, %f287;
	setp.eq.f32 	%p80, %f54, 0f00000000;
	mov.f32 	%f1360, %f1363;
	@%p80 bra 	LBB0_30;
// %bb.29:                              // %L1218
	sin.approx.f32 	%f702, %f54;
	div.approx.f32 	%f1360, %f702, %f54;
LBB0_30:                                // %L1221
	selp.f32 	%f263, %f262, %f260, %p3;
	selp.f32 	%f297, %f296, %f294, %p9;
	selp.f32 	%f332, %f331, %f329, %p15;
	selp.f32 	%f366, %f365, %f363, %p21;
	selp.f32 	%f401, %f400, %f398, %p27;
	selp.f32 	%f435, %f434, %f432, %p33;
	selp.f32 	%f470, %f469, %f467, %p39;
	selp.f32 	%f504, %f503, %f501, %p45;
	selp.f32 	%f539, %f538, %f536, %p51;
	selp.f32 	%f573, %f572, %f570, %p57;
	selp.f32 	%f608, %f607, %f605, %p63;
	selp.f32 	%f642, %f641, %f639, %p69;
	selp.f32 	%f677, %f676, %f674, %p75;
	cvt.rn.f32.s32 	%f705, %r18;
	sub.f32 	%f706, %f705, %f251;
	div.approx.f32 	%f708, %f706, %f259;
	abs.f32 	%f709, %f708;
	setp.gt.f32 	%p81, %f709, 0f4B800000;
	mul.f32 	%f710, %f708, 0f00000000;
	selp.f32 	%f711, %f710, %f708, %p81;
	div.approx.f32 	%f59, %f706, %f287;
	setp.eq.f32 	%p86, %f59, 0f00000000;
	mov.f32 	%f1361, %f1363;
	@%p86 bra 	LBB0_32;
// %bb.31:                              // %L1238
	sin.approx.f32 	%f736, %f59;
	div.approx.f32 	%f1361, %f736, %f59;
LBB0_32:                                // %L1241
	add.f32 	%f264, %f263, %f263;
	add.f32 	%f298, %f297, %f297;
	add.f32 	%f333, %f332, %f332;
	add.f32 	%f367, %f366, %f366;
	add.f32 	%f402, %f401, %f401;
	add.f32 	%f436, %f435, %f435;
	add.f32 	%f471, %f470, %f470;
	add.f32 	%f505, %f504, %f504;
	add.f32 	%f540, %f539, %f539;
	add.f32 	%f574, %f573, %f573;
	add.f32 	%f609, %f608, %f608;
	add.f32 	%f643, %f642, %f642;
	add.f32 	%f678, %f677, %f677;
	add.f32 	%f712, %f711, %f711;
	or.b32  	%r382, %r222, 385;
	or.b32  	%r20, %r222, 449;
	cvt.rn.f32.s32 	%f740, %r382;
	sub.f32 	%f741, %f740, %f251;
	div.approx.f32 	%f743, %f741, %f259;
	abs.f32 	%f744, %f743;
	setp.gt.f32 	%p87, %f744, 0f4B800000;
	mul.f32 	%f745, %f743, 0f00000000;
	selp.f32 	%f746, %f745, %f743, %p87;
	add.f32 	%f747, %f746, %f746;
	div.approx.f32 	%f63, %f741, %f287;
	setp.eq.f32 	%p92, %f63, 0f00000000;
	mov.f32 	%f1362, %f1363;
	@%p92 bra 	LBB0_34;
// %bb.33:                              // %L1320
	sin.approx.f32 	%f771, %f63;
	div.approx.f32 	%f1362, %f771, %f63;
LBB0_34:                                // %L1323
	mov.b32 	%r257, %f264;
	mov.b32 	%r264, %f298;
	mov.b32 	%r275, %f333;
	mov.b32 	%r282, %f367;
	mov.b32 	%r293, %f402;
	mov.b32 	%r300, %f436;
	mov.b32 	%r311, %f471;
	mov.b32 	%r318, %f505;
	mov.b32 	%r329, %f540;
	mov.b32 	%r336, %f574;
	mov.b32 	%r347, %f609;
	mov.b32 	%r354, %f643;
	mov.b32 	%r365, %f678;
	mov.b32 	%r372, %f712;
	mov.b32 	%r383, %f747;
	cvt.rn.f32.s32 	%f774, %r20;
	sub.f32 	%f775, %f774, %f251;
	div.approx.f32 	%f777, %f775, %f259;
	abs.f32 	%f778, %f777;
	setp.gt.f32 	%p93, %f778, 0f4B800000;
	mul.f32 	%f779, %f777, 0f00000000;
	selp.f32 	%f780, %f779, %f777, %p93;
	add.f32 	%f781, %f780, %f780;
	mov.b32 	%r390, %f781;
	div.approx.f32 	%f68, %f775, %f287;
	setp.eq.f32 	%p98, %f68, 0f00000000;
	@%p98 bra 	LBB0_36;
// %bb.35:                              // %L1340
	sin.approx.f32 	%f805, %f68;
	div.approx.f32 	%f1363, %f805, %f68;
LBB0_36:                                // %L1343
	and.b32  	%r258, %r257, -2147483648;
	and.b32  	%r265, %r264, -2147483648;
	and.b32  	%r276, %r275, -2147483648;
	and.b32  	%r283, %r282, -2147483648;
	and.b32  	%r294, %r293, -2147483648;
	and.b32  	%r301, %r300, -2147483648;
	and.b32  	%r312, %r311, -2147483648;
	and.b32  	%r319, %r318, -2147483648;
	and.b32  	%r330, %r329, -2147483648;
	and.b32  	%r337, %r336, -2147483648;
	and.b32  	%r348, %r347, -2147483648;
	and.b32  	%r355, %r354, -2147483648;
	and.b32  	%r366, %r365, -2147483648;
	and.b32  	%r373, %r372, -2147483648;
	and.b32  	%r384, %r383, -2147483648;
	and.b32  	%r391, %r390, -2147483648;
	mul.lo.s32 	%r22, %r222, 127;
	cvt.rn.f32.s32 	%f808, %r22;
	div.approx.f32 	%f71, %f808, %f287;
	abs.f32 	%f1366, %f71;
	setp.lt.f32 	%p99, %f1366, 0f40000000;
	@%p99 bra 	LBB0_48;
// %bb.37:
	setp.gtu.f32 	%p100, %f1366, 0f4B800000;
	@%p100 bra 	LBB0_44;
	bra.uni 	LBB0_38;
LBB0_44:
	mov.b32 	%r24, %f1366;
	and.b32  	%r400, %r24, 8388607;
	or.b32  	%r16164, %r400, 1065353216;
	mov.b32 	%f1365, %r16164;
	add.s32 	%r401, %r24, -1073741824;
	and.b32  	%r16165, %r401, -8388608;
	setp.eq.s32 	%p106, %r16165, 0;
	@%p106 bra 	LBB0_47;
// %bb.45:                              // %__nv_fmaf_rn.exit4.i.i.i.preheader
	mov.f32 	%f819, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f818,%f819;
	// end inline asm
LBB0_46:                                // %__nv_fmaf_rn.exit4.i.i.i
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r402, %r16165, 192937984;
	add.s32 	%r403, %r402, %r16164;
	mov.b32 	%f820, %r403;
	mul.f32 	%f821, %f818, %f820;
	sub.f32 	%f822, %f820, %f821;
	fma.rn.f32 	%f823, %f822, %f818, %f821;
	sub.f32 	%f824, %f820, %f823;
	fma.rz.f32 	%f825, %f824, %f818, %f823;
	cvt.rzi.f32.f32 	%f826, %f825;
	sub.f32 	%f1365, %f820, %f826;
	sub.s32 	%r16165, %r16165, %r402;
	mov.b32 	%r16164, %f1365;
	setp.ne.s32 	%p107, %r16165, 0;
	setp.ne.s32 	%p108, %r16164, 0;
	and.pred  	%p109, %p107, %p108;
	@%p109 bra 	LBB0_46;
LBB0_47:                                // %__internal_fmodf_slowpath_mod.exit.i.i
	setp.gt.u32 	%p110, %r24, 2139095039;
	selp.f32 	%f827, 0f7FFFFFFF, 0f4B800000, %p110;
	mul.f32 	%f828, %f1365, 0f34000000;
	mul.f32 	%f1366, %f827, %f828;
	bra.uni 	LBB0_48;
LBB0_38:                                // %__nv_fast_fdividef.exit.i.i.i
	div.approx.f32 	%f811, %f1366, %f255;
	cvt.rzi.f32.f32 	%f1364, %f811;
	fma.rn.f32 	%f74, %f1364, 0fC0000000, %f1366;
	mov.b32 	%r23, %f74;
	setp.lt.u32 	%p101, %r23, 1073741824;
	@%p101 bra 	LBB0_43;
// %bb.39:
	setp.lt.u32 	%p102, %r23, -2147483647;
	@%p102 bra 	LBB0_41;
// %bb.40:
	add.f32 	%f816, %f1364, 0fBF800000;
	setp.lt.f32 	%p105, %f74, 0fC0000000;
	add.f32 	%f817, %f816, 0fBF800000;
	selp.f32 	%f1364, %f817, %f816, %p105;
	bra.uni 	LBB0_43;
LBB0_41:
	add.f32 	%f1364, %f1364, 0f3F800000;
	setp.ltu.f32 	%p103, %f74, 0f40800000;
	@%p103 bra 	LBB0_43;
// %bb.42:                              // %__nv_fmaf_rn.exit.i.i.i
	add.f32 	%f812, %f1364, 0f3F800000;
	fma.rn.f32 	%f814, %f255, 0fC0400000, %f74;
	setp.ge.f32 	%p104, %f814, 0f00000000;
	add.f32 	%f815, %f812, 0f3F800000;
	selp.f32 	%f1364, %f815, %f812, %p104;
LBB0_43:                                // %__internal_fmodf_fastpath_quot.exit.i.i
	fma.rn.f32 	%f1366, %f1364, 0fC0000000, %f1366;
LBB0_48:                                // %__internal_fmodf_kernel.exit.i
	or.b32  	%r259, %r258, 1056964608;
	or.b32  	%r266, %r265, 1056964608;
	or.b32  	%r277, %r276, 1056964608;
	or.b32  	%r284, %r283, 1056964608;
	or.b32  	%r295, %r294, 1056964608;
	or.b32  	%r302, %r301, 1056964608;
	or.b32  	%r313, %r312, 1056964608;
	or.b32  	%r320, %r319, 1056964608;
	or.b32  	%r331, %r330, 1056964608;
	or.b32  	%r338, %r337, 1056964608;
	or.b32  	%r349, %r348, 1056964608;
	or.b32  	%r356, %r355, 1056964608;
	or.b32  	%r367, %r366, 1056964608;
	or.b32  	%r374, %r373, 1056964608;
	or.b32  	%r385, %r384, 1056964608;
	or.b32  	%r392, %r391, 1056964608;
	abs.f32 	%f829, %f1366;
	setp.gtu.f32 	%p111, %f829, 0f7F800000;
	@%p111 bra 	LBB0_50;
// %bb.49:
	mov.b32 	%r404, %f71;
	and.b32  	%r405, %r404, -2147483648;
	mov.b32 	%r406, %f1366;
	or.b32  	%r407, %r405, %r406;
	mov.b32 	%f1366, %r407;
LBB0_50:                                // %__nv_fmodf.exit
	mov.b32 	%f265, %r259;
	mov.b32 	%f299, %r266;
	mov.b32 	%f334, %r277;
	mov.b32 	%f368, %r284;
	mov.b32 	%f403, %r295;
	mov.b32 	%f437, %r302;
	mov.b32 	%f472, %r313;
	mov.b32 	%f506, %r320;
	mov.b32 	%f541, %r331;
	mov.b32 	%f575, %r338;
	mov.b32 	%f610, %r349;
	mov.b32 	%f644, %r356;
	mov.b32 	%f679, %r367;
	mov.b32 	%f713, %r374;
	mov.b32 	%f748, %r385;
	mov.b32 	%f782, %r392;
	add.f32 	%f830, %f1366, %f1366;
	mov.b32 	%r408, %f830;
	and.b32  	%r409, %r408, -2147483648;
	or.b32  	%r410, %r409, 1056964608;
	mov.b32 	%f831, %r410;
	add.f32 	%f832, %f830, %f831;
	cvt.rzi.f32.f32 	%f833, %f832;
	abs.f32 	%f834, %f830;
	setp.gt.f32 	%p112, %f834, 0f4B000000;
	selp.f32 	%f835, %f830, %f833, %p112;
	cvt.rzi.f32.f32 	%f836, %f830;
	setp.lt.f32 	%p113, %f834, 0f3F000000;
	add.s32 	%r416, %r22, 8128;
	cvt.rn.f32.s32 	%f861, %r416;
	div.approx.f32 	%f90, %f861, %f287;
	abs.f32 	%f1370, %f90;
	setp.lt.f32 	%p119, %f1370, 0f40000000;
	@%p119 bra 	LBB0_62;
// %bb.51:
	setp.gtu.f32 	%p120, %f1370, 0f4B800000;
	@%p120 bra 	LBB0_58;
	bra.uni 	LBB0_52;
LBB0_58:
	mov.b32 	%r32, %f1370;
	and.b32  	%r417, %r32, 8388607;
	or.b32  	%r16166, %r417, 1065353216;
	mov.b32 	%f1369, %r16166;
	add.s32 	%r418, %r32, -1073741824;
	and.b32  	%r16167, %r418, -8388608;
	setp.eq.s32 	%p126, %r16167, 0;
	@%p126 bra 	LBB0_61;
// %bb.59:                              // %__nv_fmaf_rn.exit4.i.i.i2229.preheader
	mov.f32 	%f872, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f871,%f872;
	// end inline asm
LBB0_60:                                // %__nv_fmaf_rn.exit4.i.i.i2229
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r419, %r16167, 192937984;
	add.s32 	%r420, %r419, %r16166;
	mov.b32 	%f873, %r420;
	mul.f32 	%f874, %f871, %f873;
	sub.f32 	%f875, %f873, %f874;
	fma.rn.f32 	%f876, %f875, %f871, %f874;
	sub.f32 	%f877, %f873, %f876;
	fma.rz.f32 	%f878, %f877, %f871, %f876;
	cvt.rzi.f32.f32 	%f879, %f878;
	sub.f32 	%f1369, %f873, %f879;
	sub.s32 	%r16167, %r16167, %r419;
	mov.b32 	%r16166, %f1369;
	setp.ne.s32 	%p127, %r16167, 0;
	setp.ne.s32 	%p128, %r16166, 0;
	and.pred  	%p129, %p127, %p128;
	@%p129 bra 	LBB0_60;
LBB0_61:                                // %__internal_fmodf_slowpath_mod.exit.i.i2231
	setp.gt.u32 	%p130, %r32, 2139095039;
	selp.f32 	%f880, 0f7FFFFFFF, 0f4B800000, %p130;
	mul.f32 	%f881, %f1369, 0f34000000;
	mul.f32 	%f1370, %f880, %f881;
	bra.uni 	LBB0_62;
LBB0_52:                                // %__nv_fast_fdividef.exit.i.i.i2201
	div.approx.f32 	%f864, %f1370, %f255;
	cvt.rzi.f32.f32 	%f1368, %f864;
	fma.rn.f32 	%f93, %f1368, 0fC0000000, %f1370;
	mov.b32 	%r31, %f93;
	setp.lt.u32 	%p121, %r31, 1073741824;
	@%p121 bra 	LBB0_57;
// %bb.53:
	setp.lt.u32 	%p122, %r31, -2147483647;
	@%p122 bra 	LBB0_55;
// %bb.54:
	add.f32 	%f869, %f1368, 0fBF800000;
	setp.lt.f32 	%p125, %f93, 0fC0000000;
	add.f32 	%f870, %f869, 0fBF800000;
	selp.f32 	%f1368, %f870, %f869, %p125;
	bra.uni 	LBB0_57;
LBB0_55:
	add.f32 	%f1368, %f1368, 0f3F800000;
	setp.ltu.f32 	%p123, %f93, 0f40800000;
	@%p123 bra 	LBB0_57;
// %bb.56:                              // %__nv_fmaf_rn.exit.i.i.i2206
	add.f32 	%f865, %f1368, 0f3F800000;
	fma.rn.f32 	%f867, %f255, 0fC0400000, %f93;
	setp.ge.f32 	%p124, %f867, 0f00000000;
	add.f32 	%f868, %f865, 0f3F800000;
	selp.f32 	%f1368, %f868, %f865, %p124;
LBB0_57:                                // %__internal_fmodf_fastpath_quot.exit.i.i2210
	fma.rn.f32 	%f1370, %f1368, 0fC0000000, %f1370;
LBB0_62:                                // %__internal_fmodf_kernel.exit.i2235
	add.f32 	%f266, %f264, %f265;
	abs.f32 	%f268, %f264;
	add.f32 	%f300, %f298, %f299;
	abs.f32 	%f302, %f298;
	add.f32 	%f335, %f333, %f334;
	abs.f32 	%f337, %f333;
	add.f32 	%f369, %f367, %f368;
	abs.f32 	%f371, %f367;
	add.f32 	%f404, %f402, %f403;
	abs.f32 	%f406, %f402;
	add.f32 	%f438, %f436, %f437;
	abs.f32 	%f440, %f436;
	add.f32 	%f473, %f471, %f472;
	abs.f32 	%f475, %f471;
	add.f32 	%f507, %f505, %f506;
	abs.f32 	%f509, %f505;
	add.f32 	%f542, %f540, %f541;
	abs.f32 	%f544, %f540;
	add.f32 	%f576, %f574, %f575;
	abs.f32 	%f578, %f574;
	add.f32 	%f611, %f609, %f610;
	abs.f32 	%f613, %f609;
	add.f32 	%f645, %f643, %f644;
	abs.f32 	%f647, %f643;
	add.f32 	%f680, %f678, %f679;
	abs.f32 	%f682, %f678;
	add.f32 	%f714, %f712, %f713;
	abs.f32 	%f716, %f712;
	add.f32 	%f749, %f747, %f748;
	abs.f32 	%f751, %f747;
	add.f32 	%f783, %f781, %f782;
	abs.f32 	%f785, %f781;
	selp.f32 	%f837, %f836, %f835, %p113;
	shr.u32 	%r217, %r1, 2;
	abs.f32 	%f882, %f1370;
	setp.gtu.f32 	%p131, %f882, 0f7F800000;
	@%p131 bra 	LBB0_64;
// %bb.63:
	mov.b32 	%r421, %f90;
	and.b32  	%r422, %r421, -2147483648;
	mov.b32 	%r423, %f1370;
	or.b32  	%r424, %r422, %r423;
	mov.b32 	%f1370, %r424;
LBB0_64:                                // %__nv_fmodf.exit2236
	cvt.rzi.f32.f32 	%f267, %f266;
	setp.gt.f32 	%p4, %f268, 0f4B000000;
	cvt.rzi.f32.f32 	%f301, %f300;
	setp.gt.f32 	%p10, %f302, 0f4B000000;
	cvt.rzi.f32.f32 	%f336, %f335;
	setp.gt.f32 	%p16, %f337, 0f4B000000;
	cvt.rzi.f32.f32 	%f370, %f369;
	setp.gt.f32 	%p22, %f371, 0f4B000000;
	cvt.rzi.f32.f32 	%f405, %f404;
	setp.gt.f32 	%p28, %f406, 0f4B000000;
	cvt.rzi.f32.f32 	%f439, %f438;
	setp.gt.f32 	%p34, %f440, 0f4B000000;
	cvt.rzi.f32.f32 	%f474, %f473;
	setp.gt.f32 	%p40, %f475, 0f4B000000;
	cvt.rzi.f32.f32 	%f508, %f507;
	setp.gt.f32 	%p46, %f509, 0f4B000000;
	cvt.rzi.f32.f32 	%f543, %f542;
	setp.gt.f32 	%p52, %f544, 0f4B000000;
	cvt.rzi.f32.f32 	%f577, %f576;
	setp.gt.f32 	%p58, %f578, 0f4B000000;
	cvt.rzi.f32.f32 	%f612, %f611;
	setp.gt.f32 	%p64, %f613, 0f4B000000;
	cvt.rzi.f32.f32 	%f646, %f645;
	setp.gt.f32 	%p70, %f647, 0f4B000000;
	cvt.rzi.f32.f32 	%f681, %f680;
	setp.gt.f32 	%p76, %f682, 0f4B000000;
	cvt.rzi.f32.f32 	%f715, %f714;
	setp.gt.f32 	%p82, %f716, 0f4B000000;
	cvt.rzi.f32.f32 	%f750, %f749;
	setp.gt.f32 	%p88, %f751, 0f4B000000;
	cvt.rzi.f32.f32 	%f784, %f783;
	setp.gt.f32 	%p94, %f785, 0f4B000000;
	fma.rn.f32 	%f838, %f837, 0fBF000000, %f1366;
	add.f32 	%f883, %f1370, %f1370;
	mov.b32 	%r437, %f883;
	and.b32  	%r438, %r437, -2147483648;
	or.b32  	%r439, %r438, 1056964608;
	mov.b32 	%f884, %r439;
	add.f32 	%f885, %f883, %f884;
	cvt.rzi.f32.f32 	%f886, %f885;
	abs.f32 	%f887, %f883;
	setp.gt.f32 	%p132, %f887, 0f4B000000;
	selp.f32 	%f888, %f883, %f886, %p132;
	cvt.rzi.f32.f32 	%f889, %f883;
	setp.lt.f32 	%p133, %f887, 0f3F000000;
	selp.f32 	%f890, %f889, %f888, %p133;
	fma.rn.f32 	%f891, %f890, 0fBF000000, %f1370;
	and.b32  	%r445, %r1, 3;
	mul.lo.s32 	%r446, %r445, %r217;
	shl.b32 	%r447, %r446, 1;
	neg.s32 	%r43, %r447;
	cvt.rn.f32.s32 	%f916, %r43;
	mov.f32 	%f917, 0f41000000;
	div.approx.f32 	%f107, %f916, %f917;
	abs.f32 	%f1374, %f107;
	setp.lt.f32 	%p139, %f1374, 0f40000000;
	@%p139 bra 	LBB0_76;
// %bb.65:
	setp.gtu.f32 	%p140, %f1374, 0f4B800000;
	@%p140 bra 	LBB0_72;
	bra.uni 	LBB0_66;
LBB0_72:
	mov.b32 	%r45, %f1374;
	and.b32  	%r448, %r45, 8388607;
	or.b32  	%r16168, %r448, 1065353216;
	mov.b32 	%f1373, %r16168;
	add.s32 	%r449, %r45, -1073741824;
	and.b32  	%r16169, %r449, -8388608;
	setp.eq.s32 	%p146, %r16169, 0;
	@%p146 bra 	LBB0_75;
// %bb.73:                              // %__nv_fmaf_rn.exit4.i.i.i2275.preheader
	mov.f32 	%f927, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f926,%f927;
	// end inline asm
LBB0_74:                                // %__nv_fmaf_rn.exit4.i.i.i2275
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r450, %r16169, 192937984;
	add.s32 	%r451, %r450, %r16168;
	mov.b32 	%f928, %r451;
	mul.f32 	%f929, %f926, %f928;
	sub.f32 	%f930, %f928, %f929;
	fma.rn.f32 	%f931, %f930, %f926, %f929;
	sub.f32 	%f932, %f928, %f931;
	fma.rz.f32 	%f933, %f932, %f926, %f931;
	cvt.rzi.f32.f32 	%f934, %f933;
	sub.f32 	%f1373, %f928, %f934;
	sub.s32 	%r16169, %r16169, %r450;
	mov.b32 	%r16168, %f1373;
	setp.ne.s32 	%p147, %r16169, 0;
	setp.ne.s32 	%p148, %r16168, 0;
	and.pred  	%p149, %p147, %p148;
	@%p149 bra 	LBB0_74;
LBB0_75:                                // %__internal_fmodf_slowpath_mod.exit.i.i2277
	setp.gt.u32 	%p150, %r45, 2139095039;
	selp.f32 	%f935, 0f7FFFFFFF, 0f4B800000, %p150;
	mul.f32 	%f936, %f1373, 0f34000000;
	mul.f32 	%f1374, %f935, %f936;
	bra.uni 	LBB0_76;
LBB0_66:                                // %__nv_fast_fdividef.exit.i.i.i2247
	div.approx.f32 	%f919, %f1374, %f255;
	cvt.rzi.f32.f32 	%f1372, %f919;
	fma.rn.f32 	%f110, %f1372, 0fC0000000, %f1374;
	mov.b32 	%r44, %f110;
	setp.lt.u32 	%p141, %r44, 1073741824;
	@%p141 bra 	LBB0_71;
// %bb.67:
	setp.lt.u32 	%p142, %r44, -2147483647;
	@%p142 bra 	LBB0_69;
// %bb.68:
	add.f32 	%f924, %f1372, 0fBF800000;
	setp.lt.f32 	%p145, %f110, 0fC0000000;
	add.f32 	%f925, %f924, 0fBF800000;
	selp.f32 	%f1372, %f925, %f924, %p145;
	bra.uni 	LBB0_71;
LBB0_69:
	add.f32 	%f1372, %f1372, 0f3F800000;
	setp.ltu.f32 	%p143, %f110, 0f40800000;
	@%p143 bra 	LBB0_71;
// %bb.70:                              // %__nv_fmaf_rn.exit.i.i.i2252
	add.f32 	%f920, %f1372, 0f3F800000;
	fma.rn.f32 	%f922, %f255, 0fC0400000, %f110;
	setp.ge.f32 	%p144, %f922, 0f00000000;
	add.f32 	%f923, %f920, 0f3F800000;
	selp.f32 	%f1372, %f923, %f920, %p144;
LBB0_71:                                // %__internal_fmodf_fastpath_quot.exit.i.i2256
	fma.rn.f32 	%f1374, %f1372, 0fC0000000, %f1374;
LBB0_76:                                // %__internal_fmodf_kernel.exit.i2281
	selp.f32 	%f269, %f264, %f267, %p4;
	cvt.rzi.f32.f32 	%f270, %f264;
	setp.lt.f32 	%p5, %f268, 0f3F000000;
	selp.f32 	%f303, %f298, %f301, %p10;
	cvt.rzi.f32.f32 	%f304, %f298;
	setp.lt.f32 	%p11, %f302, 0f3F000000;
	selp.f32 	%f338, %f333, %f336, %p16;
	cvt.rzi.f32.f32 	%f339, %f333;
	setp.lt.f32 	%p17, %f337, 0f3F000000;
	selp.f32 	%f372, %f367, %f370, %p22;
	cvt.rzi.f32.f32 	%f373, %f367;
	setp.lt.f32 	%p23, %f371, 0f3F000000;
	selp.f32 	%f407, %f402, %f405, %p28;
	cvt.rzi.f32.f32 	%f408, %f402;
	setp.lt.f32 	%p29, %f406, 0f3F000000;
	selp.f32 	%f441, %f436, %f439, %p34;
	cvt.rzi.f32.f32 	%f442, %f436;
	setp.lt.f32 	%p35, %f440, 0f3F000000;
	selp.f32 	%f476, %f471, %f474, %p40;
	cvt.rzi.f32.f32 	%f477, %f471;
	setp.lt.f32 	%p41, %f475, 0f3F000000;
	selp.f32 	%f510, %f505, %f508, %p46;
	cvt.rzi.f32.f32 	%f511, %f505;
	setp.lt.f32 	%p47, %f509, 0f3F000000;
	selp.f32 	%f545, %f540, %f543, %p52;
	cvt.rzi.f32.f32 	%f546, %f540;
	setp.lt.f32 	%p53, %f544, 0f3F000000;
	selp.f32 	%f579, %f574, %f577, %p58;
	cvt.rzi.f32.f32 	%f580, %f574;
	setp.lt.f32 	%p59, %f578, 0f3F000000;
	selp.f32 	%f614, %f609, %f612, %p64;
	cvt.rzi.f32.f32 	%f615, %f609;
	setp.lt.f32 	%p65, %f613, 0f3F000000;
	selp.f32 	%f648, %f643, %f646, %p70;
	cvt.rzi.f32.f32 	%f649, %f643;
	setp.lt.f32 	%p71, %f647, 0f3F000000;
	selp.f32 	%f683, %f678, %f681, %p76;
	cvt.rzi.f32.f32 	%f684, %f678;
	setp.lt.f32 	%p77, %f682, 0f3F000000;
	selp.f32 	%f717, %f712, %f715, %p82;
	cvt.rzi.f32.f32 	%f718, %f712;
	setp.lt.f32 	%p83, %f716, 0f3F000000;
	selp.f32 	%f752, %f747, %f750, %p88;
	cvt.rzi.f32.f32 	%f753, %f747;
	setp.lt.f32 	%p89, %f751, 0f3F000000;
	selp.f32 	%f786, %f781, %f784, %p94;
	cvt.rzi.f32.f32 	%f787, %f781;
	setp.lt.f32 	%p95, %f785, 0f3F000000;
	mul.f32 	%f839, %f838, 0f34222169;
	mul.f32 	%f892, %f891, 0f34222169;
	abs.f32 	%f937, %f1374;
	setp.gtu.f32 	%p151, %f937, 0f7F800000;
	@%p151 bra 	LBB0_78;
// %bb.77:
	mov.b32 	%r452, %f107;
	and.b32  	%r453, %r452, -2147483648;
	mov.b32 	%r454, %f1374;
	or.b32  	%r455, %r453, %r454;
	mov.b32 	%f1374, %r455;
LBB0_78:                                // %__nv_fmodf.exit2282
	selp.f32 	%f271, %f270, %f269, %p5;
	selp.f32 	%f305, %f304, %f303, %p11;
	selp.f32 	%f340, %f339, %f338, %p17;
	selp.f32 	%f374, %f373, %f372, %p23;
	selp.f32 	%f409, %f408, %f407, %p29;
	selp.f32 	%f443, %f442, %f441, %p35;
	selp.f32 	%f478, %f477, %f476, %p41;
	selp.f32 	%f512, %f511, %f510, %p47;
	selp.f32 	%f547, %f546, %f545, %p53;
	selp.f32 	%f581, %f580, %f579, %p59;
	selp.f32 	%f616, %f615, %f614, %p65;
	selp.f32 	%f650, %f649, %f648, %p71;
	selp.f32 	%f685, %f684, %f683, %p77;
	selp.f32 	%f719, %f718, %f717, %p83;
	selp.f32 	%f754, %f753, %f752, %p89;
	selp.f32 	%f788, %f787, %f786, %p95;
	fma.rn.f32 	%f840, %f838, 0f40490FDA, %f839;
	fma.rn.f32 	%f893, %f891, 0f40490FDA, %f892;
	add.f32 	%f938, %f1374, %f1374;
	mov.b32 	%r456, %f938;
	and.b32  	%r457, %r456, -2147483648;
	or.b32  	%r458, %r457, 1056964608;
	mov.b32 	%f939, %r458;
	add.f32 	%f940, %f938, %f939;
	cvt.rzi.f32.f32 	%f941, %f940;
	abs.f32 	%f942, %f938;
	setp.gt.f32 	%p152, %f942, 0f4B000000;
	selp.f32 	%f943, %f938, %f941, %p152;
	cvt.rzi.f32.f32 	%f944, %f938;
	setp.lt.f32 	%p153, %f942, 0f3F000000;
	selp.f32 	%f945, %f944, %f943, %p153;
	fma.rn.f32 	%f946, %f945, 0fBF000000, %f1374;
	mul.f32 	%f947, %f946, 0f34222169;
	fma.rn.f32 	%f948, %f946, 0f40490FDA, %f947;
	shl.b32 	%r52, %r217, 3;
	sub.s32 	%r464, %r43, %r52;
	cvt.rn.f32.s32 	%f969, %r464;
	div.approx.f32 	%f126, %f969, %f917;
	abs.f32 	%f1378, %f126;
	setp.lt.f32 	%p159, %f1378, 0f40000000;
	@%p159 bra 	LBB0_90;
// %bb.79:
	setp.gtu.f32 	%p160, %f1378, 0f4B800000;
	@%p160 bra 	LBB0_86;
	bra.uni 	LBB0_80;
LBB0_86:
	mov.b32 	%r54, %f1378;
	and.b32  	%r465, %r54, 8388607;
	or.b32  	%r16170, %r465, 1065353216;
	mov.b32 	%f1377, %r16170;
	add.s32 	%r466, %r54, -1073741824;
	and.b32  	%r16171, %r466, -8388608;
	setp.eq.s32 	%p166, %r16171, 0;
	@%p166 bra 	LBB0_89;
// %bb.87:                              // %__nv_fmaf_rn.exit4.i.i.i2321.preheader
	mov.f32 	%f980, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f979,%f980;
	// end inline asm
LBB0_88:                                // %__nv_fmaf_rn.exit4.i.i.i2321
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r467, %r16171, 192937984;
	add.s32 	%r468, %r467, %r16170;
	mov.b32 	%f981, %r468;
	mul.f32 	%f982, %f979, %f981;
	sub.f32 	%f983, %f981, %f982;
	fma.rn.f32 	%f984, %f983, %f979, %f982;
	sub.f32 	%f985, %f981, %f984;
	fma.rz.f32 	%f986, %f985, %f979, %f984;
	cvt.rzi.f32.f32 	%f987, %f986;
	sub.f32 	%f1377, %f981, %f987;
	sub.s32 	%r16171, %r16171, %r467;
	mov.b32 	%r16170, %f1377;
	setp.ne.s32 	%p167, %r16171, 0;
	setp.ne.s32 	%p168, %r16170, 0;
	and.pred  	%p169, %p167, %p168;
	@%p169 bra 	LBB0_88;
LBB0_89:                                // %__internal_fmodf_slowpath_mod.exit.i.i2323
	setp.gt.u32 	%p170, %r54, 2139095039;
	selp.f32 	%f988, 0f7FFFFFFF, 0f4B800000, %p170;
	mul.f32 	%f989, %f1377, 0f34000000;
	mul.f32 	%f1378, %f988, %f989;
	bra.uni 	LBB0_90;
LBB0_80:                                // %__nv_fast_fdividef.exit.i.i.i2293
	div.approx.f32 	%f972, %f1378, %f255;
	cvt.rzi.f32.f32 	%f1376, %f972;
	fma.rn.f32 	%f129, %f1376, 0fC0000000, %f1378;
	mov.b32 	%r53, %f129;
	setp.lt.u32 	%p161, %r53, 1073741824;
	@%p161 bra 	LBB0_85;
// %bb.81:
	setp.lt.u32 	%p162, %r53, -2147483647;
	@%p162 bra 	LBB0_83;
// %bb.82:
	add.f32 	%f977, %f1376, 0fBF800000;
	setp.lt.f32 	%p165, %f129, 0fC0000000;
	add.f32 	%f978, %f977, 0fBF800000;
	selp.f32 	%f1376, %f978, %f977, %p165;
	bra.uni 	LBB0_85;
LBB0_83:
	add.f32 	%f1376, %f1376, 0f3F800000;
	setp.ltu.f32 	%p163, %f129, 0f40800000;
	@%p163 bra 	LBB0_85;
// %bb.84:                              // %__nv_fmaf_rn.exit.i.i.i2298
	add.f32 	%f973, %f1376, 0f3F800000;
	fma.rn.f32 	%f975, %f255, 0fC0400000, %f129;
	setp.ge.f32 	%p164, %f975, 0f00000000;
	add.f32 	%f976, %f973, 0f3F800000;
	selp.f32 	%f1376, %f976, %f973, %p164;
LBB0_85:                                // %__internal_fmodf_fastpath_quot.exit.i.i2302
	fma.rn.f32 	%f1378, %f1376, 0fC0000000, %f1378;
LBB0_90:                                // %__internal_fmodf_kernel.exit.i2327
	fma.rn.f32 	%f272, %f271, 0fBF000000, %f263;
	fma.rn.f32 	%f306, %f305, 0fBF000000, %f297;
	fma.rn.f32 	%f341, %f340, 0fBF000000, %f332;
	fma.rn.f32 	%f375, %f374, 0fBF000000, %f366;
	fma.rn.f32 	%f410, %f409, 0fBF000000, %f401;
	fma.rn.f32 	%f444, %f443, 0fBF000000, %f435;
	fma.rn.f32 	%f479, %f478, 0fBF000000, %f470;
	fma.rn.f32 	%f513, %f512, 0fBF000000, %f504;
	fma.rn.f32 	%f548, %f547, 0fBF000000, %f539;
	fma.rn.f32 	%f582, %f581, 0fBF000000, %f573;
	fma.rn.f32 	%f617, %f616, 0fBF000000, %f608;
	fma.rn.f32 	%f651, %f650, 0fBF000000, %f642;
	fma.rn.f32 	%f686, %f685, 0fBF000000, %f677;
	fma.rn.f32 	%f720, %f719, 0fBF000000, %f711;
	fma.rn.f32 	%f755, %f754, 0fBF000000, %f746;
	fma.rn.f32 	%f789, %f788, 0fBF000000, %f780;
	mul.f32 	%f841, %f840, %f840;
	mul.f32 	%f894, %f893, %f893;
	mul.f32 	%f949, %f948, %f948;
	shl.b32 	%r208, %r1, 1;
	abs.f32 	%f990, %f1378;
	setp.gtu.f32 	%p171, %f990, 0f7F800000;
	@%p171 bra 	LBB0_92;
// %bb.91:
	mov.b32 	%r469, %f126;
	and.b32  	%r470, %r469, -2147483648;
	mov.b32 	%r471, %f1378;
	or.b32  	%r472, %r470, %r471;
	mov.b32 	%f1378, %r472;
LBB0_92:                                // %__nv_fmodf.exit2328
	mul.f32 	%f273, %f272, %f272;
	mul.f32 	%f307, %f306, %f306;
	mul.f32 	%f342, %f341, %f341;
	mul.f32 	%f376, %f375, %f375;
	mul.f32 	%f411, %f410, %f410;
	mul.f32 	%f445, %f444, %f444;
	mul.f32 	%f480, %f479, %f479;
	mul.f32 	%f514, %f513, %f513;
	mul.f32 	%f549, %f548, %f548;
	mul.f32 	%f583, %f582, %f582;
	mul.f32 	%f618, %f617, %f617;
	mul.f32 	%f652, %f651, %f651;
	mul.f32 	%f687, %f686, %f686;
	mul.f32 	%f721, %f720, %f720;
	mul.f32 	%f756, %f755, %f755;
	mul.f32 	%f790, %f789, %f789;
	fma.rn.f32 	%f842, %f841, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f895, %f894, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f950, %f949, 0f37CBAC00, 0fBAB607ED;
	add.f32 	%f991, %f1378, %f1378;
	mov.b32 	%r485, %f991;
	and.b32  	%r486, %r485, -2147483648;
	or.b32  	%r487, %r486, 1056964608;
	mov.b32 	%f992, %r487;
	add.f32 	%f993, %f991, %f992;
	cvt.rzi.f32.f32 	%f994, %f993;
	abs.f32 	%f995, %f991;
	setp.gt.f32 	%p172, %f995, 0f4B000000;
	selp.f32 	%f996, %f991, %f994, %p172;
	cvt.rzi.f32.f32 	%f997, %f991;
	setp.lt.f32 	%p173, %f995, 0f3F000000;
	selp.f32 	%f998, %f997, %f996, %p173;
	fma.rn.f32 	%f999, %f998, 0fBF000000, %f1378;
	mul.f32 	%f1000, %f999, 0f34222169;
	fma.rn.f32 	%f1001, %f999, 0f40490FDA, %f1000;
	mul.f32 	%f1002, %f1001, %f1001;
	fma.rn.f32 	%f1003, %f1002, 0f37CBAC00, 0fBAB607ED;
	and.b32  	%r493, %r208, 6;
	shl.b32 	%r494, %r493, 1;
	neg.s32 	%r65, %r494;
	mul.lo.s32 	%r66, %r65, %r217;
	cvt.rn.f32.s32 	%f1024, %r66;
	div.approx.f32 	%f143, %f1024, %f287;
	abs.f32 	%f1382, %f143;
	setp.lt.f32 	%p179, %f1382, 0f40000000;
	@%p179 bra 	LBB0_104;
// %bb.93:
	setp.gtu.f32 	%p180, %f1382, 0f4B800000;
	@%p180 bra 	LBB0_100;
	bra.uni 	LBB0_94;
LBB0_100:
	mov.b32 	%r68, %f1382;
	and.b32  	%r495, %r68, 8388607;
	or.b32  	%r16172, %r495, 1065353216;
	mov.b32 	%f1381, %r16172;
	add.s32 	%r496, %r68, -1073741824;
	and.b32  	%r16173, %r496, -8388608;
	setp.eq.s32 	%p186, %r16173, 0;
	@%p186 bra 	LBB0_103;
// %bb.101:                             // %__nv_fmaf_rn.exit4.i.i.i2367.preheader
	mov.f32 	%f1035, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1034,%f1035;
	// end inline asm
LBB0_102:                               // %__nv_fmaf_rn.exit4.i.i.i2367
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r497, %r16173, 192937984;
	add.s32 	%r498, %r497, %r16172;
	mov.b32 	%f1036, %r498;
	mul.f32 	%f1037, %f1034, %f1036;
	sub.f32 	%f1038, %f1036, %f1037;
	fma.rn.f32 	%f1039, %f1038, %f1034, %f1037;
	sub.f32 	%f1040, %f1036, %f1039;
	fma.rz.f32 	%f1041, %f1040, %f1034, %f1039;
	cvt.rzi.f32.f32 	%f1042, %f1041;
	sub.f32 	%f1381, %f1036, %f1042;
	sub.s32 	%r16173, %r16173, %r497;
	mov.b32 	%r16172, %f1381;
	setp.ne.s32 	%p187, %r16173, 0;
	setp.ne.s32 	%p188, %r16172, 0;
	and.pred  	%p189, %p187, %p188;
	@%p189 bra 	LBB0_102;
LBB0_103:                               // %__internal_fmodf_slowpath_mod.exit.i.i2369
	setp.gt.u32 	%p190, %r68, 2139095039;
	selp.f32 	%f1043, 0f7FFFFFFF, 0f4B800000, %p190;
	mul.f32 	%f1044, %f1381, 0f34000000;
	mul.f32 	%f1382, %f1043, %f1044;
	bra.uni 	LBB0_104;
LBB0_94:                                // %__nv_fast_fdividef.exit.i.i.i2339
	div.approx.f32 	%f1027, %f1382, %f255;
	cvt.rzi.f32.f32 	%f1380, %f1027;
	fma.rn.f32 	%f146, %f1380, 0fC0000000, %f1382;
	mov.b32 	%r67, %f146;
	setp.lt.u32 	%p181, %r67, 1073741824;
	@%p181 bra 	LBB0_99;
// %bb.95:
	setp.lt.u32 	%p182, %r67, -2147483647;
	@%p182 bra 	LBB0_97;
// %bb.96:
	add.f32 	%f1032, %f1380, 0fBF800000;
	setp.lt.f32 	%p185, %f146, 0fC0000000;
	add.f32 	%f1033, %f1032, 0fBF800000;
	selp.f32 	%f1380, %f1033, %f1032, %p185;
	bra.uni 	LBB0_99;
LBB0_97:
	add.f32 	%f1380, %f1380, 0f3F800000;
	setp.ltu.f32 	%p183, %f146, 0f40800000;
	@%p183 bra 	LBB0_99;
// %bb.98:                              // %__nv_fmaf_rn.exit.i.i.i2344
	add.f32 	%f1028, %f1380, 0f3F800000;
	fma.rn.f32 	%f1030, %f255, 0fC0400000, %f146;
	setp.ge.f32 	%p184, %f1030, 0f00000000;
	add.f32 	%f1031, %f1028, 0f3F800000;
	selp.f32 	%f1380, %f1031, %f1028, %p184;
LBB0_99:                                // %__internal_fmodf_fastpath_quot.exit.i.i2348
	fma.rn.f32 	%f1382, %f1380, 0fC0000000, %f1382;
LBB0_104:                               // %__internal_fmodf_kernel.exit.i2373
	cvt.rzi.s32.f32 	%r260, %f271;
	fma.rn.f32 	%f274, %f273, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f275, %f273, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r267, %f305;
	fma.rn.f32 	%f308, %f307, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f309, %f307, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r278, %f340;
	fma.rn.f32 	%f343, %f342, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f344, %f342, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r285, %f374;
	fma.rn.f32 	%f377, %f376, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f378, %f376, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r296, %f409;
	fma.rn.f32 	%f412, %f411, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f413, %f411, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r303, %f443;
	fma.rn.f32 	%f446, %f445, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f447, %f445, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r314, %f478;
	fma.rn.f32 	%f481, %f480, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f482, %f480, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r321, %f512;
	fma.rn.f32 	%f515, %f514, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f516, %f514, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r332, %f547;
	fma.rn.f32 	%f550, %f549, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f551, %f549, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r339, %f581;
	fma.rn.f32 	%f584, %f583, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f585, %f583, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r350, %f616;
	fma.rn.f32 	%f619, %f618, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f620, %f618, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r357, %f650;
	fma.rn.f32 	%f653, %f652, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f654, %f652, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r368, %f685;
	fma.rn.f32 	%f688, %f687, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f689, %f687, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r375, %f719;
	fma.rn.f32 	%f722, %f721, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f723, %f721, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r386, %f754;
	fma.rn.f32 	%f757, %f756, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f758, %f756, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r393, %f788;
	fma.rn.f32 	%f791, %f790, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f792, %f790, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r411, %f837;
	fma.rn.f32 	%f843, %f842, %f841, 0f3D2AAABB;
	fma.rn.f32 	%f847, %f841, 0fB94D4153, 0f3C0885E4;
	cvt.rzi.s32.f32 	%r440, %f890;
	fma.rn.f32 	%f896, %f895, %f894, 0f3D2AAABB;
	fma.rn.f32 	%f900, %f894, 0fB94D4153, 0f3C0885E4;
	cvt.rzi.s32.f32 	%r459, %f945;
	fma.rn.f32 	%f951, %f950, %f949, 0f3D2AAABB;
	fma.rn.f32 	%f955, %f949, 0fB94D4153, 0f3C0885E4;
	cvt.rzi.s32.f32 	%r488, %f998;
	fma.rn.f32 	%f1004, %f1003, %f1002, 0f3D2AAABB;
	fma.rn.f32 	%f1008, %f1002, 0fB94D4153, 0f3C0885E4;
	abs.f32 	%f1045, %f1382;
	setp.gtu.f32 	%p191, %f1045, 0f7F800000;
	@%p191 bra 	LBB0_106;
// %bb.105:
	mov.b32 	%r499, %f143;
	and.b32  	%r500, %r499, -2147483648;
	mov.b32 	%r501, %f1382;
	or.b32  	%r502, %r500, %r501;
	mov.b32 	%f1382, %r502;
LBB0_106:                               // %__nv_fmodf.exit2374
	add.s32 	%r261, %r260, 1;
	fma.rn.f32 	%f276, %f274, %f273, 0fC0A55DF6;
	fma.rn.f32 	%f277, %f275, %f273, 0f4081E0CF;
	fma.rn.f32 	%f278, %f273, %f272, 0f00000000;
	add.s32 	%r268, %r267, 1;
	fma.rn.f32 	%f310, %f308, %f307, 0fC0A55DF6;
	fma.rn.f32 	%f311, %f309, %f307, 0f4081E0CF;
	fma.rn.f32 	%f312, %f307, %f306, 0f00000000;
	add.s32 	%r279, %r278, 1;
	fma.rn.f32 	%f345, %f343, %f342, 0fC0A55DF6;
	fma.rn.f32 	%f346, %f344, %f342, 0f4081E0CF;
	fma.rn.f32 	%f347, %f342, %f341, 0f00000000;
	add.s32 	%r286, %r285, 1;
	fma.rn.f32 	%f379, %f377, %f376, 0fC0A55DF6;
	fma.rn.f32 	%f380, %f378, %f376, 0f4081E0CF;
	fma.rn.f32 	%f381, %f376, %f375, 0f00000000;
	add.s32 	%r297, %r296, 1;
	fma.rn.f32 	%f414, %f412, %f411, 0fC0A55DF6;
	fma.rn.f32 	%f415, %f413, %f411, 0f4081E0CF;
	fma.rn.f32 	%f416, %f411, %f410, 0f00000000;
	add.s32 	%r304, %r303, 1;
	fma.rn.f32 	%f448, %f446, %f445, 0fC0A55DF6;
	fma.rn.f32 	%f449, %f447, %f445, 0f4081E0CF;
	fma.rn.f32 	%f450, %f445, %f444, 0f00000000;
	add.s32 	%r315, %r314, 1;
	fma.rn.f32 	%f483, %f481, %f480, 0fC0A55DF6;
	fma.rn.f32 	%f484, %f482, %f480, 0f4081E0CF;
	fma.rn.f32 	%f485, %f480, %f479, 0f00000000;
	add.s32 	%r322, %r321, 1;
	fma.rn.f32 	%f517, %f515, %f514, 0fC0A55DF6;
	fma.rn.f32 	%f518, %f516, %f514, 0f4081E0CF;
	fma.rn.f32 	%f519, %f514, %f513, 0f00000000;
	add.s32 	%r333, %r332, 1;
	fma.rn.f32 	%f552, %f550, %f549, 0fC0A55DF6;
	fma.rn.f32 	%f553, %f551, %f549, 0f4081E0CF;
	fma.rn.f32 	%f554, %f549, %f548, 0f00000000;
	add.s32 	%r340, %r339, 1;
	fma.rn.f32 	%f586, %f584, %f583, 0fC0A55DF6;
	fma.rn.f32 	%f587, %f585, %f583, 0f4081E0CF;
	fma.rn.f32 	%f588, %f583, %f582, 0f00000000;
	add.s32 	%r351, %r350, 1;
	fma.rn.f32 	%f621, %f619, %f618, 0fC0A55DF6;
	fma.rn.f32 	%f622, %f620, %f618, 0f4081E0CF;
	fma.rn.f32 	%f623, %f618, %f617, 0f00000000;
	add.s32 	%r358, %r357, 1;
	fma.rn.f32 	%f655, %f653, %f652, 0fC0A55DF6;
	fma.rn.f32 	%f656, %f654, %f652, 0f4081E0CF;
	fma.rn.f32 	%f657, %f652, %f651, 0f00000000;
	add.s32 	%r369, %r368, 1;
	fma.rn.f32 	%f690, %f688, %f687, 0fC0A55DF6;
	fma.rn.f32 	%f691, %f689, %f687, 0f4081E0CF;
	fma.rn.f32 	%f692, %f687, %f686, 0f00000000;
	add.s32 	%r376, %r375, 1;
	fma.rn.f32 	%f724, %f722, %f721, 0fC0A55DF6;
	fma.rn.f32 	%f725, %f723, %f721, 0f4081E0CF;
	fma.rn.f32 	%f726, %f721, %f720, 0f00000000;
	add.s32 	%r387, %r386, 1;
	fma.rn.f32 	%f759, %f757, %f756, 0fC0A55DF6;
	fma.rn.f32 	%f760, %f758, %f756, 0f4081E0CF;
	fma.rn.f32 	%f761, %f756, %f755, 0f00000000;
	add.s32 	%r394, %r393, 1;
	fma.rn.f32 	%f793, %f791, %f790, 0fC0A55DF6;
	fma.rn.f32 	%f794, %f792, %f790, 0f4081E0CF;
	fma.rn.f32 	%f795, %f790, %f789, 0f00000000;
	fma.rn.f32 	%f844, %f843, %f841, 0fBEFFFFFF;
	fma.rn.f32 	%f846, %f841, %f840, 0f00000000;
	fma.rn.f32 	%f848, %f847, %f841, 0fBE2AAAA8;
	and.b32  	%r412, %r411, 1;
	fma.rn.f32 	%f897, %f896, %f894, 0fBEFFFFFF;
	fma.rn.f32 	%f899, %f894, %f893, 0f00000000;
	fma.rn.f32 	%f901, %f900, %f894, 0fBE2AAAA8;
	and.b32  	%r441, %r440, 1;
	fma.rn.f32 	%f952, %f951, %f949, 0fBEFFFFFF;
	fma.rn.f32 	%f954, %f949, %f948, 0f00000000;
	fma.rn.f32 	%f956, %f955, %f949, 0fBE2AAAA8;
	and.b32  	%r460, %r459, 1;
	fma.rn.f32 	%f1005, %f1004, %f1002, 0fBEFFFFFF;
	fma.rn.f32 	%f1007, %f1002, %f1001, 0f00000000;
	fma.rn.f32 	%f1009, %f1008, %f1002, 0fBE2AAAA8;
	and.b32  	%r489, %r488, 1;
	add.f32 	%f1046, %f1382, %f1382;
	mov.b32 	%r503, %f1046;
	and.b32  	%r504, %r503, -2147483648;
	or.b32  	%r505, %r504, 1056964608;
	mov.b32 	%f1047, %r505;
	add.f32 	%f1048, %f1046, %f1047;
	cvt.rzi.f32.f32 	%f1049, %f1048;
	abs.f32 	%f1050, %f1046;
	setp.gt.f32 	%p192, %f1050, 0f4B000000;
	selp.f32 	%f1051, %f1046, %f1049, %p192;
	cvt.rzi.f32.f32 	%f1052, %f1046;
	setp.lt.f32 	%p193, %f1050, 0f3F000000;
	selp.f32 	%f1053, %f1052, %f1051, %p193;
	cvt.rzi.s32.f32 	%r506, %f1053;
	fma.rn.f32 	%f1054, %f1053, 0fBF000000, %f1382;
	mul.f32 	%f1055, %f1054, 0f34222169;
	fma.rn.f32 	%f1056, %f1054, 0f40490FDA, %f1055;
	mul.f32 	%f1057, %f1056, %f1056;
	fma.rn.f32 	%f1058, %f1057, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f1059, %f1058, %f1057, 0f3D2AAABB;
	fma.rn.f32 	%f1063, %f1057, 0fB94D4153, 0f3C0885E4;
	sub.s32 	%r511, %r66, %r52;
	cvt.rn.f32.s32 	%f1077, %r511;
	div.approx.f32 	%f162, %f1077, %f287;
	abs.f32 	%f1386, %f162;
	setp.lt.f32 	%p199, %f1386, 0f40000000;
	@%p199 bra 	LBB0_118;
// %bb.107:
	setp.gtu.f32 	%p200, %f1386, 0f4B800000;
	@%p200 bra 	LBB0_114;
	bra.uni 	LBB0_108;
LBB0_114:
	mov.b32 	%r76, %f1386;
	and.b32  	%r512, %r76, 8388607;
	or.b32  	%r16174, %r512, 1065353216;
	mov.b32 	%f1385, %r16174;
	add.s32 	%r513, %r76, -1073741824;
	and.b32  	%r16175, %r513, -8388608;
	setp.eq.s32 	%p206, %r16175, 0;
	@%p206 bra 	LBB0_117;
// %bb.115:                             // %__nv_fmaf_rn.exit4.i.i.i2413.preheader
	mov.f32 	%f1088, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1087,%f1088;
	// end inline asm
LBB0_116:                               // %__nv_fmaf_rn.exit4.i.i.i2413
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r514, %r16175, 192937984;
	add.s32 	%r515, %r514, %r16174;
	mov.b32 	%f1089, %r515;
	mul.f32 	%f1090, %f1087, %f1089;
	sub.f32 	%f1091, %f1089, %f1090;
	fma.rn.f32 	%f1092, %f1091, %f1087, %f1090;
	sub.f32 	%f1093, %f1089, %f1092;
	fma.rz.f32 	%f1094, %f1093, %f1087, %f1092;
	cvt.rzi.f32.f32 	%f1095, %f1094;
	sub.f32 	%f1385, %f1089, %f1095;
	sub.s32 	%r16175, %r16175, %r514;
	mov.b32 	%r16174, %f1385;
	setp.ne.s32 	%p207, %r16175, 0;
	setp.ne.s32 	%p208, %r16174, 0;
	and.pred  	%p209, %p207, %p208;
	@%p209 bra 	LBB0_116;
LBB0_117:                               // %__internal_fmodf_slowpath_mod.exit.i.i2415
	setp.gt.u32 	%p210, %r76, 2139095039;
	selp.f32 	%f1096, 0f7FFFFFFF, 0f4B800000, %p210;
	mul.f32 	%f1097, %f1385, 0f34000000;
	mul.f32 	%f1386, %f1096, %f1097;
	bra.uni 	LBB0_118;
LBB0_108:                               // %__nv_fast_fdividef.exit.i.i.i2385
	div.approx.f32 	%f1080, %f1386, %f255;
	cvt.rzi.f32.f32 	%f1384, %f1080;
	fma.rn.f32 	%f165, %f1384, 0fC0000000, %f1386;
	mov.b32 	%r75, %f165;
	setp.lt.u32 	%p201, %r75, 1073741824;
	@%p201 bra 	LBB0_113;
// %bb.109:
	setp.lt.u32 	%p202, %r75, -2147483647;
	@%p202 bra 	LBB0_111;
// %bb.110:
	add.f32 	%f1085, %f1384, 0fBF800000;
	setp.lt.f32 	%p205, %f165, 0fC0000000;
	add.f32 	%f1086, %f1085, 0fBF800000;
	selp.f32 	%f1384, %f1086, %f1085, %p205;
	bra.uni 	LBB0_113;
LBB0_111:
	add.f32 	%f1384, %f1384, 0f3F800000;
	setp.ltu.f32 	%p203, %f165, 0f40800000;
	@%p203 bra 	LBB0_113;
// %bb.112:                             // %__nv_fmaf_rn.exit.i.i.i2390
	add.f32 	%f1081, %f1384, 0f3F800000;
	fma.rn.f32 	%f1083, %f255, 0fC0400000, %f165;
	setp.ge.f32 	%p204, %f1083, 0f00000000;
	add.f32 	%f1084, %f1081, 0f3F800000;
	selp.f32 	%f1384, %f1084, %f1081, %p204;
LBB0_113:                               // %__internal_fmodf_fastpath_quot.exit.i.i2394
	fma.rn.f32 	%f1386, %f1384, 0fC0000000, %f1386;
LBB0_118:                               // %__internal_fmodf_kernel.exit.i2419
	fma.rn.f32 	%f279, %f277, %f273, 0fC09DE9E6;
	fma.rn.f32 	%f280, %f276, %f278, 0f00000000;
	and.b32  	%r262, %r261, 1;
	fma.rn.f32 	%f313, %f311, %f307, 0fC09DE9E6;
	fma.rn.f32 	%f314, %f310, %f312, 0f00000000;
	and.b32  	%r269, %r268, 1;
	fma.rn.f32 	%f348, %f346, %f342, 0fC09DE9E6;
	fma.rn.f32 	%f349, %f345, %f347, 0f00000000;
	and.b32  	%r280, %r279, 1;
	fma.rn.f32 	%f382, %f380, %f376, 0fC09DE9E6;
	fma.rn.f32 	%f383, %f379, %f381, 0f00000000;
	and.b32  	%r287, %r286, 1;
	fma.rn.f32 	%f417, %f415, %f411, 0fC09DE9E6;
	fma.rn.f32 	%f418, %f414, %f416, 0f00000000;
	and.b32  	%r298, %r297, 1;
	fma.rn.f32 	%f451, %f449, %f445, 0fC09DE9E6;
	fma.rn.f32 	%f452, %f448, %f450, 0f00000000;
	and.b32  	%r305, %r304, 1;
	fma.rn.f32 	%f486, %f484, %f480, 0fC09DE9E6;
	fma.rn.f32 	%f487, %f483, %f485, 0f00000000;
	and.b32  	%r316, %r315, 1;
	fma.rn.f32 	%f520, %f518, %f514, 0fC09DE9E6;
	fma.rn.f32 	%f521, %f517, %f519, 0f00000000;
	and.b32  	%r323, %r322, 1;
	fma.rn.f32 	%f555, %f553, %f549, 0fC09DE9E6;
	fma.rn.f32 	%f556, %f552, %f554, 0f00000000;
	and.b32  	%r334, %r333, 1;
	fma.rn.f32 	%f589, %f587, %f583, 0fC09DE9E6;
	fma.rn.f32 	%f590, %f586, %f588, 0f00000000;
	and.b32  	%r341, %r340, 1;
	fma.rn.f32 	%f624, %f622, %f618, 0fC09DE9E6;
	fma.rn.f32 	%f625, %f621, %f623, 0f00000000;
	and.b32  	%r352, %r351, 1;
	fma.rn.f32 	%f658, %f656, %f652, 0fC09DE9E6;
	fma.rn.f32 	%f659, %f655, %f657, 0f00000000;
	and.b32  	%r359, %r358, 1;
	fma.rn.f32 	%f693, %f691, %f687, 0fC09DE9E6;
	fma.rn.f32 	%f694, %f690, %f692, 0f00000000;
	and.b32  	%r370, %r369, 1;
	fma.rn.f32 	%f727, %f725, %f721, 0fC09DE9E6;
	fma.rn.f32 	%f728, %f724, %f726, 0f00000000;
	and.b32  	%r377, %r376, 1;
	fma.rn.f32 	%f762, %f760, %f756, 0fC09DE9E6;
	fma.rn.f32 	%f763, %f759, %f761, 0f00000000;
	and.b32  	%r388, %r387, 1;
	fma.rn.f32 	%f796, %f794, %f790, 0fC09DE9E6;
	fma.rn.f32 	%f797, %f793, %f795, 0f00000000;
	and.b32  	%r395, %r394, 1;
	fma.rn.f32 	%f845, %f844, %f841, 0f3F800000;
	fma.rn.f32 	%f849, %f848, %f846, %f840;
	setp.eq.b32 	%p114, %r412, 1;
	fma.rn.f32 	%f898, %f897, %f894, 0f3F800000;
	fma.rn.f32 	%f902, %f901, %f899, %f893;
	setp.eq.b32 	%p134, %r441, 1;
	fma.rn.f32 	%f953, %f952, %f949, 0f3F800000;
	fma.rn.f32 	%f957, %f956, %f954, %f948;
	setp.eq.b32 	%p154, %r460, 1;
	fma.rn.f32 	%f1006, %f1005, %f1002, 0f3F800000;
	fma.rn.f32 	%f1010, %f1009, %f1007, %f1001;
	setp.eq.b32 	%p174, %r489, 1;
	fma.rn.f32 	%f1060, %f1059, %f1057, 0fBEFFFFFF;
	fma.rn.f32 	%f1062, %f1057, %f1056, 0f00000000;
	fma.rn.f32 	%f1064, %f1063, %f1057, 0fBE2AAAA8;
	and.b32  	%r507, %r506, 1;
	shr.u32 	%r214, %r1, 1;
	shr.u32 	%r220, %r1, 3;
	abs.f32 	%f1098, %f1386;
	setp.gtu.f32 	%p211, %f1098, 0f7F800000;
	@%p211 bra 	LBB0_120;
// %bb.119:
	mov.b32 	%r516, %f162;
	and.b32  	%r517, %r516, -2147483648;
	mov.b32 	%r518, %f1386;
	or.b32  	%r519, %r517, %r518;
	mov.b32 	%f1386, %r519;
LBB0_120:                               // %__nv_fmodf.exit2420
	shl.b32 	%r209, %r1, 2;
	fma.rn.f32 	%f281, %f279, %f273, 0f3F800000;
	fma.rn.f32 	%f282, %f272, 0f40490FDB, %f280;
	setp.eq.b32 	%p6, %r262, 1;
	fma.rn.f32 	%f315, %f313, %f307, 0f3F800000;
	fma.rn.f32 	%f316, %f306, 0f40490FDB, %f314;
	setp.eq.b32 	%p12, %r269, 1;
	fma.rn.f32 	%f350, %f348, %f342, 0f3F800000;
	fma.rn.f32 	%f351, %f341, 0f40490FDB, %f349;
	setp.eq.b32 	%p18, %r280, 1;
	fma.rn.f32 	%f384, %f382, %f376, 0f3F800000;
	fma.rn.f32 	%f385, %f375, 0f40490FDB, %f383;
	setp.eq.b32 	%p24, %r287, 1;
	fma.rn.f32 	%f419, %f417, %f411, 0f3F800000;
	fma.rn.f32 	%f420, %f410, 0f40490FDB, %f418;
	setp.eq.b32 	%p30, %r298, 1;
	fma.rn.f32 	%f453, %f451, %f445, 0f3F800000;
	fma.rn.f32 	%f454, %f444, 0f40490FDB, %f452;
	setp.eq.b32 	%p36, %r305, 1;
	fma.rn.f32 	%f488, %f486, %f480, 0f3F800000;
	fma.rn.f32 	%f489, %f479, 0f40490FDB, %f487;
	setp.eq.b32 	%p42, %r316, 1;
	fma.rn.f32 	%f522, %f520, %f514, 0f3F800000;
	fma.rn.f32 	%f523, %f513, 0f40490FDB, %f521;
	setp.eq.b32 	%p48, %r323, 1;
	fma.rn.f32 	%f557, %f555, %f549, 0f3F800000;
	fma.rn.f32 	%f558, %f548, 0f40490FDB, %f556;
	setp.eq.b32 	%p54, %r334, 1;
	fma.rn.f32 	%f591, %f589, %f583, 0f3F800000;
	fma.rn.f32 	%f592, %f582, 0f40490FDB, %f590;
	setp.eq.b32 	%p60, %r341, 1;
	fma.rn.f32 	%f626, %f624, %f618, 0f3F800000;
	fma.rn.f32 	%f627, %f617, 0f40490FDB, %f625;
	setp.eq.b32 	%p66, %r352, 1;
	fma.rn.f32 	%f660, %f658, %f652, 0f3F800000;
	fma.rn.f32 	%f661, %f651, 0f40490FDB, %f659;
	setp.eq.b32 	%p72, %r359, 1;
	fma.rn.f32 	%f695, %f693, %f687, 0f3F800000;
	fma.rn.f32 	%f696, %f686, 0f40490FDB, %f694;
	setp.eq.b32 	%p78, %r370, 1;
	fma.rn.f32 	%f729, %f727, %f721, 0f3F800000;
	fma.rn.f32 	%f730, %f720, 0f40490FDB, %f728;
	setp.eq.b32 	%p84, %r377, 1;
	fma.rn.f32 	%f764, %f762, %f756, 0f3F800000;
	fma.rn.f32 	%f765, %f755, 0f40490FDB, %f763;
	setp.eq.b32 	%p90, %r388, 1;
	fma.rn.f32 	%f798, %f796, %f790, 0f3F800000;
	fma.rn.f32 	%f799, %f789, 0f40490FDB, %f797;
	setp.eq.b32 	%p96, %r395, 1;
	selp.f32 	%f850, %f845, %f849, %p114;
	and.b32  	%r413, %r411, 2;
	selp.f32 	%f903, %f898, %f902, %p134;
	and.b32  	%r442, %r440, 2;
	selp.f32 	%f958, %f953, %f957, %p154;
	and.b32  	%r461, %r459, 2;
	selp.f32 	%f1011, %f1006, %f1010, %p174;
	and.b32  	%r490, %r488, 2;
	fma.rn.f32 	%f1061, %f1060, %f1057, 0f3F800000;
	fma.rn.f32 	%f1065, %f1064, %f1062, %f1056;
	setp.eq.b32 	%p194, %r507, 1;
	add.f32 	%f1099, %f1386, %f1386;
	mov.b32 	%r526, %f1099;
	and.b32  	%r527, %r526, -2147483648;
	or.b32  	%r528, %r527, 1056964608;
	mov.b32 	%f1100, %r528;
	add.f32 	%f1101, %f1099, %f1100;
	cvt.rzi.f32.f32 	%f1102, %f1101;
	abs.f32 	%f1103, %f1099;
	setp.gt.f32 	%p212, %f1103, 0f4B000000;
	selp.f32 	%f1104, %f1099, %f1102, %p212;
	cvt.rzi.f32.f32 	%f1105, %f1099;
	setp.lt.f32 	%p213, %f1103, 0f3F000000;
	selp.f32 	%f1106, %f1105, %f1104, %p213;
	cvt.rzi.s32.f32 	%r529, %f1106;
	fma.rn.f32 	%f1107, %f1106, 0fBF000000, %f1386;
	mul.f32 	%f1108, %f1107, 0f34222169;
	fma.rn.f32 	%f1109, %f1107, 0f40490FDA, %f1108;
	mul.f32 	%f1110, %f1109, %f1109;
	fma.rn.f32 	%f1111, %f1110, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f1112, %f1111, %f1110, 0f3D2AAABB;
	fma.rn.f32 	%f1113, %f1112, %f1110, 0fBEFFFFFF;
	fma.rn.f32 	%f1114, %f1113, %f1110, 0f3F800000;
	fma.rn.f32 	%f1115, %f1110, %f1109, 0f00000000;
	fma.rn.f32 	%f1116, %f1110, 0fB94D4153, 0f3C0885E4;
	fma.rn.f32 	%f1117, %f1116, %f1110, 0fBE2AAAA8;
	fma.rn.f32 	%f1118, %f1117, %f1115, %f1109;
	and.b32  	%r530, %r529, 1;
	setp.eq.b32 	%p214, %r530, 1;
	and.b32  	%r534, %r220, 2;
	and.b32  	%r535, %r214, 4;
	or.b32  	%r536, %r218, %r534;
	or.b32  	%r85, %r536, %r535;
	mul.lo.s32 	%r86, %r65, %r85;
	cvt.rn.f32.s32 	%f1132, %r86;
	mov.f32 	%f1133, 0f41800000;
	div.approx.f32 	%f179, %f1132, %f1133;
	abs.f32 	%f1390, %f179;
	setp.lt.f32 	%p219, %f1390, 0f40000000;
	@%p219 bra 	LBB0_132;
// %bb.121:
	setp.gtu.f32 	%p220, %f1390, 0f4B800000;
	@%p220 bra 	LBB0_128;
	bra.uni 	LBB0_122;
LBB0_128:
	mov.b32 	%r88, %f1390;
	and.b32  	%r537, %r88, 8388607;
	or.b32  	%r16176, %r537, 1065353216;
	mov.b32 	%f1389, %r16176;
	add.s32 	%r538, %r88, -1073741824;
	and.b32  	%r16177, %r538, -8388608;
	setp.eq.s32 	%p226, %r16177, 0;
	@%p226 bra 	LBB0_131;
// %bb.129:                             // %__nv_fmaf_rn.exit4.i.i.i2459.preheader
	mov.f32 	%f1143, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1142,%f1143;
	// end inline asm
LBB0_130:                               // %__nv_fmaf_rn.exit4.i.i.i2459
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r539, %r16177, 192937984;
	add.s32 	%r540, %r539, %r16176;
	mov.b32 	%f1144, %r540;
	mul.f32 	%f1145, %f1142, %f1144;
	sub.f32 	%f1146, %f1144, %f1145;
	fma.rn.f32 	%f1147, %f1146, %f1142, %f1145;
	sub.f32 	%f1148, %f1144, %f1147;
	fma.rz.f32 	%f1149, %f1148, %f1142, %f1147;
	cvt.rzi.f32.f32 	%f1150, %f1149;
	sub.f32 	%f1389, %f1144, %f1150;
	sub.s32 	%r16177, %r16177, %r539;
	mov.b32 	%r16176, %f1389;
	setp.ne.s32 	%p227, %r16177, 0;
	setp.ne.s32 	%p228, %r16176, 0;
	and.pred  	%p229, %p227, %p228;
	@%p229 bra 	LBB0_130;
LBB0_131:                               // %__internal_fmodf_slowpath_mod.exit.i.i2461
	setp.gt.u32 	%p230, %r88, 2139095039;
	selp.f32 	%f1151, 0f7FFFFFFF, 0f4B800000, %p230;
	mul.f32 	%f1152, %f1389, 0f34000000;
	mul.f32 	%f1390, %f1151, %f1152;
	bra.uni 	LBB0_132;
LBB0_122:                               // %__nv_fast_fdividef.exit.i.i.i2431
	div.approx.f32 	%f1135, %f1390, %f255;
	cvt.rzi.f32.f32 	%f1388, %f1135;
	fma.rn.f32 	%f182, %f1388, 0fC0000000, %f1390;
	mov.b32 	%r87, %f182;
	setp.lt.u32 	%p221, %r87, 1073741824;
	@%p221 bra 	LBB0_127;
// %bb.123:
	setp.lt.u32 	%p222, %r87, -2147483647;
	@%p222 bra 	LBB0_125;
// %bb.124:
	add.f32 	%f1140, %f1388, 0fBF800000;
	setp.lt.f32 	%p225, %f182, 0fC0000000;
	add.f32 	%f1141, %f1140, 0fBF800000;
	selp.f32 	%f1388, %f1141, %f1140, %p225;
	bra.uni 	LBB0_127;
LBB0_125:
	add.f32 	%f1388, %f1388, 0f3F800000;
	setp.ltu.f32 	%p223, %f182, 0f40800000;
	@%p223 bra 	LBB0_127;
// %bb.126:                             // %__nv_fmaf_rn.exit.i.i.i2436
	add.f32 	%f1136, %f1388, 0f3F800000;
	fma.rn.f32 	%f1138, %f255, 0fC0400000, %f182;
	setp.ge.f32 	%p224, %f1138, 0f00000000;
	add.f32 	%f1139, %f1136, 0f3F800000;
	selp.f32 	%f1388, %f1139, %f1136, %p224;
LBB0_127:                               // %__internal_fmodf_fastpath_quot.exit.i.i2440
	fma.rn.f32 	%f1390, %f1388, 0fC0000000, %f1390;
LBB0_132:                               // %__internal_fmodf_kernel.exit.i2465
	and.b32  	%r243, %r209, 32;
	and.b32  	%r245, %r1, 18;
	selp.f32 	%f283, %f281, %f282, %p6;
	and.b32  	%r263, %r261, 2;
	mov.f32 	%f284, 0f00000000;
	selp.f32 	%f317, %f315, %f316, %p12;
	and.b32  	%r270, %r268, 2;
	selp.f32 	%f352, %f350, %f351, %p18;
	and.b32  	%r281, %r279, 2;
	selp.f32 	%f386, %f384, %f385, %p24;
	and.b32  	%r288, %r286, 2;
	selp.f32 	%f421, %f419, %f420, %p30;
	and.b32  	%r299, %r297, 2;
	selp.f32 	%f455, %f453, %f454, %p36;
	and.b32  	%r306, %r304, 2;
	selp.f32 	%f490, %f488, %f489, %p42;
	and.b32  	%r317, %r315, 2;
	selp.f32 	%f524, %f522, %f523, %p48;
	and.b32  	%r324, %r322, 2;
	selp.f32 	%f559, %f557, %f558, %p54;
	and.b32  	%r335, %r333, 2;
	selp.f32 	%f593, %f591, %f592, %p60;
	and.b32  	%r342, %r340, 2;
	selp.f32 	%f628, %f626, %f627, %p66;
	and.b32  	%r353, %r351, 2;
	selp.f32 	%f662, %f660, %f661, %p72;
	and.b32  	%r360, %r358, 2;
	selp.f32 	%f697, %f695, %f696, %p78;
	and.b32  	%r371, %r369, 2;
	selp.f32 	%f731, %f729, %f730, %p84;
	and.b32  	%r378, %r376, 2;
	selp.f32 	%f766, %f764, %f765, %p90;
	and.b32  	%r389, %r387, 2;
	selp.f32 	%f800, %f798, %f799, %p96;
	and.b32  	%r396, %r394, 2;
	setp.eq.s32 	%p115, %r413, 0;
	neg.f32 	%f852, %f850;
	add.s32 	%r414, %r411, 1;
	cvt.rzi.f32.f32 	%f857, %f1366;
	setp.eq.s32 	%p135, %r442, 0;
	neg.f32 	%f905, %f903;
	add.s32 	%r443, %r440, 1;
	cvt.rzi.f32.f32 	%f910, %f1370;
	setp.eq.s32 	%p155, %r461, 0;
	neg.f32 	%f960, %f958;
	add.s32 	%r462, %r459, 1;
	cvt.rzi.f32.f32 	%f965, %f1374;
	setp.eq.s32 	%p175, %r490, 0;
	neg.f32 	%f1013, %f1011;
	add.s32 	%r491, %r488, 1;
	cvt.rzi.f32.f32 	%f1018, %f1378;
	selp.f32 	%f1066, %f1061, %f1065, %p194;
	and.b32  	%r508, %r506, 2;
	selp.f32 	%f1119, %f1114, %f1118, %p214;
	and.b32  	%r531, %r529, 2;
	abs.f32 	%f1153, %f1390;
	setp.gtu.f32 	%p231, %f1153, 0f7F800000;
	@%p231 bra 	LBB0_134;
// %bb.133:
	mov.b32 	%r541, %f179;
	and.b32  	%r542, %r541, -2147483648;
	mov.b32 	%r543, %f1390;
	or.b32  	%r544, %r542, %r543;
	mov.b32 	%f1390, %r544;
LBB0_134:                               // %__nv_fmodf.exit2466
	and.b32  	%r242, %r208, 8;
	or.b32  	%r246, %r245, %r243;
	setp.eq.s32 	%p7, %r263, 0;
	sub.f32 	%f285, %f284, %f283;
	setp.eq.s32 	%p13, %r270, 0;
	sub.f32 	%f319, %f284, %f317;
	setp.eq.s32 	%p19, %r281, 0;
	sub.f32 	%f354, %f284, %f352;
	setp.eq.s32 	%p25, %r288, 0;
	sub.f32 	%f388, %f284, %f386;
	setp.eq.s32 	%p31, %r299, 0;
	sub.f32 	%f423, %f284, %f421;
	setp.eq.s32 	%p37, %r306, 0;
	sub.f32 	%f457, %f284, %f455;
	setp.eq.s32 	%p43, %r317, 0;
	sub.f32 	%f492, %f284, %f490;
	setp.eq.s32 	%p49, %r324, 0;
	sub.f32 	%f526, %f284, %f524;
	setp.eq.s32 	%p55, %r335, 0;
	sub.f32 	%f561, %f284, %f559;
	setp.eq.s32 	%p61, %r342, 0;
	sub.f32 	%f595, %f284, %f593;
	setp.eq.s32 	%p67, %r353, 0;
	sub.f32 	%f630, %f284, %f628;
	setp.eq.s32 	%p73, %r360, 0;
	sub.f32 	%f664, %f284, %f662;
	setp.eq.s32 	%p79, %r371, 0;
	sub.f32 	%f699, %f284, %f697;
	setp.eq.s32 	%p85, %r378, 0;
	sub.f32 	%f733, %f284, %f731;
	setp.eq.s32 	%p91, %r389, 0;
	sub.f32 	%f768, %f284, %f766;
	setp.eq.s32 	%p97, %r396, 0;
	sub.f32 	%f802, %f284, %f800;
	selp.f32 	%f851, %f849, %f845, %p114;
	selp.f32 	%f853, %f850, %f852, %p115;
	and.b32  	%r415, %r414, 2;
	setp.eq.f32 	%p117, %f857, %f1366;
	mul.f32 	%f858, %f1366, 0f00000000;
	selp.f32 	%f904, %f902, %f898, %p134;
	selp.f32 	%f906, %f903, %f905, %p135;
	and.b32  	%r444, %r443, 2;
	setp.eq.f32 	%p137, %f910, %f1370;
	mul.f32 	%f911, %f1370, 0f00000000;
	selp.f32 	%f959, %f957, %f953, %p154;
	selp.f32 	%f961, %f958, %f960, %p155;
	and.b32  	%r463, %r462, 2;
	setp.eq.f32 	%p157, %f965, %f1374;
	mul.f32 	%f966, %f1374, 0f00000000;
	selp.f32 	%f1012, %f1010, %f1006, %p174;
	selp.f32 	%f1014, %f1011, %f1013, %p175;
	and.b32  	%r492, %r491, 2;
	setp.eq.f32 	%p177, %f1018, %f1378;
	mul.f32 	%f1019, %f1378, 0f00000000;
	setp.eq.s32 	%p195, %r508, 0;
	neg.f32 	%f1068, %f1066;
	add.s32 	%r509, %r506, 1;
	cvt.rzi.f32.f32 	%f1073, %f1382;
	setp.eq.s32 	%p215, %r531, 0;
	neg.f32 	%f1121, %f1119;
	add.s32 	%r532, %r529, 1;
	cvt.rzi.f32.f32 	%f1126, %f1386;
	add.f32 	%f1154, %f1390, %f1390;
	mov.b32 	%r545, %f1154;
	and.b32  	%r546, %r545, -2147483648;
	or.b32  	%r547, %r546, 1056964608;
	mov.b32 	%f1155, %r547;
	add.f32 	%f1156, %f1154, %f1155;
	cvt.rzi.f32.f32 	%f1157, %f1156;
	abs.f32 	%f1158, %f1154;
	setp.gt.f32 	%p232, %f1158, 0f4B000000;
	selp.f32 	%f1159, %f1154, %f1157, %p232;
	cvt.rzi.f32.f32 	%f1160, %f1154;
	setp.lt.f32 	%p233, %f1158, 0f3F000000;
	selp.f32 	%f1161, %f1160, %f1159, %p233;
	cvt.rzi.s32.f32 	%r548, %f1161;
	fma.rn.f32 	%f1162, %f1161, 0fBF000000, %f1390;
	mul.f32 	%f1163, %f1162, 0f34222169;
	fma.rn.f32 	%f1164, %f1162, 0f40490FDA, %f1163;
	mul.f32 	%f1165, %f1164, %f1164;
	fma.rn.f32 	%f1166, %f1165, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f1167, %f1166, %f1165, 0f3D2AAABB;
	fma.rn.f32 	%f1168, %f1167, %f1165, 0fBEFFFFFF;
	fma.rn.f32 	%f1169, %f1168, %f1165, 0f3F800000;
	fma.rn.f32 	%f1170, %f1165, %f1164, 0f00000000;
	fma.rn.f32 	%f1171, %f1165, 0fB94D4153, 0f3C0885E4;
	fma.rn.f32 	%f1172, %f1171, %f1165, 0fBE2AAAA8;
	fma.rn.f32 	%f1173, %f1172, %f1170, %f1164;
	and.b32  	%r549, %r548, 1;
	setp.eq.b32 	%p234, %r549, 1;
	selp.f32 	%f1174, %f1169, %f1173, %p234;
	selp.f32 	%f1175, %f1173, %f1169, %p234;
	and.b32  	%r550, %r548, 2;
	setp.eq.s32 	%p235, %r550, 0;
	neg.f32 	%f1176, %f1174;
	selp.f32 	%f1177, %f1174, %f1176, %p235;
	add.s32 	%r551, %r548, 1;
	and.b32  	%r552, %r551, 2;
	cvt.rzi.f32.f32 	%f1181, %f1390;
	setp.eq.f32 	%p237, %f1181, %f1390;
	mul.f32 	%f1182, %f1390, 0f00000000;
	shl.b32 	%r553, %r85, 3;
	sub.s32 	%r554, %r86, %r553;
	cvt.rn.f32.s32 	%f1185, %r554;
	div.approx.f32 	%f198, %f1185, %f1133;
	abs.f32 	%f1394, %f198;
	setp.lt.f32 	%p239, %f1394, 0f40000000;
	@%p239 bra 	LBB0_146;
// %bb.135:
	setp.gtu.f32 	%p240, %f1394, 0f4B800000;
	@%p240 bra 	LBB0_142;
	bra.uni 	LBB0_136;
LBB0_142:
	mov.b32 	%r96, %f1394;
	and.b32  	%r555, %r96, 8388607;
	or.b32  	%r16178, %r555, 1065353216;
	mov.b32 	%f1393, %r16178;
	add.s32 	%r556, %r96, -1073741824;
	and.b32  	%r16179, %r556, -8388608;
	setp.eq.s32 	%p246, %r16179, 0;
	@%p246 bra 	LBB0_145;
// %bb.143:                             // %__nv_fmaf_rn.exit4.i.i.i2505.preheader
	mov.f32 	%f1196, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1195,%f1196;
	// end inline asm
LBB0_144:                               // %__nv_fmaf_rn.exit4.i.i.i2505
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r557, %r16179, 192937984;
	add.s32 	%r558, %r557, %r16178;
	mov.b32 	%f1197, %r558;
	mul.f32 	%f1198, %f1195, %f1197;
	sub.f32 	%f1199, %f1197, %f1198;
	fma.rn.f32 	%f1200, %f1199, %f1195, %f1198;
	sub.f32 	%f1201, %f1197, %f1200;
	fma.rz.f32 	%f1202, %f1201, %f1195, %f1200;
	cvt.rzi.f32.f32 	%f1203, %f1202;
	sub.f32 	%f1393, %f1197, %f1203;
	sub.s32 	%r16179, %r16179, %r557;
	mov.b32 	%r16178, %f1393;
	setp.ne.s32 	%p247, %r16179, 0;
	setp.ne.s32 	%p248, %r16178, 0;
	and.pred  	%p249, %p247, %p248;
	@%p249 bra 	LBB0_144;
LBB0_145:                               // %__internal_fmodf_slowpath_mod.exit.i.i2507
	setp.gt.u32 	%p250, %r96, 2139095039;
	selp.f32 	%f1204, 0f7FFFFFFF, 0f4B800000, %p250;
	mul.f32 	%f1205, %f1393, 0f34000000;
	mul.f32 	%f1394, %f1204, %f1205;
	bra.uni 	LBB0_146;
LBB0_136:                               // %__nv_fast_fdividef.exit.i.i.i2477
	div.approx.f32 	%f1188, %f1394, %f255;
	cvt.rzi.f32.f32 	%f1392, %f1188;
	fma.rn.f32 	%f201, %f1392, 0fC0000000, %f1394;
	mov.b32 	%r95, %f201;
	setp.lt.u32 	%p241, %r95, 1073741824;
	@%p241 bra 	LBB0_141;
// %bb.137:
	setp.lt.u32 	%p242, %r95, -2147483647;
	@%p242 bra 	LBB0_139;
// %bb.138:
	add.f32 	%f1193, %f1392, 0fBF800000;
	setp.lt.f32 	%p245, %f201, 0fC0000000;
	add.f32 	%f1194, %f1193, 0fBF800000;
	selp.f32 	%f1392, %f1194, %f1193, %p245;
	bra.uni 	LBB0_141;
LBB0_139:
	add.f32 	%f1392, %f1392, 0f3F800000;
	setp.ltu.f32 	%p243, %f201, 0f40800000;
	@%p243 bra 	LBB0_141;
// %bb.140:                             // %__nv_fmaf_rn.exit.i.i.i2482
	add.f32 	%f1189, %f1392, 0f3F800000;
	fma.rn.f32 	%f1191, %f255, 0fC0400000, %f201;
	setp.ge.f32 	%p244, %f1191, 0f00000000;
	add.f32 	%f1192, %f1189, 0f3F800000;
	selp.f32 	%f1392, %f1192, %f1189, %p244;
LBB0_141:                               // %__internal_fmodf_fastpath_quot.exit.i.i2486
	fma.rn.f32 	%f1394, %f1392, 0fC0000000, %f1394;
LBB0_146:                               // %__internal_fmodf_kernel.exit.i2511
	and.b32  	%r244, %r209, 4;
	or.b32  	%r247, %r246, %r242;
	selp.f32 	%f286, %f283, %f285, %p7;
	selp.f32 	%f320, %f317, %f319, %p13;
	selp.f32 	%f355, %f352, %f354, %p19;
	selp.f32 	%f389, %f386, %f388, %p25;
	selp.f32 	%f424, %f421, %f423, %p31;
	selp.f32 	%f458, %f455, %f457, %p37;
	selp.f32 	%f493, %f490, %f492, %p43;
	selp.f32 	%f527, %f524, %f526, %p49;
	selp.f32 	%f562, %f559, %f561, %p55;
	selp.f32 	%f596, %f593, %f595, %p61;
	selp.f32 	%f631, %f628, %f630, %p67;
	selp.f32 	%f665, %f662, %f664, %p73;
	selp.f32 	%f700, %f697, %f699, %p79;
	selp.f32 	%f734, %f731, %f733, %p85;
	selp.f32 	%f769, %f766, %f768, %p91;
	selp.f32 	%f803, %f800, %f802, %p97;
	setp.eq.s32 	%p116, %r415, 0;
	sub.f32 	%f855, %f284, %f851;
	selp.f32 	%f88, %f858, %f853, %p117;
	abs.f32 	%f859, %f1366;
	setp.eq.s32 	%p136, %r444, 0;
	sub.f32 	%f908, %f284, %f904;
	selp.f32 	%f912, %f911, %f906, %p137;
	abs.f32 	%f913, %f1370;
	setp.eq.s32 	%p156, %r463, 0;
	sub.f32 	%f963, %f284, %f959;
	selp.f32 	%f124, %f966, %f961, %p157;
	abs.f32 	%f967, %f1374;
	setp.eq.s32 	%p176, %r492, 0;
	sub.f32 	%f1016, %f284, %f1012;
	selp.f32 	%f1020, %f1019, %f1014, %p177;
	abs.f32 	%f1021, %f1378;
	selp.f32 	%f1067, %f1065, %f1061, %p194;
	selp.f32 	%f1069, %f1066, %f1068, %p195;
	and.b32  	%r510, %r509, 2;
	setp.eq.f32 	%p197, %f1073, %f1382;
	mul.f32 	%f1074, %f1382, 0f00000000;
	selp.f32 	%f1120, %f1118, %f1114, %p214;
	selp.f32 	%f1122, %f1119, %f1121, %p215;
	and.b32  	%r533, %r532, 2;
	setp.eq.f32 	%p217, %f1126, %f1386;
	mul.f32 	%f1127, %f1386, 0f00000000;
	setp.eq.s32 	%p236, %r552, 0;
	sub.f32 	%f1179, %f284, %f1175;
	selp.f32 	%f196, %f1182, %f1177, %p237;
	abs.f32 	%f1183, %f1390;
	and.b32  	%r210, %r1, 16;
	abs.f32 	%f1206, %f1394;
	setp.gtu.f32 	%p251, %f1206, 0f7F800000;
	@%p251 bra 	LBB0_148;
// %bb.147:
	mov.b32 	%r559, %f198;
	and.b32  	%r560, %r559, -2147483648;
	mov.b32 	%r561, %f1394;
	or.b32  	%r562, %r560, %r561;
	mov.b32 	%f1394, %r562;
LBB0_148:                               // %__nv_fmodf.exit2512
	or.b32  	%r248, %r247, %r244;
	mul.f32 	%f252, %f286, %f286;
	mul.f32 	%f4, %f320, %f320;
	mul.f32 	%f8, %f355, %f355;
	mul.f32 	%f13, %f389, %f389;
	mul.f32 	%f17, %f424, %f424;
	mul.f32 	%f22, %f458, %f458;
	mul.f32 	%f26, %f493, %f493;
	mul.f32 	%f31, %f527, %f527;
	mul.f32 	%f35, %f562, %f562;
	mul.f32 	%f40, %f596, %f596;
	mul.f32 	%f44, %f631, %f631;
	mul.f32 	%f49, %f665, %f665;
	mul.f32 	%f53, %f700, %f700;
	mul.f32 	%f58, %f734, %f734;
	mul.f32 	%f62, %f769, %f769;
	mul.f32 	%f67, %f803, %f803;
	selp.f32 	%f856, %f851, %f855, %p116;
	setp.gt.f32 	%p118, %f859, 0f4B800000;
	add.f32 	%f860, %f88, 0f3F800000;
	selp.f32 	%f909, %f904, %f908, %p136;
	setp.gt.f32 	%p138, %f913, 0f4B800000;
	add.f32 	%f914, %f912, 0f3F800000;
	selp.f32 	%f964, %f959, %f963, %p156;
	setp.gt.f32 	%p158, %f967, 0f4B800000;
	add.f32 	%f968, %f124, 0f3F800000;
	selp.f32 	%f1017, %f1012, %f1016, %p176;
	setp.gt.f32 	%p178, %f1021, 0f4B800000;
	add.f32 	%f1022, %f1020, 0f3F800000;
	setp.eq.s32 	%p196, %r510, 0;
	sub.f32 	%f1071, %f284, %f1067;
	selp.f32 	%f160, %f1074, %f1069, %p197;
	abs.f32 	%f1075, %f1382;
	setp.eq.s32 	%p216, %r533, 0;
	sub.f32 	%f1124, %f284, %f1120;
	selp.f32 	%f1128, %f1127, %f1122, %p217;
	abs.f32 	%f1129, %f1386;
	selp.f32 	%f1180, %f1175, %f1179, %p236;
	setp.gt.f32 	%p238, %f1183, 0f4B800000;
	add.f32 	%f1184, %f196, 0f3F800000;
	add.f32 	%f1207, %f1394, %f1394;
	mov.b32 	%r575, %f1207;
	and.b32  	%r576, %r575, -2147483648;
	or.b32  	%r577, %r576, 1056964608;
	mov.b32 	%f1208, %r577;
	add.f32 	%f1209, %f1207, %f1208;
	cvt.rzi.f32.f32 	%f1210, %f1209;
	abs.f32 	%f1211, %f1207;
	setp.gt.f32 	%p252, %f1211, 0f4B000000;
	selp.f32 	%f1212, %f1207, %f1210, %p252;
	cvt.rzi.f32.f32 	%f1213, %f1207;
	setp.lt.f32 	%p253, %f1211, 0f3F000000;
	selp.f32 	%f1214, %f1213, %f1212, %p253;
	cvt.rzi.s32.f32 	%r578, %f1214;
	fma.rn.f32 	%f1215, %f1214, 0fBF000000, %f1394;
	mul.f32 	%f1216, %f1215, 0f34222169;
	fma.rn.f32 	%f1217, %f1215, 0f40490FDA, %f1216;
	mul.f32 	%f1218, %f1217, %f1217;
	fma.rn.f32 	%f1219, %f1218, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f1220, %f1219, %f1218, 0f3D2AAABB;
	fma.rn.f32 	%f1221, %f1220, %f1218, 0fBEFFFFFF;
	fma.rn.f32 	%f1222, %f1221, %f1218, 0f3F800000;
	fma.rn.f32 	%f1223, %f1218, %f1217, 0f00000000;
	fma.rn.f32 	%f1224, %f1218, 0fB94D4153, 0f3C0885E4;
	fma.rn.f32 	%f1225, %f1224, %f1218, 0fBE2AAAA8;
	fma.rn.f32 	%f1226, %f1225, %f1223, %f1217;
	and.b32  	%r579, %r578, 1;
	setp.eq.b32 	%p254, %r579, 1;
	selp.f32 	%f1227, %f1222, %f1226, %p254;
	selp.f32 	%f1228, %f1226, %f1222, %p254;
	and.b32  	%r580, %r578, 2;
	setp.eq.s32 	%p255, %r580, 0;
	neg.f32 	%f1229, %f1227;
	selp.f32 	%f1230, %f1227, %f1229, %p255;
	add.s32 	%r581, %r578, 1;
	and.b32  	%r582, %r581, 2;
	setp.eq.s32 	%p256, %r582, 0;
	sub.f32 	%f1232, %f284, %f1228;
	selp.f32 	%f1233, %f1228, %f1232, %p256;
	cvt.rzi.f32.f32 	%f1234, %f1394;
	setp.eq.f32 	%p257, %f1234, %f1394;
	mul.f32 	%f1235, %f1394, 0f00000000;
	selp.f32 	%f1236, %f1235, %f1230, %p257;
	abs.f32 	%f1237, %f1394;
	setp.gt.f32 	%p258, %f1237, 0f4B800000;
	add.f32 	%f1238, %f1236, 0f3F800000;
	cvt.u16.u32 	%rs1, %r1;
	shr.u16 	%rs2, %rs1, 8;
	shl.b16 	%rs3, %rs1, 8;
	or.b16  	%rs4, %rs3, %rs2;
	shl.b16 	%rs5, %rs4, 4;
	shr.u16 	%rs6, %rs4, 4;
	and.b16  	%rs7, %rs6, 3840;
	or.b16  	%rs8, %rs7, %rs5;
	and.b16  	%rs9, %rs8, 13107;
	shl.b16 	%rs10, %rs9, 2;
	shr.u16 	%rs11, %rs8, 2;
	and.b16  	%rs12, %rs11, 13107;
	or.b16  	%rs13, %rs12, %rs10;
	and.b16  	%rs14, %rs13, 20480;
	shl.b16 	%rs15, %rs14, 1;
	shr.u16 	%rs16, %rs13, 1;
	and.b16  	%rs17, %rs16, 16384;
	or.b16  	%rs18, %rs17, %rs15;
	shr.u16 	%rs19, %rs18, 13;
	add.s32 	%r584, %r250, %r210;
	neg.s32 	%r585, %r584;
	mad.lo.s32 	%r586, %r221, -32, %r585;
	or.b16  	%rs20, %rs19, 1;
	cvt.u32.u16 	%r587, %rs20;
	and.b16  	%rs21, %rs19, 6;
	cvt.u32.u16 	%r588, %rs21;
	sub.s32 	%r589, %r586, %r588;
	shl.b32 	%r590, %r589, 1;
	cvt.rn.f32.s32 	%f1240, %r590;
	div.approx.f32 	%f215, %f1240, %f287;
	abs.f32 	%f1398, %f215;
	setp.lt.f32 	%p259, %f1398, 0f40000000;
	@%p259 bra 	LBB0_160;
// %bb.149:
	setp.gtu.f32 	%p260, %f1398, 0f4B800000;
	@%p260 bra 	LBB0_156;
	bra.uni 	LBB0_150;
LBB0_156:
	mov.b32 	%r109, %f1398;
	and.b32  	%r591, %r109, 8388607;
	or.b32  	%r16180, %r591, 1065353216;
	mov.b32 	%f1397, %r16180;
	add.s32 	%r592, %r109, -1073741824;
	and.b32  	%r16181, %r592, -8388608;
	setp.eq.s32 	%p266, %r16181, 0;
	@%p266 bra 	LBB0_159;
// %bb.157:                             // %__nv_fmaf_rn.exit4.i.i.i2551.preheader
	mov.f32 	%f1251, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1250,%f1251;
	// end inline asm
LBB0_158:                               // %__nv_fmaf_rn.exit4.i.i.i2551
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r593, %r16181, 192937984;
	add.s32 	%r594, %r593, %r16180;
	mov.b32 	%f1252, %r594;
	mul.f32 	%f1253, %f1250, %f1252;
	sub.f32 	%f1254, %f1252, %f1253;
	fma.rn.f32 	%f1255, %f1254, %f1250, %f1253;
	sub.f32 	%f1256, %f1252, %f1255;
	fma.rz.f32 	%f1257, %f1256, %f1250, %f1255;
	cvt.rzi.f32.f32 	%f1258, %f1257;
	sub.f32 	%f1397, %f1252, %f1258;
	sub.s32 	%r16181, %r16181, %r593;
	mov.b32 	%r16180, %f1397;
	setp.ne.s32 	%p267, %r16181, 0;
	setp.ne.s32 	%p268, %r16180, 0;
	and.pred  	%p269, %p267, %p268;
	@%p269 bra 	LBB0_158;
LBB0_159:                               // %__internal_fmodf_slowpath_mod.exit.i.i2553
	setp.gt.u32 	%p270, %r109, 2139095039;
	selp.f32 	%f1259, 0f7FFFFFFF, 0f4B800000, %p270;
	mul.f32 	%f1260, %f1397, 0f34000000;
	mul.f32 	%f1398, %f1259, %f1260;
	bra.uni 	LBB0_160;
LBB0_150:                               // %__nv_fast_fdividef.exit.i.i.i2523
	div.approx.f32 	%f1243, %f1398, %f255;
	cvt.rzi.f32.f32 	%f1396, %f1243;
	fma.rn.f32 	%f218, %f1396, 0fC0000000, %f1398;
	mov.b32 	%r108, %f218;
	setp.lt.u32 	%p261, %r108, 1073741824;
	@%p261 bra 	LBB0_155;
// %bb.151:
	setp.lt.u32 	%p262, %r108, -2147483647;
	@%p262 bra 	LBB0_153;
// %bb.152:
	add.f32 	%f1248, %f1396, 0fBF800000;
	setp.lt.f32 	%p265, %f218, 0fC0000000;
	add.f32 	%f1249, %f1248, 0fBF800000;
	selp.f32 	%f1396, %f1249, %f1248, %p265;
	bra.uni 	LBB0_155;
LBB0_153:
	add.f32 	%f1396, %f1396, 0f3F800000;
	setp.ltu.f32 	%p263, %f218, 0f40800000;
	@%p263 bra 	LBB0_155;
// %bb.154:                             // %__nv_fmaf_rn.exit.i.i.i2528
	add.f32 	%f1244, %f1396, 0f3F800000;
	fma.rn.f32 	%f1246, %f255, 0fC0400000, %f218;
	setp.ge.f32 	%p264, %f1246, 0f00000000;
	add.f32 	%f1247, %f1244, 0f3F800000;
	selp.f32 	%f1396, %f1247, %f1244, %p264;
LBB0_155:                               // %__internal_fmodf_fastpath_quot.exit.i.i2532
	fma.rn.f32 	%f1398, %f1396, 0fC0000000, %f1398;
LBB0_160:                               // %__internal_fmodf_kernel.exit.i2557
	shr.u32 	%r211, %r248, 1;
	mul.f32 	%f290, %f252, 0f3B8B2FF9;
	mul.f32 	%f324, %f4, 0f3B8B2FF9;
	mul.f32 	%f359, %f8, 0f3B8B2FF9;
	mul.f32 	%f393, %f13, 0f3B8B2FF9;
	mul.f32 	%f428, %f17, 0f3B8B2FF9;
	mul.f32 	%f462, %f22, 0f3B8B2FF9;
	mul.f32 	%f497, %f26, 0f3B8B2FF9;
	mul.f32 	%f531, %f31, 0f3B8B2FF9;
	mul.f32 	%f566, %f35, 0f3B8B2FF9;
	mul.f32 	%f600, %f40, 0f3B8B2FF9;
	mul.f32 	%f635, %f44, 0f3B8B2FF9;
	mul.f32 	%f669, %f49, 0f3B8B2FF9;
	mul.f32 	%f704, %f53, 0f3B8B2FF9;
	mul.f32 	%f738, %f58, 0f3B8B2FF9;
	mul.f32 	%f773, %f62, 0f3B8B2FF9;
	mul.f32 	%f806, %f67, 0f3B8B2FF9;
	selp.f32 	%f89, %f860, %f856, %p118;
	selp.f32 	%f915, %f914, %f909, %p138;
	selp.f32 	%f125, %f968, %f964, %p158;
	selp.f32 	%f1023, %f1022, %f1017, %p178;
	selp.f32 	%f1072, %f1067, %f1071, %p196;
	setp.gt.f32 	%p198, %f1075, 0f4B800000;
	add.f32 	%f1076, %f160, 0f3F800000;
	selp.f32 	%f1125, %f1120, %f1124, %p216;
	setp.gt.f32 	%p218, %f1129, 0f4B800000;
	add.f32 	%f1130, %f1128, 0f3F800000;
	selp.f32 	%f197, %f1184, %f1180, %p238;
	selp.f32 	%f1239, %f1238, %f1233, %p258;
	sub.s32 	%r107, %r586, %r587;
	abs.f32 	%f1261, %f1398;
	setp.gtu.f32 	%p271, %f1261, 0f7F800000;
	@%p271 bra 	LBB0_162;
// %bb.161:
	mov.b32 	%r595, %f215;
	and.b32  	%r596, %r595, -2147483648;
	mov.b32 	%r597, %f1398;
	or.b32  	%r598, %r596, %r597;
	mov.b32 	%f1398, %r598;
LBB0_162:                               // %__nv_fmodf.exit2558
	ld.param.u64 	%rd1, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_2];
	mul.wide.u32 	%rd49, %r211, 4;
	mul.f32 	%f3, %f290, %f1348;
	mul.f32 	%f325, %f324, %f1349;
	mul.f32 	%f12, %f359, %f1350;
	mul.f32 	%f394, %f393, %f1351;
	mul.f32 	%f21, %f428, %f1352;
	mul.f32 	%f463, %f462, %f1353;
	mul.f32 	%f30, %f497, %f1354;
	mul.f32 	%f532, %f531, %f1355;
	mul.f32 	%f39, %f566, %f1356;
	mul.f32 	%f601, %f600, %f1357;
	mul.f32 	%f48, %f635, %f1358;
	mul.f32 	%f670, %f669, %f1359;
	mul.f32 	%f57, %f704, %f1360;
	mul.f32 	%f739, %f738, %f1361;
	mul.f32 	%f66, %f773, %f1362;
	mul.f32 	%f807, %f806, %f1363;
	mov.b32 	%r427, %f915;
	mov.b32 	%r426, %f89;
	mov.b32 	%r433, %f912;
	mov.b32 	%r432, %f88;
	mov.b32 	%r475, %f1023;
	mov.b32 	%r474, %f125;
	mov.b32 	%r481, %f1020;
	mov.b32 	%r480, %f124;
	selp.f32 	%f161, %f1076, %f1072, %p198;
	selp.f32 	%f1131, %f1130, %f1125, %p218;
	mov.b32 	%r565, %f1239;
	mov.b32 	%r564, %f197;
	mov.b32 	%r571, %f1236;
	mov.b32 	%r570, %f196;
	add.f32 	%f1262, %f1398, %f1398;
	mov.b32 	%r599, %f1262;
	and.b32  	%r600, %r599, -2147483648;
	or.b32  	%r601, %r600, 1056964608;
	mov.b32 	%f1263, %r601;
	add.f32 	%f1264, %f1262, %f1263;
	cvt.rzi.f32.f32 	%f1265, %f1264;
	abs.f32 	%f1266, %f1262;
	setp.gt.f32 	%p272, %f1266, 0f4B000000;
	selp.f32 	%f1267, %f1262, %f1265, %p272;
	cvt.rzi.f32.f32 	%f1268, %f1262;
	setp.lt.f32 	%p273, %f1266, 0f3F000000;
	selp.f32 	%f1269, %f1268, %f1267, %p273;
	cvt.rzi.s32.f32 	%r602, %f1269;
	fma.rn.f32 	%f1270, %f1269, 0fBF000000, %f1398;
	mul.f32 	%f1271, %f1270, 0f34222169;
	fma.rn.f32 	%f1272, %f1270, 0f40490FDA, %f1271;
	mul.f32 	%f1273, %f1272, %f1272;
	fma.rn.f32 	%f1274, %f1273, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f1275, %f1274, %f1273, 0f3D2AAABB;
	fma.rn.f32 	%f1276, %f1275, %f1273, 0fBEFFFFFF;
	fma.rn.f32 	%f1277, %f1276, %f1273, 0f3F800000;
	fma.rn.f32 	%f1278, %f1273, %f1272, 0f00000000;
	fma.rn.f32 	%f1279, %f1273, 0fB94D4153, 0f3C0885E4;
	fma.rn.f32 	%f1280, %f1279, %f1273, 0fBE2AAAA8;
	fma.rn.f32 	%f1281, %f1280, %f1278, %f1272;
	and.b32  	%r603, %r602, 1;
	setp.eq.b32 	%p274, %r603, 1;
	selp.f32 	%f1282, %f1277, %f1281, %p274;
	selp.f32 	%f1283, %f1281, %f1277, %p274;
	and.b32  	%r604, %r602, 2;
	setp.eq.s32 	%p275, %r604, 0;
	neg.f32 	%f1284, %f1282;
	selp.f32 	%f1285, %f1282, %f1284, %p275;
	add.s32 	%r605, %r602, 1;
	and.b32  	%r606, %r605, 2;
	setp.eq.s32 	%p276, %r606, 0;
	sub.f32 	%f1287, %f284, %f1283;
	selp.f32 	%f1288, %f1283, %f1287, %p276;
	cvt.rzi.f32.f32 	%f1289, %f1398;
	setp.eq.f32 	%p277, %f1289, %f1398;
	mul.f32 	%f1290, %f1398, 0f00000000;
	selp.f32 	%f232, %f1290, %f1285, %p277;
	abs.f32 	%f1291, %f1398;
	setp.gt.f32 	%p278, %f1291, 0f4B800000;
	add.f32 	%f1292, %f232, 0f3F800000;
	shl.b32 	%r607, %r107, 1;
	cvt.rn.f32.s32 	%f1293, %r607;
	div.approx.f32 	%f234, %f1293, %f287;
	abs.f32 	%f1402, %f234;
	setp.lt.f32 	%p279, %f1402, 0f40000000;
	@%p279 bra 	LBB0_174;
// %bb.163:
	setp.gtu.f32 	%p280, %f1402, 0f4B800000;
	@%p280 bra 	LBB0_170;
	bra.uni 	LBB0_164;
LBB0_170:
	mov.b32 	%r117, %f1402;
	and.b32  	%r608, %r117, 8388607;
	or.b32  	%r16182, %r608, 1065353216;
	mov.b32 	%f1401, %r16182;
	add.s32 	%r609, %r117, -1073741824;
	and.b32  	%r16183, %r609, -8388608;
	setp.eq.s32 	%p286, %r16183, 0;
	@%p286 bra 	LBB0_173;
// %bb.171:                             // %__nv_fmaf_rn.exit4.i.i.i2597.preheader
	mov.f32 	%f1304, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1303,%f1304;
	// end inline asm
LBB0_172:                               // %__nv_fmaf_rn.exit4.i.i.i2597
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r610, %r16183, 192937984;
	add.s32 	%r611, %r610, %r16182;
	mov.b32 	%f1305, %r611;
	mul.f32 	%f1306, %f1303, %f1305;
	sub.f32 	%f1307, %f1305, %f1306;
	fma.rn.f32 	%f1308, %f1307, %f1303, %f1306;
	sub.f32 	%f1309, %f1305, %f1308;
	fma.rz.f32 	%f1310, %f1309, %f1303, %f1308;
	cvt.rzi.f32.f32 	%f1311, %f1310;
	sub.f32 	%f1401, %f1305, %f1311;
	sub.s32 	%r16183, %r16183, %r610;
	mov.b32 	%r16182, %f1401;
	setp.ne.s32 	%p287, %r16183, 0;
	setp.ne.s32 	%p288, %r16182, 0;
	and.pred  	%p289, %p287, %p288;
	@%p289 bra 	LBB0_172;
LBB0_173:                               // %__internal_fmodf_slowpath_mod.exit.i.i2599
	setp.gt.u32 	%p290, %r117, 2139095039;
	selp.f32 	%f1312, 0f7FFFFFFF, 0f4B800000, %p290;
	mul.f32 	%f1313, %f1401, 0f34000000;
	mul.f32 	%f1402, %f1312, %f1313;
	bra.uni 	LBB0_174;
LBB0_164:                               // %__nv_fast_fdividef.exit.i.i.i2569
	div.approx.f32 	%f1296, %f1402, %f255;
	cvt.rzi.f32.f32 	%f1400, %f1296;
	fma.rn.f32 	%f237, %f1400, 0fC0000000, %f1402;
	mov.b32 	%r116, %f237;
	setp.lt.u32 	%p281, %r116, 1073741824;
	@%p281 bra 	LBB0_169;
// %bb.165:
	setp.lt.u32 	%p282, %r116, -2147483647;
	@%p282 bra 	LBB0_167;
// %bb.166:
	add.f32 	%f1301, %f1400, 0fBF800000;
	setp.lt.f32 	%p285, %f237, 0fC0000000;
	add.f32 	%f1302, %f1301, 0fBF800000;
	selp.f32 	%f1400, %f1302, %f1301, %p285;
	bra.uni 	LBB0_169;
LBB0_167:
	add.f32 	%f1400, %f1400, 0f3F800000;
	setp.ltu.f32 	%p283, %f237, 0f40800000;
	@%p283 bra 	LBB0_169;
// %bb.168:                             // %__nv_fmaf_rn.exit.i.i.i2574
	add.f32 	%f1297, %f1400, 0f3F800000;
	fma.rn.f32 	%f1299, %f255, 0fC0400000, %f237;
	setp.ge.f32 	%p284, %f1299, 0f00000000;
	add.f32 	%f1300, %f1297, 0f3F800000;
	selp.f32 	%f1400, %f1300, %f1297, %p284;
LBB0_169:                               // %__internal_fmodf_fastpath_quot.exit.i.i2578
	fma.rn.f32 	%f1402, %f1400, 0fC0000000, %f1402;
LBB0_174:                               // %__internal_fmodf_kernel.exit.i2603
	add.s64 	%rd50, %rd1, %rd49;
	mov.b32 	%r273, %f325;
	mov.b32 	%r272, %f3;
	mov.b32 	%r291, %f394;
	mov.b32 	%r290, %f12;
	mov.b32 	%r309, %f463;
	mov.b32 	%r308, %f21;
	mov.b32 	%r327, %f532;
	mov.b32 	%r326, %f30;
	mov.b32 	%r345, %f601;
	mov.b32 	%r344, %f39;
	mov.b32 	%r363, %f670;
	mov.b32 	%r362, %f48;
	mov.b32 	%r381, %f739;
	mov.b32 	%r380, %f57;
	mov.b32 	%r399, %f807;
	mov.b32 	%r398, %f66;
	xor.b32  	%r478, %r481, -2147483648;
	xor.b32  	%r477, %r480, -2147483648;
	mov.b32 	%r522, %f1131;
	mov.b32 	%r521, %f161;
	mov.b32 	%r525, %f1128;
	mov.b32 	%r524, %f160;
	xor.b32  	%r568, %r571, -2147483648;
	xor.b32  	%r567, %r570, -2147483648;
	selp.f32 	%f233, %f1292, %f1288, %p278;
	abs.f32 	%f1314, %f1402;
	setp.gtu.f32 	%p291, %f1314, 0f7F800000;
	@%p291 bra 	LBB0_176;
// %bb.175:
	mov.b32 	%r612, %f234;
	and.b32  	%r613, %r612, -2147483648;
	mov.b32 	%r614, %f1402;
	or.b32  	%r615, %r613, %r614;
	mov.b32 	%f1402, %r615;
LBB0_176:                               // %__nv_fmodf.exit2604
	ld.param.u64 	%rd2, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_3];
	ld.param.u64 	%rd3, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_4];
	ld.global.u32 	%r212, [%rd50];
	ld.global.u32 	%r213, [%rd50+128];
	// begin inline asm
	cvt.rn.f16x2.f32 %r271, %r273, %r272;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r289, %r291, %r290;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r307, %r309, %r308;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r325, %r327, %r326;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r343, %r345, %r344;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r361, %r363, %r362;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r379, %r381, %r380;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r397, %r399, %r398;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r425, %r427, %r426;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r428, %r427, %r426;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r431, %r433, %r432;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r434, %r433, %r432;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r473, %r475, %r474;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r476, %r478, %r477;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r479, %r481, %r480;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r482, %r475, %r474;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r520, %r522, %r521;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r523, %r525, %r524;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r563, %r565, %r564;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r566, %r568, %r567;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r569, %r571, %r570;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r572, %r565, %r564;
	// end inline asm
	add.f32 	%f1315, %f1402, %f1402;
	mov.b32 	%r623, %f1315;
	and.b32  	%r624, %r623, -2147483648;
	or.b32  	%r625, %r624, 1056964608;
	mov.b32 	%f1316, %r625;
	add.f32 	%f1317, %f1315, %f1316;
	cvt.rzi.f32.f32 	%f1318, %f1317;
	abs.f32 	%f1319, %f1315;
	setp.gt.f32 	%p292, %f1319, 0f4B000000;
	selp.f32 	%f1320, %f1315, %f1318, %p292;
	cvt.rzi.f32.f32 	%f1321, %f1315;
	setp.lt.f32 	%p293, %f1319, 0f3F000000;
	selp.f32 	%f1322, %f1321, %f1320, %p293;
	cvt.rzi.s32.f32 	%r626, %f1322;
	fma.rn.f32 	%f1323, %f1322, 0fBF000000, %f1402;
	mul.f32 	%f1324, %f1323, 0f34222169;
	fma.rn.f32 	%f1325, %f1323, 0f40490FDA, %f1324;
	mul.f32 	%f1326, %f1325, %f1325;
	fma.rn.f32 	%f1327, %f1326, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f1328, %f1327, %f1326, 0f3D2AAABB;
	fma.rn.f32 	%f1329, %f1328, %f1326, 0fBEFFFFFF;
	fma.rn.f32 	%f1330, %f1329, %f1326, 0f3F800000;
	fma.rn.f32 	%f1331, %f1326, %f1325, 0f00000000;
	fma.rn.f32 	%f1332, %f1326, 0fB94D4153, 0f3C0885E4;
	fma.rn.f32 	%f1333, %f1332, %f1326, 0fBE2AAAA8;
	fma.rn.f32 	%f1334, %f1333, %f1331, %f1325;
	and.b32  	%r627, %r626, 1;
	setp.eq.b32 	%p294, %r627, 1;
	selp.f32 	%f1335, %f1330, %f1334, %p294;
	selp.f32 	%f1336, %f1334, %f1330, %p294;
	and.b32  	%r628, %r626, 2;
	setp.eq.s32 	%p295, %r628, 0;
	neg.f32 	%f1337, %f1335;
	selp.f32 	%f1338, %f1335, %f1337, %p295;
	add.s32 	%r629, %r626, 1;
	and.b32  	%r630, %r629, 2;
	setp.eq.s32 	%p296, %r630, 0;
	sub.f32 	%f1340, %f284, %f1336;
	selp.f32 	%f1341, %f1336, %f1340, %p296;
	cvt.rzi.f32.f32 	%f1342, %f1402;
	setp.eq.f32 	%p297, %f1342, %f1402;
	mul.f32 	%f1343, %f1402, 0f00000000;
	selp.f32 	%f1344, %f1343, %f1338, %p297;
	abs.f32 	%f1345, %f1402;
	setp.gt.f32 	%p298, %f1345, 0f4B800000;
	add.f32 	%f1346, %f1344, 0f3F800000;
	selp.f32 	%f1347, %f1346, %f1341, %p298;
	mov.b32 	%r618, %f1347;
	mov.b32 	%r617, %f233;
	// begin inline asm
	cvt.rn.f16x2.f32 %r616, %r618, %r617;
	// end inline asm
	mov.b32 	%r621, %f1344;
	mov.b32 	%r620, %f232;
	// begin inline asm
	cvt.rn.f16x2.f32 %r619, %r621, %r620;
	// end inline asm
	shl.b32 	%r631, %r2, 7;
	shl.b32 	%r632, %r1, 4;
	and.b32  	%r633, %r632, 112;
	and.b32  	%r634, %r631, 384;
	or.b32  	%r635, %r634, %r633;
	shl.b32 	%r636, %r2, 6;
	and.b32  	%r637, %r636, 7680;
	shl.b32 	%r638, %r2, 11;
	and.b32  	%r639, %r638, 8192;
	shl.b32 	%r640, %r1, 3;
	and.b32  	%r641, %r640, 64;
	and.b32  	%r642, %r208, 32;
	or.b32  	%r643, %r642, %r4;
	or.b32  	%r126, %r643, %r641;
	or.b32  	%r644, %r635, %r637;
	or.b32  	%r127, %r644, %r639;
	shl.b32 	%r645, %r2, 5;
	and.b32  	%r646, %r209, 28;
	and.b32  	%r647, %r645, 96;
	shl.b32 	%r648, %r2, 4;
	and.b32  	%r649, %r648, 1920;
	and.b32  	%r650, %r3, 2048;
	or.b32  	%r651, %r646, %r647;
	or.b32  	%r652, %r651, %r649;
	or.b32  	%r128, %r652, %r650;
	and.b32  	%r129, %r1, 8;
	shr.u32 	%r653, %r4, 3;
	mul.lo.s32 	%r654, %r653, 260;
	shr.u32 	%r655, %r4, 1;
	bfe.u32 	%r656, %r4, 1, 1;
	and.b32  	%r657, %r4, 1;
	or.b32  	%r658, %r129, %r632;
	shr.u32 	%r659, %r658, 2;
	and.b32  	%r660, %r659, 30;
	bfe.u32 	%r661, %r4, 2, 1;
	mad.lo.s32 	%r662, %r219, 65, %r654;
	mad.lo.s32 	%r663, %r657, 2080, %r662;
	mad.lo.s32 	%r664, %r656, 1040, %r663;
	mad.lo.s32 	%r665, %r661, 520, %r664;
	add.s32 	%r666, %r665, %r660;
	mul.wide.u32 	%rd51, %r666, 4;
	mov.u64 	%rd52, shmem;
	add.s64 	%rd5, %rd52, %rd51;
	add.s32 	%r667, %r666, 32;
	mul.wide.u32 	%rd53, %r667, 4;
	add.s64 	%rd6, %rd52, %rd53;
	add.s32 	%r668, %r666, 1;
	mul.wide.u32 	%rd54, %r668, 4;
	add.s64 	%rd7, %rd52, %rd54;
	add.s32 	%r669, %r666, 33;
	mul.wide.u32 	%rd55, %r669, 4;
	add.s64 	%rd8, %rd52, %rd55;
	add.s32 	%r670, %r666, 130;
	mul.wide.u32 	%rd56, %r670, 4;
	add.s64 	%rd9, %rd52, %rd56;
	add.s32 	%r671, %r666, 162;
	mul.wide.u32 	%rd57, %r671, 4;
	add.s64 	%rd10, %rd52, %rd57;
	add.s32 	%r672, %r666, 131;
	mul.wide.u32 	%rd58, %r672, 4;
	add.s64 	%rd11, %rd52, %rd58;
	add.s32 	%r673, %r666, 163;
	mul.wide.u32 	%rd59, %r673, 4;
	add.s64 	%rd12, %rd52, %rd59;
	mul.lo.s32 	%r674, %r218, 260;
	mul.lo.s32 	%r675, %r221, 1040;
	mul.lo.s32 	%r676, %r215, 65;
	and.b32  	%r677, %r5, 32;
	mul.lo.s32 	%r678, %r219, 520;
	mul.lo.s32 	%r679, %r216, 130;
	or.b32  	%r680, %r677, %r655;
	add.s32 	%r681, %r680, %r678;
	add.s32 	%r682, %r681, %r679;
	add.s32 	%r683, %r682, %r675;
	add.s32 	%r684, %r683, %r674;
	add.s32 	%r685, %r684, %r676;
	or.b32  	%r686, %r680, 8;
	add.s32 	%r687, %r686, %r678;
	add.s32 	%r688, %r687, %r679;
	add.s32 	%r689, %r688, %r675;
	add.s32 	%r690, %r689, %r674;
	add.s32 	%r691, %r690, %r676;
	or.b32  	%r692, %r680, 16;
	add.s32 	%r693, %r692, %r678;
	add.s32 	%r694, %r693, %r679;
	add.s32 	%r695, %r694, %r675;
	add.s32 	%r696, %r695, %r674;
	add.s32 	%r697, %r696, %r676;
	or.b32  	%r698, %r680, 24;
	add.s32 	%r699, %r698, %r678;
	add.s32 	%r700, %r699, %r679;
	add.s32 	%r701, %r700, %r675;
	add.s32 	%r702, %r701, %r674;
	add.s32 	%r703, %r702, %r676;
	or.b32  	%r704, %r655, 2080;
	add.s32 	%r705, %r704, %r677;
	add.s32 	%r706, %r705, %r678;
	add.s32 	%r707, %r706, %r679;
	add.s32 	%r708, %r707, %r675;
	add.s32 	%r709, %r708, %r674;
	add.s32 	%r710, %r709, %r676;
	or.b32  	%r711, %r655, 2088;
	add.s32 	%r712, %r711, %r677;
	add.s32 	%r713, %r712, %r678;
	add.s32 	%r714, %r713, %r679;
	add.s32 	%r715, %r714, %r675;
	add.s32 	%r716, %r715, %r674;
	add.s32 	%r717, %r716, %r676;
	or.b32  	%r718, %r655, 2096;
	add.s32 	%r719, %r718, %r677;
	add.s32 	%r720, %r719, %r678;
	add.s32 	%r721, %r720, %r679;
	add.s32 	%r722, %r721, %r675;
	add.s32 	%r723, %r722, %r674;
	add.s32 	%r724, %r723, %r676;
	or.b32  	%r725, %r655, 2104;
	add.s32 	%r726, %r725, %r677;
	add.s32 	%r727, %r726, %r678;
	add.s32 	%r728, %r727, %r679;
	add.s32 	%r729, %r728, %r675;
	add.s32 	%r730, %r729, %r674;
	add.s32 	%r731, %r730, %r676;
	mul.lo.s32 	%r732, %r211, 65;
	add.s32 	%r733, %r680, %r732;
	add.s32 	%r734, %r686, %r732;
	add.s32 	%r735, %r692, %r732;
	add.s32 	%r736, %r698, %r732;
	add.s32 	%r737, %r732, 2080;
	add.s32 	%r738, %r680, %r737;
	add.s32 	%r739, %r686, %r737;
	add.s32 	%r740, %r692, %r737;
	add.s32 	%r741, %r698, %r737;
	shl.b32 	%r742, %r4, 1;
	or.b32  	%r743, %r219, %r742;
	mul.lo.s32 	%r744, %r743, 65;
	add.s32 	%r745, %r660, %r744;
	mul.wide.u32 	%rd60, %r745, 4;
	add.s64 	%rd13, %rd52, %rd60;
	cvt.u64.u32 	%rd61, %r660;
	cvt.u64.u32 	%rd62, %r744;
	add.s64 	%rd63, %rd62, %rd61;
	shl.b64 	%rd64, %rd63, 2;
	add.s64 	%rd14, %rd52, %rd64;
	or.b32  	%r746, %r743, 32;
	mul.lo.s32 	%r747, %r746, 65;
	add.s32 	%r748, %r747, %r660;
	mul.wide.u32 	%rd65, %r748, 4;
	add.s64 	%rd15, %rd52, %rd65;
	cvt.u64.u32 	%rd66, %r747;
	add.s64 	%rd67, %rd61, %rd66;
	shl.b64 	%rd68, %rd67, 2;
	add.s64 	%rd16, %rd52, %rd68;
	shl.b32 	%r749, %r4, 2;
	or.b32  	%r750, %r220, %r749;
	or.b32  	%r751, %r750, %r649;
	shl.b32 	%r752, %r751, 7;
	shl.b32 	%r753, %r2, 16;
	and.b32  	%r754, %r753, 262144;
	or.b32  	%r755, %r754, %r651;
	or.b32  	%r756, %r755, %r752;
	or.b32  	%r130, %r756, -1572864;
	or.b32  	%r131, %r756, -1564672;
	mul.wide.u32 	%rd17, %r741, 4;
	mul.wide.u32 	%rd18, %r740, 4;
	mul.wide.u32 	%rd19, %r739, 4;
	mul.wide.u32 	%rd20, %r738, 4;
	mul.wide.u32 	%rd21, %r736, 4;
	mul.wide.u32 	%rd22, %r735, 4;
	mul.wide.u32 	%rd23, %r734, 4;
	mul.wide.u32 	%rd24, %r733, 4;
	mul.wide.u32 	%rd25, %r731, 4;
	mul.wide.u32 	%rd26, %r724, 4;
	mul.wide.u32 	%rd27, %r717, 4;
	mul.wide.u32 	%rd28, %r710, 4;
	mul.wide.u32 	%rd29, %r703, 4;
	mul.wide.u32 	%rd30, %r697, 4;
	mul.wide.u32 	%rd31, %r691, 4;
	mul.wide.u32 	%rd32, %r685, 4;
	mov.u32 	%r16210, 0;
	setp.eq.s32 	%p299, %r129, 0;
	mov.u16 	%rs2381, 25600;
	mov.u16 	%rs2173, 21504;
	mov.u16 	%rs2389, 18432;
	mov.u16 	%rs2307, -14592;
	mov.u32 	%r16211, %r16210;
	mov.u32 	%r16212, %r16210;
	mov.u32 	%r16213, %r16210;
	mov.u32 	%r16214, %r16210;
	mov.u32 	%r16215, %r16210;
	mov.u32 	%r16216, %r16210;
	mov.u32 	%r16217, %r16210;
	mov.u32 	%r16218, %r16210;
	mov.u32 	%r16219, %r16210;
	mov.u32 	%r16220, %r16210;
	mov.u32 	%r16221, %r16210;
	mov.u32 	%r16222, %r16210;
	mov.u32 	%r16223, %r16210;
	mov.u32 	%r16224, %r16210;
	mov.u32 	%r16225, %r16210;
	mov.u32 	%r16226, %r16210;
	mov.u32 	%r16227, %r16210;
	mov.u32 	%r16228, %r16210;
	mov.u32 	%r16229, %r16210;
	mov.u32 	%r16230, %r16210;
	mov.u32 	%r16231, %r16210;
	mov.u32 	%r16232, %r16210;
	mov.u32 	%r16233, %r16210;
	mov.u32 	%r16208, %r16210;
	bra.uni 	LBB0_177;
LBB0_181:                               // %L63555
                                        //   in Loop: Header=BB0_177 Depth=1
	add.s32 	%r16208, %r156, 256;
	setp.gt.s32 	%p304, %r6, %r16208;
	setp.ne.s32 	%p305, %r156, 32512;
	and.pred  	%p306, %p305, %p304;
	@%p306 bra 	LBB0_177;
	bra.uni 	LBB0_182;
LBB0_177:                               // %L2073
                                        // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_178 Depth 2
	mov.u32 	%r156, %r16208;
	or.b32  	%r790, %r126, %r156;
	shl.b32 	%r791, %r790, 14;
	or.b32  	%r792, %r127, %r791;
	cvt.u64.u32 	%rd70, %r792;
	add.s64 	%rd71, %rd2, %rd70;
	ld.global.v4.u32 	{%r793, %r794, %r795, %r796}, [%rd71];
	shl.b32 	%r797, %r790, 12;
	or.b32  	%r798, %r128, %r797;
	or.b32  	%r799, %r798, 65536;
	mul.wide.s32 	%rd72, %r799, 4;
	add.s64 	%rd73, %rd2, %rd72;
	ld.global.v4.u32 	{%r800, %r801, %r802, %r803}, [%rd73];
	selp.b32 	%r804, %r795, %r793, %p299;
	shfl.sync.bfly.b32	%r805, %r804, 8, 31, -1;
	selp.b32 	%r758, %r793, %r805, %p299;
	selp.b32 	%r759, %r805, %r795, %p299;
	selp.b32 	%r806, %r796, %r794, %p299;
	shfl.sync.bfly.b32	%r807, %r806, 8, 31, -1;
	selp.b32 	%r766, %r794, %r807, %p299;
	selp.b32 	%r767, %r807, %r796, %p299;
	selp.b32 	%r808, %r802, %r800, %p299;
	shfl.sync.bfly.b32	%r809, %r808, 8, 31, -1;
	selp.b32 	%r774, %r800, %r809, %p299;
	selp.b32 	%r775, %r809, %r802, %p299;
	selp.b32 	%r810, %r803, %r801, %p299;
	shfl.sync.bfly.b32	%r811, %r810, 8, 31, -1;
	selp.b32 	%r782, %r801, %r811, %p299;
	selp.b32 	%r783, %r811, %r803, %p299;
	mov.u32 	%r784, 21520;
	// begin inline asm
	prmt.b32 %r757, %r758, %r759, %r784;
	// end inline asm
	mov.u32 	%r788, 30258;
	// begin inline asm
	prmt.b32 %r761, %r758, %r759, %r788;
	// end inline asm
	// begin inline asm
	prmt.b32 %r765, %r766, %r767, %r784;
	// end inline asm
	// begin inline asm
	prmt.b32 %r769, %r766, %r767, %r788;
	// end inline asm
	// begin inline asm
	prmt.b32 %r773, %r774, %r775, %r784;
	// end inline asm
	// begin inline asm
	prmt.b32 %r777, %r774, %r775, %r788;
	// end inline asm
	// begin inline asm
	prmt.b32 %r781, %r782, %r783, %r784;
	// end inline asm
	// begin inline asm
	prmt.b32 %r785, %r782, %r783, %r788;
	// end inline asm
	st.shared.u32 	[%rd5], %r757;
	st.shared.u32 	[%rd6], %r761;
	st.shared.u32 	[%rd7], %r765;
	st.shared.u32 	[%rd8], %r769;
	st.shared.u32 	[%rd9], %r773;
	st.shared.u32 	[%rd10], %r777;
	st.shared.u32 	[%rd11], %r781;
	st.shared.u32 	[%rd12], %r785;
	bar.sync 	0;
	mov.u32 	%r16209, 256;
	mov.u64 	%rd94, %rd52;
LBB0_178:                               // %L9073
                                        //   Parent Loop BB0_177 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	add.s64 	%rd74, %rd94, %rd32;
	ld.shared.u32 	%r16076, [%rd74];
	add.s64 	%rd75, %rd94, %rd31;
	ld.shared.u32 	%r16077, [%rd75];
	add.s64 	%rd76, %rd94, %rd30;
	ld.shared.u32 	%r16078, [%rd76];
	add.s64 	%rd77, %rd94, %rd29;
	ld.shared.u32 	%r16079, [%rd77];
	add.s64 	%rd78, %rd94, %rd28;
	ld.shared.u32 	%r16080, [%rd78];
	add.s64 	%rd79, %rd94, %rd27;
	ld.shared.u32 	%r16081, [%rd79];
	add.s64 	%rd80, %rd94, %rd26;
	ld.shared.u32 	%r16082, [%rd80];
	add.s64 	%rd81, %rd94, %rd25;
	ld.shared.u32 	%r16083, [%rd81];
	// begin inline asm
	mov.b32 %r817, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r828, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r816, %r16076, -2004318072;
	mov.u32 	%r815, 983055;
	// begin inline asm
	lop3.b32 %r814, %r815, %r816, %r817, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r818, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r819, %r817, %r818;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r822, %r814, %r819;
	// end inline asm
	mov.u32 	%r826, 15728880;
	// begin inline asm
	lop3.b32 %r825, %r826, %r816, %r828, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r829, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r830, %r828, %r829;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r833, %r825, %r830;
	// end inline asm
	shr.u32 	%r838, %r816, 8;
	// begin inline asm
	lop3.b32 %r836, %r815, %r838, %r817, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r840, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r841, %r817, %r840;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r844, %r836, %r841;
	// end inline asm
	// begin inline asm
	lop3.b32 %r847, %r826, %r838, %r828, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r851, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r852, %r828, %r851;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r855, %r847, %r852;
	// end inline asm
	// begin inline asm
	mov.b32 %r863, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r874, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r862, %r16077, -2004318072;
	// begin inline asm
	lop3.b32 %r860, %r815, %r862, %r863, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r864, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r865, %r863, %r864;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r868, %r860, %r865;
	// end inline asm
	// begin inline asm
	lop3.b32 %r871, %r826, %r862, %r874, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r875, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r876, %r874, %r875;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r879, %r871, %r876;
	// end inline asm
	shr.u32 	%r884, %r862, 8;
	// begin inline asm
	lop3.b32 %r882, %r815, %r884, %r863, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r886, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r887, %r863, %r886;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r890, %r882, %r887;
	// end inline asm
	// begin inline asm
	lop3.b32 %r893, %r826, %r884, %r874, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r897, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r898, %r874, %r897;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r901, %r893, %r898;
	// end inline asm
	// begin inline asm
	mov.b32 %r909, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r920, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r908, %r16078, -2004318072;
	// begin inline asm
	lop3.b32 %r906, %r815, %r908, %r909, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r910, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r911, %r909, %r910;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r914, %r906, %r911;
	// end inline asm
	// begin inline asm
	lop3.b32 %r917, %r826, %r908, %r920, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r921, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r922, %r920, %r921;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r925, %r917, %r922;
	// end inline asm
	shr.u32 	%r930, %r908, 8;
	// begin inline asm
	lop3.b32 %r928, %r815, %r930, %r909, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r932, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r933, %r909, %r932;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r936, %r928, %r933;
	// end inline asm
	// begin inline asm
	lop3.b32 %r939, %r826, %r930, %r920, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r943, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r944, %r920, %r943;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r947, %r939, %r944;
	// end inline asm
	// begin inline asm
	mov.b32 %r955, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r966, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r954, %r16079, -2004318072;
	// begin inline asm
	lop3.b32 %r952, %r815, %r954, %r955, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r956, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r957, %r955, %r956;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r960, %r952, %r957;
	// end inline asm
	// begin inline asm
	lop3.b32 %r963, %r826, %r954, %r966, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r967, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r968, %r966, %r967;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r971, %r963, %r968;
	// end inline asm
	shr.u32 	%r976, %r954, 8;
	// begin inline asm
	lop3.b32 %r974, %r815, %r976, %r955, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r978, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r979, %r955, %r978;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r982, %r974, %r979;
	// end inline asm
	// begin inline asm
	lop3.b32 %r985, %r826, %r976, %r966, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r989, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r990, %r966, %r989;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r993, %r985, %r990;
	// end inline asm
	// begin inline asm
	mov.b32 %r1001, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1012, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1000, %r16080, -2004318072;
	// begin inline asm
	lop3.b32 %r998, %r815, %r1000, %r1001, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1002, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1003, %r1001, %r1002;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1006, %r998, %r1003;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1009, %r826, %r1000, %r1012, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1013, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1014, %r1012, %r1013;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1017, %r1009, %r1014;
	// end inline asm
	shr.u32 	%r1022, %r1000, 8;
	// begin inline asm
	lop3.b32 %r1020, %r815, %r1022, %r1001, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1024, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1025, %r1001, %r1024;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1028, %r1020, %r1025;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1031, %r826, %r1022, %r1012, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1035, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1036, %r1012, %r1035;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1039, %r1031, %r1036;
	// end inline asm
	// begin inline asm
	mov.b32 %r1047, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1058, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1046, %r16081, -2004318072;
	// begin inline asm
	lop3.b32 %r1044, %r815, %r1046, %r1047, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1048, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1049, %r1047, %r1048;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1052, %r1044, %r1049;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1055, %r826, %r1046, %r1058, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1059, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1060, %r1058, %r1059;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1063, %r1055, %r1060;
	// end inline asm
	shr.u32 	%r1068, %r1046, 8;
	// begin inline asm
	lop3.b32 %r1066, %r815, %r1068, %r1047, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1070, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1071, %r1047, %r1070;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1074, %r1066, %r1071;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1077, %r826, %r1068, %r1058, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1081, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1082, %r1058, %r1081;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1085, %r1077, %r1082;
	// end inline asm
	// begin inline asm
	mov.b32 %r1093, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1104, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1092, %r16082, -2004318072;
	// begin inline asm
	lop3.b32 %r1090, %r815, %r1092, %r1093, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1094, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1095, %r1093, %r1094;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1098, %r1090, %r1095;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1101, %r826, %r1092, %r1104, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1105, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1106, %r1104, %r1105;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1109, %r1101, %r1106;
	// end inline asm
	shr.u32 	%r1114, %r1092, 8;
	// begin inline asm
	lop3.b32 %r1112, %r815, %r1114, %r1093, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1116, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1117, %r1093, %r1116;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1120, %r1112, %r1117;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1123, %r826, %r1114, %r1104, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1127, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1128, %r1104, %r1127;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1131, %r1123, %r1128;
	// end inline asm
	// begin inline asm
	mov.b32 %r1139, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1150, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1138, %r16083, -2004318072;
	// begin inline asm
	lop3.b32 %r1136, %r815, %r1138, %r1139, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1140, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1141, %r1139, %r1140;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1144, %r1136, %r1141;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1147, %r826, %r1138, %r1150, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1151, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1152, %r1150, %r1151;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1155, %r1147, %r1152;
	// end inline asm
	shr.u32 	%r1160, %r1138, 8;
	// begin inline asm
	lop3.b32 %r1158, %r815, %r1160, %r1139, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1162, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1163, %r1139, %r1162;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1166, %r1158, %r1163;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1169, %r826, %r1160, %r1150, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1173, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1174, %r1150, %r1173;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1177, %r1169, %r1174;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1180, %r379;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1182, %r1180, %r822;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1185, %r379;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1187, %r1185, %r833;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1190, %r379;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1192, %r1190, %r844;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1195, %r379;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1197, %r1195, %r855;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1200, %r379;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1202, %r1200, %r868;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1205, %r379;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1207, %r1205, %r879;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1210, %r379;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1212, %r1210, %r890;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1215, %r379;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1217, %r1215, %r901;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1220, %r379;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1222, %r1220, %r914;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1225, %r379;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1227, %r1225, %r925;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1230, %r379;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1232, %r1230, %r936;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1235, %r379;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1237, %r1235, %r947;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1240, %r379;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1242, %r1240, %r960;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1245, %r379;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1247, %r1245, %r971;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1250, %r379;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1252, %r1250, %r982;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1255, %r379;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1257, %r1255, %r993;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1260, %r397;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1262, %r1260, %r1006;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1265, %r397;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1267, %r1265, %r1017;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1270, %r397;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1272, %r1270, %r1028;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1275, %r397;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1277, %r1275, %r1039;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1280, %r397;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1282, %r1280, %r1052;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1285, %r397;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1287, %r1285, %r1063;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1290, %r397;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1292, %r1290, %r1074;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1295, %r397;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1297, %r1295, %r1085;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1300, %r397;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1302, %r1300, %r1098;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1305, %r397;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1307, %r1305, %r1109;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1310, %r397;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1312, %r1310, %r1120;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1315, %r397;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1317, %r1315, %r1131;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1320, %r397;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1322, %r1320, %r1144;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1325, %r397;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1327, %r1325, %r1155;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1330, %r397;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1332, %r1330, %r1166;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1335, %r397;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1337, %r1335, %r1177;
	// end inline asm
	// begin inline asm
	mov.b32 %r1345, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1356, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1344, %r16210, -2004318072;
	// begin inline asm
	lop3.b32 %r1342, %r815, %r1344, %r1345, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1346, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1347, %r1345, %r1346;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1350, %r1342, %r1347;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1353, %r826, %r1344, %r1356, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1357, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1358, %r1356, %r1357;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1361, %r1353, %r1358;
	// end inline asm
	shr.u32 	%r1366, %r1344, 8;
	// begin inline asm
	lop3.b32 %r1364, %r815, %r1366, %r1345, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1368, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1369, %r1345, %r1368;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1372, %r1364, %r1369;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1375, %r826, %r1366, %r1356, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1379, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1380, %r1356, %r1379;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1383, %r1375, %r1380;
	// end inline asm
	// begin inline asm
	mov.b32 %r1391, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1402, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1390, %r16211, -2004318072;
	// begin inline asm
	lop3.b32 %r1388, %r815, %r1390, %r1391, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1392, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1393, %r1391, %r1392;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1396, %r1388, %r1393;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1399, %r826, %r1390, %r1402, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1403, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1404, %r1402, %r1403;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1407, %r1399, %r1404;
	// end inline asm
	shr.u32 	%r1412, %r1390, 8;
	// begin inline asm
	lop3.b32 %r1410, %r815, %r1412, %r1391, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1414, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1415, %r1391, %r1414;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1418, %r1410, %r1415;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1421, %r826, %r1412, %r1402, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1425, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1426, %r1402, %r1425;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1429, %r1421, %r1426;
	// end inline asm
	// begin inline asm
	mov.b32 %r1437, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1448, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1436, %r16212, -2004318072;
	// begin inline asm
	lop3.b32 %r1434, %r815, %r1436, %r1437, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1438, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1439, %r1437, %r1438;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1442, %r1434, %r1439;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1445, %r826, %r1436, %r1448, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1449, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1450, %r1448, %r1449;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1453, %r1445, %r1450;
	// end inline asm
	shr.u32 	%r1458, %r1436, 8;
	// begin inline asm
	lop3.b32 %r1456, %r815, %r1458, %r1437, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1460, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1461, %r1437, %r1460;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1464, %r1456, %r1461;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1467, %r826, %r1458, %r1448, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1471, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1472, %r1448, %r1471;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1475, %r1467, %r1472;
	// end inline asm
	// begin inline asm
	mov.b32 %r1483, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1494, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1482, %r16213, -2004318072;
	// begin inline asm
	lop3.b32 %r1480, %r815, %r1482, %r1483, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1484, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1485, %r1483, %r1484;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1488, %r1480, %r1485;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1491, %r826, %r1482, %r1494, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1495, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1496, %r1494, %r1495;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1499, %r1491, %r1496;
	// end inline asm
	shr.u32 	%r1504, %r1482, 8;
	// begin inline asm
	lop3.b32 %r1502, %r815, %r1504, %r1483, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1506, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1507, %r1483, %r1506;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1510, %r1502, %r1507;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1513, %r826, %r1504, %r1494, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1517, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1518, %r1494, %r1517;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1521, %r1513, %r1518;
	// end inline asm
	// begin inline asm
	mov.b32 %r1529, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1540, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1528, %r16222, -2004318072;
	// begin inline asm
	lop3.b32 %r1526, %r815, %r1528, %r1529, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1530, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1531, %r1529, %r1530;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1534, %r1526, %r1531;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1537, %r826, %r1528, %r1540, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1541, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1542, %r1540, %r1541;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1545, %r1537, %r1542;
	// end inline asm
	shr.u32 	%r1550, %r1528, 8;
	// begin inline asm
	lop3.b32 %r1548, %r815, %r1550, %r1529, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1552, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1553, %r1529, %r1552;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1556, %r1548, %r1553;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1559, %r826, %r1550, %r1540, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1563, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1564, %r1540, %r1563;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1567, %r1559, %r1564;
	// end inline asm
	// begin inline asm
	mov.b32 %r1575, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1586, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1574, %r16223, -2004318072;
	// begin inline asm
	lop3.b32 %r1572, %r815, %r1574, %r1575, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1576, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1577, %r1575, %r1576;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1580, %r1572, %r1577;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1583, %r826, %r1574, %r1586, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1587, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1588, %r1586, %r1587;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1591, %r1583, %r1588;
	// end inline asm
	shr.u32 	%r1596, %r1574, 8;
	// begin inline asm
	lop3.b32 %r1594, %r815, %r1596, %r1575, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1598, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1599, %r1575, %r1598;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1602, %r1594, %r1599;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1605, %r826, %r1596, %r1586, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1609, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1610, %r1586, %r1609;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1613, %r1605, %r1610;
	// end inline asm
	// begin inline asm
	mov.b32 %r1621, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1632, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1620, %r16224, -2004318072;
	// begin inline asm
	lop3.b32 %r1618, %r815, %r1620, %r1621, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1622, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1623, %r1621, %r1622;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1626, %r1618, %r1623;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1629, %r826, %r1620, %r1632, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1633, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1634, %r1632, %r1633;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1637, %r1629, %r1634;
	// end inline asm
	shr.u32 	%r1642, %r1620, 8;
	// begin inline asm
	lop3.b32 %r1640, %r815, %r1642, %r1621, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1644, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1645, %r1621, %r1644;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1648, %r1640, %r1645;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1651, %r826, %r1642, %r1632, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1655, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1656, %r1632, %r1655;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1659, %r1651, %r1656;
	// end inline asm
	// begin inline asm
	mov.b32 %r1667, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1678, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1666, %r16225, -2004318072;
	// begin inline asm
	lop3.b32 %r1664, %r815, %r1666, %r1667, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1668, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1669, %r1667, %r1668;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1672, %r1664, %r1669;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1675, %r826, %r1666, %r1678, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1679, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1680, %r1678, %r1679;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1683, %r1675, %r1680;
	// end inline asm
	shr.u32 	%r1688, %r1666, 8;
	// begin inline asm
	lop3.b32 %r1686, %r815, %r1688, %r1667, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1690, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1691, %r1667, %r1690;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1694, %r1686, %r1691;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1697, %r826, %r1688, %r1678, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1701, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1702, %r1678, %r1701;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1705, %r1697, %r1702;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1708, %r271, %r1350, %r1182;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1712, %r271, %r1361, %r1187;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1716, %r271, %r1372, %r1192;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1720, %r271, %r1383, %r1197;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1724, %r271, %r1396, %r1202;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1728, %r271, %r1407, %r1207;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1732, %r271, %r1418, %r1212;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1736, %r271, %r1429, %r1217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1740, %r271, %r1442, %r1222;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1744, %r271, %r1453, %r1227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1748, %r271, %r1464, %r1232;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1752, %r271, %r1475, %r1237;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1756, %r271, %r1488, %r1242;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1760, %r271, %r1499, %r1247;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1764, %r271, %r1510, %r1252;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1768, %r271, %r1521, %r1257;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1772, %r289, %r1534, %r1262;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1776, %r289, %r1545, %r1267;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1780, %r289, %r1556, %r1272;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1784, %r289, %r1567, %r1277;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1788, %r289, %r1580, %r1282;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1792, %r289, %r1591, %r1287;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1796, %r289, %r1602, %r1292;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1800, %r289, %r1613, %r1297;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1804, %r289, %r1626, %r1302;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1808, %r289, %r1637, %r1307;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1812, %r289, %r1648, %r1312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1816, %r289, %r1659, %r1317;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1820, %r289, %r1672, %r1322;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1824, %r289, %r1683, %r1327;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1828, %r289, %r1694, %r1332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1832, %r289, %r1705, %r1337;
	// end inline asm
	// begin inline asm
	mov.b32 %r1841, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1852, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1840, %r16214, -2004318072;
	// begin inline asm
	lop3.b32 %r1838, %r815, %r1840, %r1841, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1842, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1843, %r1841, %r1842;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1846, %r1838, %r1843;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1849, %r826, %r1840, %r1852, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1853, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1854, %r1852, %r1853;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1857, %r1849, %r1854;
	// end inline asm
	shr.u32 	%r1862, %r1840, 8;
	// begin inline asm
	lop3.b32 %r1860, %r815, %r1862, %r1841, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1864, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1865, %r1841, %r1864;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1868, %r1860, %r1865;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1871, %r826, %r1862, %r1852, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1875, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1876, %r1852, %r1875;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1879, %r1871, %r1876;
	// end inline asm
	// begin inline asm
	mov.b32 %r1887, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1898, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1886, %r16215, -2004318072;
	// begin inline asm
	lop3.b32 %r1884, %r815, %r1886, %r1887, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1888, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1889, %r1887, %r1888;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1892, %r1884, %r1889;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1895, %r826, %r1886, %r1898, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1899, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1900, %r1898, %r1899;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1903, %r1895, %r1900;
	// end inline asm
	shr.u32 	%r1908, %r1886, 8;
	// begin inline asm
	lop3.b32 %r1906, %r815, %r1908, %r1887, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1910, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1911, %r1887, %r1910;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1914, %r1906, %r1911;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1917, %r826, %r1908, %r1898, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1921, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1922, %r1898, %r1921;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1925, %r1917, %r1922;
	// end inline asm
	// begin inline asm
	mov.b32 %r1933, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1944, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1932, %r16216, -2004318072;
	// begin inline asm
	lop3.b32 %r1930, %r815, %r1932, %r1933, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1934, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1935, %r1933, %r1934;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1938, %r1930, %r1935;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1941, %r826, %r1932, %r1944, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1945, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1946, %r1944, %r1945;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1949, %r1941, %r1946;
	// end inline asm
	shr.u32 	%r1954, %r1932, 8;
	// begin inline asm
	lop3.b32 %r1952, %r815, %r1954, %r1933, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1956, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1957, %r1933, %r1956;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1960, %r1952, %r1957;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1963, %r826, %r1954, %r1944, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1967, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1968, %r1944, %r1967;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1971, %r1963, %r1968;
	// end inline asm
	// begin inline asm
	mov.b32 %r1979, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1990, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1978, %r16217, -2004318072;
	// begin inline asm
	lop3.b32 %r1976, %r815, %r1978, %r1979, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1980, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1981, %r1979, %r1980;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1984, %r1976, %r1981;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1987, %r826, %r1978, %r1990, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1991, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1992, %r1990, %r1991;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1995, %r1987, %r1992;
	// end inline asm
	shr.u32 	%r2000, %r1978, 8;
	// begin inline asm
	lop3.b32 %r1998, %r815, %r2000, %r1979, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2002, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2003, %r1979, %r2002;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2006, %r1998, %r2003;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2009, %r826, %r2000, %r1990, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2013, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2014, %r1990, %r2013;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2017, %r2009, %r2014;
	// end inline asm
	// begin inline asm
	mov.b32 %r2025, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2036, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2024, %r16226, -2004318072;
	// begin inline asm
	lop3.b32 %r2022, %r815, %r2024, %r2025, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2026, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2027, %r2025, %r2026;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2030, %r2022, %r2027;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2033, %r826, %r2024, %r2036, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2037, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2038, %r2036, %r2037;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2041, %r2033, %r2038;
	// end inline asm
	shr.u32 	%r2046, %r2024, 8;
	// begin inline asm
	lop3.b32 %r2044, %r815, %r2046, %r2025, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2048, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2049, %r2025, %r2048;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2052, %r2044, %r2049;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2055, %r826, %r2046, %r2036, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2059, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2060, %r2036, %r2059;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2063, %r2055, %r2060;
	// end inline asm
	// begin inline asm
	mov.b32 %r2071, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2082, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2070, %r16227, -2004318072;
	// begin inline asm
	lop3.b32 %r2068, %r815, %r2070, %r2071, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2072, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2073, %r2071, %r2072;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2076, %r2068, %r2073;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2079, %r826, %r2070, %r2082, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2083, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2084, %r2082, %r2083;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2087, %r2079, %r2084;
	// end inline asm
	shr.u32 	%r2092, %r2070, 8;
	// begin inline asm
	lop3.b32 %r2090, %r815, %r2092, %r2071, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2094, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2095, %r2071, %r2094;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2098, %r2090, %r2095;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2101, %r826, %r2092, %r2082, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2105, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2106, %r2082, %r2105;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2109, %r2101, %r2106;
	// end inline asm
	// begin inline asm
	mov.b32 %r2117, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2128, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2116, %r16228, -2004318072;
	// begin inline asm
	lop3.b32 %r2114, %r815, %r2116, %r2117, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2118, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2119, %r2117, %r2118;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2122, %r2114, %r2119;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2125, %r826, %r2116, %r2128, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2129, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2130, %r2128, %r2129;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2133, %r2125, %r2130;
	// end inline asm
	shr.u32 	%r2138, %r2116, 8;
	// begin inline asm
	lop3.b32 %r2136, %r815, %r2138, %r2117, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2140, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2141, %r2117, %r2140;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2144, %r2136, %r2141;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2147, %r826, %r2138, %r2128, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2151, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2152, %r2128, %r2151;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2155, %r2147, %r2152;
	// end inline asm
	// begin inline asm
	mov.b32 %r2163, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2174, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2162, %r16229, -2004318072;
	// begin inline asm
	lop3.b32 %r2160, %r815, %r2162, %r2163, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2164, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2165, %r2163, %r2164;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2168, %r2160, %r2165;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2171, %r826, %r2162, %r2174, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2175, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2176, %r2174, %r2175;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2179, %r2171, %r2176;
	// end inline asm
	shr.u32 	%r2184, %r2162, 8;
	// begin inline asm
	lop3.b32 %r2182, %r815, %r2184, %r2163, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2186, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2187, %r2163, %r2186;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2190, %r2182, %r2187;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2193, %r826, %r2184, %r2174, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2197, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2198, %r2174, %r2197;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2201, %r2193, %r2198;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2204, %r307;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2206, %r2204, %r1846, %r1708;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2210, %r307;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2212, %r2210, %r1857, %r1712;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2216, %r307;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2218, %r2216, %r1868, %r1716;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2222, %r307;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2224, %r2222, %r1879, %r1720;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2228, %r307;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2230, %r2228, %r1892, %r1724;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2234, %r307;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2236, %r2234, %r1903, %r1728;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2240, %r307;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2242, %r2240, %r1914, %r1732;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2246, %r307;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2248, %r2246, %r1925, %r1736;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2252, %r307;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2254, %r2252, %r1938, %r1740;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2258, %r307;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2260, %r2258, %r1949, %r1744;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2264, %r307;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2266, %r2264, %r1960, %r1748;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2270, %r307;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2272, %r2270, %r1971, %r1752;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2276, %r307;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2278, %r2276, %r1984, %r1756;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2282, %r307;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2284, %r2282, %r1995, %r1760;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2288, %r307;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2290, %r2288, %r2006, %r1764;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2294, %r307;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2296, %r2294, %r2017, %r1768;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2300, %r325;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2302, %r2300, %r2030, %r1772;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2306, %r325;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2308, %r2306, %r2041, %r1776;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2312, %r325;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2314, %r2312, %r2052, %r1780;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2318, %r325;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2320, %r2318, %r2063, %r1784;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2324, %r325;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2326, %r2324, %r2076, %r1788;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2330, %r325;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2332, %r2330, %r2087, %r1792;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2336, %r325;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2338, %r2336, %r2098, %r1796;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2342, %r325;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2344, %r2342, %r2109, %r1800;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2348, %r325;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2350, %r2348, %r2122, %r1804;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2354, %r325;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2356, %r2354, %r2133, %r1808;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2360, %r325;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2362, %r2360, %r2144, %r1812;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2366, %r325;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2368, %r2366, %r2155, %r1816;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2372, %r325;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2374, %r2372, %r2168, %r1820;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2378, %r325;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2380, %r2378, %r2179, %r1824;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2384, %r325;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2386, %r2384, %r2190, %r1828;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2390, %r325;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2392, %r2390, %r2201, %r1832;
	// end inline asm
	// begin inline asm
	mov.b32 %r2401, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2412, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2400, %r16218, -2004318072;
	// begin inline asm
	lop3.b32 %r2398, %r815, %r2400, %r2401, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2402, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2403, %r2401, %r2402;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2406, %r2398, %r2403;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2409, %r826, %r2400, %r2412, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2413, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2414, %r2412, %r2413;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2417, %r2409, %r2414;
	// end inline asm
	shr.u32 	%r2422, %r2400, 8;
	// begin inline asm
	lop3.b32 %r2420, %r815, %r2422, %r2401, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2424, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2425, %r2401, %r2424;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2428, %r2420, %r2425;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2431, %r826, %r2422, %r2412, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2435, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2436, %r2412, %r2435;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2439, %r2431, %r2436;
	// end inline asm
	// begin inline asm
	mov.b32 %r2447, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2458, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2446, %r16219, -2004318072;
	// begin inline asm
	lop3.b32 %r2444, %r815, %r2446, %r2447, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2448, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2449, %r2447, %r2448;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2452, %r2444, %r2449;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2455, %r826, %r2446, %r2458, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2459, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2460, %r2458, %r2459;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2463, %r2455, %r2460;
	// end inline asm
	shr.u32 	%r2468, %r2446, 8;
	// begin inline asm
	lop3.b32 %r2466, %r815, %r2468, %r2447, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2470, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2471, %r2447, %r2470;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2474, %r2466, %r2471;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2477, %r826, %r2468, %r2458, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2481, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2482, %r2458, %r2481;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2485, %r2477, %r2482;
	// end inline asm
	// begin inline asm
	mov.b32 %r2493, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2504, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2492, %r16220, -2004318072;
	// begin inline asm
	lop3.b32 %r2490, %r815, %r2492, %r2493, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2494, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2495, %r2493, %r2494;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2498, %r2490, %r2495;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2501, %r826, %r2492, %r2504, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2505, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2506, %r2504, %r2505;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2509, %r2501, %r2506;
	// end inline asm
	shr.u32 	%r2514, %r2492, 8;
	// begin inline asm
	lop3.b32 %r2512, %r815, %r2514, %r2493, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2516, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2517, %r2493, %r2516;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2520, %r2512, %r2517;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2523, %r826, %r2514, %r2504, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2527, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2528, %r2504, %r2527;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2531, %r2523, %r2528;
	// end inline asm
	// begin inline asm
	mov.b32 %r2539, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2550, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2538, %r16221, -2004318072;
	// begin inline asm
	lop3.b32 %r2536, %r815, %r2538, %r2539, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2540, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2541, %r2539, %r2540;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2544, %r2536, %r2541;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2547, %r826, %r2538, %r2550, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2551, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2552, %r2550, %r2551;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2555, %r2547, %r2552;
	// end inline asm
	shr.u32 	%r2560, %r2538, 8;
	// begin inline asm
	lop3.b32 %r2558, %r815, %r2560, %r2539, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2562, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2563, %r2539, %r2562;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2566, %r2558, %r2563;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2569, %r826, %r2560, %r2550, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2573, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2574, %r2550, %r2573;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2577, %r2569, %r2574;
	// end inline asm
	// begin inline asm
	mov.b32 %r2585, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2596, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2584, %r16230, -2004318072;
	// begin inline asm
	lop3.b32 %r2582, %r815, %r2584, %r2585, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2586, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2587, %r2585, %r2586;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2590, %r2582, %r2587;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2593, %r826, %r2584, %r2596, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2597, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2598, %r2596, %r2597;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2601, %r2593, %r2598;
	// end inline asm
	shr.u32 	%r2606, %r2584, 8;
	// begin inline asm
	lop3.b32 %r2604, %r815, %r2606, %r2585, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2608, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2609, %r2585, %r2608;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2612, %r2604, %r2609;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2615, %r826, %r2606, %r2596, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2619, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2620, %r2596, %r2619;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2623, %r2615, %r2620;
	// end inline asm
	// begin inline asm
	mov.b32 %r2631, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2642, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2630, %r16231, -2004318072;
	// begin inline asm
	lop3.b32 %r2628, %r815, %r2630, %r2631, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2632, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2633, %r2631, %r2632;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2636, %r2628, %r2633;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2639, %r826, %r2630, %r2642, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2643, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2644, %r2642, %r2643;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2647, %r2639, %r2644;
	// end inline asm
	shr.u32 	%r2652, %r2630, 8;
	// begin inline asm
	lop3.b32 %r2650, %r815, %r2652, %r2631, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2654, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2655, %r2631, %r2654;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2658, %r2650, %r2655;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2661, %r826, %r2652, %r2642, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2665, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2666, %r2642, %r2665;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2669, %r2661, %r2666;
	// end inline asm
	// begin inline asm
	mov.b32 %r2677, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2688, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2676, %r16232, -2004318072;
	// begin inline asm
	lop3.b32 %r2674, %r815, %r2676, %r2677, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2678, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2679, %r2677, %r2678;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2682, %r2674, %r2679;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2685, %r826, %r2676, %r2688, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2689, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2690, %r2688, %r2689;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2693, %r2685, %r2690;
	// end inline asm
	shr.u32 	%r2698, %r2676, 8;
	// begin inline asm
	lop3.b32 %r2696, %r815, %r2698, %r2677, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2700, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2701, %r2677, %r2700;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2704, %r2696, %r2701;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2707, %r826, %r2698, %r2688, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2711, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2712, %r2688, %r2711;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2715, %r2707, %r2712;
	// end inline asm
	// begin inline asm
	mov.b32 %r2723, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2734, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2722, %r16233, -2004318072;
	// begin inline asm
	lop3.b32 %r2720, %r815, %r2722, %r2723, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2724, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2725, %r2723, %r2724;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2728, %r2720, %r2725;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2731, %r826, %r2722, %r2734, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2735, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2736, %r2734, %r2735;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2739, %r2731, %r2736;
	// end inline asm
	shr.u32 	%r2744, %r2722, 8;
	// begin inline asm
	lop3.b32 %r2742, %r815, %r2744, %r2723, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2746, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2747, %r2723, %r2746;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2750, %r2742, %r2747;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2753, %r826, %r2744, %r2734, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2757, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2758, %r2734, %r2757;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2761, %r2753, %r2758;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2899, %r343, %r2406, %r2206;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2896, %r343, %r2417, %r2212;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2908, %r343, %r2428, %r2218;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2905, %r343, %r2439, %r2224;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2917, %r343, %r2452, %r2230;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2914, %r343, %r2463, %r2236;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2926, %r343, %r2474, %r2242;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2923, %r343, %r2485, %r2248;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2935, %r343, %r2498, %r2254;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2932, %r343, %r2509, %r2260;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2944, %r343, %r2520, %r2266;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2941, %r343, %r2531, %r2272;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2953, %r343, %r2544, %r2278;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2950, %r343, %r2555, %r2284;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2962, %r343, %r2566, %r2290;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2959, %r343, %r2577, %r2296;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2971, %r361, %r2590, %r2302;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2968, %r361, %r2601, %r2308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2980, %r361, %r2612, %r2314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2977, %r361, %r2623, %r2320;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2989, %r361, %r2636, %r2326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2986, %r361, %r2647, %r2332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2998, %r361, %r2658, %r2338;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2995, %r361, %r2669, %r2344;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3007, %r361, %r2682, %r2350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3004, %r361, %r2693, %r2356;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3016, %r361, %r2704, %r2362;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3013, %r361, %r2715, %r2368;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3025, %r361, %r2728, %r2374;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3022, %r361, %r2739, %r2380;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3034, %r361, %r2750, %r2386;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3031, %r361, %r2761, %r2392;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2892, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2894, %r2892, %r2896;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2897, %r425, %r2899, %r2894;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2901, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2903, %r2901, %r2905;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2906, %r425, %r2908, %r2903;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2910, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2912, %r2910, %r2914;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2915, %r425, %r2917, %r2912;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2919, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2921, %r2919, %r2923;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2924, %r425, %r2926, %r2921;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2928, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2930, %r2928, %r2932;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2933, %r425, %r2935, %r2930;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2937, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2939, %r2937, %r2941;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2942, %r425, %r2944, %r2939;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2946, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2948, %r2946, %r2950;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2951, %r425, %r2953, %r2948;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2955, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2957, %r2955, %r2959;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2960, %r425, %r2962, %r2957;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2964, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2966, %r2964, %r2968;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2969, %r428, %r2971, %r2966;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2973, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2975, %r2973, %r2977;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2978, %r428, %r2980, %r2975;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2982, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2984, %r2982, %r2986;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2987, %r428, %r2989, %r2984;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2991, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2993, %r2991, %r2995;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2996, %r428, %r2998, %r2993;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3000, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3002, %r3000, %r3004;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3005, %r428, %r3007, %r3002;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3009, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3011, %r3009, %r3013;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3014, %r428, %r3016, %r3011;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3018, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3020, %r3018, %r3022;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3023, %r428, %r3025, %r3020;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3027, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3029, %r3027, %r3031;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3032, %r428, %r3034, %r3029;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3036, %r431, %r2899;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3039, %r425, %r2896, %r3036;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3043, %r431, %r2908;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3046, %r425, %r2905, %r3043;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3050, %r431, %r2917;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3053, %r425, %r2914, %r3050;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3057, %r431, %r2926;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3060, %r425, %r2923, %r3057;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3064, %r431, %r2935;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3067, %r425, %r2932, %r3064;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3071, %r431, %r2944;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3074, %r425, %r2941, %r3071;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3078, %r431, %r2953;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3081, %r425, %r2950, %r3078;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3085, %r431, %r2962;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3088, %r425, %r2959, %r3085;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3092, %r434, %r2971;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3095, %r428, %r2968, %r3092;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3099, %r434, %r2980;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3102, %r428, %r2977, %r3099;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3106, %r434, %r2989;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3109, %r428, %r2986, %r3106;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3113, %r434, %r2998;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3116, %r428, %r2995, %r3113;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3120, %r434, %r3007;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3123, %r428, %r3004, %r3120;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3127, %r434, %r3016;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3130, %r428, %r3013, %r3127;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3134, %r434, %r3025;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3137, %r428, %r3022, %r3134;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3141, %r434, %r3034;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3144, %r428, %r3031, %r3141;
	// end inline asm
	mov.u32 	%r15171, 0;
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3315, %r3312}, {%r473, %r479, %r476, %r482}, {%r2897, %r3039}, {%r15171, %r15171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3324, %r3321}, {%r473, %r479, %r476, %r482}, {%r2906, %r3046}, {%r15171, %r15171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3333, %r3330}, {%r473, %r479, %r476, %r482}, {%r2915, %r3053}, {%r15171, %r15171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3342, %r3339}, {%r473, %r479, %r476, %r482}, {%r2924, %r3060}, {%r15171, %r15171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3351, %r3348}, {%r473, %r479, %r476, %r482}, {%r2933, %r3067}, {%r15171, %r15171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3360, %r3357}, {%r473, %r479, %r476, %r482}, {%r2942, %r3074}, {%r15171, %r15171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3369, %r3366}, {%r473, %r479, %r476, %r482}, {%r2951, %r3081}, {%r15171, %r15171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3378, %r3375}, {%r473, %r479, %r476, %r482}, {%r2960, %r3088}, {%r15171, %r15171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3387, %r3384}, {%r473, %r479, %r476, %r482}, {%r2969, %r3095}, {%r15171, %r15171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3396, %r3393}, {%r473, %r479, %r476, %r482}, {%r2978, %r3102}, {%r15171, %r15171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3405, %r3402}, {%r473, %r479, %r476, %r482}, {%r2987, %r3109}, {%r15171, %r15171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3414, %r3411}, {%r473, %r479, %r476, %r482}, {%r2996, %r3116}, {%r15171, %r15171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3423, %r3420}, {%r473, %r479, %r476, %r482}, {%r3005, %r3123}, {%r15171, %r15171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3432, %r3429}, {%r473, %r479, %r476, %r482}, {%r3014, %r3130}, {%r15171, %r15171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3441, %r3438}, {%r473, %r479, %r476, %r482}, {%r3023, %r3137}, {%r15171, %r15171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3450, %r3447}, {%r473, %r479, %r476, %r482}, {%r3032, %r3144}, {%r15171, %r15171};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3308, %r523;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3310, %r3308, %r3312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3313, %r520, %r3315, %r3310;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3317, %r523;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3319, %r3317, %r3321;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3322, %r520, %r3324, %r3319;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3326, %r523;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3328, %r3326, %r3330;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3331, %r520, %r3333, %r3328;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3335, %r523;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3337, %r3335, %r3339;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3340, %r520, %r3342, %r3337;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3344, %r523;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3346, %r3344, %r3348;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3349, %r520, %r3351, %r3346;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3353, %r523;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3355, %r3353, %r3357;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3358, %r520, %r3360, %r3355;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3362, %r523;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3364, %r3362, %r3366;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3367, %r520, %r3369, %r3364;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3371, %r523;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3373, %r3371, %r3375;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3376, %r520, %r3378, %r3373;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3380, %r523;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3382, %r3380, %r3384;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3385, %r520, %r3387, %r3382;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3389, %r523;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3391, %r3389, %r3393;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3394, %r520, %r3396, %r3391;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3398, %r523;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3400, %r3398, %r3402;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3403, %r520, %r3405, %r3400;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3407, %r523;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3409, %r3407, %r3411;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3412, %r520, %r3414, %r3409;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3416, %r523;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3418, %r3416, %r3420;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3421, %r520, %r3423, %r3418;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3425, %r523;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3427, %r3425, %r3429;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3430, %r520, %r3432, %r3427;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3434, %r523;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3436, %r3434, %r3438;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3439, %r520, %r3441, %r3436;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3443, %r523;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3445, %r3443, %r3447;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3448, %r520, %r3450, %r3445;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3452, %r523, %r3315;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3455, %r520, %r3312, %r3452;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3459, %r523, %r3324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3462, %r520, %r3321, %r3459;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3466, %r523, %r3333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3469, %r520, %r3330, %r3466;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3473, %r523, %r3342;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3476, %r520, %r3339, %r3473;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3480, %r523, %r3351;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3483, %r520, %r3348, %r3480;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3487, %r523, %r3360;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3490, %r520, %r3357, %r3487;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3494, %r523, %r3369;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3497, %r520, %r3366, %r3494;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3501, %r523, %r3378;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3504, %r520, %r3375, %r3501;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3508, %r523, %r3387;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3511, %r520, %r3384, %r3508;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3515, %r523, %r3396;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3518, %r520, %r3393, %r3515;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3522, %r523, %r3405;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3525, %r520, %r3402, %r3522;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3529, %r523, %r3414;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3532, %r520, %r3411, %r3529;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3536, %r523, %r3423;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3539, %r520, %r3420, %r3536;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3543, %r523, %r3432;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3546, %r520, %r3429, %r3543;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3550, %r523, %r3441;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3553, %r520, %r3438, %r3550;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3557, %r523, %r3450;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3560, %r520, %r3447, %r3557;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3853, %r3856}, {%r563, %r569, %r566, %r572}, {%r3313, %r3455}, {%r15171, %r15171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3859, %r3862}, {%r563, %r569, %r566, %r572}, {%r3322, %r3462}, {%r15171, %r15171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3865, %r3868}, {%r563, %r569, %r566, %r572}, {%r3331, %r3469}, {%r15171, %r15171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3871, %r3874}, {%r563, %r569, %r566, %r572}, {%r3340, %r3476}, {%r15171, %r15171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3877, %r3880}, {%r563, %r569, %r566, %r572}, {%r3349, %r3483}, {%r15171, %r15171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3883, %r3886}, {%r563, %r569, %r566, %r572}, {%r3358, %r3490}, {%r15171, %r15171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3889, %r3892}, {%r563, %r569, %r566, %r572}, {%r3367, %r3497}, {%r15171, %r15171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3895, %r3898}, {%r563, %r569, %r566, %r572}, {%r3376, %r3504}, {%r15171, %r15171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3854, %r3857}, {%r563, %r569, %r566, %r572}, {%r3385, %r3511}, {%r15171, %r15171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3860, %r3863}, {%r563, %r569, %r566, %r572}, {%r3394, %r3518}, {%r15171, %r15171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3866, %r3869}, {%r563, %r569, %r566, %r572}, {%r3403, %r3525}, {%r15171, %r15171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3872, %r3875}, {%r563, %r569, %r566, %r572}, {%r3412, %r3532}, {%r15171, %r15171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3878, %r3881}, {%r563, %r569, %r566, %r572}, {%r3421, %r3539}, {%r15171, %r15171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3884, %r3887}, {%r563, %r569, %r566, %r572}, {%r3430, %r3546}, {%r15171, %r15171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3890, %r3893}, {%r563, %r569, %r566, %r572}, {%r3439, %r3553}, {%r15171, %r15171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3896, %r3899}, {%r563, %r569, %r566, %r572}, {%r3448, %r3560}, {%r15171, %r15171};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3852, %r3853, %r3854;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3855, %r3856, %r3857;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3858, %r3859, %r3860;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3861, %r3862, %r3863;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3864, %r3865, %r3866;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3867, %r3868, %r3869;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3870, %r3871, %r3872;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3873, %r3874, %r3875;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3876, %r3877, %r3878;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3879, %r3880, %r3881;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3882, %r3883, %r3884;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3885, %r3886, %r3887;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3888, %r3889, %r3890;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3891, %r3892, %r3893;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3894, %r3895, %r3896;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3897, %r3898, %r3899;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3900, %r3853, %r3854;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3903, %r3856, %r3857;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3906, %r3859, %r3860;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3909, %r3862, %r3863;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3912, %r3865, %r3866;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3915, %r3868, %r3869;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3918, %r3871, %r3872;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3921, %r3874, %r3875;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3924, %r3877, %r3878;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3927, %r3880, %r3881;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3930, %r3883, %r3884;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3933, %r3886, %r3887;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3936, %r3889, %r3890;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3939, %r3892, %r3893;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3942, %r3895, %r3896;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3945, %r3898, %r3899;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3948, %r212, %r3852;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3951, %r212, %r3855;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3954, %r212, %r3858;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3957, %r212, %r3861;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3960, %r212, %r3864;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3963, %r212, %r3867;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3966, %r212, %r3870;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3969, %r212, %r3873;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3972, %r212, %r3876;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3975, %r212, %r3879;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3978, %r212, %r3882;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3981, %r212, %r3885;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3984, %r212, %r3888;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3987, %r212, %r3891;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3990, %r212, %r3894;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3993, %r212, %r3897;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3996, %r213, %r3900;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3999, %r213, %r3903;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4002, %r213, %r3906;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4005, %r213, %r3909;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4008, %r213, %r3912;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4011, %r213, %r3915;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4014, %r213, %r3918;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4017, %r213, %r3921;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4020, %r213, %r3924;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4023, %r213, %r3927;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4026, %r213, %r3930;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4029, %r213, %r3933;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4032, %r213, %r3936;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4035, %r213, %r3939;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4038, %r213, %r3942;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4041, %r213, %r3945;
	// end inline asm
	// begin inline asm
	mov.b32 %r4044, {%rs2307, %rs2307};
	// end inline asm
	mov.u16 	%rs408, 18176;
	// begin inline asm
	mov.b32 %r4045, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4046, %r3948, %r4044;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4049, %r4046, %r4045;
	// end inline asm
	// begin inline asm
	mov.b32 %r4052, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4053, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4054, %r3951, %r4052;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4057, %r4054, %r4053;
	// end inline asm
	// begin inline asm
	mov.b32 %r4060, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4061, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4062, %r3954, %r4060;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4065, %r4062, %r4061;
	// end inline asm
	// begin inline asm
	mov.b32 %r4068, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4069, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4070, %r3957, %r4068;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4073, %r4070, %r4069;
	// end inline asm
	// begin inline asm
	mov.b32 %r4076, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4077, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4078, %r3960, %r4076;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4081, %r4078, %r4077;
	// end inline asm
	// begin inline asm
	mov.b32 %r4084, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4085, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4086, %r3963, %r4084;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4089, %r4086, %r4085;
	// end inline asm
	// begin inline asm
	mov.b32 %r4092, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4093, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4094, %r3966, %r4092;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4097, %r4094, %r4093;
	// end inline asm
	// begin inline asm
	mov.b32 %r4100, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4101, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4102, %r3969, %r4100;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4105, %r4102, %r4101;
	// end inline asm
	// begin inline asm
	mov.b32 %r4108, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4109, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4110, %r3972, %r4108;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4113, %r4110, %r4109;
	// end inline asm
	// begin inline asm
	mov.b32 %r4116, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4117, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4118, %r3975, %r4116;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4121, %r4118, %r4117;
	// end inline asm
	// begin inline asm
	mov.b32 %r4124, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4125, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4126, %r3978, %r4124;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4129, %r4126, %r4125;
	// end inline asm
	// begin inline asm
	mov.b32 %r4132, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4133, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4134, %r3981, %r4132;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4137, %r4134, %r4133;
	// end inline asm
	// begin inline asm
	mov.b32 %r4140, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4141, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4142, %r3984, %r4140;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4145, %r4142, %r4141;
	// end inline asm
	// begin inline asm
	mov.b32 %r4148, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4149, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4150, %r3987, %r4148;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4153, %r4150, %r4149;
	// end inline asm
	// begin inline asm
	mov.b32 %r4156, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4157, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4158, %r3990, %r4156;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4161, %r4158, %r4157;
	// end inline asm
	// begin inline asm
	mov.b32 %r4164, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4165, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4166, %r3993, %r4164;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4169, %r4166, %r4165;
	// end inline asm
	// begin inline asm
	mov.b32 %r4172, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4173, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4174, %r3996, %r4172;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4177, %r4174, %r4173;
	// end inline asm
	// begin inline asm
	mov.b32 %r4180, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4181, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4182, %r3999, %r4180;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4185, %r4182, %r4181;
	// end inline asm
	// begin inline asm
	mov.b32 %r4188, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4189, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4190, %r4002, %r4188;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4193, %r4190, %r4189;
	// end inline asm
	// begin inline asm
	mov.b32 %r4196, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4197, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4198, %r4005, %r4196;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4201, %r4198, %r4197;
	// end inline asm
	// begin inline asm
	mov.b32 %r4204, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4205, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4206, %r4008, %r4204;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4209, %r4206, %r4205;
	// end inline asm
	// begin inline asm
	mov.b32 %r4212, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4213, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4214, %r4011, %r4212;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4217, %r4214, %r4213;
	// end inline asm
	// begin inline asm
	mov.b32 %r4220, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4221, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4222, %r4014, %r4220;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4225, %r4222, %r4221;
	// end inline asm
	// begin inline asm
	mov.b32 %r4228, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4229, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4230, %r4017, %r4228;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4233, %r4230, %r4229;
	// end inline asm
	// begin inline asm
	mov.b32 %r4236, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4237, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4238, %r4020, %r4236;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4241, %r4238, %r4237;
	// end inline asm
	// begin inline asm
	mov.b32 %r4244, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4245, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4246, %r4023, %r4244;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4249, %r4246, %r4245;
	// end inline asm
	// begin inline asm
	mov.b32 %r4252, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4253, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4254, %r4026, %r4252;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4257, %r4254, %r4253;
	// end inline asm
	// begin inline asm
	mov.b32 %r4260, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4261, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4262, %r4029, %r4260;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4265, %r4262, %r4261;
	// end inline asm
	// begin inline asm
	mov.b32 %r4268, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4269, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4270, %r4032, %r4268;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4273, %r4270, %r4269;
	// end inline asm
	// begin inline asm
	mov.b32 %r4276, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4277, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4278, %r4035, %r4276;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4281, %r4278, %r4277;
	// end inline asm
	// begin inline asm
	mov.b32 %r4284, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4285, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4286, %r4038, %r4284;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4289, %r4286, %r4285;
	// end inline asm
	// begin inline asm
	mov.b32 %r4292, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4293, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4294, %r4041, %r4292;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4297, %r4294, %r4293;
	// end inline asm
	// begin inline asm
	mov.b32 %r4303, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4301, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4302, %r4303, %r4301;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4305, %r4049, %r4302;
	// end inline asm
	// begin inline asm
	mov.b32 %r4308, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4309, %r4303, %r4308;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4312, %r4057, %r4309;
	// end inline asm
	// begin inline asm
	mov.b32 %r4315, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4316, %r4303, %r4315;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4319, %r4065, %r4316;
	// end inline asm
	// begin inline asm
	mov.b32 %r4322, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4323, %r4303, %r4322;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4326, %r4073, %r4323;
	// end inline asm
	mov.u32 	%r4332, 25152;
	// begin inline asm
	prmt.b32 %r4329, %r4305, %r4319, %r4332;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4333, %r4312, %r4326, %r4332;
	// end inline asm
	shl.b32 	%r4340, %r4333, 4;
	mov.u32 	%r4338, 252645135;
	// begin inline asm
	lop3.b32 %r4337, %r4338, %r4329, %r4340, 202;
	// end inline asm
	xor.b32  	%r16084, %r4337, -2004318072;
	// begin inline asm
	mov.b32 %r4344, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4342, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4343, %r4344, %r4342;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4346, %r4081, %r4343;
	// end inline asm
	// begin inline asm
	mov.b32 %r4349, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4350, %r4344, %r4349;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4353, %r4089, %r4350;
	// end inline asm
	// begin inline asm
	mov.b32 %r4356, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4357, %r4344, %r4356;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4360, %r4097, %r4357;
	// end inline asm
	// begin inline asm
	mov.b32 %r4363, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4364, %r4344, %r4363;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4367, %r4105, %r4364;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4370, %r4346, %r4360, %r4332;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4374, %r4353, %r4367, %r4332;
	// end inline asm
	shl.b32 	%r4381, %r4374, 4;
	// begin inline asm
	lop3.b32 %r4378, %r4338, %r4370, %r4381, 202;
	// end inline asm
	xor.b32  	%r16085, %r4378, -2004318072;
	// begin inline asm
	mov.b32 %r4385, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4383, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4384, %r4385, %r4383;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4387, %r4113, %r4384;
	// end inline asm
	// begin inline asm
	mov.b32 %r4390, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4391, %r4385, %r4390;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4394, %r4121, %r4391;
	// end inline asm
	// begin inline asm
	mov.b32 %r4397, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4398, %r4385, %r4397;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4401, %r4129, %r4398;
	// end inline asm
	// begin inline asm
	mov.b32 %r4404, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4405, %r4385, %r4404;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4408, %r4137, %r4405;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4411, %r4387, %r4401, %r4332;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4415, %r4394, %r4408, %r4332;
	// end inline asm
	shl.b32 	%r4422, %r4415, 4;
	// begin inline asm
	lop3.b32 %r4419, %r4338, %r4411, %r4422, 202;
	// end inline asm
	xor.b32  	%r16086, %r4419, -2004318072;
	// begin inline asm
	mov.b32 %r4426, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4424, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4425, %r4426, %r4424;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4428, %r4145, %r4425;
	// end inline asm
	// begin inline asm
	mov.b32 %r4431, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4432, %r4426, %r4431;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4435, %r4153, %r4432;
	// end inline asm
	// begin inline asm
	mov.b32 %r4438, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4439, %r4426, %r4438;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4442, %r4161, %r4439;
	// end inline asm
	// begin inline asm
	mov.b32 %r4445, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4446, %r4426, %r4445;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4449, %r4169, %r4446;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4452, %r4428, %r4442, %r4332;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4456, %r4435, %r4449, %r4332;
	// end inline asm
	shl.b32 	%r4463, %r4456, 4;
	// begin inline asm
	lop3.b32 %r4460, %r4338, %r4452, %r4463, 202;
	// end inline asm
	xor.b32  	%r16087, %r4460, -2004318072;
	// begin inline asm
	mov.b32 %r4467, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4465, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4466, %r4467, %r4465;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4469, %r4177, %r4466;
	// end inline asm
	// begin inline asm
	mov.b32 %r4472, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4473, %r4467, %r4472;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4476, %r4185, %r4473;
	// end inline asm
	// begin inline asm
	mov.b32 %r4479, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4480, %r4467, %r4479;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4483, %r4193, %r4480;
	// end inline asm
	// begin inline asm
	mov.b32 %r4486, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4487, %r4467, %r4486;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4490, %r4201, %r4487;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4493, %r4469, %r4483, %r4332;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4497, %r4476, %r4490, %r4332;
	// end inline asm
	shl.b32 	%r4504, %r4497, 4;
	// begin inline asm
	lop3.b32 %r4501, %r4338, %r4493, %r4504, 202;
	// end inline asm
	xor.b32  	%r16088, %r4501, -2004318072;
	// begin inline asm
	mov.b32 %r4508, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4506, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4507, %r4508, %r4506;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4510, %r4209, %r4507;
	// end inline asm
	// begin inline asm
	mov.b32 %r4513, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4514, %r4508, %r4513;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4517, %r4217, %r4514;
	// end inline asm
	// begin inline asm
	mov.b32 %r4520, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4521, %r4508, %r4520;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4524, %r4225, %r4521;
	// end inline asm
	// begin inline asm
	mov.b32 %r4527, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4528, %r4508, %r4527;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4531, %r4233, %r4528;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4534, %r4510, %r4524, %r4332;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4538, %r4517, %r4531, %r4332;
	// end inline asm
	shl.b32 	%r4545, %r4538, 4;
	// begin inline asm
	lop3.b32 %r4542, %r4338, %r4534, %r4545, 202;
	// end inline asm
	xor.b32  	%r16089, %r4542, -2004318072;
	// begin inline asm
	mov.b32 %r4549, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4547, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4548, %r4549, %r4547;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4551, %r4241, %r4548;
	// end inline asm
	// begin inline asm
	mov.b32 %r4554, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4555, %r4549, %r4554;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4558, %r4249, %r4555;
	// end inline asm
	// begin inline asm
	mov.b32 %r4561, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4562, %r4549, %r4561;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4565, %r4257, %r4562;
	// end inline asm
	// begin inline asm
	mov.b32 %r4568, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4569, %r4549, %r4568;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4572, %r4265, %r4569;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4575, %r4551, %r4565, %r4332;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4579, %r4558, %r4572, %r4332;
	// end inline asm
	shl.b32 	%r4586, %r4579, 4;
	// begin inline asm
	lop3.b32 %r4583, %r4338, %r4575, %r4586, 202;
	// end inline asm
	xor.b32  	%r16090, %r4583, -2004318072;
	// begin inline asm
	mov.b32 %r4590, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4588, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4589, %r4590, %r4588;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4592, %r4273, %r4589;
	// end inline asm
	// begin inline asm
	mov.b32 %r4595, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4596, %r4590, %r4595;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4599, %r4281, %r4596;
	// end inline asm
	// begin inline asm
	mov.b32 %r4602, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4603, %r4590, %r4602;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4606, %r4289, %r4603;
	// end inline asm
	// begin inline asm
	mov.b32 %r4609, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4610, %r4590, %r4609;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4613, %r4297, %r4610;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4616, %r4592, %r4606, %r4332;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4620, %r4599, %r4613, %r4332;
	// end inline asm
	shl.b32 	%r4627, %r4620, 4;
	// begin inline asm
	lop3.b32 %r4624, %r4338, %r4616, %r4627, 202;
	// end inline asm
	xor.b32  	%r16091, %r4624, -2004318072;
	add.s64 	%rd82, %rd94, %rd24;
	st.shared.u32 	[%rd82], %r16084;
	add.s64 	%rd83, %rd94, %rd23;
	st.shared.u32 	[%rd83], %r16085;
	add.s64 	%rd84, %rd94, %rd22;
	st.shared.u32 	[%rd84], %r16086;
	add.s64 	%rd85, %rd94, %rd21;
	st.shared.u32 	[%rd85], %r16087;
	add.s64 	%rd86, %rd94, %rd20;
	st.shared.u32 	[%rd86], %r16088;
	add.s64 	%rd87, %rd94, %rd19;
	st.shared.u32 	[%rd87], %r16089;
	add.s64 	%rd88, %rd94, %rd18;
	st.shared.u32 	[%rd88], %r16090;
	add.s64 	%rd89, %rd94, %rd17;
	st.shared.u32 	[%rd89], %r16091;
	ld.shared.u32 	%r16210, [%rd74];
	ld.shared.u32 	%r16211, [%rd75];
	ld.shared.u32 	%r16212, [%rd76];
	ld.shared.u32 	%r16213, [%rd77];
	ld.shared.u32 	%r16222, [%rd78];
	ld.shared.u32 	%r16223, [%rd79];
	ld.shared.u32 	%r16224, [%rd80];
	ld.shared.u32 	%r16225, [%rd81];
	// begin inline asm
	mov.b32 %r4633, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4644, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4632, %r16210, -2004318072;
	// begin inline asm
	lop3.b32 %r4630, %r815, %r4632, %r4633, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4634, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4635, %r4633, %r4634;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4638, %r4630, %r4635;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4641, %r826, %r4632, %r4644, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4645, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4646, %r4644, %r4645;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4649, %r4641, %r4646;
	// end inline asm
	shr.u32 	%r4654, %r4632, 8;
	// begin inline asm
	lop3.b32 %r4652, %r815, %r4654, %r4633, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4656, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4657, %r4633, %r4656;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4660, %r4652, %r4657;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4663, %r826, %r4654, %r4644, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4667, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4668, %r4644, %r4667;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4671, %r4663, %r4668;
	// end inline asm
	// begin inline asm
	mov.b32 %r4679, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4690, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4678, %r16211, -2004318072;
	// begin inline asm
	lop3.b32 %r4676, %r815, %r4678, %r4679, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4680, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4681, %r4679, %r4680;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4684, %r4676, %r4681;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4687, %r826, %r4678, %r4690, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4691, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4692, %r4690, %r4691;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4695, %r4687, %r4692;
	// end inline asm
	shr.u32 	%r4700, %r4678, 8;
	// begin inline asm
	lop3.b32 %r4698, %r815, %r4700, %r4679, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4702, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4703, %r4679, %r4702;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4706, %r4698, %r4703;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4709, %r826, %r4700, %r4690, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4713, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4714, %r4690, %r4713;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4717, %r4709, %r4714;
	// end inline asm
	// begin inline asm
	mov.b32 %r4725, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4736, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4724, %r16212, -2004318072;
	// begin inline asm
	lop3.b32 %r4722, %r815, %r4724, %r4725, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4726, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4727, %r4725, %r4726;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4730, %r4722, %r4727;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4733, %r826, %r4724, %r4736, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4737, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4738, %r4736, %r4737;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4741, %r4733, %r4738;
	// end inline asm
	shr.u32 	%r4746, %r4724, 8;
	// begin inline asm
	lop3.b32 %r4744, %r815, %r4746, %r4725, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4748, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4749, %r4725, %r4748;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4752, %r4744, %r4749;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4755, %r826, %r4746, %r4736, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4759, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4760, %r4736, %r4759;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4763, %r4755, %r4760;
	// end inline asm
	// begin inline asm
	mov.b32 %r4771, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4782, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4770, %r16213, -2004318072;
	// begin inline asm
	lop3.b32 %r4768, %r815, %r4770, %r4771, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4772, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4773, %r4771, %r4772;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4776, %r4768, %r4773;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4779, %r826, %r4770, %r4782, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4783, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4784, %r4782, %r4783;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4787, %r4779, %r4784;
	// end inline asm
	shr.u32 	%r4792, %r4770, 8;
	// begin inline asm
	lop3.b32 %r4790, %r815, %r4792, %r4771, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4794, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4795, %r4771, %r4794;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4798, %r4790, %r4795;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4801, %r826, %r4792, %r4782, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4805, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4806, %r4782, %r4805;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4809, %r4801, %r4806;
	// end inline asm
	// begin inline asm
	mov.b32 %r4817, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4828, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4816, %r16222, -2004318072;
	// begin inline asm
	lop3.b32 %r4814, %r815, %r4816, %r4817, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4818, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4819, %r4817, %r4818;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4822, %r4814, %r4819;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4825, %r826, %r4816, %r4828, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4829, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4830, %r4828, %r4829;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4833, %r4825, %r4830;
	// end inline asm
	shr.u32 	%r4838, %r4816, 8;
	// begin inline asm
	lop3.b32 %r4836, %r815, %r4838, %r4817, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4840, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4841, %r4817, %r4840;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4844, %r4836, %r4841;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4847, %r826, %r4838, %r4828, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4851, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4852, %r4828, %r4851;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4855, %r4847, %r4852;
	// end inline asm
	// begin inline asm
	mov.b32 %r4863, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4874, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4862, %r16223, -2004318072;
	// begin inline asm
	lop3.b32 %r4860, %r815, %r4862, %r4863, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4864, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4865, %r4863, %r4864;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4868, %r4860, %r4865;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4871, %r826, %r4862, %r4874, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4875, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4876, %r4874, %r4875;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4879, %r4871, %r4876;
	// end inline asm
	shr.u32 	%r4884, %r4862, 8;
	// begin inline asm
	lop3.b32 %r4882, %r815, %r4884, %r4863, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4886, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4887, %r4863, %r4886;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4890, %r4882, %r4887;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4893, %r826, %r4884, %r4874, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4897, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4898, %r4874, %r4897;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4901, %r4893, %r4898;
	// end inline asm
	// begin inline asm
	mov.b32 %r4909, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4920, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4908, %r16224, -2004318072;
	// begin inline asm
	lop3.b32 %r4906, %r815, %r4908, %r4909, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4910, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4911, %r4909, %r4910;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4914, %r4906, %r4911;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4917, %r826, %r4908, %r4920, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4921, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4922, %r4920, %r4921;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4925, %r4917, %r4922;
	// end inline asm
	shr.u32 	%r4930, %r4908, 8;
	// begin inline asm
	lop3.b32 %r4928, %r815, %r4930, %r4909, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4932, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4933, %r4909, %r4932;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4936, %r4928, %r4933;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4939, %r826, %r4930, %r4920, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4943, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4944, %r4920, %r4943;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4947, %r4939, %r4944;
	// end inline asm
	// begin inline asm
	mov.b32 %r4955, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4966, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4954, %r16225, -2004318072;
	// begin inline asm
	lop3.b32 %r4952, %r815, %r4954, %r4955, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4956, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4957, %r4955, %r4956;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4960, %r4952, %r4957;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4963, %r826, %r4954, %r4966, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4967, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4968, %r4966, %r4967;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4971, %r4963, %r4968;
	// end inline asm
	shr.u32 	%r4976, %r4954, 8;
	// begin inline asm
	lop3.b32 %r4974, %r815, %r4976, %r4955, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4978, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4979, %r4955, %r4978;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4982, %r4974, %r4979;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4985, %r826, %r4976, %r4966, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4989, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4990, %r4966, %r4989;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4993, %r4985, %r4990;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4996, %r379;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4998, %r4996, %r4638;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5001, %r379;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5003, %r5001, %r4649;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5006, %r379;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5008, %r5006, %r4660;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5011, %r379;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5013, %r5011, %r4671;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5016, %r379;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5018, %r5016, %r4684;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5021, %r379;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5023, %r5021, %r4695;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5026, %r379;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5028, %r5026, %r4706;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5031, %r379;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5033, %r5031, %r4717;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5036, %r379;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5038, %r5036, %r4730;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5041, %r379;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5043, %r5041, %r4741;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5046, %r379;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5048, %r5046, %r4752;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5051, %r379;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5053, %r5051, %r4763;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5056, %r379;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5058, %r5056, %r4776;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5061, %r379;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5063, %r5061, %r4787;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5066, %r379;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5068, %r5066, %r4798;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5071, %r379;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5073, %r5071, %r4809;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5076, %r397;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5078, %r5076, %r4822;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5081, %r397;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5083, %r5081, %r4833;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5086, %r397;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5088, %r5086, %r4844;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5091, %r397;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5093, %r5091, %r4855;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5096, %r397;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5098, %r5096, %r4868;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5101, %r397;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5103, %r5101, %r4879;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5106, %r397;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5108, %r5106, %r4890;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5111, %r397;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5113, %r5111, %r4901;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5116, %r397;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5118, %r5116, %r4914;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5121, %r397;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5123, %r5121, %r4925;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5126, %r397;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5128, %r5126, %r4936;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5131, %r397;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5133, %r5131, %r4947;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5136, %r397;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5138, %r5136, %r4960;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5141, %r397;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5143, %r5141, %r4971;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5146, %r397;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5148, %r5146, %r4982;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5151, %r397;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5153, %r5151, %r4993;
	// end inline asm
	// begin inline asm
	mov.b32 %r5161, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5172, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5158, %r815, %r1840, %r5161, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5162, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5163, %r5161, %r5162;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5166, %r5158, %r5163;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5169, %r826, %r1840, %r5172, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5173, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5174, %r5172, %r5173;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5177, %r5169, %r5174;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5180, %r815, %r1862, %r5161, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5184, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5185, %r5161, %r5184;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5188, %r5180, %r5185;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5191, %r826, %r1862, %r5172, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5195, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5196, %r5172, %r5195;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5199, %r5191, %r5196;
	// end inline asm
	// begin inline asm
	mov.b32 %r5207, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5218, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5204, %r815, %r1886, %r5207, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5208, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5209, %r5207, %r5208;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5212, %r5204, %r5209;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5215, %r826, %r1886, %r5218, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5219, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5220, %r5218, %r5219;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5223, %r5215, %r5220;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5226, %r815, %r1908, %r5207, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5230, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5231, %r5207, %r5230;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5234, %r5226, %r5231;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5237, %r826, %r1908, %r5218, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5241, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5242, %r5218, %r5241;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5245, %r5237, %r5242;
	// end inline asm
	// begin inline asm
	mov.b32 %r5253, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5264, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5250, %r815, %r1932, %r5253, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5254, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5255, %r5253, %r5254;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5258, %r5250, %r5255;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5261, %r826, %r1932, %r5264, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5265, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5266, %r5264, %r5265;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5269, %r5261, %r5266;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5272, %r815, %r1954, %r5253, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5276, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5277, %r5253, %r5276;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5280, %r5272, %r5277;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5283, %r826, %r1954, %r5264, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5287, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5288, %r5264, %r5287;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5291, %r5283, %r5288;
	// end inline asm
	// begin inline asm
	mov.b32 %r5299, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5310, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5296, %r815, %r1978, %r5299, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5300, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5301, %r5299, %r5300;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5304, %r5296, %r5301;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5307, %r826, %r1978, %r5310, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5311, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5312, %r5310, %r5311;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5315, %r5307, %r5312;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5318, %r815, %r2000, %r5299, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5322, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5323, %r5299, %r5322;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5326, %r5318, %r5323;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5329, %r826, %r2000, %r5310, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5333, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5334, %r5310, %r5333;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5337, %r5329, %r5334;
	// end inline asm
	// begin inline asm
	mov.b32 %r5345, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5356, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5342, %r815, %r2024, %r5345, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5346, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5347, %r5345, %r5346;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5350, %r5342, %r5347;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5353, %r826, %r2024, %r5356, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5357, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5358, %r5356, %r5357;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5361, %r5353, %r5358;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5364, %r815, %r2046, %r5345, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5368, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5369, %r5345, %r5368;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5372, %r5364, %r5369;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5375, %r826, %r2046, %r5356, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5379, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5380, %r5356, %r5379;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5383, %r5375, %r5380;
	// end inline asm
	// begin inline asm
	mov.b32 %r5391, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5402, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5388, %r815, %r2070, %r5391, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5392, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5393, %r5391, %r5392;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5396, %r5388, %r5393;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5399, %r826, %r2070, %r5402, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5403, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5404, %r5402, %r5403;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5407, %r5399, %r5404;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5410, %r815, %r2092, %r5391, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5414, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5415, %r5391, %r5414;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5418, %r5410, %r5415;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5421, %r826, %r2092, %r5402, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5425, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5426, %r5402, %r5425;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5429, %r5421, %r5426;
	// end inline asm
	// begin inline asm
	mov.b32 %r5437, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5448, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5434, %r815, %r2116, %r5437, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5438, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5439, %r5437, %r5438;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5442, %r5434, %r5439;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5445, %r826, %r2116, %r5448, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5449, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5450, %r5448, %r5449;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5453, %r5445, %r5450;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5456, %r815, %r2138, %r5437, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5460, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5461, %r5437, %r5460;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5464, %r5456, %r5461;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5467, %r826, %r2138, %r5448, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5471, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5472, %r5448, %r5471;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5475, %r5467, %r5472;
	// end inline asm
	// begin inline asm
	mov.b32 %r5483, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5494, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5480, %r815, %r2162, %r5483, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5484, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5485, %r5483, %r5484;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5488, %r5480, %r5485;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5491, %r826, %r2162, %r5494, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5495, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5496, %r5494, %r5495;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5499, %r5491, %r5496;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5502, %r815, %r2184, %r5483, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5506, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5507, %r5483, %r5506;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5510, %r5502, %r5507;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5513, %r826, %r2184, %r5494, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5517, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5518, %r5494, %r5517;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5521, %r5513, %r5518;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5524, %r271, %r5166, %r4998;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5528, %r271, %r5177, %r5003;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5532, %r271, %r5188, %r5008;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5536, %r271, %r5199, %r5013;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5540, %r271, %r5212, %r5018;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5544, %r271, %r5223, %r5023;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5548, %r271, %r5234, %r5028;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5552, %r271, %r5245, %r5033;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5556, %r271, %r5258, %r5038;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5560, %r271, %r5269, %r5043;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5564, %r271, %r5280, %r5048;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5568, %r271, %r5291, %r5053;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5572, %r271, %r5304, %r5058;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5576, %r271, %r5315, %r5063;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5580, %r271, %r5326, %r5068;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5584, %r271, %r5337, %r5073;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5588, %r289, %r5350, %r5078;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5592, %r289, %r5361, %r5083;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5596, %r289, %r5372, %r5088;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5600, %r289, %r5383, %r5093;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5604, %r289, %r5396, %r5098;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5608, %r289, %r5407, %r5103;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5612, %r289, %r5418, %r5108;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5616, %r289, %r5429, %r5113;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5620, %r289, %r5442, %r5118;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5624, %r289, %r5453, %r5123;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5628, %r289, %r5464, %r5128;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5632, %r289, %r5475, %r5133;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5636, %r289, %r5488, %r5138;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5640, %r289, %r5499, %r5143;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5644, %r289, %r5510, %r5148;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5648, %r289, %r5521, %r5153;
	// end inline asm
	// begin inline asm
	mov.b32 %r5657, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5668, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5654, %r815, %r2400, %r5657, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5658, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5659, %r5657, %r5658;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5662, %r5654, %r5659;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5665, %r826, %r2400, %r5668, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5669, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5670, %r5668, %r5669;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5673, %r5665, %r5670;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5676, %r815, %r2422, %r5657, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5680, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5681, %r5657, %r5680;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5684, %r5676, %r5681;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5687, %r826, %r2422, %r5668, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5691, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5692, %r5668, %r5691;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5695, %r5687, %r5692;
	// end inline asm
	// begin inline asm
	mov.b32 %r5703, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5714, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5700, %r815, %r2446, %r5703, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5704, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5705, %r5703, %r5704;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5708, %r5700, %r5705;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5711, %r826, %r2446, %r5714, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5715, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5716, %r5714, %r5715;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5719, %r5711, %r5716;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5722, %r815, %r2468, %r5703, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5726, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5727, %r5703, %r5726;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5730, %r5722, %r5727;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5733, %r826, %r2468, %r5714, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5737, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5738, %r5714, %r5737;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5741, %r5733, %r5738;
	// end inline asm
	// begin inline asm
	mov.b32 %r5749, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5760, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5746, %r815, %r2492, %r5749, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5750, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5751, %r5749, %r5750;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5754, %r5746, %r5751;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5757, %r826, %r2492, %r5760, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5761, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5762, %r5760, %r5761;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5765, %r5757, %r5762;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5768, %r815, %r2514, %r5749, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5772, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5773, %r5749, %r5772;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5776, %r5768, %r5773;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5779, %r826, %r2514, %r5760, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5783, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5784, %r5760, %r5783;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5787, %r5779, %r5784;
	// end inline asm
	// begin inline asm
	mov.b32 %r5795, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5806, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5792, %r815, %r2538, %r5795, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5796, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5797, %r5795, %r5796;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5800, %r5792, %r5797;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5803, %r826, %r2538, %r5806, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5807, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5808, %r5806, %r5807;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5811, %r5803, %r5808;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5814, %r815, %r2560, %r5795, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5818, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5819, %r5795, %r5818;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5822, %r5814, %r5819;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5825, %r826, %r2560, %r5806, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5829, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5830, %r5806, %r5829;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5833, %r5825, %r5830;
	// end inline asm
	// begin inline asm
	mov.b32 %r5841, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5852, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5838, %r815, %r2584, %r5841, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5842, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5843, %r5841, %r5842;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5846, %r5838, %r5843;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5849, %r826, %r2584, %r5852, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5853, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5854, %r5852, %r5853;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5857, %r5849, %r5854;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5860, %r815, %r2606, %r5841, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5864, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5865, %r5841, %r5864;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5868, %r5860, %r5865;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5871, %r826, %r2606, %r5852, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5875, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5876, %r5852, %r5875;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5879, %r5871, %r5876;
	// end inline asm
	// begin inline asm
	mov.b32 %r5887, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5898, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5884, %r815, %r2630, %r5887, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5888, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5889, %r5887, %r5888;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5892, %r5884, %r5889;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5895, %r826, %r2630, %r5898, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5899, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5900, %r5898, %r5899;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5903, %r5895, %r5900;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5906, %r815, %r2652, %r5887, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5910, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5911, %r5887, %r5910;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5914, %r5906, %r5911;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5917, %r826, %r2652, %r5898, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5921, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5922, %r5898, %r5921;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5925, %r5917, %r5922;
	// end inline asm
	// begin inline asm
	mov.b32 %r5933, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5944, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5930, %r815, %r2676, %r5933, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5934, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5935, %r5933, %r5934;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5938, %r5930, %r5935;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5941, %r826, %r2676, %r5944, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5945, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5946, %r5944, %r5945;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5949, %r5941, %r5946;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5952, %r815, %r2698, %r5933, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5956, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5957, %r5933, %r5956;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5960, %r5952, %r5957;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5963, %r826, %r2698, %r5944, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5967, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5968, %r5944, %r5967;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5971, %r5963, %r5968;
	// end inline asm
	// begin inline asm
	mov.b32 %r5979, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5990, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5976, %r815, %r2722, %r5979, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5980, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5981, %r5979, %r5980;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5984, %r5976, %r5981;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5987, %r826, %r2722, %r5990, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5991, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5992, %r5990, %r5991;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5995, %r5987, %r5992;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5998, %r815, %r2744, %r5979, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6002, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6003, %r5979, %r6002;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6006, %r5998, %r6003;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6009, %r826, %r2744, %r5990, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6013, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6014, %r5990, %r6013;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6017, %r6009, %r6014;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6020, %r307;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6022, %r6020, %r5662, %r5524;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6026, %r307;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6028, %r6026, %r5673, %r5528;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6032, %r307;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6034, %r6032, %r5684, %r5532;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6038, %r307;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6040, %r6038, %r5695, %r5536;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6044, %r307;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6046, %r6044, %r5708, %r5540;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6050, %r307;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6052, %r6050, %r5719, %r5544;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6056, %r307;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6058, %r6056, %r5730, %r5548;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6062, %r307;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6064, %r6062, %r5741, %r5552;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6068, %r307;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6070, %r6068, %r5754, %r5556;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6074, %r307;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6076, %r6074, %r5765, %r5560;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6080, %r307;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6082, %r6080, %r5776, %r5564;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6086, %r307;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6088, %r6086, %r5787, %r5568;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6092, %r307;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6094, %r6092, %r5800, %r5572;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6098, %r307;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6100, %r6098, %r5811, %r5576;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6104, %r307;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6106, %r6104, %r5822, %r5580;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6110, %r307;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6112, %r6110, %r5833, %r5584;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6116, %r325;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6118, %r6116, %r5846, %r5588;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6122, %r325;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6124, %r6122, %r5857, %r5592;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6128, %r325;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6130, %r6128, %r5868, %r5596;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6134, %r325;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6136, %r6134, %r5879, %r5600;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6140, %r325;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6142, %r6140, %r5892, %r5604;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6146, %r325;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6148, %r6146, %r5903, %r5608;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6152, %r325;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6154, %r6152, %r5914, %r5612;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6158, %r325;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6160, %r6158, %r5925, %r5616;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6164, %r325;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6166, %r6164, %r5938, %r5620;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6170, %r325;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6172, %r6170, %r5949, %r5624;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6176, %r325;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6178, %r6176, %r5960, %r5628;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6182, %r325;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6184, %r6182, %r5971, %r5632;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6188, %r325;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6190, %r6188, %r5984, %r5636;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6194, %r325;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6196, %r6194, %r5995, %r5640;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6200, %r325;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6202, %r6200, %r6006, %r5644;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6206, %r325;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6208, %r6206, %r6017, %r5648;
	// end inline asm
	// begin inline asm
	mov.b32 %r6217, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6228, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6214, %r815, %r816, %r6217, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6218, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6219, %r6217, %r6218;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6222, %r6214, %r6219;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6225, %r826, %r816, %r6228, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6229, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6230, %r6228, %r6229;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6233, %r6225, %r6230;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6236, %r815, %r838, %r6217, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6240, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6241, %r6217, %r6240;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6244, %r6236, %r6241;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6247, %r826, %r838, %r6228, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6251, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6252, %r6228, %r6251;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6255, %r6247, %r6252;
	// end inline asm
	// begin inline asm
	mov.b32 %r6263, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6274, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6260, %r815, %r862, %r6263, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6264, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6265, %r6263, %r6264;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6268, %r6260, %r6265;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6271, %r826, %r862, %r6274, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6275, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6276, %r6274, %r6275;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6279, %r6271, %r6276;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6282, %r815, %r884, %r6263, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6286, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6287, %r6263, %r6286;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6290, %r6282, %r6287;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6293, %r826, %r884, %r6274, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6297, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6298, %r6274, %r6297;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6301, %r6293, %r6298;
	// end inline asm
	// begin inline asm
	mov.b32 %r6309, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6320, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6306, %r815, %r908, %r6309, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6310, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6311, %r6309, %r6310;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6314, %r6306, %r6311;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6317, %r826, %r908, %r6320, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6321, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6322, %r6320, %r6321;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6325, %r6317, %r6322;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6328, %r815, %r930, %r6309, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6332, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6333, %r6309, %r6332;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6336, %r6328, %r6333;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6339, %r826, %r930, %r6320, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6343, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6344, %r6320, %r6343;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6347, %r6339, %r6344;
	// end inline asm
	// begin inline asm
	mov.b32 %r6355, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6366, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6352, %r815, %r954, %r6355, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6356, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6357, %r6355, %r6356;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6360, %r6352, %r6357;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6363, %r826, %r954, %r6366, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6367, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6368, %r6366, %r6367;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6371, %r6363, %r6368;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6374, %r815, %r976, %r6355, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6378, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6379, %r6355, %r6378;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6382, %r6374, %r6379;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6385, %r826, %r976, %r6366, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6389, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6390, %r6366, %r6389;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6393, %r6385, %r6390;
	// end inline asm
	// begin inline asm
	mov.b32 %r6401, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6412, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6398, %r815, %r1000, %r6401, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6402, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6403, %r6401, %r6402;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6406, %r6398, %r6403;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6409, %r826, %r1000, %r6412, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6413, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6414, %r6412, %r6413;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6417, %r6409, %r6414;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6420, %r815, %r1022, %r6401, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6424, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6425, %r6401, %r6424;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6428, %r6420, %r6425;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6431, %r826, %r1022, %r6412, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6435, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6436, %r6412, %r6435;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6439, %r6431, %r6436;
	// end inline asm
	// begin inline asm
	mov.b32 %r6447, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6458, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6444, %r815, %r1046, %r6447, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6448, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6449, %r6447, %r6448;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6452, %r6444, %r6449;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6455, %r826, %r1046, %r6458, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6459, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6460, %r6458, %r6459;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6463, %r6455, %r6460;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6466, %r815, %r1068, %r6447, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6470, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6471, %r6447, %r6470;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6474, %r6466, %r6471;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6477, %r826, %r1068, %r6458, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6481, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6482, %r6458, %r6481;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6485, %r6477, %r6482;
	// end inline asm
	// begin inline asm
	mov.b32 %r6493, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6504, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6490, %r815, %r1092, %r6493, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6494, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6495, %r6493, %r6494;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6498, %r6490, %r6495;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6501, %r826, %r1092, %r6504, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6505, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6506, %r6504, %r6505;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6509, %r6501, %r6506;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6512, %r815, %r1114, %r6493, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6516, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6517, %r6493, %r6516;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6520, %r6512, %r6517;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6523, %r826, %r1114, %r6504, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6527, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6528, %r6504, %r6527;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6531, %r6523, %r6528;
	// end inline asm
	// begin inline asm
	mov.b32 %r6539, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6550, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6536, %r815, %r1138, %r6539, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6540, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6541, %r6539, %r6540;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6544, %r6536, %r6541;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6547, %r826, %r1138, %r6550, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6551, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6552, %r6550, %r6551;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6555, %r6547, %r6552;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6558, %r815, %r1160, %r6539, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6562, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6563, %r6539, %r6562;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6566, %r6558, %r6563;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6569, %r826, %r1160, %r6550, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6573, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6574, %r6550, %r6573;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6577, %r6569, %r6574;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6715, %r343, %r6222, %r6022;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6712, %r343, %r6233, %r6028;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6724, %r343, %r6244, %r6034;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6721, %r343, %r6255, %r6040;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6733, %r343, %r6268, %r6046;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6730, %r343, %r6279, %r6052;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6742, %r343, %r6290, %r6058;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6739, %r343, %r6301, %r6064;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6751, %r343, %r6314, %r6070;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6748, %r343, %r6325, %r6076;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6760, %r343, %r6336, %r6082;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6757, %r343, %r6347, %r6088;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6769, %r343, %r6360, %r6094;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6766, %r343, %r6371, %r6100;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6778, %r343, %r6382, %r6106;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6775, %r343, %r6393, %r6112;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6787, %r361, %r6406, %r6118;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6784, %r361, %r6417, %r6124;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6796, %r361, %r6428, %r6130;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6793, %r361, %r6439, %r6136;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6805, %r361, %r6452, %r6142;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6802, %r361, %r6463, %r6148;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6814, %r361, %r6474, %r6154;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6811, %r361, %r6485, %r6160;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6823, %r361, %r6498, %r6166;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6820, %r361, %r6509, %r6172;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6832, %r361, %r6520, %r6178;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6829, %r361, %r6531, %r6184;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6841, %r361, %r6544, %r6190;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6838, %r361, %r6555, %r6196;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6850, %r361, %r6566, %r6202;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6847, %r361, %r6577, %r6208;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6708, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6710, %r6708, %r6712;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6713, %r425, %r6715, %r6710;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6717, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6719, %r6717, %r6721;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6722, %r425, %r6724, %r6719;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6726, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6728, %r6726, %r6730;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6731, %r425, %r6733, %r6728;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6735, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6737, %r6735, %r6739;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6740, %r425, %r6742, %r6737;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6744, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6746, %r6744, %r6748;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6749, %r425, %r6751, %r6746;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6753, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6755, %r6753, %r6757;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6758, %r425, %r6760, %r6755;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6762, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6764, %r6762, %r6766;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6767, %r425, %r6769, %r6764;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6771, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6773, %r6771, %r6775;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6776, %r425, %r6778, %r6773;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6780, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6782, %r6780, %r6784;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6785, %r428, %r6787, %r6782;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6789, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6791, %r6789, %r6793;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6794, %r428, %r6796, %r6791;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6798, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6800, %r6798, %r6802;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6803, %r428, %r6805, %r6800;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6807, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6809, %r6807, %r6811;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6812, %r428, %r6814, %r6809;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6816, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6818, %r6816, %r6820;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6821, %r428, %r6823, %r6818;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6825, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6827, %r6825, %r6829;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6830, %r428, %r6832, %r6827;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6834, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6836, %r6834, %r6838;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6839, %r428, %r6841, %r6836;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6843, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6845, %r6843, %r6847;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6848, %r428, %r6850, %r6845;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6852, %r431, %r6715;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6855, %r425, %r6712, %r6852;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6859, %r431, %r6724;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6862, %r425, %r6721, %r6859;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6866, %r431, %r6733;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6869, %r425, %r6730, %r6866;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6873, %r431, %r6742;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6876, %r425, %r6739, %r6873;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6880, %r431, %r6751;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6883, %r425, %r6748, %r6880;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6887, %r431, %r6760;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6890, %r425, %r6757, %r6887;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6894, %r431, %r6769;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6897, %r425, %r6766, %r6894;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6901, %r431, %r6778;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6904, %r425, %r6775, %r6901;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6908, %r434, %r6787;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6911, %r428, %r6784, %r6908;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6915, %r434, %r6796;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6918, %r428, %r6793, %r6915;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6922, %r434, %r6805;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6925, %r428, %r6802, %r6922;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6929, %r434, %r6814;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6932, %r428, %r6811, %r6929;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6936, %r434, %r6823;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6939, %r428, %r6820, %r6936;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6943, %r434, %r6832;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6946, %r428, %r6829, %r6943;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6950, %r434, %r6841;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6953, %r428, %r6838, %r6950;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6957, %r434, %r6850;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6960, %r428, %r6847, %r6957;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7131, %r7128}, {%r473, %r479, %r476, %r482}, {%r6713, %r6855}, {%r15171, %r15171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7140, %r7137}, {%r473, %r479, %r476, %r482}, {%r6722, %r6862}, {%r15171, %r15171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7149, %r7146}, {%r473, %r479, %r476, %r482}, {%r6731, %r6869}, {%r15171, %r15171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7158, %r7155}, {%r473, %r479, %r476, %r482}, {%r6740, %r6876}, {%r15171, %r15171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7167, %r7164}, {%r473, %r479, %r476, %r482}, {%r6749, %r6883}, {%r15171, %r15171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7176, %r7173}, {%r473, %r479, %r476, %r482}, {%r6758, %r6890}, {%r15171, %r15171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7185, %r7182}, {%r473, %r479, %r476, %r482}, {%r6767, %r6897}, {%r15171, %r15171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7194, %r7191}, {%r473, %r479, %r476, %r482}, {%r6776, %r6904}, {%r15171, %r15171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7203, %r7200}, {%r473, %r479, %r476, %r482}, {%r6785, %r6911}, {%r15171, %r15171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7212, %r7209}, {%r473, %r479, %r476, %r482}, {%r6794, %r6918}, {%r15171, %r15171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7221, %r7218}, {%r473, %r479, %r476, %r482}, {%r6803, %r6925}, {%r15171, %r15171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7230, %r7227}, {%r473, %r479, %r476, %r482}, {%r6812, %r6932}, {%r15171, %r15171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7239, %r7236}, {%r473, %r479, %r476, %r482}, {%r6821, %r6939}, {%r15171, %r15171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7248, %r7245}, {%r473, %r479, %r476, %r482}, {%r6830, %r6946}, {%r15171, %r15171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7257, %r7254}, {%r473, %r479, %r476, %r482}, {%r6839, %r6953}, {%r15171, %r15171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7266, %r7263}, {%r473, %r479, %r476, %r482}, {%r6848, %r6960}, {%r15171, %r15171};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7124, %r523;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7126, %r7124, %r7128;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7129, %r520, %r7131, %r7126;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7133, %r523;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7135, %r7133, %r7137;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7138, %r520, %r7140, %r7135;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7142, %r523;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7144, %r7142, %r7146;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7147, %r520, %r7149, %r7144;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7151, %r523;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7153, %r7151, %r7155;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7156, %r520, %r7158, %r7153;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7160, %r523;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7162, %r7160, %r7164;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7165, %r520, %r7167, %r7162;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7169, %r523;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7171, %r7169, %r7173;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7174, %r520, %r7176, %r7171;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7178, %r523;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7180, %r7178, %r7182;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7183, %r520, %r7185, %r7180;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7187, %r523;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7189, %r7187, %r7191;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7192, %r520, %r7194, %r7189;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7196, %r523;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7198, %r7196, %r7200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7201, %r520, %r7203, %r7198;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7205, %r523;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7207, %r7205, %r7209;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7210, %r520, %r7212, %r7207;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7214, %r523;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7216, %r7214, %r7218;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7219, %r520, %r7221, %r7216;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7223, %r523;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7225, %r7223, %r7227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7228, %r520, %r7230, %r7225;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7232, %r523;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7234, %r7232, %r7236;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7237, %r520, %r7239, %r7234;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7241, %r523;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7243, %r7241, %r7245;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7246, %r520, %r7248, %r7243;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7250, %r523;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7252, %r7250, %r7254;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7255, %r520, %r7257, %r7252;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7259, %r523;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7261, %r7259, %r7263;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7264, %r520, %r7266, %r7261;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7268, %r523, %r7131;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7271, %r520, %r7128, %r7268;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7275, %r523, %r7140;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7278, %r520, %r7137, %r7275;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7282, %r523, %r7149;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7285, %r520, %r7146, %r7282;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7289, %r523, %r7158;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7292, %r520, %r7155, %r7289;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7296, %r523, %r7167;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7299, %r520, %r7164, %r7296;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7303, %r523, %r7176;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7306, %r520, %r7173, %r7303;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7310, %r523, %r7185;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7313, %r520, %r7182, %r7310;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7317, %r523, %r7194;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7320, %r520, %r7191, %r7317;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7324, %r523, %r7203;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7327, %r520, %r7200, %r7324;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7331, %r523, %r7212;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7334, %r520, %r7209, %r7331;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7338, %r523, %r7221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7341, %r520, %r7218, %r7338;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7345, %r523, %r7230;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7348, %r520, %r7227, %r7345;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7352, %r523, %r7239;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7355, %r520, %r7236, %r7352;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7359, %r523, %r7248;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7362, %r520, %r7245, %r7359;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7366, %r523, %r7257;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7369, %r520, %r7254, %r7366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7373, %r523, %r7266;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7376, %r520, %r7263, %r7373;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7669, %r7672}, {%r563, %r569, %r566, %r572}, {%r7129, %r7271}, {%r15171, %r15171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7675, %r7678}, {%r563, %r569, %r566, %r572}, {%r7138, %r7278}, {%r15171, %r15171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7681, %r7684}, {%r563, %r569, %r566, %r572}, {%r7147, %r7285}, {%r15171, %r15171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7687, %r7690}, {%r563, %r569, %r566, %r572}, {%r7156, %r7292}, {%r15171, %r15171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7693, %r7696}, {%r563, %r569, %r566, %r572}, {%r7165, %r7299}, {%r15171, %r15171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7699, %r7702}, {%r563, %r569, %r566, %r572}, {%r7174, %r7306}, {%r15171, %r15171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7705, %r7708}, {%r563, %r569, %r566, %r572}, {%r7183, %r7313}, {%r15171, %r15171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7711, %r7714}, {%r563, %r569, %r566, %r572}, {%r7192, %r7320}, {%r15171, %r15171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7670, %r7673}, {%r563, %r569, %r566, %r572}, {%r7201, %r7327}, {%r15171, %r15171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7676, %r7679}, {%r563, %r569, %r566, %r572}, {%r7210, %r7334}, {%r15171, %r15171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7682, %r7685}, {%r563, %r569, %r566, %r572}, {%r7219, %r7341}, {%r15171, %r15171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7688, %r7691}, {%r563, %r569, %r566, %r572}, {%r7228, %r7348}, {%r15171, %r15171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7694, %r7697}, {%r563, %r569, %r566, %r572}, {%r7237, %r7355}, {%r15171, %r15171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7700, %r7703}, {%r563, %r569, %r566, %r572}, {%r7246, %r7362}, {%r15171, %r15171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7706, %r7709}, {%r563, %r569, %r566, %r572}, {%r7255, %r7369}, {%r15171, %r15171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7712, %r7715}, {%r563, %r569, %r566, %r572}, {%r7264, %r7376}, {%r15171, %r15171};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7668, %r7669, %r7670;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7671, %r7672, %r7673;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7674, %r7675, %r7676;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7677, %r7678, %r7679;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7680, %r7681, %r7682;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7683, %r7684, %r7685;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7686, %r7687, %r7688;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7689, %r7690, %r7691;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7692, %r7693, %r7694;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7695, %r7696, %r7697;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7698, %r7699, %r7700;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7701, %r7702, %r7703;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7704, %r7705, %r7706;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7707, %r7708, %r7709;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7710, %r7711, %r7712;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7713, %r7714, %r7715;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7716, %r7669, %r7670;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7719, %r7672, %r7673;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7722, %r7675, %r7676;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7725, %r7678, %r7679;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7728, %r7681, %r7682;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7731, %r7684, %r7685;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7734, %r7687, %r7688;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7737, %r7690, %r7691;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7740, %r7693, %r7694;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7743, %r7696, %r7697;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7746, %r7699, %r7700;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7749, %r7702, %r7703;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7752, %r7705, %r7706;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7755, %r7708, %r7709;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7758, %r7711, %r7712;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7761, %r7714, %r7715;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7764, %r212, %r7668;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7767, %r212, %r7671;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7770, %r212, %r7674;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7773, %r212, %r7677;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7776, %r212, %r7680;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7779, %r212, %r7683;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7782, %r212, %r7686;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7785, %r212, %r7689;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7788, %r212, %r7692;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7791, %r212, %r7695;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7794, %r212, %r7698;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7797, %r212, %r7701;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7800, %r212, %r7704;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7803, %r212, %r7707;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7806, %r212, %r7710;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7809, %r212, %r7713;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7812, %r213, %r7716;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7815, %r213, %r7719;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7818, %r213, %r7722;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7821, %r213, %r7725;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7824, %r213, %r7728;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7827, %r213, %r7731;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7830, %r213, %r7734;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7833, %r213, %r7737;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7836, %r213, %r7740;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7839, %r213, %r7743;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7842, %r213, %r7746;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7845, %r213, %r7749;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7848, %r213, %r7752;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7851, %r213, %r7755;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7854, %r213, %r7758;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7857, %r213, %r7761;
	// end inline asm
	// begin inline asm
	mov.b32 %r7860, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7861, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7862, %r7764, %r7860;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7865, %r7862, %r7861;
	// end inline asm
	// begin inline asm
	mov.b32 %r7868, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7869, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7870, %r7767, %r7868;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7873, %r7870, %r7869;
	// end inline asm
	// begin inline asm
	mov.b32 %r7876, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7877, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7878, %r7770, %r7876;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7881, %r7878, %r7877;
	// end inline asm
	// begin inline asm
	mov.b32 %r7884, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7885, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7886, %r7773, %r7884;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7889, %r7886, %r7885;
	// end inline asm
	// begin inline asm
	mov.b32 %r7892, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7893, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7894, %r7776, %r7892;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7897, %r7894, %r7893;
	// end inline asm
	// begin inline asm
	mov.b32 %r7900, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7901, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7902, %r7779, %r7900;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7905, %r7902, %r7901;
	// end inline asm
	// begin inline asm
	mov.b32 %r7908, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7909, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7910, %r7782, %r7908;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7913, %r7910, %r7909;
	// end inline asm
	// begin inline asm
	mov.b32 %r7916, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7917, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7918, %r7785, %r7916;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7921, %r7918, %r7917;
	// end inline asm
	// begin inline asm
	mov.b32 %r7924, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7925, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7926, %r7788, %r7924;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7929, %r7926, %r7925;
	// end inline asm
	// begin inline asm
	mov.b32 %r7932, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7933, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7934, %r7791, %r7932;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7937, %r7934, %r7933;
	// end inline asm
	// begin inline asm
	mov.b32 %r7940, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7941, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7942, %r7794, %r7940;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7945, %r7942, %r7941;
	// end inline asm
	// begin inline asm
	mov.b32 %r7948, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7949, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7950, %r7797, %r7948;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7953, %r7950, %r7949;
	// end inline asm
	// begin inline asm
	mov.b32 %r7956, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7957, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7958, %r7800, %r7956;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7961, %r7958, %r7957;
	// end inline asm
	// begin inline asm
	mov.b32 %r7964, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7965, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7966, %r7803, %r7964;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7969, %r7966, %r7965;
	// end inline asm
	// begin inline asm
	mov.b32 %r7972, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7973, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7974, %r7806, %r7972;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7977, %r7974, %r7973;
	// end inline asm
	// begin inline asm
	mov.b32 %r7980, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7981, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7982, %r7809, %r7980;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7985, %r7982, %r7981;
	// end inline asm
	// begin inline asm
	mov.b32 %r7988, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7989, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7990, %r7812, %r7988;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7993, %r7990, %r7989;
	// end inline asm
	// begin inline asm
	mov.b32 %r7996, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7997, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7998, %r7815, %r7996;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8001, %r7998, %r7997;
	// end inline asm
	// begin inline asm
	mov.b32 %r8004, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8005, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8006, %r7818, %r8004;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8009, %r8006, %r8005;
	// end inline asm
	// begin inline asm
	mov.b32 %r8012, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8013, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8014, %r7821, %r8012;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8017, %r8014, %r8013;
	// end inline asm
	// begin inline asm
	mov.b32 %r8020, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8021, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8022, %r7824, %r8020;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8025, %r8022, %r8021;
	// end inline asm
	// begin inline asm
	mov.b32 %r8028, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8029, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8030, %r7827, %r8028;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8033, %r8030, %r8029;
	// end inline asm
	// begin inline asm
	mov.b32 %r8036, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8037, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8038, %r7830, %r8036;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8041, %r8038, %r8037;
	// end inline asm
	// begin inline asm
	mov.b32 %r8044, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8045, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8046, %r7833, %r8044;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8049, %r8046, %r8045;
	// end inline asm
	// begin inline asm
	mov.b32 %r8052, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8053, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8054, %r7836, %r8052;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8057, %r8054, %r8053;
	// end inline asm
	// begin inline asm
	mov.b32 %r8060, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8061, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8062, %r7839, %r8060;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8065, %r8062, %r8061;
	// end inline asm
	// begin inline asm
	mov.b32 %r8068, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8069, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8070, %r7842, %r8068;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8073, %r8070, %r8069;
	// end inline asm
	// begin inline asm
	mov.b32 %r8076, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8077, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8078, %r7845, %r8076;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8081, %r8078, %r8077;
	// end inline asm
	// begin inline asm
	mov.b32 %r8084, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8085, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8086, %r7848, %r8084;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8089, %r8086, %r8085;
	// end inline asm
	// begin inline asm
	mov.b32 %r8092, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8093, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8094, %r7851, %r8092;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8097, %r8094, %r8093;
	// end inline asm
	// begin inline asm
	mov.b32 %r8100, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8101, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8102, %r7854, %r8100;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8105, %r8102, %r8101;
	// end inline asm
	// begin inline asm
	mov.b32 %r8108, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8109, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8110, %r7857, %r8108;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8113, %r8110, %r8109;
	// end inline asm
	// begin inline asm
	mov.b32 %r8119, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8117, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8118, %r8119, %r8117;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8121, %r7865, %r8118;
	// end inline asm
	// begin inline asm
	mov.b32 %r8124, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8125, %r8119, %r8124;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8128, %r7873, %r8125;
	// end inline asm
	// begin inline asm
	mov.b32 %r8131, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8132, %r8119, %r8131;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8135, %r7881, %r8132;
	// end inline asm
	// begin inline asm
	mov.b32 %r8138, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8139, %r8119, %r8138;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8142, %r7889, %r8139;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8145, %r8121, %r8135, %r4332;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8149, %r8128, %r8142, %r4332;
	// end inline asm
	shl.b32 	%r8156, %r8149, 4;
	// begin inline asm
	lop3.b32 %r8153, %r4338, %r8145, %r8156, 202;
	// end inline asm
	xor.b32  	%r16092, %r8153, -2004318072;
	// begin inline asm
	mov.b32 %r8160, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8158, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8159, %r8160, %r8158;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8162, %r7897, %r8159;
	// end inline asm
	// begin inline asm
	mov.b32 %r8165, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8166, %r8160, %r8165;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8169, %r7905, %r8166;
	// end inline asm
	// begin inline asm
	mov.b32 %r8172, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8173, %r8160, %r8172;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8176, %r7913, %r8173;
	// end inline asm
	// begin inline asm
	mov.b32 %r8179, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8180, %r8160, %r8179;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8183, %r7921, %r8180;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8186, %r8162, %r8176, %r4332;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8190, %r8169, %r8183, %r4332;
	// end inline asm
	shl.b32 	%r8197, %r8190, 4;
	// begin inline asm
	lop3.b32 %r8194, %r4338, %r8186, %r8197, 202;
	// end inline asm
	xor.b32  	%r16093, %r8194, -2004318072;
	// begin inline asm
	mov.b32 %r8201, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8199, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8200, %r8201, %r8199;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8203, %r7929, %r8200;
	// end inline asm
	// begin inline asm
	mov.b32 %r8206, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8207, %r8201, %r8206;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8210, %r7937, %r8207;
	// end inline asm
	// begin inline asm
	mov.b32 %r8213, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8214, %r8201, %r8213;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8217, %r7945, %r8214;
	// end inline asm
	// begin inline asm
	mov.b32 %r8220, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8221, %r8201, %r8220;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8224, %r7953, %r8221;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8227, %r8203, %r8217, %r4332;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8231, %r8210, %r8224, %r4332;
	// end inline asm
	shl.b32 	%r8238, %r8231, 4;
	// begin inline asm
	lop3.b32 %r8235, %r4338, %r8227, %r8238, 202;
	// end inline asm
	xor.b32  	%r16094, %r8235, -2004318072;
	// begin inline asm
	mov.b32 %r8242, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8240, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8241, %r8242, %r8240;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8244, %r7961, %r8241;
	// end inline asm
	// begin inline asm
	mov.b32 %r8247, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8248, %r8242, %r8247;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8251, %r7969, %r8248;
	// end inline asm
	// begin inline asm
	mov.b32 %r8254, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8255, %r8242, %r8254;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8258, %r7977, %r8255;
	// end inline asm
	// begin inline asm
	mov.b32 %r8261, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8262, %r8242, %r8261;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8265, %r7985, %r8262;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8268, %r8244, %r8258, %r4332;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8272, %r8251, %r8265, %r4332;
	// end inline asm
	shl.b32 	%r8279, %r8272, 4;
	// begin inline asm
	lop3.b32 %r8276, %r4338, %r8268, %r8279, 202;
	// end inline asm
	xor.b32  	%r16095, %r8276, -2004318072;
	// begin inline asm
	mov.b32 %r8283, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8281, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8282, %r8283, %r8281;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8285, %r7993, %r8282;
	// end inline asm
	// begin inline asm
	mov.b32 %r8288, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8289, %r8283, %r8288;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8292, %r8001, %r8289;
	// end inline asm
	// begin inline asm
	mov.b32 %r8295, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8296, %r8283, %r8295;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8299, %r8009, %r8296;
	// end inline asm
	// begin inline asm
	mov.b32 %r8302, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8303, %r8283, %r8302;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8306, %r8017, %r8303;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8309, %r8285, %r8299, %r4332;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8313, %r8292, %r8306, %r4332;
	// end inline asm
	shl.b32 	%r8320, %r8313, 4;
	// begin inline asm
	lop3.b32 %r8317, %r4338, %r8309, %r8320, 202;
	// end inline asm
	xor.b32  	%r16096, %r8317, -2004318072;
	// begin inline asm
	mov.b32 %r8324, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8322, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8323, %r8324, %r8322;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8326, %r8025, %r8323;
	// end inline asm
	// begin inline asm
	mov.b32 %r8329, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8330, %r8324, %r8329;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8333, %r8033, %r8330;
	// end inline asm
	// begin inline asm
	mov.b32 %r8336, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8337, %r8324, %r8336;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8340, %r8041, %r8337;
	// end inline asm
	// begin inline asm
	mov.b32 %r8343, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8344, %r8324, %r8343;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8347, %r8049, %r8344;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8350, %r8326, %r8340, %r4332;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8354, %r8333, %r8347, %r4332;
	// end inline asm
	shl.b32 	%r8361, %r8354, 4;
	// begin inline asm
	lop3.b32 %r8358, %r4338, %r8350, %r8361, 202;
	// end inline asm
	xor.b32  	%r16097, %r8358, -2004318072;
	// begin inline asm
	mov.b32 %r8365, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8363, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8364, %r8365, %r8363;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8367, %r8057, %r8364;
	// end inline asm
	// begin inline asm
	mov.b32 %r8370, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8371, %r8365, %r8370;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8374, %r8065, %r8371;
	// end inline asm
	// begin inline asm
	mov.b32 %r8377, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8378, %r8365, %r8377;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8381, %r8073, %r8378;
	// end inline asm
	// begin inline asm
	mov.b32 %r8384, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8385, %r8365, %r8384;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8388, %r8081, %r8385;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8391, %r8367, %r8381, %r4332;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8395, %r8374, %r8388, %r4332;
	// end inline asm
	shl.b32 	%r8402, %r8395, 4;
	// begin inline asm
	lop3.b32 %r8399, %r4338, %r8391, %r8402, 202;
	// end inline asm
	xor.b32  	%r16098, %r8399, -2004318072;
	// begin inline asm
	mov.b32 %r8406, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8404, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8405, %r8406, %r8404;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8408, %r8089, %r8405;
	// end inline asm
	// begin inline asm
	mov.b32 %r8411, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8412, %r8406, %r8411;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8415, %r8097, %r8412;
	// end inline asm
	// begin inline asm
	mov.b32 %r8418, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8419, %r8406, %r8418;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8422, %r8105, %r8419;
	// end inline asm
	// begin inline asm
	mov.b32 %r8425, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8426, %r8406, %r8425;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8429, %r8113, %r8426;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8432, %r8408, %r8422, %r4332;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8436, %r8415, %r8429, %r4332;
	// end inline asm
	shl.b32 	%r8443, %r8436, 4;
	// begin inline asm
	lop3.b32 %r8440, %r4338, %r8432, %r8443, 202;
	// end inline asm
	xor.b32  	%r16099, %r8440, -2004318072;
	st.shared.u32 	[%rd82], %r16092;
	st.shared.u32 	[%rd83], %r16093;
	st.shared.u32 	[%rd84], %r16094;
	st.shared.u32 	[%rd85], %r16095;
	st.shared.u32 	[%rd86], %r16096;
	st.shared.u32 	[%rd87], %r16097;
	st.shared.u32 	[%rd88], %r16098;
	st.shared.u32 	[%rd89], %r16099;
	ld.shared.u32 	%r16214, [%rd74];
	ld.shared.u32 	%r16215, [%rd75];
	ld.shared.u32 	%r16216, [%rd76];
	ld.shared.u32 	%r16217, [%rd77];
	ld.shared.u32 	%r16226, [%rd78];
	ld.shared.u32 	%r16227, [%rd79];
	ld.shared.u32 	%r16228, [%rd80];
	ld.shared.u32 	%r16229, [%rd81];
	// begin inline asm
	mov.b32 %r8449, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8460, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8448, %r16214, -2004318072;
	// begin inline asm
	lop3.b32 %r8446, %r815, %r8448, %r8449, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8450, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8451, %r8449, %r8450;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8454, %r8446, %r8451;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8457, %r826, %r8448, %r8460, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8461, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8462, %r8460, %r8461;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8465, %r8457, %r8462;
	// end inline asm
	shr.u32 	%r8470, %r8448, 8;
	// begin inline asm
	lop3.b32 %r8468, %r815, %r8470, %r8449, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8472, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8473, %r8449, %r8472;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8476, %r8468, %r8473;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8479, %r826, %r8470, %r8460, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8483, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8484, %r8460, %r8483;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8487, %r8479, %r8484;
	// end inline asm
	// begin inline asm
	mov.b32 %r8495, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8506, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8494, %r16215, -2004318072;
	// begin inline asm
	lop3.b32 %r8492, %r815, %r8494, %r8495, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8496, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8497, %r8495, %r8496;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8500, %r8492, %r8497;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8503, %r826, %r8494, %r8506, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8507, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8508, %r8506, %r8507;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8511, %r8503, %r8508;
	// end inline asm
	shr.u32 	%r8516, %r8494, 8;
	// begin inline asm
	lop3.b32 %r8514, %r815, %r8516, %r8495, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8518, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8519, %r8495, %r8518;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8522, %r8514, %r8519;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8525, %r826, %r8516, %r8506, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8529, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8530, %r8506, %r8529;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8533, %r8525, %r8530;
	// end inline asm
	// begin inline asm
	mov.b32 %r8541, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8552, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8540, %r16216, -2004318072;
	// begin inline asm
	lop3.b32 %r8538, %r815, %r8540, %r8541, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8542, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8543, %r8541, %r8542;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8546, %r8538, %r8543;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8549, %r826, %r8540, %r8552, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8553, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8554, %r8552, %r8553;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8557, %r8549, %r8554;
	// end inline asm
	shr.u32 	%r8562, %r8540, 8;
	// begin inline asm
	lop3.b32 %r8560, %r815, %r8562, %r8541, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8564, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8565, %r8541, %r8564;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8568, %r8560, %r8565;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8571, %r826, %r8562, %r8552, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8575, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8576, %r8552, %r8575;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8579, %r8571, %r8576;
	// end inline asm
	// begin inline asm
	mov.b32 %r8587, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8598, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8586, %r16217, -2004318072;
	// begin inline asm
	lop3.b32 %r8584, %r815, %r8586, %r8587, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8588, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8589, %r8587, %r8588;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8592, %r8584, %r8589;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8595, %r826, %r8586, %r8598, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8599, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8600, %r8598, %r8599;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8603, %r8595, %r8600;
	// end inline asm
	shr.u32 	%r8608, %r8586, 8;
	// begin inline asm
	lop3.b32 %r8606, %r815, %r8608, %r8587, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8610, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8611, %r8587, %r8610;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8614, %r8606, %r8611;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8617, %r826, %r8608, %r8598, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8621, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8622, %r8598, %r8621;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8625, %r8617, %r8622;
	// end inline asm
	// begin inline asm
	mov.b32 %r8633, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8644, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8632, %r16226, -2004318072;
	// begin inline asm
	lop3.b32 %r8630, %r815, %r8632, %r8633, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8634, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8635, %r8633, %r8634;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8638, %r8630, %r8635;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8641, %r826, %r8632, %r8644, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8645, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8646, %r8644, %r8645;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8649, %r8641, %r8646;
	// end inline asm
	shr.u32 	%r8654, %r8632, 8;
	// begin inline asm
	lop3.b32 %r8652, %r815, %r8654, %r8633, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8656, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8657, %r8633, %r8656;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8660, %r8652, %r8657;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8663, %r826, %r8654, %r8644, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8667, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8668, %r8644, %r8667;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8671, %r8663, %r8668;
	// end inline asm
	// begin inline asm
	mov.b32 %r8679, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8690, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8678, %r16227, -2004318072;
	// begin inline asm
	lop3.b32 %r8676, %r815, %r8678, %r8679, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8680, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8681, %r8679, %r8680;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8684, %r8676, %r8681;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8687, %r826, %r8678, %r8690, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8691, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8692, %r8690, %r8691;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8695, %r8687, %r8692;
	// end inline asm
	shr.u32 	%r8700, %r8678, 8;
	// begin inline asm
	lop3.b32 %r8698, %r815, %r8700, %r8679, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8702, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8703, %r8679, %r8702;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8706, %r8698, %r8703;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8709, %r826, %r8700, %r8690, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8713, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8714, %r8690, %r8713;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8717, %r8709, %r8714;
	// end inline asm
	// begin inline asm
	mov.b32 %r8725, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8736, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8724, %r16228, -2004318072;
	// begin inline asm
	lop3.b32 %r8722, %r815, %r8724, %r8725, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8726, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8727, %r8725, %r8726;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8730, %r8722, %r8727;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8733, %r826, %r8724, %r8736, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8737, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8738, %r8736, %r8737;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8741, %r8733, %r8738;
	// end inline asm
	shr.u32 	%r8746, %r8724, 8;
	// begin inline asm
	lop3.b32 %r8744, %r815, %r8746, %r8725, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8748, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8749, %r8725, %r8748;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8752, %r8744, %r8749;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8755, %r826, %r8746, %r8736, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8759, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8760, %r8736, %r8759;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8763, %r8755, %r8760;
	// end inline asm
	// begin inline asm
	mov.b32 %r8771, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8782, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8770, %r16229, -2004318072;
	// begin inline asm
	lop3.b32 %r8768, %r815, %r8770, %r8771, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8772, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8773, %r8771, %r8772;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8776, %r8768, %r8773;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8779, %r826, %r8770, %r8782, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8783, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8784, %r8782, %r8783;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8787, %r8779, %r8784;
	// end inline asm
	shr.u32 	%r8792, %r8770, 8;
	// begin inline asm
	lop3.b32 %r8790, %r815, %r8792, %r8771, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8794, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8795, %r8771, %r8794;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8798, %r8790, %r8795;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8801, %r826, %r8792, %r8782, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8805, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8806, %r8782, %r8805;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8809, %r8801, %r8806;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8812, %r379;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8814, %r8812, %r8454;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8817, %r379;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8819, %r8817, %r8465;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8822, %r379;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8824, %r8822, %r8476;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8827, %r379;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8829, %r8827, %r8487;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8832, %r379;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8834, %r8832, %r8500;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8837, %r379;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8839, %r8837, %r8511;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8842, %r379;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8844, %r8842, %r8522;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8847, %r379;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8849, %r8847, %r8533;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8852, %r379;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8854, %r8852, %r8546;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8857, %r379;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8859, %r8857, %r8557;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8862, %r379;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8864, %r8862, %r8568;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8867, %r379;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8869, %r8867, %r8579;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8872, %r379;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8874, %r8872, %r8592;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8877, %r379;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8879, %r8877, %r8603;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8882, %r379;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8884, %r8882, %r8614;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8887, %r379;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8889, %r8887, %r8625;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8892, %r397;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8894, %r8892, %r8638;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8897, %r397;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8899, %r8897, %r8649;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8902, %r397;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8904, %r8902, %r8660;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8907, %r397;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8909, %r8907, %r8671;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8912, %r397;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8914, %r8912, %r8684;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8917, %r397;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8919, %r8917, %r8695;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8922, %r397;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8924, %r8922, %r8706;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8927, %r397;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8929, %r8927, %r8717;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8932, %r397;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8934, %r8932, %r8730;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8937, %r397;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8939, %r8937, %r8741;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8942, %r397;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8944, %r8942, %r8752;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8947, %r397;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8949, %r8947, %r8763;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8952, %r397;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8954, %r8952, %r8776;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8957, %r397;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8959, %r8957, %r8787;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8962, %r397;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8964, %r8962, %r8798;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8967, %r397;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8969, %r8967, %r8809;
	// end inline asm
	// begin inline asm
	mov.b32 %r8977, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8988, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r8974, %r815, %r2400, %r8977, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8978, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8979, %r8977, %r8978;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8982, %r8974, %r8979;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8985, %r826, %r2400, %r8988, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8989, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8990, %r8988, %r8989;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8993, %r8985, %r8990;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8996, %r815, %r2422, %r8977, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9000, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9001, %r8977, %r9000;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9004, %r8996, %r9001;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9007, %r826, %r2422, %r8988, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9011, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9012, %r8988, %r9011;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9015, %r9007, %r9012;
	// end inline asm
	// begin inline asm
	mov.b32 %r9023, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9034, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9020, %r815, %r2446, %r9023, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9024, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9025, %r9023, %r9024;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9028, %r9020, %r9025;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9031, %r826, %r2446, %r9034, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9035, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9036, %r9034, %r9035;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9039, %r9031, %r9036;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9042, %r815, %r2468, %r9023, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9046, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9047, %r9023, %r9046;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9050, %r9042, %r9047;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9053, %r826, %r2468, %r9034, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9057, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9058, %r9034, %r9057;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9061, %r9053, %r9058;
	// end inline asm
	// begin inline asm
	mov.b32 %r9069, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9080, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9066, %r815, %r2492, %r9069, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9070, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9071, %r9069, %r9070;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9074, %r9066, %r9071;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9077, %r826, %r2492, %r9080, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9081, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9082, %r9080, %r9081;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9085, %r9077, %r9082;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9088, %r815, %r2514, %r9069, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9092, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9093, %r9069, %r9092;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9096, %r9088, %r9093;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9099, %r826, %r2514, %r9080, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9103, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9104, %r9080, %r9103;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9107, %r9099, %r9104;
	// end inline asm
	// begin inline asm
	mov.b32 %r9115, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9126, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9112, %r815, %r2538, %r9115, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9116, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9117, %r9115, %r9116;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9120, %r9112, %r9117;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9123, %r826, %r2538, %r9126, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9127, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9128, %r9126, %r9127;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9131, %r9123, %r9128;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9134, %r815, %r2560, %r9115, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9138, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9139, %r9115, %r9138;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9142, %r9134, %r9139;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9145, %r826, %r2560, %r9126, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9149, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9150, %r9126, %r9149;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9153, %r9145, %r9150;
	// end inline asm
	// begin inline asm
	mov.b32 %r9161, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9172, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9158, %r815, %r2584, %r9161, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9162, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9163, %r9161, %r9162;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9166, %r9158, %r9163;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9169, %r826, %r2584, %r9172, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9173, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9174, %r9172, %r9173;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9177, %r9169, %r9174;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9180, %r815, %r2606, %r9161, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9184, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9185, %r9161, %r9184;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9188, %r9180, %r9185;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9191, %r826, %r2606, %r9172, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9195, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9196, %r9172, %r9195;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9199, %r9191, %r9196;
	// end inline asm
	// begin inline asm
	mov.b32 %r9207, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9218, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9204, %r815, %r2630, %r9207, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9208, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9209, %r9207, %r9208;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9212, %r9204, %r9209;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9215, %r826, %r2630, %r9218, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9219, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9220, %r9218, %r9219;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9223, %r9215, %r9220;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9226, %r815, %r2652, %r9207, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9230, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9231, %r9207, %r9230;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9234, %r9226, %r9231;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9237, %r826, %r2652, %r9218, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9241, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9242, %r9218, %r9241;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9245, %r9237, %r9242;
	// end inline asm
	// begin inline asm
	mov.b32 %r9253, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9264, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9250, %r815, %r2676, %r9253, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9254, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9255, %r9253, %r9254;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9258, %r9250, %r9255;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9261, %r826, %r2676, %r9264, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9265, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9266, %r9264, %r9265;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9269, %r9261, %r9266;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9272, %r815, %r2698, %r9253, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9276, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9277, %r9253, %r9276;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9280, %r9272, %r9277;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9283, %r826, %r2698, %r9264, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9287, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9288, %r9264, %r9287;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9291, %r9283, %r9288;
	// end inline asm
	// begin inline asm
	mov.b32 %r9299, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9310, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9296, %r815, %r2722, %r9299, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9300, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9301, %r9299, %r9300;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9304, %r9296, %r9301;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9307, %r826, %r2722, %r9310, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9311, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9312, %r9310, %r9311;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9315, %r9307, %r9312;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9318, %r815, %r2744, %r9299, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9322, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9323, %r9299, %r9322;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9326, %r9318, %r9323;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9329, %r826, %r2744, %r9310, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9333, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9334, %r9310, %r9333;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9337, %r9329, %r9334;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9340, %r271, %r8982, %r8814;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9344, %r271, %r8993, %r8819;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9348, %r271, %r9004, %r8824;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9352, %r271, %r9015, %r8829;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9356, %r271, %r9028, %r8834;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9360, %r271, %r9039, %r8839;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9364, %r271, %r9050, %r8844;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9368, %r271, %r9061, %r8849;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9372, %r271, %r9074, %r8854;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9376, %r271, %r9085, %r8859;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9380, %r271, %r9096, %r8864;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9384, %r271, %r9107, %r8869;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9388, %r271, %r9120, %r8874;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9392, %r271, %r9131, %r8879;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9396, %r271, %r9142, %r8884;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9400, %r271, %r9153, %r8889;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9404, %r289, %r9166, %r8894;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9408, %r289, %r9177, %r8899;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9412, %r289, %r9188, %r8904;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9416, %r289, %r9199, %r8909;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9420, %r289, %r9212, %r8914;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9424, %r289, %r9223, %r8919;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9428, %r289, %r9234, %r8924;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9432, %r289, %r9245, %r8929;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9436, %r289, %r9258, %r8934;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9440, %r289, %r9269, %r8939;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9444, %r289, %r9280, %r8944;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9448, %r289, %r9291, %r8949;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9452, %r289, %r9304, %r8954;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9456, %r289, %r9315, %r8959;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9460, %r289, %r9326, %r8964;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9464, %r289, %r9337, %r8969;
	// end inline asm
	// begin inline asm
	mov.b32 %r9473, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9484, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9470, %r815, %r816, %r9473, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9474, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9475, %r9473, %r9474;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9478, %r9470, %r9475;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9481, %r826, %r816, %r9484, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9485, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9486, %r9484, %r9485;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9489, %r9481, %r9486;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9492, %r815, %r838, %r9473, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9496, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9497, %r9473, %r9496;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9500, %r9492, %r9497;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9503, %r826, %r838, %r9484, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9507, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9508, %r9484, %r9507;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9511, %r9503, %r9508;
	// end inline asm
	// begin inline asm
	mov.b32 %r9519, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9530, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9516, %r815, %r862, %r9519, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9520, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9521, %r9519, %r9520;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9524, %r9516, %r9521;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9527, %r826, %r862, %r9530, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9531, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9532, %r9530, %r9531;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9535, %r9527, %r9532;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9538, %r815, %r884, %r9519, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9542, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9543, %r9519, %r9542;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9546, %r9538, %r9543;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9549, %r826, %r884, %r9530, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9553, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9554, %r9530, %r9553;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9557, %r9549, %r9554;
	// end inline asm
	// begin inline asm
	mov.b32 %r9565, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9576, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9562, %r815, %r908, %r9565, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9566, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9567, %r9565, %r9566;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9570, %r9562, %r9567;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9573, %r826, %r908, %r9576, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9577, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9578, %r9576, %r9577;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9581, %r9573, %r9578;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9584, %r815, %r930, %r9565, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9588, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9589, %r9565, %r9588;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9592, %r9584, %r9589;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9595, %r826, %r930, %r9576, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9599, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9600, %r9576, %r9599;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9603, %r9595, %r9600;
	// end inline asm
	// begin inline asm
	mov.b32 %r9611, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9622, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9608, %r815, %r954, %r9611, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9612, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9613, %r9611, %r9612;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9616, %r9608, %r9613;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9619, %r826, %r954, %r9622, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9623, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9624, %r9622, %r9623;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9627, %r9619, %r9624;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9630, %r815, %r976, %r9611, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9634, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9635, %r9611, %r9634;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9638, %r9630, %r9635;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9641, %r826, %r976, %r9622, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9645, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9646, %r9622, %r9645;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9649, %r9641, %r9646;
	// end inline asm
	// begin inline asm
	mov.b32 %r9657, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9668, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9654, %r815, %r1000, %r9657, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9658, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9659, %r9657, %r9658;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9662, %r9654, %r9659;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9665, %r826, %r1000, %r9668, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9669, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9670, %r9668, %r9669;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9673, %r9665, %r9670;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9676, %r815, %r1022, %r9657, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9680, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9681, %r9657, %r9680;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9684, %r9676, %r9681;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9687, %r826, %r1022, %r9668, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9691, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9692, %r9668, %r9691;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9695, %r9687, %r9692;
	// end inline asm
	// begin inline asm
	mov.b32 %r9703, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9714, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9700, %r815, %r1046, %r9703, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9704, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9705, %r9703, %r9704;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9708, %r9700, %r9705;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9711, %r826, %r1046, %r9714, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9715, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9716, %r9714, %r9715;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9719, %r9711, %r9716;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9722, %r815, %r1068, %r9703, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9726, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9727, %r9703, %r9726;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9730, %r9722, %r9727;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9733, %r826, %r1068, %r9714, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9737, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9738, %r9714, %r9737;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9741, %r9733, %r9738;
	// end inline asm
	// begin inline asm
	mov.b32 %r9749, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9760, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9746, %r815, %r1092, %r9749, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9750, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9751, %r9749, %r9750;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9754, %r9746, %r9751;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9757, %r826, %r1092, %r9760, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9761, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9762, %r9760, %r9761;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9765, %r9757, %r9762;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9768, %r815, %r1114, %r9749, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9772, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9773, %r9749, %r9772;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9776, %r9768, %r9773;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9779, %r826, %r1114, %r9760, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9783, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9784, %r9760, %r9783;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9787, %r9779, %r9784;
	// end inline asm
	// begin inline asm
	mov.b32 %r9795, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9806, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9792, %r815, %r1138, %r9795, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9796, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9797, %r9795, %r9796;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9800, %r9792, %r9797;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9803, %r826, %r1138, %r9806, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9807, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9808, %r9806, %r9807;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9811, %r9803, %r9808;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9814, %r815, %r1160, %r9795, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9818, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9819, %r9795, %r9818;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9822, %r9814, %r9819;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9825, %r826, %r1160, %r9806, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9829, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9830, %r9806, %r9829;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9833, %r9825, %r9830;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9836, %r307;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9838, %r9836, %r9478, %r9340;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9842, %r307;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9844, %r9842, %r9489, %r9344;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9848, %r307;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9850, %r9848, %r9500, %r9348;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9854, %r307;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9856, %r9854, %r9511, %r9352;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9860, %r307;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9862, %r9860, %r9524, %r9356;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9866, %r307;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9868, %r9866, %r9535, %r9360;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9872, %r307;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9874, %r9872, %r9546, %r9364;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9878, %r307;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9880, %r9878, %r9557, %r9368;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9884, %r307;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9886, %r9884, %r9570, %r9372;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9890, %r307;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9892, %r9890, %r9581, %r9376;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9896, %r307;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9898, %r9896, %r9592, %r9380;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9902, %r307;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9904, %r9902, %r9603, %r9384;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9908, %r307;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9910, %r9908, %r9616, %r9388;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9914, %r307;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9916, %r9914, %r9627, %r9392;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9920, %r307;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9922, %r9920, %r9638, %r9396;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9926, %r307;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9928, %r9926, %r9649, %r9400;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9932, %r325;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9934, %r9932, %r9662, %r9404;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9938, %r325;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9940, %r9938, %r9673, %r9408;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9944, %r325;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9946, %r9944, %r9684, %r9412;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9950, %r325;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9952, %r9950, %r9695, %r9416;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9956, %r325;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9958, %r9956, %r9708, %r9420;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9962, %r325;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9964, %r9962, %r9719, %r9424;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9968, %r325;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9970, %r9968, %r9730, %r9428;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9974, %r325;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9976, %r9974, %r9741, %r9432;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9980, %r325;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9982, %r9980, %r9754, %r9436;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9986, %r325;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9988, %r9986, %r9765, %r9440;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9992, %r325;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9994, %r9992, %r9776, %r9444;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9998, %r325;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10000, %r9998, %r9787, %r9448;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10004, %r325;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10006, %r10004, %r9800, %r9452;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10010, %r325;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10012, %r10010, %r9811, %r9456;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10016, %r325;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10018, %r10016, %r9822, %r9460;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10022, %r325;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10024, %r10022, %r9833, %r9464;
	// end inline asm
	// begin inline asm
	mov.b32 %r10033, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10044, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10030, %r815, %r4632, %r10033, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10034, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10035, %r10033, %r10034;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10038, %r10030, %r10035;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10041, %r826, %r4632, %r10044, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10045, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10046, %r10044, %r10045;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10049, %r10041, %r10046;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10052, %r815, %r4654, %r10033, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10056, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10057, %r10033, %r10056;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10060, %r10052, %r10057;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10063, %r826, %r4654, %r10044, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10067, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10068, %r10044, %r10067;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10071, %r10063, %r10068;
	// end inline asm
	// begin inline asm
	mov.b32 %r10079, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10090, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10076, %r815, %r4678, %r10079, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10080, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10081, %r10079, %r10080;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10084, %r10076, %r10081;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10087, %r826, %r4678, %r10090, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10091, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10092, %r10090, %r10091;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10095, %r10087, %r10092;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10098, %r815, %r4700, %r10079, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10102, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10103, %r10079, %r10102;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10106, %r10098, %r10103;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10109, %r826, %r4700, %r10090, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10113, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10114, %r10090, %r10113;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10117, %r10109, %r10114;
	// end inline asm
	// begin inline asm
	mov.b32 %r10125, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10136, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10122, %r815, %r4724, %r10125, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10126, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10127, %r10125, %r10126;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10130, %r10122, %r10127;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10133, %r826, %r4724, %r10136, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10137, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10138, %r10136, %r10137;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10141, %r10133, %r10138;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10144, %r815, %r4746, %r10125, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10148, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10149, %r10125, %r10148;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10152, %r10144, %r10149;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10155, %r826, %r4746, %r10136, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10159, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10160, %r10136, %r10159;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10163, %r10155, %r10160;
	// end inline asm
	// begin inline asm
	mov.b32 %r10171, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10182, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10168, %r815, %r4770, %r10171, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10172, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10173, %r10171, %r10172;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10176, %r10168, %r10173;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10179, %r826, %r4770, %r10182, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10183, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10184, %r10182, %r10183;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10187, %r10179, %r10184;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10190, %r815, %r4792, %r10171, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10194, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10195, %r10171, %r10194;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10198, %r10190, %r10195;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10201, %r826, %r4792, %r10182, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10205, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10206, %r10182, %r10205;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10209, %r10201, %r10206;
	// end inline asm
	// begin inline asm
	mov.b32 %r10217, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10228, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10214, %r815, %r4816, %r10217, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10218, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10219, %r10217, %r10218;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10222, %r10214, %r10219;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10225, %r826, %r4816, %r10228, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10229, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10230, %r10228, %r10229;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10233, %r10225, %r10230;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10236, %r815, %r4838, %r10217, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10240, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10241, %r10217, %r10240;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10244, %r10236, %r10241;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10247, %r826, %r4838, %r10228, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10251, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10252, %r10228, %r10251;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10255, %r10247, %r10252;
	// end inline asm
	// begin inline asm
	mov.b32 %r10263, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10274, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10260, %r815, %r4862, %r10263, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10264, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10265, %r10263, %r10264;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10268, %r10260, %r10265;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10271, %r826, %r4862, %r10274, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10275, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10276, %r10274, %r10275;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10279, %r10271, %r10276;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10282, %r815, %r4884, %r10263, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10286, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10287, %r10263, %r10286;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10290, %r10282, %r10287;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10293, %r826, %r4884, %r10274, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10297, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10298, %r10274, %r10297;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10301, %r10293, %r10298;
	// end inline asm
	// begin inline asm
	mov.b32 %r10309, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10320, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10306, %r815, %r4908, %r10309, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10310, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10311, %r10309, %r10310;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10314, %r10306, %r10311;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10317, %r826, %r4908, %r10320, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10321, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10322, %r10320, %r10321;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10325, %r10317, %r10322;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10328, %r815, %r4930, %r10309, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10332, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10333, %r10309, %r10332;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10336, %r10328, %r10333;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10339, %r826, %r4930, %r10320, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10343, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10344, %r10320, %r10343;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10347, %r10339, %r10344;
	// end inline asm
	// begin inline asm
	mov.b32 %r10355, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10366, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10352, %r815, %r4954, %r10355, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10356, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10357, %r10355, %r10356;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10360, %r10352, %r10357;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10363, %r826, %r4954, %r10366, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10367, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10368, %r10366, %r10367;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10371, %r10363, %r10368;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10374, %r815, %r4976, %r10355, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10378, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10379, %r10355, %r10378;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10382, %r10374, %r10379;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10385, %r826, %r4976, %r10366, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10389, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10390, %r10366, %r10389;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10393, %r10385, %r10390;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10531, %r343, %r10038, %r9838;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10528, %r343, %r10049, %r9844;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10540, %r343, %r10060, %r9850;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10537, %r343, %r10071, %r9856;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10549, %r343, %r10084, %r9862;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10546, %r343, %r10095, %r9868;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10558, %r343, %r10106, %r9874;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10555, %r343, %r10117, %r9880;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10567, %r343, %r10130, %r9886;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10564, %r343, %r10141, %r9892;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10576, %r343, %r10152, %r9898;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10573, %r343, %r10163, %r9904;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10585, %r343, %r10176, %r9910;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10582, %r343, %r10187, %r9916;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10594, %r343, %r10198, %r9922;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10591, %r343, %r10209, %r9928;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10603, %r361, %r10222, %r9934;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10600, %r361, %r10233, %r9940;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10612, %r361, %r10244, %r9946;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10609, %r361, %r10255, %r9952;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10621, %r361, %r10268, %r9958;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10618, %r361, %r10279, %r9964;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10630, %r361, %r10290, %r9970;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10627, %r361, %r10301, %r9976;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10639, %r361, %r10314, %r9982;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10636, %r361, %r10325, %r9988;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10648, %r361, %r10336, %r9994;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10645, %r361, %r10347, %r10000;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10657, %r361, %r10360, %r10006;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10654, %r361, %r10371, %r10012;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10666, %r361, %r10382, %r10018;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10663, %r361, %r10393, %r10024;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10524, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10526, %r10524, %r10528;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10529, %r425, %r10531, %r10526;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10533, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10535, %r10533, %r10537;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10538, %r425, %r10540, %r10535;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10542, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10544, %r10542, %r10546;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10547, %r425, %r10549, %r10544;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10551, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10553, %r10551, %r10555;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10556, %r425, %r10558, %r10553;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10560, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10562, %r10560, %r10564;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10565, %r425, %r10567, %r10562;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10569, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10571, %r10569, %r10573;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10574, %r425, %r10576, %r10571;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10578, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10580, %r10578, %r10582;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10583, %r425, %r10585, %r10580;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10587, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10589, %r10587, %r10591;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10592, %r425, %r10594, %r10589;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10596, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10598, %r10596, %r10600;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10601, %r428, %r10603, %r10598;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10605, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10607, %r10605, %r10609;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10610, %r428, %r10612, %r10607;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10614, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10616, %r10614, %r10618;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10619, %r428, %r10621, %r10616;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10623, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10625, %r10623, %r10627;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10628, %r428, %r10630, %r10625;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10632, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10634, %r10632, %r10636;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10637, %r428, %r10639, %r10634;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10641, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10643, %r10641, %r10645;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10646, %r428, %r10648, %r10643;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10650, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10652, %r10650, %r10654;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10655, %r428, %r10657, %r10652;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10659, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10661, %r10659, %r10663;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10664, %r428, %r10666, %r10661;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10668, %r431, %r10531;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10671, %r425, %r10528, %r10668;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10675, %r431, %r10540;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10678, %r425, %r10537, %r10675;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10682, %r431, %r10549;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10685, %r425, %r10546, %r10682;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10689, %r431, %r10558;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10692, %r425, %r10555, %r10689;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10696, %r431, %r10567;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10699, %r425, %r10564, %r10696;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10703, %r431, %r10576;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10706, %r425, %r10573, %r10703;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10710, %r431, %r10585;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10713, %r425, %r10582, %r10710;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10717, %r431, %r10594;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10720, %r425, %r10591, %r10717;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10724, %r434, %r10603;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10727, %r428, %r10600, %r10724;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10731, %r434, %r10612;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10734, %r428, %r10609, %r10731;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10738, %r434, %r10621;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10741, %r428, %r10618, %r10738;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10745, %r434, %r10630;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10748, %r428, %r10627, %r10745;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10752, %r434, %r10639;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10755, %r428, %r10636, %r10752;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10759, %r434, %r10648;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10762, %r428, %r10645, %r10759;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10766, %r434, %r10657;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10769, %r428, %r10654, %r10766;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10773, %r434, %r10666;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10776, %r428, %r10663, %r10773;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r10947, %r10944}, {%r473, %r479, %r476, %r482}, {%r10529, %r10671}, {%r15171, %r15171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r10956, %r10953}, {%r473, %r479, %r476, %r482}, {%r10538, %r10678}, {%r15171, %r15171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r10965, %r10962}, {%r473, %r479, %r476, %r482}, {%r10547, %r10685}, {%r15171, %r15171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r10974, %r10971}, {%r473, %r479, %r476, %r482}, {%r10556, %r10692}, {%r15171, %r15171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r10983, %r10980}, {%r473, %r479, %r476, %r482}, {%r10565, %r10699}, {%r15171, %r15171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r10992, %r10989}, {%r473, %r479, %r476, %r482}, {%r10574, %r10706}, {%r15171, %r15171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11001, %r10998}, {%r473, %r479, %r476, %r482}, {%r10583, %r10713}, {%r15171, %r15171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11010, %r11007}, {%r473, %r479, %r476, %r482}, {%r10592, %r10720}, {%r15171, %r15171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11019, %r11016}, {%r473, %r479, %r476, %r482}, {%r10601, %r10727}, {%r15171, %r15171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11028, %r11025}, {%r473, %r479, %r476, %r482}, {%r10610, %r10734}, {%r15171, %r15171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11037, %r11034}, {%r473, %r479, %r476, %r482}, {%r10619, %r10741}, {%r15171, %r15171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11046, %r11043}, {%r473, %r479, %r476, %r482}, {%r10628, %r10748}, {%r15171, %r15171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11055, %r11052}, {%r473, %r479, %r476, %r482}, {%r10637, %r10755}, {%r15171, %r15171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11064, %r11061}, {%r473, %r479, %r476, %r482}, {%r10646, %r10762}, {%r15171, %r15171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11073, %r11070}, {%r473, %r479, %r476, %r482}, {%r10655, %r10769}, {%r15171, %r15171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11082, %r11079}, {%r473, %r479, %r476, %r482}, {%r10664, %r10776}, {%r15171, %r15171};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10940, %r523;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10942, %r10940, %r10944;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10945, %r520, %r10947, %r10942;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10949, %r523;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10951, %r10949, %r10953;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10954, %r520, %r10956, %r10951;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10958, %r523;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10960, %r10958, %r10962;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10963, %r520, %r10965, %r10960;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10967, %r523;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10969, %r10967, %r10971;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10972, %r520, %r10974, %r10969;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10976, %r523;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10978, %r10976, %r10980;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10981, %r520, %r10983, %r10978;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10985, %r523;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10987, %r10985, %r10989;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10990, %r520, %r10992, %r10987;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10994, %r523;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10996, %r10994, %r10998;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10999, %r520, %r11001, %r10996;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11003, %r523;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11005, %r11003, %r11007;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11008, %r520, %r11010, %r11005;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11012, %r523;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11014, %r11012, %r11016;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11017, %r520, %r11019, %r11014;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11021, %r523;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11023, %r11021, %r11025;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11026, %r520, %r11028, %r11023;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11030, %r523;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11032, %r11030, %r11034;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11035, %r520, %r11037, %r11032;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11039, %r523;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11041, %r11039, %r11043;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11044, %r520, %r11046, %r11041;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11048, %r523;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11050, %r11048, %r11052;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11053, %r520, %r11055, %r11050;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11057, %r523;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11059, %r11057, %r11061;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11062, %r520, %r11064, %r11059;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11066, %r523;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11068, %r11066, %r11070;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11071, %r520, %r11073, %r11068;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11075, %r523;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11077, %r11075, %r11079;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11080, %r520, %r11082, %r11077;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11084, %r523, %r10947;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11087, %r520, %r10944, %r11084;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11091, %r523, %r10956;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11094, %r520, %r10953, %r11091;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11098, %r523, %r10965;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11101, %r520, %r10962, %r11098;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11105, %r523, %r10974;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11108, %r520, %r10971, %r11105;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11112, %r523, %r10983;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11115, %r520, %r10980, %r11112;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11119, %r523, %r10992;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11122, %r520, %r10989, %r11119;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11126, %r523, %r11001;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11129, %r520, %r10998, %r11126;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11133, %r523, %r11010;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11136, %r520, %r11007, %r11133;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11140, %r523, %r11019;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11143, %r520, %r11016, %r11140;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11147, %r523, %r11028;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11150, %r520, %r11025, %r11147;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11154, %r523, %r11037;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11157, %r520, %r11034, %r11154;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11161, %r523, %r11046;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11164, %r520, %r11043, %r11161;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11168, %r523, %r11055;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11171, %r520, %r11052, %r11168;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11175, %r523, %r11064;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11178, %r520, %r11061, %r11175;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11182, %r523, %r11073;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11185, %r520, %r11070, %r11182;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11189, %r523, %r11082;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11192, %r520, %r11079, %r11189;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11485, %r11488}, {%r563, %r569, %r566, %r572}, {%r10945, %r11087}, {%r15171, %r15171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11491, %r11494}, {%r563, %r569, %r566, %r572}, {%r10954, %r11094}, {%r15171, %r15171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11497, %r11500}, {%r563, %r569, %r566, %r572}, {%r10963, %r11101}, {%r15171, %r15171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11503, %r11506}, {%r563, %r569, %r566, %r572}, {%r10972, %r11108}, {%r15171, %r15171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11509, %r11512}, {%r563, %r569, %r566, %r572}, {%r10981, %r11115}, {%r15171, %r15171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11515, %r11518}, {%r563, %r569, %r566, %r572}, {%r10990, %r11122}, {%r15171, %r15171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11521, %r11524}, {%r563, %r569, %r566, %r572}, {%r10999, %r11129}, {%r15171, %r15171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11527, %r11530}, {%r563, %r569, %r566, %r572}, {%r11008, %r11136}, {%r15171, %r15171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11486, %r11489}, {%r563, %r569, %r566, %r572}, {%r11017, %r11143}, {%r15171, %r15171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11492, %r11495}, {%r563, %r569, %r566, %r572}, {%r11026, %r11150}, {%r15171, %r15171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11498, %r11501}, {%r563, %r569, %r566, %r572}, {%r11035, %r11157}, {%r15171, %r15171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11504, %r11507}, {%r563, %r569, %r566, %r572}, {%r11044, %r11164}, {%r15171, %r15171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11510, %r11513}, {%r563, %r569, %r566, %r572}, {%r11053, %r11171}, {%r15171, %r15171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11516, %r11519}, {%r563, %r569, %r566, %r572}, {%r11062, %r11178}, {%r15171, %r15171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11522, %r11525}, {%r563, %r569, %r566, %r572}, {%r11071, %r11185}, {%r15171, %r15171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11528, %r11531}, {%r563, %r569, %r566, %r572}, {%r11080, %r11192}, {%r15171, %r15171};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11484, %r11485, %r11486;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11487, %r11488, %r11489;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11490, %r11491, %r11492;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11493, %r11494, %r11495;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11496, %r11497, %r11498;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11499, %r11500, %r11501;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11502, %r11503, %r11504;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11505, %r11506, %r11507;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11508, %r11509, %r11510;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11511, %r11512, %r11513;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11514, %r11515, %r11516;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11517, %r11518, %r11519;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11520, %r11521, %r11522;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11523, %r11524, %r11525;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11526, %r11527, %r11528;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11529, %r11530, %r11531;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11532, %r11485, %r11486;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11535, %r11488, %r11489;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11538, %r11491, %r11492;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11541, %r11494, %r11495;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11544, %r11497, %r11498;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11547, %r11500, %r11501;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11550, %r11503, %r11504;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11553, %r11506, %r11507;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11556, %r11509, %r11510;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11559, %r11512, %r11513;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11562, %r11515, %r11516;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11565, %r11518, %r11519;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11568, %r11521, %r11522;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11571, %r11524, %r11525;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11574, %r11527, %r11528;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11577, %r11530, %r11531;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11580, %r212, %r11484;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11583, %r212, %r11487;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11586, %r212, %r11490;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11589, %r212, %r11493;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11592, %r212, %r11496;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11595, %r212, %r11499;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11598, %r212, %r11502;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11601, %r212, %r11505;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11604, %r212, %r11508;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11607, %r212, %r11511;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11610, %r212, %r11514;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11613, %r212, %r11517;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11616, %r212, %r11520;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11619, %r212, %r11523;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11622, %r212, %r11526;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11625, %r212, %r11529;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11628, %r213, %r11532;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11631, %r213, %r11535;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11634, %r213, %r11538;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11637, %r213, %r11541;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11640, %r213, %r11544;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11643, %r213, %r11547;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11646, %r213, %r11550;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11649, %r213, %r11553;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11652, %r213, %r11556;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11655, %r213, %r11559;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11658, %r213, %r11562;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11661, %r213, %r11565;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11664, %r213, %r11568;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11667, %r213, %r11571;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11670, %r213, %r11574;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11673, %r213, %r11577;
	// end inline asm
	// begin inline asm
	mov.b32 %r11676, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11677, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11678, %r11580, %r11676;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11681, %r11678, %r11677;
	// end inline asm
	// begin inline asm
	mov.b32 %r11684, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11685, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11686, %r11583, %r11684;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11689, %r11686, %r11685;
	// end inline asm
	// begin inline asm
	mov.b32 %r11692, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11693, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11694, %r11586, %r11692;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11697, %r11694, %r11693;
	// end inline asm
	// begin inline asm
	mov.b32 %r11700, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11701, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11702, %r11589, %r11700;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11705, %r11702, %r11701;
	// end inline asm
	// begin inline asm
	mov.b32 %r11708, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11709, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11710, %r11592, %r11708;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11713, %r11710, %r11709;
	// end inline asm
	// begin inline asm
	mov.b32 %r11716, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11717, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11718, %r11595, %r11716;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11721, %r11718, %r11717;
	// end inline asm
	// begin inline asm
	mov.b32 %r11724, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11725, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11726, %r11598, %r11724;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11729, %r11726, %r11725;
	// end inline asm
	// begin inline asm
	mov.b32 %r11732, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11733, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11734, %r11601, %r11732;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11737, %r11734, %r11733;
	// end inline asm
	// begin inline asm
	mov.b32 %r11740, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11741, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11742, %r11604, %r11740;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11745, %r11742, %r11741;
	// end inline asm
	// begin inline asm
	mov.b32 %r11748, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11749, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11750, %r11607, %r11748;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11753, %r11750, %r11749;
	// end inline asm
	// begin inline asm
	mov.b32 %r11756, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11757, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11758, %r11610, %r11756;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11761, %r11758, %r11757;
	// end inline asm
	// begin inline asm
	mov.b32 %r11764, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11765, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11766, %r11613, %r11764;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11769, %r11766, %r11765;
	// end inline asm
	// begin inline asm
	mov.b32 %r11772, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11773, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11774, %r11616, %r11772;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11777, %r11774, %r11773;
	// end inline asm
	// begin inline asm
	mov.b32 %r11780, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11781, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11782, %r11619, %r11780;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11785, %r11782, %r11781;
	// end inline asm
	// begin inline asm
	mov.b32 %r11788, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11789, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11790, %r11622, %r11788;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11793, %r11790, %r11789;
	// end inline asm
	// begin inline asm
	mov.b32 %r11796, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11797, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11798, %r11625, %r11796;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11801, %r11798, %r11797;
	// end inline asm
	// begin inline asm
	mov.b32 %r11804, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11805, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11806, %r11628, %r11804;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11809, %r11806, %r11805;
	// end inline asm
	// begin inline asm
	mov.b32 %r11812, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11813, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11814, %r11631, %r11812;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11817, %r11814, %r11813;
	// end inline asm
	// begin inline asm
	mov.b32 %r11820, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11821, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11822, %r11634, %r11820;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11825, %r11822, %r11821;
	// end inline asm
	// begin inline asm
	mov.b32 %r11828, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11829, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11830, %r11637, %r11828;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11833, %r11830, %r11829;
	// end inline asm
	// begin inline asm
	mov.b32 %r11836, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11837, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11838, %r11640, %r11836;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11841, %r11838, %r11837;
	// end inline asm
	// begin inline asm
	mov.b32 %r11844, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11845, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11846, %r11643, %r11844;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11849, %r11846, %r11845;
	// end inline asm
	// begin inline asm
	mov.b32 %r11852, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11853, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11854, %r11646, %r11852;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11857, %r11854, %r11853;
	// end inline asm
	// begin inline asm
	mov.b32 %r11860, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11861, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11862, %r11649, %r11860;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11865, %r11862, %r11861;
	// end inline asm
	// begin inline asm
	mov.b32 %r11868, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11869, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11870, %r11652, %r11868;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11873, %r11870, %r11869;
	// end inline asm
	// begin inline asm
	mov.b32 %r11876, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11877, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11878, %r11655, %r11876;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11881, %r11878, %r11877;
	// end inline asm
	// begin inline asm
	mov.b32 %r11884, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11885, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11886, %r11658, %r11884;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11889, %r11886, %r11885;
	// end inline asm
	// begin inline asm
	mov.b32 %r11892, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11893, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11894, %r11661, %r11892;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11897, %r11894, %r11893;
	// end inline asm
	// begin inline asm
	mov.b32 %r11900, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11901, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11902, %r11664, %r11900;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11905, %r11902, %r11901;
	// end inline asm
	// begin inline asm
	mov.b32 %r11908, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11909, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11910, %r11667, %r11908;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11913, %r11910, %r11909;
	// end inline asm
	// begin inline asm
	mov.b32 %r11916, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11917, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11918, %r11670, %r11916;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11921, %r11918, %r11917;
	// end inline asm
	// begin inline asm
	mov.b32 %r11924, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11925, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11926, %r11673, %r11924;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11929, %r11926, %r11925;
	// end inline asm
	// begin inline asm
	mov.b32 %r11935, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r11933, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11934, %r11935, %r11933;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11937, %r11681, %r11934;
	// end inline asm
	// begin inline asm
	mov.b32 %r11940, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11941, %r11935, %r11940;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11944, %r11689, %r11941;
	// end inline asm
	// begin inline asm
	mov.b32 %r11947, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11948, %r11935, %r11947;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11951, %r11697, %r11948;
	// end inline asm
	// begin inline asm
	mov.b32 %r11954, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11955, %r11935, %r11954;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11958, %r11705, %r11955;
	// end inline asm
	// begin inline asm
	prmt.b32 %r11961, %r11937, %r11951, %r4332;
	// end inline asm
	// begin inline asm
	prmt.b32 %r11965, %r11944, %r11958, %r4332;
	// end inline asm
	shl.b32 	%r11972, %r11965, 4;
	// begin inline asm
	lop3.b32 %r11969, %r4338, %r11961, %r11972, 202;
	// end inline asm
	xor.b32  	%r16100, %r11969, -2004318072;
	// begin inline asm
	mov.b32 %r11976, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r11974, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11975, %r11976, %r11974;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11978, %r11713, %r11975;
	// end inline asm
	// begin inline asm
	mov.b32 %r11981, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11982, %r11976, %r11981;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11985, %r11721, %r11982;
	// end inline asm
	// begin inline asm
	mov.b32 %r11988, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11989, %r11976, %r11988;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11992, %r11729, %r11989;
	// end inline asm
	// begin inline asm
	mov.b32 %r11995, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11996, %r11976, %r11995;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11999, %r11737, %r11996;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12002, %r11978, %r11992, %r4332;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12006, %r11985, %r11999, %r4332;
	// end inline asm
	shl.b32 	%r12013, %r12006, 4;
	// begin inline asm
	lop3.b32 %r12010, %r4338, %r12002, %r12013, 202;
	// end inline asm
	xor.b32  	%r16101, %r12010, -2004318072;
	// begin inline asm
	mov.b32 %r12017, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12015, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12016, %r12017, %r12015;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12019, %r11745, %r12016;
	// end inline asm
	// begin inline asm
	mov.b32 %r12022, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12023, %r12017, %r12022;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12026, %r11753, %r12023;
	// end inline asm
	// begin inline asm
	mov.b32 %r12029, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12030, %r12017, %r12029;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12033, %r11761, %r12030;
	// end inline asm
	// begin inline asm
	mov.b32 %r12036, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12037, %r12017, %r12036;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12040, %r11769, %r12037;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12043, %r12019, %r12033, %r4332;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12047, %r12026, %r12040, %r4332;
	// end inline asm
	shl.b32 	%r12054, %r12047, 4;
	// begin inline asm
	lop3.b32 %r12051, %r4338, %r12043, %r12054, 202;
	// end inline asm
	xor.b32  	%r16102, %r12051, -2004318072;
	// begin inline asm
	mov.b32 %r12058, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12056, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12057, %r12058, %r12056;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12060, %r11777, %r12057;
	// end inline asm
	// begin inline asm
	mov.b32 %r12063, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12064, %r12058, %r12063;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12067, %r11785, %r12064;
	// end inline asm
	// begin inline asm
	mov.b32 %r12070, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12071, %r12058, %r12070;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12074, %r11793, %r12071;
	// end inline asm
	// begin inline asm
	mov.b32 %r12077, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12078, %r12058, %r12077;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12081, %r11801, %r12078;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12084, %r12060, %r12074, %r4332;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12088, %r12067, %r12081, %r4332;
	// end inline asm
	shl.b32 	%r12095, %r12088, 4;
	// begin inline asm
	lop3.b32 %r12092, %r4338, %r12084, %r12095, 202;
	// end inline asm
	xor.b32  	%r16103, %r12092, -2004318072;
	// begin inline asm
	mov.b32 %r12099, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12097, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12098, %r12099, %r12097;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12101, %r11809, %r12098;
	// end inline asm
	// begin inline asm
	mov.b32 %r12104, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12105, %r12099, %r12104;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12108, %r11817, %r12105;
	// end inline asm
	// begin inline asm
	mov.b32 %r12111, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12112, %r12099, %r12111;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12115, %r11825, %r12112;
	// end inline asm
	// begin inline asm
	mov.b32 %r12118, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12119, %r12099, %r12118;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12122, %r11833, %r12119;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12125, %r12101, %r12115, %r4332;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12129, %r12108, %r12122, %r4332;
	// end inline asm
	shl.b32 	%r12136, %r12129, 4;
	// begin inline asm
	lop3.b32 %r12133, %r4338, %r12125, %r12136, 202;
	// end inline asm
	xor.b32  	%r16104, %r12133, -2004318072;
	// begin inline asm
	mov.b32 %r12140, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12138, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12139, %r12140, %r12138;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12142, %r11841, %r12139;
	// end inline asm
	// begin inline asm
	mov.b32 %r12145, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12146, %r12140, %r12145;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12149, %r11849, %r12146;
	// end inline asm
	// begin inline asm
	mov.b32 %r12152, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12153, %r12140, %r12152;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12156, %r11857, %r12153;
	// end inline asm
	// begin inline asm
	mov.b32 %r12159, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12160, %r12140, %r12159;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12163, %r11865, %r12160;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12166, %r12142, %r12156, %r4332;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12170, %r12149, %r12163, %r4332;
	// end inline asm
	shl.b32 	%r12177, %r12170, 4;
	// begin inline asm
	lop3.b32 %r12174, %r4338, %r12166, %r12177, 202;
	// end inline asm
	xor.b32  	%r16105, %r12174, -2004318072;
	// begin inline asm
	mov.b32 %r12181, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12179, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12180, %r12181, %r12179;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12183, %r11873, %r12180;
	// end inline asm
	// begin inline asm
	mov.b32 %r12186, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12187, %r12181, %r12186;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12190, %r11881, %r12187;
	// end inline asm
	// begin inline asm
	mov.b32 %r12193, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12194, %r12181, %r12193;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12197, %r11889, %r12194;
	// end inline asm
	// begin inline asm
	mov.b32 %r12200, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12201, %r12181, %r12200;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12204, %r11897, %r12201;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12207, %r12183, %r12197, %r4332;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12211, %r12190, %r12204, %r4332;
	// end inline asm
	shl.b32 	%r12218, %r12211, 4;
	// begin inline asm
	lop3.b32 %r12215, %r4338, %r12207, %r12218, 202;
	// end inline asm
	xor.b32  	%r16106, %r12215, -2004318072;
	// begin inline asm
	mov.b32 %r12222, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12220, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12221, %r12222, %r12220;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12224, %r11905, %r12221;
	// end inline asm
	// begin inline asm
	mov.b32 %r12227, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12228, %r12222, %r12227;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12231, %r11913, %r12228;
	// end inline asm
	// begin inline asm
	mov.b32 %r12234, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12235, %r12222, %r12234;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12238, %r11921, %r12235;
	// end inline asm
	// begin inline asm
	mov.b32 %r12241, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12242, %r12222, %r12241;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12245, %r11929, %r12242;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12248, %r12224, %r12238, %r4332;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12252, %r12231, %r12245, %r4332;
	// end inline asm
	shl.b32 	%r12259, %r12252, 4;
	// begin inline asm
	lop3.b32 %r12256, %r4338, %r12248, %r12259, 202;
	// end inline asm
	xor.b32  	%r16107, %r12256, -2004318072;
	st.shared.u32 	[%rd82], %r16100;
	st.shared.u32 	[%rd83], %r16101;
	st.shared.u32 	[%rd84], %r16102;
	st.shared.u32 	[%rd85], %r16103;
	st.shared.u32 	[%rd86], %r16104;
	st.shared.u32 	[%rd87], %r16105;
	st.shared.u32 	[%rd88], %r16106;
	st.shared.u32 	[%rd89], %r16107;
	ld.shared.u32 	%r16218, [%rd74];
	ld.shared.u32 	%r16219, [%rd75];
	ld.shared.u32 	%r16220, [%rd76];
	ld.shared.u32 	%r16221, [%rd77];
	ld.shared.u32 	%r16230, [%rd78];
	ld.shared.u32 	%r16231, [%rd79];
	ld.shared.u32 	%r16232, [%rd80];
	ld.shared.u32 	%r16233, [%rd81];
	// begin inline asm
	mov.b32 %r12265, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12276, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12264, %r16218, -2004318072;
	// begin inline asm
	lop3.b32 %r12262, %r815, %r12264, %r12265, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12266, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12267, %r12265, %r12266;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12270, %r12262, %r12267;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12273, %r826, %r12264, %r12276, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12277, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12278, %r12276, %r12277;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12281, %r12273, %r12278;
	// end inline asm
	shr.u32 	%r12286, %r12264, 8;
	// begin inline asm
	lop3.b32 %r12284, %r815, %r12286, %r12265, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12288, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12289, %r12265, %r12288;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12292, %r12284, %r12289;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12295, %r826, %r12286, %r12276, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12299, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12300, %r12276, %r12299;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12303, %r12295, %r12300;
	// end inline asm
	// begin inline asm
	mov.b32 %r12311, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12322, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12310, %r16219, -2004318072;
	// begin inline asm
	lop3.b32 %r12308, %r815, %r12310, %r12311, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12312, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12313, %r12311, %r12312;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12316, %r12308, %r12313;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12319, %r826, %r12310, %r12322, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12323, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12324, %r12322, %r12323;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12327, %r12319, %r12324;
	// end inline asm
	shr.u32 	%r12332, %r12310, 8;
	// begin inline asm
	lop3.b32 %r12330, %r815, %r12332, %r12311, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12334, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12335, %r12311, %r12334;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12338, %r12330, %r12335;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12341, %r826, %r12332, %r12322, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12345, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12346, %r12322, %r12345;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12349, %r12341, %r12346;
	// end inline asm
	// begin inline asm
	mov.b32 %r12357, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12368, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12356, %r16220, -2004318072;
	// begin inline asm
	lop3.b32 %r12354, %r815, %r12356, %r12357, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12358, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12359, %r12357, %r12358;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12362, %r12354, %r12359;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12365, %r826, %r12356, %r12368, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12369, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12370, %r12368, %r12369;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12373, %r12365, %r12370;
	// end inline asm
	shr.u32 	%r12378, %r12356, 8;
	// begin inline asm
	lop3.b32 %r12376, %r815, %r12378, %r12357, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12380, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12381, %r12357, %r12380;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12384, %r12376, %r12381;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12387, %r826, %r12378, %r12368, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12391, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12392, %r12368, %r12391;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12395, %r12387, %r12392;
	// end inline asm
	// begin inline asm
	mov.b32 %r12403, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12414, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12402, %r16221, -2004318072;
	// begin inline asm
	lop3.b32 %r12400, %r815, %r12402, %r12403, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12404, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12405, %r12403, %r12404;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12408, %r12400, %r12405;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12411, %r826, %r12402, %r12414, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12415, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12416, %r12414, %r12415;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12419, %r12411, %r12416;
	// end inline asm
	shr.u32 	%r12424, %r12402, 8;
	// begin inline asm
	lop3.b32 %r12422, %r815, %r12424, %r12403, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12426, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12427, %r12403, %r12426;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12430, %r12422, %r12427;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12433, %r826, %r12424, %r12414, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12437, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12438, %r12414, %r12437;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12441, %r12433, %r12438;
	// end inline asm
	// begin inline asm
	mov.b32 %r12449, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12460, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12448, %r16230, -2004318072;
	// begin inline asm
	lop3.b32 %r12446, %r815, %r12448, %r12449, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12450, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12451, %r12449, %r12450;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12454, %r12446, %r12451;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12457, %r826, %r12448, %r12460, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12461, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12462, %r12460, %r12461;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12465, %r12457, %r12462;
	// end inline asm
	shr.u32 	%r12470, %r12448, 8;
	// begin inline asm
	lop3.b32 %r12468, %r815, %r12470, %r12449, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12472, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12473, %r12449, %r12472;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12476, %r12468, %r12473;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12479, %r826, %r12470, %r12460, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12483, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12484, %r12460, %r12483;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12487, %r12479, %r12484;
	// end inline asm
	// begin inline asm
	mov.b32 %r12495, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12506, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12494, %r16231, -2004318072;
	// begin inline asm
	lop3.b32 %r12492, %r815, %r12494, %r12495, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12496, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12497, %r12495, %r12496;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12500, %r12492, %r12497;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12503, %r826, %r12494, %r12506, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12507, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12508, %r12506, %r12507;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12511, %r12503, %r12508;
	// end inline asm
	shr.u32 	%r12516, %r12494, 8;
	// begin inline asm
	lop3.b32 %r12514, %r815, %r12516, %r12495, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12518, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12519, %r12495, %r12518;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12522, %r12514, %r12519;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12525, %r826, %r12516, %r12506, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12529, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12530, %r12506, %r12529;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12533, %r12525, %r12530;
	// end inline asm
	// begin inline asm
	mov.b32 %r12541, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12552, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12540, %r16232, -2004318072;
	// begin inline asm
	lop3.b32 %r12538, %r815, %r12540, %r12541, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12542, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12543, %r12541, %r12542;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12546, %r12538, %r12543;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12549, %r826, %r12540, %r12552, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12553, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12554, %r12552, %r12553;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12557, %r12549, %r12554;
	// end inline asm
	shr.u32 	%r12562, %r12540, 8;
	// begin inline asm
	lop3.b32 %r12560, %r815, %r12562, %r12541, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12564, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12565, %r12541, %r12564;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12568, %r12560, %r12565;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12571, %r826, %r12562, %r12552, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12575, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12576, %r12552, %r12575;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12579, %r12571, %r12576;
	// end inline asm
	// begin inline asm
	mov.b32 %r12587, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12598, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12586, %r16233, -2004318072;
	// begin inline asm
	lop3.b32 %r12584, %r815, %r12586, %r12587, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12588, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12589, %r12587, %r12588;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12592, %r12584, %r12589;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12595, %r826, %r12586, %r12598, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12599, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12600, %r12598, %r12599;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12603, %r12595, %r12600;
	// end inline asm
	shr.u32 	%r12608, %r12586, 8;
	// begin inline asm
	lop3.b32 %r12606, %r815, %r12608, %r12587, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12610, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12611, %r12587, %r12610;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12614, %r12606, %r12611;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12617, %r826, %r12608, %r12598, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12621, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12622, %r12598, %r12621;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12625, %r12617, %r12622;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12628, %r379;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12630, %r12628, %r12270;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12633, %r379;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12635, %r12633, %r12281;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12638, %r379;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12640, %r12638, %r12292;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12643, %r379;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12645, %r12643, %r12303;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12648, %r379;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12650, %r12648, %r12316;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12653, %r379;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12655, %r12653, %r12327;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12658, %r379;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12660, %r12658, %r12338;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12663, %r379;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12665, %r12663, %r12349;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12668, %r379;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12670, %r12668, %r12362;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12673, %r379;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12675, %r12673, %r12373;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12678, %r379;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12680, %r12678, %r12384;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12683, %r379;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12685, %r12683, %r12395;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12688, %r379;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12690, %r12688, %r12408;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12693, %r379;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12695, %r12693, %r12419;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12698, %r379;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12700, %r12698, %r12430;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12703, %r379;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12705, %r12703, %r12441;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12708, %r397;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12710, %r12708, %r12454;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12713, %r397;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12715, %r12713, %r12465;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12718, %r397;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12720, %r12718, %r12476;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12723, %r397;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12725, %r12723, %r12487;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12728, %r397;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12730, %r12728, %r12500;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12733, %r397;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12735, %r12733, %r12511;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12738, %r397;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12740, %r12738, %r12522;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12743, %r397;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12745, %r12743, %r12533;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12748, %r397;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12750, %r12748, %r12546;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12753, %r397;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12755, %r12753, %r12557;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12758, %r397;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12760, %r12758, %r12568;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12763, %r397;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12765, %r12763, %r12579;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12768, %r397;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12770, %r12768, %r12592;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12773, %r397;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12775, %r12773, %r12603;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12778, %r397;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12780, %r12778, %r12614;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12783, %r397;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12785, %r12783, %r12625;
	// end inline asm
	// begin inline asm
	mov.b32 %r12793, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12804, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12790, %r815, %r816, %r12793, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12794, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12795, %r12793, %r12794;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12798, %r12790, %r12795;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12801, %r826, %r816, %r12804, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12805, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12806, %r12804, %r12805;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12809, %r12801, %r12806;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12812, %r815, %r838, %r12793, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12816, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12817, %r12793, %r12816;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12820, %r12812, %r12817;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12823, %r826, %r838, %r12804, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12827, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12828, %r12804, %r12827;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12831, %r12823, %r12828;
	// end inline asm
	// begin inline asm
	mov.b32 %r12839, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12850, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12836, %r815, %r862, %r12839, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12840, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12841, %r12839, %r12840;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12844, %r12836, %r12841;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12847, %r826, %r862, %r12850, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12851, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12852, %r12850, %r12851;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12855, %r12847, %r12852;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12858, %r815, %r884, %r12839, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12862, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12863, %r12839, %r12862;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12866, %r12858, %r12863;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12869, %r826, %r884, %r12850, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12873, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12874, %r12850, %r12873;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12877, %r12869, %r12874;
	// end inline asm
	// begin inline asm
	mov.b32 %r12885, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12896, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12882, %r815, %r908, %r12885, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12886, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12887, %r12885, %r12886;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12890, %r12882, %r12887;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12893, %r826, %r908, %r12896, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12897, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12898, %r12896, %r12897;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12901, %r12893, %r12898;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12904, %r815, %r930, %r12885, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12908, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12909, %r12885, %r12908;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12912, %r12904, %r12909;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12915, %r826, %r930, %r12896, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12919, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12920, %r12896, %r12919;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12923, %r12915, %r12920;
	// end inline asm
	// begin inline asm
	mov.b32 %r12931, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12942, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12928, %r815, %r954, %r12931, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12932, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12933, %r12931, %r12932;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12936, %r12928, %r12933;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12939, %r826, %r954, %r12942, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12943, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12944, %r12942, %r12943;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12947, %r12939, %r12944;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12950, %r815, %r976, %r12931, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12954, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12955, %r12931, %r12954;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12958, %r12950, %r12955;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12961, %r826, %r976, %r12942, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12965, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12966, %r12942, %r12965;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12969, %r12961, %r12966;
	// end inline asm
	// begin inline asm
	mov.b32 %r12977, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12988, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12974, %r815, %r1000, %r12977, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12978, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12979, %r12977, %r12978;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12982, %r12974, %r12979;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12985, %r826, %r1000, %r12988, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12989, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12990, %r12988, %r12989;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12993, %r12985, %r12990;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12996, %r815, %r1022, %r12977, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13000, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13001, %r12977, %r13000;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13004, %r12996, %r13001;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13007, %r826, %r1022, %r12988, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13011, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13012, %r12988, %r13011;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13015, %r13007, %r13012;
	// end inline asm
	// begin inline asm
	mov.b32 %r13023, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13034, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13020, %r815, %r1046, %r13023, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13024, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13025, %r13023, %r13024;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13028, %r13020, %r13025;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13031, %r826, %r1046, %r13034, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13035, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13036, %r13034, %r13035;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13039, %r13031, %r13036;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13042, %r815, %r1068, %r13023, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13046, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13047, %r13023, %r13046;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13050, %r13042, %r13047;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13053, %r826, %r1068, %r13034, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13057, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13058, %r13034, %r13057;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13061, %r13053, %r13058;
	// end inline asm
	// begin inline asm
	mov.b32 %r13069, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13080, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13066, %r815, %r1092, %r13069, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13070, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13071, %r13069, %r13070;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13074, %r13066, %r13071;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13077, %r826, %r1092, %r13080, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13081, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13082, %r13080, %r13081;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13085, %r13077, %r13082;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13088, %r815, %r1114, %r13069, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13092, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13093, %r13069, %r13092;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13096, %r13088, %r13093;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13099, %r826, %r1114, %r13080, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13103, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13104, %r13080, %r13103;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13107, %r13099, %r13104;
	// end inline asm
	// begin inline asm
	mov.b32 %r13115, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13126, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13112, %r815, %r1138, %r13115, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13116, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13117, %r13115, %r13116;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13120, %r13112, %r13117;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13123, %r826, %r1138, %r13126, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13127, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13128, %r13126, %r13127;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13131, %r13123, %r13128;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13134, %r815, %r1160, %r13115, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13138, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13139, %r13115, %r13138;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13142, %r13134, %r13139;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13145, %r826, %r1160, %r13126, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13149, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13150, %r13126, %r13149;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13153, %r13145, %r13150;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13156, %r271, %r12798, %r12630;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13160, %r271, %r12809, %r12635;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13164, %r271, %r12820, %r12640;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13168, %r271, %r12831, %r12645;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13172, %r271, %r12844, %r12650;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13176, %r271, %r12855, %r12655;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13180, %r271, %r12866, %r12660;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13184, %r271, %r12877, %r12665;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13188, %r271, %r12890, %r12670;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13192, %r271, %r12901, %r12675;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13196, %r271, %r12912, %r12680;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13200, %r271, %r12923, %r12685;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13204, %r271, %r12936, %r12690;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13208, %r271, %r12947, %r12695;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13212, %r271, %r12958, %r12700;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13216, %r271, %r12969, %r12705;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13220, %r289, %r12982, %r12710;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13224, %r289, %r12993, %r12715;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13228, %r289, %r13004, %r12720;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13232, %r289, %r13015, %r12725;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13236, %r289, %r13028, %r12730;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13240, %r289, %r13039, %r12735;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13244, %r289, %r13050, %r12740;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13248, %r289, %r13061, %r12745;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13252, %r289, %r13074, %r12750;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13256, %r289, %r13085, %r12755;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13260, %r289, %r13096, %r12760;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13264, %r289, %r13107, %r12765;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13268, %r289, %r13120, %r12770;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13272, %r289, %r13131, %r12775;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13276, %r289, %r13142, %r12780;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13280, %r289, %r13153, %r12785;
	// end inline asm
	// begin inline asm
	mov.b32 %r13289, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13300, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13286, %r815, %r4632, %r13289, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13290, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13291, %r13289, %r13290;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13294, %r13286, %r13291;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13297, %r826, %r4632, %r13300, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13301, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13302, %r13300, %r13301;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13305, %r13297, %r13302;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13308, %r815, %r4654, %r13289, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13312, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13313, %r13289, %r13312;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13316, %r13308, %r13313;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13319, %r826, %r4654, %r13300, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13323, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13324, %r13300, %r13323;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13327, %r13319, %r13324;
	// end inline asm
	// begin inline asm
	mov.b32 %r13335, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13346, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13332, %r815, %r4678, %r13335, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13336, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13337, %r13335, %r13336;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13340, %r13332, %r13337;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13343, %r826, %r4678, %r13346, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13347, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13348, %r13346, %r13347;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13351, %r13343, %r13348;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13354, %r815, %r4700, %r13335, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13358, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13359, %r13335, %r13358;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13362, %r13354, %r13359;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13365, %r826, %r4700, %r13346, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13369, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13370, %r13346, %r13369;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13373, %r13365, %r13370;
	// end inline asm
	// begin inline asm
	mov.b32 %r13381, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13392, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13378, %r815, %r4724, %r13381, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13382, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13383, %r13381, %r13382;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13386, %r13378, %r13383;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13389, %r826, %r4724, %r13392, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13393, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13394, %r13392, %r13393;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13397, %r13389, %r13394;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13400, %r815, %r4746, %r13381, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13404, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13405, %r13381, %r13404;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13408, %r13400, %r13405;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13411, %r826, %r4746, %r13392, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13415, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13416, %r13392, %r13415;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13419, %r13411, %r13416;
	// end inline asm
	// begin inline asm
	mov.b32 %r13427, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13438, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13424, %r815, %r4770, %r13427, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13428, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13429, %r13427, %r13428;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13432, %r13424, %r13429;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13435, %r826, %r4770, %r13438, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13439, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13440, %r13438, %r13439;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13443, %r13435, %r13440;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13446, %r815, %r4792, %r13427, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13450, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13451, %r13427, %r13450;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13454, %r13446, %r13451;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13457, %r826, %r4792, %r13438, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13461, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13462, %r13438, %r13461;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13465, %r13457, %r13462;
	// end inline asm
	// begin inline asm
	mov.b32 %r13473, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13484, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13470, %r815, %r4816, %r13473, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13474, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13475, %r13473, %r13474;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13478, %r13470, %r13475;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13481, %r826, %r4816, %r13484, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13485, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13486, %r13484, %r13485;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13489, %r13481, %r13486;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13492, %r815, %r4838, %r13473, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13496, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13497, %r13473, %r13496;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13500, %r13492, %r13497;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13503, %r826, %r4838, %r13484, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13507, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13508, %r13484, %r13507;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13511, %r13503, %r13508;
	// end inline asm
	// begin inline asm
	mov.b32 %r13519, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13530, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13516, %r815, %r4862, %r13519, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13520, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13521, %r13519, %r13520;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13524, %r13516, %r13521;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13527, %r826, %r4862, %r13530, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13531, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13532, %r13530, %r13531;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13535, %r13527, %r13532;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13538, %r815, %r4884, %r13519, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13542, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13543, %r13519, %r13542;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13546, %r13538, %r13543;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13549, %r826, %r4884, %r13530, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13553, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13554, %r13530, %r13553;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13557, %r13549, %r13554;
	// end inline asm
	// begin inline asm
	mov.b32 %r13565, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13576, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13562, %r815, %r4908, %r13565, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13566, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13567, %r13565, %r13566;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13570, %r13562, %r13567;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13573, %r826, %r4908, %r13576, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13577, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13578, %r13576, %r13577;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13581, %r13573, %r13578;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13584, %r815, %r4930, %r13565, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13588, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13589, %r13565, %r13588;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13592, %r13584, %r13589;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13595, %r826, %r4930, %r13576, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13599, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13600, %r13576, %r13599;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13603, %r13595, %r13600;
	// end inline asm
	// begin inline asm
	mov.b32 %r13611, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13622, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13608, %r815, %r4954, %r13611, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13612, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13613, %r13611, %r13612;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13616, %r13608, %r13613;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13619, %r826, %r4954, %r13622, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13623, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13624, %r13622, %r13623;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13627, %r13619, %r13624;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13630, %r815, %r4976, %r13611, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13634, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13635, %r13611, %r13634;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13638, %r13630, %r13635;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13641, %r826, %r4976, %r13622, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13645, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13646, %r13622, %r13645;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13649, %r13641, %r13646;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13652, %r307;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13654, %r13652, %r13294, %r13156;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13658, %r307;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13660, %r13658, %r13305, %r13160;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13664, %r307;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13666, %r13664, %r13316, %r13164;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13670, %r307;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13672, %r13670, %r13327, %r13168;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13676, %r307;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13678, %r13676, %r13340, %r13172;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13682, %r307;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13684, %r13682, %r13351, %r13176;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13688, %r307;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13690, %r13688, %r13362, %r13180;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13694, %r307;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13696, %r13694, %r13373, %r13184;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13700, %r307;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13702, %r13700, %r13386, %r13188;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13706, %r307;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13708, %r13706, %r13397, %r13192;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13712, %r307;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13714, %r13712, %r13408, %r13196;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13718, %r307;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13720, %r13718, %r13419, %r13200;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13724, %r307;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13726, %r13724, %r13432, %r13204;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13730, %r307;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13732, %r13730, %r13443, %r13208;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13736, %r307;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13738, %r13736, %r13454, %r13212;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13742, %r307;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13744, %r13742, %r13465, %r13216;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13748, %r325;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13750, %r13748, %r13478, %r13220;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13754, %r325;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13756, %r13754, %r13489, %r13224;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13760, %r325;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13762, %r13760, %r13500, %r13228;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13766, %r325;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13768, %r13766, %r13511, %r13232;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13772, %r325;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13774, %r13772, %r13524, %r13236;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13778, %r325;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13780, %r13778, %r13535, %r13240;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13784, %r325;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13786, %r13784, %r13546, %r13244;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13790, %r325;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13792, %r13790, %r13557, %r13248;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13796, %r325;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13798, %r13796, %r13570, %r13252;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13802, %r325;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13804, %r13802, %r13581, %r13256;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13808, %r325;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13810, %r13808, %r13592, %r13260;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13814, %r325;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13816, %r13814, %r13603, %r13264;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13820, %r325;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13822, %r13820, %r13616, %r13268;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13826, %r325;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13828, %r13826, %r13627, %r13272;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13832, %r325;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13834, %r13832, %r13638, %r13276;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13838, %r325;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13840, %r13838, %r13649, %r13280;
	// end inline asm
	// begin inline asm
	mov.b32 %r13849, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13860, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13846, %r815, %r8448, %r13849, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13850, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13851, %r13849, %r13850;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13854, %r13846, %r13851;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13857, %r826, %r8448, %r13860, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13861, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13862, %r13860, %r13861;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13865, %r13857, %r13862;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13868, %r815, %r8470, %r13849, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13872, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13873, %r13849, %r13872;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13876, %r13868, %r13873;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13879, %r826, %r8470, %r13860, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13883, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13884, %r13860, %r13883;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13887, %r13879, %r13884;
	// end inline asm
	// begin inline asm
	mov.b32 %r13895, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13906, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13892, %r815, %r8494, %r13895, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13896, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13897, %r13895, %r13896;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13900, %r13892, %r13897;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13903, %r826, %r8494, %r13906, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13907, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13908, %r13906, %r13907;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13911, %r13903, %r13908;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13914, %r815, %r8516, %r13895, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13918, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13919, %r13895, %r13918;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13922, %r13914, %r13919;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13925, %r826, %r8516, %r13906, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13929, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13930, %r13906, %r13929;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13933, %r13925, %r13930;
	// end inline asm
	// begin inline asm
	mov.b32 %r13941, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13952, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13938, %r815, %r8540, %r13941, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13942, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13943, %r13941, %r13942;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13946, %r13938, %r13943;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13949, %r826, %r8540, %r13952, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13953, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13954, %r13952, %r13953;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13957, %r13949, %r13954;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13960, %r815, %r8562, %r13941, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13964, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13965, %r13941, %r13964;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13968, %r13960, %r13965;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13971, %r826, %r8562, %r13952, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13975, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13976, %r13952, %r13975;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13979, %r13971, %r13976;
	// end inline asm
	// begin inline asm
	mov.b32 %r13987, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13998, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13984, %r815, %r8586, %r13987, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13988, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13989, %r13987, %r13988;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13992, %r13984, %r13989;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13995, %r826, %r8586, %r13998, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13999, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14000, %r13998, %r13999;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14003, %r13995, %r14000;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14006, %r815, %r8608, %r13987, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14010, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14011, %r13987, %r14010;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14014, %r14006, %r14011;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14017, %r826, %r8608, %r13998, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14021, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14022, %r13998, %r14021;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14025, %r14017, %r14022;
	// end inline asm
	// begin inline asm
	mov.b32 %r14033, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r14044, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14030, %r815, %r8632, %r14033, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14034, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14035, %r14033, %r14034;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14038, %r14030, %r14035;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14041, %r826, %r8632, %r14044, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14045, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14046, %r14044, %r14045;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14049, %r14041, %r14046;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14052, %r815, %r8654, %r14033, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14056, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14057, %r14033, %r14056;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14060, %r14052, %r14057;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14063, %r826, %r8654, %r14044, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14067, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14068, %r14044, %r14067;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14071, %r14063, %r14068;
	// end inline asm
	// begin inline asm
	mov.b32 %r14079, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r14090, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14076, %r815, %r8678, %r14079, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14080, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14081, %r14079, %r14080;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14084, %r14076, %r14081;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14087, %r826, %r8678, %r14090, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14091, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14092, %r14090, %r14091;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14095, %r14087, %r14092;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14098, %r815, %r8700, %r14079, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14102, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14103, %r14079, %r14102;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14106, %r14098, %r14103;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14109, %r826, %r8700, %r14090, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14113, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14114, %r14090, %r14113;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14117, %r14109, %r14114;
	// end inline asm
	// begin inline asm
	mov.b32 %r14125, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r14136, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14122, %r815, %r8724, %r14125, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14126, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14127, %r14125, %r14126;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14130, %r14122, %r14127;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14133, %r826, %r8724, %r14136, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14137, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14138, %r14136, %r14137;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14141, %r14133, %r14138;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14144, %r815, %r8746, %r14125, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14148, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14149, %r14125, %r14148;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14152, %r14144, %r14149;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14155, %r826, %r8746, %r14136, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14159, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14160, %r14136, %r14159;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14163, %r14155, %r14160;
	// end inline asm
	// begin inline asm
	mov.b32 %r14171, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r14182, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14168, %r815, %r8770, %r14171, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14172, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14173, %r14171, %r14172;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14176, %r14168, %r14173;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14179, %r826, %r8770, %r14182, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14183, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14184, %r14182, %r14183;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14187, %r14179, %r14184;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14190, %r815, %r8792, %r14171, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14194, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14195, %r14171, %r14194;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14198, %r14190, %r14195;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14201, %r826, %r8792, %r14182, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14205, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14206, %r14182, %r14205;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14209, %r14201, %r14206;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14347, %r343, %r13854, %r13654;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14344, %r343, %r13865, %r13660;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14356, %r343, %r13876, %r13666;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14353, %r343, %r13887, %r13672;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14365, %r343, %r13900, %r13678;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14362, %r343, %r13911, %r13684;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14374, %r343, %r13922, %r13690;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14371, %r343, %r13933, %r13696;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14383, %r343, %r13946, %r13702;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14380, %r343, %r13957, %r13708;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14392, %r343, %r13968, %r13714;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14389, %r343, %r13979, %r13720;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14401, %r343, %r13992, %r13726;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14398, %r343, %r14003, %r13732;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14410, %r343, %r14014, %r13738;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14407, %r343, %r14025, %r13744;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14419, %r361, %r14038, %r13750;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14416, %r361, %r14049, %r13756;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14428, %r361, %r14060, %r13762;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14425, %r361, %r14071, %r13768;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14437, %r361, %r14084, %r13774;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14434, %r361, %r14095, %r13780;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14446, %r361, %r14106, %r13786;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14443, %r361, %r14117, %r13792;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14455, %r361, %r14130, %r13798;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14452, %r361, %r14141, %r13804;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14464, %r361, %r14152, %r13810;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14461, %r361, %r14163, %r13816;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14473, %r361, %r14176, %r13822;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14470, %r361, %r14187, %r13828;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14482, %r361, %r14198, %r13834;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14479, %r361, %r14209, %r13840;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14340, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14342, %r14340, %r14344;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14345, %r425, %r14347, %r14342;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14349, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14351, %r14349, %r14353;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14354, %r425, %r14356, %r14351;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14358, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14360, %r14358, %r14362;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14363, %r425, %r14365, %r14360;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14367, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14369, %r14367, %r14371;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14372, %r425, %r14374, %r14369;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14376, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14378, %r14376, %r14380;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14381, %r425, %r14383, %r14378;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14385, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14387, %r14385, %r14389;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14390, %r425, %r14392, %r14387;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14394, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14396, %r14394, %r14398;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14399, %r425, %r14401, %r14396;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14403, %r431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14405, %r14403, %r14407;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14408, %r425, %r14410, %r14405;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14412, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14414, %r14412, %r14416;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14417, %r428, %r14419, %r14414;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14421, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14423, %r14421, %r14425;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14426, %r428, %r14428, %r14423;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14430, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14432, %r14430, %r14434;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14435, %r428, %r14437, %r14432;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14439, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14441, %r14439, %r14443;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14444, %r428, %r14446, %r14441;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14448, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14450, %r14448, %r14452;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14453, %r428, %r14455, %r14450;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14457, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14459, %r14457, %r14461;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14462, %r428, %r14464, %r14459;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14466, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14468, %r14466, %r14470;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14471, %r428, %r14473, %r14468;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14475, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14477, %r14475, %r14479;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14480, %r428, %r14482, %r14477;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14484, %r431, %r14347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14487, %r425, %r14344, %r14484;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14491, %r431, %r14356;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14494, %r425, %r14353, %r14491;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14498, %r431, %r14365;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14501, %r425, %r14362, %r14498;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14505, %r431, %r14374;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14508, %r425, %r14371, %r14505;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14512, %r431, %r14383;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14515, %r425, %r14380, %r14512;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14519, %r431, %r14392;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14522, %r425, %r14389, %r14519;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14526, %r431, %r14401;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14529, %r425, %r14398, %r14526;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14533, %r431, %r14410;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14536, %r425, %r14407, %r14533;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14540, %r434, %r14419;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14543, %r428, %r14416, %r14540;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14547, %r434, %r14428;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14550, %r428, %r14425, %r14547;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14554, %r434, %r14437;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14557, %r428, %r14434, %r14554;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14561, %r434, %r14446;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14564, %r428, %r14443, %r14561;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14568, %r434, %r14455;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14571, %r428, %r14452, %r14568;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14575, %r434, %r14464;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14578, %r428, %r14461, %r14575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14582, %r434, %r14473;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14585, %r428, %r14470, %r14582;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14589, %r434, %r14482;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14592, %r428, %r14479, %r14589;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14763, %r14760}, {%r473, %r479, %r476, %r482}, {%r14345, %r14487}, {%r15171, %r15171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14772, %r14769}, {%r473, %r479, %r476, %r482}, {%r14354, %r14494}, {%r15171, %r15171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14781, %r14778}, {%r473, %r479, %r476, %r482}, {%r14363, %r14501}, {%r15171, %r15171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14790, %r14787}, {%r473, %r479, %r476, %r482}, {%r14372, %r14508}, {%r15171, %r15171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14799, %r14796}, {%r473, %r479, %r476, %r482}, {%r14381, %r14515}, {%r15171, %r15171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14808, %r14805}, {%r473, %r479, %r476, %r482}, {%r14390, %r14522}, {%r15171, %r15171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14817, %r14814}, {%r473, %r479, %r476, %r482}, {%r14399, %r14529}, {%r15171, %r15171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14826, %r14823}, {%r473, %r479, %r476, %r482}, {%r14408, %r14536}, {%r15171, %r15171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14835, %r14832}, {%r473, %r479, %r476, %r482}, {%r14417, %r14543}, {%r15171, %r15171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14844, %r14841}, {%r473, %r479, %r476, %r482}, {%r14426, %r14550}, {%r15171, %r15171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14853, %r14850}, {%r473, %r479, %r476, %r482}, {%r14435, %r14557}, {%r15171, %r15171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14862, %r14859}, {%r473, %r479, %r476, %r482}, {%r14444, %r14564}, {%r15171, %r15171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14871, %r14868}, {%r473, %r479, %r476, %r482}, {%r14453, %r14571}, {%r15171, %r15171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14880, %r14877}, {%r473, %r479, %r476, %r482}, {%r14462, %r14578}, {%r15171, %r15171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14889, %r14886}, {%r473, %r479, %r476, %r482}, {%r14471, %r14585}, {%r15171, %r15171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14898, %r14895}, {%r473, %r479, %r476, %r482}, {%r14480, %r14592}, {%r15171, %r15171};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14756, %r523;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14758, %r14756, %r14760;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14761, %r520, %r14763, %r14758;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14765, %r523;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14767, %r14765, %r14769;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14770, %r520, %r14772, %r14767;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14774, %r523;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14776, %r14774, %r14778;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14779, %r520, %r14781, %r14776;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14783, %r523;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14785, %r14783, %r14787;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14788, %r520, %r14790, %r14785;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14792, %r523;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14794, %r14792, %r14796;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14797, %r520, %r14799, %r14794;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14801, %r523;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14803, %r14801, %r14805;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14806, %r520, %r14808, %r14803;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14810, %r523;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14812, %r14810, %r14814;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14815, %r520, %r14817, %r14812;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14819, %r523;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14821, %r14819, %r14823;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14824, %r520, %r14826, %r14821;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14828, %r523;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14830, %r14828, %r14832;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14833, %r520, %r14835, %r14830;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14837, %r523;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14839, %r14837, %r14841;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14842, %r520, %r14844, %r14839;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14846, %r523;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14848, %r14846, %r14850;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14851, %r520, %r14853, %r14848;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14855, %r523;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14857, %r14855, %r14859;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14860, %r520, %r14862, %r14857;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14864, %r523;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14866, %r14864, %r14868;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14869, %r520, %r14871, %r14866;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14873, %r523;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14875, %r14873, %r14877;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14878, %r520, %r14880, %r14875;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14882, %r523;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14884, %r14882, %r14886;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14887, %r520, %r14889, %r14884;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14891, %r523;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14893, %r14891, %r14895;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14896, %r520, %r14898, %r14893;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14900, %r523, %r14763;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14903, %r520, %r14760, %r14900;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14907, %r523, %r14772;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14910, %r520, %r14769, %r14907;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14914, %r523, %r14781;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14917, %r520, %r14778, %r14914;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14921, %r523, %r14790;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14924, %r520, %r14787, %r14921;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14928, %r523, %r14799;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14931, %r520, %r14796, %r14928;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14935, %r523, %r14808;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14938, %r520, %r14805, %r14935;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14942, %r523, %r14817;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14945, %r520, %r14814, %r14942;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14949, %r523, %r14826;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14952, %r520, %r14823, %r14949;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14956, %r523, %r14835;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14959, %r520, %r14832, %r14956;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14963, %r523, %r14844;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14966, %r520, %r14841, %r14963;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14970, %r523, %r14853;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14973, %r520, %r14850, %r14970;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14977, %r523, %r14862;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14980, %r520, %r14859, %r14977;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14984, %r523, %r14871;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14987, %r520, %r14868, %r14984;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14991, %r523, %r14880;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14994, %r520, %r14877, %r14991;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14998, %r523, %r14889;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15001, %r520, %r14886, %r14998;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15005, %r523, %r14898;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15008, %r520, %r14895, %r15005;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15301, %r15304}, {%r563, %r569, %r566, %r572}, {%r14761, %r14903}, {%r15171, %r15171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15307, %r15310}, {%r563, %r569, %r566, %r572}, {%r14770, %r14910}, {%r15171, %r15171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15313, %r15316}, {%r563, %r569, %r566, %r572}, {%r14779, %r14917}, {%r15171, %r15171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15319, %r15322}, {%r563, %r569, %r566, %r572}, {%r14788, %r14924}, {%r15171, %r15171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15325, %r15328}, {%r563, %r569, %r566, %r572}, {%r14797, %r14931}, {%r15171, %r15171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15331, %r15334}, {%r563, %r569, %r566, %r572}, {%r14806, %r14938}, {%r15171, %r15171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15337, %r15340}, {%r563, %r569, %r566, %r572}, {%r14815, %r14945}, {%r15171, %r15171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15343, %r15346}, {%r563, %r569, %r566, %r572}, {%r14824, %r14952}, {%r15171, %r15171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15302, %r15305}, {%r563, %r569, %r566, %r572}, {%r14833, %r14959}, {%r15171, %r15171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15308, %r15311}, {%r563, %r569, %r566, %r572}, {%r14842, %r14966}, {%r15171, %r15171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15314, %r15317}, {%r563, %r569, %r566, %r572}, {%r14851, %r14973}, {%r15171, %r15171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15320, %r15323}, {%r563, %r569, %r566, %r572}, {%r14860, %r14980}, {%r15171, %r15171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15326, %r15329}, {%r563, %r569, %r566, %r572}, {%r14869, %r14987}, {%r15171, %r15171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15332, %r15335}, {%r563, %r569, %r566, %r572}, {%r14878, %r14994}, {%r15171, %r15171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15338, %r15341}, {%r563, %r569, %r566, %r572}, {%r14887, %r15001}, {%r15171, %r15171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15344, %r15347}, {%r563, %r569, %r566, %r572}, {%r14896, %r15008}, {%r15171, %r15171};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15300, %r15301, %r15302;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15303, %r15304, %r15305;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15306, %r15307, %r15308;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15309, %r15310, %r15311;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15312, %r15313, %r15314;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15315, %r15316, %r15317;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15318, %r15319, %r15320;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15321, %r15322, %r15323;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15324, %r15325, %r15326;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15327, %r15328, %r15329;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15330, %r15331, %r15332;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15333, %r15334, %r15335;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15336, %r15337, %r15338;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15339, %r15340, %r15341;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15342, %r15343, %r15344;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15345, %r15346, %r15347;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15348, %r15301, %r15302;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15351, %r15304, %r15305;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15354, %r15307, %r15308;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15357, %r15310, %r15311;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15360, %r15313, %r15314;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15363, %r15316, %r15317;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15366, %r15319, %r15320;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15369, %r15322, %r15323;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15372, %r15325, %r15326;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15375, %r15328, %r15329;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15378, %r15331, %r15332;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15381, %r15334, %r15335;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15384, %r15337, %r15338;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15387, %r15340, %r15341;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15390, %r15343, %r15344;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15393, %r15346, %r15347;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15396, %r212, %r15300;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15399, %r212, %r15303;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15402, %r212, %r15306;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15405, %r212, %r15309;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15408, %r212, %r15312;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15411, %r212, %r15315;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15414, %r212, %r15318;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15417, %r212, %r15321;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15420, %r212, %r15324;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15423, %r212, %r15327;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15426, %r212, %r15330;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15429, %r212, %r15333;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15432, %r212, %r15336;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15435, %r212, %r15339;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15438, %r212, %r15342;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15441, %r212, %r15345;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15444, %r213, %r15348;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15447, %r213, %r15351;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15450, %r213, %r15354;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15453, %r213, %r15357;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15456, %r213, %r15360;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15459, %r213, %r15363;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15462, %r213, %r15366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15465, %r213, %r15369;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15468, %r213, %r15372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15471, %r213, %r15375;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15474, %r213, %r15378;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15477, %r213, %r15381;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15480, %r213, %r15384;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15483, %r213, %r15387;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15486, %r213, %r15390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15489, %r213, %r15393;
	// end inline asm
	// begin inline asm
	mov.b32 %r15492, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15493, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15494, %r15396, %r15492;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15497, %r15494, %r15493;
	// end inline asm
	// begin inline asm
	mov.b32 %r15500, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15501, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15502, %r15399, %r15500;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15505, %r15502, %r15501;
	// end inline asm
	// begin inline asm
	mov.b32 %r15508, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15509, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15510, %r15402, %r15508;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15513, %r15510, %r15509;
	// end inline asm
	// begin inline asm
	mov.b32 %r15516, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15517, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15518, %r15405, %r15516;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15521, %r15518, %r15517;
	// end inline asm
	// begin inline asm
	mov.b32 %r15524, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15525, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15526, %r15408, %r15524;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15529, %r15526, %r15525;
	// end inline asm
	// begin inline asm
	mov.b32 %r15532, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15533, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15534, %r15411, %r15532;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15537, %r15534, %r15533;
	// end inline asm
	// begin inline asm
	mov.b32 %r15540, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15541, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15542, %r15414, %r15540;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15545, %r15542, %r15541;
	// end inline asm
	// begin inline asm
	mov.b32 %r15548, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15549, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15550, %r15417, %r15548;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15553, %r15550, %r15549;
	// end inline asm
	// begin inline asm
	mov.b32 %r15556, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15557, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15558, %r15420, %r15556;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15561, %r15558, %r15557;
	// end inline asm
	// begin inline asm
	mov.b32 %r15564, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15565, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15566, %r15423, %r15564;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15569, %r15566, %r15565;
	// end inline asm
	// begin inline asm
	mov.b32 %r15572, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15573, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15574, %r15426, %r15572;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15577, %r15574, %r15573;
	// end inline asm
	// begin inline asm
	mov.b32 %r15580, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15581, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15582, %r15429, %r15580;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15585, %r15582, %r15581;
	// end inline asm
	// begin inline asm
	mov.b32 %r15588, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15589, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15590, %r15432, %r15588;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15593, %r15590, %r15589;
	// end inline asm
	// begin inline asm
	mov.b32 %r15596, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15597, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15598, %r15435, %r15596;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15601, %r15598, %r15597;
	// end inline asm
	// begin inline asm
	mov.b32 %r15604, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15605, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15606, %r15438, %r15604;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15609, %r15606, %r15605;
	// end inline asm
	// begin inline asm
	mov.b32 %r15612, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15613, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15614, %r15441, %r15612;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15617, %r15614, %r15613;
	// end inline asm
	// begin inline asm
	mov.b32 %r15620, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15621, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15622, %r15444, %r15620;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15625, %r15622, %r15621;
	// end inline asm
	// begin inline asm
	mov.b32 %r15628, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15629, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15630, %r15447, %r15628;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15633, %r15630, %r15629;
	// end inline asm
	// begin inline asm
	mov.b32 %r15636, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15637, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15638, %r15450, %r15636;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15641, %r15638, %r15637;
	// end inline asm
	// begin inline asm
	mov.b32 %r15644, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15645, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15646, %r15453, %r15644;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15649, %r15646, %r15645;
	// end inline asm
	// begin inline asm
	mov.b32 %r15652, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15653, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15654, %r15456, %r15652;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15657, %r15654, %r15653;
	// end inline asm
	// begin inline asm
	mov.b32 %r15660, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15661, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15662, %r15459, %r15660;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15665, %r15662, %r15661;
	// end inline asm
	// begin inline asm
	mov.b32 %r15668, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15669, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15670, %r15462, %r15668;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15673, %r15670, %r15669;
	// end inline asm
	// begin inline asm
	mov.b32 %r15676, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15677, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15678, %r15465, %r15676;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15681, %r15678, %r15677;
	// end inline asm
	// begin inline asm
	mov.b32 %r15684, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15685, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15686, %r15468, %r15684;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15689, %r15686, %r15685;
	// end inline asm
	// begin inline asm
	mov.b32 %r15692, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15693, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15694, %r15471, %r15692;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15697, %r15694, %r15693;
	// end inline asm
	// begin inline asm
	mov.b32 %r15700, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15701, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15702, %r15474, %r15700;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15705, %r15702, %r15701;
	// end inline asm
	// begin inline asm
	mov.b32 %r15708, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15709, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15710, %r15477, %r15708;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15713, %r15710, %r15709;
	// end inline asm
	// begin inline asm
	mov.b32 %r15716, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15717, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15718, %r15480, %r15716;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15721, %r15718, %r15717;
	// end inline asm
	// begin inline asm
	mov.b32 %r15724, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15725, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15726, %r15483, %r15724;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15729, %r15726, %r15725;
	// end inline asm
	// begin inline asm
	mov.b32 %r15732, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15733, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15734, %r15486, %r15732;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15737, %r15734, %r15733;
	// end inline asm
	// begin inline asm
	mov.b32 %r15740, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15741, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15742, %r15489, %r15740;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15745, %r15742, %r15741;
	// end inline asm
	// begin inline asm
	mov.b32 %r15751, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r15749, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15750, %r15751, %r15749;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15753, %r15497, %r15750;
	// end inline asm
	// begin inline asm
	mov.b32 %r15756, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15757, %r15751, %r15756;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15760, %r15505, %r15757;
	// end inline asm
	// begin inline asm
	mov.b32 %r15763, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15764, %r15751, %r15763;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15767, %r15513, %r15764;
	// end inline asm
	// begin inline asm
	mov.b32 %r15770, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15771, %r15751, %r15770;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15774, %r15521, %r15771;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15777, %r15753, %r15767, %r4332;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15781, %r15760, %r15774, %r4332;
	// end inline asm
	shl.b32 	%r15788, %r15781, 4;
	// begin inline asm
	lop3.b32 %r15785, %r4338, %r15777, %r15788, 202;
	// end inline asm
	xor.b32  	%r16108, %r15785, -2004318072;
	// begin inline asm
	mov.b32 %r15792, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r15790, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15791, %r15792, %r15790;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15794, %r15529, %r15791;
	// end inline asm
	// begin inline asm
	mov.b32 %r15797, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15798, %r15792, %r15797;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15801, %r15537, %r15798;
	// end inline asm
	// begin inline asm
	mov.b32 %r15804, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15805, %r15792, %r15804;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15808, %r15545, %r15805;
	// end inline asm
	// begin inline asm
	mov.b32 %r15811, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15812, %r15792, %r15811;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15815, %r15553, %r15812;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15818, %r15794, %r15808, %r4332;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15822, %r15801, %r15815, %r4332;
	// end inline asm
	shl.b32 	%r15829, %r15822, 4;
	// begin inline asm
	lop3.b32 %r15826, %r4338, %r15818, %r15829, 202;
	// end inline asm
	xor.b32  	%r16109, %r15826, -2004318072;
	// begin inline asm
	mov.b32 %r15833, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r15831, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15832, %r15833, %r15831;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15835, %r15561, %r15832;
	// end inline asm
	// begin inline asm
	mov.b32 %r15838, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15839, %r15833, %r15838;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15842, %r15569, %r15839;
	// end inline asm
	// begin inline asm
	mov.b32 %r15845, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15846, %r15833, %r15845;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15849, %r15577, %r15846;
	// end inline asm
	// begin inline asm
	mov.b32 %r15852, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15853, %r15833, %r15852;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15856, %r15585, %r15853;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15859, %r15835, %r15849, %r4332;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15863, %r15842, %r15856, %r4332;
	// end inline asm
	shl.b32 	%r15870, %r15863, 4;
	// begin inline asm
	lop3.b32 %r15867, %r4338, %r15859, %r15870, 202;
	// end inline asm
	xor.b32  	%r16110, %r15867, -2004318072;
	// begin inline asm
	mov.b32 %r15874, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r15872, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15873, %r15874, %r15872;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15876, %r15593, %r15873;
	// end inline asm
	// begin inline asm
	mov.b32 %r15879, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15880, %r15874, %r15879;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15883, %r15601, %r15880;
	// end inline asm
	// begin inline asm
	mov.b32 %r15886, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15887, %r15874, %r15886;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15890, %r15609, %r15887;
	// end inline asm
	// begin inline asm
	mov.b32 %r15893, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15894, %r15874, %r15893;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15897, %r15617, %r15894;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15900, %r15876, %r15890, %r4332;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15904, %r15883, %r15897, %r4332;
	// end inline asm
	shl.b32 	%r15911, %r15904, 4;
	// begin inline asm
	lop3.b32 %r15908, %r4338, %r15900, %r15911, 202;
	// end inline asm
	xor.b32  	%r16111, %r15908, -2004318072;
	// begin inline asm
	mov.b32 %r15915, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r15913, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15914, %r15915, %r15913;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15917, %r15625, %r15914;
	// end inline asm
	// begin inline asm
	mov.b32 %r15920, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15921, %r15915, %r15920;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15924, %r15633, %r15921;
	// end inline asm
	// begin inline asm
	mov.b32 %r15927, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15928, %r15915, %r15927;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15931, %r15641, %r15928;
	// end inline asm
	// begin inline asm
	mov.b32 %r15934, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15935, %r15915, %r15934;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15938, %r15649, %r15935;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15941, %r15917, %r15931, %r4332;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15945, %r15924, %r15938, %r4332;
	// end inline asm
	shl.b32 	%r15952, %r15945, 4;
	// begin inline asm
	lop3.b32 %r15949, %r4338, %r15941, %r15952, 202;
	// end inline asm
	xor.b32  	%r16112, %r15949, -2004318072;
	// begin inline asm
	mov.b32 %r15956, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r15954, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15955, %r15956, %r15954;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15958, %r15657, %r15955;
	// end inline asm
	// begin inline asm
	mov.b32 %r15961, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15962, %r15956, %r15961;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15965, %r15665, %r15962;
	// end inline asm
	// begin inline asm
	mov.b32 %r15968, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15969, %r15956, %r15968;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15972, %r15673, %r15969;
	// end inline asm
	// begin inline asm
	mov.b32 %r15975, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15976, %r15956, %r15975;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15979, %r15681, %r15976;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15982, %r15958, %r15972, %r4332;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15986, %r15965, %r15979, %r4332;
	// end inline asm
	shl.b32 	%r15993, %r15986, 4;
	// begin inline asm
	lop3.b32 %r15990, %r4338, %r15982, %r15993, 202;
	// end inline asm
	xor.b32  	%r16113, %r15990, -2004318072;
	// begin inline asm
	mov.b32 %r15997, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r15995, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15996, %r15997, %r15995;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15999, %r15689, %r15996;
	// end inline asm
	// begin inline asm
	mov.b32 %r16002, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16003, %r15997, %r16002;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16006, %r15697, %r16003;
	// end inline asm
	// begin inline asm
	mov.b32 %r16009, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16010, %r15997, %r16009;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16013, %r15705, %r16010;
	// end inline asm
	// begin inline asm
	mov.b32 %r16016, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16017, %r15997, %r16016;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16020, %r15713, %r16017;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16023, %r15999, %r16013, %r4332;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16027, %r16006, %r16020, %r4332;
	// end inline asm
	shl.b32 	%r16034, %r16027, 4;
	// begin inline asm
	lop3.b32 %r16031, %r4338, %r16023, %r16034, 202;
	// end inline asm
	xor.b32  	%r16114, %r16031, -2004318072;
	// begin inline asm
	mov.b32 %r16038, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r16036, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16037, %r16038, %r16036;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16040, %r15721, %r16037;
	// end inline asm
	// begin inline asm
	mov.b32 %r16043, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16044, %r16038, %r16043;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16047, %r15729, %r16044;
	// end inline asm
	// begin inline asm
	mov.b32 %r16050, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16051, %r16038, %r16050;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16054, %r15737, %r16051;
	// end inline asm
	// begin inline asm
	mov.b32 %r16057, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16058, %r16038, %r16057;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16061, %r15745, %r16058;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16064, %r16040, %r16054, %r4332;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16068, %r16047, %r16061, %r4332;
	// end inline asm
	shl.b32 	%r16075, %r16068, 4;
	// begin inline asm
	lop3.b32 %r16072, %r4338, %r16064, %r16075, 202;
	// end inline asm
	xor.b32  	%r16115, %r16072, -2004318072;
	st.shared.u32 	[%rd82], %r16108;
	st.shared.u32 	[%rd83], %r16109;
	st.shared.u32 	[%rd84], %r16110;
	st.shared.u32 	[%rd85], %r16111;
	st.shared.u32 	[%rd86], %r16112;
	st.shared.u32 	[%rd87], %r16113;
	st.shared.u32 	[%rd88], %r16114;
	st.shared.u32 	[%rd89], %r16115;
	add.s32 	%r16209, %r16209, -128;
	add.s64 	%rd94, %rd94, 16644;
	setp.eq.s32 	%p300, %r16209, 0;
	@%p300 bra 	LBB0_179;
	bra.uni 	LBB0_178;
LBB0_179:                               // %guard_pass22984
                                        //   in Loop: Header=BB0_177 Depth=1
	bar.sync 	0;
	ld.shared.u32 	%r16121, [%rd13];
	ld.shared.u32 	%r16122, [%rd14+128];
	ld.shared.u32 	%r16129, [%rd14+4];
	ld.shared.u32 	%r16130, [%rd14+132];
	ld.shared.u32 	%r16137, [%rd15];
	ld.shared.u32 	%r16138, [%rd16+128];
	ld.shared.u32 	%r16145, [%rd16+4];
	ld.shared.u32 	%r16146, [%rd16+132];
	// begin inline asm
	prmt.b32 %r16116, %r16121, %r16122, %r784;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16120, %r16121, %r16122, %r788;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16124, %r16129, %r16130, %r784;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16128, %r16129, %r16130, %r788;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16132, %r16137, %r16138, %r784;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16136, %r16137, %r16138, %r788;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16140, %r16145, %r16146, %r784;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16144, %r16145, %r16146, %r788;
	// end inline asm
	selp.b32 	%r16148, %r16120, %r16116, %p299;
	shfl.sync.bfly.b32	%r232, %r16148, 8, 31, -1;
	selp.b32 	%r16149, %r16128, %r16124, %p299;
	shfl.sync.bfly.b32	%r233, %r16149, 8, 31, -1;
	selp.b32 	%r16150, %r16136, %r16132, %p299;
	shfl.sync.bfly.b32	%r234, %r16150, 8, 31, -1;
	selp.b32 	%r16151, %r16144, %r16140, %p299;
	shfl.sync.bfly.b32	%r235, %r16151, 8, 31, -1;
	setp.lt.u32 	%p302, %r156, 384;
	@%p302 bra 	LBB0_181;
// %bb.180:                             // %L63148
                                        //   in Loop: Header=BB0_177 Depth=1
	selp.b32 	%r16152, %r235, %r16144, %p299;
	selp.b32 	%r16153, %r16140, %r235, %p299;
	selp.b32 	%r16154, %r234, %r16136, %p299;
	selp.b32 	%r16155, %r16132, %r234, %p299;
	selp.b32 	%r16156, %r233, %r16128, %p299;
	selp.b32 	%r16157, %r16124, %r233, %p299;
	selp.b32 	%r16158, %r232, %r16120, %p299;
	selp.b32 	%r16159, %r16116, %r232, %p299;
	shl.b32 	%r16160, %r156, 12;
	add.s32 	%r16161, %r130, %r16160;
	mul.wide.s32 	%rd90, %r16161, 4;
	add.s64 	%rd91, %rd3, %rd90;
	st.global.v4.u32 	[%rd91], {%r16159, %r16157, %r16158, %r16156};
	add.s32 	%r16162, %r131, %r16160;
	mul.wide.s32 	%rd92, %r16162, 4;
	add.s64 	%rd93, %rd3, %rd92;
	st.global.v4.u32 	[%rd93], {%r16155, %r16153, %r16154, %r16152};
	bra.uni 	LBB0_181;
LBB0_182:                               // %L63570
	st.global.u32 	[%rd4], %r15171;
	ret;
LBB0_1:                                 // %L8
	mov.u64 	%rd44, exception1;
	cvta.global.u64 	%rd45, %rd44;
	{ // callseq 0, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd45;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 0
	{ // callseq 1, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd35;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 1
	// begin inline asm
	exit;
	// end inline asm
	// begin inline asm
	exit;
	// end inline asm
LBB0_3:                                 // %L178
	mov.u32 	%r241, 2;
	st.global.u32 	[%rd4], %r241;
	mov.u64 	%rd47, exception5095;
	cvta.global.u64 	%rd48, %rd47;
	{ // callseq 2, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd48;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 2
	{ // callseq 3, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd35;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 3
	// begin inline asm
	exit;
	// end inline asm
	// begin inline asm
	exit;
	// end inline asm
                                        // -- End function
}
