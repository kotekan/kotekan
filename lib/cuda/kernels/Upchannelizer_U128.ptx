// PTX CompilerJob of MethodInstance for upchan(::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Float16x2, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int32, 1}) for sm_86, minthreads=512, blocks_per_sm=2

//
// Generated by LLVM NVPTX Back-End
//

.version 7.1
.target sm_86
.address_size 64

	// .globl	_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE // -- Begin function _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE
.func gpu_report_exception
(
	.param .b64 gpu_report_exception_param_0
)
.noreturn
{
	trap;
}
.func gpu_signal_exception
(
	.param .align 8 .b8 gpu_signal_exception_param_0[16]
)
.noreturn
{
	trap;
}
.extern .shared .align 32 .b8 shmem[];
.global .align 1 .b8 exception5093[6] = {101, 114, 114, 111, 114, 0};
.global .align 1 .b8 exception1[10] = {101, 120, 99, 101, 112, 116, 105, 111, 110, 0};
                                        // @_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE
.visible .entry _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE(
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_0[16],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_1[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_2[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_3[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_4[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_5[32]
)
.reqntid 512, 1, 1
.minnctapersm 2
{
	.reg .pred 	%p<309>;
	.reg .b16 	%rs<2390>;
	.reg .b32 	%r<16224>;
	.reg .f32 	%f<1404>;
	.reg .b64 	%rd<95>;

// %bb.0:                               // %conversion
	ld.param.u32 	%r238, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_0+8];
	ld.param.u64 	%rd35, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_0];
	// begin inline asm
	mov.u32 %r239, %dynamic_smem_size;
	// end inline asm
	setp.gt.u32 	%p1, %r239, 66815;
	@%p1 bra 	LBB0_2;
	bra.uni 	LBB0_1;
LBB0_2:                                 // %L10
	ld.param.u64 	%rd40, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_5];
	ld.param.u64 	%rd36, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_1];
	mov.u32 	%r1, %ctaid.x;
	shl.b32 	%r240, %r1, 9;
	mov.u32 	%r2, %tid.x;
	mov.u32 	%r3, %tid.y;
	shl.b32 	%r4, %r3, 5;
	or.b32  	%r241, %r240, %r2;
	or.b32  	%r242, %r241, %r4;
	mul.wide.u32 	%rd46, %r242, 4;
	add.s64 	%rd4, %rd40, %rd46;
	mov.u32 	%r243, 1;
	st.global.u32 	[%rd4], %r243;
	ld.global.u32 	%r5, [%rd36];
	setp.lt.u32 	%p2, %r5, 32769;
	and.b32  	%r244, %r5, 255;
	setp.eq.s32 	%p3, %r244, 0;
	and.pred  	%p4, %p2, %p3;
	@%p4 bra 	LBB0_4;
	bra.uni 	LBB0_3;
LBB0_4:                                 // %L242
	bfe.u32 	%r16, %r2, 1, 1;
	and.b32  	%r17, %r2, 1;
	bfe.u32 	%r19, %r2, 2, 1;
	shr.u32 	%r20, %r2, 4;
	shl.b32 	%r250, %r20, 2;
	shl.b32 	%r251, %r19, 3;
	shl.b32 	%r252, %r17, 4;
	shl.b32 	%r253, %r16, 5;
	or.b32  	%r254, %r252, %r253;
	or.b32  	%r255, %r251, %r254;
	or.b32  	%r256, %r250, %r255;
	bfe.u32 	%r22, %r2, 3, 1;
	shl.b32 	%r257, %r22, 1;
	or.b32  	%r23, %r257, %r256;
	or.b32  	%r24, %r23, 64;
	mov.f32 	%f255, 0f40000000;
	mov.f32 	%f256, 0f43FF8000;
	div.approx.f32 	%f1, %f256, %f255;
	cvt.rn.f32.s32 	%f257, %r23;
	sub.f32 	%f258, %f257, %f1;
	mov.f32 	%f287, 0f43000000;
	div.approx.f32 	%f3, %f258, %f287;
	setp.eq.f32 	%p10, %f3, 0f00000000;
	mov.f32 	%f1363, 0f3F800000;
	mov.f32 	%f1348, %f1363;
	@%p10 bra 	LBB0_6;
// %bb.5:                               // %L592
	sin.approx.f32 	%f288, %f3;
	div.approx.f32 	%f1348, %f288, %f3;
LBB0_6:                                 // %L595
	cvt.rn.f32.s32 	%f291, %r24;
	sub.f32 	%f292, %f291, %f1;
	div.approx.f32 	%f8, %f292, %f287;
	setp.eq.f32 	%p16, %f8, 0f00000000;
	mov.f32 	%f1349, %f1363;
	@%p16 bra 	LBB0_8;
// %bb.7:                               // %L612
	sin.approx.f32 	%f322, %f8;
	div.approx.f32 	%f1349, %f322, %f8;
LBB0_8:                                 // %L615
	or.b32  	%r275, %r23, 1;
	or.b32  	%r26, %r23, 65;
	cvt.rn.f32.s32 	%f326, %r275;
	sub.f32 	%f327, %f326, %f1;
	div.approx.f32 	%f12, %f327, %f287;
	setp.eq.f32 	%p22, %f12, 0f00000000;
	mov.f32 	%f1350, %f1363;
	@%p22 bra 	LBB0_10;
// %bb.9:                               // %L694
	sin.approx.f32 	%f357, %f12;
	div.approx.f32 	%f1350, %f357, %f12;
LBB0_10:                                // %L697
	cvt.rn.f32.s32 	%f360, %r26;
	sub.f32 	%f361, %f360, %f1;
	div.approx.f32 	%f17, %f361, %f287;
	setp.eq.f32 	%p28, %f17, 0f00000000;
	mov.f32 	%f1351, %f1363;
	@%p28 bra 	LBB0_12;
// %bb.11:                              // %L714
	sin.approx.f32 	%f391, %f17;
	div.approx.f32 	%f1351, %f391, %f17;
LBB0_12:                                // %L717
	or.b32  	%r293, %r23, 128;
	or.b32  	%r28, %r23, 192;
	cvt.rn.f32.s32 	%f395, %r293;
	sub.f32 	%f396, %f395, %f1;
	div.approx.f32 	%f21, %f396, %f287;
	setp.eq.f32 	%p34, %f21, 0f00000000;
	mov.f32 	%f1352, %f1363;
	@%p34 bra 	LBB0_14;
// %bb.13:                              // %L796
	sin.approx.f32 	%f426, %f21;
	div.approx.f32 	%f1352, %f426, %f21;
LBB0_14:                                // %L799
	cvt.rn.f32.s32 	%f429, %r28;
	sub.f32 	%f430, %f429, %f1;
	div.approx.f32 	%f26, %f430, %f287;
	setp.eq.f32 	%p40, %f26, 0f00000000;
	mov.f32 	%f1353, %f1363;
	@%p40 bra 	LBB0_16;
// %bb.15:                              // %L816
	sin.approx.f32 	%f460, %f26;
	div.approx.f32 	%f1353, %f460, %f26;
LBB0_16:                                // %L819
	or.b32  	%r311, %r23, 129;
	or.b32  	%r30, %r23, 193;
	cvt.rn.f32.s32 	%f464, %r311;
	sub.f32 	%f465, %f464, %f1;
	div.approx.f32 	%f30, %f465, %f287;
	setp.eq.f32 	%p46, %f30, 0f00000000;
	mov.f32 	%f1354, %f1363;
	@%p46 bra 	LBB0_18;
// %bb.17:                              // %L898
	sin.approx.f32 	%f495, %f30;
	div.approx.f32 	%f1354, %f495, %f30;
LBB0_18:                                // %L901
	cvt.rn.f32.s32 	%f498, %r30;
	sub.f32 	%f499, %f498, %f1;
	div.approx.f32 	%f35, %f499, %f287;
	setp.eq.f32 	%p52, %f35, 0f00000000;
	mov.f32 	%f1355, %f1363;
	@%p52 bra 	LBB0_20;
// %bb.19:                              // %L918
	sin.approx.f32 	%f529, %f35;
	div.approx.f32 	%f1355, %f529, %f35;
LBB0_20:                                // %L921
	or.b32  	%r329, %r23, 256;
	or.b32  	%r32, %r23, 320;
	cvt.rn.f32.s32 	%f533, %r329;
	sub.f32 	%f534, %f533, %f1;
	div.approx.f32 	%f39, %f534, %f287;
	setp.eq.f32 	%p58, %f39, 0f00000000;
	mov.f32 	%f1356, %f1363;
	@%p58 bra 	LBB0_22;
// %bb.21:                              // %L1000
	sin.approx.f32 	%f564, %f39;
	div.approx.f32 	%f1356, %f564, %f39;
LBB0_22:                                // %L1003
	mov.f32 	%f259, 0f44004000;
	cvt.rn.f32.s32 	%f567, %r32;
	sub.f32 	%f568, %f567, %f1;
	div.approx.f32 	%f44, %f568, %f287;
	setp.eq.f32 	%p64, %f44, 0f00000000;
	mov.f32 	%f1357, %f1363;
	@%p64 bra 	LBB0_24;
// %bb.23:                              // %L1020
	sin.approx.f32 	%f598, %f44;
	div.approx.f32 	%f1357, %f598, %f44;
LBB0_24:                                // %L1023
	div.approx.f32 	%f260, %f258, %f259;
	div.approx.f32 	%f294, %f292, %f259;
	div.approx.f32 	%f329, %f327, %f259;
	div.approx.f32 	%f363, %f361, %f259;
	div.approx.f32 	%f398, %f396, %f259;
	div.approx.f32 	%f432, %f430, %f259;
	div.approx.f32 	%f467, %f465, %f259;
	div.approx.f32 	%f501, %f499, %f259;
	div.approx.f32 	%f536, %f534, %f259;
	div.approx.f32 	%f570, %f568, %f259;
	or.b32  	%r347, %r23, 257;
	or.b32  	%r34, %r23, 321;
	cvt.rn.f32.s32 	%f602, %r347;
	sub.f32 	%f603, %f602, %f1;
	div.approx.f32 	%f605, %f603, %f259;
	div.approx.f32 	%f48, %f603, %f287;
	setp.eq.f32 	%p70, %f48, 0f00000000;
	mov.f32 	%f1358, %f1363;
	@%p70 bra 	LBB0_26;
// %bb.25:                              // %L1102
	sin.approx.f32 	%f633, %f48;
	div.approx.f32 	%f1358, %f633, %f48;
LBB0_26:                                // %L1105
	abs.f32 	%f261, %f260;
	abs.f32 	%f295, %f294;
	abs.f32 	%f330, %f329;
	abs.f32 	%f364, %f363;
	abs.f32 	%f399, %f398;
	abs.f32 	%f433, %f432;
	abs.f32 	%f468, %f467;
	abs.f32 	%f502, %f501;
	abs.f32 	%f537, %f536;
	abs.f32 	%f571, %f570;
	abs.f32 	%f606, %f605;
	cvt.rn.f32.s32 	%f636, %r34;
	sub.f32 	%f637, %f636, %f1;
	div.approx.f32 	%f639, %f637, %f259;
	abs.f32 	%f640, %f639;
	div.approx.f32 	%f53, %f637, %f287;
	setp.eq.f32 	%p76, %f53, 0f00000000;
	mov.f32 	%f1359, %f1363;
	@%p76 bra 	LBB0_28;
// %bb.27:                              // %L1122
	sin.approx.f32 	%f667, %f53;
	div.approx.f32 	%f1359, %f667, %f53;
LBB0_28:                                // %L1125
	setp.gt.f32 	%p5, %f261, 0f4B800000;
	mul.f32 	%f262, %f260, 0f00000000;
	setp.gt.f32 	%p11, %f295, 0f4B800000;
	mul.f32 	%f296, %f294, 0f00000000;
	setp.gt.f32 	%p17, %f330, 0f4B800000;
	mul.f32 	%f331, %f329, 0f00000000;
	setp.gt.f32 	%p23, %f364, 0f4B800000;
	mul.f32 	%f365, %f363, 0f00000000;
	setp.gt.f32 	%p29, %f399, 0f4B800000;
	mul.f32 	%f400, %f398, 0f00000000;
	setp.gt.f32 	%p35, %f433, 0f4B800000;
	mul.f32 	%f434, %f432, 0f00000000;
	setp.gt.f32 	%p41, %f468, 0f4B800000;
	mul.f32 	%f469, %f467, 0f00000000;
	setp.gt.f32 	%p47, %f502, 0f4B800000;
	mul.f32 	%f503, %f501, 0f00000000;
	setp.gt.f32 	%p53, %f537, 0f4B800000;
	mul.f32 	%f538, %f536, 0f00000000;
	setp.gt.f32 	%p59, %f571, 0f4B800000;
	mul.f32 	%f572, %f570, 0f00000000;
	setp.gt.f32 	%p65, %f606, 0f4B800000;
	mul.f32 	%f607, %f605, 0f00000000;
	setp.gt.f32 	%p71, %f640, 0f4B800000;
	mul.f32 	%f641, %f639, 0f00000000;
	or.b32  	%r365, %r23, 384;
	or.b32  	%r36, %r23, 448;
	cvt.rn.f32.s32 	%f671, %r365;
	sub.f32 	%f672, %f671, %f1;
	div.approx.f32 	%f674, %f672, %f259;
	abs.f32 	%f675, %f674;
	setp.gt.f32 	%p77, %f675, 0f4B800000;
	mul.f32 	%f676, %f674, 0f00000000;
	div.approx.f32 	%f57, %f672, %f287;
	setp.eq.f32 	%p82, %f57, 0f00000000;
	mov.f32 	%f1360, %f1363;
	@%p82 bra 	LBB0_30;
// %bb.29:                              // %L1204
	sin.approx.f32 	%f702, %f57;
	div.approx.f32 	%f1360, %f702, %f57;
LBB0_30:                                // %L1207
	selp.f32 	%f263, %f262, %f260, %p5;
	selp.f32 	%f297, %f296, %f294, %p11;
	selp.f32 	%f332, %f331, %f329, %p17;
	selp.f32 	%f366, %f365, %f363, %p23;
	selp.f32 	%f401, %f400, %f398, %p29;
	selp.f32 	%f435, %f434, %f432, %p35;
	selp.f32 	%f470, %f469, %f467, %p41;
	selp.f32 	%f504, %f503, %f501, %p47;
	selp.f32 	%f539, %f538, %f536, %p53;
	selp.f32 	%f573, %f572, %f570, %p59;
	selp.f32 	%f608, %f607, %f605, %p65;
	selp.f32 	%f642, %f641, %f639, %p71;
	selp.f32 	%f677, %f676, %f674, %p77;
	cvt.rn.f32.s32 	%f705, %r36;
	sub.f32 	%f706, %f705, %f1;
	div.approx.f32 	%f708, %f706, %f259;
	abs.f32 	%f709, %f708;
	setp.gt.f32 	%p83, %f709, 0f4B800000;
	mul.f32 	%f710, %f708, 0f00000000;
	selp.f32 	%f711, %f710, %f708, %p83;
	div.approx.f32 	%f62, %f706, %f287;
	setp.eq.f32 	%p88, %f62, 0f00000000;
	mov.f32 	%f1361, %f1363;
	@%p88 bra 	LBB0_32;
// %bb.31:                              // %L1224
	sin.approx.f32 	%f736, %f62;
	div.approx.f32 	%f1361, %f736, %f62;
LBB0_32:                                // %L1227
	add.f32 	%f264, %f263, %f263;
	add.f32 	%f298, %f297, %f297;
	add.f32 	%f333, %f332, %f332;
	add.f32 	%f367, %f366, %f366;
	add.f32 	%f402, %f401, %f401;
	add.f32 	%f436, %f435, %f435;
	add.f32 	%f471, %f470, %f470;
	add.f32 	%f505, %f504, %f504;
	add.f32 	%f540, %f539, %f539;
	add.f32 	%f574, %f573, %f573;
	add.f32 	%f609, %f608, %f608;
	add.f32 	%f643, %f642, %f642;
	add.f32 	%f678, %f677, %f677;
	add.f32 	%f712, %f711, %f711;
	or.b32  	%r383, %r23, 385;
	or.b32  	%r38, %r23, 449;
	cvt.rn.f32.s32 	%f740, %r383;
	sub.f32 	%f741, %f740, %f1;
	div.approx.f32 	%f743, %f741, %f259;
	abs.f32 	%f744, %f743;
	setp.gt.f32 	%p89, %f744, 0f4B800000;
	mul.f32 	%f745, %f743, 0f00000000;
	selp.f32 	%f746, %f745, %f743, %p89;
	add.f32 	%f747, %f746, %f746;
	div.approx.f32 	%f66, %f741, %f287;
	setp.eq.f32 	%p94, %f66, 0f00000000;
	mov.f32 	%f1362, %f1363;
	@%p94 bra 	LBB0_34;
// %bb.33:                              // %L1306
	sin.approx.f32 	%f771, %f66;
	div.approx.f32 	%f1362, %f771, %f66;
LBB0_34:                                // %L1309
	mov.b32 	%r258, %f264;
	mov.b32 	%r265, %f298;
	mov.b32 	%r276, %f333;
	mov.b32 	%r283, %f367;
	mov.b32 	%r294, %f402;
	mov.b32 	%r301, %f436;
	mov.b32 	%r312, %f471;
	mov.b32 	%r319, %f505;
	mov.b32 	%r330, %f540;
	mov.b32 	%r337, %f574;
	mov.b32 	%r348, %f609;
	mov.b32 	%r355, %f643;
	mov.b32 	%r366, %f678;
	mov.b32 	%r373, %f712;
	mov.b32 	%r384, %f747;
	cvt.rn.f32.s32 	%f774, %r38;
	sub.f32 	%f775, %f774, %f1;
	div.approx.f32 	%f777, %f775, %f259;
	abs.f32 	%f778, %f777;
	setp.gt.f32 	%p95, %f778, 0f4B800000;
	mul.f32 	%f779, %f777, 0f00000000;
	selp.f32 	%f780, %f779, %f777, %p95;
	add.f32 	%f781, %f780, %f780;
	mov.b32 	%r391, %f781;
	div.approx.f32 	%f71, %f775, %f287;
	setp.eq.f32 	%p100, %f71, 0f00000000;
	@%p100 bra 	LBB0_36;
// %bb.35:                              // %L1326
	sin.approx.f32 	%f805, %f71;
	div.approx.f32 	%f1363, %f805, %f71;
LBB0_36:                                // %L1329
	and.b32  	%r259, %r258, -2147483648;
	and.b32  	%r266, %r265, -2147483648;
	and.b32  	%r277, %r276, -2147483648;
	and.b32  	%r284, %r283, -2147483648;
	and.b32  	%r295, %r294, -2147483648;
	and.b32  	%r302, %r301, -2147483648;
	and.b32  	%r313, %r312, -2147483648;
	and.b32  	%r320, %r319, -2147483648;
	and.b32  	%r331, %r330, -2147483648;
	and.b32  	%r338, %r337, -2147483648;
	and.b32  	%r349, %r348, -2147483648;
	and.b32  	%r356, %r355, -2147483648;
	and.b32  	%r367, %r366, -2147483648;
	and.b32  	%r374, %r373, -2147483648;
	and.b32  	%r385, %r384, -2147483648;
	and.b32  	%r392, %r391, -2147483648;
	mul.lo.s32 	%r40, %r23, 127;
	cvt.rn.f32.s32 	%f808, %r40;
	div.approx.f32 	%f74, %f808, %f287;
	abs.f32 	%f1366, %f74;
	setp.lt.f32 	%p101, %f1366, 0f40000000;
	@%p101 bra 	LBB0_48;
// %bb.37:
	setp.gtu.f32 	%p102, %f1366, 0f4B800000;
	@%p102 bra 	LBB0_44;
	bra.uni 	LBB0_38;
LBB0_44:
	mov.b32 	%r42, %f1366;
	and.b32  	%r401, %r42, 8388607;
	or.b32  	%r16154, %r401, 1065353216;
	mov.b32 	%f1365, %r16154;
	add.s32 	%r402, %r42, -1073741824;
	and.b32  	%r16155, %r402, -8388608;
	setp.eq.s32 	%p108, %r16155, 0;
	@%p108 bra 	LBB0_47;
// %bb.45:                              // %__nv_fmaf_rn.exit4.i.i.i.preheader
	mov.f32 	%f819, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f818,%f819;
	// end inline asm
LBB0_46:                                // %__nv_fmaf_rn.exit4.i.i.i
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r403, %r16155, 192937984;
	add.s32 	%r404, %r403, %r16154;
	mov.b32 	%f820, %r404;
	mul.f32 	%f821, %f818, %f820;
	sub.f32 	%f822, %f820, %f821;
	fma.rn.f32 	%f823, %f822, %f818, %f821;
	sub.f32 	%f824, %f820, %f823;
	fma.rz.f32 	%f825, %f824, %f818, %f823;
	cvt.rzi.f32.f32 	%f826, %f825;
	sub.f32 	%f1365, %f820, %f826;
	sub.s32 	%r16155, %r16155, %r403;
	mov.b32 	%r16154, %f1365;
	setp.ne.s32 	%p109, %r16155, 0;
	setp.ne.s32 	%p110, %r16154, 0;
	and.pred  	%p111, %p109, %p110;
	@%p111 bra 	LBB0_46;
LBB0_47:                                // %__internal_fmodf_slowpath_mod.exit.i.i
	setp.gt.u32 	%p112, %r42, 2139095039;
	selp.f32 	%f827, 0f7FFFFFFF, 0f4B800000, %p112;
	mul.f32 	%f828, %f1365, 0f34000000;
	mul.f32 	%f1366, %f827, %f828;
	bra.uni 	LBB0_48;
LBB0_38:                                // %__nv_fast_fdividef.exit.i.i.i
	div.approx.f32 	%f811, %f1366, %f255;
	cvt.rzi.f32.f32 	%f1364, %f811;
	fma.rn.f32 	%f77, %f1364, 0fC0000000, %f1366;
	mov.b32 	%r41, %f77;
	setp.lt.u32 	%p103, %r41, 1073741824;
	@%p103 bra 	LBB0_43;
// %bb.39:
	setp.lt.u32 	%p104, %r41, -2147483647;
	@%p104 bra 	LBB0_41;
// %bb.40:
	add.f32 	%f816, %f1364, 0fBF800000;
	setp.lt.f32 	%p107, %f77, 0fC0000000;
	add.f32 	%f817, %f816, 0fBF800000;
	selp.f32 	%f1364, %f817, %f816, %p107;
	bra.uni 	LBB0_43;
LBB0_41:
	add.f32 	%f1364, %f1364, 0f3F800000;
	setp.ltu.f32 	%p105, %f77, 0f40800000;
	@%p105 bra 	LBB0_43;
// %bb.42:                              // %__nv_fmaf_rn.exit.i.i.i
	add.f32 	%f812, %f1364, 0f3F800000;
	fma.rn.f32 	%f814, %f255, 0fC0400000, %f77;
	setp.ge.f32 	%p106, %f814, 0f00000000;
	add.f32 	%f815, %f812, 0f3F800000;
	selp.f32 	%f1364, %f815, %f812, %p106;
LBB0_43:                                // %__internal_fmodf_fastpath_quot.exit.i.i
	fma.rn.f32 	%f1366, %f1364, 0fC0000000, %f1366;
LBB0_48:                                // %__internal_fmodf_kernel.exit.i
	or.b32  	%r260, %r259, 1056964608;
	or.b32  	%r267, %r266, 1056964608;
	or.b32  	%r278, %r277, 1056964608;
	or.b32  	%r285, %r284, 1056964608;
	or.b32  	%r296, %r295, 1056964608;
	or.b32  	%r303, %r302, 1056964608;
	or.b32  	%r314, %r313, 1056964608;
	or.b32  	%r321, %r320, 1056964608;
	or.b32  	%r332, %r331, 1056964608;
	or.b32  	%r339, %r338, 1056964608;
	or.b32  	%r350, %r349, 1056964608;
	or.b32  	%r357, %r356, 1056964608;
	or.b32  	%r368, %r367, 1056964608;
	or.b32  	%r375, %r374, 1056964608;
	or.b32  	%r386, %r385, 1056964608;
	or.b32  	%r393, %r392, 1056964608;
	abs.f32 	%f829, %f1366;
	setp.gtu.f32 	%p113, %f829, 0f7F800000;
	@%p113 bra 	LBB0_50;
// %bb.49:
	mov.b32 	%r405, %f74;
	and.b32  	%r406, %r405, -2147483648;
	mov.b32 	%r407, %f1366;
	or.b32  	%r408, %r406, %r407;
	mov.b32 	%f1366, %r408;
LBB0_50:                                // %__nv_fmodf.exit
	mov.b32 	%f265, %r260;
	mov.b32 	%f299, %r267;
	mov.b32 	%f334, %r278;
	mov.b32 	%f368, %r285;
	mov.b32 	%f403, %r296;
	mov.b32 	%f437, %r303;
	mov.b32 	%f472, %r314;
	mov.b32 	%f506, %r321;
	mov.b32 	%f541, %r332;
	mov.b32 	%f575, %r339;
	mov.b32 	%f610, %r350;
	mov.b32 	%f644, %r357;
	mov.b32 	%f679, %r368;
	mov.b32 	%f713, %r375;
	mov.b32 	%f748, %r386;
	mov.b32 	%f782, %r393;
	add.f32 	%f830, %f1366, %f1366;
	mov.b32 	%r409, %f830;
	and.b32  	%r410, %r409, -2147483648;
	or.b32  	%r411, %r410, 1056964608;
	mov.b32 	%f831, %r411;
	add.f32 	%f832, %f830, %f831;
	cvt.rzi.f32.f32 	%f833, %f832;
	abs.f32 	%f834, %f830;
	setp.gt.f32 	%p114, %f834, 0f4B000000;
	selp.f32 	%f835, %f830, %f833, %p114;
	cvt.rzi.f32.f32 	%f836, %f830;
	setp.lt.f32 	%p115, %f834, 0f3F000000;
	add.s32 	%r417, %r40, 8128;
	cvt.rn.f32.s32 	%f861, %r417;
	div.approx.f32 	%f93, %f861, %f287;
	abs.f32 	%f1370, %f93;
	setp.lt.f32 	%p121, %f1370, 0f40000000;
	@%p121 bra 	LBB0_62;
// %bb.51:
	setp.gtu.f32 	%p122, %f1370, 0f4B800000;
	@%p122 bra 	LBB0_58;
	bra.uni 	LBB0_52;
LBB0_58:
	mov.b32 	%r50, %f1370;
	and.b32  	%r418, %r50, 8388607;
	or.b32  	%r16156, %r418, 1065353216;
	mov.b32 	%f1369, %r16156;
	add.s32 	%r419, %r50, -1073741824;
	and.b32  	%r16157, %r419, -8388608;
	setp.eq.s32 	%p128, %r16157, 0;
	@%p128 bra 	LBB0_61;
// %bb.59:                              // %__nv_fmaf_rn.exit4.i.i.i2229.preheader
	mov.f32 	%f872, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f871,%f872;
	// end inline asm
LBB0_60:                                // %__nv_fmaf_rn.exit4.i.i.i2229
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r420, %r16157, 192937984;
	add.s32 	%r421, %r420, %r16156;
	mov.b32 	%f873, %r421;
	mul.f32 	%f874, %f871, %f873;
	sub.f32 	%f875, %f873, %f874;
	fma.rn.f32 	%f876, %f875, %f871, %f874;
	sub.f32 	%f877, %f873, %f876;
	fma.rz.f32 	%f878, %f877, %f871, %f876;
	cvt.rzi.f32.f32 	%f879, %f878;
	sub.f32 	%f1369, %f873, %f879;
	sub.s32 	%r16157, %r16157, %r420;
	mov.b32 	%r16156, %f1369;
	setp.ne.s32 	%p129, %r16157, 0;
	setp.ne.s32 	%p130, %r16156, 0;
	and.pred  	%p131, %p129, %p130;
	@%p131 bra 	LBB0_60;
LBB0_61:                                // %__internal_fmodf_slowpath_mod.exit.i.i2231
	setp.gt.u32 	%p132, %r50, 2139095039;
	selp.f32 	%f880, 0f7FFFFFFF, 0f4B800000, %p132;
	mul.f32 	%f881, %f1369, 0f34000000;
	mul.f32 	%f1370, %f880, %f881;
	bra.uni 	LBB0_62;
LBB0_52:                                // %__nv_fast_fdividef.exit.i.i.i2201
	div.approx.f32 	%f864, %f1370, %f255;
	cvt.rzi.f32.f32 	%f1368, %f864;
	fma.rn.f32 	%f96, %f1368, 0fC0000000, %f1370;
	mov.b32 	%r49, %f96;
	setp.lt.u32 	%p123, %r49, 1073741824;
	@%p123 bra 	LBB0_57;
// %bb.53:
	setp.lt.u32 	%p124, %r49, -2147483647;
	@%p124 bra 	LBB0_55;
// %bb.54:
	add.f32 	%f869, %f1368, 0fBF800000;
	setp.lt.f32 	%p127, %f96, 0fC0000000;
	add.f32 	%f870, %f869, 0fBF800000;
	selp.f32 	%f1368, %f870, %f869, %p127;
	bra.uni 	LBB0_57;
LBB0_55:
	add.f32 	%f1368, %f1368, 0f3F800000;
	setp.ltu.f32 	%p125, %f96, 0f40800000;
	@%p125 bra 	LBB0_57;
// %bb.56:                              // %__nv_fmaf_rn.exit.i.i.i2206
	add.f32 	%f865, %f1368, 0f3F800000;
	fma.rn.f32 	%f867, %f255, 0fC0400000, %f96;
	setp.ge.f32 	%p126, %f867, 0f00000000;
	add.f32 	%f868, %f865, 0f3F800000;
	selp.f32 	%f1368, %f868, %f865, %p126;
LBB0_57:                                // %__internal_fmodf_fastpath_quot.exit.i.i2210
	fma.rn.f32 	%f1370, %f1368, 0fC0000000, %f1370;
LBB0_62:                                // %__internal_fmodf_kernel.exit.i2235
	add.f32 	%f266, %f264, %f265;
	abs.f32 	%f268, %f264;
	add.f32 	%f300, %f298, %f299;
	abs.f32 	%f302, %f298;
	add.f32 	%f335, %f333, %f334;
	abs.f32 	%f337, %f333;
	add.f32 	%f369, %f367, %f368;
	abs.f32 	%f371, %f367;
	add.f32 	%f404, %f402, %f403;
	abs.f32 	%f406, %f402;
	add.f32 	%f438, %f436, %f437;
	abs.f32 	%f440, %f436;
	add.f32 	%f473, %f471, %f472;
	abs.f32 	%f475, %f471;
	add.f32 	%f507, %f505, %f506;
	abs.f32 	%f509, %f505;
	add.f32 	%f542, %f540, %f541;
	abs.f32 	%f544, %f540;
	add.f32 	%f576, %f574, %f575;
	abs.f32 	%f578, %f574;
	add.f32 	%f611, %f609, %f610;
	abs.f32 	%f613, %f609;
	add.f32 	%f645, %f643, %f644;
	abs.f32 	%f647, %f643;
	add.f32 	%f680, %f678, %f679;
	abs.f32 	%f682, %f678;
	add.f32 	%f714, %f712, %f713;
	abs.f32 	%f716, %f712;
	add.f32 	%f749, %f747, %f748;
	abs.f32 	%f751, %f747;
	add.f32 	%f783, %f781, %f782;
	abs.f32 	%f785, %f781;
	selp.f32 	%f837, %f836, %f835, %p115;
	shr.u32 	%r18, %r2, 2;
	abs.f32 	%f882, %f1370;
	setp.gtu.f32 	%p133, %f882, 0f7F800000;
	@%p133 bra 	LBB0_64;
// %bb.63:
	mov.b32 	%r422, %f93;
	and.b32  	%r423, %r422, -2147483648;
	mov.b32 	%r424, %f1370;
	or.b32  	%r425, %r423, %r424;
	mov.b32 	%f1370, %r425;
LBB0_64:                                // %__nv_fmodf.exit2236
	cvt.rzi.f32.f32 	%f267, %f266;
	setp.gt.f32 	%p6, %f268, 0f4B000000;
	cvt.rzi.f32.f32 	%f301, %f300;
	setp.gt.f32 	%p12, %f302, 0f4B000000;
	cvt.rzi.f32.f32 	%f336, %f335;
	setp.gt.f32 	%p18, %f337, 0f4B000000;
	cvt.rzi.f32.f32 	%f370, %f369;
	setp.gt.f32 	%p24, %f371, 0f4B000000;
	cvt.rzi.f32.f32 	%f405, %f404;
	setp.gt.f32 	%p30, %f406, 0f4B000000;
	cvt.rzi.f32.f32 	%f439, %f438;
	setp.gt.f32 	%p36, %f440, 0f4B000000;
	cvt.rzi.f32.f32 	%f474, %f473;
	setp.gt.f32 	%p42, %f475, 0f4B000000;
	cvt.rzi.f32.f32 	%f508, %f507;
	setp.gt.f32 	%p48, %f509, 0f4B000000;
	cvt.rzi.f32.f32 	%f543, %f542;
	setp.gt.f32 	%p54, %f544, 0f4B000000;
	cvt.rzi.f32.f32 	%f577, %f576;
	setp.gt.f32 	%p60, %f578, 0f4B000000;
	cvt.rzi.f32.f32 	%f612, %f611;
	setp.gt.f32 	%p66, %f613, 0f4B000000;
	cvt.rzi.f32.f32 	%f646, %f645;
	setp.gt.f32 	%p72, %f647, 0f4B000000;
	cvt.rzi.f32.f32 	%f681, %f680;
	setp.gt.f32 	%p78, %f682, 0f4B000000;
	cvt.rzi.f32.f32 	%f715, %f714;
	setp.gt.f32 	%p84, %f716, 0f4B000000;
	cvt.rzi.f32.f32 	%f750, %f749;
	setp.gt.f32 	%p90, %f751, 0f4B000000;
	cvt.rzi.f32.f32 	%f784, %f783;
	setp.gt.f32 	%p96, %f785, 0f4B000000;
	fma.rn.f32 	%f838, %f837, 0fBF000000, %f1366;
	add.f32 	%f883, %f1370, %f1370;
	mov.b32 	%r438, %f883;
	and.b32  	%r439, %r438, -2147483648;
	or.b32  	%r440, %r439, 1056964608;
	mov.b32 	%f884, %r440;
	add.f32 	%f885, %f883, %f884;
	cvt.rzi.f32.f32 	%f886, %f885;
	abs.f32 	%f887, %f883;
	setp.gt.f32 	%p134, %f887, 0f4B000000;
	selp.f32 	%f888, %f883, %f886, %p134;
	cvt.rzi.f32.f32 	%f889, %f883;
	setp.lt.f32 	%p135, %f887, 0f3F000000;
	selp.f32 	%f890, %f889, %f888, %p135;
	fma.rn.f32 	%f891, %f890, 0fBF000000, %f1370;
	and.b32  	%r446, %r2, 3;
	mul.lo.s32 	%r447, %r446, %r18;
	shl.b32 	%r448, %r447, 1;
	neg.s32 	%r61, %r448;
	cvt.rn.f32.s32 	%f916, %r61;
	mov.f32 	%f917, 0f41000000;
	div.approx.f32 	%f110, %f916, %f917;
	abs.f32 	%f1374, %f110;
	setp.lt.f32 	%p141, %f1374, 0f40000000;
	@%p141 bra 	LBB0_76;
// %bb.65:
	setp.gtu.f32 	%p142, %f1374, 0f4B800000;
	@%p142 bra 	LBB0_72;
	bra.uni 	LBB0_66;
LBB0_72:
	mov.b32 	%r63, %f1374;
	and.b32  	%r449, %r63, 8388607;
	or.b32  	%r16158, %r449, 1065353216;
	mov.b32 	%f1373, %r16158;
	add.s32 	%r450, %r63, -1073741824;
	and.b32  	%r16159, %r450, -8388608;
	setp.eq.s32 	%p148, %r16159, 0;
	@%p148 bra 	LBB0_75;
// %bb.73:                              // %__nv_fmaf_rn.exit4.i.i.i2275.preheader
	mov.f32 	%f927, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f926,%f927;
	// end inline asm
LBB0_74:                                // %__nv_fmaf_rn.exit4.i.i.i2275
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r451, %r16159, 192937984;
	add.s32 	%r452, %r451, %r16158;
	mov.b32 	%f928, %r452;
	mul.f32 	%f929, %f926, %f928;
	sub.f32 	%f930, %f928, %f929;
	fma.rn.f32 	%f931, %f930, %f926, %f929;
	sub.f32 	%f932, %f928, %f931;
	fma.rz.f32 	%f933, %f932, %f926, %f931;
	cvt.rzi.f32.f32 	%f934, %f933;
	sub.f32 	%f1373, %f928, %f934;
	sub.s32 	%r16159, %r16159, %r451;
	mov.b32 	%r16158, %f1373;
	setp.ne.s32 	%p149, %r16159, 0;
	setp.ne.s32 	%p150, %r16158, 0;
	and.pred  	%p151, %p149, %p150;
	@%p151 bra 	LBB0_74;
LBB0_75:                                // %__internal_fmodf_slowpath_mod.exit.i.i2277
	setp.gt.u32 	%p152, %r63, 2139095039;
	selp.f32 	%f935, 0f7FFFFFFF, 0f4B800000, %p152;
	mul.f32 	%f936, %f1373, 0f34000000;
	mul.f32 	%f1374, %f935, %f936;
	bra.uni 	LBB0_76;
LBB0_66:                                // %__nv_fast_fdividef.exit.i.i.i2247
	div.approx.f32 	%f919, %f1374, %f255;
	cvt.rzi.f32.f32 	%f1372, %f919;
	fma.rn.f32 	%f113, %f1372, 0fC0000000, %f1374;
	mov.b32 	%r62, %f113;
	setp.lt.u32 	%p143, %r62, 1073741824;
	@%p143 bra 	LBB0_71;
// %bb.67:
	setp.lt.u32 	%p144, %r62, -2147483647;
	@%p144 bra 	LBB0_69;
// %bb.68:
	add.f32 	%f924, %f1372, 0fBF800000;
	setp.lt.f32 	%p147, %f113, 0fC0000000;
	add.f32 	%f925, %f924, 0fBF800000;
	selp.f32 	%f1372, %f925, %f924, %p147;
	bra.uni 	LBB0_71;
LBB0_69:
	add.f32 	%f1372, %f1372, 0f3F800000;
	setp.ltu.f32 	%p145, %f113, 0f40800000;
	@%p145 bra 	LBB0_71;
// %bb.70:                              // %__nv_fmaf_rn.exit.i.i.i2252
	add.f32 	%f920, %f1372, 0f3F800000;
	fma.rn.f32 	%f922, %f255, 0fC0400000, %f113;
	setp.ge.f32 	%p146, %f922, 0f00000000;
	add.f32 	%f923, %f920, 0f3F800000;
	selp.f32 	%f1372, %f923, %f920, %p146;
LBB0_71:                                // %__internal_fmodf_fastpath_quot.exit.i.i2256
	fma.rn.f32 	%f1374, %f1372, 0fC0000000, %f1374;
LBB0_76:                                // %__internal_fmodf_kernel.exit.i2281
	selp.f32 	%f269, %f264, %f267, %p6;
	cvt.rzi.f32.f32 	%f270, %f264;
	setp.lt.f32 	%p7, %f268, 0f3F000000;
	selp.f32 	%f303, %f298, %f301, %p12;
	cvt.rzi.f32.f32 	%f304, %f298;
	setp.lt.f32 	%p13, %f302, 0f3F000000;
	selp.f32 	%f338, %f333, %f336, %p18;
	cvt.rzi.f32.f32 	%f339, %f333;
	setp.lt.f32 	%p19, %f337, 0f3F000000;
	selp.f32 	%f372, %f367, %f370, %p24;
	cvt.rzi.f32.f32 	%f373, %f367;
	setp.lt.f32 	%p25, %f371, 0f3F000000;
	selp.f32 	%f407, %f402, %f405, %p30;
	cvt.rzi.f32.f32 	%f408, %f402;
	setp.lt.f32 	%p31, %f406, 0f3F000000;
	selp.f32 	%f441, %f436, %f439, %p36;
	cvt.rzi.f32.f32 	%f442, %f436;
	setp.lt.f32 	%p37, %f440, 0f3F000000;
	selp.f32 	%f476, %f471, %f474, %p42;
	cvt.rzi.f32.f32 	%f477, %f471;
	setp.lt.f32 	%p43, %f475, 0f3F000000;
	selp.f32 	%f510, %f505, %f508, %p48;
	cvt.rzi.f32.f32 	%f511, %f505;
	setp.lt.f32 	%p49, %f509, 0f3F000000;
	selp.f32 	%f545, %f540, %f543, %p54;
	cvt.rzi.f32.f32 	%f546, %f540;
	setp.lt.f32 	%p55, %f544, 0f3F000000;
	selp.f32 	%f579, %f574, %f577, %p60;
	cvt.rzi.f32.f32 	%f580, %f574;
	setp.lt.f32 	%p61, %f578, 0f3F000000;
	selp.f32 	%f614, %f609, %f612, %p66;
	cvt.rzi.f32.f32 	%f615, %f609;
	setp.lt.f32 	%p67, %f613, 0f3F000000;
	selp.f32 	%f648, %f643, %f646, %p72;
	cvt.rzi.f32.f32 	%f649, %f643;
	setp.lt.f32 	%p73, %f647, 0f3F000000;
	selp.f32 	%f683, %f678, %f681, %p78;
	cvt.rzi.f32.f32 	%f684, %f678;
	setp.lt.f32 	%p79, %f682, 0f3F000000;
	selp.f32 	%f717, %f712, %f715, %p84;
	cvt.rzi.f32.f32 	%f718, %f712;
	setp.lt.f32 	%p85, %f716, 0f3F000000;
	selp.f32 	%f752, %f747, %f750, %p90;
	cvt.rzi.f32.f32 	%f753, %f747;
	setp.lt.f32 	%p91, %f751, 0f3F000000;
	selp.f32 	%f786, %f781, %f784, %p96;
	cvt.rzi.f32.f32 	%f787, %f781;
	setp.lt.f32 	%p97, %f785, 0f3F000000;
	mul.f32 	%f839, %f838, 0f34222169;
	mul.f32 	%f892, %f891, 0f34222169;
	abs.f32 	%f937, %f1374;
	setp.gtu.f32 	%p153, %f937, 0f7F800000;
	@%p153 bra 	LBB0_78;
// %bb.77:
	mov.b32 	%r453, %f110;
	and.b32  	%r454, %r453, -2147483648;
	mov.b32 	%r455, %f1374;
	or.b32  	%r456, %r454, %r455;
	mov.b32 	%f1374, %r456;
LBB0_78:                                // %__nv_fmodf.exit2282
	selp.f32 	%f271, %f270, %f269, %p7;
	selp.f32 	%f305, %f304, %f303, %p13;
	selp.f32 	%f340, %f339, %f338, %p19;
	selp.f32 	%f374, %f373, %f372, %p25;
	selp.f32 	%f409, %f408, %f407, %p31;
	selp.f32 	%f443, %f442, %f441, %p37;
	selp.f32 	%f478, %f477, %f476, %p43;
	selp.f32 	%f512, %f511, %f510, %p49;
	selp.f32 	%f547, %f546, %f545, %p55;
	selp.f32 	%f581, %f580, %f579, %p61;
	selp.f32 	%f616, %f615, %f614, %p67;
	selp.f32 	%f650, %f649, %f648, %p73;
	selp.f32 	%f685, %f684, %f683, %p79;
	selp.f32 	%f719, %f718, %f717, %p85;
	selp.f32 	%f754, %f753, %f752, %p91;
	selp.f32 	%f788, %f787, %f786, %p97;
	fma.rn.f32 	%f840, %f838, 0f40490FDA, %f839;
	fma.rn.f32 	%f893, %f891, 0f40490FDA, %f892;
	add.f32 	%f938, %f1374, %f1374;
	mov.b32 	%r457, %f938;
	and.b32  	%r458, %r457, -2147483648;
	or.b32  	%r459, %r458, 1056964608;
	mov.b32 	%f939, %r459;
	add.f32 	%f940, %f938, %f939;
	cvt.rzi.f32.f32 	%f941, %f940;
	abs.f32 	%f942, %f938;
	setp.gt.f32 	%p154, %f942, 0f4B000000;
	selp.f32 	%f943, %f938, %f941, %p154;
	cvt.rzi.f32.f32 	%f944, %f938;
	setp.lt.f32 	%p155, %f942, 0f3F000000;
	selp.f32 	%f945, %f944, %f943, %p155;
	fma.rn.f32 	%f946, %f945, 0fBF000000, %f1374;
	mul.f32 	%f947, %f946, 0f34222169;
	fma.rn.f32 	%f948, %f946, 0f40490FDA, %f947;
	shl.b32 	%r70, %r18, 3;
	sub.s32 	%r465, %r61, %r70;
	cvt.rn.f32.s32 	%f969, %r465;
	div.approx.f32 	%f129, %f969, %f917;
	abs.f32 	%f1378, %f129;
	setp.lt.f32 	%p161, %f1378, 0f40000000;
	@%p161 bra 	LBB0_90;
// %bb.79:
	setp.gtu.f32 	%p162, %f1378, 0f4B800000;
	@%p162 bra 	LBB0_86;
	bra.uni 	LBB0_80;
LBB0_86:
	mov.b32 	%r72, %f1378;
	and.b32  	%r466, %r72, 8388607;
	or.b32  	%r16160, %r466, 1065353216;
	mov.b32 	%f1377, %r16160;
	add.s32 	%r467, %r72, -1073741824;
	and.b32  	%r16161, %r467, -8388608;
	setp.eq.s32 	%p168, %r16161, 0;
	@%p168 bra 	LBB0_89;
// %bb.87:                              // %__nv_fmaf_rn.exit4.i.i.i2321.preheader
	mov.f32 	%f980, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f979,%f980;
	// end inline asm
LBB0_88:                                // %__nv_fmaf_rn.exit4.i.i.i2321
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r468, %r16161, 192937984;
	add.s32 	%r469, %r468, %r16160;
	mov.b32 	%f981, %r469;
	mul.f32 	%f982, %f979, %f981;
	sub.f32 	%f983, %f981, %f982;
	fma.rn.f32 	%f984, %f983, %f979, %f982;
	sub.f32 	%f985, %f981, %f984;
	fma.rz.f32 	%f986, %f985, %f979, %f984;
	cvt.rzi.f32.f32 	%f987, %f986;
	sub.f32 	%f1377, %f981, %f987;
	sub.s32 	%r16161, %r16161, %r468;
	mov.b32 	%r16160, %f1377;
	setp.ne.s32 	%p169, %r16161, 0;
	setp.ne.s32 	%p170, %r16160, 0;
	and.pred  	%p171, %p169, %p170;
	@%p171 bra 	LBB0_88;
LBB0_89:                                // %__internal_fmodf_slowpath_mod.exit.i.i2323
	setp.gt.u32 	%p172, %r72, 2139095039;
	selp.f32 	%f988, 0f7FFFFFFF, 0f4B800000, %p172;
	mul.f32 	%f989, %f1377, 0f34000000;
	mul.f32 	%f1378, %f988, %f989;
	bra.uni 	LBB0_90;
LBB0_80:                                // %__nv_fast_fdividef.exit.i.i.i2293
	div.approx.f32 	%f972, %f1378, %f255;
	cvt.rzi.f32.f32 	%f1376, %f972;
	fma.rn.f32 	%f132, %f1376, 0fC0000000, %f1378;
	mov.b32 	%r71, %f132;
	setp.lt.u32 	%p163, %r71, 1073741824;
	@%p163 bra 	LBB0_85;
// %bb.81:
	setp.lt.u32 	%p164, %r71, -2147483647;
	@%p164 bra 	LBB0_83;
// %bb.82:
	add.f32 	%f977, %f1376, 0fBF800000;
	setp.lt.f32 	%p167, %f132, 0fC0000000;
	add.f32 	%f978, %f977, 0fBF800000;
	selp.f32 	%f1376, %f978, %f977, %p167;
	bra.uni 	LBB0_85;
LBB0_83:
	add.f32 	%f1376, %f1376, 0f3F800000;
	setp.ltu.f32 	%p165, %f132, 0f40800000;
	@%p165 bra 	LBB0_85;
// %bb.84:                              // %__nv_fmaf_rn.exit.i.i.i2298
	add.f32 	%f973, %f1376, 0f3F800000;
	fma.rn.f32 	%f975, %f255, 0fC0400000, %f132;
	setp.ge.f32 	%p166, %f975, 0f00000000;
	add.f32 	%f976, %f973, 0f3F800000;
	selp.f32 	%f1376, %f976, %f973, %p166;
LBB0_85:                                // %__internal_fmodf_fastpath_quot.exit.i.i2302
	fma.rn.f32 	%f1378, %f1376, 0fC0000000, %f1378;
LBB0_90:                                // %__internal_fmodf_kernel.exit.i2327
	fma.rn.f32 	%f272, %f271, 0fBF000000, %f263;
	fma.rn.f32 	%f306, %f305, 0fBF000000, %f297;
	fma.rn.f32 	%f341, %f340, 0fBF000000, %f332;
	fma.rn.f32 	%f375, %f374, 0fBF000000, %f366;
	fma.rn.f32 	%f410, %f409, 0fBF000000, %f401;
	fma.rn.f32 	%f444, %f443, 0fBF000000, %f435;
	fma.rn.f32 	%f479, %f478, 0fBF000000, %f470;
	fma.rn.f32 	%f513, %f512, 0fBF000000, %f504;
	fma.rn.f32 	%f548, %f547, 0fBF000000, %f539;
	fma.rn.f32 	%f582, %f581, 0fBF000000, %f573;
	fma.rn.f32 	%f617, %f616, 0fBF000000, %f608;
	fma.rn.f32 	%f651, %f650, 0fBF000000, %f642;
	fma.rn.f32 	%f686, %f685, 0fBF000000, %f677;
	fma.rn.f32 	%f720, %f719, 0fBF000000, %f711;
	fma.rn.f32 	%f755, %f754, 0fBF000000, %f746;
	fma.rn.f32 	%f789, %f788, 0fBF000000, %f780;
	mul.f32 	%f841, %f840, %f840;
	mul.f32 	%f894, %f893, %f893;
	mul.f32 	%f949, %f948, %f948;
	shl.b32 	%r9, %r2, 1;
	abs.f32 	%f990, %f1378;
	setp.gtu.f32 	%p173, %f990, 0f7F800000;
	@%p173 bra 	LBB0_92;
// %bb.91:
	mov.b32 	%r470, %f129;
	and.b32  	%r471, %r470, -2147483648;
	mov.b32 	%r472, %f1378;
	or.b32  	%r473, %r471, %r472;
	mov.b32 	%f1378, %r473;
LBB0_92:                                // %__nv_fmodf.exit2328
	mul.f32 	%f273, %f272, %f272;
	mul.f32 	%f307, %f306, %f306;
	mul.f32 	%f342, %f341, %f341;
	mul.f32 	%f376, %f375, %f375;
	mul.f32 	%f411, %f410, %f410;
	mul.f32 	%f445, %f444, %f444;
	mul.f32 	%f480, %f479, %f479;
	mul.f32 	%f514, %f513, %f513;
	mul.f32 	%f549, %f548, %f548;
	mul.f32 	%f583, %f582, %f582;
	mul.f32 	%f618, %f617, %f617;
	mul.f32 	%f652, %f651, %f651;
	mul.f32 	%f687, %f686, %f686;
	mul.f32 	%f721, %f720, %f720;
	mul.f32 	%f756, %f755, %f755;
	mul.f32 	%f790, %f789, %f789;
	fma.rn.f32 	%f842, %f841, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f895, %f894, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f950, %f949, 0f37CBAC00, 0fBAB607ED;
	add.f32 	%f991, %f1378, %f1378;
	mov.b32 	%r486, %f991;
	and.b32  	%r487, %r486, -2147483648;
	or.b32  	%r488, %r487, 1056964608;
	mov.b32 	%f992, %r488;
	add.f32 	%f993, %f991, %f992;
	cvt.rzi.f32.f32 	%f994, %f993;
	abs.f32 	%f995, %f991;
	setp.gt.f32 	%p174, %f995, 0f4B000000;
	selp.f32 	%f996, %f991, %f994, %p174;
	cvt.rzi.f32.f32 	%f997, %f991;
	setp.lt.f32 	%p175, %f995, 0f3F000000;
	selp.f32 	%f998, %f997, %f996, %p175;
	fma.rn.f32 	%f999, %f998, 0fBF000000, %f1378;
	mul.f32 	%f1000, %f999, 0f34222169;
	fma.rn.f32 	%f1001, %f999, 0f40490FDA, %f1000;
	mul.f32 	%f1002, %f1001, %f1001;
	fma.rn.f32 	%f1003, %f1002, 0f37CBAC00, 0fBAB607ED;
	and.b32  	%r494, %r9, 6;
	shl.b32 	%r495, %r494, 1;
	neg.s32 	%r83, %r495;
	mul.lo.s32 	%r84, %r83, %r18;
	cvt.rn.f32.s32 	%f1024, %r84;
	div.approx.f32 	%f146, %f1024, %f287;
	abs.f32 	%f1382, %f146;
	setp.lt.f32 	%p181, %f1382, 0f40000000;
	@%p181 bra 	LBB0_104;
// %bb.93:
	setp.gtu.f32 	%p182, %f1382, 0f4B800000;
	@%p182 bra 	LBB0_100;
	bra.uni 	LBB0_94;
LBB0_100:
	mov.b32 	%r86, %f1382;
	and.b32  	%r496, %r86, 8388607;
	or.b32  	%r16162, %r496, 1065353216;
	mov.b32 	%f1381, %r16162;
	add.s32 	%r497, %r86, -1073741824;
	and.b32  	%r16163, %r497, -8388608;
	setp.eq.s32 	%p188, %r16163, 0;
	@%p188 bra 	LBB0_103;
// %bb.101:                             // %__nv_fmaf_rn.exit4.i.i.i2367.preheader
	mov.f32 	%f1035, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1034,%f1035;
	// end inline asm
LBB0_102:                               // %__nv_fmaf_rn.exit4.i.i.i2367
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r498, %r16163, 192937984;
	add.s32 	%r499, %r498, %r16162;
	mov.b32 	%f1036, %r499;
	mul.f32 	%f1037, %f1034, %f1036;
	sub.f32 	%f1038, %f1036, %f1037;
	fma.rn.f32 	%f1039, %f1038, %f1034, %f1037;
	sub.f32 	%f1040, %f1036, %f1039;
	fma.rz.f32 	%f1041, %f1040, %f1034, %f1039;
	cvt.rzi.f32.f32 	%f1042, %f1041;
	sub.f32 	%f1381, %f1036, %f1042;
	sub.s32 	%r16163, %r16163, %r498;
	mov.b32 	%r16162, %f1381;
	setp.ne.s32 	%p189, %r16163, 0;
	setp.ne.s32 	%p190, %r16162, 0;
	and.pred  	%p191, %p189, %p190;
	@%p191 bra 	LBB0_102;
LBB0_103:                               // %__internal_fmodf_slowpath_mod.exit.i.i2369
	setp.gt.u32 	%p192, %r86, 2139095039;
	selp.f32 	%f1043, 0f7FFFFFFF, 0f4B800000, %p192;
	mul.f32 	%f1044, %f1381, 0f34000000;
	mul.f32 	%f1382, %f1043, %f1044;
	bra.uni 	LBB0_104;
LBB0_94:                                // %__nv_fast_fdividef.exit.i.i.i2339
	div.approx.f32 	%f1027, %f1382, %f255;
	cvt.rzi.f32.f32 	%f1380, %f1027;
	fma.rn.f32 	%f149, %f1380, 0fC0000000, %f1382;
	mov.b32 	%r85, %f149;
	setp.lt.u32 	%p183, %r85, 1073741824;
	@%p183 bra 	LBB0_99;
// %bb.95:
	setp.lt.u32 	%p184, %r85, -2147483647;
	@%p184 bra 	LBB0_97;
// %bb.96:
	add.f32 	%f1032, %f1380, 0fBF800000;
	setp.lt.f32 	%p187, %f149, 0fC0000000;
	add.f32 	%f1033, %f1032, 0fBF800000;
	selp.f32 	%f1380, %f1033, %f1032, %p187;
	bra.uni 	LBB0_99;
LBB0_97:
	add.f32 	%f1380, %f1380, 0f3F800000;
	setp.ltu.f32 	%p185, %f149, 0f40800000;
	@%p185 bra 	LBB0_99;
// %bb.98:                              // %__nv_fmaf_rn.exit.i.i.i2344
	add.f32 	%f1028, %f1380, 0f3F800000;
	fma.rn.f32 	%f1030, %f255, 0fC0400000, %f149;
	setp.ge.f32 	%p186, %f1030, 0f00000000;
	add.f32 	%f1031, %f1028, 0f3F800000;
	selp.f32 	%f1380, %f1031, %f1028, %p186;
LBB0_99:                                // %__internal_fmodf_fastpath_quot.exit.i.i2348
	fma.rn.f32 	%f1382, %f1380, 0fC0000000, %f1382;
LBB0_104:                               // %__internal_fmodf_kernel.exit.i2373
	cvt.rzi.s32.f32 	%r261, %f271;
	fma.rn.f32 	%f274, %f273, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f275, %f273, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r268, %f305;
	fma.rn.f32 	%f308, %f307, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f309, %f307, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r279, %f340;
	fma.rn.f32 	%f343, %f342, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f344, %f342, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r286, %f374;
	fma.rn.f32 	%f377, %f376, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f378, %f376, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r297, %f409;
	fma.rn.f32 	%f412, %f411, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f413, %f411, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r304, %f443;
	fma.rn.f32 	%f446, %f445, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f447, %f445, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r315, %f478;
	fma.rn.f32 	%f481, %f480, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f482, %f480, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r322, %f512;
	fma.rn.f32 	%f515, %f514, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f516, %f514, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r333, %f547;
	fma.rn.f32 	%f550, %f549, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f551, %f549, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r340, %f581;
	fma.rn.f32 	%f584, %f583, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f585, %f583, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r351, %f616;
	fma.rn.f32 	%f619, %f618, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f620, %f618, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r358, %f650;
	fma.rn.f32 	%f653, %f652, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f654, %f652, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r369, %f685;
	fma.rn.f32 	%f688, %f687, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f689, %f687, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r376, %f719;
	fma.rn.f32 	%f722, %f721, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f723, %f721, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r387, %f754;
	fma.rn.f32 	%f757, %f756, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f758, %f756, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r394, %f788;
	fma.rn.f32 	%f791, %f790, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f792, %f790, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r412, %f837;
	fma.rn.f32 	%f843, %f842, %f841, 0f3D2AAABB;
	fma.rn.f32 	%f847, %f841, 0fB94D4153, 0f3C0885E4;
	cvt.rzi.s32.f32 	%r441, %f890;
	fma.rn.f32 	%f896, %f895, %f894, 0f3D2AAABB;
	fma.rn.f32 	%f900, %f894, 0fB94D4153, 0f3C0885E4;
	cvt.rzi.s32.f32 	%r460, %f945;
	fma.rn.f32 	%f951, %f950, %f949, 0f3D2AAABB;
	fma.rn.f32 	%f955, %f949, 0fB94D4153, 0f3C0885E4;
	cvt.rzi.s32.f32 	%r489, %f998;
	fma.rn.f32 	%f1004, %f1003, %f1002, 0f3D2AAABB;
	fma.rn.f32 	%f1008, %f1002, 0fB94D4153, 0f3C0885E4;
	abs.f32 	%f1045, %f1382;
	setp.gtu.f32 	%p193, %f1045, 0f7F800000;
	@%p193 bra 	LBB0_106;
// %bb.105:
	mov.b32 	%r500, %f146;
	and.b32  	%r501, %r500, -2147483648;
	mov.b32 	%r502, %f1382;
	or.b32  	%r503, %r501, %r502;
	mov.b32 	%f1382, %r503;
LBB0_106:                               // %__nv_fmodf.exit2374
	add.s32 	%r262, %r261, 1;
	fma.rn.f32 	%f276, %f274, %f273, 0fC0A55DF6;
	fma.rn.f32 	%f277, %f275, %f273, 0f4081E0CF;
	fma.rn.f32 	%f278, %f273, %f272, 0f00000000;
	add.s32 	%r269, %r268, 1;
	fma.rn.f32 	%f310, %f308, %f307, 0fC0A55DF6;
	fma.rn.f32 	%f311, %f309, %f307, 0f4081E0CF;
	fma.rn.f32 	%f312, %f307, %f306, 0f00000000;
	add.s32 	%r280, %r279, 1;
	fma.rn.f32 	%f345, %f343, %f342, 0fC0A55DF6;
	fma.rn.f32 	%f346, %f344, %f342, 0f4081E0CF;
	fma.rn.f32 	%f347, %f342, %f341, 0f00000000;
	add.s32 	%r287, %r286, 1;
	fma.rn.f32 	%f379, %f377, %f376, 0fC0A55DF6;
	fma.rn.f32 	%f380, %f378, %f376, 0f4081E0CF;
	fma.rn.f32 	%f381, %f376, %f375, 0f00000000;
	add.s32 	%r298, %r297, 1;
	fma.rn.f32 	%f414, %f412, %f411, 0fC0A55DF6;
	fma.rn.f32 	%f415, %f413, %f411, 0f4081E0CF;
	fma.rn.f32 	%f416, %f411, %f410, 0f00000000;
	add.s32 	%r305, %r304, 1;
	fma.rn.f32 	%f448, %f446, %f445, 0fC0A55DF6;
	fma.rn.f32 	%f449, %f447, %f445, 0f4081E0CF;
	fma.rn.f32 	%f450, %f445, %f444, 0f00000000;
	add.s32 	%r316, %r315, 1;
	fma.rn.f32 	%f483, %f481, %f480, 0fC0A55DF6;
	fma.rn.f32 	%f484, %f482, %f480, 0f4081E0CF;
	fma.rn.f32 	%f485, %f480, %f479, 0f00000000;
	add.s32 	%r323, %r322, 1;
	fma.rn.f32 	%f517, %f515, %f514, 0fC0A55DF6;
	fma.rn.f32 	%f518, %f516, %f514, 0f4081E0CF;
	fma.rn.f32 	%f519, %f514, %f513, 0f00000000;
	add.s32 	%r334, %r333, 1;
	fma.rn.f32 	%f552, %f550, %f549, 0fC0A55DF6;
	fma.rn.f32 	%f553, %f551, %f549, 0f4081E0CF;
	fma.rn.f32 	%f554, %f549, %f548, 0f00000000;
	add.s32 	%r341, %r340, 1;
	fma.rn.f32 	%f586, %f584, %f583, 0fC0A55DF6;
	fma.rn.f32 	%f587, %f585, %f583, 0f4081E0CF;
	fma.rn.f32 	%f588, %f583, %f582, 0f00000000;
	add.s32 	%r352, %r351, 1;
	fma.rn.f32 	%f621, %f619, %f618, 0fC0A55DF6;
	fma.rn.f32 	%f622, %f620, %f618, 0f4081E0CF;
	fma.rn.f32 	%f623, %f618, %f617, 0f00000000;
	add.s32 	%r359, %r358, 1;
	fma.rn.f32 	%f655, %f653, %f652, 0fC0A55DF6;
	fma.rn.f32 	%f656, %f654, %f652, 0f4081E0CF;
	fma.rn.f32 	%f657, %f652, %f651, 0f00000000;
	add.s32 	%r370, %r369, 1;
	fma.rn.f32 	%f690, %f688, %f687, 0fC0A55DF6;
	fma.rn.f32 	%f691, %f689, %f687, 0f4081E0CF;
	fma.rn.f32 	%f692, %f687, %f686, 0f00000000;
	add.s32 	%r377, %r376, 1;
	fma.rn.f32 	%f724, %f722, %f721, 0fC0A55DF6;
	fma.rn.f32 	%f725, %f723, %f721, 0f4081E0CF;
	fma.rn.f32 	%f726, %f721, %f720, 0f00000000;
	add.s32 	%r388, %r387, 1;
	fma.rn.f32 	%f759, %f757, %f756, 0fC0A55DF6;
	fma.rn.f32 	%f760, %f758, %f756, 0f4081E0CF;
	fma.rn.f32 	%f761, %f756, %f755, 0f00000000;
	add.s32 	%r395, %r394, 1;
	fma.rn.f32 	%f793, %f791, %f790, 0fC0A55DF6;
	fma.rn.f32 	%f794, %f792, %f790, 0f4081E0CF;
	fma.rn.f32 	%f795, %f790, %f789, 0f00000000;
	fma.rn.f32 	%f844, %f843, %f841, 0fBEFFFFFF;
	fma.rn.f32 	%f846, %f841, %f840, 0f00000000;
	fma.rn.f32 	%f848, %f847, %f841, 0fBE2AAAA8;
	and.b32  	%r413, %r412, 1;
	fma.rn.f32 	%f897, %f896, %f894, 0fBEFFFFFF;
	fma.rn.f32 	%f899, %f894, %f893, 0f00000000;
	fma.rn.f32 	%f901, %f900, %f894, 0fBE2AAAA8;
	and.b32  	%r442, %r441, 1;
	fma.rn.f32 	%f952, %f951, %f949, 0fBEFFFFFF;
	fma.rn.f32 	%f954, %f949, %f948, 0f00000000;
	fma.rn.f32 	%f956, %f955, %f949, 0fBE2AAAA8;
	and.b32  	%r461, %r460, 1;
	fma.rn.f32 	%f1005, %f1004, %f1002, 0fBEFFFFFF;
	fma.rn.f32 	%f1007, %f1002, %f1001, 0f00000000;
	fma.rn.f32 	%f1009, %f1008, %f1002, 0fBE2AAAA8;
	and.b32  	%r490, %r489, 1;
	add.f32 	%f1046, %f1382, %f1382;
	mov.b32 	%r504, %f1046;
	and.b32  	%r505, %r504, -2147483648;
	or.b32  	%r506, %r505, 1056964608;
	mov.b32 	%f1047, %r506;
	add.f32 	%f1048, %f1046, %f1047;
	cvt.rzi.f32.f32 	%f1049, %f1048;
	abs.f32 	%f1050, %f1046;
	setp.gt.f32 	%p194, %f1050, 0f4B000000;
	selp.f32 	%f1051, %f1046, %f1049, %p194;
	cvt.rzi.f32.f32 	%f1052, %f1046;
	setp.lt.f32 	%p195, %f1050, 0f3F000000;
	selp.f32 	%f1053, %f1052, %f1051, %p195;
	cvt.rzi.s32.f32 	%r507, %f1053;
	fma.rn.f32 	%f1054, %f1053, 0fBF000000, %f1382;
	mul.f32 	%f1055, %f1054, 0f34222169;
	fma.rn.f32 	%f1056, %f1054, 0f40490FDA, %f1055;
	mul.f32 	%f1057, %f1056, %f1056;
	fma.rn.f32 	%f1058, %f1057, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f1059, %f1058, %f1057, 0f3D2AAABB;
	fma.rn.f32 	%f1063, %f1057, 0fB94D4153, 0f3C0885E4;
	sub.s32 	%r512, %r84, %r70;
	cvt.rn.f32.s32 	%f1077, %r512;
	div.approx.f32 	%f165, %f1077, %f287;
	abs.f32 	%f1386, %f165;
	setp.lt.f32 	%p201, %f1386, 0f40000000;
	@%p201 bra 	LBB0_118;
// %bb.107:
	setp.gtu.f32 	%p202, %f1386, 0f4B800000;
	@%p202 bra 	LBB0_114;
	bra.uni 	LBB0_108;
LBB0_114:
	mov.b32 	%r94, %f1386;
	and.b32  	%r513, %r94, 8388607;
	or.b32  	%r16164, %r513, 1065353216;
	mov.b32 	%f1385, %r16164;
	add.s32 	%r514, %r94, -1073741824;
	and.b32  	%r16165, %r514, -8388608;
	setp.eq.s32 	%p208, %r16165, 0;
	@%p208 bra 	LBB0_117;
// %bb.115:                             // %__nv_fmaf_rn.exit4.i.i.i2413.preheader
	mov.f32 	%f1088, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1087,%f1088;
	// end inline asm
LBB0_116:                               // %__nv_fmaf_rn.exit4.i.i.i2413
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r515, %r16165, 192937984;
	add.s32 	%r516, %r515, %r16164;
	mov.b32 	%f1089, %r516;
	mul.f32 	%f1090, %f1087, %f1089;
	sub.f32 	%f1091, %f1089, %f1090;
	fma.rn.f32 	%f1092, %f1091, %f1087, %f1090;
	sub.f32 	%f1093, %f1089, %f1092;
	fma.rz.f32 	%f1094, %f1093, %f1087, %f1092;
	cvt.rzi.f32.f32 	%f1095, %f1094;
	sub.f32 	%f1385, %f1089, %f1095;
	sub.s32 	%r16165, %r16165, %r515;
	mov.b32 	%r16164, %f1385;
	setp.ne.s32 	%p209, %r16165, 0;
	setp.ne.s32 	%p210, %r16164, 0;
	and.pred  	%p211, %p209, %p210;
	@%p211 bra 	LBB0_116;
LBB0_117:                               // %__internal_fmodf_slowpath_mod.exit.i.i2415
	setp.gt.u32 	%p212, %r94, 2139095039;
	selp.f32 	%f1096, 0f7FFFFFFF, 0f4B800000, %p212;
	mul.f32 	%f1097, %f1385, 0f34000000;
	mul.f32 	%f1386, %f1096, %f1097;
	bra.uni 	LBB0_118;
LBB0_108:                               // %__nv_fast_fdividef.exit.i.i.i2385
	div.approx.f32 	%f1080, %f1386, %f255;
	cvt.rzi.f32.f32 	%f1384, %f1080;
	fma.rn.f32 	%f168, %f1384, 0fC0000000, %f1386;
	mov.b32 	%r93, %f168;
	setp.lt.u32 	%p203, %r93, 1073741824;
	@%p203 bra 	LBB0_113;
// %bb.109:
	setp.lt.u32 	%p204, %r93, -2147483647;
	@%p204 bra 	LBB0_111;
// %bb.110:
	add.f32 	%f1085, %f1384, 0fBF800000;
	setp.lt.f32 	%p207, %f168, 0fC0000000;
	add.f32 	%f1086, %f1085, 0fBF800000;
	selp.f32 	%f1384, %f1086, %f1085, %p207;
	bra.uni 	LBB0_113;
LBB0_111:
	add.f32 	%f1384, %f1384, 0f3F800000;
	setp.ltu.f32 	%p205, %f168, 0f40800000;
	@%p205 bra 	LBB0_113;
// %bb.112:                             // %__nv_fmaf_rn.exit.i.i.i2390
	add.f32 	%f1081, %f1384, 0f3F800000;
	fma.rn.f32 	%f1083, %f255, 0fC0400000, %f168;
	setp.ge.f32 	%p206, %f1083, 0f00000000;
	add.f32 	%f1084, %f1081, 0f3F800000;
	selp.f32 	%f1384, %f1084, %f1081, %p206;
LBB0_113:                               // %__internal_fmodf_fastpath_quot.exit.i.i2394
	fma.rn.f32 	%f1386, %f1384, 0fC0000000, %f1386;
LBB0_118:                               // %__internal_fmodf_kernel.exit.i2419
	fma.rn.f32 	%f279, %f277, %f273, 0fC09DE9E6;
	fma.rn.f32 	%f280, %f276, %f278, 0f00000000;
	and.b32  	%r263, %r262, 1;
	fma.rn.f32 	%f313, %f311, %f307, 0fC09DE9E6;
	fma.rn.f32 	%f314, %f310, %f312, 0f00000000;
	and.b32  	%r270, %r269, 1;
	fma.rn.f32 	%f348, %f346, %f342, 0fC09DE9E6;
	fma.rn.f32 	%f349, %f345, %f347, 0f00000000;
	and.b32  	%r281, %r280, 1;
	fma.rn.f32 	%f382, %f380, %f376, 0fC09DE9E6;
	fma.rn.f32 	%f383, %f379, %f381, 0f00000000;
	and.b32  	%r288, %r287, 1;
	fma.rn.f32 	%f417, %f415, %f411, 0fC09DE9E6;
	fma.rn.f32 	%f418, %f414, %f416, 0f00000000;
	and.b32  	%r299, %r298, 1;
	fma.rn.f32 	%f451, %f449, %f445, 0fC09DE9E6;
	fma.rn.f32 	%f452, %f448, %f450, 0f00000000;
	and.b32  	%r306, %r305, 1;
	fma.rn.f32 	%f486, %f484, %f480, 0fC09DE9E6;
	fma.rn.f32 	%f487, %f483, %f485, 0f00000000;
	and.b32  	%r317, %r316, 1;
	fma.rn.f32 	%f520, %f518, %f514, 0fC09DE9E6;
	fma.rn.f32 	%f521, %f517, %f519, 0f00000000;
	and.b32  	%r324, %r323, 1;
	fma.rn.f32 	%f555, %f553, %f549, 0fC09DE9E6;
	fma.rn.f32 	%f556, %f552, %f554, 0f00000000;
	and.b32  	%r335, %r334, 1;
	fma.rn.f32 	%f589, %f587, %f583, 0fC09DE9E6;
	fma.rn.f32 	%f590, %f586, %f588, 0f00000000;
	and.b32  	%r342, %r341, 1;
	fma.rn.f32 	%f624, %f622, %f618, 0fC09DE9E6;
	fma.rn.f32 	%f625, %f621, %f623, 0f00000000;
	and.b32  	%r353, %r352, 1;
	fma.rn.f32 	%f658, %f656, %f652, 0fC09DE9E6;
	fma.rn.f32 	%f659, %f655, %f657, 0f00000000;
	and.b32  	%r360, %r359, 1;
	fma.rn.f32 	%f693, %f691, %f687, 0fC09DE9E6;
	fma.rn.f32 	%f694, %f690, %f692, 0f00000000;
	and.b32  	%r371, %r370, 1;
	fma.rn.f32 	%f727, %f725, %f721, 0fC09DE9E6;
	fma.rn.f32 	%f728, %f724, %f726, 0f00000000;
	and.b32  	%r378, %r377, 1;
	fma.rn.f32 	%f762, %f760, %f756, 0fC09DE9E6;
	fma.rn.f32 	%f763, %f759, %f761, 0f00000000;
	and.b32  	%r389, %r388, 1;
	fma.rn.f32 	%f796, %f794, %f790, 0fC09DE9E6;
	fma.rn.f32 	%f797, %f793, %f795, 0f00000000;
	and.b32  	%r396, %r395, 1;
	fma.rn.f32 	%f845, %f844, %f841, 0f3F800000;
	fma.rn.f32 	%f849, %f848, %f846, %f840;
	setp.eq.b32 	%p116, %r413, 1;
	fma.rn.f32 	%f898, %f897, %f894, 0f3F800000;
	fma.rn.f32 	%f902, %f901, %f899, %f893;
	setp.eq.b32 	%p136, %r442, 1;
	fma.rn.f32 	%f953, %f952, %f949, 0f3F800000;
	fma.rn.f32 	%f957, %f956, %f954, %f948;
	setp.eq.b32 	%p156, %r461, 1;
	fma.rn.f32 	%f1006, %f1005, %f1002, 0f3F800000;
	fma.rn.f32 	%f1010, %f1009, %f1007, %f1001;
	setp.eq.b32 	%p176, %r490, 1;
	fma.rn.f32 	%f1060, %f1059, %f1057, 0fBEFFFFFF;
	fma.rn.f32 	%f1062, %f1057, %f1056, 0f00000000;
	fma.rn.f32 	%f1064, %f1063, %f1057, 0fBE2AAAA8;
	and.b32  	%r508, %r507, 1;
	shr.u32 	%r15, %r2, 1;
	shr.u32 	%r21, %r2, 3;
	abs.f32 	%f1098, %f1386;
	setp.gtu.f32 	%p213, %f1098, 0f7F800000;
	@%p213 bra 	LBB0_120;
// %bb.119:
	mov.b32 	%r517, %f165;
	and.b32  	%r518, %r517, -2147483648;
	mov.b32 	%r519, %f1386;
	or.b32  	%r520, %r518, %r519;
	mov.b32 	%f1386, %r520;
LBB0_120:                               // %__nv_fmodf.exit2420
	shl.b32 	%r6, %r2, 2;
	fma.rn.f32 	%f281, %f279, %f273, 0f3F800000;
	fma.rn.f32 	%f282, %f272, 0f40490FDB, %f280;
	setp.eq.b32 	%p8, %r263, 1;
	fma.rn.f32 	%f315, %f313, %f307, 0f3F800000;
	fma.rn.f32 	%f316, %f306, 0f40490FDB, %f314;
	setp.eq.b32 	%p14, %r270, 1;
	fma.rn.f32 	%f350, %f348, %f342, 0f3F800000;
	fma.rn.f32 	%f351, %f341, 0f40490FDB, %f349;
	setp.eq.b32 	%p20, %r281, 1;
	fma.rn.f32 	%f384, %f382, %f376, 0f3F800000;
	fma.rn.f32 	%f385, %f375, 0f40490FDB, %f383;
	setp.eq.b32 	%p26, %r288, 1;
	fma.rn.f32 	%f419, %f417, %f411, 0f3F800000;
	fma.rn.f32 	%f420, %f410, 0f40490FDB, %f418;
	setp.eq.b32 	%p32, %r299, 1;
	fma.rn.f32 	%f453, %f451, %f445, 0f3F800000;
	fma.rn.f32 	%f454, %f444, 0f40490FDB, %f452;
	setp.eq.b32 	%p38, %r306, 1;
	fma.rn.f32 	%f488, %f486, %f480, 0f3F800000;
	fma.rn.f32 	%f489, %f479, 0f40490FDB, %f487;
	setp.eq.b32 	%p44, %r317, 1;
	fma.rn.f32 	%f522, %f520, %f514, 0f3F800000;
	fma.rn.f32 	%f523, %f513, 0f40490FDB, %f521;
	setp.eq.b32 	%p50, %r324, 1;
	fma.rn.f32 	%f557, %f555, %f549, 0f3F800000;
	fma.rn.f32 	%f558, %f548, 0f40490FDB, %f556;
	setp.eq.b32 	%p56, %r335, 1;
	fma.rn.f32 	%f591, %f589, %f583, 0f3F800000;
	fma.rn.f32 	%f592, %f582, 0f40490FDB, %f590;
	setp.eq.b32 	%p62, %r342, 1;
	fma.rn.f32 	%f626, %f624, %f618, 0f3F800000;
	fma.rn.f32 	%f627, %f617, 0f40490FDB, %f625;
	setp.eq.b32 	%p68, %r353, 1;
	fma.rn.f32 	%f660, %f658, %f652, 0f3F800000;
	fma.rn.f32 	%f661, %f651, 0f40490FDB, %f659;
	setp.eq.b32 	%p74, %r360, 1;
	fma.rn.f32 	%f695, %f693, %f687, 0f3F800000;
	fma.rn.f32 	%f696, %f686, 0f40490FDB, %f694;
	setp.eq.b32 	%p80, %r371, 1;
	fma.rn.f32 	%f729, %f727, %f721, 0f3F800000;
	fma.rn.f32 	%f730, %f720, 0f40490FDB, %f728;
	setp.eq.b32 	%p86, %r378, 1;
	fma.rn.f32 	%f764, %f762, %f756, 0f3F800000;
	fma.rn.f32 	%f765, %f755, 0f40490FDB, %f763;
	setp.eq.b32 	%p92, %r389, 1;
	fma.rn.f32 	%f798, %f796, %f790, 0f3F800000;
	fma.rn.f32 	%f799, %f789, 0f40490FDB, %f797;
	setp.eq.b32 	%p98, %r396, 1;
	selp.f32 	%f850, %f845, %f849, %p116;
	and.b32  	%r414, %r412, 2;
	selp.f32 	%f903, %f898, %f902, %p136;
	and.b32  	%r443, %r441, 2;
	selp.f32 	%f958, %f953, %f957, %p156;
	and.b32  	%r462, %r460, 2;
	selp.f32 	%f1011, %f1006, %f1010, %p176;
	and.b32  	%r491, %r489, 2;
	fma.rn.f32 	%f1061, %f1060, %f1057, 0f3F800000;
	fma.rn.f32 	%f1065, %f1064, %f1062, %f1056;
	setp.eq.b32 	%p196, %r508, 1;
	add.f32 	%f1099, %f1386, %f1386;
	mov.b32 	%r527, %f1099;
	and.b32  	%r528, %r527, -2147483648;
	or.b32  	%r529, %r528, 1056964608;
	mov.b32 	%f1100, %r529;
	add.f32 	%f1101, %f1099, %f1100;
	cvt.rzi.f32.f32 	%f1102, %f1101;
	abs.f32 	%f1103, %f1099;
	setp.gt.f32 	%p214, %f1103, 0f4B000000;
	selp.f32 	%f1104, %f1099, %f1102, %p214;
	cvt.rzi.f32.f32 	%f1105, %f1099;
	setp.lt.f32 	%p215, %f1103, 0f3F000000;
	selp.f32 	%f1106, %f1105, %f1104, %p215;
	cvt.rzi.s32.f32 	%r530, %f1106;
	fma.rn.f32 	%f1107, %f1106, 0fBF000000, %f1386;
	mul.f32 	%f1108, %f1107, 0f34222169;
	fma.rn.f32 	%f1109, %f1107, 0f40490FDA, %f1108;
	mul.f32 	%f1110, %f1109, %f1109;
	fma.rn.f32 	%f1111, %f1110, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f1112, %f1111, %f1110, 0f3D2AAABB;
	fma.rn.f32 	%f1113, %f1112, %f1110, 0fBEFFFFFF;
	fma.rn.f32 	%f1114, %f1113, %f1110, 0f3F800000;
	fma.rn.f32 	%f1115, %f1110, %f1109, 0f00000000;
	fma.rn.f32 	%f1116, %f1110, 0fB94D4153, 0f3C0885E4;
	fma.rn.f32 	%f1117, %f1116, %f1110, 0fBE2AAAA8;
	fma.rn.f32 	%f1118, %f1117, %f1115, %f1109;
	and.b32  	%r531, %r530, 1;
	setp.eq.b32 	%p216, %r531, 1;
	and.b32  	%r535, %r21, 2;
	and.b32  	%r536, %r15, 4;
	or.b32  	%r537, %r19, %r535;
	or.b32  	%r103, %r537, %r536;
	mul.lo.s32 	%r104, %r83, %r103;
	cvt.rn.f32.s32 	%f1132, %r104;
	mov.f32 	%f1133, 0f41800000;
	div.approx.f32 	%f182, %f1132, %f1133;
	abs.f32 	%f1390, %f182;
	setp.lt.f32 	%p221, %f1390, 0f40000000;
	@%p221 bra 	LBB0_132;
// %bb.121:
	setp.gtu.f32 	%p222, %f1390, 0f4B800000;
	@%p222 bra 	LBB0_128;
	bra.uni 	LBB0_122;
LBB0_128:
	mov.b32 	%r106, %f1390;
	and.b32  	%r538, %r106, 8388607;
	or.b32  	%r16166, %r538, 1065353216;
	mov.b32 	%f1389, %r16166;
	add.s32 	%r539, %r106, -1073741824;
	and.b32  	%r16167, %r539, -8388608;
	setp.eq.s32 	%p228, %r16167, 0;
	@%p228 bra 	LBB0_131;
// %bb.129:                             // %__nv_fmaf_rn.exit4.i.i.i2459.preheader
	mov.f32 	%f1143, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1142,%f1143;
	// end inline asm
LBB0_130:                               // %__nv_fmaf_rn.exit4.i.i.i2459
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r540, %r16167, 192937984;
	add.s32 	%r541, %r540, %r16166;
	mov.b32 	%f1144, %r541;
	mul.f32 	%f1145, %f1142, %f1144;
	sub.f32 	%f1146, %f1144, %f1145;
	fma.rn.f32 	%f1147, %f1146, %f1142, %f1145;
	sub.f32 	%f1148, %f1144, %f1147;
	fma.rz.f32 	%f1149, %f1148, %f1142, %f1147;
	cvt.rzi.f32.f32 	%f1150, %f1149;
	sub.f32 	%f1389, %f1144, %f1150;
	sub.s32 	%r16167, %r16167, %r540;
	mov.b32 	%r16166, %f1389;
	setp.ne.s32 	%p229, %r16167, 0;
	setp.ne.s32 	%p230, %r16166, 0;
	and.pred  	%p231, %p229, %p230;
	@%p231 bra 	LBB0_130;
LBB0_131:                               // %__internal_fmodf_slowpath_mod.exit.i.i2461
	setp.gt.u32 	%p232, %r106, 2139095039;
	selp.f32 	%f1151, 0f7FFFFFFF, 0f4B800000, %p232;
	mul.f32 	%f1152, %f1389, 0f34000000;
	mul.f32 	%f1390, %f1151, %f1152;
	bra.uni 	LBB0_132;
LBB0_122:                               // %__nv_fast_fdividef.exit.i.i.i2431
	div.approx.f32 	%f1135, %f1390, %f255;
	cvt.rzi.f32.f32 	%f1388, %f1135;
	fma.rn.f32 	%f185, %f1388, 0fC0000000, %f1390;
	mov.b32 	%r105, %f185;
	setp.lt.u32 	%p223, %r105, 1073741824;
	@%p223 bra 	LBB0_127;
// %bb.123:
	setp.lt.u32 	%p224, %r105, -2147483647;
	@%p224 bra 	LBB0_125;
// %bb.124:
	add.f32 	%f1140, %f1388, 0fBF800000;
	setp.lt.f32 	%p227, %f185, 0fC0000000;
	add.f32 	%f1141, %f1140, 0fBF800000;
	selp.f32 	%f1388, %f1141, %f1140, %p227;
	bra.uni 	LBB0_127;
LBB0_125:
	add.f32 	%f1388, %f1388, 0f3F800000;
	setp.ltu.f32 	%p225, %f185, 0f40800000;
	@%p225 bra 	LBB0_127;
// %bb.126:                             // %__nv_fmaf_rn.exit.i.i.i2436
	add.f32 	%f1136, %f1388, 0f3F800000;
	fma.rn.f32 	%f1138, %f255, 0fC0400000, %f185;
	setp.ge.f32 	%p226, %f1138, 0f00000000;
	add.f32 	%f1139, %f1136, 0f3F800000;
	selp.f32 	%f1388, %f1139, %f1136, %p226;
LBB0_127:                               // %__internal_fmodf_fastpath_quot.exit.i.i2440
	fma.rn.f32 	%f1390, %f1388, 0fC0000000, %f1390;
LBB0_132:                               // %__internal_fmodf_kernel.exit.i2465
	and.b32  	%r7, %r6, 4;
	and.b32  	%r12, %r2, 18;
	selp.f32 	%f283, %f281, %f282, %p8;
	and.b32  	%r264, %r262, 2;
	mov.f32 	%f284, 0f00000000;
	selp.f32 	%f317, %f315, %f316, %p14;
	and.b32  	%r271, %r269, 2;
	selp.f32 	%f352, %f350, %f351, %p20;
	and.b32  	%r282, %r280, 2;
	selp.f32 	%f386, %f384, %f385, %p26;
	and.b32  	%r289, %r287, 2;
	selp.f32 	%f421, %f419, %f420, %p32;
	and.b32  	%r300, %r298, 2;
	selp.f32 	%f455, %f453, %f454, %p38;
	and.b32  	%r307, %r305, 2;
	selp.f32 	%f490, %f488, %f489, %p44;
	and.b32  	%r318, %r316, 2;
	selp.f32 	%f524, %f522, %f523, %p50;
	and.b32  	%r325, %r323, 2;
	selp.f32 	%f559, %f557, %f558, %p56;
	and.b32  	%r336, %r334, 2;
	selp.f32 	%f593, %f591, %f592, %p62;
	and.b32  	%r343, %r341, 2;
	selp.f32 	%f628, %f626, %f627, %p68;
	and.b32  	%r354, %r352, 2;
	selp.f32 	%f662, %f660, %f661, %p74;
	and.b32  	%r361, %r359, 2;
	selp.f32 	%f697, %f695, %f696, %p80;
	and.b32  	%r372, %r370, 2;
	selp.f32 	%f731, %f729, %f730, %p86;
	and.b32  	%r379, %r377, 2;
	selp.f32 	%f766, %f764, %f765, %p92;
	and.b32  	%r390, %r388, 2;
	selp.f32 	%f800, %f798, %f799, %p98;
	and.b32  	%r397, %r395, 2;
	setp.eq.s32 	%p117, %r414, 0;
	neg.f32 	%f852, %f850;
	add.s32 	%r415, %r412, 1;
	cvt.rzi.f32.f32 	%f857, %f1366;
	setp.eq.s32 	%p137, %r443, 0;
	neg.f32 	%f905, %f903;
	add.s32 	%r444, %r441, 1;
	cvt.rzi.f32.f32 	%f910, %f1370;
	setp.eq.s32 	%p157, %r462, 0;
	neg.f32 	%f960, %f958;
	add.s32 	%r463, %r460, 1;
	cvt.rzi.f32.f32 	%f965, %f1374;
	setp.eq.s32 	%p177, %r491, 0;
	neg.f32 	%f1013, %f1011;
	add.s32 	%r492, %r489, 1;
	cvt.rzi.f32.f32 	%f1018, %f1378;
	selp.f32 	%f1066, %f1061, %f1065, %p196;
	and.b32  	%r509, %r507, 2;
	selp.f32 	%f1119, %f1114, %f1118, %p216;
	and.b32  	%r532, %r530, 2;
	abs.f32 	%f1153, %f1390;
	setp.gtu.f32 	%p233, %f1153, 0f7F800000;
	@%p233 bra 	LBB0_134;
// %bb.133:
	mov.b32 	%r542, %f182;
	and.b32  	%r543, %r542, -2147483648;
	mov.b32 	%r544, %f1390;
	or.b32  	%r545, %r543, %r544;
	mov.b32 	%f1390, %r545;
LBB0_134:                               // %__nv_fmodf.exit2466
	and.b32  	%r8, %r6, 32;
	or.b32  	%r246, %r12, %r7;
	setp.eq.s32 	%p9, %r264, 0;
	sub.f32 	%f285, %f284, %f283;
	setp.eq.s32 	%p15, %r271, 0;
	sub.f32 	%f319, %f284, %f317;
	setp.eq.s32 	%p21, %r282, 0;
	sub.f32 	%f354, %f284, %f352;
	setp.eq.s32 	%p27, %r289, 0;
	sub.f32 	%f388, %f284, %f386;
	setp.eq.s32 	%p33, %r300, 0;
	sub.f32 	%f423, %f284, %f421;
	setp.eq.s32 	%p39, %r307, 0;
	sub.f32 	%f457, %f284, %f455;
	setp.eq.s32 	%p45, %r318, 0;
	sub.f32 	%f492, %f284, %f490;
	setp.eq.s32 	%p51, %r325, 0;
	sub.f32 	%f526, %f284, %f524;
	setp.eq.s32 	%p57, %r336, 0;
	sub.f32 	%f561, %f284, %f559;
	setp.eq.s32 	%p63, %r343, 0;
	sub.f32 	%f595, %f284, %f593;
	setp.eq.s32 	%p69, %r354, 0;
	sub.f32 	%f630, %f284, %f628;
	setp.eq.s32 	%p75, %r361, 0;
	sub.f32 	%f664, %f284, %f662;
	setp.eq.s32 	%p81, %r372, 0;
	sub.f32 	%f699, %f284, %f697;
	setp.eq.s32 	%p87, %r379, 0;
	sub.f32 	%f733, %f284, %f731;
	setp.eq.s32 	%p93, %r390, 0;
	sub.f32 	%f768, %f284, %f766;
	setp.eq.s32 	%p99, %r397, 0;
	sub.f32 	%f802, %f284, %f800;
	selp.f32 	%f851, %f849, %f845, %p116;
	selp.f32 	%f853, %f850, %f852, %p117;
	and.b32  	%r416, %r415, 2;
	setp.eq.f32 	%p119, %f857, %f1366;
	mul.f32 	%f858, %f1366, 0f00000000;
	selp.f32 	%f904, %f902, %f898, %p136;
	selp.f32 	%f906, %f903, %f905, %p137;
	and.b32  	%r445, %r444, 2;
	setp.eq.f32 	%p139, %f910, %f1370;
	mul.f32 	%f911, %f1370, 0f00000000;
	selp.f32 	%f959, %f957, %f953, %p156;
	selp.f32 	%f961, %f958, %f960, %p157;
	and.b32  	%r464, %r463, 2;
	setp.eq.f32 	%p159, %f965, %f1374;
	mul.f32 	%f966, %f1374, 0f00000000;
	selp.f32 	%f1012, %f1010, %f1006, %p176;
	selp.f32 	%f1014, %f1011, %f1013, %p177;
	and.b32  	%r493, %r492, 2;
	setp.eq.f32 	%p179, %f1018, %f1378;
	mul.f32 	%f1019, %f1378, 0f00000000;
	setp.eq.s32 	%p197, %r509, 0;
	neg.f32 	%f1068, %f1066;
	add.s32 	%r510, %r507, 1;
	cvt.rzi.f32.f32 	%f1073, %f1382;
	setp.eq.s32 	%p217, %r532, 0;
	neg.f32 	%f1121, %f1119;
	add.s32 	%r533, %r530, 1;
	cvt.rzi.f32.f32 	%f1126, %f1386;
	add.f32 	%f1154, %f1390, %f1390;
	mov.b32 	%r546, %f1154;
	and.b32  	%r547, %r546, -2147483648;
	or.b32  	%r548, %r547, 1056964608;
	mov.b32 	%f1155, %r548;
	add.f32 	%f1156, %f1154, %f1155;
	cvt.rzi.f32.f32 	%f1157, %f1156;
	abs.f32 	%f1158, %f1154;
	setp.gt.f32 	%p234, %f1158, 0f4B000000;
	selp.f32 	%f1159, %f1154, %f1157, %p234;
	cvt.rzi.f32.f32 	%f1160, %f1154;
	setp.lt.f32 	%p235, %f1158, 0f3F000000;
	selp.f32 	%f1161, %f1160, %f1159, %p235;
	cvt.rzi.s32.f32 	%r549, %f1161;
	fma.rn.f32 	%f1162, %f1161, 0fBF000000, %f1390;
	mul.f32 	%f1163, %f1162, 0f34222169;
	fma.rn.f32 	%f1164, %f1162, 0f40490FDA, %f1163;
	mul.f32 	%f1165, %f1164, %f1164;
	fma.rn.f32 	%f1166, %f1165, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f1167, %f1166, %f1165, 0f3D2AAABB;
	fma.rn.f32 	%f1168, %f1167, %f1165, 0fBEFFFFFF;
	fma.rn.f32 	%f1169, %f1168, %f1165, 0f3F800000;
	fma.rn.f32 	%f1170, %f1165, %f1164, 0f00000000;
	fma.rn.f32 	%f1171, %f1165, 0fB94D4153, 0f3C0885E4;
	fma.rn.f32 	%f1172, %f1171, %f1165, 0fBE2AAAA8;
	fma.rn.f32 	%f1173, %f1172, %f1170, %f1164;
	and.b32  	%r550, %r549, 1;
	setp.eq.b32 	%p236, %r550, 1;
	selp.f32 	%f1174, %f1169, %f1173, %p236;
	selp.f32 	%f1175, %f1173, %f1169, %p236;
	and.b32  	%r551, %r549, 2;
	setp.eq.s32 	%p237, %r551, 0;
	neg.f32 	%f1176, %f1174;
	selp.f32 	%f1177, %f1174, %f1176, %p237;
	add.s32 	%r552, %r549, 1;
	and.b32  	%r553, %r552, 2;
	cvt.rzi.f32.f32 	%f1181, %f1390;
	setp.eq.f32 	%p239, %f1181, %f1390;
	mul.f32 	%f1182, %f1390, 0f00000000;
	shl.b32 	%r554, %r103, 3;
	sub.s32 	%r555, %r104, %r554;
	cvt.rn.f32.s32 	%f1185, %r555;
	div.approx.f32 	%f201, %f1185, %f1133;
	abs.f32 	%f1394, %f201;
	setp.lt.f32 	%p241, %f1394, 0f40000000;
	@%p241 bra 	LBB0_146;
// %bb.135:
	setp.gtu.f32 	%p242, %f1394, 0f4B800000;
	@%p242 bra 	LBB0_142;
	bra.uni 	LBB0_136;
LBB0_142:
	mov.b32 	%r114, %f1394;
	and.b32  	%r556, %r114, 8388607;
	or.b32  	%r16168, %r556, 1065353216;
	mov.b32 	%f1393, %r16168;
	add.s32 	%r557, %r114, -1073741824;
	and.b32  	%r16169, %r557, -8388608;
	setp.eq.s32 	%p248, %r16169, 0;
	@%p248 bra 	LBB0_145;
// %bb.143:                             // %__nv_fmaf_rn.exit4.i.i.i2505.preheader
	mov.f32 	%f1196, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1195,%f1196;
	// end inline asm
LBB0_144:                               // %__nv_fmaf_rn.exit4.i.i.i2505
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r558, %r16169, 192937984;
	add.s32 	%r559, %r558, %r16168;
	mov.b32 	%f1197, %r559;
	mul.f32 	%f1198, %f1195, %f1197;
	sub.f32 	%f1199, %f1197, %f1198;
	fma.rn.f32 	%f1200, %f1199, %f1195, %f1198;
	sub.f32 	%f1201, %f1197, %f1200;
	fma.rz.f32 	%f1202, %f1201, %f1195, %f1200;
	cvt.rzi.f32.f32 	%f1203, %f1202;
	sub.f32 	%f1393, %f1197, %f1203;
	sub.s32 	%r16169, %r16169, %r558;
	mov.b32 	%r16168, %f1393;
	setp.ne.s32 	%p249, %r16169, 0;
	setp.ne.s32 	%p250, %r16168, 0;
	and.pred  	%p251, %p249, %p250;
	@%p251 bra 	LBB0_144;
LBB0_145:                               // %__internal_fmodf_slowpath_mod.exit.i.i2507
	setp.gt.u32 	%p252, %r114, 2139095039;
	selp.f32 	%f1204, 0f7FFFFFFF, 0f4B800000, %p252;
	mul.f32 	%f1205, %f1393, 0f34000000;
	mul.f32 	%f1394, %f1204, %f1205;
	bra.uni 	LBB0_146;
LBB0_136:                               // %__nv_fast_fdividef.exit.i.i.i2477
	div.approx.f32 	%f1188, %f1394, %f255;
	cvt.rzi.f32.f32 	%f1392, %f1188;
	fma.rn.f32 	%f204, %f1392, 0fC0000000, %f1394;
	mov.b32 	%r113, %f204;
	setp.lt.u32 	%p243, %r113, 1073741824;
	@%p243 bra 	LBB0_141;
// %bb.137:
	setp.lt.u32 	%p244, %r113, -2147483647;
	@%p244 bra 	LBB0_139;
// %bb.138:
	add.f32 	%f1193, %f1392, 0fBF800000;
	setp.lt.f32 	%p247, %f204, 0fC0000000;
	add.f32 	%f1194, %f1193, 0fBF800000;
	selp.f32 	%f1392, %f1194, %f1193, %p247;
	bra.uni 	LBB0_141;
LBB0_139:
	add.f32 	%f1392, %f1392, 0f3F800000;
	setp.ltu.f32 	%p245, %f204, 0f40800000;
	@%p245 bra 	LBB0_141;
// %bb.140:                             // %__nv_fmaf_rn.exit.i.i.i2482
	add.f32 	%f1189, %f1392, 0f3F800000;
	fma.rn.f32 	%f1191, %f255, 0fC0400000, %f204;
	setp.ge.f32 	%p246, %f1191, 0f00000000;
	add.f32 	%f1192, %f1189, 0f3F800000;
	selp.f32 	%f1392, %f1192, %f1189, %p246;
LBB0_141:                               // %__internal_fmodf_fastpath_quot.exit.i.i2486
	fma.rn.f32 	%f1394, %f1392, 0fC0000000, %f1394;
LBB0_146:                               // %__internal_fmodf_kernel.exit.i2511
	and.b32  	%r10, %r9, 8;
	or.b32  	%r247, %r246, %r8;
	selp.f32 	%f286, %f283, %f285, %p9;
	selp.f32 	%f320, %f317, %f319, %p15;
	selp.f32 	%f355, %f352, %f354, %p21;
	selp.f32 	%f389, %f386, %f388, %p27;
	selp.f32 	%f424, %f421, %f423, %p33;
	selp.f32 	%f458, %f455, %f457, %p39;
	selp.f32 	%f493, %f490, %f492, %p45;
	selp.f32 	%f527, %f524, %f526, %p51;
	selp.f32 	%f562, %f559, %f561, %p57;
	selp.f32 	%f596, %f593, %f595, %p63;
	selp.f32 	%f631, %f628, %f630, %p69;
	selp.f32 	%f665, %f662, %f664, %p75;
	selp.f32 	%f700, %f697, %f699, %p81;
	selp.f32 	%f734, %f731, %f733, %p87;
	selp.f32 	%f769, %f766, %f768, %p93;
	selp.f32 	%f803, %f800, %f802, %p99;
	setp.eq.s32 	%p118, %r416, 0;
	sub.f32 	%f855, %f284, %f851;
	selp.f32 	%f91, %f858, %f853, %p119;
	abs.f32 	%f859, %f1366;
	setp.eq.s32 	%p138, %r445, 0;
	sub.f32 	%f908, %f284, %f904;
	selp.f32 	%f912, %f911, %f906, %p139;
	abs.f32 	%f913, %f1370;
	setp.eq.s32 	%p158, %r464, 0;
	sub.f32 	%f963, %f284, %f959;
	selp.f32 	%f127, %f966, %f961, %p159;
	abs.f32 	%f967, %f1374;
	setp.eq.s32 	%p178, %r493, 0;
	sub.f32 	%f1016, %f284, %f1012;
	selp.f32 	%f1020, %f1019, %f1014, %p179;
	abs.f32 	%f1021, %f1378;
	selp.f32 	%f1067, %f1065, %f1061, %p196;
	selp.f32 	%f1069, %f1066, %f1068, %p197;
	and.b32  	%r511, %r510, 2;
	setp.eq.f32 	%p199, %f1073, %f1382;
	mul.f32 	%f1074, %f1382, 0f00000000;
	selp.f32 	%f1120, %f1118, %f1114, %p216;
	selp.f32 	%f1122, %f1119, %f1121, %p217;
	and.b32  	%r534, %r533, 2;
	setp.eq.f32 	%p219, %f1126, %f1386;
	mul.f32 	%f1127, %f1386, 0f00000000;
	setp.eq.s32 	%p238, %r553, 0;
	sub.f32 	%f1179, %f284, %f1175;
	selp.f32 	%f199, %f1182, %f1177, %p239;
	abs.f32 	%f1183, %f1390;
	and.b32  	%r11, %r2, 16;
	abs.f32 	%f1206, %f1394;
	setp.gtu.f32 	%p253, %f1206, 0f7F800000;
	@%p253 bra 	LBB0_148;
// %bb.147:
	mov.b32 	%r560, %f201;
	and.b32  	%r561, %r560, -2147483648;
	mov.b32 	%r562, %f1394;
	or.b32  	%r563, %r561, %r562;
	mov.b32 	%f1394, %r563;
LBB0_148:                               // %__nv_fmodf.exit2512
	or.b32  	%r248, %r247, %r10;
	mul.f32 	%f2, %f286, %f286;
	mul.f32 	%f7, %f320, %f320;
	mul.f32 	%f11, %f355, %f355;
	mul.f32 	%f16, %f389, %f389;
	mul.f32 	%f20, %f424, %f424;
	mul.f32 	%f25, %f458, %f458;
	mul.f32 	%f29, %f493, %f493;
	mul.f32 	%f34, %f527, %f527;
	mul.f32 	%f38, %f562, %f562;
	mul.f32 	%f43, %f596, %f596;
	mul.f32 	%f47, %f631, %f631;
	mul.f32 	%f52, %f665, %f665;
	mul.f32 	%f56, %f700, %f700;
	mul.f32 	%f61, %f734, %f734;
	mul.f32 	%f65, %f769, %f769;
	mul.f32 	%f70, %f803, %f803;
	selp.f32 	%f856, %f851, %f855, %p118;
	setp.gt.f32 	%p120, %f859, 0f4B800000;
	add.f32 	%f860, %f91, 0f3F800000;
	selp.f32 	%f909, %f904, %f908, %p138;
	setp.gt.f32 	%p140, %f913, 0f4B800000;
	add.f32 	%f914, %f912, 0f3F800000;
	selp.f32 	%f964, %f959, %f963, %p158;
	setp.gt.f32 	%p160, %f967, 0f4B800000;
	add.f32 	%f968, %f127, 0f3F800000;
	selp.f32 	%f1017, %f1012, %f1016, %p178;
	setp.gt.f32 	%p180, %f1021, 0f4B800000;
	add.f32 	%f1022, %f1020, 0f3F800000;
	setp.eq.s32 	%p198, %r511, 0;
	sub.f32 	%f1071, %f284, %f1067;
	selp.f32 	%f163, %f1074, %f1069, %p199;
	abs.f32 	%f1075, %f1382;
	setp.eq.s32 	%p218, %r534, 0;
	sub.f32 	%f1124, %f284, %f1120;
	selp.f32 	%f1128, %f1127, %f1122, %p219;
	abs.f32 	%f1129, %f1386;
	selp.f32 	%f1180, %f1175, %f1179, %p238;
	setp.gt.f32 	%p240, %f1183, 0f4B800000;
	add.f32 	%f1184, %f199, 0f3F800000;
	add.f32 	%f1207, %f1394, %f1394;
	mov.b32 	%r576, %f1207;
	and.b32  	%r577, %r576, -2147483648;
	or.b32  	%r578, %r577, 1056964608;
	mov.b32 	%f1208, %r578;
	add.f32 	%f1209, %f1207, %f1208;
	cvt.rzi.f32.f32 	%f1210, %f1209;
	abs.f32 	%f1211, %f1207;
	setp.gt.f32 	%p254, %f1211, 0f4B000000;
	selp.f32 	%f1212, %f1207, %f1210, %p254;
	cvt.rzi.f32.f32 	%f1213, %f1207;
	setp.lt.f32 	%p255, %f1211, 0f3F000000;
	selp.f32 	%f1214, %f1213, %f1212, %p255;
	cvt.rzi.s32.f32 	%r579, %f1214;
	fma.rn.f32 	%f1215, %f1214, 0fBF000000, %f1394;
	mul.f32 	%f1216, %f1215, 0f34222169;
	fma.rn.f32 	%f1217, %f1215, 0f40490FDA, %f1216;
	mul.f32 	%f1218, %f1217, %f1217;
	fma.rn.f32 	%f1219, %f1218, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f1220, %f1219, %f1218, 0f3D2AAABB;
	fma.rn.f32 	%f1221, %f1220, %f1218, 0fBEFFFFFF;
	fma.rn.f32 	%f1222, %f1221, %f1218, 0f3F800000;
	fma.rn.f32 	%f1223, %f1218, %f1217, 0f00000000;
	fma.rn.f32 	%f1224, %f1218, 0fB94D4153, 0f3C0885E4;
	fma.rn.f32 	%f1225, %f1224, %f1218, 0fBE2AAAA8;
	fma.rn.f32 	%f1226, %f1225, %f1223, %f1217;
	and.b32  	%r580, %r579, 1;
	setp.eq.b32 	%p256, %r580, 1;
	selp.f32 	%f1227, %f1222, %f1226, %p256;
	selp.f32 	%f1228, %f1226, %f1222, %p256;
	and.b32  	%r581, %r579, 2;
	setp.eq.s32 	%p257, %r581, 0;
	neg.f32 	%f1229, %f1227;
	selp.f32 	%f1230, %f1227, %f1229, %p257;
	add.s32 	%r582, %r579, 1;
	and.b32  	%r583, %r582, 2;
	setp.eq.s32 	%p258, %r583, 0;
	sub.f32 	%f1232, %f284, %f1228;
	selp.f32 	%f1233, %f1228, %f1232, %p258;
	cvt.rzi.f32.f32 	%f1234, %f1394;
	setp.eq.f32 	%p259, %f1234, %f1394;
	mul.f32 	%f1235, %f1394, 0f00000000;
	selp.f32 	%f1236, %f1235, %f1230, %p259;
	abs.f32 	%f1237, %f1394;
	setp.gt.f32 	%p260, %f1237, 0f4B800000;
	add.f32 	%f1238, %f1236, 0f3F800000;
	cvt.u16.u32 	%rs1, %r2;
	shr.u16 	%rs2, %rs1, 8;
	shl.b16 	%rs3, %rs1, 8;
	or.b16  	%rs4, %rs3, %rs2;
	shl.b16 	%rs5, %rs4, 4;
	shr.u16 	%rs6, %rs4, 4;
	and.b16  	%rs7, %rs6, 3840;
	or.b16  	%rs8, %rs7, %rs5;
	and.b16  	%rs9, %rs8, 13107;
	shl.b16 	%rs10, %rs9, 2;
	shr.u16 	%rs11, %rs8, 2;
	and.b16  	%rs12, %rs11, 13107;
	or.b16  	%rs13, %rs12, %rs10;
	and.b16  	%rs14, %rs13, 20480;
	shl.b16 	%rs15, %rs14, 1;
	shr.u16 	%rs16, %rs13, 1;
	and.b16  	%rs17, %rs16, 16384;
	or.b16  	%rs18, %rs17, %rs15;
	shr.u16 	%rs19, %rs18, 13;
	add.s32 	%r585, %r251, %r11;
	neg.s32 	%r586, %r585;
	mad.lo.s32 	%r587, %r22, -32, %r586;
	or.b16  	%rs20, %rs19, 1;
	cvt.u32.u16 	%r588, %rs20;
	and.b16  	%rs21, %rs19, 6;
	cvt.u32.u16 	%r589, %rs21;
	sub.s32 	%r590, %r587, %r589;
	shl.b32 	%r591, %r590, 1;
	cvt.rn.f32.s32 	%f1240, %r591;
	div.approx.f32 	%f218, %f1240, %f287;
	abs.f32 	%f1398, %f218;
	setp.lt.f32 	%p261, %f1398, 0f40000000;
	@%p261 bra 	LBB0_160;
// %bb.149:
	setp.gtu.f32 	%p262, %f1398, 0f4B800000;
	@%p262 bra 	LBB0_156;
	bra.uni 	LBB0_150;
LBB0_156:
	mov.b32 	%r127, %f1398;
	and.b32  	%r592, %r127, 8388607;
	or.b32  	%r16170, %r592, 1065353216;
	mov.b32 	%f1397, %r16170;
	add.s32 	%r593, %r127, -1073741824;
	and.b32  	%r16171, %r593, -8388608;
	setp.eq.s32 	%p268, %r16171, 0;
	@%p268 bra 	LBB0_159;
// %bb.157:                             // %__nv_fmaf_rn.exit4.i.i.i2551.preheader
	mov.f32 	%f1251, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1250,%f1251;
	// end inline asm
LBB0_158:                               // %__nv_fmaf_rn.exit4.i.i.i2551
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r594, %r16171, 192937984;
	add.s32 	%r595, %r594, %r16170;
	mov.b32 	%f1252, %r595;
	mul.f32 	%f1253, %f1250, %f1252;
	sub.f32 	%f1254, %f1252, %f1253;
	fma.rn.f32 	%f1255, %f1254, %f1250, %f1253;
	sub.f32 	%f1256, %f1252, %f1255;
	fma.rz.f32 	%f1257, %f1256, %f1250, %f1255;
	cvt.rzi.f32.f32 	%f1258, %f1257;
	sub.f32 	%f1397, %f1252, %f1258;
	sub.s32 	%r16171, %r16171, %r594;
	mov.b32 	%r16170, %f1397;
	setp.ne.s32 	%p269, %r16171, 0;
	setp.ne.s32 	%p270, %r16170, 0;
	and.pred  	%p271, %p269, %p270;
	@%p271 bra 	LBB0_158;
LBB0_159:                               // %__internal_fmodf_slowpath_mod.exit.i.i2553
	setp.gt.u32 	%p272, %r127, 2139095039;
	selp.f32 	%f1259, 0f7FFFFFFF, 0f4B800000, %p272;
	mul.f32 	%f1260, %f1397, 0f34000000;
	mul.f32 	%f1398, %f1259, %f1260;
	bra.uni 	LBB0_160;
LBB0_150:                               // %__nv_fast_fdividef.exit.i.i.i2523
	div.approx.f32 	%f1243, %f1398, %f255;
	cvt.rzi.f32.f32 	%f1396, %f1243;
	fma.rn.f32 	%f221, %f1396, 0fC0000000, %f1398;
	mov.b32 	%r126, %f221;
	setp.lt.u32 	%p263, %r126, 1073741824;
	@%p263 bra 	LBB0_155;
// %bb.151:
	setp.lt.u32 	%p264, %r126, -2147483647;
	@%p264 bra 	LBB0_153;
// %bb.152:
	add.f32 	%f1248, %f1396, 0fBF800000;
	setp.lt.f32 	%p267, %f221, 0fC0000000;
	add.f32 	%f1249, %f1248, 0fBF800000;
	selp.f32 	%f1396, %f1249, %f1248, %p267;
	bra.uni 	LBB0_155;
LBB0_153:
	add.f32 	%f1396, %f1396, 0f3F800000;
	setp.ltu.f32 	%p265, %f221, 0f40800000;
	@%p265 bra 	LBB0_155;
// %bb.154:                             // %__nv_fmaf_rn.exit.i.i.i2528
	add.f32 	%f1244, %f1396, 0f3F800000;
	fma.rn.f32 	%f1246, %f255, 0fC0400000, %f221;
	setp.ge.f32 	%p266, %f1246, 0f00000000;
	add.f32 	%f1247, %f1244, 0f3F800000;
	selp.f32 	%f1396, %f1247, %f1244, %p266;
LBB0_155:                               // %__internal_fmodf_fastpath_quot.exit.i.i2532
	fma.rn.f32 	%f1398, %f1396, 0fC0000000, %f1398;
LBB0_160:                               // %__internal_fmodf_kernel.exit.i2557
	shr.u32 	%r249, %r248, 1;
	mul.f32 	%f290, %f2, 0f3B8B2FF9;
	mul.f32 	%f324, %f7, 0f3B8B2FF9;
	mul.f32 	%f359, %f11, 0f3B8B2FF9;
	mul.f32 	%f393, %f16, 0f3B8B2FF9;
	mul.f32 	%f428, %f20, 0f3B8B2FF9;
	mul.f32 	%f462, %f25, 0f3B8B2FF9;
	mul.f32 	%f497, %f29, 0f3B8B2FF9;
	mul.f32 	%f531, %f34, 0f3B8B2FF9;
	mul.f32 	%f566, %f38, 0f3B8B2FF9;
	mul.f32 	%f600, %f43, 0f3B8B2FF9;
	mul.f32 	%f635, %f47, 0f3B8B2FF9;
	mul.f32 	%f669, %f52, 0f3B8B2FF9;
	mul.f32 	%f704, %f56, 0f3B8B2FF9;
	mul.f32 	%f738, %f61, 0f3B8B2FF9;
	mul.f32 	%f773, %f65, 0f3B8B2FF9;
	mul.f32 	%f806, %f70, 0f3B8B2FF9;
	selp.f32 	%f92, %f860, %f856, %p120;
	selp.f32 	%f915, %f914, %f909, %p140;
	selp.f32 	%f128, %f968, %f964, %p160;
	selp.f32 	%f1023, %f1022, %f1017, %p180;
	selp.f32 	%f1072, %f1067, %f1071, %p198;
	setp.gt.f32 	%p200, %f1075, 0f4B800000;
	add.f32 	%f1076, %f163, 0f3F800000;
	selp.f32 	%f1125, %f1120, %f1124, %p218;
	setp.gt.f32 	%p220, %f1129, 0f4B800000;
	add.f32 	%f1130, %f1128, 0f3F800000;
	selp.f32 	%f200, %f1184, %f1180, %p240;
	selp.f32 	%f1239, %f1238, %f1233, %p260;
	sub.s32 	%r125, %r587, %r588;
	abs.f32 	%f1261, %f1398;
	setp.gtu.f32 	%p273, %f1261, 0f7F800000;
	@%p273 bra 	LBB0_162;
// %bb.161:
	mov.b32 	%r596, %f218;
	and.b32  	%r597, %r596, -2147483648;
	mov.b32 	%r598, %f1398;
	or.b32  	%r599, %r597, %r598;
	mov.b32 	%f1398, %r599;
LBB0_162:                               // %__nv_fmodf.exit2558
	ld.param.u64 	%rd1, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_2];
	mul.wide.u32 	%rd49, %r249, 4;
	mul.f32 	%f6, %f290, %f1348;
	mul.f32 	%f325, %f324, %f1349;
	mul.f32 	%f15, %f359, %f1350;
	mul.f32 	%f394, %f393, %f1351;
	mul.f32 	%f24, %f428, %f1352;
	mul.f32 	%f463, %f462, %f1353;
	mul.f32 	%f33, %f497, %f1354;
	mul.f32 	%f532, %f531, %f1355;
	mul.f32 	%f42, %f566, %f1356;
	mul.f32 	%f601, %f600, %f1357;
	mul.f32 	%f51, %f635, %f1358;
	mul.f32 	%f670, %f669, %f1359;
	mul.f32 	%f60, %f704, %f1360;
	mul.f32 	%f739, %f738, %f1361;
	mul.f32 	%f69, %f773, %f1362;
	mul.f32 	%f807, %f806, %f1363;
	mov.b32 	%r428, %f915;
	mov.b32 	%r427, %f92;
	mov.b32 	%r434, %f912;
	mov.b32 	%r433, %f91;
	mov.b32 	%r476, %f1023;
	mov.b32 	%r475, %f128;
	mov.b32 	%r482, %f1020;
	mov.b32 	%r481, %f127;
	selp.f32 	%f164, %f1076, %f1072, %p200;
	selp.f32 	%f1131, %f1130, %f1125, %p220;
	mov.b32 	%r566, %f1239;
	mov.b32 	%r565, %f200;
	mov.b32 	%r572, %f1236;
	mov.b32 	%r571, %f199;
	add.f32 	%f1262, %f1398, %f1398;
	mov.b32 	%r600, %f1262;
	and.b32  	%r601, %r600, -2147483648;
	or.b32  	%r602, %r601, 1056964608;
	mov.b32 	%f1263, %r602;
	add.f32 	%f1264, %f1262, %f1263;
	cvt.rzi.f32.f32 	%f1265, %f1264;
	abs.f32 	%f1266, %f1262;
	setp.gt.f32 	%p274, %f1266, 0f4B000000;
	selp.f32 	%f1267, %f1262, %f1265, %p274;
	cvt.rzi.f32.f32 	%f1268, %f1262;
	setp.lt.f32 	%p275, %f1266, 0f3F000000;
	selp.f32 	%f1269, %f1268, %f1267, %p275;
	cvt.rzi.s32.f32 	%r603, %f1269;
	fma.rn.f32 	%f1270, %f1269, 0fBF000000, %f1398;
	mul.f32 	%f1271, %f1270, 0f34222169;
	fma.rn.f32 	%f1272, %f1270, 0f40490FDA, %f1271;
	mul.f32 	%f1273, %f1272, %f1272;
	fma.rn.f32 	%f1274, %f1273, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f1275, %f1274, %f1273, 0f3D2AAABB;
	fma.rn.f32 	%f1276, %f1275, %f1273, 0fBEFFFFFF;
	fma.rn.f32 	%f1277, %f1276, %f1273, 0f3F800000;
	fma.rn.f32 	%f1278, %f1273, %f1272, 0f00000000;
	fma.rn.f32 	%f1279, %f1273, 0fB94D4153, 0f3C0885E4;
	fma.rn.f32 	%f1280, %f1279, %f1273, 0fBE2AAAA8;
	fma.rn.f32 	%f1281, %f1280, %f1278, %f1272;
	and.b32  	%r604, %r603, 1;
	setp.eq.b32 	%p276, %r604, 1;
	selp.f32 	%f1282, %f1277, %f1281, %p276;
	selp.f32 	%f1283, %f1281, %f1277, %p276;
	and.b32  	%r605, %r603, 2;
	setp.eq.s32 	%p277, %r605, 0;
	neg.f32 	%f1284, %f1282;
	selp.f32 	%f1285, %f1282, %f1284, %p277;
	add.s32 	%r606, %r603, 1;
	and.b32  	%r607, %r606, 2;
	setp.eq.s32 	%p278, %r607, 0;
	sub.f32 	%f1287, %f284, %f1283;
	selp.f32 	%f1288, %f1283, %f1287, %p278;
	cvt.rzi.f32.f32 	%f1289, %f1398;
	setp.eq.f32 	%p279, %f1289, %f1398;
	mul.f32 	%f1290, %f1398, 0f00000000;
	selp.f32 	%f235, %f1290, %f1285, %p279;
	abs.f32 	%f1291, %f1398;
	setp.gt.f32 	%p280, %f1291, 0f4B800000;
	add.f32 	%f1292, %f235, 0f3F800000;
	shl.b32 	%r608, %r125, 1;
	cvt.rn.f32.s32 	%f1293, %r608;
	div.approx.f32 	%f237, %f1293, %f287;
	abs.f32 	%f1402, %f237;
	setp.lt.f32 	%p281, %f1402, 0f40000000;
	@%p281 bra 	LBB0_174;
// %bb.163:
	setp.gtu.f32 	%p282, %f1402, 0f4B800000;
	@%p282 bra 	LBB0_170;
	bra.uni 	LBB0_164;
LBB0_170:
	mov.b32 	%r135, %f1402;
	and.b32  	%r609, %r135, 8388607;
	or.b32  	%r16172, %r609, 1065353216;
	mov.b32 	%f1401, %r16172;
	add.s32 	%r610, %r135, -1073741824;
	and.b32  	%r16173, %r610, -8388608;
	setp.eq.s32 	%p288, %r16173, 0;
	@%p288 bra 	LBB0_173;
// %bb.171:                             // %__nv_fmaf_rn.exit4.i.i.i2597.preheader
	mov.f32 	%f1304, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1303,%f1304;
	// end inline asm
LBB0_172:                               // %__nv_fmaf_rn.exit4.i.i.i2597
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r611, %r16173, 192937984;
	add.s32 	%r612, %r611, %r16172;
	mov.b32 	%f1305, %r612;
	mul.f32 	%f1306, %f1303, %f1305;
	sub.f32 	%f1307, %f1305, %f1306;
	fma.rn.f32 	%f1308, %f1307, %f1303, %f1306;
	sub.f32 	%f1309, %f1305, %f1308;
	fma.rz.f32 	%f1310, %f1309, %f1303, %f1308;
	cvt.rzi.f32.f32 	%f1311, %f1310;
	sub.f32 	%f1401, %f1305, %f1311;
	sub.s32 	%r16173, %r16173, %r611;
	mov.b32 	%r16172, %f1401;
	setp.ne.s32 	%p289, %r16173, 0;
	setp.ne.s32 	%p290, %r16172, 0;
	and.pred  	%p291, %p289, %p290;
	@%p291 bra 	LBB0_172;
LBB0_173:                               // %__internal_fmodf_slowpath_mod.exit.i.i2599
	setp.gt.u32 	%p292, %r135, 2139095039;
	selp.f32 	%f1312, 0f7FFFFFFF, 0f4B800000, %p292;
	mul.f32 	%f1313, %f1401, 0f34000000;
	mul.f32 	%f1402, %f1312, %f1313;
	bra.uni 	LBB0_174;
LBB0_164:                               // %__nv_fast_fdividef.exit.i.i.i2569
	div.approx.f32 	%f1296, %f1402, %f255;
	cvt.rzi.f32.f32 	%f1400, %f1296;
	fma.rn.f32 	%f240, %f1400, 0fC0000000, %f1402;
	mov.b32 	%r134, %f240;
	setp.lt.u32 	%p283, %r134, 1073741824;
	@%p283 bra 	LBB0_169;
// %bb.165:
	setp.lt.u32 	%p284, %r134, -2147483647;
	@%p284 bra 	LBB0_167;
// %bb.166:
	add.f32 	%f1301, %f1400, 0fBF800000;
	setp.lt.f32 	%p287, %f240, 0fC0000000;
	add.f32 	%f1302, %f1301, 0fBF800000;
	selp.f32 	%f1400, %f1302, %f1301, %p287;
	bra.uni 	LBB0_169;
LBB0_167:
	add.f32 	%f1400, %f1400, 0f3F800000;
	setp.ltu.f32 	%p285, %f240, 0f40800000;
	@%p285 bra 	LBB0_169;
// %bb.168:                             // %__nv_fmaf_rn.exit.i.i.i2574
	add.f32 	%f1297, %f1400, 0f3F800000;
	fma.rn.f32 	%f1299, %f255, 0fC0400000, %f240;
	setp.ge.f32 	%p286, %f1299, 0f00000000;
	add.f32 	%f1300, %f1297, 0f3F800000;
	selp.f32 	%f1400, %f1300, %f1297, %p286;
LBB0_169:                               // %__internal_fmodf_fastpath_quot.exit.i.i2578
	fma.rn.f32 	%f1402, %f1400, 0fC0000000, %f1402;
LBB0_174:                               // %__internal_fmodf_kernel.exit.i2603
	add.s64 	%rd50, %rd1, %rd49;
	mov.b32 	%r274, %f325;
	mov.b32 	%r273, %f6;
	mov.b32 	%r292, %f394;
	mov.b32 	%r291, %f15;
	mov.b32 	%r310, %f463;
	mov.b32 	%r309, %f24;
	mov.b32 	%r328, %f532;
	mov.b32 	%r327, %f33;
	mov.b32 	%r346, %f601;
	mov.b32 	%r345, %f42;
	mov.b32 	%r364, %f670;
	mov.b32 	%r363, %f51;
	mov.b32 	%r382, %f739;
	mov.b32 	%r381, %f60;
	mov.b32 	%r400, %f807;
	mov.b32 	%r399, %f69;
	xor.b32  	%r479, %r482, -2147483648;
	xor.b32  	%r478, %r481, -2147483648;
	mov.b32 	%r523, %f1131;
	mov.b32 	%r522, %f164;
	mov.b32 	%r526, %f1128;
	mov.b32 	%r525, %f163;
	xor.b32  	%r569, %r572, -2147483648;
	xor.b32  	%r568, %r571, -2147483648;
	selp.f32 	%f236, %f1292, %f1288, %p280;
	abs.f32 	%f1314, %f1402;
	setp.gtu.f32 	%p293, %f1314, 0f7F800000;
	@%p293 bra 	LBB0_176;
// %bb.175:
	mov.b32 	%r613, %f237;
	and.b32  	%r614, %r613, -2147483648;
	mov.b32 	%r615, %f1402;
	or.b32  	%r616, %r614, %r615;
	mov.b32 	%f1402, %r616;
LBB0_176:                               // %__nv_fmodf.exit2604
	ld.param.u64 	%rd2, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_3];
	ld.param.u64 	%rd3, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_4];
	ld.global.u32 	%r13, [%rd50];
	ld.global.u32 	%r14, [%rd50+128];
	// begin inline asm
	cvt.rn.f16x2.f32 %r272, %r274, %r273;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r290, %r292, %r291;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r308, %r310, %r309;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r326, %r328, %r327;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r344, %r346, %r345;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r362, %r364, %r363;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r380, %r382, %r381;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r398, %r400, %r399;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r426, %r428, %r427;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r429, %r428, %r427;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r432, %r434, %r433;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r435, %r434, %r433;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r474, %r476, %r475;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r477, %r479, %r478;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r480, %r482, %r481;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r483, %r476, %r475;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r521, %r523, %r522;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r524, %r526, %r525;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r564, %r566, %r565;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r567, %r569, %r568;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r570, %r572, %r571;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r573, %r566, %r565;
	// end inline asm
	add.f32 	%f1315, %f1402, %f1402;
	mov.b32 	%r624, %f1315;
	and.b32  	%r625, %r624, -2147483648;
	or.b32  	%r626, %r625, 1056964608;
	mov.b32 	%f1316, %r626;
	add.f32 	%f1317, %f1315, %f1316;
	cvt.rzi.f32.f32 	%f1318, %f1317;
	abs.f32 	%f1319, %f1315;
	setp.gt.f32 	%p294, %f1319, 0f4B000000;
	selp.f32 	%f1320, %f1315, %f1318, %p294;
	cvt.rzi.f32.f32 	%f1321, %f1315;
	setp.lt.f32 	%p295, %f1319, 0f3F000000;
	selp.f32 	%f1322, %f1321, %f1320, %p295;
	cvt.rzi.s32.f32 	%r627, %f1322;
	fma.rn.f32 	%f1323, %f1322, 0fBF000000, %f1402;
	mul.f32 	%f1324, %f1323, 0f34222169;
	fma.rn.f32 	%f1325, %f1323, 0f40490FDA, %f1324;
	mul.f32 	%f1326, %f1325, %f1325;
	fma.rn.f32 	%f1327, %f1326, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f1328, %f1327, %f1326, 0f3D2AAABB;
	fma.rn.f32 	%f1329, %f1328, %f1326, 0fBEFFFFFF;
	fma.rn.f32 	%f1330, %f1329, %f1326, 0f3F800000;
	fma.rn.f32 	%f1331, %f1326, %f1325, 0f00000000;
	fma.rn.f32 	%f1332, %f1326, 0fB94D4153, 0f3C0885E4;
	fma.rn.f32 	%f1333, %f1332, %f1326, 0fBE2AAAA8;
	fma.rn.f32 	%f1334, %f1333, %f1331, %f1325;
	and.b32  	%r628, %r627, 1;
	setp.eq.b32 	%p296, %r628, 1;
	selp.f32 	%f1335, %f1330, %f1334, %p296;
	selp.f32 	%f1336, %f1334, %f1330, %p296;
	and.b32  	%r629, %r627, 2;
	setp.eq.s32 	%p297, %r629, 0;
	neg.f32 	%f1337, %f1335;
	selp.f32 	%f1338, %f1335, %f1337, %p297;
	add.s32 	%r630, %r627, 1;
	and.b32  	%r631, %r630, 2;
	setp.eq.s32 	%p298, %r631, 0;
	sub.f32 	%f1340, %f284, %f1336;
	selp.f32 	%f1341, %f1336, %f1340, %p298;
	cvt.rzi.f32.f32 	%f1342, %f1402;
	setp.eq.f32 	%p299, %f1342, %f1402;
	mul.f32 	%f1343, %f1402, 0f00000000;
	selp.f32 	%f1344, %f1343, %f1338, %p299;
	abs.f32 	%f1345, %f1402;
	setp.gt.f32 	%p300, %f1345, 0f4B800000;
	add.f32 	%f1346, %f1344, 0f3F800000;
	selp.f32 	%f1347, %f1346, %f1341, %p300;
	mov.b32 	%r619, %f1347;
	mov.b32 	%r618, %f236;
	// begin inline asm
	cvt.rn.f16x2.f32 %r617, %r619, %r618;
	// end inline asm
	mov.b32 	%r622, %f1344;
	mov.b32 	%r621, %f235;
	// begin inline asm
	cvt.rn.f16x2.f32 %r620, %r622, %r621;
	// end inline asm
	shl.b32 	%r632, %r1, 7;
	shl.b32 	%r633, %r2, 4;
	and.b32  	%r634, %r633, 112;
	and.b32  	%r635, %r632, 384;
	or.b32  	%r636, %r635, %r634;
	and.b32  	%r637, %r632, 512;
	shl.b32 	%r638, %r2, 3;
	and.b32  	%r639, %r638, 64;
	or.b32  	%r640, %r639, %r3;
	and.b32  	%r641, %r9, 32;
	or.b32  	%r144, %r640, %r641;
	or.b32  	%r145, %r636, %r637;
	shl.b32 	%r642, %r1, 5;
	and.b32  	%r643, %r6, 28;
	and.b32  	%r644, %r642, 96;
	and.b32  	%r645, %r642, 128;
	or.b32  	%r646, %r643, %r644;
	or.b32  	%r146, %r646, %r645;
	and.b32  	%r147, %r2, 8;
	bfe.u32 	%r647, %r3, 2, 1;
	and.b32  	%r648, %r3, 1;
	mul.lo.s32 	%r649, %r648, 2080;
	shr.u32 	%r650, %r3, 1;
	bfe.u32 	%r651, %r3, 1, 1;
	shr.u32 	%r652, %r3, 3;
	or.b32  	%r653, %r147, %r633;
	shr.u32 	%r654, %r653, 2;
	and.b32  	%r655, %r654, 30;
	mad.lo.s32 	%r656, %r20, 65, %r649;
	mad.lo.s32 	%r657, %r652, 260, %r656;
	mad.lo.s32 	%r658, %r647, 520, %r657;
	mad.lo.s32 	%r659, %r651, 1040, %r658;
	add.s32 	%r660, %r659, %r655;
	mul.wide.u32 	%rd51, %r660, 4;
	mov.u64 	%rd52, shmem;
	add.s64 	%rd5, %rd52, %rd51;
	add.s32 	%r661, %r660, 32;
	mul.wide.u32 	%rd53, %r661, 4;
	add.s64 	%rd6, %rd52, %rd53;
	add.s32 	%r662, %r660, 1;
	mul.wide.u32 	%rd54, %r662, 4;
	add.s64 	%rd7, %rd52, %rd54;
	add.s32 	%r663, %r660, 33;
	mul.wide.u32 	%rd55, %r663, 4;
	add.s64 	%rd8, %rd52, %rd55;
	add.s32 	%r664, %r660, 130;
	mul.wide.u32 	%rd56, %r664, 4;
	add.s64 	%rd9, %rd52, %rd56;
	add.s32 	%r665, %r660, 162;
	mul.wide.u32 	%rd57, %r665, 4;
	add.s64 	%rd10, %rd52, %rd57;
	add.s32 	%r666, %r660, 131;
	mul.wide.u32 	%rd58, %r666, 4;
	add.s64 	%rd11, %rd52, %rd58;
	add.s32 	%r667, %r660, 163;
	mul.wide.u32 	%rd59, %r667, 4;
	add.s64 	%rd12, %rd52, %rd59;
	mul.lo.s32 	%r668, %r17, 130;
	mul.lo.s32 	%r669, %r20, 520;
	mul.lo.s32 	%r670, %r16, 65;
	mul.lo.s32 	%r671, %r22, 1040;
	and.b32  	%r672, %r4, 32;
	mul.lo.s32 	%r673, %r19, 260;
	or.b32  	%r674, %r669, %r650;
	add.s32 	%r675, %r674, %r668;
	add.s32 	%r676, %r675, %r672;
	add.s32 	%r677, %r676, %r670;
	add.s32 	%r678, %r677, %r671;
	add.s32 	%r679, %r678, %r673;
	or.b32  	%r680, %r650, 8;
	add.s32 	%r681, %r668, %r669;
	add.s32 	%r682, %r681, %r672;
	add.s32 	%r683, %r682, %r680;
	add.s32 	%r684, %r683, %r670;
	add.s32 	%r685, %r684, %r671;
	add.s32 	%r686, %r685, %r673;
	or.b32  	%r687, %r650, 16;
	add.s32 	%r688, %r682, %r687;
	add.s32 	%r689, %r688, %r670;
	add.s32 	%r690, %r689, %r671;
	add.s32 	%r691, %r690, %r673;
	or.b32  	%r692, %r650, 24;
	add.s32 	%r693, %r682, %r692;
	add.s32 	%r694, %r693, %r670;
	add.s32 	%r695, %r694, %r671;
	add.s32 	%r696, %r695, %r673;
	or.b32  	%r697, %r650, 2080;
	add.s32 	%r698, %r682, %r697;
	add.s32 	%r699, %r698, %r670;
	add.s32 	%r700, %r699, %r671;
	add.s32 	%r701, %r700, %r673;
	add.s32 	%r702, %r682, 2080;
	add.s32 	%r703, %r702, %r680;
	add.s32 	%r704, %r703, %r670;
	add.s32 	%r705, %r704, %r671;
	add.s32 	%r706, %r705, %r673;
	add.s32 	%r707, %r702, %r687;
	add.s32 	%r708, %r707, %r670;
	add.s32 	%r709, %r708, %r671;
	add.s32 	%r710, %r709, %r673;
	add.s32 	%r711, %r702, %r692;
	add.s32 	%r712, %r711, %r670;
	add.s32 	%r713, %r712, %r671;
	add.s32 	%r714, %r713, %r673;
	or.b32  	%r715, %r12, %r8;
	or.b32  	%r716, %r715, %r7;
	or.b32  	%r717, %r716, %r10;
	shr.u32 	%r718, %r717, 1;
	mul.lo.s32 	%r719, %r718, 65;
	or.b32  	%r720, %r672, %r650;
	add.s32 	%r721, %r720, %r719;
	or.b32  	%r722, %r680, %r672;
	add.s32 	%r723, %r722, %r719;
	or.b32  	%r724, %r687, %r672;
	add.s32 	%r725, %r724, %r719;
	or.b32  	%r726, %r692, %r672;
	add.s32 	%r727, %r726, %r719;
	shl.b32 	%r728, %r1, 4;
	and.b32  	%r729, %r728, 1920;
	add.s32 	%r730, %r719, 2080;
	add.s32 	%r731, %r720, %r730;
	add.s32 	%r732, %r722, %r730;
	add.s32 	%r733, %r724, %r730;
	add.s32 	%r734, %r726, %r730;
	shl.b32 	%r735, %r3, 1;
	or.b32  	%r736, %r20, %r735;
	mul.lo.s32 	%r737, %r736, 65;
	add.s32 	%r738, %r655, %r737;
	mul.wide.u32 	%rd60, %r738, 4;
	add.s64 	%rd13, %rd52, %rd60;
	cvt.u64.u32 	%rd61, %r655;
	cvt.u64.u32 	%rd62, %r737;
	add.s64 	%rd63, %rd62, %rd61;
	shl.b64 	%rd64, %rd63, 2;
	add.s64 	%rd14, %rd52, %rd64;
	or.b32  	%r739, %r736, 32;
	mul.lo.s32 	%r740, %r739, 65;
	add.s32 	%r741, %r740, %r655;
	mul.wide.u32 	%rd65, %r741, 4;
	add.s64 	%rd15, %rd52, %rd65;
	cvt.u64.u32 	%rd66, %r740;
	add.s64 	%rd67, %rd66, %rd61;
	shl.b64 	%rd68, %rd67, 2;
	add.s64 	%rd16, %rd52, %rd68;
	shl.b32 	%r742, %r3, 10;
	or.b32  	%r743, %r729, %r21;
	shl.b32 	%r744, %r743, 8;
	or.b32  	%r745, %r742, %r744;
	or.b32  	%r746, %r146, %r745;
	or.b32  	%r148, %r746, -1572864;
	or.b32  	%r149, %r746, -1556480;
	mul.wide.u32 	%rd17, %r734, 4;
	mul.wide.u32 	%rd18, %r733, 4;
	mul.wide.u32 	%rd19, %r732, 4;
	mul.wide.u32 	%rd20, %r731, 4;
	mul.wide.u32 	%rd21, %r727, 4;
	mul.wide.u32 	%rd22, %r725, 4;
	mul.wide.u32 	%rd23, %r723, 4;
	mul.wide.u32 	%rd24, %r721, 4;
	mul.wide.u32 	%rd25, %r714, 4;
	mul.wide.u32 	%rd26, %r710, 4;
	mul.wide.u32 	%rd27, %r706, 4;
	mul.wide.u32 	%rd28, %r701, 4;
	mul.wide.u32 	%rd29, %r696, 4;
	mul.wide.u32 	%rd30, %r691, 4;
	mul.wide.u32 	%rd31, %r686, 4;
	mul.wide.u32 	%rd32, %r679, 4;
	mov.u32 	%r16200, 0;
	setp.eq.s32 	%p301, %r147, 0;
	mov.u16 	%rs2381, 25600;
	mov.u16 	%rs2173, 21504;
	mov.u16 	%rs2389, 18432;
	mov.u16 	%rs2307, -14592;
	mov.u32 	%r16201, %r16200;
	mov.u32 	%r16202, %r16200;
	mov.u32 	%r16203, %r16200;
	mov.u32 	%r16204, %r16200;
	mov.u32 	%r16205, %r16200;
	mov.u32 	%r16206, %r16200;
	mov.u32 	%r16207, %r16200;
	mov.u32 	%r16208, %r16200;
	mov.u32 	%r16209, %r16200;
	mov.u32 	%r16210, %r16200;
	mov.u32 	%r16211, %r16200;
	mov.u32 	%r16212, %r16200;
	mov.u32 	%r16213, %r16200;
	mov.u32 	%r16214, %r16200;
	mov.u32 	%r16215, %r16200;
	mov.u32 	%r16216, %r16200;
	mov.u32 	%r16217, %r16200;
	mov.u32 	%r16218, %r16200;
	mov.u32 	%r16219, %r16200;
	mov.u32 	%r16220, %r16200;
	mov.u32 	%r16221, %r16200;
	mov.u32 	%r16222, %r16200;
	mov.u32 	%r16223, %r16200;
	mov.u32 	%r16198, %r16200;
	bra.uni 	LBB0_177;
LBB0_181:                               // %L63541
                                        //   in Loop: Header=BB0_177 Depth=1
	add.s32 	%r16198, %r174, 256;
	setp.gt.s32 	%p306, %r5, %r16198;
	setp.ne.s32 	%p307, %r174, 32512;
	and.pred  	%p308, %p307, %p306;
	@%p308 bra 	LBB0_177;
	bra.uni 	LBB0_182;
LBB0_177:                               // %L2061
                                        // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_178 Depth 2
	mov.u32 	%r174, %r16198;
	or.b32  	%r780, %r144, %r174;
	shl.b32 	%r781, %r780, 14;
	or.b32  	%r782, %r145, %r781;
	cvt.u64.u32 	%rd70, %r782;
	add.s64 	%rd71, %rd2, %rd70;
	ld.global.v4.u32 	{%r783, %r784, %r785, %r786}, [%rd71];
	shl.b32 	%r787, %r780, 12;
	or.b32  	%r788, %r146, %r787;
	or.b32  	%r789, %r788, 65536;
	mul.wide.s32 	%rd72, %r789, 4;
	add.s64 	%rd73, %rd2, %rd72;
	ld.global.v4.u32 	{%r790, %r791, %r792, %r793}, [%rd73];
	selp.b32 	%r794, %r785, %r783, %p301;
	shfl.sync.bfly.b32	%r795, %r794, 8, 31, -1;
	selp.b32 	%r748, %r783, %r795, %p301;
	selp.b32 	%r749, %r795, %r785, %p301;
	selp.b32 	%r796, %r786, %r784, %p301;
	shfl.sync.bfly.b32	%r797, %r796, 8, 31, -1;
	selp.b32 	%r756, %r784, %r797, %p301;
	selp.b32 	%r757, %r797, %r786, %p301;
	selp.b32 	%r798, %r792, %r790, %p301;
	shfl.sync.bfly.b32	%r799, %r798, 8, 31, -1;
	selp.b32 	%r764, %r790, %r799, %p301;
	selp.b32 	%r765, %r799, %r792, %p301;
	selp.b32 	%r800, %r793, %r791, %p301;
	shfl.sync.bfly.b32	%r801, %r800, 8, 31, -1;
	selp.b32 	%r772, %r791, %r801, %p301;
	selp.b32 	%r773, %r801, %r793, %p301;
	mov.u32 	%r774, 21520;
	// begin inline asm
	prmt.b32 %r747, %r748, %r749, %r774;
	// end inline asm
	mov.u32 	%r778, 30258;
	// begin inline asm
	prmt.b32 %r751, %r748, %r749, %r778;
	// end inline asm
	// begin inline asm
	prmt.b32 %r755, %r756, %r757, %r774;
	// end inline asm
	// begin inline asm
	prmt.b32 %r759, %r756, %r757, %r778;
	// end inline asm
	// begin inline asm
	prmt.b32 %r763, %r764, %r765, %r774;
	// end inline asm
	// begin inline asm
	prmt.b32 %r767, %r764, %r765, %r778;
	// end inline asm
	// begin inline asm
	prmt.b32 %r771, %r772, %r773, %r774;
	// end inline asm
	// begin inline asm
	prmt.b32 %r775, %r772, %r773, %r778;
	// end inline asm
	st.shared.u32 	[%rd5], %r747;
	st.shared.u32 	[%rd6], %r751;
	st.shared.u32 	[%rd7], %r755;
	st.shared.u32 	[%rd8], %r759;
	st.shared.u32 	[%rd9], %r763;
	st.shared.u32 	[%rd10], %r767;
	st.shared.u32 	[%rd11], %r771;
	st.shared.u32 	[%rd12], %r775;
	bar.sync 	0;
	mov.u32 	%r16199, 256;
	mov.u64 	%rd94, %rd52;
LBB0_178:                               // %L9059
                                        //   Parent Loop BB0_177 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	add.s64 	%rd74, %rd94, %rd32;
	ld.shared.u32 	%r16066, [%rd74];
	add.s64 	%rd75, %rd94, %rd31;
	ld.shared.u32 	%r16067, [%rd75];
	add.s64 	%rd76, %rd94, %rd30;
	ld.shared.u32 	%r16068, [%rd76];
	add.s64 	%rd77, %rd94, %rd29;
	ld.shared.u32 	%r16069, [%rd77];
	add.s64 	%rd78, %rd94, %rd28;
	ld.shared.u32 	%r16070, [%rd78];
	add.s64 	%rd79, %rd94, %rd27;
	ld.shared.u32 	%r16071, [%rd79];
	add.s64 	%rd80, %rd94, %rd26;
	ld.shared.u32 	%r16072, [%rd80];
	add.s64 	%rd81, %rd94, %rd25;
	ld.shared.u32 	%r16073, [%rd81];
	// begin inline asm
	mov.b32 %r807, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r818, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r806, %r16066, -2004318072;
	mov.u32 	%r805, 983055;
	// begin inline asm
	lop3.b32 %r804, %r805, %r806, %r807, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r808, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r809, %r807, %r808;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r812, %r804, %r809;
	// end inline asm
	mov.u32 	%r816, 15728880;
	// begin inline asm
	lop3.b32 %r815, %r816, %r806, %r818, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r819, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r820, %r818, %r819;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r823, %r815, %r820;
	// end inline asm
	shr.u32 	%r828, %r806, 8;
	// begin inline asm
	lop3.b32 %r826, %r805, %r828, %r807, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r830, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r831, %r807, %r830;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r834, %r826, %r831;
	// end inline asm
	// begin inline asm
	lop3.b32 %r837, %r816, %r828, %r818, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r841, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r842, %r818, %r841;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r845, %r837, %r842;
	// end inline asm
	// begin inline asm
	mov.b32 %r853, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r864, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r852, %r16067, -2004318072;
	// begin inline asm
	lop3.b32 %r850, %r805, %r852, %r853, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r854, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r855, %r853, %r854;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r858, %r850, %r855;
	// end inline asm
	// begin inline asm
	lop3.b32 %r861, %r816, %r852, %r864, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r865, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r866, %r864, %r865;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r869, %r861, %r866;
	// end inline asm
	shr.u32 	%r874, %r852, 8;
	// begin inline asm
	lop3.b32 %r872, %r805, %r874, %r853, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r876, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r877, %r853, %r876;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r880, %r872, %r877;
	// end inline asm
	// begin inline asm
	lop3.b32 %r883, %r816, %r874, %r864, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r887, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r888, %r864, %r887;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r891, %r883, %r888;
	// end inline asm
	// begin inline asm
	mov.b32 %r899, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r910, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r898, %r16068, -2004318072;
	// begin inline asm
	lop3.b32 %r896, %r805, %r898, %r899, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r900, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r901, %r899, %r900;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r904, %r896, %r901;
	// end inline asm
	// begin inline asm
	lop3.b32 %r907, %r816, %r898, %r910, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r911, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r912, %r910, %r911;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r915, %r907, %r912;
	// end inline asm
	shr.u32 	%r920, %r898, 8;
	// begin inline asm
	lop3.b32 %r918, %r805, %r920, %r899, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r922, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r923, %r899, %r922;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r926, %r918, %r923;
	// end inline asm
	// begin inline asm
	lop3.b32 %r929, %r816, %r920, %r910, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r933, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r934, %r910, %r933;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r937, %r929, %r934;
	// end inline asm
	// begin inline asm
	mov.b32 %r945, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r956, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r944, %r16069, -2004318072;
	// begin inline asm
	lop3.b32 %r942, %r805, %r944, %r945, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r946, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r947, %r945, %r946;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r950, %r942, %r947;
	// end inline asm
	// begin inline asm
	lop3.b32 %r953, %r816, %r944, %r956, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r957, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r958, %r956, %r957;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r961, %r953, %r958;
	// end inline asm
	shr.u32 	%r966, %r944, 8;
	// begin inline asm
	lop3.b32 %r964, %r805, %r966, %r945, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r968, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r969, %r945, %r968;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r972, %r964, %r969;
	// end inline asm
	// begin inline asm
	lop3.b32 %r975, %r816, %r966, %r956, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r979, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r980, %r956, %r979;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r983, %r975, %r980;
	// end inline asm
	// begin inline asm
	mov.b32 %r991, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1002, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r990, %r16070, -2004318072;
	// begin inline asm
	lop3.b32 %r988, %r805, %r990, %r991, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r992, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r993, %r991, %r992;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r996, %r988, %r993;
	// end inline asm
	// begin inline asm
	lop3.b32 %r999, %r816, %r990, %r1002, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1003, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1004, %r1002, %r1003;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1007, %r999, %r1004;
	// end inline asm
	shr.u32 	%r1012, %r990, 8;
	// begin inline asm
	lop3.b32 %r1010, %r805, %r1012, %r991, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1014, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1015, %r991, %r1014;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1018, %r1010, %r1015;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1021, %r816, %r1012, %r1002, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1025, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1026, %r1002, %r1025;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1029, %r1021, %r1026;
	// end inline asm
	// begin inline asm
	mov.b32 %r1037, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1048, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1036, %r16071, -2004318072;
	// begin inline asm
	lop3.b32 %r1034, %r805, %r1036, %r1037, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1038, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1039, %r1037, %r1038;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1042, %r1034, %r1039;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1045, %r816, %r1036, %r1048, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1049, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1050, %r1048, %r1049;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1053, %r1045, %r1050;
	// end inline asm
	shr.u32 	%r1058, %r1036, 8;
	// begin inline asm
	lop3.b32 %r1056, %r805, %r1058, %r1037, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1060, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1061, %r1037, %r1060;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1064, %r1056, %r1061;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1067, %r816, %r1058, %r1048, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1071, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1072, %r1048, %r1071;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1075, %r1067, %r1072;
	// end inline asm
	// begin inline asm
	mov.b32 %r1083, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1094, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1082, %r16072, -2004318072;
	// begin inline asm
	lop3.b32 %r1080, %r805, %r1082, %r1083, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1084, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1085, %r1083, %r1084;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1088, %r1080, %r1085;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1091, %r816, %r1082, %r1094, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1095, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1096, %r1094, %r1095;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1099, %r1091, %r1096;
	// end inline asm
	shr.u32 	%r1104, %r1082, 8;
	// begin inline asm
	lop3.b32 %r1102, %r805, %r1104, %r1083, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1106, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1107, %r1083, %r1106;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1110, %r1102, %r1107;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1113, %r816, %r1104, %r1094, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1117, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1118, %r1094, %r1117;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1121, %r1113, %r1118;
	// end inline asm
	// begin inline asm
	mov.b32 %r1129, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1140, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1128, %r16073, -2004318072;
	// begin inline asm
	lop3.b32 %r1126, %r805, %r1128, %r1129, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1130, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1131, %r1129, %r1130;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1134, %r1126, %r1131;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1137, %r816, %r1128, %r1140, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1141, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1142, %r1140, %r1141;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1145, %r1137, %r1142;
	// end inline asm
	shr.u32 	%r1150, %r1128, 8;
	// begin inline asm
	lop3.b32 %r1148, %r805, %r1150, %r1129, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1152, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1153, %r1129, %r1152;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1156, %r1148, %r1153;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1159, %r816, %r1150, %r1140, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1163, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1164, %r1140, %r1163;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1167, %r1159, %r1164;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1170, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1172, %r1170, %r812;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1175, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1177, %r1175, %r823;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1180, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1182, %r1180, %r834;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1185, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1187, %r1185, %r845;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1190, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1192, %r1190, %r858;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1195, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1197, %r1195, %r869;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1200, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1202, %r1200, %r880;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1205, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1207, %r1205, %r891;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1210, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1212, %r1210, %r904;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1215, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1217, %r1215, %r915;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1220, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1222, %r1220, %r926;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1225, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1227, %r1225, %r937;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1230, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1232, %r1230, %r950;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1235, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1237, %r1235, %r961;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1240, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1242, %r1240, %r972;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1245, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1247, %r1245, %r983;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1250, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1252, %r1250, %r996;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1255, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1257, %r1255, %r1007;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1260, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1262, %r1260, %r1018;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1265, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1267, %r1265, %r1029;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1270, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1272, %r1270, %r1042;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1275, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1277, %r1275, %r1053;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1280, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1282, %r1280, %r1064;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1285, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1287, %r1285, %r1075;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1290, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1292, %r1290, %r1088;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1295, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1297, %r1295, %r1099;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1300, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1302, %r1300, %r1110;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1305, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1307, %r1305, %r1121;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1310, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1312, %r1310, %r1134;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1315, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1317, %r1315, %r1145;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1320, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1322, %r1320, %r1156;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1325, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1327, %r1325, %r1167;
	// end inline asm
	// begin inline asm
	mov.b32 %r1335, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1346, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1334, %r16200, -2004318072;
	// begin inline asm
	lop3.b32 %r1332, %r805, %r1334, %r1335, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1336, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1337, %r1335, %r1336;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1340, %r1332, %r1337;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1343, %r816, %r1334, %r1346, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1347, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1348, %r1346, %r1347;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1351, %r1343, %r1348;
	// end inline asm
	shr.u32 	%r1356, %r1334, 8;
	// begin inline asm
	lop3.b32 %r1354, %r805, %r1356, %r1335, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1358, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1359, %r1335, %r1358;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1362, %r1354, %r1359;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1365, %r816, %r1356, %r1346, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1369, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1370, %r1346, %r1369;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1373, %r1365, %r1370;
	// end inline asm
	// begin inline asm
	mov.b32 %r1381, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1392, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1380, %r16201, -2004318072;
	// begin inline asm
	lop3.b32 %r1378, %r805, %r1380, %r1381, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1382, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1383, %r1381, %r1382;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1386, %r1378, %r1383;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1389, %r816, %r1380, %r1392, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1393, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1394, %r1392, %r1393;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1397, %r1389, %r1394;
	// end inline asm
	shr.u32 	%r1402, %r1380, 8;
	// begin inline asm
	lop3.b32 %r1400, %r805, %r1402, %r1381, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1404, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1405, %r1381, %r1404;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1408, %r1400, %r1405;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1411, %r816, %r1402, %r1392, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1415, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1416, %r1392, %r1415;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1419, %r1411, %r1416;
	// end inline asm
	// begin inline asm
	mov.b32 %r1427, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1438, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1426, %r16202, -2004318072;
	// begin inline asm
	lop3.b32 %r1424, %r805, %r1426, %r1427, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1428, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1429, %r1427, %r1428;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1432, %r1424, %r1429;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1435, %r816, %r1426, %r1438, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1439, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1440, %r1438, %r1439;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1443, %r1435, %r1440;
	// end inline asm
	shr.u32 	%r1448, %r1426, 8;
	// begin inline asm
	lop3.b32 %r1446, %r805, %r1448, %r1427, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1450, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1451, %r1427, %r1450;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1454, %r1446, %r1451;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1457, %r816, %r1448, %r1438, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1461, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1462, %r1438, %r1461;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1465, %r1457, %r1462;
	// end inline asm
	// begin inline asm
	mov.b32 %r1473, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1484, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1472, %r16203, -2004318072;
	// begin inline asm
	lop3.b32 %r1470, %r805, %r1472, %r1473, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1474, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1475, %r1473, %r1474;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1478, %r1470, %r1475;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1481, %r816, %r1472, %r1484, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1485, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1486, %r1484, %r1485;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1489, %r1481, %r1486;
	// end inline asm
	shr.u32 	%r1494, %r1472, 8;
	// begin inline asm
	lop3.b32 %r1492, %r805, %r1494, %r1473, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1496, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1497, %r1473, %r1496;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1500, %r1492, %r1497;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1503, %r816, %r1494, %r1484, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1507, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1508, %r1484, %r1507;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1511, %r1503, %r1508;
	// end inline asm
	// begin inline asm
	mov.b32 %r1519, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1530, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1518, %r16212, -2004318072;
	// begin inline asm
	lop3.b32 %r1516, %r805, %r1518, %r1519, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1520, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1521, %r1519, %r1520;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1524, %r1516, %r1521;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1527, %r816, %r1518, %r1530, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1531, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1532, %r1530, %r1531;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1535, %r1527, %r1532;
	// end inline asm
	shr.u32 	%r1540, %r1518, 8;
	// begin inline asm
	lop3.b32 %r1538, %r805, %r1540, %r1519, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1542, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1543, %r1519, %r1542;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1546, %r1538, %r1543;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1549, %r816, %r1540, %r1530, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1553, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1554, %r1530, %r1553;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1557, %r1549, %r1554;
	// end inline asm
	// begin inline asm
	mov.b32 %r1565, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1576, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1564, %r16213, -2004318072;
	// begin inline asm
	lop3.b32 %r1562, %r805, %r1564, %r1565, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1566, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1567, %r1565, %r1566;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1570, %r1562, %r1567;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1573, %r816, %r1564, %r1576, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1577, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1578, %r1576, %r1577;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1581, %r1573, %r1578;
	// end inline asm
	shr.u32 	%r1586, %r1564, 8;
	// begin inline asm
	lop3.b32 %r1584, %r805, %r1586, %r1565, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1588, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1589, %r1565, %r1588;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1592, %r1584, %r1589;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1595, %r816, %r1586, %r1576, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1599, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1600, %r1576, %r1599;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1603, %r1595, %r1600;
	// end inline asm
	// begin inline asm
	mov.b32 %r1611, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1622, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1610, %r16214, -2004318072;
	// begin inline asm
	lop3.b32 %r1608, %r805, %r1610, %r1611, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1612, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1613, %r1611, %r1612;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1616, %r1608, %r1613;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1619, %r816, %r1610, %r1622, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1623, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1624, %r1622, %r1623;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1627, %r1619, %r1624;
	// end inline asm
	shr.u32 	%r1632, %r1610, 8;
	// begin inline asm
	lop3.b32 %r1630, %r805, %r1632, %r1611, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1634, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1635, %r1611, %r1634;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1638, %r1630, %r1635;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1641, %r816, %r1632, %r1622, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1645, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1646, %r1622, %r1645;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1649, %r1641, %r1646;
	// end inline asm
	// begin inline asm
	mov.b32 %r1657, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1668, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1656, %r16215, -2004318072;
	// begin inline asm
	lop3.b32 %r1654, %r805, %r1656, %r1657, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1658, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1659, %r1657, %r1658;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1662, %r1654, %r1659;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1665, %r816, %r1656, %r1668, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1669, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1670, %r1668, %r1669;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1673, %r1665, %r1670;
	// end inline asm
	shr.u32 	%r1678, %r1656, 8;
	// begin inline asm
	lop3.b32 %r1676, %r805, %r1678, %r1657, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1680, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1681, %r1657, %r1680;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1684, %r1676, %r1681;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1687, %r816, %r1678, %r1668, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1691, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1692, %r1668, %r1691;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1695, %r1687, %r1692;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1698, %r272, %r1340, %r1172;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1702, %r272, %r1351, %r1177;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1706, %r272, %r1362, %r1182;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1710, %r272, %r1373, %r1187;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1714, %r272, %r1386, %r1192;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1718, %r272, %r1397, %r1197;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1722, %r272, %r1408, %r1202;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1726, %r272, %r1419, %r1207;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1730, %r272, %r1432, %r1212;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1734, %r272, %r1443, %r1217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1738, %r272, %r1454, %r1222;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1742, %r272, %r1465, %r1227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1746, %r272, %r1478, %r1232;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1750, %r272, %r1489, %r1237;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1754, %r272, %r1500, %r1242;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1758, %r272, %r1511, %r1247;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1762, %r290, %r1524, %r1252;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1766, %r290, %r1535, %r1257;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1770, %r290, %r1546, %r1262;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1774, %r290, %r1557, %r1267;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1778, %r290, %r1570, %r1272;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1782, %r290, %r1581, %r1277;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1786, %r290, %r1592, %r1282;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1790, %r290, %r1603, %r1287;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1794, %r290, %r1616, %r1292;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1798, %r290, %r1627, %r1297;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1802, %r290, %r1638, %r1302;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1806, %r290, %r1649, %r1307;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1810, %r290, %r1662, %r1312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1814, %r290, %r1673, %r1317;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1818, %r290, %r1684, %r1322;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1822, %r290, %r1695, %r1327;
	// end inline asm
	// begin inline asm
	mov.b32 %r1831, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1842, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1830, %r16204, -2004318072;
	// begin inline asm
	lop3.b32 %r1828, %r805, %r1830, %r1831, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1832, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1833, %r1831, %r1832;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1836, %r1828, %r1833;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1839, %r816, %r1830, %r1842, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1843, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1844, %r1842, %r1843;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1847, %r1839, %r1844;
	// end inline asm
	shr.u32 	%r1852, %r1830, 8;
	// begin inline asm
	lop3.b32 %r1850, %r805, %r1852, %r1831, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1854, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1855, %r1831, %r1854;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1858, %r1850, %r1855;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1861, %r816, %r1852, %r1842, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1865, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1866, %r1842, %r1865;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1869, %r1861, %r1866;
	// end inline asm
	// begin inline asm
	mov.b32 %r1877, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1888, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1876, %r16205, -2004318072;
	// begin inline asm
	lop3.b32 %r1874, %r805, %r1876, %r1877, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1878, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1879, %r1877, %r1878;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1882, %r1874, %r1879;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1885, %r816, %r1876, %r1888, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1889, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1890, %r1888, %r1889;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1893, %r1885, %r1890;
	// end inline asm
	shr.u32 	%r1898, %r1876, 8;
	// begin inline asm
	lop3.b32 %r1896, %r805, %r1898, %r1877, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1900, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1901, %r1877, %r1900;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1904, %r1896, %r1901;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1907, %r816, %r1898, %r1888, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1911, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1912, %r1888, %r1911;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1915, %r1907, %r1912;
	// end inline asm
	// begin inline asm
	mov.b32 %r1923, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1934, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1922, %r16206, -2004318072;
	// begin inline asm
	lop3.b32 %r1920, %r805, %r1922, %r1923, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1924, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1925, %r1923, %r1924;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1928, %r1920, %r1925;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1931, %r816, %r1922, %r1934, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1935, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1936, %r1934, %r1935;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1939, %r1931, %r1936;
	// end inline asm
	shr.u32 	%r1944, %r1922, 8;
	// begin inline asm
	lop3.b32 %r1942, %r805, %r1944, %r1923, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1946, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1947, %r1923, %r1946;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1950, %r1942, %r1947;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1953, %r816, %r1944, %r1934, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1957, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1958, %r1934, %r1957;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1961, %r1953, %r1958;
	// end inline asm
	// begin inline asm
	mov.b32 %r1969, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1980, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1968, %r16207, -2004318072;
	// begin inline asm
	lop3.b32 %r1966, %r805, %r1968, %r1969, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1970, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1971, %r1969, %r1970;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1974, %r1966, %r1971;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1977, %r816, %r1968, %r1980, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1981, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1982, %r1980, %r1981;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1985, %r1977, %r1982;
	// end inline asm
	shr.u32 	%r1990, %r1968, 8;
	// begin inline asm
	lop3.b32 %r1988, %r805, %r1990, %r1969, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1992, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1993, %r1969, %r1992;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1996, %r1988, %r1993;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1999, %r816, %r1990, %r1980, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2003, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2004, %r1980, %r2003;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2007, %r1999, %r2004;
	// end inline asm
	// begin inline asm
	mov.b32 %r2015, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2026, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2014, %r16216, -2004318072;
	// begin inline asm
	lop3.b32 %r2012, %r805, %r2014, %r2015, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2016, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2017, %r2015, %r2016;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2020, %r2012, %r2017;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2023, %r816, %r2014, %r2026, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2027, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2028, %r2026, %r2027;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2031, %r2023, %r2028;
	// end inline asm
	shr.u32 	%r2036, %r2014, 8;
	// begin inline asm
	lop3.b32 %r2034, %r805, %r2036, %r2015, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2038, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2039, %r2015, %r2038;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2042, %r2034, %r2039;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2045, %r816, %r2036, %r2026, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2049, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2050, %r2026, %r2049;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2053, %r2045, %r2050;
	// end inline asm
	// begin inline asm
	mov.b32 %r2061, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2072, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2060, %r16217, -2004318072;
	// begin inline asm
	lop3.b32 %r2058, %r805, %r2060, %r2061, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2062, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2063, %r2061, %r2062;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2066, %r2058, %r2063;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2069, %r816, %r2060, %r2072, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2073, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2074, %r2072, %r2073;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2077, %r2069, %r2074;
	// end inline asm
	shr.u32 	%r2082, %r2060, 8;
	// begin inline asm
	lop3.b32 %r2080, %r805, %r2082, %r2061, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2084, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2085, %r2061, %r2084;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2088, %r2080, %r2085;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2091, %r816, %r2082, %r2072, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2095, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2096, %r2072, %r2095;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2099, %r2091, %r2096;
	// end inline asm
	// begin inline asm
	mov.b32 %r2107, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2118, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2106, %r16218, -2004318072;
	// begin inline asm
	lop3.b32 %r2104, %r805, %r2106, %r2107, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2108, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2109, %r2107, %r2108;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2112, %r2104, %r2109;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2115, %r816, %r2106, %r2118, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2119, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2120, %r2118, %r2119;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2123, %r2115, %r2120;
	// end inline asm
	shr.u32 	%r2128, %r2106, 8;
	// begin inline asm
	lop3.b32 %r2126, %r805, %r2128, %r2107, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2130, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2131, %r2107, %r2130;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2134, %r2126, %r2131;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2137, %r816, %r2128, %r2118, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2141, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2142, %r2118, %r2141;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2145, %r2137, %r2142;
	// end inline asm
	// begin inline asm
	mov.b32 %r2153, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2164, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2152, %r16219, -2004318072;
	// begin inline asm
	lop3.b32 %r2150, %r805, %r2152, %r2153, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2154, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2155, %r2153, %r2154;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2158, %r2150, %r2155;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2161, %r816, %r2152, %r2164, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2165, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2166, %r2164, %r2165;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2169, %r2161, %r2166;
	// end inline asm
	shr.u32 	%r2174, %r2152, 8;
	// begin inline asm
	lop3.b32 %r2172, %r805, %r2174, %r2153, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2176, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2177, %r2153, %r2176;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2180, %r2172, %r2177;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2183, %r816, %r2174, %r2164, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2187, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2188, %r2164, %r2187;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2191, %r2183, %r2188;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2194, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2196, %r2194, %r1836, %r1698;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2200, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2202, %r2200, %r1847, %r1702;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2206, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2208, %r2206, %r1858, %r1706;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2212, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2214, %r2212, %r1869, %r1710;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2218, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2220, %r2218, %r1882, %r1714;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2224, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2226, %r2224, %r1893, %r1718;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2230, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2232, %r2230, %r1904, %r1722;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2236, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2238, %r2236, %r1915, %r1726;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2242, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2244, %r2242, %r1928, %r1730;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2248, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2250, %r2248, %r1939, %r1734;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2254, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2256, %r2254, %r1950, %r1738;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2260, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2262, %r2260, %r1961, %r1742;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2266, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2268, %r2266, %r1974, %r1746;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2272, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2274, %r2272, %r1985, %r1750;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2278, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2280, %r2278, %r1996, %r1754;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2284, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2286, %r2284, %r2007, %r1758;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2290, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2292, %r2290, %r2020, %r1762;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2296, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2298, %r2296, %r2031, %r1766;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2302, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2304, %r2302, %r2042, %r1770;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2308, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2310, %r2308, %r2053, %r1774;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2314, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2316, %r2314, %r2066, %r1778;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2320, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2322, %r2320, %r2077, %r1782;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2326, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2328, %r2326, %r2088, %r1786;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2332, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2334, %r2332, %r2099, %r1790;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2338, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2340, %r2338, %r2112, %r1794;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2344, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2346, %r2344, %r2123, %r1798;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2350, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2352, %r2350, %r2134, %r1802;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2356, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2358, %r2356, %r2145, %r1806;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2362, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2364, %r2362, %r2158, %r1810;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2368, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2370, %r2368, %r2169, %r1814;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2374, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2376, %r2374, %r2180, %r1818;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2380, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2382, %r2380, %r2191, %r1822;
	// end inline asm
	// begin inline asm
	mov.b32 %r2391, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2402, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2390, %r16208, -2004318072;
	// begin inline asm
	lop3.b32 %r2388, %r805, %r2390, %r2391, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2392, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2393, %r2391, %r2392;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2396, %r2388, %r2393;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2399, %r816, %r2390, %r2402, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2403, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2404, %r2402, %r2403;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2407, %r2399, %r2404;
	// end inline asm
	shr.u32 	%r2412, %r2390, 8;
	// begin inline asm
	lop3.b32 %r2410, %r805, %r2412, %r2391, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2414, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2415, %r2391, %r2414;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2418, %r2410, %r2415;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2421, %r816, %r2412, %r2402, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2425, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2426, %r2402, %r2425;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2429, %r2421, %r2426;
	// end inline asm
	// begin inline asm
	mov.b32 %r2437, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2448, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2436, %r16209, -2004318072;
	// begin inline asm
	lop3.b32 %r2434, %r805, %r2436, %r2437, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2438, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2439, %r2437, %r2438;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2442, %r2434, %r2439;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2445, %r816, %r2436, %r2448, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2449, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2450, %r2448, %r2449;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2453, %r2445, %r2450;
	// end inline asm
	shr.u32 	%r2458, %r2436, 8;
	// begin inline asm
	lop3.b32 %r2456, %r805, %r2458, %r2437, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2460, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2461, %r2437, %r2460;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2464, %r2456, %r2461;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2467, %r816, %r2458, %r2448, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2471, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2472, %r2448, %r2471;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2475, %r2467, %r2472;
	// end inline asm
	// begin inline asm
	mov.b32 %r2483, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2494, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2482, %r16210, -2004318072;
	// begin inline asm
	lop3.b32 %r2480, %r805, %r2482, %r2483, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2484, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2485, %r2483, %r2484;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2488, %r2480, %r2485;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2491, %r816, %r2482, %r2494, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2495, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2496, %r2494, %r2495;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2499, %r2491, %r2496;
	// end inline asm
	shr.u32 	%r2504, %r2482, 8;
	// begin inline asm
	lop3.b32 %r2502, %r805, %r2504, %r2483, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2506, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2507, %r2483, %r2506;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2510, %r2502, %r2507;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2513, %r816, %r2504, %r2494, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2517, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2518, %r2494, %r2517;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2521, %r2513, %r2518;
	// end inline asm
	// begin inline asm
	mov.b32 %r2529, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2540, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2528, %r16211, -2004318072;
	// begin inline asm
	lop3.b32 %r2526, %r805, %r2528, %r2529, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2530, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2531, %r2529, %r2530;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2534, %r2526, %r2531;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2537, %r816, %r2528, %r2540, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2541, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2542, %r2540, %r2541;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2545, %r2537, %r2542;
	// end inline asm
	shr.u32 	%r2550, %r2528, 8;
	// begin inline asm
	lop3.b32 %r2548, %r805, %r2550, %r2529, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2552, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2553, %r2529, %r2552;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2556, %r2548, %r2553;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2559, %r816, %r2550, %r2540, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2563, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2564, %r2540, %r2563;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2567, %r2559, %r2564;
	// end inline asm
	// begin inline asm
	mov.b32 %r2575, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2586, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2574, %r16220, -2004318072;
	// begin inline asm
	lop3.b32 %r2572, %r805, %r2574, %r2575, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2576, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2577, %r2575, %r2576;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2580, %r2572, %r2577;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2583, %r816, %r2574, %r2586, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2587, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2588, %r2586, %r2587;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2591, %r2583, %r2588;
	// end inline asm
	shr.u32 	%r2596, %r2574, 8;
	// begin inline asm
	lop3.b32 %r2594, %r805, %r2596, %r2575, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2598, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2599, %r2575, %r2598;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2602, %r2594, %r2599;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2605, %r816, %r2596, %r2586, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2609, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2610, %r2586, %r2609;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2613, %r2605, %r2610;
	// end inline asm
	// begin inline asm
	mov.b32 %r2621, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2632, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2620, %r16221, -2004318072;
	// begin inline asm
	lop3.b32 %r2618, %r805, %r2620, %r2621, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2622, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2623, %r2621, %r2622;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2626, %r2618, %r2623;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2629, %r816, %r2620, %r2632, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2633, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2634, %r2632, %r2633;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2637, %r2629, %r2634;
	// end inline asm
	shr.u32 	%r2642, %r2620, 8;
	// begin inline asm
	lop3.b32 %r2640, %r805, %r2642, %r2621, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2644, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2645, %r2621, %r2644;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2648, %r2640, %r2645;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2651, %r816, %r2642, %r2632, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2655, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2656, %r2632, %r2655;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2659, %r2651, %r2656;
	// end inline asm
	// begin inline asm
	mov.b32 %r2667, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2678, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2666, %r16222, -2004318072;
	// begin inline asm
	lop3.b32 %r2664, %r805, %r2666, %r2667, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2668, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2669, %r2667, %r2668;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2672, %r2664, %r2669;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2675, %r816, %r2666, %r2678, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2679, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2680, %r2678, %r2679;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2683, %r2675, %r2680;
	// end inline asm
	shr.u32 	%r2688, %r2666, 8;
	// begin inline asm
	lop3.b32 %r2686, %r805, %r2688, %r2667, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2690, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2691, %r2667, %r2690;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2694, %r2686, %r2691;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2697, %r816, %r2688, %r2678, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2701, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2702, %r2678, %r2701;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2705, %r2697, %r2702;
	// end inline asm
	// begin inline asm
	mov.b32 %r2713, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2724, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2712, %r16223, -2004318072;
	// begin inline asm
	lop3.b32 %r2710, %r805, %r2712, %r2713, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2714, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2715, %r2713, %r2714;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2718, %r2710, %r2715;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2721, %r816, %r2712, %r2724, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2725, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2726, %r2724, %r2725;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2729, %r2721, %r2726;
	// end inline asm
	shr.u32 	%r2734, %r2712, 8;
	// begin inline asm
	lop3.b32 %r2732, %r805, %r2734, %r2713, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2736, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2737, %r2713, %r2736;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2740, %r2732, %r2737;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2743, %r816, %r2734, %r2724, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2747, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2748, %r2724, %r2747;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2751, %r2743, %r2748;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2889, %r344, %r2396, %r2196;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2886, %r344, %r2407, %r2202;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2898, %r344, %r2418, %r2208;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2895, %r344, %r2429, %r2214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2907, %r344, %r2442, %r2220;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2904, %r344, %r2453, %r2226;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2916, %r344, %r2464, %r2232;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2913, %r344, %r2475, %r2238;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2925, %r344, %r2488, %r2244;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2922, %r344, %r2499, %r2250;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2934, %r344, %r2510, %r2256;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2931, %r344, %r2521, %r2262;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2943, %r344, %r2534, %r2268;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2940, %r344, %r2545, %r2274;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2952, %r344, %r2556, %r2280;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2949, %r344, %r2567, %r2286;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2961, %r362, %r2580, %r2292;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2958, %r362, %r2591, %r2298;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2970, %r362, %r2602, %r2304;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2967, %r362, %r2613, %r2310;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2979, %r362, %r2626, %r2316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2976, %r362, %r2637, %r2322;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2988, %r362, %r2648, %r2328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2985, %r362, %r2659, %r2334;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2997, %r362, %r2672, %r2340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2994, %r362, %r2683, %r2346;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3006, %r362, %r2694, %r2352;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3003, %r362, %r2705, %r2358;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3015, %r362, %r2718, %r2364;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3012, %r362, %r2729, %r2370;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3024, %r362, %r2740, %r2376;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3021, %r362, %r2751, %r2382;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2882, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2884, %r2882, %r2886;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2887, %r426, %r2889, %r2884;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2891, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2893, %r2891, %r2895;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2896, %r426, %r2898, %r2893;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2900, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2902, %r2900, %r2904;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2905, %r426, %r2907, %r2902;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2909, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2911, %r2909, %r2913;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2914, %r426, %r2916, %r2911;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2918, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2920, %r2918, %r2922;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2923, %r426, %r2925, %r2920;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2927, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2929, %r2927, %r2931;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2932, %r426, %r2934, %r2929;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2936, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2938, %r2936, %r2940;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2941, %r426, %r2943, %r2938;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2945, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2947, %r2945, %r2949;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2950, %r426, %r2952, %r2947;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2954, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2956, %r2954, %r2958;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2959, %r429, %r2961, %r2956;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2963, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2965, %r2963, %r2967;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2968, %r429, %r2970, %r2965;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2972, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2974, %r2972, %r2976;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2977, %r429, %r2979, %r2974;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2981, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2983, %r2981, %r2985;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2986, %r429, %r2988, %r2983;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2990, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2992, %r2990, %r2994;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2995, %r429, %r2997, %r2992;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2999, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3001, %r2999, %r3003;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3004, %r429, %r3006, %r3001;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3008, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3010, %r3008, %r3012;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3013, %r429, %r3015, %r3010;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3017, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3019, %r3017, %r3021;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3022, %r429, %r3024, %r3019;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3026, %r432, %r2889;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3029, %r426, %r2886, %r3026;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3033, %r432, %r2898;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3036, %r426, %r2895, %r3033;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3040, %r432, %r2907;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3043, %r426, %r2904, %r3040;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3047, %r432, %r2916;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3050, %r426, %r2913, %r3047;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3054, %r432, %r2925;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3057, %r426, %r2922, %r3054;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3061, %r432, %r2934;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3064, %r426, %r2931, %r3061;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3068, %r432, %r2943;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3071, %r426, %r2940, %r3068;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3075, %r432, %r2952;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3078, %r426, %r2949, %r3075;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3082, %r435, %r2961;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3085, %r429, %r2958, %r3082;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3089, %r435, %r2970;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3092, %r429, %r2967, %r3089;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3096, %r435, %r2979;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3099, %r429, %r2976, %r3096;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3103, %r435, %r2988;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3106, %r429, %r2985, %r3103;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3110, %r435, %r2997;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3113, %r429, %r2994, %r3110;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3117, %r435, %r3006;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3120, %r429, %r3003, %r3117;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3124, %r435, %r3015;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3127, %r429, %r3012, %r3124;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3131, %r435, %r3024;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3134, %r429, %r3021, %r3131;
	// end inline asm
	mov.u32 	%r15161, 0;
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3305, %r3302}, {%r474, %r480, %r477, %r483}, {%r2887, %r3029}, {%r15161, %r15161};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3314, %r3311}, {%r474, %r480, %r477, %r483}, {%r2896, %r3036}, {%r15161, %r15161};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3323, %r3320}, {%r474, %r480, %r477, %r483}, {%r2905, %r3043}, {%r15161, %r15161};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3332, %r3329}, {%r474, %r480, %r477, %r483}, {%r2914, %r3050}, {%r15161, %r15161};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3341, %r3338}, {%r474, %r480, %r477, %r483}, {%r2923, %r3057}, {%r15161, %r15161};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3350, %r3347}, {%r474, %r480, %r477, %r483}, {%r2932, %r3064}, {%r15161, %r15161};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3359, %r3356}, {%r474, %r480, %r477, %r483}, {%r2941, %r3071}, {%r15161, %r15161};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3368, %r3365}, {%r474, %r480, %r477, %r483}, {%r2950, %r3078}, {%r15161, %r15161};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3377, %r3374}, {%r474, %r480, %r477, %r483}, {%r2959, %r3085}, {%r15161, %r15161};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3386, %r3383}, {%r474, %r480, %r477, %r483}, {%r2968, %r3092}, {%r15161, %r15161};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3395, %r3392}, {%r474, %r480, %r477, %r483}, {%r2977, %r3099}, {%r15161, %r15161};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3404, %r3401}, {%r474, %r480, %r477, %r483}, {%r2986, %r3106}, {%r15161, %r15161};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3413, %r3410}, {%r474, %r480, %r477, %r483}, {%r2995, %r3113}, {%r15161, %r15161};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3422, %r3419}, {%r474, %r480, %r477, %r483}, {%r3004, %r3120}, {%r15161, %r15161};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3431, %r3428}, {%r474, %r480, %r477, %r483}, {%r3013, %r3127}, {%r15161, %r15161};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3440, %r3437}, {%r474, %r480, %r477, %r483}, {%r3022, %r3134}, {%r15161, %r15161};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3298, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3300, %r3298, %r3302;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3303, %r521, %r3305, %r3300;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3307, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3309, %r3307, %r3311;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3312, %r521, %r3314, %r3309;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3316, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3318, %r3316, %r3320;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3321, %r521, %r3323, %r3318;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3325, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3327, %r3325, %r3329;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3330, %r521, %r3332, %r3327;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3334, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3336, %r3334, %r3338;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3339, %r521, %r3341, %r3336;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3343, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3345, %r3343, %r3347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3348, %r521, %r3350, %r3345;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3352, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3354, %r3352, %r3356;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3357, %r521, %r3359, %r3354;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3361, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3363, %r3361, %r3365;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3366, %r521, %r3368, %r3363;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3370, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3372, %r3370, %r3374;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3375, %r521, %r3377, %r3372;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3379, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3381, %r3379, %r3383;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3384, %r521, %r3386, %r3381;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3388, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3390, %r3388, %r3392;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3393, %r521, %r3395, %r3390;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3397, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3399, %r3397, %r3401;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3402, %r521, %r3404, %r3399;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3406, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3408, %r3406, %r3410;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3411, %r521, %r3413, %r3408;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3415, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3417, %r3415, %r3419;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3420, %r521, %r3422, %r3417;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3424, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3426, %r3424, %r3428;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3429, %r521, %r3431, %r3426;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3433, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3435, %r3433, %r3437;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3438, %r521, %r3440, %r3435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3442, %r524, %r3305;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3445, %r521, %r3302, %r3442;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3449, %r524, %r3314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3452, %r521, %r3311, %r3449;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3456, %r524, %r3323;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3459, %r521, %r3320, %r3456;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3463, %r524, %r3332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3466, %r521, %r3329, %r3463;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3470, %r524, %r3341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3473, %r521, %r3338, %r3470;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3477, %r524, %r3350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3480, %r521, %r3347, %r3477;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3484, %r524, %r3359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3487, %r521, %r3356, %r3484;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3491, %r524, %r3368;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3494, %r521, %r3365, %r3491;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3498, %r524, %r3377;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3501, %r521, %r3374, %r3498;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3505, %r524, %r3386;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3508, %r521, %r3383, %r3505;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3512, %r524, %r3395;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3515, %r521, %r3392, %r3512;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3519, %r524, %r3404;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3522, %r521, %r3401, %r3519;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3526, %r524, %r3413;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3529, %r521, %r3410, %r3526;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3533, %r524, %r3422;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3536, %r521, %r3419, %r3533;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3540, %r524, %r3431;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3543, %r521, %r3428, %r3540;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3547, %r524, %r3440;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3550, %r521, %r3437, %r3547;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3843, %r3846}, {%r564, %r570, %r567, %r573}, {%r3303, %r3445}, {%r15161, %r15161};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3849, %r3852}, {%r564, %r570, %r567, %r573}, {%r3312, %r3452}, {%r15161, %r15161};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3855, %r3858}, {%r564, %r570, %r567, %r573}, {%r3321, %r3459}, {%r15161, %r15161};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3861, %r3864}, {%r564, %r570, %r567, %r573}, {%r3330, %r3466}, {%r15161, %r15161};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3867, %r3870}, {%r564, %r570, %r567, %r573}, {%r3339, %r3473}, {%r15161, %r15161};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3873, %r3876}, {%r564, %r570, %r567, %r573}, {%r3348, %r3480}, {%r15161, %r15161};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3879, %r3882}, {%r564, %r570, %r567, %r573}, {%r3357, %r3487}, {%r15161, %r15161};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3885, %r3888}, {%r564, %r570, %r567, %r573}, {%r3366, %r3494}, {%r15161, %r15161};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3844, %r3847}, {%r564, %r570, %r567, %r573}, {%r3375, %r3501}, {%r15161, %r15161};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3850, %r3853}, {%r564, %r570, %r567, %r573}, {%r3384, %r3508}, {%r15161, %r15161};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3856, %r3859}, {%r564, %r570, %r567, %r573}, {%r3393, %r3515}, {%r15161, %r15161};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3862, %r3865}, {%r564, %r570, %r567, %r573}, {%r3402, %r3522}, {%r15161, %r15161};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3868, %r3871}, {%r564, %r570, %r567, %r573}, {%r3411, %r3529}, {%r15161, %r15161};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3874, %r3877}, {%r564, %r570, %r567, %r573}, {%r3420, %r3536}, {%r15161, %r15161};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3880, %r3883}, {%r564, %r570, %r567, %r573}, {%r3429, %r3543}, {%r15161, %r15161};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3886, %r3889}, {%r564, %r570, %r567, %r573}, {%r3438, %r3550}, {%r15161, %r15161};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3842, %r3843, %r3844;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3845, %r3846, %r3847;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3848, %r3849, %r3850;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3851, %r3852, %r3853;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3854, %r3855, %r3856;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3857, %r3858, %r3859;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3860, %r3861, %r3862;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3863, %r3864, %r3865;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3866, %r3867, %r3868;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3869, %r3870, %r3871;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3872, %r3873, %r3874;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3875, %r3876, %r3877;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3878, %r3879, %r3880;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3881, %r3882, %r3883;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3884, %r3885, %r3886;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3887, %r3888, %r3889;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3890, %r3843, %r3844;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3893, %r3846, %r3847;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3896, %r3849, %r3850;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3899, %r3852, %r3853;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3902, %r3855, %r3856;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3905, %r3858, %r3859;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3908, %r3861, %r3862;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3911, %r3864, %r3865;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3914, %r3867, %r3868;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3917, %r3870, %r3871;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3920, %r3873, %r3874;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3923, %r3876, %r3877;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3926, %r3879, %r3880;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3929, %r3882, %r3883;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3932, %r3885, %r3886;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3935, %r3888, %r3889;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3938, %r13, %r3842;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3941, %r13, %r3845;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3944, %r13, %r3848;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3947, %r13, %r3851;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3950, %r13, %r3854;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3953, %r13, %r3857;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3956, %r13, %r3860;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3959, %r13, %r3863;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3962, %r13, %r3866;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3965, %r13, %r3869;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3968, %r13, %r3872;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3971, %r13, %r3875;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3974, %r13, %r3878;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3977, %r13, %r3881;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3980, %r13, %r3884;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3983, %r13, %r3887;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3986, %r14, %r3890;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3989, %r14, %r3893;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3992, %r14, %r3896;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3995, %r14, %r3899;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3998, %r14, %r3902;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4001, %r14, %r3905;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4004, %r14, %r3908;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4007, %r14, %r3911;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4010, %r14, %r3914;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4013, %r14, %r3917;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4016, %r14, %r3920;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4019, %r14, %r3923;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4022, %r14, %r3926;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4025, %r14, %r3929;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4028, %r14, %r3932;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4031, %r14, %r3935;
	// end inline asm
	// begin inline asm
	mov.b32 %r4034, {%rs2307, %rs2307};
	// end inline asm
	mov.u16 	%rs408, 18176;
	// begin inline asm
	mov.b32 %r4035, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4036, %r3938, %r4034;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4039, %r4036, %r4035;
	// end inline asm
	// begin inline asm
	mov.b32 %r4042, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4043, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4044, %r3941, %r4042;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4047, %r4044, %r4043;
	// end inline asm
	// begin inline asm
	mov.b32 %r4050, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4051, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4052, %r3944, %r4050;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4055, %r4052, %r4051;
	// end inline asm
	// begin inline asm
	mov.b32 %r4058, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4059, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4060, %r3947, %r4058;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4063, %r4060, %r4059;
	// end inline asm
	// begin inline asm
	mov.b32 %r4066, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4067, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4068, %r3950, %r4066;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4071, %r4068, %r4067;
	// end inline asm
	// begin inline asm
	mov.b32 %r4074, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4075, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4076, %r3953, %r4074;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4079, %r4076, %r4075;
	// end inline asm
	// begin inline asm
	mov.b32 %r4082, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4083, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4084, %r3956, %r4082;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4087, %r4084, %r4083;
	// end inline asm
	// begin inline asm
	mov.b32 %r4090, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4091, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4092, %r3959, %r4090;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4095, %r4092, %r4091;
	// end inline asm
	// begin inline asm
	mov.b32 %r4098, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4099, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4100, %r3962, %r4098;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4103, %r4100, %r4099;
	// end inline asm
	// begin inline asm
	mov.b32 %r4106, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4107, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4108, %r3965, %r4106;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4111, %r4108, %r4107;
	// end inline asm
	// begin inline asm
	mov.b32 %r4114, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4115, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4116, %r3968, %r4114;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4119, %r4116, %r4115;
	// end inline asm
	// begin inline asm
	mov.b32 %r4122, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4123, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4124, %r3971, %r4122;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4127, %r4124, %r4123;
	// end inline asm
	// begin inline asm
	mov.b32 %r4130, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4131, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4132, %r3974, %r4130;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4135, %r4132, %r4131;
	// end inline asm
	// begin inline asm
	mov.b32 %r4138, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4139, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4140, %r3977, %r4138;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4143, %r4140, %r4139;
	// end inline asm
	// begin inline asm
	mov.b32 %r4146, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4147, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4148, %r3980, %r4146;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4151, %r4148, %r4147;
	// end inline asm
	// begin inline asm
	mov.b32 %r4154, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4155, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4156, %r3983, %r4154;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4159, %r4156, %r4155;
	// end inline asm
	// begin inline asm
	mov.b32 %r4162, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4163, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4164, %r3986, %r4162;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4167, %r4164, %r4163;
	// end inline asm
	// begin inline asm
	mov.b32 %r4170, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4171, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4172, %r3989, %r4170;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4175, %r4172, %r4171;
	// end inline asm
	// begin inline asm
	mov.b32 %r4178, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4179, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4180, %r3992, %r4178;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4183, %r4180, %r4179;
	// end inline asm
	// begin inline asm
	mov.b32 %r4186, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4187, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4188, %r3995, %r4186;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4191, %r4188, %r4187;
	// end inline asm
	// begin inline asm
	mov.b32 %r4194, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4195, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4196, %r3998, %r4194;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4199, %r4196, %r4195;
	// end inline asm
	// begin inline asm
	mov.b32 %r4202, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4203, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4204, %r4001, %r4202;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4207, %r4204, %r4203;
	// end inline asm
	// begin inline asm
	mov.b32 %r4210, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4211, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4212, %r4004, %r4210;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4215, %r4212, %r4211;
	// end inline asm
	// begin inline asm
	mov.b32 %r4218, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4219, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4220, %r4007, %r4218;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4223, %r4220, %r4219;
	// end inline asm
	// begin inline asm
	mov.b32 %r4226, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4227, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4228, %r4010, %r4226;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4231, %r4228, %r4227;
	// end inline asm
	// begin inline asm
	mov.b32 %r4234, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4235, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4236, %r4013, %r4234;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4239, %r4236, %r4235;
	// end inline asm
	// begin inline asm
	mov.b32 %r4242, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4243, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4244, %r4016, %r4242;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4247, %r4244, %r4243;
	// end inline asm
	// begin inline asm
	mov.b32 %r4250, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4251, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4252, %r4019, %r4250;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4255, %r4252, %r4251;
	// end inline asm
	// begin inline asm
	mov.b32 %r4258, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4259, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4260, %r4022, %r4258;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4263, %r4260, %r4259;
	// end inline asm
	// begin inline asm
	mov.b32 %r4266, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4267, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4268, %r4025, %r4266;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4271, %r4268, %r4267;
	// end inline asm
	// begin inline asm
	mov.b32 %r4274, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4275, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4276, %r4028, %r4274;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4279, %r4276, %r4275;
	// end inline asm
	// begin inline asm
	mov.b32 %r4282, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4283, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4284, %r4031, %r4282;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4287, %r4284, %r4283;
	// end inline asm
	// begin inline asm
	mov.b32 %r4293, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4291, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4292, %r4293, %r4291;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4295, %r4039, %r4292;
	// end inline asm
	// begin inline asm
	mov.b32 %r4298, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4299, %r4293, %r4298;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4302, %r4047, %r4299;
	// end inline asm
	// begin inline asm
	mov.b32 %r4305, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4306, %r4293, %r4305;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4309, %r4055, %r4306;
	// end inline asm
	// begin inline asm
	mov.b32 %r4312, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4313, %r4293, %r4312;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4316, %r4063, %r4313;
	// end inline asm
	mov.u32 	%r4322, 25152;
	// begin inline asm
	prmt.b32 %r4319, %r4295, %r4309, %r4322;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4323, %r4302, %r4316, %r4322;
	// end inline asm
	shl.b32 	%r4330, %r4323, 4;
	mov.u32 	%r4328, 252645135;
	// begin inline asm
	lop3.b32 %r4327, %r4328, %r4319, %r4330, 202;
	// end inline asm
	xor.b32  	%r16074, %r4327, -2004318072;
	// begin inline asm
	mov.b32 %r4334, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4332, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4333, %r4334, %r4332;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4336, %r4071, %r4333;
	// end inline asm
	// begin inline asm
	mov.b32 %r4339, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4340, %r4334, %r4339;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4343, %r4079, %r4340;
	// end inline asm
	// begin inline asm
	mov.b32 %r4346, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4347, %r4334, %r4346;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4350, %r4087, %r4347;
	// end inline asm
	// begin inline asm
	mov.b32 %r4353, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4354, %r4334, %r4353;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4357, %r4095, %r4354;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4360, %r4336, %r4350, %r4322;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4364, %r4343, %r4357, %r4322;
	// end inline asm
	shl.b32 	%r4371, %r4364, 4;
	// begin inline asm
	lop3.b32 %r4368, %r4328, %r4360, %r4371, 202;
	// end inline asm
	xor.b32  	%r16075, %r4368, -2004318072;
	// begin inline asm
	mov.b32 %r4375, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4373, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4374, %r4375, %r4373;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4377, %r4103, %r4374;
	// end inline asm
	// begin inline asm
	mov.b32 %r4380, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4381, %r4375, %r4380;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4384, %r4111, %r4381;
	// end inline asm
	// begin inline asm
	mov.b32 %r4387, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4388, %r4375, %r4387;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4391, %r4119, %r4388;
	// end inline asm
	// begin inline asm
	mov.b32 %r4394, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4395, %r4375, %r4394;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4398, %r4127, %r4395;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4401, %r4377, %r4391, %r4322;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4405, %r4384, %r4398, %r4322;
	// end inline asm
	shl.b32 	%r4412, %r4405, 4;
	// begin inline asm
	lop3.b32 %r4409, %r4328, %r4401, %r4412, 202;
	// end inline asm
	xor.b32  	%r16076, %r4409, -2004318072;
	// begin inline asm
	mov.b32 %r4416, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4414, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4415, %r4416, %r4414;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4418, %r4135, %r4415;
	// end inline asm
	// begin inline asm
	mov.b32 %r4421, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4422, %r4416, %r4421;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4425, %r4143, %r4422;
	// end inline asm
	// begin inline asm
	mov.b32 %r4428, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4429, %r4416, %r4428;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4432, %r4151, %r4429;
	// end inline asm
	// begin inline asm
	mov.b32 %r4435, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4436, %r4416, %r4435;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4439, %r4159, %r4436;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4442, %r4418, %r4432, %r4322;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4446, %r4425, %r4439, %r4322;
	// end inline asm
	shl.b32 	%r4453, %r4446, 4;
	// begin inline asm
	lop3.b32 %r4450, %r4328, %r4442, %r4453, 202;
	// end inline asm
	xor.b32  	%r16077, %r4450, -2004318072;
	// begin inline asm
	mov.b32 %r4457, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4455, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4456, %r4457, %r4455;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4459, %r4167, %r4456;
	// end inline asm
	// begin inline asm
	mov.b32 %r4462, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4463, %r4457, %r4462;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4466, %r4175, %r4463;
	// end inline asm
	// begin inline asm
	mov.b32 %r4469, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4470, %r4457, %r4469;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4473, %r4183, %r4470;
	// end inline asm
	// begin inline asm
	mov.b32 %r4476, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4477, %r4457, %r4476;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4480, %r4191, %r4477;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4483, %r4459, %r4473, %r4322;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4487, %r4466, %r4480, %r4322;
	// end inline asm
	shl.b32 	%r4494, %r4487, 4;
	// begin inline asm
	lop3.b32 %r4491, %r4328, %r4483, %r4494, 202;
	// end inline asm
	xor.b32  	%r16078, %r4491, -2004318072;
	// begin inline asm
	mov.b32 %r4498, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4496, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4497, %r4498, %r4496;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4500, %r4199, %r4497;
	// end inline asm
	// begin inline asm
	mov.b32 %r4503, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4504, %r4498, %r4503;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4507, %r4207, %r4504;
	// end inline asm
	// begin inline asm
	mov.b32 %r4510, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4511, %r4498, %r4510;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4514, %r4215, %r4511;
	// end inline asm
	// begin inline asm
	mov.b32 %r4517, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4518, %r4498, %r4517;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4521, %r4223, %r4518;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4524, %r4500, %r4514, %r4322;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4528, %r4507, %r4521, %r4322;
	// end inline asm
	shl.b32 	%r4535, %r4528, 4;
	// begin inline asm
	lop3.b32 %r4532, %r4328, %r4524, %r4535, 202;
	// end inline asm
	xor.b32  	%r16079, %r4532, -2004318072;
	// begin inline asm
	mov.b32 %r4539, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4537, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4538, %r4539, %r4537;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4541, %r4231, %r4538;
	// end inline asm
	// begin inline asm
	mov.b32 %r4544, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4545, %r4539, %r4544;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4548, %r4239, %r4545;
	// end inline asm
	// begin inline asm
	mov.b32 %r4551, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4552, %r4539, %r4551;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4555, %r4247, %r4552;
	// end inline asm
	// begin inline asm
	mov.b32 %r4558, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4559, %r4539, %r4558;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4562, %r4255, %r4559;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4565, %r4541, %r4555, %r4322;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4569, %r4548, %r4562, %r4322;
	// end inline asm
	shl.b32 	%r4576, %r4569, 4;
	// begin inline asm
	lop3.b32 %r4573, %r4328, %r4565, %r4576, 202;
	// end inline asm
	xor.b32  	%r16080, %r4573, -2004318072;
	// begin inline asm
	mov.b32 %r4580, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4578, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4579, %r4580, %r4578;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4582, %r4263, %r4579;
	// end inline asm
	// begin inline asm
	mov.b32 %r4585, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4586, %r4580, %r4585;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4589, %r4271, %r4586;
	// end inline asm
	// begin inline asm
	mov.b32 %r4592, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4593, %r4580, %r4592;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4596, %r4279, %r4593;
	// end inline asm
	// begin inline asm
	mov.b32 %r4599, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4600, %r4580, %r4599;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4603, %r4287, %r4600;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4606, %r4582, %r4596, %r4322;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4610, %r4589, %r4603, %r4322;
	// end inline asm
	shl.b32 	%r4617, %r4610, 4;
	// begin inline asm
	lop3.b32 %r4614, %r4328, %r4606, %r4617, 202;
	// end inline asm
	xor.b32  	%r16081, %r4614, -2004318072;
	add.s64 	%rd82, %rd94, %rd24;
	st.shared.u32 	[%rd82], %r16074;
	add.s64 	%rd83, %rd94, %rd23;
	st.shared.u32 	[%rd83], %r16075;
	add.s64 	%rd84, %rd94, %rd22;
	st.shared.u32 	[%rd84], %r16076;
	add.s64 	%rd85, %rd94, %rd21;
	st.shared.u32 	[%rd85], %r16077;
	add.s64 	%rd86, %rd94, %rd20;
	st.shared.u32 	[%rd86], %r16078;
	add.s64 	%rd87, %rd94, %rd19;
	st.shared.u32 	[%rd87], %r16079;
	add.s64 	%rd88, %rd94, %rd18;
	st.shared.u32 	[%rd88], %r16080;
	add.s64 	%rd89, %rd94, %rd17;
	st.shared.u32 	[%rd89], %r16081;
	ld.shared.u32 	%r16200, [%rd74];
	ld.shared.u32 	%r16201, [%rd75];
	ld.shared.u32 	%r16202, [%rd76];
	ld.shared.u32 	%r16203, [%rd77];
	ld.shared.u32 	%r16212, [%rd78];
	ld.shared.u32 	%r16213, [%rd79];
	ld.shared.u32 	%r16214, [%rd80];
	ld.shared.u32 	%r16215, [%rd81];
	// begin inline asm
	mov.b32 %r4623, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4634, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4622, %r16200, -2004318072;
	// begin inline asm
	lop3.b32 %r4620, %r805, %r4622, %r4623, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4624, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4625, %r4623, %r4624;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4628, %r4620, %r4625;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4631, %r816, %r4622, %r4634, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4635, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4636, %r4634, %r4635;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4639, %r4631, %r4636;
	// end inline asm
	shr.u32 	%r4644, %r4622, 8;
	// begin inline asm
	lop3.b32 %r4642, %r805, %r4644, %r4623, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4646, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4647, %r4623, %r4646;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4650, %r4642, %r4647;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4653, %r816, %r4644, %r4634, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4657, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4658, %r4634, %r4657;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4661, %r4653, %r4658;
	// end inline asm
	// begin inline asm
	mov.b32 %r4669, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4680, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4668, %r16201, -2004318072;
	// begin inline asm
	lop3.b32 %r4666, %r805, %r4668, %r4669, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4670, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4671, %r4669, %r4670;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4674, %r4666, %r4671;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4677, %r816, %r4668, %r4680, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4681, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4682, %r4680, %r4681;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4685, %r4677, %r4682;
	// end inline asm
	shr.u32 	%r4690, %r4668, 8;
	// begin inline asm
	lop3.b32 %r4688, %r805, %r4690, %r4669, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4692, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4693, %r4669, %r4692;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4696, %r4688, %r4693;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4699, %r816, %r4690, %r4680, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4703, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4704, %r4680, %r4703;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4707, %r4699, %r4704;
	// end inline asm
	// begin inline asm
	mov.b32 %r4715, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4726, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4714, %r16202, -2004318072;
	// begin inline asm
	lop3.b32 %r4712, %r805, %r4714, %r4715, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4716, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4717, %r4715, %r4716;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4720, %r4712, %r4717;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4723, %r816, %r4714, %r4726, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4727, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4728, %r4726, %r4727;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4731, %r4723, %r4728;
	// end inline asm
	shr.u32 	%r4736, %r4714, 8;
	// begin inline asm
	lop3.b32 %r4734, %r805, %r4736, %r4715, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4738, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4739, %r4715, %r4738;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4742, %r4734, %r4739;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4745, %r816, %r4736, %r4726, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4749, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4750, %r4726, %r4749;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4753, %r4745, %r4750;
	// end inline asm
	// begin inline asm
	mov.b32 %r4761, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4772, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4760, %r16203, -2004318072;
	// begin inline asm
	lop3.b32 %r4758, %r805, %r4760, %r4761, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4762, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4763, %r4761, %r4762;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4766, %r4758, %r4763;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4769, %r816, %r4760, %r4772, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4773, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4774, %r4772, %r4773;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4777, %r4769, %r4774;
	// end inline asm
	shr.u32 	%r4782, %r4760, 8;
	// begin inline asm
	lop3.b32 %r4780, %r805, %r4782, %r4761, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4784, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4785, %r4761, %r4784;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4788, %r4780, %r4785;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4791, %r816, %r4782, %r4772, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4795, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4796, %r4772, %r4795;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4799, %r4791, %r4796;
	// end inline asm
	// begin inline asm
	mov.b32 %r4807, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4818, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4806, %r16212, -2004318072;
	// begin inline asm
	lop3.b32 %r4804, %r805, %r4806, %r4807, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4808, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4809, %r4807, %r4808;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4812, %r4804, %r4809;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4815, %r816, %r4806, %r4818, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4819, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4820, %r4818, %r4819;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4823, %r4815, %r4820;
	// end inline asm
	shr.u32 	%r4828, %r4806, 8;
	// begin inline asm
	lop3.b32 %r4826, %r805, %r4828, %r4807, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4830, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4831, %r4807, %r4830;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4834, %r4826, %r4831;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4837, %r816, %r4828, %r4818, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4841, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4842, %r4818, %r4841;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4845, %r4837, %r4842;
	// end inline asm
	// begin inline asm
	mov.b32 %r4853, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4864, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4852, %r16213, -2004318072;
	// begin inline asm
	lop3.b32 %r4850, %r805, %r4852, %r4853, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4854, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4855, %r4853, %r4854;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4858, %r4850, %r4855;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4861, %r816, %r4852, %r4864, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4865, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4866, %r4864, %r4865;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4869, %r4861, %r4866;
	// end inline asm
	shr.u32 	%r4874, %r4852, 8;
	// begin inline asm
	lop3.b32 %r4872, %r805, %r4874, %r4853, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4876, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4877, %r4853, %r4876;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4880, %r4872, %r4877;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4883, %r816, %r4874, %r4864, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4887, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4888, %r4864, %r4887;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4891, %r4883, %r4888;
	// end inline asm
	// begin inline asm
	mov.b32 %r4899, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4910, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4898, %r16214, -2004318072;
	// begin inline asm
	lop3.b32 %r4896, %r805, %r4898, %r4899, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4900, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4901, %r4899, %r4900;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4904, %r4896, %r4901;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4907, %r816, %r4898, %r4910, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4911, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4912, %r4910, %r4911;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4915, %r4907, %r4912;
	// end inline asm
	shr.u32 	%r4920, %r4898, 8;
	// begin inline asm
	lop3.b32 %r4918, %r805, %r4920, %r4899, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4922, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4923, %r4899, %r4922;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4926, %r4918, %r4923;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4929, %r816, %r4920, %r4910, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4933, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4934, %r4910, %r4933;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4937, %r4929, %r4934;
	// end inline asm
	// begin inline asm
	mov.b32 %r4945, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4956, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4944, %r16215, -2004318072;
	// begin inline asm
	lop3.b32 %r4942, %r805, %r4944, %r4945, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4946, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4947, %r4945, %r4946;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4950, %r4942, %r4947;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4953, %r816, %r4944, %r4956, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4957, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4958, %r4956, %r4957;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4961, %r4953, %r4958;
	// end inline asm
	shr.u32 	%r4966, %r4944, 8;
	// begin inline asm
	lop3.b32 %r4964, %r805, %r4966, %r4945, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4968, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4969, %r4945, %r4968;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4972, %r4964, %r4969;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4975, %r816, %r4966, %r4956, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4979, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4980, %r4956, %r4979;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4983, %r4975, %r4980;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4986, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4988, %r4986, %r4628;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4991, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4993, %r4991, %r4639;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4996, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4998, %r4996, %r4650;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5001, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5003, %r5001, %r4661;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5006, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5008, %r5006, %r4674;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5011, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5013, %r5011, %r4685;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5016, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5018, %r5016, %r4696;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5021, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5023, %r5021, %r4707;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5026, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5028, %r5026, %r4720;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5031, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5033, %r5031, %r4731;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5036, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5038, %r5036, %r4742;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5041, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5043, %r5041, %r4753;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5046, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5048, %r5046, %r4766;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5051, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5053, %r5051, %r4777;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5056, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5058, %r5056, %r4788;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5061, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5063, %r5061, %r4799;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5066, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5068, %r5066, %r4812;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5071, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5073, %r5071, %r4823;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5076, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5078, %r5076, %r4834;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5081, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5083, %r5081, %r4845;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5086, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5088, %r5086, %r4858;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5091, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5093, %r5091, %r4869;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5096, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5098, %r5096, %r4880;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5101, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5103, %r5101, %r4891;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5106, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5108, %r5106, %r4904;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5111, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5113, %r5111, %r4915;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5116, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5118, %r5116, %r4926;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5121, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5123, %r5121, %r4937;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5126, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5128, %r5126, %r4950;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5131, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5133, %r5131, %r4961;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5136, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5138, %r5136, %r4972;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5141, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5143, %r5141, %r4983;
	// end inline asm
	// begin inline asm
	mov.b32 %r5151, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5162, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5148, %r805, %r1830, %r5151, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5152, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5153, %r5151, %r5152;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5156, %r5148, %r5153;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5159, %r816, %r1830, %r5162, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5163, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5164, %r5162, %r5163;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5167, %r5159, %r5164;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5170, %r805, %r1852, %r5151, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5174, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5175, %r5151, %r5174;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5178, %r5170, %r5175;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5181, %r816, %r1852, %r5162, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5185, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5186, %r5162, %r5185;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5189, %r5181, %r5186;
	// end inline asm
	// begin inline asm
	mov.b32 %r5197, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5208, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5194, %r805, %r1876, %r5197, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5198, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5199, %r5197, %r5198;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5202, %r5194, %r5199;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5205, %r816, %r1876, %r5208, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5209, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5210, %r5208, %r5209;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5213, %r5205, %r5210;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5216, %r805, %r1898, %r5197, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5220, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5221, %r5197, %r5220;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5224, %r5216, %r5221;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5227, %r816, %r1898, %r5208, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5231, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5232, %r5208, %r5231;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5235, %r5227, %r5232;
	// end inline asm
	// begin inline asm
	mov.b32 %r5243, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5254, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5240, %r805, %r1922, %r5243, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5244, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5245, %r5243, %r5244;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5248, %r5240, %r5245;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5251, %r816, %r1922, %r5254, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5255, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5256, %r5254, %r5255;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5259, %r5251, %r5256;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5262, %r805, %r1944, %r5243, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5266, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5267, %r5243, %r5266;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5270, %r5262, %r5267;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5273, %r816, %r1944, %r5254, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5277, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5278, %r5254, %r5277;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5281, %r5273, %r5278;
	// end inline asm
	// begin inline asm
	mov.b32 %r5289, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5300, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5286, %r805, %r1968, %r5289, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5290, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5291, %r5289, %r5290;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5294, %r5286, %r5291;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5297, %r816, %r1968, %r5300, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5301, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5302, %r5300, %r5301;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5305, %r5297, %r5302;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5308, %r805, %r1990, %r5289, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5312, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5313, %r5289, %r5312;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5316, %r5308, %r5313;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5319, %r816, %r1990, %r5300, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5323, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5324, %r5300, %r5323;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5327, %r5319, %r5324;
	// end inline asm
	// begin inline asm
	mov.b32 %r5335, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5346, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5332, %r805, %r2014, %r5335, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5336, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5337, %r5335, %r5336;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5340, %r5332, %r5337;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5343, %r816, %r2014, %r5346, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5347, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5348, %r5346, %r5347;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5351, %r5343, %r5348;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5354, %r805, %r2036, %r5335, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5358, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5359, %r5335, %r5358;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5362, %r5354, %r5359;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5365, %r816, %r2036, %r5346, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5369, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5370, %r5346, %r5369;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5373, %r5365, %r5370;
	// end inline asm
	// begin inline asm
	mov.b32 %r5381, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5392, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5378, %r805, %r2060, %r5381, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5382, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5383, %r5381, %r5382;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5386, %r5378, %r5383;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5389, %r816, %r2060, %r5392, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5393, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5394, %r5392, %r5393;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5397, %r5389, %r5394;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5400, %r805, %r2082, %r5381, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5404, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5405, %r5381, %r5404;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5408, %r5400, %r5405;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5411, %r816, %r2082, %r5392, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5415, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5416, %r5392, %r5415;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5419, %r5411, %r5416;
	// end inline asm
	// begin inline asm
	mov.b32 %r5427, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5438, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5424, %r805, %r2106, %r5427, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5428, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5429, %r5427, %r5428;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5432, %r5424, %r5429;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5435, %r816, %r2106, %r5438, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5439, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5440, %r5438, %r5439;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5443, %r5435, %r5440;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5446, %r805, %r2128, %r5427, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5450, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5451, %r5427, %r5450;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5454, %r5446, %r5451;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5457, %r816, %r2128, %r5438, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5461, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5462, %r5438, %r5461;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5465, %r5457, %r5462;
	// end inline asm
	// begin inline asm
	mov.b32 %r5473, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5484, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5470, %r805, %r2152, %r5473, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5474, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5475, %r5473, %r5474;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5478, %r5470, %r5475;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5481, %r816, %r2152, %r5484, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5485, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5486, %r5484, %r5485;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5489, %r5481, %r5486;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5492, %r805, %r2174, %r5473, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5496, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5497, %r5473, %r5496;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5500, %r5492, %r5497;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5503, %r816, %r2174, %r5484, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5507, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5508, %r5484, %r5507;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5511, %r5503, %r5508;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5514, %r272, %r5156, %r4988;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5518, %r272, %r5167, %r4993;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5522, %r272, %r5178, %r4998;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5526, %r272, %r5189, %r5003;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5530, %r272, %r5202, %r5008;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5534, %r272, %r5213, %r5013;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5538, %r272, %r5224, %r5018;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5542, %r272, %r5235, %r5023;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5546, %r272, %r5248, %r5028;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5550, %r272, %r5259, %r5033;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5554, %r272, %r5270, %r5038;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5558, %r272, %r5281, %r5043;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5562, %r272, %r5294, %r5048;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5566, %r272, %r5305, %r5053;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5570, %r272, %r5316, %r5058;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5574, %r272, %r5327, %r5063;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5578, %r290, %r5340, %r5068;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5582, %r290, %r5351, %r5073;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5586, %r290, %r5362, %r5078;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5590, %r290, %r5373, %r5083;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5594, %r290, %r5386, %r5088;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5598, %r290, %r5397, %r5093;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5602, %r290, %r5408, %r5098;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5606, %r290, %r5419, %r5103;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5610, %r290, %r5432, %r5108;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5614, %r290, %r5443, %r5113;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5618, %r290, %r5454, %r5118;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5622, %r290, %r5465, %r5123;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5626, %r290, %r5478, %r5128;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5630, %r290, %r5489, %r5133;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5634, %r290, %r5500, %r5138;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5638, %r290, %r5511, %r5143;
	// end inline asm
	// begin inline asm
	mov.b32 %r5647, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5658, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5644, %r805, %r2390, %r5647, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5648, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5649, %r5647, %r5648;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5652, %r5644, %r5649;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5655, %r816, %r2390, %r5658, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5659, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5660, %r5658, %r5659;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5663, %r5655, %r5660;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5666, %r805, %r2412, %r5647, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5670, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5671, %r5647, %r5670;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5674, %r5666, %r5671;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5677, %r816, %r2412, %r5658, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5681, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5682, %r5658, %r5681;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5685, %r5677, %r5682;
	// end inline asm
	// begin inline asm
	mov.b32 %r5693, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5704, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5690, %r805, %r2436, %r5693, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5694, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5695, %r5693, %r5694;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5698, %r5690, %r5695;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5701, %r816, %r2436, %r5704, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5705, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5706, %r5704, %r5705;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5709, %r5701, %r5706;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5712, %r805, %r2458, %r5693, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5716, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5717, %r5693, %r5716;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5720, %r5712, %r5717;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5723, %r816, %r2458, %r5704, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5727, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5728, %r5704, %r5727;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5731, %r5723, %r5728;
	// end inline asm
	// begin inline asm
	mov.b32 %r5739, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5750, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5736, %r805, %r2482, %r5739, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5740, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5741, %r5739, %r5740;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5744, %r5736, %r5741;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5747, %r816, %r2482, %r5750, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5751, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5752, %r5750, %r5751;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5755, %r5747, %r5752;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5758, %r805, %r2504, %r5739, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5762, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5763, %r5739, %r5762;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5766, %r5758, %r5763;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5769, %r816, %r2504, %r5750, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5773, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5774, %r5750, %r5773;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5777, %r5769, %r5774;
	// end inline asm
	// begin inline asm
	mov.b32 %r5785, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5796, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5782, %r805, %r2528, %r5785, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5786, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5787, %r5785, %r5786;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5790, %r5782, %r5787;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5793, %r816, %r2528, %r5796, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5797, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5798, %r5796, %r5797;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5801, %r5793, %r5798;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5804, %r805, %r2550, %r5785, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5808, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5809, %r5785, %r5808;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5812, %r5804, %r5809;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5815, %r816, %r2550, %r5796, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5819, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5820, %r5796, %r5819;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5823, %r5815, %r5820;
	// end inline asm
	// begin inline asm
	mov.b32 %r5831, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5842, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5828, %r805, %r2574, %r5831, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5832, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5833, %r5831, %r5832;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5836, %r5828, %r5833;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5839, %r816, %r2574, %r5842, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5843, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5844, %r5842, %r5843;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5847, %r5839, %r5844;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5850, %r805, %r2596, %r5831, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5854, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5855, %r5831, %r5854;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5858, %r5850, %r5855;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5861, %r816, %r2596, %r5842, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5865, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5866, %r5842, %r5865;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5869, %r5861, %r5866;
	// end inline asm
	// begin inline asm
	mov.b32 %r5877, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5888, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5874, %r805, %r2620, %r5877, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5878, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5879, %r5877, %r5878;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5882, %r5874, %r5879;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5885, %r816, %r2620, %r5888, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5889, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5890, %r5888, %r5889;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5893, %r5885, %r5890;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5896, %r805, %r2642, %r5877, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5900, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5901, %r5877, %r5900;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5904, %r5896, %r5901;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5907, %r816, %r2642, %r5888, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5911, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5912, %r5888, %r5911;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5915, %r5907, %r5912;
	// end inline asm
	// begin inline asm
	mov.b32 %r5923, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5934, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5920, %r805, %r2666, %r5923, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5924, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5925, %r5923, %r5924;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5928, %r5920, %r5925;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5931, %r816, %r2666, %r5934, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5935, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5936, %r5934, %r5935;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5939, %r5931, %r5936;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5942, %r805, %r2688, %r5923, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5946, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5947, %r5923, %r5946;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5950, %r5942, %r5947;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5953, %r816, %r2688, %r5934, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5957, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5958, %r5934, %r5957;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5961, %r5953, %r5958;
	// end inline asm
	// begin inline asm
	mov.b32 %r5969, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5980, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5966, %r805, %r2712, %r5969, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5970, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5971, %r5969, %r5970;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5974, %r5966, %r5971;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5977, %r816, %r2712, %r5980, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5981, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5982, %r5980, %r5981;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5985, %r5977, %r5982;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5988, %r805, %r2734, %r5969, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5992, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5993, %r5969, %r5992;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5996, %r5988, %r5993;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5999, %r816, %r2734, %r5980, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6003, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6004, %r5980, %r6003;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6007, %r5999, %r6004;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6010, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6012, %r6010, %r5652, %r5514;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6016, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6018, %r6016, %r5663, %r5518;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6022, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6024, %r6022, %r5674, %r5522;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6028, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6030, %r6028, %r5685, %r5526;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6034, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6036, %r6034, %r5698, %r5530;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6040, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6042, %r6040, %r5709, %r5534;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6046, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6048, %r6046, %r5720, %r5538;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6052, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6054, %r6052, %r5731, %r5542;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6058, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6060, %r6058, %r5744, %r5546;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6064, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6066, %r6064, %r5755, %r5550;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6070, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6072, %r6070, %r5766, %r5554;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6076, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6078, %r6076, %r5777, %r5558;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6082, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6084, %r6082, %r5790, %r5562;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6088, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6090, %r6088, %r5801, %r5566;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6094, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6096, %r6094, %r5812, %r5570;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6100, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6102, %r6100, %r5823, %r5574;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6106, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6108, %r6106, %r5836, %r5578;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6112, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6114, %r6112, %r5847, %r5582;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6118, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6120, %r6118, %r5858, %r5586;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6124, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6126, %r6124, %r5869, %r5590;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6130, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6132, %r6130, %r5882, %r5594;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6136, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6138, %r6136, %r5893, %r5598;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6142, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6144, %r6142, %r5904, %r5602;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6148, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6150, %r6148, %r5915, %r5606;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6154, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6156, %r6154, %r5928, %r5610;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6160, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6162, %r6160, %r5939, %r5614;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6166, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6168, %r6166, %r5950, %r5618;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6172, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6174, %r6172, %r5961, %r5622;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6178, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6180, %r6178, %r5974, %r5626;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6184, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6186, %r6184, %r5985, %r5630;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6190, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6192, %r6190, %r5996, %r5634;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6196, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6198, %r6196, %r6007, %r5638;
	// end inline asm
	// begin inline asm
	mov.b32 %r6207, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6218, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6204, %r805, %r806, %r6207, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6208, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6209, %r6207, %r6208;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6212, %r6204, %r6209;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6215, %r816, %r806, %r6218, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6219, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6220, %r6218, %r6219;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6223, %r6215, %r6220;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6226, %r805, %r828, %r6207, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6230, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6231, %r6207, %r6230;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6234, %r6226, %r6231;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6237, %r816, %r828, %r6218, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6241, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6242, %r6218, %r6241;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6245, %r6237, %r6242;
	// end inline asm
	// begin inline asm
	mov.b32 %r6253, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6264, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6250, %r805, %r852, %r6253, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6254, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6255, %r6253, %r6254;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6258, %r6250, %r6255;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6261, %r816, %r852, %r6264, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6265, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6266, %r6264, %r6265;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6269, %r6261, %r6266;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6272, %r805, %r874, %r6253, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6276, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6277, %r6253, %r6276;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6280, %r6272, %r6277;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6283, %r816, %r874, %r6264, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6287, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6288, %r6264, %r6287;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6291, %r6283, %r6288;
	// end inline asm
	// begin inline asm
	mov.b32 %r6299, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6310, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6296, %r805, %r898, %r6299, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6300, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6301, %r6299, %r6300;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6304, %r6296, %r6301;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6307, %r816, %r898, %r6310, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6311, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6312, %r6310, %r6311;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6315, %r6307, %r6312;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6318, %r805, %r920, %r6299, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6322, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6323, %r6299, %r6322;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6326, %r6318, %r6323;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6329, %r816, %r920, %r6310, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6333, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6334, %r6310, %r6333;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6337, %r6329, %r6334;
	// end inline asm
	// begin inline asm
	mov.b32 %r6345, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6356, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6342, %r805, %r944, %r6345, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6346, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6347, %r6345, %r6346;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6350, %r6342, %r6347;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6353, %r816, %r944, %r6356, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6357, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6358, %r6356, %r6357;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6361, %r6353, %r6358;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6364, %r805, %r966, %r6345, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6368, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6369, %r6345, %r6368;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6372, %r6364, %r6369;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6375, %r816, %r966, %r6356, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6379, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6380, %r6356, %r6379;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6383, %r6375, %r6380;
	// end inline asm
	// begin inline asm
	mov.b32 %r6391, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6402, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6388, %r805, %r990, %r6391, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6392, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6393, %r6391, %r6392;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6396, %r6388, %r6393;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6399, %r816, %r990, %r6402, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6403, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6404, %r6402, %r6403;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6407, %r6399, %r6404;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6410, %r805, %r1012, %r6391, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6414, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6415, %r6391, %r6414;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6418, %r6410, %r6415;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6421, %r816, %r1012, %r6402, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6425, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6426, %r6402, %r6425;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6429, %r6421, %r6426;
	// end inline asm
	// begin inline asm
	mov.b32 %r6437, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6448, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6434, %r805, %r1036, %r6437, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6438, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6439, %r6437, %r6438;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6442, %r6434, %r6439;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6445, %r816, %r1036, %r6448, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6449, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6450, %r6448, %r6449;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6453, %r6445, %r6450;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6456, %r805, %r1058, %r6437, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6460, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6461, %r6437, %r6460;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6464, %r6456, %r6461;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6467, %r816, %r1058, %r6448, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6471, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6472, %r6448, %r6471;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6475, %r6467, %r6472;
	// end inline asm
	// begin inline asm
	mov.b32 %r6483, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6494, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6480, %r805, %r1082, %r6483, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6484, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6485, %r6483, %r6484;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6488, %r6480, %r6485;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6491, %r816, %r1082, %r6494, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6495, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6496, %r6494, %r6495;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6499, %r6491, %r6496;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6502, %r805, %r1104, %r6483, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6506, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6507, %r6483, %r6506;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6510, %r6502, %r6507;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6513, %r816, %r1104, %r6494, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6517, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6518, %r6494, %r6517;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6521, %r6513, %r6518;
	// end inline asm
	// begin inline asm
	mov.b32 %r6529, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6540, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6526, %r805, %r1128, %r6529, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6530, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6531, %r6529, %r6530;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6534, %r6526, %r6531;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6537, %r816, %r1128, %r6540, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6541, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6542, %r6540, %r6541;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6545, %r6537, %r6542;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6548, %r805, %r1150, %r6529, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6552, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6553, %r6529, %r6552;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6556, %r6548, %r6553;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6559, %r816, %r1150, %r6540, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6563, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6564, %r6540, %r6563;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6567, %r6559, %r6564;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6705, %r344, %r6212, %r6012;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6702, %r344, %r6223, %r6018;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6714, %r344, %r6234, %r6024;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6711, %r344, %r6245, %r6030;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6723, %r344, %r6258, %r6036;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6720, %r344, %r6269, %r6042;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6732, %r344, %r6280, %r6048;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6729, %r344, %r6291, %r6054;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6741, %r344, %r6304, %r6060;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6738, %r344, %r6315, %r6066;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6750, %r344, %r6326, %r6072;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6747, %r344, %r6337, %r6078;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6759, %r344, %r6350, %r6084;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6756, %r344, %r6361, %r6090;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6768, %r344, %r6372, %r6096;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6765, %r344, %r6383, %r6102;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6777, %r362, %r6396, %r6108;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6774, %r362, %r6407, %r6114;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6786, %r362, %r6418, %r6120;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6783, %r362, %r6429, %r6126;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6795, %r362, %r6442, %r6132;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6792, %r362, %r6453, %r6138;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6804, %r362, %r6464, %r6144;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6801, %r362, %r6475, %r6150;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6813, %r362, %r6488, %r6156;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6810, %r362, %r6499, %r6162;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6822, %r362, %r6510, %r6168;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6819, %r362, %r6521, %r6174;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6831, %r362, %r6534, %r6180;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6828, %r362, %r6545, %r6186;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6840, %r362, %r6556, %r6192;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6837, %r362, %r6567, %r6198;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6698, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6700, %r6698, %r6702;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6703, %r426, %r6705, %r6700;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6707, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6709, %r6707, %r6711;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6712, %r426, %r6714, %r6709;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6716, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6718, %r6716, %r6720;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6721, %r426, %r6723, %r6718;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6725, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6727, %r6725, %r6729;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6730, %r426, %r6732, %r6727;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6734, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6736, %r6734, %r6738;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6739, %r426, %r6741, %r6736;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6743, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6745, %r6743, %r6747;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6748, %r426, %r6750, %r6745;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6752, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6754, %r6752, %r6756;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6757, %r426, %r6759, %r6754;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6761, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6763, %r6761, %r6765;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6766, %r426, %r6768, %r6763;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6770, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6772, %r6770, %r6774;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6775, %r429, %r6777, %r6772;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6779, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6781, %r6779, %r6783;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6784, %r429, %r6786, %r6781;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6788, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6790, %r6788, %r6792;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6793, %r429, %r6795, %r6790;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6797, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6799, %r6797, %r6801;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6802, %r429, %r6804, %r6799;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6806, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6808, %r6806, %r6810;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6811, %r429, %r6813, %r6808;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6815, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6817, %r6815, %r6819;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6820, %r429, %r6822, %r6817;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6824, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6826, %r6824, %r6828;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6829, %r429, %r6831, %r6826;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6833, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6835, %r6833, %r6837;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6838, %r429, %r6840, %r6835;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6842, %r432, %r6705;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6845, %r426, %r6702, %r6842;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6849, %r432, %r6714;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6852, %r426, %r6711, %r6849;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6856, %r432, %r6723;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6859, %r426, %r6720, %r6856;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6863, %r432, %r6732;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6866, %r426, %r6729, %r6863;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6870, %r432, %r6741;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6873, %r426, %r6738, %r6870;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6877, %r432, %r6750;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6880, %r426, %r6747, %r6877;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6884, %r432, %r6759;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6887, %r426, %r6756, %r6884;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6891, %r432, %r6768;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6894, %r426, %r6765, %r6891;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6898, %r435, %r6777;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6901, %r429, %r6774, %r6898;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6905, %r435, %r6786;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6908, %r429, %r6783, %r6905;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6912, %r435, %r6795;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6915, %r429, %r6792, %r6912;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6919, %r435, %r6804;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6922, %r429, %r6801, %r6919;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6926, %r435, %r6813;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6929, %r429, %r6810, %r6926;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6933, %r435, %r6822;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6936, %r429, %r6819, %r6933;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6940, %r435, %r6831;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6943, %r429, %r6828, %r6940;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6947, %r435, %r6840;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6950, %r429, %r6837, %r6947;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7121, %r7118}, {%r474, %r480, %r477, %r483}, {%r6703, %r6845}, {%r15161, %r15161};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7130, %r7127}, {%r474, %r480, %r477, %r483}, {%r6712, %r6852}, {%r15161, %r15161};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7139, %r7136}, {%r474, %r480, %r477, %r483}, {%r6721, %r6859}, {%r15161, %r15161};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7148, %r7145}, {%r474, %r480, %r477, %r483}, {%r6730, %r6866}, {%r15161, %r15161};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7157, %r7154}, {%r474, %r480, %r477, %r483}, {%r6739, %r6873}, {%r15161, %r15161};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7166, %r7163}, {%r474, %r480, %r477, %r483}, {%r6748, %r6880}, {%r15161, %r15161};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7175, %r7172}, {%r474, %r480, %r477, %r483}, {%r6757, %r6887}, {%r15161, %r15161};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7184, %r7181}, {%r474, %r480, %r477, %r483}, {%r6766, %r6894}, {%r15161, %r15161};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7193, %r7190}, {%r474, %r480, %r477, %r483}, {%r6775, %r6901}, {%r15161, %r15161};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7202, %r7199}, {%r474, %r480, %r477, %r483}, {%r6784, %r6908}, {%r15161, %r15161};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7211, %r7208}, {%r474, %r480, %r477, %r483}, {%r6793, %r6915}, {%r15161, %r15161};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7220, %r7217}, {%r474, %r480, %r477, %r483}, {%r6802, %r6922}, {%r15161, %r15161};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7229, %r7226}, {%r474, %r480, %r477, %r483}, {%r6811, %r6929}, {%r15161, %r15161};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7238, %r7235}, {%r474, %r480, %r477, %r483}, {%r6820, %r6936}, {%r15161, %r15161};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7247, %r7244}, {%r474, %r480, %r477, %r483}, {%r6829, %r6943}, {%r15161, %r15161};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7256, %r7253}, {%r474, %r480, %r477, %r483}, {%r6838, %r6950}, {%r15161, %r15161};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7114, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7116, %r7114, %r7118;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7119, %r521, %r7121, %r7116;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7123, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7125, %r7123, %r7127;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7128, %r521, %r7130, %r7125;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7132, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7134, %r7132, %r7136;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7137, %r521, %r7139, %r7134;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7141, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7143, %r7141, %r7145;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7146, %r521, %r7148, %r7143;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7150, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7152, %r7150, %r7154;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7155, %r521, %r7157, %r7152;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7159, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7161, %r7159, %r7163;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7164, %r521, %r7166, %r7161;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7168, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7170, %r7168, %r7172;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7173, %r521, %r7175, %r7170;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7177, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7179, %r7177, %r7181;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7182, %r521, %r7184, %r7179;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7186, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7188, %r7186, %r7190;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7191, %r521, %r7193, %r7188;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7195, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7197, %r7195, %r7199;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7200, %r521, %r7202, %r7197;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7204, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7206, %r7204, %r7208;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7209, %r521, %r7211, %r7206;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7213, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7215, %r7213, %r7217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7218, %r521, %r7220, %r7215;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7222, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7224, %r7222, %r7226;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7227, %r521, %r7229, %r7224;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7231, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7233, %r7231, %r7235;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7236, %r521, %r7238, %r7233;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7240, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7242, %r7240, %r7244;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7245, %r521, %r7247, %r7242;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7249, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7251, %r7249, %r7253;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7254, %r521, %r7256, %r7251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7258, %r524, %r7121;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7261, %r521, %r7118, %r7258;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7265, %r524, %r7130;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7268, %r521, %r7127, %r7265;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7272, %r524, %r7139;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7275, %r521, %r7136, %r7272;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7279, %r524, %r7148;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7282, %r521, %r7145, %r7279;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7286, %r524, %r7157;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7289, %r521, %r7154, %r7286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7293, %r524, %r7166;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7296, %r521, %r7163, %r7293;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7300, %r524, %r7175;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7303, %r521, %r7172, %r7300;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7307, %r524, %r7184;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7310, %r521, %r7181, %r7307;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7314, %r524, %r7193;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7317, %r521, %r7190, %r7314;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7321, %r524, %r7202;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7324, %r521, %r7199, %r7321;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7328, %r524, %r7211;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7331, %r521, %r7208, %r7328;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7335, %r524, %r7220;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7338, %r521, %r7217, %r7335;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7342, %r524, %r7229;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7345, %r521, %r7226, %r7342;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7349, %r524, %r7238;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7352, %r521, %r7235, %r7349;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7356, %r524, %r7247;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7359, %r521, %r7244, %r7356;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7363, %r524, %r7256;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7366, %r521, %r7253, %r7363;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7659, %r7662}, {%r564, %r570, %r567, %r573}, {%r7119, %r7261}, {%r15161, %r15161};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7665, %r7668}, {%r564, %r570, %r567, %r573}, {%r7128, %r7268}, {%r15161, %r15161};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7671, %r7674}, {%r564, %r570, %r567, %r573}, {%r7137, %r7275}, {%r15161, %r15161};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7677, %r7680}, {%r564, %r570, %r567, %r573}, {%r7146, %r7282}, {%r15161, %r15161};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7683, %r7686}, {%r564, %r570, %r567, %r573}, {%r7155, %r7289}, {%r15161, %r15161};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7689, %r7692}, {%r564, %r570, %r567, %r573}, {%r7164, %r7296}, {%r15161, %r15161};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7695, %r7698}, {%r564, %r570, %r567, %r573}, {%r7173, %r7303}, {%r15161, %r15161};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7701, %r7704}, {%r564, %r570, %r567, %r573}, {%r7182, %r7310}, {%r15161, %r15161};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7660, %r7663}, {%r564, %r570, %r567, %r573}, {%r7191, %r7317}, {%r15161, %r15161};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7666, %r7669}, {%r564, %r570, %r567, %r573}, {%r7200, %r7324}, {%r15161, %r15161};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7672, %r7675}, {%r564, %r570, %r567, %r573}, {%r7209, %r7331}, {%r15161, %r15161};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7678, %r7681}, {%r564, %r570, %r567, %r573}, {%r7218, %r7338}, {%r15161, %r15161};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7684, %r7687}, {%r564, %r570, %r567, %r573}, {%r7227, %r7345}, {%r15161, %r15161};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7690, %r7693}, {%r564, %r570, %r567, %r573}, {%r7236, %r7352}, {%r15161, %r15161};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7696, %r7699}, {%r564, %r570, %r567, %r573}, {%r7245, %r7359}, {%r15161, %r15161};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7702, %r7705}, {%r564, %r570, %r567, %r573}, {%r7254, %r7366}, {%r15161, %r15161};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7658, %r7659, %r7660;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7661, %r7662, %r7663;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7664, %r7665, %r7666;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7667, %r7668, %r7669;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7670, %r7671, %r7672;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7673, %r7674, %r7675;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7676, %r7677, %r7678;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7679, %r7680, %r7681;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7682, %r7683, %r7684;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7685, %r7686, %r7687;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7688, %r7689, %r7690;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7691, %r7692, %r7693;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7694, %r7695, %r7696;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7697, %r7698, %r7699;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7700, %r7701, %r7702;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7703, %r7704, %r7705;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7706, %r7659, %r7660;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7709, %r7662, %r7663;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7712, %r7665, %r7666;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7715, %r7668, %r7669;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7718, %r7671, %r7672;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7721, %r7674, %r7675;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7724, %r7677, %r7678;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7727, %r7680, %r7681;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7730, %r7683, %r7684;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7733, %r7686, %r7687;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7736, %r7689, %r7690;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7739, %r7692, %r7693;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7742, %r7695, %r7696;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7745, %r7698, %r7699;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7748, %r7701, %r7702;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7751, %r7704, %r7705;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7754, %r13, %r7658;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7757, %r13, %r7661;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7760, %r13, %r7664;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7763, %r13, %r7667;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7766, %r13, %r7670;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7769, %r13, %r7673;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7772, %r13, %r7676;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7775, %r13, %r7679;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7778, %r13, %r7682;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7781, %r13, %r7685;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7784, %r13, %r7688;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7787, %r13, %r7691;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7790, %r13, %r7694;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7793, %r13, %r7697;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7796, %r13, %r7700;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7799, %r13, %r7703;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7802, %r14, %r7706;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7805, %r14, %r7709;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7808, %r14, %r7712;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7811, %r14, %r7715;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7814, %r14, %r7718;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7817, %r14, %r7721;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7820, %r14, %r7724;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7823, %r14, %r7727;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7826, %r14, %r7730;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7829, %r14, %r7733;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7832, %r14, %r7736;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7835, %r14, %r7739;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7838, %r14, %r7742;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7841, %r14, %r7745;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7844, %r14, %r7748;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7847, %r14, %r7751;
	// end inline asm
	// begin inline asm
	mov.b32 %r7850, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7851, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7852, %r7754, %r7850;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7855, %r7852, %r7851;
	// end inline asm
	// begin inline asm
	mov.b32 %r7858, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7859, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7860, %r7757, %r7858;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7863, %r7860, %r7859;
	// end inline asm
	// begin inline asm
	mov.b32 %r7866, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7867, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7868, %r7760, %r7866;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7871, %r7868, %r7867;
	// end inline asm
	// begin inline asm
	mov.b32 %r7874, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7875, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7876, %r7763, %r7874;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7879, %r7876, %r7875;
	// end inline asm
	// begin inline asm
	mov.b32 %r7882, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7883, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7884, %r7766, %r7882;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7887, %r7884, %r7883;
	// end inline asm
	// begin inline asm
	mov.b32 %r7890, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7891, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7892, %r7769, %r7890;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7895, %r7892, %r7891;
	// end inline asm
	// begin inline asm
	mov.b32 %r7898, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7899, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7900, %r7772, %r7898;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7903, %r7900, %r7899;
	// end inline asm
	// begin inline asm
	mov.b32 %r7906, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7907, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7908, %r7775, %r7906;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7911, %r7908, %r7907;
	// end inline asm
	// begin inline asm
	mov.b32 %r7914, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7915, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7916, %r7778, %r7914;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7919, %r7916, %r7915;
	// end inline asm
	// begin inline asm
	mov.b32 %r7922, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7923, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7924, %r7781, %r7922;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7927, %r7924, %r7923;
	// end inline asm
	// begin inline asm
	mov.b32 %r7930, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7931, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7932, %r7784, %r7930;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7935, %r7932, %r7931;
	// end inline asm
	// begin inline asm
	mov.b32 %r7938, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7939, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7940, %r7787, %r7938;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7943, %r7940, %r7939;
	// end inline asm
	// begin inline asm
	mov.b32 %r7946, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7947, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7948, %r7790, %r7946;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7951, %r7948, %r7947;
	// end inline asm
	// begin inline asm
	mov.b32 %r7954, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7955, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7956, %r7793, %r7954;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7959, %r7956, %r7955;
	// end inline asm
	// begin inline asm
	mov.b32 %r7962, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7963, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7964, %r7796, %r7962;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7967, %r7964, %r7963;
	// end inline asm
	// begin inline asm
	mov.b32 %r7970, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7971, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7972, %r7799, %r7970;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7975, %r7972, %r7971;
	// end inline asm
	// begin inline asm
	mov.b32 %r7978, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7979, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7980, %r7802, %r7978;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7983, %r7980, %r7979;
	// end inline asm
	// begin inline asm
	mov.b32 %r7986, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7987, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7988, %r7805, %r7986;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7991, %r7988, %r7987;
	// end inline asm
	// begin inline asm
	mov.b32 %r7994, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7995, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7996, %r7808, %r7994;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7999, %r7996, %r7995;
	// end inline asm
	// begin inline asm
	mov.b32 %r8002, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8003, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8004, %r7811, %r8002;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8007, %r8004, %r8003;
	// end inline asm
	// begin inline asm
	mov.b32 %r8010, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8011, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8012, %r7814, %r8010;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8015, %r8012, %r8011;
	// end inline asm
	// begin inline asm
	mov.b32 %r8018, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8019, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8020, %r7817, %r8018;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8023, %r8020, %r8019;
	// end inline asm
	// begin inline asm
	mov.b32 %r8026, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8027, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8028, %r7820, %r8026;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8031, %r8028, %r8027;
	// end inline asm
	// begin inline asm
	mov.b32 %r8034, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8035, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8036, %r7823, %r8034;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8039, %r8036, %r8035;
	// end inline asm
	// begin inline asm
	mov.b32 %r8042, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8043, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8044, %r7826, %r8042;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8047, %r8044, %r8043;
	// end inline asm
	// begin inline asm
	mov.b32 %r8050, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8051, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8052, %r7829, %r8050;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8055, %r8052, %r8051;
	// end inline asm
	// begin inline asm
	mov.b32 %r8058, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8059, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8060, %r7832, %r8058;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8063, %r8060, %r8059;
	// end inline asm
	// begin inline asm
	mov.b32 %r8066, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8067, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8068, %r7835, %r8066;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8071, %r8068, %r8067;
	// end inline asm
	// begin inline asm
	mov.b32 %r8074, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8075, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8076, %r7838, %r8074;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8079, %r8076, %r8075;
	// end inline asm
	// begin inline asm
	mov.b32 %r8082, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8083, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8084, %r7841, %r8082;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8087, %r8084, %r8083;
	// end inline asm
	// begin inline asm
	mov.b32 %r8090, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8091, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8092, %r7844, %r8090;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8095, %r8092, %r8091;
	// end inline asm
	// begin inline asm
	mov.b32 %r8098, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8099, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8100, %r7847, %r8098;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8103, %r8100, %r8099;
	// end inline asm
	// begin inline asm
	mov.b32 %r8109, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8107, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8108, %r8109, %r8107;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8111, %r7855, %r8108;
	// end inline asm
	// begin inline asm
	mov.b32 %r8114, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8115, %r8109, %r8114;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8118, %r7863, %r8115;
	// end inline asm
	// begin inline asm
	mov.b32 %r8121, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8122, %r8109, %r8121;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8125, %r7871, %r8122;
	// end inline asm
	// begin inline asm
	mov.b32 %r8128, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8129, %r8109, %r8128;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8132, %r7879, %r8129;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8135, %r8111, %r8125, %r4322;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8139, %r8118, %r8132, %r4322;
	// end inline asm
	shl.b32 	%r8146, %r8139, 4;
	// begin inline asm
	lop3.b32 %r8143, %r4328, %r8135, %r8146, 202;
	// end inline asm
	xor.b32  	%r16082, %r8143, -2004318072;
	// begin inline asm
	mov.b32 %r8150, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8148, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8149, %r8150, %r8148;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8152, %r7887, %r8149;
	// end inline asm
	// begin inline asm
	mov.b32 %r8155, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8156, %r8150, %r8155;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8159, %r7895, %r8156;
	// end inline asm
	// begin inline asm
	mov.b32 %r8162, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8163, %r8150, %r8162;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8166, %r7903, %r8163;
	// end inline asm
	// begin inline asm
	mov.b32 %r8169, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8170, %r8150, %r8169;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8173, %r7911, %r8170;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8176, %r8152, %r8166, %r4322;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8180, %r8159, %r8173, %r4322;
	// end inline asm
	shl.b32 	%r8187, %r8180, 4;
	// begin inline asm
	lop3.b32 %r8184, %r4328, %r8176, %r8187, 202;
	// end inline asm
	xor.b32  	%r16083, %r8184, -2004318072;
	// begin inline asm
	mov.b32 %r8191, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8189, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8190, %r8191, %r8189;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8193, %r7919, %r8190;
	// end inline asm
	// begin inline asm
	mov.b32 %r8196, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8197, %r8191, %r8196;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8200, %r7927, %r8197;
	// end inline asm
	// begin inline asm
	mov.b32 %r8203, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8204, %r8191, %r8203;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8207, %r7935, %r8204;
	// end inline asm
	// begin inline asm
	mov.b32 %r8210, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8211, %r8191, %r8210;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8214, %r7943, %r8211;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8217, %r8193, %r8207, %r4322;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8221, %r8200, %r8214, %r4322;
	// end inline asm
	shl.b32 	%r8228, %r8221, 4;
	// begin inline asm
	lop3.b32 %r8225, %r4328, %r8217, %r8228, 202;
	// end inline asm
	xor.b32  	%r16084, %r8225, -2004318072;
	// begin inline asm
	mov.b32 %r8232, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8230, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8231, %r8232, %r8230;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8234, %r7951, %r8231;
	// end inline asm
	// begin inline asm
	mov.b32 %r8237, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8238, %r8232, %r8237;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8241, %r7959, %r8238;
	// end inline asm
	// begin inline asm
	mov.b32 %r8244, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8245, %r8232, %r8244;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8248, %r7967, %r8245;
	// end inline asm
	// begin inline asm
	mov.b32 %r8251, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8252, %r8232, %r8251;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8255, %r7975, %r8252;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8258, %r8234, %r8248, %r4322;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8262, %r8241, %r8255, %r4322;
	// end inline asm
	shl.b32 	%r8269, %r8262, 4;
	// begin inline asm
	lop3.b32 %r8266, %r4328, %r8258, %r8269, 202;
	// end inline asm
	xor.b32  	%r16085, %r8266, -2004318072;
	// begin inline asm
	mov.b32 %r8273, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8271, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8272, %r8273, %r8271;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8275, %r7983, %r8272;
	// end inline asm
	// begin inline asm
	mov.b32 %r8278, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8279, %r8273, %r8278;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8282, %r7991, %r8279;
	// end inline asm
	// begin inline asm
	mov.b32 %r8285, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8286, %r8273, %r8285;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8289, %r7999, %r8286;
	// end inline asm
	// begin inline asm
	mov.b32 %r8292, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8293, %r8273, %r8292;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8296, %r8007, %r8293;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8299, %r8275, %r8289, %r4322;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8303, %r8282, %r8296, %r4322;
	// end inline asm
	shl.b32 	%r8310, %r8303, 4;
	// begin inline asm
	lop3.b32 %r8307, %r4328, %r8299, %r8310, 202;
	// end inline asm
	xor.b32  	%r16086, %r8307, -2004318072;
	// begin inline asm
	mov.b32 %r8314, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8312, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8313, %r8314, %r8312;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8316, %r8015, %r8313;
	// end inline asm
	// begin inline asm
	mov.b32 %r8319, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8320, %r8314, %r8319;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8323, %r8023, %r8320;
	// end inline asm
	// begin inline asm
	mov.b32 %r8326, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8327, %r8314, %r8326;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8330, %r8031, %r8327;
	// end inline asm
	// begin inline asm
	mov.b32 %r8333, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8334, %r8314, %r8333;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8337, %r8039, %r8334;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8340, %r8316, %r8330, %r4322;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8344, %r8323, %r8337, %r4322;
	// end inline asm
	shl.b32 	%r8351, %r8344, 4;
	// begin inline asm
	lop3.b32 %r8348, %r4328, %r8340, %r8351, 202;
	// end inline asm
	xor.b32  	%r16087, %r8348, -2004318072;
	// begin inline asm
	mov.b32 %r8355, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8353, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8354, %r8355, %r8353;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8357, %r8047, %r8354;
	// end inline asm
	// begin inline asm
	mov.b32 %r8360, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8361, %r8355, %r8360;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8364, %r8055, %r8361;
	// end inline asm
	// begin inline asm
	mov.b32 %r8367, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8368, %r8355, %r8367;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8371, %r8063, %r8368;
	// end inline asm
	// begin inline asm
	mov.b32 %r8374, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8375, %r8355, %r8374;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8378, %r8071, %r8375;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8381, %r8357, %r8371, %r4322;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8385, %r8364, %r8378, %r4322;
	// end inline asm
	shl.b32 	%r8392, %r8385, 4;
	// begin inline asm
	lop3.b32 %r8389, %r4328, %r8381, %r8392, 202;
	// end inline asm
	xor.b32  	%r16088, %r8389, -2004318072;
	// begin inline asm
	mov.b32 %r8396, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8394, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8395, %r8396, %r8394;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8398, %r8079, %r8395;
	// end inline asm
	// begin inline asm
	mov.b32 %r8401, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8402, %r8396, %r8401;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8405, %r8087, %r8402;
	// end inline asm
	// begin inline asm
	mov.b32 %r8408, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8409, %r8396, %r8408;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8412, %r8095, %r8409;
	// end inline asm
	// begin inline asm
	mov.b32 %r8415, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8416, %r8396, %r8415;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8419, %r8103, %r8416;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8422, %r8398, %r8412, %r4322;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8426, %r8405, %r8419, %r4322;
	// end inline asm
	shl.b32 	%r8433, %r8426, 4;
	// begin inline asm
	lop3.b32 %r8430, %r4328, %r8422, %r8433, 202;
	// end inline asm
	xor.b32  	%r16089, %r8430, -2004318072;
	st.shared.u32 	[%rd82], %r16082;
	st.shared.u32 	[%rd83], %r16083;
	st.shared.u32 	[%rd84], %r16084;
	st.shared.u32 	[%rd85], %r16085;
	st.shared.u32 	[%rd86], %r16086;
	st.shared.u32 	[%rd87], %r16087;
	st.shared.u32 	[%rd88], %r16088;
	st.shared.u32 	[%rd89], %r16089;
	ld.shared.u32 	%r16204, [%rd74];
	ld.shared.u32 	%r16205, [%rd75];
	ld.shared.u32 	%r16206, [%rd76];
	ld.shared.u32 	%r16207, [%rd77];
	ld.shared.u32 	%r16216, [%rd78];
	ld.shared.u32 	%r16217, [%rd79];
	ld.shared.u32 	%r16218, [%rd80];
	ld.shared.u32 	%r16219, [%rd81];
	// begin inline asm
	mov.b32 %r8439, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8450, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8438, %r16204, -2004318072;
	// begin inline asm
	lop3.b32 %r8436, %r805, %r8438, %r8439, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8440, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8441, %r8439, %r8440;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8444, %r8436, %r8441;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8447, %r816, %r8438, %r8450, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8451, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8452, %r8450, %r8451;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8455, %r8447, %r8452;
	// end inline asm
	shr.u32 	%r8460, %r8438, 8;
	// begin inline asm
	lop3.b32 %r8458, %r805, %r8460, %r8439, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8462, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8463, %r8439, %r8462;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8466, %r8458, %r8463;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8469, %r816, %r8460, %r8450, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8473, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8474, %r8450, %r8473;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8477, %r8469, %r8474;
	// end inline asm
	// begin inline asm
	mov.b32 %r8485, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8496, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8484, %r16205, -2004318072;
	// begin inline asm
	lop3.b32 %r8482, %r805, %r8484, %r8485, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8486, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8487, %r8485, %r8486;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8490, %r8482, %r8487;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8493, %r816, %r8484, %r8496, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8497, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8498, %r8496, %r8497;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8501, %r8493, %r8498;
	// end inline asm
	shr.u32 	%r8506, %r8484, 8;
	// begin inline asm
	lop3.b32 %r8504, %r805, %r8506, %r8485, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8508, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8509, %r8485, %r8508;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8512, %r8504, %r8509;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8515, %r816, %r8506, %r8496, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8519, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8520, %r8496, %r8519;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8523, %r8515, %r8520;
	// end inline asm
	// begin inline asm
	mov.b32 %r8531, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8542, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8530, %r16206, -2004318072;
	// begin inline asm
	lop3.b32 %r8528, %r805, %r8530, %r8531, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8532, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8533, %r8531, %r8532;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8536, %r8528, %r8533;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8539, %r816, %r8530, %r8542, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8543, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8544, %r8542, %r8543;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8547, %r8539, %r8544;
	// end inline asm
	shr.u32 	%r8552, %r8530, 8;
	// begin inline asm
	lop3.b32 %r8550, %r805, %r8552, %r8531, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8554, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8555, %r8531, %r8554;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8558, %r8550, %r8555;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8561, %r816, %r8552, %r8542, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8565, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8566, %r8542, %r8565;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8569, %r8561, %r8566;
	// end inline asm
	// begin inline asm
	mov.b32 %r8577, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8588, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8576, %r16207, -2004318072;
	// begin inline asm
	lop3.b32 %r8574, %r805, %r8576, %r8577, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8578, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8579, %r8577, %r8578;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8582, %r8574, %r8579;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8585, %r816, %r8576, %r8588, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8589, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8590, %r8588, %r8589;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8593, %r8585, %r8590;
	// end inline asm
	shr.u32 	%r8598, %r8576, 8;
	// begin inline asm
	lop3.b32 %r8596, %r805, %r8598, %r8577, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8600, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8601, %r8577, %r8600;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8604, %r8596, %r8601;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8607, %r816, %r8598, %r8588, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8611, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8612, %r8588, %r8611;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8615, %r8607, %r8612;
	// end inline asm
	// begin inline asm
	mov.b32 %r8623, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8634, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8622, %r16216, -2004318072;
	// begin inline asm
	lop3.b32 %r8620, %r805, %r8622, %r8623, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8624, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8625, %r8623, %r8624;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8628, %r8620, %r8625;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8631, %r816, %r8622, %r8634, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8635, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8636, %r8634, %r8635;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8639, %r8631, %r8636;
	// end inline asm
	shr.u32 	%r8644, %r8622, 8;
	// begin inline asm
	lop3.b32 %r8642, %r805, %r8644, %r8623, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8646, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8647, %r8623, %r8646;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8650, %r8642, %r8647;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8653, %r816, %r8644, %r8634, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8657, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8658, %r8634, %r8657;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8661, %r8653, %r8658;
	// end inline asm
	// begin inline asm
	mov.b32 %r8669, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8680, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8668, %r16217, -2004318072;
	// begin inline asm
	lop3.b32 %r8666, %r805, %r8668, %r8669, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8670, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8671, %r8669, %r8670;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8674, %r8666, %r8671;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8677, %r816, %r8668, %r8680, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8681, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8682, %r8680, %r8681;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8685, %r8677, %r8682;
	// end inline asm
	shr.u32 	%r8690, %r8668, 8;
	// begin inline asm
	lop3.b32 %r8688, %r805, %r8690, %r8669, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8692, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8693, %r8669, %r8692;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8696, %r8688, %r8693;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8699, %r816, %r8690, %r8680, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8703, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8704, %r8680, %r8703;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8707, %r8699, %r8704;
	// end inline asm
	// begin inline asm
	mov.b32 %r8715, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8726, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8714, %r16218, -2004318072;
	// begin inline asm
	lop3.b32 %r8712, %r805, %r8714, %r8715, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8716, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8717, %r8715, %r8716;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8720, %r8712, %r8717;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8723, %r816, %r8714, %r8726, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8727, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8728, %r8726, %r8727;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8731, %r8723, %r8728;
	// end inline asm
	shr.u32 	%r8736, %r8714, 8;
	// begin inline asm
	lop3.b32 %r8734, %r805, %r8736, %r8715, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8738, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8739, %r8715, %r8738;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8742, %r8734, %r8739;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8745, %r816, %r8736, %r8726, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8749, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8750, %r8726, %r8749;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8753, %r8745, %r8750;
	// end inline asm
	// begin inline asm
	mov.b32 %r8761, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8772, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8760, %r16219, -2004318072;
	// begin inline asm
	lop3.b32 %r8758, %r805, %r8760, %r8761, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8762, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8763, %r8761, %r8762;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8766, %r8758, %r8763;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8769, %r816, %r8760, %r8772, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8773, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8774, %r8772, %r8773;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8777, %r8769, %r8774;
	// end inline asm
	shr.u32 	%r8782, %r8760, 8;
	// begin inline asm
	lop3.b32 %r8780, %r805, %r8782, %r8761, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8784, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8785, %r8761, %r8784;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8788, %r8780, %r8785;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8791, %r816, %r8782, %r8772, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8795, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8796, %r8772, %r8795;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8799, %r8791, %r8796;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8802, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8804, %r8802, %r8444;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8807, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8809, %r8807, %r8455;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8812, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8814, %r8812, %r8466;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8817, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8819, %r8817, %r8477;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8822, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8824, %r8822, %r8490;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8827, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8829, %r8827, %r8501;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8832, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8834, %r8832, %r8512;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8837, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8839, %r8837, %r8523;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8842, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8844, %r8842, %r8536;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8847, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8849, %r8847, %r8547;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8852, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8854, %r8852, %r8558;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8857, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8859, %r8857, %r8569;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8862, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8864, %r8862, %r8582;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8867, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8869, %r8867, %r8593;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8872, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8874, %r8872, %r8604;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8877, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8879, %r8877, %r8615;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8882, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8884, %r8882, %r8628;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8887, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8889, %r8887, %r8639;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8892, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8894, %r8892, %r8650;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8897, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8899, %r8897, %r8661;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8902, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8904, %r8902, %r8674;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8907, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8909, %r8907, %r8685;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8912, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8914, %r8912, %r8696;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8917, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8919, %r8917, %r8707;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8922, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8924, %r8922, %r8720;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8927, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8929, %r8927, %r8731;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8932, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8934, %r8932, %r8742;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8937, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8939, %r8937, %r8753;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8942, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8944, %r8942, %r8766;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8947, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8949, %r8947, %r8777;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8952, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8954, %r8952, %r8788;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8957, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8959, %r8957, %r8799;
	// end inline asm
	// begin inline asm
	mov.b32 %r8967, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8978, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r8964, %r805, %r2390, %r8967, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8968, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8969, %r8967, %r8968;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8972, %r8964, %r8969;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8975, %r816, %r2390, %r8978, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8979, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8980, %r8978, %r8979;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8983, %r8975, %r8980;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8986, %r805, %r2412, %r8967, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8990, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8991, %r8967, %r8990;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8994, %r8986, %r8991;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8997, %r816, %r2412, %r8978, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9001, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9002, %r8978, %r9001;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9005, %r8997, %r9002;
	// end inline asm
	// begin inline asm
	mov.b32 %r9013, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9024, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9010, %r805, %r2436, %r9013, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9014, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9015, %r9013, %r9014;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9018, %r9010, %r9015;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9021, %r816, %r2436, %r9024, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9025, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9026, %r9024, %r9025;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9029, %r9021, %r9026;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9032, %r805, %r2458, %r9013, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9036, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9037, %r9013, %r9036;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9040, %r9032, %r9037;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9043, %r816, %r2458, %r9024, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9047, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9048, %r9024, %r9047;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9051, %r9043, %r9048;
	// end inline asm
	// begin inline asm
	mov.b32 %r9059, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9070, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9056, %r805, %r2482, %r9059, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9060, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9061, %r9059, %r9060;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9064, %r9056, %r9061;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9067, %r816, %r2482, %r9070, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9071, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9072, %r9070, %r9071;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9075, %r9067, %r9072;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9078, %r805, %r2504, %r9059, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9082, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9083, %r9059, %r9082;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9086, %r9078, %r9083;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9089, %r816, %r2504, %r9070, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9093, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9094, %r9070, %r9093;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9097, %r9089, %r9094;
	// end inline asm
	// begin inline asm
	mov.b32 %r9105, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9116, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9102, %r805, %r2528, %r9105, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9106, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9107, %r9105, %r9106;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9110, %r9102, %r9107;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9113, %r816, %r2528, %r9116, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9117, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9118, %r9116, %r9117;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9121, %r9113, %r9118;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9124, %r805, %r2550, %r9105, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9128, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9129, %r9105, %r9128;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9132, %r9124, %r9129;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9135, %r816, %r2550, %r9116, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9139, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9140, %r9116, %r9139;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9143, %r9135, %r9140;
	// end inline asm
	// begin inline asm
	mov.b32 %r9151, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9162, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9148, %r805, %r2574, %r9151, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9152, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9153, %r9151, %r9152;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9156, %r9148, %r9153;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9159, %r816, %r2574, %r9162, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9163, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9164, %r9162, %r9163;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9167, %r9159, %r9164;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9170, %r805, %r2596, %r9151, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9174, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9175, %r9151, %r9174;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9178, %r9170, %r9175;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9181, %r816, %r2596, %r9162, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9185, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9186, %r9162, %r9185;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9189, %r9181, %r9186;
	// end inline asm
	// begin inline asm
	mov.b32 %r9197, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9208, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9194, %r805, %r2620, %r9197, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9198, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9199, %r9197, %r9198;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9202, %r9194, %r9199;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9205, %r816, %r2620, %r9208, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9209, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9210, %r9208, %r9209;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9213, %r9205, %r9210;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9216, %r805, %r2642, %r9197, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9220, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9221, %r9197, %r9220;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9224, %r9216, %r9221;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9227, %r816, %r2642, %r9208, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9231, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9232, %r9208, %r9231;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9235, %r9227, %r9232;
	// end inline asm
	// begin inline asm
	mov.b32 %r9243, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9254, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9240, %r805, %r2666, %r9243, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9244, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9245, %r9243, %r9244;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9248, %r9240, %r9245;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9251, %r816, %r2666, %r9254, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9255, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9256, %r9254, %r9255;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9259, %r9251, %r9256;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9262, %r805, %r2688, %r9243, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9266, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9267, %r9243, %r9266;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9270, %r9262, %r9267;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9273, %r816, %r2688, %r9254, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9277, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9278, %r9254, %r9277;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9281, %r9273, %r9278;
	// end inline asm
	// begin inline asm
	mov.b32 %r9289, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9300, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9286, %r805, %r2712, %r9289, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9290, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9291, %r9289, %r9290;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9294, %r9286, %r9291;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9297, %r816, %r2712, %r9300, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9301, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9302, %r9300, %r9301;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9305, %r9297, %r9302;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9308, %r805, %r2734, %r9289, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9312, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9313, %r9289, %r9312;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9316, %r9308, %r9313;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9319, %r816, %r2734, %r9300, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9323, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9324, %r9300, %r9323;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9327, %r9319, %r9324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9330, %r272, %r8972, %r8804;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9334, %r272, %r8983, %r8809;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9338, %r272, %r8994, %r8814;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9342, %r272, %r9005, %r8819;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9346, %r272, %r9018, %r8824;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9350, %r272, %r9029, %r8829;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9354, %r272, %r9040, %r8834;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9358, %r272, %r9051, %r8839;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9362, %r272, %r9064, %r8844;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9366, %r272, %r9075, %r8849;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9370, %r272, %r9086, %r8854;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9374, %r272, %r9097, %r8859;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9378, %r272, %r9110, %r8864;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9382, %r272, %r9121, %r8869;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9386, %r272, %r9132, %r8874;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9390, %r272, %r9143, %r8879;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9394, %r290, %r9156, %r8884;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9398, %r290, %r9167, %r8889;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9402, %r290, %r9178, %r8894;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9406, %r290, %r9189, %r8899;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9410, %r290, %r9202, %r8904;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9414, %r290, %r9213, %r8909;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9418, %r290, %r9224, %r8914;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9422, %r290, %r9235, %r8919;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9426, %r290, %r9248, %r8924;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9430, %r290, %r9259, %r8929;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9434, %r290, %r9270, %r8934;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9438, %r290, %r9281, %r8939;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9442, %r290, %r9294, %r8944;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9446, %r290, %r9305, %r8949;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9450, %r290, %r9316, %r8954;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9454, %r290, %r9327, %r8959;
	// end inline asm
	// begin inline asm
	mov.b32 %r9463, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9474, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9460, %r805, %r806, %r9463, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9464, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9465, %r9463, %r9464;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9468, %r9460, %r9465;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9471, %r816, %r806, %r9474, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9475, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9476, %r9474, %r9475;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9479, %r9471, %r9476;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9482, %r805, %r828, %r9463, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9486, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9487, %r9463, %r9486;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9490, %r9482, %r9487;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9493, %r816, %r828, %r9474, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9497, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9498, %r9474, %r9497;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9501, %r9493, %r9498;
	// end inline asm
	// begin inline asm
	mov.b32 %r9509, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9520, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9506, %r805, %r852, %r9509, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9510, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9511, %r9509, %r9510;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9514, %r9506, %r9511;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9517, %r816, %r852, %r9520, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9521, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9522, %r9520, %r9521;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9525, %r9517, %r9522;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9528, %r805, %r874, %r9509, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9532, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9533, %r9509, %r9532;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9536, %r9528, %r9533;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9539, %r816, %r874, %r9520, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9543, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9544, %r9520, %r9543;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9547, %r9539, %r9544;
	// end inline asm
	// begin inline asm
	mov.b32 %r9555, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9566, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9552, %r805, %r898, %r9555, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9556, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9557, %r9555, %r9556;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9560, %r9552, %r9557;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9563, %r816, %r898, %r9566, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9567, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9568, %r9566, %r9567;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9571, %r9563, %r9568;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9574, %r805, %r920, %r9555, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9578, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9579, %r9555, %r9578;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9582, %r9574, %r9579;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9585, %r816, %r920, %r9566, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9589, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9590, %r9566, %r9589;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9593, %r9585, %r9590;
	// end inline asm
	// begin inline asm
	mov.b32 %r9601, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9612, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9598, %r805, %r944, %r9601, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9602, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9603, %r9601, %r9602;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9606, %r9598, %r9603;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9609, %r816, %r944, %r9612, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9613, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9614, %r9612, %r9613;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9617, %r9609, %r9614;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9620, %r805, %r966, %r9601, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9624, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9625, %r9601, %r9624;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9628, %r9620, %r9625;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9631, %r816, %r966, %r9612, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9635, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9636, %r9612, %r9635;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9639, %r9631, %r9636;
	// end inline asm
	// begin inline asm
	mov.b32 %r9647, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9658, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9644, %r805, %r990, %r9647, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9648, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9649, %r9647, %r9648;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9652, %r9644, %r9649;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9655, %r816, %r990, %r9658, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9659, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9660, %r9658, %r9659;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9663, %r9655, %r9660;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9666, %r805, %r1012, %r9647, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9670, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9671, %r9647, %r9670;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9674, %r9666, %r9671;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9677, %r816, %r1012, %r9658, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9681, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9682, %r9658, %r9681;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9685, %r9677, %r9682;
	// end inline asm
	// begin inline asm
	mov.b32 %r9693, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9704, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9690, %r805, %r1036, %r9693, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9694, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9695, %r9693, %r9694;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9698, %r9690, %r9695;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9701, %r816, %r1036, %r9704, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9705, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9706, %r9704, %r9705;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9709, %r9701, %r9706;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9712, %r805, %r1058, %r9693, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9716, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9717, %r9693, %r9716;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9720, %r9712, %r9717;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9723, %r816, %r1058, %r9704, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9727, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9728, %r9704, %r9727;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9731, %r9723, %r9728;
	// end inline asm
	// begin inline asm
	mov.b32 %r9739, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9750, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9736, %r805, %r1082, %r9739, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9740, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9741, %r9739, %r9740;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9744, %r9736, %r9741;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9747, %r816, %r1082, %r9750, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9751, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9752, %r9750, %r9751;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9755, %r9747, %r9752;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9758, %r805, %r1104, %r9739, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9762, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9763, %r9739, %r9762;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9766, %r9758, %r9763;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9769, %r816, %r1104, %r9750, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9773, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9774, %r9750, %r9773;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9777, %r9769, %r9774;
	// end inline asm
	// begin inline asm
	mov.b32 %r9785, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9796, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9782, %r805, %r1128, %r9785, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9786, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9787, %r9785, %r9786;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9790, %r9782, %r9787;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9793, %r816, %r1128, %r9796, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9797, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9798, %r9796, %r9797;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9801, %r9793, %r9798;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9804, %r805, %r1150, %r9785, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9808, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9809, %r9785, %r9808;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9812, %r9804, %r9809;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9815, %r816, %r1150, %r9796, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9819, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9820, %r9796, %r9819;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9823, %r9815, %r9820;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9826, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9828, %r9826, %r9468, %r9330;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9832, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9834, %r9832, %r9479, %r9334;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9838, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9840, %r9838, %r9490, %r9338;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9844, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9846, %r9844, %r9501, %r9342;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9850, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9852, %r9850, %r9514, %r9346;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9856, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9858, %r9856, %r9525, %r9350;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9862, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9864, %r9862, %r9536, %r9354;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9868, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9870, %r9868, %r9547, %r9358;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9874, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9876, %r9874, %r9560, %r9362;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9880, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9882, %r9880, %r9571, %r9366;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9886, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9888, %r9886, %r9582, %r9370;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9892, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9894, %r9892, %r9593, %r9374;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9898, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9900, %r9898, %r9606, %r9378;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9904, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9906, %r9904, %r9617, %r9382;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9910, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9912, %r9910, %r9628, %r9386;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9916, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9918, %r9916, %r9639, %r9390;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9922, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9924, %r9922, %r9652, %r9394;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9928, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9930, %r9928, %r9663, %r9398;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9934, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9936, %r9934, %r9674, %r9402;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9940, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9942, %r9940, %r9685, %r9406;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9946, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9948, %r9946, %r9698, %r9410;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9952, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9954, %r9952, %r9709, %r9414;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9958, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9960, %r9958, %r9720, %r9418;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9964, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9966, %r9964, %r9731, %r9422;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9970, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9972, %r9970, %r9744, %r9426;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9976, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9978, %r9976, %r9755, %r9430;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9982, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9984, %r9982, %r9766, %r9434;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9988, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9990, %r9988, %r9777, %r9438;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9994, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9996, %r9994, %r9790, %r9442;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10000, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10002, %r10000, %r9801, %r9446;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10006, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10008, %r10006, %r9812, %r9450;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10012, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10014, %r10012, %r9823, %r9454;
	// end inline asm
	// begin inline asm
	mov.b32 %r10023, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10034, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10020, %r805, %r4622, %r10023, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10024, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10025, %r10023, %r10024;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10028, %r10020, %r10025;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10031, %r816, %r4622, %r10034, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10035, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10036, %r10034, %r10035;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10039, %r10031, %r10036;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10042, %r805, %r4644, %r10023, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10046, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10047, %r10023, %r10046;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10050, %r10042, %r10047;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10053, %r816, %r4644, %r10034, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10057, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10058, %r10034, %r10057;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10061, %r10053, %r10058;
	// end inline asm
	// begin inline asm
	mov.b32 %r10069, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10080, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10066, %r805, %r4668, %r10069, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10070, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10071, %r10069, %r10070;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10074, %r10066, %r10071;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10077, %r816, %r4668, %r10080, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10081, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10082, %r10080, %r10081;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10085, %r10077, %r10082;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10088, %r805, %r4690, %r10069, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10092, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10093, %r10069, %r10092;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10096, %r10088, %r10093;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10099, %r816, %r4690, %r10080, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10103, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10104, %r10080, %r10103;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10107, %r10099, %r10104;
	// end inline asm
	// begin inline asm
	mov.b32 %r10115, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10126, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10112, %r805, %r4714, %r10115, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10116, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10117, %r10115, %r10116;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10120, %r10112, %r10117;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10123, %r816, %r4714, %r10126, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10127, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10128, %r10126, %r10127;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10131, %r10123, %r10128;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10134, %r805, %r4736, %r10115, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10138, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10139, %r10115, %r10138;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10142, %r10134, %r10139;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10145, %r816, %r4736, %r10126, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10149, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10150, %r10126, %r10149;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10153, %r10145, %r10150;
	// end inline asm
	// begin inline asm
	mov.b32 %r10161, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10172, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10158, %r805, %r4760, %r10161, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10162, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10163, %r10161, %r10162;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10166, %r10158, %r10163;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10169, %r816, %r4760, %r10172, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10173, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10174, %r10172, %r10173;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10177, %r10169, %r10174;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10180, %r805, %r4782, %r10161, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10184, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10185, %r10161, %r10184;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10188, %r10180, %r10185;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10191, %r816, %r4782, %r10172, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10195, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10196, %r10172, %r10195;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10199, %r10191, %r10196;
	// end inline asm
	// begin inline asm
	mov.b32 %r10207, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10218, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10204, %r805, %r4806, %r10207, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10208, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10209, %r10207, %r10208;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10212, %r10204, %r10209;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10215, %r816, %r4806, %r10218, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10219, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10220, %r10218, %r10219;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10223, %r10215, %r10220;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10226, %r805, %r4828, %r10207, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10230, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10231, %r10207, %r10230;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10234, %r10226, %r10231;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10237, %r816, %r4828, %r10218, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10241, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10242, %r10218, %r10241;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10245, %r10237, %r10242;
	// end inline asm
	// begin inline asm
	mov.b32 %r10253, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10264, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10250, %r805, %r4852, %r10253, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10254, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10255, %r10253, %r10254;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10258, %r10250, %r10255;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10261, %r816, %r4852, %r10264, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10265, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10266, %r10264, %r10265;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10269, %r10261, %r10266;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10272, %r805, %r4874, %r10253, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10276, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10277, %r10253, %r10276;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10280, %r10272, %r10277;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10283, %r816, %r4874, %r10264, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10287, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10288, %r10264, %r10287;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10291, %r10283, %r10288;
	// end inline asm
	// begin inline asm
	mov.b32 %r10299, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10310, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10296, %r805, %r4898, %r10299, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10300, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10301, %r10299, %r10300;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10304, %r10296, %r10301;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10307, %r816, %r4898, %r10310, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10311, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10312, %r10310, %r10311;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10315, %r10307, %r10312;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10318, %r805, %r4920, %r10299, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10322, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10323, %r10299, %r10322;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10326, %r10318, %r10323;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10329, %r816, %r4920, %r10310, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10333, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10334, %r10310, %r10333;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10337, %r10329, %r10334;
	// end inline asm
	// begin inline asm
	mov.b32 %r10345, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10356, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10342, %r805, %r4944, %r10345, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10346, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10347, %r10345, %r10346;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10350, %r10342, %r10347;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10353, %r816, %r4944, %r10356, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10357, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10358, %r10356, %r10357;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10361, %r10353, %r10358;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10364, %r805, %r4966, %r10345, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10368, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10369, %r10345, %r10368;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10372, %r10364, %r10369;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10375, %r816, %r4966, %r10356, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10379, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10380, %r10356, %r10379;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10383, %r10375, %r10380;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10521, %r344, %r10028, %r9828;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10518, %r344, %r10039, %r9834;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10530, %r344, %r10050, %r9840;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10527, %r344, %r10061, %r9846;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10539, %r344, %r10074, %r9852;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10536, %r344, %r10085, %r9858;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10548, %r344, %r10096, %r9864;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10545, %r344, %r10107, %r9870;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10557, %r344, %r10120, %r9876;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10554, %r344, %r10131, %r9882;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10566, %r344, %r10142, %r9888;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10563, %r344, %r10153, %r9894;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10575, %r344, %r10166, %r9900;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10572, %r344, %r10177, %r9906;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10584, %r344, %r10188, %r9912;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10581, %r344, %r10199, %r9918;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10593, %r362, %r10212, %r9924;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10590, %r362, %r10223, %r9930;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10602, %r362, %r10234, %r9936;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10599, %r362, %r10245, %r9942;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10611, %r362, %r10258, %r9948;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10608, %r362, %r10269, %r9954;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10620, %r362, %r10280, %r9960;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10617, %r362, %r10291, %r9966;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10629, %r362, %r10304, %r9972;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10626, %r362, %r10315, %r9978;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10638, %r362, %r10326, %r9984;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10635, %r362, %r10337, %r9990;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10647, %r362, %r10350, %r9996;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10644, %r362, %r10361, %r10002;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10656, %r362, %r10372, %r10008;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10653, %r362, %r10383, %r10014;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10514, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10516, %r10514, %r10518;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10519, %r426, %r10521, %r10516;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10523, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10525, %r10523, %r10527;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10528, %r426, %r10530, %r10525;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10532, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10534, %r10532, %r10536;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10537, %r426, %r10539, %r10534;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10541, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10543, %r10541, %r10545;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10546, %r426, %r10548, %r10543;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10550, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10552, %r10550, %r10554;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10555, %r426, %r10557, %r10552;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10559, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10561, %r10559, %r10563;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10564, %r426, %r10566, %r10561;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10568, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10570, %r10568, %r10572;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10573, %r426, %r10575, %r10570;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10577, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10579, %r10577, %r10581;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10582, %r426, %r10584, %r10579;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10586, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10588, %r10586, %r10590;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10591, %r429, %r10593, %r10588;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10595, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10597, %r10595, %r10599;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10600, %r429, %r10602, %r10597;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10604, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10606, %r10604, %r10608;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10609, %r429, %r10611, %r10606;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10613, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10615, %r10613, %r10617;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10618, %r429, %r10620, %r10615;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10622, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10624, %r10622, %r10626;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10627, %r429, %r10629, %r10624;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10631, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10633, %r10631, %r10635;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10636, %r429, %r10638, %r10633;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10640, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10642, %r10640, %r10644;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10645, %r429, %r10647, %r10642;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10649, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10651, %r10649, %r10653;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10654, %r429, %r10656, %r10651;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10658, %r432, %r10521;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10661, %r426, %r10518, %r10658;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10665, %r432, %r10530;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10668, %r426, %r10527, %r10665;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10672, %r432, %r10539;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10675, %r426, %r10536, %r10672;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10679, %r432, %r10548;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10682, %r426, %r10545, %r10679;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10686, %r432, %r10557;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10689, %r426, %r10554, %r10686;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10693, %r432, %r10566;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10696, %r426, %r10563, %r10693;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10700, %r432, %r10575;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10703, %r426, %r10572, %r10700;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10707, %r432, %r10584;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10710, %r426, %r10581, %r10707;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10714, %r435, %r10593;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10717, %r429, %r10590, %r10714;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10721, %r435, %r10602;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10724, %r429, %r10599, %r10721;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10728, %r435, %r10611;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10731, %r429, %r10608, %r10728;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10735, %r435, %r10620;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10738, %r429, %r10617, %r10735;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10742, %r435, %r10629;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10745, %r429, %r10626, %r10742;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10749, %r435, %r10638;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10752, %r429, %r10635, %r10749;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10756, %r435, %r10647;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10759, %r429, %r10644, %r10756;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10763, %r435, %r10656;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10766, %r429, %r10653, %r10763;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r10937, %r10934}, {%r474, %r480, %r477, %r483}, {%r10519, %r10661}, {%r15161, %r15161};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r10946, %r10943}, {%r474, %r480, %r477, %r483}, {%r10528, %r10668}, {%r15161, %r15161};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r10955, %r10952}, {%r474, %r480, %r477, %r483}, {%r10537, %r10675}, {%r15161, %r15161};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r10964, %r10961}, {%r474, %r480, %r477, %r483}, {%r10546, %r10682}, {%r15161, %r15161};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r10973, %r10970}, {%r474, %r480, %r477, %r483}, {%r10555, %r10689}, {%r15161, %r15161};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r10982, %r10979}, {%r474, %r480, %r477, %r483}, {%r10564, %r10696}, {%r15161, %r15161};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r10991, %r10988}, {%r474, %r480, %r477, %r483}, {%r10573, %r10703}, {%r15161, %r15161};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11000, %r10997}, {%r474, %r480, %r477, %r483}, {%r10582, %r10710}, {%r15161, %r15161};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11009, %r11006}, {%r474, %r480, %r477, %r483}, {%r10591, %r10717}, {%r15161, %r15161};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11018, %r11015}, {%r474, %r480, %r477, %r483}, {%r10600, %r10724}, {%r15161, %r15161};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11027, %r11024}, {%r474, %r480, %r477, %r483}, {%r10609, %r10731}, {%r15161, %r15161};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11036, %r11033}, {%r474, %r480, %r477, %r483}, {%r10618, %r10738}, {%r15161, %r15161};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11045, %r11042}, {%r474, %r480, %r477, %r483}, {%r10627, %r10745}, {%r15161, %r15161};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11054, %r11051}, {%r474, %r480, %r477, %r483}, {%r10636, %r10752}, {%r15161, %r15161};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11063, %r11060}, {%r474, %r480, %r477, %r483}, {%r10645, %r10759}, {%r15161, %r15161};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11072, %r11069}, {%r474, %r480, %r477, %r483}, {%r10654, %r10766}, {%r15161, %r15161};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10930, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10932, %r10930, %r10934;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10935, %r521, %r10937, %r10932;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10939, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10941, %r10939, %r10943;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10944, %r521, %r10946, %r10941;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10948, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10950, %r10948, %r10952;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10953, %r521, %r10955, %r10950;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10957, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10959, %r10957, %r10961;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10962, %r521, %r10964, %r10959;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10966, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10968, %r10966, %r10970;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10971, %r521, %r10973, %r10968;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10975, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10977, %r10975, %r10979;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10980, %r521, %r10982, %r10977;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10984, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10986, %r10984, %r10988;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10989, %r521, %r10991, %r10986;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10993, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10995, %r10993, %r10997;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10998, %r521, %r11000, %r10995;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11002, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11004, %r11002, %r11006;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11007, %r521, %r11009, %r11004;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11011, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11013, %r11011, %r11015;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11016, %r521, %r11018, %r11013;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11020, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11022, %r11020, %r11024;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11025, %r521, %r11027, %r11022;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11029, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11031, %r11029, %r11033;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11034, %r521, %r11036, %r11031;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11038, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11040, %r11038, %r11042;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11043, %r521, %r11045, %r11040;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11047, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11049, %r11047, %r11051;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11052, %r521, %r11054, %r11049;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11056, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11058, %r11056, %r11060;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11061, %r521, %r11063, %r11058;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11065, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11067, %r11065, %r11069;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11070, %r521, %r11072, %r11067;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11074, %r524, %r10937;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11077, %r521, %r10934, %r11074;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11081, %r524, %r10946;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11084, %r521, %r10943, %r11081;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11088, %r524, %r10955;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11091, %r521, %r10952, %r11088;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11095, %r524, %r10964;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11098, %r521, %r10961, %r11095;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11102, %r524, %r10973;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11105, %r521, %r10970, %r11102;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11109, %r524, %r10982;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11112, %r521, %r10979, %r11109;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11116, %r524, %r10991;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11119, %r521, %r10988, %r11116;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11123, %r524, %r11000;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11126, %r521, %r10997, %r11123;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11130, %r524, %r11009;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11133, %r521, %r11006, %r11130;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11137, %r524, %r11018;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11140, %r521, %r11015, %r11137;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11144, %r524, %r11027;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11147, %r521, %r11024, %r11144;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11151, %r524, %r11036;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11154, %r521, %r11033, %r11151;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11158, %r524, %r11045;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11161, %r521, %r11042, %r11158;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11165, %r524, %r11054;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11168, %r521, %r11051, %r11165;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11172, %r524, %r11063;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11175, %r521, %r11060, %r11172;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11179, %r524, %r11072;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11182, %r521, %r11069, %r11179;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11475, %r11478}, {%r564, %r570, %r567, %r573}, {%r10935, %r11077}, {%r15161, %r15161};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11481, %r11484}, {%r564, %r570, %r567, %r573}, {%r10944, %r11084}, {%r15161, %r15161};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11487, %r11490}, {%r564, %r570, %r567, %r573}, {%r10953, %r11091}, {%r15161, %r15161};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11493, %r11496}, {%r564, %r570, %r567, %r573}, {%r10962, %r11098}, {%r15161, %r15161};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11499, %r11502}, {%r564, %r570, %r567, %r573}, {%r10971, %r11105}, {%r15161, %r15161};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11505, %r11508}, {%r564, %r570, %r567, %r573}, {%r10980, %r11112}, {%r15161, %r15161};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11511, %r11514}, {%r564, %r570, %r567, %r573}, {%r10989, %r11119}, {%r15161, %r15161};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11517, %r11520}, {%r564, %r570, %r567, %r573}, {%r10998, %r11126}, {%r15161, %r15161};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11476, %r11479}, {%r564, %r570, %r567, %r573}, {%r11007, %r11133}, {%r15161, %r15161};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11482, %r11485}, {%r564, %r570, %r567, %r573}, {%r11016, %r11140}, {%r15161, %r15161};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11488, %r11491}, {%r564, %r570, %r567, %r573}, {%r11025, %r11147}, {%r15161, %r15161};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11494, %r11497}, {%r564, %r570, %r567, %r573}, {%r11034, %r11154}, {%r15161, %r15161};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11500, %r11503}, {%r564, %r570, %r567, %r573}, {%r11043, %r11161}, {%r15161, %r15161};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11506, %r11509}, {%r564, %r570, %r567, %r573}, {%r11052, %r11168}, {%r15161, %r15161};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11512, %r11515}, {%r564, %r570, %r567, %r573}, {%r11061, %r11175}, {%r15161, %r15161};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11518, %r11521}, {%r564, %r570, %r567, %r573}, {%r11070, %r11182}, {%r15161, %r15161};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11474, %r11475, %r11476;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11477, %r11478, %r11479;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11480, %r11481, %r11482;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11483, %r11484, %r11485;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11486, %r11487, %r11488;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11489, %r11490, %r11491;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11492, %r11493, %r11494;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11495, %r11496, %r11497;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11498, %r11499, %r11500;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11501, %r11502, %r11503;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11504, %r11505, %r11506;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11507, %r11508, %r11509;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11510, %r11511, %r11512;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11513, %r11514, %r11515;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11516, %r11517, %r11518;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11519, %r11520, %r11521;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11522, %r11475, %r11476;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11525, %r11478, %r11479;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11528, %r11481, %r11482;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11531, %r11484, %r11485;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11534, %r11487, %r11488;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11537, %r11490, %r11491;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11540, %r11493, %r11494;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11543, %r11496, %r11497;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11546, %r11499, %r11500;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11549, %r11502, %r11503;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11552, %r11505, %r11506;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11555, %r11508, %r11509;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11558, %r11511, %r11512;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11561, %r11514, %r11515;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11564, %r11517, %r11518;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11567, %r11520, %r11521;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11570, %r13, %r11474;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11573, %r13, %r11477;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11576, %r13, %r11480;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11579, %r13, %r11483;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11582, %r13, %r11486;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11585, %r13, %r11489;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11588, %r13, %r11492;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11591, %r13, %r11495;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11594, %r13, %r11498;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11597, %r13, %r11501;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11600, %r13, %r11504;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11603, %r13, %r11507;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11606, %r13, %r11510;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11609, %r13, %r11513;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11612, %r13, %r11516;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11615, %r13, %r11519;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11618, %r14, %r11522;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11621, %r14, %r11525;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11624, %r14, %r11528;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11627, %r14, %r11531;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11630, %r14, %r11534;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11633, %r14, %r11537;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11636, %r14, %r11540;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11639, %r14, %r11543;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11642, %r14, %r11546;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11645, %r14, %r11549;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11648, %r14, %r11552;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11651, %r14, %r11555;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11654, %r14, %r11558;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11657, %r14, %r11561;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11660, %r14, %r11564;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11663, %r14, %r11567;
	// end inline asm
	// begin inline asm
	mov.b32 %r11666, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11667, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11668, %r11570, %r11666;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11671, %r11668, %r11667;
	// end inline asm
	// begin inline asm
	mov.b32 %r11674, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11675, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11676, %r11573, %r11674;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11679, %r11676, %r11675;
	// end inline asm
	// begin inline asm
	mov.b32 %r11682, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11683, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11684, %r11576, %r11682;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11687, %r11684, %r11683;
	// end inline asm
	// begin inline asm
	mov.b32 %r11690, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11691, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11692, %r11579, %r11690;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11695, %r11692, %r11691;
	// end inline asm
	// begin inline asm
	mov.b32 %r11698, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11699, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11700, %r11582, %r11698;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11703, %r11700, %r11699;
	// end inline asm
	// begin inline asm
	mov.b32 %r11706, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11707, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11708, %r11585, %r11706;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11711, %r11708, %r11707;
	// end inline asm
	// begin inline asm
	mov.b32 %r11714, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11715, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11716, %r11588, %r11714;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11719, %r11716, %r11715;
	// end inline asm
	// begin inline asm
	mov.b32 %r11722, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11723, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11724, %r11591, %r11722;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11727, %r11724, %r11723;
	// end inline asm
	// begin inline asm
	mov.b32 %r11730, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11731, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11732, %r11594, %r11730;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11735, %r11732, %r11731;
	// end inline asm
	// begin inline asm
	mov.b32 %r11738, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11739, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11740, %r11597, %r11738;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11743, %r11740, %r11739;
	// end inline asm
	// begin inline asm
	mov.b32 %r11746, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11747, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11748, %r11600, %r11746;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11751, %r11748, %r11747;
	// end inline asm
	// begin inline asm
	mov.b32 %r11754, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11755, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11756, %r11603, %r11754;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11759, %r11756, %r11755;
	// end inline asm
	// begin inline asm
	mov.b32 %r11762, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11763, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11764, %r11606, %r11762;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11767, %r11764, %r11763;
	// end inline asm
	// begin inline asm
	mov.b32 %r11770, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11771, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11772, %r11609, %r11770;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11775, %r11772, %r11771;
	// end inline asm
	// begin inline asm
	mov.b32 %r11778, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11779, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11780, %r11612, %r11778;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11783, %r11780, %r11779;
	// end inline asm
	// begin inline asm
	mov.b32 %r11786, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11787, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11788, %r11615, %r11786;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11791, %r11788, %r11787;
	// end inline asm
	// begin inline asm
	mov.b32 %r11794, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11795, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11796, %r11618, %r11794;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11799, %r11796, %r11795;
	// end inline asm
	// begin inline asm
	mov.b32 %r11802, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11803, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11804, %r11621, %r11802;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11807, %r11804, %r11803;
	// end inline asm
	// begin inline asm
	mov.b32 %r11810, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11811, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11812, %r11624, %r11810;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11815, %r11812, %r11811;
	// end inline asm
	// begin inline asm
	mov.b32 %r11818, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11819, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11820, %r11627, %r11818;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11823, %r11820, %r11819;
	// end inline asm
	// begin inline asm
	mov.b32 %r11826, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11827, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11828, %r11630, %r11826;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11831, %r11828, %r11827;
	// end inline asm
	// begin inline asm
	mov.b32 %r11834, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11835, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11836, %r11633, %r11834;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11839, %r11836, %r11835;
	// end inline asm
	// begin inline asm
	mov.b32 %r11842, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11843, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11844, %r11636, %r11842;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11847, %r11844, %r11843;
	// end inline asm
	// begin inline asm
	mov.b32 %r11850, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11851, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11852, %r11639, %r11850;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11855, %r11852, %r11851;
	// end inline asm
	// begin inline asm
	mov.b32 %r11858, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11859, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11860, %r11642, %r11858;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11863, %r11860, %r11859;
	// end inline asm
	// begin inline asm
	mov.b32 %r11866, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11867, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11868, %r11645, %r11866;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11871, %r11868, %r11867;
	// end inline asm
	// begin inline asm
	mov.b32 %r11874, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11875, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11876, %r11648, %r11874;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11879, %r11876, %r11875;
	// end inline asm
	// begin inline asm
	mov.b32 %r11882, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11883, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11884, %r11651, %r11882;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11887, %r11884, %r11883;
	// end inline asm
	// begin inline asm
	mov.b32 %r11890, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11891, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11892, %r11654, %r11890;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11895, %r11892, %r11891;
	// end inline asm
	// begin inline asm
	mov.b32 %r11898, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11899, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11900, %r11657, %r11898;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11903, %r11900, %r11899;
	// end inline asm
	// begin inline asm
	mov.b32 %r11906, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11907, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11908, %r11660, %r11906;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11911, %r11908, %r11907;
	// end inline asm
	// begin inline asm
	mov.b32 %r11914, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11915, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11916, %r11663, %r11914;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11919, %r11916, %r11915;
	// end inline asm
	// begin inline asm
	mov.b32 %r11925, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r11923, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11924, %r11925, %r11923;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11927, %r11671, %r11924;
	// end inline asm
	// begin inline asm
	mov.b32 %r11930, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11931, %r11925, %r11930;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11934, %r11679, %r11931;
	// end inline asm
	// begin inline asm
	mov.b32 %r11937, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11938, %r11925, %r11937;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11941, %r11687, %r11938;
	// end inline asm
	// begin inline asm
	mov.b32 %r11944, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11945, %r11925, %r11944;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11948, %r11695, %r11945;
	// end inline asm
	// begin inline asm
	prmt.b32 %r11951, %r11927, %r11941, %r4322;
	// end inline asm
	// begin inline asm
	prmt.b32 %r11955, %r11934, %r11948, %r4322;
	// end inline asm
	shl.b32 	%r11962, %r11955, 4;
	// begin inline asm
	lop3.b32 %r11959, %r4328, %r11951, %r11962, 202;
	// end inline asm
	xor.b32  	%r16090, %r11959, -2004318072;
	// begin inline asm
	mov.b32 %r11966, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r11964, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11965, %r11966, %r11964;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11968, %r11703, %r11965;
	// end inline asm
	// begin inline asm
	mov.b32 %r11971, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11972, %r11966, %r11971;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11975, %r11711, %r11972;
	// end inline asm
	// begin inline asm
	mov.b32 %r11978, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11979, %r11966, %r11978;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11982, %r11719, %r11979;
	// end inline asm
	// begin inline asm
	mov.b32 %r11985, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11986, %r11966, %r11985;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11989, %r11727, %r11986;
	// end inline asm
	// begin inline asm
	prmt.b32 %r11992, %r11968, %r11982, %r4322;
	// end inline asm
	// begin inline asm
	prmt.b32 %r11996, %r11975, %r11989, %r4322;
	// end inline asm
	shl.b32 	%r12003, %r11996, 4;
	// begin inline asm
	lop3.b32 %r12000, %r4328, %r11992, %r12003, 202;
	// end inline asm
	xor.b32  	%r16091, %r12000, -2004318072;
	// begin inline asm
	mov.b32 %r12007, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12005, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12006, %r12007, %r12005;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12009, %r11735, %r12006;
	// end inline asm
	// begin inline asm
	mov.b32 %r12012, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12013, %r12007, %r12012;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12016, %r11743, %r12013;
	// end inline asm
	// begin inline asm
	mov.b32 %r12019, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12020, %r12007, %r12019;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12023, %r11751, %r12020;
	// end inline asm
	// begin inline asm
	mov.b32 %r12026, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12027, %r12007, %r12026;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12030, %r11759, %r12027;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12033, %r12009, %r12023, %r4322;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12037, %r12016, %r12030, %r4322;
	// end inline asm
	shl.b32 	%r12044, %r12037, 4;
	// begin inline asm
	lop3.b32 %r12041, %r4328, %r12033, %r12044, 202;
	// end inline asm
	xor.b32  	%r16092, %r12041, -2004318072;
	// begin inline asm
	mov.b32 %r12048, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12046, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12047, %r12048, %r12046;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12050, %r11767, %r12047;
	// end inline asm
	// begin inline asm
	mov.b32 %r12053, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12054, %r12048, %r12053;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12057, %r11775, %r12054;
	// end inline asm
	// begin inline asm
	mov.b32 %r12060, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12061, %r12048, %r12060;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12064, %r11783, %r12061;
	// end inline asm
	// begin inline asm
	mov.b32 %r12067, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12068, %r12048, %r12067;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12071, %r11791, %r12068;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12074, %r12050, %r12064, %r4322;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12078, %r12057, %r12071, %r4322;
	// end inline asm
	shl.b32 	%r12085, %r12078, 4;
	// begin inline asm
	lop3.b32 %r12082, %r4328, %r12074, %r12085, 202;
	// end inline asm
	xor.b32  	%r16093, %r12082, -2004318072;
	// begin inline asm
	mov.b32 %r12089, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12087, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12088, %r12089, %r12087;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12091, %r11799, %r12088;
	// end inline asm
	// begin inline asm
	mov.b32 %r12094, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12095, %r12089, %r12094;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12098, %r11807, %r12095;
	// end inline asm
	// begin inline asm
	mov.b32 %r12101, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12102, %r12089, %r12101;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12105, %r11815, %r12102;
	// end inline asm
	// begin inline asm
	mov.b32 %r12108, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12109, %r12089, %r12108;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12112, %r11823, %r12109;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12115, %r12091, %r12105, %r4322;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12119, %r12098, %r12112, %r4322;
	// end inline asm
	shl.b32 	%r12126, %r12119, 4;
	// begin inline asm
	lop3.b32 %r12123, %r4328, %r12115, %r12126, 202;
	// end inline asm
	xor.b32  	%r16094, %r12123, -2004318072;
	// begin inline asm
	mov.b32 %r12130, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12128, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12129, %r12130, %r12128;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12132, %r11831, %r12129;
	// end inline asm
	// begin inline asm
	mov.b32 %r12135, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12136, %r12130, %r12135;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12139, %r11839, %r12136;
	// end inline asm
	// begin inline asm
	mov.b32 %r12142, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12143, %r12130, %r12142;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12146, %r11847, %r12143;
	// end inline asm
	// begin inline asm
	mov.b32 %r12149, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12150, %r12130, %r12149;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12153, %r11855, %r12150;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12156, %r12132, %r12146, %r4322;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12160, %r12139, %r12153, %r4322;
	// end inline asm
	shl.b32 	%r12167, %r12160, 4;
	// begin inline asm
	lop3.b32 %r12164, %r4328, %r12156, %r12167, 202;
	// end inline asm
	xor.b32  	%r16095, %r12164, -2004318072;
	// begin inline asm
	mov.b32 %r12171, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12169, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12170, %r12171, %r12169;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12173, %r11863, %r12170;
	// end inline asm
	// begin inline asm
	mov.b32 %r12176, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12177, %r12171, %r12176;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12180, %r11871, %r12177;
	// end inline asm
	// begin inline asm
	mov.b32 %r12183, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12184, %r12171, %r12183;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12187, %r11879, %r12184;
	// end inline asm
	// begin inline asm
	mov.b32 %r12190, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12191, %r12171, %r12190;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12194, %r11887, %r12191;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12197, %r12173, %r12187, %r4322;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12201, %r12180, %r12194, %r4322;
	// end inline asm
	shl.b32 	%r12208, %r12201, 4;
	// begin inline asm
	lop3.b32 %r12205, %r4328, %r12197, %r12208, 202;
	// end inline asm
	xor.b32  	%r16096, %r12205, -2004318072;
	// begin inline asm
	mov.b32 %r12212, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12210, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12211, %r12212, %r12210;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12214, %r11895, %r12211;
	// end inline asm
	// begin inline asm
	mov.b32 %r12217, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12218, %r12212, %r12217;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12221, %r11903, %r12218;
	// end inline asm
	// begin inline asm
	mov.b32 %r12224, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12225, %r12212, %r12224;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12228, %r11911, %r12225;
	// end inline asm
	// begin inline asm
	mov.b32 %r12231, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12232, %r12212, %r12231;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12235, %r11919, %r12232;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12238, %r12214, %r12228, %r4322;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12242, %r12221, %r12235, %r4322;
	// end inline asm
	shl.b32 	%r12249, %r12242, 4;
	// begin inline asm
	lop3.b32 %r12246, %r4328, %r12238, %r12249, 202;
	// end inline asm
	xor.b32  	%r16097, %r12246, -2004318072;
	st.shared.u32 	[%rd82], %r16090;
	st.shared.u32 	[%rd83], %r16091;
	st.shared.u32 	[%rd84], %r16092;
	st.shared.u32 	[%rd85], %r16093;
	st.shared.u32 	[%rd86], %r16094;
	st.shared.u32 	[%rd87], %r16095;
	st.shared.u32 	[%rd88], %r16096;
	st.shared.u32 	[%rd89], %r16097;
	ld.shared.u32 	%r16208, [%rd74];
	ld.shared.u32 	%r16209, [%rd75];
	ld.shared.u32 	%r16210, [%rd76];
	ld.shared.u32 	%r16211, [%rd77];
	ld.shared.u32 	%r16220, [%rd78];
	ld.shared.u32 	%r16221, [%rd79];
	ld.shared.u32 	%r16222, [%rd80];
	ld.shared.u32 	%r16223, [%rd81];
	// begin inline asm
	mov.b32 %r12255, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12266, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12254, %r16208, -2004318072;
	// begin inline asm
	lop3.b32 %r12252, %r805, %r12254, %r12255, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12256, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12257, %r12255, %r12256;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12260, %r12252, %r12257;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12263, %r816, %r12254, %r12266, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12267, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12268, %r12266, %r12267;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12271, %r12263, %r12268;
	// end inline asm
	shr.u32 	%r12276, %r12254, 8;
	// begin inline asm
	lop3.b32 %r12274, %r805, %r12276, %r12255, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12278, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12279, %r12255, %r12278;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12282, %r12274, %r12279;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12285, %r816, %r12276, %r12266, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12289, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12290, %r12266, %r12289;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12293, %r12285, %r12290;
	// end inline asm
	// begin inline asm
	mov.b32 %r12301, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12312, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12300, %r16209, -2004318072;
	// begin inline asm
	lop3.b32 %r12298, %r805, %r12300, %r12301, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12302, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12303, %r12301, %r12302;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12306, %r12298, %r12303;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12309, %r816, %r12300, %r12312, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12313, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12314, %r12312, %r12313;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12317, %r12309, %r12314;
	// end inline asm
	shr.u32 	%r12322, %r12300, 8;
	// begin inline asm
	lop3.b32 %r12320, %r805, %r12322, %r12301, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12324, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12325, %r12301, %r12324;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12328, %r12320, %r12325;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12331, %r816, %r12322, %r12312, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12335, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12336, %r12312, %r12335;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12339, %r12331, %r12336;
	// end inline asm
	// begin inline asm
	mov.b32 %r12347, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12358, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12346, %r16210, -2004318072;
	// begin inline asm
	lop3.b32 %r12344, %r805, %r12346, %r12347, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12348, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12349, %r12347, %r12348;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12352, %r12344, %r12349;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12355, %r816, %r12346, %r12358, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12359, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12360, %r12358, %r12359;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12363, %r12355, %r12360;
	// end inline asm
	shr.u32 	%r12368, %r12346, 8;
	// begin inline asm
	lop3.b32 %r12366, %r805, %r12368, %r12347, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12370, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12371, %r12347, %r12370;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12374, %r12366, %r12371;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12377, %r816, %r12368, %r12358, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12381, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12382, %r12358, %r12381;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12385, %r12377, %r12382;
	// end inline asm
	// begin inline asm
	mov.b32 %r12393, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12404, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12392, %r16211, -2004318072;
	// begin inline asm
	lop3.b32 %r12390, %r805, %r12392, %r12393, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12394, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12395, %r12393, %r12394;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12398, %r12390, %r12395;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12401, %r816, %r12392, %r12404, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12405, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12406, %r12404, %r12405;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12409, %r12401, %r12406;
	// end inline asm
	shr.u32 	%r12414, %r12392, 8;
	// begin inline asm
	lop3.b32 %r12412, %r805, %r12414, %r12393, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12416, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12417, %r12393, %r12416;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12420, %r12412, %r12417;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12423, %r816, %r12414, %r12404, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12427, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12428, %r12404, %r12427;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12431, %r12423, %r12428;
	// end inline asm
	// begin inline asm
	mov.b32 %r12439, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12450, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12438, %r16220, -2004318072;
	// begin inline asm
	lop3.b32 %r12436, %r805, %r12438, %r12439, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12440, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12441, %r12439, %r12440;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12444, %r12436, %r12441;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12447, %r816, %r12438, %r12450, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12451, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12452, %r12450, %r12451;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12455, %r12447, %r12452;
	// end inline asm
	shr.u32 	%r12460, %r12438, 8;
	// begin inline asm
	lop3.b32 %r12458, %r805, %r12460, %r12439, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12462, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12463, %r12439, %r12462;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12466, %r12458, %r12463;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12469, %r816, %r12460, %r12450, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12473, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12474, %r12450, %r12473;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12477, %r12469, %r12474;
	// end inline asm
	// begin inline asm
	mov.b32 %r12485, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12496, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12484, %r16221, -2004318072;
	// begin inline asm
	lop3.b32 %r12482, %r805, %r12484, %r12485, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12486, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12487, %r12485, %r12486;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12490, %r12482, %r12487;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12493, %r816, %r12484, %r12496, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12497, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12498, %r12496, %r12497;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12501, %r12493, %r12498;
	// end inline asm
	shr.u32 	%r12506, %r12484, 8;
	// begin inline asm
	lop3.b32 %r12504, %r805, %r12506, %r12485, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12508, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12509, %r12485, %r12508;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12512, %r12504, %r12509;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12515, %r816, %r12506, %r12496, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12519, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12520, %r12496, %r12519;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12523, %r12515, %r12520;
	// end inline asm
	// begin inline asm
	mov.b32 %r12531, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12542, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12530, %r16222, -2004318072;
	// begin inline asm
	lop3.b32 %r12528, %r805, %r12530, %r12531, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12532, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12533, %r12531, %r12532;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12536, %r12528, %r12533;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12539, %r816, %r12530, %r12542, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12543, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12544, %r12542, %r12543;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12547, %r12539, %r12544;
	// end inline asm
	shr.u32 	%r12552, %r12530, 8;
	// begin inline asm
	lop3.b32 %r12550, %r805, %r12552, %r12531, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12554, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12555, %r12531, %r12554;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12558, %r12550, %r12555;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12561, %r816, %r12552, %r12542, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12565, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12566, %r12542, %r12565;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12569, %r12561, %r12566;
	// end inline asm
	// begin inline asm
	mov.b32 %r12577, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12588, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12576, %r16223, -2004318072;
	// begin inline asm
	lop3.b32 %r12574, %r805, %r12576, %r12577, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12578, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12579, %r12577, %r12578;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12582, %r12574, %r12579;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12585, %r816, %r12576, %r12588, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12589, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12590, %r12588, %r12589;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12593, %r12585, %r12590;
	// end inline asm
	shr.u32 	%r12598, %r12576, 8;
	// begin inline asm
	lop3.b32 %r12596, %r805, %r12598, %r12577, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12600, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12601, %r12577, %r12600;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12604, %r12596, %r12601;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12607, %r816, %r12598, %r12588, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12611, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12612, %r12588, %r12611;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12615, %r12607, %r12612;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12618, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12620, %r12618, %r12260;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12623, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12625, %r12623, %r12271;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12628, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12630, %r12628, %r12282;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12633, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12635, %r12633, %r12293;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12638, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12640, %r12638, %r12306;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12643, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12645, %r12643, %r12317;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12648, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12650, %r12648, %r12328;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12653, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12655, %r12653, %r12339;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12658, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12660, %r12658, %r12352;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12663, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12665, %r12663, %r12363;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12668, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12670, %r12668, %r12374;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12673, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12675, %r12673, %r12385;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12678, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12680, %r12678, %r12398;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12683, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12685, %r12683, %r12409;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12688, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12690, %r12688, %r12420;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12693, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12695, %r12693, %r12431;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12698, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12700, %r12698, %r12444;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12703, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12705, %r12703, %r12455;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12708, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12710, %r12708, %r12466;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12713, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12715, %r12713, %r12477;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12718, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12720, %r12718, %r12490;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12723, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12725, %r12723, %r12501;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12728, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12730, %r12728, %r12512;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12733, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12735, %r12733, %r12523;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12738, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12740, %r12738, %r12536;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12743, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12745, %r12743, %r12547;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12748, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12750, %r12748, %r12558;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12753, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12755, %r12753, %r12569;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12758, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12760, %r12758, %r12582;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12763, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12765, %r12763, %r12593;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12768, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12770, %r12768, %r12604;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12773, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12775, %r12773, %r12615;
	// end inline asm
	// begin inline asm
	mov.b32 %r12783, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12794, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12780, %r805, %r806, %r12783, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12784, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12785, %r12783, %r12784;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12788, %r12780, %r12785;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12791, %r816, %r806, %r12794, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12795, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12796, %r12794, %r12795;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12799, %r12791, %r12796;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12802, %r805, %r828, %r12783, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12806, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12807, %r12783, %r12806;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12810, %r12802, %r12807;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12813, %r816, %r828, %r12794, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12817, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12818, %r12794, %r12817;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12821, %r12813, %r12818;
	// end inline asm
	// begin inline asm
	mov.b32 %r12829, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12840, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12826, %r805, %r852, %r12829, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12830, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12831, %r12829, %r12830;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12834, %r12826, %r12831;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12837, %r816, %r852, %r12840, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12841, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12842, %r12840, %r12841;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12845, %r12837, %r12842;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12848, %r805, %r874, %r12829, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12852, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12853, %r12829, %r12852;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12856, %r12848, %r12853;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12859, %r816, %r874, %r12840, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12863, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12864, %r12840, %r12863;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12867, %r12859, %r12864;
	// end inline asm
	// begin inline asm
	mov.b32 %r12875, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12886, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12872, %r805, %r898, %r12875, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12876, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12877, %r12875, %r12876;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12880, %r12872, %r12877;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12883, %r816, %r898, %r12886, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12887, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12888, %r12886, %r12887;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12891, %r12883, %r12888;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12894, %r805, %r920, %r12875, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12898, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12899, %r12875, %r12898;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12902, %r12894, %r12899;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12905, %r816, %r920, %r12886, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12909, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12910, %r12886, %r12909;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12913, %r12905, %r12910;
	// end inline asm
	// begin inline asm
	mov.b32 %r12921, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12932, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12918, %r805, %r944, %r12921, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12922, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12923, %r12921, %r12922;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12926, %r12918, %r12923;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12929, %r816, %r944, %r12932, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12933, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12934, %r12932, %r12933;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12937, %r12929, %r12934;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12940, %r805, %r966, %r12921, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12944, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12945, %r12921, %r12944;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12948, %r12940, %r12945;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12951, %r816, %r966, %r12932, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12955, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12956, %r12932, %r12955;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12959, %r12951, %r12956;
	// end inline asm
	// begin inline asm
	mov.b32 %r12967, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12978, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12964, %r805, %r990, %r12967, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12968, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12969, %r12967, %r12968;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12972, %r12964, %r12969;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12975, %r816, %r990, %r12978, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12979, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12980, %r12978, %r12979;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12983, %r12975, %r12980;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12986, %r805, %r1012, %r12967, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12990, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12991, %r12967, %r12990;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12994, %r12986, %r12991;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12997, %r816, %r1012, %r12978, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13001, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13002, %r12978, %r13001;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13005, %r12997, %r13002;
	// end inline asm
	// begin inline asm
	mov.b32 %r13013, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13024, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13010, %r805, %r1036, %r13013, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13014, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13015, %r13013, %r13014;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13018, %r13010, %r13015;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13021, %r816, %r1036, %r13024, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13025, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13026, %r13024, %r13025;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13029, %r13021, %r13026;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13032, %r805, %r1058, %r13013, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13036, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13037, %r13013, %r13036;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13040, %r13032, %r13037;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13043, %r816, %r1058, %r13024, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13047, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13048, %r13024, %r13047;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13051, %r13043, %r13048;
	// end inline asm
	// begin inline asm
	mov.b32 %r13059, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13070, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13056, %r805, %r1082, %r13059, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13060, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13061, %r13059, %r13060;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13064, %r13056, %r13061;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13067, %r816, %r1082, %r13070, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13071, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13072, %r13070, %r13071;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13075, %r13067, %r13072;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13078, %r805, %r1104, %r13059, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13082, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13083, %r13059, %r13082;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13086, %r13078, %r13083;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13089, %r816, %r1104, %r13070, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13093, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13094, %r13070, %r13093;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13097, %r13089, %r13094;
	// end inline asm
	// begin inline asm
	mov.b32 %r13105, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13116, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13102, %r805, %r1128, %r13105, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13106, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13107, %r13105, %r13106;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13110, %r13102, %r13107;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13113, %r816, %r1128, %r13116, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13117, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13118, %r13116, %r13117;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13121, %r13113, %r13118;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13124, %r805, %r1150, %r13105, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13128, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13129, %r13105, %r13128;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13132, %r13124, %r13129;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13135, %r816, %r1150, %r13116, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13139, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13140, %r13116, %r13139;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13143, %r13135, %r13140;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13146, %r272, %r12788, %r12620;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13150, %r272, %r12799, %r12625;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13154, %r272, %r12810, %r12630;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13158, %r272, %r12821, %r12635;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13162, %r272, %r12834, %r12640;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13166, %r272, %r12845, %r12645;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13170, %r272, %r12856, %r12650;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13174, %r272, %r12867, %r12655;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13178, %r272, %r12880, %r12660;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13182, %r272, %r12891, %r12665;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13186, %r272, %r12902, %r12670;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13190, %r272, %r12913, %r12675;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13194, %r272, %r12926, %r12680;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13198, %r272, %r12937, %r12685;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13202, %r272, %r12948, %r12690;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13206, %r272, %r12959, %r12695;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13210, %r290, %r12972, %r12700;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13214, %r290, %r12983, %r12705;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13218, %r290, %r12994, %r12710;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13222, %r290, %r13005, %r12715;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13226, %r290, %r13018, %r12720;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13230, %r290, %r13029, %r12725;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13234, %r290, %r13040, %r12730;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13238, %r290, %r13051, %r12735;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13242, %r290, %r13064, %r12740;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13246, %r290, %r13075, %r12745;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13250, %r290, %r13086, %r12750;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13254, %r290, %r13097, %r12755;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13258, %r290, %r13110, %r12760;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13262, %r290, %r13121, %r12765;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13266, %r290, %r13132, %r12770;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13270, %r290, %r13143, %r12775;
	// end inline asm
	// begin inline asm
	mov.b32 %r13279, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13290, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13276, %r805, %r4622, %r13279, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13280, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13281, %r13279, %r13280;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13284, %r13276, %r13281;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13287, %r816, %r4622, %r13290, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13291, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13292, %r13290, %r13291;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13295, %r13287, %r13292;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13298, %r805, %r4644, %r13279, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13302, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13303, %r13279, %r13302;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13306, %r13298, %r13303;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13309, %r816, %r4644, %r13290, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13313, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13314, %r13290, %r13313;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13317, %r13309, %r13314;
	// end inline asm
	// begin inline asm
	mov.b32 %r13325, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13336, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13322, %r805, %r4668, %r13325, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13326, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13327, %r13325, %r13326;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13330, %r13322, %r13327;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13333, %r816, %r4668, %r13336, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13337, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13338, %r13336, %r13337;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13341, %r13333, %r13338;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13344, %r805, %r4690, %r13325, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13348, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13349, %r13325, %r13348;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13352, %r13344, %r13349;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13355, %r816, %r4690, %r13336, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13359, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13360, %r13336, %r13359;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13363, %r13355, %r13360;
	// end inline asm
	// begin inline asm
	mov.b32 %r13371, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13382, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13368, %r805, %r4714, %r13371, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13372, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13373, %r13371, %r13372;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13376, %r13368, %r13373;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13379, %r816, %r4714, %r13382, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13383, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13384, %r13382, %r13383;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13387, %r13379, %r13384;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13390, %r805, %r4736, %r13371, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13394, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13395, %r13371, %r13394;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13398, %r13390, %r13395;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13401, %r816, %r4736, %r13382, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13405, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13406, %r13382, %r13405;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13409, %r13401, %r13406;
	// end inline asm
	// begin inline asm
	mov.b32 %r13417, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13428, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13414, %r805, %r4760, %r13417, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13418, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13419, %r13417, %r13418;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13422, %r13414, %r13419;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13425, %r816, %r4760, %r13428, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13429, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13430, %r13428, %r13429;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13433, %r13425, %r13430;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13436, %r805, %r4782, %r13417, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13440, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13441, %r13417, %r13440;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13444, %r13436, %r13441;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13447, %r816, %r4782, %r13428, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13451, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13452, %r13428, %r13451;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13455, %r13447, %r13452;
	// end inline asm
	// begin inline asm
	mov.b32 %r13463, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13474, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13460, %r805, %r4806, %r13463, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13464, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13465, %r13463, %r13464;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13468, %r13460, %r13465;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13471, %r816, %r4806, %r13474, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13475, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13476, %r13474, %r13475;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13479, %r13471, %r13476;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13482, %r805, %r4828, %r13463, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13486, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13487, %r13463, %r13486;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13490, %r13482, %r13487;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13493, %r816, %r4828, %r13474, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13497, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13498, %r13474, %r13497;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13501, %r13493, %r13498;
	// end inline asm
	// begin inline asm
	mov.b32 %r13509, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13520, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13506, %r805, %r4852, %r13509, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13510, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13511, %r13509, %r13510;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13514, %r13506, %r13511;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13517, %r816, %r4852, %r13520, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13521, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13522, %r13520, %r13521;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13525, %r13517, %r13522;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13528, %r805, %r4874, %r13509, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13532, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13533, %r13509, %r13532;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13536, %r13528, %r13533;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13539, %r816, %r4874, %r13520, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13543, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13544, %r13520, %r13543;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13547, %r13539, %r13544;
	// end inline asm
	// begin inline asm
	mov.b32 %r13555, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13566, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13552, %r805, %r4898, %r13555, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13556, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13557, %r13555, %r13556;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13560, %r13552, %r13557;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13563, %r816, %r4898, %r13566, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13567, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13568, %r13566, %r13567;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13571, %r13563, %r13568;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13574, %r805, %r4920, %r13555, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13578, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13579, %r13555, %r13578;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13582, %r13574, %r13579;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13585, %r816, %r4920, %r13566, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13589, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13590, %r13566, %r13589;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13593, %r13585, %r13590;
	// end inline asm
	// begin inline asm
	mov.b32 %r13601, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13612, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13598, %r805, %r4944, %r13601, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13602, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13603, %r13601, %r13602;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13606, %r13598, %r13603;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13609, %r816, %r4944, %r13612, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13613, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13614, %r13612, %r13613;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13617, %r13609, %r13614;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13620, %r805, %r4966, %r13601, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13624, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13625, %r13601, %r13624;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13628, %r13620, %r13625;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13631, %r816, %r4966, %r13612, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13635, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13636, %r13612, %r13635;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13639, %r13631, %r13636;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13642, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13644, %r13642, %r13284, %r13146;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13648, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13650, %r13648, %r13295, %r13150;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13654, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13656, %r13654, %r13306, %r13154;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13660, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13662, %r13660, %r13317, %r13158;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13666, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13668, %r13666, %r13330, %r13162;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13672, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13674, %r13672, %r13341, %r13166;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13678, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13680, %r13678, %r13352, %r13170;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13684, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13686, %r13684, %r13363, %r13174;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13690, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13692, %r13690, %r13376, %r13178;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13696, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13698, %r13696, %r13387, %r13182;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13702, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13704, %r13702, %r13398, %r13186;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13708, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13710, %r13708, %r13409, %r13190;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13714, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13716, %r13714, %r13422, %r13194;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13720, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13722, %r13720, %r13433, %r13198;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13726, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13728, %r13726, %r13444, %r13202;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13732, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13734, %r13732, %r13455, %r13206;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13738, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13740, %r13738, %r13468, %r13210;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13744, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13746, %r13744, %r13479, %r13214;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13750, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13752, %r13750, %r13490, %r13218;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13756, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13758, %r13756, %r13501, %r13222;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13762, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13764, %r13762, %r13514, %r13226;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13768, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13770, %r13768, %r13525, %r13230;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13774, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13776, %r13774, %r13536, %r13234;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13780, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13782, %r13780, %r13547, %r13238;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13786, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13788, %r13786, %r13560, %r13242;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13792, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13794, %r13792, %r13571, %r13246;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13798, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13800, %r13798, %r13582, %r13250;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13804, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13806, %r13804, %r13593, %r13254;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13810, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13812, %r13810, %r13606, %r13258;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13816, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13818, %r13816, %r13617, %r13262;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13822, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13824, %r13822, %r13628, %r13266;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13828, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13830, %r13828, %r13639, %r13270;
	// end inline asm
	// begin inline asm
	mov.b32 %r13839, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13850, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13836, %r805, %r8438, %r13839, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13840, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13841, %r13839, %r13840;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13844, %r13836, %r13841;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13847, %r816, %r8438, %r13850, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13851, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13852, %r13850, %r13851;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13855, %r13847, %r13852;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13858, %r805, %r8460, %r13839, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13862, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13863, %r13839, %r13862;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13866, %r13858, %r13863;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13869, %r816, %r8460, %r13850, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13873, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13874, %r13850, %r13873;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13877, %r13869, %r13874;
	// end inline asm
	// begin inline asm
	mov.b32 %r13885, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13896, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13882, %r805, %r8484, %r13885, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13886, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13887, %r13885, %r13886;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13890, %r13882, %r13887;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13893, %r816, %r8484, %r13896, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13897, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13898, %r13896, %r13897;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13901, %r13893, %r13898;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13904, %r805, %r8506, %r13885, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13908, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13909, %r13885, %r13908;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13912, %r13904, %r13909;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13915, %r816, %r8506, %r13896, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13919, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13920, %r13896, %r13919;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13923, %r13915, %r13920;
	// end inline asm
	// begin inline asm
	mov.b32 %r13931, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13942, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13928, %r805, %r8530, %r13931, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13932, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13933, %r13931, %r13932;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13936, %r13928, %r13933;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13939, %r816, %r8530, %r13942, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13943, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13944, %r13942, %r13943;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13947, %r13939, %r13944;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13950, %r805, %r8552, %r13931, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13954, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13955, %r13931, %r13954;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13958, %r13950, %r13955;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13961, %r816, %r8552, %r13942, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13965, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13966, %r13942, %r13965;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13969, %r13961, %r13966;
	// end inline asm
	// begin inline asm
	mov.b32 %r13977, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13988, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13974, %r805, %r8576, %r13977, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13978, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13979, %r13977, %r13978;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13982, %r13974, %r13979;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13985, %r816, %r8576, %r13988, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13989, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13990, %r13988, %r13989;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13993, %r13985, %r13990;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13996, %r805, %r8598, %r13977, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14000, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14001, %r13977, %r14000;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14004, %r13996, %r14001;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14007, %r816, %r8598, %r13988, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14011, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14012, %r13988, %r14011;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14015, %r14007, %r14012;
	// end inline asm
	// begin inline asm
	mov.b32 %r14023, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r14034, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14020, %r805, %r8622, %r14023, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14024, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14025, %r14023, %r14024;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14028, %r14020, %r14025;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14031, %r816, %r8622, %r14034, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14035, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14036, %r14034, %r14035;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14039, %r14031, %r14036;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14042, %r805, %r8644, %r14023, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14046, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14047, %r14023, %r14046;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14050, %r14042, %r14047;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14053, %r816, %r8644, %r14034, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14057, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14058, %r14034, %r14057;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14061, %r14053, %r14058;
	// end inline asm
	// begin inline asm
	mov.b32 %r14069, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r14080, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14066, %r805, %r8668, %r14069, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14070, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14071, %r14069, %r14070;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14074, %r14066, %r14071;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14077, %r816, %r8668, %r14080, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14081, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14082, %r14080, %r14081;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14085, %r14077, %r14082;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14088, %r805, %r8690, %r14069, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14092, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14093, %r14069, %r14092;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14096, %r14088, %r14093;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14099, %r816, %r8690, %r14080, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14103, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14104, %r14080, %r14103;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14107, %r14099, %r14104;
	// end inline asm
	// begin inline asm
	mov.b32 %r14115, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r14126, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14112, %r805, %r8714, %r14115, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14116, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14117, %r14115, %r14116;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14120, %r14112, %r14117;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14123, %r816, %r8714, %r14126, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14127, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14128, %r14126, %r14127;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14131, %r14123, %r14128;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14134, %r805, %r8736, %r14115, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14138, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14139, %r14115, %r14138;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14142, %r14134, %r14139;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14145, %r816, %r8736, %r14126, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14149, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14150, %r14126, %r14149;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14153, %r14145, %r14150;
	// end inline asm
	// begin inline asm
	mov.b32 %r14161, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r14172, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14158, %r805, %r8760, %r14161, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14162, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14163, %r14161, %r14162;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14166, %r14158, %r14163;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14169, %r816, %r8760, %r14172, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14173, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14174, %r14172, %r14173;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14177, %r14169, %r14174;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14180, %r805, %r8782, %r14161, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14184, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14185, %r14161, %r14184;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14188, %r14180, %r14185;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14191, %r816, %r8782, %r14172, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14195, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14196, %r14172, %r14195;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14199, %r14191, %r14196;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14337, %r344, %r13844, %r13644;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14334, %r344, %r13855, %r13650;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14346, %r344, %r13866, %r13656;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14343, %r344, %r13877, %r13662;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14355, %r344, %r13890, %r13668;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14352, %r344, %r13901, %r13674;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14364, %r344, %r13912, %r13680;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14361, %r344, %r13923, %r13686;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14373, %r344, %r13936, %r13692;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14370, %r344, %r13947, %r13698;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14382, %r344, %r13958, %r13704;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14379, %r344, %r13969, %r13710;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14391, %r344, %r13982, %r13716;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14388, %r344, %r13993, %r13722;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14400, %r344, %r14004, %r13728;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14397, %r344, %r14015, %r13734;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14409, %r362, %r14028, %r13740;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14406, %r362, %r14039, %r13746;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14418, %r362, %r14050, %r13752;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14415, %r362, %r14061, %r13758;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14427, %r362, %r14074, %r13764;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14424, %r362, %r14085, %r13770;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14436, %r362, %r14096, %r13776;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14433, %r362, %r14107, %r13782;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14445, %r362, %r14120, %r13788;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14442, %r362, %r14131, %r13794;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14454, %r362, %r14142, %r13800;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14451, %r362, %r14153, %r13806;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14463, %r362, %r14166, %r13812;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14460, %r362, %r14177, %r13818;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14472, %r362, %r14188, %r13824;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14469, %r362, %r14199, %r13830;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14330, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14332, %r14330, %r14334;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14335, %r426, %r14337, %r14332;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14339, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14341, %r14339, %r14343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14344, %r426, %r14346, %r14341;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14348, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14350, %r14348, %r14352;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14353, %r426, %r14355, %r14350;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14357, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14359, %r14357, %r14361;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14362, %r426, %r14364, %r14359;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14366, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14368, %r14366, %r14370;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14371, %r426, %r14373, %r14368;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14375, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14377, %r14375, %r14379;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14380, %r426, %r14382, %r14377;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14384, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14386, %r14384, %r14388;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14389, %r426, %r14391, %r14386;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14393, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14395, %r14393, %r14397;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14398, %r426, %r14400, %r14395;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14402, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14404, %r14402, %r14406;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14407, %r429, %r14409, %r14404;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14411, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14413, %r14411, %r14415;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14416, %r429, %r14418, %r14413;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14420, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14422, %r14420, %r14424;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14425, %r429, %r14427, %r14422;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14429, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14431, %r14429, %r14433;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14434, %r429, %r14436, %r14431;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14438, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14440, %r14438, %r14442;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14443, %r429, %r14445, %r14440;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14447, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14449, %r14447, %r14451;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14452, %r429, %r14454, %r14449;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14456, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14458, %r14456, %r14460;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14461, %r429, %r14463, %r14458;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14465, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14467, %r14465, %r14469;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14470, %r429, %r14472, %r14467;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14474, %r432, %r14337;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14477, %r426, %r14334, %r14474;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14481, %r432, %r14346;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14484, %r426, %r14343, %r14481;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14488, %r432, %r14355;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14491, %r426, %r14352, %r14488;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14495, %r432, %r14364;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14498, %r426, %r14361, %r14495;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14502, %r432, %r14373;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14505, %r426, %r14370, %r14502;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14509, %r432, %r14382;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14512, %r426, %r14379, %r14509;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14516, %r432, %r14391;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14519, %r426, %r14388, %r14516;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14523, %r432, %r14400;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14526, %r426, %r14397, %r14523;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14530, %r435, %r14409;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14533, %r429, %r14406, %r14530;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14537, %r435, %r14418;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14540, %r429, %r14415, %r14537;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14544, %r435, %r14427;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14547, %r429, %r14424, %r14544;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14551, %r435, %r14436;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14554, %r429, %r14433, %r14551;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14558, %r435, %r14445;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14561, %r429, %r14442, %r14558;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14565, %r435, %r14454;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14568, %r429, %r14451, %r14565;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14572, %r435, %r14463;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14575, %r429, %r14460, %r14572;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14579, %r435, %r14472;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14582, %r429, %r14469, %r14579;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14753, %r14750}, {%r474, %r480, %r477, %r483}, {%r14335, %r14477}, {%r15161, %r15161};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14762, %r14759}, {%r474, %r480, %r477, %r483}, {%r14344, %r14484}, {%r15161, %r15161};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14771, %r14768}, {%r474, %r480, %r477, %r483}, {%r14353, %r14491}, {%r15161, %r15161};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14780, %r14777}, {%r474, %r480, %r477, %r483}, {%r14362, %r14498}, {%r15161, %r15161};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14789, %r14786}, {%r474, %r480, %r477, %r483}, {%r14371, %r14505}, {%r15161, %r15161};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14798, %r14795}, {%r474, %r480, %r477, %r483}, {%r14380, %r14512}, {%r15161, %r15161};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14807, %r14804}, {%r474, %r480, %r477, %r483}, {%r14389, %r14519}, {%r15161, %r15161};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14816, %r14813}, {%r474, %r480, %r477, %r483}, {%r14398, %r14526}, {%r15161, %r15161};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14825, %r14822}, {%r474, %r480, %r477, %r483}, {%r14407, %r14533}, {%r15161, %r15161};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14834, %r14831}, {%r474, %r480, %r477, %r483}, {%r14416, %r14540}, {%r15161, %r15161};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14843, %r14840}, {%r474, %r480, %r477, %r483}, {%r14425, %r14547}, {%r15161, %r15161};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14852, %r14849}, {%r474, %r480, %r477, %r483}, {%r14434, %r14554}, {%r15161, %r15161};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14861, %r14858}, {%r474, %r480, %r477, %r483}, {%r14443, %r14561}, {%r15161, %r15161};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14870, %r14867}, {%r474, %r480, %r477, %r483}, {%r14452, %r14568}, {%r15161, %r15161};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14879, %r14876}, {%r474, %r480, %r477, %r483}, {%r14461, %r14575}, {%r15161, %r15161};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14888, %r14885}, {%r474, %r480, %r477, %r483}, {%r14470, %r14582}, {%r15161, %r15161};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14746, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14748, %r14746, %r14750;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14751, %r521, %r14753, %r14748;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14755, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14757, %r14755, %r14759;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14760, %r521, %r14762, %r14757;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14764, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14766, %r14764, %r14768;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14769, %r521, %r14771, %r14766;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14773, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14775, %r14773, %r14777;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14778, %r521, %r14780, %r14775;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14782, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14784, %r14782, %r14786;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14787, %r521, %r14789, %r14784;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14791, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14793, %r14791, %r14795;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14796, %r521, %r14798, %r14793;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14800, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14802, %r14800, %r14804;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14805, %r521, %r14807, %r14802;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14809, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14811, %r14809, %r14813;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14814, %r521, %r14816, %r14811;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14818, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14820, %r14818, %r14822;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14823, %r521, %r14825, %r14820;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14827, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14829, %r14827, %r14831;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14832, %r521, %r14834, %r14829;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14836, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14838, %r14836, %r14840;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14841, %r521, %r14843, %r14838;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14845, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14847, %r14845, %r14849;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14850, %r521, %r14852, %r14847;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14854, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14856, %r14854, %r14858;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14859, %r521, %r14861, %r14856;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14863, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14865, %r14863, %r14867;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14868, %r521, %r14870, %r14865;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14872, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14874, %r14872, %r14876;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14877, %r521, %r14879, %r14874;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14881, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14883, %r14881, %r14885;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14886, %r521, %r14888, %r14883;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14890, %r524, %r14753;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14893, %r521, %r14750, %r14890;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14897, %r524, %r14762;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14900, %r521, %r14759, %r14897;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14904, %r524, %r14771;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14907, %r521, %r14768, %r14904;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14911, %r524, %r14780;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14914, %r521, %r14777, %r14911;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14918, %r524, %r14789;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14921, %r521, %r14786, %r14918;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14925, %r524, %r14798;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14928, %r521, %r14795, %r14925;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14932, %r524, %r14807;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14935, %r521, %r14804, %r14932;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14939, %r524, %r14816;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14942, %r521, %r14813, %r14939;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14946, %r524, %r14825;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14949, %r521, %r14822, %r14946;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14953, %r524, %r14834;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14956, %r521, %r14831, %r14953;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14960, %r524, %r14843;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14963, %r521, %r14840, %r14960;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14967, %r524, %r14852;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14970, %r521, %r14849, %r14967;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14974, %r524, %r14861;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14977, %r521, %r14858, %r14974;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14981, %r524, %r14870;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14984, %r521, %r14867, %r14981;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14988, %r524, %r14879;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14991, %r521, %r14876, %r14988;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14995, %r524, %r14888;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14998, %r521, %r14885, %r14995;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15291, %r15294}, {%r564, %r570, %r567, %r573}, {%r14751, %r14893}, {%r15161, %r15161};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15297, %r15300}, {%r564, %r570, %r567, %r573}, {%r14760, %r14900}, {%r15161, %r15161};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15303, %r15306}, {%r564, %r570, %r567, %r573}, {%r14769, %r14907}, {%r15161, %r15161};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15309, %r15312}, {%r564, %r570, %r567, %r573}, {%r14778, %r14914}, {%r15161, %r15161};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15315, %r15318}, {%r564, %r570, %r567, %r573}, {%r14787, %r14921}, {%r15161, %r15161};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15321, %r15324}, {%r564, %r570, %r567, %r573}, {%r14796, %r14928}, {%r15161, %r15161};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15327, %r15330}, {%r564, %r570, %r567, %r573}, {%r14805, %r14935}, {%r15161, %r15161};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15333, %r15336}, {%r564, %r570, %r567, %r573}, {%r14814, %r14942}, {%r15161, %r15161};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15292, %r15295}, {%r564, %r570, %r567, %r573}, {%r14823, %r14949}, {%r15161, %r15161};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15298, %r15301}, {%r564, %r570, %r567, %r573}, {%r14832, %r14956}, {%r15161, %r15161};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15304, %r15307}, {%r564, %r570, %r567, %r573}, {%r14841, %r14963}, {%r15161, %r15161};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15310, %r15313}, {%r564, %r570, %r567, %r573}, {%r14850, %r14970}, {%r15161, %r15161};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15316, %r15319}, {%r564, %r570, %r567, %r573}, {%r14859, %r14977}, {%r15161, %r15161};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15322, %r15325}, {%r564, %r570, %r567, %r573}, {%r14868, %r14984}, {%r15161, %r15161};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15328, %r15331}, {%r564, %r570, %r567, %r573}, {%r14877, %r14991}, {%r15161, %r15161};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15334, %r15337}, {%r564, %r570, %r567, %r573}, {%r14886, %r14998}, {%r15161, %r15161};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15290, %r15291, %r15292;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15293, %r15294, %r15295;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15296, %r15297, %r15298;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15299, %r15300, %r15301;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15302, %r15303, %r15304;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15305, %r15306, %r15307;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15308, %r15309, %r15310;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15311, %r15312, %r15313;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15314, %r15315, %r15316;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15317, %r15318, %r15319;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15320, %r15321, %r15322;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15323, %r15324, %r15325;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15326, %r15327, %r15328;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15329, %r15330, %r15331;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15332, %r15333, %r15334;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15335, %r15336, %r15337;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15338, %r15291, %r15292;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15341, %r15294, %r15295;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15344, %r15297, %r15298;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15347, %r15300, %r15301;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15350, %r15303, %r15304;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15353, %r15306, %r15307;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15356, %r15309, %r15310;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15359, %r15312, %r15313;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15362, %r15315, %r15316;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15365, %r15318, %r15319;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15368, %r15321, %r15322;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15371, %r15324, %r15325;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15374, %r15327, %r15328;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15377, %r15330, %r15331;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15380, %r15333, %r15334;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15383, %r15336, %r15337;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15386, %r13, %r15290;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15389, %r13, %r15293;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15392, %r13, %r15296;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15395, %r13, %r15299;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15398, %r13, %r15302;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15401, %r13, %r15305;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15404, %r13, %r15308;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15407, %r13, %r15311;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15410, %r13, %r15314;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15413, %r13, %r15317;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15416, %r13, %r15320;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15419, %r13, %r15323;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15422, %r13, %r15326;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15425, %r13, %r15329;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15428, %r13, %r15332;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15431, %r13, %r15335;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15434, %r14, %r15338;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15437, %r14, %r15341;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15440, %r14, %r15344;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15443, %r14, %r15347;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15446, %r14, %r15350;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15449, %r14, %r15353;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15452, %r14, %r15356;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15455, %r14, %r15359;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15458, %r14, %r15362;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15461, %r14, %r15365;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15464, %r14, %r15368;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15467, %r14, %r15371;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15470, %r14, %r15374;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15473, %r14, %r15377;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15476, %r14, %r15380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15479, %r14, %r15383;
	// end inline asm
	// begin inline asm
	mov.b32 %r15482, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15483, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15484, %r15386, %r15482;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15487, %r15484, %r15483;
	// end inline asm
	// begin inline asm
	mov.b32 %r15490, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15491, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15492, %r15389, %r15490;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15495, %r15492, %r15491;
	// end inline asm
	// begin inline asm
	mov.b32 %r15498, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15499, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15500, %r15392, %r15498;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15503, %r15500, %r15499;
	// end inline asm
	// begin inline asm
	mov.b32 %r15506, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15507, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15508, %r15395, %r15506;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15511, %r15508, %r15507;
	// end inline asm
	// begin inline asm
	mov.b32 %r15514, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15515, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15516, %r15398, %r15514;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15519, %r15516, %r15515;
	// end inline asm
	// begin inline asm
	mov.b32 %r15522, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15523, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15524, %r15401, %r15522;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15527, %r15524, %r15523;
	// end inline asm
	// begin inline asm
	mov.b32 %r15530, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15531, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15532, %r15404, %r15530;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15535, %r15532, %r15531;
	// end inline asm
	// begin inline asm
	mov.b32 %r15538, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15539, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15540, %r15407, %r15538;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15543, %r15540, %r15539;
	// end inline asm
	// begin inline asm
	mov.b32 %r15546, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15547, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15548, %r15410, %r15546;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15551, %r15548, %r15547;
	// end inline asm
	// begin inline asm
	mov.b32 %r15554, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15555, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15556, %r15413, %r15554;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15559, %r15556, %r15555;
	// end inline asm
	// begin inline asm
	mov.b32 %r15562, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15563, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15564, %r15416, %r15562;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15567, %r15564, %r15563;
	// end inline asm
	// begin inline asm
	mov.b32 %r15570, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15571, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15572, %r15419, %r15570;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15575, %r15572, %r15571;
	// end inline asm
	// begin inline asm
	mov.b32 %r15578, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15579, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15580, %r15422, %r15578;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15583, %r15580, %r15579;
	// end inline asm
	// begin inline asm
	mov.b32 %r15586, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15587, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15588, %r15425, %r15586;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15591, %r15588, %r15587;
	// end inline asm
	// begin inline asm
	mov.b32 %r15594, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15595, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15596, %r15428, %r15594;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15599, %r15596, %r15595;
	// end inline asm
	// begin inline asm
	mov.b32 %r15602, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15603, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15604, %r15431, %r15602;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15607, %r15604, %r15603;
	// end inline asm
	// begin inline asm
	mov.b32 %r15610, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15611, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15612, %r15434, %r15610;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15615, %r15612, %r15611;
	// end inline asm
	// begin inline asm
	mov.b32 %r15618, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15619, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15620, %r15437, %r15618;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15623, %r15620, %r15619;
	// end inline asm
	// begin inline asm
	mov.b32 %r15626, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15627, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15628, %r15440, %r15626;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15631, %r15628, %r15627;
	// end inline asm
	// begin inline asm
	mov.b32 %r15634, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15635, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15636, %r15443, %r15634;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15639, %r15636, %r15635;
	// end inline asm
	// begin inline asm
	mov.b32 %r15642, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15643, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15644, %r15446, %r15642;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15647, %r15644, %r15643;
	// end inline asm
	// begin inline asm
	mov.b32 %r15650, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15651, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15652, %r15449, %r15650;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15655, %r15652, %r15651;
	// end inline asm
	// begin inline asm
	mov.b32 %r15658, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15659, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15660, %r15452, %r15658;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15663, %r15660, %r15659;
	// end inline asm
	// begin inline asm
	mov.b32 %r15666, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15667, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15668, %r15455, %r15666;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15671, %r15668, %r15667;
	// end inline asm
	// begin inline asm
	mov.b32 %r15674, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15675, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15676, %r15458, %r15674;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15679, %r15676, %r15675;
	// end inline asm
	// begin inline asm
	mov.b32 %r15682, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15683, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15684, %r15461, %r15682;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15687, %r15684, %r15683;
	// end inline asm
	// begin inline asm
	mov.b32 %r15690, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15691, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15692, %r15464, %r15690;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15695, %r15692, %r15691;
	// end inline asm
	// begin inline asm
	mov.b32 %r15698, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15699, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15700, %r15467, %r15698;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15703, %r15700, %r15699;
	// end inline asm
	// begin inline asm
	mov.b32 %r15706, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15707, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15708, %r15470, %r15706;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15711, %r15708, %r15707;
	// end inline asm
	// begin inline asm
	mov.b32 %r15714, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15715, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15716, %r15473, %r15714;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15719, %r15716, %r15715;
	// end inline asm
	// begin inline asm
	mov.b32 %r15722, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15723, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15724, %r15476, %r15722;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15727, %r15724, %r15723;
	// end inline asm
	// begin inline asm
	mov.b32 %r15730, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15731, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15732, %r15479, %r15730;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15735, %r15732, %r15731;
	// end inline asm
	// begin inline asm
	mov.b32 %r15741, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r15739, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15740, %r15741, %r15739;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15743, %r15487, %r15740;
	// end inline asm
	// begin inline asm
	mov.b32 %r15746, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15747, %r15741, %r15746;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15750, %r15495, %r15747;
	// end inline asm
	// begin inline asm
	mov.b32 %r15753, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15754, %r15741, %r15753;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15757, %r15503, %r15754;
	// end inline asm
	// begin inline asm
	mov.b32 %r15760, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15761, %r15741, %r15760;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15764, %r15511, %r15761;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15767, %r15743, %r15757, %r4322;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15771, %r15750, %r15764, %r4322;
	// end inline asm
	shl.b32 	%r15778, %r15771, 4;
	// begin inline asm
	lop3.b32 %r15775, %r4328, %r15767, %r15778, 202;
	// end inline asm
	xor.b32  	%r16098, %r15775, -2004318072;
	// begin inline asm
	mov.b32 %r15782, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r15780, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15781, %r15782, %r15780;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15784, %r15519, %r15781;
	// end inline asm
	// begin inline asm
	mov.b32 %r15787, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15788, %r15782, %r15787;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15791, %r15527, %r15788;
	// end inline asm
	// begin inline asm
	mov.b32 %r15794, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15795, %r15782, %r15794;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15798, %r15535, %r15795;
	// end inline asm
	// begin inline asm
	mov.b32 %r15801, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15802, %r15782, %r15801;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15805, %r15543, %r15802;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15808, %r15784, %r15798, %r4322;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15812, %r15791, %r15805, %r4322;
	// end inline asm
	shl.b32 	%r15819, %r15812, 4;
	// begin inline asm
	lop3.b32 %r15816, %r4328, %r15808, %r15819, 202;
	// end inline asm
	xor.b32  	%r16099, %r15816, -2004318072;
	// begin inline asm
	mov.b32 %r15823, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r15821, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15822, %r15823, %r15821;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15825, %r15551, %r15822;
	// end inline asm
	// begin inline asm
	mov.b32 %r15828, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15829, %r15823, %r15828;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15832, %r15559, %r15829;
	// end inline asm
	// begin inline asm
	mov.b32 %r15835, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15836, %r15823, %r15835;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15839, %r15567, %r15836;
	// end inline asm
	// begin inline asm
	mov.b32 %r15842, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15843, %r15823, %r15842;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15846, %r15575, %r15843;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15849, %r15825, %r15839, %r4322;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15853, %r15832, %r15846, %r4322;
	// end inline asm
	shl.b32 	%r15860, %r15853, 4;
	// begin inline asm
	lop3.b32 %r15857, %r4328, %r15849, %r15860, 202;
	// end inline asm
	xor.b32  	%r16100, %r15857, -2004318072;
	// begin inline asm
	mov.b32 %r15864, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r15862, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15863, %r15864, %r15862;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15866, %r15583, %r15863;
	// end inline asm
	// begin inline asm
	mov.b32 %r15869, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15870, %r15864, %r15869;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15873, %r15591, %r15870;
	// end inline asm
	// begin inline asm
	mov.b32 %r15876, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15877, %r15864, %r15876;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15880, %r15599, %r15877;
	// end inline asm
	// begin inline asm
	mov.b32 %r15883, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15884, %r15864, %r15883;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15887, %r15607, %r15884;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15890, %r15866, %r15880, %r4322;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15894, %r15873, %r15887, %r4322;
	// end inline asm
	shl.b32 	%r15901, %r15894, 4;
	// begin inline asm
	lop3.b32 %r15898, %r4328, %r15890, %r15901, 202;
	// end inline asm
	xor.b32  	%r16101, %r15898, -2004318072;
	// begin inline asm
	mov.b32 %r15905, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r15903, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15904, %r15905, %r15903;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15907, %r15615, %r15904;
	// end inline asm
	// begin inline asm
	mov.b32 %r15910, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15911, %r15905, %r15910;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15914, %r15623, %r15911;
	// end inline asm
	// begin inline asm
	mov.b32 %r15917, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15918, %r15905, %r15917;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15921, %r15631, %r15918;
	// end inline asm
	// begin inline asm
	mov.b32 %r15924, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15925, %r15905, %r15924;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15928, %r15639, %r15925;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15931, %r15907, %r15921, %r4322;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15935, %r15914, %r15928, %r4322;
	// end inline asm
	shl.b32 	%r15942, %r15935, 4;
	// begin inline asm
	lop3.b32 %r15939, %r4328, %r15931, %r15942, 202;
	// end inline asm
	xor.b32  	%r16102, %r15939, -2004318072;
	// begin inline asm
	mov.b32 %r15946, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r15944, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15945, %r15946, %r15944;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15948, %r15647, %r15945;
	// end inline asm
	// begin inline asm
	mov.b32 %r15951, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15952, %r15946, %r15951;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15955, %r15655, %r15952;
	// end inline asm
	// begin inline asm
	mov.b32 %r15958, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15959, %r15946, %r15958;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15962, %r15663, %r15959;
	// end inline asm
	// begin inline asm
	mov.b32 %r15965, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15966, %r15946, %r15965;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15969, %r15671, %r15966;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15972, %r15948, %r15962, %r4322;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15976, %r15955, %r15969, %r4322;
	// end inline asm
	shl.b32 	%r15983, %r15976, 4;
	// begin inline asm
	lop3.b32 %r15980, %r4328, %r15972, %r15983, 202;
	// end inline asm
	xor.b32  	%r16103, %r15980, -2004318072;
	// begin inline asm
	mov.b32 %r15987, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r15985, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15986, %r15987, %r15985;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15989, %r15679, %r15986;
	// end inline asm
	// begin inline asm
	mov.b32 %r15992, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15993, %r15987, %r15992;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15996, %r15687, %r15993;
	// end inline asm
	// begin inline asm
	mov.b32 %r15999, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16000, %r15987, %r15999;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16003, %r15695, %r16000;
	// end inline asm
	// begin inline asm
	mov.b32 %r16006, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16007, %r15987, %r16006;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16010, %r15703, %r16007;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16013, %r15989, %r16003, %r4322;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16017, %r15996, %r16010, %r4322;
	// end inline asm
	shl.b32 	%r16024, %r16017, 4;
	// begin inline asm
	lop3.b32 %r16021, %r4328, %r16013, %r16024, 202;
	// end inline asm
	xor.b32  	%r16104, %r16021, -2004318072;
	// begin inline asm
	mov.b32 %r16028, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r16026, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16027, %r16028, %r16026;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16030, %r15711, %r16027;
	// end inline asm
	// begin inline asm
	mov.b32 %r16033, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16034, %r16028, %r16033;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16037, %r15719, %r16034;
	// end inline asm
	// begin inline asm
	mov.b32 %r16040, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16041, %r16028, %r16040;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16044, %r15727, %r16041;
	// end inline asm
	// begin inline asm
	mov.b32 %r16047, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16048, %r16028, %r16047;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16051, %r15735, %r16048;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16054, %r16030, %r16044, %r4322;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16058, %r16037, %r16051, %r4322;
	// end inline asm
	shl.b32 	%r16065, %r16058, 4;
	// begin inline asm
	lop3.b32 %r16062, %r4328, %r16054, %r16065, 202;
	// end inline asm
	xor.b32  	%r16105, %r16062, -2004318072;
	st.shared.u32 	[%rd82], %r16098;
	st.shared.u32 	[%rd83], %r16099;
	st.shared.u32 	[%rd84], %r16100;
	st.shared.u32 	[%rd85], %r16101;
	st.shared.u32 	[%rd86], %r16102;
	st.shared.u32 	[%rd87], %r16103;
	st.shared.u32 	[%rd88], %r16104;
	st.shared.u32 	[%rd89], %r16105;
	add.s32 	%r16199, %r16199, -128;
	add.s64 	%rd94, %rd94, 16644;
	setp.eq.s32 	%p302, %r16199, 0;
	@%p302 bra 	LBB0_179;
	bra.uni 	LBB0_178;
LBB0_179:                               // %guard_pass22980
                                        //   in Loop: Header=BB0_177 Depth=1
	bar.sync 	0;
	ld.shared.u32 	%r16111, [%rd13];
	ld.shared.u32 	%r16112, [%rd14+128];
	ld.shared.u32 	%r16119, [%rd14+4];
	ld.shared.u32 	%r16120, [%rd14+132];
	ld.shared.u32 	%r16127, [%rd15];
	ld.shared.u32 	%r16128, [%rd16+128];
	ld.shared.u32 	%r16135, [%rd16+4];
	ld.shared.u32 	%r16136, [%rd16+132];
	// begin inline asm
	prmt.b32 %r16106, %r16111, %r16112, %r774;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16110, %r16111, %r16112, %r778;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16114, %r16119, %r16120, %r774;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16118, %r16119, %r16120, %r778;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16122, %r16127, %r16128, %r774;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16126, %r16127, %r16128, %r778;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16130, %r16135, %r16136, %r774;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16134, %r16135, %r16136, %r778;
	// end inline asm
	selp.b32 	%r16138, %r16110, %r16106, %p301;
	shfl.sync.bfly.b32	%r234, %r16138, 8, 31, -1;
	selp.b32 	%r16139, %r16118, %r16114, %p301;
	shfl.sync.bfly.b32	%r235, %r16139, 8, 31, -1;
	selp.b32 	%r16140, %r16126, %r16122, %p301;
	shfl.sync.bfly.b32	%r236, %r16140, 8, 31, -1;
	selp.b32 	%r16141, %r16134, %r16130, %p301;
	shfl.sync.bfly.b32	%r237, %r16141, 8, 31, -1;
	setp.lt.u32 	%p304, %r174, 384;
	@%p304 bra 	LBB0_181;
// %bb.180:                             // %L63134
                                        //   in Loop: Header=BB0_177 Depth=1
	selp.b32 	%r16142, %r237, %r16134, %p301;
	selp.b32 	%r16143, %r16130, %r237, %p301;
	selp.b32 	%r16144, %r236, %r16126, %p301;
	selp.b32 	%r16145, %r16122, %r236, %p301;
	selp.b32 	%r16146, %r235, %r16118, %p301;
	selp.b32 	%r16147, %r16114, %r235, %p301;
	selp.b32 	%r16148, %r234, %r16110, %p301;
	selp.b32 	%r16149, %r16106, %r234, %p301;
	shl.b32 	%r16150, %r174, 12;
	add.s32 	%r16151, %r148, %r16150;
	mul.wide.s32 	%rd90, %r16151, 4;
	add.s64 	%rd91, %rd3, %rd90;
	st.global.v4.u32 	[%rd91], {%r16149, %r16147, %r16148, %r16146};
	add.s32 	%r16152, %r149, %r16150;
	mul.wide.s32 	%rd92, %r16152, 4;
	add.s64 	%rd93, %rd3, %rd92;
	st.global.v4.u32 	[%rd93], {%r16145, %r16143, %r16144, %r16142};
	bra.uni 	LBB0_181;
LBB0_182:                               // %L63556
	st.global.u32 	[%rd4], %r15161;
	ret;
LBB0_1:                                 // %L8
	mov.u64 	%rd44, exception1;
	cvta.global.u64 	%rd45, %rd44;
	{ // callseq 0, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd45;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 0
	{ // callseq 1, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd35;
	st.param.b32 	[param0+8], %r238;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 1
	// begin inline asm
	exit;
	// end inline asm
	// begin inline asm
	exit;
	// end inline asm
LBB0_3:                                 // %L149
	mov.u32 	%r245, 2;
	st.global.u32 	[%rd4], %r245;
	mov.u64 	%rd47, exception5093;
	cvta.global.u64 	%rd48, %rd47;
	{ // callseq 2, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd48;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 2
	{ // callseq 3, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd35;
	st.param.b32 	[param0+8], %r238;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 3
	// begin inline asm
	exit;
	// end inline asm
	// begin inline asm
	exit;
	// end inline asm
                                        // -- End function
}
