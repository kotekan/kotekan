// PTX CompilerJob of upchan(CuDeviceVector{Int32, 1}, CuDeviceVector{Float16x2, 1}, CuDeviceVector{Int4x8, 1}, CuDeviceVector{Int4x8, 1}, CuDeviceVector{Int32, 1}) in world 33605 for sm_86, minthreads=512, blocks_per_sm=2

//
// Generated by LLVM NVPTX Back-End
//

.version 7.1
.target sm_86
.address_size 64

	// .globl	_Z17julia_upchan_409713CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE // -- Begin function _Z17julia_upchan_409713CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE
.func gpu_report_exception
(
	.param .b64 gpu_report_exception_param_0
)
.noreturn
{
	trap;
}
.func gpu_signal_exception
(
	.param .align 8 .b8 gpu_signal_exception_param_0[8]
)
.noreturn
{
	trap;
}
.extern .shared .align 32 .b8 shmem[];
.global .align 1 .b8 exception5095[6] = {101, 114, 114, 111, 114, 0};
.global .align 1 .b8 exception1[10] = {101, 120, 99, 101, 112, 116, 105, 111, 110, 0};
                                        // @_Z17julia_upchan_409713CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE
.visible .entry _Z17julia_upchan_409713CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE(
	.param .align 8 .b8 _Z17julia_upchan_409713CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_0[8],
	.param .align 8 .b8 _Z17julia_upchan_409713CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_1[32],
	.param .align 8 .b8 _Z17julia_upchan_409713CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_2[32],
	.param .align 8 .b8 _Z17julia_upchan_409713CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_3[32],
	.param .align 8 .b8 _Z17julia_upchan_409713CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_4[32],
	.param .align 8 .b8 _Z17julia_upchan_409713CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_5[32]
)
.reqntid 512, 1, 1
.minnctapersm 2
{
	.reg .pred 	%p<307>;
	.reg .b16 	%rs<2390>;
	.reg .b32 	%r<16220>;
	.reg .f32 	%f<1404>;
	.reg .b64 	%rd<95>;

// %bb.0:                               // %conversion
	ld.param.u64 	%rd35, [_Z17julia_upchan_409713CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_0];
	// begin inline asm
	mov.u32 %r238, %dynamic_smem_size;
	// end inline asm
	setp.gt.u32 	%p1, %r238, 66815;
	@%p1 bra 	LBB0_2;
	bra.uni 	LBB0_1;
LBB0_2:                                 // %L10
	ld.param.u64 	%rd40, [_Z17julia_upchan_409713CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_5];
	ld.param.u64 	%rd36, [_Z17julia_upchan_409713CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_1];
	mov.u32 	%r1, %ctaid.x;
	shl.b32 	%r2, %r1, 9;
	mov.u32 	%r3, %tid.y;
	shl.b32 	%r4, %r3, 5;
	mov.u32 	%r5, %tid.x;
	or.b32  	%r239, %r4, %r5;
	or.b32  	%r240, %r239, %r2;
	mul.wide.u32 	%rd46, %r240, 4;
	add.s64 	%rd4, %rd40, %rd46;
	mov.u32 	%r241, 1;
	st.global.u32 	[%rd4], %r241;
	ld.global.u32 	%r6, [%rd36];
	and.b32  	%r242, %r6, -32513;
	setp.eq.s32 	%p2, %r242, 0;
	@%p2 bra 	LBB0_4;
	bra.uni 	LBB0_3;
LBB0_4:                                 // %L255
	bfe.u32 	%r17, %r5, 1, 1;
	and.b32  	%r18, %r5, 1;
	bfe.u32 	%r20, %r5, 2, 1;
	shr.u32 	%r21, %r5, 4;
	shl.b32 	%r248, %r21, 2;
	shl.b32 	%r249, %r20, 3;
	shl.b32 	%r250, %r18, 4;
	shl.b32 	%r251, %r17, 5;
	or.b32  	%r252, %r250, %r251;
	or.b32  	%r253, %r249, %r252;
	or.b32  	%r254, %r248, %r253;
	bfe.u32 	%r23, %r5, 3, 1;
	shl.b32 	%r255, %r23, 1;
	or.b32  	%r24, %r255, %r254;
	or.b32  	%r25, %r24, 64;
	mov.f32 	%f255, 0f40000000;
	mov.f32 	%f256, 0f43FF8000;
	div.approx.f32 	%f1, %f256, %f255;
	cvt.rn.f32.s32 	%f257, %r24;
	sub.f32 	%f258, %f257, %f1;
	mov.f32 	%f287, 0f43000000;
	div.approx.f32 	%f3, %f258, %f287;
	setp.eq.f32 	%p8, %f3, 0f00000000;
	mov.f32 	%f1363, 0f3F800000;
	mov.f32 	%f1348, %f1363;
	@%p8 bra 	LBB0_6;
// %bb.5:                               // %L607
	sin.approx.f32 	%f288, %f3;
	div.approx.f32 	%f1348, %f288, %f3;
LBB0_6:                                 // %L610
	cvt.rn.f32.s32 	%f291, %r25;
	sub.f32 	%f292, %f291, %f1;
	div.approx.f32 	%f8, %f292, %f287;
	setp.eq.f32 	%p14, %f8, 0f00000000;
	mov.f32 	%f1349, %f1363;
	@%p14 bra 	LBB0_8;
// %bb.7:                               // %L627
	sin.approx.f32 	%f322, %f8;
	div.approx.f32 	%f1349, %f322, %f8;
LBB0_8:                                 // %L630
	or.b32  	%r273, %r24, 1;
	or.b32  	%r27, %r24, 65;
	cvt.rn.f32.s32 	%f326, %r273;
	sub.f32 	%f327, %f326, %f1;
	div.approx.f32 	%f12, %f327, %f287;
	setp.eq.f32 	%p20, %f12, 0f00000000;
	mov.f32 	%f1350, %f1363;
	@%p20 bra 	LBB0_10;
// %bb.9:                               // %L709
	sin.approx.f32 	%f357, %f12;
	div.approx.f32 	%f1350, %f357, %f12;
LBB0_10:                                // %L712
	cvt.rn.f32.s32 	%f360, %r27;
	sub.f32 	%f361, %f360, %f1;
	div.approx.f32 	%f17, %f361, %f287;
	setp.eq.f32 	%p26, %f17, 0f00000000;
	mov.f32 	%f1351, %f1363;
	@%p26 bra 	LBB0_12;
// %bb.11:                              // %L729
	sin.approx.f32 	%f391, %f17;
	div.approx.f32 	%f1351, %f391, %f17;
LBB0_12:                                // %L732
	or.b32  	%r291, %r24, 128;
	or.b32  	%r29, %r24, 192;
	cvt.rn.f32.s32 	%f395, %r291;
	sub.f32 	%f396, %f395, %f1;
	div.approx.f32 	%f21, %f396, %f287;
	setp.eq.f32 	%p32, %f21, 0f00000000;
	mov.f32 	%f1352, %f1363;
	@%p32 bra 	LBB0_14;
// %bb.13:                              // %L811
	sin.approx.f32 	%f426, %f21;
	div.approx.f32 	%f1352, %f426, %f21;
LBB0_14:                                // %L814
	cvt.rn.f32.s32 	%f429, %r29;
	sub.f32 	%f430, %f429, %f1;
	div.approx.f32 	%f26, %f430, %f287;
	setp.eq.f32 	%p38, %f26, 0f00000000;
	mov.f32 	%f1353, %f1363;
	@%p38 bra 	LBB0_16;
// %bb.15:                              // %L831
	sin.approx.f32 	%f460, %f26;
	div.approx.f32 	%f1353, %f460, %f26;
LBB0_16:                                // %L834
	or.b32  	%r309, %r24, 129;
	or.b32  	%r31, %r24, 193;
	cvt.rn.f32.s32 	%f464, %r309;
	sub.f32 	%f465, %f464, %f1;
	div.approx.f32 	%f30, %f465, %f287;
	setp.eq.f32 	%p44, %f30, 0f00000000;
	mov.f32 	%f1354, %f1363;
	@%p44 bra 	LBB0_18;
// %bb.17:                              // %L913
	sin.approx.f32 	%f495, %f30;
	div.approx.f32 	%f1354, %f495, %f30;
LBB0_18:                                // %L916
	cvt.rn.f32.s32 	%f498, %r31;
	sub.f32 	%f499, %f498, %f1;
	div.approx.f32 	%f35, %f499, %f287;
	setp.eq.f32 	%p50, %f35, 0f00000000;
	mov.f32 	%f1355, %f1363;
	@%p50 bra 	LBB0_20;
// %bb.19:                              // %L933
	sin.approx.f32 	%f529, %f35;
	div.approx.f32 	%f1355, %f529, %f35;
LBB0_20:                                // %L936
	or.b32  	%r327, %r24, 256;
	or.b32  	%r33, %r24, 320;
	cvt.rn.f32.s32 	%f533, %r327;
	sub.f32 	%f534, %f533, %f1;
	div.approx.f32 	%f39, %f534, %f287;
	setp.eq.f32 	%p56, %f39, 0f00000000;
	mov.f32 	%f1356, %f1363;
	@%p56 bra 	LBB0_22;
// %bb.21:                              // %L1015
	sin.approx.f32 	%f564, %f39;
	div.approx.f32 	%f1356, %f564, %f39;
LBB0_22:                                // %L1018
	mov.f32 	%f259, 0f44004000;
	cvt.rn.f32.s32 	%f567, %r33;
	sub.f32 	%f568, %f567, %f1;
	div.approx.f32 	%f44, %f568, %f287;
	setp.eq.f32 	%p62, %f44, 0f00000000;
	mov.f32 	%f1357, %f1363;
	@%p62 bra 	LBB0_24;
// %bb.23:                              // %L1035
	sin.approx.f32 	%f598, %f44;
	div.approx.f32 	%f1357, %f598, %f44;
LBB0_24:                                // %L1038
	div.approx.f32 	%f260, %f258, %f259;
	div.approx.f32 	%f294, %f292, %f259;
	div.approx.f32 	%f329, %f327, %f259;
	div.approx.f32 	%f363, %f361, %f259;
	div.approx.f32 	%f398, %f396, %f259;
	div.approx.f32 	%f432, %f430, %f259;
	div.approx.f32 	%f467, %f465, %f259;
	div.approx.f32 	%f501, %f499, %f259;
	div.approx.f32 	%f536, %f534, %f259;
	div.approx.f32 	%f570, %f568, %f259;
	or.b32  	%r345, %r24, 257;
	or.b32  	%r35, %r24, 321;
	cvt.rn.f32.s32 	%f602, %r345;
	sub.f32 	%f603, %f602, %f1;
	div.approx.f32 	%f605, %f603, %f259;
	div.approx.f32 	%f48, %f603, %f287;
	setp.eq.f32 	%p68, %f48, 0f00000000;
	mov.f32 	%f1358, %f1363;
	@%p68 bra 	LBB0_26;
// %bb.25:                              // %L1117
	sin.approx.f32 	%f633, %f48;
	div.approx.f32 	%f1358, %f633, %f48;
LBB0_26:                                // %L1120
	abs.f32 	%f261, %f260;
	abs.f32 	%f295, %f294;
	abs.f32 	%f330, %f329;
	abs.f32 	%f364, %f363;
	abs.f32 	%f399, %f398;
	abs.f32 	%f433, %f432;
	abs.f32 	%f468, %f467;
	abs.f32 	%f502, %f501;
	abs.f32 	%f537, %f536;
	abs.f32 	%f571, %f570;
	abs.f32 	%f606, %f605;
	cvt.rn.f32.s32 	%f636, %r35;
	sub.f32 	%f637, %f636, %f1;
	div.approx.f32 	%f639, %f637, %f259;
	abs.f32 	%f640, %f639;
	div.approx.f32 	%f53, %f637, %f287;
	setp.eq.f32 	%p74, %f53, 0f00000000;
	mov.f32 	%f1359, %f1363;
	@%p74 bra 	LBB0_28;
// %bb.27:                              // %L1137
	sin.approx.f32 	%f667, %f53;
	div.approx.f32 	%f1359, %f667, %f53;
LBB0_28:                                // %L1140
	setp.gt.f32 	%p3, %f261, 0f4B800000;
	mul.f32 	%f262, %f260, 0f00000000;
	setp.gt.f32 	%p9, %f295, 0f4B800000;
	mul.f32 	%f296, %f294, 0f00000000;
	setp.gt.f32 	%p15, %f330, 0f4B800000;
	mul.f32 	%f331, %f329, 0f00000000;
	setp.gt.f32 	%p21, %f364, 0f4B800000;
	mul.f32 	%f365, %f363, 0f00000000;
	setp.gt.f32 	%p27, %f399, 0f4B800000;
	mul.f32 	%f400, %f398, 0f00000000;
	setp.gt.f32 	%p33, %f433, 0f4B800000;
	mul.f32 	%f434, %f432, 0f00000000;
	setp.gt.f32 	%p39, %f468, 0f4B800000;
	mul.f32 	%f469, %f467, 0f00000000;
	setp.gt.f32 	%p45, %f502, 0f4B800000;
	mul.f32 	%f503, %f501, 0f00000000;
	setp.gt.f32 	%p51, %f537, 0f4B800000;
	mul.f32 	%f538, %f536, 0f00000000;
	setp.gt.f32 	%p57, %f571, 0f4B800000;
	mul.f32 	%f572, %f570, 0f00000000;
	setp.gt.f32 	%p63, %f606, 0f4B800000;
	mul.f32 	%f607, %f605, 0f00000000;
	setp.gt.f32 	%p69, %f640, 0f4B800000;
	mul.f32 	%f641, %f639, 0f00000000;
	or.b32  	%r363, %r24, 384;
	or.b32  	%r37, %r24, 448;
	cvt.rn.f32.s32 	%f671, %r363;
	sub.f32 	%f672, %f671, %f1;
	div.approx.f32 	%f674, %f672, %f259;
	abs.f32 	%f675, %f674;
	setp.gt.f32 	%p75, %f675, 0f4B800000;
	mul.f32 	%f676, %f674, 0f00000000;
	div.approx.f32 	%f57, %f672, %f287;
	setp.eq.f32 	%p80, %f57, 0f00000000;
	mov.f32 	%f1360, %f1363;
	@%p80 bra 	LBB0_30;
// %bb.29:                              // %L1219
	sin.approx.f32 	%f702, %f57;
	div.approx.f32 	%f1360, %f702, %f57;
LBB0_30:                                // %L1222
	selp.f32 	%f263, %f262, %f260, %p3;
	selp.f32 	%f297, %f296, %f294, %p9;
	selp.f32 	%f332, %f331, %f329, %p15;
	selp.f32 	%f366, %f365, %f363, %p21;
	selp.f32 	%f401, %f400, %f398, %p27;
	selp.f32 	%f435, %f434, %f432, %p33;
	selp.f32 	%f470, %f469, %f467, %p39;
	selp.f32 	%f504, %f503, %f501, %p45;
	selp.f32 	%f539, %f538, %f536, %p51;
	selp.f32 	%f573, %f572, %f570, %p57;
	selp.f32 	%f608, %f607, %f605, %p63;
	selp.f32 	%f642, %f641, %f639, %p69;
	selp.f32 	%f677, %f676, %f674, %p75;
	cvt.rn.f32.s32 	%f705, %r37;
	sub.f32 	%f706, %f705, %f1;
	div.approx.f32 	%f708, %f706, %f259;
	abs.f32 	%f709, %f708;
	setp.gt.f32 	%p81, %f709, 0f4B800000;
	mul.f32 	%f710, %f708, 0f00000000;
	selp.f32 	%f711, %f710, %f708, %p81;
	div.approx.f32 	%f62, %f706, %f287;
	setp.eq.f32 	%p86, %f62, 0f00000000;
	mov.f32 	%f1361, %f1363;
	@%p86 bra 	LBB0_32;
// %bb.31:                              // %L1239
	sin.approx.f32 	%f736, %f62;
	div.approx.f32 	%f1361, %f736, %f62;
LBB0_32:                                // %L1242
	add.f32 	%f264, %f263, %f263;
	add.f32 	%f298, %f297, %f297;
	add.f32 	%f333, %f332, %f332;
	add.f32 	%f367, %f366, %f366;
	add.f32 	%f402, %f401, %f401;
	add.f32 	%f436, %f435, %f435;
	add.f32 	%f471, %f470, %f470;
	add.f32 	%f505, %f504, %f504;
	add.f32 	%f540, %f539, %f539;
	add.f32 	%f574, %f573, %f573;
	add.f32 	%f609, %f608, %f608;
	add.f32 	%f643, %f642, %f642;
	add.f32 	%f678, %f677, %f677;
	add.f32 	%f712, %f711, %f711;
	or.b32  	%r381, %r24, 385;
	or.b32  	%r39, %r24, 449;
	cvt.rn.f32.s32 	%f740, %r381;
	sub.f32 	%f741, %f740, %f1;
	div.approx.f32 	%f743, %f741, %f259;
	abs.f32 	%f744, %f743;
	setp.gt.f32 	%p87, %f744, 0f4B800000;
	mul.f32 	%f745, %f743, 0f00000000;
	selp.f32 	%f746, %f745, %f743, %p87;
	add.f32 	%f747, %f746, %f746;
	div.approx.f32 	%f66, %f741, %f287;
	setp.eq.f32 	%p92, %f66, 0f00000000;
	mov.f32 	%f1362, %f1363;
	@%p92 bra 	LBB0_34;
// %bb.33:                              // %L1321
	sin.approx.f32 	%f771, %f66;
	div.approx.f32 	%f1362, %f771, %f66;
LBB0_34:                                // %L1324
	mov.b32 	%r256, %f264;
	mov.b32 	%r263, %f298;
	mov.b32 	%r274, %f333;
	mov.b32 	%r281, %f367;
	mov.b32 	%r292, %f402;
	mov.b32 	%r299, %f436;
	mov.b32 	%r310, %f471;
	mov.b32 	%r317, %f505;
	mov.b32 	%r328, %f540;
	mov.b32 	%r335, %f574;
	mov.b32 	%r346, %f609;
	mov.b32 	%r353, %f643;
	mov.b32 	%r364, %f678;
	mov.b32 	%r371, %f712;
	mov.b32 	%r382, %f747;
	cvt.rn.f32.s32 	%f774, %r39;
	sub.f32 	%f775, %f774, %f1;
	div.approx.f32 	%f777, %f775, %f259;
	abs.f32 	%f778, %f777;
	setp.gt.f32 	%p93, %f778, 0f4B800000;
	mul.f32 	%f779, %f777, 0f00000000;
	selp.f32 	%f780, %f779, %f777, %p93;
	add.f32 	%f781, %f780, %f780;
	mov.b32 	%r389, %f781;
	div.approx.f32 	%f71, %f775, %f287;
	setp.eq.f32 	%p98, %f71, 0f00000000;
	@%p98 bra 	LBB0_36;
// %bb.35:                              // %L1341
	sin.approx.f32 	%f805, %f71;
	div.approx.f32 	%f1363, %f805, %f71;
LBB0_36:                                // %L1344
	and.b32  	%r257, %r256, -2147483648;
	and.b32  	%r264, %r263, -2147483648;
	and.b32  	%r275, %r274, -2147483648;
	and.b32  	%r282, %r281, -2147483648;
	and.b32  	%r293, %r292, -2147483648;
	and.b32  	%r300, %r299, -2147483648;
	and.b32  	%r311, %r310, -2147483648;
	and.b32  	%r318, %r317, -2147483648;
	and.b32  	%r329, %r328, -2147483648;
	and.b32  	%r336, %r335, -2147483648;
	and.b32  	%r347, %r346, -2147483648;
	and.b32  	%r354, %r353, -2147483648;
	and.b32  	%r365, %r364, -2147483648;
	and.b32  	%r372, %r371, -2147483648;
	and.b32  	%r383, %r382, -2147483648;
	and.b32  	%r390, %r389, -2147483648;
	mul.lo.s32 	%r41, %r24, 127;
	cvt.rn.f32.s32 	%f808, %r41;
	div.approx.f32 	%f74, %f808, %f287;
	abs.f32 	%f1366, %f74;
	setp.lt.f32 	%p99, %f1366, 0f40000000;
	@%p99 bra 	LBB0_48;
// %bb.37:
	setp.gtu.f32 	%p100, %f1366, 0f4B800000;
	@%p100 bra 	LBB0_44;
	bra.uni 	LBB0_38;
LBB0_44:
	mov.b32 	%r43, %f1366;
	and.b32  	%r399, %r43, 8388607;
	or.b32  	%r16150, %r399, 1065353216;
	mov.b32 	%f1365, %r16150;
	add.s32 	%r400, %r43, -1073741824;
	and.b32  	%r16151, %r400, -8388608;
	setp.eq.s32 	%p106, %r16151, 0;
	@%p106 bra 	LBB0_47;
// %bb.45:                              // %__nv_fmaf_rn.exit4.i.i.i.preheader
	mov.f32 	%f819, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f818,%f819;
	// end inline asm
LBB0_46:                                // %__nv_fmaf_rn.exit4.i.i.i
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r401, %r16151, 192937984;
	add.s32 	%r402, %r401, %r16150;
	mov.b32 	%f820, %r402;
	mul.f32 	%f821, %f818, %f820;
	sub.f32 	%f822, %f820, %f821;
	fma.rn.f32 	%f823, %f822, %f818, %f821;
	sub.f32 	%f824, %f820, %f823;
	fma.rz.f32 	%f825, %f824, %f818, %f823;
	cvt.rzi.f32.f32 	%f826, %f825;
	sub.f32 	%f1365, %f820, %f826;
	sub.s32 	%r16151, %r16151, %r401;
	mov.b32 	%r16150, %f1365;
	setp.ne.s32 	%p107, %r16151, 0;
	setp.ne.s32 	%p108, %r16150, 0;
	and.pred  	%p109, %p107, %p108;
	@%p109 bra 	LBB0_46;
LBB0_47:                                // %__internal_fmodf_slowpath_mod.exit.i.i
	setp.gt.u32 	%p110, %r43, 2139095039;
	selp.f32 	%f827, 0f7FFFFFFF, 0f4B800000, %p110;
	mul.f32 	%f828, %f1365, 0f34000000;
	mul.f32 	%f1366, %f827, %f828;
	bra.uni 	LBB0_48;
LBB0_38:                                // %__nv_fast_fdividef.exit.i.i.i
	div.approx.f32 	%f811, %f1366, %f255;
	cvt.rzi.f32.f32 	%f1364, %f811;
	fma.rn.f32 	%f77, %f1364, 0fC0000000, %f1366;
	mov.b32 	%r42, %f77;
	setp.lt.u32 	%p101, %r42, 1073741824;
	@%p101 bra 	LBB0_43;
// %bb.39:
	setp.lt.u32 	%p102, %r42, -2147483647;
	@%p102 bra 	LBB0_41;
// %bb.40:
	add.f32 	%f816, %f1364, 0fBF800000;
	setp.lt.f32 	%p105, %f77, 0fC0000000;
	add.f32 	%f817, %f816, 0fBF800000;
	selp.f32 	%f1364, %f817, %f816, %p105;
	bra.uni 	LBB0_43;
LBB0_41:
	add.f32 	%f1364, %f1364, 0f3F800000;
	setp.ltu.f32 	%p103, %f77, 0f40800000;
	@%p103 bra 	LBB0_43;
// %bb.42:                              // %__nv_fmaf_rn.exit.i.i.i
	add.f32 	%f812, %f1364, 0f3F800000;
	fma.rn.f32 	%f814, %f255, 0fC0400000, %f77;
	setp.ge.f32 	%p104, %f814, 0f00000000;
	add.f32 	%f815, %f812, 0f3F800000;
	selp.f32 	%f1364, %f815, %f812, %p104;
LBB0_43:                                // %__internal_fmodf_fastpath_quot.exit.i.i
	fma.rn.f32 	%f1366, %f1364, 0fC0000000, %f1366;
LBB0_48:                                // %__internal_fmodf_kernel.exit.i
	or.b32  	%r258, %r257, 1056964608;
	or.b32  	%r265, %r264, 1056964608;
	or.b32  	%r276, %r275, 1056964608;
	or.b32  	%r283, %r282, 1056964608;
	or.b32  	%r294, %r293, 1056964608;
	or.b32  	%r301, %r300, 1056964608;
	or.b32  	%r312, %r311, 1056964608;
	or.b32  	%r319, %r318, 1056964608;
	or.b32  	%r330, %r329, 1056964608;
	or.b32  	%r337, %r336, 1056964608;
	or.b32  	%r348, %r347, 1056964608;
	or.b32  	%r355, %r354, 1056964608;
	or.b32  	%r366, %r365, 1056964608;
	or.b32  	%r373, %r372, 1056964608;
	or.b32  	%r384, %r383, 1056964608;
	or.b32  	%r391, %r390, 1056964608;
	abs.f32 	%f829, %f1366;
	setp.gtu.f32 	%p111, %f829, 0f7F800000;
	@%p111 bra 	LBB0_50;
// %bb.49:
	mov.b32 	%r403, %f74;
	and.b32  	%r404, %r403, -2147483648;
	mov.b32 	%r405, %f1366;
	or.b32  	%r406, %r404, %r405;
	mov.b32 	%f1366, %r406;
LBB0_50:                                // %__nv_fmodf.exit
	mov.b32 	%f265, %r258;
	mov.b32 	%f299, %r265;
	mov.b32 	%f334, %r276;
	mov.b32 	%f368, %r283;
	mov.b32 	%f403, %r294;
	mov.b32 	%f437, %r301;
	mov.b32 	%f472, %r312;
	mov.b32 	%f506, %r319;
	mov.b32 	%f541, %r330;
	mov.b32 	%f575, %r337;
	mov.b32 	%f610, %r348;
	mov.b32 	%f644, %r355;
	mov.b32 	%f679, %r366;
	mov.b32 	%f713, %r373;
	mov.b32 	%f748, %r384;
	mov.b32 	%f782, %r391;
	add.f32 	%f830, %f1366, %f1366;
	mov.b32 	%r407, %f830;
	and.b32  	%r408, %r407, -2147483648;
	or.b32  	%r409, %r408, 1056964608;
	mov.b32 	%f831, %r409;
	add.f32 	%f832, %f830, %f831;
	cvt.rzi.f32.f32 	%f833, %f832;
	abs.f32 	%f834, %f830;
	setp.gt.f32 	%p112, %f834, 0f4B000000;
	selp.f32 	%f835, %f830, %f833, %p112;
	cvt.rzi.f32.f32 	%f836, %f830;
	setp.lt.f32 	%p113, %f834, 0f3F000000;
	add.s32 	%r415, %r41, 8128;
	cvt.rn.f32.s32 	%f861, %r415;
	div.approx.f32 	%f93, %f861, %f287;
	abs.f32 	%f1370, %f93;
	setp.lt.f32 	%p119, %f1370, 0f40000000;
	@%p119 bra 	LBB0_62;
// %bb.51:
	setp.gtu.f32 	%p120, %f1370, 0f4B800000;
	@%p120 bra 	LBB0_58;
	bra.uni 	LBB0_52;
LBB0_58:
	mov.b32 	%r51, %f1370;
	and.b32  	%r416, %r51, 8388607;
	or.b32  	%r16152, %r416, 1065353216;
	mov.b32 	%f1369, %r16152;
	add.s32 	%r417, %r51, -1073741824;
	and.b32  	%r16153, %r417, -8388608;
	setp.eq.s32 	%p126, %r16153, 0;
	@%p126 bra 	LBB0_61;
// %bb.59:                              // %__nv_fmaf_rn.exit4.i.i.i2229.preheader
	mov.f32 	%f872, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f871,%f872;
	// end inline asm
LBB0_60:                                // %__nv_fmaf_rn.exit4.i.i.i2229
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r418, %r16153, 192937984;
	add.s32 	%r419, %r418, %r16152;
	mov.b32 	%f873, %r419;
	mul.f32 	%f874, %f871, %f873;
	sub.f32 	%f875, %f873, %f874;
	fma.rn.f32 	%f876, %f875, %f871, %f874;
	sub.f32 	%f877, %f873, %f876;
	fma.rz.f32 	%f878, %f877, %f871, %f876;
	cvt.rzi.f32.f32 	%f879, %f878;
	sub.f32 	%f1369, %f873, %f879;
	sub.s32 	%r16153, %r16153, %r418;
	mov.b32 	%r16152, %f1369;
	setp.ne.s32 	%p127, %r16153, 0;
	setp.ne.s32 	%p128, %r16152, 0;
	and.pred  	%p129, %p127, %p128;
	@%p129 bra 	LBB0_60;
LBB0_61:                                // %__internal_fmodf_slowpath_mod.exit.i.i2231
	setp.gt.u32 	%p130, %r51, 2139095039;
	selp.f32 	%f880, 0f7FFFFFFF, 0f4B800000, %p130;
	mul.f32 	%f881, %f1369, 0f34000000;
	mul.f32 	%f1370, %f880, %f881;
	bra.uni 	LBB0_62;
LBB0_52:                                // %__nv_fast_fdividef.exit.i.i.i2201
	div.approx.f32 	%f864, %f1370, %f255;
	cvt.rzi.f32.f32 	%f1368, %f864;
	fma.rn.f32 	%f96, %f1368, 0fC0000000, %f1370;
	mov.b32 	%r50, %f96;
	setp.lt.u32 	%p121, %r50, 1073741824;
	@%p121 bra 	LBB0_57;
// %bb.53:
	setp.lt.u32 	%p122, %r50, -2147483647;
	@%p122 bra 	LBB0_55;
// %bb.54:
	add.f32 	%f869, %f1368, 0fBF800000;
	setp.lt.f32 	%p125, %f96, 0fC0000000;
	add.f32 	%f870, %f869, 0fBF800000;
	selp.f32 	%f1368, %f870, %f869, %p125;
	bra.uni 	LBB0_57;
LBB0_55:
	add.f32 	%f1368, %f1368, 0f3F800000;
	setp.ltu.f32 	%p123, %f96, 0f40800000;
	@%p123 bra 	LBB0_57;
// %bb.56:                              // %__nv_fmaf_rn.exit.i.i.i2206
	add.f32 	%f865, %f1368, 0f3F800000;
	fma.rn.f32 	%f867, %f255, 0fC0400000, %f96;
	setp.ge.f32 	%p124, %f867, 0f00000000;
	add.f32 	%f868, %f865, 0f3F800000;
	selp.f32 	%f1368, %f868, %f865, %p124;
LBB0_57:                                // %__internal_fmodf_fastpath_quot.exit.i.i2210
	fma.rn.f32 	%f1370, %f1368, 0fC0000000, %f1370;
LBB0_62:                                // %__internal_fmodf_kernel.exit.i2235
	add.f32 	%f266, %f264, %f265;
	abs.f32 	%f268, %f264;
	add.f32 	%f300, %f298, %f299;
	abs.f32 	%f302, %f298;
	add.f32 	%f335, %f333, %f334;
	abs.f32 	%f337, %f333;
	add.f32 	%f369, %f367, %f368;
	abs.f32 	%f371, %f367;
	add.f32 	%f404, %f402, %f403;
	abs.f32 	%f406, %f402;
	add.f32 	%f438, %f436, %f437;
	abs.f32 	%f440, %f436;
	add.f32 	%f473, %f471, %f472;
	abs.f32 	%f475, %f471;
	add.f32 	%f507, %f505, %f506;
	abs.f32 	%f509, %f505;
	add.f32 	%f542, %f540, %f541;
	abs.f32 	%f544, %f540;
	add.f32 	%f576, %f574, %f575;
	abs.f32 	%f578, %f574;
	add.f32 	%f611, %f609, %f610;
	abs.f32 	%f613, %f609;
	add.f32 	%f645, %f643, %f644;
	abs.f32 	%f647, %f643;
	add.f32 	%f680, %f678, %f679;
	abs.f32 	%f682, %f678;
	add.f32 	%f714, %f712, %f713;
	abs.f32 	%f716, %f712;
	add.f32 	%f749, %f747, %f748;
	abs.f32 	%f751, %f747;
	add.f32 	%f783, %f781, %f782;
	abs.f32 	%f785, %f781;
	selp.f32 	%f837, %f836, %f835, %p113;
	shr.u32 	%r19, %r5, 2;
	abs.f32 	%f882, %f1370;
	setp.gtu.f32 	%p131, %f882, 0f7F800000;
	@%p131 bra 	LBB0_64;
// %bb.63:
	mov.b32 	%r420, %f93;
	and.b32  	%r421, %r420, -2147483648;
	mov.b32 	%r422, %f1370;
	or.b32  	%r423, %r421, %r422;
	mov.b32 	%f1370, %r423;
LBB0_64:                                // %__nv_fmodf.exit2236
	cvt.rzi.f32.f32 	%f267, %f266;
	setp.gt.f32 	%p4, %f268, 0f4B000000;
	cvt.rzi.f32.f32 	%f301, %f300;
	setp.gt.f32 	%p10, %f302, 0f4B000000;
	cvt.rzi.f32.f32 	%f336, %f335;
	setp.gt.f32 	%p16, %f337, 0f4B000000;
	cvt.rzi.f32.f32 	%f370, %f369;
	setp.gt.f32 	%p22, %f371, 0f4B000000;
	cvt.rzi.f32.f32 	%f405, %f404;
	setp.gt.f32 	%p28, %f406, 0f4B000000;
	cvt.rzi.f32.f32 	%f439, %f438;
	setp.gt.f32 	%p34, %f440, 0f4B000000;
	cvt.rzi.f32.f32 	%f474, %f473;
	setp.gt.f32 	%p40, %f475, 0f4B000000;
	cvt.rzi.f32.f32 	%f508, %f507;
	setp.gt.f32 	%p46, %f509, 0f4B000000;
	cvt.rzi.f32.f32 	%f543, %f542;
	setp.gt.f32 	%p52, %f544, 0f4B000000;
	cvt.rzi.f32.f32 	%f577, %f576;
	setp.gt.f32 	%p58, %f578, 0f4B000000;
	cvt.rzi.f32.f32 	%f612, %f611;
	setp.gt.f32 	%p64, %f613, 0f4B000000;
	cvt.rzi.f32.f32 	%f646, %f645;
	setp.gt.f32 	%p70, %f647, 0f4B000000;
	cvt.rzi.f32.f32 	%f681, %f680;
	setp.gt.f32 	%p76, %f682, 0f4B000000;
	cvt.rzi.f32.f32 	%f715, %f714;
	setp.gt.f32 	%p82, %f716, 0f4B000000;
	cvt.rzi.f32.f32 	%f750, %f749;
	setp.gt.f32 	%p88, %f751, 0f4B000000;
	cvt.rzi.f32.f32 	%f784, %f783;
	setp.gt.f32 	%p94, %f785, 0f4B000000;
	fma.rn.f32 	%f838, %f837, 0fBF000000, %f1366;
	add.f32 	%f883, %f1370, %f1370;
	mov.b32 	%r436, %f883;
	and.b32  	%r437, %r436, -2147483648;
	or.b32  	%r438, %r437, 1056964608;
	mov.b32 	%f884, %r438;
	add.f32 	%f885, %f883, %f884;
	cvt.rzi.f32.f32 	%f886, %f885;
	abs.f32 	%f887, %f883;
	setp.gt.f32 	%p132, %f887, 0f4B000000;
	selp.f32 	%f888, %f883, %f886, %p132;
	cvt.rzi.f32.f32 	%f889, %f883;
	setp.lt.f32 	%p133, %f887, 0f3F000000;
	selp.f32 	%f890, %f889, %f888, %p133;
	fma.rn.f32 	%f891, %f890, 0fBF000000, %f1370;
	and.b32  	%r444, %r5, 3;
	mul.lo.s32 	%r445, %r444, %r19;
	shl.b32 	%r446, %r445, 1;
	neg.s32 	%r62, %r446;
	cvt.rn.f32.s32 	%f916, %r62;
	mov.f32 	%f917, 0f41000000;
	div.approx.f32 	%f110, %f916, %f917;
	abs.f32 	%f1374, %f110;
	setp.lt.f32 	%p139, %f1374, 0f40000000;
	@%p139 bra 	LBB0_76;
// %bb.65:
	setp.gtu.f32 	%p140, %f1374, 0f4B800000;
	@%p140 bra 	LBB0_72;
	bra.uni 	LBB0_66;
LBB0_72:
	mov.b32 	%r64, %f1374;
	and.b32  	%r447, %r64, 8388607;
	or.b32  	%r16154, %r447, 1065353216;
	mov.b32 	%f1373, %r16154;
	add.s32 	%r448, %r64, -1073741824;
	and.b32  	%r16155, %r448, -8388608;
	setp.eq.s32 	%p146, %r16155, 0;
	@%p146 bra 	LBB0_75;
// %bb.73:                              // %__nv_fmaf_rn.exit4.i.i.i2275.preheader
	mov.f32 	%f927, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f926,%f927;
	// end inline asm
LBB0_74:                                // %__nv_fmaf_rn.exit4.i.i.i2275
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r449, %r16155, 192937984;
	add.s32 	%r450, %r449, %r16154;
	mov.b32 	%f928, %r450;
	mul.f32 	%f929, %f926, %f928;
	sub.f32 	%f930, %f928, %f929;
	fma.rn.f32 	%f931, %f930, %f926, %f929;
	sub.f32 	%f932, %f928, %f931;
	fma.rz.f32 	%f933, %f932, %f926, %f931;
	cvt.rzi.f32.f32 	%f934, %f933;
	sub.f32 	%f1373, %f928, %f934;
	sub.s32 	%r16155, %r16155, %r449;
	mov.b32 	%r16154, %f1373;
	setp.ne.s32 	%p147, %r16155, 0;
	setp.ne.s32 	%p148, %r16154, 0;
	and.pred  	%p149, %p147, %p148;
	@%p149 bra 	LBB0_74;
LBB0_75:                                // %__internal_fmodf_slowpath_mod.exit.i.i2277
	setp.gt.u32 	%p150, %r64, 2139095039;
	selp.f32 	%f935, 0f7FFFFFFF, 0f4B800000, %p150;
	mul.f32 	%f936, %f1373, 0f34000000;
	mul.f32 	%f1374, %f935, %f936;
	bra.uni 	LBB0_76;
LBB0_66:                                // %__nv_fast_fdividef.exit.i.i.i2247
	div.approx.f32 	%f919, %f1374, %f255;
	cvt.rzi.f32.f32 	%f1372, %f919;
	fma.rn.f32 	%f113, %f1372, 0fC0000000, %f1374;
	mov.b32 	%r63, %f113;
	setp.lt.u32 	%p141, %r63, 1073741824;
	@%p141 bra 	LBB0_71;
// %bb.67:
	setp.lt.u32 	%p142, %r63, -2147483647;
	@%p142 bra 	LBB0_69;
// %bb.68:
	add.f32 	%f924, %f1372, 0fBF800000;
	setp.lt.f32 	%p145, %f113, 0fC0000000;
	add.f32 	%f925, %f924, 0fBF800000;
	selp.f32 	%f1372, %f925, %f924, %p145;
	bra.uni 	LBB0_71;
LBB0_69:
	add.f32 	%f1372, %f1372, 0f3F800000;
	setp.ltu.f32 	%p143, %f113, 0f40800000;
	@%p143 bra 	LBB0_71;
// %bb.70:                              // %__nv_fmaf_rn.exit.i.i.i2252
	add.f32 	%f920, %f1372, 0f3F800000;
	fma.rn.f32 	%f922, %f255, 0fC0400000, %f113;
	setp.ge.f32 	%p144, %f922, 0f00000000;
	add.f32 	%f923, %f920, 0f3F800000;
	selp.f32 	%f1372, %f923, %f920, %p144;
LBB0_71:                                // %__internal_fmodf_fastpath_quot.exit.i.i2256
	fma.rn.f32 	%f1374, %f1372, 0fC0000000, %f1374;
LBB0_76:                                // %__internal_fmodf_kernel.exit.i2281
	selp.f32 	%f269, %f264, %f267, %p4;
	cvt.rzi.f32.f32 	%f270, %f264;
	setp.lt.f32 	%p5, %f268, 0f3F000000;
	selp.f32 	%f303, %f298, %f301, %p10;
	cvt.rzi.f32.f32 	%f304, %f298;
	setp.lt.f32 	%p11, %f302, 0f3F000000;
	selp.f32 	%f338, %f333, %f336, %p16;
	cvt.rzi.f32.f32 	%f339, %f333;
	setp.lt.f32 	%p17, %f337, 0f3F000000;
	selp.f32 	%f372, %f367, %f370, %p22;
	cvt.rzi.f32.f32 	%f373, %f367;
	setp.lt.f32 	%p23, %f371, 0f3F000000;
	selp.f32 	%f407, %f402, %f405, %p28;
	cvt.rzi.f32.f32 	%f408, %f402;
	setp.lt.f32 	%p29, %f406, 0f3F000000;
	selp.f32 	%f441, %f436, %f439, %p34;
	cvt.rzi.f32.f32 	%f442, %f436;
	setp.lt.f32 	%p35, %f440, 0f3F000000;
	selp.f32 	%f476, %f471, %f474, %p40;
	cvt.rzi.f32.f32 	%f477, %f471;
	setp.lt.f32 	%p41, %f475, 0f3F000000;
	selp.f32 	%f510, %f505, %f508, %p46;
	cvt.rzi.f32.f32 	%f511, %f505;
	setp.lt.f32 	%p47, %f509, 0f3F000000;
	selp.f32 	%f545, %f540, %f543, %p52;
	cvt.rzi.f32.f32 	%f546, %f540;
	setp.lt.f32 	%p53, %f544, 0f3F000000;
	selp.f32 	%f579, %f574, %f577, %p58;
	cvt.rzi.f32.f32 	%f580, %f574;
	setp.lt.f32 	%p59, %f578, 0f3F000000;
	selp.f32 	%f614, %f609, %f612, %p64;
	cvt.rzi.f32.f32 	%f615, %f609;
	setp.lt.f32 	%p65, %f613, 0f3F000000;
	selp.f32 	%f648, %f643, %f646, %p70;
	cvt.rzi.f32.f32 	%f649, %f643;
	setp.lt.f32 	%p71, %f647, 0f3F000000;
	selp.f32 	%f683, %f678, %f681, %p76;
	cvt.rzi.f32.f32 	%f684, %f678;
	setp.lt.f32 	%p77, %f682, 0f3F000000;
	selp.f32 	%f717, %f712, %f715, %p82;
	cvt.rzi.f32.f32 	%f718, %f712;
	setp.lt.f32 	%p83, %f716, 0f3F000000;
	selp.f32 	%f752, %f747, %f750, %p88;
	cvt.rzi.f32.f32 	%f753, %f747;
	setp.lt.f32 	%p89, %f751, 0f3F000000;
	selp.f32 	%f786, %f781, %f784, %p94;
	cvt.rzi.f32.f32 	%f787, %f781;
	setp.lt.f32 	%p95, %f785, 0f3F000000;
	mul.f32 	%f839, %f838, 0f34222169;
	mul.f32 	%f892, %f891, 0f34222169;
	abs.f32 	%f937, %f1374;
	setp.gtu.f32 	%p151, %f937, 0f7F800000;
	@%p151 bra 	LBB0_78;
// %bb.77:
	mov.b32 	%r451, %f110;
	and.b32  	%r452, %r451, -2147483648;
	mov.b32 	%r453, %f1374;
	or.b32  	%r454, %r452, %r453;
	mov.b32 	%f1374, %r454;
LBB0_78:                                // %__nv_fmodf.exit2282
	selp.f32 	%f271, %f270, %f269, %p5;
	selp.f32 	%f305, %f304, %f303, %p11;
	selp.f32 	%f340, %f339, %f338, %p17;
	selp.f32 	%f374, %f373, %f372, %p23;
	selp.f32 	%f409, %f408, %f407, %p29;
	selp.f32 	%f443, %f442, %f441, %p35;
	selp.f32 	%f478, %f477, %f476, %p41;
	selp.f32 	%f512, %f511, %f510, %p47;
	selp.f32 	%f547, %f546, %f545, %p53;
	selp.f32 	%f581, %f580, %f579, %p59;
	selp.f32 	%f616, %f615, %f614, %p65;
	selp.f32 	%f650, %f649, %f648, %p71;
	selp.f32 	%f685, %f684, %f683, %p77;
	selp.f32 	%f719, %f718, %f717, %p83;
	selp.f32 	%f754, %f753, %f752, %p89;
	selp.f32 	%f788, %f787, %f786, %p95;
	fma.rn.f32 	%f840, %f838, 0f40490FDA, %f839;
	fma.rn.f32 	%f893, %f891, 0f40490FDA, %f892;
	add.f32 	%f938, %f1374, %f1374;
	mov.b32 	%r455, %f938;
	and.b32  	%r456, %r455, -2147483648;
	or.b32  	%r457, %r456, 1056964608;
	mov.b32 	%f939, %r457;
	add.f32 	%f940, %f938, %f939;
	cvt.rzi.f32.f32 	%f941, %f940;
	abs.f32 	%f942, %f938;
	setp.gt.f32 	%p152, %f942, 0f4B000000;
	selp.f32 	%f943, %f938, %f941, %p152;
	cvt.rzi.f32.f32 	%f944, %f938;
	setp.lt.f32 	%p153, %f942, 0f3F000000;
	selp.f32 	%f945, %f944, %f943, %p153;
	fma.rn.f32 	%f946, %f945, 0fBF000000, %f1374;
	mul.f32 	%f947, %f946, 0f34222169;
	fma.rn.f32 	%f948, %f946, 0f40490FDA, %f947;
	shl.b32 	%r71, %r19, 3;
	sub.s32 	%r463, %r62, %r71;
	cvt.rn.f32.s32 	%f969, %r463;
	div.approx.f32 	%f129, %f969, %f917;
	abs.f32 	%f1378, %f129;
	setp.lt.f32 	%p159, %f1378, 0f40000000;
	@%p159 bra 	LBB0_90;
// %bb.79:
	setp.gtu.f32 	%p160, %f1378, 0f4B800000;
	@%p160 bra 	LBB0_86;
	bra.uni 	LBB0_80;
LBB0_86:
	mov.b32 	%r73, %f1378;
	and.b32  	%r464, %r73, 8388607;
	or.b32  	%r16156, %r464, 1065353216;
	mov.b32 	%f1377, %r16156;
	add.s32 	%r465, %r73, -1073741824;
	and.b32  	%r16157, %r465, -8388608;
	setp.eq.s32 	%p166, %r16157, 0;
	@%p166 bra 	LBB0_89;
// %bb.87:                              // %__nv_fmaf_rn.exit4.i.i.i2321.preheader
	mov.f32 	%f980, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f979,%f980;
	// end inline asm
LBB0_88:                                // %__nv_fmaf_rn.exit4.i.i.i2321
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r466, %r16157, 192937984;
	add.s32 	%r467, %r466, %r16156;
	mov.b32 	%f981, %r467;
	mul.f32 	%f982, %f979, %f981;
	sub.f32 	%f983, %f981, %f982;
	fma.rn.f32 	%f984, %f983, %f979, %f982;
	sub.f32 	%f985, %f981, %f984;
	fma.rz.f32 	%f986, %f985, %f979, %f984;
	cvt.rzi.f32.f32 	%f987, %f986;
	sub.f32 	%f1377, %f981, %f987;
	sub.s32 	%r16157, %r16157, %r466;
	mov.b32 	%r16156, %f1377;
	setp.ne.s32 	%p167, %r16157, 0;
	setp.ne.s32 	%p168, %r16156, 0;
	and.pred  	%p169, %p167, %p168;
	@%p169 bra 	LBB0_88;
LBB0_89:                                // %__internal_fmodf_slowpath_mod.exit.i.i2323
	setp.gt.u32 	%p170, %r73, 2139095039;
	selp.f32 	%f988, 0f7FFFFFFF, 0f4B800000, %p170;
	mul.f32 	%f989, %f1377, 0f34000000;
	mul.f32 	%f1378, %f988, %f989;
	bra.uni 	LBB0_90;
LBB0_80:                                // %__nv_fast_fdividef.exit.i.i.i2293
	div.approx.f32 	%f972, %f1378, %f255;
	cvt.rzi.f32.f32 	%f1376, %f972;
	fma.rn.f32 	%f132, %f1376, 0fC0000000, %f1378;
	mov.b32 	%r72, %f132;
	setp.lt.u32 	%p161, %r72, 1073741824;
	@%p161 bra 	LBB0_85;
// %bb.81:
	setp.lt.u32 	%p162, %r72, -2147483647;
	@%p162 bra 	LBB0_83;
// %bb.82:
	add.f32 	%f977, %f1376, 0fBF800000;
	setp.lt.f32 	%p165, %f132, 0fC0000000;
	add.f32 	%f978, %f977, 0fBF800000;
	selp.f32 	%f1376, %f978, %f977, %p165;
	bra.uni 	LBB0_85;
LBB0_83:
	add.f32 	%f1376, %f1376, 0f3F800000;
	setp.ltu.f32 	%p163, %f132, 0f40800000;
	@%p163 bra 	LBB0_85;
// %bb.84:                              // %__nv_fmaf_rn.exit.i.i.i2298
	add.f32 	%f973, %f1376, 0f3F800000;
	fma.rn.f32 	%f975, %f255, 0fC0400000, %f132;
	setp.ge.f32 	%p164, %f975, 0f00000000;
	add.f32 	%f976, %f973, 0f3F800000;
	selp.f32 	%f1376, %f976, %f973, %p164;
LBB0_85:                                // %__internal_fmodf_fastpath_quot.exit.i.i2302
	fma.rn.f32 	%f1378, %f1376, 0fC0000000, %f1378;
LBB0_90:                                // %__internal_fmodf_kernel.exit.i2327
	fma.rn.f32 	%f272, %f271, 0fBF000000, %f263;
	fma.rn.f32 	%f306, %f305, 0fBF000000, %f297;
	fma.rn.f32 	%f341, %f340, 0fBF000000, %f332;
	fma.rn.f32 	%f375, %f374, 0fBF000000, %f366;
	fma.rn.f32 	%f410, %f409, 0fBF000000, %f401;
	fma.rn.f32 	%f444, %f443, 0fBF000000, %f435;
	fma.rn.f32 	%f479, %f478, 0fBF000000, %f470;
	fma.rn.f32 	%f513, %f512, 0fBF000000, %f504;
	fma.rn.f32 	%f548, %f547, 0fBF000000, %f539;
	fma.rn.f32 	%f582, %f581, 0fBF000000, %f573;
	fma.rn.f32 	%f617, %f616, 0fBF000000, %f608;
	fma.rn.f32 	%f651, %f650, 0fBF000000, %f642;
	fma.rn.f32 	%f686, %f685, 0fBF000000, %f677;
	fma.rn.f32 	%f720, %f719, 0fBF000000, %f711;
	fma.rn.f32 	%f755, %f754, 0fBF000000, %f746;
	fma.rn.f32 	%f789, %f788, 0fBF000000, %f780;
	mul.f32 	%f841, %f840, %f840;
	mul.f32 	%f894, %f893, %f893;
	mul.f32 	%f949, %f948, %f948;
	shl.b32 	%r7, %r5, 1;
	abs.f32 	%f990, %f1378;
	setp.gtu.f32 	%p171, %f990, 0f7F800000;
	@%p171 bra 	LBB0_92;
// %bb.91:
	mov.b32 	%r468, %f129;
	and.b32  	%r469, %r468, -2147483648;
	mov.b32 	%r470, %f1378;
	or.b32  	%r471, %r469, %r470;
	mov.b32 	%f1378, %r471;
LBB0_92:                                // %__nv_fmodf.exit2328
	mul.f32 	%f273, %f272, %f272;
	mul.f32 	%f307, %f306, %f306;
	mul.f32 	%f342, %f341, %f341;
	mul.f32 	%f376, %f375, %f375;
	mul.f32 	%f411, %f410, %f410;
	mul.f32 	%f445, %f444, %f444;
	mul.f32 	%f480, %f479, %f479;
	mul.f32 	%f514, %f513, %f513;
	mul.f32 	%f549, %f548, %f548;
	mul.f32 	%f583, %f582, %f582;
	mul.f32 	%f618, %f617, %f617;
	mul.f32 	%f652, %f651, %f651;
	mul.f32 	%f687, %f686, %f686;
	mul.f32 	%f721, %f720, %f720;
	mul.f32 	%f756, %f755, %f755;
	mul.f32 	%f790, %f789, %f789;
	fma.rn.f32 	%f842, %f841, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f895, %f894, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f950, %f949, 0f37CBAC00, 0fBAB607ED;
	add.f32 	%f991, %f1378, %f1378;
	mov.b32 	%r484, %f991;
	and.b32  	%r485, %r484, -2147483648;
	or.b32  	%r486, %r485, 1056964608;
	mov.b32 	%f992, %r486;
	add.f32 	%f993, %f991, %f992;
	cvt.rzi.f32.f32 	%f994, %f993;
	abs.f32 	%f995, %f991;
	setp.gt.f32 	%p172, %f995, 0f4B000000;
	selp.f32 	%f996, %f991, %f994, %p172;
	cvt.rzi.f32.f32 	%f997, %f991;
	setp.lt.f32 	%p173, %f995, 0f3F000000;
	selp.f32 	%f998, %f997, %f996, %p173;
	fma.rn.f32 	%f999, %f998, 0fBF000000, %f1378;
	mul.f32 	%f1000, %f999, 0f34222169;
	fma.rn.f32 	%f1001, %f999, 0f40490FDA, %f1000;
	mul.f32 	%f1002, %f1001, %f1001;
	fma.rn.f32 	%f1003, %f1002, 0f37CBAC00, 0fBAB607ED;
	and.b32  	%r492, %r7, 6;
	shl.b32 	%r493, %r492, 1;
	neg.s32 	%r84, %r493;
	mul.lo.s32 	%r85, %r84, %r19;
	cvt.rn.f32.s32 	%f1024, %r85;
	div.approx.f32 	%f146, %f1024, %f287;
	abs.f32 	%f1382, %f146;
	setp.lt.f32 	%p179, %f1382, 0f40000000;
	@%p179 bra 	LBB0_104;
// %bb.93:
	setp.gtu.f32 	%p180, %f1382, 0f4B800000;
	@%p180 bra 	LBB0_100;
	bra.uni 	LBB0_94;
LBB0_100:
	mov.b32 	%r87, %f1382;
	and.b32  	%r494, %r87, 8388607;
	or.b32  	%r16158, %r494, 1065353216;
	mov.b32 	%f1381, %r16158;
	add.s32 	%r495, %r87, -1073741824;
	and.b32  	%r16159, %r495, -8388608;
	setp.eq.s32 	%p186, %r16159, 0;
	@%p186 bra 	LBB0_103;
// %bb.101:                             // %__nv_fmaf_rn.exit4.i.i.i2367.preheader
	mov.f32 	%f1035, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1034,%f1035;
	// end inline asm
LBB0_102:                               // %__nv_fmaf_rn.exit4.i.i.i2367
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r496, %r16159, 192937984;
	add.s32 	%r497, %r496, %r16158;
	mov.b32 	%f1036, %r497;
	mul.f32 	%f1037, %f1034, %f1036;
	sub.f32 	%f1038, %f1036, %f1037;
	fma.rn.f32 	%f1039, %f1038, %f1034, %f1037;
	sub.f32 	%f1040, %f1036, %f1039;
	fma.rz.f32 	%f1041, %f1040, %f1034, %f1039;
	cvt.rzi.f32.f32 	%f1042, %f1041;
	sub.f32 	%f1381, %f1036, %f1042;
	sub.s32 	%r16159, %r16159, %r496;
	mov.b32 	%r16158, %f1381;
	setp.ne.s32 	%p187, %r16159, 0;
	setp.ne.s32 	%p188, %r16158, 0;
	and.pred  	%p189, %p187, %p188;
	@%p189 bra 	LBB0_102;
LBB0_103:                               // %__internal_fmodf_slowpath_mod.exit.i.i2369
	setp.gt.u32 	%p190, %r87, 2139095039;
	selp.f32 	%f1043, 0f7FFFFFFF, 0f4B800000, %p190;
	mul.f32 	%f1044, %f1381, 0f34000000;
	mul.f32 	%f1382, %f1043, %f1044;
	bra.uni 	LBB0_104;
LBB0_94:                                // %__nv_fast_fdividef.exit.i.i.i2339
	div.approx.f32 	%f1027, %f1382, %f255;
	cvt.rzi.f32.f32 	%f1380, %f1027;
	fma.rn.f32 	%f149, %f1380, 0fC0000000, %f1382;
	mov.b32 	%r86, %f149;
	setp.lt.u32 	%p181, %r86, 1073741824;
	@%p181 bra 	LBB0_99;
// %bb.95:
	setp.lt.u32 	%p182, %r86, -2147483647;
	@%p182 bra 	LBB0_97;
// %bb.96:
	add.f32 	%f1032, %f1380, 0fBF800000;
	setp.lt.f32 	%p185, %f149, 0fC0000000;
	add.f32 	%f1033, %f1032, 0fBF800000;
	selp.f32 	%f1380, %f1033, %f1032, %p185;
	bra.uni 	LBB0_99;
LBB0_97:
	add.f32 	%f1380, %f1380, 0f3F800000;
	setp.ltu.f32 	%p183, %f149, 0f40800000;
	@%p183 bra 	LBB0_99;
// %bb.98:                              // %__nv_fmaf_rn.exit.i.i.i2344
	add.f32 	%f1028, %f1380, 0f3F800000;
	fma.rn.f32 	%f1030, %f255, 0fC0400000, %f149;
	setp.ge.f32 	%p184, %f1030, 0f00000000;
	add.f32 	%f1031, %f1028, 0f3F800000;
	selp.f32 	%f1380, %f1031, %f1028, %p184;
LBB0_99:                                // %__internal_fmodf_fastpath_quot.exit.i.i2348
	fma.rn.f32 	%f1382, %f1380, 0fC0000000, %f1382;
LBB0_104:                               // %__internal_fmodf_kernel.exit.i2373
	cvt.rzi.s32.f32 	%r259, %f271;
	fma.rn.f32 	%f274, %f273, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f275, %f273, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r266, %f305;
	fma.rn.f32 	%f308, %f307, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f309, %f307, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r277, %f340;
	fma.rn.f32 	%f343, %f342, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f344, %f342, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r284, %f374;
	fma.rn.f32 	%f377, %f376, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f378, %f376, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r295, %f409;
	fma.rn.f32 	%f412, %f411, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f413, %f411, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r302, %f443;
	fma.rn.f32 	%f446, %f445, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f447, %f445, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r313, %f478;
	fma.rn.f32 	%f481, %f480, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f482, %f480, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r320, %f512;
	fma.rn.f32 	%f515, %f514, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f516, %f514, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r331, %f547;
	fma.rn.f32 	%f550, %f549, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f551, %f549, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r338, %f581;
	fma.rn.f32 	%f584, %f583, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f585, %f583, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r349, %f616;
	fma.rn.f32 	%f619, %f618, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f620, %f618, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r356, %f650;
	fma.rn.f32 	%f653, %f652, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f654, %f652, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r367, %f685;
	fma.rn.f32 	%f688, %f687, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f689, %f687, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r374, %f719;
	fma.rn.f32 	%f722, %f721, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f723, %f721, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r385, %f754;
	fma.rn.f32 	%f757, %f756, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f758, %f756, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r392, %f788;
	fma.rn.f32 	%f791, %f790, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f792, %f790, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r410, %f837;
	fma.rn.f32 	%f843, %f842, %f841, 0f3D2AAABB;
	fma.rn.f32 	%f847, %f841, 0fB94D4153, 0f3C0885E4;
	cvt.rzi.s32.f32 	%r439, %f890;
	fma.rn.f32 	%f896, %f895, %f894, 0f3D2AAABB;
	fma.rn.f32 	%f900, %f894, 0fB94D4153, 0f3C0885E4;
	cvt.rzi.s32.f32 	%r458, %f945;
	fma.rn.f32 	%f951, %f950, %f949, 0f3D2AAABB;
	fma.rn.f32 	%f955, %f949, 0fB94D4153, 0f3C0885E4;
	cvt.rzi.s32.f32 	%r487, %f998;
	fma.rn.f32 	%f1004, %f1003, %f1002, 0f3D2AAABB;
	fma.rn.f32 	%f1008, %f1002, 0fB94D4153, 0f3C0885E4;
	abs.f32 	%f1045, %f1382;
	setp.gtu.f32 	%p191, %f1045, 0f7F800000;
	@%p191 bra 	LBB0_106;
// %bb.105:
	mov.b32 	%r498, %f146;
	and.b32  	%r499, %r498, -2147483648;
	mov.b32 	%r500, %f1382;
	or.b32  	%r501, %r499, %r500;
	mov.b32 	%f1382, %r501;
LBB0_106:                               // %__nv_fmodf.exit2374
	add.s32 	%r260, %r259, 1;
	fma.rn.f32 	%f276, %f274, %f273, 0fC0A55DF6;
	fma.rn.f32 	%f277, %f275, %f273, 0f4081E0CF;
	fma.rn.f32 	%f278, %f273, %f272, 0f00000000;
	add.s32 	%r267, %r266, 1;
	fma.rn.f32 	%f310, %f308, %f307, 0fC0A55DF6;
	fma.rn.f32 	%f311, %f309, %f307, 0f4081E0CF;
	fma.rn.f32 	%f312, %f307, %f306, 0f00000000;
	add.s32 	%r278, %r277, 1;
	fma.rn.f32 	%f345, %f343, %f342, 0fC0A55DF6;
	fma.rn.f32 	%f346, %f344, %f342, 0f4081E0CF;
	fma.rn.f32 	%f347, %f342, %f341, 0f00000000;
	add.s32 	%r285, %r284, 1;
	fma.rn.f32 	%f379, %f377, %f376, 0fC0A55DF6;
	fma.rn.f32 	%f380, %f378, %f376, 0f4081E0CF;
	fma.rn.f32 	%f381, %f376, %f375, 0f00000000;
	add.s32 	%r296, %r295, 1;
	fma.rn.f32 	%f414, %f412, %f411, 0fC0A55DF6;
	fma.rn.f32 	%f415, %f413, %f411, 0f4081E0CF;
	fma.rn.f32 	%f416, %f411, %f410, 0f00000000;
	add.s32 	%r303, %r302, 1;
	fma.rn.f32 	%f448, %f446, %f445, 0fC0A55DF6;
	fma.rn.f32 	%f449, %f447, %f445, 0f4081E0CF;
	fma.rn.f32 	%f450, %f445, %f444, 0f00000000;
	add.s32 	%r314, %r313, 1;
	fma.rn.f32 	%f483, %f481, %f480, 0fC0A55DF6;
	fma.rn.f32 	%f484, %f482, %f480, 0f4081E0CF;
	fma.rn.f32 	%f485, %f480, %f479, 0f00000000;
	add.s32 	%r321, %r320, 1;
	fma.rn.f32 	%f517, %f515, %f514, 0fC0A55DF6;
	fma.rn.f32 	%f518, %f516, %f514, 0f4081E0CF;
	fma.rn.f32 	%f519, %f514, %f513, 0f00000000;
	add.s32 	%r332, %r331, 1;
	fma.rn.f32 	%f552, %f550, %f549, 0fC0A55DF6;
	fma.rn.f32 	%f553, %f551, %f549, 0f4081E0CF;
	fma.rn.f32 	%f554, %f549, %f548, 0f00000000;
	add.s32 	%r339, %r338, 1;
	fma.rn.f32 	%f586, %f584, %f583, 0fC0A55DF6;
	fma.rn.f32 	%f587, %f585, %f583, 0f4081E0CF;
	fma.rn.f32 	%f588, %f583, %f582, 0f00000000;
	add.s32 	%r350, %r349, 1;
	fma.rn.f32 	%f621, %f619, %f618, 0fC0A55DF6;
	fma.rn.f32 	%f622, %f620, %f618, 0f4081E0CF;
	fma.rn.f32 	%f623, %f618, %f617, 0f00000000;
	add.s32 	%r357, %r356, 1;
	fma.rn.f32 	%f655, %f653, %f652, 0fC0A55DF6;
	fma.rn.f32 	%f656, %f654, %f652, 0f4081E0CF;
	fma.rn.f32 	%f657, %f652, %f651, 0f00000000;
	add.s32 	%r368, %r367, 1;
	fma.rn.f32 	%f690, %f688, %f687, 0fC0A55DF6;
	fma.rn.f32 	%f691, %f689, %f687, 0f4081E0CF;
	fma.rn.f32 	%f692, %f687, %f686, 0f00000000;
	add.s32 	%r375, %r374, 1;
	fma.rn.f32 	%f724, %f722, %f721, 0fC0A55DF6;
	fma.rn.f32 	%f725, %f723, %f721, 0f4081E0CF;
	fma.rn.f32 	%f726, %f721, %f720, 0f00000000;
	add.s32 	%r386, %r385, 1;
	fma.rn.f32 	%f759, %f757, %f756, 0fC0A55DF6;
	fma.rn.f32 	%f760, %f758, %f756, 0f4081E0CF;
	fma.rn.f32 	%f761, %f756, %f755, 0f00000000;
	add.s32 	%r393, %r392, 1;
	fma.rn.f32 	%f793, %f791, %f790, 0fC0A55DF6;
	fma.rn.f32 	%f794, %f792, %f790, 0f4081E0CF;
	fma.rn.f32 	%f795, %f790, %f789, 0f00000000;
	fma.rn.f32 	%f844, %f843, %f841, 0fBEFFFFFF;
	fma.rn.f32 	%f846, %f841, %f840, 0f00000000;
	fma.rn.f32 	%f848, %f847, %f841, 0fBE2AAAA8;
	and.b32  	%r411, %r410, 1;
	fma.rn.f32 	%f897, %f896, %f894, 0fBEFFFFFF;
	fma.rn.f32 	%f899, %f894, %f893, 0f00000000;
	fma.rn.f32 	%f901, %f900, %f894, 0fBE2AAAA8;
	and.b32  	%r440, %r439, 1;
	fma.rn.f32 	%f952, %f951, %f949, 0fBEFFFFFF;
	fma.rn.f32 	%f954, %f949, %f948, 0f00000000;
	fma.rn.f32 	%f956, %f955, %f949, 0fBE2AAAA8;
	and.b32  	%r459, %r458, 1;
	fma.rn.f32 	%f1005, %f1004, %f1002, 0fBEFFFFFF;
	fma.rn.f32 	%f1007, %f1002, %f1001, 0f00000000;
	fma.rn.f32 	%f1009, %f1008, %f1002, 0fBE2AAAA8;
	and.b32  	%r488, %r487, 1;
	add.f32 	%f1046, %f1382, %f1382;
	mov.b32 	%r502, %f1046;
	and.b32  	%r503, %r502, -2147483648;
	or.b32  	%r504, %r503, 1056964608;
	mov.b32 	%f1047, %r504;
	add.f32 	%f1048, %f1046, %f1047;
	cvt.rzi.f32.f32 	%f1049, %f1048;
	abs.f32 	%f1050, %f1046;
	setp.gt.f32 	%p192, %f1050, 0f4B000000;
	selp.f32 	%f1051, %f1046, %f1049, %p192;
	cvt.rzi.f32.f32 	%f1052, %f1046;
	setp.lt.f32 	%p193, %f1050, 0f3F000000;
	selp.f32 	%f1053, %f1052, %f1051, %p193;
	cvt.rzi.s32.f32 	%r505, %f1053;
	fma.rn.f32 	%f1054, %f1053, 0fBF000000, %f1382;
	mul.f32 	%f1055, %f1054, 0f34222169;
	fma.rn.f32 	%f1056, %f1054, 0f40490FDA, %f1055;
	mul.f32 	%f1057, %f1056, %f1056;
	fma.rn.f32 	%f1058, %f1057, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f1059, %f1058, %f1057, 0f3D2AAABB;
	fma.rn.f32 	%f1063, %f1057, 0fB94D4153, 0f3C0885E4;
	sub.s32 	%r510, %r85, %r71;
	cvt.rn.f32.s32 	%f1077, %r510;
	div.approx.f32 	%f165, %f1077, %f287;
	abs.f32 	%f1386, %f165;
	setp.lt.f32 	%p199, %f1386, 0f40000000;
	@%p199 bra 	LBB0_118;
// %bb.107:
	setp.gtu.f32 	%p200, %f1386, 0f4B800000;
	@%p200 bra 	LBB0_114;
	bra.uni 	LBB0_108;
LBB0_114:
	mov.b32 	%r95, %f1386;
	and.b32  	%r511, %r95, 8388607;
	or.b32  	%r16160, %r511, 1065353216;
	mov.b32 	%f1385, %r16160;
	add.s32 	%r512, %r95, -1073741824;
	and.b32  	%r16161, %r512, -8388608;
	setp.eq.s32 	%p206, %r16161, 0;
	@%p206 bra 	LBB0_117;
// %bb.115:                             // %__nv_fmaf_rn.exit4.i.i.i2413.preheader
	mov.f32 	%f1088, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1087,%f1088;
	// end inline asm
LBB0_116:                               // %__nv_fmaf_rn.exit4.i.i.i2413
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r513, %r16161, 192937984;
	add.s32 	%r514, %r513, %r16160;
	mov.b32 	%f1089, %r514;
	mul.f32 	%f1090, %f1087, %f1089;
	sub.f32 	%f1091, %f1089, %f1090;
	fma.rn.f32 	%f1092, %f1091, %f1087, %f1090;
	sub.f32 	%f1093, %f1089, %f1092;
	fma.rz.f32 	%f1094, %f1093, %f1087, %f1092;
	cvt.rzi.f32.f32 	%f1095, %f1094;
	sub.f32 	%f1385, %f1089, %f1095;
	sub.s32 	%r16161, %r16161, %r513;
	mov.b32 	%r16160, %f1385;
	setp.ne.s32 	%p207, %r16161, 0;
	setp.ne.s32 	%p208, %r16160, 0;
	and.pred  	%p209, %p207, %p208;
	@%p209 bra 	LBB0_116;
LBB0_117:                               // %__internal_fmodf_slowpath_mod.exit.i.i2415
	setp.gt.u32 	%p210, %r95, 2139095039;
	selp.f32 	%f1096, 0f7FFFFFFF, 0f4B800000, %p210;
	mul.f32 	%f1097, %f1385, 0f34000000;
	mul.f32 	%f1386, %f1096, %f1097;
	bra.uni 	LBB0_118;
LBB0_108:                               // %__nv_fast_fdividef.exit.i.i.i2385
	div.approx.f32 	%f1080, %f1386, %f255;
	cvt.rzi.f32.f32 	%f1384, %f1080;
	fma.rn.f32 	%f168, %f1384, 0fC0000000, %f1386;
	mov.b32 	%r94, %f168;
	setp.lt.u32 	%p201, %r94, 1073741824;
	@%p201 bra 	LBB0_113;
// %bb.109:
	setp.lt.u32 	%p202, %r94, -2147483647;
	@%p202 bra 	LBB0_111;
// %bb.110:
	add.f32 	%f1085, %f1384, 0fBF800000;
	setp.lt.f32 	%p205, %f168, 0fC0000000;
	add.f32 	%f1086, %f1085, 0fBF800000;
	selp.f32 	%f1384, %f1086, %f1085, %p205;
	bra.uni 	LBB0_113;
LBB0_111:
	add.f32 	%f1384, %f1384, 0f3F800000;
	setp.ltu.f32 	%p203, %f168, 0f40800000;
	@%p203 bra 	LBB0_113;
// %bb.112:                             // %__nv_fmaf_rn.exit.i.i.i2390
	add.f32 	%f1081, %f1384, 0f3F800000;
	fma.rn.f32 	%f1083, %f255, 0fC0400000, %f168;
	setp.ge.f32 	%p204, %f1083, 0f00000000;
	add.f32 	%f1084, %f1081, 0f3F800000;
	selp.f32 	%f1384, %f1084, %f1081, %p204;
LBB0_113:                               // %__internal_fmodf_fastpath_quot.exit.i.i2394
	fma.rn.f32 	%f1386, %f1384, 0fC0000000, %f1386;
LBB0_118:                               // %__internal_fmodf_kernel.exit.i2419
	fma.rn.f32 	%f279, %f277, %f273, 0fC09DE9E6;
	fma.rn.f32 	%f280, %f276, %f278, 0f00000000;
	and.b32  	%r261, %r260, 1;
	fma.rn.f32 	%f313, %f311, %f307, 0fC09DE9E6;
	fma.rn.f32 	%f314, %f310, %f312, 0f00000000;
	and.b32  	%r268, %r267, 1;
	fma.rn.f32 	%f348, %f346, %f342, 0fC09DE9E6;
	fma.rn.f32 	%f349, %f345, %f347, 0f00000000;
	and.b32  	%r279, %r278, 1;
	fma.rn.f32 	%f382, %f380, %f376, 0fC09DE9E6;
	fma.rn.f32 	%f383, %f379, %f381, 0f00000000;
	and.b32  	%r286, %r285, 1;
	fma.rn.f32 	%f417, %f415, %f411, 0fC09DE9E6;
	fma.rn.f32 	%f418, %f414, %f416, 0f00000000;
	and.b32  	%r297, %r296, 1;
	fma.rn.f32 	%f451, %f449, %f445, 0fC09DE9E6;
	fma.rn.f32 	%f452, %f448, %f450, 0f00000000;
	and.b32  	%r304, %r303, 1;
	fma.rn.f32 	%f486, %f484, %f480, 0fC09DE9E6;
	fma.rn.f32 	%f487, %f483, %f485, 0f00000000;
	and.b32  	%r315, %r314, 1;
	fma.rn.f32 	%f520, %f518, %f514, 0fC09DE9E6;
	fma.rn.f32 	%f521, %f517, %f519, 0f00000000;
	and.b32  	%r322, %r321, 1;
	fma.rn.f32 	%f555, %f553, %f549, 0fC09DE9E6;
	fma.rn.f32 	%f556, %f552, %f554, 0f00000000;
	and.b32  	%r333, %r332, 1;
	fma.rn.f32 	%f589, %f587, %f583, 0fC09DE9E6;
	fma.rn.f32 	%f590, %f586, %f588, 0f00000000;
	and.b32  	%r340, %r339, 1;
	fma.rn.f32 	%f624, %f622, %f618, 0fC09DE9E6;
	fma.rn.f32 	%f625, %f621, %f623, 0f00000000;
	and.b32  	%r351, %r350, 1;
	fma.rn.f32 	%f658, %f656, %f652, 0fC09DE9E6;
	fma.rn.f32 	%f659, %f655, %f657, 0f00000000;
	and.b32  	%r358, %r357, 1;
	fma.rn.f32 	%f693, %f691, %f687, 0fC09DE9E6;
	fma.rn.f32 	%f694, %f690, %f692, 0f00000000;
	and.b32  	%r369, %r368, 1;
	fma.rn.f32 	%f727, %f725, %f721, 0fC09DE9E6;
	fma.rn.f32 	%f728, %f724, %f726, 0f00000000;
	and.b32  	%r376, %r375, 1;
	fma.rn.f32 	%f762, %f760, %f756, 0fC09DE9E6;
	fma.rn.f32 	%f763, %f759, %f761, 0f00000000;
	and.b32  	%r387, %r386, 1;
	fma.rn.f32 	%f796, %f794, %f790, 0fC09DE9E6;
	fma.rn.f32 	%f797, %f793, %f795, 0f00000000;
	and.b32  	%r394, %r393, 1;
	fma.rn.f32 	%f845, %f844, %f841, 0f3F800000;
	fma.rn.f32 	%f849, %f848, %f846, %f840;
	setp.eq.b32 	%p114, %r411, 1;
	fma.rn.f32 	%f898, %f897, %f894, 0f3F800000;
	fma.rn.f32 	%f902, %f901, %f899, %f893;
	setp.eq.b32 	%p134, %r440, 1;
	fma.rn.f32 	%f953, %f952, %f949, 0f3F800000;
	fma.rn.f32 	%f957, %f956, %f954, %f948;
	setp.eq.b32 	%p154, %r459, 1;
	fma.rn.f32 	%f1006, %f1005, %f1002, 0f3F800000;
	fma.rn.f32 	%f1010, %f1009, %f1007, %f1001;
	setp.eq.b32 	%p174, %r488, 1;
	fma.rn.f32 	%f1060, %f1059, %f1057, 0fBEFFFFFF;
	fma.rn.f32 	%f1062, %f1057, %f1056, 0f00000000;
	fma.rn.f32 	%f1064, %f1063, %f1057, 0fBE2AAAA8;
	and.b32  	%r506, %r505, 1;
	shr.u32 	%r16, %r5, 1;
	shr.u32 	%r22, %r5, 3;
	abs.f32 	%f1098, %f1386;
	setp.gtu.f32 	%p211, %f1098, 0f7F800000;
	@%p211 bra 	LBB0_120;
// %bb.119:
	mov.b32 	%r515, %f165;
	and.b32  	%r516, %r515, -2147483648;
	mov.b32 	%r517, %f1386;
	or.b32  	%r518, %r516, %r517;
	mov.b32 	%f1386, %r518;
LBB0_120:                               // %__nv_fmodf.exit2420
	fma.rn.f32 	%f281, %f279, %f273, 0f3F800000;
	fma.rn.f32 	%f282, %f272, 0f40490FDB, %f280;
	setp.eq.b32 	%p6, %r261, 1;
	fma.rn.f32 	%f315, %f313, %f307, 0f3F800000;
	fma.rn.f32 	%f316, %f306, 0f40490FDB, %f314;
	setp.eq.b32 	%p12, %r268, 1;
	fma.rn.f32 	%f350, %f348, %f342, 0f3F800000;
	fma.rn.f32 	%f351, %f341, 0f40490FDB, %f349;
	setp.eq.b32 	%p18, %r279, 1;
	fma.rn.f32 	%f384, %f382, %f376, 0f3F800000;
	fma.rn.f32 	%f385, %f375, 0f40490FDB, %f383;
	setp.eq.b32 	%p24, %r286, 1;
	fma.rn.f32 	%f419, %f417, %f411, 0f3F800000;
	fma.rn.f32 	%f420, %f410, 0f40490FDB, %f418;
	setp.eq.b32 	%p30, %r297, 1;
	fma.rn.f32 	%f453, %f451, %f445, 0f3F800000;
	fma.rn.f32 	%f454, %f444, 0f40490FDB, %f452;
	setp.eq.b32 	%p36, %r304, 1;
	fma.rn.f32 	%f488, %f486, %f480, 0f3F800000;
	fma.rn.f32 	%f489, %f479, 0f40490FDB, %f487;
	setp.eq.b32 	%p42, %r315, 1;
	fma.rn.f32 	%f522, %f520, %f514, 0f3F800000;
	fma.rn.f32 	%f523, %f513, 0f40490FDB, %f521;
	setp.eq.b32 	%p48, %r322, 1;
	fma.rn.f32 	%f557, %f555, %f549, 0f3F800000;
	fma.rn.f32 	%f558, %f548, 0f40490FDB, %f556;
	setp.eq.b32 	%p54, %r333, 1;
	fma.rn.f32 	%f591, %f589, %f583, 0f3F800000;
	fma.rn.f32 	%f592, %f582, 0f40490FDB, %f590;
	setp.eq.b32 	%p60, %r340, 1;
	fma.rn.f32 	%f626, %f624, %f618, 0f3F800000;
	fma.rn.f32 	%f627, %f617, 0f40490FDB, %f625;
	setp.eq.b32 	%p66, %r351, 1;
	fma.rn.f32 	%f660, %f658, %f652, 0f3F800000;
	fma.rn.f32 	%f661, %f651, 0f40490FDB, %f659;
	setp.eq.b32 	%p72, %r358, 1;
	fma.rn.f32 	%f695, %f693, %f687, 0f3F800000;
	fma.rn.f32 	%f696, %f686, 0f40490FDB, %f694;
	setp.eq.b32 	%p78, %r369, 1;
	fma.rn.f32 	%f729, %f727, %f721, 0f3F800000;
	fma.rn.f32 	%f730, %f720, 0f40490FDB, %f728;
	setp.eq.b32 	%p84, %r376, 1;
	fma.rn.f32 	%f764, %f762, %f756, 0f3F800000;
	fma.rn.f32 	%f765, %f755, 0f40490FDB, %f763;
	setp.eq.b32 	%p90, %r387, 1;
	fma.rn.f32 	%f798, %f796, %f790, 0f3F800000;
	fma.rn.f32 	%f799, %f789, 0f40490FDB, %f797;
	setp.eq.b32 	%p96, %r394, 1;
	selp.f32 	%f850, %f845, %f849, %p114;
	and.b32  	%r412, %r410, 2;
	selp.f32 	%f903, %f898, %f902, %p134;
	and.b32  	%r441, %r439, 2;
	selp.f32 	%f958, %f953, %f957, %p154;
	and.b32  	%r460, %r458, 2;
	selp.f32 	%f1011, %f1006, %f1010, %p174;
	and.b32  	%r489, %r487, 2;
	fma.rn.f32 	%f1061, %f1060, %f1057, 0f3F800000;
	fma.rn.f32 	%f1065, %f1064, %f1062, %f1056;
	setp.eq.b32 	%p194, %r506, 1;
	add.f32 	%f1099, %f1386, %f1386;
	mov.b32 	%r525, %f1099;
	and.b32  	%r526, %r525, -2147483648;
	or.b32  	%r527, %r526, 1056964608;
	mov.b32 	%f1100, %r527;
	add.f32 	%f1101, %f1099, %f1100;
	cvt.rzi.f32.f32 	%f1102, %f1101;
	abs.f32 	%f1103, %f1099;
	setp.gt.f32 	%p212, %f1103, 0f4B000000;
	selp.f32 	%f1104, %f1099, %f1102, %p212;
	cvt.rzi.f32.f32 	%f1105, %f1099;
	setp.lt.f32 	%p213, %f1103, 0f3F000000;
	selp.f32 	%f1106, %f1105, %f1104, %p213;
	cvt.rzi.s32.f32 	%r528, %f1106;
	fma.rn.f32 	%f1107, %f1106, 0fBF000000, %f1386;
	mul.f32 	%f1108, %f1107, 0f34222169;
	fma.rn.f32 	%f1109, %f1107, 0f40490FDA, %f1108;
	mul.f32 	%f1110, %f1109, %f1109;
	fma.rn.f32 	%f1111, %f1110, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f1112, %f1111, %f1110, 0f3D2AAABB;
	fma.rn.f32 	%f1113, %f1112, %f1110, 0fBEFFFFFF;
	fma.rn.f32 	%f1114, %f1113, %f1110, 0f3F800000;
	fma.rn.f32 	%f1115, %f1110, %f1109, 0f00000000;
	fma.rn.f32 	%f1116, %f1110, 0fB94D4153, 0f3C0885E4;
	fma.rn.f32 	%f1117, %f1116, %f1110, 0fBE2AAAA8;
	fma.rn.f32 	%f1118, %f1117, %f1115, %f1109;
	and.b32  	%r529, %r528, 1;
	setp.eq.b32 	%p214, %r529, 1;
	and.b32  	%r533, %r22, 2;
	and.b32  	%r534, %r16, 4;
	or.b32  	%r535, %r20, %r533;
	or.b32  	%r104, %r535, %r534;
	mul.lo.s32 	%r105, %r84, %r104;
	cvt.rn.f32.s32 	%f1132, %r105;
	mov.f32 	%f1133, 0f41800000;
	div.approx.f32 	%f182, %f1132, %f1133;
	abs.f32 	%f1390, %f182;
	setp.lt.f32 	%p219, %f1390, 0f40000000;
	@%p219 bra 	LBB0_132;
// %bb.121:
	setp.gtu.f32 	%p220, %f1390, 0f4B800000;
	@%p220 bra 	LBB0_128;
	bra.uni 	LBB0_122;
LBB0_128:
	mov.b32 	%r107, %f1390;
	and.b32  	%r536, %r107, 8388607;
	or.b32  	%r16162, %r536, 1065353216;
	mov.b32 	%f1389, %r16162;
	add.s32 	%r537, %r107, -1073741824;
	and.b32  	%r16163, %r537, -8388608;
	setp.eq.s32 	%p226, %r16163, 0;
	@%p226 bra 	LBB0_131;
// %bb.129:                             // %__nv_fmaf_rn.exit4.i.i.i2459.preheader
	mov.f32 	%f1143, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1142,%f1143;
	// end inline asm
LBB0_130:                               // %__nv_fmaf_rn.exit4.i.i.i2459
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r538, %r16163, 192937984;
	add.s32 	%r539, %r538, %r16162;
	mov.b32 	%f1144, %r539;
	mul.f32 	%f1145, %f1142, %f1144;
	sub.f32 	%f1146, %f1144, %f1145;
	fma.rn.f32 	%f1147, %f1146, %f1142, %f1145;
	sub.f32 	%f1148, %f1144, %f1147;
	fma.rz.f32 	%f1149, %f1148, %f1142, %f1147;
	cvt.rzi.f32.f32 	%f1150, %f1149;
	sub.f32 	%f1389, %f1144, %f1150;
	sub.s32 	%r16163, %r16163, %r538;
	mov.b32 	%r16162, %f1389;
	setp.ne.s32 	%p227, %r16163, 0;
	setp.ne.s32 	%p228, %r16162, 0;
	and.pred  	%p229, %p227, %p228;
	@%p229 bra 	LBB0_130;
LBB0_131:                               // %__internal_fmodf_slowpath_mod.exit.i.i2461
	setp.gt.u32 	%p230, %r107, 2139095039;
	selp.f32 	%f1151, 0f7FFFFFFF, 0f4B800000, %p230;
	mul.f32 	%f1152, %f1389, 0f34000000;
	mul.f32 	%f1390, %f1151, %f1152;
	bra.uni 	LBB0_132;
LBB0_122:                               // %__nv_fast_fdividef.exit.i.i.i2431
	div.approx.f32 	%f1135, %f1390, %f255;
	cvt.rzi.f32.f32 	%f1388, %f1135;
	fma.rn.f32 	%f185, %f1388, 0fC0000000, %f1390;
	mov.b32 	%r106, %f185;
	setp.lt.u32 	%p221, %r106, 1073741824;
	@%p221 bra 	LBB0_127;
// %bb.123:
	setp.lt.u32 	%p222, %r106, -2147483647;
	@%p222 bra 	LBB0_125;
// %bb.124:
	add.f32 	%f1140, %f1388, 0fBF800000;
	setp.lt.f32 	%p225, %f185, 0fC0000000;
	add.f32 	%f1141, %f1140, 0fBF800000;
	selp.f32 	%f1388, %f1141, %f1140, %p225;
	bra.uni 	LBB0_127;
LBB0_125:
	add.f32 	%f1388, %f1388, 0f3F800000;
	setp.ltu.f32 	%p223, %f185, 0f40800000;
	@%p223 bra 	LBB0_127;
// %bb.126:                             // %__nv_fmaf_rn.exit.i.i.i2436
	add.f32 	%f1136, %f1388, 0f3F800000;
	fma.rn.f32 	%f1138, %f255, 0fC0400000, %f185;
	setp.ge.f32 	%p224, %f1138, 0f00000000;
	add.f32 	%f1139, %f1136, 0f3F800000;
	selp.f32 	%f1388, %f1139, %f1136, %p224;
LBB0_127:                               // %__internal_fmodf_fastpath_quot.exit.i.i2440
	fma.rn.f32 	%f1390, %f1388, 0fC0000000, %f1390;
LBB0_132:                               // %__internal_fmodf_kernel.exit.i2465
	and.b32  	%r8, %r7, 8;
	shl.b32 	%r10, %r5, 2;
	and.b32  	%r13, %r5, 18;
	selp.f32 	%f283, %f281, %f282, %p6;
	and.b32  	%r262, %r260, 2;
	mov.f32 	%f284, 0f00000000;
	selp.f32 	%f317, %f315, %f316, %p12;
	and.b32  	%r269, %r267, 2;
	selp.f32 	%f352, %f350, %f351, %p18;
	and.b32  	%r280, %r278, 2;
	selp.f32 	%f386, %f384, %f385, %p24;
	and.b32  	%r287, %r285, 2;
	selp.f32 	%f421, %f419, %f420, %p30;
	and.b32  	%r298, %r296, 2;
	selp.f32 	%f455, %f453, %f454, %p36;
	and.b32  	%r305, %r303, 2;
	selp.f32 	%f490, %f488, %f489, %p42;
	and.b32  	%r316, %r314, 2;
	selp.f32 	%f524, %f522, %f523, %p48;
	and.b32  	%r323, %r321, 2;
	selp.f32 	%f559, %f557, %f558, %p54;
	and.b32  	%r334, %r332, 2;
	selp.f32 	%f593, %f591, %f592, %p60;
	and.b32  	%r341, %r339, 2;
	selp.f32 	%f628, %f626, %f627, %p66;
	and.b32  	%r352, %r350, 2;
	selp.f32 	%f662, %f660, %f661, %p72;
	and.b32  	%r359, %r357, 2;
	selp.f32 	%f697, %f695, %f696, %p78;
	and.b32  	%r370, %r368, 2;
	selp.f32 	%f731, %f729, %f730, %p84;
	and.b32  	%r377, %r375, 2;
	selp.f32 	%f766, %f764, %f765, %p90;
	and.b32  	%r388, %r386, 2;
	selp.f32 	%f800, %f798, %f799, %p96;
	and.b32  	%r395, %r393, 2;
	setp.eq.s32 	%p115, %r412, 0;
	neg.f32 	%f852, %f850;
	add.s32 	%r413, %r410, 1;
	cvt.rzi.f32.f32 	%f857, %f1366;
	setp.eq.s32 	%p135, %r441, 0;
	neg.f32 	%f905, %f903;
	add.s32 	%r442, %r439, 1;
	cvt.rzi.f32.f32 	%f910, %f1370;
	setp.eq.s32 	%p155, %r460, 0;
	neg.f32 	%f960, %f958;
	add.s32 	%r461, %r458, 1;
	cvt.rzi.f32.f32 	%f965, %f1374;
	setp.eq.s32 	%p175, %r489, 0;
	neg.f32 	%f1013, %f1011;
	add.s32 	%r490, %r487, 1;
	cvt.rzi.f32.f32 	%f1018, %f1378;
	selp.f32 	%f1066, %f1061, %f1065, %p194;
	and.b32  	%r507, %r505, 2;
	selp.f32 	%f1119, %f1114, %f1118, %p214;
	and.b32  	%r530, %r528, 2;
	abs.f32 	%f1153, %f1390;
	setp.gtu.f32 	%p231, %f1153, 0f7F800000;
	@%p231 bra 	LBB0_134;
// %bb.133:
	mov.b32 	%r540, %f182;
	and.b32  	%r541, %r540, -2147483648;
	mov.b32 	%r542, %f1390;
	or.b32  	%r543, %r541, %r542;
	mov.b32 	%f1390, %r543;
LBB0_134:                               // %__nv_fmodf.exit2466
	and.b32  	%r11, %r10, 4;
	or.b32  	%r244, %r13, %r8;
	setp.eq.s32 	%p7, %r262, 0;
	sub.f32 	%f285, %f284, %f283;
	setp.eq.s32 	%p13, %r269, 0;
	sub.f32 	%f319, %f284, %f317;
	setp.eq.s32 	%p19, %r280, 0;
	sub.f32 	%f354, %f284, %f352;
	setp.eq.s32 	%p25, %r287, 0;
	sub.f32 	%f388, %f284, %f386;
	setp.eq.s32 	%p31, %r298, 0;
	sub.f32 	%f423, %f284, %f421;
	setp.eq.s32 	%p37, %r305, 0;
	sub.f32 	%f457, %f284, %f455;
	setp.eq.s32 	%p43, %r316, 0;
	sub.f32 	%f492, %f284, %f490;
	setp.eq.s32 	%p49, %r323, 0;
	sub.f32 	%f526, %f284, %f524;
	setp.eq.s32 	%p55, %r334, 0;
	sub.f32 	%f561, %f284, %f559;
	setp.eq.s32 	%p61, %r341, 0;
	sub.f32 	%f595, %f284, %f593;
	setp.eq.s32 	%p67, %r352, 0;
	sub.f32 	%f630, %f284, %f628;
	setp.eq.s32 	%p73, %r359, 0;
	sub.f32 	%f664, %f284, %f662;
	setp.eq.s32 	%p79, %r370, 0;
	sub.f32 	%f699, %f284, %f697;
	setp.eq.s32 	%p85, %r377, 0;
	sub.f32 	%f733, %f284, %f731;
	setp.eq.s32 	%p91, %r388, 0;
	sub.f32 	%f768, %f284, %f766;
	setp.eq.s32 	%p97, %r395, 0;
	sub.f32 	%f802, %f284, %f800;
	selp.f32 	%f851, %f849, %f845, %p114;
	selp.f32 	%f853, %f850, %f852, %p115;
	and.b32  	%r414, %r413, 2;
	setp.eq.f32 	%p117, %f857, %f1366;
	mul.f32 	%f858, %f1366, 0f00000000;
	selp.f32 	%f904, %f902, %f898, %p134;
	selp.f32 	%f906, %f903, %f905, %p135;
	and.b32  	%r443, %r442, 2;
	setp.eq.f32 	%p137, %f910, %f1370;
	mul.f32 	%f911, %f1370, 0f00000000;
	selp.f32 	%f959, %f957, %f953, %p154;
	selp.f32 	%f961, %f958, %f960, %p155;
	and.b32  	%r462, %r461, 2;
	setp.eq.f32 	%p157, %f965, %f1374;
	mul.f32 	%f966, %f1374, 0f00000000;
	selp.f32 	%f1012, %f1010, %f1006, %p174;
	selp.f32 	%f1014, %f1011, %f1013, %p175;
	and.b32  	%r491, %r490, 2;
	setp.eq.f32 	%p177, %f1018, %f1378;
	mul.f32 	%f1019, %f1378, 0f00000000;
	setp.eq.s32 	%p195, %r507, 0;
	neg.f32 	%f1068, %f1066;
	add.s32 	%r508, %r505, 1;
	cvt.rzi.f32.f32 	%f1073, %f1382;
	setp.eq.s32 	%p215, %r530, 0;
	neg.f32 	%f1121, %f1119;
	add.s32 	%r531, %r528, 1;
	cvt.rzi.f32.f32 	%f1126, %f1386;
	add.f32 	%f1154, %f1390, %f1390;
	mov.b32 	%r544, %f1154;
	and.b32  	%r545, %r544, -2147483648;
	or.b32  	%r546, %r545, 1056964608;
	mov.b32 	%f1155, %r546;
	add.f32 	%f1156, %f1154, %f1155;
	cvt.rzi.f32.f32 	%f1157, %f1156;
	abs.f32 	%f1158, %f1154;
	setp.gt.f32 	%p232, %f1158, 0f4B000000;
	selp.f32 	%f1159, %f1154, %f1157, %p232;
	cvt.rzi.f32.f32 	%f1160, %f1154;
	setp.lt.f32 	%p233, %f1158, 0f3F000000;
	selp.f32 	%f1161, %f1160, %f1159, %p233;
	cvt.rzi.s32.f32 	%r547, %f1161;
	fma.rn.f32 	%f1162, %f1161, 0fBF000000, %f1390;
	mul.f32 	%f1163, %f1162, 0f34222169;
	fma.rn.f32 	%f1164, %f1162, 0f40490FDA, %f1163;
	mul.f32 	%f1165, %f1164, %f1164;
	fma.rn.f32 	%f1166, %f1165, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f1167, %f1166, %f1165, 0f3D2AAABB;
	fma.rn.f32 	%f1168, %f1167, %f1165, 0fBEFFFFFF;
	fma.rn.f32 	%f1169, %f1168, %f1165, 0f3F800000;
	fma.rn.f32 	%f1170, %f1165, %f1164, 0f00000000;
	fma.rn.f32 	%f1171, %f1165, 0fB94D4153, 0f3C0885E4;
	fma.rn.f32 	%f1172, %f1171, %f1165, 0fBE2AAAA8;
	fma.rn.f32 	%f1173, %f1172, %f1170, %f1164;
	and.b32  	%r548, %r547, 1;
	setp.eq.b32 	%p234, %r548, 1;
	selp.f32 	%f1174, %f1169, %f1173, %p234;
	selp.f32 	%f1175, %f1173, %f1169, %p234;
	and.b32  	%r549, %r547, 2;
	setp.eq.s32 	%p235, %r549, 0;
	neg.f32 	%f1176, %f1174;
	selp.f32 	%f1177, %f1174, %f1176, %p235;
	add.s32 	%r550, %r547, 1;
	and.b32  	%r551, %r550, 2;
	cvt.rzi.f32.f32 	%f1181, %f1390;
	setp.eq.f32 	%p237, %f1181, %f1390;
	mul.f32 	%f1182, %f1390, 0f00000000;
	shl.b32 	%r552, %r104, 3;
	sub.s32 	%r553, %r105, %r552;
	cvt.rn.f32.s32 	%f1185, %r553;
	div.approx.f32 	%f201, %f1185, %f1133;
	abs.f32 	%f1394, %f201;
	setp.lt.f32 	%p239, %f1394, 0f40000000;
	@%p239 bra 	LBB0_146;
// %bb.135:
	setp.gtu.f32 	%p240, %f1394, 0f4B800000;
	@%p240 bra 	LBB0_142;
	bra.uni 	LBB0_136;
LBB0_142:
	mov.b32 	%r115, %f1394;
	and.b32  	%r554, %r115, 8388607;
	or.b32  	%r16164, %r554, 1065353216;
	mov.b32 	%f1393, %r16164;
	add.s32 	%r555, %r115, -1073741824;
	and.b32  	%r16165, %r555, -8388608;
	setp.eq.s32 	%p246, %r16165, 0;
	@%p246 bra 	LBB0_145;
// %bb.143:                             // %__nv_fmaf_rn.exit4.i.i.i2505.preheader
	mov.f32 	%f1196, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1195,%f1196;
	// end inline asm
LBB0_144:                               // %__nv_fmaf_rn.exit4.i.i.i2505
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r556, %r16165, 192937984;
	add.s32 	%r557, %r556, %r16164;
	mov.b32 	%f1197, %r557;
	mul.f32 	%f1198, %f1195, %f1197;
	sub.f32 	%f1199, %f1197, %f1198;
	fma.rn.f32 	%f1200, %f1199, %f1195, %f1198;
	sub.f32 	%f1201, %f1197, %f1200;
	fma.rz.f32 	%f1202, %f1201, %f1195, %f1200;
	cvt.rzi.f32.f32 	%f1203, %f1202;
	sub.f32 	%f1393, %f1197, %f1203;
	sub.s32 	%r16165, %r16165, %r556;
	mov.b32 	%r16164, %f1393;
	setp.ne.s32 	%p247, %r16165, 0;
	setp.ne.s32 	%p248, %r16164, 0;
	and.pred  	%p249, %p247, %p248;
	@%p249 bra 	LBB0_144;
LBB0_145:                               // %__internal_fmodf_slowpath_mod.exit.i.i2507
	setp.gt.u32 	%p250, %r115, 2139095039;
	selp.f32 	%f1204, 0f7FFFFFFF, 0f4B800000, %p250;
	mul.f32 	%f1205, %f1393, 0f34000000;
	mul.f32 	%f1394, %f1204, %f1205;
	bra.uni 	LBB0_146;
LBB0_136:                               // %__nv_fast_fdividef.exit.i.i.i2477
	div.approx.f32 	%f1188, %f1394, %f255;
	cvt.rzi.f32.f32 	%f1392, %f1188;
	fma.rn.f32 	%f204, %f1392, 0fC0000000, %f1394;
	mov.b32 	%r114, %f204;
	setp.lt.u32 	%p241, %r114, 1073741824;
	@%p241 bra 	LBB0_141;
// %bb.137:
	setp.lt.u32 	%p242, %r114, -2147483647;
	@%p242 bra 	LBB0_139;
// %bb.138:
	add.f32 	%f1193, %f1392, 0fBF800000;
	setp.lt.f32 	%p245, %f204, 0fC0000000;
	add.f32 	%f1194, %f1193, 0fBF800000;
	selp.f32 	%f1392, %f1194, %f1193, %p245;
	bra.uni 	LBB0_141;
LBB0_139:
	add.f32 	%f1392, %f1392, 0f3F800000;
	setp.ltu.f32 	%p243, %f204, 0f40800000;
	@%p243 bra 	LBB0_141;
// %bb.140:                             // %__nv_fmaf_rn.exit.i.i.i2482
	add.f32 	%f1189, %f1392, 0f3F800000;
	fma.rn.f32 	%f1191, %f255, 0fC0400000, %f204;
	setp.ge.f32 	%p244, %f1191, 0f00000000;
	add.f32 	%f1192, %f1189, 0f3F800000;
	selp.f32 	%f1392, %f1192, %f1189, %p244;
LBB0_141:                               // %__internal_fmodf_fastpath_quot.exit.i.i2486
	fma.rn.f32 	%f1394, %f1392, 0fC0000000, %f1394;
LBB0_146:                               // %__internal_fmodf_kernel.exit.i2511
	and.b32  	%r12, %r10, 32;
	or.b32  	%r245, %r244, %r11;
	selp.f32 	%f286, %f283, %f285, %p7;
	selp.f32 	%f320, %f317, %f319, %p13;
	selp.f32 	%f355, %f352, %f354, %p19;
	selp.f32 	%f389, %f386, %f388, %p25;
	selp.f32 	%f424, %f421, %f423, %p31;
	selp.f32 	%f458, %f455, %f457, %p37;
	selp.f32 	%f493, %f490, %f492, %p43;
	selp.f32 	%f527, %f524, %f526, %p49;
	selp.f32 	%f562, %f559, %f561, %p55;
	selp.f32 	%f596, %f593, %f595, %p61;
	selp.f32 	%f631, %f628, %f630, %p67;
	selp.f32 	%f665, %f662, %f664, %p73;
	selp.f32 	%f700, %f697, %f699, %p79;
	selp.f32 	%f734, %f731, %f733, %p85;
	selp.f32 	%f769, %f766, %f768, %p91;
	selp.f32 	%f803, %f800, %f802, %p97;
	setp.eq.s32 	%p116, %r414, 0;
	sub.f32 	%f855, %f284, %f851;
	selp.f32 	%f91, %f858, %f853, %p117;
	abs.f32 	%f859, %f1366;
	setp.eq.s32 	%p136, %r443, 0;
	sub.f32 	%f908, %f284, %f904;
	selp.f32 	%f912, %f911, %f906, %p137;
	abs.f32 	%f913, %f1370;
	setp.eq.s32 	%p156, %r462, 0;
	sub.f32 	%f963, %f284, %f959;
	selp.f32 	%f127, %f966, %f961, %p157;
	abs.f32 	%f967, %f1374;
	setp.eq.s32 	%p176, %r491, 0;
	sub.f32 	%f1016, %f284, %f1012;
	selp.f32 	%f1020, %f1019, %f1014, %p177;
	abs.f32 	%f1021, %f1378;
	selp.f32 	%f1067, %f1065, %f1061, %p194;
	selp.f32 	%f1069, %f1066, %f1068, %p195;
	and.b32  	%r509, %r508, 2;
	setp.eq.f32 	%p197, %f1073, %f1382;
	mul.f32 	%f1074, %f1382, 0f00000000;
	selp.f32 	%f1120, %f1118, %f1114, %p214;
	selp.f32 	%f1122, %f1119, %f1121, %p215;
	and.b32  	%r532, %r531, 2;
	setp.eq.f32 	%p217, %f1126, %f1386;
	mul.f32 	%f1127, %f1386, 0f00000000;
	setp.eq.s32 	%p236, %r551, 0;
	sub.f32 	%f1179, %f284, %f1175;
	selp.f32 	%f199, %f1182, %f1177, %p237;
	abs.f32 	%f1183, %f1390;
	and.b32  	%r9, %r5, 16;
	abs.f32 	%f1206, %f1394;
	setp.gtu.f32 	%p251, %f1206, 0f7F800000;
	@%p251 bra 	LBB0_148;
// %bb.147:
	mov.b32 	%r558, %f201;
	and.b32  	%r559, %r558, -2147483648;
	mov.b32 	%r560, %f1394;
	or.b32  	%r561, %r559, %r560;
	mov.b32 	%f1394, %r561;
LBB0_148:                               // %__nv_fmodf.exit2512
	or.b32  	%r246, %r245, %r12;
	mul.f32 	%f2, %f286, %f286;
	mul.f32 	%f7, %f320, %f320;
	mul.f32 	%f11, %f355, %f355;
	mul.f32 	%f16, %f389, %f389;
	mul.f32 	%f20, %f424, %f424;
	mul.f32 	%f25, %f458, %f458;
	mul.f32 	%f29, %f493, %f493;
	mul.f32 	%f34, %f527, %f527;
	mul.f32 	%f38, %f562, %f562;
	mul.f32 	%f43, %f596, %f596;
	mul.f32 	%f47, %f631, %f631;
	mul.f32 	%f52, %f665, %f665;
	mul.f32 	%f56, %f700, %f700;
	mul.f32 	%f61, %f734, %f734;
	mul.f32 	%f65, %f769, %f769;
	mul.f32 	%f70, %f803, %f803;
	selp.f32 	%f856, %f851, %f855, %p116;
	setp.gt.f32 	%p118, %f859, 0f4B800000;
	add.f32 	%f860, %f91, 0f3F800000;
	selp.f32 	%f909, %f904, %f908, %p136;
	setp.gt.f32 	%p138, %f913, 0f4B800000;
	add.f32 	%f914, %f912, 0f3F800000;
	selp.f32 	%f964, %f959, %f963, %p156;
	setp.gt.f32 	%p158, %f967, 0f4B800000;
	add.f32 	%f968, %f127, 0f3F800000;
	selp.f32 	%f1017, %f1012, %f1016, %p176;
	setp.gt.f32 	%p178, %f1021, 0f4B800000;
	add.f32 	%f1022, %f1020, 0f3F800000;
	setp.eq.s32 	%p196, %r509, 0;
	sub.f32 	%f1071, %f284, %f1067;
	selp.f32 	%f163, %f1074, %f1069, %p197;
	abs.f32 	%f1075, %f1382;
	setp.eq.s32 	%p216, %r532, 0;
	sub.f32 	%f1124, %f284, %f1120;
	selp.f32 	%f1128, %f1127, %f1122, %p217;
	abs.f32 	%f1129, %f1386;
	selp.f32 	%f1180, %f1175, %f1179, %p236;
	setp.gt.f32 	%p238, %f1183, 0f4B800000;
	add.f32 	%f1184, %f199, 0f3F800000;
	add.f32 	%f1207, %f1394, %f1394;
	mov.b32 	%r574, %f1207;
	and.b32  	%r575, %r574, -2147483648;
	or.b32  	%r576, %r575, 1056964608;
	mov.b32 	%f1208, %r576;
	add.f32 	%f1209, %f1207, %f1208;
	cvt.rzi.f32.f32 	%f1210, %f1209;
	abs.f32 	%f1211, %f1207;
	setp.gt.f32 	%p252, %f1211, 0f4B000000;
	selp.f32 	%f1212, %f1207, %f1210, %p252;
	cvt.rzi.f32.f32 	%f1213, %f1207;
	setp.lt.f32 	%p253, %f1211, 0f3F000000;
	selp.f32 	%f1214, %f1213, %f1212, %p253;
	cvt.rzi.s32.f32 	%r577, %f1214;
	fma.rn.f32 	%f1215, %f1214, 0fBF000000, %f1394;
	mul.f32 	%f1216, %f1215, 0f34222169;
	fma.rn.f32 	%f1217, %f1215, 0f40490FDA, %f1216;
	mul.f32 	%f1218, %f1217, %f1217;
	fma.rn.f32 	%f1219, %f1218, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f1220, %f1219, %f1218, 0f3D2AAABB;
	fma.rn.f32 	%f1221, %f1220, %f1218, 0fBEFFFFFF;
	fma.rn.f32 	%f1222, %f1221, %f1218, 0f3F800000;
	fma.rn.f32 	%f1223, %f1218, %f1217, 0f00000000;
	fma.rn.f32 	%f1224, %f1218, 0fB94D4153, 0f3C0885E4;
	fma.rn.f32 	%f1225, %f1224, %f1218, 0fBE2AAAA8;
	fma.rn.f32 	%f1226, %f1225, %f1223, %f1217;
	and.b32  	%r578, %r577, 1;
	setp.eq.b32 	%p254, %r578, 1;
	selp.f32 	%f1227, %f1222, %f1226, %p254;
	selp.f32 	%f1228, %f1226, %f1222, %p254;
	and.b32  	%r579, %r577, 2;
	setp.eq.s32 	%p255, %r579, 0;
	neg.f32 	%f1229, %f1227;
	selp.f32 	%f1230, %f1227, %f1229, %p255;
	add.s32 	%r580, %r577, 1;
	and.b32  	%r581, %r580, 2;
	setp.eq.s32 	%p256, %r581, 0;
	sub.f32 	%f1232, %f284, %f1228;
	selp.f32 	%f1233, %f1228, %f1232, %p256;
	cvt.rzi.f32.f32 	%f1234, %f1394;
	setp.eq.f32 	%p257, %f1234, %f1394;
	mul.f32 	%f1235, %f1394, 0f00000000;
	selp.f32 	%f1236, %f1235, %f1230, %p257;
	abs.f32 	%f1237, %f1394;
	setp.gt.f32 	%p258, %f1237, 0f4B800000;
	add.f32 	%f1238, %f1236, 0f3F800000;
	cvt.u16.u32 	%rs1, %r5;
	shr.u16 	%rs2, %rs1, 8;
	shl.b16 	%rs3, %rs1, 8;
	or.b16  	%rs4, %rs3, %rs2;
	shl.b16 	%rs5, %rs4, 4;
	shr.u16 	%rs6, %rs4, 4;
	and.b16  	%rs7, %rs6, 3840;
	or.b16  	%rs8, %rs7, %rs5;
	and.b16  	%rs9, %rs8, 13107;
	shl.b16 	%rs10, %rs9, 2;
	shr.u16 	%rs11, %rs8, 2;
	and.b16  	%rs12, %rs11, 13107;
	or.b16  	%rs13, %rs12, %rs10;
	and.b16  	%rs14, %rs13, 20480;
	shl.b16 	%rs15, %rs14, 1;
	shr.u16 	%rs16, %rs13, 1;
	and.b16  	%rs17, %rs16, 16384;
	or.b16  	%rs18, %rs17, %rs15;
	shr.u16 	%rs19, %rs18, 13;
	add.s32 	%r583, %r249, %r9;
	neg.s32 	%r584, %r583;
	mad.lo.s32 	%r585, %r23, -32, %r584;
	or.b16  	%rs20, %rs19, 1;
	cvt.u32.u16 	%r586, %rs20;
	and.b16  	%rs21, %rs19, 6;
	cvt.u32.u16 	%r587, %rs21;
	sub.s32 	%r588, %r585, %r587;
	shl.b32 	%r589, %r588, 1;
	cvt.rn.f32.s32 	%f1240, %r589;
	div.approx.f32 	%f218, %f1240, %f287;
	abs.f32 	%f1398, %f218;
	setp.lt.f32 	%p259, %f1398, 0f40000000;
	@%p259 bra 	LBB0_160;
// %bb.149:
	setp.gtu.f32 	%p260, %f1398, 0f4B800000;
	@%p260 bra 	LBB0_156;
	bra.uni 	LBB0_150;
LBB0_156:
	mov.b32 	%r128, %f1398;
	and.b32  	%r590, %r128, 8388607;
	or.b32  	%r16166, %r590, 1065353216;
	mov.b32 	%f1397, %r16166;
	add.s32 	%r591, %r128, -1073741824;
	and.b32  	%r16167, %r591, -8388608;
	setp.eq.s32 	%p266, %r16167, 0;
	@%p266 bra 	LBB0_159;
// %bb.157:                             // %__nv_fmaf_rn.exit4.i.i.i2551.preheader
	mov.f32 	%f1251, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1250,%f1251;
	// end inline asm
LBB0_158:                               // %__nv_fmaf_rn.exit4.i.i.i2551
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r592, %r16167, 192937984;
	add.s32 	%r593, %r592, %r16166;
	mov.b32 	%f1252, %r593;
	mul.f32 	%f1253, %f1250, %f1252;
	sub.f32 	%f1254, %f1252, %f1253;
	fma.rn.f32 	%f1255, %f1254, %f1250, %f1253;
	sub.f32 	%f1256, %f1252, %f1255;
	fma.rz.f32 	%f1257, %f1256, %f1250, %f1255;
	cvt.rzi.f32.f32 	%f1258, %f1257;
	sub.f32 	%f1397, %f1252, %f1258;
	sub.s32 	%r16167, %r16167, %r592;
	mov.b32 	%r16166, %f1397;
	setp.ne.s32 	%p267, %r16167, 0;
	setp.ne.s32 	%p268, %r16166, 0;
	and.pred  	%p269, %p267, %p268;
	@%p269 bra 	LBB0_158;
LBB0_159:                               // %__internal_fmodf_slowpath_mod.exit.i.i2553
	setp.gt.u32 	%p270, %r128, 2139095039;
	selp.f32 	%f1259, 0f7FFFFFFF, 0f4B800000, %p270;
	mul.f32 	%f1260, %f1397, 0f34000000;
	mul.f32 	%f1398, %f1259, %f1260;
	bra.uni 	LBB0_160;
LBB0_150:                               // %__nv_fast_fdividef.exit.i.i.i2523
	div.approx.f32 	%f1243, %f1398, %f255;
	cvt.rzi.f32.f32 	%f1396, %f1243;
	fma.rn.f32 	%f221, %f1396, 0fC0000000, %f1398;
	mov.b32 	%r127, %f221;
	setp.lt.u32 	%p261, %r127, 1073741824;
	@%p261 bra 	LBB0_155;
// %bb.151:
	setp.lt.u32 	%p262, %r127, -2147483647;
	@%p262 bra 	LBB0_153;
// %bb.152:
	add.f32 	%f1248, %f1396, 0fBF800000;
	setp.lt.f32 	%p265, %f221, 0fC0000000;
	add.f32 	%f1249, %f1248, 0fBF800000;
	selp.f32 	%f1396, %f1249, %f1248, %p265;
	bra.uni 	LBB0_155;
LBB0_153:
	add.f32 	%f1396, %f1396, 0f3F800000;
	setp.ltu.f32 	%p263, %f221, 0f40800000;
	@%p263 bra 	LBB0_155;
// %bb.154:                             // %__nv_fmaf_rn.exit.i.i.i2528
	add.f32 	%f1244, %f1396, 0f3F800000;
	fma.rn.f32 	%f1246, %f255, 0fC0400000, %f221;
	setp.ge.f32 	%p264, %f1246, 0f00000000;
	add.f32 	%f1247, %f1244, 0f3F800000;
	selp.f32 	%f1396, %f1247, %f1244, %p264;
LBB0_155:                               // %__internal_fmodf_fastpath_quot.exit.i.i2532
	fma.rn.f32 	%f1398, %f1396, 0fC0000000, %f1398;
LBB0_160:                               // %__internal_fmodf_kernel.exit.i2557
	shr.u32 	%r247, %r246, 1;
	mul.f32 	%f290, %f2, 0f3B8B2FF9;
	mul.f32 	%f324, %f7, 0f3B8B2FF9;
	mul.f32 	%f359, %f11, 0f3B8B2FF9;
	mul.f32 	%f393, %f16, 0f3B8B2FF9;
	mul.f32 	%f428, %f20, 0f3B8B2FF9;
	mul.f32 	%f462, %f25, 0f3B8B2FF9;
	mul.f32 	%f497, %f29, 0f3B8B2FF9;
	mul.f32 	%f531, %f34, 0f3B8B2FF9;
	mul.f32 	%f566, %f38, 0f3B8B2FF9;
	mul.f32 	%f600, %f43, 0f3B8B2FF9;
	mul.f32 	%f635, %f47, 0f3B8B2FF9;
	mul.f32 	%f669, %f52, 0f3B8B2FF9;
	mul.f32 	%f704, %f56, 0f3B8B2FF9;
	mul.f32 	%f738, %f61, 0f3B8B2FF9;
	mul.f32 	%f773, %f65, 0f3B8B2FF9;
	mul.f32 	%f806, %f70, 0f3B8B2FF9;
	selp.f32 	%f92, %f860, %f856, %p118;
	selp.f32 	%f915, %f914, %f909, %p138;
	selp.f32 	%f128, %f968, %f964, %p158;
	selp.f32 	%f1023, %f1022, %f1017, %p178;
	selp.f32 	%f1072, %f1067, %f1071, %p196;
	setp.gt.f32 	%p198, %f1075, 0f4B800000;
	add.f32 	%f1076, %f163, 0f3F800000;
	selp.f32 	%f1125, %f1120, %f1124, %p216;
	setp.gt.f32 	%p218, %f1129, 0f4B800000;
	add.f32 	%f1130, %f1128, 0f3F800000;
	selp.f32 	%f200, %f1184, %f1180, %p238;
	selp.f32 	%f1239, %f1238, %f1233, %p258;
	sub.s32 	%r126, %r585, %r586;
	abs.f32 	%f1261, %f1398;
	setp.gtu.f32 	%p271, %f1261, 0f7F800000;
	@%p271 bra 	LBB0_162;
// %bb.161:
	mov.b32 	%r594, %f218;
	and.b32  	%r595, %r594, -2147483648;
	mov.b32 	%r596, %f1398;
	or.b32  	%r597, %r595, %r596;
	mov.b32 	%f1398, %r597;
LBB0_162:                               // %__nv_fmodf.exit2558
	ld.param.u64 	%rd1, [_Z17julia_upchan_409713CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_2];
	mul.wide.u32 	%rd49, %r247, 4;
	mul.f32 	%f6, %f290, %f1348;
	mul.f32 	%f325, %f324, %f1349;
	mul.f32 	%f15, %f359, %f1350;
	mul.f32 	%f394, %f393, %f1351;
	mul.f32 	%f24, %f428, %f1352;
	mul.f32 	%f463, %f462, %f1353;
	mul.f32 	%f33, %f497, %f1354;
	mul.f32 	%f532, %f531, %f1355;
	mul.f32 	%f42, %f566, %f1356;
	mul.f32 	%f601, %f600, %f1357;
	mul.f32 	%f51, %f635, %f1358;
	mul.f32 	%f670, %f669, %f1359;
	mul.f32 	%f60, %f704, %f1360;
	mul.f32 	%f739, %f738, %f1361;
	mul.f32 	%f69, %f773, %f1362;
	mul.f32 	%f807, %f806, %f1363;
	mov.b32 	%r426, %f915;
	mov.b32 	%r425, %f92;
	mov.b32 	%r432, %f912;
	mov.b32 	%r431, %f91;
	mov.b32 	%r474, %f1023;
	mov.b32 	%r473, %f128;
	mov.b32 	%r480, %f1020;
	mov.b32 	%r479, %f127;
	selp.f32 	%f164, %f1076, %f1072, %p198;
	selp.f32 	%f1131, %f1130, %f1125, %p218;
	mov.b32 	%r564, %f1239;
	mov.b32 	%r563, %f200;
	mov.b32 	%r570, %f1236;
	mov.b32 	%r569, %f199;
	add.f32 	%f1262, %f1398, %f1398;
	mov.b32 	%r598, %f1262;
	and.b32  	%r599, %r598, -2147483648;
	or.b32  	%r600, %r599, 1056964608;
	mov.b32 	%f1263, %r600;
	add.f32 	%f1264, %f1262, %f1263;
	cvt.rzi.f32.f32 	%f1265, %f1264;
	abs.f32 	%f1266, %f1262;
	setp.gt.f32 	%p272, %f1266, 0f4B000000;
	selp.f32 	%f1267, %f1262, %f1265, %p272;
	cvt.rzi.f32.f32 	%f1268, %f1262;
	setp.lt.f32 	%p273, %f1266, 0f3F000000;
	selp.f32 	%f1269, %f1268, %f1267, %p273;
	cvt.rzi.s32.f32 	%r601, %f1269;
	fma.rn.f32 	%f1270, %f1269, 0fBF000000, %f1398;
	mul.f32 	%f1271, %f1270, 0f34222169;
	fma.rn.f32 	%f1272, %f1270, 0f40490FDA, %f1271;
	mul.f32 	%f1273, %f1272, %f1272;
	fma.rn.f32 	%f1274, %f1273, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f1275, %f1274, %f1273, 0f3D2AAABB;
	fma.rn.f32 	%f1276, %f1275, %f1273, 0fBEFFFFFF;
	fma.rn.f32 	%f1277, %f1276, %f1273, 0f3F800000;
	fma.rn.f32 	%f1278, %f1273, %f1272, 0f00000000;
	fma.rn.f32 	%f1279, %f1273, 0fB94D4153, 0f3C0885E4;
	fma.rn.f32 	%f1280, %f1279, %f1273, 0fBE2AAAA8;
	fma.rn.f32 	%f1281, %f1280, %f1278, %f1272;
	and.b32  	%r602, %r601, 1;
	setp.eq.b32 	%p274, %r602, 1;
	selp.f32 	%f1282, %f1277, %f1281, %p274;
	selp.f32 	%f1283, %f1281, %f1277, %p274;
	and.b32  	%r603, %r601, 2;
	setp.eq.s32 	%p275, %r603, 0;
	neg.f32 	%f1284, %f1282;
	selp.f32 	%f1285, %f1282, %f1284, %p275;
	add.s32 	%r604, %r601, 1;
	and.b32  	%r605, %r604, 2;
	setp.eq.s32 	%p276, %r605, 0;
	sub.f32 	%f1287, %f284, %f1283;
	selp.f32 	%f1288, %f1283, %f1287, %p276;
	cvt.rzi.f32.f32 	%f1289, %f1398;
	setp.eq.f32 	%p277, %f1289, %f1398;
	mul.f32 	%f1290, %f1398, 0f00000000;
	selp.f32 	%f235, %f1290, %f1285, %p277;
	abs.f32 	%f1291, %f1398;
	setp.gt.f32 	%p278, %f1291, 0f4B800000;
	add.f32 	%f1292, %f235, 0f3F800000;
	shl.b32 	%r606, %r126, 1;
	cvt.rn.f32.s32 	%f1293, %r606;
	div.approx.f32 	%f237, %f1293, %f287;
	abs.f32 	%f1402, %f237;
	setp.lt.f32 	%p279, %f1402, 0f40000000;
	@%p279 bra 	LBB0_174;
// %bb.163:
	setp.gtu.f32 	%p280, %f1402, 0f4B800000;
	@%p280 bra 	LBB0_170;
	bra.uni 	LBB0_164;
LBB0_170:
	mov.b32 	%r136, %f1402;
	and.b32  	%r607, %r136, 8388607;
	or.b32  	%r16168, %r607, 1065353216;
	mov.b32 	%f1401, %r16168;
	add.s32 	%r608, %r136, -1073741824;
	and.b32  	%r16169, %r608, -8388608;
	setp.eq.s32 	%p286, %r16169, 0;
	@%p286 bra 	LBB0_173;
// %bb.171:                             // %__nv_fmaf_rn.exit4.i.i.i2597.preheader
	mov.f32 	%f1304, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1303,%f1304;
	// end inline asm
LBB0_172:                               // %__nv_fmaf_rn.exit4.i.i.i2597
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r609, %r16169, 192937984;
	add.s32 	%r610, %r609, %r16168;
	mov.b32 	%f1305, %r610;
	mul.f32 	%f1306, %f1303, %f1305;
	sub.f32 	%f1307, %f1305, %f1306;
	fma.rn.f32 	%f1308, %f1307, %f1303, %f1306;
	sub.f32 	%f1309, %f1305, %f1308;
	fma.rz.f32 	%f1310, %f1309, %f1303, %f1308;
	cvt.rzi.f32.f32 	%f1311, %f1310;
	sub.f32 	%f1401, %f1305, %f1311;
	sub.s32 	%r16169, %r16169, %r609;
	mov.b32 	%r16168, %f1401;
	setp.ne.s32 	%p287, %r16169, 0;
	setp.ne.s32 	%p288, %r16168, 0;
	and.pred  	%p289, %p287, %p288;
	@%p289 bra 	LBB0_172;
LBB0_173:                               // %__internal_fmodf_slowpath_mod.exit.i.i2599
	setp.gt.u32 	%p290, %r136, 2139095039;
	selp.f32 	%f1312, 0f7FFFFFFF, 0f4B800000, %p290;
	mul.f32 	%f1313, %f1401, 0f34000000;
	mul.f32 	%f1402, %f1312, %f1313;
	bra.uni 	LBB0_174;
LBB0_164:                               // %__nv_fast_fdividef.exit.i.i.i2569
	div.approx.f32 	%f1296, %f1402, %f255;
	cvt.rzi.f32.f32 	%f1400, %f1296;
	fma.rn.f32 	%f240, %f1400, 0fC0000000, %f1402;
	mov.b32 	%r135, %f240;
	setp.lt.u32 	%p281, %r135, 1073741824;
	@%p281 bra 	LBB0_169;
// %bb.165:
	setp.lt.u32 	%p282, %r135, -2147483647;
	@%p282 bra 	LBB0_167;
// %bb.166:
	add.f32 	%f1301, %f1400, 0fBF800000;
	setp.lt.f32 	%p285, %f240, 0fC0000000;
	add.f32 	%f1302, %f1301, 0fBF800000;
	selp.f32 	%f1400, %f1302, %f1301, %p285;
	bra.uni 	LBB0_169;
LBB0_167:
	add.f32 	%f1400, %f1400, 0f3F800000;
	setp.ltu.f32 	%p283, %f240, 0f40800000;
	@%p283 bra 	LBB0_169;
// %bb.168:                             // %__nv_fmaf_rn.exit.i.i.i2574
	add.f32 	%f1297, %f1400, 0f3F800000;
	fma.rn.f32 	%f1299, %f255, 0fC0400000, %f240;
	setp.ge.f32 	%p284, %f1299, 0f00000000;
	add.f32 	%f1300, %f1297, 0f3F800000;
	selp.f32 	%f1400, %f1300, %f1297, %p284;
LBB0_169:                               // %__internal_fmodf_fastpath_quot.exit.i.i2578
	fma.rn.f32 	%f1402, %f1400, 0fC0000000, %f1402;
LBB0_174:                               // %__internal_fmodf_kernel.exit.i2603
	add.s64 	%rd50, %rd1, %rd49;
	mov.b32 	%r272, %f325;
	mov.b32 	%r271, %f6;
	mov.b32 	%r290, %f394;
	mov.b32 	%r289, %f15;
	mov.b32 	%r308, %f463;
	mov.b32 	%r307, %f24;
	mov.b32 	%r326, %f532;
	mov.b32 	%r325, %f33;
	mov.b32 	%r344, %f601;
	mov.b32 	%r343, %f42;
	mov.b32 	%r362, %f670;
	mov.b32 	%r361, %f51;
	mov.b32 	%r380, %f739;
	mov.b32 	%r379, %f60;
	mov.b32 	%r398, %f807;
	mov.b32 	%r397, %f69;
	xor.b32  	%r477, %r480, -2147483648;
	xor.b32  	%r476, %r479, -2147483648;
	mov.b32 	%r521, %f1131;
	mov.b32 	%r520, %f164;
	mov.b32 	%r524, %f1128;
	mov.b32 	%r523, %f163;
	xor.b32  	%r567, %r570, -2147483648;
	xor.b32  	%r566, %r569, -2147483648;
	selp.f32 	%f236, %f1292, %f1288, %p278;
	abs.f32 	%f1314, %f1402;
	setp.gtu.f32 	%p291, %f1314, 0f7F800000;
	@%p291 bra 	LBB0_176;
// %bb.175:
	mov.b32 	%r611, %f237;
	and.b32  	%r612, %r611, -2147483648;
	mov.b32 	%r613, %f1402;
	or.b32  	%r614, %r612, %r613;
	mov.b32 	%f1402, %r614;
LBB0_176:                               // %__nv_fmodf.exit2604
	ld.param.u64 	%rd2, [_Z17julia_upchan_409713CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_3];
	ld.param.u64 	%rd3, [_Z17julia_upchan_409713CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_4];
	ld.global.u32 	%r14, [%rd50];
	ld.global.u32 	%r15, [%rd50+128];
	// begin inline asm
	cvt.rn.f16x2.f32 %r270, %r272, %r271;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r288, %r290, %r289;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r306, %r308, %r307;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r324, %r326, %r325;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r342, %r344, %r343;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r360, %r362, %r361;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r378, %r380, %r379;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r396, %r398, %r397;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r424, %r426, %r425;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r427, %r426, %r425;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r430, %r432, %r431;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r433, %r432, %r431;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r472, %r474, %r473;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r475, %r477, %r476;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r478, %r480, %r479;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r481, %r474, %r473;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r519, %r521, %r520;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r522, %r524, %r523;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r562, %r564, %r563;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r565, %r567, %r566;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r568, %r570, %r569;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r571, %r564, %r563;
	// end inline asm
	add.f32 	%f1315, %f1402, %f1402;
	mov.b32 	%r622, %f1315;
	and.b32  	%r623, %r622, -2147483648;
	or.b32  	%r624, %r623, 1056964608;
	mov.b32 	%f1316, %r624;
	add.f32 	%f1317, %f1315, %f1316;
	cvt.rzi.f32.f32 	%f1318, %f1317;
	abs.f32 	%f1319, %f1315;
	setp.gt.f32 	%p292, %f1319, 0f4B000000;
	selp.f32 	%f1320, %f1315, %f1318, %p292;
	cvt.rzi.f32.f32 	%f1321, %f1315;
	setp.lt.f32 	%p293, %f1319, 0f3F000000;
	selp.f32 	%f1322, %f1321, %f1320, %p293;
	cvt.rzi.s32.f32 	%r625, %f1322;
	fma.rn.f32 	%f1323, %f1322, 0fBF000000, %f1402;
	mul.f32 	%f1324, %f1323, 0f34222169;
	fma.rn.f32 	%f1325, %f1323, 0f40490FDA, %f1324;
	mul.f32 	%f1326, %f1325, %f1325;
	fma.rn.f32 	%f1327, %f1326, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f1328, %f1327, %f1326, 0f3D2AAABB;
	fma.rn.f32 	%f1329, %f1328, %f1326, 0fBEFFFFFF;
	fma.rn.f32 	%f1330, %f1329, %f1326, 0f3F800000;
	fma.rn.f32 	%f1331, %f1326, %f1325, 0f00000000;
	fma.rn.f32 	%f1332, %f1326, 0fB94D4153, 0f3C0885E4;
	fma.rn.f32 	%f1333, %f1332, %f1326, 0fBE2AAAA8;
	fma.rn.f32 	%f1334, %f1333, %f1331, %f1325;
	and.b32  	%r626, %r625, 1;
	setp.eq.b32 	%p294, %r626, 1;
	selp.f32 	%f1335, %f1330, %f1334, %p294;
	selp.f32 	%f1336, %f1334, %f1330, %p294;
	and.b32  	%r627, %r625, 2;
	setp.eq.s32 	%p295, %r627, 0;
	neg.f32 	%f1337, %f1335;
	selp.f32 	%f1338, %f1335, %f1337, %p295;
	add.s32 	%r628, %r625, 1;
	and.b32  	%r629, %r628, 2;
	setp.eq.s32 	%p296, %r629, 0;
	sub.f32 	%f1340, %f284, %f1336;
	selp.f32 	%f1341, %f1336, %f1340, %p296;
	cvt.rzi.f32.f32 	%f1342, %f1402;
	setp.eq.f32 	%p297, %f1342, %f1402;
	mul.f32 	%f1343, %f1402, 0f00000000;
	selp.f32 	%f1344, %f1343, %f1338, %p297;
	abs.f32 	%f1345, %f1402;
	setp.gt.f32 	%p298, %f1345, 0f4B800000;
	add.f32 	%f1346, %f1344, 0f3F800000;
	selp.f32 	%f1347, %f1346, %f1341, %p298;
	mov.b32 	%r617, %f1347;
	mov.b32 	%r616, %f236;
	// begin inline asm
	cvt.rn.f16x2.f32 %r615, %r617, %r616;
	// end inline asm
	mov.b32 	%r620, %f1344;
	mov.b32 	%r619, %f235;
	// begin inline asm
	cvt.rn.f16x2.f32 %r618, %r620, %r619;
	// end inline asm
	and.b32  	%r630, %r10, 28;
	shl.b32 	%r631, %r1, 5;
	and.b32  	%r632, %r631, 96;
	or.b32  	%r633, %r630, %r632;
	shl.b32 	%r634, %r1, 4;
	and.b32  	%r635, %r634, 1920;
	and.b32  	%r636, %r7, 32;
	shl.b32 	%r637, %r5, 3;
	and.b32  	%r638, %r637, 64;
	or.b32  	%r639, %r636, %r3;
	or.b32  	%r145, %r639, %r638;
	and.b32  	%r640, %r2, 2048;
	or.b32  	%r641, %r633, %r635;
	or.b32  	%r146, %r641, %r640;
	and.b32  	%r147, %r5, 8;
	and.b32  	%r642, %r3, 1;
	mul.lo.s32 	%r643, %r21, 65;
	shr.u32 	%r644, %r3, 1;
	bfe.u32 	%r645, %r3, 1, 1;
	bfe.u32 	%r646, %r3, 2, 1;
	shr.u32 	%r647, %r3, 3;
	shl.b32 	%r648, %r5, 4;
	or.b32  	%r649, %r648, %r147;
	shr.u32 	%r650, %r649, 2;
	and.b32  	%r651, %r650, 30;
	mad.lo.s32 	%r652, %r642, 2080, %r643;
	mad.lo.s32 	%r653, %r647, 260, %r652;
	mad.lo.s32 	%r654, %r645, 1040, %r653;
	mad.lo.s32 	%r655, %r646, 520, %r654;
	add.s32 	%r656, %r655, %r651;
	mul.wide.u32 	%rd51, %r656, 4;
	mov.u64 	%rd52, shmem;
	add.s64 	%rd5, %rd52, %rd51;
	add.s32 	%r657, %r656, 32;
	mul.wide.u32 	%rd53, %r657, 4;
	add.s64 	%rd6, %rd52, %rd53;
	add.s32 	%r658, %r656, 1;
	mul.wide.u32 	%rd54, %r658, 4;
	add.s64 	%rd7, %rd52, %rd54;
	add.s32 	%r659, %r656, 33;
	mul.wide.u32 	%rd55, %r659, 4;
	add.s64 	%rd8, %rd52, %rd55;
	add.s32 	%r660, %r656, 130;
	mul.wide.u32 	%rd56, %r660, 4;
	add.s64 	%rd9, %rd52, %rd56;
	add.s32 	%r661, %r656, 162;
	mul.wide.u32 	%rd57, %r661, 4;
	add.s64 	%rd10, %rd52, %rd57;
	add.s32 	%r662, %r656, 131;
	mul.wide.u32 	%rd58, %r662, 4;
	add.s64 	%rd11, %rd52, %rd58;
	add.s32 	%r663, %r656, 163;
	mul.wide.u32 	%rd59, %r663, 4;
	add.s64 	%rd12, %rd52, %rd59;
	mul.lo.s32 	%r664, %r17, 65;
	and.b32  	%r665, %r4, 32;
	mul.lo.s32 	%r666, %r18, 130;
	mul.lo.s32 	%r667, %r23, 1040;
	mul.lo.s32 	%r668, %r21, 520;
	mul.lo.s32 	%r669, %r20, 260;
	or.b32  	%r670, %r665, %r644;
	add.s32 	%r671, %r670, %r666;
	add.s32 	%r672, %r671, %r668;
	add.s32 	%r673, %r672, %r664;
	add.s32 	%r674, %r673, %r667;
	add.s32 	%r675, %r674, %r669;
	or.b32  	%r676, %r644, 8;
	add.s32 	%r677, %r666, %r665;
	add.s32 	%r678, %r677, %r668;
	add.s32 	%r679, %r678, %r676;
	add.s32 	%r680, %r679, %r664;
	add.s32 	%r681, %r680, %r667;
	add.s32 	%r682, %r681, %r669;
	or.b32  	%r683, %r644, 16;
	add.s32 	%r684, %r678, %r683;
	add.s32 	%r685, %r684, %r664;
	add.s32 	%r686, %r685, %r667;
	add.s32 	%r687, %r686, %r669;
	or.b32  	%r688, %r644, 24;
	add.s32 	%r689, %r678, %r688;
	add.s32 	%r690, %r689, %r664;
	add.s32 	%r691, %r690, %r667;
	add.s32 	%r692, %r691, %r669;
	or.b32  	%r693, %r644, 2080;
	add.s32 	%r694, %r678, %r693;
	add.s32 	%r695, %r694, %r664;
	add.s32 	%r696, %r695, %r667;
	add.s32 	%r697, %r696, %r669;
	add.s32 	%r698, %r678, 2080;
	add.s32 	%r699, %r698, %r676;
	add.s32 	%r700, %r699, %r664;
	add.s32 	%r701, %r700, %r667;
	add.s32 	%r702, %r701, %r669;
	add.s32 	%r703, %r698, %r683;
	add.s32 	%r704, %r703, %r664;
	add.s32 	%r705, %r704, %r667;
	add.s32 	%r706, %r705, %r669;
	add.s32 	%r707, %r698, %r688;
	add.s32 	%r708, %r707, %r664;
	add.s32 	%r709, %r708, %r667;
	add.s32 	%r710, %r709, %r669;
	or.b32  	%r711, %r13, %r635;
	or.b32  	%r712, %r711, %r8;
	or.b32  	%r713, %r712, %r11;
	or.b32  	%r714, %r713, %r12;
	bfe.u32 	%r715, %r714, 1, 5;
	mul.lo.s32 	%r716, %r715, 65;
	add.s32 	%r717, %r670, %r716;
	or.b32  	%r718, %r676, %r665;
	add.s32 	%r719, %r718, %r716;
	or.b32  	%r720, %r683, %r665;
	add.s32 	%r721, %r720, %r716;
	or.b32  	%r722, %r688, %r665;
	add.s32 	%r723, %r722, %r716;
	or.b32  	%r724, %r715, 32;
	mul.lo.s32 	%r725, %r724, 65;
	add.s32 	%r726, %r670, %r725;
	add.s32 	%r727, %r718, %r725;
	add.s32 	%r728, %r720, %r725;
	add.s32 	%r729, %r722, %r725;
	shl.b32 	%r730, %r3, 1;
	or.b32  	%r731, %r21, %r730;
	mul.lo.s32 	%r732, %r731, 65;
	add.s32 	%r733, %r651, %r732;
	mul.wide.u32 	%rd60, %r733, 4;
	add.s64 	%rd13, %rd52, %rd60;
	cvt.u64.u32 	%rd61, %r651;
	cvt.u64.u32 	%rd62, %r732;
	add.s64 	%rd63, %rd62, %rd61;
	shl.b64 	%rd64, %rd63, 2;
	add.s64 	%rd14, %rd52, %rd64;
	or.b32  	%r734, %r731, 32;
	mul.lo.s32 	%r735, %r734, 65;
	add.s32 	%r736, %r735, %r651;
	mul.wide.u32 	%rd65, %r736, 4;
	add.s64 	%rd15, %rd52, %rd65;
	cvt.u64.u32 	%rd66, %r735;
	add.s64 	%rd67, %rd66, %rd61;
	shl.b64 	%rd68, %rd67, 2;
	add.s64 	%rd16, %rd52, %rd68;
	shl.b32 	%r737, %r3, 2;
	or.b32  	%r738, %r22, %r737;
	or.b32  	%r739, %r738, %r635;
	shl.b32 	%r740, %r739, 7;
	shl.b32 	%r741, %r1, 16;
	and.b32  	%r742, %r741, 262144;
	or.b32  	%r743, %r742, %r633;
	or.b32  	%r744, %r743, %r740;
	or.b32  	%r148, %r744, -1572864;
	or.b32  	%r149, %r744, -1564672;
	mul.wide.u32 	%rd17, %r729, 4;
	mul.wide.u32 	%rd18, %r728, 4;
	mul.wide.u32 	%rd19, %r727, 4;
	mul.wide.u32 	%rd20, %r726, 4;
	mul.wide.u32 	%rd21, %r723, 4;
	mul.wide.u32 	%rd22, %r721, 4;
	mul.wide.u32 	%rd23, %r719, 4;
	mul.wide.u32 	%rd24, %r717, 4;
	mul.wide.u32 	%rd25, %r710, 4;
	mul.wide.u32 	%rd26, %r706, 4;
	mul.wide.u32 	%rd27, %r702, 4;
	mul.wide.u32 	%rd28, %r697, 4;
	mul.wide.u32 	%rd29, %r692, 4;
	mul.wide.u32 	%rd30, %r687, 4;
	mul.wide.u32 	%rd31, %r682, 4;
	mul.wide.u32 	%rd32, %r675, 4;
	mov.u32 	%r16196, 0;
	setp.eq.s32 	%p299, %r147, 0;
	mov.u16 	%rs2381, 25600;
	mov.u16 	%rs2173, 21504;
	mov.u16 	%rs2389, 18432;
	mov.u16 	%rs2307, -14592;
	mov.u32 	%r16197, %r16196;
	mov.u32 	%r16198, %r16196;
	mov.u32 	%r16199, %r16196;
	mov.u32 	%r16200, %r16196;
	mov.u32 	%r16201, %r16196;
	mov.u32 	%r16202, %r16196;
	mov.u32 	%r16203, %r16196;
	mov.u32 	%r16204, %r16196;
	mov.u32 	%r16205, %r16196;
	mov.u32 	%r16206, %r16196;
	mov.u32 	%r16207, %r16196;
	mov.u32 	%r16208, %r16196;
	mov.u32 	%r16209, %r16196;
	mov.u32 	%r16210, %r16196;
	mov.u32 	%r16211, %r16196;
	mov.u32 	%r16212, %r16196;
	mov.u32 	%r16213, %r16196;
	mov.u32 	%r16214, %r16196;
	mov.u32 	%r16215, %r16196;
	mov.u32 	%r16216, %r16196;
	mov.u32 	%r16217, %r16196;
	mov.u32 	%r16218, %r16196;
	mov.u32 	%r16219, %r16196;
	mov.u32 	%r16194, %r16196;
	bra.uni 	LBB0_177;
LBB0_181:                               // %L63596
                                        //   in Loop: Header=BB0_177 Depth=1
	add.s32 	%r16194, %r174, 256;
	setp.gt.s32 	%p304, %r6, %r16194;
	setp.ne.s32 	%p305, %r174, 32512;
	and.pred  	%p306, %p305, %p304;
	@%p306 bra 	LBB0_177;
	bra.uni 	LBB0_182;
LBB0_177:                               // %L2074
                                        // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_178 Depth 2
	mov.u32 	%r174, %r16194;
	or.b32  	%r778, %r145, %r174;
	shl.b32 	%r779, %r778, 12;
	or.b32  	%r780, %r146, %r779;
	mul.wide.u32 	%rd70, %r780, 4;
	add.s64 	%rd71, %rd2, %rd70;
	ld.global.v4.u32 	{%r781, %r782, %r783, %r784}, [%rd71];
	or.b32  	%r785, %r780, 65536;
	mul.wide.s32 	%rd72, %r785, 4;
	add.s64 	%rd73, %rd2, %rd72;
	ld.global.v4.u32 	{%r786, %r787, %r788, %r789}, [%rd73];
	selp.b32 	%r790, %r783, %r781, %p299;
	shfl.sync.bfly.b32	%r791, %r790, 8, 31, -1;
	selp.b32 	%r746, %r781, %r791, %p299;
	selp.b32 	%r747, %r791, %r783, %p299;
	selp.b32 	%r792, %r784, %r782, %p299;
	shfl.sync.bfly.b32	%r793, %r792, 8, 31, -1;
	selp.b32 	%r754, %r782, %r793, %p299;
	selp.b32 	%r755, %r793, %r784, %p299;
	selp.b32 	%r794, %r788, %r786, %p299;
	shfl.sync.bfly.b32	%r795, %r794, 8, 31, -1;
	selp.b32 	%r762, %r786, %r795, %p299;
	selp.b32 	%r763, %r795, %r788, %p299;
	selp.b32 	%r796, %r789, %r787, %p299;
	shfl.sync.bfly.b32	%r797, %r796, 8, 31, -1;
	selp.b32 	%r770, %r787, %r797, %p299;
	selp.b32 	%r771, %r797, %r789, %p299;
	mov.u32 	%r772, 21520;
	// begin inline asm
	prmt.b32 %r745, %r746, %r747, %r772;
	// end inline asm
	mov.u32 	%r776, 30258;
	// begin inline asm
	prmt.b32 %r749, %r746, %r747, %r776;
	// end inline asm
	// begin inline asm
	prmt.b32 %r753, %r754, %r755, %r772;
	// end inline asm
	// begin inline asm
	prmt.b32 %r757, %r754, %r755, %r776;
	// end inline asm
	// begin inline asm
	prmt.b32 %r761, %r762, %r763, %r772;
	// end inline asm
	// begin inline asm
	prmt.b32 %r765, %r762, %r763, %r776;
	// end inline asm
	// begin inline asm
	prmt.b32 %r769, %r770, %r771, %r772;
	// end inline asm
	// begin inline asm
	prmt.b32 %r773, %r770, %r771, %r776;
	// end inline asm
	st.shared.u32 	[%rd5], %r745;
	st.shared.u32 	[%rd6], %r749;
	st.shared.u32 	[%rd7], %r753;
	st.shared.u32 	[%rd8], %r757;
	st.shared.u32 	[%rd9], %r761;
	st.shared.u32 	[%rd10], %r765;
	st.shared.u32 	[%rd11], %r769;
	st.shared.u32 	[%rd12], %r773;
	bar.sync 	0;
	mov.u32 	%r16195, 256;
	mov.u64 	%rd94, %rd52;
LBB0_178:                               // %L9074
                                        //   Parent Loop BB0_177 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	add.s64 	%rd74, %rd94, %rd32;
	ld.shared.u32 	%r16062, [%rd74];
	add.s64 	%rd75, %rd94, %rd31;
	ld.shared.u32 	%r16063, [%rd75];
	add.s64 	%rd76, %rd94, %rd30;
	ld.shared.u32 	%r16064, [%rd76];
	add.s64 	%rd77, %rd94, %rd29;
	ld.shared.u32 	%r16065, [%rd77];
	add.s64 	%rd78, %rd94, %rd28;
	ld.shared.u32 	%r16066, [%rd78];
	add.s64 	%rd79, %rd94, %rd27;
	ld.shared.u32 	%r16067, [%rd79];
	add.s64 	%rd80, %rd94, %rd26;
	ld.shared.u32 	%r16068, [%rd80];
	add.s64 	%rd81, %rd94, %rd25;
	ld.shared.u32 	%r16069, [%rd81];
	// begin inline asm
	mov.b32 %r803, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r814, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r802, %r16062, -2004318072;
	mov.u32 	%r801, 983055;
	// begin inline asm
	lop3.b32 %r800, %r801, %r802, %r803, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r804, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r805, %r803, %r804;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r808, %r800, %r805;
	// end inline asm
	mov.u32 	%r812, 15728880;
	// begin inline asm
	lop3.b32 %r811, %r812, %r802, %r814, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r815, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r816, %r814, %r815;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r819, %r811, %r816;
	// end inline asm
	shr.u32 	%r824, %r802, 8;
	// begin inline asm
	lop3.b32 %r822, %r801, %r824, %r803, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r826, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r827, %r803, %r826;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r830, %r822, %r827;
	// end inline asm
	// begin inline asm
	lop3.b32 %r833, %r812, %r824, %r814, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r837, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r838, %r814, %r837;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r841, %r833, %r838;
	// end inline asm
	// begin inline asm
	mov.b32 %r849, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r860, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r848, %r16063, -2004318072;
	// begin inline asm
	lop3.b32 %r846, %r801, %r848, %r849, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r850, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r851, %r849, %r850;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r854, %r846, %r851;
	// end inline asm
	// begin inline asm
	lop3.b32 %r857, %r812, %r848, %r860, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r861, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r862, %r860, %r861;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r865, %r857, %r862;
	// end inline asm
	shr.u32 	%r870, %r848, 8;
	// begin inline asm
	lop3.b32 %r868, %r801, %r870, %r849, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r872, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r873, %r849, %r872;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r876, %r868, %r873;
	// end inline asm
	// begin inline asm
	lop3.b32 %r879, %r812, %r870, %r860, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r883, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r884, %r860, %r883;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r887, %r879, %r884;
	// end inline asm
	// begin inline asm
	mov.b32 %r895, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r906, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r894, %r16064, -2004318072;
	// begin inline asm
	lop3.b32 %r892, %r801, %r894, %r895, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r896, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r897, %r895, %r896;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r900, %r892, %r897;
	// end inline asm
	// begin inline asm
	lop3.b32 %r903, %r812, %r894, %r906, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r907, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r908, %r906, %r907;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r911, %r903, %r908;
	// end inline asm
	shr.u32 	%r916, %r894, 8;
	// begin inline asm
	lop3.b32 %r914, %r801, %r916, %r895, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r918, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r919, %r895, %r918;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r922, %r914, %r919;
	// end inline asm
	// begin inline asm
	lop3.b32 %r925, %r812, %r916, %r906, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r929, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r930, %r906, %r929;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r933, %r925, %r930;
	// end inline asm
	// begin inline asm
	mov.b32 %r941, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r952, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r940, %r16065, -2004318072;
	// begin inline asm
	lop3.b32 %r938, %r801, %r940, %r941, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r942, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r943, %r941, %r942;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r946, %r938, %r943;
	// end inline asm
	// begin inline asm
	lop3.b32 %r949, %r812, %r940, %r952, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r953, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r954, %r952, %r953;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r957, %r949, %r954;
	// end inline asm
	shr.u32 	%r962, %r940, 8;
	// begin inline asm
	lop3.b32 %r960, %r801, %r962, %r941, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r964, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r965, %r941, %r964;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r968, %r960, %r965;
	// end inline asm
	// begin inline asm
	lop3.b32 %r971, %r812, %r962, %r952, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r975, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r976, %r952, %r975;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r979, %r971, %r976;
	// end inline asm
	// begin inline asm
	mov.b32 %r987, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r998, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r986, %r16066, -2004318072;
	// begin inline asm
	lop3.b32 %r984, %r801, %r986, %r987, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r988, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r989, %r987, %r988;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r992, %r984, %r989;
	// end inline asm
	// begin inline asm
	lop3.b32 %r995, %r812, %r986, %r998, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r999, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1000, %r998, %r999;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1003, %r995, %r1000;
	// end inline asm
	shr.u32 	%r1008, %r986, 8;
	// begin inline asm
	lop3.b32 %r1006, %r801, %r1008, %r987, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1010, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1011, %r987, %r1010;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1014, %r1006, %r1011;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1017, %r812, %r1008, %r998, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1021, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1022, %r998, %r1021;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1025, %r1017, %r1022;
	// end inline asm
	// begin inline asm
	mov.b32 %r1033, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1044, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1032, %r16067, -2004318072;
	// begin inline asm
	lop3.b32 %r1030, %r801, %r1032, %r1033, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1034, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1035, %r1033, %r1034;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1038, %r1030, %r1035;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1041, %r812, %r1032, %r1044, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1045, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1046, %r1044, %r1045;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1049, %r1041, %r1046;
	// end inline asm
	shr.u32 	%r1054, %r1032, 8;
	// begin inline asm
	lop3.b32 %r1052, %r801, %r1054, %r1033, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1056, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1057, %r1033, %r1056;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1060, %r1052, %r1057;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1063, %r812, %r1054, %r1044, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1067, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1068, %r1044, %r1067;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1071, %r1063, %r1068;
	// end inline asm
	// begin inline asm
	mov.b32 %r1079, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1090, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1078, %r16068, -2004318072;
	// begin inline asm
	lop3.b32 %r1076, %r801, %r1078, %r1079, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1080, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1081, %r1079, %r1080;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1084, %r1076, %r1081;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1087, %r812, %r1078, %r1090, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1091, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1092, %r1090, %r1091;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1095, %r1087, %r1092;
	// end inline asm
	shr.u32 	%r1100, %r1078, 8;
	// begin inline asm
	lop3.b32 %r1098, %r801, %r1100, %r1079, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1102, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1103, %r1079, %r1102;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1106, %r1098, %r1103;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1109, %r812, %r1100, %r1090, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1113, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1114, %r1090, %r1113;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1117, %r1109, %r1114;
	// end inline asm
	// begin inline asm
	mov.b32 %r1125, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1136, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1124, %r16069, -2004318072;
	// begin inline asm
	lop3.b32 %r1122, %r801, %r1124, %r1125, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1126, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1127, %r1125, %r1126;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1130, %r1122, %r1127;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1133, %r812, %r1124, %r1136, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1137, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1138, %r1136, %r1137;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1141, %r1133, %r1138;
	// end inline asm
	shr.u32 	%r1146, %r1124, 8;
	// begin inline asm
	lop3.b32 %r1144, %r801, %r1146, %r1125, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1148, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1149, %r1125, %r1148;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1152, %r1144, %r1149;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1155, %r812, %r1146, %r1136, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1159, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1160, %r1136, %r1159;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1163, %r1155, %r1160;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1166, %r378;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1168, %r1166, %r808;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1171, %r378;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1173, %r1171, %r819;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1176, %r378;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1178, %r1176, %r830;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1181, %r378;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1183, %r1181, %r841;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1186, %r378;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1188, %r1186, %r854;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1191, %r378;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1193, %r1191, %r865;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1196, %r378;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1198, %r1196, %r876;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1201, %r378;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1203, %r1201, %r887;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1206, %r378;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1208, %r1206, %r900;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1211, %r378;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1213, %r1211, %r911;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1216, %r378;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1218, %r1216, %r922;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1221, %r378;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1223, %r1221, %r933;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1226, %r378;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1228, %r1226, %r946;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1231, %r378;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1233, %r1231, %r957;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1236, %r378;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1238, %r1236, %r968;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1241, %r378;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1243, %r1241, %r979;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1246, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1248, %r1246, %r992;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1251, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1253, %r1251, %r1003;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1256, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1258, %r1256, %r1014;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1261, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1263, %r1261, %r1025;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1266, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1268, %r1266, %r1038;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1271, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1273, %r1271, %r1049;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1276, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1278, %r1276, %r1060;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1281, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1283, %r1281, %r1071;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1286, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1288, %r1286, %r1084;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1291, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1293, %r1291, %r1095;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1296, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1298, %r1296, %r1106;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1301, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1303, %r1301, %r1117;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1306, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1308, %r1306, %r1130;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1311, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1313, %r1311, %r1141;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1316, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1318, %r1316, %r1152;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1321, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1323, %r1321, %r1163;
	// end inline asm
	// begin inline asm
	mov.b32 %r1331, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1342, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1330, %r16196, -2004318072;
	// begin inline asm
	lop3.b32 %r1328, %r801, %r1330, %r1331, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1332, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1333, %r1331, %r1332;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1336, %r1328, %r1333;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1339, %r812, %r1330, %r1342, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1343, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1344, %r1342, %r1343;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1347, %r1339, %r1344;
	// end inline asm
	shr.u32 	%r1352, %r1330, 8;
	// begin inline asm
	lop3.b32 %r1350, %r801, %r1352, %r1331, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1354, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1355, %r1331, %r1354;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1358, %r1350, %r1355;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1361, %r812, %r1352, %r1342, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1365, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1366, %r1342, %r1365;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1369, %r1361, %r1366;
	// end inline asm
	// begin inline asm
	mov.b32 %r1377, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1388, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1376, %r16197, -2004318072;
	// begin inline asm
	lop3.b32 %r1374, %r801, %r1376, %r1377, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1378, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1379, %r1377, %r1378;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1382, %r1374, %r1379;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1385, %r812, %r1376, %r1388, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1389, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1390, %r1388, %r1389;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1393, %r1385, %r1390;
	// end inline asm
	shr.u32 	%r1398, %r1376, 8;
	// begin inline asm
	lop3.b32 %r1396, %r801, %r1398, %r1377, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1400, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1401, %r1377, %r1400;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1404, %r1396, %r1401;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1407, %r812, %r1398, %r1388, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1411, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1412, %r1388, %r1411;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1415, %r1407, %r1412;
	// end inline asm
	// begin inline asm
	mov.b32 %r1423, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1434, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1422, %r16198, -2004318072;
	// begin inline asm
	lop3.b32 %r1420, %r801, %r1422, %r1423, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1424, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1425, %r1423, %r1424;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1428, %r1420, %r1425;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1431, %r812, %r1422, %r1434, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1435, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1436, %r1434, %r1435;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1439, %r1431, %r1436;
	// end inline asm
	shr.u32 	%r1444, %r1422, 8;
	// begin inline asm
	lop3.b32 %r1442, %r801, %r1444, %r1423, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1446, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1447, %r1423, %r1446;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1450, %r1442, %r1447;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1453, %r812, %r1444, %r1434, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1457, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1458, %r1434, %r1457;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1461, %r1453, %r1458;
	// end inline asm
	// begin inline asm
	mov.b32 %r1469, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1480, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1468, %r16199, -2004318072;
	// begin inline asm
	lop3.b32 %r1466, %r801, %r1468, %r1469, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1470, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1471, %r1469, %r1470;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1474, %r1466, %r1471;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1477, %r812, %r1468, %r1480, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1481, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1482, %r1480, %r1481;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1485, %r1477, %r1482;
	// end inline asm
	shr.u32 	%r1490, %r1468, 8;
	// begin inline asm
	lop3.b32 %r1488, %r801, %r1490, %r1469, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1492, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1493, %r1469, %r1492;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1496, %r1488, %r1493;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1499, %r812, %r1490, %r1480, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1503, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1504, %r1480, %r1503;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1507, %r1499, %r1504;
	// end inline asm
	// begin inline asm
	mov.b32 %r1515, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1526, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1514, %r16208, -2004318072;
	// begin inline asm
	lop3.b32 %r1512, %r801, %r1514, %r1515, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1516, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1517, %r1515, %r1516;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1520, %r1512, %r1517;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1523, %r812, %r1514, %r1526, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1527, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1528, %r1526, %r1527;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1531, %r1523, %r1528;
	// end inline asm
	shr.u32 	%r1536, %r1514, 8;
	// begin inline asm
	lop3.b32 %r1534, %r801, %r1536, %r1515, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1538, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1539, %r1515, %r1538;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1542, %r1534, %r1539;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1545, %r812, %r1536, %r1526, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1549, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1550, %r1526, %r1549;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1553, %r1545, %r1550;
	// end inline asm
	// begin inline asm
	mov.b32 %r1561, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1572, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1560, %r16209, -2004318072;
	// begin inline asm
	lop3.b32 %r1558, %r801, %r1560, %r1561, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1562, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1563, %r1561, %r1562;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1566, %r1558, %r1563;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1569, %r812, %r1560, %r1572, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1573, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1574, %r1572, %r1573;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1577, %r1569, %r1574;
	// end inline asm
	shr.u32 	%r1582, %r1560, 8;
	// begin inline asm
	lop3.b32 %r1580, %r801, %r1582, %r1561, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1584, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1585, %r1561, %r1584;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1588, %r1580, %r1585;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1591, %r812, %r1582, %r1572, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1595, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1596, %r1572, %r1595;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1599, %r1591, %r1596;
	// end inline asm
	// begin inline asm
	mov.b32 %r1607, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1618, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1606, %r16210, -2004318072;
	// begin inline asm
	lop3.b32 %r1604, %r801, %r1606, %r1607, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1608, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1609, %r1607, %r1608;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1612, %r1604, %r1609;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1615, %r812, %r1606, %r1618, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1619, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1620, %r1618, %r1619;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1623, %r1615, %r1620;
	// end inline asm
	shr.u32 	%r1628, %r1606, 8;
	// begin inline asm
	lop3.b32 %r1626, %r801, %r1628, %r1607, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1630, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1631, %r1607, %r1630;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1634, %r1626, %r1631;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1637, %r812, %r1628, %r1618, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1641, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1642, %r1618, %r1641;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1645, %r1637, %r1642;
	// end inline asm
	// begin inline asm
	mov.b32 %r1653, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1664, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1652, %r16211, -2004318072;
	// begin inline asm
	lop3.b32 %r1650, %r801, %r1652, %r1653, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1654, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1655, %r1653, %r1654;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1658, %r1650, %r1655;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1661, %r812, %r1652, %r1664, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1665, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1666, %r1664, %r1665;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1669, %r1661, %r1666;
	// end inline asm
	shr.u32 	%r1674, %r1652, 8;
	// begin inline asm
	lop3.b32 %r1672, %r801, %r1674, %r1653, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1676, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1677, %r1653, %r1676;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1680, %r1672, %r1677;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1683, %r812, %r1674, %r1664, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1687, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1688, %r1664, %r1687;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1691, %r1683, %r1688;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1694, %r270, %r1336, %r1168;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1698, %r270, %r1347, %r1173;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1702, %r270, %r1358, %r1178;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1706, %r270, %r1369, %r1183;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1710, %r270, %r1382, %r1188;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1714, %r270, %r1393, %r1193;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1718, %r270, %r1404, %r1198;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1722, %r270, %r1415, %r1203;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1726, %r270, %r1428, %r1208;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1730, %r270, %r1439, %r1213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1734, %r270, %r1450, %r1218;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1738, %r270, %r1461, %r1223;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1742, %r270, %r1474, %r1228;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1746, %r270, %r1485, %r1233;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1750, %r270, %r1496, %r1238;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1754, %r270, %r1507, %r1243;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1758, %r288, %r1520, %r1248;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1762, %r288, %r1531, %r1253;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1766, %r288, %r1542, %r1258;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1770, %r288, %r1553, %r1263;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1774, %r288, %r1566, %r1268;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1778, %r288, %r1577, %r1273;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1782, %r288, %r1588, %r1278;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1786, %r288, %r1599, %r1283;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1790, %r288, %r1612, %r1288;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1794, %r288, %r1623, %r1293;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1798, %r288, %r1634, %r1298;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1802, %r288, %r1645, %r1303;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1806, %r288, %r1658, %r1308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1810, %r288, %r1669, %r1313;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1814, %r288, %r1680, %r1318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1818, %r288, %r1691, %r1323;
	// end inline asm
	// begin inline asm
	mov.b32 %r1827, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1838, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1826, %r16200, -2004318072;
	// begin inline asm
	lop3.b32 %r1824, %r801, %r1826, %r1827, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1828, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1829, %r1827, %r1828;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1832, %r1824, %r1829;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1835, %r812, %r1826, %r1838, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1839, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1840, %r1838, %r1839;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1843, %r1835, %r1840;
	// end inline asm
	shr.u32 	%r1848, %r1826, 8;
	// begin inline asm
	lop3.b32 %r1846, %r801, %r1848, %r1827, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1850, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1851, %r1827, %r1850;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1854, %r1846, %r1851;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1857, %r812, %r1848, %r1838, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1861, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1862, %r1838, %r1861;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1865, %r1857, %r1862;
	// end inline asm
	// begin inline asm
	mov.b32 %r1873, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1884, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1872, %r16201, -2004318072;
	// begin inline asm
	lop3.b32 %r1870, %r801, %r1872, %r1873, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1874, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1875, %r1873, %r1874;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1878, %r1870, %r1875;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1881, %r812, %r1872, %r1884, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1885, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1886, %r1884, %r1885;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1889, %r1881, %r1886;
	// end inline asm
	shr.u32 	%r1894, %r1872, 8;
	// begin inline asm
	lop3.b32 %r1892, %r801, %r1894, %r1873, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1896, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1897, %r1873, %r1896;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1900, %r1892, %r1897;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1903, %r812, %r1894, %r1884, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1907, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1908, %r1884, %r1907;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1911, %r1903, %r1908;
	// end inline asm
	// begin inline asm
	mov.b32 %r1919, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1930, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1918, %r16202, -2004318072;
	// begin inline asm
	lop3.b32 %r1916, %r801, %r1918, %r1919, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1920, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1921, %r1919, %r1920;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1924, %r1916, %r1921;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1927, %r812, %r1918, %r1930, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1931, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1932, %r1930, %r1931;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1935, %r1927, %r1932;
	// end inline asm
	shr.u32 	%r1940, %r1918, 8;
	// begin inline asm
	lop3.b32 %r1938, %r801, %r1940, %r1919, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1942, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1943, %r1919, %r1942;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1946, %r1938, %r1943;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1949, %r812, %r1940, %r1930, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1953, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1954, %r1930, %r1953;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1957, %r1949, %r1954;
	// end inline asm
	// begin inline asm
	mov.b32 %r1965, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1976, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1964, %r16203, -2004318072;
	// begin inline asm
	lop3.b32 %r1962, %r801, %r1964, %r1965, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1966, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1967, %r1965, %r1966;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1970, %r1962, %r1967;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1973, %r812, %r1964, %r1976, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1977, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1978, %r1976, %r1977;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1981, %r1973, %r1978;
	// end inline asm
	shr.u32 	%r1986, %r1964, 8;
	// begin inline asm
	lop3.b32 %r1984, %r801, %r1986, %r1965, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1988, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1989, %r1965, %r1988;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1992, %r1984, %r1989;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1995, %r812, %r1986, %r1976, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1999, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2000, %r1976, %r1999;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2003, %r1995, %r2000;
	// end inline asm
	// begin inline asm
	mov.b32 %r2011, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2022, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2010, %r16212, -2004318072;
	// begin inline asm
	lop3.b32 %r2008, %r801, %r2010, %r2011, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2012, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2013, %r2011, %r2012;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2016, %r2008, %r2013;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2019, %r812, %r2010, %r2022, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2023, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2024, %r2022, %r2023;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2027, %r2019, %r2024;
	// end inline asm
	shr.u32 	%r2032, %r2010, 8;
	// begin inline asm
	lop3.b32 %r2030, %r801, %r2032, %r2011, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2034, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2035, %r2011, %r2034;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2038, %r2030, %r2035;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2041, %r812, %r2032, %r2022, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2045, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2046, %r2022, %r2045;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2049, %r2041, %r2046;
	// end inline asm
	// begin inline asm
	mov.b32 %r2057, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2068, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2056, %r16213, -2004318072;
	// begin inline asm
	lop3.b32 %r2054, %r801, %r2056, %r2057, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2058, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2059, %r2057, %r2058;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2062, %r2054, %r2059;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2065, %r812, %r2056, %r2068, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2069, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2070, %r2068, %r2069;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2073, %r2065, %r2070;
	// end inline asm
	shr.u32 	%r2078, %r2056, 8;
	// begin inline asm
	lop3.b32 %r2076, %r801, %r2078, %r2057, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2080, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2081, %r2057, %r2080;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2084, %r2076, %r2081;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2087, %r812, %r2078, %r2068, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2091, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2092, %r2068, %r2091;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2095, %r2087, %r2092;
	// end inline asm
	// begin inline asm
	mov.b32 %r2103, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2114, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2102, %r16214, -2004318072;
	// begin inline asm
	lop3.b32 %r2100, %r801, %r2102, %r2103, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2104, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2105, %r2103, %r2104;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2108, %r2100, %r2105;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2111, %r812, %r2102, %r2114, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2115, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2116, %r2114, %r2115;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2119, %r2111, %r2116;
	// end inline asm
	shr.u32 	%r2124, %r2102, 8;
	// begin inline asm
	lop3.b32 %r2122, %r801, %r2124, %r2103, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2126, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2127, %r2103, %r2126;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2130, %r2122, %r2127;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2133, %r812, %r2124, %r2114, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2137, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2138, %r2114, %r2137;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2141, %r2133, %r2138;
	// end inline asm
	// begin inline asm
	mov.b32 %r2149, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2160, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2148, %r16215, -2004318072;
	// begin inline asm
	lop3.b32 %r2146, %r801, %r2148, %r2149, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2150, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2151, %r2149, %r2150;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2154, %r2146, %r2151;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2157, %r812, %r2148, %r2160, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2161, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2162, %r2160, %r2161;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2165, %r2157, %r2162;
	// end inline asm
	shr.u32 	%r2170, %r2148, 8;
	// begin inline asm
	lop3.b32 %r2168, %r801, %r2170, %r2149, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2172, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2173, %r2149, %r2172;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2176, %r2168, %r2173;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2179, %r812, %r2170, %r2160, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2183, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2184, %r2160, %r2183;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2187, %r2179, %r2184;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2190, %r306;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2192, %r2190, %r1832, %r1694;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2196, %r306;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2198, %r2196, %r1843, %r1698;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2202, %r306;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2204, %r2202, %r1854, %r1702;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2208, %r306;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2210, %r2208, %r1865, %r1706;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2214, %r306;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2216, %r2214, %r1878, %r1710;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2220, %r306;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2222, %r2220, %r1889, %r1714;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2226, %r306;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2228, %r2226, %r1900, %r1718;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2232, %r306;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2234, %r2232, %r1911, %r1722;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2238, %r306;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2240, %r2238, %r1924, %r1726;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2244, %r306;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2246, %r2244, %r1935, %r1730;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2250, %r306;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2252, %r2250, %r1946, %r1734;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2256, %r306;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2258, %r2256, %r1957, %r1738;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2262, %r306;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2264, %r2262, %r1970, %r1742;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2268, %r306;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2270, %r2268, %r1981, %r1746;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2274, %r306;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2276, %r2274, %r1992, %r1750;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2280, %r306;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2282, %r2280, %r2003, %r1754;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2286, %r324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2288, %r2286, %r2016, %r1758;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2292, %r324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2294, %r2292, %r2027, %r1762;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2298, %r324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2300, %r2298, %r2038, %r1766;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2304, %r324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2306, %r2304, %r2049, %r1770;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2310, %r324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2312, %r2310, %r2062, %r1774;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2316, %r324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2318, %r2316, %r2073, %r1778;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2322, %r324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2324, %r2322, %r2084, %r1782;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2328, %r324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2330, %r2328, %r2095, %r1786;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2334, %r324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2336, %r2334, %r2108, %r1790;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2340, %r324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2342, %r2340, %r2119, %r1794;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2346, %r324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2348, %r2346, %r2130, %r1798;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2352, %r324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2354, %r2352, %r2141, %r1802;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2358, %r324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2360, %r2358, %r2154, %r1806;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2364, %r324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2366, %r2364, %r2165, %r1810;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2370, %r324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2372, %r2370, %r2176, %r1814;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2376, %r324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2378, %r2376, %r2187, %r1818;
	// end inline asm
	// begin inline asm
	mov.b32 %r2387, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2398, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2386, %r16204, -2004318072;
	// begin inline asm
	lop3.b32 %r2384, %r801, %r2386, %r2387, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2388, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2389, %r2387, %r2388;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2392, %r2384, %r2389;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2395, %r812, %r2386, %r2398, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2399, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2400, %r2398, %r2399;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2403, %r2395, %r2400;
	// end inline asm
	shr.u32 	%r2408, %r2386, 8;
	// begin inline asm
	lop3.b32 %r2406, %r801, %r2408, %r2387, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2410, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2411, %r2387, %r2410;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2414, %r2406, %r2411;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2417, %r812, %r2408, %r2398, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2421, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2422, %r2398, %r2421;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2425, %r2417, %r2422;
	// end inline asm
	// begin inline asm
	mov.b32 %r2433, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2444, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2432, %r16205, -2004318072;
	// begin inline asm
	lop3.b32 %r2430, %r801, %r2432, %r2433, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2434, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2435, %r2433, %r2434;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2438, %r2430, %r2435;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2441, %r812, %r2432, %r2444, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2445, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2446, %r2444, %r2445;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2449, %r2441, %r2446;
	// end inline asm
	shr.u32 	%r2454, %r2432, 8;
	// begin inline asm
	lop3.b32 %r2452, %r801, %r2454, %r2433, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2456, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2457, %r2433, %r2456;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2460, %r2452, %r2457;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2463, %r812, %r2454, %r2444, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2467, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2468, %r2444, %r2467;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2471, %r2463, %r2468;
	// end inline asm
	// begin inline asm
	mov.b32 %r2479, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2490, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2478, %r16206, -2004318072;
	// begin inline asm
	lop3.b32 %r2476, %r801, %r2478, %r2479, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2480, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2481, %r2479, %r2480;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2484, %r2476, %r2481;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2487, %r812, %r2478, %r2490, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2491, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2492, %r2490, %r2491;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2495, %r2487, %r2492;
	// end inline asm
	shr.u32 	%r2500, %r2478, 8;
	// begin inline asm
	lop3.b32 %r2498, %r801, %r2500, %r2479, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2502, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2503, %r2479, %r2502;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2506, %r2498, %r2503;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2509, %r812, %r2500, %r2490, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2513, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2514, %r2490, %r2513;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2517, %r2509, %r2514;
	// end inline asm
	// begin inline asm
	mov.b32 %r2525, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2536, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2524, %r16207, -2004318072;
	// begin inline asm
	lop3.b32 %r2522, %r801, %r2524, %r2525, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2526, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2527, %r2525, %r2526;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2530, %r2522, %r2527;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2533, %r812, %r2524, %r2536, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2537, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2538, %r2536, %r2537;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2541, %r2533, %r2538;
	// end inline asm
	shr.u32 	%r2546, %r2524, 8;
	// begin inline asm
	lop3.b32 %r2544, %r801, %r2546, %r2525, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2548, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2549, %r2525, %r2548;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2552, %r2544, %r2549;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2555, %r812, %r2546, %r2536, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2559, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2560, %r2536, %r2559;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2563, %r2555, %r2560;
	// end inline asm
	// begin inline asm
	mov.b32 %r2571, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2582, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2570, %r16216, -2004318072;
	// begin inline asm
	lop3.b32 %r2568, %r801, %r2570, %r2571, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2572, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2573, %r2571, %r2572;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2576, %r2568, %r2573;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2579, %r812, %r2570, %r2582, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2583, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2584, %r2582, %r2583;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2587, %r2579, %r2584;
	// end inline asm
	shr.u32 	%r2592, %r2570, 8;
	// begin inline asm
	lop3.b32 %r2590, %r801, %r2592, %r2571, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2594, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2595, %r2571, %r2594;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2598, %r2590, %r2595;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2601, %r812, %r2592, %r2582, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2605, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2606, %r2582, %r2605;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2609, %r2601, %r2606;
	// end inline asm
	// begin inline asm
	mov.b32 %r2617, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2628, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2616, %r16217, -2004318072;
	// begin inline asm
	lop3.b32 %r2614, %r801, %r2616, %r2617, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2618, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2619, %r2617, %r2618;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2622, %r2614, %r2619;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2625, %r812, %r2616, %r2628, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2629, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2630, %r2628, %r2629;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2633, %r2625, %r2630;
	// end inline asm
	shr.u32 	%r2638, %r2616, 8;
	// begin inline asm
	lop3.b32 %r2636, %r801, %r2638, %r2617, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2640, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2641, %r2617, %r2640;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2644, %r2636, %r2641;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2647, %r812, %r2638, %r2628, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2651, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2652, %r2628, %r2651;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2655, %r2647, %r2652;
	// end inline asm
	// begin inline asm
	mov.b32 %r2663, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2674, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2662, %r16218, -2004318072;
	// begin inline asm
	lop3.b32 %r2660, %r801, %r2662, %r2663, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2664, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2665, %r2663, %r2664;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2668, %r2660, %r2665;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2671, %r812, %r2662, %r2674, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2675, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2676, %r2674, %r2675;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2679, %r2671, %r2676;
	// end inline asm
	shr.u32 	%r2684, %r2662, 8;
	// begin inline asm
	lop3.b32 %r2682, %r801, %r2684, %r2663, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2686, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2687, %r2663, %r2686;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2690, %r2682, %r2687;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2693, %r812, %r2684, %r2674, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2697, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2698, %r2674, %r2697;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2701, %r2693, %r2698;
	// end inline asm
	// begin inline asm
	mov.b32 %r2709, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2720, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2708, %r16219, -2004318072;
	// begin inline asm
	lop3.b32 %r2706, %r801, %r2708, %r2709, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2710, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2711, %r2709, %r2710;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2714, %r2706, %r2711;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2717, %r812, %r2708, %r2720, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2721, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2722, %r2720, %r2721;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2725, %r2717, %r2722;
	// end inline asm
	shr.u32 	%r2730, %r2708, 8;
	// begin inline asm
	lop3.b32 %r2728, %r801, %r2730, %r2709, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2732, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2733, %r2709, %r2732;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2736, %r2728, %r2733;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2739, %r812, %r2730, %r2720, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2743, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2744, %r2720, %r2743;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2747, %r2739, %r2744;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2885, %r342, %r2392, %r2192;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2882, %r342, %r2403, %r2198;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2894, %r342, %r2414, %r2204;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2891, %r342, %r2425, %r2210;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2903, %r342, %r2438, %r2216;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2900, %r342, %r2449, %r2222;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2912, %r342, %r2460, %r2228;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2909, %r342, %r2471, %r2234;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2921, %r342, %r2484, %r2240;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2918, %r342, %r2495, %r2246;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2930, %r342, %r2506, %r2252;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2927, %r342, %r2517, %r2258;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2939, %r342, %r2530, %r2264;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2936, %r342, %r2541, %r2270;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2948, %r342, %r2552, %r2276;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2945, %r342, %r2563, %r2282;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2957, %r360, %r2576, %r2288;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2954, %r360, %r2587, %r2294;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2966, %r360, %r2598, %r2300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2963, %r360, %r2609, %r2306;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2975, %r360, %r2622, %r2312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2972, %r360, %r2633, %r2318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2984, %r360, %r2644, %r2324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2981, %r360, %r2655, %r2330;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2993, %r360, %r2668, %r2336;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2990, %r360, %r2679, %r2342;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3002, %r360, %r2690, %r2348;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2999, %r360, %r2701, %r2354;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3011, %r360, %r2714, %r2360;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3008, %r360, %r2725, %r2366;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3020, %r360, %r2736, %r2372;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3017, %r360, %r2747, %r2378;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2878, %r430;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2880, %r2878, %r2882;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2883, %r424, %r2885, %r2880;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2887, %r430;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2889, %r2887, %r2891;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2892, %r424, %r2894, %r2889;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2896, %r430;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2898, %r2896, %r2900;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2901, %r424, %r2903, %r2898;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2905, %r430;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2907, %r2905, %r2909;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2910, %r424, %r2912, %r2907;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2914, %r430;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2916, %r2914, %r2918;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2919, %r424, %r2921, %r2916;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2923, %r430;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2925, %r2923, %r2927;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2928, %r424, %r2930, %r2925;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2932, %r430;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2934, %r2932, %r2936;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2937, %r424, %r2939, %r2934;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2941, %r430;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2943, %r2941, %r2945;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2946, %r424, %r2948, %r2943;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2950, %r433;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2952, %r2950, %r2954;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2955, %r427, %r2957, %r2952;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2959, %r433;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2961, %r2959, %r2963;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2964, %r427, %r2966, %r2961;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2968, %r433;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2970, %r2968, %r2972;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2973, %r427, %r2975, %r2970;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2977, %r433;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2979, %r2977, %r2981;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2982, %r427, %r2984, %r2979;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2986, %r433;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2988, %r2986, %r2990;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2991, %r427, %r2993, %r2988;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2995, %r433;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2997, %r2995, %r2999;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3000, %r427, %r3002, %r2997;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3004, %r433;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3006, %r3004, %r3008;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3009, %r427, %r3011, %r3006;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3013, %r433;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3015, %r3013, %r3017;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3018, %r427, %r3020, %r3015;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3022, %r430, %r2885;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3025, %r424, %r2882, %r3022;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3029, %r430, %r2894;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3032, %r424, %r2891, %r3029;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3036, %r430, %r2903;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3039, %r424, %r2900, %r3036;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3043, %r430, %r2912;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3046, %r424, %r2909, %r3043;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3050, %r430, %r2921;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3053, %r424, %r2918, %r3050;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3057, %r430, %r2930;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3060, %r424, %r2927, %r3057;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3064, %r430, %r2939;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3067, %r424, %r2936, %r3064;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3071, %r430, %r2948;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3074, %r424, %r2945, %r3071;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3078, %r433, %r2957;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3081, %r427, %r2954, %r3078;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3085, %r433, %r2966;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3088, %r427, %r2963, %r3085;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3092, %r433, %r2975;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3095, %r427, %r2972, %r3092;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3099, %r433, %r2984;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3102, %r427, %r2981, %r3099;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3106, %r433, %r2993;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3109, %r427, %r2990, %r3106;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3113, %r433, %r3002;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3116, %r427, %r2999, %r3113;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3120, %r433, %r3011;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3123, %r427, %r3008, %r3120;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3127, %r433, %r3020;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3130, %r427, %r3017, %r3127;
	// end inline asm
	mov.u32 	%r15157, 0;
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3301, %r3298}, {%r472, %r478, %r475, %r481}, {%r2883, %r3025}, {%r15157, %r15157};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3310, %r3307}, {%r472, %r478, %r475, %r481}, {%r2892, %r3032}, {%r15157, %r15157};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3319, %r3316}, {%r472, %r478, %r475, %r481}, {%r2901, %r3039}, {%r15157, %r15157};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3328, %r3325}, {%r472, %r478, %r475, %r481}, {%r2910, %r3046}, {%r15157, %r15157};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3337, %r3334}, {%r472, %r478, %r475, %r481}, {%r2919, %r3053}, {%r15157, %r15157};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3346, %r3343}, {%r472, %r478, %r475, %r481}, {%r2928, %r3060}, {%r15157, %r15157};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3355, %r3352}, {%r472, %r478, %r475, %r481}, {%r2937, %r3067}, {%r15157, %r15157};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3364, %r3361}, {%r472, %r478, %r475, %r481}, {%r2946, %r3074}, {%r15157, %r15157};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3373, %r3370}, {%r472, %r478, %r475, %r481}, {%r2955, %r3081}, {%r15157, %r15157};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3382, %r3379}, {%r472, %r478, %r475, %r481}, {%r2964, %r3088}, {%r15157, %r15157};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3391, %r3388}, {%r472, %r478, %r475, %r481}, {%r2973, %r3095}, {%r15157, %r15157};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3400, %r3397}, {%r472, %r478, %r475, %r481}, {%r2982, %r3102}, {%r15157, %r15157};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3409, %r3406}, {%r472, %r478, %r475, %r481}, {%r2991, %r3109}, {%r15157, %r15157};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3418, %r3415}, {%r472, %r478, %r475, %r481}, {%r3000, %r3116}, {%r15157, %r15157};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3427, %r3424}, {%r472, %r478, %r475, %r481}, {%r3009, %r3123}, {%r15157, %r15157};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3436, %r3433}, {%r472, %r478, %r475, %r481}, {%r3018, %r3130}, {%r15157, %r15157};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3294, %r522;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3296, %r3294, %r3298;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3299, %r519, %r3301, %r3296;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3303, %r522;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3305, %r3303, %r3307;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3308, %r519, %r3310, %r3305;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3312, %r522;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3314, %r3312, %r3316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3317, %r519, %r3319, %r3314;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3321, %r522;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3323, %r3321, %r3325;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3326, %r519, %r3328, %r3323;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3330, %r522;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3332, %r3330, %r3334;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3335, %r519, %r3337, %r3332;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3339, %r522;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3341, %r3339, %r3343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3344, %r519, %r3346, %r3341;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3348, %r522;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3350, %r3348, %r3352;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3353, %r519, %r3355, %r3350;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3357, %r522;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3359, %r3357, %r3361;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3362, %r519, %r3364, %r3359;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3366, %r522;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3368, %r3366, %r3370;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3371, %r519, %r3373, %r3368;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3375, %r522;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3377, %r3375, %r3379;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3380, %r519, %r3382, %r3377;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3384, %r522;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3386, %r3384, %r3388;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3389, %r519, %r3391, %r3386;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3393, %r522;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3395, %r3393, %r3397;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3398, %r519, %r3400, %r3395;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3402, %r522;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3404, %r3402, %r3406;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3407, %r519, %r3409, %r3404;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3411, %r522;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3413, %r3411, %r3415;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3416, %r519, %r3418, %r3413;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3420, %r522;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3422, %r3420, %r3424;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3425, %r519, %r3427, %r3422;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3429, %r522;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3431, %r3429, %r3433;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3434, %r519, %r3436, %r3431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3438, %r522, %r3301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3441, %r519, %r3298, %r3438;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3445, %r522, %r3310;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3448, %r519, %r3307, %r3445;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3452, %r522, %r3319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3455, %r519, %r3316, %r3452;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3459, %r522, %r3328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3462, %r519, %r3325, %r3459;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3466, %r522, %r3337;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3469, %r519, %r3334, %r3466;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3473, %r522, %r3346;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3476, %r519, %r3343, %r3473;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3480, %r522, %r3355;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3483, %r519, %r3352, %r3480;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3487, %r522, %r3364;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3490, %r519, %r3361, %r3487;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3494, %r522, %r3373;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3497, %r519, %r3370, %r3494;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3501, %r522, %r3382;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3504, %r519, %r3379, %r3501;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3508, %r522, %r3391;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3511, %r519, %r3388, %r3508;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3515, %r522, %r3400;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3518, %r519, %r3397, %r3515;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3522, %r522, %r3409;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3525, %r519, %r3406, %r3522;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3529, %r522, %r3418;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3532, %r519, %r3415, %r3529;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3536, %r522, %r3427;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3539, %r519, %r3424, %r3536;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3543, %r522, %r3436;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3546, %r519, %r3433, %r3543;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3839, %r3842}, {%r562, %r568, %r565, %r571}, {%r3299, %r3441}, {%r15157, %r15157};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3845, %r3848}, {%r562, %r568, %r565, %r571}, {%r3308, %r3448}, {%r15157, %r15157};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3851, %r3854}, {%r562, %r568, %r565, %r571}, {%r3317, %r3455}, {%r15157, %r15157};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3857, %r3860}, {%r562, %r568, %r565, %r571}, {%r3326, %r3462}, {%r15157, %r15157};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3863, %r3866}, {%r562, %r568, %r565, %r571}, {%r3335, %r3469}, {%r15157, %r15157};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3869, %r3872}, {%r562, %r568, %r565, %r571}, {%r3344, %r3476}, {%r15157, %r15157};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3875, %r3878}, {%r562, %r568, %r565, %r571}, {%r3353, %r3483}, {%r15157, %r15157};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3881, %r3884}, {%r562, %r568, %r565, %r571}, {%r3362, %r3490}, {%r15157, %r15157};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3840, %r3843}, {%r562, %r568, %r565, %r571}, {%r3371, %r3497}, {%r15157, %r15157};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3846, %r3849}, {%r562, %r568, %r565, %r571}, {%r3380, %r3504}, {%r15157, %r15157};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3852, %r3855}, {%r562, %r568, %r565, %r571}, {%r3389, %r3511}, {%r15157, %r15157};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3858, %r3861}, {%r562, %r568, %r565, %r571}, {%r3398, %r3518}, {%r15157, %r15157};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3864, %r3867}, {%r562, %r568, %r565, %r571}, {%r3407, %r3525}, {%r15157, %r15157};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3870, %r3873}, {%r562, %r568, %r565, %r571}, {%r3416, %r3532}, {%r15157, %r15157};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3876, %r3879}, {%r562, %r568, %r565, %r571}, {%r3425, %r3539}, {%r15157, %r15157};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3882, %r3885}, {%r562, %r568, %r565, %r571}, {%r3434, %r3546}, {%r15157, %r15157};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3838, %r3839, %r3840;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3841, %r3842, %r3843;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3844, %r3845, %r3846;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3847, %r3848, %r3849;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3850, %r3851, %r3852;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3853, %r3854, %r3855;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3856, %r3857, %r3858;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3859, %r3860, %r3861;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3862, %r3863, %r3864;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3865, %r3866, %r3867;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3868, %r3869, %r3870;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3871, %r3872, %r3873;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3874, %r3875, %r3876;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3877, %r3878, %r3879;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3880, %r3881, %r3882;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3883, %r3884, %r3885;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3886, %r3839, %r3840;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3889, %r3842, %r3843;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3892, %r3845, %r3846;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3895, %r3848, %r3849;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3898, %r3851, %r3852;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3901, %r3854, %r3855;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3904, %r3857, %r3858;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3907, %r3860, %r3861;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3910, %r3863, %r3864;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3913, %r3866, %r3867;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3916, %r3869, %r3870;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3919, %r3872, %r3873;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3922, %r3875, %r3876;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3925, %r3878, %r3879;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3928, %r3881, %r3882;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3931, %r3884, %r3885;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3934, %r14, %r3838;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3937, %r14, %r3841;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3940, %r14, %r3844;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3943, %r14, %r3847;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3946, %r14, %r3850;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3949, %r14, %r3853;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3952, %r14, %r3856;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3955, %r14, %r3859;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3958, %r14, %r3862;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3961, %r14, %r3865;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3964, %r14, %r3868;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3967, %r14, %r3871;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3970, %r14, %r3874;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3973, %r14, %r3877;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3976, %r14, %r3880;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3979, %r14, %r3883;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3982, %r15, %r3886;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3985, %r15, %r3889;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3988, %r15, %r3892;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3991, %r15, %r3895;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3994, %r15, %r3898;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3997, %r15, %r3901;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4000, %r15, %r3904;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4003, %r15, %r3907;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4006, %r15, %r3910;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4009, %r15, %r3913;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4012, %r15, %r3916;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4015, %r15, %r3919;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4018, %r15, %r3922;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4021, %r15, %r3925;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4024, %r15, %r3928;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4027, %r15, %r3931;
	// end inline asm
	// begin inline asm
	mov.b32 %r4030, {%rs2307, %rs2307};
	// end inline asm
	mov.u16 	%rs408, 18176;
	// begin inline asm
	mov.b32 %r4031, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4032, %r3934, %r4030;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4035, %r4032, %r4031;
	// end inline asm
	// begin inline asm
	mov.b32 %r4038, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4039, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4040, %r3937, %r4038;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4043, %r4040, %r4039;
	// end inline asm
	// begin inline asm
	mov.b32 %r4046, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4047, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4048, %r3940, %r4046;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4051, %r4048, %r4047;
	// end inline asm
	// begin inline asm
	mov.b32 %r4054, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4055, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4056, %r3943, %r4054;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4059, %r4056, %r4055;
	// end inline asm
	// begin inline asm
	mov.b32 %r4062, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4063, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4064, %r3946, %r4062;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4067, %r4064, %r4063;
	// end inline asm
	// begin inline asm
	mov.b32 %r4070, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4071, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4072, %r3949, %r4070;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4075, %r4072, %r4071;
	// end inline asm
	// begin inline asm
	mov.b32 %r4078, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4079, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4080, %r3952, %r4078;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4083, %r4080, %r4079;
	// end inline asm
	// begin inline asm
	mov.b32 %r4086, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4087, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4088, %r3955, %r4086;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4091, %r4088, %r4087;
	// end inline asm
	// begin inline asm
	mov.b32 %r4094, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4095, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4096, %r3958, %r4094;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4099, %r4096, %r4095;
	// end inline asm
	// begin inline asm
	mov.b32 %r4102, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4103, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4104, %r3961, %r4102;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4107, %r4104, %r4103;
	// end inline asm
	// begin inline asm
	mov.b32 %r4110, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4111, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4112, %r3964, %r4110;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4115, %r4112, %r4111;
	// end inline asm
	// begin inline asm
	mov.b32 %r4118, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4119, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4120, %r3967, %r4118;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4123, %r4120, %r4119;
	// end inline asm
	// begin inline asm
	mov.b32 %r4126, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4127, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4128, %r3970, %r4126;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4131, %r4128, %r4127;
	// end inline asm
	// begin inline asm
	mov.b32 %r4134, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4135, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4136, %r3973, %r4134;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4139, %r4136, %r4135;
	// end inline asm
	// begin inline asm
	mov.b32 %r4142, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4143, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4144, %r3976, %r4142;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4147, %r4144, %r4143;
	// end inline asm
	// begin inline asm
	mov.b32 %r4150, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4151, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4152, %r3979, %r4150;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4155, %r4152, %r4151;
	// end inline asm
	// begin inline asm
	mov.b32 %r4158, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4159, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4160, %r3982, %r4158;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4163, %r4160, %r4159;
	// end inline asm
	// begin inline asm
	mov.b32 %r4166, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4167, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4168, %r3985, %r4166;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4171, %r4168, %r4167;
	// end inline asm
	// begin inline asm
	mov.b32 %r4174, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4175, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4176, %r3988, %r4174;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4179, %r4176, %r4175;
	// end inline asm
	// begin inline asm
	mov.b32 %r4182, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4183, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4184, %r3991, %r4182;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4187, %r4184, %r4183;
	// end inline asm
	// begin inline asm
	mov.b32 %r4190, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4191, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4192, %r3994, %r4190;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4195, %r4192, %r4191;
	// end inline asm
	// begin inline asm
	mov.b32 %r4198, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4199, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4200, %r3997, %r4198;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4203, %r4200, %r4199;
	// end inline asm
	// begin inline asm
	mov.b32 %r4206, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4207, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4208, %r4000, %r4206;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4211, %r4208, %r4207;
	// end inline asm
	// begin inline asm
	mov.b32 %r4214, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4215, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4216, %r4003, %r4214;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4219, %r4216, %r4215;
	// end inline asm
	// begin inline asm
	mov.b32 %r4222, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4223, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4224, %r4006, %r4222;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4227, %r4224, %r4223;
	// end inline asm
	// begin inline asm
	mov.b32 %r4230, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4231, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4232, %r4009, %r4230;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4235, %r4232, %r4231;
	// end inline asm
	// begin inline asm
	mov.b32 %r4238, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4239, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4240, %r4012, %r4238;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4243, %r4240, %r4239;
	// end inline asm
	// begin inline asm
	mov.b32 %r4246, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4247, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4248, %r4015, %r4246;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4251, %r4248, %r4247;
	// end inline asm
	// begin inline asm
	mov.b32 %r4254, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4255, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4256, %r4018, %r4254;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4259, %r4256, %r4255;
	// end inline asm
	// begin inline asm
	mov.b32 %r4262, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4263, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4264, %r4021, %r4262;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4267, %r4264, %r4263;
	// end inline asm
	// begin inline asm
	mov.b32 %r4270, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4271, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4272, %r4024, %r4270;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4275, %r4272, %r4271;
	// end inline asm
	// begin inline asm
	mov.b32 %r4278, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4279, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4280, %r4027, %r4278;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4283, %r4280, %r4279;
	// end inline asm
	// begin inline asm
	mov.b32 %r4289, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4287, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4288, %r4289, %r4287;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4291, %r4035, %r4288;
	// end inline asm
	// begin inline asm
	mov.b32 %r4294, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4295, %r4289, %r4294;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4298, %r4043, %r4295;
	// end inline asm
	// begin inline asm
	mov.b32 %r4301, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4302, %r4289, %r4301;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4305, %r4051, %r4302;
	// end inline asm
	// begin inline asm
	mov.b32 %r4308, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4309, %r4289, %r4308;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4312, %r4059, %r4309;
	// end inline asm
	mov.u32 	%r4318, 25152;
	// begin inline asm
	prmt.b32 %r4315, %r4291, %r4305, %r4318;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4319, %r4298, %r4312, %r4318;
	// end inline asm
	shl.b32 	%r4326, %r4319, 4;
	mov.u32 	%r4324, 252645135;
	// begin inline asm
	lop3.b32 %r4323, %r4324, %r4315, %r4326, 202;
	// end inline asm
	xor.b32  	%r16070, %r4323, -2004318072;
	// begin inline asm
	mov.b32 %r4330, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4328, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4329, %r4330, %r4328;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4332, %r4067, %r4329;
	// end inline asm
	// begin inline asm
	mov.b32 %r4335, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4336, %r4330, %r4335;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4339, %r4075, %r4336;
	// end inline asm
	// begin inline asm
	mov.b32 %r4342, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4343, %r4330, %r4342;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4346, %r4083, %r4343;
	// end inline asm
	// begin inline asm
	mov.b32 %r4349, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4350, %r4330, %r4349;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4353, %r4091, %r4350;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4356, %r4332, %r4346, %r4318;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4360, %r4339, %r4353, %r4318;
	// end inline asm
	shl.b32 	%r4367, %r4360, 4;
	// begin inline asm
	lop3.b32 %r4364, %r4324, %r4356, %r4367, 202;
	// end inline asm
	xor.b32  	%r16071, %r4364, -2004318072;
	// begin inline asm
	mov.b32 %r4371, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4369, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4370, %r4371, %r4369;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4373, %r4099, %r4370;
	// end inline asm
	// begin inline asm
	mov.b32 %r4376, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4377, %r4371, %r4376;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4380, %r4107, %r4377;
	// end inline asm
	// begin inline asm
	mov.b32 %r4383, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4384, %r4371, %r4383;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4387, %r4115, %r4384;
	// end inline asm
	// begin inline asm
	mov.b32 %r4390, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4391, %r4371, %r4390;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4394, %r4123, %r4391;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4397, %r4373, %r4387, %r4318;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4401, %r4380, %r4394, %r4318;
	// end inline asm
	shl.b32 	%r4408, %r4401, 4;
	// begin inline asm
	lop3.b32 %r4405, %r4324, %r4397, %r4408, 202;
	// end inline asm
	xor.b32  	%r16072, %r4405, -2004318072;
	// begin inline asm
	mov.b32 %r4412, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4410, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4411, %r4412, %r4410;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4414, %r4131, %r4411;
	// end inline asm
	// begin inline asm
	mov.b32 %r4417, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4418, %r4412, %r4417;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4421, %r4139, %r4418;
	// end inline asm
	// begin inline asm
	mov.b32 %r4424, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4425, %r4412, %r4424;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4428, %r4147, %r4425;
	// end inline asm
	// begin inline asm
	mov.b32 %r4431, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4432, %r4412, %r4431;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4435, %r4155, %r4432;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4438, %r4414, %r4428, %r4318;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4442, %r4421, %r4435, %r4318;
	// end inline asm
	shl.b32 	%r4449, %r4442, 4;
	// begin inline asm
	lop3.b32 %r4446, %r4324, %r4438, %r4449, 202;
	// end inline asm
	xor.b32  	%r16073, %r4446, -2004318072;
	// begin inline asm
	mov.b32 %r4453, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4451, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4452, %r4453, %r4451;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4455, %r4163, %r4452;
	// end inline asm
	// begin inline asm
	mov.b32 %r4458, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4459, %r4453, %r4458;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4462, %r4171, %r4459;
	// end inline asm
	// begin inline asm
	mov.b32 %r4465, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4466, %r4453, %r4465;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4469, %r4179, %r4466;
	// end inline asm
	// begin inline asm
	mov.b32 %r4472, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4473, %r4453, %r4472;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4476, %r4187, %r4473;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4479, %r4455, %r4469, %r4318;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4483, %r4462, %r4476, %r4318;
	// end inline asm
	shl.b32 	%r4490, %r4483, 4;
	// begin inline asm
	lop3.b32 %r4487, %r4324, %r4479, %r4490, 202;
	// end inline asm
	xor.b32  	%r16074, %r4487, -2004318072;
	// begin inline asm
	mov.b32 %r4494, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4492, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4493, %r4494, %r4492;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4496, %r4195, %r4493;
	// end inline asm
	// begin inline asm
	mov.b32 %r4499, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4500, %r4494, %r4499;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4503, %r4203, %r4500;
	// end inline asm
	// begin inline asm
	mov.b32 %r4506, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4507, %r4494, %r4506;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4510, %r4211, %r4507;
	// end inline asm
	// begin inline asm
	mov.b32 %r4513, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4514, %r4494, %r4513;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4517, %r4219, %r4514;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4520, %r4496, %r4510, %r4318;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4524, %r4503, %r4517, %r4318;
	// end inline asm
	shl.b32 	%r4531, %r4524, 4;
	// begin inline asm
	lop3.b32 %r4528, %r4324, %r4520, %r4531, 202;
	// end inline asm
	xor.b32  	%r16075, %r4528, -2004318072;
	// begin inline asm
	mov.b32 %r4535, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4533, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4534, %r4535, %r4533;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4537, %r4227, %r4534;
	// end inline asm
	// begin inline asm
	mov.b32 %r4540, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4541, %r4535, %r4540;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4544, %r4235, %r4541;
	// end inline asm
	// begin inline asm
	mov.b32 %r4547, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4548, %r4535, %r4547;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4551, %r4243, %r4548;
	// end inline asm
	// begin inline asm
	mov.b32 %r4554, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4555, %r4535, %r4554;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4558, %r4251, %r4555;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4561, %r4537, %r4551, %r4318;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4565, %r4544, %r4558, %r4318;
	// end inline asm
	shl.b32 	%r4572, %r4565, 4;
	// begin inline asm
	lop3.b32 %r4569, %r4324, %r4561, %r4572, 202;
	// end inline asm
	xor.b32  	%r16076, %r4569, -2004318072;
	// begin inline asm
	mov.b32 %r4576, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4574, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4575, %r4576, %r4574;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4578, %r4259, %r4575;
	// end inline asm
	// begin inline asm
	mov.b32 %r4581, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4582, %r4576, %r4581;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4585, %r4267, %r4582;
	// end inline asm
	// begin inline asm
	mov.b32 %r4588, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4589, %r4576, %r4588;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4592, %r4275, %r4589;
	// end inline asm
	// begin inline asm
	mov.b32 %r4595, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4596, %r4576, %r4595;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4599, %r4283, %r4596;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4602, %r4578, %r4592, %r4318;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4606, %r4585, %r4599, %r4318;
	// end inline asm
	shl.b32 	%r4613, %r4606, 4;
	// begin inline asm
	lop3.b32 %r4610, %r4324, %r4602, %r4613, 202;
	// end inline asm
	xor.b32  	%r16077, %r4610, -2004318072;
	add.s64 	%rd82, %rd94, %rd24;
	st.shared.u32 	[%rd82], %r16070;
	add.s64 	%rd83, %rd94, %rd23;
	st.shared.u32 	[%rd83], %r16071;
	add.s64 	%rd84, %rd94, %rd22;
	st.shared.u32 	[%rd84], %r16072;
	add.s64 	%rd85, %rd94, %rd21;
	st.shared.u32 	[%rd85], %r16073;
	add.s64 	%rd86, %rd94, %rd20;
	st.shared.u32 	[%rd86], %r16074;
	add.s64 	%rd87, %rd94, %rd19;
	st.shared.u32 	[%rd87], %r16075;
	add.s64 	%rd88, %rd94, %rd18;
	st.shared.u32 	[%rd88], %r16076;
	add.s64 	%rd89, %rd94, %rd17;
	st.shared.u32 	[%rd89], %r16077;
	ld.shared.u32 	%r16196, [%rd74];
	ld.shared.u32 	%r16197, [%rd75];
	ld.shared.u32 	%r16198, [%rd76];
	ld.shared.u32 	%r16199, [%rd77];
	ld.shared.u32 	%r16208, [%rd78];
	ld.shared.u32 	%r16209, [%rd79];
	ld.shared.u32 	%r16210, [%rd80];
	ld.shared.u32 	%r16211, [%rd81];
	// begin inline asm
	mov.b32 %r4619, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4630, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4618, %r16196, -2004318072;
	// begin inline asm
	lop3.b32 %r4616, %r801, %r4618, %r4619, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4620, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4621, %r4619, %r4620;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4624, %r4616, %r4621;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4627, %r812, %r4618, %r4630, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4631, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4632, %r4630, %r4631;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4635, %r4627, %r4632;
	// end inline asm
	shr.u32 	%r4640, %r4618, 8;
	// begin inline asm
	lop3.b32 %r4638, %r801, %r4640, %r4619, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4642, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4643, %r4619, %r4642;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4646, %r4638, %r4643;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4649, %r812, %r4640, %r4630, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4653, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4654, %r4630, %r4653;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4657, %r4649, %r4654;
	// end inline asm
	// begin inline asm
	mov.b32 %r4665, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4676, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4664, %r16197, -2004318072;
	// begin inline asm
	lop3.b32 %r4662, %r801, %r4664, %r4665, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4666, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4667, %r4665, %r4666;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4670, %r4662, %r4667;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4673, %r812, %r4664, %r4676, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4677, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4678, %r4676, %r4677;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4681, %r4673, %r4678;
	// end inline asm
	shr.u32 	%r4686, %r4664, 8;
	// begin inline asm
	lop3.b32 %r4684, %r801, %r4686, %r4665, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4688, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4689, %r4665, %r4688;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4692, %r4684, %r4689;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4695, %r812, %r4686, %r4676, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4699, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4700, %r4676, %r4699;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4703, %r4695, %r4700;
	// end inline asm
	// begin inline asm
	mov.b32 %r4711, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4722, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4710, %r16198, -2004318072;
	// begin inline asm
	lop3.b32 %r4708, %r801, %r4710, %r4711, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4712, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4713, %r4711, %r4712;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4716, %r4708, %r4713;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4719, %r812, %r4710, %r4722, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4723, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4724, %r4722, %r4723;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4727, %r4719, %r4724;
	// end inline asm
	shr.u32 	%r4732, %r4710, 8;
	// begin inline asm
	lop3.b32 %r4730, %r801, %r4732, %r4711, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4734, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4735, %r4711, %r4734;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4738, %r4730, %r4735;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4741, %r812, %r4732, %r4722, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4745, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4746, %r4722, %r4745;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4749, %r4741, %r4746;
	// end inline asm
	// begin inline asm
	mov.b32 %r4757, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4768, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4756, %r16199, -2004318072;
	// begin inline asm
	lop3.b32 %r4754, %r801, %r4756, %r4757, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4758, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4759, %r4757, %r4758;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4762, %r4754, %r4759;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4765, %r812, %r4756, %r4768, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4769, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4770, %r4768, %r4769;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4773, %r4765, %r4770;
	// end inline asm
	shr.u32 	%r4778, %r4756, 8;
	// begin inline asm
	lop3.b32 %r4776, %r801, %r4778, %r4757, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4780, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4781, %r4757, %r4780;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4784, %r4776, %r4781;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4787, %r812, %r4778, %r4768, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4791, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4792, %r4768, %r4791;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4795, %r4787, %r4792;
	// end inline asm
	// begin inline asm
	mov.b32 %r4803, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4814, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4802, %r16208, -2004318072;
	// begin inline asm
	lop3.b32 %r4800, %r801, %r4802, %r4803, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4804, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4805, %r4803, %r4804;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4808, %r4800, %r4805;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4811, %r812, %r4802, %r4814, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4815, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4816, %r4814, %r4815;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4819, %r4811, %r4816;
	// end inline asm
	shr.u32 	%r4824, %r4802, 8;
	// begin inline asm
	lop3.b32 %r4822, %r801, %r4824, %r4803, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4826, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4827, %r4803, %r4826;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4830, %r4822, %r4827;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4833, %r812, %r4824, %r4814, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4837, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4838, %r4814, %r4837;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4841, %r4833, %r4838;
	// end inline asm
	// begin inline asm
	mov.b32 %r4849, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4860, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4848, %r16209, -2004318072;
	// begin inline asm
	lop3.b32 %r4846, %r801, %r4848, %r4849, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4850, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4851, %r4849, %r4850;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4854, %r4846, %r4851;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4857, %r812, %r4848, %r4860, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4861, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4862, %r4860, %r4861;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4865, %r4857, %r4862;
	// end inline asm
	shr.u32 	%r4870, %r4848, 8;
	// begin inline asm
	lop3.b32 %r4868, %r801, %r4870, %r4849, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4872, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4873, %r4849, %r4872;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4876, %r4868, %r4873;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4879, %r812, %r4870, %r4860, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4883, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4884, %r4860, %r4883;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4887, %r4879, %r4884;
	// end inline asm
	// begin inline asm
	mov.b32 %r4895, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4906, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4894, %r16210, -2004318072;
	// begin inline asm
	lop3.b32 %r4892, %r801, %r4894, %r4895, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4896, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4897, %r4895, %r4896;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4900, %r4892, %r4897;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4903, %r812, %r4894, %r4906, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4907, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4908, %r4906, %r4907;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4911, %r4903, %r4908;
	// end inline asm
	shr.u32 	%r4916, %r4894, 8;
	// begin inline asm
	lop3.b32 %r4914, %r801, %r4916, %r4895, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4918, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4919, %r4895, %r4918;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4922, %r4914, %r4919;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4925, %r812, %r4916, %r4906, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4929, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4930, %r4906, %r4929;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4933, %r4925, %r4930;
	// end inline asm
	// begin inline asm
	mov.b32 %r4941, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4952, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4940, %r16211, -2004318072;
	// begin inline asm
	lop3.b32 %r4938, %r801, %r4940, %r4941, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4942, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4943, %r4941, %r4942;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4946, %r4938, %r4943;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4949, %r812, %r4940, %r4952, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4953, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4954, %r4952, %r4953;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4957, %r4949, %r4954;
	// end inline asm
	shr.u32 	%r4962, %r4940, 8;
	// begin inline asm
	lop3.b32 %r4960, %r801, %r4962, %r4941, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4964, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4965, %r4941, %r4964;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4968, %r4960, %r4965;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4971, %r812, %r4962, %r4952, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4975, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4976, %r4952, %r4975;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4979, %r4971, %r4976;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4982, %r378;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4984, %r4982, %r4624;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4987, %r378;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4989, %r4987, %r4635;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4992, %r378;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4994, %r4992, %r4646;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4997, %r378;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4999, %r4997, %r4657;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5002, %r378;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5004, %r5002, %r4670;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5007, %r378;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5009, %r5007, %r4681;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5012, %r378;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5014, %r5012, %r4692;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5017, %r378;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5019, %r5017, %r4703;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5022, %r378;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5024, %r5022, %r4716;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5027, %r378;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5029, %r5027, %r4727;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5032, %r378;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5034, %r5032, %r4738;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5037, %r378;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5039, %r5037, %r4749;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5042, %r378;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5044, %r5042, %r4762;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5047, %r378;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5049, %r5047, %r4773;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5052, %r378;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5054, %r5052, %r4784;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5057, %r378;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5059, %r5057, %r4795;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5062, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5064, %r5062, %r4808;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5067, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5069, %r5067, %r4819;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5072, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5074, %r5072, %r4830;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5077, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5079, %r5077, %r4841;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5082, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5084, %r5082, %r4854;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5087, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5089, %r5087, %r4865;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5092, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5094, %r5092, %r4876;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5097, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5099, %r5097, %r4887;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5102, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5104, %r5102, %r4900;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5107, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5109, %r5107, %r4911;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5112, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5114, %r5112, %r4922;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5117, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5119, %r5117, %r4933;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5122, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5124, %r5122, %r4946;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5127, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5129, %r5127, %r4957;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5132, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5134, %r5132, %r4968;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5137, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5139, %r5137, %r4979;
	// end inline asm
	// begin inline asm
	mov.b32 %r5147, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5158, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5144, %r801, %r1826, %r5147, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5148, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5149, %r5147, %r5148;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5152, %r5144, %r5149;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5155, %r812, %r1826, %r5158, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5159, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5160, %r5158, %r5159;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5163, %r5155, %r5160;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5166, %r801, %r1848, %r5147, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5170, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5171, %r5147, %r5170;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5174, %r5166, %r5171;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5177, %r812, %r1848, %r5158, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5181, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5182, %r5158, %r5181;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5185, %r5177, %r5182;
	// end inline asm
	// begin inline asm
	mov.b32 %r5193, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5204, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5190, %r801, %r1872, %r5193, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5194, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5195, %r5193, %r5194;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5198, %r5190, %r5195;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5201, %r812, %r1872, %r5204, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5205, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5206, %r5204, %r5205;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5209, %r5201, %r5206;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5212, %r801, %r1894, %r5193, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5216, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5217, %r5193, %r5216;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5220, %r5212, %r5217;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5223, %r812, %r1894, %r5204, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5227, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5228, %r5204, %r5227;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5231, %r5223, %r5228;
	// end inline asm
	// begin inline asm
	mov.b32 %r5239, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5250, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5236, %r801, %r1918, %r5239, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5240, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5241, %r5239, %r5240;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5244, %r5236, %r5241;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5247, %r812, %r1918, %r5250, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5251, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5252, %r5250, %r5251;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5255, %r5247, %r5252;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5258, %r801, %r1940, %r5239, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5262, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5263, %r5239, %r5262;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5266, %r5258, %r5263;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5269, %r812, %r1940, %r5250, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5273, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5274, %r5250, %r5273;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5277, %r5269, %r5274;
	// end inline asm
	// begin inline asm
	mov.b32 %r5285, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5296, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5282, %r801, %r1964, %r5285, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5286, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5287, %r5285, %r5286;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5290, %r5282, %r5287;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5293, %r812, %r1964, %r5296, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5297, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5298, %r5296, %r5297;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5301, %r5293, %r5298;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5304, %r801, %r1986, %r5285, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5308, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5309, %r5285, %r5308;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5312, %r5304, %r5309;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5315, %r812, %r1986, %r5296, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5319, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5320, %r5296, %r5319;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5323, %r5315, %r5320;
	// end inline asm
	// begin inline asm
	mov.b32 %r5331, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5342, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5328, %r801, %r2010, %r5331, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5332, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5333, %r5331, %r5332;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5336, %r5328, %r5333;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5339, %r812, %r2010, %r5342, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5343, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5344, %r5342, %r5343;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5347, %r5339, %r5344;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5350, %r801, %r2032, %r5331, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5354, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5355, %r5331, %r5354;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5358, %r5350, %r5355;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5361, %r812, %r2032, %r5342, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5365, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5366, %r5342, %r5365;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5369, %r5361, %r5366;
	// end inline asm
	// begin inline asm
	mov.b32 %r5377, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5388, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5374, %r801, %r2056, %r5377, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5378, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5379, %r5377, %r5378;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5382, %r5374, %r5379;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5385, %r812, %r2056, %r5388, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5389, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5390, %r5388, %r5389;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5393, %r5385, %r5390;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5396, %r801, %r2078, %r5377, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5400, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5401, %r5377, %r5400;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5404, %r5396, %r5401;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5407, %r812, %r2078, %r5388, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5411, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5412, %r5388, %r5411;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5415, %r5407, %r5412;
	// end inline asm
	// begin inline asm
	mov.b32 %r5423, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5434, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5420, %r801, %r2102, %r5423, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5424, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5425, %r5423, %r5424;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5428, %r5420, %r5425;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5431, %r812, %r2102, %r5434, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5435, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5436, %r5434, %r5435;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5439, %r5431, %r5436;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5442, %r801, %r2124, %r5423, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5446, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5447, %r5423, %r5446;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5450, %r5442, %r5447;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5453, %r812, %r2124, %r5434, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5457, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5458, %r5434, %r5457;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5461, %r5453, %r5458;
	// end inline asm
	// begin inline asm
	mov.b32 %r5469, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5480, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5466, %r801, %r2148, %r5469, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5470, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5471, %r5469, %r5470;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5474, %r5466, %r5471;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5477, %r812, %r2148, %r5480, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5481, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5482, %r5480, %r5481;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5485, %r5477, %r5482;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5488, %r801, %r2170, %r5469, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5492, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5493, %r5469, %r5492;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5496, %r5488, %r5493;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5499, %r812, %r2170, %r5480, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5503, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5504, %r5480, %r5503;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5507, %r5499, %r5504;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5510, %r270, %r5152, %r4984;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5514, %r270, %r5163, %r4989;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5518, %r270, %r5174, %r4994;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5522, %r270, %r5185, %r4999;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5526, %r270, %r5198, %r5004;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5530, %r270, %r5209, %r5009;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5534, %r270, %r5220, %r5014;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5538, %r270, %r5231, %r5019;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5542, %r270, %r5244, %r5024;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5546, %r270, %r5255, %r5029;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5550, %r270, %r5266, %r5034;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5554, %r270, %r5277, %r5039;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5558, %r270, %r5290, %r5044;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5562, %r270, %r5301, %r5049;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5566, %r270, %r5312, %r5054;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5570, %r270, %r5323, %r5059;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5574, %r288, %r5336, %r5064;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5578, %r288, %r5347, %r5069;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5582, %r288, %r5358, %r5074;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5586, %r288, %r5369, %r5079;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5590, %r288, %r5382, %r5084;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5594, %r288, %r5393, %r5089;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5598, %r288, %r5404, %r5094;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5602, %r288, %r5415, %r5099;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5606, %r288, %r5428, %r5104;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5610, %r288, %r5439, %r5109;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5614, %r288, %r5450, %r5114;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5618, %r288, %r5461, %r5119;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5622, %r288, %r5474, %r5124;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5626, %r288, %r5485, %r5129;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5630, %r288, %r5496, %r5134;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5634, %r288, %r5507, %r5139;
	// end inline asm
	// begin inline asm
	mov.b32 %r5643, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5654, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5640, %r801, %r2386, %r5643, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5644, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5645, %r5643, %r5644;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5648, %r5640, %r5645;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5651, %r812, %r2386, %r5654, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5655, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5656, %r5654, %r5655;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5659, %r5651, %r5656;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5662, %r801, %r2408, %r5643, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5666, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5667, %r5643, %r5666;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5670, %r5662, %r5667;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5673, %r812, %r2408, %r5654, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5677, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5678, %r5654, %r5677;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5681, %r5673, %r5678;
	// end inline asm
	// begin inline asm
	mov.b32 %r5689, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5700, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5686, %r801, %r2432, %r5689, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5690, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5691, %r5689, %r5690;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5694, %r5686, %r5691;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5697, %r812, %r2432, %r5700, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5701, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5702, %r5700, %r5701;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5705, %r5697, %r5702;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5708, %r801, %r2454, %r5689, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5712, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5713, %r5689, %r5712;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5716, %r5708, %r5713;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5719, %r812, %r2454, %r5700, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5723, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5724, %r5700, %r5723;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5727, %r5719, %r5724;
	// end inline asm
	// begin inline asm
	mov.b32 %r5735, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5746, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5732, %r801, %r2478, %r5735, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5736, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5737, %r5735, %r5736;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5740, %r5732, %r5737;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5743, %r812, %r2478, %r5746, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5747, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5748, %r5746, %r5747;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5751, %r5743, %r5748;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5754, %r801, %r2500, %r5735, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5758, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5759, %r5735, %r5758;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5762, %r5754, %r5759;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5765, %r812, %r2500, %r5746, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5769, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5770, %r5746, %r5769;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5773, %r5765, %r5770;
	// end inline asm
	// begin inline asm
	mov.b32 %r5781, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5792, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5778, %r801, %r2524, %r5781, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5782, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5783, %r5781, %r5782;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5786, %r5778, %r5783;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5789, %r812, %r2524, %r5792, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5793, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5794, %r5792, %r5793;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5797, %r5789, %r5794;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5800, %r801, %r2546, %r5781, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5804, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5805, %r5781, %r5804;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5808, %r5800, %r5805;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5811, %r812, %r2546, %r5792, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5815, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5816, %r5792, %r5815;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5819, %r5811, %r5816;
	// end inline asm
	// begin inline asm
	mov.b32 %r5827, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5838, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5824, %r801, %r2570, %r5827, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5828, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5829, %r5827, %r5828;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5832, %r5824, %r5829;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5835, %r812, %r2570, %r5838, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5839, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5840, %r5838, %r5839;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5843, %r5835, %r5840;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5846, %r801, %r2592, %r5827, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5850, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5851, %r5827, %r5850;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5854, %r5846, %r5851;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5857, %r812, %r2592, %r5838, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5861, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5862, %r5838, %r5861;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5865, %r5857, %r5862;
	// end inline asm
	// begin inline asm
	mov.b32 %r5873, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5884, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5870, %r801, %r2616, %r5873, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5874, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5875, %r5873, %r5874;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5878, %r5870, %r5875;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5881, %r812, %r2616, %r5884, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5885, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5886, %r5884, %r5885;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5889, %r5881, %r5886;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5892, %r801, %r2638, %r5873, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5896, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5897, %r5873, %r5896;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5900, %r5892, %r5897;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5903, %r812, %r2638, %r5884, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5907, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5908, %r5884, %r5907;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5911, %r5903, %r5908;
	// end inline asm
	// begin inline asm
	mov.b32 %r5919, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5930, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5916, %r801, %r2662, %r5919, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5920, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5921, %r5919, %r5920;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5924, %r5916, %r5921;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5927, %r812, %r2662, %r5930, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5931, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5932, %r5930, %r5931;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5935, %r5927, %r5932;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5938, %r801, %r2684, %r5919, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5942, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5943, %r5919, %r5942;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5946, %r5938, %r5943;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5949, %r812, %r2684, %r5930, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5953, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5954, %r5930, %r5953;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5957, %r5949, %r5954;
	// end inline asm
	// begin inline asm
	mov.b32 %r5965, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5976, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5962, %r801, %r2708, %r5965, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5966, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5967, %r5965, %r5966;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5970, %r5962, %r5967;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5973, %r812, %r2708, %r5976, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5977, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5978, %r5976, %r5977;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5981, %r5973, %r5978;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5984, %r801, %r2730, %r5965, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5988, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5989, %r5965, %r5988;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5992, %r5984, %r5989;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5995, %r812, %r2730, %r5976, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5999, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6000, %r5976, %r5999;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6003, %r5995, %r6000;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6006, %r306;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6008, %r6006, %r5648, %r5510;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6012, %r306;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6014, %r6012, %r5659, %r5514;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6018, %r306;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6020, %r6018, %r5670, %r5518;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6024, %r306;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6026, %r6024, %r5681, %r5522;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6030, %r306;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6032, %r6030, %r5694, %r5526;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6036, %r306;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6038, %r6036, %r5705, %r5530;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6042, %r306;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6044, %r6042, %r5716, %r5534;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6048, %r306;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6050, %r6048, %r5727, %r5538;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6054, %r306;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6056, %r6054, %r5740, %r5542;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6060, %r306;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6062, %r6060, %r5751, %r5546;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6066, %r306;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6068, %r6066, %r5762, %r5550;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6072, %r306;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6074, %r6072, %r5773, %r5554;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6078, %r306;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6080, %r6078, %r5786, %r5558;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6084, %r306;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6086, %r6084, %r5797, %r5562;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6090, %r306;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6092, %r6090, %r5808, %r5566;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6096, %r306;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6098, %r6096, %r5819, %r5570;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6102, %r324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6104, %r6102, %r5832, %r5574;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6108, %r324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6110, %r6108, %r5843, %r5578;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6114, %r324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6116, %r6114, %r5854, %r5582;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6120, %r324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6122, %r6120, %r5865, %r5586;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6126, %r324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6128, %r6126, %r5878, %r5590;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6132, %r324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6134, %r6132, %r5889, %r5594;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6138, %r324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6140, %r6138, %r5900, %r5598;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6144, %r324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6146, %r6144, %r5911, %r5602;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6150, %r324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6152, %r6150, %r5924, %r5606;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6156, %r324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6158, %r6156, %r5935, %r5610;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6162, %r324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6164, %r6162, %r5946, %r5614;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6168, %r324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6170, %r6168, %r5957, %r5618;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6174, %r324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6176, %r6174, %r5970, %r5622;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6180, %r324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6182, %r6180, %r5981, %r5626;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6186, %r324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6188, %r6186, %r5992, %r5630;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6192, %r324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6194, %r6192, %r6003, %r5634;
	// end inline asm
	// begin inline asm
	mov.b32 %r6203, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6214, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6200, %r801, %r802, %r6203, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6204, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6205, %r6203, %r6204;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6208, %r6200, %r6205;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6211, %r812, %r802, %r6214, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6215, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6216, %r6214, %r6215;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6219, %r6211, %r6216;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6222, %r801, %r824, %r6203, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6226, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6227, %r6203, %r6226;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6230, %r6222, %r6227;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6233, %r812, %r824, %r6214, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6237, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6238, %r6214, %r6237;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6241, %r6233, %r6238;
	// end inline asm
	// begin inline asm
	mov.b32 %r6249, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6260, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6246, %r801, %r848, %r6249, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6250, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6251, %r6249, %r6250;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6254, %r6246, %r6251;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6257, %r812, %r848, %r6260, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6261, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6262, %r6260, %r6261;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6265, %r6257, %r6262;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6268, %r801, %r870, %r6249, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6272, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6273, %r6249, %r6272;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6276, %r6268, %r6273;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6279, %r812, %r870, %r6260, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6283, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6284, %r6260, %r6283;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6287, %r6279, %r6284;
	// end inline asm
	// begin inline asm
	mov.b32 %r6295, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6306, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6292, %r801, %r894, %r6295, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6296, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6297, %r6295, %r6296;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6300, %r6292, %r6297;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6303, %r812, %r894, %r6306, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6307, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6308, %r6306, %r6307;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6311, %r6303, %r6308;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6314, %r801, %r916, %r6295, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6318, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6319, %r6295, %r6318;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6322, %r6314, %r6319;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6325, %r812, %r916, %r6306, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6329, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6330, %r6306, %r6329;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6333, %r6325, %r6330;
	// end inline asm
	// begin inline asm
	mov.b32 %r6341, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6352, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6338, %r801, %r940, %r6341, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6342, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6343, %r6341, %r6342;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6346, %r6338, %r6343;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6349, %r812, %r940, %r6352, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6353, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6354, %r6352, %r6353;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6357, %r6349, %r6354;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6360, %r801, %r962, %r6341, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6364, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6365, %r6341, %r6364;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6368, %r6360, %r6365;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6371, %r812, %r962, %r6352, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6375, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6376, %r6352, %r6375;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6379, %r6371, %r6376;
	// end inline asm
	// begin inline asm
	mov.b32 %r6387, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6398, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6384, %r801, %r986, %r6387, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6388, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6389, %r6387, %r6388;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6392, %r6384, %r6389;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6395, %r812, %r986, %r6398, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6399, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6400, %r6398, %r6399;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6403, %r6395, %r6400;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6406, %r801, %r1008, %r6387, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6410, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6411, %r6387, %r6410;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6414, %r6406, %r6411;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6417, %r812, %r1008, %r6398, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6421, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6422, %r6398, %r6421;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6425, %r6417, %r6422;
	// end inline asm
	// begin inline asm
	mov.b32 %r6433, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6444, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6430, %r801, %r1032, %r6433, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6434, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6435, %r6433, %r6434;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6438, %r6430, %r6435;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6441, %r812, %r1032, %r6444, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6445, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6446, %r6444, %r6445;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6449, %r6441, %r6446;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6452, %r801, %r1054, %r6433, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6456, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6457, %r6433, %r6456;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6460, %r6452, %r6457;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6463, %r812, %r1054, %r6444, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6467, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6468, %r6444, %r6467;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6471, %r6463, %r6468;
	// end inline asm
	// begin inline asm
	mov.b32 %r6479, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6490, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6476, %r801, %r1078, %r6479, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6480, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6481, %r6479, %r6480;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6484, %r6476, %r6481;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6487, %r812, %r1078, %r6490, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6491, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6492, %r6490, %r6491;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6495, %r6487, %r6492;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6498, %r801, %r1100, %r6479, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6502, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6503, %r6479, %r6502;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6506, %r6498, %r6503;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6509, %r812, %r1100, %r6490, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6513, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6514, %r6490, %r6513;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6517, %r6509, %r6514;
	// end inline asm
	// begin inline asm
	mov.b32 %r6525, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6536, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6522, %r801, %r1124, %r6525, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6526, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6527, %r6525, %r6526;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6530, %r6522, %r6527;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6533, %r812, %r1124, %r6536, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6537, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6538, %r6536, %r6537;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6541, %r6533, %r6538;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6544, %r801, %r1146, %r6525, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6548, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6549, %r6525, %r6548;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6552, %r6544, %r6549;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6555, %r812, %r1146, %r6536, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6559, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6560, %r6536, %r6559;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6563, %r6555, %r6560;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6701, %r342, %r6208, %r6008;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6698, %r342, %r6219, %r6014;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6710, %r342, %r6230, %r6020;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6707, %r342, %r6241, %r6026;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6719, %r342, %r6254, %r6032;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6716, %r342, %r6265, %r6038;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6728, %r342, %r6276, %r6044;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6725, %r342, %r6287, %r6050;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6737, %r342, %r6300, %r6056;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6734, %r342, %r6311, %r6062;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6746, %r342, %r6322, %r6068;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6743, %r342, %r6333, %r6074;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6755, %r342, %r6346, %r6080;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6752, %r342, %r6357, %r6086;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6764, %r342, %r6368, %r6092;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6761, %r342, %r6379, %r6098;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6773, %r360, %r6392, %r6104;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6770, %r360, %r6403, %r6110;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6782, %r360, %r6414, %r6116;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6779, %r360, %r6425, %r6122;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6791, %r360, %r6438, %r6128;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6788, %r360, %r6449, %r6134;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6800, %r360, %r6460, %r6140;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6797, %r360, %r6471, %r6146;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6809, %r360, %r6484, %r6152;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6806, %r360, %r6495, %r6158;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6818, %r360, %r6506, %r6164;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6815, %r360, %r6517, %r6170;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6827, %r360, %r6530, %r6176;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6824, %r360, %r6541, %r6182;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6836, %r360, %r6552, %r6188;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6833, %r360, %r6563, %r6194;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6694, %r430;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6696, %r6694, %r6698;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6699, %r424, %r6701, %r6696;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6703, %r430;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6705, %r6703, %r6707;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6708, %r424, %r6710, %r6705;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6712, %r430;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6714, %r6712, %r6716;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6717, %r424, %r6719, %r6714;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6721, %r430;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6723, %r6721, %r6725;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6726, %r424, %r6728, %r6723;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6730, %r430;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6732, %r6730, %r6734;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6735, %r424, %r6737, %r6732;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6739, %r430;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6741, %r6739, %r6743;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6744, %r424, %r6746, %r6741;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6748, %r430;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6750, %r6748, %r6752;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6753, %r424, %r6755, %r6750;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6757, %r430;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6759, %r6757, %r6761;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6762, %r424, %r6764, %r6759;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6766, %r433;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6768, %r6766, %r6770;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6771, %r427, %r6773, %r6768;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6775, %r433;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6777, %r6775, %r6779;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6780, %r427, %r6782, %r6777;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6784, %r433;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6786, %r6784, %r6788;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6789, %r427, %r6791, %r6786;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6793, %r433;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6795, %r6793, %r6797;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6798, %r427, %r6800, %r6795;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6802, %r433;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6804, %r6802, %r6806;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6807, %r427, %r6809, %r6804;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6811, %r433;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6813, %r6811, %r6815;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6816, %r427, %r6818, %r6813;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6820, %r433;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6822, %r6820, %r6824;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6825, %r427, %r6827, %r6822;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6829, %r433;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6831, %r6829, %r6833;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6834, %r427, %r6836, %r6831;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6838, %r430, %r6701;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6841, %r424, %r6698, %r6838;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6845, %r430, %r6710;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6848, %r424, %r6707, %r6845;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6852, %r430, %r6719;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6855, %r424, %r6716, %r6852;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6859, %r430, %r6728;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6862, %r424, %r6725, %r6859;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6866, %r430, %r6737;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6869, %r424, %r6734, %r6866;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6873, %r430, %r6746;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6876, %r424, %r6743, %r6873;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6880, %r430, %r6755;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6883, %r424, %r6752, %r6880;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6887, %r430, %r6764;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6890, %r424, %r6761, %r6887;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6894, %r433, %r6773;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6897, %r427, %r6770, %r6894;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6901, %r433, %r6782;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6904, %r427, %r6779, %r6901;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6908, %r433, %r6791;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6911, %r427, %r6788, %r6908;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6915, %r433, %r6800;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6918, %r427, %r6797, %r6915;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6922, %r433, %r6809;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6925, %r427, %r6806, %r6922;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6929, %r433, %r6818;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6932, %r427, %r6815, %r6929;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6936, %r433, %r6827;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6939, %r427, %r6824, %r6936;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6943, %r433, %r6836;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6946, %r427, %r6833, %r6943;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7117, %r7114}, {%r472, %r478, %r475, %r481}, {%r6699, %r6841}, {%r15157, %r15157};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7126, %r7123}, {%r472, %r478, %r475, %r481}, {%r6708, %r6848}, {%r15157, %r15157};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7135, %r7132}, {%r472, %r478, %r475, %r481}, {%r6717, %r6855}, {%r15157, %r15157};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7144, %r7141}, {%r472, %r478, %r475, %r481}, {%r6726, %r6862}, {%r15157, %r15157};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7153, %r7150}, {%r472, %r478, %r475, %r481}, {%r6735, %r6869}, {%r15157, %r15157};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7162, %r7159}, {%r472, %r478, %r475, %r481}, {%r6744, %r6876}, {%r15157, %r15157};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7171, %r7168}, {%r472, %r478, %r475, %r481}, {%r6753, %r6883}, {%r15157, %r15157};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7180, %r7177}, {%r472, %r478, %r475, %r481}, {%r6762, %r6890}, {%r15157, %r15157};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7189, %r7186}, {%r472, %r478, %r475, %r481}, {%r6771, %r6897}, {%r15157, %r15157};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7198, %r7195}, {%r472, %r478, %r475, %r481}, {%r6780, %r6904}, {%r15157, %r15157};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7207, %r7204}, {%r472, %r478, %r475, %r481}, {%r6789, %r6911}, {%r15157, %r15157};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7216, %r7213}, {%r472, %r478, %r475, %r481}, {%r6798, %r6918}, {%r15157, %r15157};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7225, %r7222}, {%r472, %r478, %r475, %r481}, {%r6807, %r6925}, {%r15157, %r15157};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7234, %r7231}, {%r472, %r478, %r475, %r481}, {%r6816, %r6932}, {%r15157, %r15157};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7243, %r7240}, {%r472, %r478, %r475, %r481}, {%r6825, %r6939}, {%r15157, %r15157};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7252, %r7249}, {%r472, %r478, %r475, %r481}, {%r6834, %r6946}, {%r15157, %r15157};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7110, %r522;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7112, %r7110, %r7114;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7115, %r519, %r7117, %r7112;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7119, %r522;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7121, %r7119, %r7123;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7124, %r519, %r7126, %r7121;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7128, %r522;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7130, %r7128, %r7132;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7133, %r519, %r7135, %r7130;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7137, %r522;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7139, %r7137, %r7141;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7142, %r519, %r7144, %r7139;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7146, %r522;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7148, %r7146, %r7150;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7151, %r519, %r7153, %r7148;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7155, %r522;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7157, %r7155, %r7159;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7160, %r519, %r7162, %r7157;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7164, %r522;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7166, %r7164, %r7168;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7169, %r519, %r7171, %r7166;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7173, %r522;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7175, %r7173, %r7177;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7178, %r519, %r7180, %r7175;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7182, %r522;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7184, %r7182, %r7186;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7187, %r519, %r7189, %r7184;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7191, %r522;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7193, %r7191, %r7195;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7196, %r519, %r7198, %r7193;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7200, %r522;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7202, %r7200, %r7204;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7205, %r519, %r7207, %r7202;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7209, %r522;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7211, %r7209, %r7213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7214, %r519, %r7216, %r7211;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7218, %r522;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7220, %r7218, %r7222;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7223, %r519, %r7225, %r7220;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7227, %r522;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7229, %r7227, %r7231;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7232, %r519, %r7234, %r7229;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7236, %r522;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7238, %r7236, %r7240;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7241, %r519, %r7243, %r7238;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7245, %r522;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7247, %r7245, %r7249;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7250, %r519, %r7252, %r7247;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7254, %r522, %r7117;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7257, %r519, %r7114, %r7254;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7261, %r522, %r7126;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7264, %r519, %r7123, %r7261;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7268, %r522, %r7135;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7271, %r519, %r7132, %r7268;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7275, %r522, %r7144;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7278, %r519, %r7141, %r7275;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7282, %r522, %r7153;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7285, %r519, %r7150, %r7282;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7289, %r522, %r7162;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7292, %r519, %r7159, %r7289;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7296, %r522, %r7171;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7299, %r519, %r7168, %r7296;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7303, %r522, %r7180;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7306, %r519, %r7177, %r7303;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7310, %r522, %r7189;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7313, %r519, %r7186, %r7310;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7317, %r522, %r7198;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7320, %r519, %r7195, %r7317;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7324, %r522, %r7207;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7327, %r519, %r7204, %r7324;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7331, %r522, %r7216;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7334, %r519, %r7213, %r7331;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7338, %r522, %r7225;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7341, %r519, %r7222, %r7338;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7345, %r522, %r7234;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7348, %r519, %r7231, %r7345;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7352, %r522, %r7243;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7355, %r519, %r7240, %r7352;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7359, %r522, %r7252;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7362, %r519, %r7249, %r7359;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7655, %r7658}, {%r562, %r568, %r565, %r571}, {%r7115, %r7257}, {%r15157, %r15157};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7661, %r7664}, {%r562, %r568, %r565, %r571}, {%r7124, %r7264}, {%r15157, %r15157};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7667, %r7670}, {%r562, %r568, %r565, %r571}, {%r7133, %r7271}, {%r15157, %r15157};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7673, %r7676}, {%r562, %r568, %r565, %r571}, {%r7142, %r7278}, {%r15157, %r15157};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7679, %r7682}, {%r562, %r568, %r565, %r571}, {%r7151, %r7285}, {%r15157, %r15157};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7685, %r7688}, {%r562, %r568, %r565, %r571}, {%r7160, %r7292}, {%r15157, %r15157};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7691, %r7694}, {%r562, %r568, %r565, %r571}, {%r7169, %r7299}, {%r15157, %r15157};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7697, %r7700}, {%r562, %r568, %r565, %r571}, {%r7178, %r7306}, {%r15157, %r15157};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7656, %r7659}, {%r562, %r568, %r565, %r571}, {%r7187, %r7313}, {%r15157, %r15157};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7662, %r7665}, {%r562, %r568, %r565, %r571}, {%r7196, %r7320}, {%r15157, %r15157};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7668, %r7671}, {%r562, %r568, %r565, %r571}, {%r7205, %r7327}, {%r15157, %r15157};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7674, %r7677}, {%r562, %r568, %r565, %r571}, {%r7214, %r7334}, {%r15157, %r15157};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7680, %r7683}, {%r562, %r568, %r565, %r571}, {%r7223, %r7341}, {%r15157, %r15157};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7686, %r7689}, {%r562, %r568, %r565, %r571}, {%r7232, %r7348}, {%r15157, %r15157};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7692, %r7695}, {%r562, %r568, %r565, %r571}, {%r7241, %r7355}, {%r15157, %r15157};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7698, %r7701}, {%r562, %r568, %r565, %r571}, {%r7250, %r7362}, {%r15157, %r15157};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7654, %r7655, %r7656;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7657, %r7658, %r7659;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7660, %r7661, %r7662;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7663, %r7664, %r7665;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7666, %r7667, %r7668;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7669, %r7670, %r7671;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7672, %r7673, %r7674;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7675, %r7676, %r7677;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7678, %r7679, %r7680;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7681, %r7682, %r7683;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7684, %r7685, %r7686;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7687, %r7688, %r7689;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7690, %r7691, %r7692;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7693, %r7694, %r7695;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7696, %r7697, %r7698;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7699, %r7700, %r7701;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7702, %r7655, %r7656;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7705, %r7658, %r7659;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7708, %r7661, %r7662;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7711, %r7664, %r7665;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7714, %r7667, %r7668;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7717, %r7670, %r7671;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7720, %r7673, %r7674;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7723, %r7676, %r7677;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7726, %r7679, %r7680;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7729, %r7682, %r7683;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7732, %r7685, %r7686;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7735, %r7688, %r7689;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7738, %r7691, %r7692;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7741, %r7694, %r7695;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7744, %r7697, %r7698;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7747, %r7700, %r7701;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7750, %r14, %r7654;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7753, %r14, %r7657;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7756, %r14, %r7660;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7759, %r14, %r7663;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7762, %r14, %r7666;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7765, %r14, %r7669;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7768, %r14, %r7672;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7771, %r14, %r7675;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7774, %r14, %r7678;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7777, %r14, %r7681;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7780, %r14, %r7684;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7783, %r14, %r7687;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7786, %r14, %r7690;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7789, %r14, %r7693;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7792, %r14, %r7696;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7795, %r14, %r7699;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7798, %r15, %r7702;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7801, %r15, %r7705;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7804, %r15, %r7708;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7807, %r15, %r7711;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7810, %r15, %r7714;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7813, %r15, %r7717;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7816, %r15, %r7720;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7819, %r15, %r7723;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7822, %r15, %r7726;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7825, %r15, %r7729;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7828, %r15, %r7732;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7831, %r15, %r7735;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7834, %r15, %r7738;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7837, %r15, %r7741;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7840, %r15, %r7744;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7843, %r15, %r7747;
	// end inline asm
	// begin inline asm
	mov.b32 %r7846, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7847, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7848, %r7750, %r7846;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7851, %r7848, %r7847;
	// end inline asm
	// begin inline asm
	mov.b32 %r7854, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7855, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7856, %r7753, %r7854;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7859, %r7856, %r7855;
	// end inline asm
	// begin inline asm
	mov.b32 %r7862, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7863, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7864, %r7756, %r7862;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7867, %r7864, %r7863;
	// end inline asm
	// begin inline asm
	mov.b32 %r7870, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7871, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7872, %r7759, %r7870;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7875, %r7872, %r7871;
	// end inline asm
	// begin inline asm
	mov.b32 %r7878, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7879, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7880, %r7762, %r7878;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7883, %r7880, %r7879;
	// end inline asm
	// begin inline asm
	mov.b32 %r7886, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7887, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7888, %r7765, %r7886;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7891, %r7888, %r7887;
	// end inline asm
	// begin inline asm
	mov.b32 %r7894, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7895, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7896, %r7768, %r7894;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7899, %r7896, %r7895;
	// end inline asm
	// begin inline asm
	mov.b32 %r7902, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7903, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7904, %r7771, %r7902;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7907, %r7904, %r7903;
	// end inline asm
	// begin inline asm
	mov.b32 %r7910, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7911, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7912, %r7774, %r7910;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7915, %r7912, %r7911;
	// end inline asm
	// begin inline asm
	mov.b32 %r7918, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7919, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7920, %r7777, %r7918;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7923, %r7920, %r7919;
	// end inline asm
	// begin inline asm
	mov.b32 %r7926, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7927, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7928, %r7780, %r7926;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7931, %r7928, %r7927;
	// end inline asm
	// begin inline asm
	mov.b32 %r7934, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7935, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7936, %r7783, %r7934;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7939, %r7936, %r7935;
	// end inline asm
	// begin inline asm
	mov.b32 %r7942, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7943, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7944, %r7786, %r7942;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7947, %r7944, %r7943;
	// end inline asm
	// begin inline asm
	mov.b32 %r7950, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7951, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7952, %r7789, %r7950;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7955, %r7952, %r7951;
	// end inline asm
	// begin inline asm
	mov.b32 %r7958, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7959, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7960, %r7792, %r7958;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7963, %r7960, %r7959;
	// end inline asm
	// begin inline asm
	mov.b32 %r7966, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7967, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7968, %r7795, %r7966;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7971, %r7968, %r7967;
	// end inline asm
	// begin inline asm
	mov.b32 %r7974, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7975, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7976, %r7798, %r7974;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7979, %r7976, %r7975;
	// end inline asm
	// begin inline asm
	mov.b32 %r7982, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7983, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7984, %r7801, %r7982;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7987, %r7984, %r7983;
	// end inline asm
	// begin inline asm
	mov.b32 %r7990, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7991, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7992, %r7804, %r7990;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7995, %r7992, %r7991;
	// end inline asm
	// begin inline asm
	mov.b32 %r7998, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7999, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8000, %r7807, %r7998;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8003, %r8000, %r7999;
	// end inline asm
	// begin inline asm
	mov.b32 %r8006, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8007, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8008, %r7810, %r8006;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8011, %r8008, %r8007;
	// end inline asm
	// begin inline asm
	mov.b32 %r8014, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8015, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8016, %r7813, %r8014;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8019, %r8016, %r8015;
	// end inline asm
	// begin inline asm
	mov.b32 %r8022, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8023, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8024, %r7816, %r8022;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8027, %r8024, %r8023;
	// end inline asm
	// begin inline asm
	mov.b32 %r8030, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8031, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8032, %r7819, %r8030;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8035, %r8032, %r8031;
	// end inline asm
	// begin inline asm
	mov.b32 %r8038, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8039, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8040, %r7822, %r8038;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8043, %r8040, %r8039;
	// end inline asm
	// begin inline asm
	mov.b32 %r8046, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8047, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8048, %r7825, %r8046;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8051, %r8048, %r8047;
	// end inline asm
	// begin inline asm
	mov.b32 %r8054, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8055, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8056, %r7828, %r8054;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8059, %r8056, %r8055;
	// end inline asm
	// begin inline asm
	mov.b32 %r8062, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8063, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8064, %r7831, %r8062;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8067, %r8064, %r8063;
	// end inline asm
	// begin inline asm
	mov.b32 %r8070, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8071, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8072, %r7834, %r8070;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8075, %r8072, %r8071;
	// end inline asm
	// begin inline asm
	mov.b32 %r8078, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8079, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8080, %r7837, %r8078;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8083, %r8080, %r8079;
	// end inline asm
	// begin inline asm
	mov.b32 %r8086, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8087, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8088, %r7840, %r8086;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8091, %r8088, %r8087;
	// end inline asm
	// begin inline asm
	mov.b32 %r8094, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8095, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8096, %r7843, %r8094;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8099, %r8096, %r8095;
	// end inline asm
	// begin inline asm
	mov.b32 %r8105, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8103, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8104, %r8105, %r8103;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8107, %r7851, %r8104;
	// end inline asm
	// begin inline asm
	mov.b32 %r8110, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8111, %r8105, %r8110;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8114, %r7859, %r8111;
	// end inline asm
	// begin inline asm
	mov.b32 %r8117, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8118, %r8105, %r8117;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8121, %r7867, %r8118;
	// end inline asm
	// begin inline asm
	mov.b32 %r8124, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8125, %r8105, %r8124;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8128, %r7875, %r8125;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8131, %r8107, %r8121, %r4318;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8135, %r8114, %r8128, %r4318;
	// end inline asm
	shl.b32 	%r8142, %r8135, 4;
	// begin inline asm
	lop3.b32 %r8139, %r4324, %r8131, %r8142, 202;
	// end inline asm
	xor.b32  	%r16078, %r8139, -2004318072;
	// begin inline asm
	mov.b32 %r8146, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8144, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8145, %r8146, %r8144;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8148, %r7883, %r8145;
	// end inline asm
	// begin inline asm
	mov.b32 %r8151, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8152, %r8146, %r8151;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8155, %r7891, %r8152;
	// end inline asm
	// begin inline asm
	mov.b32 %r8158, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8159, %r8146, %r8158;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8162, %r7899, %r8159;
	// end inline asm
	// begin inline asm
	mov.b32 %r8165, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8166, %r8146, %r8165;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8169, %r7907, %r8166;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8172, %r8148, %r8162, %r4318;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8176, %r8155, %r8169, %r4318;
	// end inline asm
	shl.b32 	%r8183, %r8176, 4;
	// begin inline asm
	lop3.b32 %r8180, %r4324, %r8172, %r8183, 202;
	// end inline asm
	xor.b32  	%r16079, %r8180, -2004318072;
	// begin inline asm
	mov.b32 %r8187, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8185, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8186, %r8187, %r8185;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8189, %r7915, %r8186;
	// end inline asm
	// begin inline asm
	mov.b32 %r8192, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8193, %r8187, %r8192;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8196, %r7923, %r8193;
	// end inline asm
	// begin inline asm
	mov.b32 %r8199, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8200, %r8187, %r8199;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8203, %r7931, %r8200;
	// end inline asm
	// begin inline asm
	mov.b32 %r8206, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8207, %r8187, %r8206;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8210, %r7939, %r8207;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8213, %r8189, %r8203, %r4318;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8217, %r8196, %r8210, %r4318;
	// end inline asm
	shl.b32 	%r8224, %r8217, 4;
	// begin inline asm
	lop3.b32 %r8221, %r4324, %r8213, %r8224, 202;
	// end inline asm
	xor.b32  	%r16080, %r8221, -2004318072;
	// begin inline asm
	mov.b32 %r8228, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8226, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8227, %r8228, %r8226;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8230, %r7947, %r8227;
	// end inline asm
	// begin inline asm
	mov.b32 %r8233, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8234, %r8228, %r8233;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8237, %r7955, %r8234;
	// end inline asm
	// begin inline asm
	mov.b32 %r8240, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8241, %r8228, %r8240;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8244, %r7963, %r8241;
	// end inline asm
	// begin inline asm
	mov.b32 %r8247, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8248, %r8228, %r8247;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8251, %r7971, %r8248;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8254, %r8230, %r8244, %r4318;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8258, %r8237, %r8251, %r4318;
	// end inline asm
	shl.b32 	%r8265, %r8258, 4;
	// begin inline asm
	lop3.b32 %r8262, %r4324, %r8254, %r8265, 202;
	// end inline asm
	xor.b32  	%r16081, %r8262, -2004318072;
	// begin inline asm
	mov.b32 %r8269, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8267, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8268, %r8269, %r8267;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8271, %r7979, %r8268;
	// end inline asm
	// begin inline asm
	mov.b32 %r8274, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8275, %r8269, %r8274;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8278, %r7987, %r8275;
	// end inline asm
	// begin inline asm
	mov.b32 %r8281, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8282, %r8269, %r8281;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8285, %r7995, %r8282;
	// end inline asm
	// begin inline asm
	mov.b32 %r8288, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8289, %r8269, %r8288;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8292, %r8003, %r8289;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8295, %r8271, %r8285, %r4318;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8299, %r8278, %r8292, %r4318;
	// end inline asm
	shl.b32 	%r8306, %r8299, 4;
	// begin inline asm
	lop3.b32 %r8303, %r4324, %r8295, %r8306, 202;
	// end inline asm
	xor.b32  	%r16082, %r8303, -2004318072;
	// begin inline asm
	mov.b32 %r8310, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8308, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8309, %r8310, %r8308;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8312, %r8011, %r8309;
	// end inline asm
	// begin inline asm
	mov.b32 %r8315, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8316, %r8310, %r8315;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8319, %r8019, %r8316;
	// end inline asm
	// begin inline asm
	mov.b32 %r8322, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8323, %r8310, %r8322;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8326, %r8027, %r8323;
	// end inline asm
	// begin inline asm
	mov.b32 %r8329, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8330, %r8310, %r8329;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8333, %r8035, %r8330;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8336, %r8312, %r8326, %r4318;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8340, %r8319, %r8333, %r4318;
	// end inline asm
	shl.b32 	%r8347, %r8340, 4;
	// begin inline asm
	lop3.b32 %r8344, %r4324, %r8336, %r8347, 202;
	// end inline asm
	xor.b32  	%r16083, %r8344, -2004318072;
	// begin inline asm
	mov.b32 %r8351, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8349, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8350, %r8351, %r8349;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8353, %r8043, %r8350;
	// end inline asm
	// begin inline asm
	mov.b32 %r8356, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8357, %r8351, %r8356;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8360, %r8051, %r8357;
	// end inline asm
	// begin inline asm
	mov.b32 %r8363, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8364, %r8351, %r8363;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8367, %r8059, %r8364;
	// end inline asm
	// begin inline asm
	mov.b32 %r8370, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8371, %r8351, %r8370;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8374, %r8067, %r8371;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8377, %r8353, %r8367, %r4318;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8381, %r8360, %r8374, %r4318;
	// end inline asm
	shl.b32 	%r8388, %r8381, 4;
	// begin inline asm
	lop3.b32 %r8385, %r4324, %r8377, %r8388, 202;
	// end inline asm
	xor.b32  	%r16084, %r8385, -2004318072;
	// begin inline asm
	mov.b32 %r8392, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8390, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8391, %r8392, %r8390;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8394, %r8075, %r8391;
	// end inline asm
	// begin inline asm
	mov.b32 %r8397, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8398, %r8392, %r8397;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8401, %r8083, %r8398;
	// end inline asm
	// begin inline asm
	mov.b32 %r8404, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8405, %r8392, %r8404;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8408, %r8091, %r8405;
	// end inline asm
	// begin inline asm
	mov.b32 %r8411, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8412, %r8392, %r8411;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8415, %r8099, %r8412;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8418, %r8394, %r8408, %r4318;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8422, %r8401, %r8415, %r4318;
	// end inline asm
	shl.b32 	%r8429, %r8422, 4;
	// begin inline asm
	lop3.b32 %r8426, %r4324, %r8418, %r8429, 202;
	// end inline asm
	xor.b32  	%r16085, %r8426, -2004318072;
	st.shared.u32 	[%rd82], %r16078;
	st.shared.u32 	[%rd83], %r16079;
	st.shared.u32 	[%rd84], %r16080;
	st.shared.u32 	[%rd85], %r16081;
	st.shared.u32 	[%rd86], %r16082;
	st.shared.u32 	[%rd87], %r16083;
	st.shared.u32 	[%rd88], %r16084;
	st.shared.u32 	[%rd89], %r16085;
	ld.shared.u32 	%r16200, [%rd74];
	ld.shared.u32 	%r16201, [%rd75];
	ld.shared.u32 	%r16202, [%rd76];
	ld.shared.u32 	%r16203, [%rd77];
	ld.shared.u32 	%r16212, [%rd78];
	ld.shared.u32 	%r16213, [%rd79];
	ld.shared.u32 	%r16214, [%rd80];
	ld.shared.u32 	%r16215, [%rd81];
	// begin inline asm
	mov.b32 %r8435, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8446, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8434, %r16200, -2004318072;
	// begin inline asm
	lop3.b32 %r8432, %r801, %r8434, %r8435, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8436, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8437, %r8435, %r8436;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8440, %r8432, %r8437;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8443, %r812, %r8434, %r8446, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8447, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8448, %r8446, %r8447;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8451, %r8443, %r8448;
	// end inline asm
	shr.u32 	%r8456, %r8434, 8;
	// begin inline asm
	lop3.b32 %r8454, %r801, %r8456, %r8435, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8458, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8459, %r8435, %r8458;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8462, %r8454, %r8459;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8465, %r812, %r8456, %r8446, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8469, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8470, %r8446, %r8469;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8473, %r8465, %r8470;
	// end inline asm
	// begin inline asm
	mov.b32 %r8481, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8492, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8480, %r16201, -2004318072;
	// begin inline asm
	lop3.b32 %r8478, %r801, %r8480, %r8481, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8482, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8483, %r8481, %r8482;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8486, %r8478, %r8483;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8489, %r812, %r8480, %r8492, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8493, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8494, %r8492, %r8493;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8497, %r8489, %r8494;
	// end inline asm
	shr.u32 	%r8502, %r8480, 8;
	// begin inline asm
	lop3.b32 %r8500, %r801, %r8502, %r8481, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8504, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8505, %r8481, %r8504;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8508, %r8500, %r8505;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8511, %r812, %r8502, %r8492, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8515, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8516, %r8492, %r8515;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8519, %r8511, %r8516;
	// end inline asm
	// begin inline asm
	mov.b32 %r8527, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8538, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8526, %r16202, -2004318072;
	// begin inline asm
	lop3.b32 %r8524, %r801, %r8526, %r8527, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8528, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8529, %r8527, %r8528;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8532, %r8524, %r8529;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8535, %r812, %r8526, %r8538, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8539, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8540, %r8538, %r8539;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8543, %r8535, %r8540;
	// end inline asm
	shr.u32 	%r8548, %r8526, 8;
	// begin inline asm
	lop3.b32 %r8546, %r801, %r8548, %r8527, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8550, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8551, %r8527, %r8550;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8554, %r8546, %r8551;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8557, %r812, %r8548, %r8538, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8561, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8562, %r8538, %r8561;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8565, %r8557, %r8562;
	// end inline asm
	// begin inline asm
	mov.b32 %r8573, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8584, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8572, %r16203, -2004318072;
	// begin inline asm
	lop3.b32 %r8570, %r801, %r8572, %r8573, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8574, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8575, %r8573, %r8574;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8578, %r8570, %r8575;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8581, %r812, %r8572, %r8584, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8585, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8586, %r8584, %r8585;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8589, %r8581, %r8586;
	// end inline asm
	shr.u32 	%r8594, %r8572, 8;
	// begin inline asm
	lop3.b32 %r8592, %r801, %r8594, %r8573, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8596, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8597, %r8573, %r8596;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8600, %r8592, %r8597;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8603, %r812, %r8594, %r8584, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8607, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8608, %r8584, %r8607;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8611, %r8603, %r8608;
	// end inline asm
	// begin inline asm
	mov.b32 %r8619, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8630, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8618, %r16212, -2004318072;
	// begin inline asm
	lop3.b32 %r8616, %r801, %r8618, %r8619, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8620, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8621, %r8619, %r8620;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8624, %r8616, %r8621;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8627, %r812, %r8618, %r8630, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8631, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8632, %r8630, %r8631;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8635, %r8627, %r8632;
	// end inline asm
	shr.u32 	%r8640, %r8618, 8;
	// begin inline asm
	lop3.b32 %r8638, %r801, %r8640, %r8619, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8642, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8643, %r8619, %r8642;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8646, %r8638, %r8643;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8649, %r812, %r8640, %r8630, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8653, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8654, %r8630, %r8653;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8657, %r8649, %r8654;
	// end inline asm
	// begin inline asm
	mov.b32 %r8665, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8676, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8664, %r16213, -2004318072;
	// begin inline asm
	lop3.b32 %r8662, %r801, %r8664, %r8665, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8666, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8667, %r8665, %r8666;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8670, %r8662, %r8667;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8673, %r812, %r8664, %r8676, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8677, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8678, %r8676, %r8677;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8681, %r8673, %r8678;
	// end inline asm
	shr.u32 	%r8686, %r8664, 8;
	// begin inline asm
	lop3.b32 %r8684, %r801, %r8686, %r8665, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8688, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8689, %r8665, %r8688;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8692, %r8684, %r8689;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8695, %r812, %r8686, %r8676, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8699, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8700, %r8676, %r8699;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8703, %r8695, %r8700;
	// end inline asm
	// begin inline asm
	mov.b32 %r8711, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8722, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8710, %r16214, -2004318072;
	// begin inline asm
	lop3.b32 %r8708, %r801, %r8710, %r8711, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8712, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8713, %r8711, %r8712;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8716, %r8708, %r8713;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8719, %r812, %r8710, %r8722, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8723, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8724, %r8722, %r8723;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8727, %r8719, %r8724;
	// end inline asm
	shr.u32 	%r8732, %r8710, 8;
	// begin inline asm
	lop3.b32 %r8730, %r801, %r8732, %r8711, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8734, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8735, %r8711, %r8734;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8738, %r8730, %r8735;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8741, %r812, %r8732, %r8722, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8745, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8746, %r8722, %r8745;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8749, %r8741, %r8746;
	// end inline asm
	// begin inline asm
	mov.b32 %r8757, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8768, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8756, %r16215, -2004318072;
	// begin inline asm
	lop3.b32 %r8754, %r801, %r8756, %r8757, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8758, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8759, %r8757, %r8758;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8762, %r8754, %r8759;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8765, %r812, %r8756, %r8768, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8769, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8770, %r8768, %r8769;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8773, %r8765, %r8770;
	// end inline asm
	shr.u32 	%r8778, %r8756, 8;
	// begin inline asm
	lop3.b32 %r8776, %r801, %r8778, %r8757, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8780, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8781, %r8757, %r8780;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8784, %r8776, %r8781;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8787, %r812, %r8778, %r8768, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8791, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8792, %r8768, %r8791;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8795, %r8787, %r8792;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8798, %r378;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8800, %r8798, %r8440;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8803, %r378;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8805, %r8803, %r8451;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8808, %r378;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8810, %r8808, %r8462;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8813, %r378;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8815, %r8813, %r8473;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8818, %r378;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8820, %r8818, %r8486;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8823, %r378;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8825, %r8823, %r8497;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8828, %r378;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8830, %r8828, %r8508;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8833, %r378;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8835, %r8833, %r8519;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8838, %r378;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8840, %r8838, %r8532;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8843, %r378;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8845, %r8843, %r8543;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8848, %r378;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8850, %r8848, %r8554;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8853, %r378;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8855, %r8853, %r8565;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8858, %r378;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8860, %r8858, %r8578;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8863, %r378;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8865, %r8863, %r8589;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8868, %r378;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8870, %r8868, %r8600;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8873, %r378;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8875, %r8873, %r8611;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8878, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8880, %r8878, %r8624;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8883, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8885, %r8883, %r8635;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8888, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8890, %r8888, %r8646;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8893, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8895, %r8893, %r8657;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8898, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8900, %r8898, %r8670;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8903, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8905, %r8903, %r8681;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8908, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8910, %r8908, %r8692;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8913, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8915, %r8913, %r8703;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8918, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8920, %r8918, %r8716;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8923, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8925, %r8923, %r8727;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8928, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8930, %r8928, %r8738;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8933, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8935, %r8933, %r8749;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8938, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8940, %r8938, %r8762;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8943, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8945, %r8943, %r8773;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8948, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8950, %r8948, %r8784;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8953, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8955, %r8953, %r8795;
	// end inline asm
	// begin inline asm
	mov.b32 %r8963, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8974, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r8960, %r801, %r2386, %r8963, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8964, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8965, %r8963, %r8964;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8968, %r8960, %r8965;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8971, %r812, %r2386, %r8974, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8975, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8976, %r8974, %r8975;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8979, %r8971, %r8976;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8982, %r801, %r2408, %r8963, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8986, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8987, %r8963, %r8986;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8990, %r8982, %r8987;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8993, %r812, %r2408, %r8974, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8997, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8998, %r8974, %r8997;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9001, %r8993, %r8998;
	// end inline asm
	// begin inline asm
	mov.b32 %r9009, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9020, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9006, %r801, %r2432, %r9009, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9010, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9011, %r9009, %r9010;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9014, %r9006, %r9011;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9017, %r812, %r2432, %r9020, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9021, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9022, %r9020, %r9021;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9025, %r9017, %r9022;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9028, %r801, %r2454, %r9009, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9032, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9033, %r9009, %r9032;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9036, %r9028, %r9033;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9039, %r812, %r2454, %r9020, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9043, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9044, %r9020, %r9043;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9047, %r9039, %r9044;
	// end inline asm
	// begin inline asm
	mov.b32 %r9055, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9066, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9052, %r801, %r2478, %r9055, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9056, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9057, %r9055, %r9056;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9060, %r9052, %r9057;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9063, %r812, %r2478, %r9066, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9067, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9068, %r9066, %r9067;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9071, %r9063, %r9068;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9074, %r801, %r2500, %r9055, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9078, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9079, %r9055, %r9078;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9082, %r9074, %r9079;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9085, %r812, %r2500, %r9066, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9089, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9090, %r9066, %r9089;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9093, %r9085, %r9090;
	// end inline asm
	// begin inline asm
	mov.b32 %r9101, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9112, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9098, %r801, %r2524, %r9101, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9102, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9103, %r9101, %r9102;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9106, %r9098, %r9103;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9109, %r812, %r2524, %r9112, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9113, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9114, %r9112, %r9113;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9117, %r9109, %r9114;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9120, %r801, %r2546, %r9101, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9124, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9125, %r9101, %r9124;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9128, %r9120, %r9125;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9131, %r812, %r2546, %r9112, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9135, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9136, %r9112, %r9135;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9139, %r9131, %r9136;
	// end inline asm
	// begin inline asm
	mov.b32 %r9147, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9158, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9144, %r801, %r2570, %r9147, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9148, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9149, %r9147, %r9148;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9152, %r9144, %r9149;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9155, %r812, %r2570, %r9158, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9159, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9160, %r9158, %r9159;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9163, %r9155, %r9160;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9166, %r801, %r2592, %r9147, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9170, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9171, %r9147, %r9170;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9174, %r9166, %r9171;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9177, %r812, %r2592, %r9158, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9181, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9182, %r9158, %r9181;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9185, %r9177, %r9182;
	// end inline asm
	// begin inline asm
	mov.b32 %r9193, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9204, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9190, %r801, %r2616, %r9193, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9194, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9195, %r9193, %r9194;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9198, %r9190, %r9195;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9201, %r812, %r2616, %r9204, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9205, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9206, %r9204, %r9205;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9209, %r9201, %r9206;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9212, %r801, %r2638, %r9193, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9216, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9217, %r9193, %r9216;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9220, %r9212, %r9217;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9223, %r812, %r2638, %r9204, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9227, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9228, %r9204, %r9227;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9231, %r9223, %r9228;
	// end inline asm
	// begin inline asm
	mov.b32 %r9239, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9250, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9236, %r801, %r2662, %r9239, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9240, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9241, %r9239, %r9240;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9244, %r9236, %r9241;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9247, %r812, %r2662, %r9250, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9251, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9252, %r9250, %r9251;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9255, %r9247, %r9252;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9258, %r801, %r2684, %r9239, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9262, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9263, %r9239, %r9262;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9266, %r9258, %r9263;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9269, %r812, %r2684, %r9250, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9273, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9274, %r9250, %r9273;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9277, %r9269, %r9274;
	// end inline asm
	// begin inline asm
	mov.b32 %r9285, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9296, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9282, %r801, %r2708, %r9285, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9286, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9287, %r9285, %r9286;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9290, %r9282, %r9287;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9293, %r812, %r2708, %r9296, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9297, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9298, %r9296, %r9297;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9301, %r9293, %r9298;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9304, %r801, %r2730, %r9285, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9308, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9309, %r9285, %r9308;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9312, %r9304, %r9309;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9315, %r812, %r2730, %r9296, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9319, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9320, %r9296, %r9319;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9323, %r9315, %r9320;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9326, %r270, %r8968, %r8800;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9330, %r270, %r8979, %r8805;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9334, %r270, %r8990, %r8810;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9338, %r270, %r9001, %r8815;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9342, %r270, %r9014, %r8820;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9346, %r270, %r9025, %r8825;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9350, %r270, %r9036, %r8830;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9354, %r270, %r9047, %r8835;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9358, %r270, %r9060, %r8840;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9362, %r270, %r9071, %r8845;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9366, %r270, %r9082, %r8850;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9370, %r270, %r9093, %r8855;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9374, %r270, %r9106, %r8860;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9378, %r270, %r9117, %r8865;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9382, %r270, %r9128, %r8870;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9386, %r270, %r9139, %r8875;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9390, %r288, %r9152, %r8880;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9394, %r288, %r9163, %r8885;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9398, %r288, %r9174, %r8890;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9402, %r288, %r9185, %r8895;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9406, %r288, %r9198, %r8900;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9410, %r288, %r9209, %r8905;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9414, %r288, %r9220, %r8910;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9418, %r288, %r9231, %r8915;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9422, %r288, %r9244, %r8920;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9426, %r288, %r9255, %r8925;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9430, %r288, %r9266, %r8930;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9434, %r288, %r9277, %r8935;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9438, %r288, %r9290, %r8940;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9442, %r288, %r9301, %r8945;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9446, %r288, %r9312, %r8950;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9450, %r288, %r9323, %r8955;
	// end inline asm
	// begin inline asm
	mov.b32 %r9459, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9470, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9456, %r801, %r802, %r9459, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9460, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9461, %r9459, %r9460;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9464, %r9456, %r9461;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9467, %r812, %r802, %r9470, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9471, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9472, %r9470, %r9471;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9475, %r9467, %r9472;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9478, %r801, %r824, %r9459, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9482, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9483, %r9459, %r9482;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9486, %r9478, %r9483;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9489, %r812, %r824, %r9470, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9493, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9494, %r9470, %r9493;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9497, %r9489, %r9494;
	// end inline asm
	// begin inline asm
	mov.b32 %r9505, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9516, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9502, %r801, %r848, %r9505, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9506, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9507, %r9505, %r9506;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9510, %r9502, %r9507;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9513, %r812, %r848, %r9516, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9517, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9518, %r9516, %r9517;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9521, %r9513, %r9518;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9524, %r801, %r870, %r9505, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9528, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9529, %r9505, %r9528;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9532, %r9524, %r9529;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9535, %r812, %r870, %r9516, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9539, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9540, %r9516, %r9539;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9543, %r9535, %r9540;
	// end inline asm
	// begin inline asm
	mov.b32 %r9551, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9562, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9548, %r801, %r894, %r9551, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9552, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9553, %r9551, %r9552;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9556, %r9548, %r9553;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9559, %r812, %r894, %r9562, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9563, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9564, %r9562, %r9563;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9567, %r9559, %r9564;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9570, %r801, %r916, %r9551, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9574, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9575, %r9551, %r9574;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9578, %r9570, %r9575;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9581, %r812, %r916, %r9562, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9585, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9586, %r9562, %r9585;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9589, %r9581, %r9586;
	// end inline asm
	// begin inline asm
	mov.b32 %r9597, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9608, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9594, %r801, %r940, %r9597, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9598, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9599, %r9597, %r9598;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9602, %r9594, %r9599;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9605, %r812, %r940, %r9608, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9609, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9610, %r9608, %r9609;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9613, %r9605, %r9610;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9616, %r801, %r962, %r9597, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9620, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9621, %r9597, %r9620;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9624, %r9616, %r9621;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9627, %r812, %r962, %r9608, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9631, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9632, %r9608, %r9631;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9635, %r9627, %r9632;
	// end inline asm
	// begin inline asm
	mov.b32 %r9643, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9654, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9640, %r801, %r986, %r9643, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9644, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9645, %r9643, %r9644;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9648, %r9640, %r9645;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9651, %r812, %r986, %r9654, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9655, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9656, %r9654, %r9655;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9659, %r9651, %r9656;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9662, %r801, %r1008, %r9643, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9666, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9667, %r9643, %r9666;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9670, %r9662, %r9667;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9673, %r812, %r1008, %r9654, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9677, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9678, %r9654, %r9677;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9681, %r9673, %r9678;
	// end inline asm
	// begin inline asm
	mov.b32 %r9689, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9700, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9686, %r801, %r1032, %r9689, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9690, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9691, %r9689, %r9690;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9694, %r9686, %r9691;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9697, %r812, %r1032, %r9700, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9701, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9702, %r9700, %r9701;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9705, %r9697, %r9702;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9708, %r801, %r1054, %r9689, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9712, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9713, %r9689, %r9712;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9716, %r9708, %r9713;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9719, %r812, %r1054, %r9700, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9723, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9724, %r9700, %r9723;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9727, %r9719, %r9724;
	// end inline asm
	// begin inline asm
	mov.b32 %r9735, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9746, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9732, %r801, %r1078, %r9735, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9736, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9737, %r9735, %r9736;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9740, %r9732, %r9737;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9743, %r812, %r1078, %r9746, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9747, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9748, %r9746, %r9747;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9751, %r9743, %r9748;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9754, %r801, %r1100, %r9735, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9758, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9759, %r9735, %r9758;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9762, %r9754, %r9759;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9765, %r812, %r1100, %r9746, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9769, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9770, %r9746, %r9769;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9773, %r9765, %r9770;
	// end inline asm
	// begin inline asm
	mov.b32 %r9781, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9792, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9778, %r801, %r1124, %r9781, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9782, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9783, %r9781, %r9782;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9786, %r9778, %r9783;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9789, %r812, %r1124, %r9792, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9793, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9794, %r9792, %r9793;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9797, %r9789, %r9794;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9800, %r801, %r1146, %r9781, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9804, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9805, %r9781, %r9804;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9808, %r9800, %r9805;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9811, %r812, %r1146, %r9792, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9815, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9816, %r9792, %r9815;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9819, %r9811, %r9816;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9822, %r306;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9824, %r9822, %r9464, %r9326;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9828, %r306;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9830, %r9828, %r9475, %r9330;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9834, %r306;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9836, %r9834, %r9486, %r9334;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9840, %r306;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9842, %r9840, %r9497, %r9338;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9846, %r306;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9848, %r9846, %r9510, %r9342;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9852, %r306;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9854, %r9852, %r9521, %r9346;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9858, %r306;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9860, %r9858, %r9532, %r9350;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9864, %r306;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9866, %r9864, %r9543, %r9354;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9870, %r306;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9872, %r9870, %r9556, %r9358;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9876, %r306;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9878, %r9876, %r9567, %r9362;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9882, %r306;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9884, %r9882, %r9578, %r9366;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9888, %r306;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9890, %r9888, %r9589, %r9370;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9894, %r306;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9896, %r9894, %r9602, %r9374;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9900, %r306;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9902, %r9900, %r9613, %r9378;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9906, %r306;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9908, %r9906, %r9624, %r9382;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9912, %r306;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9914, %r9912, %r9635, %r9386;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9918, %r324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9920, %r9918, %r9648, %r9390;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9924, %r324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9926, %r9924, %r9659, %r9394;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9930, %r324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9932, %r9930, %r9670, %r9398;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9936, %r324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9938, %r9936, %r9681, %r9402;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9942, %r324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9944, %r9942, %r9694, %r9406;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9948, %r324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9950, %r9948, %r9705, %r9410;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9954, %r324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9956, %r9954, %r9716, %r9414;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9960, %r324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9962, %r9960, %r9727, %r9418;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9966, %r324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9968, %r9966, %r9740, %r9422;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9972, %r324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9974, %r9972, %r9751, %r9426;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9978, %r324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9980, %r9978, %r9762, %r9430;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9984, %r324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9986, %r9984, %r9773, %r9434;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9990, %r324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9992, %r9990, %r9786, %r9438;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9996, %r324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9998, %r9996, %r9797, %r9442;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10002, %r324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10004, %r10002, %r9808, %r9446;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10008, %r324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10010, %r10008, %r9819, %r9450;
	// end inline asm
	// begin inline asm
	mov.b32 %r10019, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10030, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10016, %r801, %r4618, %r10019, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10020, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10021, %r10019, %r10020;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10024, %r10016, %r10021;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10027, %r812, %r4618, %r10030, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10031, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10032, %r10030, %r10031;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10035, %r10027, %r10032;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10038, %r801, %r4640, %r10019, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10042, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10043, %r10019, %r10042;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10046, %r10038, %r10043;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10049, %r812, %r4640, %r10030, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10053, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10054, %r10030, %r10053;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10057, %r10049, %r10054;
	// end inline asm
	// begin inline asm
	mov.b32 %r10065, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10076, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10062, %r801, %r4664, %r10065, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10066, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10067, %r10065, %r10066;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10070, %r10062, %r10067;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10073, %r812, %r4664, %r10076, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10077, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10078, %r10076, %r10077;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10081, %r10073, %r10078;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10084, %r801, %r4686, %r10065, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10088, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10089, %r10065, %r10088;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10092, %r10084, %r10089;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10095, %r812, %r4686, %r10076, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10099, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10100, %r10076, %r10099;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10103, %r10095, %r10100;
	// end inline asm
	// begin inline asm
	mov.b32 %r10111, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10122, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10108, %r801, %r4710, %r10111, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10112, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10113, %r10111, %r10112;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10116, %r10108, %r10113;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10119, %r812, %r4710, %r10122, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10123, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10124, %r10122, %r10123;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10127, %r10119, %r10124;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10130, %r801, %r4732, %r10111, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10134, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10135, %r10111, %r10134;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10138, %r10130, %r10135;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10141, %r812, %r4732, %r10122, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10145, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10146, %r10122, %r10145;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10149, %r10141, %r10146;
	// end inline asm
	// begin inline asm
	mov.b32 %r10157, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10168, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10154, %r801, %r4756, %r10157, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10158, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10159, %r10157, %r10158;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10162, %r10154, %r10159;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10165, %r812, %r4756, %r10168, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10169, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10170, %r10168, %r10169;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10173, %r10165, %r10170;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10176, %r801, %r4778, %r10157, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10180, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10181, %r10157, %r10180;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10184, %r10176, %r10181;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10187, %r812, %r4778, %r10168, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10191, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10192, %r10168, %r10191;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10195, %r10187, %r10192;
	// end inline asm
	// begin inline asm
	mov.b32 %r10203, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10214, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10200, %r801, %r4802, %r10203, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10204, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10205, %r10203, %r10204;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10208, %r10200, %r10205;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10211, %r812, %r4802, %r10214, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10215, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10216, %r10214, %r10215;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10219, %r10211, %r10216;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10222, %r801, %r4824, %r10203, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10226, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10227, %r10203, %r10226;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10230, %r10222, %r10227;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10233, %r812, %r4824, %r10214, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10237, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10238, %r10214, %r10237;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10241, %r10233, %r10238;
	// end inline asm
	// begin inline asm
	mov.b32 %r10249, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10260, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10246, %r801, %r4848, %r10249, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10250, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10251, %r10249, %r10250;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10254, %r10246, %r10251;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10257, %r812, %r4848, %r10260, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10261, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10262, %r10260, %r10261;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10265, %r10257, %r10262;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10268, %r801, %r4870, %r10249, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10272, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10273, %r10249, %r10272;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10276, %r10268, %r10273;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10279, %r812, %r4870, %r10260, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10283, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10284, %r10260, %r10283;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10287, %r10279, %r10284;
	// end inline asm
	// begin inline asm
	mov.b32 %r10295, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10306, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10292, %r801, %r4894, %r10295, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10296, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10297, %r10295, %r10296;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10300, %r10292, %r10297;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10303, %r812, %r4894, %r10306, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10307, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10308, %r10306, %r10307;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10311, %r10303, %r10308;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10314, %r801, %r4916, %r10295, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10318, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10319, %r10295, %r10318;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10322, %r10314, %r10319;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10325, %r812, %r4916, %r10306, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10329, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10330, %r10306, %r10329;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10333, %r10325, %r10330;
	// end inline asm
	// begin inline asm
	mov.b32 %r10341, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10352, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10338, %r801, %r4940, %r10341, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10342, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10343, %r10341, %r10342;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10346, %r10338, %r10343;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10349, %r812, %r4940, %r10352, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10353, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10354, %r10352, %r10353;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10357, %r10349, %r10354;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10360, %r801, %r4962, %r10341, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10364, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10365, %r10341, %r10364;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10368, %r10360, %r10365;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10371, %r812, %r4962, %r10352, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10375, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10376, %r10352, %r10375;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10379, %r10371, %r10376;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10517, %r342, %r10024, %r9824;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10514, %r342, %r10035, %r9830;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10526, %r342, %r10046, %r9836;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10523, %r342, %r10057, %r9842;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10535, %r342, %r10070, %r9848;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10532, %r342, %r10081, %r9854;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10544, %r342, %r10092, %r9860;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10541, %r342, %r10103, %r9866;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10553, %r342, %r10116, %r9872;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10550, %r342, %r10127, %r9878;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10562, %r342, %r10138, %r9884;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10559, %r342, %r10149, %r9890;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10571, %r342, %r10162, %r9896;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10568, %r342, %r10173, %r9902;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10580, %r342, %r10184, %r9908;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10577, %r342, %r10195, %r9914;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10589, %r360, %r10208, %r9920;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10586, %r360, %r10219, %r9926;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10598, %r360, %r10230, %r9932;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10595, %r360, %r10241, %r9938;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10607, %r360, %r10254, %r9944;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10604, %r360, %r10265, %r9950;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10616, %r360, %r10276, %r9956;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10613, %r360, %r10287, %r9962;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10625, %r360, %r10300, %r9968;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10622, %r360, %r10311, %r9974;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10634, %r360, %r10322, %r9980;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10631, %r360, %r10333, %r9986;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10643, %r360, %r10346, %r9992;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10640, %r360, %r10357, %r9998;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10652, %r360, %r10368, %r10004;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10649, %r360, %r10379, %r10010;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10510, %r430;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10512, %r10510, %r10514;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10515, %r424, %r10517, %r10512;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10519, %r430;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10521, %r10519, %r10523;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10524, %r424, %r10526, %r10521;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10528, %r430;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10530, %r10528, %r10532;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10533, %r424, %r10535, %r10530;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10537, %r430;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10539, %r10537, %r10541;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10542, %r424, %r10544, %r10539;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10546, %r430;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10548, %r10546, %r10550;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10551, %r424, %r10553, %r10548;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10555, %r430;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10557, %r10555, %r10559;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10560, %r424, %r10562, %r10557;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10564, %r430;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10566, %r10564, %r10568;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10569, %r424, %r10571, %r10566;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10573, %r430;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10575, %r10573, %r10577;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10578, %r424, %r10580, %r10575;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10582, %r433;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10584, %r10582, %r10586;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10587, %r427, %r10589, %r10584;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10591, %r433;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10593, %r10591, %r10595;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10596, %r427, %r10598, %r10593;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10600, %r433;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10602, %r10600, %r10604;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10605, %r427, %r10607, %r10602;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10609, %r433;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10611, %r10609, %r10613;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10614, %r427, %r10616, %r10611;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10618, %r433;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10620, %r10618, %r10622;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10623, %r427, %r10625, %r10620;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10627, %r433;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10629, %r10627, %r10631;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10632, %r427, %r10634, %r10629;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10636, %r433;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10638, %r10636, %r10640;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10641, %r427, %r10643, %r10638;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10645, %r433;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10647, %r10645, %r10649;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10650, %r427, %r10652, %r10647;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10654, %r430, %r10517;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10657, %r424, %r10514, %r10654;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10661, %r430, %r10526;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10664, %r424, %r10523, %r10661;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10668, %r430, %r10535;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10671, %r424, %r10532, %r10668;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10675, %r430, %r10544;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10678, %r424, %r10541, %r10675;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10682, %r430, %r10553;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10685, %r424, %r10550, %r10682;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10689, %r430, %r10562;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10692, %r424, %r10559, %r10689;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10696, %r430, %r10571;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10699, %r424, %r10568, %r10696;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10703, %r430, %r10580;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10706, %r424, %r10577, %r10703;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10710, %r433, %r10589;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10713, %r427, %r10586, %r10710;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10717, %r433, %r10598;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10720, %r427, %r10595, %r10717;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10724, %r433, %r10607;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10727, %r427, %r10604, %r10724;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10731, %r433, %r10616;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10734, %r427, %r10613, %r10731;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10738, %r433, %r10625;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10741, %r427, %r10622, %r10738;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10745, %r433, %r10634;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10748, %r427, %r10631, %r10745;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10752, %r433, %r10643;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10755, %r427, %r10640, %r10752;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10759, %r433, %r10652;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10762, %r427, %r10649, %r10759;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r10933, %r10930}, {%r472, %r478, %r475, %r481}, {%r10515, %r10657}, {%r15157, %r15157};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r10942, %r10939}, {%r472, %r478, %r475, %r481}, {%r10524, %r10664}, {%r15157, %r15157};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r10951, %r10948}, {%r472, %r478, %r475, %r481}, {%r10533, %r10671}, {%r15157, %r15157};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r10960, %r10957}, {%r472, %r478, %r475, %r481}, {%r10542, %r10678}, {%r15157, %r15157};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r10969, %r10966}, {%r472, %r478, %r475, %r481}, {%r10551, %r10685}, {%r15157, %r15157};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r10978, %r10975}, {%r472, %r478, %r475, %r481}, {%r10560, %r10692}, {%r15157, %r15157};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r10987, %r10984}, {%r472, %r478, %r475, %r481}, {%r10569, %r10699}, {%r15157, %r15157};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r10996, %r10993}, {%r472, %r478, %r475, %r481}, {%r10578, %r10706}, {%r15157, %r15157};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11005, %r11002}, {%r472, %r478, %r475, %r481}, {%r10587, %r10713}, {%r15157, %r15157};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11014, %r11011}, {%r472, %r478, %r475, %r481}, {%r10596, %r10720}, {%r15157, %r15157};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11023, %r11020}, {%r472, %r478, %r475, %r481}, {%r10605, %r10727}, {%r15157, %r15157};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11032, %r11029}, {%r472, %r478, %r475, %r481}, {%r10614, %r10734}, {%r15157, %r15157};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11041, %r11038}, {%r472, %r478, %r475, %r481}, {%r10623, %r10741}, {%r15157, %r15157};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11050, %r11047}, {%r472, %r478, %r475, %r481}, {%r10632, %r10748}, {%r15157, %r15157};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11059, %r11056}, {%r472, %r478, %r475, %r481}, {%r10641, %r10755}, {%r15157, %r15157};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11068, %r11065}, {%r472, %r478, %r475, %r481}, {%r10650, %r10762}, {%r15157, %r15157};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10926, %r522;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10928, %r10926, %r10930;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10931, %r519, %r10933, %r10928;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10935, %r522;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10937, %r10935, %r10939;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10940, %r519, %r10942, %r10937;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10944, %r522;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10946, %r10944, %r10948;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10949, %r519, %r10951, %r10946;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10953, %r522;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10955, %r10953, %r10957;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10958, %r519, %r10960, %r10955;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10962, %r522;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10964, %r10962, %r10966;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10967, %r519, %r10969, %r10964;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10971, %r522;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10973, %r10971, %r10975;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10976, %r519, %r10978, %r10973;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10980, %r522;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10982, %r10980, %r10984;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10985, %r519, %r10987, %r10982;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10989, %r522;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10991, %r10989, %r10993;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10994, %r519, %r10996, %r10991;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10998, %r522;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11000, %r10998, %r11002;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11003, %r519, %r11005, %r11000;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11007, %r522;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11009, %r11007, %r11011;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11012, %r519, %r11014, %r11009;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11016, %r522;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11018, %r11016, %r11020;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11021, %r519, %r11023, %r11018;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11025, %r522;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11027, %r11025, %r11029;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11030, %r519, %r11032, %r11027;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11034, %r522;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11036, %r11034, %r11038;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11039, %r519, %r11041, %r11036;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11043, %r522;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11045, %r11043, %r11047;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11048, %r519, %r11050, %r11045;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11052, %r522;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11054, %r11052, %r11056;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11057, %r519, %r11059, %r11054;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11061, %r522;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11063, %r11061, %r11065;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11066, %r519, %r11068, %r11063;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11070, %r522, %r10933;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11073, %r519, %r10930, %r11070;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11077, %r522, %r10942;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11080, %r519, %r10939, %r11077;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11084, %r522, %r10951;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11087, %r519, %r10948, %r11084;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11091, %r522, %r10960;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11094, %r519, %r10957, %r11091;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11098, %r522, %r10969;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11101, %r519, %r10966, %r11098;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11105, %r522, %r10978;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11108, %r519, %r10975, %r11105;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11112, %r522, %r10987;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11115, %r519, %r10984, %r11112;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11119, %r522, %r10996;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11122, %r519, %r10993, %r11119;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11126, %r522, %r11005;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11129, %r519, %r11002, %r11126;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11133, %r522, %r11014;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11136, %r519, %r11011, %r11133;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11140, %r522, %r11023;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11143, %r519, %r11020, %r11140;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11147, %r522, %r11032;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11150, %r519, %r11029, %r11147;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11154, %r522, %r11041;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11157, %r519, %r11038, %r11154;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11161, %r522, %r11050;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11164, %r519, %r11047, %r11161;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11168, %r522, %r11059;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11171, %r519, %r11056, %r11168;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11175, %r522, %r11068;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11178, %r519, %r11065, %r11175;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11471, %r11474}, {%r562, %r568, %r565, %r571}, {%r10931, %r11073}, {%r15157, %r15157};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11477, %r11480}, {%r562, %r568, %r565, %r571}, {%r10940, %r11080}, {%r15157, %r15157};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11483, %r11486}, {%r562, %r568, %r565, %r571}, {%r10949, %r11087}, {%r15157, %r15157};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11489, %r11492}, {%r562, %r568, %r565, %r571}, {%r10958, %r11094}, {%r15157, %r15157};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11495, %r11498}, {%r562, %r568, %r565, %r571}, {%r10967, %r11101}, {%r15157, %r15157};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11501, %r11504}, {%r562, %r568, %r565, %r571}, {%r10976, %r11108}, {%r15157, %r15157};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11507, %r11510}, {%r562, %r568, %r565, %r571}, {%r10985, %r11115}, {%r15157, %r15157};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11513, %r11516}, {%r562, %r568, %r565, %r571}, {%r10994, %r11122}, {%r15157, %r15157};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11472, %r11475}, {%r562, %r568, %r565, %r571}, {%r11003, %r11129}, {%r15157, %r15157};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11478, %r11481}, {%r562, %r568, %r565, %r571}, {%r11012, %r11136}, {%r15157, %r15157};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11484, %r11487}, {%r562, %r568, %r565, %r571}, {%r11021, %r11143}, {%r15157, %r15157};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11490, %r11493}, {%r562, %r568, %r565, %r571}, {%r11030, %r11150}, {%r15157, %r15157};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11496, %r11499}, {%r562, %r568, %r565, %r571}, {%r11039, %r11157}, {%r15157, %r15157};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11502, %r11505}, {%r562, %r568, %r565, %r571}, {%r11048, %r11164}, {%r15157, %r15157};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11508, %r11511}, {%r562, %r568, %r565, %r571}, {%r11057, %r11171}, {%r15157, %r15157};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11514, %r11517}, {%r562, %r568, %r565, %r571}, {%r11066, %r11178}, {%r15157, %r15157};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11470, %r11471, %r11472;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11473, %r11474, %r11475;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11476, %r11477, %r11478;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11479, %r11480, %r11481;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11482, %r11483, %r11484;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11485, %r11486, %r11487;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11488, %r11489, %r11490;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11491, %r11492, %r11493;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11494, %r11495, %r11496;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11497, %r11498, %r11499;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11500, %r11501, %r11502;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11503, %r11504, %r11505;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11506, %r11507, %r11508;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11509, %r11510, %r11511;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11512, %r11513, %r11514;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11515, %r11516, %r11517;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11518, %r11471, %r11472;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11521, %r11474, %r11475;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11524, %r11477, %r11478;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11527, %r11480, %r11481;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11530, %r11483, %r11484;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11533, %r11486, %r11487;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11536, %r11489, %r11490;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11539, %r11492, %r11493;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11542, %r11495, %r11496;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11545, %r11498, %r11499;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11548, %r11501, %r11502;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11551, %r11504, %r11505;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11554, %r11507, %r11508;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11557, %r11510, %r11511;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11560, %r11513, %r11514;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11563, %r11516, %r11517;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11566, %r14, %r11470;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11569, %r14, %r11473;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11572, %r14, %r11476;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11575, %r14, %r11479;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11578, %r14, %r11482;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11581, %r14, %r11485;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11584, %r14, %r11488;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11587, %r14, %r11491;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11590, %r14, %r11494;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11593, %r14, %r11497;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11596, %r14, %r11500;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11599, %r14, %r11503;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11602, %r14, %r11506;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11605, %r14, %r11509;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11608, %r14, %r11512;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11611, %r14, %r11515;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11614, %r15, %r11518;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11617, %r15, %r11521;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11620, %r15, %r11524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11623, %r15, %r11527;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11626, %r15, %r11530;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11629, %r15, %r11533;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11632, %r15, %r11536;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11635, %r15, %r11539;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11638, %r15, %r11542;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11641, %r15, %r11545;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11644, %r15, %r11548;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11647, %r15, %r11551;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11650, %r15, %r11554;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11653, %r15, %r11557;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11656, %r15, %r11560;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11659, %r15, %r11563;
	// end inline asm
	// begin inline asm
	mov.b32 %r11662, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11663, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11664, %r11566, %r11662;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11667, %r11664, %r11663;
	// end inline asm
	// begin inline asm
	mov.b32 %r11670, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11671, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11672, %r11569, %r11670;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11675, %r11672, %r11671;
	// end inline asm
	// begin inline asm
	mov.b32 %r11678, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11679, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11680, %r11572, %r11678;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11683, %r11680, %r11679;
	// end inline asm
	// begin inline asm
	mov.b32 %r11686, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11687, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11688, %r11575, %r11686;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11691, %r11688, %r11687;
	// end inline asm
	// begin inline asm
	mov.b32 %r11694, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11695, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11696, %r11578, %r11694;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11699, %r11696, %r11695;
	// end inline asm
	// begin inline asm
	mov.b32 %r11702, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11703, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11704, %r11581, %r11702;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11707, %r11704, %r11703;
	// end inline asm
	// begin inline asm
	mov.b32 %r11710, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11711, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11712, %r11584, %r11710;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11715, %r11712, %r11711;
	// end inline asm
	// begin inline asm
	mov.b32 %r11718, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11719, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11720, %r11587, %r11718;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11723, %r11720, %r11719;
	// end inline asm
	// begin inline asm
	mov.b32 %r11726, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11727, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11728, %r11590, %r11726;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11731, %r11728, %r11727;
	// end inline asm
	// begin inline asm
	mov.b32 %r11734, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11735, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11736, %r11593, %r11734;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11739, %r11736, %r11735;
	// end inline asm
	// begin inline asm
	mov.b32 %r11742, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11743, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11744, %r11596, %r11742;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11747, %r11744, %r11743;
	// end inline asm
	// begin inline asm
	mov.b32 %r11750, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11751, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11752, %r11599, %r11750;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11755, %r11752, %r11751;
	// end inline asm
	// begin inline asm
	mov.b32 %r11758, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11759, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11760, %r11602, %r11758;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11763, %r11760, %r11759;
	// end inline asm
	// begin inline asm
	mov.b32 %r11766, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11767, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11768, %r11605, %r11766;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11771, %r11768, %r11767;
	// end inline asm
	// begin inline asm
	mov.b32 %r11774, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11775, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11776, %r11608, %r11774;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11779, %r11776, %r11775;
	// end inline asm
	// begin inline asm
	mov.b32 %r11782, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11783, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11784, %r11611, %r11782;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11787, %r11784, %r11783;
	// end inline asm
	// begin inline asm
	mov.b32 %r11790, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11791, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11792, %r11614, %r11790;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11795, %r11792, %r11791;
	// end inline asm
	// begin inline asm
	mov.b32 %r11798, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11799, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11800, %r11617, %r11798;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11803, %r11800, %r11799;
	// end inline asm
	// begin inline asm
	mov.b32 %r11806, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11807, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11808, %r11620, %r11806;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11811, %r11808, %r11807;
	// end inline asm
	// begin inline asm
	mov.b32 %r11814, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11815, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11816, %r11623, %r11814;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11819, %r11816, %r11815;
	// end inline asm
	// begin inline asm
	mov.b32 %r11822, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11823, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11824, %r11626, %r11822;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11827, %r11824, %r11823;
	// end inline asm
	// begin inline asm
	mov.b32 %r11830, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11831, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11832, %r11629, %r11830;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11835, %r11832, %r11831;
	// end inline asm
	// begin inline asm
	mov.b32 %r11838, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11839, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11840, %r11632, %r11838;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11843, %r11840, %r11839;
	// end inline asm
	// begin inline asm
	mov.b32 %r11846, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11847, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11848, %r11635, %r11846;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11851, %r11848, %r11847;
	// end inline asm
	// begin inline asm
	mov.b32 %r11854, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11855, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11856, %r11638, %r11854;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11859, %r11856, %r11855;
	// end inline asm
	// begin inline asm
	mov.b32 %r11862, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11863, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11864, %r11641, %r11862;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11867, %r11864, %r11863;
	// end inline asm
	// begin inline asm
	mov.b32 %r11870, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11871, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11872, %r11644, %r11870;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11875, %r11872, %r11871;
	// end inline asm
	// begin inline asm
	mov.b32 %r11878, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11879, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11880, %r11647, %r11878;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11883, %r11880, %r11879;
	// end inline asm
	// begin inline asm
	mov.b32 %r11886, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11887, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11888, %r11650, %r11886;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11891, %r11888, %r11887;
	// end inline asm
	// begin inline asm
	mov.b32 %r11894, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11895, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11896, %r11653, %r11894;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11899, %r11896, %r11895;
	// end inline asm
	// begin inline asm
	mov.b32 %r11902, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11903, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11904, %r11656, %r11902;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11907, %r11904, %r11903;
	// end inline asm
	// begin inline asm
	mov.b32 %r11910, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11911, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11912, %r11659, %r11910;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11915, %r11912, %r11911;
	// end inline asm
	// begin inline asm
	mov.b32 %r11921, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r11919, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11920, %r11921, %r11919;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11923, %r11667, %r11920;
	// end inline asm
	// begin inline asm
	mov.b32 %r11926, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11927, %r11921, %r11926;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11930, %r11675, %r11927;
	// end inline asm
	// begin inline asm
	mov.b32 %r11933, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11934, %r11921, %r11933;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11937, %r11683, %r11934;
	// end inline asm
	// begin inline asm
	mov.b32 %r11940, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11941, %r11921, %r11940;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11944, %r11691, %r11941;
	// end inline asm
	// begin inline asm
	prmt.b32 %r11947, %r11923, %r11937, %r4318;
	// end inline asm
	// begin inline asm
	prmt.b32 %r11951, %r11930, %r11944, %r4318;
	// end inline asm
	shl.b32 	%r11958, %r11951, 4;
	// begin inline asm
	lop3.b32 %r11955, %r4324, %r11947, %r11958, 202;
	// end inline asm
	xor.b32  	%r16086, %r11955, -2004318072;
	// begin inline asm
	mov.b32 %r11962, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r11960, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11961, %r11962, %r11960;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11964, %r11699, %r11961;
	// end inline asm
	// begin inline asm
	mov.b32 %r11967, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11968, %r11962, %r11967;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11971, %r11707, %r11968;
	// end inline asm
	// begin inline asm
	mov.b32 %r11974, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11975, %r11962, %r11974;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11978, %r11715, %r11975;
	// end inline asm
	// begin inline asm
	mov.b32 %r11981, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11982, %r11962, %r11981;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11985, %r11723, %r11982;
	// end inline asm
	// begin inline asm
	prmt.b32 %r11988, %r11964, %r11978, %r4318;
	// end inline asm
	// begin inline asm
	prmt.b32 %r11992, %r11971, %r11985, %r4318;
	// end inline asm
	shl.b32 	%r11999, %r11992, 4;
	// begin inline asm
	lop3.b32 %r11996, %r4324, %r11988, %r11999, 202;
	// end inline asm
	xor.b32  	%r16087, %r11996, -2004318072;
	// begin inline asm
	mov.b32 %r12003, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12001, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12002, %r12003, %r12001;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12005, %r11731, %r12002;
	// end inline asm
	// begin inline asm
	mov.b32 %r12008, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12009, %r12003, %r12008;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12012, %r11739, %r12009;
	// end inline asm
	// begin inline asm
	mov.b32 %r12015, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12016, %r12003, %r12015;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12019, %r11747, %r12016;
	// end inline asm
	// begin inline asm
	mov.b32 %r12022, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12023, %r12003, %r12022;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12026, %r11755, %r12023;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12029, %r12005, %r12019, %r4318;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12033, %r12012, %r12026, %r4318;
	// end inline asm
	shl.b32 	%r12040, %r12033, 4;
	// begin inline asm
	lop3.b32 %r12037, %r4324, %r12029, %r12040, 202;
	// end inline asm
	xor.b32  	%r16088, %r12037, -2004318072;
	// begin inline asm
	mov.b32 %r12044, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12042, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12043, %r12044, %r12042;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12046, %r11763, %r12043;
	// end inline asm
	// begin inline asm
	mov.b32 %r12049, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12050, %r12044, %r12049;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12053, %r11771, %r12050;
	// end inline asm
	// begin inline asm
	mov.b32 %r12056, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12057, %r12044, %r12056;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12060, %r11779, %r12057;
	// end inline asm
	// begin inline asm
	mov.b32 %r12063, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12064, %r12044, %r12063;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12067, %r11787, %r12064;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12070, %r12046, %r12060, %r4318;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12074, %r12053, %r12067, %r4318;
	// end inline asm
	shl.b32 	%r12081, %r12074, 4;
	// begin inline asm
	lop3.b32 %r12078, %r4324, %r12070, %r12081, 202;
	// end inline asm
	xor.b32  	%r16089, %r12078, -2004318072;
	// begin inline asm
	mov.b32 %r12085, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12083, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12084, %r12085, %r12083;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12087, %r11795, %r12084;
	// end inline asm
	// begin inline asm
	mov.b32 %r12090, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12091, %r12085, %r12090;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12094, %r11803, %r12091;
	// end inline asm
	// begin inline asm
	mov.b32 %r12097, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12098, %r12085, %r12097;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12101, %r11811, %r12098;
	// end inline asm
	// begin inline asm
	mov.b32 %r12104, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12105, %r12085, %r12104;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12108, %r11819, %r12105;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12111, %r12087, %r12101, %r4318;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12115, %r12094, %r12108, %r4318;
	// end inline asm
	shl.b32 	%r12122, %r12115, 4;
	// begin inline asm
	lop3.b32 %r12119, %r4324, %r12111, %r12122, 202;
	// end inline asm
	xor.b32  	%r16090, %r12119, -2004318072;
	// begin inline asm
	mov.b32 %r12126, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12124, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12125, %r12126, %r12124;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12128, %r11827, %r12125;
	// end inline asm
	// begin inline asm
	mov.b32 %r12131, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12132, %r12126, %r12131;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12135, %r11835, %r12132;
	// end inline asm
	// begin inline asm
	mov.b32 %r12138, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12139, %r12126, %r12138;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12142, %r11843, %r12139;
	// end inline asm
	// begin inline asm
	mov.b32 %r12145, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12146, %r12126, %r12145;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12149, %r11851, %r12146;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12152, %r12128, %r12142, %r4318;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12156, %r12135, %r12149, %r4318;
	// end inline asm
	shl.b32 	%r12163, %r12156, 4;
	// begin inline asm
	lop3.b32 %r12160, %r4324, %r12152, %r12163, 202;
	// end inline asm
	xor.b32  	%r16091, %r12160, -2004318072;
	// begin inline asm
	mov.b32 %r12167, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12165, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12166, %r12167, %r12165;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12169, %r11859, %r12166;
	// end inline asm
	// begin inline asm
	mov.b32 %r12172, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12173, %r12167, %r12172;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12176, %r11867, %r12173;
	// end inline asm
	// begin inline asm
	mov.b32 %r12179, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12180, %r12167, %r12179;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12183, %r11875, %r12180;
	// end inline asm
	// begin inline asm
	mov.b32 %r12186, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12187, %r12167, %r12186;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12190, %r11883, %r12187;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12193, %r12169, %r12183, %r4318;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12197, %r12176, %r12190, %r4318;
	// end inline asm
	shl.b32 	%r12204, %r12197, 4;
	// begin inline asm
	lop3.b32 %r12201, %r4324, %r12193, %r12204, 202;
	// end inline asm
	xor.b32  	%r16092, %r12201, -2004318072;
	// begin inline asm
	mov.b32 %r12208, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12206, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12207, %r12208, %r12206;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12210, %r11891, %r12207;
	// end inline asm
	// begin inline asm
	mov.b32 %r12213, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12214, %r12208, %r12213;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12217, %r11899, %r12214;
	// end inline asm
	// begin inline asm
	mov.b32 %r12220, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12221, %r12208, %r12220;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12224, %r11907, %r12221;
	// end inline asm
	// begin inline asm
	mov.b32 %r12227, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12228, %r12208, %r12227;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12231, %r11915, %r12228;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12234, %r12210, %r12224, %r4318;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12238, %r12217, %r12231, %r4318;
	// end inline asm
	shl.b32 	%r12245, %r12238, 4;
	// begin inline asm
	lop3.b32 %r12242, %r4324, %r12234, %r12245, 202;
	// end inline asm
	xor.b32  	%r16093, %r12242, -2004318072;
	st.shared.u32 	[%rd82], %r16086;
	st.shared.u32 	[%rd83], %r16087;
	st.shared.u32 	[%rd84], %r16088;
	st.shared.u32 	[%rd85], %r16089;
	st.shared.u32 	[%rd86], %r16090;
	st.shared.u32 	[%rd87], %r16091;
	st.shared.u32 	[%rd88], %r16092;
	st.shared.u32 	[%rd89], %r16093;
	ld.shared.u32 	%r16204, [%rd74];
	ld.shared.u32 	%r16205, [%rd75];
	ld.shared.u32 	%r16206, [%rd76];
	ld.shared.u32 	%r16207, [%rd77];
	ld.shared.u32 	%r16216, [%rd78];
	ld.shared.u32 	%r16217, [%rd79];
	ld.shared.u32 	%r16218, [%rd80];
	ld.shared.u32 	%r16219, [%rd81];
	// begin inline asm
	mov.b32 %r12251, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12262, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12250, %r16204, -2004318072;
	// begin inline asm
	lop3.b32 %r12248, %r801, %r12250, %r12251, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12252, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12253, %r12251, %r12252;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12256, %r12248, %r12253;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12259, %r812, %r12250, %r12262, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12263, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12264, %r12262, %r12263;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12267, %r12259, %r12264;
	// end inline asm
	shr.u32 	%r12272, %r12250, 8;
	// begin inline asm
	lop3.b32 %r12270, %r801, %r12272, %r12251, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12274, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12275, %r12251, %r12274;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12278, %r12270, %r12275;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12281, %r812, %r12272, %r12262, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12285, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12286, %r12262, %r12285;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12289, %r12281, %r12286;
	// end inline asm
	// begin inline asm
	mov.b32 %r12297, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12308, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12296, %r16205, -2004318072;
	// begin inline asm
	lop3.b32 %r12294, %r801, %r12296, %r12297, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12298, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12299, %r12297, %r12298;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12302, %r12294, %r12299;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12305, %r812, %r12296, %r12308, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12309, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12310, %r12308, %r12309;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12313, %r12305, %r12310;
	// end inline asm
	shr.u32 	%r12318, %r12296, 8;
	// begin inline asm
	lop3.b32 %r12316, %r801, %r12318, %r12297, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12320, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12321, %r12297, %r12320;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12324, %r12316, %r12321;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12327, %r812, %r12318, %r12308, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12331, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12332, %r12308, %r12331;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12335, %r12327, %r12332;
	// end inline asm
	// begin inline asm
	mov.b32 %r12343, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12354, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12342, %r16206, -2004318072;
	// begin inline asm
	lop3.b32 %r12340, %r801, %r12342, %r12343, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12344, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12345, %r12343, %r12344;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12348, %r12340, %r12345;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12351, %r812, %r12342, %r12354, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12355, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12356, %r12354, %r12355;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12359, %r12351, %r12356;
	// end inline asm
	shr.u32 	%r12364, %r12342, 8;
	// begin inline asm
	lop3.b32 %r12362, %r801, %r12364, %r12343, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12366, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12367, %r12343, %r12366;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12370, %r12362, %r12367;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12373, %r812, %r12364, %r12354, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12377, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12378, %r12354, %r12377;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12381, %r12373, %r12378;
	// end inline asm
	// begin inline asm
	mov.b32 %r12389, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12400, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12388, %r16207, -2004318072;
	// begin inline asm
	lop3.b32 %r12386, %r801, %r12388, %r12389, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12390, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12391, %r12389, %r12390;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12394, %r12386, %r12391;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12397, %r812, %r12388, %r12400, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12401, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12402, %r12400, %r12401;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12405, %r12397, %r12402;
	// end inline asm
	shr.u32 	%r12410, %r12388, 8;
	// begin inline asm
	lop3.b32 %r12408, %r801, %r12410, %r12389, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12412, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12413, %r12389, %r12412;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12416, %r12408, %r12413;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12419, %r812, %r12410, %r12400, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12423, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12424, %r12400, %r12423;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12427, %r12419, %r12424;
	// end inline asm
	// begin inline asm
	mov.b32 %r12435, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12446, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12434, %r16216, -2004318072;
	// begin inline asm
	lop3.b32 %r12432, %r801, %r12434, %r12435, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12436, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12437, %r12435, %r12436;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12440, %r12432, %r12437;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12443, %r812, %r12434, %r12446, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12447, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12448, %r12446, %r12447;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12451, %r12443, %r12448;
	// end inline asm
	shr.u32 	%r12456, %r12434, 8;
	// begin inline asm
	lop3.b32 %r12454, %r801, %r12456, %r12435, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12458, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12459, %r12435, %r12458;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12462, %r12454, %r12459;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12465, %r812, %r12456, %r12446, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12469, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12470, %r12446, %r12469;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12473, %r12465, %r12470;
	// end inline asm
	// begin inline asm
	mov.b32 %r12481, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12492, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12480, %r16217, -2004318072;
	// begin inline asm
	lop3.b32 %r12478, %r801, %r12480, %r12481, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12482, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12483, %r12481, %r12482;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12486, %r12478, %r12483;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12489, %r812, %r12480, %r12492, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12493, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12494, %r12492, %r12493;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12497, %r12489, %r12494;
	// end inline asm
	shr.u32 	%r12502, %r12480, 8;
	// begin inline asm
	lop3.b32 %r12500, %r801, %r12502, %r12481, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12504, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12505, %r12481, %r12504;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12508, %r12500, %r12505;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12511, %r812, %r12502, %r12492, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12515, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12516, %r12492, %r12515;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12519, %r12511, %r12516;
	// end inline asm
	// begin inline asm
	mov.b32 %r12527, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12538, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12526, %r16218, -2004318072;
	// begin inline asm
	lop3.b32 %r12524, %r801, %r12526, %r12527, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12528, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12529, %r12527, %r12528;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12532, %r12524, %r12529;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12535, %r812, %r12526, %r12538, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12539, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12540, %r12538, %r12539;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12543, %r12535, %r12540;
	// end inline asm
	shr.u32 	%r12548, %r12526, 8;
	// begin inline asm
	lop3.b32 %r12546, %r801, %r12548, %r12527, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12550, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12551, %r12527, %r12550;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12554, %r12546, %r12551;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12557, %r812, %r12548, %r12538, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12561, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12562, %r12538, %r12561;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12565, %r12557, %r12562;
	// end inline asm
	// begin inline asm
	mov.b32 %r12573, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12584, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12572, %r16219, -2004318072;
	// begin inline asm
	lop3.b32 %r12570, %r801, %r12572, %r12573, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12574, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12575, %r12573, %r12574;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12578, %r12570, %r12575;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12581, %r812, %r12572, %r12584, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12585, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12586, %r12584, %r12585;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12589, %r12581, %r12586;
	// end inline asm
	shr.u32 	%r12594, %r12572, 8;
	// begin inline asm
	lop3.b32 %r12592, %r801, %r12594, %r12573, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12596, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12597, %r12573, %r12596;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12600, %r12592, %r12597;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12603, %r812, %r12594, %r12584, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12607, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12608, %r12584, %r12607;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12611, %r12603, %r12608;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12614, %r378;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12616, %r12614, %r12256;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12619, %r378;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12621, %r12619, %r12267;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12624, %r378;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12626, %r12624, %r12278;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12629, %r378;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12631, %r12629, %r12289;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12634, %r378;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12636, %r12634, %r12302;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12639, %r378;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12641, %r12639, %r12313;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12644, %r378;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12646, %r12644, %r12324;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12649, %r378;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12651, %r12649, %r12335;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12654, %r378;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12656, %r12654, %r12348;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12659, %r378;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12661, %r12659, %r12359;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12664, %r378;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12666, %r12664, %r12370;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12669, %r378;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12671, %r12669, %r12381;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12674, %r378;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12676, %r12674, %r12394;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12679, %r378;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12681, %r12679, %r12405;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12684, %r378;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12686, %r12684, %r12416;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12689, %r378;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12691, %r12689, %r12427;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12694, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12696, %r12694, %r12440;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12699, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12701, %r12699, %r12451;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12704, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12706, %r12704, %r12462;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12709, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12711, %r12709, %r12473;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12714, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12716, %r12714, %r12486;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12719, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12721, %r12719, %r12497;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12724, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12726, %r12724, %r12508;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12729, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12731, %r12729, %r12519;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12734, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12736, %r12734, %r12532;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12739, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12741, %r12739, %r12543;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12744, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12746, %r12744, %r12554;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12749, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12751, %r12749, %r12565;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12754, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12756, %r12754, %r12578;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12759, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12761, %r12759, %r12589;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12764, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12766, %r12764, %r12600;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12769, %r396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12771, %r12769, %r12611;
	// end inline asm
	// begin inline asm
	mov.b32 %r12779, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12790, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12776, %r801, %r802, %r12779, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12780, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12781, %r12779, %r12780;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12784, %r12776, %r12781;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12787, %r812, %r802, %r12790, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12791, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12792, %r12790, %r12791;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12795, %r12787, %r12792;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12798, %r801, %r824, %r12779, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12802, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12803, %r12779, %r12802;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12806, %r12798, %r12803;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12809, %r812, %r824, %r12790, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12813, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12814, %r12790, %r12813;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12817, %r12809, %r12814;
	// end inline asm
	// begin inline asm
	mov.b32 %r12825, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12836, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12822, %r801, %r848, %r12825, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12826, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12827, %r12825, %r12826;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12830, %r12822, %r12827;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12833, %r812, %r848, %r12836, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12837, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12838, %r12836, %r12837;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12841, %r12833, %r12838;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12844, %r801, %r870, %r12825, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12848, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12849, %r12825, %r12848;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12852, %r12844, %r12849;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12855, %r812, %r870, %r12836, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12859, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12860, %r12836, %r12859;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12863, %r12855, %r12860;
	// end inline asm
	// begin inline asm
	mov.b32 %r12871, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12882, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12868, %r801, %r894, %r12871, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12872, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12873, %r12871, %r12872;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12876, %r12868, %r12873;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12879, %r812, %r894, %r12882, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12883, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12884, %r12882, %r12883;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12887, %r12879, %r12884;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12890, %r801, %r916, %r12871, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12894, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12895, %r12871, %r12894;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12898, %r12890, %r12895;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12901, %r812, %r916, %r12882, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12905, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12906, %r12882, %r12905;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12909, %r12901, %r12906;
	// end inline asm
	// begin inline asm
	mov.b32 %r12917, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12928, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12914, %r801, %r940, %r12917, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12918, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12919, %r12917, %r12918;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12922, %r12914, %r12919;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12925, %r812, %r940, %r12928, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12929, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12930, %r12928, %r12929;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12933, %r12925, %r12930;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12936, %r801, %r962, %r12917, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12940, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12941, %r12917, %r12940;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12944, %r12936, %r12941;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12947, %r812, %r962, %r12928, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12951, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12952, %r12928, %r12951;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12955, %r12947, %r12952;
	// end inline asm
	// begin inline asm
	mov.b32 %r12963, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12974, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12960, %r801, %r986, %r12963, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12964, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12965, %r12963, %r12964;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12968, %r12960, %r12965;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12971, %r812, %r986, %r12974, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12975, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12976, %r12974, %r12975;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12979, %r12971, %r12976;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12982, %r801, %r1008, %r12963, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12986, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12987, %r12963, %r12986;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12990, %r12982, %r12987;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12993, %r812, %r1008, %r12974, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12997, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12998, %r12974, %r12997;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13001, %r12993, %r12998;
	// end inline asm
	// begin inline asm
	mov.b32 %r13009, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13020, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13006, %r801, %r1032, %r13009, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13010, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13011, %r13009, %r13010;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13014, %r13006, %r13011;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13017, %r812, %r1032, %r13020, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13021, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13022, %r13020, %r13021;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13025, %r13017, %r13022;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13028, %r801, %r1054, %r13009, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13032, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13033, %r13009, %r13032;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13036, %r13028, %r13033;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13039, %r812, %r1054, %r13020, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13043, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13044, %r13020, %r13043;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13047, %r13039, %r13044;
	// end inline asm
	// begin inline asm
	mov.b32 %r13055, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13066, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13052, %r801, %r1078, %r13055, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13056, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13057, %r13055, %r13056;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13060, %r13052, %r13057;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13063, %r812, %r1078, %r13066, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13067, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13068, %r13066, %r13067;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13071, %r13063, %r13068;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13074, %r801, %r1100, %r13055, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13078, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13079, %r13055, %r13078;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13082, %r13074, %r13079;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13085, %r812, %r1100, %r13066, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13089, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13090, %r13066, %r13089;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13093, %r13085, %r13090;
	// end inline asm
	// begin inline asm
	mov.b32 %r13101, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13112, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13098, %r801, %r1124, %r13101, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13102, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13103, %r13101, %r13102;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13106, %r13098, %r13103;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13109, %r812, %r1124, %r13112, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13113, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13114, %r13112, %r13113;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13117, %r13109, %r13114;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13120, %r801, %r1146, %r13101, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13124, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13125, %r13101, %r13124;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13128, %r13120, %r13125;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13131, %r812, %r1146, %r13112, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13135, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13136, %r13112, %r13135;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13139, %r13131, %r13136;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13142, %r270, %r12784, %r12616;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13146, %r270, %r12795, %r12621;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13150, %r270, %r12806, %r12626;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13154, %r270, %r12817, %r12631;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13158, %r270, %r12830, %r12636;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13162, %r270, %r12841, %r12641;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13166, %r270, %r12852, %r12646;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13170, %r270, %r12863, %r12651;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13174, %r270, %r12876, %r12656;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13178, %r270, %r12887, %r12661;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13182, %r270, %r12898, %r12666;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13186, %r270, %r12909, %r12671;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13190, %r270, %r12922, %r12676;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13194, %r270, %r12933, %r12681;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13198, %r270, %r12944, %r12686;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13202, %r270, %r12955, %r12691;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13206, %r288, %r12968, %r12696;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13210, %r288, %r12979, %r12701;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13214, %r288, %r12990, %r12706;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13218, %r288, %r13001, %r12711;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13222, %r288, %r13014, %r12716;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13226, %r288, %r13025, %r12721;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13230, %r288, %r13036, %r12726;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13234, %r288, %r13047, %r12731;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13238, %r288, %r13060, %r12736;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13242, %r288, %r13071, %r12741;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13246, %r288, %r13082, %r12746;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13250, %r288, %r13093, %r12751;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13254, %r288, %r13106, %r12756;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13258, %r288, %r13117, %r12761;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13262, %r288, %r13128, %r12766;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13266, %r288, %r13139, %r12771;
	// end inline asm
	// begin inline asm
	mov.b32 %r13275, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13286, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13272, %r801, %r4618, %r13275, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13276, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13277, %r13275, %r13276;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13280, %r13272, %r13277;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13283, %r812, %r4618, %r13286, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13287, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13288, %r13286, %r13287;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13291, %r13283, %r13288;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13294, %r801, %r4640, %r13275, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13298, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13299, %r13275, %r13298;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13302, %r13294, %r13299;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13305, %r812, %r4640, %r13286, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13309, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13310, %r13286, %r13309;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13313, %r13305, %r13310;
	// end inline asm
	// begin inline asm
	mov.b32 %r13321, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13332, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13318, %r801, %r4664, %r13321, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13322, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13323, %r13321, %r13322;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13326, %r13318, %r13323;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13329, %r812, %r4664, %r13332, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13333, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13334, %r13332, %r13333;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13337, %r13329, %r13334;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13340, %r801, %r4686, %r13321, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13344, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13345, %r13321, %r13344;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13348, %r13340, %r13345;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13351, %r812, %r4686, %r13332, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13355, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13356, %r13332, %r13355;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13359, %r13351, %r13356;
	// end inline asm
	// begin inline asm
	mov.b32 %r13367, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13378, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13364, %r801, %r4710, %r13367, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13368, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13369, %r13367, %r13368;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13372, %r13364, %r13369;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13375, %r812, %r4710, %r13378, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13379, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13380, %r13378, %r13379;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13383, %r13375, %r13380;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13386, %r801, %r4732, %r13367, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13390, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13391, %r13367, %r13390;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13394, %r13386, %r13391;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13397, %r812, %r4732, %r13378, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13401, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13402, %r13378, %r13401;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13405, %r13397, %r13402;
	// end inline asm
	// begin inline asm
	mov.b32 %r13413, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13424, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13410, %r801, %r4756, %r13413, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13414, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13415, %r13413, %r13414;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13418, %r13410, %r13415;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13421, %r812, %r4756, %r13424, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13425, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13426, %r13424, %r13425;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13429, %r13421, %r13426;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13432, %r801, %r4778, %r13413, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13436, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13437, %r13413, %r13436;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13440, %r13432, %r13437;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13443, %r812, %r4778, %r13424, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13447, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13448, %r13424, %r13447;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13451, %r13443, %r13448;
	// end inline asm
	// begin inline asm
	mov.b32 %r13459, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13470, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13456, %r801, %r4802, %r13459, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13460, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13461, %r13459, %r13460;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13464, %r13456, %r13461;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13467, %r812, %r4802, %r13470, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13471, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13472, %r13470, %r13471;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13475, %r13467, %r13472;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13478, %r801, %r4824, %r13459, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13482, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13483, %r13459, %r13482;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13486, %r13478, %r13483;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13489, %r812, %r4824, %r13470, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13493, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13494, %r13470, %r13493;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13497, %r13489, %r13494;
	// end inline asm
	// begin inline asm
	mov.b32 %r13505, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13516, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13502, %r801, %r4848, %r13505, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13506, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13507, %r13505, %r13506;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13510, %r13502, %r13507;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13513, %r812, %r4848, %r13516, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13517, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13518, %r13516, %r13517;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13521, %r13513, %r13518;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13524, %r801, %r4870, %r13505, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13528, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13529, %r13505, %r13528;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13532, %r13524, %r13529;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13535, %r812, %r4870, %r13516, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13539, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13540, %r13516, %r13539;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13543, %r13535, %r13540;
	// end inline asm
	// begin inline asm
	mov.b32 %r13551, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13562, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13548, %r801, %r4894, %r13551, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13552, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13553, %r13551, %r13552;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13556, %r13548, %r13553;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13559, %r812, %r4894, %r13562, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13563, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13564, %r13562, %r13563;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13567, %r13559, %r13564;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13570, %r801, %r4916, %r13551, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13574, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13575, %r13551, %r13574;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13578, %r13570, %r13575;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13581, %r812, %r4916, %r13562, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13585, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13586, %r13562, %r13585;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13589, %r13581, %r13586;
	// end inline asm
	// begin inline asm
	mov.b32 %r13597, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13608, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13594, %r801, %r4940, %r13597, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13598, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13599, %r13597, %r13598;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13602, %r13594, %r13599;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13605, %r812, %r4940, %r13608, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13609, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13610, %r13608, %r13609;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13613, %r13605, %r13610;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13616, %r801, %r4962, %r13597, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13620, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13621, %r13597, %r13620;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13624, %r13616, %r13621;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13627, %r812, %r4962, %r13608, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13631, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13632, %r13608, %r13631;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13635, %r13627, %r13632;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13638, %r306;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13640, %r13638, %r13280, %r13142;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13644, %r306;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13646, %r13644, %r13291, %r13146;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13650, %r306;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13652, %r13650, %r13302, %r13150;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13656, %r306;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13658, %r13656, %r13313, %r13154;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13662, %r306;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13664, %r13662, %r13326, %r13158;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13668, %r306;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13670, %r13668, %r13337, %r13162;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13674, %r306;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13676, %r13674, %r13348, %r13166;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13680, %r306;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13682, %r13680, %r13359, %r13170;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13686, %r306;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13688, %r13686, %r13372, %r13174;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13692, %r306;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13694, %r13692, %r13383, %r13178;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13698, %r306;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13700, %r13698, %r13394, %r13182;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13704, %r306;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13706, %r13704, %r13405, %r13186;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13710, %r306;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13712, %r13710, %r13418, %r13190;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13716, %r306;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13718, %r13716, %r13429, %r13194;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13722, %r306;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13724, %r13722, %r13440, %r13198;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13728, %r306;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13730, %r13728, %r13451, %r13202;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13734, %r324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13736, %r13734, %r13464, %r13206;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13740, %r324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13742, %r13740, %r13475, %r13210;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13746, %r324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13748, %r13746, %r13486, %r13214;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13752, %r324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13754, %r13752, %r13497, %r13218;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13758, %r324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13760, %r13758, %r13510, %r13222;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13764, %r324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13766, %r13764, %r13521, %r13226;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13770, %r324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13772, %r13770, %r13532, %r13230;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13776, %r324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13778, %r13776, %r13543, %r13234;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13782, %r324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13784, %r13782, %r13556, %r13238;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13788, %r324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13790, %r13788, %r13567, %r13242;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13794, %r324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13796, %r13794, %r13578, %r13246;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13800, %r324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13802, %r13800, %r13589, %r13250;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13806, %r324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13808, %r13806, %r13602, %r13254;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13812, %r324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13814, %r13812, %r13613, %r13258;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13818, %r324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13820, %r13818, %r13624, %r13262;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13824, %r324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13826, %r13824, %r13635, %r13266;
	// end inline asm
	// begin inline asm
	mov.b32 %r13835, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13846, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13832, %r801, %r8434, %r13835, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13836, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13837, %r13835, %r13836;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13840, %r13832, %r13837;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13843, %r812, %r8434, %r13846, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13847, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13848, %r13846, %r13847;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13851, %r13843, %r13848;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13854, %r801, %r8456, %r13835, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13858, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13859, %r13835, %r13858;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13862, %r13854, %r13859;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13865, %r812, %r8456, %r13846, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13869, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13870, %r13846, %r13869;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13873, %r13865, %r13870;
	// end inline asm
	// begin inline asm
	mov.b32 %r13881, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13892, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13878, %r801, %r8480, %r13881, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13882, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13883, %r13881, %r13882;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13886, %r13878, %r13883;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13889, %r812, %r8480, %r13892, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13893, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13894, %r13892, %r13893;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13897, %r13889, %r13894;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13900, %r801, %r8502, %r13881, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13904, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13905, %r13881, %r13904;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13908, %r13900, %r13905;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13911, %r812, %r8502, %r13892, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13915, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13916, %r13892, %r13915;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13919, %r13911, %r13916;
	// end inline asm
	// begin inline asm
	mov.b32 %r13927, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13938, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13924, %r801, %r8526, %r13927, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13928, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13929, %r13927, %r13928;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13932, %r13924, %r13929;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13935, %r812, %r8526, %r13938, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13939, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13940, %r13938, %r13939;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13943, %r13935, %r13940;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13946, %r801, %r8548, %r13927, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13950, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13951, %r13927, %r13950;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13954, %r13946, %r13951;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13957, %r812, %r8548, %r13938, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13961, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13962, %r13938, %r13961;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13965, %r13957, %r13962;
	// end inline asm
	// begin inline asm
	mov.b32 %r13973, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13984, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13970, %r801, %r8572, %r13973, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13974, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13975, %r13973, %r13974;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13978, %r13970, %r13975;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13981, %r812, %r8572, %r13984, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13985, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13986, %r13984, %r13985;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13989, %r13981, %r13986;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13992, %r801, %r8594, %r13973, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13996, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13997, %r13973, %r13996;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14000, %r13992, %r13997;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14003, %r812, %r8594, %r13984, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14007, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14008, %r13984, %r14007;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14011, %r14003, %r14008;
	// end inline asm
	// begin inline asm
	mov.b32 %r14019, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r14030, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14016, %r801, %r8618, %r14019, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14020, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14021, %r14019, %r14020;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14024, %r14016, %r14021;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14027, %r812, %r8618, %r14030, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14031, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14032, %r14030, %r14031;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14035, %r14027, %r14032;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14038, %r801, %r8640, %r14019, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14042, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14043, %r14019, %r14042;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14046, %r14038, %r14043;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14049, %r812, %r8640, %r14030, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14053, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14054, %r14030, %r14053;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14057, %r14049, %r14054;
	// end inline asm
	// begin inline asm
	mov.b32 %r14065, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r14076, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14062, %r801, %r8664, %r14065, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14066, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14067, %r14065, %r14066;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14070, %r14062, %r14067;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14073, %r812, %r8664, %r14076, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14077, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14078, %r14076, %r14077;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14081, %r14073, %r14078;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14084, %r801, %r8686, %r14065, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14088, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14089, %r14065, %r14088;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14092, %r14084, %r14089;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14095, %r812, %r8686, %r14076, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14099, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14100, %r14076, %r14099;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14103, %r14095, %r14100;
	// end inline asm
	// begin inline asm
	mov.b32 %r14111, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r14122, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14108, %r801, %r8710, %r14111, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14112, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14113, %r14111, %r14112;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14116, %r14108, %r14113;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14119, %r812, %r8710, %r14122, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14123, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14124, %r14122, %r14123;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14127, %r14119, %r14124;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14130, %r801, %r8732, %r14111, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14134, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14135, %r14111, %r14134;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14138, %r14130, %r14135;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14141, %r812, %r8732, %r14122, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14145, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14146, %r14122, %r14145;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14149, %r14141, %r14146;
	// end inline asm
	// begin inline asm
	mov.b32 %r14157, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r14168, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14154, %r801, %r8756, %r14157, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14158, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14159, %r14157, %r14158;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14162, %r14154, %r14159;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14165, %r812, %r8756, %r14168, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14169, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14170, %r14168, %r14169;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14173, %r14165, %r14170;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14176, %r801, %r8778, %r14157, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14180, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14181, %r14157, %r14180;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14184, %r14176, %r14181;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14187, %r812, %r8778, %r14168, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14191, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14192, %r14168, %r14191;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14195, %r14187, %r14192;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14333, %r342, %r13840, %r13640;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14330, %r342, %r13851, %r13646;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14342, %r342, %r13862, %r13652;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14339, %r342, %r13873, %r13658;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14351, %r342, %r13886, %r13664;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14348, %r342, %r13897, %r13670;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14360, %r342, %r13908, %r13676;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14357, %r342, %r13919, %r13682;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14369, %r342, %r13932, %r13688;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14366, %r342, %r13943, %r13694;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14378, %r342, %r13954, %r13700;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14375, %r342, %r13965, %r13706;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14387, %r342, %r13978, %r13712;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14384, %r342, %r13989, %r13718;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14396, %r342, %r14000, %r13724;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14393, %r342, %r14011, %r13730;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14405, %r360, %r14024, %r13736;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14402, %r360, %r14035, %r13742;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14414, %r360, %r14046, %r13748;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14411, %r360, %r14057, %r13754;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14423, %r360, %r14070, %r13760;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14420, %r360, %r14081, %r13766;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14432, %r360, %r14092, %r13772;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14429, %r360, %r14103, %r13778;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14441, %r360, %r14116, %r13784;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14438, %r360, %r14127, %r13790;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14450, %r360, %r14138, %r13796;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14447, %r360, %r14149, %r13802;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14459, %r360, %r14162, %r13808;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14456, %r360, %r14173, %r13814;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14468, %r360, %r14184, %r13820;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14465, %r360, %r14195, %r13826;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14326, %r430;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14328, %r14326, %r14330;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14331, %r424, %r14333, %r14328;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14335, %r430;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14337, %r14335, %r14339;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14340, %r424, %r14342, %r14337;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14344, %r430;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14346, %r14344, %r14348;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14349, %r424, %r14351, %r14346;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14353, %r430;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14355, %r14353, %r14357;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14358, %r424, %r14360, %r14355;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14362, %r430;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14364, %r14362, %r14366;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14367, %r424, %r14369, %r14364;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14371, %r430;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14373, %r14371, %r14375;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14376, %r424, %r14378, %r14373;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14380, %r430;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14382, %r14380, %r14384;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14385, %r424, %r14387, %r14382;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14389, %r430;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14391, %r14389, %r14393;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14394, %r424, %r14396, %r14391;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14398, %r433;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14400, %r14398, %r14402;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14403, %r427, %r14405, %r14400;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14407, %r433;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14409, %r14407, %r14411;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14412, %r427, %r14414, %r14409;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14416, %r433;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14418, %r14416, %r14420;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14421, %r427, %r14423, %r14418;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14425, %r433;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14427, %r14425, %r14429;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14430, %r427, %r14432, %r14427;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14434, %r433;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14436, %r14434, %r14438;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14439, %r427, %r14441, %r14436;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14443, %r433;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14445, %r14443, %r14447;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14448, %r427, %r14450, %r14445;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14452, %r433;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14454, %r14452, %r14456;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14457, %r427, %r14459, %r14454;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14461, %r433;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14463, %r14461, %r14465;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14466, %r427, %r14468, %r14463;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14470, %r430, %r14333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14473, %r424, %r14330, %r14470;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14477, %r430, %r14342;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14480, %r424, %r14339, %r14477;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14484, %r430, %r14351;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14487, %r424, %r14348, %r14484;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14491, %r430, %r14360;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14494, %r424, %r14357, %r14491;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14498, %r430, %r14369;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14501, %r424, %r14366, %r14498;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14505, %r430, %r14378;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14508, %r424, %r14375, %r14505;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14512, %r430, %r14387;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14515, %r424, %r14384, %r14512;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14519, %r430, %r14396;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14522, %r424, %r14393, %r14519;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14526, %r433, %r14405;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14529, %r427, %r14402, %r14526;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14533, %r433, %r14414;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14536, %r427, %r14411, %r14533;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14540, %r433, %r14423;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14543, %r427, %r14420, %r14540;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14547, %r433, %r14432;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14550, %r427, %r14429, %r14547;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14554, %r433, %r14441;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14557, %r427, %r14438, %r14554;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14561, %r433, %r14450;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14564, %r427, %r14447, %r14561;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14568, %r433, %r14459;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14571, %r427, %r14456, %r14568;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14575, %r433, %r14468;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14578, %r427, %r14465, %r14575;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14749, %r14746}, {%r472, %r478, %r475, %r481}, {%r14331, %r14473}, {%r15157, %r15157};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14758, %r14755}, {%r472, %r478, %r475, %r481}, {%r14340, %r14480}, {%r15157, %r15157};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14767, %r14764}, {%r472, %r478, %r475, %r481}, {%r14349, %r14487}, {%r15157, %r15157};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14776, %r14773}, {%r472, %r478, %r475, %r481}, {%r14358, %r14494}, {%r15157, %r15157};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14785, %r14782}, {%r472, %r478, %r475, %r481}, {%r14367, %r14501}, {%r15157, %r15157};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14794, %r14791}, {%r472, %r478, %r475, %r481}, {%r14376, %r14508}, {%r15157, %r15157};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14803, %r14800}, {%r472, %r478, %r475, %r481}, {%r14385, %r14515}, {%r15157, %r15157};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14812, %r14809}, {%r472, %r478, %r475, %r481}, {%r14394, %r14522}, {%r15157, %r15157};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14821, %r14818}, {%r472, %r478, %r475, %r481}, {%r14403, %r14529}, {%r15157, %r15157};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14830, %r14827}, {%r472, %r478, %r475, %r481}, {%r14412, %r14536}, {%r15157, %r15157};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14839, %r14836}, {%r472, %r478, %r475, %r481}, {%r14421, %r14543}, {%r15157, %r15157};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14848, %r14845}, {%r472, %r478, %r475, %r481}, {%r14430, %r14550}, {%r15157, %r15157};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14857, %r14854}, {%r472, %r478, %r475, %r481}, {%r14439, %r14557}, {%r15157, %r15157};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14866, %r14863}, {%r472, %r478, %r475, %r481}, {%r14448, %r14564}, {%r15157, %r15157};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14875, %r14872}, {%r472, %r478, %r475, %r481}, {%r14457, %r14571}, {%r15157, %r15157};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14884, %r14881}, {%r472, %r478, %r475, %r481}, {%r14466, %r14578}, {%r15157, %r15157};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14742, %r522;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14744, %r14742, %r14746;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14747, %r519, %r14749, %r14744;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14751, %r522;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14753, %r14751, %r14755;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14756, %r519, %r14758, %r14753;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14760, %r522;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14762, %r14760, %r14764;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14765, %r519, %r14767, %r14762;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14769, %r522;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14771, %r14769, %r14773;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14774, %r519, %r14776, %r14771;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14778, %r522;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14780, %r14778, %r14782;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14783, %r519, %r14785, %r14780;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14787, %r522;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14789, %r14787, %r14791;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14792, %r519, %r14794, %r14789;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14796, %r522;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14798, %r14796, %r14800;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14801, %r519, %r14803, %r14798;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14805, %r522;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14807, %r14805, %r14809;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14810, %r519, %r14812, %r14807;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14814, %r522;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14816, %r14814, %r14818;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14819, %r519, %r14821, %r14816;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14823, %r522;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14825, %r14823, %r14827;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14828, %r519, %r14830, %r14825;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14832, %r522;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14834, %r14832, %r14836;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14837, %r519, %r14839, %r14834;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14841, %r522;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14843, %r14841, %r14845;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14846, %r519, %r14848, %r14843;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14850, %r522;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14852, %r14850, %r14854;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14855, %r519, %r14857, %r14852;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14859, %r522;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14861, %r14859, %r14863;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14864, %r519, %r14866, %r14861;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14868, %r522;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14870, %r14868, %r14872;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14873, %r519, %r14875, %r14870;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14877, %r522;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14879, %r14877, %r14881;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14882, %r519, %r14884, %r14879;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14886, %r522, %r14749;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14889, %r519, %r14746, %r14886;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14893, %r522, %r14758;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14896, %r519, %r14755, %r14893;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14900, %r522, %r14767;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14903, %r519, %r14764, %r14900;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14907, %r522, %r14776;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14910, %r519, %r14773, %r14907;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14914, %r522, %r14785;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14917, %r519, %r14782, %r14914;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14921, %r522, %r14794;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14924, %r519, %r14791, %r14921;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14928, %r522, %r14803;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14931, %r519, %r14800, %r14928;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14935, %r522, %r14812;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14938, %r519, %r14809, %r14935;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14942, %r522, %r14821;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14945, %r519, %r14818, %r14942;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14949, %r522, %r14830;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14952, %r519, %r14827, %r14949;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14956, %r522, %r14839;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14959, %r519, %r14836, %r14956;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14963, %r522, %r14848;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14966, %r519, %r14845, %r14963;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14970, %r522, %r14857;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14973, %r519, %r14854, %r14970;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14977, %r522, %r14866;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14980, %r519, %r14863, %r14977;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14984, %r522, %r14875;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14987, %r519, %r14872, %r14984;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14991, %r522, %r14884;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14994, %r519, %r14881, %r14991;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15287, %r15290}, {%r562, %r568, %r565, %r571}, {%r14747, %r14889}, {%r15157, %r15157};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15293, %r15296}, {%r562, %r568, %r565, %r571}, {%r14756, %r14896}, {%r15157, %r15157};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15299, %r15302}, {%r562, %r568, %r565, %r571}, {%r14765, %r14903}, {%r15157, %r15157};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15305, %r15308}, {%r562, %r568, %r565, %r571}, {%r14774, %r14910}, {%r15157, %r15157};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15311, %r15314}, {%r562, %r568, %r565, %r571}, {%r14783, %r14917}, {%r15157, %r15157};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15317, %r15320}, {%r562, %r568, %r565, %r571}, {%r14792, %r14924}, {%r15157, %r15157};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15323, %r15326}, {%r562, %r568, %r565, %r571}, {%r14801, %r14931}, {%r15157, %r15157};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15329, %r15332}, {%r562, %r568, %r565, %r571}, {%r14810, %r14938}, {%r15157, %r15157};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15288, %r15291}, {%r562, %r568, %r565, %r571}, {%r14819, %r14945}, {%r15157, %r15157};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15294, %r15297}, {%r562, %r568, %r565, %r571}, {%r14828, %r14952}, {%r15157, %r15157};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15300, %r15303}, {%r562, %r568, %r565, %r571}, {%r14837, %r14959}, {%r15157, %r15157};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15306, %r15309}, {%r562, %r568, %r565, %r571}, {%r14846, %r14966}, {%r15157, %r15157};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15312, %r15315}, {%r562, %r568, %r565, %r571}, {%r14855, %r14973}, {%r15157, %r15157};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15318, %r15321}, {%r562, %r568, %r565, %r571}, {%r14864, %r14980}, {%r15157, %r15157};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15324, %r15327}, {%r562, %r568, %r565, %r571}, {%r14873, %r14987}, {%r15157, %r15157};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15330, %r15333}, {%r562, %r568, %r565, %r571}, {%r14882, %r14994}, {%r15157, %r15157};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15286, %r15287, %r15288;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15289, %r15290, %r15291;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15292, %r15293, %r15294;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15295, %r15296, %r15297;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15298, %r15299, %r15300;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15301, %r15302, %r15303;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15304, %r15305, %r15306;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15307, %r15308, %r15309;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15310, %r15311, %r15312;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15313, %r15314, %r15315;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15316, %r15317, %r15318;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15319, %r15320, %r15321;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15322, %r15323, %r15324;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15325, %r15326, %r15327;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15328, %r15329, %r15330;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15331, %r15332, %r15333;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15334, %r15287, %r15288;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15337, %r15290, %r15291;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15340, %r15293, %r15294;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15343, %r15296, %r15297;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15346, %r15299, %r15300;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15349, %r15302, %r15303;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15352, %r15305, %r15306;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15355, %r15308, %r15309;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15358, %r15311, %r15312;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15361, %r15314, %r15315;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15364, %r15317, %r15318;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15367, %r15320, %r15321;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15370, %r15323, %r15324;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15373, %r15326, %r15327;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15376, %r15329, %r15330;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15379, %r15332, %r15333;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15382, %r14, %r15286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15385, %r14, %r15289;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15388, %r14, %r15292;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15391, %r14, %r15295;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15394, %r14, %r15298;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15397, %r14, %r15301;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15400, %r14, %r15304;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15403, %r14, %r15307;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15406, %r14, %r15310;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15409, %r14, %r15313;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15412, %r14, %r15316;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15415, %r14, %r15319;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15418, %r14, %r15322;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15421, %r14, %r15325;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15424, %r14, %r15328;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15427, %r14, %r15331;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15430, %r15, %r15334;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15433, %r15, %r15337;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15436, %r15, %r15340;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15439, %r15, %r15343;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15442, %r15, %r15346;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15445, %r15, %r15349;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15448, %r15, %r15352;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15451, %r15, %r15355;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15454, %r15, %r15358;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15457, %r15, %r15361;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15460, %r15, %r15364;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15463, %r15, %r15367;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15466, %r15, %r15370;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15469, %r15, %r15373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15472, %r15, %r15376;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15475, %r15, %r15379;
	// end inline asm
	// begin inline asm
	mov.b32 %r15478, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15479, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15480, %r15382, %r15478;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15483, %r15480, %r15479;
	// end inline asm
	// begin inline asm
	mov.b32 %r15486, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15487, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15488, %r15385, %r15486;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15491, %r15488, %r15487;
	// end inline asm
	// begin inline asm
	mov.b32 %r15494, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15495, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15496, %r15388, %r15494;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15499, %r15496, %r15495;
	// end inline asm
	// begin inline asm
	mov.b32 %r15502, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15503, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15504, %r15391, %r15502;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15507, %r15504, %r15503;
	// end inline asm
	// begin inline asm
	mov.b32 %r15510, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15511, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15512, %r15394, %r15510;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15515, %r15512, %r15511;
	// end inline asm
	// begin inline asm
	mov.b32 %r15518, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15519, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15520, %r15397, %r15518;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15523, %r15520, %r15519;
	// end inline asm
	// begin inline asm
	mov.b32 %r15526, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15527, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15528, %r15400, %r15526;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15531, %r15528, %r15527;
	// end inline asm
	// begin inline asm
	mov.b32 %r15534, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15535, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15536, %r15403, %r15534;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15539, %r15536, %r15535;
	// end inline asm
	// begin inline asm
	mov.b32 %r15542, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15543, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15544, %r15406, %r15542;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15547, %r15544, %r15543;
	// end inline asm
	// begin inline asm
	mov.b32 %r15550, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15551, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15552, %r15409, %r15550;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15555, %r15552, %r15551;
	// end inline asm
	// begin inline asm
	mov.b32 %r15558, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15559, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15560, %r15412, %r15558;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15563, %r15560, %r15559;
	// end inline asm
	// begin inline asm
	mov.b32 %r15566, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15567, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15568, %r15415, %r15566;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15571, %r15568, %r15567;
	// end inline asm
	// begin inline asm
	mov.b32 %r15574, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15575, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15576, %r15418, %r15574;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15579, %r15576, %r15575;
	// end inline asm
	// begin inline asm
	mov.b32 %r15582, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15583, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15584, %r15421, %r15582;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15587, %r15584, %r15583;
	// end inline asm
	// begin inline asm
	mov.b32 %r15590, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15591, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15592, %r15424, %r15590;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15595, %r15592, %r15591;
	// end inline asm
	// begin inline asm
	mov.b32 %r15598, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15599, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15600, %r15427, %r15598;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15603, %r15600, %r15599;
	// end inline asm
	// begin inline asm
	mov.b32 %r15606, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15607, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15608, %r15430, %r15606;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15611, %r15608, %r15607;
	// end inline asm
	// begin inline asm
	mov.b32 %r15614, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15615, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15616, %r15433, %r15614;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15619, %r15616, %r15615;
	// end inline asm
	// begin inline asm
	mov.b32 %r15622, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15623, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15624, %r15436, %r15622;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15627, %r15624, %r15623;
	// end inline asm
	// begin inline asm
	mov.b32 %r15630, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15631, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15632, %r15439, %r15630;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15635, %r15632, %r15631;
	// end inline asm
	// begin inline asm
	mov.b32 %r15638, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15639, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15640, %r15442, %r15638;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15643, %r15640, %r15639;
	// end inline asm
	// begin inline asm
	mov.b32 %r15646, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15647, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15648, %r15445, %r15646;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15651, %r15648, %r15647;
	// end inline asm
	// begin inline asm
	mov.b32 %r15654, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15655, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15656, %r15448, %r15654;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15659, %r15656, %r15655;
	// end inline asm
	// begin inline asm
	mov.b32 %r15662, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15663, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15664, %r15451, %r15662;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15667, %r15664, %r15663;
	// end inline asm
	// begin inline asm
	mov.b32 %r15670, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15671, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15672, %r15454, %r15670;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15675, %r15672, %r15671;
	// end inline asm
	// begin inline asm
	mov.b32 %r15678, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15679, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15680, %r15457, %r15678;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15683, %r15680, %r15679;
	// end inline asm
	// begin inline asm
	mov.b32 %r15686, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15687, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15688, %r15460, %r15686;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15691, %r15688, %r15687;
	// end inline asm
	// begin inline asm
	mov.b32 %r15694, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15695, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15696, %r15463, %r15694;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15699, %r15696, %r15695;
	// end inline asm
	// begin inline asm
	mov.b32 %r15702, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15703, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15704, %r15466, %r15702;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15707, %r15704, %r15703;
	// end inline asm
	// begin inline asm
	mov.b32 %r15710, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15711, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15712, %r15469, %r15710;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15715, %r15712, %r15711;
	// end inline asm
	// begin inline asm
	mov.b32 %r15718, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15719, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15720, %r15472, %r15718;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15723, %r15720, %r15719;
	// end inline asm
	// begin inline asm
	mov.b32 %r15726, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15727, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15728, %r15475, %r15726;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15731, %r15728, %r15727;
	// end inline asm
	// begin inline asm
	mov.b32 %r15737, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r15735, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15736, %r15737, %r15735;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15739, %r15483, %r15736;
	// end inline asm
	// begin inline asm
	mov.b32 %r15742, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15743, %r15737, %r15742;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15746, %r15491, %r15743;
	// end inline asm
	// begin inline asm
	mov.b32 %r15749, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15750, %r15737, %r15749;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15753, %r15499, %r15750;
	// end inline asm
	// begin inline asm
	mov.b32 %r15756, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15757, %r15737, %r15756;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15760, %r15507, %r15757;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15763, %r15739, %r15753, %r4318;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15767, %r15746, %r15760, %r4318;
	// end inline asm
	shl.b32 	%r15774, %r15767, 4;
	// begin inline asm
	lop3.b32 %r15771, %r4324, %r15763, %r15774, 202;
	// end inline asm
	xor.b32  	%r16094, %r15771, -2004318072;
	// begin inline asm
	mov.b32 %r15778, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r15776, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15777, %r15778, %r15776;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15780, %r15515, %r15777;
	// end inline asm
	// begin inline asm
	mov.b32 %r15783, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15784, %r15778, %r15783;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15787, %r15523, %r15784;
	// end inline asm
	// begin inline asm
	mov.b32 %r15790, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15791, %r15778, %r15790;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15794, %r15531, %r15791;
	// end inline asm
	// begin inline asm
	mov.b32 %r15797, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15798, %r15778, %r15797;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15801, %r15539, %r15798;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15804, %r15780, %r15794, %r4318;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15808, %r15787, %r15801, %r4318;
	// end inline asm
	shl.b32 	%r15815, %r15808, 4;
	// begin inline asm
	lop3.b32 %r15812, %r4324, %r15804, %r15815, 202;
	// end inline asm
	xor.b32  	%r16095, %r15812, -2004318072;
	// begin inline asm
	mov.b32 %r15819, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r15817, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15818, %r15819, %r15817;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15821, %r15547, %r15818;
	// end inline asm
	// begin inline asm
	mov.b32 %r15824, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15825, %r15819, %r15824;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15828, %r15555, %r15825;
	// end inline asm
	// begin inline asm
	mov.b32 %r15831, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15832, %r15819, %r15831;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15835, %r15563, %r15832;
	// end inline asm
	// begin inline asm
	mov.b32 %r15838, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15839, %r15819, %r15838;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15842, %r15571, %r15839;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15845, %r15821, %r15835, %r4318;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15849, %r15828, %r15842, %r4318;
	// end inline asm
	shl.b32 	%r15856, %r15849, 4;
	// begin inline asm
	lop3.b32 %r15853, %r4324, %r15845, %r15856, 202;
	// end inline asm
	xor.b32  	%r16096, %r15853, -2004318072;
	// begin inline asm
	mov.b32 %r15860, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r15858, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15859, %r15860, %r15858;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15862, %r15579, %r15859;
	// end inline asm
	// begin inline asm
	mov.b32 %r15865, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15866, %r15860, %r15865;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15869, %r15587, %r15866;
	// end inline asm
	// begin inline asm
	mov.b32 %r15872, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15873, %r15860, %r15872;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15876, %r15595, %r15873;
	// end inline asm
	// begin inline asm
	mov.b32 %r15879, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15880, %r15860, %r15879;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15883, %r15603, %r15880;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15886, %r15862, %r15876, %r4318;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15890, %r15869, %r15883, %r4318;
	// end inline asm
	shl.b32 	%r15897, %r15890, 4;
	// begin inline asm
	lop3.b32 %r15894, %r4324, %r15886, %r15897, 202;
	// end inline asm
	xor.b32  	%r16097, %r15894, -2004318072;
	// begin inline asm
	mov.b32 %r15901, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r15899, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15900, %r15901, %r15899;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15903, %r15611, %r15900;
	// end inline asm
	// begin inline asm
	mov.b32 %r15906, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15907, %r15901, %r15906;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15910, %r15619, %r15907;
	// end inline asm
	// begin inline asm
	mov.b32 %r15913, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15914, %r15901, %r15913;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15917, %r15627, %r15914;
	// end inline asm
	// begin inline asm
	mov.b32 %r15920, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15921, %r15901, %r15920;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15924, %r15635, %r15921;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15927, %r15903, %r15917, %r4318;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15931, %r15910, %r15924, %r4318;
	// end inline asm
	shl.b32 	%r15938, %r15931, 4;
	// begin inline asm
	lop3.b32 %r15935, %r4324, %r15927, %r15938, 202;
	// end inline asm
	xor.b32  	%r16098, %r15935, -2004318072;
	// begin inline asm
	mov.b32 %r15942, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r15940, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15941, %r15942, %r15940;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15944, %r15643, %r15941;
	// end inline asm
	// begin inline asm
	mov.b32 %r15947, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15948, %r15942, %r15947;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15951, %r15651, %r15948;
	// end inline asm
	// begin inline asm
	mov.b32 %r15954, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15955, %r15942, %r15954;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15958, %r15659, %r15955;
	// end inline asm
	// begin inline asm
	mov.b32 %r15961, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15962, %r15942, %r15961;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15965, %r15667, %r15962;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15968, %r15944, %r15958, %r4318;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15972, %r15951, %r15965, %r4318;
	// end inline asm
	shl.b32 	%r15979, %r15972, 4;
	// begin inline asm
	lop3.b32 %r15976, %r4324, %r15968, %r15979, 202;
	// end inline asm
	xor.b32  	%r16099, %r15976, -2004318072;
	// begin inline asm
	mov.b32 %r15983, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r15981, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15982, %r15983, %r15981;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15985, %r15675, %r15982;
	// end inline asm
	// begin inline asm
	mov.b32 %r15988, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15989, %r15983, %r15988;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15992, %r15683, %r15989;
	// end inline asm
	// begin inline asm
	mov.b32 %r15995, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15996, %r15983, %r15995;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15999, %r15691, %r15996;
	// end inline asm
	// begin inline asm
	mov.b32 %r16002, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16003, %r15983, %r16002;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16006, %r15699, %r16003;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16009, %r15985, %r15999, %r4318;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16013, %r15992, %r16006, %r4318;
	// end inline asm
	shl.b32 	%r16020, %r16013, 4;
	// begin inline asm
	lop3.b32 %r16017, %r4324, %r16009, %r16020, 202;
	// end inline asm
	xor.b32  	%r16100, %r16017, -2004318072;
	// begin inline asm
	mov.b32 %r16024, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r16022, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16023, %r16024, %r16022;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16026, %r15707, %r16023;
	// end inline asm
	// begin inline asm
	mov.b32 %r16029, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16030, %r16024, %r16029;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16033, %r15715, %r16030;
	// end inline asm
	// begin inline asm
	mov.b32 %r16036, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16037, %r16024, %r16036;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16040, %r15723, %r16037;
	// end inline asm
	// begin inline asm
	mov.b32 %r16043, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16044, %r16024, %r16043;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16047, %r15731, %r16044;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16050, %r16026, %r16040, %r4318;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16054, %r16033, %r16047, %r4318;
	// end inline asm
	shl.b32 	%r16061, %r16054, 4;
	// begin inline asm
	lop3.b32 %r16058, %r4324, %r16050, %r16061, 202;
	// end inline asm
	xor.b32  	%r16101, %r16058, -2004318072;
	st.shared.u32 	[%rd82], %r16094;
	st.shared.u32 	[%rd83], %r16095;
	st.shared.u32 	[%rd84], %r16096;
	st.shared.u32 	[%rd85], %r16097;
	st.shared.u32 	[%rd86], %r16098;
	st.shared.u32 	[%rd87], %r16099;
	st.shared.u32 	[%rd88], %r16100;
	st.shared.u32 	[%rd89], %r16101;
	add.s32 	%r16195, %r16195, -128;
	add.s64 	%rd94, %rd94, 16644;
	setp.eq.s32 	%p300, %r16195, 0;
	@%p300 bra 	LBB0_179;
	bra.uni 	LBB0_178;
LBB0_179:                               // %guard_pass22984
                                        //   in Loop: Header=BB0_177 Depth=1
	bar.sync 	0;
	ld.shared.u32 	%r16107, [%rd13];
	ld.shared.u32 	%r16108, [%rd14+128];
	ld.shared.u32 	%r16115, [%rd14+4];
	ld.shared.u32 	%r16116, [%rd14+132];
	ld.shared.u32 	%r16123, [%rd15];
	ld.shared.u32 	%r16124, [%rd16+128];
	ld.shared.u32 	%r16131, [%rd16+4];
	ld.shared.u32 	%r16132, [%rd16+132];
	// begin inline asm
	prmt.b32 %r16102, %r16107, %r16108, %r772;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16106, %r16107, %r16108, %r776;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16110, %r16115, %r16116, %r772;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16114, %r16115, %r16116, %r776;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16118, %r16123, %r16124, %r772;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16122, %r16123, %r16124, %r776;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16126, %r16131, %r16132, %r772;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16130, %r16131, %r16132, %r776;
	// end inline asm
	selp.b32 	%r16134, %r16106, %r16102, %p299;
	shfl.sync.bfly.b32	%r234, %r16134, 8, 31, -1;
	selp.b32 	%r16135, %r16114, %r16110, %p299;
	shfl.sync.bfly.b32	%r235, %r16135, 8, 31, -1;
	selp.b32 	%r16136, %r16122, %r16118, %p299;
	shfl.sync.bfly.b32	%r236, %r16136, 8, 31, -1;
	selp.b32 	%r16137, %r16130, %r16126, %p299;
	shfl.sync.bfly.b32	%r237, %r16137, 8, 31, -1;
	setp.lt.u32 	%p302, %r174, 384;
	@%p302 bra 	LBB0_181;
// %bb.180:                             // %L63189
                                        //   in Loop: Header=BB0_177 Depth=1
	selp.b32 	%r16138, %r237, %r16130, %p299;
	selp.b32 	%r16139, %r16126, %r237, %p299;
	selp.b32 	%r16140, %r236, %r16122, %p299;
	selp.b32 	%r16141, %r16118, %r236, %p299;
	selp.b32 	%r16142, %r235, %r16114, %p299;
	selp.b32 	%r16143, %r16110, %r235, %p299;
	selp.b32 	%r16144, %r234, %r16106, %p299;
	selp.b32 	%r16145, %r16102, %r234, %p299;
	shl.b32 	%r16146, %r174, 12;
	add.s32 	%r16147, %r148, %r16146;
	mul.wide.s32 	%rd90, %r16147, 4;
	add.s64 	%rd91, %rd3, %rd90;
	st.global.v4.u32 	[%rd91], {%r16145, %r16143, %r16144, %r16142};
	add.s32 	%r16148, %r149, %r16146;
	mul.wide.s32 	%rd92, %r16148, 4;
	add.s64 	%rd93, %rd3, %rd92;
	st.global.v4.u32 	[%rd93], {%r16141, %r16139, %r16140, %r16138};
	bra.uni 	LBB0_181;
LBB0_182:                               // %L63611
	st.global.u32 	[%rd4], %r15157;
	ret;
LBB0_1:                                 // %L8
	mov.u64 	%rd44, exception1;
	cvta.global.u64 	%rd45, %rd44;
	{ // callseq 0, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd45;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 0
	{ // callseq 1, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd35;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 1
	// begin inline asm
	exit;
	// end inline asm
LBB0_3:                                 // %L163
	mov.u32 	%r243, 2;
	st.global.u32 	[%rd4], %r243;
	mov.u64 	%rd47, exception5095;
	cvta.global.u64 	%rd48, %rd47;
	{ // callseq 2, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd48;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 2
	{ // callseq 3, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd35;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 3
	// begin inline asm
	exit;
	// end inline asm
                                        // -- End function
}
