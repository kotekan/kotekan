// PTX CompilerJob of MethodInstance for upchan(::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Float16x2, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int32, 1}) for sm_86, minthreads=512, blocks_per_sm=2

//
// Generated by LLVM NVPTX Back-End
//

.version 7.1
.target sm_86
.address_size 64

	// .globl	_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE // -- Begin function _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE
.func gpu_report_exception
(
	.param .b64 gpu_report_exception_param_0
)
.noreturn
{
	trap;
}
.func gpu_signal_exception
(
	.param .align 8 .b8 gpu_signal_exception_param_0[16]
)
.noreturn
{
	trap;
}
.extern .shared .align 32 .b8 shmem[];
.global .align 1 .b8 exception5093[6] = {101, 114, 114, 111, 114, 0};
.global .align 1 .b8 exception1[10] = {101, 120, 99, 101, 112, 116, 105, 111, 110, 0};
                                        // @_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE
.visible .entry _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE(
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_0[16],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_1[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_2[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_3[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_4[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_5[32]
)
.reqntid 512, 1, 1
.minnctapersm 2
{
	.reg .pred 	%p<309>;
	.reg .b16 	%rs<2390>;
	.reg .b32 	%r<16238>;
	.reg .f32 	%f<1404>;
	.reg .b64 	%rd<95>;

// %bb.0:                               // %conversion
	ld.param.u32 	%r238, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_0+8];
	ld.param.u64 	%rd35, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_0];
	// begin inline asm
	mov.u32 %r239, %dynamic_smem_size;
	// end inline asm
	setp.gt.u32 	%p1, %r239, 66815;
	@%p1 bra 	LBB0_2;
	bra.uni 	LBB0_1;
LBB0_2:                                 // %L10
	ld.param.u64 	%rd40, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_5];
	ld.param.u64 	%rd36, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_1];
	mov.u32 	%r1, %ctaid.x;
	shl.b32 	%r240, %r1, 9;
	mov.u32 	%r2, %tid.x;
	mov.u32 	%r3, %tid.y;
	shl.b32 	%r4, %r3, 5;
	or.b32  	%r241, %r240, %r2;
	or.b32  	%r242, %r241, %r4;
	mul.wide.u32 	%rd46, %r242, 4;
	add.s64 	%rd4, %rd40, %rd46;
	mov.u32 	%r243, 1;
	st.global.u32 	[%rd4], %r243;
	ld.global.u32 	%r5, [%rd36];
	setp.lt.u32 	%p2, %r5, 32769;
	and.b32  	%r244, %r5, 255;
	setp.eq.s32 	%p3, %r244, 0;
	and.pred  	%p4, %p2, %p3;
	@%p4 bra 	LBB0_4;
	bra.uni 	LBB0_3;
LBB0_4:                                 // %L242
	bfe.u32 	%r16, %r2, 1, 1;
	and.b32  	%r17, %r2, 1;
	bfe.u32 	%r19, %r2, 2, 1;
	shr.u32 	%r20, %r2, 4;
	shl.b32 	%r250, %r20, 2;
	shl.b32 	%r251, %r19, 3;
	shl.b32 	%r252, %r17, 4;
	shl.b32 	%r253, %r16, 5;
	or.b32  	%r254, %r252, %r253;
	or.b32  	%r255, %r251, %r254;
	or.b32  	%r256, %r250, %r255;
	bfe.u32 	%r22, %r2, 3, 1;
	shl.b32 	%r257, %r22, 1;
	or.b32  	%r23, %r257, %r256;
	or.b32  	%r24, %r23, 64;
	mov.f32 	%f255, 0f40000000;
	mov.f32 	%f256, 0f43FF8000;
	div.approx.f32 	%f1, %f256, %f255;
	cvt.rn.f32.s32 	%f257, %r23;
	sub.f32 	%f258, %f257, %f1;
	mov.f32 	%f287, 0f43000000;
	div.approx.f32 	%f3, %f258, %f287;
	setp.eq.f32 	%p10, %f3, 0f00000000;
	mov.f32 	%f1363, 0f3F800000;
	mov.f32 	%f1348, %f1363;
	@%p10 bra 	LBB0_6;
// %bb.5:                               // %L592
	sin.approx.f32 	%f288, %f3;
	div.approx.f32 	%f1348, %f288, %f3;
LBB0_6:                                 // %L595
	cvt.rn.f32.s32 	%f291, %r24;
	sub.f32 	%f292, %f291, %f1;
	div.approx.f32 	%f8, %f292, %f287;
	setp.eq.f32 	%p16, %f8, 0f00000000;
	mov.f32 	%f1349, %f1363;
	@%p16 bra 	LBB0_8;
// %bb.7:                               // %L612
	sin.approx.f32 	%f322, %f8;
	div.approx.f32 	%f1349, %f322, %f8;
LBB0_8:                                 // %L615
	or.b32  	%r275, %r23, 1;
	or.b32  	%r26, %r23, 65;
	cvt.rn.f32.s32 	%f326, %r275;
	sub.f32 	%f327, %f326, %f1;
	div.approx.f32 	%f12, %f327, %f287;
	setp.eq.f32 	%p22, %f12, 0f00000000;
	mov.f32 	%f1350, %f1363;
	@%p22 bra 	LBB0_10;
// %bb.9:                               // %L694
	sin.approx.f32 	%f357, %f12;
	div.approx.f32 	%f1350, %f357, %f12;
LBB0_10:                                // %L697
	cvt.rn.f32.s32 	%f360, %r26;
	sub.f32 	%f361, %f360, %f1;
	div.approx.f32 	%f17, %f361, %f287;
	setp.eq.f32 	%p28, %f17, 0f00000000;
	mov.f32 	%f1351, %f1363;
	@%p28 bra 	LBB0_12;
// %bb.11:                              // %L714
	sin.approx.f32 	%f391, %f17;
	div.approx.f32 	%f1351, %f391, %f17;
LBB0_12:                                // %L717
	or.b32  	%r293, %r23, 128;
	or.b32  	%r28, %r23, 192;
	cvt.rn.f32.s32 	%f395, %r293;
	sub.f32 	%f396, %f395, %f1;
	div.approx.f32 	%f21, %f396, %f287;
	setp.eq.f32 	%p34, %f21, 0f00000000;
	mov.f32 	%f1352, %f1363;
	@%p34 bra 	LBB0_14;
// %bb.13:                              // %L796
	sin.approx.f32 	%f426, %f21;
	div.approx.f32 	%f1352, %f426, %f21;
LBB0_14:                                // %L799
	cvt.rn.f32.s32 	%f429, %r28;
	sub.f32 	%f430, %f429, %f1;
	div.approx.f32 	%f26, %f430, %f287;
	setp.eq.f32 	%p40, %f26, 0f00000000;
	mov.f32 	%f1353, %f1363;
	@%p40 bra 	LBB0_16;
// %bb.15:                              // %L816
	sin.approx.f32 	%f460, %f26;
	div.approx.f32 	%f1353, %f460, %f26;
LBB0_16:                                // %L819
	or.b32  	%r311, %r23, 129;
	or.b32  	%r30, %r23, 193;
	cvt.rn.f32.s32 	%f464, %r311;
	sub.f32 	%f465, %f464, %f1;
	div.approx.f32 	%f30, %f465, %f287;
	setp.eq.f32 	%p46, %f30, 0f00000000;
	mov.f32 	%f1354, %f1363;
	@%p46 bra 	LBB0_18;
// %bb.17:                              // %L898
	sin.approx.f32 	%f495, %f30;
	div.approx.f32 	%f1354, %f495, %f30;
LBB0_18:                                // %L901
	cvt.rn.f32.s32 	%f498, %r30;
	sub.f32 	%f499, %f498, %f1;
	div.approx.f32 	%f35, %f499, %f287;
	setp.eq.f32 	%p52, %f35, 0f00000000;
	mov.f32 	%f1355, %f1363;
	@%p52 bra 	LBB0_20;
// %bb.19:                              // %L918
	sin.approx.f32 	%f529, %f35;
	div.approx.f32 	%f1355, %f529, %f35;
LBB0_20:                                // %L921
	or.b32  	%r329, %r23, 256;
	or.b32  	%r32, %r23, 320;
	cvt.rn.f32.s32 	%f533, %r329;
	sub.f32 	%f534, %f533, %f1;
	div.approx.f32 	%f39, %f534, %f287;
	setp.eq.f32 	%p58, %f39, 0f00000000;
	mov.f32 	%f1356, %f1363;
	@%p58 bra 	LBB0_22;
// %bb.21:                              // %L1000
	sin.approx.f32 	%f564, %f39;
	div.approx.f32 	%f1356, %f564, %f39;
LBB0_22:                                // %L1003
	mov.f32 	%f259, 0f44004000;
	cvt.rn.f32.s32 	%f567, %r32;
	sub.f32 	%f568, %f567, %f1;
	div.approx.f32 	%f44, %f568, %f287;
	setp.eq.f32 	%p64, %f44, 0f00000000;
	mov.f32 	%f1357, %f1363;
	@%p64 bra 	LBB0_24;
// %bb.23:                              // %L1020
	sin.approx.f32 	%f598, %f44;
	div.approx.f32 	%f1357, %f598, %f44;
LBB0_24:                                // %L1023
	div.approx.f32 	%f260, %f258, %f259;
	div.approx.f32 	%f294, %f292, %f259;
	div.approx.f32 	%f329, %f327, %f259;
	div.approx.f32 	%f363, %f361, %f259;
	div.approx.f32 	%f398, %f396, %f259;
	div.approx.f32 	%f432, %f430, %f259;
	div.approx.f32 	%f467, %f465, %f259;
	div.approx.f32 	%f501, %f499, %f259;
	div.approx.f32 	%f536, %f534, %f259;
	div.approx.f32 	%f570, %f568, %f259;
	or.b32  	%r347, %r23, 257;
	or.b32  	%r34, %r23, 321;
	cvt.rn.f32.s32 	%f602, %r347;
	sub.f32 	%f603, %f602, %f1;
	div.approx.f32 	%f605, %f603, %f259;
	div.approx.f32 	%f48, %f603, %f287;
	setp.eq.f32 	%p70, %f48, 0f00000000;
	mov.f32 	%f1358, %f1363;
	@%p70 bra 	LBB0_26;
// %bb.25:                              // %L1102
	sin.approx.f32 	%f633, %f48;
	div.approx.f32 	%f1358, %f633, %f48;
LBB0_26:                                // %L1105
	abs.f32 	%f261, %f260;
	abs.f32 	%f295, %f294;
	abs.f32 	%f330, %f329;
	abs.f32 	%f364, %f363;
	abs.f32 	%f399, %f398;
	abs.f32 	%f433, %f432;
	abs.f32 	%f468, %f467;
	abs.f32 	%f502, %f501;
	abs.f32 	%f537, %f536;
	abs.f32 	%f571, %f570;
	abs.f32 	%f606, %f605;
	cvt.rn.f32.s32 	%f636, %r34;
	sub.f32 	%f637, %f636, %f1;
	div.approx.f32 	%f639, %f637, %f259;
	abs.f32 	%f640, %f639;
	div.approx.f32 	%f53, %f637, %f287;
	setp.eq.f32 	%p76, %f53, 0f00000000;
	mov.f32 	%f1359, %f1363;
	@%p76 bra 	LBB0_28;
// %bb.27:                              // %L1122
	sin.approx.f32 	%f667, %f53;
	div.approx.f32 	%f1359, %f667, %f53;
LBB0_28:                                // %L1125
	setp.gt.f32 	%p5, %f261, 0f4B800000;
	mul.f32 	%f262, %f260, 0f00000000;
	setp.gt.f32 	%p11, %f295, 0f4B800000;
	mul.f32 	%f296, %f294, 0f00000000;
	setp.gt.f32 	%p17, %f330, 0f4B800000;
	mul.f32 	%f331, %f329, 0f00000000;
	setp.gt.f32 	%p23, %f364, 0f4B800000;
	mul.f32 	%f365, %f363, 0f00000000;
	setp.gt.f32 	%p29, %f399, 0f4B800000;
	mul.f32 	%f400, %f398, 0f00000000;
	setp.gt.f32 	%p35, %f433, 0f4B800000;
	mul.f32 	%f434, %f432, 0f00000000;
	setp.gt.f32 	%p41, %f468, 0f4B800000;
	mul.f32 	%f469, %f467, 0f00000000;
	setp.gt.f32 	%p47, %f502, 0f4B800000;
	mul.f32 	%f503, %f501, 0f00000000;
	setp.gt.f32 	%p53, %f537, 0f4B800000;
	mul.f32 	%f538, %f536, 0f00000000;
	setp.gt.f32 	%p59, %f571, 0f4B800000;
	mul.f32 	%f572, %f570, 0f00000000;
	setp.gt.f32 	%p65, %f606, 0f4B800000;
	mul.f32 	%f607, %f605, 0f00000000;
	setp.gt.f32 	%p71, %f640, 0f4B800000;
	mul.f32 	%f641, %f639, 0f00000000;
	or.b32  	%r365, %r23, 384;
	or.b32  	%r36, %r23, 448;
	cvt.rn.f32.s32 	%f671, %r365;
	sub.f32 	%f672, %f671, %f1;
	div.approx.f32 	%f674, %f672, %f259;
	abs.f32 	%f675, %f674;
	setp.gt.f32 	%p77, %f675, 0f4B800000;
	mul.f32 	%f676, %f674, 0f00000000;
	div.approx.f32 	%f57, %f672, %f287;
	setp.eq.f32 	%p82, %f57, 0f00000000;
	mov.f32 	%f1360, %f1363;
	@%p82 bra 	LBB0_30;
// %bb.29:                              // %L1204
	sin.approx.f32 	%f702, %f57;
	div.approx.f32 	%f1360, %f702, %f57;
LBB0_30:                                // %L1207
	selp.f32 	%f263, %f262, %f260, %p5;
	selp.f32 	%f297, %f296, %f294, %p11;
	selp.f32 	%f332, %f331, %f329, %p17;
	selp.f32 	%f366, %f365, %f363, %p23;
	selp.f32 	%f401, %f400, %f398, %p29;
	selp.f32 	%f435, %f434, %f432, %p35;
	selp.f32 	%f470, %f469, %f467, %p41;
	selp.f32 	%f504, %f503, %f501, %p47;
	selp.f32 	%f539, %f538, %f536, %p53;
	selp.f32 	%f573, %f572, %f570, %p59;
	selp.f32 	%f608, %f607, %f605, %p65;
	selp.f32 	%f642, %f641, %f639, %p71;
	selp.f32 	%f677, %f676, %f674, %p77;
	cvt.rn.f32.s32 	%f705, %r36;
	sub.f32 	%f706, %f705, %f1;
	div.approx.f32 	%f708, %f706, %f259;
	abs.f32 	%f709, %f708;
	setp.gt.f32 	%p83, %f709, 0f4B800000;
	mul.f32 	%f710, %f708, 0f00000000;
	selp.f32 	%f711, %f710, %f708, %p83;
	div.approx.f32 	%f62, %f706, %f287;
	setp.eq.f32 	%p88, %f62, 0f00000000;
	mov.f32 	%f1361, %f1363;
	@%p88 bra 	LBB0_32;
// %bb.31:                              // %L1224
	sin.approx.f32 	%f736, %f62;
	div.approx.f32 	%f1361, %f736, %f62;
LBB0_32:                                // %L1227
	add.f32 	%f264, %f263, %f263;
	add.f32 	%f298, %f297, %f297;
	add.f32 	%f333, %f332, %f332;
	add.f32 	%f367, %f366, %f366;
	add.f32 	%f402, %f401, %f401;
	add.f32 	%f436, %f435, %f435;
	add.f32 	%f471, %f470, %f470;
	add.f32 	%f505, %f504, %f504;
	add.f32 	%f540, %f539, %f539;
	add.f32 	%f574, %f573, %f573;
	add.f32 	%f609, %f608, %f608;
	add.f32 	%f643, %f642, %f642;
	add.f32 	%f678, %f677, %f677;
	add.f32 	%f712, %f711, %f711;
	or.b32  	%r383, %r23, 385;
	or.b32  	%r38, %r23, 449;
	cvt.rn.f32.s32 	%f740, %r383;
	sub.f32 	%f741, %f740, %f1;
	div.approx.f32 	%f743, %f741, %f259;
	abs.f32 	%f744, %f743;
	setp.gt.f32 	%p89, %f744, 0f4B800000;
	mul.f32 	%f745, %f743, 0f00000000;
	selp.f32 	%f746, %f745, %f743, %p89;
	add.f32 	%f747, %f746, %f746;
	div.approx.f32 	%f66, %f741, %f287;
	setp.eq.f32 	%p94, %f66, 0f00000000;
	mov.f32 	%f1362, %f1363;
	@%p94 bra 	LBB0_34;
// %bb.33:                              // %L1306
	sin.approx.f32 	%f771, %f66;
	div.approx.f32 	%f1362, %f771, %f66;
LBB0_34:                                // %L1309
	mov.b32 	%r258, %f264;
	mov.b32 	%r265, %f298;
	mov.b32 	%r276, %f333;
	mov.b32 	%r283, %f367;
	mov.b32 	%r294, %f402;
	mov.b32 	%r301, %f436;
	mov.b32 	%r312, %f471;
	mov.b32 	%r319, %f505;
	mov.b32 	%r330, %f540;
	mov.b32 	%r337, %f574;
	mov.b32 	%r348, %f609;
	mov.b32 	%r355, %f643;
	mov.b32 	%r366, %f678;
	mov.b32 	%r373, %f712;
	mov.b32 	%r384, %f747;
	cvt.rn.f32.s32 	%f774, %r38;
	sub.f32 	%f775, %f774, %f1;
	div.approx.f32 	%f777, %f775, %f259;
	abs.f32 	%f778, %f777;
	setp.gt.f32 	%p95, %f778, 0f4B800000;
	mul.f32 	%f779, %f777, 0f00000000;
	selp.f32 	%f780, %f779, %f777, %p95;
	add.f32 	%f781, %f780, %f780;
	mov.b32 	%r391, %f781;
	div.approx.f32 	%f71, %f775, %f287;
	setp.eq.f32 	%p100, %f71, 0f00000000;
	@%p100 bra 	LBB0_36;
// %bb.35:                              // %L1326
	sin.approx.f32 	%f805, %f71;
	div.approx.f32 	%f1363, %f805, %f71;
LBB0_36:                                // %L1329
	and.b32  	%r259, %r258, -2147483648;
	and.b32  	%r266, %r265, -2147483648;
	and.b32  	%r277, %r276, -2147483648;
	and.b32  	%r284, %r283, -2147483648;
	and.b32  	%r295, %r294, -2147483648;
	and.b32  	%r302, %r301, -2147483648;
	and.b32  	%r313, %r312, -2147483648;
	and.b32  	%r320, %r319, -2147483648;
	and.b32  	%r331, %r330, -2147483648;
	and.b32  	%r338, %r337, -2147483648;
	and.b32  	%r349, %r348, -2147483648;
	and.b32  	%r356, %r355, -2147483648;
	and.b32  	%r367, %r366, -2147483648;
	and.b32  	%r374, %r373, -2147483648;
	and.b32  	%r385, %r384, -2147483648;
	and.b32  	%r392, %r391, -2147483648;
	mul.lo.s32 	%r40, %r23, 127;
	cvt.rn.f32.s32 	%f808, %r40;
	div.approx.f32 	%f74, %f808, %f287;
	abs.f32 	%f1366, %f74;
	setp.lt.f32 	%p101, %f1366, 0f40000000;
	@%p101 bra 	LBB0_48;
// %bb.37:
	setp.gtu.f32 	%p102, %f1366, 0f4B800000;
	@%p102 bra 	LBB0_44;
	bra.uni 	LBB0_38;
LBB0_44:
	mov.b32 	%r42, %f1366;
	and.b32  	%r401, %r42, 8388607;
	or.b32  	%r16168, %r401, 1065353216;
	mov.b32 	%f1365, %r16168;
	add.s32 	%r402, %r42, -1073741824;
	and.b32  	%r16169, %r402, -8388608;
	setp.eq.s32 	%p108, %r16169, 0;
	@%p108 bra 	LBB0_47;
// %bb.45:                              // %__nv_fmaf_rn.exit4.i.i.i.preheader
	mov.f32 	%f819, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f818,%f819;
	// end inline asm
LBB0_46:                                // %__nv_fmaf_rn.exit4.i.i.i
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r403, %r16169, 192937984;
	add.s32 	%r404, %r403, %r16168;
	mov.b32 	%f820, %r404;
	mul.f32 	%f821, %f818, %f820;
	sub.f32 	%f822, %f820, %f821;
	fma.rn.f32 	%f823, %f822, %f818, %f821;
	sub.f32 	%f824, %f820, %f823;
	fma.rz.f32 	%f825, %f824, %f818, %f823;
	cvt.rzi.f32.f32 	%f826, %f825;
	sub.f32 	%f1365, %f820, %f826;
	sub.s32 	%r16169, %r16169, %r403;
	mov.b32 	%r16168, %f1365;
	setp.ne.s32 	%p109, %r16169, 0;
	setp.ne.s32 	%p110, %r16168, 0;
	and.pred  	%p111, %p109, %p110;
	@%p111 bra 	LBB0_46;
LBB0_47:                                // %__internal_fmodf_slowpath_mod.exit.i.i
	setp.gt.u32 	%p112, %r42, 2139095039;
	selp.f32 	%f827, 0f7FFFFFFF, 0f4B800000, %p112;
	mul.f32 	%f828, %f1365, 0f34000000;
	mul.f32 	%f1366, %f827, %f828;
	bra.uni 	LBB0_48;
LBB0_38:                                // %__nv_fast_fdividef.exit.i.i.i
	div.approx.f32 	%f811, %f1366, %f255;
	cvt.rzi.f32.f32 	%f1364, %f811;
	fma.rn.f32 	%f77, %f1364, 0fC0000000, %f1366;
	mov.b32 	%r41, %f77;
	setp.lt.u32 	%p103, %r41, 1073741824;
	@%p103 bra 	LBB0_43;
// %bb.39:
	setp.lt.u32 	%p104, %r41, -2147483647;
	@%p104 bra 	LBB0_41;
// %bb.40:
	add.f32 	%f816, %f1364, 0fBF800000;
	setp.lt.f32 	%p107, %f77, 0fC0000000;
	add.f32 	%f817, %f816, 0fBF800000;
	selp.f32 	%f1364, %f817, %f816, %p107;
	bra.uni 	LBB0_43;
LBB0_41:
	add.f32 	%f1364, %f1364, 0f3F800000;
	setp.ltu.f32 	%p105, %f77, 0f40800000;
	@%p105 bra 	LBB0_43;
// %bb.42:                              // %__nv_fmaf_rn.exit.i.i.i
	add.f32 	%f812, %f1364, 0f3F800000;
	fma.rn.f32 	%f814, %f255, 0fC0400000, %f77;
	setp.ge.f32 	%p106, %f814, 0f00000000;
	add.f32 	%f815, %f812, 0f3F800000;
	selp.f32 	%f1364, %f815, %f812, %p106;
LBB0_43:                                // %__internal_fmodf_fastpath_quot.exit.i.i
	fma.rn.f32 	%f1366, %f1364, 0fC0000000, %f1366;
LBB0_48:                                // %__internal_fmodf_kernel.exit.i
	or.b32  	%r260, %r259, 1056964608;
	or.b32  	%r267, %r266, 1056964608;
	or.b32  	%r278, %r277, 1056964608;
	or.b32  	%r285, %r284, 1056964608;
	or.b32  	%r296, %r295, 1056964608;
	or.b32  	%r303, %r302, 1056964608;
	or.b32  	%r314, %r313, 1056964608;
	or.b32  	%r321, %r320, 1056964608;
	or.b32  	%r332, %r331, 1056964608;
	or.b32  	%r339, %r338, 1056964608;
	or.b32  	%r350, %r349, 1056964608;
	or.b32  	%r357, %r356, 1056964608;
	or.b32  	%r368, %r367, 1056964608;
	or.b32  	%r375, %r374, 1056964608;
	or.b32  	%r386, %r385, 1056964608;
	or.b32  	%r393, %r392, 1056964608;
	abs.f32 	%f829, %f1366;
	setp.gtu.f32 	%p113, %f829, 0f7F800000;
	@%p113 bra 	LBB0_50;
// %bb.49:
	mov.b32 	%r405, %f74;
	and.b32  	%r406, %r405, -2147483648;
	mov.b32 	%r407, %f1366;
	or.b32  	%r408, %r406, %r407;
	mov.b32 	%f1366, %r408;
LBB0_50:                                // %__nv_fmodf.exit
	mov.b32 	%f265, %r260;
	mov.b32 	%f299, %r267;
	mov.b32 	%f334, %r278;
	mov.b32 	%f368, %r285;
	mov.b32 	%f403, %r296;
	mov.b32 	%f437, %r303;
	mov.b32 	%f472, %r314;
	mov.b32 	%f506, %r321;
	mov.b32 	%f541, %r332;
	mov.b32 	%f575, %r339;
	mov.b32 	%f610, %r350;
	mov.b32 	%f644, %r357;
	mov.b32 	%f679, %r368;
	mov.b32 	%f713, %r375;
	mov.b32 	%f748, %r386;
	mov.b32 	%f782, %r393;
	add.f32 	%f830, %f1366, %f1366;
	mov.b32 	%r409, %f830;
	and.b32  	%r410, %r409, -2147483648;
	or.b32  	%r411, %r410, 1056964608;
	mov.b32 	%f831, %r411;
	add.f32 	%f832, %f830, %f831;
	cvt.rzi.f32.f32 	%f833, %f832;
	abs.f32 	%f834, %f830;
	setp.gt.f32 	%p114, %f834, 0f4B000000;
	selp.f32 	%f835, %f830, %f833, %p114;
	cvt.rzi.f32.f32 	%f836, %f830;
	setp.lt.f32 	%p115, %f834, 0f3F000000;
	add.s32 	%r417, %r40, 8128;
	cvt.rn.f32.s32 	%f861, %r417;
	div.approx.f32 	%f93, %f861, %f287;
	abs.f32 	%f1370, %f93;
	setp.lt.f32 	%p121, %f1370, 0f40000000;
	@%p121 bra 	LBB0_62;
// %bb.51:
	setp.gtu.f32 	%p122, %f1370, 0f4B800000;
	@%p122 bra 	LBB0_58;
	bra.uni 	LBB0_52;
LBB0_58:
	mov.b32 	%r50, %f1370;
	and.b32  	%r418, %r50, 8388607;
	or.b32  	%r16170, %r418, 1065353216;
	mov.b32 	%f1369, %r16170;
	add.s32 	%r419, %r50, -1073741824;
	and.b32  	%r16171, %r419, -8388608;
	setp.eq.s32 	%p128, %r16171, 0;
	@%p128 bra 	LBB0_61;
// %bb.59:                              // %__nv_fmaf_rn.exit4.i.i.i2229.preheader
	mov.f32 	%f872, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f871,%f872;
	// end inline asm
LBB0_60:                                // %__nv_fmaf_rn.exit4.i.i.i2229
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r420, %r16171, 192937984;
	add.s32 	%r421, %r420, %r16170;
	mov.b32 	%f873, %r421;
	mul.f32 	%f874, %f871, %f873;
	sub.f32 	%f875, %f873, %f874;
	fma.rn.f32 	%f876, %f875, %f871, %f874;
	sub.f32 	%f877, %f873, %f876;
	fma.rz.f32 	%f878, %f877, %f871, %f876;
	cvt.rzi.f32.f32 	%f879, %f878;
	sub.f32 	%f1369, %f873, %f879;
	sub.s32 	%r16171, %r16171, %r420;
	mov.b32 	%r16170, %f1369;
	setp.ne.s32 	%p129, %r16171, 0;
	setp.ne.s32 	%p130, %r16170, 0;
	and.pred  	%p131, %p129, %p130;
	@%p131 bra 	LBB0_60;
LBB0_61:                                // %__internal_fmodf_slowpath_mod.exit.i.i2231
	setp.gt.u32 	%p132, %r50, 2139095039;
	selp.f32 	%f880, 0f7FFFFFFF, 0f4B800000, %p132;
	mul.f32 	%f881, %f1369, 0f34000000;
	mul.f32 	%f1370, %f880, %f881;
	bra.uni 	LBB0_62;
LBB0_52:                                // %__nv_fast_fdividef.exit.i.i.i2201
	div.approx.f32 	%f864, %f1370, %f255;
	cvt.rzi.f32.f32 	%f1368, %f864;
	fma.rn.f32 	%f96, %f1368, 0fC0000000, %f1370;
	mov.b32 	%r49, %f96;
	setp.lt.u32 	%p123, %r49, 1073741824;
	@%p123 bra 	LBB0_57;
// %bb.53:
	setp.lt.u32 	%p124, %r49, -2147483647;
	@%p124 bra 	LBB0_55;
// %bb.54:
	add.f32 	%f869, %f1368, 0fBF800000;
	setp.lt.f32 	%p127, %f96, 0fC0000000;
	add.f32 	%f870, %f869, 0fBF800000;
	selp.f32 	%f1368, %f870, %f869, %p127;
	bra.uni 	LBB0_57;
LBB0_55:
	add.f32 	%f1368, %f1368, 0f3F800000;
	setp.ltu.f32 	%p125, %f96, 0f40800000;
	@%p125 bra 	LBB0_57;
// %bb.56:                              // %__nv_fmaf_rn.exit.i.i.i2206
	add.f32 	%f865, %f1368, 0f3F800000;
	fma.rn.f32 	%f867, %f255, 0fC0400000, %f96;
	setp.ge.f32 	%p126, %f867, 0f00000000;
	add.f32 	%f868, %f865, 0f3F800000;
	selp.f32 	%f1368, %f868, %f865, %p126;
LBB0_57:                                // %__internal_fmodf_fastpath_quot.exit.i.i2210
	fma.rn.f32 	%f1370, %f1368, 0fC0000000, %f1370;
LBB0_62:                                // %__internal_fmodf_kernel.exit.i2235
	add.f32 	%f266, %f264, %f265;
	abs.f32 	%f268, %f264;
	add.f32 	%f300, %f298, %f299;
	abs.f32 	%f302, %f298;
	add.f32 	%f335, %f333, %f334;
	abs.f32 	%f337, %f333;
	add.f32 	%f369, %f367, %f368;
	abs.f32 	%f371, %f367;
	add.f32 	%f404, %f402, %f403;
	abs.f32 	%f406, %f402;
	add.f32 	%f438, %f436, %f437;
	abs.f32 	%f440, %f436;
	add.f32 	%f473, %f471, %f472;
	abs.f32 	%f475, %f471;
	add.f32 	%f507, %f505, %f506;
	abs.f32 	%f509, %f505;
	add.f32 	%f542, %f540, %f541;
	abs.f32 	%f544, %f540;
	add.f32 	%f576, %f574, %f575;
	abs.f32 	%f578, %f574;
	add.f32 	%f611, %f609, %f610;
	abs.f32 	%f613, %f609;
	add.f32 	%f645, %f643, %f644;
	abs.f32 	%f647, %f643;
	add.f32 	%f680, %f678, %f679;
	abs.f32 	%f682, %f678;
	add.f32 	%f714, %f712, %f713;
	abs.f32 	%f716, %f712;
	add.f32 	%f749, %f747, %f748;
	abs.f32 	%f751, %f747;
	add.f32 	%f783, %f781, %f782;
	abs.f32 	%f785, %f781;
	selp.f32 	%f837, %f836, %f835, %p115;
	shr.u32 	%r18, %r2, 2;
	abs.f32 	%f882, %f1370;
	setp.gtu.f32 	%p133, %f882, 0f7F800000;
	@%p133 bra 	LBB0_64;
// %bb.63:
	mov.b32 	%r422, %f93;
	and.b32  	%r423, %r422, -2147483648;
	mov.b32 	%r424, %f1370;
	or.b32  	%r425, %r423, %r424;
	mov.b32 	%f1370, %r425;
LBB0_64:                                // %__nv_fmodf.exit2236
	cvt.rzi.f32.f32 	%f267, %f266;
	setp.gt.f32 	%p6, %f268, 0f4B000000;
	cvt.rzi.f32.f32 	%f301, %f300;
	setp.gt.f32 	%p12, %f302, 0f4B000000;
	cvt.rzi.f32.f32 	%f336, %f335;
	setp.gt.f32 	%p18, %f337, 0f4B000000;
	cvt.rzi.f32.f32 	%f370, %f369;
	setp.gt.f32 	%p24, %f371, 0f4B000000;
	cvt.rzi.f32.f32 	%f405, %f404;
	setp.gt.f32 	%p30, %f406, 0f4B000000;
	cvt.rzi.f32.f32 	%f439, %f438;
	setp.gt.f32 	%p36, %f440, 0f4B000000;
	cvt.rzi.f32.f32 	%f474, %f473;
	setp.gt.f32 	%p42, %f475, 0f4B000000;
	cvt.rzi.f32.f32 	%f508, %f507;
	setp.gt.f32 	%p48, %f509, 0f4B000000;
	cvt.rzi.f32.f32 	%f543, %f542;
	setp.gt.f32 	%p54, %f544, 0f4B000000;
	cvt.rzi.f32.f32 	%f577, %f576;
	setp.gt.f32 	%p60, %f578, 0f4B000000;
	cvt.rzi.f32.f32 	%f612, %f611;
	setp.gt.f32 	%p66, %f613, 0f4B000000;
	cvt.rzi.f32.f32 	%f646, %f645;
	setp.gt.f32 	%p72, %f647, 0f4B000000;
	cvt.rzi.f32.f32 	%f681, %f680;
	setp.gt.f32 	%p78, %f682, 0f4B000000;
	cvt.rzi.f32.f32 	%f715, %f714;
	setp.gt.f32 	%p84, %f716, 0f4B000000;
	cvt.rzi.f32.f32 	%f750, %f749;
	setp.gt.f32 	%p90, %f751, 0f4B000000;
	cvt.rzi.f32.f32 	%f784, %f783;
	setp.gt.f32 	%p96, %f785, 0f4B000000;
	fma.rn.f32 	%f838, %f837, 0fBF000000, %f1366;
	add.f32 	%f883, %f1370, %f1370;
	mov.b32 	%r438, %f883;
	and.b32  	%r439, %r438, -2147483648;
	or.b32  	%r440, %r439, 1056964608;
	mov.b32 	%f884, %r440;
	add.f32 	%f885, %f883, %f884;
	cvt.rzi.f32.f32 	%f886, %f885;
	abs.f32 	%f887, %f883;
	setp.gt.f32 	%p134, %f887, 0f4B000000;
	selp.f32 	%f888, %f883, %f886, %p134;
	cvt.rzi.f32.f32 	%f889, %f883;
	setp.lt.f32 	%p135, %f887, 0f3F000000;
	selp.f32 	%f890, %f889, %f888, %p135;
	fma.rn.f32 	%f891, %f890, 0fBF000000, %f1370;
	and.b32  	%r446, %r2, 3;
	mul.lo.s32 	%r447, %r446, %r18;
	shl.b32 	%r448, %r447, 1;
	neg.s32 	%r61, %r448;
	cvt.rn.f32.s32 	%f916, %r61;
	mov.f32 	%f917, 0f41000000;
	div.approx.f32 	%f110, %f916, %f917;
	abs.f32 	%f1374, %f110;
	setp.lt.f32 	%p141, %f1374, 0f40000000;
	@%p141 bra 	LBB0_76;
// %bb.65:
	setp.gtu.f32 	%p142, %f1374, 0f4B800000;
	@%p142 bra 	LBB0_72;
	bra.uni 	LBB0_66;
LBB0_72:
	mov.b32 	%r63, %f1374;
	and.b32  	%r449, %r63, 8388607;
	or.b32  	%r16172, %r449, 1065353216;
	mov.b32 	%f1373, %r16172;
	add.s32 	%r450, %r63, -1073741824;
	and.b32  	%r16173, %r450, -8388608;
	setp.eq.s32 	%p148, %r16173, 0;
	@%p148 bra 	LBB0_75;
// %bb.73:                              // %__nv_fmaf_rn.exit4.i.i.i2275.preheader
	mov.f32 	%f927, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f926,%f927;
	// end inline asm
LBB0_74:                                // %__nv_fmaf_rn.exit4.i.i.i2275
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r451, %r16173, 192937984;
	add.s32 	%r452, %r451, %r16172;
	mov.b32 	%f928, %r452;
	mul.f32 	%f929, %f926, %f928;
	sub.f32 	%f930, %f928, %f929;
	fma.rn.f32 	%f931, %f930, %f926, %f929;
	sub.f32 	%f932, %f928, %f931;
	fma.rz.f32 	%f933, %f932, %f926, %f931;
	cvt.rzi.f32.f32 	%f934, %f933;
	sub.f32 	%f1373, %f928, %f934;
	sub.s32 	%r16173, %r16173, %r451;
	mov.b32 	%r16172, %f1373;
	setp.ne.s32 	%p149, %r16173, 0;
	setp.ne.s32 	%p150, %r16172, 0;
	and.pred  	%p151, %p149, %p150;
	@%p151 bra 	LBB0_74;
LBB0_75:                                // %__internal_fmodf_slowpath_mod.exit.i.i2277
	setp.gt.u32 	%p152, %r63, 2139095039;
	selp.f32 	%f935, 0f7FFFFFFF, 0f4B800000, %p152;
	mul.f32 	%f936, %f1373, 0f34000000;
	mul.f32 	%f1374, %f935, %f936;
	bra.uni 	LBB0_76;
LBB0_66:                                // %__nv_fast_fdividef.exit.i.i.i2247
	div.approx.f32 	%f919, %f1374, %f255;
	cvt.rzi.f32.f32 	%f1372, %f919;
	fma.rn.f32 	%f113, %f1372, 0fC0000000, %f1374;
	mov.b32 	%r62, %f113;
	setp.lt.u32 	%p143, %r62, 1073741824;
	@%p143 bra 	LBB0_71;
// %bb.67:
	setp.lt.u32 	%p144, %r62, -2147483647;
	@%p144 bra 	LBB0_69;
// %bb.68:
	add.f32 	%f924, %f1372, 0fBF800000;
	setp.lt.f32 	%p147, %f113, 0fC0000000;
	add.f32 	%f925, %f924, 0fBF800000;
	selp.f32 	%f1372, %f925, %f924, %p147;
	bra.uni 	LBB0_71;
LBB0_69:
	add.f32 	%f1372, %f1372, 0f3F800000;
	setp.ltu.f32 	%p145, %f113, 0f40800000;
	@%p145 bra 	LBB0_71;
// %bb.70:                              // %__nv_fmaf_rn.exit.i.i.i2252
	add.f32 	%f920, %f1372, 0f3F800000;
	fma.rn.f32 	%f922, %f255, 0fC0400000, %f113;
	setp.ge.f32 	%p146, %f922, 0f00000000;
	add.f32 	%f923, %f920, 0f3F800000;
	selp.f32 	%f1372, %f923, %f920, %p146;
LBB0_71:                                // %__internal_fmodf_fastpath_quot.exit.i.i2256
	fma.rn.f32 	%f1374, %f1372, 0fC0000000, %f1374;
LBB0_76:                                // %__internal_fmodf_kernel.exit.i2281
	selp.f32 	%f269, %f264, %f267, %p6;
	cvt.rzi.f32.f32 	%f270, %f264;
	setp.lt.f32 	%p7, %f268, 0f3F000000;
	selp.f32 	%f303, %f298, %f301, %p12;
	cvt.rzi.f32.f32 	%f304, %f298;
	setp.lt.f32 	%p13, %f302, 0f3F000000;
	selp.f32 	%f338, %f333, %f336, %p18;
	cvt.rzi.f32.f32 	%f339, %f333;
	setp.lt.f32 	%p19, %f337, 0f3F000000;
	selp.f32 	%f372, %f367, %f370, %p24;
	cvt.rzi.f32.f32 	%f373, %f367;
	setp.lt.f32 	%p25, %f371, 0f3F000000;
	selp.f32 	%f407, %f402, %f405, %p30;
	cvt.rzi.f32.f32 	%f408, %f402;
	setp.lt.f32 	%p31, %f406, 0f3F000000;
	selp.f32 	%f441, %f436, %f439, %p36;
	cvt.rzi.f32.f32 	%f442, %f436;
	setp.lt.f32 	%p37, %f440, 0f3F000000;
	selp.f32 	%f476, %f471, %f474, %p42;
	cvt.rzi.f32.f32 	%f477, %f471;
	setp.lt.f32 	%p43, %f475, 0f3F000000;
	selp.f32 	%f510, %f505, %f508, %p48;
	cvt.rzi.f32.f32 	%f511, %f505;
	setp.lt.f32 	%p49, %f509, 0f3F000000;
	selp.f32 	%f545, %f540, %f543, %p54;
	cvt.rzi.f32.f32 	%f546, %f540;
	setp.lt.f32 	%p55, %f544, 0f3F000000;
	selp.f32 	%f579, %f574, %f577, %p60;
	cvt.rzi.f32.f32 	%f580, %f574;
	setp.lt.f32 	%p61, %f578, 0f3F000000;
	selp.f32 	%f614, %f609, %f612, %p66;
	cvt.rzi.f32.f32 	%f615, %f609;
	setp.lt.f32 	%p67, %f613, 0f3F000000;
	selp.f32 	%f648, %f643, %f646, %p72;
	cvt.rzi.f32.f32 	%f649, %f643;
	setp.lt.f32 	%p73, %f647, 0f3F000000;
	selp.f32 	%f683, %f678, %f681, %p78;
	cvt.rzi.f32.f32 	%f684, %f678;
	setp.lt.f32 	%p79, %f682, 0f3F000000;
	selp.f32 	%f717, %f712, %f715, %p84;
	cvt.rzi.f32.f32 	%f718, %f712;
	setp.lt.f32 	%p85, %f716, 0f3F000000;
	selp.f32 	%f752, %f747, %f750, %p90;
	cvt.rzi.f32.f32 	%f753, %f747;
	setp.lt.f32 	%p91, %f751, 0f3F000000;
	selp.f32 	%f786, %f781, %f784, %p96;
	cvt.rzi.f32.f32 	%f787, %f781;
	setp.lt.f32 	%p97, %f785, 0f3F000000;
	mul.f32 	%f839, %f838, 0f34222169;
	mul.f32 	%f892, %f891, 0f34222169;
	abs.f32 	%f937, %f1374;
	setp.gtu.f32 	%p153, %f937, 0f7F800000;
	@%p153 bra 	LBB0_78;
// %bb.77:
	mov.b32 	%r453, %f110;
	and.b32  	%r454, %r453, -2147483648;
	mov.b32 	%r455, %f1374;
	or.b32  	%r456, %r454, %r455;
	mov.b32 	%f1374, %r456;
LBB0_78:                                // %__nv_fmodf.exit2282
	selp.f32 	%f271, %f270, %f269, %p7;
	selp.f32 	%f305, %f304, %f303, %p13;
	selp.f32 	%f340, %f339, %f338, %p19;
	selp.f32 	%f374, %f373, %f372, %p25;
	selp.f32 	%f409, %f408, %f407, %p31;
	selp.f32 	%f443, %f442, %f441, %p37;
	selp.f32 	%f478, %f477, %f476, %p43;
	selp.f32 	%f512, %f511, %f510, %p49;
	selp.f32 	%f547, %f546, %f545, %p55;
	selp.f32 	%f581, %f580, %f579, %p61;
	selp.f32 	%f616, %f615, %f614, %p67;
	selp.f32 	%f650, %f649, %f648, %p73;
	selp.f32 	%f685, %f684, %f683, %p79;
	selp.f32 	%f719, %f718, %f717, %p85;
	selp.f32 	%f754, %f753, %f752, %p91;
	selp.f32 	%f788, %f787, %f786, %p97;
	fma.rn.f32 	%f840, %f838, 0f40490FDA, %f839;
	fma.rn.f32 	%f893, %f891, 0f40490FDA, %f892;
	add.f32 	%f938, %f1374, %f1374;
	mov.b32 	%r457, %f938;
	and.b32  	%r458, %r457, -2147483648;
	or.b32  	%r459, %r458, 1056964608;
	mov.b32 	%f939, %r459;
	add.f32 	%f940, %f938, %f939;
	cvt.rzi.f32.f32 	%f941, %f940;
	abs.f32 	%f942, %f938;
	setp.gt.f32 	%p154, %f942, 0f4B000000;
	selp.f32 	%f943, %f938, %f941, %p154;
	cvt.rzi.f32.f32 	%f944, %f938;
	setp.lt.f32 	%p155, %f942, 0f3F000000;
	selp.f32 	%f945, %f944, %f943, %p155;
	fma.rn.f32 	%f946, %f945, 0fBF000000, %f1374;
	mul.f32 	%f947, %f946, 0f34222169;
	fma.rn.f32 	%f948, %f946, 0f40490FDA, %f947;
	shl.b32 	%r70, %r18, 3;
	sub.s32 	%r465, %r61, %r70;
	cvt.rn.f32.s32 	%f969, %r465;
	div.approx.f32 	%f129, %f969, %f917;
	abs.f32 	%f1378, %f129;
	setp.lt.f32 	%p161, %f1378, 0f40000000;
	@%p161 bra 	LBB0_90;
// %bb.79:
	setp.gtu.f32 	%p162, %f1378, 0f4B800000;
	@%p162 bra 	LBB0_86;
	bra.uni 	LBB0_80;
LBB0_86:
	mov.b32 	%r72, %f1378;
	and.b32  	%r466, %r72, 8388607;
	or.b32  	%r16174, %r466, 1065353216;
	mov.b32 	%f1377, %r16174;
	add.s32 	%r467, %r72, -1073741824;
	and.b32  	%r16175, %r467, -8388608;
	setp.eq.s32 	%p168, %r16175, 0;
	@%p168 bra 	LBB0_89;
// %bb.87:                              // %__nv_fmaf_rn.exit4.i.i.i2321.preheader
	mov.f32 	%f980, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f979,%f980;
	// end inline asm
LBB0_88:                                // %__nv_fmaf_rn.exit4.i.i.i2321
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r468, %r16175, 192937984;
	add.s32 	%r469, %r468, %r16174;
	mov.b32 	%f981, %r469;
	mul.f32 	%f982, %f979, %f981;
	sub.f32 	%f983, %f981, %f982;
	fma.rn.f32 	%f984, %f983, %f979, %f982;
	sub.f32 	%f985, %f981, %f984;
	fma.rz.f32 	%f986, %f985, %f979, %f984;
	cvt.rzi.f32.f32 	%f987, %f986;
	sub.f32 	%f1377, %f981, %f987;
	sub.s32 	%r16175, %r16175, %r468;
	mov.b32 	%r16174, %f1377;
	setp.ne.s32 	%p169, %r16175, 0;
	setp.ne.s32 	%p170, %r16174, 0;
	and.pred  	%p171, %p169, %p170;
	@%p171 bra 	LBB0_88;
LBB0_89:                                // %__internal_fmodf_slowpath_mod.exit.i.i2323
	setp.gt.u32 	%p172, %r72, 2139095039;
	selp.f32 	%f988, 0f7FFFFFFF, 0f4B800000, %p172;
	mul.f32 	%f989, %f1377, 0f34000000;
	mul.f32 	%f1378, %f988, %f989;
	bra.uni 	LBB0_90;
LBB0_80:                                // %__nv_fast_fdividef.exit.i.i.i2293
	div.approx.f32 	%f972, %f1378, %f255;
	cvt.rzi.f32.f32 	%f1376, %f972;
	fma.rn.f32 	%f132, %f1376, 0fC0000000, %f1378;
	mov.b32 	%r71, %f132;
	setp.lt.u32 	%p163, %r71, 1073741824;
	@%p163 bra 	LBB0_85;
// %bb.81:
	setp.lt.u32 	%p164, %r71, -2147483647;
	@%p164 bra 	LBB0_83;
// %bb.82:
	add.f32 	%f977, %f1376, 0fBF800000;
	setp.lt.f32 	%p167, %f132, 0fC0000000;
	add.f32 	%f978, %f977, 0fBF800000;
	selp.f32 	%f1376, %f978, %f977, %p167;
	bra.uni 	LBB0_85;
LBB0_83:
	add.f32 	%f1376, %f1376, 0f3F800000;
	setp.ltu.f32 	%p165, %f132, 0f40800000;
	@%p165 bra 	LBB0_85;
// %bb.84:                              // %__nv_fmaf_rn.exit.i.i.i2298
	add.f32 	%f973, %f1376, 0f3F800000;
	fma.rn.f32 	%f975, %f255, 0fC0400000, %f132;
	setp.ge.f32 	%p166, %f975, 0f00000000;
	add.f32 	%f976, %f973, 0f3F800000;
	selp.f32 	%f1376, %f976, %f973, %p166;
LBB0_85:                                // %__internal_fmodf_fastpath_quot.exit.i.i2302
	fma.rn.f32 	%f1378, %f1376, 0fC0000000, %f1378;
LBB0_90:                                // %__internal_fmodf_kernel.exit.i2327
	fma.rn.f32 	%f272, %f271, 0fBF000000, %f263;
	fma.rn.f32 	%f306, %f305, 0fBF000000, %f297;
	fma.rn.f32 	%f341, %f340, 0fBF000000, %f332;
	fma.rn.f32 	%f375, %f374, 0fBF000000, %f366;
	fma.rn.f32 	%f410, %f409, 0fBF000000, %f401;
	fma.rn.f32 	%f444, %f443, 0fBF000000, %f435;
	fma.rn.f32 	%f479, %f478, 0fBF000000, %f470;
	fma.rn.f32 	%f513, %f512, 0fBF000000, %f504;
	fma.rn.f32 	%f548, %f547, 0fBF000000, %f539;
	fma.rn.f32 	%f582, %f581, 0fBF000000, %f573;
	fma.rn.f32 	%f617, %f616, 0fBF000000, %f608;
	fma.rn.f32 	%f651, %f650, 0fBF000000, %f642;
	fma.rn.f32 	%f686, %f685, 0fBF000000, %f677;
	fma.rn.f32 	%f720, %f719, 0fBF000000, %f711;
	fma.rn.f32 	%f755, %f754, 0fBF000000, %f746;
	fma.rn.f32 	%f789, %f788, 0fBF000000, %f780;
	mul.f32 	%f841, %f840, %f840;
	mul.f32 	%f894, %f893, %f893;
	mul.f32 	%f949, %f948, %f948;
	shl.b32 	%r10, %r2, 1;
	abs.f32 	%f990, %f1378;
	setp.gtu.f32 	%p173, %f990, 0f7F800000;
	@%p173 bra 	LBB0_92;
// %bb.91:
	mov.b32 	%r470, %f129;
	and.b32  	%r471, %r470, -2147483648;
	mov.b32 	%r472, %f1378;
	or.b32  	%r473, %r471, %r472;
	mov.b32 	%f1378, %r473;
LBB0_92:                                // %__nv_fmodf.exit2328
	mul.f32 	%f273, %f272, %f272;
	mul.f32 	%f307, %f306, %f306;
	mul.f32 	%f342, %f341, %f341;
	mul.f32 	%f376, %f375, %f375;
	mul.f32 	%f411, %f410, %f410;
	mul.f32 	%f445, %f444, %f444;
	mul.f32 	%f480, %f479, %f479;
	mul.f32 	%f514, %f513, %f513;
	mul.f32 	%f549, %f548, %f548;
	mul.f32 	%f583, %f582, %f582;
	mul.f32 	%f618, %f617, %f617;
	mul.f32 	%f652, %f651, %f651;
	mul.f32 	%f687, %f686, %f686;
	mul.f32 	%f721, %f720, %f720;
	mul.f32 	%f756, %f755, %f755;
	mul.f32 	%f790, %f789, %f789;
	fma.rn.f32 	%f842, %f841, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f895, %f894, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f950, %f949, 0f37CBAC00, 0fBAB607ED;
	add.f32 	%f991, %f1378, %f1378;
	mov.b32 	%r486, %f991;
	and.b32  	%r487, %r486, -2147483648;
	or.b32  	%r488, %r487, 1056964608;
	mov.b32 	%f992, %r488;
	add.f32 	%f993, %f991, %f992;
	cvt.rzi.f32.f32 	%f994, %f993;
	abs.f32 	%f995, %f991;
	setp.gt.f32 	%p174, %f995, 0f4B000000;
	selp.f32 	%f996, %f991, %f994, %p174;
	cvt.rzi.f32.f32 	%f997, %f991;
	setp.lt.f32 	%p175, %f995, 0f3F000000;
	selp.f32 	%f998, %f997, %f996, %p175;
	fma.rn.f32 	%f999, %f998, 0fBF000000, %f1378;
	mul.f32 	%f1000, %f999, 0f34222169;
	fma.rn.f32 	%f1001, %f999, 0f40490FDA, %f1000;
	mul.f32 	%f1002, %f1001, %f1001;
	fma.rn.f32 	%f1003, %f1002, 0f37CBAC00, 0fBAB607ED;
	and.b32  	%r494, %r10, 6;
	shl.b32 	%r495, %r494, 1;
	neg.s32 	%r83, %r495;
	mul.lo.s32 	%r84, %r83, %r18;
	cvt.rn.f32.s32 	%f1024, %r84;
	div.approx.f32 	%f146, %f1024, %f287;
	abs.f32 	%f1382, %f146;
	setp.lt.f32 	%p181, %f1382, 0f40000000;
	@%p181 bra 	LBB0_104;
// %bb.93:
	setp.gtu.f32 	%p182, %f1382, 0f4B800000;
	@%p182 bra 	LBB0_100;
	bra.uni 	LBB0_94;
LBB0_100:
	mov.b32 	%r86, %f1382;
	and.b32  	%r496, %r86, 8388607;
	or.b32  	%r16176, %r496, 1065353216;
	mov.b32 	%f1381, %r16176;
	add.s32 	%r497, %r86, -1073741824;
	and.b32  	%r16177, %r497, -8388608;
	setp.eq.s32 	%p188, %r16177, 0;
	@%p188 bra 	LBB0_103;
// %bb.101:                             // %__nv_fmaf_rn.exit4.i.i.i2367.preheader
	mov.f32 	%f1035, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1034,%f1035;
	// end inline asm
LBB0_102:                               // %__nv_fmaf_rn.exit4.i.i.i2367
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r498, %r16177, 192937984;
	add.s32 	%r499, %r498, %r16176;
	mov.b32 	%f1036, %r499;
	mul.f32 	%f1037, %f1034, %f1036;
	sub.f32 	%f1038, %f1036, %f1037;
	fma.rn.f32 	%f1039, %f1038, %f1034, %f1037;
	sub.f32 	%f1040, %f1036, %f1039;
	fma.rz.f32 	%f1041, %f1040, %f1034, %f1039;
	cvt.rzi.f32.f32 	%f1042, %f1041;
	sub.f32 	%f1381, %f1036, %f1042;
	sub.s32 	%r16177, %r16177, %r498;
	mov.b32 	%r16176, %f1381;
	setp.ne.s32 	%p189, %r16177, 0;
	setp.ne.s32 	%p190, %r16176, 0;
	and.pred  	%p191, %p189, %p190;
	@%p191 bra 	LBB0_102;
LBB0_103:                               // %__internal_fmodf_slowpath_mod.exit.i.i2369
	setp.gt.u32 	%p192, %r86, 2139095039;
	selp.f32 	%f1043, 0f7FFFFFFF, 0f4B800000, %p192;
	mul.f32 	%f1044, %f1381, 0f34000000;
	mul.f32 	%f1382, %f1043, %f1044;
	bra.uni 	LBB0_104;
LBB0_94:                                // %__nv_fast_fdividef.exit.i.i.i2339
	div.approx.f32 	%f1027, %f1382, %f255;
	cvt.rzi.f32.f32 	%f1380, %f1027;
	fma.rn.f32 	%f149, %f1380, 0fC0000000, %f1382;
	mov.b32 	%r85, %f149;
	setp.lt.u32 	%p183, %r85, 1073741824;
	@%p183 bra 	LBB0_99;
// %bb.95:
	setp.lt.u32 	%p184, %r85, -2147483647;
	@%p184 bra 	LBB0_97;
// %bb.96:
	add.f32 	%f1032, %f1380, 0fBF800000;
	setp.lt.f32 	%p187, %f149, 0fC0000000;
	add.f32 	%f1033, %f1032, 0fBF800000;
	selp.f32 	%f1380, %f1033, %f1032, %p187;
	bra.uni 	LBB0_99;
LBB0_97:
	add.f32 	%f1380, %f1380, 0f3F800000;
	setp.ltu.f32 	%p185, %f149, 0f40800000;
	@%p185 bra 	LBB0_99;
// %bb.98:                              // %__nv_fmaf_rn.exit.i.i.i2344
	add.f32 	%f1028, %f1380, 0f3F800000;
	fma.rn.f32 	%f1030, %f255, 0fC0400000, %f149;
	setp.ge.f32 	%p186, %f1030, 0f00000000;
	add.f32 	%f1031, %f1028, 0f3F800000;
	selp.f32 	%f1380, %f1031, %f1028, %p186;
LBB0_99:                                // %__internal_fmodf_fastpath_quot.exit.i.i2348
	fma.rn.f32 	%f1382, %f1380, 0fC0000000, %f1382;
LBB0_104:                               // %__internal_fmodf_kernel.exit.i2373
	cvt.rzi.s32.f32 	%r261, %f271;
	fma.rn.f32 	%f274, %f273, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f275, %f273, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r268, %f305;
	fma.rn.f32 	%f308, %f307, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f309, %f307, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r279, %f340;
	fma.rn.f32 	%f343, %f342, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f344, %f342, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r286, %f374;
	fma.rn.f32 	%f377, %f376, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f378, %f376, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r297, %f409;
	fma.rn.f32 	%f412, %f411, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f413, %f411, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r304, %f443;
	fma.rn.f32 	%f446, %f445, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f447, %f445, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r315, %f478;
	fma.rn.f32 	%f481, %f480, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f482, %f480, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r322, %f512;
	fma.rn.f32 	%f515, %f514, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f516, %f514, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r333, %f547;
	fma.rn.f32 	%f550, %f549, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f551, %f549, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r340, %f581;
	fma.rn.f32 	%f584, %f583, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f585, %f583, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r351, %f616;
	fma.rn.f32 	%f619, %f618, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f620, %f618, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r358, %f650;
	fma.rn.f32 	%f653, %f652, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f654, %f652, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r369, %f685;
	fma.rn.f32 	%f688, %f687, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f689, %f687, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r376, %f719;
	fma.rn.f32 	%f722, %f721, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f723, %f721, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r387, %f754;
	fma.rn.f32 	%f757, %f756, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f758, %f756, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r394, %f788;
	fma.rn.f32 	%f791, %f790, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f792, %f790, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r412, %f837;
	fma.rn.f32 	%f843, %f842, %f841, 0f3D2AAABB;
	fma.rn.f32 	%f847, %f841, 0fB94D4153, 0f3C0885E4;
	cvt.rzi.s32.f32 	%r441, %f890;
	fma.rn.f32 	%f896, %f895, %f894, 0f3D2AAABB;
	fma.rn.f32 	%f900, %f894, 0fB94D4153, 0f3C0885E4;
	cvt.rzi.s32.f32 	%r460, %f945;
	fma.rn.f32 	%f951, %f950, %f949, 0f3D2AAABB;
	fma.rn.f32 	%f955, %f949, 0fB94D4153, 0f3C0885E4;
	cvt.rzi.s32.f32 	%r489, %f998;
	fma.rn.f32 	%f1004, %f1003, %f1002, 0f3D2AAABB;
	fma.rn.f32 	%f1008, %f1002, 0fB94D4153, 0f3C0885E4;
	abs.f32 	%f1045, %f1382;
	setp.gtu.f32 	%p193, %f1045, 0f7F800000;
	@%p193 bra 	LBB0_106;
// %bb.105:
	mov.b32 	%r500, %f146;
	and.b32  	%r501, %r500, -2147483648;
	mov.b32 	%r502, %f1382;
	or.b32  	%r503, %r501, %r502;
	mov.b32 	%f1382, %r503;
LBB0_106:                               // %__nv_fmodf.exit2374
	add.s32 	%r262, %r261, 1;
	fma.rn.f32 	%f276, %f274, %f273, 0fC0A55DF6;
	fma.rn.f32 	%f277, %f275, %f273, 0f4081E0CF;
	fma.rn.f32 	%f278, %f273, %f272, 0f00000000;
	add.s32 	%r269, %r268, 1;
	fma.rn.f32 	%f310, %f308, %f307, 0fC0A55DF6;
	fma.rn.f32 	%f311, %f309, %f307, 0f4081E0CF;
	fma.rn.f32 	%f312, %f307, %f306, 0f00000000;
	add.s32 	%r280, %r279, 1;
	fma.rn.f32 	%f345, %f343, %f342, 0fC0A55DF6;
	fma.rn.f32 	%f346, %f344, %f342, 0f4081E0CF;
	fma.rn.f32 	%f347, %f342, %f341, 0f00000000;
	add.s32 	%r287, %r286, 1;
	fma.rn.f32 	%f379, %f377, %f376, 0fC0A55DF6;
	fma.rn.f32 	%f380, %f378, %f376, 0f4081E0CF;
	fma.rn.f32 	%f381, %f376, %f375, 0f00000000;
	add.s32 	%r298, %r297, 1;
	fma.rn.f32 	%f414, %f412, %f411, 0fC0A55DF6;
	fma.rn.f32 	%f415, %f413, %f411, 0f4081E0CF;
	fma.rn.f32 	%f416, %f411, %f410, 0f00000000;
	add.s32 	%r305, %r304, 1;
	fma.rn.f32 	%f448, %f446, %f445, 0fC0A55DF6;
	fma.rn.f32 	%f449, %f447, %f445, 0f4081E0CF;
	fma.rn.f32 	%f450, %f445, %f444, 0f00000000;
	add.s32 	%r316, %r315, 1;
	fma.rn.f32 	%f483, %f481, %f480, 0fC0A55DF6;
	fma.rn.f32 	%f484, %f482, %f480, 0f4081E0CF;
	fma.rn.f32 	%f485, %f480, %f479, 0f00000000;
	add.s32 	%r323, %r322, 1;
	fma.rn.f32 	%f517, %f515, %f514, 0fC0A55DF6;
	fma.rn.f32 	%f518, %f516, %f514, 0f4081E0CF;
	fma.rn.f32 	%f519, %f514, %f513, 0f00000000;
	add.s32 	%r334, %r333, 1;
	fma.rn.f32 	%f552, %f550, %f549, 0fC0A55DF6;
	fma.rn.f32 	%f553, %f551, %f549, 0f4081E0CF;
	fma.rn.f32 	%f554, %f549, %f548, 0f00000000;
	add.s32 	%r341, %r340, 1;
	fma.rn.f32 	%f586, %f584, %f583, 0fC0A55DF6;
	fma.rn.f32 	%f587, %f585, %f583, 0f4081E0CF;
	fma.rn.f32 	%f588, %f583, %f582, 0f00000000;
	add.s32 	%r352, %r351, 1;
	fma.rn.f32 	%f621, %f619, %f618, 0fC0A55DF6;
	fma.rn.f32 	%f622, %f620, %f618, 0f4081E0CF;
	fma.rn.f32 	%f623, %f618, %f617, 0f00000000;
	add.s32 	%r359, %r358, 1;
	fma.rn.f32 	%f655, %f653, %f652, 0fC0A55DF6;
	fma.rn.f32 	%f656, %f654, %f652, 0f4081E0CF;
	fma.rn.f32 	%f657, %f652, %f651, 0f00000000;
	add.s32 	%r370, %r369, 1;
	fma.rn.f32 	%f690, %f688, %f687, 0fC0A55DF6;
	fma.rn.f32 	%f691, %f689, %f687, 0f4081E0CF;
	fma.rn.f32 	%f692, %f687, %f686, 0f00000000;
	add.s32 	%r377, %r376, 1;
	fma.rn.f32 	%f724, %f722, %f721, 0fC0A55DF6;
	fma.rn.f32 	%f725, %f723, %f721, 0f4081E0CF;
	fma.rn.f32 	%f726, %f721, %f720, 0f00000000;
	add.s32 	%r388, %r387, 1;
	fma.rn.f32 	%f759, %f757, %f756, 0fC0A55DF6;
	fma.rn.f32 	%f760, %f758, %f756, 0f4081E0CF;
	fma.rn.f32 	%f761, %f756, %f755, 0f00000000;
	add.s32 	%r395, %r394, 1;
	fma.rn.f32 	%f793, %f791, %f790, 0fC0A55DF6;
	fma.rn.f32 	%f794, %f792, %f790, 0f4081E0CF;
	fma.rn.f32 	%f795, %f790, %f789, 0f00000000;
	fma.rn.f32 	%f844, %f843, %f841, 0fBEFFFFFF;
	fma.rn.f32 	%f846, %f841, %f840, 0f00000000;
	fma.rn.f32 	%f848, %f847, %f841, 0fBE2AAAA8;
	and.b32  	%r413, %r412, 1;
	fma.rn.f32 	%f897, %f896, %f894, 0fBEFFFFFF;
	fma.rn.f32 	%f899, %f894, %f893, 0f00000000;
	fma.rn.f32 	%f901, %f900, %f894, 0fBE2AAAA8;
	and.b32  	%r442, %r441, 1;
	fma.rn.f32 	%f952, %f951, %f949, 0fBEFFFFFF;
	fma.rn.f32 	%f954, %f949, %f948, 0f00000000;
	fma.rn.f32 	%f956, %f955, %f949, 0fBE2AAAA8;
	and.b32  	%r461, %r460, 1;
	fma.rn.f32 	%f1005, %f1004, %f1002, 0fBEFFFFFF;
	fma.rn.f32 	%f1007, %f1002, %f1001, 0f00000000;
	fma.rn.f32 	%f1009, %f1008, %f1002, 0fBE2AAAA8;
	and.b32  	%r490, %r489, 1;
	add.f32 	%f1046, %f1382, %f1382;
	mov.b32 	%r504, %f1046;
	and.b32  	%r505, %r504, -2147483648;
	or.b32  	%r506, %r505, 1056964608;
	mov.b32 	%f1047, %r506;
	add.f32 	%f1048, %f1046, %f1047;
	cvt.rzi.f32.f32 	%f1049, %f1048;
	abs.f32 	%f1050, %f1046;
	setp.gt.f32 	%p194, %f1050, 0f4B000000;
	selp.f32 	%f1051, %f1046, %f1049, %p194;
	cvt.rzi.f32.f32 	%f1052, %f1046;
	setp.lt.f32 	%p195, %f1050, 0f3F000000;
	selp.f32 	%f1053, %f1052, %f1051, %p195;
	cvt.rzi.s32.f32 	%r507, %f1053;
	fma.rn.f32 	%f1054, %f1053, 0fBF000000, %f1382;
	mul.f32 	%f1055, %f1054, 0f34222169;
	fma.rn.f32 	%f1056, %f1054, 0f40490FDA, %f1055;
	mul.f32 	%f1057, %f1056, %f1056;
	fma.rn.f32 	%f1058, %f1057, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f1059, %f1058, %f1057, 0f3D2AAABB;
	fma.rn.f32 	%f1063, %f1057, 0fB94D4153, 0f3C0885E4;
	sub.s32 	%r512, %r84, %r70;
	cvt.rn.f32.s32 	%f1077, %r512;
	div.approx.f32 	%f165, %f1077, %f287;
	abs.f32 	%f1386, %f165;
	setp.lt.f32 	%p201, %f1386, 0f40000000;
	@%p201 bra 	LBB0_118;
// %bb.107:
	setp.gtu.f32 	%p202, %f1386, 0f4B800000;
	@%p202 bra 	LBB0_114;
	bra.uni 	LBB0_108;
LBB0_114:
	mov.b32 	%r94, %f1386;
	and.b32  	%r513, %r94, 8388607;
	or.b32  	%r16178, %r513, 1065353216;
	mov.b32 	%f1385, %r16178;
	add.s32 	%r514, %r94, -1073741824;
	and.b32  	%r16179, %r514, -8388608;
	setp.eq.s32 	%p208, %r16179, 0;
	@%p208 bra 	LBB0_117;
// %bb.115:                             // %__nv_fmaf_rn.exit4.i.i.i2413.preheader
	mov.f32 	%f1088, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1087,%f1088;
	// end inline asm
LBB0_116:                               // %__nv_fmaf_rn.exit4.i.i.i2413
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r515, %r16179, 192937984;
	add.s32 	%r516, %r515, %r16178;
	mov.b32 	%f1089, %r516;
	mul.f32 	%f1090, %f1087, %f1089;
	sub.f32 	%f1091, %f1089, %f1090;
	fma.rn.f32 	%f1092, %f1091, %f1087, %f1090;
	sub.f32 	%f1093, %f1089, %f1092;
	fma.rz.f32 	%f1094, %f1093, %f1087, %f1092;
	cvt.rzi.f32.f32 	%f1095, %f1094;
	sub.f32 	%f1385, %f1089, %f1095;
	sub.s32 	%r16179, %r16179, %r515;
	mov.b32 	%r16178, %f1385;
	setp.ne.s32 	%p209, %r16179, 0;
	setp.ne.s32 	%p210, %r16178, 0;
	and.pred  	%p211, %p209, %p210;
	@%p211 bra 	LBB0_116;
LBB0_117:                               // %__internal_fmodf_slowpath_mod.exit.i.i2415
	setp.gt.u32 	%p212, %r94, 2139095039;
	selp.f32 	%f1096, 0f7FFFFFFF, 0f4B800000, %p212;
	mul.f32 	%f1097, %f1385, 0f34000000;
	mul.f32 	%f1386, %f1096, %f1097;
	bra.uni 	LBB0_118;
LBB0_108:                               // %__nv_fast_fdividef.exit.i.i.i2385
	div.approx.f32 	%f1080, %f1386, %f255;
	cvt.rzi.f32.f32 	%f1384, %f1080;
	fma.rn.f32 	%f168, %f1384, 0fC0000000, %f1386;
	mov.b32 	%r93, %f168;
	setp.lt.u32 	%p203, %r93, 1073741824;
	@%p203 bra 	LBB0_113;
// %bb.109:
	setp.lt.u32 	%p204, %r93, -2147483647;
	@%p204 bra 	LBB0_111;
// %bb.110:
	add.f32 	%f1085, %f1384, 0fBF800000;
	setp.lt.f32 	%p207, %f168, 0fC0000000;
	add.f32 	%f1086, %f1085, 0fBF800000;
	selp.f32 	%f1384, %f1086, %f1085, %p207;
	bra.uni 	LBB0_113;
LBB0_111:
	add.f32 	%f1384, %f1384, 0f3F800000;
	setp.ltu.f32 	%p205, %f168, 0f40800000;
	@%p205 bra 	LBB0_113;
// %bb.112:                             // %__nv_fmaf_rn.exit.i.i.i2390
	add.f32 	%f1081, %f1384, 0f3F800000;
	fma.rn.f32 	%f1083, %f255, 0fC0400000, %f168;
	setp.ge.f32 	%p206, %f1083, 0f00000000;
	add.f32 	%f1084, %f1081, 0f3F800000;
	selp.f32 	%f1384, %f1084, %f1081, %p206;
LBB0_113:                               // %__internal_fmodf_fastpath_quot.exit.i.i2394
	fma.rn.f32 	%f1386, %f1384, 0fC0000000, %f1386;
LBB0_118:                               // %__internal_fmodf_kernel.exit.i2419
	fma.rn.f32 	%f279, %f277, %f273, 0fC09DE9E6;
	fma.rn.f32 	%f280, %f276, %f278, 0f00000000;
	and.b32  	%r263, %r262, 1;
	fma.rn.f32 	%f313, %f311, %f307, 0fC09DE9E6;
	fma.rn.f32 	%f314, %f310, %f312, 0f00000000;
	and.b32  	%r270, %r269, 1;
	fma.rn.f32 	%f348, %f346, %f342, 0fC09DE9E6;
	fma.rn.f32 	%f349, %f345, %f347, 0f00000000;
	and.b32  	%r281, %r280, 1;
	fma.rn.f32 	%f382, %f380, %f376, 0fC09DE9E6;
	fma.rn.f32 	%f383, %f379, %f381, 0f00000000;
	and.b32  	%r288, %r287, 1;
	fma.rn.f32 	%f417, %f415, %f411, 0fC09DE9E6;
	fma.rn.f32 	%f418, %f414, %f416, 0f00000000;
	and.b32  	%r299, %r298, 1;
	fma.rn.f32 	%f451, %f449, %f445, 0fC09DE9E6;
	fma.rn.f32 	%f452, %f448, %f450, 0f00000000;
	and.b32  	%r306, %r305, 1;
	fma.rn.f32 	%f486, %f484, %f480, 0fC09DE9E6;
	fma.rn.f32 	%f487, %f483, %f485, 0f00000000;
	and.b32  	%r317, %r316, 1;
	fma.rn.f32 	%f520, %f518, %f514, 0fC09DE9E6;
	fma.rn.f32 	%f521, %f517, %f519, 0f00000000;
	and.b32  	%r324, %r323, 1;
	fma.rn.f32 	%f555, %f553, %f549, 0fC09DE9E6;
	fma.rn.f32 	%f556, %f552, %f554, 0f00000000;
	and.b32  	%r335, %r334, 1;
	fma.rn.f32 	%f589, %f587, %f583, 0fC09DE9E6;
	fma.rn.f32 	%f590, %f586, %f588, 0f00000000;
	and.b32  	%r342, %r341, 1;
	fma.rn.f32 	%f624, %f622, %f618, 0fC09DE9E6;
	fma.rn.f32 	%f625, %f621, %f623, 0f00000000;
	and.b32  	%r353, %r352, 1;
	fma.rn.f32 	%f658, %f656, %f652, 0fC09DE9E6;
	fma.rn.f32 	%f659, %f655, %f657, 0f00000000;
	and.b32  	%r360, %r359, 1;
	fma.rn.f32 	%f693, %f691, %f687, 0fC09DE9E6;
	fma.rn.f32 	%f694, %f690, %f692, 0f00000000;
	and.b32  	%r371, %r370, 1;
	fma.rn.f32 	%f727, %f725, %f721, 0fC09DE9E6;
	fma.rn.f32 	%f728, %f724, %f726, 0f00000000;
	and.b32  	%r378, %r377, 1;
	fma.rn.f32 	%f762, %f760, %f756, 0fC09DE9E6;
	fma.rn.f32 	%f763, %f759, %f761, 0f00000000;
	and.b32  	%r389, %r388, 1;
	fma.rn.f32 	%f796, %f794, %f790, 0fC09DE9E6;
	fma.rn.f32 	%f797, %f793, %f795, 0f00000000;
	and.b32  	%r396, %r395, 1;
	fma.rn.f32 	%f845, %f844, %f841, 0f3F800000;
	fma.rn.f32 	%f849, %f848, %f846, %f840;
	setp.eq.b32 	%p116, %r413, 1;
	fma.rn.f32 	%f898, %f897, %f894, 0f3F800000;
	fma.rn.f32 	%f902, %f901, %f899, %f893;
	setp.eq.b32 	%p136, %r442, 1;
	fma.rn.f32 	%f953, %f952, %f949, 0f3F800000;
	fma.rn.f32 	%f957, %f956, %f954, %f948;
	setp.eq.b32 	%p156, %r461, 1;
	fma.rn.f32 	%f1006, %f1005, %f1002, 0f3F800000;
	fma.rn.f32 	%f1010, %f1009, %f1007, %f1001;
	setp.eq.b32 	%p176, %r490, 1;
	fma.rn.f32 	%f1060, %f1059, %f1057, 0fBEFFFFFF;
	fma.rn.f32 	%f1062, %f1057, %f1056, 0f00000000;
	fma.rn.f32 	%f1064, %f1063, %f1057, 0fBE2AAAA8;
	and.b32  	%r508, %r507, 1;
	shr.u32 	%r15, %r2, 1;
	shr.u32 	%r21, %r2, 3;
	abs.f32 	%f1098, %f1386;
	setp.gtu.f32 	%p213, %f1098, 0f7F800000;
	@%p213 bra 	LBB0_120;
// %bb.119:
	mov.b32 	%r517, %f165;
	and.b32  	%r518, %r517, -2147483648;
	mov.b32 	%r519, %f1386;
	or.b32  	%r520, %r518, %r519;
	mov.b32 	%f1386, %r520;
LBB0_120:                               // %__nv_fmodf.exit2420
	shl.b32 	%r7, %r2, 2;
	fma.rn.f32 	%f281, %f279, %f273, 0f3F800000;
	fma.rn.f32 	%f282, %f272, 0f40490FDB, %f280;
	setp.eq.b32 	%p8, %r263, 1;
	fma.rn.f32 	%f315, %f313, %f307, 0f3F800000;
	fma.rn.f32 	%f316, %f306, 0f40490FDB, %f314;
	setp.eq.b32 	%p14, %r270, 1;
	fma.rn.f32 	%f350, %f348, %f342, 0f3F800000;
	fma.rn.f32 	%f351, %f341, 0f40490FDB, %f349;
	setp.eq.b32 	%p20, %r281, 1;
	fma.rn.f32 	%f384, %f382, %f376, 0f3F800000;
	fma.rn.f32 	%f385, %f375, 0f40490FDB, %f383;
	setp.eq.b32 	%p26, %r288, 1;
	fma.rn.f32 	%f419, %f417, %f411, 0f3F800000;
	fma.rn.f32 	%f420, %f410, 0f40490FDB, %f418;
	setp.eq.b32 	%p32, %r299, 1;
	fma.rn.f32 	%f453, %f451, %f445, 0f3F800000;
	fma.rn.f32 	%f454, %f444, 0f40490FDB, %f452;
	setp.eq.b32 	%p38, %r306, 1;
	fma.rn.f32 	%f488, %f486, %f480, 0f3F800000;
	fma.rn.f32 	%f489, %f479, 0f40490FDB, %f487;
	setp.eq.b32 	%p44, %r317, 1;
	fma.rn.f32 	%f522, %f520, %f514, 0f3F800000;
	fma.rn.f32 	%f523, %f513, 0f40490FDB, %f521;
	setp.eq.b32 	%p50, %r324, 1;
	fma.rn.f32 	%f557, %f555, %f549, 0f3F800000;
	fma.rn.f32 	%f558, %f548, 0f40490FDB, %f556;
	setp.eq.b32 	%p56, %r335, 1;
	fma.rn.f32 	%f591, %f589, %f583, 0f3F800000;
	fma.rn.f32 	%f592, %f582, 0f40490FDB, %f590;
	setp.eq.b32 	%p62, %r342, 1;
	fma.rn.f32 	%f626, %f624, %f618, 0f3F800000;
	fma.rn.f32 	%f627, %f617, 0f40490FDB, %f625;
	setp.eq.b32 	%p68, %r353, 1;
	fma.rn.f32 	%f660, %f658, %f652, 0f3F800000;
	fma.rn.f32 	%f661, %f651, 0f40490FDB, %f659;
	setp.eq.b32 	%p74, %r360, 1;
	fma.rn.f32 	%f695, %f693, %f687, 0f3F800000;
	fma.rn.f32 	%f696, %f686, 0f40490FDB, %f694;
	setp.eq.b32 	%p80, %r371, 1;
	fma.rn.f32 	%f729, %f727, %f721, 0f3F800000;
	fma.rn.f32 	%f730, %f720, 0f40490FDB, %f728;
	setp.eq.b32 	%p86, %r378, 1;
	fma.rn.f32 	%f764, %f762, %f756, 0f3F800000;
	fma.rn.f32 	%f765, %f755, 0f40490FDB, %f763;
	setp.eq.b32 	%p92, %r389, 1;
	fma.rn.f32 	%f798, %f796, %f790, 0f3F800000;
	fma.rn.f32 	%f799, %f789, 0f40490FDB, %f797;
	setp.eq.b32 	%p98, %r396, 1;
	selp.f32 	%f850, %f845, %f849, %p116;
	and.b32  	%r414, %r412, 2;
	selp.f32 	%f903, %f898, %f902, %p136;
	and.b32  	%r443, %r441, 2;
	selp.f32 	%f958, %f953, %f957, %p156;
	and.b32  	%r462, %r460, 2;
	selp.f32 	%f1011, %f1006, %f1010, %p176;
	and.b32  	%r491, %r489, 2;
	fma.rn.f32 	%f1061, %f1060, %f1057, 0f3F800000;
	fma.rn.f32 	%f1065, %f1064, %f1062, %f1056;
	setp.eq.b32 	%p196, %r508, 1;
	add.f32 	%f1099, %f1386, %f1386;
	mov.b32 	%r527, %f1099;
	and.b32  	%r528, %r527, -2147483648;
	or.b32  	%r529, %r528, 1056964608;
	mov.b32 	%f1100, %r529;
	add.f32 	%f1101, %f1099, %f1100;
	cvt.rzi.f32.f32 	%f1102, %f1101;
	abs.f32 	%f1103, %f1099;
	setp.gt.f32 	%p214, %f1103, 0f4B000000;
	selp.f32 	%f1104, %f1099, %f1102, %p214;
	cvt.rzi.f32.f32 	%f1105, %f1099;
	setp.lt.f32 	%p215, %f1103, 0f3F000000;
	selp.f32 	%f1106, %f1105, %f1104, %p215;
	cvt.rzi.s32.f32 	%r530, %f1106;
	fma.rn.f32 	%f1107, %f1106, 0fBF000000, %f1386;
	mul.f32 	%f1108, %f1107, 0f34222169;
	fma.rn.f32 	%f1109, %f1107, 0f40490FDA, %f1108;
	mul.f32 	%f1110, %f1109, %f1109;
	fma.rn.f32 	%f1111, %f1110, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f1112, %f1111, %f1110, 0f3D2AAABB;
	fma.rn.f32 	%f1113, %f1112, %f1110, 0fBEFFFFFF;
	fma.rn.f32 	%f1114, %f1113, %f1110, 0f3F800000;
	fma.rn.f32 	%f1115, %f1110, %f1109, 0f00000000;
	fma.rn.f32 	%f1116, %f1110, 0fB94D4153, 0f3C0885E4;
	fma.rn.f32 	%f1117, %f1116, %f1110, 0fBE2AAAA8;
	fma.rn.f32 	%f1118, %f1117, %f1115, %f1109;
	and.b32  	%r531, %r530, 1;
	setp.eq.b32 	%p216, %r531, 1;
	and.b32  	%r535, %r21, 2;
	and.b32  	%r536, %r15, 4;
	or.b32  	%r537, %r19, %r535;
	or.b32  	%r103, %r537, %r536;
	mul.lo.s32 	%r104, %r83, %r103;
	cvt.rn.f32.s32 	%f1132, %r104;
	mov.f32 	%f1133, 0f41800000;
	div.approx.f32 	%f182, %f1132, %f1133;
	abs.f32 	%f1390, %f182;
	setp.lt.f32 	%p221, %f1390, 0f40000000;
	@%p221 bra 	LBB0_132;
// %bb.121:
	setp.gtu.f32 	%p222, %f1390, 0f4B800000;
	@%p222 bra 	LBB0_128;
	bra.uni 	LBB0_122;
LBB0_128:
	mov.b32 	%r106, %f1390;
	and.b32  	%r538, %r106, 8388607;
	or.b32  	%r16180, %r538, 1065353216;
	mov.b32 	%f1389, %r16180;
	add.s32 	%r539, %r106, -1073741824;
	and.b32  	%r16181, %r539, -8388608;
	setp.eq.s32 	%p228, %r16181, 0;
	@%p228 bra 	LBB0_131;
// %bb.129:                             // %__nv_fmaf_rn.exit4.i.i.i2459.preheader
	mov.f32 	%f1143, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1142,%f1143;
	// end inline asm
LBB0_130:                               // %__nv_fmaf_rn.exit4.i.i.i2459
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r540, %r16181, 192937984;
	add.s32 	%r541, %r540, %r16180;
	mov.b32 	%f1144, %r541;
	mul.f32 	%f1145, %f1142, %f1144;
	sub.f32 	%f1146, %f1144, %f1145;
	fma.rn.f32 	%f1147, %f1146, %f1142, %f1145;
	sub.f32 	%f1148, %f1144, %f1147;
	fma.rz.f32 	%f1149, %f1148, %f1142, %f1147;
	cvt.rzi.f32.f32 	%f1150, %f1149;
	sub.f32 	%f1389, %f1144, %f1150;
	sub.s32 	%r16181, %r16181, %r540;
	mov.b32 	%r16180, %f1389;
	setp.ne.s32 	%p229, %r16181, 0;
	setp.ne.s32 	%p230, %r16180, 0;
	and.pred  	%p231, %p229, %p230;
	@%p231 bra 	LBB0_130;
LBB0_131:                               // %__internal_fmodf_slowpath_mod.exit.i.i2461
	setp.gt.u32 	%p232, %r106, 2139095039;
	selp.f32 	%f1151, 0f7FFFFFFF, 0f4B800000, %p232;
	mul.f32 	%f1152, %f1389, 0f34000000;
	mul.f32 	%f1390, %f1151, %f1152;
	bra.uni 	LBB0_132;
LBB0_122:                               // %__nv_fast_fdividef.exit.i.i.i2431
	div.approx.f32 	%f1135, %f1390, %f255;
	cvt.rzi.f32.f32 	%f1388, %f1135;
	fma.rn.f32 	%f185, %f1388, 0fC0000000, %f1390;
	mov.b32 	%r105, %f185;
	setp.lt.u32 	%p223, %r105, 1073741824;
	@%p223 bra 	LBB0_127;
// %bb.123:
	setp.lt.u32 	%p224, %r105, -2147483647;
	@%p224 bra 	LBB0_125;
// %bb.124:
	add.f32 	%f1140, %f1388, 0fBF800000;
	setp.lt.f32 	%p227, %f185, 0fC0000000;
	add.f32 	%f1141, %f1140, 0fBF800000;
	selp.f32 	%f1388, %f1141, %f1140, %p227;
	bra.uni 	LBB0_127;
LBB0_125:
	add.f32 	%f1388, %f1388, 0f3F800000;
	setp.ltu.f32 	%p225, %f185, 0f40800000;
	@%p225 bra 	LBB0_127;
// %bb.126:                             // %__nv_fmaf_rn.exit.i.i.i2436
	add.f32 	%f1136, %f1388, 0f3F800000;
	fma.rn.f32 	%f1138, %f255, 0fC0400000, %f185;
	setp.ge.f32 	%p226, %f1138, 0f00000000;
	add.f32 	%f1139, %f1136, 0f3F800000;
	selp.f32 	%f1388, %f1139, %f1136, %p226;
LBB0_127:                               // %__internal_fmodf_fastpath_quot.exit.i.i2440
	fma.rn.f32 	%f1390, %f1388, 0fC0000000, %f1390;
LBB0_132:                               // %__internal_fmodf_kernel.exit.i2465
	and.b32  	%r8, %r7, 4;
	and.b32  	%r12, %r2, 18;
	selp.f32 	%f283, %f281, %f282, %p8;
	and.b32  	%r264, %r262, 2;
	mov.f32 	%f284, 0f00000000;
	selp.f32 	%f317, %f315, %f316, %p14;
	and.b32  	%r271, %r269, 2;
	selp.f32 	%f352, %f350, %f351, %p20;
	and.b32  	%r282, %r280, 2;
	selp.f32 	%f386, %f384, %f385, %p26;
	and.b32  	%r289, %r287, 2;
	selp.f32 	%f421, %f419, %f420, %p32;
	and.b32  	%r300, %r298, 2;
	selp.f32 	%f455, %f453, %f454, %p38;
	and.b32  	%r307, %r305, 2;
	selp.f32 	%f490, %f488, %f489, %p44;
	and.b32  	%r318, %r316, 2;
	selp.f32 	%f524, %f522, %f523, %p50;
	and.b32  	%r325, %r323, 2;
	selp.f32 	%f559, %f557, %f558, %p56;
	and.b32  	%r336, %r334, 2;
	selp.f32 	%f593, %f591, %f592, %p62;
	and.b32  	%r343, %r341, 2;
	selp.f32 	%f628, %f626, %f627, %p68;
	and.b32  	%r354, %r352, 2;
	selp.f32 	%f662, %f660, %f661, %p74;
	and.b32  	%r361, %r359, 2;
	selp.f32 	%f697, %f695, %f696, %p80;
	and.b32  	%r372, %r370, 2;
	selp.f32 	%f731, %f729, %f730, %p86;
	and.b32  	%r379, %r377, 2;
	selp.f32 	%f766, %f764, %f765, %p92;
	and.b32  	%r390, %r388, 2;
	selp.f32 	%f800, %f798, %f799, %p98;
	and.b32  	%r397, %r395, 2;
	setp.eq.s32 	%p117, %r414, 0;
	neg.f32 	%f852, %f850;
	add.s32 	%r415, %r412, 1;
	cvt.rzi.f32.f32 	%f857, %f1366;
	setp.eq.s32 	%p137, %r443, 0;
	neg.f32 	%f905, %f903;
	add.s32 	%r444, %r441, 1;
	cvt.rzi.f32.f32 	%f910, %f1370;
	setp.eq.s32 	%p157, %r462, 0;
	neg.f32 	%f960, %f958;
	add.s32 	%r463, %r460, 1;
	cvt.rzi.f32.f32 	%f965, %f1374;
	setp.eq.s32 	%p177, %r491, 0;
	neg.f32 	%f1013, %f1011;
	add.s32 	%r492, %r489, 1;
	cvt.rzi.f32.f32 	%f1018, %f1378;
	selp.f32 	%f1066, %f1061, %f1065, %p196;
	and.b32  	%r509, %r507, 2;
	selp.f32 	%f1119, %f1114, %f1118, %p216;
	and.b32  	%r532, %r530, 2;
	abs.f32 	%f1153, %f1390;
	setp.gtu.f32 	%p233, %f1153, 0f7F800000;
	@%p233 bra 	LBB0_134;
// %bb.133:
	mov.b32 	%r542, %f182;
	and.b32  	%r543, %r542, -2147483648;
	mov.b32 	%r544, %f1390;
	or.b32  	%r545, %r543, %r544;
	mov.b32 	%f1390, %r545;
LBB0_134:                               // %__nv_fmodf.exit2466
	and.b32  	%r9, %r7, 32;
	or.b32  	%r246, %r12, %r8;
	setp.eq.s32 	%p9, %r264, 0;
	sub.f32 	%f285, %f284, %f283;
	setp.eq.s32 	%p15, %r271, 0;
	sub.f32 	%f319, %f284, %f317;
	setp.eq.s32 	%p21, %r282, 0;
	sub.f32 	%f354, %f284, %f352;
	setp.eq.s32 	%p27, %r289, 0;
	sub.f32 	%f388, %f284, %f386;
	setp.eq.s32 	%p33, %r300, 0;
	sub.f32 	%f423, %f284, %f421;
	setp.eq.s32 	%p39, %r307, 0;
	sub.f32 	%f457, %f284, %f455;
	setp.eq.s32 	%p45, %r318, 0;
	sub.f32 	%f492, %f284, %f490;
	setp.eq.s32 	%p51, %r325, 0;
	sub.f32 	%f526, %f284, %f524;
	setp.eq.s32 	%p57, %r336, 0;
	sub.f32 	%f561, %f284, %f559;
	setp.eq.s32 	%p63, %r343, 0;
	sub.f32 	%f595, %f284, %f593;
	setp.eq.s32 	%p69, %r354, 0;
	sub.f32 	%f630, %f284, %f628;
	setp.eq.s32 	%p75, %r361, 0;
	sub.f32 	%f664, %f284, %f662;
	setp.eq.s32 	%p81, %r372, 0;
	sub.f32 	%f699, %f284, %f697;
	setp.eq.s32 	%p87, %r379, 0;
	sub.f32 	%f733, %f284, %f731;
	setp.eq.s32 	%p93, %r390, 0;
	sub.f32 	%f768, %f284, %f766;
	setp.eq.s32 	%p99, %r397, 0;
	sub.f32 	%f802, %f284, %f800;
	selp.f32 	%f851, %f849, %f845, %p116;
	selp.f32 	%f853, %f850, %f852, %p117;
	and.b32  	%r416, %r415, 2;
	setp.eq.f32 	%p119, %f857, %f1366;
	mul.f32 	%f858, %f1366, 0f00000000;
	selp.f32 	%f904, %f902, %f898, %p136;
	selp.f32 	%f906, %f903, %f905, %p137;
	and.b32  	%r445, %r444, 2;
	setp.eq.f32 	%p139, %f910, %f1370;
	mul.f32 	%f911, %f1370, 0f00000000;
	selp.f32 	%f959, %f957, %f953, %p156;
	selp.f32 	%f961, %f958, %f960, %p157;
	and.b32  	%r464, %r463, 2;
	setp.eq.f32 	%p159, %f965, %f1374;
	mul.f32 	%f966, %f1374, 0f00000000;
	selp.f32 	%f1012, %f1010, %f1006, %p176;
	selp.f32 	%f1014, %f1011, %f1013, %p177;
	and.b32  	%r493, %r492, 2;
	setp.eq.f32 	%p179, %f1018, %f1378;
	mul.f32 	%f1019, %f1378, 0f00000000;
	setp.eq.s32 	%p197, %r509, 0;
	neg.f32 	%f1068, %f1066;
	add.s32 	%r510, %r507, 1;
	cvt.rzi.f32.f32 	%f1073, %f1382;
	setp.eq.s32 	%p217, %r532, 0;
	neg.f32 	%f1121, %f1119;
	add.s32 	%r533, %r530, 1;
	cvt.rzi.f32.f32 	%f1126, %f1386;
	add.f32 	%f1154, %f1390, %f1390;
	mov.b32 	%r546, %f1154;
	and.b32  	%r547, %r546, -2147483648;
	or.b32  	%r548, %r547, 1056964608;
	mov.b32 	%f1155, %r548;
	add.f32 	%f1156, %f1154, %f1155;
	cvt.rzi.f32.f32 	%f1157, %f1156;
	abs.f32 	%f1158, %f1154;
	setp.gt.f32 	%p234, %f1158, 0f4B000000;
	selp.f32 	%f1159, %f1154, %f1157, %p234;
	cvt.rzi.f32.f32 	%f1160, %f1154;
	setp.lt.f32 	%p235, %f1158, 0f3F000000;
	selp.f32 	%f1161, %f1160, %f1159, %p235;
	cvt.rzi.s32.f32 	%r549, %f1161;
	fma.rn.f32 	%f1162, %f1161, 0fBF000000, %f1390;
	mul.f32 	%f1163, %f1162, 0f34222169;
	fma.rn.f32 	%f1164, %f1162, 0f40490FDA, %f1163;
	mul.f32 	%f1165, %f1164, %f1164;
	fma.rn.f32 	%f1166, %f1165, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f1167, %f1166, %f1165, 0f3D2AAABB;
	fma.rn.f32 	%f1168, %f1167, %f1165, 0fBEFFFFFF;
	fma.rn.f32 	%f1169, %f1168, %f1165, 0f3F800000;
	fma.rn.f32 	%f1170, %f1165, %f1164, 0f00000000;
	fma.rn.f32 	%f1171, %f1165, 0fB94D4153, 0f3C0885E4;
	fma.rn.f32 	%f1172, %f1171, %f1165, 0fBE2AAAA8;
	fma.rn.f32 	%f1173, %f1172, %f1170, %f1164;
	and.b32  	%r550, %r549, 1;
	setp.eq.b32 	%p236, %r550, 1;
	selp.f32 	%f1174, %f1169, %f1173, %p236;
	selp.f32 	%f1175, %f1173, %f1169, %p236;
	and.b32  	%r551, %r549, 2;
	setp.eq.s32 	%p237, %r551, 0;
	neg.f32 	%f1176, %f1174;
	selp.f32 	%f1177, %f1174, %f1176, %p237;
	add.s32 	%r552, %r549, 1;
	and.b32  	%r553, %r552, 2;
	cvt.rzi.f32.f32 	%f1181, %f1390;
	setp.eq.f32 	%p239, %f1181, %f1390;
	mul.f32 	%f1182, %f1390, 0f00000000;
	shl.b32 	%r554, %r103, 3;
	sub.s32 	%r555, %r104, %r554;
	cvt.rn.f32.s32 	%f1185, %r555;
	div.approx.f32 	%f201, %f1185, %f1133;
	abs.f32 	%f1394, %f201;
	setp.lt.f32 	%p241, %f1394, 0f40000000;
	@%p241 bra 	LBB0_146;
// %bb.135:
	setp.gtu.f32 	%p242, %f1394, 0f4B800000;
	@%p242 bra 	LBB0_142;
	bra.uni 	LBB0_136;
LBB0_142:
	mov.b32 	%r114, %f1394;
	and.b32  	%r556, %r114, 8388607;
	or.b32  	%r16182, %r556, 1065353216;
	mov.b32 	%f1393, %r16182;
	add.s32 	%r557, %r114, -1073741824;
	and.b32  	%r16183, %r557, -8388608;
	setp.eq.s32 	%p248, %r16183, 0;
	@%p248 bra 	LBB0_145;
// %bb.143:                             // %__nv_fmaf_rn.exit4.i.i.i2505.preheader
	mov.f32 	%f1196, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1195,%f1196;
	// end inline asm
LBB0_144:                               // %__nv_fmaf_rn.exit4.i.i.i2505
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r558, %r16183, 192937984;
	add.s32 	%r559, %r558, %r16182;
	mov.b32 	%f1197, %r559;
	mul.f32 	%f1198, %f1195, %f1197;
	sub.f32 	%f1199, %f1197, %f1198;
	fma.rn.f32 	%f1200, %f1199, %f1195, %f1198;
	sub.f32 	%f1201, %f1197, %f1200;
	fma.rz.f32 	%f1202, %f1201, %f1195, %f1200;
	cvt.rzi.f32.f32 	%f1203, %f1202;
	sub.f32 	%f1393, %f1197, %f1203;
	sub.s32 	%r16183, %r16183, %r558;
	mov.b32 	%r16182, %f1393;
	setp.ne.s32 	%p249, %r16183, 0;
	setp.ne.s32 	%p250, %r16182, 0;
	and.pred  	%p251, %p249, %p250;
	@%p251 bra 	LBB0_144;
LBB0_145:                               // %__internal_fmodf_slowpath_mod.exit.i.i2507
	setp.gt.u32 	%p252, %r114, 2139095039;
	selp.f32 	%f1204, 0f7FFFFFFF, 0f4B800000, %p252;
	mul.f32 	%f1205, %f1393, 0f34000000;
	mul.f32 	%f1394, %f1204, %f1205;
	bra.uni 	LBB0_146;
LBB0_136:                               // %__nv_fast_fdividef.exit.i.i.i2477
	div.approx.f32 	%f1188, %f1394, %f255;
	cvt.rzi.f32.f32 	%f1392, %f1188;
	fma.rn.f32 	%f204, %f1392, 0fC0000000, %f1394;
	mov.b32 	%r113, %f204;
	setp.lt.u32 	%p243, %r113, 1073741824;
	@%p243 bra 	LBB0_141;
// %bb.137:
	setp.lt.u32 	%p244, %r113, -2147483647;
	@%p244 bra 	LBB0_139;
// %bb.138:
	add.f32 	%f1193, %f1392, 0fBF800000;
	setp.lt.f32 	%p247, %f204, 0fC0000000;
	add.f32 	%f1194, %f1193, 0fBF800000;
	selp.f32 	%f1392, %f1194, %f1193, %p247;
	bra.uni 	LBB0_141;
LBB0_139:
	add.f32 	%f1392, %f1392, 0f3F800000;
	setp.ltu.f32 	%p245, %f204, 0f40800000;
	@%p245 bra 	LBB0_141;
// %bb.140:                             // %__nv_fmaf_rn.exit.i.i.i2482
	add.f32 	%f1189, %f1392, 0f3F800000;
	fma.rn.f32 	%f1191, %f255, 0fC0400000, %f204;
	setp.ge.f32 	%p246, %f1191, 0f00000000;
	add.f32 	%f1192, %f1189, 0f3F800000;
	selp.f32 	%f1392, %f1192, %f1189, %p246;
LBB0_141:                               // %__internal_fmodf_fastpath_quot.exit.i.i2486
	fma.rn.f32 	%f1394, %f1392, 0fC0000000, %f1394;
LBB0_146:                               // %__internal_fmodf_kernel.exit.i2511
	and.b32  	%r11, %r10, 8;
	or.b32  	%r247, %r246, %r9;
	selp.f32 	%f286, %f283, %f285, %p9;
	selp.f32 	%f320, %f317, %f319, %p15;
	selp.f32 	%f355, %f352, %f354, %p21;
	selp.f32 	%f389, %f386, %f388, %p27;
	selp.f32 	%f424, %f421, %f423, %p33;
	selp.f32 	%f458, %f455, %f457, %p39;
	selp.f32 	%f493, %f490, %f492, %p45;
	selp.f32 	%f527, %f524, %f526, %p51;
	selp.f32 	%f562, %f559, %f561, %p57;
	selp.f32 	%f596, %f593, %f595, %p63;
	selp.f32 	%f631, %f628, %f630, %p69;
	selp.f32 	%f665, %f662, %f664, %p75;
	selp.f32 	%f700, %f697, %f699, %p81;
	selp.f32 	%f734, %f731, %f733, %p87;
	selp.f32 	%f769, %f766, %f768, %p93;
	selp.f32 	%f803, %f800, %f802, %p99;
	setp.eq.s32 	%p118, %r416, 0;
	sub.f32 	%f855, %f284, %f851;
	selp.f32 	%f91, %f858, %f853, %p119;
	abs.f32 	%f859, %f1366;
	setp.eq.s32 	%p138, %r445, 0;
	sub.f32 	%f908, %f284, %f904;
	selp.f32 	%f912, %f911, %f906, %p139;
	abs.f32 	%f913, %f1370;
	setp.eq.s32 	%p158, %r464, 0;
	sub.f32 	%f963, %f284, %f959;
	selp.f32 	%f127, %f966, %f961, %p159;
	abs.f32 	%f967, %f1374;
	setp.eq.s32 	%p178, %r493, 0;
	sub.f32 	%f1016, %f284, %f1012;
	selp.f32 	%f1020, %f1019, %f1014, %p179;
	abs.f32 	%f1021, %f1378;
	selp.f32 	%f1067, %f1065, %f1061, %p196;
	selp.f32 	%f1069, %f1066, %f1068, %p197;
	and.b32  	%r511, %r510, 2;
	setp.eq.f32 	%p199, %f1073, %f1382;
	mul.f32 	%f1074, %f1382, 0f00000000;
	selp.f32 	%f1120, %f1118, %f1114, %p216;
	selp.f32 	%f1122, %f1119, %f1121, %p217;
	and.b32  	%r534, %r533, 2;
	setp.eq.f32 	%p219, %f1126, %f1386;
	mul.f32 	%f1127, %f1386, 0f00000000;
	setp.eq.s32 	%p238, %r553, 0;
	sub.f32 	%f1179, %f284, %f1175;
	selp.f32 	%f199, %f1182, %f1177, %p239;
	abs.f32 	%f1183, %f1390;
	and.b32  	%r6, %r2, 16;
	abs.f32 	%f1206, %f1394;
	setp.gtu.f32 	%p253, %f1206, 0f7F800000;
	@%p253 bra 	LBB0_148;
// %bb.147:
	mov.b32 	%r560, %f201;
	and.b32  	%r561, %r560, -2147483648;
	mov.b32 	%r562, %f1394;
	or.b32  	%r563, %r561, %r562;
	mov.b32 	%f1394, %r563;
LBB0_148:                               // %__nv_fmodf.exit2512
	or.b32  	%r248, %r247, %r11;
	mul.f32 	%f2, %f286, %f286;
	mul.f32 	%f7, %f320, %f320;
	mul.f32 	%f11, %f355, %f355;
	mul.f32 	%f16, %f389, %f389;
	mul.f32 	%f20, %f424, %f424;
	mul.f32 	%f25, %f458, %f458;
	mul.f32 	%f29, %f493, %f493;
	mul.f32 	%f34, %f527, %f527;
	mul.f32 	%f38, %f562, %f562;
	mul.f32 	%f43, %f596, %f596;
	mul.f32 	%f47, %f631, %f631;
	mul.f32 	%f52, %f665, %f665;
	mul.f32 	%f56, %f700, %f700;
	mul.f32 	%f61, %f734, %f734;
	mul.f32 	%f65, %f769, %f769;
	mul.f32 	%f70, %f803, %f803;
	selp.f32 	%f856, %f851, %f855, %p118;
	setp.gt.f32 	%p120, %f859, 0f4B800000;
	add.f32 	%f860, %f91, 0f3F800000;
	selp.f32 	%f909, %f904, %f908, %p138;
	setp.gt.f32 	%p140, %f913, 0f4B800000;
	add.f32 	%f914, %f912, 0f3F800000;
	selp.f32 	%f964, %f959, %f963, %p158;
	setp.gt.f32 	%p160, %f967, 0f4B800000;
	add.f32 	%f968, %f127, 0f3F800000;
	selp.f32 	%f1017, %f1012, %f1016, %p178;
	setp.gt.f32 	%p180, %f1021, 0f4B800000;
	add.f32 	%f1022, %f1020, 0f3F800000;
	setp.eq.s32 	%p198, %r511, 0;
	sub.f32 	%f1071, %f284, %f1067;
	selp.f32 	%f163, %f1074, %f1069, %p199;
	abs.f32 	%f1075, %f1382;
	setp.eq.s32 	%p218, %r534, 0;
	sub.f32 	%f1124, %f284, %f1120;
	selp.f32 	%f1128, %f1127, %f1122, %p219;
	abs.f32 	%f1129, %f1386;
	selp.f32 	%f1180, %f1175, %f1179, %p238;
	setp.gt.f32 	%p240, %f1183, 0f4B800000;
	add.f32 	%f1184, %f199, 0f3F800000;
	add.f32 	%f1207, %f1394, %f1394;
	mov.b32 	%r576, %f1207;
	and.b32  	%r577, %r576, -2147483648;
	or.b32  	%r578, %r577, 1056964608;
	mov.b32 	%f1208, %r578;
	add.f32 	%f1209, %f1207, %f1208;
	cvt.rzi.f32.f32 	%f1210, %f1209;
	abs.f32 	%f1211, %f1207;
	setp.gt.f32 	%p254, %f1211, 0f4B000000;
	selp.f32 	%f1212, %f1207, %f1210, %p254;
	cvt.rzi.f32.f32 	%f1213, %f1207;
	setp.lt.f32 	%p255, %f1211, 0f3F000000;
	selp.f32 	%f1214, %f1213, %f1212, %p255;
	cvt.rzi.s32.f32 	%r579, %f1214;
	fma.rn.f32 	%f1215, %f1214, 0fBF000000, %f1394;
	mul.f32 	%f1216, %f1215, 0f34222169;
	fma.rn.f32 	%f1217, %f1215, 0f40490FDA, %f1216;
	mul.f32 	%f1218, %f1217, %f1217;
	fma.rn.f32 	%f1219, %f1218, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f1220, %f1219, %f1218, 0f3D2AAABB;
	fma.rn.f32 	%f1221, %f1220, %f1218, 0fBEFFFFFF;
	fma.rn.f32 	%f1222, %f1221, %f1218, 0f3F800000;
	fma.rn.f32 	%f1223, %f1218, %f1217, 0f00000000;
	fma.rn.f32 	%f1224, %f1218, 0fB94D4153, 0f3C0885E4;
	fma.rn.f32 	%f1225, %f1224, %f1218, 0fBE2AAAA8;
	fma.rn.f32 	%f1226, %f1225, %f1223, %f1217;
	and.b32  	%r580, %r579, 1;
	setp.eq.b32 	%p256, %r580, 1;
	selp.f32 	%f1227, %f1222, %f1226, %p256;
	selp.f32 	%f1228, %f1226, %f1222, %p256;
	and.b32  	%r581, %r579, 2;
	setp.eq.s32 	%p257, %r581, 0;
	neg.f32 	%f1229, %f1227;
	selp.f32 	%f1230, %f1227, %f1229, %p257;
	add.s32 	%r582, %r579, 1;
	and.b32  	%r583, %r582, 2;
	setp.eq.s32 	%p258, %r583, 0;
	sub.f32 	%f1232, %f284, %f1228;
	selp.f32 	%f1233, %f1228, %f1232, %p258;
	cvt.rzi.f32.f32 	%f1234, %f1394;
	setp.eq.f32 	%p259, %f1234, %f1394;
	mul.f32 	%f1235, %f1394, 0f00000000;
	selp.f32 	%f1236, %f1235, %f1230, %p259;
	abs.f32 	%f1237, %f1394;
	setp.gt.f32 	%p260, %f1237, 0f4B800000;
	add.f32 	%f1238, %f1236, 0f3F800000;
	cvt.u16.u32 	%rs1, %r2;
	shr.u16 	%rs2, %rs1, 8;
	shl.b16 	%rs3, %rs1, 8;
	or.b16  	%rs4, %rs3, %rs2;
	shl.b16 	%rs5, %rs4, 4;
	shr.u16 	%rs6, %rs4, 4;
	and.b16  	%rs7, %rs6, 3840;
	or.b16  	%rs8, %rs7, %rs5;
	and.b16  	%rs9, %rs8, 13107;
	shl.b16 	%rs10, %rs9, 2;
	shr.u16 	%rs11, %rs8, 2;
	and.b16  	%rs12, %rs11, 13107;
	or.b16  	%rs13, %rs12, %rs10;
	and.b16  	%rs14, %rs13, 20480;
	shl.b16 	%rs15, %rs14, 1;
	shr.u16 	%rs16, %rs13, 1;
	and.b16  	%rs17, %rs16, 16384;
	or.b16  	%rs18, %rs17, %rs15;
	shr.u16 	%rs19, %rs18, 13;
	add.s32 	%r585, %r251, %r6;
	neg.s32 	%r586, %r585;
	mad.lo.s32 	%r587, %r22, -32, %r586;
	or.b16  	%rs20, %rs19, 1;
	cvt.u32.u16 	%r588, %rs20;
	and.b16  	%rs21, %rs19, 6;
	cvt.u32.u16 	%r589, %rs21;
	sub.s32 	%r590, %r587, %r589;
	shl.b32 	%r591, %r590, 1;
	cvt.rn.f32.s32 	%f1240, %r591;
	div.approx.f32 	%f218, %f1240, %f287;
	abs.f32 	%f1398, %f218;
	setp.lt.f32 	%p261, %f1398, 0f40000000;
	@%p261 bra 	LBB0_160;
// %bb.149:
	setp.gtu.f32 	%p262, %f1398, 0f4B800000;
	@%p262 bra 	LBB0_156;
	bra.uni 	LBB0_150;
LBB0_156:
	mov.b32 	%r127, %f1398;
	and.b32  	%r592, %r127, 8388607;
	or.b32  	%r16184, %r592, 1065353216;
	mov.b32 	%f1397, %r16184;
	add.s32 	%r593, %r127, -1073741824;
	and.b32  	%r16185, %r593, -8388608;
	setp.eq.s32 	%p268, %r16185, 0;
	@%p268 bra 	LBB0_159;
// %bb.157:                             // %__nv_fmaf_rn.exit4.i.i.i2551.preheader
	mov.f32 	%f1251, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1250,%f1251;
	// end inline asm
LBB0_158:                               // %__nv_fmaf_rn.exit4.i.i.i2551
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r594, %r16185, 192937984;
	add.s32 	%r595, %r594, %r16184;
	mov.b32 	%f1252, %r595;
	mul.f32 	%f1253, %f1250, %f1252;
	sub.f32 	%f1254, %f1252, %f1253;
	fma.rn.f32 	%f1255, %f1254, %f1250, %f1253;
	sub.f32 	%f1256, %f1252, %f1255;
	fma.rz.f32 	%f1257, %f1256, %f1250, %f1255;
	cvt.rzi.f32.f32 	%f1258, %f1257;
	sub.f32 	%f1397, %f1252, %f1258;
	sub.s32 	%r16185, %r16185, %r594;
	mov.b32 	%r16184, %f1397;
	setp.ne.s32 	%p269, %r16185, 0;
	setp.ne.s32 	%p270, %r16184, 0;
	and.pred  	%p271, %p269, %p270;
	@%p271 bra 	LBB0_158;
LBB0_159:                               // %__internal_fmodf_slowpath_mod.exit.i.i2553
	setp.gt.u32 	%p272, %r127, 2139095039;
	selp.f32 	%f1259, 0f7FFFFFFF, 0f4B800000, %p272;
	mul.f32 	%f1260, %f1397, 0f34000000;
	mul.f32 	%f1398, %f1259, %f1260;
	bra.uni 	LBB0_160;
LBB0_150:                               // %__nv_fast_fdividef.exit.i.i.i2523
	div.approx.f32 	%f1243, %f1398, %f255;
	cvt.rzi.f32.f32 	%f1396, %f1243;
	fma.rn.f32 	%f221, %f1396, 0fC0000000, %f1398;
	mov.b32 	%r126, %f221;
	setp.lt.u32 	%p263, %r126, 1073741824;
	@%p263 bra 	LBB0_155;
// %bb.151:
	setp.lt.u32 	%p264, %r126, -2147483647;
	@%p264 bra 	LBB0_153;
// %bb.152:
	add.f32 	%f1248, %f1396, 0fBF800000;
	setp.lt.f32 	%p267, %f221, 0fC0000000;
	add.f32 	%f1249, %f1248, 0fBF800000;
	selp.f32 	%f1396, %f1249, %f1248, %p267;
	bra.uni 	LBB0_155;
LBB0_153:
	add.f32 	%f1396, %f1396, 0f3F800000;
	setp.ltu.f32 	%p265, %f221, 0f40800000;
	@%p265 bra 	LBB0_155;
// %bb.154:                             // %__nv_fmaf_rn.exit.i.i.i2528
	add.f32 	%f1244, %f1396, 0f3F800000;
	fma.rn.f32 	%f1246, %f255, 0fC0400000, %f221;
	setp.ge.f32 	%p266, %f1246, 0f00000000;
	add.f32 	%f1247, %f1244, 0f3F800000;
	selp.f32 	%f1396, %f1247, %f1244, %p266;
LBB0_155:                               // %__internal_fmodf_fastpath_quot.exit.i.i2532
	fma.rn.f32 	%f1398, %f1396, 0fC0000000, %f1398;
LBB0_160:                               // %__internal_fmodf_kernel.exit.i2557
	shr.u32 	%r249, %r248, 1;
	mul.f32 	%f290, %f2, 0f3B8B2FF9;
	mul.f32 	%f324, %f7, 0f3B8B2FF9;
	mul.f32 	%f359, %f11, 0f3B8B2FF9;
	mul.f32 	%f393, %f16, 0f3B8B2FF9;
	mul.f32 	%f428, %f20, 0f3B8B2FF9;
	mul.f32 	%f462, %f25, 0f3B8B2FF9;
	mul.f32 	%f497, %f29, 0f3B8B2FF9;
	mul.f32 	%f531, %f34, 0f3B8B2FF9;
	mul.f32 	%f566, %f38, 0f3B8B2FF9;
	mul.f32 	%f600, %f43, 0f3B8B2FF9;
	mul.f32 	%f635, %f47, 0f3B8B2FF9;
	mul.f32 	%f669, %f52, 0f3B8B2FF9;
	mul.f32 	%f704, %f56, 0f3B8B2FF9;
	mul.f32 	%f738, %f61, 0f3B8B2FF9;
	mul.f32 	%f773, %f65, 0f3B8B2FF9;
	mul.f32 	%f806, %f70, 0f3B8B2FF9;
	selp.f32 	%f92, %f860, %f856, %p120;
	selp.f32 	%f915, %f914, %f909, %p140;
	selp.f32 	%f128, %f968, %f964, %p160;
	selp.f32 	%f1023, %f1022, %f1017, %p180;
	selp.f32 	%f1072, %f1067, %f1071, %p198;
	setp.gt.f32 	%p200, %f1075, 0f4B800000;
	add.f32 	%f1076, %f163, 0f3F800000;
	selp.f32 	%f1125, %f1120, %f1124, %p218;
	setp.gt.f32 	%p220, %f1129, 0f4B800000;
	add.f32 	%f1130, %f1128, 0f3F800000;
	selp.f32 	%f200, %f1184, %f1180, %p240;
	selp.f32 	%f1239, %f1238, %f1233, %p260;
	sub.s32 	%r125, %r587, %r588;
	abs.f32 	%f1261, %f1398;
	setp.gtu.f32 	%p273, %f1261, 0f7F800000;
	@%p273 bra 	LBB0_162;
// %bb.161:
	mov.b32 	%r596, %f218;
	and.b32  	%r597, %r596, -2147483648;
	mov.b32 	%r598, %f1398;
	or.b32  	%r599, %r597, %r598;
	mov.b32 	%f1398, %r599;
LBB0_162:                               // %__nv_fmodf.exit2558
	ld.param.u64 	%rd1, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_2];
	mul.wide.u32 	%rd49, %r249, 4;
	mul.f32 	%f6, %f290, %f1348;
	mul.f32 	%f325, %f324, %f1349;
	mul.f32 	%f15, %f359, %f1350;
	mul.f32 	%f394, %f393, %f1351;
	mul.f32 	%f24, %f428, %f1352;
	mul.f32 	%f463, %f462, %f1353;
	mul.f32 	%f33, %f497, %f1354;
	mul.f32 	%f532, %f531, %f1355;
	mul.f32 	%f42, %f566, %f1356;
	mul.f32 	%f601, %f600, %f1357;
	mul.f32 	%f51, %f635, %f1358;
	mul.f32 	%f670, %f669, %f1359;
	mul.f32 	%f60, %f704, %f1360;
	mul.f32 	%f739, %f738, %f1361;
	mul.f32 	%f69, %f773, %f1362;
	mul.f32 	%f807, %f806, %f1363;
	mov.b32 	%r428, %f915;
	mov.b32 	%r427, %f92;
	mov.b32 	%r434, %f912;
	mov.b32 	%r433, %f91;
	mov.b32 	%r476, %f1023;
	mov.b32 	%r475, %f128;
	mov.b32 	%r482, %f1020;
	mov.b32 	%r481, %f127;
	selp.f32 	%f164, %f1076, %f1072, %p200;
	selp.f32 	%f1131, %f1130, %f1125, %p220;
	mov.b32 	%r566, %f1239;
	mov.b32 	%r565, %f200;
	mov.b32 	%r572, %f1236;
	mov.b32 	%r571, %f199;
	add.f32 	%f1262, %f1398, %f1398;
	mov.b32 	%r600, %f1262;
	and.b32  	%r601, %r600, -2147483648;
	or.b32  	%r602, %r601, 1056964608;
	mov.b32 	%f1263, %r602;
	add.f32 	%f1264, %f1262, %f1263;
	cvt.rzi.f32.f32 	%f1265, %f1264;
	abs.f32 	%f1266, %f1262;
	setp.gt.f32 	%p274, %f1266, 0f4B000000;
	selp.f32 	%f1267, %f1262, %f1265, %p274;
	cvt.rzi.f32.f32 	%f1268, %f1262;
	setp.lt.f32 	%p275, %f1266, 0f3F000000;
	selp.f32 	%f1269, %f1268, %f1267, %p275;
	cvt.rzi.s32.f32 	%r603, %f1269;
	fma.rn.f32 	%f1270, %f1269, 0fBF000000, %f1398;
	mul.f32 	%f1271, %f1270, 0f34222169;
	fma.rn.f32 	%f1272, %f1270, 0f40490FDA, %f1271;
	mul.f32 	%f1273, %f1272, %f1272;
	fma.rn.f32 	%f1274, %f1273, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f1275, %f1274, %f1273, 0f3D2AAABB;
	fma.rn.f32 	%f1276, %f1275, %f1273, 0fBEFFFFFF;
	fma.rn.f32 	%f1277, %f1276, %f1273, 0f3F800000;
	fma.rn.f32 	%f1278, %f1273, %f1272, 0f00000000;
	fma.rn.f32 	%f1279, %f1273, 0fB94D4153, 0f3C0885E4;
	fma.rn.f32 	%f1280, %f1279, %f1273, 0fBE2AAAA8;
	fma.rn.f32 	%f1281, %f1280, %f1278, %f1272;
	and.b32  	%r604, %r603, 1;
	setp.eq.b32 	%p276, %r604, 1;
	selp.f32 	%f1282, %f1277, %f1281, %p276;
	selp.f32 	%f1283, %f1281, %f1277, %p276;
	and.b32  	%r605, %r603, 2;
	setp.eq.s32 	%p277, %r605, 0;
	neg.f32 	%f1284, %f1282;
	selp.f32 	%f1285, %f1282, %f1284, %p277;
	add.s32 	%r606, %r603, 1;
	and.b32  	%r607, %r606, 2;
	setp.eq.s32 	%p278, %r607, 0;
	sub.f32 	%f1287, %f284, %f1283;
	selp.f32 	%f1288, %f1283, %f1287, %p278;
	cvt.rzi.f32.f32 	%f1289, %f1398;
	setp.eq.f32 	%p279, %f1289, %f1398;
	mul.f32 	%f1290, %f1398, 0f00000000;
	selp.f32 	%f235, %f1290, %f1285, %p279;
	abs.f32 	%f1291, %f1398;
	setp.gt.f32 	%p280, %f1291, 0f4B800000;
	add.f32 	%f1292, %f235, 0f3F800000;
	shl.b32 	%r608, %r125, 1;
	cvt.rn.f32.s32 	%f1293, %r608;
	div.approx.f32 	%f237, %f1293, %f287;
	abs.f32 	%f1402, %f237;
	setp.lt.f32 	%p281, %f1402, 0f40000000;
	@%p281 bra 	LBB0_174;
// %bb.163:
	setp.gtu.f32 	%p282, %f1402, 0f4B800000;
	@%p282 bra 	LBB0_170;
	bra.uni 	LBB0_164;
LBB0_170:
	mov.b32 	%r135, %f1402;
	and.b32  	%r609, %r135, 8388607;
	or.b32  	%r16186, %r609, 1065353216;
	mov.b32 	%f1401, %r16186;
	add.s32 	%r610, %r135, -1073741824;
	and.b32  	%r16187, %r610, -8388608;
	setp.eq.s32 	%p288, %r16187, 0;
	@%p288 bra 	LBB0_173;
// %bb.171:                             // %__nv_fmaf_rn.exit4.i.i.i2597.preheader
	mov.f32 	%f1304, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1303,%f1304;
	// end inline asm
LBB0_172:                               // %__nv_fmaf_rn.exit4.i.i.i2597
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r611, %r16187, 192937984;
	add.s32 	%r612, %r611, %r16186;
	mov.b32 	%f1305, %r612;
	mul.f32 	%f1306, %f1303, %f1305;
	sub.f32 	%f1307, %f1305, %f1306;
	fma.rn.f32 	%f1308, %f1307, %f1303, %f1306;
	sub.f32 	%f1309, %f1305, %f1308;
	fma.rz.f32 	%f1310, %f1309, %f1303, %f1308;
	cvt.rzi.f32.f32 	%f1311, %f1310;
	sub.f32 	%f1401, %f1305, %f1311;
	sub.s32 	%r16187, %r16187, %r611;
	mov.b32 	%r16186, %f1401;
	setp.ne.s32 	%p289, %r16187, 0;
	setp.ne.s32 	%p290, %r16186, 0;
	and.pred  	%p291, %p289, %p290;
	@%p291 bra 	LBB0_172;
LBB0_173:                               // %__internal_fmodf_slowpath_mod.exit.i.i2599
	setp.gt.u32 	%p292, %r135, 2139095039;
	selp.f32 	%f1312, 0f7FFFFFFF, 0f4B800000, %p292;
	mul.f32 	%f1313, %f1401, 0f34000000;
	mul.f32 	%f1402, %f1312, %f1313;
	bra.uni 	LBB0_174;
LBB0_164:                               // %__nv_fast_fdividef.exit.i.i.i2569
	div.approx.f32 	%f1296, %f1402, %f255;
	cvt.rzi.f32.f32 	%f1400, %f1296;
	fma.rn.f32 	%f240, %f1400, 0fC0000000, %f1402;
	mov.b32 	%r134, %f240;
	setp.lt.u32 	%p283, %r134, 1073741824;
	@%p283 bra 	LBB0_169;
// %bb.165:
	setp.lt.u32 	%p284, %r134, -2147483647;
	@%p284 bra 	LBB0_167;
// %bb.166:
	add.f32 	%f1301, %f1400, 0fBF800000;
	setp.lt.f32 	%p287, %f240, 0fC0000000;
	add.f32 	%f1302, %f1301, 0fBF800000;
	selp.f32 	%f1400, %f1302, %f1301, %p287;
	bra.uni 	LBB0_169;
LBB0_167:
	add.f32 	%f1400, %f1400, 0f3F800000;
	setp.ltu.f32 	%p285, %f240, 0f40800000;
	@%p285 bra 	LBB0_169;
// %bb.168:                             // %__nv_fmaf_rn.exit.i.i.i2574
	add.f32 	%f1297, %f1400, 0f3F800000;
	fma.rn.f32 	%f1299, %f255, 0fC0400000, %f240;
	setp.ge.f32 	%p286, %f1299, 0f00000000;
	add.f32 	%f1300, %f1297, 0f3F800000;
	selp.f32 	%f1400, %f1300, %f1297, %p286;
LBB0_169:                               // %__internal_fmodf_fastpath_quot.exit.i.i2578
	fma.rn.f32 	%f1402, %f1400, 0fC0000000, %f1402;
LBB0_174:                               // %__internal_fmodf_kernel.exit.i2603
	add.s64 	%rd50, %rd1, %rd49;
	mov.b32 	%r274, %f325;
	mov.b32 	%r273, %f6;
	mov.b32 	%r292, %f394;
	mov.b32 	%r291, %f15;
	mov.b32 	%r310, %f463;
	mov.b32 	%r309, %f24;
	mov.b32 	%r328, %f532;
	mov.b32 	%r327, %f33;
	mov.b32 	%r346, %f601;
	mov.b32 	%r345, %f42;
	mov.b32 	%r364, %f670;
	mov.b32 	%r363, %f51;
	mov.b32 	%r382, %f739;
	mov.b32 	%r381, %f60;
	mov.b32 	%r400, %f807;
	mov.b32 	%r399, %f69;
	xor.b32  	%r479, %r482, -2147483648;
	xor.b32  	%r478, %r481, -2147483648;
	mov.b32 	%r523, %f1131;
	mov.b32 	%r522, %f164;
	mov.b32 	%r526, %f1128;
	mov.b32 	%r525, %f163;
	xor.b32  	%r569, %r572, -2147483648;
	xor.b32  	%r568, %r571, -2147483648;
	selp.f32 	%f236, %f1292, %f1288, %p280;
	abs.f32 	%f1314, %f1402;
	setp.gtu.f32 	%p293, %f1314, 0f7F800000;
	@%p293 bra 	LBB0_176;
// %bb.175:
	mov.b32 	%r613, %f237;
	and.b32  	%r614, %r613, -2147483648;
	mov.b32 	%r615, %f1402;
	or.b32  	%r616, %r614, %r615;
	mov.b32 	%f1402, %r616;
LBB0_176:                               // %__nv_fmodf.exit2604
	ld.param.u64 	%rd2, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_3];
	ld.param.u64 	%rd3, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_4];
	ld.global.u32 	%r13, [%rd50];
	ld.global.u32 	%r14, [%rd50+128];
	// begin inline asm
	cvt.rn.f16x2.f32 %r272, %r274, %r273;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r290, %r292, %r291;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r308, %r310, %r309;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r326, %r328, %r327;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r344, %r346, %r345;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r362, %r364, %r363;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r380, %r382, %r381;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r398, %r400, %r399;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r426, %r428, %r427;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r429, %r428, %r427;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r432, %r434, %r433;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r435, %r434, %r433;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r474, %r476, %r475;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r477, %r479, %r478;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r480, %r482, %r481;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r483, %r476, %r475;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r521, %r523, %r522;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r524, %r526, %r525;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r564, %r566, %r565;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r567, %r569, %r568;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r570, %r572, %r571;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r573, %r566, %r565;
	// end inline asm
	add.f32 	%f1315, %f1402, %f1402;
	mov.b32 	%r624, %f1315;
	and.b32  	%r625, %r624, -2147483648;
	or.b32  	%r626, %r625, 1056964608;
	mov.b32 	%f1316, %r626;
	add.f32 	%f1317, %f1315, %f1316;
	cvt.rzi.f32.f32 	%f1318, %f1317;
	abs.f32 	%f1319, %f1315;
	setp.gt.f32 	%p294, %f1319, 0f4B000000;
	selp.f32 	%f1320, %f1315, %f1318, %p294;
	cvt.rzi.f32.f32 	%f1321, %f1315;
	setp.lt.f32 	%p295, %f1319, 0f3F000000;
	selp.f32 	%f1322, %f1321, %f1320, %p295;
	cvt.rzi.s32.f32 	%r627, %f1322;
	fma.rn.f32 	%f1323, %f1322, 0fBF000000, %f1402;
	mul.f32 	%f1324, %f1323, 0f34222169;
	fma.rn.f32 	%f1325, %f1323, 0f40490FDA, %f1324;
	mul.f32 	%f1326, %f1325, %f1325;
	fma.rn.f32 	%f1327, %f1326, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f1328, %f1327, %f1326, 0f3D2AAABB;
	fma.rn.f32 	%f1329, %f1328, %f1326, 0fBEFFFFFF;
	fma.rn.f32 	%f1330, %f1329, %f1326, 0f3F800000;
	fma.rn.f32 	%f1331, %f1326, %f1325, 0f00000000;
	fma.rn.f32 	%f1332, %f1326, 0fB94D4153, 0f3C0885E4;
	fma.rn.f32 	%f1333, %f1332, %f1326, 0fBE2AAAA8;
	fma.rn.f32 	%f1334, %f1333, %f1331, %f1325;
	and.b32  	%r628, %r627, 1;
	setp.eq.b32 	%p296, %r628, 1;
	selp.f32 	%f1335, %f1330, %f1334, %p296;
	selp.f32 	%f1336, %f1334, %f1330, %p296;
	and.b32  	%r629, %r627, 2;
	setp.eq.s32 	%p297, %r629, 0;
	neg.f32 	%f1337, %f1335;
	selp.f32 	%f1338, %f1335, %f1337, %p297;
	add.s32 	%r630, %r627, 1;
	and.b32  	%r631, %r630, 2;
	setp.eq.s32 	%p298, %r631, 0;
	sub.f32 	%f1340, %f284, %f1336;
	selp.f32 	%f1341, %f1336, %f1340, %p298;
	cvt.rzi.f32.f32 	%f1342, %f1402;
	setp.eq.f32 	%p299, %f1342, %f1402;
	mul.f32 	%f1343, %f1402, 0f00000000;
	selp.f32 	%f1344, %f1343, %f1338, %p299;
	abs.f32 	%f1345, %f1402;
	setp.gt.f32 	%p300, %f1345, 0f4B800000;
	add.f32 	%f1346, %f1344, 0f3F800000;
	selp.f32 	%f1347, %f1346, %f1341, %p300;
	mov.b32 	%r619, %f1347;
	mov.b32 	%r618, %f236;
	// begin inline asm
	cvt.rn.f16x2.f32 %r617, %r619, %r618;
	// end inline asm
	mov.b32 	%r622, %f1344;
	mov.b32 	%r621, %f235;
	// begin inline asm
	cvt.rn.f16x2.f32 %r620, %r622, %r621;
	// end inline asm
	shl.b32 	%r632, %r2, 4;
	and.b32  	%r633, %r632, 112;
	shl.b32 	%r634, %r1, 7;
	and.b32  	%r635, %r634, 384;
	or.b32  	%r636, %r633, %r635;
	and.b32  	%r637, %r634, 512;
	shl.b32 	%r638, %r2, 3;
	and.b32  	%r639, %r638, 64;
	and.b32  	%r640, %r10, 32;
	or.b32  	%r641, %r639, %r3;
	or.b32  	%r144, %r641, %r640;
	or.b32  	%r145, %r636, %r637;
	and.b32  	%r642, %r7, 28;
	shl.b32 	%r643, %r1, 5;
	and.b32  	%r644, %r643, 96;
	and.b32  	%r645, %r643, 128;
	or.b32  	%r646, %r644, %r642;
	or.b32  	%r146, %r646, %r645;
	and.b32  	%r147, %r2, 8;
	shr.u32 	%r647, %r3, 3;
	mul.lo.s32 	%r648, %r647, 260;
	or.b32  	%r649, %r632, %r147;
	shr.u32 	%r650, %r649, 2;
	and.b32  	%r651, %r650, 30;
	bfe.u32 	%r652, %r3, 2, 1;
	shr.u32 	%r653, %r3, 1;
	bfe.u32 	%r654, %r3, 1, 1;
	and.b32  	%r655, %r3, 1;
	mad.lo.s32 	%r656, %r655, 2080, %r648;
	mad.lo.s32 	%r657, %r20, 65, %r656;
	mad.lo.s32 	%r658, %r652, 520, %r657;
	mad.lo.s32 	%r659, %r654, 1040, %r658;
	add.s32 	%r660, %r659, %r651;
	mul.wide.u32 	%rd51, %r660, 4;
	mov.u64 	%rd52, shmem;
	add.s64 	%rd5, %rd52, %rd51;
	add.s32 	%r661, %r660, 32;
	mul.wide.u32 	%rd53, %r661, 4;
	add.s64 	%rd6, %rd52, %rd53;
	add.s32 	%r662, %r660, 1;
	mul.wide.u32 	%rd54, %r662, 4;
	add.s64 	%rd7, %rd52, %rd54;
	add.s32 	%r663, %r660, 33;
	mul.wide.u32 	%rd55, %r663, 4;
	add.s64 	%rd8, %rd52, %rd55;
	add.s32 	%r664, %r660, 130;
	mul.wide.u32 	%rd56, %r664, 4;
	add.s64 	%rd9, %rd52, %rd56;
	add.s32 	%r665, %r660, 162;
	mul.wide.u32 	%rd57, %r665, 4;
	add.s64 	%rd10, %rd52, %rd57;
	add.s32 	%r666, %r660, 131;
	mul.wide.u32 	%rd58, %r666, 4;
	add.s64 	%rd11, %rd52, %rd58;
	add.s32 	%r667, %r660, 163;
	mul.wide.u32 	%rd59, %r667, 4;
	add.s64 	%rd12, %rd52, %rd59;
	mul.lo.s32 	%r668, %r19, 260;
	mul.lo.s32 	%r669, %r17, 130;
	mul.lo.s32 	%r670, %r20, 520;
	mul.lo.s32 	%r671, %r22, 1040;
	mul.lo.s32 	%r672, %r16, 65;
	and.b32  	%r673, %r4, 32;
	add.s32 	%r674, %r669, %r653;
	add.s32 	%r675, %r674, %r670;
	add.s32 	%r676, %r675, %r673;
	add.s32 	%r677, %r676, %r668;
	add.s32 	%r678, %r677, %r671;
	add.s32 	%r679, %r678, %r672;
	or.b32  	%r680, %r653, 8;
	add.s32 	%r681, %r680, %r669;
	add.s32 	%r682, %r681, %r670;
	add.s32 	%r683, %r682, %r673;
	add.s32 	%r684, %r683, %r668;
	add.s32 	%r685, %r684, %r671;
	add.s32 	%r686, %r685, %r672;
	or.b32  	%r687, %r653, 16;
	add.s32 	%r688, %r687, %r669;
	add.s32 	%r689, %r688, %r670;
	add.s32 	%r690, %r689, %r673;
	add.s32 	%r691, %r690, %r668;
	add.s32 	%r692, %r691, %r671;
	add.s32 	%r693, %r692, %r672;
	or.b32  	%r694, %r653, 24;
	add.s32 	%r695, %r694, %r669;
	add.s32 	%r696, %r695, %r670;
	add.s32 	%r697, %r696, %r673;
	add.s32 	%r698, %r697, %r668;
	add.s32 	%r699, %r698, %r671;
	add.s32 	%r700, %r699, %r672;
	or.b32  	%r701, %r653, 2080;
	add.s32 	%r702, %r701, %r669;
	add.s32 	%r703, %r702, %r670;
	add.s32 	%r704, %r703, %r673;
	add.s32 	%r705, %r704, %r668;
	add.s32 	%r706, %r705, %r671;
	add.s32 	%r707, %r706, %r672;
	add.s32 	%r708, %r669, 2080;
	add.s32 	%r709, %r708, %r680;
	add.s32 	%r710, %r709, %r670;
	add.s32 	%r711, %r710, %r673;
	add.s32 	%r712, %r711, %r668;
	add.s32 	%r713, %r712, %r671;
	add.s32 	%r714, %r713, %r672;
	add.s32 	%r715, %r708, %r687;
	add.s32 	%r716, %r715, %r670;
	add.s32 	%r717, %r716, %r673;
	add.s32 	%r718, %r717, %r668;
	add.s32 	%r719, %r718, %r671;
	add.s32 	%r720, %r719, %r672;
	add.s32 	%r721, %r708, %r694;
	add.s32 	%r722, %r721, %r670;
	add.s32 	%r723, %r722, %r673;
	add.s32 	%r724, %r723, %r668;
	add.s32 	%r725, %r724, %r671;
	add.s32 	%r726, %r725, %r672;
	or.b32  	%r727, %r12, %r11;
	or.b32  	%r728, %r727, %r8;
	or.b32  	%r729, %r728, %r9;
	shr.u32 	%r730, %r729, 1;
	mul.lo.s32 	%r731, %r730, 65;
	or.b32  	%r732, %r673, %r653;
	add.s32 	%r733, %r732, %r731;
	or.b32  	%r734, %r673, %r680;
	add.s32 	%r735, %r734, %r731;
	or.b32  	%r736, %r673, %r687;
	add.s32 	%r737, %r736, %r731;
	or.b32  	%r738, %r673, %r694;
	add.s32 	%r739, %r738, %r731;
	shl.b32 	%r740, %r1, 4;
	and.b32  	%r741, %r740, 1920;
	add.s32 	%r742, %r731, 2080;
	add.s32 	%r743, %r732, %r742;
	add.s32 	%r744, %r734, %r742;
	add.s32 	%r745, %r736, %r742;
	add.s32 	%r746, %r738, %r742;
	shl.b32 	%r747, %r3, 1;
	or.b32  	%r748, %r747, %r20;
	mul.lo.s32 	%r749, %r748, 65;
	add.s32 	%r750, %r651, %r749;
	mul.wide.u32 	%rd60, %r750, 4;
	add.s64 	%rd13, %rd52, %rd60;
	cvt.u64.u32 	%rd61, %r651;
	cvt.u64.u32 	%rd62, %r749;
	add.s64 	%rd63, %rd62, %rd61;
	shl.b64 	%rd64, %rd63, 2;
	add.s64 	%rd14, %rd52, %rd64;
	or.b32  	%r751, %r748, 32;
	mul.lo.s32 	%r752, %r751, 65;
	add.s32 	%r753, %r651, %r752;
	mul.wide.u32 	%rd65, %r753, 4;
	add.s64 	%rd15, %rd52, %rd65;
	cvt.u64.u32 	%rd66, %r752;
	add.s64 	%rd67, %rd66, %rd61;
	shl.b64 	%rd68, %rd67, 2;
	add.s64 	%rd16, %rd52, %rd68;
	shl.b32 	%r754, %r3, 2;
	or.b32  	%r755, %r754, %r21;
	and.b32  	%r756, %r643, 224;
	or.b32  	%r757, %r756, %r642;
	or.b32  	%r758, %r755, %r741;
	shl.b32 	%r759, %r758, 8;
	or.b32  	%r760, %r757, %r759;
	or.b32  	%r148, %r760, -1572864;
	or.b32  	%r149, %r760, -1556480;
	mul.wide.u32 	%rd17, %r746, 4;
	mul.wide.u32 	%rd18, %r745, 4;
	mul.wide.u32 	%rd19, %r744, 4;
	mul.wide.u32 	%rd20, %r743, 4;
	mul.wide.u32 	%rd21, %r739, 4;
	mul.wide.u32 	%rd22, %r737, 4;
	mul.wide.u32 	%rd23, %r735, 4;
	mul.wide.u32 	%rd24, %r733, 4;
	mul.wide.u32 	%rd25, %r726, 4;
	mul.wide.u32 	%rd26, %r720, 4;
	mul.wide.u32 	%rd27, %r714, 4;
	mul.wide.u32 	%rd28, %r707, 4;
	mul.wide.u32 	%rd29, %r700, 4;
	mul.wide.u32 	%rd30, %r693, 4;
	mul.wide.u32 	%rd31, %r686, 4;
	mul.wide.u32 	%rd32, %r679, 4;
	mov.u32 	%r16214, 0;
	setp.eq.s32 	%p301, %r147, 0;
	mov.u16 	%rs2381, 25600;
	mov.u16 	%rs2173, 21504;
	mov.u16 	%rs2389, 18432;
	mov.u16 	%rs2307, -14592;
	mov.u32 	%r16215, %r16214;
	mov.u32 	%r16216, %r16214;
	mov.u32 	%r16217, %r16214;
	mov.u32 	%r16218, %r16214;
	mov.u32 	%r16219, %r16214;
	mov.u32 	%r16220, %r16214;
	mov.u32 	%r16221, %r16214;
	mov.u32 	%r16222, %r16214;
	mov.u32 	%r16223, %r16214;
	mov.u32 	%r16224, %r16214;
	mov.u32 	%r16225, %r16214;
	mov.u32 	%r16226, %r16214;
	mov.u32 	%r16227, %r16214;
	mov.u32 	%r16228, %r16214;
	mov.u32 	%r16229, %r16214;
	mov.u32 	%r16230, %r16214;
	mov.u32 	%r16231, %r16214;
	mov.u32 	%r16232, %r16214;
	mov.u32 	%r16233, %r16214;
	mov.u32 	%r16234, %r16214;
	mov.u32 	%r16235, %r16214;
	mov.u32 	%r16236, %r16214;
	mov.u32 	%r16237, %r16214;
	mov.u32 	%r16212, %r16214;
	bra.uni 	LBB0_177;
LBB0_181:                               // %L63541
                                        //   in Loop: Header=BB0_177 Depth=1
	add.s32 	%r16212, %r174, 256;
	setp.gt.s32 	%p306, %r5, %r16212;
	setp.ne.s32 	%p307, %r174, 32512;
	and.pred  	%p308, %p307, %p306;
	@%p308 bra 	LBB0_177;
	bra.uni 	LBB0_182;
LBB0_177:                               // %L2061
                                        // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_178 Depth 2
	mov.u32 	%r174, %r16212;
	or.b32  	%r794, %r144, %r174;
	shl.b32 	%r795, %r794, 14;
	or.b32  	%r796, %r145, %r795;
	cvt.u64.u32 	%rd70, %r796;
	add.s64 	%rd71, %rd2, %rd70;
	ld.global.v4.u32 	{%r797, %r798, %r799, %r800}, [%rd71];
	shl.b32 	%r801, %r794, 12;
	or.b32  	%r802, %r146, %r801;
	or.b32  	%r803, %r802, 65536;
	mul.wide.s32 	%rd72, %r803, 4;
	add.s64 	%rd73, %rd2, %rd72;
	ld.global.v4.u32 	{%r804, %r805, %r806, %r807}, [%rd73];
	selp.b32 	%r808, %r799, %r797, %p301;
	shfl.sync.bfly.b32	%r809, %r808, 8, 31, -1;
	selp.b32 	%r762, %r797, %r809, %p301;
	selp.b32 	%r763, %r809, %r799, %p301;
	selp.b32 	%r810, %r800, %r798, %p301;
	shfl.sync.bfly.b32	%r811, %r810, 8, 31, -1;
	selp.b32 	%r770, %r798, %r811, %p301;
	selp.b32 	%r771, %r811, %r800, %p301;
	selp.b32 	%r812, %r806, %r804, %p301;
	shfl.sync.bfly.b32	%r813, %r812, 8, 31, -1;
	selp.b32 	%r778, %r804, %r813, %p301;
	selp.b32 	%r779, %r813, %r806, %p301;
	selp.b32 	%r814, %r807, %r805, %p301;
	shfl.sync.bfly.b32	%r815, %r814, 8, 31, -1;
	selp.b32 	%r786, %r805, %r815, %p301;
	selp.b32 	%r787, %r815, %r807, %p301;
	mov.u32 	%r788, 21520;
	// begin inline asm
	prmt.b32 %r761, %r762, %r763, %r788;
	// end inline asm
	mov.u32 	%r792, 30258;
	// begin inline asm
	prmt.b32 %r765, %r762, %r763, %r792;
	// end inline asm
	// begin inline asm
	prmt.b32 %r769, %r770, %r771, %r788;
	// end inline asm
	// begin inline asm
	prmt.b32 %r773, %r770, %r771, %r792;
	// end inline asm
	// begin inline asm
	prmt.b32 %r777, %r778, %r779, %r788;
	// end inline asm
	// begin inline asm
	prmt.b32 %r781, %r778, %r779, %r792;
	// end inline asm
	// begin inline asm
	prmt.b32 %r785, %r786, %r787, %r788;
	// end inline asm
	// begin inline asm
	prmt.b32 %r789, %r786, %r787, %r792;
	// end inline asm
	st.shared.u32 	[%rd5], %r761;
	st.shared.u32 	[%rd6], %r765;
	st.shared.u32 	[%rd7], %r769;
	st.shared.u32 	[%rd8], %r773;
	st.shared.u32 	[%rd9], %r777;
	st.shared.u32 	[%rd10], %r781;
	st.shared.u32 	[%rd11], %r785;
	st.shared.u32 	[%rd12], %r789;
	bar.sync 	0;
	mov.u32 	%r16213, 256;
	mov.u64 	%rd94, %rd52;
LBB0_178:                               // %L9059
                                        //   Parent Loop BB0_177 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	add.s64 	%rd74, %rd94, %rd32;
	ld.shared.u32 	%r16080, [%rd74];
	add.s64 	%rd75, %rd94, %rd31;
	ld.shared.u32 	%r16081, [%rd75];
	add.s64 	%rd76, %rd94, %rd30;
	ld.shared.u32 	%r16082, [%rd76];
	add.s64 	%rd77, %rd94, %rd29;
	ld.shared.u32 	%r16083, [%rd77];
	add.s64 	%rd78, %rd94, %rd28;
	ld.shared.u32 	%r16084, [%rd78];
	add.s64 	%rd79, %rd94, %rd27;
	ld.shared.u32 	%r16085, [%rd79];
	add.s64 	%rd80, %rd94, %rd26;
	ld.shared.u32 	%r16086, [%rd80];
	add.s64 	%rd81, %rd94, %rd25;
	ld.shared.u32 	%r16087, [%rd81];
	// begin inline asm
	mov.b32 %r821, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r832, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r820, %r16080, -2004318072;
	mov.u32 	%r819, 983055;
	// begin inline asm
	lop3.b32 %r818, %r819, %r820, %r821, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r822, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r823, %r821, %r822;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r826, %r818, %r823;
	// end inline asm
	mov.u32 	%r830, 15728880;
	// begin inline asm
	lop3.b32 %r829, %r830, %r820, %r832, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r833, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r834, %r832, %r833;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r837, %r829, %r834;
	// end inline asm
	shr.u32 	%r842, %r820, 8;
	// begin inline asm
	lop3.b32 %r840, %r819, %r842, %r821, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r844, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r845, %r821, %r844;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r848, %r840, %r845;
	// end inline asm
	// begin inline asm
	lop3.b32 %r851, %r830, %r842, %r832, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r855, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r856, %r832, %r855;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r859, %r851, %r856;
	// end inline asm
	// begin inline asm
	mov.b32 %r867, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r878, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r866, %r16081, -2004318072;
	// begin inline asm
	lop3.b32 %r864, %r819, %r866, %r867, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r868, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r869, %r867, %r868;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r872, %r864, %r869;
	// end inline asm
	// begin inline asm
	lop3.b32 %r875, %r830, %r866, %r878, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r879, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r880, %r878, %r879;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r883, %r875, %r880;
	// end inline asm
	shr.u32 	%r888, %r866, 8;
	// begin inline asm
	lop3.b32 %r886, %r819, %r888, %r867, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r890, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r891, %r867, %r890;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r894, %r886, %r891;
	// end inline asm
	// begin inline asm
	lop3.b32 %r897, %r830, %r888, %r878, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r901, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r902, %r878, %r901;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r905, %r897, %r902;
	// end inline asm
	// begin inline asm
	mov.b32 %r913, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r924, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r912, %r16082, -2004318072;
	// begin inline asm
	lop3.b32 %r910, %r819, %r912, %r913, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r914, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r915, %r913, %r914;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r918, %r910, %r915;
	// end inline asm
	// begin inline asm
	lop3.b32 %r921, %r830, %r912, %r924, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r925, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r926, %r924, %r925;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r929, %r921, %r926;
	// end inline asm
	shr.u32 	%r934, %r912, 8;
	// begin inline asm
	lop3.b32 %r932, %r819, %r934, %r913, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r936, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r937, %r913, %r936;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r940, %r932, %r937;
	// end inline asm
	// begin inline asm
	lop3.b32 %r943, %r830, %r934, %r924, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r947, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r948, %r924, %r947;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r951, %r943, %r948;
	// end inline asm
	// begin inline asm
	mov.b32 %r959, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r970, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r958, %r16083, -2004318072;
	// begin inline asm
	lop3.b32 %r956, %r819, %r958, %r959, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r960, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r961, %r959, %r960;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r964, %r956, %r961;
	// end inline asm
	// begin inline asm
	lop3.b32 %r967, %r830, %r958, %r970, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r971, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r972, %r970, %r971;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r975, %r967, %r972;
	// end inline asm
	shr.u32 	%r980, %r958, 8;
	// begin inline asm
	lop3.b32 %r978, %r819, %r980, %r959, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r982, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r983, %r959, %r982;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r986, %r978, %r983;
	// end inline asm
	// begin inline asm
	lop3.b32 %r989, %r830, %r980, %r970, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r993, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r994, %r970, %r993;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r997, %r989, %r994;
	// end inline asm
	// begin inline asm
	mov.b32 %r1005, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1016, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1004, %r16084, -2004318072;
	// begin inline asm
	lop3.b32 %r1002, %r819, %r1004, %r1005, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1006, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1007, %r1005, %r1006;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1010, %r1002, %r1007;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1013, %r830, %r1004, %r1016, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1017, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1018, %r1016, %r1017;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1021, %r1013, %r1018;
	// end inline asm
	shr.u32 	%r1026, %r1004, 8;
	// begin inline asm
	lop3.b32 %r1024, %r819, %r1026, %r1005, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1028, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1029, %r1005, %r1028;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1032, %r1024, %r1029;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1035, %r830, %r1026, %r1016, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1039, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1040, %r1016, %r1039;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1043, %r1035, %r1040;
	// end inline asm
	// begin inline asm
	mov.b32 %r1051, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1062, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1050, %r16085, -2004318072;
	// begin inline asm
	lop3.b32 %r1048, %r819, %r1050, %r1051, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1052, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1053, %r1051, %r1052;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1056, %r1048, %r1053;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1059, %r830, %r1050, %r1062, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1063, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1064, %r1062, %r1063;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1067, %r1059, %r1064;
	// end inline asm
	shr.u32 	%r1072, %r1050, 8;
	// begin inline asm
	lop3.b32 %r1070, %r819, %r1072, %r1051, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1074, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1075, %r1051, %r1074;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1078, %r1070, %r1075;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1081, %r830, %r1072, %r1062, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1085, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1086, %r1062, %r1085;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1089, %r1081, %r1086;
	// end inline asm
	// begin inline asm
	mov.b32 %r1097, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1108, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1096, %r16086, -2004318072;
	// begin inline asm
	lop3.b32 %r1094, %r819, %r1096, %r1097, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1098, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1099, %r1097, %r1098;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1102, %r1094, %r1099;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1105, %r830, %r1096, %r1108, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1109, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1110, %r1108, %r1109;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1113, %r1105, %r1110;
	// end inline asm
	shr.u32 	%r1118, %r1096, 8;
	// begin inline asm
	lop3.b32 %r1116, %r819, %r1118, %r1097, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1120, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1121, %r1097, %r1120;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1124, %r1116, %r1121;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1127, %r830, %r1118, %r1108, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1131, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1132, %r1108, %r1131;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1135, %r1127, %r1132;
	// end inline asm
	// begin inline asm
	mov.b32 %r1143, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1154, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1142, %r16087, -2004318072;
	// begin inline asm
	lop3.b32 %r1140, %r819, %r1142, %r1143, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1144, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1145, %r1143, %r1144;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1148, %r1140, %r1145;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1151, %r830, %r1142, %r1154, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1155, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1156, %r1154, %r1155;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1159, %r1151, %r1156;
	// end inline asm
	shr.u32 	%r1164, %r1142, 8;
	// begin inline asm
	lop3.b32 %r1162, %r819, %r1164, %r1143, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1166, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1167, %r1143, %r1166;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1170, %r1162, %r1167;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1173, %r830, %r1164, %r1154, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1177, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1178, %r1154, %r1177;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1181, %r1173, %r1178;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1184, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1186, %r1184, %r826;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1189, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1191, %r1189, %r837;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1194, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1196, %r1194, %r848;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1199, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1201, %r1199, %r859;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1204, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1206, %r1204, %r872;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1209, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1211, %r1209, %r883;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1214, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1216, %r1214, %r894;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1219, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1221, %r1219, %r905;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1224, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1226, %r1224, %r918;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1229, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1231, %r1229, %r929;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1234, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1236, %r1234, %r940;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1239, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1241, %r1239, %r951;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1244, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1246, %r1244, %r964;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1249, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1251, %r1249, %r975;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1254, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1256, %r1254, %r986;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1259, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1261, %r1259, %r997;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1264, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1266, %r1264, %r1010;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1269, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1271, %r1269, %r1021;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1274, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1276, %r1274, %r1032;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1279, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1281, %r1279, %r1043;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1284, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1286, %r1284, %r1056;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1289, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1291, %r1289, %r1067;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1294, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1296, %r1294, %r1078;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1299, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1301, %r1299, %r1089;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1304, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1306, %r1304, %r1102;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1309, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1311, %r1309, %r1113;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1314, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1316, %r1314, %r1124;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1319, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1321, %r1319, %r1135;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1324, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1326, %r1324, %r1148;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1329, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1331, %r1329, %r1159;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1334, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1336, %r1334, %r1170;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1339, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1341, %r1339, %r1181;
	// end inline asm
	// begin inline asm
	mov.b32 %r1349, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1360, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1348, %r16214, -2004318072;
	// begin inline asm
	lop3.b32 %r1346, %r819, %r1348, %r1349, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1350, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1351, %r1349, %r1350;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1354, %r1346, %r1351;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1357, %r830, %r1348, %r1360, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1361, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1362, %r1360, %r1361;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1365, %r1357, %r1362;
	// end inline asm
	shr.u32 	%r1370, %r1348, 8;
	// begin inline asm
	lop3.b32 %r1368, %r819, %r1370, %r1349, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1372, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1373, %r1349, %r1372;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1376, %r1368, %r1373;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1379, %r830, %r1370, %r1360, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1383, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1384, %r1360, %r1383;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1387, %r1379, %r1384;
	// end inline asm
	// begin inline asm
	mov.b32 %r1395, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1406, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1394, %r16215, -2004318072;
	// begin inline asm
	lop3.b32 %r1392, %r819, %r1394, %r1395, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1396, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1397, %r1395, %r1396;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1400, %r1392, %r1397;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1403, %r830, %r1394, %r1406, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1407, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1408, %r1406, %r1407;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1411, %r1403, %r1408;
	// end inline asm
	shr.u32 	%r1416, %r1394, 8;
	// begin inline asm
	lop3.b32 %r1414, %r819, %r1416, %r1395, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1418, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1419, %r1395, %r1418;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1422, %r1414, %r1419;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1425, %r830, %r1416, %r1406, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1429, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1430, %r1406, %r1429;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1433, %r1425, %r1430;
	// end inline asm
	// begin inline asm
	mov.b32 %r1441, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1452, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1440, %r16216, -2004318072;
	// begin inline asm
	lop3.b32 %r1438, %r819, %r1440, %r1441, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1442, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1443, %r1441, %r1442;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1446, %r1438, %r1443;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1449, %r830, %r1440, %r1452, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1453, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1454, %r1452, %r1453;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1457, %r1449, %r1454;
	// end inline asm
	shr.u32 	%r1462, %r1440, 8;
	// begin inline asm
	lop3.b32 %r1460, %r819, %r1462, %r1441, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1464, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1465, %r1441, %r1464;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1468, %r1460, %r1465;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1471, %r830, %r1462, %r1452, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1475, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1476, %r1452, %r1475;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1479, %r1471, %r1476;
	// end inline asm
	// begin inline asm
	mov.b32 %r1487, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1498, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1486, %r16217, -2004318072;
	// begin inline asm
	lop3.b32 %r1484, %r819, %r1486, %r1487, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1488, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1489, %r1487, %r1488;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1492, %r1484, %r1489;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1495, %r830, %r1486, %r1498, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1499, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1500, %r1498, %r1499;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1503, %r1495, %r1500;
	// end inline asm
	shr.u32 	%r1508, %r1486, 8;
	// begin inline asm
	lop3.b32 %r1506, %r819, %r1508, %r1487, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1510, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1511, %r1487, %r1510;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1514, %r1506, %r1511;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1517, %r830, %r1508, %r1498, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1521, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1522, %r1498, %r1521;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1525, %r1517, %r1522;
	// end inline asm
	// begin inline asm
	mov.b32 %r1533, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1544, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1532, %r16226, -2004318072;
	// begin inline asm
	lop3.b32 %r1530, %r819, %r1532, %r1533, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1534, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1535, %r1533, %r1534;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1538, %r1530, %r1535;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1541, %r830, %r1532, %r1544, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1545, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1546, %r1544, %r1545;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1549, %r1541, %r1546;
	// end inline asm
	shr.u32 	%r1554, %r1532, 8;
	// begin inline asm
	lop3.b32 %r1552, %r819, %r1554, %r1533, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1556, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1557, %r1533, %r1556;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1560, %r1552, %r1557;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1563, %r830, %r1554, %r1544, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1567, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1568, %r1544, %r1567;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1571, %r1563, %r1568;
	// end inline asm
	// begin inline asm
	mov.b32 %r1579, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1590, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1578, %r16227, -2004318072;
	// begin inline asm
	lop3.b32 %r1576, %r819, %r1578, %r1579, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1580, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1581, %r1579, %r1580;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1584, %r1576, %r1581;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1587, %r830, %r1578, %r1590, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1591, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1592, %r1590, %r1591;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1595, %r1587, %r1592;
	// end inline asm
	shr.u32 	%r1600, %r1578, 8;
	// begin inline asm
	lop3.b32 %r1598, %r819, %r1600, %r1579, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1602, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1603, %r1579, %r1602;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1606, %r1598, %r1603;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1609, %r830, %r1600, %r1590, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1613, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1614, %r1590, %r1613;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1617, %r1609, %r1614;
	// end inline asm
	// begin inline asm
	mov.b32 %r1625, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1636, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1624, %r16228, -2004318072;
	// begin inline asm
	lop3.b32 %r1622, %r819, %r1624, %r1625, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1626, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1627, %r1625, %r1626;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1630, %r1622, %r1627;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1633, %r830, %r1624, %r1636, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1637, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1638, %r1636, %r1637;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1641, %r1633, %r1638;
	// end inline asm
	shr.u32 	%r1646, %r1624, 8;
	// begin inline asm
	lop3.b32 %r1644, %r819, %r1646, %r1625, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1648, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1649, %r1625, %r1648;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1652, %r1644, %r1649;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1655, %r830, %r1646, %r1636, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1659, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1660, %r1636, %r1659;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1663, %r1655, %r1660;
	// end inline asm
	// begin inline asm
	mov.b32 %r1671, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1682, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1670, %r16229, -2004318072;
	// begin inline asm
	lop3.b32 %r1668, %r819, %r1670, %r1671, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1672, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1673, %r1671, %r1672;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1676, %r1668, %r1673;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1679, %r830, %r1670, %r1682, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1683, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1684, %r1682, %r1683;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1687, %r1679, %r1684;
	// end inline asm
	shr.u32 	%r1692, %r1670, 8;
	// begin inline asm
	lop3.b32 %r1690, %r819, %r1692, %r1671, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1694, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1695, %r1671, %r1694;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1698, %r1690, %r1695;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1701, %r830, %r1692, %r1682, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1705, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1706, %r1682, %r1705;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1709, %r1701, %r1706;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1712, %r272, %r1354, %r1186;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1716, %r272, %r1365, %r1191;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1720, %r272, %r1376, %r1196;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1724, %r272, %r1387, %r1201;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1728, %r272, %r1400, %r1206;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1732, %r272, %r1411, %r1211;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1736, %r272, %r1422, %r1216;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1740, %r272, %r1433, %r1221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1744, %r272, %r1446, %r1226;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1748, %r272, %r1457, %r1231;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1752, %r272, %r1468, %r1236;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1756, %r272, %r1479, %r1241;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1760, %r272, %r1492, %r1246;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1764, %r272, %r1503, %r1251;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1768, %r272, %r1514, %r1256;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1772, %r272, %r1525, %r1261;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1776, %r290, %r1538, %r1266;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1780, %r290, %r1549, %r1271;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1784, %r290, %r1560, %r1276;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1788, %r290, %r1571, %r1281;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1792, %r290, %r1584, %r1286;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1796, %r290, %r1595, %r1291;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1800, %r290, %r1606, %r1296;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1804, %r290, %r1617, %r1301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1808, %r290, %r1630, %r1306;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1812, %r290, %r1641, %r1311;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1816, %r290, %r1652, %r1316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1820, %r290, %r1663, %r1321;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1824, %r290, %r1676, %r1326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1828, %r290, %r1687, %r1331;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1832, %r290, %r1698, %r1336;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1836, %r290, %r1709, %r1341;
	// end inline asm
	// begin inline asm
	mov.b32 %r1845, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1856, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1844, %r16218, -2004318072;
	// begin inline asm
	lop3.b32 %r1842, %r819, %r1844, %r1845, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1846, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1847, %r1845, %r1846;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1850, %r1842, %r1847;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1853, %r830, %r1844, %r1856, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1857, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1858, %r1856, %r1857;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1861, %r1853, %r1858;
	// end inline asm
	shr.u32 	%r1866, %r1844, 8;
	// begin inline asm
	lop3.b32 %r1864, %r819, %r1866, %r1845, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1868, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1869, %r1845, %r1868;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1872, %r1864, %r1869;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1875, %r830, %r1866, %r1856, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1879, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1880, %r1856, %r1879;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1883, %r1875, %r1880;
	// end inline asm
	// begin inline asm
	mov.b32 %r1891, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1902, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1890, %r16219, -2004318072;
	// begin inline asm
	lop3.b32 %r1888, %r819, %r1890, %r1891, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1892, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1893, %r1891, %r1892;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1896, %r1888, %r1893;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1899, %r830, %r1890, %r1902, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1903, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1904, %r1902, %r1903;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1907, %r1899, %r1904;
	// end inline asm
	shr.u32 	%r1912, %r1890, 8;
	// begin inline asm
	lop3.b32 %r1910, %r819, %r1912, %r1891, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1914, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1915, %r1891, %r1914;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1918, %r1910, %r1915;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1921, %r830, %r1912, %r1902, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1925, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1926, %r1902, %r1925;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1929, %r1921, %r1926;
	// end inline asm
	// begin inline asm
	mov.b32 %r1937, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1948, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1936, %r16220, -2004318072;
	// begin inline asm
	lop3.b32 %r1934, %r819, %r1936, %r1937, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1938, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1939, %r1937, %r1938;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1942, %r1934, %r1939;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1945, %r830, %r1936, %r1948, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1949, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1950, %r1948, %r1949;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1953, %r1945, %r1950;
	// end inline asm
	shr.u32 	%r1958, %r1936, 8;
	// begin inline asm
	lop3.b32 %r1956, %r819, %r1958, %r1937, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1960, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1961, %r1937, %r1960;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1964, %r1956, %r1961;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1967, %r830, %r1958, %r1948, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1971, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1972, %r1948, %r1971;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1975, %r1967, %r1972;
	// end inline asm
	// begin inline asm
	mov.b32 %r1983, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1994, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1982, %r16221, -2004318072;
	// begin inline asm
	lop3.b32 %r1980, %r819, %r1982, %r1983, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1984, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1985, %r1983, %r1984;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1988, %r1980, %r1985;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1991, %r830, %r1982, %r1994, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1995, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1996, %r1994, %r1995;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1999, %r1991, %r1996;
	// end inline asm
	shr.u32 	%r2004, %r1982, 8;
	// begin inline asm
	lop3.b32 %r2002, %r819, %r2004, %r1983, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2006, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2007, %r1983, %r2006;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2010, %r2002, %r2007;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2013, %r830, %r2004, %r1994, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2017, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2018, %r1994, %r2017;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2021, %r2013, %r2018;
	// end inline asm
	// begin inline asm
	mov.b32 %r2029, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2040, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2028, %r16230, -2004318072;
	// begin inline asm
	lop3.b32 %r2026, %r819, %r2028, %r2029, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2030, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2031, %r2029, %r2030;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2034, %r2026, %r2031;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2037, %r830, %r2028, %r2040, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2041, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2042, %r2040, %r2041;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2045, %r2037, %r2042;
	// end inline asm
	shr.u32 	%r2050, %r2028, 8;
	// begin inline asm
	lop3.b32 %r2048, %r819, %r2050, %r2029, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2052, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2053, %r2029, %r2052;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2056, %r2048, %r2053;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2059, %r830, %r2050, %r2040, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2063, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2064, %r2040, %r2063;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2067, %r2059, %r2064;
	// end inline asm
	// begin inline asm
	mov.b32 %r2075, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2086, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2074, %r16231, -2004318072;
	// begin inline asm
	lop3.b32 %r2072, %r819, %r2074, %r2075, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2076, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2077, %r2075, %r2076;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2080, %r2072, %r2077;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2083, %r830, %r2074, %r2086, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2087, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2088, %r2086, %r2087;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2091, %r2083, %r2088;
	// end inline asm
	shr.u32 	%r2096, %r2074, 8;
	// begin inline asm
	lop3.b32 %r2094, %r819, %r2096, %r2075, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2098, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2099, %r2075, %r2098;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2102, %r2094, %r2099;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2105, %r830, %r2096, %r2086, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2109, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2110, %r2086, %r2109;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2113, %r2105, %r2110;
	// end inline asm
	// begin inline asm
	mov.b32 %r2121, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2132, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2120, %r16232, -2004318072;
	// begin inline asm
	lop3.b32 %r2118, %r819, %r2120, %r2121, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2122, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2123, %r2121, %r2122;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2126, %r2118, %r2123;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2129, %r830, %r2120, %r2132, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2133, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2134, %r2132, %r2133;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2137, %r2129, %r2134;
	// end inline asm
	shr.u32 	%r2142, %r2120, 8;
	// begin inline asm
	lop3.b32 %r2140, %r819, %r2142, %r2121, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2144, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2145, %r2121, %r2144;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2148, %r2140, %r2145;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2151, %r830, %r2142, %r2132, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2155, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2156, %r2132, %r2155;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2159, %r2151, %r2156;
	// end inline asm
	// begin inline asm
	mov.b32 %r2167, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2178, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2166, %r16233, -2004318072;
	// begin inline asm
	lop3.b32 %r2164, %r819, %r2166, %r2167, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2168, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2169, %r2167, %r2168;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2172, %r2164, %r2169;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2175, %r830, %r2166, %r2178, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2179, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2180, %r2178, %r2179;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2183, %r2175, %r2180;
	// end inline asm
	shr.u32 	%r2188, %r2166, 8;
	// begin inline asm
	lop3.b32 %r2186, %r819, %r2188, %r2167, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2190, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2191, %r2167, %r2190;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2194, %r2186, %r2191;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2197, %r830, %r2188, %r2178, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2201, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2202, %r2178, %r2201;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2205, %r2197, %r2202;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2208, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2210, %r2208, %r1850, %r1712;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2214, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2216, %r2214, %r1861, %r1716;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2220, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2222, %r2220, %r1872, %r1720;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2226, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2228, %r2226, %r1883, %r1724;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2232, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2234, %r2232, %r1896, %r1728;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2238, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2240, %r2238, %r1907, %r1732;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2244, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2246, %r2244, %r1918, %r1736;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2250, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2252, %r2250, %r1929, %r1740;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2256, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2258, %r2256, %r1942, %r1744;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2262, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2264, %r2262, %r1953, %r1748;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2268, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2270, %r2268, %r1964, %r1752;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2274, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2276, %r2274, %r1975, %r1756;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2280, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2282, %r2280, %r1988, %r1760;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2286, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2288, %r2286, %r1999, %r1764;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2292, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2294, %r2292, %r2010, %r1768;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2298, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2300, %r2298, %r2021, %r1772;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2304, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2306, %r2304, %r2034, %r1776;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2310, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2312, %r2310, %r2045, %r1780;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2316, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2318, %r2316, %r2056, %r1784;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2322, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2324, %r2322, %r2067, %r1788;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2328, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2330, %r2328, %r2080, %r1792;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2334, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2336, %r2334, %r2091, %r1796;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2340, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2342, %r2340, %r2102, %r1800;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2346, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2348, %r2346, %r2113, %r1804;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2352, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2354, %r2352, %r2126, %r1808;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2358, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2360, %r2358, %r2137, %r1812;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2364, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2366, %r2364, %r2148, %r1816;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2370, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2372, %r2370, %r2159, %r1820;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2376, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2378, %r2376, %r2172, %r1824;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2382, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2384, %r2382, %r2183, %r1828;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2388, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2390, %r2388, %r2194, %r1832;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2394, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2396, %r2394, %r2205, %r1836;
	// end inline asm
	// begin inline asm
	mov.b32 %r2405, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2416, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2404, %r16222, -2004318072;
	// begin inline asm
	lop3.b32 %r2402, %r819, %r2404, %r2405, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2406, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2407, %r2405, %r2406;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2410, %r2402, %r2407;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2413, %r830, %r2404, %r2416, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2417, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2418, %r2416, %r2417;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2421, %r2413, %r2418;
	// end inline asm
	shr.u32 	%r2426, %r2404, 8;
	// begin inline asm
	lop3.b32 %r2424, %r819, %r2426, %r2405, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2428, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2429, %r2405, %r2428;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2432, %r2424, %r2429;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2435, %r830, %r2426, %r2416, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2439, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2440, %r2416, %r2439;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2443, %r2435, %r2440;
	// end inline asm
	// begin inline asm
	mov.b32 %r2451, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2462, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2450, %r16223, -2004318072;
	// begin inline asm
	lop3.b32 %r2448, %r819, %r2450, %r2451, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2452, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2453, %r2451, %r2452;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2456, %r2448, %r2453;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2459, %r830, %r2450, %r2462, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2463, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2464, %r2462, %r2463;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2467, %r2459, %r2464;
	// end inline asm
	shr.u32 	%r2472, %r2450, 8;
	// begin inline asm
	lop3.b32 %r2470, %r819, %r2472, %r2451, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2474, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2475, %r2451, %r2474;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2478, %r2470, %r2475;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2481, %r830, %r2472, %r2462, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2485, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2486, %r2462, %r2485;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2489, %r2481, %r2486;
	// end inline asm
	// begin inline asm
	mov.b32 %r2497, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2508, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2496, %r16224, -2004318072;
	// begin inline asm
	lop3.b32 %r2494, %r819, %r2496, %r2497, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2498, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2499, %r2497, %r2498;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2502, %r2494, %r2499;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2505, %r830, %r2496, %r2508, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2509, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2510, %r2508, %r2509;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2513, %r2505, %r2510;
	// end inline asm
	shr.u32 	%r2518, %r2496, 8;
	// begin inline asm
	lop3.b32 %r2516, %r819, %r2518, %r2497, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2520, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2521, %r2497, %r2520;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2524, %r2516, %r2521;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2527, %r830, %r2518, %r2508, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2531, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2532, %r2508, %r2531;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2535, %r2527, %r2532;
	// end inline asm
	// begin inline asm
	mov.b32 %r2543, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2554, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2542, %r16225, -2004318072;
	// begin inline asm
	lop3.b32 %r2540, %r819, %r2542, %r2543, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2544, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2545, %r2543, %r2544;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2548, %r2540, %r2545;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2551, %r830, %r2542, %r2554, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2555, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2556, %r2554, %r2555;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2559, %r2551, %r2556;
	// end inline asm
	shr.u32 	%r2564, %r2542, 8;
	// begin inline asm
	lop3.b32 %r2562, %r819, %r2564, %r2543, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2566, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2567, %r2543, %r2566;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2570, %r2562, %r2567;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2573, %r830, %r2564, %r2554, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2577, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2578, %r2554, %r2577;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2581, %r2573, %r2578;
	// end inline asm
	// begin inline asm
	mov.b32 %r2589, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2600, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2588, %r16234, -2004318072;
	// begin inline asm
	lop3.b32 %r2586, %r819, %r2588, %r2589, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2590, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2591, %r2589, %r2590;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2594, %r2586, %r2591;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2597, %r830, %r2588, %r2600, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2601, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2602, %r2600, %r2601;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2605, %r2597, %r2602;
	// end inline asm
	shr.u32 	%r2610, %r2588, 8;
	// begin inline asm
	lop3.b32 %r2608, %r819, %r2610, %r2589, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2612, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2613, %r2589, %r2612;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2616, %r2608, %r2613;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2619, %r830, %r2610, %r2600, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2623, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2624, %r2600, %r2623;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2627, %r2619, %r2624;
	// end inline asm
	// begin inline asm
	mov.b32 %r2635, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2646, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2634, %r16235, -2004318072;
	// begin inline asm
	lop3.b32 %r2632, %r819, %r2634, %r2635, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2636, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2637, %r2635, %r2636;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2640, %r2632, %r2637;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2643, %r830, %r2634, %r2646, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2647, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2648, %r2646, %r2647;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2651, %r2643, %r2648;
	// end inline asm
	shr.u32 	%r2656, %r2634, 8;
	// begin inline asm
	lop3.b32 %r2654, %r819, %r2656, %r2635, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2658, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2659, %r2635, %r2658;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2662, %r2654, %r2659;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2665, %r830, %r2656, %r2646, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2669, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2670, %r2646, %r2669;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2673, %r2665, %r2670;
	// end inline asm
	// begin inline asm
	mov.b32 %r2681, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2692, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2680, %r16236, -2004318072;
	// begin inline asm
	lop3.b32 %r2678, %r819, %r2680, %r2681, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2682, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2683, %r2681, %r2682;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2686, %r2678, %r2683;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2689, %r830, %r2680, %r2692, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2693, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2694, %r2692, %r2693;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2697, %r2689, %r2694;
	// end inline asm
	shr.u32 	%r2702, %r2680, 8;
	// begin inline asm
	lop3.b32 %r2700, %r819, %r2702, %r2681, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2704, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2705, %r2681, %r2704;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2708, %r2700, %r2705;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2711, %r830, %r2702, %r2692, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2715, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2716, %r2692, %r2715;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2719, %r2711, %r2716;
	// end inline asm
	// begin inline asm
	mov.b32 %r2727, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2738, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2726, %r16237, -2004318072;
	// begin inline asm
	lop3.b32 %r2724, %r819, %r2726, %r2727, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2728, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2729, %r2727, %r2728;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2732, %r2724, %r2729;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2735, %r830, %r2726, %r2738, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2739, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2740, %r2738, %r2739;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2743, %r2735, %r2740;
	// end inline asm
	shr.u32 	%r2748, %r2726, 8;
	// begin inline asm
	lop3.b32 %r2746, %r819, %r2748, %r2727, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2750, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2751, %r2727, %r2750;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2754, %r2746, %r2751;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2757, %r830, %r2748, %r2738, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2761, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2762, %r2738, %r2761;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2765, %r2757, %r2762;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2903, %r344, %r2410, %r2210;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2900, %r344, %r2421, %r2216;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2912, %r344, %r2432, %r2222;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2909, %r344, %r2443, %r2228;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2921, %r344, %r2456, %r2234;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2918, %r344, %r2467, %r2240;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2930, %r344, %r2478, %r2246;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2927, %r344, %r2489, %r2252;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2939, %r344, %r2502, %r2258;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2936, %r344, %r2513, %r2264;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2948, %r344, %r2524, %r2270;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2945, %r344, %r2535, %r2276;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2957, %r344, %r2548, %r2282;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2954, %r344, %r2559, %r2288;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2966, %r344, %r2570, %r2294;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2963, %r344, %r2581, %r2300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2975, %r362, %r2594, %r2306;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2972, %r362, %r2605, %r2312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2984, %r362, %r2616, %r2318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2981, %r362, %r2627, %r2324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2993, %r362, %r2640, %r2330;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2990, %r362, %r2651, %r2336;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3002, %r362, %r2662, %r2342;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2999, %r362, %r2673, %r2348;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3011, %r362, %r2686, %r2354;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3008, %r362, %r2697, %r2360;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3020, %r362, %r2708, %r2366;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3017, %r362, %r2719, %r2372;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3029, %r362, %r2732, %r2378;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3026, %r362, %r2743, %r2384;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3038, %r362, %r2754, %r2390;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3035, %r362, %r2765, %r2396;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2896, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2898, %r2896, %r2900;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2901, %r426, %r2903, %r2898;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2905, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2907, %r2905, %r2909;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2910, %r426, %r2912, %r2907;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2914, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2916, %r2914, %r2918;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2919, %r426, %r2921, %r2916;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2923, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2925, %r2923, %r2927;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2928, %r426, %r2930, %r2925;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2932, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2934, %r2932, %r2936;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2937, %r426, %r2939, %r2934;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2941, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2943, %r2941, %r2945;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2946, %r426, %r2948, %r2943;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2950, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2952, %r2950, %r2954;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2955, %r426, %r2957, %r2952;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2959, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2961, %r2959, %r2963;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2964, %r426, %r2966, %r2961;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2968, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2970, %r2968, %r2972;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2973, %r429, %r2975, %r2970;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2977, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2979, %r2977, %r2981;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2982, %r429, %r2984, %r2979;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2986, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2988, %r2986, %r2990;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2991, %r429, %r2993, %r2988;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2995, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2997, %r2995, %r2999;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3000, %r429, %r3002, %r2997;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3004, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3006, %r3004, %r3008;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3009, %r429, %r3011, %r3006;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3013, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3015, %r3013, %r3017;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3018, %r429, %r3020, %r3015;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3022, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3024, %r3022, %r3026;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3027, %r429, %r3029, %r3024;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3031, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3033, %r3031, %r3035;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3036, %r429, %r3038, %r3033;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3040, %r432, %r2903;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3043, %r426, %r2900, %r3040;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3047, %r432, %r2912;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3050, %r426, %r2909, %r3047;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3054, %r432, %r2921;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3057, %r426, %r2918, %r3054;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3061, %r432, %r2930;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3064, %r426, %r2927, %r3061;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3068, %r432, %r2939;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3071, %r426, %r2936, %r3068;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3075, %r432, %r2948;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3078, %r426, %r2945, %r3075;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3082, %r432, %r2957;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3085, %r426, %r2954, %r3082;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3089, %r432, %r2966;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3092, %r426, %r2963, %r3089;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3096, %r435, %r2975;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3099, %r429, %r2972, %r3096;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3103, %r435, %r2984;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3106, %r429, %r2981, %r3103;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3110, %r435, %r2993;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3113, %r429, %r2990, %r3110;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3117, %r435, %r3002;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3120, %r429, %r2999, %r3117;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3124, %r435, %r3011;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3127, %r429, %r3008, %r3124;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3131, %r435, %r3020;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3134, %r429, %r3017, %r3131;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3138, %r435, %r3029;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3141, %r429, %r3026, %r3138;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3145, %r435, %r3038;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3148, %r429, %r3035, %r3145;
	// end inline asm
	mov.u32 	%r15175, 0;
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3319, %r3316}, {%r474, %r480, %r477, %r483}, {%r2901, %r3043}, {%r15175, %r15175};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3328, %r3325}, {%r474, %r480, %r477, %r483}, {%r2910, %r3050}, {%r15175, %r15175};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3337, %r3334}, {%r474, %r480, %r477, %r483}, {%r2919, %r3057}, {%r15175, %r15175};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3346, %r3343}, {%r474, %r480, %r477, %r483}, {%r2928, %r3064}, {%r15175, %r15175};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3355, %r3352}, {%r474, %r480, %r477, %r483}, {%r2937, %r3071}, {%r15175, %r15175};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3364, %r3361}, {%r474, %r480, %r477, %r483}, {%r2946, %r3078}, {%r15175, %r15175};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3373, %r3370}, {%r474, %r480, %r477, %r483}, {%r2955, %r3085}, {%r15175, %r15175};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3382, %r3379}, {%r474, %r480, %r477, %r483}, {%r2964, %r3092}, {%r15175, %r15175};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3391, %r3388}, {%r474, %r480, %r477, %r483}, {%r2973, %r3099}, {%r15175, %r15175};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3400, %r3397}, {%r474, %r480, %r477, %r483}, {%r2982, %r3106}, {%r15175, %r15175};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3409, %r3406}, {%r474, %r480, %r477, %r483}, {%r2991, %r3113}, {%r15175, %r15175};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3418, %r3415}, {%r474, %r480, %r477, %r483}, {%r3000, %r3120}, {%r15175, %r15175};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3427, %r3424}, {%r474, %r480, %r477, %r483}, {%r3009, %r3127}, {%r15175, %r15175};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3436, %r3433}, {%r474, %r480, %r477, %r483}, {%r3018, %r3134}, {%r15175, %r15175};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3445, %r3442}, {%r474, %r480, %r477, %r483}, {%r3027, %r3141}, {%r15175, %r15175};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3454, %r3451}, {%r474, %r480, %r477, %r483}, {%r3036, %r3148}, {%r15175, %r15175};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3312, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3314, %r3312, %r3316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3317, %r521, %r3319, %r3314;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3321, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3323, %r3321, %r3325;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3326, %r521, %r3328, %r3323;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3330, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3332, %r3330, %r3334;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3335, %r521, %r3337, %r3332;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3339, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3341, %r3339, %r3343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3344, %r521, %r3346, %r3341;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3348, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3350, %r3348, %r3352;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3353, %r521, %r3355, %r3350;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3357, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3359, %r3357, %r3361;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3362, %r521, %r3364, %r3359;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3366, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3368, %r3366, %r3370;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3371, %r521, %r3373, %r3368;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3375, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3377, %r3375, %r3379;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3380, %r521, %r3382, %r3377;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3384, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3386, %r3384, %r3388;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3389, %r521, %r3391, %r3386;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3393, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3395, %r3393, %r3397;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3398, %r521, %r3400, %r3395;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3402, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3404, %r3402, %r3406;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3407, %r521, %r3409, %r3404;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3411, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3413, %r3411, %r3415;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3416, %r521, %r3418, %r3413;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3420, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3422, %r3420, %r3424;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3425, %r521, %r3427, %r3422;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3429, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3431, %r3429, %r3433;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3434, %r521, %r3436, %r3431;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3438, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3440, %r3438, %r3442;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3443, %r521, %r3445, %r3440;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3447, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3449, %r3447, %r3451;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3452, %r521, %r3454, %r3449;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3456, %r524, %r3319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3459, %r521, %r3316, %r3456;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3463, %r524, %r3328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3466, %r521, %r3325, %r3463;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3470, %r524, %r3337;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3473, %r521, %r3334, %r3470;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3477, %r524, %r3346;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3480, %r521, %r3343, %r3477;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3484, %r524, %r3355;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3487, %r521, %r3352, %r3484;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3491, %r524, %r3364;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3494, %r521, %r3361, %r3491;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3498, %r524, %r3373;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3501, %r521, %r3370, %r3498;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3505, %r524, %r3382;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3508, %r521, %r3379, %r3505;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3512, %r524, %r3391;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3515, %r521, %r3388, %r3512;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3519, %r524, %r3400;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3522, %r521, %r3397, %r3519;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3526, %r524, %r3409;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3529, %r521, %r3406, %r3526;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3533, %r524, %r3418;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3536, %r521, %r3415, %r3533;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3540, %r524, %r3427;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3543, %r521, %r3424, %r3540;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3547, %r524, %r3436;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3550, %r521, %r3433, %r3547;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3554, %r524, %r3445;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3557, %r521, %r3442, %r3554;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3561, %r524, %r3454;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3564, %r521, %r3451, %r3561;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3857, %r3860}, {%r564, %r570, %r567, %r573}, {%r3317, %r3459}, {%r15175, %r15175};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3863, %r3866}, {%r564, %r570, %r567, %r573}, {%r3326, %r3466}, {%r15175, %r15175};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3869, %r3872}, {%r564, %r570, %r567, %r573}, {%r3335, %r3473}, {%r15175, %r15175};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3875, %r3878}, {%r564, %r570, %r567, %r573}, {%r3344, %r3480}, {%r15175, %r15175};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3881, %r3884}, {%r564, %r570, %r567, %r573}, {%r3353, %r3487}, {%r15175, %r15175};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3887, %r3890}, {%r564, %r570, %r567, %r573}, {%r3362, %r3494}, {%r15175, %r15175};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3893, %r3896}, {%r564, %r570, %r567, %r573}, {%r3371, %r3501}, {%r15175, %r15175};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3899, %r3902}, {%r564, %r570, %r567, %r573}, {%r3380, %r3508}, {%r15175, %r15175};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3858, %r3861}, {%r564, %r570, %r567, %r573}, {%r3389, %r3515}, {%r15175, %r15175};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3864, %r3867}, {%r564, %r570, %r567, %r573}, {%r3398, %r3522}, {%r15175, %r15175};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3870, %r3873}, {%r564, %r570, %r567, %r573}, {%r3407, %r3529}, {%r15175, %r15175};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3876, %r3879}, {%r564, %r570, %r567, %r573}, {%r3416, %r3536}, {%r15175, %r15175};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3882, %r3885}, {%r564, %r570, %r567, %r573}, {%r3425, %r3543}, {%r15175, %r15175};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3888, %r3891}, {%r564, %r570, %r567, %r573}, {%r3434, %r3550}, {%r15175, %r15175};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3894, %r3897}, {%r564, %r570, %r567, %r573}, {%r3443, %r3557}, {%r15175, %r15175};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3900, %r3903}, {%r564, %r570, %r567, %r573}, {%r3452, %r3564}, {%r15175, %r15175};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3856, %r3857, %r3858;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3859, %r3860, %r3861;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3862, %r3863, %r3864;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3865, %r3866, %r3867;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3868, %r3869, %r3870;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3871, %r3872, %r3873;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3874, %r3875, %r3876;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3877, %r3878, %r3879;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3880, %r3881, %r3882;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3883, %r3884, %r3885;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3886, %r3887, %r3888;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3889, %r3890, %r3891;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3892, %r3893, %r3894;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3895, %r3896, %r3897;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3898, %r3899, %r3900;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3901, %r3902, %r3903;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3904, %r3857, %r3858;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3907, %r3860, %r3861;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3910, %r3863, %r3864;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3913, %r3866, %r3867;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3916, %r3869, %r3870;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3919, %r3872, %r3873;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3922, %r3875, %r3876;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3925, %r3878, %r3879;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3928, %r3881, %r3882;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3931, %r3884, %r3885;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3934, %r3887, %r3888;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3937, %r3890, %r3891;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3940, %r3893, %r3894;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3943, %r3896, %r3897;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3946, %r3899, %r3900;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3949, %r3902, %r3903;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3952, %r13, %r3856;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3955, %r13, %r3859;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3958, %r13, %r3862;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3961, %r13, %r3865;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3964, %r13, %r3868;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3967, %r13, %r3871;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3970, %r13, %r3874;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3973, %r13, %r3877;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3976, %r13, %r3880;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3979, %r13, %r3883;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3982, %r13, %r3886;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3985, %r13, %r3889;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3988, %r13, %r3892;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3991, %r13, %r3895;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3994, %r13, %r3898;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3997, %r13, %r3901;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4000, %r14, %r3904;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4003, %r14, %r3907;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4006, %r14, %r3910;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4009, %r14, %r3913;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4012, %r14, %r3916;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4015, %r14, %r3919;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4018, %r14, %r3922;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4021, %r14, %r3925;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4024, %r14, %r3928;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4027, %r14, %r3931;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4030, %r14, %r3934;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4033, %r14, %r3937;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4036, %r14, %r3940;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4039, %r14, %r3943;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4042, %r14, %r3946;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4045, %r14, %r3949;
	// end inline asm
	// begin inline asm
	mov.b32 %r4048, {%rs2307, %rs2307};
	// end inline asm
	mov.u16 	%rs408, 18176;
	// begin inline asm
	mov.b32 %r4049, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4050, %r3952, %r4048;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4053, %r4050, %r4049;
	// end inline asm
	// begin inline asm
	mov.b32 %r4056, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4057, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4058, %r3955, %r4056;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4061, %r4058, %r4057;
	// end inline asm
	// begin inline asm
	mov.b32 %r4064, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4065, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4066, %r3958, %r4064;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4069, %r4066, %r4065;
	// end inline asm
	// begin inline asm
	mov.b32 %r4072, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4073, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4074, %r3961, %r4072;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4077, %r4074, %r4073;
	// end inline asm
	// begin inline asm
	mov.b32 %r4080, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4081, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4082, %r3964, %r4080;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4085, %r4082, %r4081;
	// end inline asm
	// begin inline asm
	mov.b32 %r4088, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4089, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4090, %r3967, %r4088;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4093, %r4090, %r4089;
	// end inline asm
	// begin inline asm
	mov.b32 %r4096, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4097, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4098, %r3970, %r4096;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4101, %r4098, %r4097;
	// end inline asm
	// begin inline asm
	mov.b32 %r4104, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4105, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4106, %r3973, %r4104;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4109, %r4106, %r4105;
	// end inline asm
	// begin inline asm
	mov.b32 %r4112, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4113, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4114, %r3976, %r4112;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4117, %r4114, %r4113;
	// end inline asm
	// begin inline asm
	mov.b32 %r4120, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4121, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4122, %r3979, %r4120;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4125, %r4122, %r4121;
	// end inline asm
	// begin inline asm
	mov.b32 %r4128, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4129, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4130, %r3982, %r4128;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4133, %r4130, %r4129;
	// end inline asm
	// begin inline asm
	mov.b32 %r4136, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4137, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4138, %r3985, %r4136;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4141, %r4138, %r4137;
	// end inline asm
	// begin inline asm
	mov.b32 %r4144, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4145, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4146, %r3988, %r4144;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4149, %r4146, %r4145;
	// end inline asm
	// begin inline asm
	mov.b32 %r4152, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4153, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4154, %r3991, %r4152;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4157, %r4154, %r4153;
	// end inline asm
	// begin inline asm
	mov.b32 %r4160, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4161, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4162, %r3994, %r4160;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4165, %r4162, %r4161;
	// end inline asm
	// begin inline asm
	mov.b32 %r4168, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4169, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4170, %r3997, %r4168;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4173, %r4170, %r4169;
	// end inline asm
	// begin inline asm
	mov.b32 %r4176, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4177, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4178, %r4000, %r4176;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4181, %r4178, %r4177;
	// end inline asm
	// begin inline asm
	mov.b32 %r4184, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4185, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4186, %r4003, %r4184;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4189, %r4186, %r4185;
	// end inline asm
	// begin inline asm
	mov.b32 %r4192, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4193, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4194, %r4006, %r4192;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4197, %r4194, %r4193;
	// end inline asm
	// begin inline asm
	mov.b32 %r4200, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4201, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4202, %r4009, %r4200;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4205, %r4202, %r4201;
	// end inline asm
	// begin inline asm
	mov.b32 %r4208, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4209, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4210, %r4012, %r4208;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4213, %r4210, %r4209;
	// end inline asm
	// begin inline asm
	mov.b32 %r4216, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4217, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4218, %r4015, %r4216;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4221, %r4218, %r4217;
	// end inline asm
	// begin inline asm
	mov.b32 %r4224, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4225, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4226, %r4018, %r4224;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4229, %r4226, %r4225;
	// end inline asm
	// begin inline asm
	mov.b32 %r4232, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4233, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4234, %r4021, %r4232;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4237, %r4234, %r4233;
	// end inline asm
	// begin inline asm
	mov.b32 %r4240, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4241, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4242, %r4024, %r4240;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4245, %r4242, %r4241;
	// end inline asm
	// begin inline asm
	mov.b32 %r4248, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4249, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4250, %r4027, %r4248;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4253, %r4250, %r4249;
	// end inline asm
	// begin inline asm
	mov.b32 %r4256, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4257, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4258, %r4030, %r4256;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4261, %r4258, %r4257;
	// end inline asm
	// begin inline asm
	mov.b32 %r4264, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4265, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4266, %r4033, %r4264;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4269, %r4266, %r4265;
	// end inline asm
	// begin inline asm
	mov.b32 %r4272, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4273, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4274, %r4036, %r4272;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4277, %r4274, %r4273;
	// end inline asm
	// begin inline asm
	mov.b32 %r4280, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4281, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4282, %r4039, %r4280;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4285, %r4282, %r4281;
	// end inline asm
	// begin inline asm
	mov.b32 %r4288, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4289, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4290, %r4042, %r4288;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4293, %r4290, %r4289;
	// end inline asm
	// begin inline asm
	mov.b32 %r4296, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4297, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4298, %r4045, %r4296;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4301, %r4298, %r4297;
	// end inline asm
	// begin inline asm
	mov.b32 %r4307, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4305, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4306, %r4307, %r4305;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4309, %r4053, %r4306;
	// end inline asm
	// begin inline asm
	mov.b32 %r4312, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4313, %r4307, %r4312;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4316, %r4061, %r4313;
	// end inline asm
	// begin inline asm
	mov.b32 %r4319, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4320, %r4307, %r4319;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4323, %r4069, %r4320;
	// end inline asm
	// begin inline asm
	mov.b32 %r4326, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4327, %r4307, %r4326;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4330, %r4077, %r4327;
	// end inline asm
	mov.u32 	%r4336, 25152;
	// begin inline asm
	prmt.b32 %r4333, %r4309, %r4323, %r4336;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4337, %r4316, %r4330, %r4336;
	// end inline asm
	shl.b32 	%r4344, %r4337, 4;
	mov.u32 	%r4342, 252645135;
	// begin inline asm
	lop3.b32 %r4341, %r4342, %r4333, %r4344, 202;
	// end inline asm
	xor.b32  	%r16088, %r4341, -2004318072;
	// begin inline asm
	mov.b32 %r4348, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4346, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4347, %r4348, %r4346;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4350, %r4085, %r4347;
	// end inline asm
	// begin inline asm
	mov.b32 %r4353, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4354, %r4348, %r4353;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4357, %r4093, %r4354;
	// end inline asm
	// begin inline asm
	mov.b32 %r4360, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4361, %r4348, %r4360;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4364, %r4101, %r4361;
	// end inline asm
	// begin inline asm
	mov.b32 %r4367, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4368, %r4348, %r4367;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4371, %r4109, %r4368;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4374, %r4350, %r4364, %r4336;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4378, %r4357, %r4371, %r4336;
	// end inline asm
	shl.b32 	%r4385, %r4378, 4;
	// begin inline asm
	lop3.b32 %r4382, %r4342, %r4374, %r4385, 202;
	// end inline asm
	xor.b32  	%r16089, %r4382, -2004318072;
	// begin inline asm
	mov.b32 %r4389, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4387, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4388, %r4389, %r4387;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4391, %r4117, %r4388;
	// end inline asm
	// begin inline asm
	mov.b32 %r4394, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4395, %r4389, %r4394;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4398, %r4125, %r4395;
	// end inline asm
	// begin inline asm
	mov.b32 %r4401, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4402, %r4389, %r4401;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4405, %r4133, %r4402;
	// end inline asm
	// begin inline asm
	mov.b32 %r4408, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4409, %r4389, %r4408;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4412, %r4141, %r4409;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4415, %r4391, %r4405, %r4336;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4419, %r4398, %r4412, %r4336;
	// end inline asm
	shl.b32 	%r4426, %r4419, 4;
	// begin inline asm
	lop3.b32 %r4423, %r4342, %r4415, %r4426, 202;
	// end inline asm
	xor.b32  	%r16090, %r4423, -2004318072;
	// begin inline asm
	mov.b32 %r4430, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4428, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4429, %r4430, %r4428;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4432, %r4149, %r4429;
	// end inline asm
	// begin inline asm
	mov.b32 %r4435, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4436, %r4430, %r4435;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4439, %r4157, %r4436;
	// end inline asm
	// begin inline asm
	mov.b32 %r4442, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4443, %r4430, %r4442;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4446, %r4165, %r4443;
	// end inline asm
	// begin inline asm
	mov.b32 %r4449, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4450, %r4430, %r4449;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4453, %r4173, %r4450;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4456, %r4432, %r4446, %r4336;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4460, %r4439, %r4453, %r4336;
	// end inline asm
	shl.b32 	%r4467, %r4460, 4;
	// begin inline asm
	lop3.b32 %r4464, %r4342, %r4456, %r4467, 202;
	// end inline asm
	xor.b32  	%r16091, %r4464, -2004318072;
	// begin inline asm
	mov.b32 %r4471, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4469, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4470, %r4471, %r4469;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4473, %r4181, %r4470;
	// end inline asm
	// begin inline asm
	mov.b32 %r4476, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4477, %r4471, %r4476;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4480, %r4189, %r4477;
	// end inline asm
	// begin inline asm
	mov.b32 %r4483, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4484, %r4471, %r4483;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4487, %r4197, %r4484;
	// end inline asm
	// begin inline asm
	mov.b32 %r4490, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4491, %r4471, %r4490;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4494, %r4205, %r4491;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4497, %r4473, %r4487, %r4336;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4501, %r4480, %r4494, %r4336;
	// end inline asm
	shl.b32 	%r4508, %r4501, 4;
	// begin inline asm
	lop3.b32 %r4505, %r4342, %r4497, %r4508, 202;
	// end inline asm
	xor.b32  	%r16092, %r4505, -2004318072;
	// begin inline asm
	mov.b32 %r4512, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4510, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4511, %r4512, %r4510;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4514, %r4213, %r4511;
	// end inline asm
	// begin inline asm
	mov.b32 %r4517, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4518, %r4512, %r4517;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4521, %r4221, %r4518;
	// end inline asm
	// begin inline asm
	mov.b32 %r4524, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4525, %r4512, %r4524;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4528, %r4229, %r4525;
	// end inline asm
	// begin inline asm
	mov.b32 %r4531, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4532, %r4512, %r4531;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4535, %r4237, %r4532;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4538, %r4514, %r4528, %r4336;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4542, %r4521, %r4535, %r4336;
	// end inline asm
	shl.b32 	%r4549, %r4542, 4;
	// begin inline asm
	lop3.b32 %r4546, %r4342, %r4538, %r4549, 202;
	// end inline asm
	xor.b32  	%r16093, %r4546, -2004318072;
	// begin inline asm
	mov.b32 %r4553, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4551, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4552, %r4553, %r4551;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4555, %r4245, %r4552;
	// end inline asm
	// begin inline asm
	mov.b32 %r4558, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4559, %r4553, %r4558;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4562, %r4253, %r4559;
	// end inline asm
	// begin inline asm
	mov.b32 %r4565, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4566, %r4553, %r4565;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4569, %r4261, %r4566;
	// end inline asm
	// begin inline asm
	mov.b32 %r4572, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4573, %r4553, %r4572;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4576, %r4269, %r4573;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4579, %r4555, %r4569, %r4336;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4583, %r4562, %r4576, %r4336;
	// end inline asm
	shl.b32 	%r4590, %r4583, 4;
	// begin inline asm
	lop3.b32 %r4587, %r4342, %r4579, %r4590, 202;
	// end inline asm
	xor.b32  	%r16094, %r4587, -2004318072;
	// begin inline asm
	mov.b32 %r4594, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4592, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4593, %r4594, %r4592;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4596, %r4277, %r4593;
	// end inline asm
	// begin inline asm
	mov.b32 %r4599, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4600, %r4594, %r4599;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4603, %r4285, %r4600;
	// end inline asm
	// begin inline asm
	mov.b32 %r4606, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4607, %r4594, %r4606;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4610, %r4293, %r4607;
	// end inline asm
	// begin inline asm
	mov.b32 %r4613, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4614, %r4594, %r4613;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4617, %r4301, %r4614;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4620, %r4596, %r4610, %r4336;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4624, %r4603, %r4617, %r4336;
	// end inline asm
	shl.b32 	%r4631, %r4624, 4;
	// begin inline asm
	lop3.b32 %r4628, %r4342, %r4620, %r4631, 202;
	// end inline asm
	xor.b32  	%r16095, %r4628, -2004318072;
	add.s64 	%rd82, %rd94, %rd24;
	st.shared.u32 	[%rd82], %r16088;
	add.s64 	%rd83, %rd94, %rd23;
	st.shared.u32 	[%rd83], %r16089;
	add.s64 	%rd84, %rd94, %rd22;
	st.shared.u32 	[%rd84], %r16090;
	add.s64 	%rd85, %rd94, %rd21;
	st.shared.u32 	[%rd85], %r16091;
	add.s64 	%rd86, %rd94, %rd20;
	st.shared.u32 	[%rd86], %r16092;
	add.s64 	%rd87, %rd94, %rd19;
	st.shared.u32 	[%rd87], %r16093;
	add.s64 	%rd88, %rd94, %rd18;
	st.shared.u32 	[%rd88], %r16094;
	add.s64 	%rd89, %rd94, %rd17;
	st.shared.u32 	[%rd89], %r16095;
	ld.shared.u32 	%r16214, [%rd74];
	ld.shared.u32 	%r16215, [%rd75];
	ld.shared.u32 	%r16216, [%rd76];
	ld.shared.u32 	%r16217, [%rd77];
	ld.shared.u32 	%r16226, [%rd78];
	ld.shared.u32 	%r16227, [%rd79];
	ld.shared.u32 	%r16228, [%rd80];
	ld.shared.u32 	%r16229, [%rd81];
	// begin inline asm
	mov.b32 %r4637, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4648, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4636, %r16214, -2004318072;
	// begin inline asm
	lop3.b32 %r4634, %r819, %r4636, %r4637, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4638, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4639, %r4637, %r4638;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4642, %r4634, %r4639;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4645, %r830, %r4636, %r4648, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4649, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4650, %r4648, %r4649;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4653, %r4645, %r4650;
	// end inline asm
	shr.u32 	%r4658, %r4636, 8;
	// begin inline asm
	lop3.b32 %r4656, %r819, %r4658, %r4637, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4660, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4661, %r4637, %r4660;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4664, %r4656, %r4661;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4667, %r830, %r4658, %r4648, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4671, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4672, %r4648, %r4671;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4675, %r4667, %r4672;
	// end inline asm
	// begin inline asm
	mov.b32 %r4683, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4694, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4682, %r16215, -2004318072;
	// begin inline asm
	lop3.b32 %r4680, %r819, %r4682, %r4683, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4684, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4685, %r4683, %r4684;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4688, %r4680, %r4685;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4691, %r830, %r4682, %r4694, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4695, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4696, %r4694, %r4695;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4699, %r4691, %r4696;
	// end inline asm
	shr.u32 	%r4704, %r4682, 8;
	// begin inline asm
	lop3.b32 %r4702, %r819, %r4704, %r4683, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4706, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4707, %r4683, %r4706;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4710, %r4702, %r4707;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4713, %r830, %r4704, %r4694, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4717, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4718, %r4694, %r4717;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4721, %r4713, %r4718;
	// end inline asm
	// begin inline asm
	mov.b32 %r4729, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4740, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4728, %r16216, -2004318072;
	// begin inline asm
	lop3.b32 %r4726, %r819, %r4728, %r4729, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4730, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4731, %r4729, %r4730;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4734, %r4726, %r4731;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4737, %r830, %r4728, %r4740, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4741, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4742, %r4740, %r4741;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4745, %r4737, %r4742;
	// end inline asm
	shr.u32 	%r4750, %r4728, 8;
	// begin inline asm
	lop3.b32 %r4748, %r819, %r4750, %r4729, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4752, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4753, %r4729, %r4752;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4756, %r4748, %r4753;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4759, %r830, %r4750, %r4740, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4763, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4764, %r4740, %r4763;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4767, %r4759, %r4764;
	// end inline asm
	// begin inline asm
	mov.b32 %r4775, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4786, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4774, %r16217, -2004318072;
	// begin inline asm
	lop3.b32 %r4772, %r819, %r4774, %r4775, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4776, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4777, %r4775, %r4776;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4780, %r4772, %r4777;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4783, %r830, %r4774, %r4786, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4787, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4788, %r4786, %r4787;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4791, %r4783, %r4788;
	// end inline asm
	shr.u32 	%r4796, %r4774, 8;
	// begin inline asm
	lop3.b32 %r4794, %r819, %r4796, %r4775, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4798, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4799, %r4775, %r4798;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4802, %r4794, %r4799;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4805, %r830, %r4796, %r4786, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4809, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4810, %r4786, %r4809;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4813, %r4805, %r4810;
	// end inline asm
	// begin inline asm
	mov.b32 %r4821, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4832, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4820, %r16226, -2004318072;
	// begin inline asm
	lop3.b32 %r4818, %r819, %r4820, %r4821, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4822, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4823, %r4821, %r4822;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4826, %r4818, %r4823;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4829, %r830, %r4820, %r4832, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4833, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4834, %r4832, %r4833;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4837, %r4829, %r4834;
	// end inline asm
	shr.u32 	%r4842, %r4820, 8;
	// begin inline asm
	lop3.b32 %r4840, %r819, %r4842, %r4821, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4844, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4845, %r4821, %r4844;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4848, %r4840, %r4845;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4851, %r830, %r4842, %r4832, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4855, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4856, %r4832, %r4855;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4859, %r4851, %r4856;
	// end inline asm
	// begin inline asm
	mov.b32 %r4867, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4878, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4866, %r16227, -2004318072;
	// begin inline asm
	lop3.b32 %r4864, %r819, %r4866, %r4867, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4868, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4869, %r4867, %r4868;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4872, %r4864, %r4869;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4875, %r830, %r4866, %r4878, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4879, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4880, %r4878, %r4879;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4883, %r4875, %r4880;
	// end inline asm
	shr.u32 	%r4888, %r4866, 8;
	// begin inline asm
	lop3.b32 %r4886, %r819, %r4888, %r4867, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4890, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4891, %r4867, %r4890;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4894, %r4886, %r4891;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4897, %r830, %r4888, %r4878, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4901, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4902, %r4878, %r4901;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4905, %r4897, %r4902;
	// end inline asm
	// begin inline asm
	mov.b32 %r4913, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4924, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4912, %r16228, -2004318072;
	// begin inline asm
	lop3.b32 %r4910, %r819, %r4912, %r4913, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4914, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4915, %r4913, %r4914;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4918, %r4910, %r4915;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4921, %r830, %r4912, %r4924, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4925, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4926, %r4924, %r4925;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4929, %r4921, %r4926;
	// end inline asm
	shr.u32 	%r4934, %r4912, 8;
	// begin inline asm
	lop3.b32 %r4932, %r819, %r4934, %r4913, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4936, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4937, %r4913, %r4936;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4940, %r4932, %r4937;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4943, %r830, %r4934, %r4924, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4947, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4948, %r4924, %r4947;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4951, %r4943, %r4948;
	// end inline asm
	// begin inline asm
	mov.b32 %r4959, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4970, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4958, %r16229, -2004318072;
	// begin inline asm
	lop3.b32 %r4956, %r819, %r4958, %r4959, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4960, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4961, %r4959, %r4960;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4964, %r4956, %r4961;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4967, %r830, %r4958, %r4970, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4971, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4972, %r4970, %r4971;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4975, %r4967, %r4972;
	// end inline asm
	shr.u32 	%r4980, %r4958, 8;
	// begin inline asm
	lop3.b32 %r4978, %r819, %r4980, %r4959, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4982, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4983, %r4959, %r4982;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4986, %r4978, %r4983;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4989, %r830, %r4980, %r4970, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4993, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4994, %r4970, %r4993;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4997, %r4989, %r4994;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5000, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5002, %r5000, %r4642;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5005, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5007, %r5005, %r4653;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5010, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5012, %r5010, %r4664;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5015, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5017, %r5015, %r4675;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5020, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5022, %r5020, %r4688;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5025, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5027, %r5025, %r4699;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5030, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5032, %r5030, %r4710;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5035, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5037, %r5035, %r4721;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5040, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5042, %r5040, %r4734;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5045, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5047, %r5045, %r4745;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5050, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5052, %r5050, %r4756;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5055, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5057, %r5055, %r4767;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5060, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5062, %r5060, %r4780;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5065, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5067, %r5065, %r4791;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5070, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5072, %r5070, %r4802;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5075, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5077, %r5075, %r4813;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5080, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5082, %r5080, %r4826;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5085, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5087, %r5085, %r4837;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5090, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5092, %r5090, %r4848;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5095, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5097, %r5095, %r4859;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5100, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5102, %r5100, %r4872;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5105, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5107, %r5105, %r4883;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5110, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5112, %r5110, %r4894;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5115, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5117, %r5115, %r4905;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5120, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5122, %r5120, %r4918;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5125, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5127, %r5125, %r4929;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5130, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5132, %r5130, %r4940;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5135, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5137, %r5135, %r4951;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5140, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5142, %r5140, %r4964;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5145, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5147, %r5145, %r4975;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5150, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5152, %r5150, %r4986;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5155, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5157, %r5155, %r4997;
	// end inline asm
	// begin inline asm
	mov.b32 %r5165, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5176, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5162, %r819, %r1844, %r5165, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5166, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5167, %r5165, %r5166;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5170, %r5162, %r5167;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5173, %r830, %r1844, %r5176, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5177, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5178, %r5176, %r5177;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5181, %r5173, %r5178;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5184, %r819, %r1866, %r5165, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5188, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5189, %r5165, %r5188;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5192, %r5184, %r5189;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5195, %r830, %r1866, %r5176, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5199, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5200, %r5176, %r5199;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5203, %r5195, %r5200;
	// end inline asm
	// begin inline asm
	mov.b32 %r5211, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5222, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5208, %r819, %r1890, %r5211, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5212, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5213, %r5211, %r5212;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5216, %r5208, %r5213;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5219, %r830, %r1890, %r5222, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5223, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5224, %r5222, %r5223;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5227, %r5219, %r5224;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5230, %r819, %r1912, %r5211, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5234, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5235, %r5211, %r5234;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5238, %r5230, %r5235;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5241, %r830, %r1912, %r5222, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5245, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5246, %r5222, %r5245;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5249, %r5241, %r5246;
	// end inline asm
	// begin inline asm
	mov.b32 %r5257, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5268, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5254, %r819, %r1936, %r5257, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5258, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5259, %r5257, %r5258;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5262, %r5254, %r5259;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5265, %r830, %r1936, %r5268, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5269, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5270, %r5268, %r5269;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5273, %r5265, %r5270;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5276, %r819, %r1958, %r5257, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5280, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5281, %r5257, %r5280;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5284, %r5276, %r5281;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5287, %r830, %r1958, %r5268, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5291, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5292, %r5268, %r5291;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5295, %r5287, %r5292;
	// end inline asm
	// begin inline asm
	mov.b32 %r5303, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5314, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5300, %r819, %r1982, %r5303, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5304, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5305, %r5303, %r5304;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5308, %r5300, %r5305;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5311, %r830, %r1982, %r5314, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5315, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5316, %r5314, %r5315;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5319, %r5311, %r5316;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5322, %r819, %r2004, %r5303, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5326, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5327, %r5303, %r5326;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5330, %r5322, %r5327;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5333, %r830, %r2004, %r5314, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5337, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5338, %r5314, %r5337;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5341, %r5333, %r5338;
	// end inline asm
	// begin inline asm
	mov.b32 %r5349, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5360, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5346, %r819, %r2028, %r5349, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5350, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5351, %r5349, %r5350;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5354, %r5346, %r5351;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5357, %r830, %r2028, %r5360, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5361, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5362, %r5360, %r5361;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5365, %r5357, %r5362;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5368, %r819, %r2050, %r5349, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5372, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5373, %r5349, %r5372;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5376, %r5368, %r5373;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5379, %r830, %r2050, %r5360, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5383, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5384, %r5360, %r5383;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5387, %r5379, %r5384;
	// end inline asm
	// begin inline asm
	mov.b32 %r5395, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5406, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5392, %r819, %r2074, %r5395, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5396, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5397, %r5395, %r5396;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5400, %r5392, %r5397;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5403, %r830, %r2074, %r5406, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5407, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5408, %r5406, %r5407;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5411, %r5403, %r5408;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5414, %r819, %r2096, %r5395, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5418, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5419, %r5395, %r5418;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5422, %r5414, %r5419;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5425, %r830, %r2096, %r5406, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5429, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5430, %r5406, %r5429;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5433, %r5425, %r5430;
	// end inline asm
	// begin inline asm
	mov.b32 %r5441, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5452, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5438, %r819, %r2120, %r5441, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5442, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5443, %r5441, %r5442;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5446, %r5438, %r5443;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5449, %r830, %r2120, %r5452, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5453, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5454, %r5452, %r5453;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5457, %r5449, %r5454;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5460, %r819, %r2142, %r5441, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5464, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5465, %r5441, %r5464;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5468, %r5460, %r5465;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5471, %r830, %r2142, %r5452, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5475, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5476, %r5452, %r5475;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5479, %r5471, %r5476;
	// end inline asm
	// begin inline asm
	mov.b32 %r5487, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5498, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5484, %r819, %r2166, %r5487, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5488, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5489, %r5487, %r5488;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5492, %r5484, %r5489;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5495, %r830, %r2166, %r5498, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5499, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5500, %r5498, %r5499;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5503, %r5495, %r5500;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5506, %r819, %r2188, %r5487, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5510, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5511, %r5487, %r5510;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5514, %r5506, %r5511;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5517, %r830, %r2188, %r5498, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5521, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5522, %r5498, %r5521;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5525, %r5517, %r5522;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5528, %r272, %r5170, %r5002;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5532, %r272, %r5181, %r5007;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5536, %r272, %r5192, %r5012;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5540, %r272, %r5203, %r5017;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5544, %r272, %r5216, %r5022;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5548, %r272, %r5227, %r5027;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5552, %r272, %r5238, %r5032;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5556, %r272, %r5249, %r5037;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5560, %r272, %r5262, %r5042;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5564, %r272, %r5273, %r5047;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5568, %r272, %r5284, %r5052;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5572, %r272, %r5295, %r5057;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5576, %r272, %r5308, %r5062;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5580, %r272, %r5319, %r5067;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5584, %r272, %r5330, %r5072;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5588, %r272, %r5341, %r5077;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5592, %r290, %r5354, %r5082;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5596, %r290, %r5365, %r5087;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5600, %r290, %r5376, %r5092;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5604, %r290, %r5387, %r5097;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5608, %r290, %r5400, %r5102;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5612, %r290, %r5411, %r5107;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5616, %r290, %r5422, %r5112;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5620, %r290, %r5433, %r5117;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5624, %r290, %r5446, %r5122;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5628, %r290, %r5457, %r5127;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5632, %r290, %r5468, %r5132;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5636, %r290, %r5479, %r5137;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5640, %r290, %r5492, %r5142;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5644, %r290, %r5503, %r5147;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5648, %r290, %r5514, %r5152;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5652, %r290, %r5525, %r5157;
	// end inline asm
	// begin inline asm
	mov.b32 %r5661, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5672, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5658, %r819, %r2404, %r5661, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5662, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5663, %r5661, %r5662;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5666, %r5658, %r5663;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5669, %r830, %r2404, %r5672, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5673, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5674, %r5672, %r5673;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5677, %r5669, %r5674;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5680, %r819, %r2426, %r5661, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5684, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5685, %r5661, %r5684;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5688, %r5680, %r5685;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5691, %r830, %r2426, %r5672, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5695, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5696, %r5672, %r5695;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5699, %r5691, %r5696;
	// end inline asm
	// begin inline asm
	mov.b32 %r5707, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5718, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5704, %r819, %r2450, %r5707, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5708, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5709, %r5707, %r5708;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5712, %r5704, %r5709;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5715, %r830, %r2450, %r5718, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5719, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5720, %r5718, %r5719;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5723, %r5715, %r5720;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5726, %r819, %r2472, %r5707, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5730, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5731, %r5707, %r5730;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5734, %r5726, %r5731;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5737, %r830, %r2472, %r5718, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5741, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5742, %r5718, %r5741;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5745, %r5737, %r5742;
	// end inline asm
	// begin inline asm
	mov.b32 %r5753, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5764, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5750, %r819, %r2496, %r5753, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5754, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5755, %r5753, %r5754;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5758, %r5750, %r5755;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5761, %r830, %r2496, %r5764, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5765, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5766, %r5764, %r5765;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5769, %r5761, %r5766;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5772, %r819, %r2518, %r5753, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5776, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5777, %r5753, %r5776;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5780, %r5772, %r5777;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5783, %r830, %r2518, %r5764, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5787, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5788, %r5764, %r5787;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5791, %r5783, %r5788;
	// end inline asm
	// begin inline asm
	mov.b32 %r5799, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5810, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5796, %r819, %r2542, %r5799, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5800, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5801, %r5799, %r5800;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5804, %r5796, %r5801;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5807, %r830, %r2542, %r5810, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5811, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5812, %r5810, %r5811;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5815, %r5807, %r5812;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5818, %r819, %r2564, %r5799, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5822, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5823, %r5799, %r5822;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5826, %r5818, %r5823;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5829, %r830, %r2564, %r5810, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5833, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5834, %r5810, %r5833;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5837, %r5829, %r5834;
	// end inline asm
	// begin inline asm
	mov.b32 %r5845, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5856, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5842, %r819, %r2588, %r5845, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5846, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5847, %r5845, %r5846;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5850, %r5842, %r5847;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5853, %r830, %r2588, %r5856, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5857, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5858, %r5856, %r5857;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5861, %r5853, %r5858;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5864, %r819, %r2610, %r5845, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5868, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5869, %r5845, %r5868;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5872, %r5864, %r5869;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5875, %r830, %r2610, %r5856, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5879, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5880, %r5856, %r5879;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5883, %r5875, %r5880;
	// end inline asm
	// begin inline asm
	mov.b32 %r5891, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5902, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5888, %r819, %r2634, %r5891, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5892, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5893, %r5891, %r5892;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5896, %r5888, %r5893;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5899, %r830, %r2634, %r5902, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5903, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5904, %r5902, %r5903;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5907, %r5899, %r5904;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5910, %r819, %r2656, %r5891, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5914, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5915, %r5891, %r5914;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5918, %r5910, %r5915;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5921, %r830, %r2656, %r5902, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5925, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5926, %r5902, %r5925;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5929, %r5921, %r5926;
	// end inline asm
	// begin inline asm
	mov.b32 %r5937, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5948, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5934, %r819, %r2680, %r5937, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5938, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5939, %r5937, %r5938;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5942, %r5934, %r5939;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5945, %r830, %r2680, %r5948, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5949, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5950, %r5948, %r5949;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5953, %r5945, %r5950;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5956, %r819, %r2702, %r5937, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5960, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5961, %r5937, %r5960;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5964, %r5956, %r5961;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5967, %r830, %r2702, %r5948, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5971, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5972, %r5948, %r5971;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5975, %r5967, %r5972;
	// end inline asm
	// begin inline asm
	mov.b32 %r5983, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5994, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5980, %r819, %r2726, %r5983, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5984, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5985, %r5983, %r5984;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5988, %r5980, %r5985;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5991, %r830, %r2726, %r5994, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5995, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5996, %r5994, %r5995;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5999, %r5991, %r5996;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6002, %r819, %r2748, %r5983, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6006, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6007, %r5983, %r6006;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6010, %r6002, %r6007;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6013, %r830, %r2748, %r5994, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6017, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6018, %r5994, %r6017;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6021, %r6013, %r6018;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6024, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6026, %r6024, %r5666, %r5528;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6030, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6032, %r6030, %r5677, %r5532;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6036, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6038, %r6036, %r5688, %r5536;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6042, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6044, %r6042, %r5699, %r5540;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6048, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6050, %r6048, %r5712, %r5544;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6054, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6056, %r6054, %r5723, %r5548;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6060, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6062, %r6060, %r5734, %r5552;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6066, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6068, %r6066, %r5745, %r5556;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6072, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6074, %r6072, %r5758, %r5560;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6078, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6080, %r6078, %r5769, %r5564;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6084, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6086, %r6084, %r5780, %r5568;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6090, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6092, %r6090, %r5791, %r5572;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6096, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6098, %r6096, %r5804, %r5576;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6102, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6104, %r6102, %r5815, %r5580;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6108, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6110, %r6108, %r5826, %r5584;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6114, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6116, %r6114, %r5837, %r5588;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6120, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6122, %r6120, %r5850, %r5592;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6126, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6128, %r6126, %r5861, %r5596;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6132, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6134, %r6132, %r5872, %r5600;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6138, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6140, %r6138, %r5883, %r5604;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6144, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6146, %r6144, %r5896, %r5608;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6150, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6152, %r6150, %r5907, %r5612;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6156, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6158, %r6156, %r5918, %r5616;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6162, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6164, %r6162, %r5929, %r5620;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6168, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6170, %r6168, %r5942, %r5624;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6174, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6176, %r6174, %r5953, %r5628;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6180, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6182, %r6180, %r5964, %r5632;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6186, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6188, %r6186, %r5975, %r5636;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6192, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6194, %r6192, %r5988, %r5640;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6198, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6200, %r6198, %r5999, %r5644;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6204, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6206, %r6204, %r6010, %r5648;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6210, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6212, %r6210, %r6021, %r5652;
	// end inline asm
	// begin inline asm
	mov.b32 %r6221, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6232, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6218, %r819, %r820, %r6221, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6222, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6223, %r6221, %r6222;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6226, %r6218, %r6223;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6229, %r830, %r820, %r6232, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6233, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6234, %r6232, %r6233;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6237, %r6229, %r6234;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6240, %r819, %r842, %r6221, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6244, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6245, %r6221, %r6244;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6248, %r6240, %r6245;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6251, %r830, %r842, %r6232, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6255, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6256, %r6232, %r6255;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6259, %r6251, %r6256;
	// end inline asm
	// begin inline asm
	mov.b32 %r6267, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6278, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6264, %r819, %r866, %r6267, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6268, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6269, %r6267, %r6268;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6272, %r6264, %r6269;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6275, %r830, %r866, %r6278, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6279, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6280, %r6278, %r6279;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6283, %r6275, %r6280;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6286, %r819, %r888, %r6267, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6290, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6291, %r6267, %r6290;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6294, %r6286, %r6291;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6297, %r830, %r888, %r6278, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6301, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6302, %r6278, %r6301;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6305, %r6297, %r6302;
	// end inline asm
	// begin inline asm
	mov.b32 %r6313, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6324, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6310, %r819, %r912, %r6313, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6314, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6315, %r6313, %r6314;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6318, %r6310, %r6315;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6321, %r830, %r912, %r6324, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6325, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6326, %r6324, %r6325;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6329, %r6321, %r6326;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6332, %r819, %r934, %r6313, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6336, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6337, %r6313, %r6336;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6340, %r6332, %r6337;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6343, %r830, %r934, %r6324, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6347, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6348, %r6324, %r6347;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6351, %r6343, %r6348;
	// end inline asm
	// begin inline asm
	mov.b32 %r6359, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6370, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6356, %r819, %r958, %r6359, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6360, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6361, %r6359, %r6360;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6364, %r6356, %r6361;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6367, %r830, %r958, %r6370, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6371, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6372, %r6370, %r6371;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6375, %r6367, %r6372;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6378, %r819, %r980, %r6359, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6382, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6383, %r6359, %r6382;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6386, %r6378, %r6383;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6389, %r830, %r980, %r6370, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6393, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6394, %r6370, %r6393;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6397, %r6389, %r6394;
	// end inline asm
	// begin inline asm
	mov.b32 %r6405, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6416, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6402, %r819, %r1004, %r6405, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6406, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6407, %r6405, %r6406;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6410, %r6402, %r6407;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6413, %r830, %r1004, %r6416, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6417, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6418, %r6416, %r6417;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6421, %r6413, %r6418;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6424, %r819, %r1026, %r6405, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6428, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6429, %r6405, %r6428;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6432, %r6424, %r6429;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6435, %r830, %r1026, %r6416, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6439, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6440, %r6416, %r6439;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6443, %r6435, %r6440;
	// end inline asm
	// begin inline asm
	mov.b32 %r6451, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6462, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6448, %r819, %r1050, %r6451, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6452, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6453, %r6451, %r6452;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6456, %r6448, %r6453;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6459, %r830, %r1050, %r6462, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6463, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6464, %r6462, %r6463;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6467, %r6459, %r6464;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6470, %r819, %r1072, %r6451, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6474, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6475, %r6451, %r6474;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6478, %r6470, %r6475;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6481, %r830, %r1072, %r6462, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6485, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6486, %r6462, %r6485;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6489, %r6481, %r6486;
	// end inline asm
	// begin inline asm
	mov.b32 %r6497, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6508, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6494, %r819, %r1096, %r6497, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6498, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6499, %r6497, %r6498;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6502, %r6494, %r6499;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6505, %r830, %r1096, %r6508, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6509, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6510, %r6508, %r6509;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6513, %r6505, %r6510;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6516, %r819, %r1118, %r6497, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6520, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6521, %r6497, %r6520;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6524, %r6516, %r6521;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6527, %r830, %r1118, %r6508, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6531, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6532, %r6508, %r6531;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6535, %r6527, %r6532;
	// end inline asm
	// begin inline asm
	mov.b32 %r6543, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6554, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6540, %r819, %r1142, %r6543, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6544, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6545, %r6543, %r6544;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6548, %r6540, %r6545;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6551, %r830, %r1142, %r6554, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6555, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6556, %r6554, %r6555;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6559, %r6551, %r6556;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6562, %r819, %r1164, %r6543, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6566, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6567, %r6543, %r6566;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6570, %r6562, %r6567;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6573, %r830, %r1164, %r6554, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6577, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6578, %r6554, %r6577;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6581, %r6573, %r6578;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6719, %r344, %r6226, %r6026;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6716, %r344, %r6237, %r6032;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6728, %r344, %r6248, %r6038;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6725, %r344, %r6259, %r6044;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6737, %r344, %r6272, %r6050;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6734, %r344, %r6283, %r6056;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6746, %r344, %r6294, %r6062;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6743, %r344, %r6305, %r6068;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6755, %r344, %r6318, %r6074;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6752, %r344, %r6329, %r6080;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6764, %r344, %r6340, %r6086;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6761, %r344, %r6351, %r6092;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6773, %r344, %r6364, %r6098;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6770, %r344, %r6375, %r6104;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6782, %r344, %r6386, %r6110;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6779, %r344, %r6397, %r6116;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6791, %r362, %r6410, %r6122;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6788, %r362, %r6421, %r6128;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6800, %r362, %r6432, %r6134;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6797, %r362, %r6443, %r6140;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6809, %r362, %r6456, %r6146;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6806, %r362, %r6467, %r6152;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6818, %r362, %r6478, %r6158;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6815, %r362, %r6489, %r6164;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6827, %r362, %r6502, %r6170;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6824, %r362, %r6513, %r6176;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6836, %r362, %r6524, %r6182;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6833, %r362, %r6535, %r6188;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6845, %r362, %r6548, %r6194;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6842, %r362, %r6559, %r6200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6854, %r362, %r6570, %r6206;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6851, %r362, %r6581, %r6212;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6712, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6714, %r6712, %r6716;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6717, %r426, %r6719, %r6714;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6721, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6723, %r6721, %r6725;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6726, %r426, %r6728, %r6723;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6730, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6732, %r6730, %r6734;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6735, %r426, %r6737, %r6732;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6739, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6741, %r6739, %r6743;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6744, %r426, %r6746, %r6741;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6748, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6750, %r6748, %r6752;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6753, %r426, %r6755, %r6750;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6757, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6759, %r6757, %r6761;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6762, %r426, %r6764, %r6759;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6766, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6768, %r6766, %r6770;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6771, %r426, %r6773, %r6768;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6775, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6777, %r6775, %r6779;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6780, %r426, %r6782, %r6777;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6784, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6786, %r6784, %r6788;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6789, %r429, %r6791, %r6786;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6793, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6795, %r6793, %r6797;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6798, %r429, %r6800, %r6795;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6802, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6804, %r6802, %r6806;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6807, %r429, %r6809, %r6804;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6811, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6813, %r6811, %r6815;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6816, %r429, %r6818, %r6813;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6820, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6822, %r6820, %r6824;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6825, %r429, %r6827, %r6822;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6829, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6831, %r6829, %r6833;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6834, %r429, %r6836, %r6831;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6838, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6840, %r6838, %r6842;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6843, %r429, %r6845, %r6840;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6847, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6849, %r6847, %r6851;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6852, %r429, %r6854, %r6849;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6856, %r432, %r6719;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6859, %r426, %r6716, %r6856;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6863, %r432, %r6728;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6866, %r426, %r6725, %r6863;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6870, %r432, %r6737;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6873, %r426, %r6734, %r6870;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6877, %r432, %r6746;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6880, %r426, %r6743, %r6877;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6884, %r432, %r6755;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6887, %r426, %r6752, %r6884;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6891, %r432, %r6764;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6894, %r426, %r6761, %r6891;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6898, %r432, %r6773;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6901, %r426, %r6770, %r6898;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6905, %r432, %r6782;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6908, %r426, %r6779, %r6905;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6912, %r435, %r6791;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6915, %r429, %r6788, %r6912;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6919, %r435, %r6800;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6922, %r429, %r6797, %r6919;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6926, %r435, %r6809;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6929, %r429, %r6806, %r6926;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6933, %r435, %r6818;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6936, %r429, %r6815, %r6933;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6940, %r435, %r6827;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6943, %r429, %r6824, %r6940;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6947, %r435, %r6836;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6950, %r429, %r6833, %r6947;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6954, %r435, %r6845;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6957, %r429, %r6842, %r6954;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6961, %r435, %r6854;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6964, %r429, %r6851, %r6961;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7135, %r7132}, {%r474, %r480, %r477, %r483}, {%r6717, %r6859}, {%r15175, %r15175};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7144, %r7141}, {%r474, %r480, %r477, %r483}, {%r6726, %r6866}, {%r15175, %r15175};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7153, %r7150}, {%r474, %r480, %r477, %r483}, {%r6735, %r6873}, {%r15175, %r15175};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7162, %r7159}, {%r474, %r480, %r477, %r483}, {%r6744, %r6880}, {%r15175, %r15175};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7171, %r7168}, {%r474, %r480, %r477, %r483}, {%r6753, %r6887}, {%r15175, %r15175};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7180, %r7177}, {%r474, %r480, %r477, %r483}, {%r6762, %r6894}, {%r15175, %r15175};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7189, %r7186}, {%r474, %r480, %r477, %r483}, {%r6771, %r6901}, {%r15175, %r15175};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7198, %r7195}, {%r474, %r480, %r477, %r483}, {%r6780, %r6908}, {%r15175, %r15175};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7207, %r7204}, {%r474, %r480, %r477, %r483}, {%r6789, %r6915}, {%r15175, %r15175};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7216, %r7213}, {%r474, %r480, %r477, %r483}, {%r6798, %r6922}, {%r15175, %r15175};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7225, %r7222}, {%r474, %r480, %r477, %r483}, {%r6807, %r6929}, {%r15175, %r15175};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7234, %r7231}, {%r474, %r480, %r477, %r483}, {%r6816, %r6936}, {%r15175, %r15175};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7243, %r7240}, {%r474, %r480, %r477, %r483}, {%r6825, %r6943}, {%r15175, %r15175};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7252, %r7249}, {%r474, %r480, %r477, %r483}, {%r6834, %r6950}, {%r15175, %r15175};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7261, %r7258}, {%r474, %r480, %r477, %r483}, {%r6843, %r6957}, {%r15175, %r15175};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7270, %r7267}, {%r474, %r480, %r477, %r483}, {%r6852, %r6964}, {%r15175, %r15175};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7128, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7130, %r7128, %r7132;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7133, %r521, %r7135, %r7130;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7137, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7139, %r7137, %r7141;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7142, %r521, %r7144, %r7139;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7146, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7148, %r7146, %r7150;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7151, %r521, %r7153, %r7148;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7155, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7157, %r7155, %r7159;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7160, %r521, %r7162, %r7157;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7164, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7166, %r7164, %r7168;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7169, %r521, %r7171, %r7166;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7173, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7175, %r7173, %r7177;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7178, %r521, %r7180, %r7175;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7182, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7184, %r7182, %r7186;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7187, %r521, %r7189, %r7184;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7191, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7193, %r7191, %r7195;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7196, %r521, %r7198, %r7193;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7200, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7202, %r7200, %r7204;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7205, %r521, %r7207, %r7202;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7209, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7211, %r7209, %r7213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7214, %r521, %r7216, %r7211;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7218, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7220, %r7218, %r7222;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7223, %r521, %r7225, %r7220;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7227, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7229, %r7227, %r7231;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7232, %r521, %r7234, %r7229;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7236, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7238, %r7236, %r7240;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7241, %r521, %r7243, %r7238;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7245, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7247, %r7245, %r7249;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7250, %r521, %r7252, %r7247;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7254, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7256, %r7254, %r7258;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7259, %r521, %r7261, %r7256;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7263, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7265, %r7263, %r7267;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7268, %r521, %r7270, %r7265;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7272, %r524, %r7135;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7275, %r521, %r7132, %r7272;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7279, %r524, %r7144;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7282, %r521, %r7141, %r7279;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7286, %r524, %r7153;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7289, %r521, %r7150, %r7286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7293, %r524, %r7162;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7296, %r521, %r7159, %r7293;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7300, %r524, %r7171;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7303, %r521, %r7168, %r7300;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7307, %r524, %r7180;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7310, %r521, %r7177, %r7307;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7314, %r524, %r7189;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7317, %r521, %r7186, %r7314;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7321, %r524, %r7198;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7324, %r521, %r7195, %r7321;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7328, %r524, %r7207;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7331, %r521, %r7204, %r7328;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7335, %r524, %r7216;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7338, %r521, %r7213, %r7335;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7342, %r524, %r7225;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7345, %r521, %r7222, %r7342;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7349, %r524, %r7234;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7352, %r521, %r7231, %r7349;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7356, %r524, %r7243;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7359, %r521, %r7240, %r7356;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7363, %r524, %r7252;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7366, %r521, %r7249, %r7363;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7370, %r524, %r7261;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7373, %r521, %r7258, %r7370;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7377, %r524, %r7270;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7380, %r521, %r7267, %r7377;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7673, %r7676}, {%r564, %r570, %r567, %r573}, {%r7133, %r7275}, {%r15175, %r15175};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7679, %r7682}, {%r564, %r570, %r567, %r573}, {%r7142, %r7282}, {%r15175, %r15175};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7685, %r7688}, {%r564, %r570, %r567, %r573}, {%r7151, %r7289}, {%r15175, %r15175};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7691, %r7694}, {%r564, %r570, %r567, %r573}, {%r7160, %r7296}, {%r15175, %r15175};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7697, %r7700}, {%r564, %r570, %r567, %r573}, {%r7169, %r7303}, {%r15175, %r15175};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7703, %r7706}, {%r564, %r570, %r567, %r573}, {%r7178, %r7310}, {%r15175, %r15175};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7709, %r7712}, {%r564, %r570, %r567, %r573}, {%r7187, %r7317}, {%r15175, %r15175};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7715, %r7718}, {%r564, %r570, %r567, %r573}, {%r7196, %r7324}, {%r15175, %r15175};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7674, %r7677}, {%r564, %r570, %r567, %r573}, {%r7205, %r7331}, {%r15175, %r15175};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7680, %r7683}, {%r564, %r570, %r567, %r573}, {%r7214, %r7338}, {%r15175, %r15175};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7686, %r7689}, {%r564, %r570, %r567, %r573}, {%r7223, %r7345}, {%r15175, %r15175};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7692, %r7695}, {%r564, %r570, %r567, %r573}, {%r7232, %r7352}, {%r15175, %r15175};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7698, %r7701}, {%r564, %r570, %r567, %r573}, {%r7241, %r7359}, {%r15175, %r15175};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7704, %r7707}, {%r564, %r570, %r567, %r573}, {%r7250, %r7366}, {%r15175, %r15175};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7710, %r7713}, {%r564, %r570, %r567, %r573}, {%r7259, %r7373}, {%r15175, %r15175};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7716, %r7719}, {%r564, %r570, %r567, %r573}, {%r7268, %r7380}, {%r15175, %r15175};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7672, %r7673, %r7674;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7675, %r7676, %r7677;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7678, %r7679, %r7680;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7681, %r7682, %r7683;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7684, %r7685, %r7686;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7687, %r7688, %r7689;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7690, %r7691, %r7692;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7693, %r7694, %r7695;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7696, %r7697, %r7698;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7699, %r7700, %r7701;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7702, %r7703, %r7704;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7705, %r7706, %r7707;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7708, %r7709, %r7710;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7711, %r7712, %r7713;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7714, %r7715, %r7716;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7717, %r7718, %r7719;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7720, %r7673, %r7674;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7723, %r7676, %r7677;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7726, %r7679, %r7680;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7729, %r7682, %r7683;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7732, %r7685, %r7686;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7735, %r7688, %r7689;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7738, %r7691, %r7692;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7741, %r7694, %r7695;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7744, %r7697, %r7698;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7747, %r7700, %r7701;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7750, %r7703, %r7704;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7753, %r7706, %r7707;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7756, %r7709, %r7710;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7759, %r7712, %r7713;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7762, %r7715, %r7716;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7765, %r7718, %r7719;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7768, %r13, %r7672;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7771, %r13, %r7675;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7774, %r13, %r7678;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7777, %r13, %r7681;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7780, %r13, %r7684;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7783, %r13, %r7687;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7786, %r13, %r7690;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7789, %r13, %r7693;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7792, %r13, %r7696;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7795, %r13, %r7699;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7798, %r13, %r7702;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7801, %r13, %r7705;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7804, %r13, %r7708;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7807, %r13, %r7711;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7810, %r13, %r7714;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7813, %r13, %r7717;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7816, %r14, %r7720;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7819, %r14, %r7723;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7822, %r14, %r7726;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7825, %r14, %r7729;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7828, %r14, %r7732;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7831, %r14, %r7735;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7834, %r14, %r7738;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7837, %r14, %r7741;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7840, %r14, %r7744;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7843, %r14, %r7747;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7846, %r14, %r7750;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7849, %r14, %r7753;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7852, %r14, %r7756;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7855, %r14, %r7759;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7858, %r14, %r7762;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7861, %r14, %r7765;
	// end inline asm
	// begin inline asm
	mov.b32 %r7864, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7865, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7866, %r7768, %r7864;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7869, %r7866, %r7865;
	// end inline asm
	// begin inline asm
	mov.b32 %r7872, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7873, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7874, %r7771, %r7872;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7877, %r7874, %r7873;
	// end inline asm
	// begin inline asm
	mov.b32 %r7880, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7881, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7882, %r7774, %r7880;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7885, %r7882, %r7881;
	// end inline asm
	// begin inline asm
	mov.b32 %r7888, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7889, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7890, %r7777, %r7888;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7893, %r7890, %r7889;
	// end inline asm
	// begin inline asm
	mov.b32 %r7896, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7897, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7898, %r7780, %r7896;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7901, %r7898, %r7897;
	// end inline asm
	// begin inline asm
	mov.b32 %r7904, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7905, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7906, %r7783, %r7904;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7909, %r7906, %r7905;
	// end inline asm
	// begin inline asm
	mov.b32 %r7912, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7913, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7914, %r7786, %r7912;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7917, %r7914, %r7913;
	// end inline asm
	// begin inline asm
	mov.b32 %r7920, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7921, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7922, %r7789, %r7920;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7925, %r7922, %r7921;
	// end inline asm
	// begin inline asm
	mov.b32 %r7928, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7929, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7930, %r7792, %r7928;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7933, %r7930, %r7929;
	// end inline asm
	// begin inline asm
	mov.b32 %r7936, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7937, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7938, %r7795, %r7936;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7941, %r7938, %r7937;
	// end inline asm
	// begin inline asm
	mov.b32 %r7944, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7945, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7946, %r7798, %r7944;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7949, %r7946, %r7945;
	// end inline asm
	// begin inline asm
	mov.b32 %r7952, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7953, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7954, %r7801, %r7952;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7957, %r7954, %r7953;
	// end inline asm
	// begin inline asm
	mov.b32 %r7960, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7961, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7962, %r7804, %r7960;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7965, %r7962, %r7961;
	// end inline asm
	// begin inline asm
	mov.b32 %r7968, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7969, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7970, %r7807, %r7968;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7973, %r7970, %r7969;
	// end inline asm
	// begin inline asm
	mov.b32 %r7976, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7977, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7978, %r7810, %r7976;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7981, %r7978, %r7977;
	// end inline asm
	// begin inline asm
	mov.b32 %r7984, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7985, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7986, %r7813, %r7984;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7989, %r7986, %r7985;
	// end inline asm
	// begin inline asm
	mov.b32 %r7992, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7993, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7994, %r7816, %r7992;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7997, %r7994, %r7993;
	// end inline asm
	// begin inline asm
	mov.b32 %r8000, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8001, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8002, %r7819, %r8000;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8005, %r8002, %r8001;
	// end inline asm
	// begin inline asm
	mov.b32 %r8008, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8009, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8010, %r7822, %r8008;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8013, %r8010, %r8009;
	// end inline asm
	// begin inline asm
	mov.b32 %r8016, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8017, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8018, %r7825, %r8016;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8021, %r8018, %r8017;
	// end inline asm
	// begin inline asm
	mov.b32 %r8024, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8025, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8026, %r7828, %r8024;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8029, %r8026, %r8025;
	// end inline asm
	// begin inline asm
	mov.b32 %r8032, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8033, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8034, %r7831, %r8032;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8037, %r8034, %r8033;
	// end inline asm
	// begin inline asm
	mov.b32 %r8040, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8041, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8042, %r7834, %r8040;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8045, %r8042, %r8041;
	// end inline asm
	// begin inline asm
	mov.b32 %r8048, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8049, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8050, %r7837, %r8048;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8053, %r8050, %r8049;
	// end inline asm
	// begin inline asm
	mov.b32 %r8056, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8057, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8058, %r7840, %r8056;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8061, %r8058, %r8057;
	// end inline asm
	// begin inline asm
	mov.b32 %r8064, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8065, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8066, %r7843, %r8064;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8069, %r8066, %r8065;
	// end inline asm
	// begin inline asm
	mov.b32 %r8072, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8073, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8074, %r7846, %r8072;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8077, %r8074, %r8073;
	// end inline asm
	// begin inline asm
	mov.b32 %r8080, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8081, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8082, %r7849, %r8080;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8085, %r8082, %r8081;
	// end inline asm
	// begin inline asm
	mov.b32 %r8088, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8089, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8090, %r7852, %r8088;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8093, %r8090, %r8089;
	// end inline asm
	// begin inline asm
	mov.b32 %r8096, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8097, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8098, %r7855, %r8096;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8101, %r8098, %r8097;
	// end inline asm
	// begin inline asm
	mov.b32 %r8104, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8105, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8106, %r7858, %r8104;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8109, %r8106, %r8105;
	// end inline asm
	// begin inline asm
	mov.b32 %r8112, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8113, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8114, %r7861, %r8112;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8117, %r8114, %r8113;
	// end inline asm
	// begin inline asm
	mov.b32 %r8123, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8121, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8122, %r8123, %r8121;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8125, %r7869, %r8122;
	// end inline asm
	// begin inline asm
	mov.b32 %r8128, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8129, %r8123, %r8128;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8132, %r7877, %r8129;
	// end inline asm
	// begin inline asm
	mov.b32 %r8135, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8136, %r8123, %r8135;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8139, %r7885, %r8136;
	// end inline asm
	// begin inline asm
	mov.b32 %r8142, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8143, %r8123, %r8142;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8146, %r7893, %r8143;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8149, %r8125, %r8139, %r4336;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8153, %r8132, %r8146, %r4336;
	// end inline asm
	shl.b32 	%r8160, %r8153, 4;
	// begin inline asm
	lop3.b32 %r8157, %r4342, %r8149, %r8160, 202;
	// end inline asm
	xor.b32  	%r16096, %r8157, -2004318072;
	// begin inline asm
	mov.b32 %r8164, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8162, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8163, %r8164, %r8162;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8166, %r7901, %r8163;
	// end inline asm
	// begin inline asm
	mov.b32 %r8169, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8170, %r8164, %r8169;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8173, %r7909, %r8170;
	// end inline asm
	// begin inline asm
	mov.b32 %r8176, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8177, %r8164, %r8176;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8180, %r7917, %r8177;
	// end inline asm
	// begin inline asm
	mov.b32 %r8183, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8184, %r8164, %r8183;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8187, %r7925, %r8184;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8190, %r8166, %r8180, %r4336;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8194, %r8173, %r8187, %r4336;
	// end inline asm
	shl.b32 	%r8201, %r8194, 4;
	// begin inline asm
	lop3.b32 %r8198, %r4342, %r8190, %r8201, 202;
	// end inline asm
	xor.b32  	%r16097, %r8198, -2004318072;
	// begin inline asm
	mov.b32 %r8205, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8203, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8204, %r8205, %r8203;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8207, %r7933, %r8204;
	// end inline asm
	// begin inline asm
	mov.b32 %r8210, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8211, %r8205, %r8210;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8214, %r7941, %r8211;
	// end inline asm
	// begin inline asm
	mov.b32 %r8217, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8218, %r8205, %r8217;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8221, %r7949, %r8218;
	// end inline asm
	// begin inline asm
	mov.b32 %r8224, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8225, %r8205, %r8224;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8228, %r7957, %r8225;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8231, %r8207, %r8221, %r4336;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8235, %r8214, %r8228, %r4336;
	// end inline asm
	shl.b32 	%r8242, %r8235, 4;
	// begin inline asm
	lop3.b32 %r8239, %r4342, %r8231, %r8242, 202;
	// end inline asm
	xor.b32  	%r16098, %r8239, -2004318072;
	// begin inline asm
	mov.b32 %r8246, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8244, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8245, %r8246, %r8244;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8248, %r7965, %r8245;
	// end inline asm
	// begin inline asm
	mov.b32 %r8251, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8252, %r8246, %r8251;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8255, %r7973, %r8252;
	// end inline asm
	// begin inline asm
	mov.b32 %r8258, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8259, %r8246, %r8258;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8262, %r7981, %r8259;
	// end inline asm
	// begin inline asm
	mov.b32 %r8265, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8266, %r8246, %r8265;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8269, %r7989, %r8266;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8272, %r8248, %r8262, %r4336;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8276, %r8255, %r8269, %r4336;
	// end inline asm
	shl.b32 	%r8283, %r8276, 4;
	// begin inline asm
	lop3.b32 %r8280, %r4342, %r8272, %r8283, 202;
	// end inline asm
	xor.b32  	%r16099, %r8280, -2004318072;
	// begin inline asm
	mov.b32 %r8287, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8285, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8286, %r8287, %r8285;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8289, %r7997, %r8286;
	// end inline asm
	// begin inline asm
	mov.b32 %r8292, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8293, %r8287, %r8292;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8296, %r8005, %r8293;
	// end inline asm
	// begin inline asm
	mov.b32 %r8299, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8300, %r8287, %r8299;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8303, %r8013, %r8300;
	// end inline asm
	// begin inline asm
	mov.b32 %r8306, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8307, %r8287, %r8306;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8310, %r8021, %r8307;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8313, %r8289, %r8303, %r4336;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8317, %r8296, %r8310, %r4336;
	// end inline asm
	shl.b32 	%r8324, %r8317, 4;
	// begin inline asm
	lop3.b32 %r8321, %r4342, %r8313, %r8324, 202;
	// end inline asm
	xor.b32  	%r16100, %r8321, -2004318072;
	// begin inline asm
	mov.b32 %r8328, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8326, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8327, %r8328, %r8326;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8330, %r8029, %r8327;
	// end inline asm
	// begin inline asm
	mov.b32 %r8333, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8334, %r8328, %r8333;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8337, %r8037, %r8334;
	// end inline asm
	// begin inline asm
	mov.b32 %r8340, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8341, %r8328, %r8340;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8344, %r8045, %r8341;
	// end inline asm
	// begin inline asm
	mov.b32 %r8347, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8348, %r8328, %r8347;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8351, %r8053, %r8348;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8354, %r8330, %r8344, %r4336;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8358, %r8337, %r8351, %r4336;
	// end inline asm
	shl.b32 	%r8365, %r8358, 4;
	// begin inline asm
	lop3.b32 %r8362, %r4342, %r8354, %r8365, 202;
	// end inline asm
	xor.b32  	%r16101, %r8362, -2004318072;
	// begin inline asm
	mov.b32 %r8369, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8367, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8368, %r8369, %r8367;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8371, %r8061, %r8368;
	// end inline asm
	// begin inline asm
	mov.b32 %r8374, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8375, %r8369, %r8374;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8378, %r8069, %r8375;
	// end inline asm
	// begin inline asm
	mov.b32 %r8381, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8382, %r8369, %r8381;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8385, %r8077, %r8382;
	// end inline asm
	// begin inline asm
	mov.b32 %r8388, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8389, %r8369, %r8388;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8392, %r8085, %r8389;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8395, %r8371, %r8385, %r4336;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8399, %r8378, %r8392, %r4336;
	// end inline asm
	shl.b32 	%r8406, %r8399, 4;
	// begin inline asm
	lop3.b32 %r8403, %r4342, %r8395, %r8406, 202;
	// end inline asm
	xor.b32  	%r16102, %r8403, -2004318072;
	// begin inline asm
	mov.b32 %r8410, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8408, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8409, %r8410, %r8408;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8412, %r8093, %r8409;
	// end inline asm
	// begin inline asm
	mov.b32 %r8415, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8416, %r8410, %r8415;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8419, %r8101, %r8416;
	// end inline asm
	// begin inline asm
	mov.b32 %r8422, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8423, %r8410, %r8422;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8426, %r8109, %r8423;
	// end inline asm
	// begin inline asm
	mov.b32 %r8429, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8430, %r8410, %r8429;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8433, %r8117, %r8430;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8436, %r8412, %r8426, %r4336;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8440, %r8419, %r8433, %r4336;
	// end inline asm
	shl.b32 	%r8447, %r8440, 4;
	// begin inline asm
	lop3.b32 %r8444, %r4342, %r8436, %r8447, 202;
	// end inline asm
	xor.b32  	%r16103, %r8444, -2004318072;
	st.shared.u32 	[%rd82], %r16096;
	st.shared.u32 	[%rd83], %r16097;
	st.shared.u32 	[%rd84], %r16098;
	st.shared.u32 	[%rd85], %r16099;
	st.shared.u32 	[%rd86], %r16100;
	st.shared.u32 	[%rd87], %r16101;
	st.shared.u32 	[%rd88], %r16102;
	st.shared.u32 	[%rd89], %r16103;
	ld.shared.u32 	%r16218, [%rd74];
	ld.shared.u32 	%r16219, [%rd75];
	ld.shared.u32 	%r16220, [%rd76];
	ld.shared.u32 	%r16221, [%rd77];
	ld.shared.u32 	%r16230, [%rd78];
	ld.shared.u32 	%r16231, [%rd79];
	ld.shared.u32 	%r16232, [%rd80];
	ld.shared.u32 	%r16233, [%rd81];
	// begin inline asm
	mov.b32 %r8453, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8464, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8452, %r16218, -2004318072;
	// begin inline asm
	lop3.b32 %r8450, %r819, %r8452, %r8453, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8454, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8455, %r8453, %r8454;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8458, %r8450, %r8455;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8461, %r830, %r8452, %r8464, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8465, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8466, %r8464, %r8465;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8469, %r8461, %r8466;
	// end inline asm
	shr.u32 	%r8474, %r8452, 8;
	// begin inline asm
	lop3.b32 %r8472, %r819, %r8474, %r8453, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8476, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8477, %r8453, %r8476;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8480, %r8472, %r8477;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8483, %r830, %r8474, %r8464, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8487, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8488, %r8464, %r8487;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8491, %r8483, %r8488;
	// end inline asm
	// begin inline asm
	mov.b32 %r8499, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8510, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8498, %r16219, -2004318072;
	// begin inline asm
	lop3.b32 %r8496, %r819, %r8498, %r8499, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8500, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8501, %r8499, %r8500;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8504, %r8496, %r8501;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8507, %r830, %r8498, %r8510, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8511, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8512, %r8510, %r8511;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8515, %r8507, %r8512;
	// end inline asm
	shr.u32 	%r8520, %r8498, 8;
	// begin inline asm
	lop3.b32 %r8518, %r819, %r8520, %r8499, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8522, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8523, %r8499, %r8522;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8526, %r8518, %r8523;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8529, %r830, %r8520, %r8510, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8533, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8534, %r8510, %r8533;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8537, %r8529, %r8534;
	// end inline asm
	// begin inline asm
	mov.b32 %r8545, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8556, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8544, %r16220, -2004318072;
	// begin inline asm
	lop3.b32 %r8542, %r819, %r8544, %r8545, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8546, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8547, %r8545, %r8546;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8550, %r8542, %r8547;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8553, %r830, %r8544, %r8556, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8557, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8558, %r8556, %r8557;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8561, %r8553, %r8558;
	// end inline asm
	shr.u32 	%r8566, %r8544, 8;
	// begin inline asm
	lop3.b32 %r8564, %r819, %r8566, %r8545, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8568, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8569, %r8545, %r8568;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8572, %r8564, %r8569;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8575, %r830, %r8566, %r8556, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8579, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8580, %r8556, %r8579;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8583, %r8575, %r8580;
	// end inline asm
	// begin inline asm
	mov.b32 %r8591, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8602, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8590, %r16221, -2004318072;
	// begin inline asm
	lop3.b32 %r8588, %r819, %r8590, %r8591, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8592, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8593, %r8591, %r8592;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8596, %r8588, %r8593;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8599, %r830, %r8590, %r8602, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8603, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8604, %r8602, %r8603;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8607, %r8599, %r8604;
	// end inline asm
	shr.u32 	%r8612, %r8590, 8;
	// begin inline asm
	lop3.b32 %r8610, %r819, %r8612, %r8591, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8614, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8615, %r8591, %r8614;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8618, %r8610, %r8615;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8621, %r830, %r8612, %r8602, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8625, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8626, %r8602, %r8625;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8629, %r8621, %r8626;
	// end inline asm
	// begin inline asm
	mov.b32 %r8637, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8648, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8636, %r16230, -2004318072;
	// begin inline asm
	lop3.b32 %r8634, %r819, %r8636, %r8637, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8638, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8639, %r8637, %r8638;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8642, %r8634, %r8639;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8645, %r830, %r8636, %r8648, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8649, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8650, %r8648, %r8649;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8653, %r8645, %r8650;
	// end inline asm
	shr.u32 	%r8658, %r8636, 8;
	// begin inline asm
	lop3.b32 %r8656, %r819, %r8658, %r8637, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8660, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8661, %r8637, %r8660;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8664, %r8656, %r8661;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8667, %r830, %r8658, %r8648, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8671, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8672, %r8648, %r8671;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8675, %r8667, %r8672;
	// end inline asm
	// begin inline asm
	mov.b32 %r8683, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8694, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8682, %r16231, -2004318072;
	// begin inline asm
	lop3.b32 %r8680, %r819, %r8682, %r8683, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8684, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8685, %r8683, %r8684;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8688, %r8680, %r8685;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8691, %r830, %r8682, %r8694, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8695, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8696, %r8694, %r8695;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8699, %r8691, %r8696;
	// end inline asm
	shr.u32 	%r8704, %r8682, 8;
	// begin inline asm
	lop3.b32 %r8702, %r819, %r8704, %r8683, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8706, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8707, %r8683, %r8706;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8710, %r8702, %r8707;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8713, %r830, %r8704, %r8694, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8717, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8718, %r8694, %r8717;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8721, %r8713, %r8718;
	// end inline asm
	// begin inline asm
	mov.b32 %r8729, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8740, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8728, %r16232, -2004318072;
	// begin inline asm
	lop3.b32 %r8726, %r819, %r8728, %r8729, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8730, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8731, %r8729, %r8730;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8734, %r8726, %r8731;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8737, %r830, %r8728, %r8740, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8741, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8742, %r8740, %r8741;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8745, %r8737, %r8742;
	// end inline asm
	shr.u32 	%r8750, %r8728, 8;
	// begin inline asm
	lop3.b32 %r8748, %r819, %r8750, %r8729, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8752, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8753, %r8729, %r8752;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8756, %r8748, %r8753;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8759, %r830, %r8750, %r8740, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8763, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8764, %r8740, %r8763;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8767, %r8759, %r8764;
	// end inline asm
	// begin inline asm
	mov.b32 %r8775, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8786, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8774, %r16233, -2004318072;
	// begin inline asm
	lop3.b32 %r8772, %r819, %r8774, %r8775, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8776, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8777, %r8775, %r8776;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8780, %r8772, %r8777;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8783, %r830, %r8774, %r8786, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8787, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8788, %r8786, %r8787;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8791, %r8783, %r8788;
	// end inline asm
	shr.u32 	%r8796, %r8774, 8;
	// begin inline asm
	lop3.b32 %r8794, %r819, %r8796, %r8775, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8798, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8799, %r8775, %r8798;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8802, %r8794, %r8799;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8805, %r830, %r8796, %r8786, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8809, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8810, %r8786, %r8809;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8813, %r8805, %r8810;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8816, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8818, %r8816, %r8458;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8821, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8823, %r8821, %r8469;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8826, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8828, %r8826, %r8480;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8831, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8833, %r8831, %r8491;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8836, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8838, %r8836, %r8504;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8841, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8843, %r8841, %r8515;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8846, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8848, %r8846, %r8526;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8851, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8853, %r8851, %r8537;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8856, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8858, %r8856, %r8550;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8861, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8863, %r8861, %r8561;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8866, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8868, %r8866, %r8572;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8871, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8873, %r8871, %r8583;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8876, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8878, %r8876, %r8596;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8881, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8883, %r8881, %r8607;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8886, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8888, %r8886, %r8618;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8891, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8893, %r8891, %r8629;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8896, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8898, %r8896, %r8642;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8901, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8903, %r8901, %r8653;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8906, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8908, %r8906, %r8664;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8911, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8913, %r8911, %r8675;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8916, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8918, %r8916, %r8688;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8921, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8923, %r8921, %r8699;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8926, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8928, %r8926, %r8710;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8931, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8933, %r8931, %r8721;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8936, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8938, %r8936, %r8734;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8941, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8943, %r8941, %r8745;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8946, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8948, %r8946, %r8756;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8951, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8953, %r8951, %r8767;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8956, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8958, %r8956, %r8780;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8961, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8963, %r8961, %r8791;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8966, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8968, %r8966, %r8802;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8971, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8973, %r8971, %r8813;
	// end inline asm
	// begin inline asm
	mov.b32 %r8981, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8992, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r8978, %r819, %r2404, %r8981, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8982, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8983, %r8981, %r8982;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8986, %r8978, %r8983;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8989, %r830, %r2404, %r8992, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8993, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8994, %r8992, %r8993;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8997, %r8989, %r8994;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9000, %r819, %r2426, %r8981, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9004, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9005, %r8981, %r9004;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9008, %r9000, %r9005;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9011, %r830, %r2426, %r8992, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9015, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9016, %r8992, %r9015;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9019, %r9011, %r9016;
	// end inline asm
	// begin inline asm
	mov.b32 %r9027, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9038, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9024, %r819, %r2450, %r9027, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9028, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9029, %r9027, %r9028;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9032, %r9024, %r9029;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9035, %r830, %r2450, %r9038, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9039, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9040, %r9038, %r9039;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9043, %r9035, %r9040;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9046, %r819, %r2472, %r9027, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9050, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9051, %r9027, %r9050;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9054, %r9046, %r9051;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9057, %r830, %r2472, %r9038, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9061, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9062, %r9038, %r9061;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9065, %r9057, %r9062;
	// end inline asm
	// begin inline asm
	mov.b32 %r9073, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9084, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9070, %r819, %r2496, %r9073, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9074, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9075, %r9073, %r9074;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9078, %r9070, %r9075;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9081, %r830, %r2496, %r9084, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9085, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9086, %r9084, %r9085;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9089, %r9081, %r9086;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9092, %r819, %r2518, %r9073, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9096, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9097, %r9073, %r9096;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9100, %r9092, %r9097;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9103, %r830, %r2518, %r9084, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9107, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9108, %r9084, %r9107;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9111, %r9103, %r9108;
	// end inline asm
	// begin inline asm
	mov.b32 %r9119, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9130, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9116, %r819, %r2542, %r9119, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9120, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9121, %r9119, %r9120;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9124, %r9116, %r9121;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9127, %r830, %r2542, %r9130, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9131, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9132, %r9130, %r9131;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9135, %r9127, %r9132;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9138, %r819, %r2564, %r9119, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9142, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9143, %r9119, %r9142;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9146, %r9138, %r9143;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9149, %r830, %r2564, %r9130, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9153, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9154, %r9130, %r9153;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9157, %r9149, %r9154;
	// end inline asm
	// begin inline asm
	mov.b32 %r9165, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9176, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9162, %r819, %r2588, %r9165, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9166, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9167, %r9165, %r9166;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9170, %r9162, %r9167;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9173, %r830, %r2588, %r9176, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9177, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9178, %r9176, %r9177;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9181, %r9173, %r9178;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9184, %r819, %r2610, %r9165, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9188, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9189, %r9165, %r9188;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9192, %r9184, %r9189;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9195, %r830, %r2610, %r9176, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9199, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9200, %r9176, %r9199;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9203, %r9195, %r9200;
	// end inline asm
	// begin inline asm
	mov.b32 %r9211, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9222, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9208, %r819, %r2634, %r9211, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9212, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9213, %r9211, %r9212;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9216, %r9208, %r9213;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9219, %r830, %r2634, %r9222, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9223, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9224, %r9222, %r9223;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9227, %r9219, %r9224;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9230, %r819, %r2656, %r9211, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9234, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9235, %r9211, %r9234;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9238, %r9230, %r9235;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9241, %r830, %r2656, %r9222, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9245, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9246, %r9222, %r9245;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9249, %r9241, %r9246;
	// end inline asm
	// begin inline asm
	mov.b32 %r9257, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9268, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9254, %r819, %r2680, %r9257, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9258, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9259, %r9257, %r9258;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9262, %r9254, %r9259;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9265, %r830, %r2680, %r9268, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9269, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9270, %r9268, %r9269;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9273, %r9265, %r9270;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9276, %r819, %r2702, %r9257, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9280, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9281, %r9257, %r9280;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9284, %r9276, %r9281;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9287, %r830, %r2702, %r9268, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9291, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9292, %r9268, %r9291;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9295, %r9287, %r9292;
	// end inline asm
	// begin inline asm
	mov.b32 %r9303, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9314, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9300, %r819, %r2726, %r9303, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9304, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9305, %r9303, %r9304;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9308, %r9300, %r9305;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9311, %r830, %r2726, %r9314, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9315, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9316, %r9314, %r9315;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9319, %r9311, %r9316;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9322, %r819, %r2748, %r9303, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9326, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9327, %r9303, %r9326;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9330, %r9322, %r9327;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9333, %r830, %r2748, %r9314, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9337, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9338, %r9314, %r9337;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9341, %r9333, %r9338;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9344, %r272, %r8986, %r8818;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9348, %r272, %r8997, %r8823;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9352, %r272, %r9008, %r8828;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9356, %r272, %r9019, %r8833;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9360, %r272, %r9032, %r8838;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9364, %r272, %r9043, %r8843;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9368, %r272, %r9054, %r8848;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9372, %r272, %r9065, %r8853;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9376, %r272, %r9078, %r8858;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9380, %r272, %r9089, %r8863;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9384, %r272, %r9100, %r8868;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9388, %r272, %r9111, %r8873;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9392, %r272, %r9124, %r8878;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9396, %r272, %r9135, %r8883;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9400, %r272, %r9146, %r8888;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9404, %r272, %r9157, %r8893;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9408, %r290, %r9170, %r8898;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9412, %r290, %r9181, %r8903;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9416, %r290, %r9192, %r8908;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9420, %r290, %r9203, %r8913;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9424, %r290, %r9216, %r8918;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9428, %r290, %r9227, %r8923;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9432, %r290, %r9238, %r8928;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9436, %r290, %r9249, %r8933;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9440, %r290, %r9262, %r8938;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9444, %r290, %r9273, %r8943;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9448, %r290, %r9284, %r8948;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9452, %r290, %r9295, %r8953;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9456, %r290, %r9308, %r8958;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9460, %r290, %r9319, %r8963;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9464, %r290, %r9330, %r8968;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9468, %r290, %r9341, %r8973;
	// end inline asm
	// begin inline asm
	mov.b32 %r9477, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9488, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9474, %r819, %r820, %r9477, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9478, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9479, %r9477, %r9478;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9482, %r9474, %r9479;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9485, %r830, %r820, %r9488, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9489, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9490, %r9488, %r9489;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9493, %r9485, %r9490;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9496, %r819, %r842, %r9477, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9500, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9501, %r9477, %r9500;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9504, %r9496, %r9501;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9507, %r830, %r842, %r9488, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9511, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9512, %r9488, %r9511;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9515, %r9507, %r9512;
	// end inline asm
	// begin inline asm
	mov.b32 %r9523, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9534, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9520, %r819, %r866, %r9523, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9524, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9525, %r9523, %r9524;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9528, %r9520, %r9525;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9531, %r830, %r866, %r9534, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9535, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9536, %r9534, %r9535;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9539, %r9531, %r9536;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9542, %r819, %r888, %r9523, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9546, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9547, %r9523, %r9546;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9550, %r9542, %r9547;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9553, %r830, %r888, %r9534, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9557, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9558, %r9534, %r9557;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9561, %r9553, %r9558;
	// end inline asm
	// begin inline asm
	mov.b32 %r9569, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9580, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9566, %r819, %r912, %r9569, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9570, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9571, %r9569, %r9570;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9574, %r9566, %r9571;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9577, %r830, %r912, %r9580, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9581, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9582, %r9580, %r9581;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9585, %r9577, %r9582;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9588, %r819, %r934, %r9569, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9592, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9593, %r9569, %r9592;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9596, %r9588, %r9593;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9599, %r830, %r934, %r9580, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9603, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9604, %r9580, %r9603;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9607, %r9599, %r9604;
	// end inline asm
	// begin inline asm
	mov.b32 %r9615, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9626, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9612, %r819, %r958, %r9615, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9616, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9617, %r9615, %r9616;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9620, %r9612, %r9617;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9623, %r830, %r958, %r9626, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9627, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9628, %r9626, %r9627;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9631, %r9623, %r9628;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9634, %r819, %r980, %r9615, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9638, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9639, %r9615, %r9638;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9642, %r9634, %r9639;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9645, %r830, %r980, %r9626, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9649, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9650, %r9626, %r9649;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9653, %r9645, %r9650;
	// end inline asm
	// begin inline asm
	mov.b32 %r9661, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9672, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9658, %r819, %r1004, %r9661, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9662, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9663, %r9661, %r9662;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9666, %r9658, %r9663;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9669, %r830, %r1004, %r9672, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9673, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9674, %r9672, %r9673;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9677, %r9669, %r9674;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9680, %r819, %r1026, %r9661, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9684, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9685, %r9661, %r9684;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9688, %r9680, %r9685;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9691, %r830, %r1026, %r9672, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9695, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9696, %r9672, %r9695;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9699, %r9691, %r9696;
	// end inline asm
	// begin inline asm
	mov.b32 %r9707, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9718, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9704, %r819, %r1050, %r9707, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9708, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9709, %r9707, %r9708;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9712, %r9704, %r9709;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9715, %r830, %r1050, %r9718, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9719, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9720, %r9718, %r9719;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9723, %r9715, %r9720;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9726, %r819, %r1072, %r9707, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9730, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9731, %r9707, %r9730;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9734, %r9726, %r9731;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9737, %r830, %r1072, %r9718, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9741, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9742, %r9718, %r9741;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9745, %r9737, %r9742;
	// end inline asm
	// begin inline asm
	mov.b32 %r9753, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9764, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9750, %r819, %r1096, %r9753, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9754, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9755, %r9753, %r9754;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9758, %r9750, %r9755;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9761, %r830, %r1096, %r9764, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9765, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9766, %r9764, %r9765;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9769, %r9761, %r9766;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9772, %r819, %r1118, %r9753, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9776, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9777, %r9753, %r9776;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9780, %r9772, %r9777;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9783, %r830, %r1118, %r9764, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9787, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9788, %r9764, %r9787;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9791, %r9783, %r9788;
	// end inline asm
	// begin inline asm
	mov.b32 %r9799, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9810, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9796, %r819, %r1142, %r9799, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9800, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9801, %r9799, %r9800;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9804, %r9796, %r9801;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9807, %r830, %r1142, %r9810, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9811, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9812, %r9810, %r9811;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9815, %r9807, %r9812;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9818, %r819, %r1164, %r9799, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9822, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9823, %r9799, %r9822;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9826, %r9818, %r9823;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9829, %r830, %r1164, %r9810, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9833, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9834, %r9810, %r9833;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9837, %r9829, %r9834;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9840, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9842, %r9840, %r9482, %r9344;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9846, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9848, %r9846, %r9493, %r9348;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9852, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9854, %r9852, %r9504, %r9352;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9858, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9860, %r9858, %r9515, %r9356;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9864, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9866, %r9864, %r9528, %r9360;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9870, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9872, %r9870, %r9539, %r9364;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9876, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9878, %r9876, %r9550, %r9368;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9882, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9884, %r9882, %r9561, %r9372;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9888, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9890, %r9888, %r9574, %r9376;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9894, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9896, %r9894, %r9585, %r9380;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9900, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9902, %r9900, %r9596, %r9384;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9906, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9908, %r9906, %r9607, %r9388;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9912, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9914, %r9912, %r9620, %r9392;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9918, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9920, %r9918, %r9631, %r9396;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9924, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9926, %r9924, %r9642, %r9400;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9930, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9932, %r9930, %r9653, %r9404;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9936, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9938, %r9936, %r9666, %r9408;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9942, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9944, %r9942, %r9677, %r9412;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9948, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9950, %r9948, %r9688, %r9416;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9954, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9956, %r9954, %r9699, %r9420;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9960, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9962, %r9960, %r9712, %r9424;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9966, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9968, %r9966, %r9723, %r9428;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9972, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9974, %r9972, %r9734, %r9432;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9978, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9980, %r9978, %r9745, %r9436;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9984, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9986, %r9984, %r9758, %r9440;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9990, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9992, %r9990, %r9769, %r9444;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9996, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9998, %r9996, %r9780, %r9448;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10002, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10004, %r10002, %r9791, %r9452;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10008, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10010, %r10008, %r9804, %r9456;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10014, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10016, %r10014, %r9815, %r9460;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10020, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10022, %r10020, %r9826, %r9464;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10026, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10028, %r10026, %r9837, %r9468;
	// end inline asm
	// begin inline asm
	mov.b32 %r10037, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10048, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10034, %r819, %r4636, %r10037, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10038, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10039, %r10037, %r10038;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10042, %r10034, %r10039;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10045, %r830, %r4636, %r10048, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10049, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10050, %r10048, %r10049;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10053, %r10045, %r10050;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10056, %r819, %r4658, %r10037, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10060, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10061, %r10037, %r10060;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10064, %r10056, %r10061;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10067, %r830, %r4658, %r10048, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10071, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10072, %r10048, %r10071;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10075, %r10067, %r10072;
	// end inline asm
	// begin inline asm
	mov.b32 %r10083, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10094, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10080, %r819, %r4682, %r10083, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10084, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10085, %r10083, %r10084;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10088, %r10080, %r10085;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10091, %r830, %r4682, %r10094, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10095, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10096, %r10094, %r10095;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10099, %r10091, %r10096;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10102, %r819, %r4704, %r10083, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10106, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10107, %r10083, %r10106;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10110, %r10102, %r10107;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10113, %r830, %r4704, %r10094, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10117, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10118, %r10094, %r10117;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10121, %r10113, %r10118;
	// end inline asm
	// begin inline asm
	mov.b32 %r10129, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10140, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10126, %r819, %r4728, %r10129, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10130, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10131, %r10129, %r10130;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10134, %r10126, %r10131;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10137, %r830, %r4728, %r10140, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10141, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10142, %r10140, %r10141;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10145, %r10137, %r10142;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10148, %r819, %r4750, %r10129, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10152, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10153, %r10129, %r10152;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10156, %r10148, %r10153;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10159, %r830, %r4750, %r10140, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10163, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10164, %r10140, %r10163;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10167, %r10159, %r10164;
	// end inline asm
	// begin inline asm
	mov.b32 %r10175, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10186, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10172, %r819, %r4774, %r10175, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10176, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10177, %r10175, %r10176;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10180, %r10172, %r10177;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10183, %r830, %r4774, %r10186, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10187, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10188, %r10186, %r10187;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10191, %r10183, %r10188;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10194, %r819, %r4796, %r10175, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10198, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10199, %r10175, %r10198;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10202, %r10194, %r10199;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10205, %r830, %r4796, %r10186, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10209, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10210, %r10186, %r10209;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10213, %r10205, %r10210;
	// end inline asm
	// begin inline asm
	mov.b32 %r10221, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10232, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10218, %r819, %r4820, %r10221, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10222, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10223, %r10221, %r10222;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10226, %r10218, %r10223;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10229, %r830, %r4820, %r10232, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10233, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10234, %r10232, %r10233;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10237, %r10229, %r10234;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10240, %r819, %r4842, %r10221, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10244, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10245, %r10221, %r10244;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10248, %r10240, %r10245;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10251, %r830, %r4842, %r10232, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10255, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10256, %r10232, %r10255;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10259, %r10251, %r10256;
	// end inline asm
	// begin inline asm
	mov.b32 %r10267, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10278, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10264, %r819, %r4866, %r10267, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10268, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10269, %r10267, %r10268;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10272, %r10264, %r10269;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10275, %r830, %r4866, %r10278, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10279, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10280, %r10278, %r10279;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10283, %r10275, %r10280;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10286, %r819, %r4888, %r10267, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10290, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10291, %r10267, %r10290;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10294, %r10286, %r10291;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10297, %r830, %r4888, %r10278, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10301, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10302, %r10278, %r10301;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10305, %r10297, %r10302;
	// end inline asm
	// begin inline asm
	mov.b32 %r10313, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10324, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10310, %r819, %r4912, %r10313, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10314, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10315, %r10313, %r10314;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10318, %r10310, %r10315;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10321, %r830, %r4912, %r10324, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10325, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10326, %r10324, %r10325;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10329, %r10321, %r10326;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10332, %r819, %r4934, %r10313, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10336, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10337, %r10313, %r10336;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10340, %r10332, %r10337;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10343, %r830, %r4934, %r10324, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10347, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10348, %r10324, %r10347;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10351, %r10343, %r10348;
	// end inline asm
	// begin inline asm
	mov.b32 %r10359, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10370, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10356, %r819, %r4958, %r10359, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10360, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10361, %r10359, %r10360;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10364, %r10356, %r10361;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10367, %r830, %r4958, %r10370, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10371, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10372, %r10370, %r10371;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10375, %r10367, %r10372;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10378, %r819, %r4980, %r10359, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10382, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10383, %r10359, %r10382;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10386, %r10378, %r10383;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10389, %r830, %r4980, %r10370, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10393, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10394, %r10370, %r10393;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10397, %r10389, %r10394;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10535, %r344, %r10042, %r9842;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10532, %r344, %r10053, %r9848;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10544, %r344, %r10064, %r9854;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10541, %r344, %r10075, %r9860;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10553, %r344, %r10088, %r9866;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10550, %r344, %r10099, %r9872;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10562, %r344, %r10110, %r9878;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10559, %r344, %r10121, %r9884;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10571, %r344, %r10134, %r9890;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10568, %r344, %r10145, %r9896;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10580, %r344, %r10156, %r9902;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10577, %r344, %r10167, %r9908;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10589, %r344, %r10180, %r9914;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10586, %r344, %r10191, %r9920;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10598, %r344, %r10202, %r9926;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10595, %r344, %r10213, %r9932;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10607, %r362, %r10226, %r9938;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10604, %r362, %r10237, %r9944;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10616, %r362, %r10248, %r9950;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10613, %r362, %r10259, %r9956;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10625, %r362, %r10272, %r9962;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10622, %r362, %r10283, %r9968;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10634, %r362, %r10294, %r9974;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10631, %r362, %r10305, %r9980;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10643, %r362, %r10318, %r9986;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10640, %r362, %r10329, %r9992;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10652, %r362, %r10340, %r9998;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10649, %r362, %r10351, %r10004;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10661, %r362, %r10364, %r10010;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10658, %r362, %r10375, %r10016;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10670, %r362, %r10386, %r10022;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10667, %r362, %r10397, %r10028;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10528, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10530, %r10528, %r10532;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10533, %r426, %r10535, %r10530;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10537, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10539, %r10537, %r10541;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10542, %r426, %r10544, %r10539;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10546, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10548, %r10546, %r10550;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10551, %r426, %r10553, %r10548;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10555, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10557, %r10555, %r10559;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10560, %r426, %r10562, %r10557;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10564, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10566, %r10564, %r10568;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10569, %r426, %r10571, %r10566;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10573, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10575, %r10573, %r10577;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10578, %r426, %r10580, %r10575;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10582, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10584, %r10582, %r10586;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10587, %r426, %r10589, %r10584;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10591, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10593, %r10591, %r10595;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10596, %r426, %r10598, %r10593;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10600, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10602, %r10600, %r10604;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10605, %r429, %r10607, %r10602;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10609, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10611, %r10609, %r10613;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10614, %r429, %r10616, %r10611;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10618, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10620, %r10618, %r10622;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10623, %r429, %r10625, %r10620;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10627, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10629, %r10627, %r10631;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10632, %r429, %r10634, %r10629;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10636, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10638, %r10636, %r10640;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10641, %r429, %r10643, %r10638;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10645, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10647, %r10645, %r10649;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10650, %r429, %r10652, %r10647;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10654, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10656, %r10654, %r10658;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10659, %r429, %r10661, %r10656;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10663, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10665, %r10663, %r10667;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10668, %r429, %r10670, %r10665;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10672, %r432, %r10535;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10675, %r426, %r10532, %r10672;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10679, %r432, %r10544;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10682, %r426, %r10541, %r10679;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10686, %r432, %r10553;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10689, %r426, %r10550, %r10686;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10693, %r432, %r10562;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10696, %r426, %r10559, %r10693;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10700, %r432, %r10571;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10703, %r426, %r10568, %r10700;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10707, %r432, %r10580;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10710, %r426, %r10577, %r10707;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10714, %r432, %r10589;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10717, %r426, %r10586, %r10714;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10721, %r432, %r10598;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10724, %r426, %r10595, %r10721;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10728, %r435, %r10607;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10731, %r429, %r10604, %r10728;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10735, %r435, %r10616;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10738, %r429, %r10613, %r10735;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10742, %r435, %r10625;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10745, %r429, %r10622, %r10742;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10749, %r435, %r10634;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10752, %r429, %r10631, %r10749;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10756, %r435, %r10643;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10759, %r429, %r10640, %r10756;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10763, %r435, %r10652;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10766, %r429, %r10649, %r10763;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10770, %r435, %r10661;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10773, %r429, %r10658, %r10770;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10777, %r435, %r10670;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10780, %r429, %r10667, %r10777;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r10951, %r10948}, {%r474, %r480, %r477, %r483}, {%r10533, %r10675}, {%r15175, %r15175};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r10960, %r10957}, {%r474, %r480, %r477, %r483}, {%r10542, %r10682}, {%r15175, %r15175};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r10969, %r10966}, {%r474, %r480, %r477, %r483}, {%r10551, %r10689}, {%r15175, %r15175};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r10978, %r10975}, {%r474, %r480, %r477, %r483}, {%r10560, %r10696}, {%r15175, %r15175};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r10987, %r10984}, {%r474, %r480, %r477, %r483}, {%r10569, %r10703}, {%r15175, %r15175};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r10996, %r10993}, {%r474, %r480, %r477, %r483}, {%r10578, %r10710}, {%r15175, %r15175};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11005, %r11002}, {%r474, %r480, %r477, %r483}, {%r10587, %r10717}, {%r15175, %r15175};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11014, %r11011}, {%r474, %r480, %r477, %r483}, {%r10596, %r10724}, {%r15175, %r15175};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11023, %r11020}, {%r474, %r480, %r477, %r483}, {%r10605, %r10731}, {%r15175, %r15175};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11032, %r11029}, {%r474, %r480, %r477, %r483}, {%r10614, %r10738}, {%r15175, %r15175};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11041, %r11038}, {%r474, %r480, %r477, %r483}, {%r10623, %r10745}, {%r15175, %r15175};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11050, %r11047}, {%r474, %r480, %r477, %r483}, {%r10632, %r10752}, {%r15175, %r15175};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11059, %r11056}, {%r474, %r480, %r477, %r483}, {%r10641, %r10759}, {%r15175, %r15175};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11068, %r11065}, {%r474, %r480, %r477, %r483}, {%r10650, %r10766}, {%r15175, %r15175};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11077, %r11074}, {%r474, %r480, %r477, %r483}, {%r10659, %r10773}, {%r15175, %r15175};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11086, %r11083}, {%r474, %r480, %r477, %r483}, {%r10668, %r10780}, {%r15175, %r15175};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10944, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10946, %r10944, %r10948;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10949, %r521, %r10951, %r10946;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10953, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10955, %r10953, %r10957;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10958, %r521, %r10960, %r10955;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10962, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10964, %r10962, %r10966;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10967, %r521, %r10969, %r10964;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10971, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10973, %r10971, %r10975;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10976, %r521, %r10978, %r10973;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10980, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10982, %r10980, %r10984;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10985, %r521, %r10987, %r10982;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10989, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10991, %r10989, %r10993;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10994, %r521, %r10996, %r10991;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10998, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11000, %r10998, %r11002;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11003, %r521, %r11005, %r11000;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11007, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11009, %r11007, %r11011;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11012, %r521, %r11014, %r11009;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11016, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11018, %r11016, %r11020;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11021, %r521, %r11023, %r11018;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11025, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11027, %r11025, %r11029;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11030, %r521, %r11032, %r11027;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11034, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11036, %r11034, %r11038;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11039, %r521, %r11041, %r11036;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11043, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11045, %r11043, %r11047;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11048, %r521, %r11050, %r11045;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11052, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11054, %r11052, %r11056;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11057, %r521, %r11059, %r11054;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11061, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11063, %r11061, %r11065;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11066, %r521, %r11068, %r11063;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11070, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11072, %r11070, %r11074;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11075, %r521, %r11077, %r11072;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11079, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11081, %r11079, %r11083;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11084, %r521, %r11086, %r11081;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11088, %r524, %r10951;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11091, %r521, %r10948, %r11088;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11095, %r524, %r10960;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11098, %r521, %r10957, %r11095;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11102, %r524, %r10969;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11105, %r521, %r10966, %r11102;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11109, %r524, %r10978;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11112, %r521, %r10975, %r11109;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11116, %r524, %r10987;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11119, %r521, %r10984, %r11116;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11123, %r524, %r10996;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11126, %r521, %r10993, %r11123;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11130, %r524, %r11005;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11133, %r521, %r11002, %r11130;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11137, %r524, %r11014;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11140, %r521, %r11011, %r11137;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11144, %r524, %r11023;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11147, %r521, %r11020, %r11144;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11151, %r524, %r11032;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11154, %r521, %r11029, %r11151;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11158, %r524, %r11041;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11161, %r521, %r11038, %r11158;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11165, %r524, %r11050;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11168, %r521, %r11047, %r11165;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11172, %r524, %r11059;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11175, %r521, %r11056, %r11172;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11179, %r524, %r11068;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11182, %r521, %r11065, %r11179;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11186, %r524, %r11077;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11189, %r521, %r11074, %r11186;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11193, %r524, %r11086;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11196, %r521, %r11083, %r11193;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11489, %r11492}, {%r564, %r570, %r567, %r573}, {%r10949, %r11091}, {%r15175, %r15175};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11495, %r11498}, {%r564, %r570, %r567, %r573}, {%r10958, %r11098}, {%r15175, %r15175};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11501, %r11504}, {%r564, %r570, %r567, %r573}, {%r10967, %r11105}, {%r15175, %r15175};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11507, %r11510}, {%r564, %r570, %r567, %r573}, {%r10976, %r11112}, {%r15175, %r15175};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11513, %r11516}, {%r564, %r570, %r567, %r573}, {%r10985, %r11119}, {%r15175, %r15175};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11519, %r11522}, {%r564, %r570, %r567, %r573}, {%r10994, %r11126}, {%r15175, %r15175};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11525, %r11528}, {%r564, %r570, %r567, %r573}, {%r11003, %r11133}, {%r15175, %r15175};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11531, %r11534}, {%r564, %r570, %r567, %r573}, {%r11012, %r11140}, {%r15175, %r15175};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11490, %r11493}, {%r564, %r570, %r567, %r573}, {%r11021, %r11147}, {%r15175, %r15175};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11496, %r11499}, {%r564, %r570, %r567, %r573}, {%r11030, %r11154}, {%r15175, %r15175};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11502, %r11505}, {%r564, %r570, %r567, %r573}, {%r11039, %r11161}, {%r15175, %r15175};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11508, %r11511}, {%r564, %r570, %r567, %r573}, {%r11048, %r11168}, {%r15175, %r15175};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11514, %r11517}, {%r564, %r570, %r567, %r573}, {%r11057, %r11175}, {%r15175, %r15175};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11520, %r11523}, {%r564, %r570, %r567, %r573}, {%r11066, %r11182}, {%r15175, %r15175};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11526, %r11529}, {%r564, %r570, %r567, %r573}, {%r11075, %r11189}, {%r15175, %r15175};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11532, %r11535}, {%r564, %r570, %r567, %r573}, {%r11084, %r11196}, {%r15175, %r15175};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11488, %r11489, %r11490;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11491, %r11492, %r11493;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11494, %r11495, %r11496;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11497, %r11498, %r11499;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11500, %r11501, %r11502;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11503, %r11504, %r11505;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11506, %r11507, %r11508;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11509, %r11510, %r11511;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11512, %r11513, %r11514;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11515, %r11516, %r11517;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11518, %r11519, %r11520;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11521, %r11522, %r11523;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11524, %r11525, %r11526;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11527, %r11528, %r11529;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11530, %r11531, %r11532;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11533, %r11534, %r11535;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11536, %r11489, %r11490;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11539, %r11492, %r11493;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11542, %r11495, %r11496;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11545, %r11498, %r11499;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11548, %r11501, %r11502;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11551, %r11504, %r11505;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11554, %r11507, %r11508;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11557, %r11510, %r11511;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11560, %r11513, %r11514;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11563, %r11516, %r11517;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11566, %r11519, %r11520;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11569, %r11522, %r11523;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11572, %r11525, %r11526;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11575, %r11528, %r11529;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11578, %r11531, %r11532;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11581, %r11534, %r11535;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11584, %r13, %r11488;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11587, %r13, %r11491;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11590, %r13, %r11494;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11593, %r13, %r11497;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11596, %r13, %r11500;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11599, %r13, %r11503;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11602, %r13, %r11506;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11605, %r13, %r11509;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11608, %r13, %r11512;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11611, %r13, %r11515;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11614, %r13, %r11518;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11617, %r13, %r11521;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11620, %r13, %r11524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11623, %r13, %r11527;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11626, %r13, %r11530;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11629, %r13, %r11533;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11632, %r14, %r11536;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11635, %r14, %r11539;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11638, %r14, %r11542;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11641, %r14, %r11545;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11644, %r14, %r11548;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11647, %r14, %r11551;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11650, %r14, %r11554;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11653, %r14, %r11557;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11656, %r14, %r11560;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11659, %r14, %r11563;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11662, %r14, %r11566;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11665, %r14, %r11569;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11668, %r14, %r11572;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11671, %r14, %r11575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11674, %r14, %r11578;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11677, %r14, %r11581;
	// end inline asm
	// begin inline asm
	mov.b32 %r11680, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11681, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11682, %r11584, %r11680;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11685, %r11682, %r11681;
	// end inline asm
	// begin inline asm
	mov.b32 %r11688, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11689, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11690, %r11587, %r11688;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11693, %r11690, %r11689;
	// end inline asm
	// begin inline asm
	mov.b32 %r11696, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11697, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11698, %r11590, %r11696;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11701, %r11698, %r11697;
	// end inline asm
	// begin inline asm
	mov.b32 %r11704, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11705, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11706, %r11593, %r11704;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11709, %r11706, %r11705;
	// end inline asm
	// begin inline asm
	mov.b32 %r11712, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11713, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11714, %r11596, %r11712;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11717, %r11714, %r11713;
	// end inline asm
	// begin inline asm
	mov.b32 %r11720, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11721, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11722, %r11599, %r11720;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11725, %r11722, %r11721;
	// end inline asm
	// begin inline asm
	mov.b32 %r11728, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11729, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11730, %r11602, %r11728;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11733, %r11730, %r11729;
	// end inline asm
	// begin inline asm
	mov.b32 %r11736, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11737, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11738, %r11605, %r11736;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11741, %r11738, %r11737;
	// end inline asm
	// begin inline asm
	mov.b32 %r11744, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11745, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11746, %r11608, %r11744;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11749, %r11746, %r11745;
	// end inline asm
	// begin inline asm
	mov.b32 %r11752, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11753, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11754, %r11611, %r11752;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11757, %r11754, %r11753;
	// end inline asm
	// begin inline asm
	mov.b32 %r11760, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11761, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11762, %r11614, %r11760;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11765, %r11762, %r11761;
	// end inline asm
	// begin inline asm
	mov.b32 %r11768, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11769, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11770, %r11617, %r11768;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11773, %r11770, %r11769;
	// end inline asm
	// begin inline asm
	mov.b32 %r11776, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11777, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11778, %r11620, %r11776;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11781, %r11778, %r11777;
	// end inline asm
	// begin inline asm
	mov.b32 %r11784, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11785, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11786, %r11623, %r11784;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11789, %r11786, %r11785;
	// end inline asm
	// begin inline asm
	mov.b32 %r11792, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11793, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11794, %r11626, %r11792;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11797, %r11794, %r11793;
	// end inline asm
	// begin inline asm
	mov.b32 %r11800, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11801, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11802, %r11629, %r11800;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11805, %r11802, %r11801;
	// end inline asm
	// begin inline asm
	mov.b32 %r11808, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11809, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11810, %r11632, %r11808;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11813, %r11810, %r11809;
	// end inline asm
	// begin inline asm
	mov.b32 %r11816, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11817, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11818, %r11635, %r11816;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11821, %r11818, %r11817;
	// end inline asm
	// begin inline asm
	mov.b32 %r11824, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11825, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11826, %r11638, %r11824;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11829, %r11826, %r11825;
	// end inline asm
	// begin inline asm
	mov.b32 %r11832, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11833, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11834, %r11641, %r11832;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11837, %r11834, %r11833;
	// end inline asm
	// begin inline asm
	mov.b32 %r11840, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11841, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11842, %r11644, %r11840;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11845, %r11842, %r11841;
	// end inline asm
	// begin inline asm
	mov.b32 %r11848, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11849, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11850, %r11647, %r11848;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11853, %r11850, %r11849;
	// end inline asm
	// begin inline asm
	mov.b32 %r11856, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11857, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11858, %r11650, %r11856;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11861, %r11858, %r11857;
	// end inline asm
	// begin inline asm
	mov.b32 %r11864, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11865, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11866, %r11653, %r11864;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11869, %r11866, %r11865;
	// end inline asm
	// begin inline asm
	mov.b32 %r11872, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11873, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11874, %r11656, %r11872;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11877, %r11874, %r11873;
	// end inline asm
	// begin inline asm
	mov.b32 %r11880, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11881, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11882, %r11659, %r11880;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11885, %r11882, %r11881;
	// end inline asm
	// begin inline asm
	mov.b32 %r11888, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11889, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11890, %r11662, %r11888;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11893, %r11890, %r11889;
	// end inline asm
	// begin inline asm
	mov.b32 %r11896, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11897, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11898, %r11665, %r11896;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11901, %r11898, %r11897;
	// end inline asm
	// begin inline asm
	mov.b32 %r11904, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11905, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11906, %r11668, %r11904;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11909, %r11906, %r11905;
	// end inline asm
	// begin inline asm
	mov.b32 %r11912, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11913, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11914, %r11671, %r11912;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11917, %r11914, %r11913;
	// end inline asm
	// begin inline asm
	mov.b32 %r11920, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11921, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11922, %r11674, %r11920;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11925, %r11922, %r11921;
	// end inline asm
	// begin inline asm
	mov.b32 %r11928, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11929, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11930, %r11677, %r11928;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11933, %r11930, %r11929;
	// end inline asm
	// begin inline asm
	mov.b32 %r11939, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r11937, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11938, %r11939, %r11937;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11941, %r11685, %r11938;
	// end inline asm
	// begin inline asm
	mov.b32 %r11944, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11945, %r11939, %r11944;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11948, %r11693, %r11945;
	// end inline asm
	// begin inline asm
	mov.b32 %r11951, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11952, %r11939, %r11951;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11955, %r11701, %r11952;
	// end inline asm
	// begin inline asm
	mov.b32 %r11958, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11959, %r11939, %r11958;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11962, %r11709, %r11959;
	// end inline asm
	// begin inline asm
	prmt.b32 %r11965, %r11941, %r11955, %r4336;
	// end inline asm
	// begin inline asm
	prmt.b32 %r11969, %r11948, %r11962, %r4336;
	// end inline asm
	shl.b32 	%r11976, %r11969, 4;
	// begin inline asm
	lop3.b32 %r11973, %r4342, %r11965, %r11976, 202;
	// end inline asm
	xor.b32  	%r16104, %r11973, -2004318072;
	// begin inline asm
	mov.b32 %r11980, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r11978, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11979, %r11980, %r11978;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11982, %r11717, %r11979;
	// end inline asm
	// begin inline asm
	mov.b32 %r11985, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11986, %r11980, %r11985;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11989, %r11725, %r11986;
	// end inline asm
	// begin inline asm
	mov.b32 %r11992, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11993, %r11980, %r11992;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11996, %r11733, %r11993;
	// end inline asm
	// begin inline asm
	mov.b32 %r11999, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12000, %r11980, %r11999;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12003, %r11741, %r12000;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12006, %r11982, %r11996, %r4336;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12010, %r11989, %r12003, %r4336;
	// end inline asm
	shl.b32 	%r12017, %r12010, 4;
	// begin inline asm
	lop3.b32 %r12014, %r4342, %r12006, %r12017, 202;
	// end inline asm
	xor.b32  	%r16105, %r12014, -2004318072;
	// begin inline asm
	mov.b32 %r12021, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12019, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12020, %r12021, %r12019;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12023, %r11749, %r12020;
	// end inline asm
	// begin inline asm
	mov.b32 %r12026, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12027, %r12021, %r12026;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12030, %r11757, %r12027;
	// end inline asm
	// begin inline asm
	mov.b32 %r12033, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12034, %r12021, %r12033;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12037, %r11765, %r12034;
	// end inline asm
	// begin inline asm
	mov.b32 %r12040, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12041, %r12021, %r12040;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12044, %r11773, %r12041;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12047, %r12023, %r12037, %r4336;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12051, %r12030, %r12044, %r4336;
	// end inline asm
	shl.b32 	%r12058, %r12051, 4;
	// begin inline asm
	lop3.b32 %r12055, %r4342, %r12047, %r12058, 202;
	// end inline asm
	xor.b32  	%r16106, %r12055, -2004318072;
	// begin inline asm
	mov.b32 %r12062, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12060, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12061, %r12062, %r12060;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12064, %r11781, %r12061;
	// end inline asm
	// begin inline asm
	mov.b32 %r12067, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12068, %r12062, %r12067;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12071, %r11789, %r12068;
	// end inline asm
	// begin inline asm
	mov.b32 %r12074, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12075, %r12062, %r12074;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12078, %r11797, %r12075;
	// end inline asm
	// begin inline asm
	mov.b32 %r12081, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12082, %r12062, %r12081;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12085, %r11805, %r12082;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12088, %r12064, %r12078, %r4336;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12092, %r12071, %r12085, %r4336;
	// end inline asm
	shl.b32 	%r12099, %r12092, 4;
	// begin inline asm
	lop3.b32 %r12096, %r4342, %r12088, %r12099, 202;
	// end inline asm
	xor.b32  	%r16107, %r12096, -2004318072;
	// begin inline asm
	mov.b32 %r12103, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12101, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12102, %r12103, %r12101;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12105, %r11813, %r12102;
	// end inline asm
	// begin inline asm
	mov.b32 %r12108, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12109, %r12103, %r12108;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12112, %r11821, %r12109;
	// end inline asm
	// begin inline asm
	mov.b32 %r12115, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12116, %r12103, %r12115;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12119, %r11829, %r12116;
	// end inline asm
	// begin inline asm
	mov.b32 %r12122, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12123, %r12103, %r12122;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12126, %r11837, %r12123;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12129, %r12105, %r12119, %r4336;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12133, %r12112, %r12126, %r4336;
	// end inline asm
	shl.b32 	%r12140, %r12133, 4;
	// begin inline asm
	lop3.b32 %r12137, %r4342, %r12129, %r12140, 202;
	// end inline asm
	xor.b32  	%r16108, %r12137, -2004318072;
	// begin inline asm
	mov.b32 %r12144, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12142, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12143, %r12144, %r12142;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12146, %r11845, %r12143;
	// end inline asm
	// begin inline asm
	mov.b32 %r12149, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12150, %r12144, %r12149;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12153, %r11853, %r12150;
	// end inline asm
	// begin inline asm
	mov.b32 %r12156, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12157, %r12144, %r12156;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12160, %r11861, %r12157;
	// end inline asm
	// begin inline asm
	mov.b32 %r12163, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12164, %r12144, %r12163;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12167, %r11869, %r12164;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12170, %r12146, %r12160, %r4336;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12174, %r12153, %r12167, %r4336;
	// end inline asm
	shl.b32 	%r12181, %r12174, 4;
	// begin inline asm
	lop3.b32 %r12178, %r4342, %r12170, %r12181, 202;
	// end inline asm
	xor.b32  	%r16109, %r12178, -2004318072;
	// begin inline asm
	mov.b32 %r12185, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12183, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12184, %r12185, %r12183;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12187, %r11877, %r12184;
	// end inline asm
	// begin inline asm
	mov.b32 %r12190, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12191, %r12185, %r12190;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12194, %r11885, %r12191;
	// end inline asm
	// begin inline asm
	mov.b32 %r12197, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12198, %r12185, %r12197;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12201, %r11893, %r12198;
	// end inline asm
	// begin inline asm
	mov.b32 %r12204, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12205, %r12185, %r12204;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12208, %r11901, %r12205;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12211, %r12187, %r12201, %r4336;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12215, %r12194, %r12208, %r4336;
	// end inline asm
	shl.b32 	%r12222, %r12215, 4;
	// begin inline asm
	lop3.b32 %r12219, %r4342, %r12211, %r12222, 202;
	// end inline asm
	xor.b32  	%r16110, %r12219, -2004318072;
	// begin inline asm
	mov.b32 %r12226, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12224, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12225, %r12226, %r12224;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12228, %r11909, %r12225;
	// end inline asm
	// begin inline asm
	mov.b32 %r12231, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12232, %r12226, %r12231;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12235, %r11917, %r12232;
	// end inline asm
	// begin inline asm
	mov.b32 %r12238, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12239, %r12226, %r12238;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12242, %r11925, %r12239;
	// end inline asm
	// begin inline asm
	mov.b32 %r12245, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12246, %r12226, %r12245;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12249, %r11933, %r12246;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12252, %r12228, %r12242, %r4336;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12256, %r12235, %r12249, %r4336;
	// end inline asm
	shl.b32 	%r12263, %r12256, 4;
	// begin inline asm
	lop3.b32 %r12260, %r4342, %r12252, %r12263, 202;
	// end inline asm
	xor.b32  	%r16111, %r12260, -2004318072;
	st.shared.u32 	[%rd82], %r16104;
	st.shared.u32 	[%rd83], %r16105;
	st.shared.u32 	[%rd84], %r16106;
	st.shared.u32 	[%rd85], %r16107;
	st.shared.u32 	[%rd86], %r16108;
	st.shared.u32 	[%rd87], %r16109;
	st.shared.u32 	[%rd88], %r16110;
	st.shared.u32 	[%rd89], %r16111;
	ld.shared.u32 	%r16222, [%rd74];
	ld.shared.u32 	%r16223, [%rd75];
	ld.shared.u32 	%r16224, [%rd76];
	ld.shared.u32 	%r16225, [%rd77];
	ld.shared.u32 	%r16234, [%rd78];
	ld.shared.u32 	%r16235, [%rd79];
	ld.shared.u32 	%r16236, [%rd80];
	ld.shared.u32 	%r16237, [%rd81];
	// begin inline asm
	mov.b32 %r12269, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12280, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12268, %r16222, -2004318072;
	// begin inline asm
	lop3.b32 %r12266, %r819, %r12268, %r12269, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12270, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12271, %r12269, %r12270;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12274, %r12266, %r12271;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12277, %r830, %r12268, %r12280, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12281, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12282, %r12280, %r12281;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12285, %r12277, %r12282;
	// end inline asm
	shr.u32 	%r12290, %r12268, 8;
	// begin inline asm
	lop3.b32 %r12288, %r819, %r12290, %r12269, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12292, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12293, %r12269, %r12292;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12296, %r12288, %r12293;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12299, %r830, %r12290, %r12280, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12303, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12304, %r12280, %r12303;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12307, %r12299, %r12304;
	// end inline asm
	// begin inline asm
	mov.b32 %r12315, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12326, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12314, %r16223, -2004318072;
	// begin inline asm
	lop3.b32 %r12312, %r819, %r12314, %r12315, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12316, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12317, %r12315, %r12316;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12320, %r12312, %r12317;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12323, %r830, %r12314, %r12326, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12327, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12328, %r12326, %r12327;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12331, %r12323, %r12328;
	// end inline asm
	shr.u32 	%r12336, %r12314, 8;
	// begin inline asm
	lop3.b32 %r12334, %r819, %r12336, %r12315, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12338, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12339, %r12315, %r12338;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12342, %r12334, %r12339;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12345, %r830, %r12336, %r12326, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12349, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12350, %r12326, %r12349;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12353, %r12345, %r12350;
	// end inline asm
	// begin inline asm
	mov.b32 %r12361, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12372, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12360, %r16224, -2004318072;
	// begin inline asm
	lop3.b32 %r12358, %r819, %r12360, %r12361, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12362, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12363, %r12361, %r12362;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12366, %r12358, %r12363;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12369, %r830, %r12360, %r12372, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12373, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12374, %r12372, %r12373;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12377, %r12369, %r12374;
	// end inline asm
	shr.u32 	%r12382, %r12360, 8;
	// begin inline asm
	lop3.b32 %r12380, %r819, %r12382, %r12361, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12384, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12385, %r12361, %r12384;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12388, %r12380, %r12385;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12391, %r830, %r12382, %r12372, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12395, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12396, %r12372, %r12395;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12399, %r12391, %r12396;
	// end inline asm
	// begin inline asm
	mov.b32 %r12407, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12418, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12406, %r16225, -2004318072;
	// begin inline asm
	lop3.b32 %r12404, %r819, %r12406, %r12407, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12408, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12409, %r12407, %r12408;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12412, %r12404, %r12409;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12415, %r830, %r12406, %r12418, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12419, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12420, %r12418, %r12419;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12423, %r12415, %r12420;
	// end inline asm
	shr.u32 	%r12428, %r12406, 8;
	// begin inline asm
	lop3.b32 %r12426, %r819, %r12428, %r12407, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12430, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12431, %r12407, %r12430;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12434, %r12426, %r12431;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12437, %r830, %r12428, %r12418, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12441, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12442, %r12418, %r12441;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12445, %r12437, %r12442;
	// end inline asm
	// begin inline asm
	mov.b32 %r12453, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12464, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12452, %r16234, -2004318072;
	// begin inline asm
	lop3.b32 %r12450, %r819, %r12452, %r12453, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12454, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12455, %r12453, %r12454;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12458, %r12450, %r12455;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12461, %r830, %r12452, %r12464, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12465, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12466, %r12464, %r12465;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12469, %r12461, %r12466;
	// end inline asm
	shr.u32 	%r12474, %r12452, 8;
	// begin inline asm
	lop3.b32 %r12472, %r819, %r12474, %r12453, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12476, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12477, %r12453, %r12476;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12480, %r12472, %r12477;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12483, %r830, %r12474, %r12464, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12487, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12488, %r12464, %r12487;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12491, %r12483, %r12488;
	// end inline asm
	// begin inline asm
	mov.b32 %r12499, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12510, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12498, %r16235, -2004318072;
	// begin inline asm
	lop3.b32 %r12496, %r819, %r12498, %r12499, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12500, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12501, %r12499, %r12500;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12504, %r12496, %r12501;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12507, %r830, %r12498, %r12510, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12511, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12512, %r12510, %r12511;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12515, %r12507, %r12512;
	// end inline asm
	shr.u32 	%r12520, %r12498, 8;
	// begin inline asm
	lop3.b32 %r12518, %r819, %r12520, %r12499, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12522, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12523, %r12499, %r12522;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12526, %r12518, %r12523;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12529, %r830, %r12520, %r12510, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12533, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12534, %r12510, %r12533;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12537, %r12529, %r12534;
	// end inline asm
	// begin inline asm
	mov.b32 %r12545, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12556, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12544, %r16236, -2004318072;
	// begin inline asm
	lop3.b32 %r12542, %r819, %r12544, %r12545, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12546, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12547, %r12545, %r12546;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12550, %r12542, %r12547;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12553, %r830, %r12544, %r12556, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12557, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12558, %r12556, %r12557;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12561, %r12553, %r12558;
	// end inline asm
	shr.u32 	%r12566, %r12544, 8;
	// begin inline asm
	lop3.b32 %r12564, %r819, %r12566, %r12545, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12568, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12569, %r12545, %r12568;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12572, %r12564, %r12569;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12575, %r830, %r12566, %r12556, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12579, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12580, %r12556, %r12579;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12583, %r12575, %r12580;
	// end inline asm
	// begin inline asm
	mov.b32 %r12591, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12602, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12590, %r16237, -2004318072;
	// begin inline asm
	lop3.b32 %r12588, %r819, %r12590, %r12591, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12592, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12593, %r12591, %r12592;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12596, %r12588, %r12593;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12599, %r830, %r12590, %r12602, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12603, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12604, %r12602, %r12603;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12607, %r12599, %r12604;
	// end inline asm
	shr.u32 	%r12612, %r12590, 8;
	// begin inline asm
	lop3.b32 %r12610, %r819, %r12612, %r12591, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12614, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12615, %r12591, %r12614;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12618, %r12610, %r12615;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12621, %r830, %r12612, %r12602, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12625, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12626, %r12602, %r12625;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12629, %r12621, %r12626;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12632, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12634, %r12632, %r12274;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12637, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12639, %r12637, %r12285;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12642, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12644, %r12642, %r12296;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12647, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12649, %r12647, %r12307;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12652, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12654, %r12652, %r12320;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12657, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12659, %r12657, %r12331;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12662, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12664, %r12662, %r12342;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12667, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12669, %r12667, %r12353;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12672, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12674, %r12672, %r12366;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12677, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12679, %r12677, %r12377;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12682, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12684, %r12682, %r12388;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12687, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12689, %r12687, %r12399;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12692, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12694, %r12692, %r12412;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12697, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12699, %r12697, %r12423;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12702, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12704, %r12702, %r12434;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12707, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12709, %r12707, %r12445;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12712, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12714, %r12712, %r12458;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12717, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12719, %r12717, %r12469;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12722, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12724, %r12722, %r12480;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12727, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12729, %r12727, %r12491;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12732, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12734, %r12732, %r12504;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12737, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12739, %r12737, %r12515;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12742, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12744, %r12742, %r12526;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12747, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12749, %r12747, %r12537;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12752, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12754, %r12752, %r12550;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12757, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12759, %r12757, %r12561;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12762, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12764, %r12762, %r12572;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12767, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12769, %r12767, %r12583;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12772, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12774, %r12772, %r12596;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12777, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12779, %r12777, %r12607;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12782, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12784, %r12782, %r12618;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12787, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12789, %r12787, %r12629;
	// end inline asm
	// begin inline asm
	mov.b32 %r12797, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12808, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12794, %r819, %r820, %r12797, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12798, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12799, %r12797, %r12798;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12802, %r12794, %r12799;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12805, %r830, %r820, %r12808, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12809, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12810, %r12808, %r12809;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12813, %r12805, %r12810;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12816, %r819, %r842, %r12797, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12820, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12821, %r12797, %r12820;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12824, %r12816, %r12821;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12827, %r830, %r842, %r12808, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12831, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12832, %r12808, %r12831;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12835, %r12827, %r12832;
	// end inline asm
	// begin inline asm
	mov.b32 %r12843, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12854, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12840, %r819, %r866, %r12843, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12844, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12845, %r12843, %r12844;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12848, %r12840, %r12845;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12851, %r830, %r866, %r12854, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12855, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12856, %r12854, %r12855;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12859, %r12851, %r12856;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12862, %r819, %r888, %r12843, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12866, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12867, %r12843, %r12866;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12870, %r12862, %r12867;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12873, %r830, %r888, %r12854, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12877, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12878, %r12854, %r12877;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12881, %r12873, %r12878;
	// end inline asm
	// begin inline asm
	mov.b32 %r12889, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12900, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12886, %r819, %r912, %r12889, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12890, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12891, %r12889, %r12890;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12894, %r12886, %r12891;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12897, %r830, %r912, %r12900, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12901, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12902, %r12900, %r12901;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12905, %r12897, %r12902;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12908, %r819, %r934, %r12889, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12912, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12913, %r12889, %r12912;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12916, %r12908, %r12913;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12919, %r830, %r934, %r12900, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12923, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12924, %r12900, %r12923;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12927, %r12919, %r12924;
	// end inline asm
	// begin inline asm
	mov.b32 %r12935, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12946, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12932, %r819, %r958, %r12935, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12936, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12937, %r12935, %r12936;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12940, %r12932, %r12937;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12943, %r830, %r958, %r12946, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12947, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12948, %r12946, %r12947;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12951, %r12943, %r12948;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12954, %r819, %r980, %r12935, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12958, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12959, %r12935, %r12958;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12962, %r12954, %r12959;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12965, %r830, %r980, %r12946, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12969, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12970, %r12946, %r12969;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12973, %r12965, %r12970;
	// end inline asm
	// begin inline asm
	mov.b32 %r12981, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12992, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12978, %r819, %r1004, %r12981, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12982, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12983, %r12981, %r12982;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12986, %r12978, %r12983;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12989, %r830, %r1004, %r12992, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12993, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12994, %r12992, %r12993;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12997, %r12989, %r12994;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13000, %r819, %r1026, %r12981, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13004, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13005, %r12981, %r13004;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13008, %r13000, %r13005;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13011, %r830, %r1026, %r12992, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13015, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13016, %r12992, %r13015;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13019, %r13011, %r13016;
	// end inline asm
	// begin inline asm
	mov.b32 %r13027, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13038, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13024, %r819, %r1050, %r13027, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13028, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13029, %r13027, %r13028;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13032, %r13024, %r13029;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13035, %r830, %r1050, %r13038, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13039, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13040, %r13038, %r13039;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13043, %r13035, %r13040;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13046, %r819, %r1072, %r13027, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13050, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13051, %r13027, %r13050;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13054, %r13046, %r13051;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13057, %r830, %r1072, %r13038, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13061, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13062, %r13038, %r13061;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13065, %r13057, %r13062;
	// end inline asm
	// begin inline asm
	mov.b32 %r13073, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13084, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13070, %r819, %r1096, %r13073, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13074, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13075, %r13073, %r13074;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13078, %r13070, %r13075;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13081, %r830, %r1096, %r13084, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13085, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13086, %r13084, %r13085;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13089, %r13081, %r13086;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13092, %r819, %r1118, %r13073, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13096, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13097, %r13073, %r13096;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13100, %r13092, %r13097;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13103, %r830, %r1118, %r13084, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13107, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13108, %r13084, %r13107;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13111, %r13103, %r13108;
	// end inline asm
	// begin inline asm
	mov.b32 %r13119, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13130, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13116, %r819, %r1142, %r13119, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13120, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13121, %r13119, %r13120;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13124, %r13116, %r13121;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13127, %r830, %r1142, %r13130, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13131, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13132, %r13130, %r13131;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13135, %r13127, %r13132;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13138, %r819, %r1164, %r13119, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13142, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13143, %r13119, %r13142;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13146, %r13138, %r13143;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13149, %r830, %r1164, %r13130, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13153, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13154, %r13130, %r13153;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13157, %r13149, %r13154;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13160, %r272, %r12802, %r12634;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13164, %r272, %r12813, %r12639;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13168, %r272, %r12824, %r12644;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13172, %r272, %r12835, %r12649;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13176, %r272, %r12848, %r12654;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13180, %r272, %r12859, %r12659;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13184, %r272, %r12870, %r12664;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13188, %r272, %r12881, %r12669;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13192, %r272, %r12894, %r12674;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13196, %r272, %r12905, %r12679;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13200, %r272, %r12916, %r12684;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13204, %r272, %r12927, %r12689;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13208, %r272, %r12940, %r12694;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13212, %r272, %r12951, %r12699;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13216, %r272, %r12962, %r12704;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13220, %r272, %r12973, %r12709;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13224, %r290, %r12986, %r12714;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13228, %r290, %r12997, %r12719;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13232, %r290, %r13008, %r12724;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13236, %r290, %r13019, %r12729;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13240, %r290, %r13032, %r12734;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13244, %r290, %r13043, %r12739;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13248, %r290, %r13054, %r12744;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13252, %r290, %r13065, %r12749;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13256, %r290, %r13078, %r12754;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13260, %r290, %r13089, %r12759;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13264, %r290, %r13100, %r12764;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13268, %r290, %r13111, %r12769;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13272, %r290, %r13124, %r12774;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13276, %r290, %r13135, %r12779;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13280, %r290, %r13146, %r12784;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13284, %r290, %r13157, %r12789;
	// end inline asm
	// begin inline asm
	mov.b32 %r13293, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13304, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13290, %r819, %r4636, %r13293, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13294, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13295, %r13293, %r13294;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13298, %r13290, %r13295;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13301, %r830, %r4636, %r13304, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13305, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13306, %r13304, %r13305;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13309, %r13301, %r13306;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13312, %r819, %r4658, %r13293, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13316, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13317, %r13293, %r13316;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13320, %r13312, %r13317;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13323, %r830, %r4658, %r13304, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13327, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13328, %r13304, %r13327;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13331, %r13323, %r13328;
	// end inline asm
	// begin inline asm
	mov.b32 %r13339, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13350, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13336, %r819, %r4682, %r13339, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13340, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13341, %r13339, %r13340;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13344, %r13336, %r13341;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13347, %r830, %r4682, %r13350, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13351, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13352, %r13350, %r13351;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13355, %r13347, %r13352;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13358, %r819, %r4704, %r13339, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13362, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13363, %r13339, %r13362;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13366, %r13358, %r13363;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13369, %r830, %r4704, %r13350, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13373, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13374, %r13350, %r13373;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13377, %r13369, %r13374;
	// end inline asm
	// begin inline asm
	mov.b32 %r13385, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13396, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13382, %r819, %r4728, %r13385, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13386, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13387, %r13385, %r13386;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13390, %r13382, %r13387;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13393, %r830, %r4728, %r13396, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13397, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13398, %r13396, %r13397;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13401, %r13393, %r13398;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13404, %r819, %r4750, %r13385, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13408, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13409, %r13385, %r13408;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13412, %r13404, %r13409;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13415, %r830, %r4750, %r13396, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13419, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13420, %r13396, %r13419;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13423, %r13415, %r13420;
	// end inline asm
	// begin inline asm
	mov.b32 %r13431, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13442, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13428, %r819, %r4774, %r13431, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13432, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13433, %r13431, %r13432;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13436, %r13428, %r13433;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13439, %r830, %r4774, %r13442, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13443, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13444, %r13442, %r13443;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13447, %r13439, %r13444;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13450, %r819, %r4796, %r13431, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13454, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13455, %r13431, %r13454;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13458, %r13450, %r13455;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13461, %r830, %r4796, %r13442, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13465, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13466, %r13442, %r13465;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13469, %r13461, %r13466;
	// end inline asm
	// begin inline asm
	mov.b32 %r13477, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13488, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13474, %r819, %r4820, %r13477, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13478, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13479, %r13477, %r13478;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13482, %r13474, %r13479;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13485, %r830, %r4820, %r13488, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13489, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13490, %r13488, %r13489;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13493, %r13485, %r13490;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13496, %r819, %r4842, %r13477, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13500, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13501, %r13477, %r13500;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13504, %r13496, %r13501;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13507, %r830, %r4842, %r13488, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13511, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13512, %r13488, %r13511;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13515, %r13507, %r13512;
	// end inline asm
	// begin inline asm
	mov.b32 %r13523, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13534, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13520, %r819, %r4866, %r13523, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13524, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13525, %r13523, %r13524;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13528, %r13520, %r13525;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13531, %r830, %r4866, %r13534, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13535, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13536, %r13534, %r13535;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13539, %r13531, %r13536;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13542, %r819, %r4888, %r13523, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13546, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13547, %r13523, %r13546;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13550, %r13542, %r13547;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13553, %r830, %r4888, %r13534, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13557, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13558, %r13534, %r13557;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13561, %r13553, %r13558;
	// end inline asm
	// begin inline asm
	mov.b32 %r13569, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13580, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13566, %r819, %r4912, %r13569, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13570, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13571, %r13569, %r13570;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13574, %r13566, %r13571;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13577, %r830, %r4912, %r13580, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13581, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13582, %r13580, %r13581;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13585, %r13577, %r13582;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13588, %r819, %r4934, %r13569, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13592, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13593, %r13569, %r13592;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13596, %r13588, %r13593;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13599, %r830, %r4934, %r13580, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13603, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13604, %r13580, %r13603;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13607, %r13599, %r13604;
	// end inline asm
	// begin inline asm
	mov.b32 %r13615, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13626, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13612, %r819, %r4958, %r13615, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13616, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13617, %r13615, %r13616;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13620, %r13612, %r13617;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13623, %r830, %r4958, %r13626, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13627, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13628, %r13626, %r13627;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13631, %r13623, %r13628;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13634, %r819, %r4980, %r13615, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13638, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13639, %r13615, %r13638;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13642, %r13634, %r13639;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13645, %r830, %r4980, %r13626, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13649, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13650, %r13626, %r13649;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13653, %r13645, %r13650;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13656, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13658, %r13656, %r13298, %r13160;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13662, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13664, %r13662, %r13309, %r13164;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13668, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13670, %r13668, %r13320, %r13168;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13674, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13676, %r13674, %r13331, %r13172;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13680, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13682, %r13680, %r13344, %r13176;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13686, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13688, %r13686, %r13355, %r13180;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13692, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13694, %r13692, %r13366, %r13184;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13698, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13700, %r13698, %r13377, %r13188;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13704, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13706, %r13704, %r13390, %r13192;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13710, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13712, %r13710, %r13401, %r13196;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13716, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13718, %r13716, %r13412, %r13200;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13722, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13724, %r13722, %r13423, %r13204;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13728, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13730, %r13728, %r13436, %r13208;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13734, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13736, %r13734, %r13447, %r13212;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13740, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13742, %r13740, %r13458, %r13216;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13746, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13748, %r13746, %r13469, %r13220;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13752, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13754, %r13752, %r13482, %r13224;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13758, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13760, %r13758, %r13493, %r13228;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13764, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13766, %r13764, %r13504, %r13232;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13770, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13772, %r13770, %r13515, %r13236;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13776, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13778, %r13776, %r13528, %r13240;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13782, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13784, %r13782, %r13539, %r13244;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13788, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13790, %r13788, %r13550, %r13248;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13794, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13796, %r13794, %r13561, %r13252;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13800, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13802, %r13800, %r13574, %r13256;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13806, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13808, %r13806, %r13585, %r13260;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13812, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13814, %r13812, %r13596, %r13264;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13818, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13820, %r13818, %r13607, %r13268;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13824, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13826, %r13824, %r13620, %r13272;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13830, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13832, %r13830, %r13631, %r13276;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13836, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13838, %r13836, %r13642, %r13280;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13842, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13844, %r13842, %r13653, %r13284;
	// end inline asm
	// begin inline asm
	mov.b32 %r13853, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13864, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13850, %r819, %r8452, %r13853, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13854, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13855, %r13853, %r13854;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13858, %r13850, %r13855;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13861, %r830, %r8452, %r13864, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13865, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13866, %r13864, %r13865;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13869, %r13861, %r13866;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13872, %r819, %r8474, %r13853, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13876, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13877, %r13853, %r13876;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13880, %r13872, %r13877;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13883, %r830, %r8474, %r13864, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13887, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13888, %r13864, %r13887;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13891, %r13883, %r13888;
	// end inline asm
	// begin inline asm
	mov.b32 %r13899, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13910, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13896, %r819, %r8498, %r13899, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13900, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13901, %r13899, %r13900;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13904, %r13896, %r13901;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13907, %r830, %r8498, %r13910, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13911, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13912, %r13910, %r13911;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13915, %r13907, %r13912;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13918, %r819, %r8520, %r13899, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13922, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13923, %r13899, %r13922;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13926, %r13918, %r13923;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13929, %r830, %r8520, %r13910, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13933, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13934, %r13910, %r13933;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13937, %r13929, %r13934;
	// end inline asm
	// begin inline asm
	mov.b32 %r13945, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13956, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13942, %r819, %r8544, %r13945, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13946, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13947, %r13945, %r13946;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13950, %r13942, %r13947;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13953, %r830, %r8544, %r13956, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13957, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13958, %r13956, %r13957;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13961, %r13953, %r13958;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13964, %r819, %r8566, %r13945, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13968, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13969, %r13945, %r13968;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13972, %r13964, %r13969;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13975, %r830, %r8566, %r13956, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13979, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13980, %r13956, %r13979;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13983, %r13975, %r13980;
	// end inline asm
	// begin inline asm
	mov.b32 %r13991, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r14002, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13988, %r819, %r8590, %r13991, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13992, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13993, %r13991, %r13992;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13996, %r13988, %r13993;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13999, %r830, %r8590, %r14002, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14003, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14004, %r14002, %r14003;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14007, %r13999, %r14004;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14010, %r819, %r8612, %r13991, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14014, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14015, %r13991, %r14014;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14018, %r14010, %r14015;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14021, %r830, %r8612, %r14002, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14025, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14026, %r14002, %r14025;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14029, %r14021, %r14026;
	// end inline asm
	// begin inline asm
	mov.b32 %r14037, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r14048, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14034, %r819, %r8636, %r14037, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14038, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14039, %r14037, %r14038;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14042, %r14034, %r14039;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14045, %r830, %r8636, %r14048, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14049, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14050, %r14048, %r14049;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14053, %r14045, %r14050;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14056, %r819, %r8658, %r14037, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14060, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14061, %r14037, %r14060;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14064, %r14056, %r14061;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14067, %r830, %r8658, %r14048, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14071, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14072, %r14048, %r14071;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14075, %r14067, %r14072;
	// end inline asm
	// begin inline asm
	mov.b32 %r14083, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r14094, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14080, %r819, %r8682, %r14083, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14084, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14085, %r14083, %r14084;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14088, %r14080, %r14085;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14091, %r830, %r8682, %r14094, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14095, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14096, %r14094, %r14095;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14099, %r14091, %r14096;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14102, %r819, %r8704, %r14083, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14106, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14107, %r14083, %r14106;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14110, %r14102, %r14107;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14113, %r830, %r8704, %r14094, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14117, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14118, %r14094, %r14117;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14121, %r14113, %r14118;
	// end inline asm
	// begin inline asm
	mov.b32 %r14129, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r14140, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14126, %r819, %r8728, %r14129, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14130, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14131, %r14129, %r14130;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14134, %r14126, %r14131;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14137, %r830, %r8728, %r14140, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14141, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14142, %r14140, %r14141;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14145, %r14137, %r14142;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14148, %r819, %r8750, %r14129, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14152, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14153, %r14129, %r14152;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14156, %r14148, %r14153;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14159, %r830, %r8750, %r14140, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14163, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14164, %r14140, %r14163;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14167, %r14159, %r14164;
	// end inline asm
	// begin inline asm
	mov.b32 %r14175, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r14186, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14172, %r819, %r8774, %r14175, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14176, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14177, %r14175, %r14176;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14180, %r14172, %r14177;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14183, %r830, %r8774, %r14186, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14187, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14188, %r14186, %r14187;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14191, %r14183, %r14188;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14194, %r819, %r8796, %r14175, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14198, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14199, %r14175, %r14198;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14202, %r14194, %r14199;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14205, %r830, %r8796, %r14186, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14209, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14210, %r14186, %r14209;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14213, %r14205, %r14210;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14351, %r344, %r13858, %r13658;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14348, %r344, %r13869, %r13664;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14360, %r344, %r13880, %r13670;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14357, %r344, %r13891, %r13676;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14369, %r344, %r13904, %r13682;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14366, %r344, %r13915, %r13688;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14378, %r344, %r13926, %r13694;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14375, %r344, %r13937, %r13700;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14387, %r344, %r13950, %r13706;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14384, %r344, %r13961, %r13712;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14396, %r344, %r13972, %r13718;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14393, %r344, %r13983, %r13724;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14405, %r344, %r13996, %r13730;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14402, %r344, %r14007, %r13736;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14414, %r344, %r14018, %r13742;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14411, %r344, %r14029, %r13748;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14423, %r362, %r14042, %r13754;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14420, %r362, %r14053, %r13760;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14432, %r362, %r14064, %r13766;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14429, %r362, %r14075, %r13772;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14441, %r362, %r14088, %r13778;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14438, %r362, %r14099, %r13784;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14450, %r362, %r14110, %r13790;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14447, %r362, %r14121, %r13796;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14459, %r362, %r14134, %r13802;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14456, %r362, %r14145, %r13808;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14468, %r362, %r14156, %r13814;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14465, %r362, %r14167, %r13820;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14477, %r362, %r14180, %r13826;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14474, %r362, %r14191, %r13832;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14486, %r362, %r14202, %r13838;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14483, %r362, %r14213, %r13844;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14344, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14346, %r14344, %r14348;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14349, %r426, %r14351, %r14346;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14353, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14355, %r14353, %r14357;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14358, %r426, %r14360, %r14355;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14362, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14364, %r14362, %r14366;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14367, %r426, %r14369, %r14364;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14371, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14373, %r14371, %r14375;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14376, %r426, %r14378, %r14373;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14380, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14382, %r14380, %r14384;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14385, %r426, %r14387, %r14382;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14389, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14391, %r14389, %r14393;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14394, %r426, %r14396, %r14391;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14398, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14400, %r14398, %r14402;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14403, %r426, %r14405, %r14400;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14407, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14409, %r14407, %r14411;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14412, %r426, %r14414, %r14409;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14416, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14418, %r14416, %r14420;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14421, %r429, %r14423, %r14418;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14425, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14427, %r14425, %r14429;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14430, %r429, %r14432, %r14427;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14434, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14436, %r14434, %r14438;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14439, %r429, %r14441, %r14436;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14443, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14445, %r14443, %r14447;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14448, %r429, %r14450, %r14445;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14452, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14454, %r14452, %r14456;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14457, %r429, %r14459, %r14454;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14461, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14463, %r14461, %r14465;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14466, %r429, %r14468, %r14463;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14470, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14472, %r14470, %r14474;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14475, %r429, %r14477, %r14472;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14479, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14481, %r14479, %r14483;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14484, %r429, %r14486, %r14481;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14488, %r432, %r14351;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14491, %r426, %r14348, %r14488;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14495, %r432, %r14360;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14498, %r426, %r14357, %r14495;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14502, %r432, %r14369;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14505, %r426, %r14366, %r14502;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14509, %r432, %r14378;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14512, %r426, %r14375, %r14509;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14516, %r432, %r14387;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14519, %r426, %r14384, %r14516;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14523, %r432, %r14396;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14526, %r426, %r14393, %r14523;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14530, %r432, %r14405;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14533, %r426, %r14402, %r14530;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14537, %r432, %r14414;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14540, %r426, %r14411, %r14537;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14544, %r435, %r14423;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14547, %r429, %r14420, %r14544;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14551, %r435, %r14432;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14554, %r429, %r14429, %r14551;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14558, %r435, %r14441;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14561, %r429, %r14438, %r14558;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14565, %r435, %r14450;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14568, %r429, %r14447, %r14565;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14572, %r435, %r14459;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14575, %r429, %r14456, %r14572;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14579, %r435, %r14468;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14582, %r429, %r14465, %r14579;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14586, %r435, %r14477;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14589, %r429, %r14474, %r14586;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14593, %r435, %r14486;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14596, %r429, %r14483, %r14593;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14767, %r14764}, {%r474, %r480, %r477, %r483}, {%r14349, %r14491}, {%r15175, %r15175};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14776, %r14773}, {%r474, %r480, %r477, %r483}, {%r14358, %r14498}, {%r15175, %r15175};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14785, %r14782}, {%r474, %r480, %r477, %r483}, {%r14367, %r14505}, {%r15175, %r15175};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14794, %r14791}, {%r474, %r480, %r477, %r483}, {%r14376, %r14512}, {%r15175, %r15175};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14803, %r14800}, {%r474, %r480, %r477, %r483}, {%r14385, %r14519}, {%r15175, %r15175};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14812, %r14809}, {%r474, %r480, %r477, %r483}, {%r14394, %r14526}, {%r15175, %r15175};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14821, %r14818}, {%r474, %r480, %r477, %r483}, {%r14403, %r14533}, {%r15175, %r15175};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14830, %r14827}, {%r474, %r480, %r477, %r483}, {%r14412, %r14540}, {%r15175, %r15175};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14839, %r14836}, {%r474, %r480, %r477, %r483}, {%r14421, %r14547}, {%r15175, %r15175};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14848, %r14845}, {%r474, %r480, %r477, %r483}, {%r14430, %r14554}, {%r15175, %r15175};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14857, %r14854}, {%r474, %r480, %r477, %r483}, {%r14439, %r14561}, {%r15175, %r15175};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14866, %r14863}, {%r474, %r480, %r477, %r483}, {%r14448, %r14568}, {%r15175, %r15175};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14875, %r14872}, {%r474, %r480, %r477, %r483}, {%r14457, %r14575}, {%r15175, %r15175};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14884, %r14881}, {%r474, %r480, %r477, %r483}, {%r14466, %r14582}, {%r15175, %r15175};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14893, %r14890}, {%r474, %r480, %r477, %r483}, {%r14475, %r14589}, {%r15175, %r15175};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14902, %r14899}, {%r474, %r480, %r477, %r483}, {%r14484, %r14596}, {%r15175, %r15175};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14760, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14762, %r14760, %r14764;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14765, %r521, %r14767, %r14762;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14769, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14771, %r14769, %r14773;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14774, %r521, %r14776, %r14771;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14778, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14780, %r14778, %r14782;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14783, %r521, %r14785, %r14780;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14787, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14789, %r14787, %r14791;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14792, %r521, %r14794, %r14789;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14796, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14798, %r14796, %r14800;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14801, %r521, %r14803, %r14798;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14805, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14807, %r14805, %r14809;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14810, %r521, %r14812, %r14807;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14814, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14816, %r14814, %r14818;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14819, %r521, %r14821, %r14816;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14823, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14825, %r14823, %r14827;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14828, %r521, %r14830, %r14825;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14832, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14834, %r14832, %r14836;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14837, %r521, %r14839, %r14834;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14841, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14843, %r14841, %r14845;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14846, %r521, %r14848, %r14843;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14850, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14852, %r14850, %r14854;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14855, %r521, %r14857, %r14852;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14859, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14861, %r14859, %r14863;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14864, %r521, %r14866, %r14861;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14868, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14870, %r14868, %r14872;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14873, %r521, %r14875, %r14870;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14877, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14879, %r14877, %r14881;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14882, %r521, %r14884, %r14879;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14886, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14888, %r14886, %r14890;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14891, %r521, %r14893, %r14888;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14895, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14897, %r14895, %r14899;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14900, %r521, %r14902, %r14897;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14904, %r524, %r14767;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14907, %r521, %r14764, %r14904;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14911, %r524, %r14776;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14914, %r521, %r14773, %r14911;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14918, %r524, %r14785;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14921, %r521, %r14782, %r14918;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14925, %r524, %r14794;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14928, %r521, %r14791, %r14925;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14932, %r524, %r14803;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14935, %r521, %r14800, %r14932;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14939, %r524, %r14812;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14942, %r521, %r14809, %r14939;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14946, %r524, %r14821;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14949, %r521, %r14818, %r14946;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14953, %r524, %r14830;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14956, %r521, %r14827, %r14953;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14960, %r524, %r14839;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14963, %r521, %r14836, %r14960;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14967, %r524, %r14848;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14970, %r521, %r14845, %r14967;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14974, %r524, %r14857;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14977, %r521, %r14854, %r14974;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14981, %r524, %r14866;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14984, %r521, %r14863, %r14981;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14988, %r524, %r14875;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14991, %r521, %r14872, %r14988;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14995, %r524, %r14884;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14998, %r521, %r14881, %r14995;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15002, %r524, %r14893;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15005, %r521, %r14890, %r15002;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15009, %r524, %r14902;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15012, %r521, %r14899, %r15009;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15305, %r15308}, {%r564, %r570, %r567, %r573}, {%r14765, %r14907}, {%r15175, %r15175};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15311, %r15314}, {%r564, %r570, %r567, %r573}, {%r14774, %r14914}, {%r15175, %r15175};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15317, %r15320}, {%r564, %r570, %r567, %r573}, {%r14783, %r14921}, {%r15175, %r15175};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15323, %r15326}, {%r564, %r570, %r567, %r573}, {%r14792, %r14928}, {%r15175, %r15175};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15329, %r15332}, {%r564, %r570, %r567, %r573}, {%r14801, %r14935}, {%r15175, %r15175};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15335, %r15338}, {%r564, %r570, %r567, %r573}, {%r14810, %r14942}, {%r15175, %r15175};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15341, %r15344}, {%r564, %r570, %r567, %r573}, {%r14819, %r14949}, {%r15175, %r15175};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15347, %r15350}, {%r564, %r570, %r567, %r573}, {%r14828, %r14956}, {%r15175, %r15175};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15306, %r15309}, {%r564, %r570, %r567, %r573}, {%r14837, %r14963}, {%r15175, %r15175};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15312, %r15315}, {%r564, %r570, %r567, %r573}, {%r14846, %r14970}, {%r15175, %r15175};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15318, %r15321}, {%r564, %r570, %r567, %r573}, {%r14855, %r14977}, {%r15175, %r15175};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15324, %r15327}, {%r564, %r570, %r567, %r573}, {%r14864, %r14984}, {%r15175, %r15175};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15330, %r15333}, {%r564, %r570, %r567, %r573}, {%r14873, %r14991}, {%r15175, %r15175};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15336, %r15339}, {%r564, %r570, %r567, %r573}, {%r14882, %r14998}, {%r15175, %r15175};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15342, %r15345}, {%r564, %r570, %r567, %r573}, {%r14891, %r15005}, {%r15175, %r15175};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15348, %r15351}, {%r564, %r570, %r567, %r573}, {%r14900, %r15012}, {%r15175, %r15175};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15304, %r15305, %r15306;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15307, %r15308, %r15309;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15310, %r15311, %r15312;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15313, %r15314, %r15315;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15316, %r15317, %r15318;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15319, %r15320, %r15321;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15322, %r15323, %r15324;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15325, %r15326, %r15327;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15328, %r15329, %r15330;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15331, %r15332, %r15333;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15334, %r15335, %r15336;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15337, %r15338, %r15339;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15340, %r15341, %r15342;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15343, %r15344, %r15345;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15346, %r15347, %r15348;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15349, %r15350, %r15351;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15352, %r15305, %r15306;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15355, %r15308, %r15309;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15358, %r15311, %r15312;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15361, %r15314, %r15315;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15364, %r15317, %r15318;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15367, %r15320, %r15321;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15370, %r15323, %r15324;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15373, %r15326, %r15327;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15376, %r15329, %r15330;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15379, %r15332, %r15333;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15382, %r15335, %r15336;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15385, %r15338, %r15339;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15388, %r15341, %r15342;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15391, %r15344, %r15345;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15394, %r15347, %r15348;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15397, %r15350, %r15351;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15400, %r13, %r15304;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15403, %r13, %r15307;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15406, %r13, %r15310;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15409, %r13, %r15313;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15412, %r13, %r15316;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15415, %r13, %r15319;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15418, %r13, %r15322;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15421, %r13, %r15325;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15424, %r13, %r15328;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15427, %r13, %r15331;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15430, %r13, %r15334;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15433, %r13, %r15337;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15436, %r13, %r15340;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15439, %r13, %r15343;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15442, %r13, %r15346;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15445, %r13, %r15349;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15448, %r14, %r15352;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15451, %r14, %r15355;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15454, %r14, %r15358;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15457, %r14, %r15361;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15460, %r14, %r15364;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15463, %r14, %r15367;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15466, %r14, %r15370;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15469, %r14, %r15373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15472, %r14, %r15376;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15475, %r14, %r15379;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15478, %r14, %r15382;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15481, %r14, %r15385;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15484, %r14, %r15388;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15487, %r14, %r15391;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15490, %r14, %r15394;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15493, %r14, %r15397;
	// end inline asm
	// begin inline asm
	mov.b32 %r15496, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15497, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15498, %r15400, %r15496;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15501, %r15498, %r15497;
	// end inline asm
	// begin inline asm
	mov.b32 %r15504, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15505, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15506, %r15403, %r15504;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15509, %r15506, %r15505;
	// end inline asm
	// begin inline asm
	mov.b32 %r15512, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15513, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15514, %r15406, %r15512;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15517, %r15514, %r15513;
	// end inline asm
	// begin inline asm
	mov.b32 %r15520, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15521, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15522, %r15409, %r15520;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15525, %r15522, %r15521;
	// end inline asm
	// begin inline asm
	mov.b32 %r15528, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15529, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15530, %r15412, %r15528;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15533, %r15530, %r15529;
	// end inline asm
	// begin inline asm
	mov.b32 %r15536, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15537, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15538, %r15415, %r15536;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15541, %r15538, %r15537;
	// end inline asm
	// begin inline asm
	mov.b32 %r15544, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15545, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15546, %r15418, %r15544;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15549, %r15546, %r15545;
	// end inline asm
	// begin inline asm
	mov.b32 %r15552, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15553, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15554, %r15421, %r15552;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15557, %r15554, %r15553;
	// end inline asm
	// begin inline asm
	mov.b32 %r15560, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15561, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15562, %r15424, %r15560;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15565, %r15562, %r15561;
	// end inline asm
	// begin inline asm
	mov.b32 %r15568, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15569, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15570, %r15427, %r15568;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15573, %r15570, %r15569;
	// end inline asm
	// begin inline asm
	mov.b32 %r15576, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15577, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15578, %r15430, %r15576;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15581, %r15578, %r15577;
	// end inline asm
	// begin inline asm
	mov.b32 %r15584, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15585, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15586, %r15433, %r15584;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15589, %r15586, %r15585;
	// end inline asm
	// begin inline asm
	mov.b32 %r15592, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15593, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15594, %r15436, %r15592;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15597, %r15594, %r15593;
	// end inline asm
	// begin inline asm
	mov.b32 %r15600, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15601, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15602, %r15439, %r15600;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15605, %r15602, %r15601;
	// end inline asm
	// begin inline asm
	mov.b32 %r15608, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15609, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15610, %r15442, %r15608;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15613, %r15610, %r15609;
	// end inline asm
	// begin inline asm
	mov.b32 %r15616, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15617, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15618, %r15445, %r15616;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15621, %r15618, %r15617;
	// end inline asm
	// begin inline asm
	mov.b32 %r15624, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15625, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15626, %r15448, %r15624;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15629, %r15626, %r15625;
	// end inline asm
	// begin inline asm
	mov.b32 %r15632, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15633, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15634, %r15451, %r15632;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15637, %r15634, %r15633;
	// end inline asm
	// begin inline asm
	mov.b32 %r15640, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15641, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15642, %r15454, %r15640;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15645, %r15642, %r15641;
	// end inline asm
	// begin inline asm
	mov.b32 %r15648, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15649, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15650, %r15457, %r15648;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15653, %r15650, %r15649;
	// end inline asm
	// begin inline asm
	mov.b32 %r15656, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15657, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15658, %r15460, %r15656;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15661, %r15658, %r15657;
	// end inline asm
	// begin inline asm
	mov.b32 %r15664, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15665, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15666, %r15463, %r15664;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15669, %r15666, %r15665;
	// end inline asm
	// begin inline asm
	mov.b32 %r15672, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15673, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15674, %r15466, %r15672;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15677, %r15674, %r15673;
	// end inline asm
	// begin inline asm
	mov.b32 %r15680, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15681, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15682, %r15469, %r15680;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15685, %r15682, %r15681;
	// end inline asm
	// begin inline asm
	mov.b32 %r15688, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15689, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15690, %r15472, %r15688;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15693, %r15690, %r15689;
	// end inline asm
	// begin inline asm
	mov.b32 %r15696, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15697, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15698, %r15475, %r15696;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15701, %r15698, %r15697;
	// end inline asm
	// begin inline asm
	mov.b32 %r15704, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15705, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15706, %r15478, %r15704;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15709, %r15706, %r15705;
	// end inline asm
	// begin inline asm
	mov.b32 %r15712, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15713, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15714, %r15481, %r15712;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15717, %r15714, %r15713;
	// end inline asm
	// begin inline asm
	mov.b32 %r15720, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15721, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15722, %r15484, %r15720;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15725, %r15722, %r15721;
	// end inline asm
	// begin inline asm
	mov.b32 %r15728, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15729, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15730, %r15487, %r15728;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15733, %r15730, %r15729;
	// end inline asm
	// begin inline asm
	mov.b32 %r15736, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15737, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15738, %r15490, %r15736;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15741, %r15738, %r15737;
	// end inline asm
	// begin inline asm
	mov.b32 %r15744, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15745, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15746, %r15493, %r15744;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15749, %r15746, %r15745;
	// end inline asm
	// begin inline asm
	mov.b32 %r15755, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r15753, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15754, %r15755, %r15753;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15757, %r15501, %r15754;
	// end inline asm
	// begin inline asm
	mov.b32 %r15760, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15761, %r15755, %r15760;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15764, %r15509, %r15761;
	// end inline asm
	// begin inline asm
	mov.b32 %r15767, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15768, %r15755, %r15767;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15771, %r15517, %r15768;
	// end inline asm
	// begin inline asm
	mov.b32 %r15774, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15775, %r15755, %r15774;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15778, %r15525, %r15775;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15781, %r15757, %r15771, %r4336;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15785, %r15764, %r15778, %r4336;
	// end inline asm
	shl.b32 	%r15792, %r15785, 4;
	// begin inline asm
	lop3.b32 %r15789, %r4342, %r15781, %r15792, 202;
	// end inline asm
	xor.b32  	%r16112, %r15789, -2004318072;
	// begin inline asm
	mov.b32 %r15796, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r15794, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15795, %r15796, %r15794;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15798, %r15533, %r15795;
	// end inline asm
	// begin inline asm
	mov.b32 %r15801, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15802, %r15796, %r15801;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15805, %r15541, %r15802;
	// end inline asm
	// begin inline asm
	mov.b32 %r15808, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15809, %r15796, %r15808;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15812, %r15549, %r15809;
	// end inline asm
	// begin inline asm
	mov.b32 %r15815, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15816, %r15796, %r15815;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15819, %r15557, %r15816;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15822, %r15798, %r15812, %r4336;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15826, %r15805, %r15819, %r4336;
	// end inline asm
	shl.b32 	%r15833, %r15826, 4;
	// begin inline asm
	lop3.b32 %r15830, %r4342, %r15822, %r15833, 202;
	// end inline asm
	xor.b32  	%r16113, %r15830, -2004318072;
	// begin inline asm
	mov.b32 %r15837, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r15835, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15836, %r15837, %r15835;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15839, %r15565, %r15836;
	// end inline asm
	// begin inline asm
	mov.b32 %r15842, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15843, %r15837, %r15842;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15846, %r15573, %r15843;
	// end inline asm
	// begin inline asm
	mov.b32 %r15849, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15850, %r15837, %r15849;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15853, %r15581, %r15850;
	// end inline asm
	// begin inline asm
	mov.b32 %r15856, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15857, %r15837, %r15856;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15860, %r15589, %r15857;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15863, %r15839, %r15853, %r4336;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15867, %r15846, %r15860, %r4336;
	// end inline asm
	shl.b32 	%r15874, %r15867, 4;
	// begin inline asm
	lop3.b32 %r15871, %r4342, %r15863, %r15874, 202;
	// end inline asm
	xor.b32  	%r16114, %r15871, -2004318072;
	// begin inline asm
	mov.b32 %r15878, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r15876, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15877, %r15878, %r15876;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15880, %r15597, %r15877;
	// end inline asm
	// begin inline asm
	mov.b32 %r15883, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15884, %r15878, %r15883;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15887, %r15605, %r15884;
	// end inline asm
	// begin inline asm
	mov.b32 %r15890, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15891, %r15878, %r15890;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15894, %r15613, %r15891;
	// end inline asm
	// begin inline asm
	mov.b32 %r15897, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15898, %r15878, %r15897;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15901, %r15621, %r15898;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15904, %r15880, %r15894, %r4336;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15908, %r15887, %r15901, %r4336;
	// end inline asm
	shl.b32 	%r15915, %r15908, 4;
	// begin inline asm
	lop3.b32 %r15912, %r4342, %r15904, %r15915, 202;
	// end inline asm
	xor.b32  	%r16115, %r15912, -2004318072;
	// begin inline asm
	mov.b32 %r15919, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r15917, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15918, %r15919, %r15917;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15921, %r15629, %r15918;
	// end inline asm
	// begin inline asm
	mov.b32 %r15924, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15925, %r15919, %r15924;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15928, %r15637, %r15925;
	// end inline asm
	// begin inline asm
	mov.b32 %r15931, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15932, %r15919, %r15931;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15935, %r15645, %r15932;
	// end inline asm
	// begin inline asm
	mov.b32 %r15938, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15939, %r15919, %r15938;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15942, %r15653, %r15939;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15945, %r15921, %r15935, %r4336;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15949, %r15928, %r15942, %r4336;
	// end inline asm
	shl.b32 	%r15956, %r15949, 4;
	// begin inline asm
	lop3.b32 %r15953, %r4342, %r15945, %r15956, 202;
	// end inline asm
	xor.b32  	%r16116, %r15953, -2004318072;
	// begin inline asm
	mov.b32 %r15960, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r15958, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15959, %r15960, %r15958;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15962, %r15661, %r15959;
	// end inline asm
	// begin inline asm
	mov.b32 %r15965, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15966, %r15960, %r15965;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15969, %r15669, %r15966;
	// end inline asm
	// begin inline asm
	mov.b32 %r15972, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15973, %r15960, %r15972;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15976, %r15677, %r15973;
	// end inline asm
	// begin inline asm
	mov.b32 %r15979, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15980, %r15960, %r15979;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15983, %r15685, %r15980;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15986, %r15962, %r15976, %r4336;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15990, %r15969, %r15983, %r4336;
	// end inline asm
	shl.b32 	%r15997, %r15990, 4;
	// begin inline asm
	lop3.b32 %r15994, %r4342, %r15986, %r15997, 202;
	// end inline asm
	xor.b32  	%r16117, %r15994, -2004318072;
	// begin inline asm
	mov.b32 %r16001, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r15999, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16000, %r16001, %r15999;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16003, %r15693, %r16000;
	// end inline asm
	// begin inline asm
	mov.b32 %r16006, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16007, %r16001, %r16006;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16010, %r15701, %r16007;
	// end inline asm
	// begin inline asm
	mov.b32 %r16013, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16014, %r16001, %r16013;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16017, %r15709, %r16014;
	// end inline asm
	// begin inline asm
	mov.b32 %r16020, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16021, %r16001, %r16020;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16024, %r15717, %r16021;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16027, %r16003, %r16017, %r4336;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16031, %r16010, %r16024, %r4336;
	// end inline asm
	shl.b32 	%r16038, %r16031, 4;
	// begin inline asm
	lop3.b32 %r16035, %r4342, %r16027, %r16038, 202;
	// end inline asm
	xor.b32  	%r16118, %r16035, -2004318072;
	// begin inline asm
	mov.b32 %r16042, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r16040, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16041, %r16042, %r16040;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16044, %r15725, %r16041;
	// end inline asm
	// begin inline asm
	mov.b32 %r16047, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16048, %r16042, %r16047;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16051, %r15733, %r16048;
	// end inline asm
	// begin inline asm
	mov.b32 %r16054, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16055, %r16042, %r16054;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16058, %r15741, %r16055;
	// end inline asm
	// begin inline asm
	mov.b32 %r16061, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16062, %r16042, %r16061;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16065, %r15749, %r16062;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16068, %r16044, %r16058, %r4336;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16072, %r16051, %r16065, %r4336;
	// end inline asm
	shl.b32 	%r16079, %r16072, 4;
	// begin inline asm
	lop3.b32 %r16076, %r4342, %r16068, %r16079, 202;
	// end inline asm
	xor.b32  	%r16119, %r16076, -2004318072;
	st.shared.u32 	[%rd82], %r16112;
	st.shared.u32 	[%rd83], %r16113;
	st.shared.u32 	[%rd84], %r16114;
	st.shared.u32 	[%rd85], %r16115;
	st.shared.u32 	[%rd86], %r16116;
	st.shared.u32 	[%rd87], %r16117;
	st.shared.u32 	[%rd88], %r16118;
	st.shared.u32 	[%rd89], %r16119;
	add.s32 	%r16213, %r16213, -128;
	add.s64 	%rd94, %rd94, 16644;
	setp.eq.s32 	%p302, %r16213, 0;
	@%p302 bra 	LBB0_179;
	bra.uni 	LBB0_178;
LBB0_179:                               // %guard_pass22980
                                        //   in Loop: Header=BB0_177 Depth=1
	bar.sync 	0;
	ld.shared.u32 	%r16125, [%rd13];
	ld.shared.u32 	%r16126, [%rd14+128];
	ld.shared.u32 	%r16133, [%rd14+4];
	ld.shared.u32 	%r16134, [%rd14+132];
	ld.shared.u32 	%r16141, [%rd15];
	ld.shared.u32 	%r16142, [%rd16+128];
	ld.shared.u32 	%r16149, [%rd16+4];
	ld.shared.u32 	%r16150, [%rd16+132];
	// begin inline asm
	prmt.b32 %r16120, %r16125, %r16126, %r788;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16124, %r16125, %r16126, %r792;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16128, %r16133, %r16134, %r788;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16132, %r16133, %r16134, %r792;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16136, %r16141, %r16142, %r788;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16140, %r16141, %r16142, %r792;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16144, %r16149, %r16150, %r788;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16148, %r16149, %r16150, %r792;
	// end inline asm
	selp.b32 	%r16152, %r16124, %r16120, %p301;
	shfl.sync.bfly.b32	%r234, %r16152, 8, 31, -1;
	selp.b32 	%r16153, %r16132, %r16128, %p301;
	shfl.sync.bfly.b32	%r235, %r16153, 8, 31, -1;
	selp.b32 	%r16154, %r16140, %r16136, %p301;
	shfl.sync.bfly.b32	%r236, %r16154, 8, 31, -1;
	selp.b32 	%r16155, %r16148, %r16144, %p301;
	shfl.sync.bfly.b32	%r237, %r16155, 8, 31, -1;
	setp.lt.u32 	%p304, %r174, 384;
	@%p304 bra 	LBB0_181;
// %bb.180:                             // %L63134
                                        //   in Loop: Header=BB0_177 Depth=1
	selp.b32 	%r16156, %r237, %r16148, %p301;
	selp.b32 	%r16157, %r16144, %r237, %p301;
	selp.b32 	%r16158, %r236, %r16140, %p301;
	selp.b32 	%r16159, %r16136, %r236, %p301;
	selp.b32 	%r16160, %r235, %r16132, %p301;
	selp.b32 	%r16161, %r16128, %r235, %p301;
	selp.b32 	%r16162, %r234, %r16124, %p301;
	selp.b32 	%r16163, %r16120, %r234, %p301;
	shl.b32 	%r16164, %r174, 12;
	add.s32 	%r16165, %r148, %r16164;
	mul.wide.s32 	%rd90, %r16165, 4;
	add.s64 	%rd91, %rd3, %rd90;
	st.global.v4.u32 	[%rd91], {%r16163, %r16161, %r16162, %r16160};
	add.s32 	%r16166, %r149, %r16164;
	mul.wide.s32 	%rd92, %r16166, 4;
	add.s64 	%rd93, %rd3, %rd92;
	st.global.v4.u32 	[%rd93], {%r16159, %r16157, %r16158, %r16156};
	bra.uni 	LBB0_181;
LBB0_182:                               // %L63556
	st.global.u32 	[%rd4], %r15175;
	ret;
LBB0_1:                                 // %L8
	mov.u64 	%rd44, exception1;
	cvta.global.u64 	%rd45, %rd44;
	{ // callseq 0, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd45;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 0
	{ // callseq 1, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd35;
	st.param.b32 	[param0+8], %r238;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 1
	// begin inline asm
	exit;
	// end inline asm
	// begin inline asm
	exit;
	// end inline asm
LBB0_3:                                 // %L149
	mov.u32 	%r245, 2;
	st.global.u32 	[%rd4], %r245;
	mov.u64 	%rd47, exception5093;
	cvta.global.u64 	%rd48, %rd47;
	{ // callseq 2, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd48;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 2
	{ // callseq 3, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd35;
	st.param.b32 	[param0+8], %r238;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 3
	// begin inline asm
	exit;
	// end inline asm
	// begin inline asm
	exit;
	// end inline asm
                                        // -- End function
}
