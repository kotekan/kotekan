// PTX CompilerJob of MethodInstance for upchan(::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Float16x2, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int32, 1}) for sm_86, minthreads=512, blocks_per_sm=2

//
// Generated by LLVM NVPTX Back-End
//

.version 8.1
.target sm_86
.address_size 64

	// .globl	_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE // -- Begin function _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE
.func gpu_report_exception
(
	.param .b64 gpu_report_exception_param_0
)
.noreturn
{
	trap;
}
.func gpu_signal_exception
(
	.param .align 8 .b8 gpu_signal_exception_param_0[16]
)
.noreturn
{
	trap;
}
.extern .shared .align 32 .b8 shmem[];
.global .align 1 .b8 exception5097[6] = {101, 114, 114, 111, 114, 0};
.global .align 1 .b8 exception1[10] = {101, 120, 99, 101, 112, 116, 105, 111, 110, 0};
                                        // @_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE
.visible .entry _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE(
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_0[16],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_1[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_2[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_3[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_4[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_5[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_6[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_7[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_8[32]
)
.reqntid 512, 1, 1
.minnctapersm 2
{
	.reg .pred 	%p<338>;
	.reg .b16 	%rs<2390>;
	.reg .b32 	%r<16257>;
	.reg .f32 	%f<1394>;
	.reg .b64 	%rd<148>;
	.reg .f64 	%fd<23>;

// %bb.0:                               // %conversion
	ld.param.u32 	%r238, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_0+8];
	ld.param.u64 	%rd49, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_0];
	// begin inline asm
	mov.u32 %r239, %dynamic_smem_size;
	// end inline asm
	setp.gt.u32 	%p3, %r239, 66815;
	@%p3 bra 	LBB0_2;
	bra.uni 	LBB0_1;
LBB0_2:                                 // %L10
	ld.param.u64 	%rd66, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_8];
	ld.param.u64 	%rd50, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_1];
	mov.u32 	%r1, %tid.x;
	mov.u32 	%r2, %tid.y;
	shl.b32 	%r3, %r2, 5;
	mov.u32 	%r4, %ctaid.x;
	shl.b32 	%r240, %r4, 9;
	or.b32  	%r241, %r3, %r1;
	or.b32  	%r242, %r241, %r240;
	mul.wide.u32 	%rd72, %r242, 4;
	add.s64 	%rd4, %rd66, %rd72;
	mov.u32 	%r243, 1;
	st.global.u32 	[%rd4], %r243;
	ld.global.u32 	%r5, [%rd50];
	setp.lt.s32 	%p4, %r5, 0;
	@%p4 bra 	LBB0_7;
// %bb.3:                               // %L203
	ld.param.u64 	%rd54, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_2];
	ld.global.u32 	%r6, [%rd54];
	setp.lt.s32 	%p5, %r6, %r5;
	setp.gt.s32 	%p6, %r6, 262144;
	or.pred  	%p7, %p5, %p6;
	@%p7 bra 	LBB0_7;
// %bb.4:                               // %L213
	ld.param.u64 	%rd58, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_3];
	ld.global.u32 	%r7, [%rd58];
	sub.s32 	%r244, %r6, %r5;
	and.b32  	%r245, %r244, 255;
	setp.ne.s32 	%p8, %r245, 0;
	setp.lt.s32 	%p9, %r7, 0;
	or.pred  	%p10, %p8, %p9;
	@%p10 bra 	LBB0_7;
// %bb.5:                               // %L219
	ld.param.u64 	%rd62, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_4];
	ld.global.u32 	%r8, [%rd62];
	setp.lt.s32 	%p11, %r8, %r7;
	setp.gt.s32 	%p12, %r8, 2048;
	or.pred  	%p13, %p11, %p12;
	@%p13 bra 	LBB0_7;
// %bb.6:                               // %L229
	sub.s32 	%r246, %r8, %r7;
	and.b32  	%r247, %r246, 1;
	setp.eq.b32 	%p14, %r247, 1;
	mov.pred 	%p15, 0;
	xor.pred  	%p16, %p14, %p15;
	@%p16 bra 	LBB0_8;
	bra.uni 	LBB0_7;
LBB0_8:                                 // %pass81
	bfe.u32 	%r193, %r1, 1, 1;
	and.b32  	%r194, %r1, 1;
	bfe.u32 	%r196, %r1, 2, 1;
	shr.u32 	%r197, %r1, 4;
	shl.b32 	%r252, %r197, 2;
	shl.b32 	%r253, %r196, 3;
	shl.b32 	%r254, %r194, 4;
	shl.b32 	%r255, %r193, 5;
	or.b32  	%r256, %r254, %r255;
	or.b32  	%r257, %r253, %r256;
	or.b32  	%r258, %r252, %r257;
	bfe.u32 	%r199, %r1, 3, 1;
	shl.b32 	%r259, %r199, 1;
	or.b32  	%r200, %r259, %r258;
	or.b32  	%r201, %r200, 64;
	mov.f32 	%f255, 0f40000000;
	mov.f32 	%f256, 0f43FF8000;
	div.approx.f32 	%f251, %f256, %f255;
	cvt.rn.f32.s32 	%f257, %r200;
	sub.f32 	%f258, %f257, %f251;
	mov.f32 	%f287, 0f43000000;
	div.approx.f32 	%f253, %f258, %f287;
	setp.ne.f32 	%p22, %f253, 0f00000000;
	mov.f32 	%f1353, 0f3F800000;
	mov.f32 	%f1338, %f1353;
	@%p22 bra 	LBB0_9;
	bra.uni 	LBB0_10;
LBB0_9:                                 // %L687
	sin.approx.f32 	%f288, %f253;
	div.approx.f32 	%f1338, %f288, %f253;
LBB0_10:                                // %L690
	cvt.rn.f32.s32 	%f291, %r201;
	sub.f32 	%f292, %f291, %f251;
	div.approx.f32 	%f5, %f292, %f287;
	setp.eq.f32 	%p28, %f5, 0f00000000;
	mov.f32 	%f1339, %f1353;
	@%p28 bra 	LBB0_12;
// %bb.11:                              // %L707
	sin.approx.f32 	%f322, %f5;
	div.approx.f32 	%f1339, %f322, %f5;
LBB0_12:                                // %L710
	or.b32  	%r277, %r200, 1;
	or.b32  	%r10, %r200, 65;
	cvt.rn.f32.s32 	%f326, %r277;
	sub.f32 	%f327, %f326, %f251;
	div.approx.f32 	%f9, %f327, %f287;
	setp.eq.f32 	%p34, %f9, 0f00000000;
	mov.f32 	%f1340, %f1353;
	@%p34 bra 	LBB0_14;
// %bb.13:                              // %L789
	sin.approx.f32 	%f357, %f9;
	div.approx.f32 	%f1340, %f357, %f9;
LBB0_14:                                // %L792
	cvt.rn.f32.s32 	%f360, %r10;
	sub.f32 	%f361, %f360, %f251;
	div.approx.f32 	%f14, %f361, %f287;
	setp.eq.f32 	%p40, %f14, 0f00000000;
	mov.f32 	%f1341, %f1353;
	@%p40 bra 	LBB0_16;
// %bb.15:                              // %L809
	sin.approx.f32 	%f391, %f14;
	div.approx.f32 	%f1341, %f391, %f14;
LBB0_16:                                // %L812
	or.b32  	%r295, %r200, 128;
	or.b32  	%r12, %r200, 192;
	cvt.rn.f32.s32 	%f395, %r295;
	sub.f32 	%f396, %f395, %f251;
	div.approx.f32 	%f18, %f396, %f287;
	setp.eq.f32 	%p46, %f18, 0f00000000;
	mov.f32 	%f1342, %f1353;
	@%p46 bra 	LBB0_18;
// %bb.17:                              // %L891
	sin.approx.f32 	%f426, %f18;
	div.approx.f32 	%f1342, %f426, %f18;
LBB0_18:                                // %L894
	cvt.rn.f32.s32 	%f429, %r12;
	sub.f32 	%f430, %f429, %f251;
	div.approx.f32 	%f23, %f430, %f287;
	setp.eq.f32 	%p52, %f23, 0f00000000;
	mov.f32 	%f1343, %f1353;
	@%p52 bra 	LBB0_20;
// %bb.19:                              // %L911
	sin.approx.f32 	%f460, %f23;
	div.approx.f32 	%f1343, %f460, %f23;
LBB0_20:                                // %L914
	or.b32  	%r313, %r200, 129;
	or.b32  	%r14, %r200, 193;
	cvt.rn.f32.s32 	%f464, %r313;
	sub.f32 	%f465, %f464, %f251;
	div.approx.f32 	%f27, %f465, %f287;
	setp.eq.f32 	%p58, %f27, 0f00000000;
	mov.f32 	%f1344, %f1353;
	@%p58 bra 	LBB0_22;
// %bb.21:                              // %L993
	sin.approx.f32 	%f495, %f27;
	div.approx.f32 	%f1344, %f495, %f27;
LBB0_22:                                // %L996
	cvt.rn.f32.s32 	%f498, %r14;
	sub.f32 	%f499, %f498, %f251;
	div.approx.f32 	%f32, %f499, %f287;
	setp.eq.f32 	%p64, %f32, 0f00000000;
	mov.f32 	%f1345, %f1353;
	@%p64 bra 	LBB0_24;
// %bb.23:                              // %L1013
	sin.approx.f32 	%f529, %f32;
	div.approx.f32 	%f1345, %f529, %f32;
LBB0_24:                                // %L1016
	or.b32  	%r331, %r200, 256;
	or.b32  	%r16, %r200, 320;
	cvt.rn.f32.s32 	%f533, %r331;
	sub.f32 	%f534, %f533, %f251;
	div.approx.f32 	%f36, %f534, %f287;
	setp.eq.f32 	%p70, %f36, 0f00000000;
	mov.f32 	%f1346, %f1353;
	@%p70 bra 	LBB0_26;
// %bb.25:                              // %L1095
	sin.approx.f32 	%f564, %f36;
	div.approx.f32 	%f1346, %f564, %f36;
LBB0_26:                                // %L1098
	cvt.rn.f32.s32 	%f567, %r16;
	sub.f32 	%f568, %f567, %f251;
	div.approx.f32 	%f41, %f568, %f287;
	setp.eq.f32 	%p76, %f41, 0f00000000;
	mov.f32 	%f1347, %f1353;
	@%p76 bra 	LBB0_28;
// %bb.27:                              // %L1115
	sin.approx.f32 	%f598, %f41;
	div.approx.f32 	%f1347, %f598, %f41;
LBB0_28:                                // %L1118
	or.b32  	%r349, %r200, 257;
	or.b32  	%r18, %r200, 321;
	cvt.rn.f32.s32 	%f602, %r349;
	sub.f32 	%f603, %f602, %f251;
	div.approx.f32 	%f45, %f603, %f287;
	setp.eq.f32 	%p82, %f45, 0f00000000;
	mov.f32 	%f1348, %f1353;
	@%p82 bra 	LBB0_30;
// %bb.29:                              // %L1197
	sin.approx.f32 	%f633, %f45;
	div.approx.f32 	%f1348, %f633, %f45;
LBB0_30:                                // %L1200
	cvt.rn.f32.s32 	%f636, %r18;
	sub.f32 	%f637, %f636, %f251;
	div.approx.f32 	%f50, %f637, %f287;
	setp.eq.f32 	%p88, %f50, 0f00000000;
	mov.f32 	%f1349, %f1353;
	@%p88 bra 	LBB0_32;
// %bb.31:                              // %L1217
	sin.approx.f32 	%f667, %f50;
	div.approx.f32 	%f1349, %f667, %f50;
LBB0_32:                                // %L1220
	or.b32  	%r367, %r200, 384;
	or.b32  	%r20, %r200, 448;
	cvt.rn.f32.s32 	%f671, %r367;
	sub.f32 	%f672, %f671, %f251;
	div.approx.f32 	%f54, %f672, %f287;
	setp.eq.f32 	%p94, %f54, 0f00000000;
	mov.f32 	%f1350, %f1353;
	@%p94 bra 	LBB0_34;
// %bb.33:                              // %L1299
	sin.approx.f32 	%f702, %f54;
	div.approx.f32 	%f1350, %f702, %f54;
LBB0_34:                                // %L1302
	cvt.rn.f32.s32 	%f705, %r20;
	sub.f32 	%f706, %f705, %f251;
	div.approx.f32 	%f59, %f706, %f287;
	setp.eq.f32 	%p100, %f59, 0f00000000;
	mov.f32 	%f1351, %f1353;
	@%p100 bra 	LBB0_36;
// %bb.35:                              // %L1319
	sin.approx.f32 	%f736, %f59;
	div.approx.f32 	%f1351, %f736, %f59;
LBB0_36:                                // %L1322
	or.b32  	%r385, %r200, 385;
	or.b32  	%r22, %r200, 449;
	cvt.rn.f32.s32 	%f740, %r385;
	sub.f32 	%f741, %f740, %f251;
	div.approx.f32 	%f63, %f741, %f287;
	setp.eq.f32 	%p106, %f63, 0f00000000;
	mov.f32 	%f1352, %f1353;
	@%p106 bra 	LBB0_38;
// %bb.37:                              // %L1401
	sin.approx.f32 	%f771, %f63;
	div.approx.f32 	%f1352, %f771, %f63;
LBB0_38:                                // %L1404
	cvt.rn.f32.s32 	%f774, %r22;
	sub.f32 	%f775, %f774, %f251;
	div.approx.f32 	%f68, %f775, %f287;
	setp.eq.f32 	%p112, %f68, 0f00000000;
	@%p112 bra 	LBB0_40;
// %bb.39:                              // %L1421
	sin.approx.f32 	%f805, %f68;
	div.approx.f32 	%f1353, %f805, %f68;
LBB0_40:                                // %L1424
	mul.lo.s32 	%r24, %r200, 127;
	cvt.rn.f32.s32 	%f808, %r24;
	div.approx.f32 	%f71, %f808, %f287;
	abs.f32 	%f1356, %f71;
	setp.lt.f32 	%p113, %f1356, 0f40000000;
	@%p113 bra 	LBB0_52;
// %bb.41:
	setp.gtu.f32 	%p114, %f1356, 0f4B800000;
	@%p114 bra 	LBB0_48;
	bra.uni 	LBB0_42;
LBB0_48:
	mov.b32 	%r26, %f1356;
	and.b32  	%r403, %r26, 8388607;
	or.b32  	%r16186, %r403, 1065353216;
	mov.b32 	%f1355, %r16186;
	add.s32 	%r404, %r26, -1073741824;
	and.b32  	%r16187, %r404, -8388608;
	setp.eq.s32 	%p120, %r16187, 0;
	@%p120 bra 	LBB0_51;
// %bb.49:                              // %__nv_fmaf_rn.exit4.i.i.i.preheader
	mov.f32 	%f819, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f818,%f819;
	// end inline asm
LBB0_50:                                // %__nv_fmaf_rn.exit4.i.i.i
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r405, %r16187, 192937984;
	add.s32 	%r406, %r405, %r16186;
	mov.b32 	%f820, %r406;
	mul.f32 	%f821, %f818, %f820;
	sub.f32 	%f822, %f820, %f821;
	fma.rn.f32 	%f823, %f822, %f818, %f821;
	sub.f32 	%f824, %f820, %f823;
	fma.rz.f32 	%f825, %f824, %f818, %f823;
	cvt.rzi.f32.f32 	%f826, %f825;
	sub.f32 	%f1355, %f820, %f826;
	sub.s32 	%r16187, %r16187, %r405;
	mov.b32 	%r16186, %f1355;
	setp.ne.s32 	%p121, %r16187, 0;
	setp.ne.s32 	%p122, %r16186, 0;
	and.pred  	%p123, %p121, %p122;
	@%p123 bra 	LBB0_50;
LBB0_51:                                // %__internal_fmodf_slowpath_mod.exit.i.i
	setp.gt.u32 	%p124, %r26, 2139095039;
	selp.f32 	%f827, 0f7FFFFFFF, 0f4B800000, %p124;
	mul.f32 	%f828, %f1355, 0f34000000;
	mul.f32 	%f1356, %f827, %f828;
	bra.uni 	LBB0_52;
LBB0_42:                                // %__nv_fast_fdividef.exit.i.i.i
	div.approx.f32 	%f811, %f1356, %f255;
	cvt.rzi.f32.f32 	%f1354, %f811;
	fma.rn.f32 	%f74, %f1354, 0fC0000000, %f1356;
	mov.b32 	%r25, %f74;
	setp.lt.u32 	%p115, %r25, 1073741824;
	@%p115 bra 	LBB0_47;
// %bb.43:
	setp.lt.u32 	%p116, %r25, -2147483647;
	@%p116 bra 	LBB0_45;
// %bb.44:
	add.f32 	%f816, %f1354, 0fBF800000;
	setp.lt.f32 	%p119, %f74, 0fC0000000;
	add.f32 	%f817, %f816, 0fBF800000;
	selp.f32 	%f1354, %f817, %f816, %p119;
	bra.uni 	LBB0_47;
LBB0_45:
	add.f32 	%f1354, %f1354, 0f3F800000;
	setp.ltu.f32 	%p117, %f74, 0f40800000;
	@%p117 bra 	LBB0_47;
// %bb.46:                              // %__nv_fmaf_rn.exit.i.i.i
	add.f32 	%f812, %f1354, 0f3F800000;
	fma.rn.f32 	%f814, %f255, 0fC0400000, %f74;
	setp.ge.f32 	%p118, %f814, 0f00000000;
	add.f32 	%f815, %f812, 0f3F800000;
	selp.f32 	%f1354, %f815, %f812, %p118;
LBB0_47:                                // %__internal_fmodf_fastpath_quot.exit.i.i
	fma.rn.f32 	%f1356, %f1354, 0fC0000000, %f1356;
LBB0_52:                                // %__internal_fmodf_kernel.exit.i
	abs.f32 	%f829, %f1356;
	setp.gtu.f32 	%p125, %f829, 0f7F800000;
	@%p125 bra 	LBB0_54;
// %bb.53:
	mov.b32 	%r407, %f71;
	and.b32  	%r408, %r407, -2147483648;
	mov.b32 	%r409, %f1356;
	or.b32  	%r410, %r408, %r409;
	mov.b32 	%f1356, %r410;
LBB0_54:                                // %__nv_fmodf.exit
	add.s32 	%r419, %r24, 8128;
	cvt.rn.f32.s32 	%f860, %r419;
	div.approx.f32 	%f90, %f860, %f287;
	abs.f32 	%f1360, %f90;
	setp.lt.f32 	%p133, %f1360, 0f40000000;
	@%p133 bra 	LBB0_66;
// %bb.55:
	setp.gtu.f32 	%p134, %f1360, 0f4B800000;
	@%p134 bra 	LBB0_62;
	bra.uni 	LBB0_56;
LBB0_62:
	mov.b32 	%r34, %f1360;
	and.b32  	%r420, %r34, 8388607;
	or.b32  	%r16188, %r420, 1065353216;
	mov.b32 	%f1359, %r16188;
	add.s32 	%r421, %r34, -1073741824;
	and.b32  	%r16189, %r421, -8388608;
	setp.eq.s32 	%p140, %r16189, 0;
	@%p140 bra 	LBB0_65;
// %bb.63:                              // %__nv_fmaf_rn.exit4.i.i.i2256.preheader
	mov.f32 	%f871, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f870,%f871;
	// end inline asm
LBB0_64:                                // %__nv_fmaf_rn.exit4.i.i.i2256
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r422, %r16189, 192937984;
	add.s32 	%r423, %r422, %r16188;
	mov.b32 	%f872, %r423;
	mul.f32 	%f873, %f870, %f872;
	sub.f32 	%f874, %f872, %f873;
	fma.rn.f32 	%f875, %f874, %f870, %f873;
	sub.f32 	%f876, %f872, %f875;
	fma.rz.f32 	%f877, %f876, %f870, %f875;
	cvt.rzi.f32.f32 	%f878, %f877;
	sub.f32 	%f1359, %f872, %f878;
	sub.s32 	%r16189, %r16189, %r422;
	mov.b32 	%r16188, %f1359;
	setp.ne.s32 	%p141, %r16189, 0;
	setp.ne.s32 	%p142, %r16188, 0;
	and.pred  	%p143, %p141, %p142;
	@%p143 bra 	LBB0_64;
LBB0_65:                                // %__internal_fmodf_slowpath_mod.exit.i.i2258
	setp.gt.u32 	%p144, %r34, 2139095039;
	selp.f32 	%f879, 0f7FFFFFFF, 0f4B800000, %p144;
	mul.f32 	%f880, %f1359, 0f34000000;
	mul.f32 	%f1360, %f879, %f880;
	bra.uni 	LBB0_66;
LBB0_56:                                // %__nv_fast_fdividef.exit.i.i.i2228
	div.approx.f32 	%f863, %f1360, %f255;
	cvt.rzi.f32.f32 	%f1358, %f863;
	fma.rn.f32 	%f93, %f1358, 0fC0000000, %f1360;
	mov.b32 	%r33, %f93;
	setp.lt.u32 	%p135, %r33, 1073741824;
	@%p135 bra 	LBB0_61;
// %bb.57:
	setp.lt.u32 	%p136, %r33, -2147483647;
	@%p136 bra 	LBB0_59;
// %bb.58:
	add.f32 	%f868, %f1358, 0fBF800000;
	setp.lt.f32 	%p139, %f93, 0fC0000000;
	add.f32 	%f869, %f868, 0fBF800000;
	selp.f32 	%f1358, %f869, %f868, %p139;
	bra.uni 	LBB0_61;
LBB0_59:
	add.f32 	%f1358, %f1358, 0f3F800000;
	setp.ltu.f32 	%p137, %f93, 0f40800000;
	@%p137 bra 	LBB0_61;
// %bb.60:                              // %__nv_fmaf_rn.exit.i.i.i2233
	add.f32 	%f864, %f1358, 0f3F800000;
	fma.rn.f32 	%f866, %f255, 0fC0400000, %f93;
	setp.ge.f32 	%p138, %f866, 0f00000000;
	add.f32 	%f867, %f864, 0f3F800000;
	selp.f32 	%f1358, %f867, %f864, %p138;
LBB0_61:                                // %__internal_fmodf_fastpath_quot.exit.i.i2237
	fma.rn.f32 	%f1360, %f1358, 0fC0000000, %f1360;
LBB0_66:                                // %__internal_fmodf_kernel.exit.i2262
	shr.u32 	%r195, %r1, 2;
	abs.f32 	%f881, %f1360;
	setp.gtu.f32 	%p145, %f881, 0f7F800000;
	@%p145 bra 	LBB0_68;
// %bb.67:
	mov.b32 	%r424, %f90;
	and.b32  	%r425, %r424, -2147483648;
	mov.b32 	%r426, %f1360;
	or.b32  	%r427, %r425, %r426;
	mov.b32 	%f1360, %r427;
LBB0_68:                                // %__nv_fmodf.exit2263
	and.b32  	%r448, %r1, 3;
	mul.lo.s32 	%r449, %r448, %r195;
	shl.b32 	%r450, %r449, 1;
	neg.s32 	%r45, %r450;
	cvt.rn.f32.s32 	%f914, %r45;
	mov.f32 	%f915, 0f41000000;
	div.approx.f32 	%f107, %f914, %f915;
	abs.f32 	%f1364, %f107;
	setp.lt.f32 	%p153, %f1364, 0f40000000;
	@%p153 bra 	LBB0_80;
// %bb.69:
	setp.gtu.f32 	%p154, %f1364, 0f4B800000;
	@%p154 bra 	LBB0_76;
	bra.uni 	LBB0_70;
LBB0_76:
	mov.b32 	%r47, %f1364;
	and.b32  	%r451, %r47, 8388607;
	or.b32  	%r16190, %r451, 1065353216;
	mov.b32 	%f1363, %r16190;
	add.s32 	%r452, %r47, -1073741824;
	and.b32  	%r16191, %r452, -8388608;
	setp.eq.s32 	%p160, %r16191, 0;
	@%p160 bra 	LBB0_79;
// %bb.77:                              // %__nv_fmaf_rn.exit4.i.i.i2302.preheader
	mov.f32 	%f925, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f924,%f925;
	// end inline asm
LBB0_78:                                // %__nv_fmaf_rn.exit4.i.i.i2302
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r453, %r16191, 192937984;
	add.s32 	%r454, %r453, %r16190;
	mov.b32 	%f926, %r454;
	mul.f32 	%f927, %f924, %f926;
	sub.f32 	%f928, %f926, %f927;
	fma.rn.f32 	%f929, %f928, %f924, %f927;
	sub.f32 	%f930, %f926, %f929;
	fma.rz.f32 	%f931, %f930, %f924, %f929;
	cvt.rzi.f32.f32 	%f932, %f931;
	sub.f32 	%f1363, %f926, %f932;
	sub.s32 	%r16191, %r16191, %r453;
	mov.b32 	%r16190, %f1363;
	setp.ne.s32 	%p161, %r16191, 0;
	setp.ne.s32 	%p162, %r16190, 0;
	and.pred  	%p163, %p161, %p162;
	@%p163 bra 	LBB0_78;
LBB0_79:                                // %__internal_fmodf_slowpath_mod.exit.i.i2304
	setp.gt.u32 	%p164, %r47, 2139095039;
	selp.f32 	%f933, 0f7FFFFFFF, 0f4B800000, %p164;
	mul.f32 	%f934, %f1363, 0f34000000;
	mul.f32 	%f1364, %f933, %f934;
	bra.uni 	LBB0_80;
LBB0_70:                                // %__nv_fast_fdividef.exit.i.i.i2274
	div.approx.f32 	%f917, %f1364, %f255;
	cvt.rzi.f32.f32 	%f1362, %f917;
	fma.rn.f32 	%f110, %f1362, 0fC0000000, %f1364;
	mov.b32 	%r46, %f110;
	setp.lt.u32 	%p155, %r46, 1073741824;
	@%p155 bra 	LBB0_75;
// %bb.71:
	setp.lt.u32 	%p156, %r46, -2147483647;
	@%p156 bra 	LBB0_73;
// %bb.72:
	add.f32 	%f922, %f1362, 0fBF800000;
	setp.lt.f32 	%p159, %f110, 0fC0000000;
	add.f32 	%f923, %f922, 0fBF800000;
	selp.f32 	%f1362, %f923, %f922, %p159;
	bra.uni 	LBB0_75;
LBB0_73:
	add.f32 	%f1362, %f1362, 0f3F800000;
	setp.ltu.f32 	%p157, %f110, 0f40800000;
	@%p157 bra 	LBB0_75;
// %bb.74:                              // %__nv_fmaf_rn.exit.i.i.i2279
	add.f32 	%f918, %f1362, 0f3F800000;
	fma.rn.f32 	%f920, %f255, 0fC0400000, %f110;
	setp.ge.f32 	%p158, %f920, 0f00000000;
	add.f32 	%f921, %f918, 0f3F800000;
	selp.f32 	%f1362, %f921, %f918, %p158;
LBB0_75:                                // %__internal_fmodf_fastpath_quot.exit.i.i2283
	fma.rn.f32 	%f1364, %f1362, 0fC0000000, %f1364;
LBB0_80:                                // %__internal_fmodf_kernel.exit.i2308
	abs.f32 	%f935, %f1364;
	setp.gtu.f32 	%p165, %f935, 0f7F800000;
	@%p165 bra 	LBB0_82;
// %bb.81:
	mov.b32 	%r455, %f107;
	and.b32  	%r456, %r455, -2147483648;
	mov.b32 	%r457, %f1364;
	or.b32  	%r458, %r456, %r457;
	mov.b32 	%f1364, %r458;
LBB0_82:                                // %__nv_fmodf.exit2309
	shl.b32 	%r54, %r195, 3;
	sub.s32 	%r467, %r45, %r54;
	cvt.rn.f32.s32 	%f966, %r467;
	div.approx.f32 	%f126, %f966, %f915;
	abs.f32 	%f1368, %f126;
	setp.lt.f32 	%p173, %f1368, 0f40000000;
	@%p173 bra 	LBB0_94;
// %bb.83:
	setp.gtu.f32 	%p174, %f1368, 0f4B800000;
	@%p174 bra 	LBB0_90;
	bra.uni 	LBB0_84;
LBB0_90:
	mov.b32 	%r56, %f1368;
	and.b32  	%r468, %r56, 8388607;
	or.b32  	%r16192, %r468, 1065353216;
	mov.b32 	%f1367, %r16192;
	add.s32 	%r469, %r56, -1073741824;
	and.b32  	%r16193, %r469, -8388608;
	setp.eq.s32 	%p180, %r16193, 0;
	@%p180 bra 	LBB0_93;
// %bb.91:                              // %__nv_fmaf_rn.exit4.i.i.i2348.preheader
	mov.f32 	%f977, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f976,%f977;
	// end inline asm
LBB0_92:                                // %__nv_fmaf_rn.exit4.i.i.i2348
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r470, %r16193, 192937984;
	add.s32 	%r471, %r470, %r16192;
	mov.b32 	%f978, %r471;
	mul.f32 	%f979, %f976, %f978;
	sub.f32 	%f980, %f978, %f979;
	fma.rn.f32 	%f981, %f980, %f976, %f979;
	sub.f32 	%f982, %f978, %f981;
	fma.rz.f32 	%f983, %f982, %f976, %f981;
	cvt.rzi.f32.f32 	%f984, %f983;
	sub.f32 	%f1367, %f978, %f984;
	sub.s32 	%r16193, %r16193, %r470;
	mov.b32 	%r16192, %f1367;
	setp.ne.s32 	%p181, %r16193, 0;
	setp.ne.s32 	%p182, %r16192, 0;
	and.pred  	%p183, %p181, %p182;
	@%p183 bra 	LBB0_92;
LBB0_93:                                // %__internal_fmodf_slowpath_mod.exit.i.i2350
	setp.gt.u32 	%p184, %r56, 2139095039;
	selp.f32 	%f985, 0f7FFFFFFF, 0f4B800000, %p184;
	mul.f32 	%f986, %f1367, 0f34000000;
	mul.f32 	%f1368, %f985, %f986;
	bra.uni 	LBB0_94;
LBB0_84:                                // %__nv_fast_fdividef.exit.i.i.i2320
	div.approx.f32 	%f969, %f1368, %f255;
	cvt.rzi.f32.f32 	%f1366, %f969;
	fma.rn.f32 	%f129, %f1366, 0fC0000000, %f1368;
	mov.b32 	%r55, %f129;
	setp.lt.u32 	%p175, %r55, 1073741824;
	@%p175 bra 	LBB0_89;
// %bb.85:
	setp.lt.u32 	%p176, %r55, -2147483647;
	@%p176 bra 	LBB0_87;
// %bb.86:
	add.f32 	%f974, %f1366, 0fBF800000;
	setp.lt.f32 	%p179, %f129, 0fC0000000;
	add.f32 	%f975, %f974, 0fBF800000;
	selp.f32 	%f1366, %f975, %f974, %p179;
	bra.uni 	LBB0_89;
LBB0_87:
	add.f32 	%f1366, %f1366, 0f3F800000;
	setp.ltu.f32 	%p177, %f129, 0f40800000;
	@%p177 bra 	LBB0_89;
// %bb.88:                              // %__nv_fmaf_rn.exit.i.i.i2325
	add.f32 	%f970, %f1366, 0f3F800000;
	fma.rn.f32 	%f972, %f255, 0fC0400000, %f129;
	setp.ge.f32 	%p178, %f972, 0f00000000;
	add.f32 	%f973, %f970, 0f3F800000;
	selp.f32 	%f1366, %f973, %f970, %p178;
LBB0_89:                                // %__internal_fmodf_fastpath_quot.exit.i.i2329
	fma.rn.f32 	%f1368, %f1366, 0fC0000000, %f1368;
LBB0_94:                                // %__internal_fmodf_kernel.exit.i2354
	shl.b32 	%r183, %r1, 1;
	abs.f32 	%f987, %f1368;
	setp.gtu.f32 	%p185, %f987, 0f7F800000;
	@%p185 bra 	LBB0_96;
// %bb.95:
	mov.b32 	%r472, %f126;
	and.b32  	%r473, %r472, -2147483648;
	mov.b32 	%r474, %f1368;
	or.b32  	%r475, %r473, %r474;
	mov.b32 	%f1368, %r475;
LBB0_96:                                // %__nv_fmodf.exit2355
	and.b32  	%r496, %r183, 6;
	shl.b32 	%r497, %r496, 1;
	neg.s32 	%r67, %r497;
	mul.lo.s32 	%r68, %r67, %r195;
	cvt.rn.f32.s32 	%f1020, %r68;
	div.approx.f32 	%f143, %f1020, %f287;
	abs.f32 	%f1372, %f143;
	setp.lt.f32 	%p193, %f1372, 0f40000000;
	@%p193 bra 	LBB0_108;
// %bb.97:
	setp.gtu.f32 	%p194, %f1372, 0f4B800000;
	@%p194 bra 	LBB0_104;
	bra.uni 	LBB0_98;
LBB0_104:
	mov.b32 	%r70, %f1372;
	and.b32  	%r498, %r70, 8388607;
	or.b32  	%r16194, %r498, 1065353216;
	mov.b32 	%f1371, %r16194;
	add.s32 	%r499, %r70, -1073741824;
	and.b32  	%r16195, %r499, -8388608;
	setp.eq.s32 	%p200, %r16195, 0;
	@%p200 bra 	LBB0_107;
// %bb.105:                             // %__nv_fmaf_rn.exit4.i.i.i2394.preheader
	mov.f32 	%f1031, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1030,%f1031;
	// end inline asm
LBB0_106:                               // %__nv_fmaf_rn.exit4.i.i.i2394
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r500, %r16195, 192937984;
	add.s32 	%r501, %r500, %r16194;
	mov.b32 	%f1032, %r501;
	mul.f32 	%f1033, %f1030, %f1032;
	sub.f32 	%f1034, %f1032, %f1033;
	fma.rn.f32 	%f1035, %f1034, %f1030, %f1033;
	sub.f32 	%f1036, %f1032, %f1035;
	fma.rz.f32 	%f1037, %f1036, %f1030, %f1035;
	cvt.rzi.f32.f32 	%f1038, %f1037;
	sub.f32 	%f1371, %f1032, %f1038;
	sub.s32 	%r16195, %r16195, %r500;
	mov.b32 	%r16194, %f1371;
	setp.ne.s32 	%p201, %r16195, 0;
	setp.ne.s32 	%p202, %r16194, 0;
	and.pred  	%p203, %p201, %p202;
	@%p203 bra 	LBB0_106;
LBB0_107:                               // %__internal_fmodf_slowpath_mod.exit.i.i2396
	setp.gt.u32 	%p204, %r70, 2139095039;
	selp.f32 	%f1039, 0f7FFFFFFF, 0f4B800000, %p204;
	mul.f32 	%f1040, %f1371, 0f34000000;
	mul.f32 	%f1372, %f1039, %f1040;
	bra.uni 	LBB0_108;
LBB0_98:                                // %__nv_fast_fdividef.exit.i.i.i2366
	div.approx.f32 	%f1023, %f1372, %f255;
	cvt.rzi.f32.f32 	%f1370, %f1023;
	fma.rn.f32 	%f146, %f1370, 0fC0000000, %f1372;
	mov.b32 	%r69, %f146;
	setp.lt.u32 	%p195, %r69, 1073741824;
	@%p195 bra 	LBB0_103;
// %bb.99:
	setp.lt.u32 	%p196, %r69, -2147483647;
	@%p196 bra 	LBB0_101;
// %bb.100:
	add.f32 	%f1028, %f1370, 0fBF800000;
	setp.lt.f32 	%p199, %f146, 0fC0000000;
	add.f32 	%f1029, %f1028, 0fBF800000;
	selp.f32 	%f1370, %f1029, %f1028, %p199;
	bra.uni 	LBB0_103;
LBB0_101:
	add.f32 	%f1370, %f1370, 0f3F800000;
	setp.ltu.f32 	%p197, %f146, 0f40800000;
	@%p197 bra 	LBB0_103;
// %bb.102:                             // %__nv_fmaf_rn.exit.i.i.i2371
	add.f32 	%f1024, %f1370, 0f3F800000;
	fma.rn.f32 	%f1026, %f255, 0fC0400000, %f146;
	setp.ge.f32 	%p198, %f1026, 0f00000000;
	add.f32 	%f1027, %f1024, 0f3F800000;
	selp.f32 	%f1370, %f1027, %f1024, %p198;
LBB0_103:                               // %__internal_fmodf_fastpath_quot.exit.i.i2375
	fma.rn.f32 	%f1372, %f1370, 0fC0000000, %f1372;
LBB0_108:                               // %__internal_fmodf_kernel.exit.i2400
	abs.f32 	%f1041, %f1372;
	setp.gtu.f32 	%p205, %f1041, 0f7F800000;
	@%p205 bra 	LBB0_110;
// %bb.109:
	mov.b32 	%r502, %f143;
	and.b32  	%r503, %r502, -2147483648;
	mov.b32 	%r504, %f1372;
	or.b32  	%r505, %r503, %r504;
	mov.b32 	%f1372, %r505;
LBB0_110:                               // %__nv_fmodf.exit2401
	sub.s32 	%r514, %r68, %r54;
	cvt.rn.f32.s32 	%f1072, %r514;
	div.approx.f32 	%f162, %f1072, %f287;
	abs.f32 	%f1376, %f162;
	setp.lt.f32 	%p213, %f1376, 0f40000000;
	@%p213 bra 	LBB0_122;
// %bb.111:
	setp.gtu.f32 	%p214, %f1376, 0f4B800000;
	@%p214 bra 	LBB0_118;
	bra.uni 	LBB0_112;
LBB0_118:
	mov.b32 	%r78, %f1376;
	and.b32  	%r515, %r78, 8388607;
	or.b32  	%r16196, %r515, 1065353216;
	mov.b32 	%f1375, %r16196;
	add.s32 	%r516, %r78, -1073741824;
	and.b32  	%r16197, %r516, -8388608;
	setp.eq.s32 	%p220, %r16197, 0;
	@%p220 bra 	LBB0_121;
// %bb.119:                             // %__nv_fmaf_rn.exit4.i.i.i2440.preheader
	mov.f32 	%f1083, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1082,%f1083;
	// end inline asm
LBB0_120:                               // %__nv_fmaf_rn.exit4.i.i.i2440
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r517, %r16197, 192937984;
	add.s32 	%r518, %r517, %r16196;
	mov.b32 	%f1084, %r518;
	mul.f32 	%f1085, %f1082, %f1084;
	sub.f32 	%f1086, %f1084, %f1085;
	fma.rn.f32 	%f1087, %f1086, %f1082, %f1085;
	sub.f32 	%f1088, %f1084, %f1087;
	fma.rz.f32 	%f1089, %f1088, %f1082, %f1087;
	cvt.rzi.f32.f32 	%f1090, %f1089;
	sub.f32 	%f1375, %f1084, %f1090;
	sub.s32 	%r16197, %r16197, %r517;
	mov.b32 	%r16196, %f1375;
	setp.ne.s32 	%p221, %r16197, 0;
	setp.ne.s32 	%p222, %r16196, 0;
	and.pred  	%p223, %p221, %p222;
	@%p223 bra 	LBB0_120;
LBB0_121:                               // %__internal_fmodf_slowpath_mod.exit.i.i2442
	setp.gt.u32 	%p224, %r78, 2139095039;
	selp.f32 	%f1091, 0f7FFFFFFF, 0f4B800000, %p224;
	mul.f32 	%f1092, %f1375, 0f34000000;
	mul.f32 	%f1376, %f1091, %f1092;
	bra.uni 	LBB0_122;
LBB0_112:                               // %__nv_fast_fdividef.exit.i.i.i2412
	div.approx.f32 	%f1075, %f1376, %f255;
	cvt.rzi.f32.f32 	%f1374, %f1075;
	fma.rn.f32 	%f165, %f1374, 0fC0000000, %f1376;
	mov.b32 	%r77, %f165;
	setp.lt.u32 	%p215, %r77, 1073741824;
	@%p215 bra 	LBB0_117;
// %bb.113:
	setp.lt.u32 	%p216, %r77, -2147483647;
	@%p216 bra 	LBB0_115;
// %bb.114:
	add.f32 	%f1080, %f1374, 0fBF800000;
	setp.lt.f32 	%p219, %f165, 0fC0000000;
	add.f32 	%f1081, %f1080, 0fBF800000;
	selp.f32 	%f1374, %f1081, %f1080, %p219;
	bra.uni 	LBB0_117;
LBB0_115:
	add.f32 	%f1374, %f1374, 0f3F800000;
	setp.ltu.f32 	%p217, %f165, 0f40800000;
	@%p217 bra 	LBB0_117;
// %bb.116:                             // %__nv_fmaf_rn.exit.i.i.i2417
	add.f32 	%f1076, %f1374, 0f3F800000;
	fma.rn.f32 	%f1078, %f255, 0fC0400000, %f165;
	setp.ge.f32 	%p218, %f1078, 0f00000000;
	add.f32 	%f1079, %f1076, 0f3F800000;
	selp.f32 	%f1374, %f1079, %f1076, %p218;
LBB0_117:                               // %__internal_fmodf_fastpath_quot.exit.i.i2421
	fma.rn.f32 	%f1376, %f1374, 0fC0000000, %f1376;
LBB0_122:                               // %__internal_fmodf_kernel.exit.i2446
	shr.u32 	%r192, %r1, 1;
	shr.u32 	%r198, %r1, 3;
	abs.f32 	%f1093, %f1376;
	setp.gtu.f32 	%p225, %f1093, 0f7F800000;
	@%p225 bra 	LBB0_124;
// %bb.123:
	mov.b32 	%r519, %f162;
	and.b32  	%r520, %r519, -2147483648;
	mov.b32 	%r521, %f1376;
	or.b32  	%r522, %r520, %r521;
	mov.b32 	%f1376, %r522;
LBB0_124:                               // %__nv_fmodf.exit2447
	and.b32  	%r537, %r198, 2;
	and.b32  	%r538, %r192, 4;
	or.b32  	%r539, %r196, %r537;
	or.b32  	%r87, %r539, %r538;
	mul.lo.s32 	%r88, %r67, %r87;
	cvt.rn.f32.s32 	%f1126, %r88;
	mov.f32 	%f1127, 0f41800000;
	div.approx.f32 	%f179, %f1126, %f1127;
	abs.f32 	%f1380, %f179;
	setp.lt.f32 	%p233, %f1380, 0f40000000;
	@%p233 bra 	LBB0_136;
// %bb.125:
	setp.gtu.f32 	%p234, %f1380, 0f4B800000;
	@%p234 bra 	LBB0_132;
	bra.uni 	LBB0_126;
LBB0_132:
	mov.b32 	%r90, %f1380;
	and.b32  	%r540, %r90, 8388607;
	or.b32  	%r16198, %r540, 1065353216;
	mov.b32 	%f1379, %r16198;
	add.s32 	%r541, %r90, -1073741824;
	and.b32  	%r16199, %r541, -8388608;
	setp.eq.s32 	%p240, %r16199, 0;
	@%p240 bra 	LBB0_135;
// %bb.133:                             // %__nv_fmaf_rn.exit4.i.i.i2486.preheader
	mov.f32 	%f1137, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1136,%f1137;
	// end inline asm
LBB0_134:                               // %__nv_fmaf_rn.exit4.i.i.i2486
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r542, %r16199, 192937984;
	add.s32 	%r543, %r542, %r16198;
	mov.b32 	%f1138, %r543;
	mul.f32 	%f1139, %f1136, %f1138;
	sub.f32 	%f1140, %f1138, %f1139;
	fma.rn.f32 	%f1141, %f1140, %f1136, %f1139;
	sub.f32 	%f1142, %f1138, %f1141;
	fma.rz.f32 	%f1143, %f1142, %f1136, %f1141;
	cvt.rzi.f32.f32 	%f1144, %f1143;
	sub.f32 	%f1379, %f1138, %f1144;
	sub.s32 	%r16199, %r16199, %r542;
	mov.b32 	%r16198, %f1379;
	setp.ne.s32 	%p241, %r16199, 0;
	setp.ne.s32 	%p242, %r16198, 0;
	and.pred  	%p243, %p241, %p242;
	@%p243 bra 	LBB0_134;
LBB0_135:                               // %__internal_fmodf_slowpath_mod.exit.i.i2488
	setp.gt.u32 	%p244, %r90, 2139095039;
	selp.f32 	%f1145, 0f7FFFFFFF, 0f4B800000, %p244;
	mul.f32 	%f1146, %f1379, 0f34000000;
	mul.f32 	%f1380, %f1145, %f1146;
	bra.uni 	LBB0_136;
LBB0_126:                               // %__nv_fast_fdividef.exit.i.i.i2458
	div.approx.f32 	%f1129, %f1380, %f255;
	cvt.rzi.f32.f32 	%f1378, %f1129;
	fma.rn.f32 	%f182, %f1378, 0fC0000000, %f1380;
	mov.b32 	%r89, %f182;
	setp.lt.u32 	%p235, %r89, 1073741824;
	@%p235 bra 	LBB0_131;
// %bb.127:
	setp.lt.u32 	%p236, %r89, -2147483647;
	@%p236 bra 	LBB0_129;
// %bb.128:
	add.f32 	%f1134, %f1378, 0fBF800000;
	setp.lt.f32 	%p239, %f182, 0fC0000000;
	add.f32 	%f1135, %f1134, 0fBF800000;
	selp.f32 	%f1378, %f1135, %f1134, %p239;
	bra.uni 	LBB0_131;
LBB0_129:
	add.f32 	%f1378, %f1378, 0f3F800000;
	setp.ltu.f32 	%p237, %f182, 0f40800000;
	@%p237 bra 	LBB0_131;
// %bb.130:                             // %__nv_fmaf_rn.exit.i.i.i2463
	add.f32 	%f1130, %f1378, 0f3F800000;
	fma.rn.f32 	%f1132, %f255, 0fC0400000, %f182;
	setp.ge.f32 	%p238, %f1132, 0f00000000;
	add.f32 	%f1133, %f1130, 0f3F800000;
	selp.f32 	%f1378, %f1133, %f1130, %p238;
LBB0_131:                               // %__internal_fmodf_fastpath_quot.exit.i.i2467
	fma.rn.f32 	%f1380, %f1378, 0fC0000000, %f1380;
LBB0_136:                               // %__internal_fmodf_kernel.exit.i2492
	abs.f32 	%f1147, %f1380;
	setp.gtu.f32 	%p245, %f1147, 0f7F800000;
	@%p245 bra 	LBB0_138;
// %bb.137:
	mov.b32 	%r544, %f179;
	and.b32  	%r545, %r544, -2147483648;
	mov.b32 	%r546, %f1380;
	or.b32  	%r547, %r545, %r546;
	mov.b32 	%f1380, %r547;
LBB0_138:                               // %__nv_fmodf.exit2493
	shl.b32 	%r556, %r87, 3;
	sub.s32 	%r557, %r88, %r556;
	cvt.rn.f32.s32 	%f1178, %r557;
	div.approx.f32 	%f198, %f1178, %f1127;
	abs.f32 	%f1384, %f198;
	setp.lt.f32 	%p253, %f1384, 0f40000000;
	@%p253 bra 	LBB0_150;
// %bb.139:
	setp.gtu.f32 	%p254, %f1384, 0f4B800000;
	@%p254 bra 	LBB0_146;
	bra.uni 	LBB0_140;
LBB0_146:
	mov.b32 	%r98, %f1384;
	and.b32  	%r558, %r98, 8388607;
	or.b32  	%r16200, %r558, 1065353216;
	mov.b32 	%f1383, %r16200;
	add.s32 	%r559, %r98, -1073741824;
	and.b32  	%r16201, %r559, -8388608;
	setp.eq.s32 	%p260, %r16201, 0;
	@%p260 bra 	LBB0_149;
// %bb.147:                             // %__nv_fmaf_rn.exit4.i.i.i2532.preheader
	mov.f32 	%f1189, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1188,%f1189;
	// end inline asm
LBB0_148:                               // %__nv_fmaf_rn.exit4.i.i.i2532
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r560, %r16201, 192937984;
	add.s32 	%r561, %r560, %r16200;
	mov.b32 	%f1190, %r561;
	mul.f32 	%f1191, %f1188, %f1190;
	sub.f32 	%f1192, %f1190, %f1191;
	fma.rn.f32 	%f1193, %f1192, %f1188, %f1191;
	sub.f32 	%f1194, %f1190, %f1193;
	fma.rz.f32 	%f1195, %f1194, %f1188, %f1193;
	cvt.rzi.f32.f32 	%f1196, %f1195;
	sub.f32 	%f1383, %f1190, %f1196;
	sub.s32 	%r16201, %r16201, %r560;
	mov.b32 	%r16200, %f1383;
	setp.ne.s32 	%p261, %r16201, 0;
	setp.ne.s32 	%p262, %r16200, 0;
	and.pred  	%p263, %p261, %p262;
	@%p263 bra 	LBB0_148;
LBB0_149:                               // %__internal_fmodf_slowpath_mod.exit.i.i2534
	setp.gt.u32 	%p264, %r98, 2139095039;
	selp.f32 	%f1197, 0f7FFFFFFF, 0f4B800000, %p264;
	mul.f32 	%f1198, %f1383, 0f34000000;
	mul.f32 	%f1384, %f1197, %f1198;
	bra.uni 	LBB0_150;
LBB0_140:                               // %__nv_fast_fdividef.exit.i.i.i2504
	div.approx.f32 	%f1181, %f1384, %f255;
	cvt.rzi.f32.f32 	%f1382, %f1181;
	fma.rn.f32 	%f201, %f1382, 0fC0000000, %f1384;
	mov.b32 	%r97, %f201;
	setp.lt.u32 	%p255, %r97, 1073741824;
	@%p255 bra 	LBB0_145;
// %bb.141:
	setp.lt.u32 	%p256, %r97, -2147483647;
	@%p256 bra 	LBB0_143;
// %bb.142:
	add.f32 	%f1186, %f1382, 0fBF800000;
	setp.lt.f32 	%p259, %f201, 0fC0000000;
	add.f32 	%f1187, %f1186, 0fBF800000;
	selp.f32 	%f1382, %f1187, %f1186, %p259;
	bra.uni 	LBB0_145;
LBB0_143:
	add.f32 	%f1382, %f1382, 0f3F800000;
	setp.ltu.f32 	%p257, %f201, 0f40800000;
	@%p257 bra 	LBB0_145;
// %bb.144:                             // %__nv_fmaf_rn.exit.i.i.i2509
	add.f32 	%f1182, %f1382, 0f3F800000;
	fma.rn.f32 	%f1184, %f255, 0fC0400000, %f201;
	setp.ge.f32 	%p258, %f1184, 0f00000000;
	add.f32 	%f1185, %f1182, 0f3F800000;
	selp.f32 	%f1382, %f1185, %f1182, %p258;
LBB0_145:                               // %__internal_fmodf_fastpath_quot.exit.i.i2513
	fma.rn.f32 	%f1384, %f1382, 0fC0000000, %f1384;
LBB0_150:                               // %__internal_fmodf_kernel.exit.i2538
	and.b32  	%r188, %r1, 16;
	abs.f32 	%f1199, %f1384;
	setp.gtu.f32 	%p265, %f1199, 0f7F800000;
	@%p265 bra 	LBB0_152;
// %bb.151:
	mov.b32 	%r562, %f198;
	and.b32  	%r563, %r562, -2147483648;
	mov.b32 	%r564, %f1384;
	or.b32  	%r565, %r563, %r564;
	mov.b32 	%f1384, %r565;
LBB0_152:                               // %__nv_fmodf.exit2539
	cvt.u16.u32 	%rs1, %r1;
	shr.u16 	%rs2, %rs1, 8;
	shl.b16 	%rs3, %rs1, 8;
	or.b16  	%rs4, %rs3, %rs2;
	shl.b16 	%rs5, %rs4, 4;
	shr.u16 	%rs6, %rs4, 4;
	and.b16  	%rs7, %rs6, 3840;
	or.b16  	%rs8, %rs7, %rs5;
	and.b16  	%rs9, %rs8, 13107;
	shl.b16 	%rs10, %rs9, 2;
	shr.u16 	%rs11, %rs8, 2;
	and.b16  	%rs12, %rs11, 13107;
	or.b16  	%rs13, %rs12, %rs10;
	and.b16  	%rs14, %rs13, 20480;
	shl.b16 	%rs15, %rs14, 1;
	shr.u16 	%rs16, %rs13, 1;
	and.b16  	%rs17, %rs16, 16384;
	or.b16  	%rs18, %rs17, %rs15;
	shr.u16 	%rs19, %rs18, 13;
	add.s32 	%r587, %r253, %r188;
	neg.s32 	%r588, %r587;
	mad.lo.s32 	%r589, %r199, -32, %r588;
	or.b16  	%rs20, %rs19, 1;
	cvt.u32.u16 	%r590, %rs20;
	and.b16  	%rs21, %rs19, 6;
	cvt.u32.u16 	%r591, %rs21;
	sub.s32 	%r592, %r589, %r591;
	shl.b32 	%r593, %r592, 1;
	cvt.rn.f32.s32 	%f1232, %r593;
	div.approx.f32 	%f215, %f1232, %f287;
	abs.f32 	%f1388, %f215;
	setp.lt.f32 	%p273, %f1388, 0f40000000;
	@%p273 bra 	LBB0_164;
// %bb.153:
	setp.gtu.f32 	%p274, %f1388, 0f4B800000;
	@%p274 bra 	LBB0_160;
	bra.uni 	LBB0_154;
LBB0_160:
	mov.b32 	%r111, %f1388;
	and.b32  	%r594, %r111, 8388607;
	or.b32  	%r16202, %r594, 1065353216;
	mov.b32 	%f1387, %r16202;
	add.s32 	%r595, %r111, -1073741824;
	and.b32  	%r16203, %r595, -8388608;
	setp.eq.s32 	%p280, %r16203, 0;
	@%p280 bra 	LBB0_163;
// %bb.161:                             // %__nv_fmaf_rn.exit4.i.i.i2578.preheader
	mov.f32 	%f1243, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1242,%f1243;
	// end inline asm
LBB0_162:                               // %__nv_fmaf_rn.exit4.i.i.i2578
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r596, %r16203, 192937984;
	add.s32 	%r597, %r596, %r16202;
	mov.b32 	%f1244, %r597;
	mul.f32 	%f1245, %f1242, %f1244;
	sub.f32 	%f1246, %f1244, %f1245;
	fma.rn.f32 	%f1247, %f1246, %f1242, %f1245;
	sub.f32 	%f1248, %f1244, %f1247;
	fma.rz.f32 	%f1249, %f1248, %f1242, %f1247;
	cvt.rzi.f32.f32 	%f1250, %f1249;
	sub.f32 	%f1387, %f1244, %f1250;
	sub.s32 	%r16203, %r16203, %r596;
	mov.b32 	%r16202, %f1387;
	setp.ne.s32 	%p281, %r16203, 0;
	setp.ne.s32 	%p282, %r16202, 0;
	and.pred  	%p283, %p281, %p282;
	@%p283 bra 	LBB0_162;
LBB0_163:                               // %__internal_fmodf_slowpath_mod.exit.i.i2580
	setp.gt.u32 	%p284, %r111, 2139095039;
	selp.f32 	%f1251, 0f7FFFFFFF, 0f4B800000, %p284;
	mul.f32 	%f1252, %f1387, 0f34000000;
	mul.f32 	%f1388, %f1251, %f1252;
	bra.uni 	LBB0_164;
LBB0_154:                               // %__nv_fast_fdividef.exit.i.i.i2550
	div.approx.f32 	%f1235, %f1388, %f255;
	cvt.rzi.f32.f32 	%f1386, %f1235;
	fma.rn.f32 	%f218, %f1386, 0fC0000000, %f1388;
	mov.b32 	%r110, %f218;
	setp.lt.u32 	%p275, %r110, 1073741824;
	@%p275 bra 	LBB0_159;
// %bb.155:
	setp.lt.u32 	%p276, %r110, -2147483647;
	@%p276 bra 	LBB0_157;
// %bb.156:
	add.f32 	%f1240, %f1386, 0fBF800000;
	setp.lt.f32 	%p279, %f218, 0fC0000000;
	add.f32 	%f1241, %f1240, 0fBF800000;
	selp.f32 	%f1386, %f1241, %f1240, %p279;
	bra.uni 	LBB0_159;
LBB0_157:
	add.f32 	%f1386, %f1386, 0f3F800000;
	setp.ltu.f32 	%p277, %f218, 0f40800000;
	@%p277 bra 	LBB0_159;
// %bb.158:                             // %__nv_fmaf_rn.exit.i.i.i2555
	add.f32 	%f1236, %f1386, 0f3F800000;
	fma.rn.f32 	%f1238, %f255, 0fC0400000, %f218;
	setp.ge.f32 	%p278, %f1238, 0f00000000;
	add.f32 	%f1239, %f1236, 0f3F800000;
	selp.f32 	%f1386, %f1239, %f1236, %p278;
LBB0_159:                               // %__internal_fmodf_fastpath_quot.exit.i.i2559
	fma.rn.f32 	%f1388, %f1386, 0fC0000000, %f1388;
LBB0_164:                               // %__internal_fmodf_kernel.exit.i2584
	sub.s32 	%r109, %r589, %r590;
	abs.f32 	%f1253, %f1388;
	setp.gtu.f32 	%p285, %f1253, 0f7F800000;
	@%p285 bra 	LBB0_166;
// %bb.165:
	mov.b32 	%r598, %f215;
	and.b32  	%r599, %r598, -2147483648;
	mov.b32 	%r600, %f1388;
	or.b32  	%r601, %r599, %r600;
	mov.b32 	%f1388, %r601;
LBB0_166:                               // %__nv_fmodf.exit2585
	shl.b32 	%r610, %r109, 1;
	cvt.rn.f32.s32 	%f1284, %r610;
	div.approx.f32 	%f234, %f1284, %f287;
	abs.f32 	%f1392, %f234;
	setp.lt.f32 	%p293, %f1392, 0f40000000;
	@%p293 bra 	LBB0_178;
// %bb.167:
	setp.gtu.f32 	%p294, %f1392, 0f4B800000;
	@%p294 bra 	LBB0_174;
	bra.uni 	LBB0_168;
LBB0_174:
	mov.b32 	%r119, %f1392;
	and.b32  	%r611, %r119, 8388607;
	or.b32  	%r16204, %r611, 1065353216;
	mov.b32 	%f1391, %r16204;
	add.s32 	%r612, %r119, -1073741824;
	and.b32  	%r16205, %r612, -8388608;
	setp.eq.s32 	%p300, %r16205, 0;
	@%p300 bra 	LBB0_177;
// %bb.175:                             // %__nv_fmaf_rn.exit4.i.i.i2624.preheader
	mov.f32 	%f1295, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1294,%f1295;
	// end inline asm
LBB0_176:                               // %__nv_fmaf_rn.exit4.i.i.i2624
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r613, %r16205, 192937984;
	add.s32 	%r614, %r613, %r16204;
	mov.b32 	%f1296, %r614;
	mul.f32 	%f1297, %f1294, %f1296;
	sub.f32 	%f1298, %f1296, %f1297;
	fma.rn.f32 	%f1299, %f1298, %f1294, %f1297;
	sub.f32 	%f1300, %f1296, %f1299;
	fma.rz.f32 	%f1301, %f1300, %f1294, %f1299;
	cvt.rzi.f32.f32 	%f1302, %f1301;
	sub.f32 	%f1391, %f1296, %f1302;
	sub.s32 	%r16205, %r16205, %r613;
	mov.b32 	%r16204, %f1391;
	setp.ne.s32 	%p301, %r16205, 0;
	setp.ne.s32 	%p302, %r16204, 0;
	and.pred  	%p303, %p301, %p302;
	@%p303 bra 	LBB0_176;
LBB0_177:                               // %__internal_fmodf_slowpath_mod.exit.i.i2626
	setp.gt.u32 	%p304, %r119, 2139095039;
	selp.f32 	%f1303, 0f7FFFFFFF, 0f4B800000, %p304;
	mul.f32 	%f1304, %f1391, 0f34000000;
	mul.f32 	%f1392, %f1303, %f1304;
	bra.uni 	LBB0_178;
LBB0_168:                               // %__nv_fast_fdividef.exit.i.i.i2596
	div.approx.f32 	%f1287, %f1392, %f255;
	cvt.rzi.f32.f32 	%f1390, %f1287;
	fma.rn.f32 	%f237, %f1390, 0fC0000000, %f1392;
	mov.b32 	%r118, %f237;
	setp.lt.u32 	%p295, %r118, 1073741824;
	@%p295 bra 	LBB0_173;
// %bb.169:
	setp.lt.u32 	%p296, %r118, -2147483647;
	@%p296 bra 	LBB0_171;
// %bb.170:
	add.f32 	%f1292, %f1390, 0fBF800000;
	setp.lt.f32 	%p299, %f237, 0fC0000000;
	add.f32 	%f1293, %f1292, 0fBF800000;
	selp.f32 	%f1390, %f1293, %f1292, %p299;
	bra.uni 	LBB0_173;
LBB0_171:
	add.f32 	%f1390, %f1390, 0f3F800000;
	setp.ltu.f32 	%p297, %f237, 0f40800000;
	@%p297 bra 	LBB0_173;
// %bb.172:                             // %__nv_fmaf_rn.exit.i.i.i2601
	add.f32 	%f1288, %f1390, 0f3F800000;
	fma.rn.f32 	%f1290, %f255, 0fC0400000, %f237;
	setp.ge.f32 	%p298, %f1290, 0f00000000;
	add.f32 	%f1291, %f1288, 0f3F800000;
	selp.f32 	%f1390, %f1291, %f1288, %p298;
LBB0_173:                               // %__internal_fmodf_fastpath_quot.exit.i.i2605
	fma.rn.f32 	%f1392, %f1390, 0fC0000000, %f1392;
LBB0_178:                               // %__internal_fmodf_kernel.exit.i2630
	abs.f32 	%f1305, %f1392;
	setp.gtu.f32 	%p305, %f1305, 0f7F800000;
	@%p305 bra 	LBB0_180;
// %bb.179:
	mov.b32 	%r615, %f234;
	and.b32  	%r616, %r615, -2147483648;
	mov.b32 	%r617, %f1392;
	or.b32  	%r618, %r616, %r617;
	mov.b32 	%f1392, %r618;
LBB0_180:                               // %__nv_fmodf.exit2631
	setp.le.s32 	%p313, %r6, %r5;
	mov.u32 	%r16185, 0;
	@%p313 bra 	LBB0_191;
// %bb.181:                             // %oksrem532.lr.ph
	mov.f32 	%f259, 0f44004000;
	div.approx.f32 	%f260, %f258, %f259;
	div.approx.f32 	%f294, %f292, %f259;
	div.approx.f32 	%f329, %f327, %f259;
	div.approx.f32 	%f363, %f361, %f259;
	div.approx.f32 	%f398, %f396, %f259;
	div.approx.f32 	%f432, %f430, %f259;
	div.approx.f32 	%f467, %f465, %f259;
	div.approx.f32 	%f501, %f499, %f259;
	div.approx.f32 	%f536, %f534, %f259;
	div.approx.f32 	%f570, %f568, %f259;
	div.approx.f32 	%f605, %f603, %f259;
	div.approx.f32 	%f639, %f637, %f259;
	div.approx.f32 	%f674, %f672, %f259;
	div.approx.f32 	%f708, %f706, %f259;
	div.approx.f32 	%f743, %f741, %f259;
	div.approx.f32 	%f777, %f775, %f259;
	abs.f32 	%f261, %f260;
	abs.f32 	%f295, %f294;
	abs.f32 	%f330, %f329;
	abs.f32 	%f364, %f363;
	abs.f32 	%f399, %f398;
	abs.f32 	%f433, %f432;
	abs.f32 	%f468, %f467;
	abs.f32 	%f502, %f501;
	abs.f32 	%f537, %f536;
	abs.f32 	%f571, %f570;
	abs.f32 	%f606, %f605;
	abs.f32 	%f640, %f639;
	abs.f32 	%f675, %f674;
	abs.f32 	%f709, %f708;
	abs.f32 	%f744, %f743;
	abs.f32 	%f778, %f777;
	setp.gt.f32 	%p17, %f261, 0f4B800000;
	mul.f32 	%f262, %f260, 0f00000000;
	setp.gt.f32 	%p23, %f295, 0f4B800000;
	mul.f32 	%f296, %f294, 0f00000000;
	setp.gt.f32 	%p29, %f330, 0f4B800000;
	mul.f32 	%f331, %f329, 0f00000000;
	setp.gt.f32 	%p35, %f364, 0f4B800000;
	mul.f32 	%f365, %f363, 0f00000000;
	setp.gt.f32 	%p41, %f399, 0f4B800000;
	mul.f32 	%f400, %f398, 0f00000000;
	setp.gt.f32 	%p47, %f433, 0f4B800000;
	mul.f32 	%f434, %f432, 0f00000000;
	setp.gt.f32 	%p53, %f468, 0f4B800000;
	mul.f32 	%f469, %f467, 0f00000000;
	setp.gt.f32 	%p59, %f502, 0f4B800000;
	mul.f32 	%f503, %f501, 0f00000000;
	setp.gt.f32 	%p65, %f537, 0f4B800000;
	mul.f32 	%f538, %f536, 0f00000000;
	setp.gt.f32 	%p71, %f571, 0f4B800000;
	mul.f32 	%f572, %f570, 0f00000000;
	setp.gt.f32 	%p77, %f606, 0f4B800000;
	mul.f32 	%f607, %f605, 0f00000000;
	setp.gt.f32 	%p83, %f640, 0f4B800000;
	mul.f32 	%f641, %f639, 0f00000000;
	setp.gt.f32 	%p89, %f675, 0f4B800000;
	mul.f32 	%f676, %f674, 0f00000000;
	setp.gt.f32 	%p95, %f709, 0f4B800000;
	mul.f32 	%f710, %f708, 0f00000000;
	setp.gt.f32 	%p101, %f744, 0f4B800000;
	mul.f32 	%f745, %f743, 0f00000000;
	setp.gt.f32 	%p107, %f778, 0f4B800000;
	mul.f32 	%f779, %f777, 0f00000000;
	selp.f32 	%f263, %f262, %f260, %p17;
	selp.f32 	%f297, %f296, %f294, %p23;
	selp.f32 	%f332, %f331, %f329, %p29;
	selp.f32 	%f366, %f365, %f363, %p35;
	selp.f32 	%f401, %f400, %f398, %p41;
	selp.f32 	%f435, %f434, %f432, %p47;
	selp.f32 	%f470, %f469, %f467, %p53;
	selp.f32 	%f504, %f503, %f501, %p59;
	selp.f32 	%f539, %f538, %f536, %p65;
	selp.f32 	%f573, %f572, %f570, %p71;
	selp.f32 	%f608, %f607, %f605, %p77;
	selp.f32 	%f642, %f641, %f639, %p83;
	selp.f32 	%f677, %f676, %f674, %p89;
	selp.f32 	%f711, %f710, %f708, %p95;
	selp.f32 	%f746, %f745, %f743, %p101;
	selp.f32 	%f780, %f779, %f777, %p107;
	add.f32 	%f830, %f1356, %f1356;
	add.f32 	%f882, %f1360, %f1360;
	add.f32 	%f936, %f1364, %f1364;
	add.f32 	%f988, %f1368, %f1368;
	add.f32 	%f1148, %f1380, %f1380;
	add.f32 	%f1200, %f1384, %f1384;
	add.f32 	%f264, %f263, %f263;
	add.f32 	%f298, %f297, %f297;
	add.f32 	%f333, %f332, %f332;
	add.f32 	%f367, %f366, %f366;
	add.f32 	%f402, %f401, %f401;
	add.f32 	%f436, %f435, %f435;
	add.f32 	%f471, %f470, %f470;
	add.f32 	%f505, %f504, %f504;
	add.f32 	%f540, %f539, %f539;
	add.f32 	%f574, %f573, %f573;
	add.f32 	%f609, %f608, %f608;
	add.f32 	%f643, %f642, %f642;
	add.f32 	%f678, %f677, %f677;
	add.f32 	%f712, %f711, %f711;
	add.f32 	%f747, %f746, %f746;
	add.f32 	%f781, %f780, %f780;
	mov.b32 	%r411, %f830;
	mov.b32 	%r440, %f882;
	mov.b32 	%r459, %f936;
	mov.b32 	%r488, %f988;
	add.f32 	%f1042, %f1372, %f1372;
	add.f32 	%f1094, %f1376, %f1376;
	mov.b32 	%r548, %f1148;
	mov.b32 	%r578, %f1200;
	mov.b32 	%r260, %f264;
	mov.b32 	%r267, %f298;
	mov.b32 	%r278, %f333;
	mov.b32 	%r285, %f367;
	mov.b32 	%r296, %f402;
	mov.b32 	%r303, %f436;
	mov.b32 	%r314, %f471;
	mov.b32 	%r321, %f505;
	mov.b32 	%r332, %f540;
	mov.b32 	%r339, %f574;
	mov.b32 	%r350, %f609;
	mov.b32 	%r357, %f643;
	mov.b32 	%r368, %f678;
	mov.b32 	%r375, %f712;
	mov.b32 	%r386, %f747;
	mov.b32 	%r393, %f781;
	and.b32  	%r412, %r411, -2147483648;
	and.b32  	%r441, %r440, -2147483648;
	and.b32  	%r460, %r459, -2147483648;
	and.b32  	%r489, %r488, -2147483648;
	mov.b32 	%r506, %f1042;
	mov.b32 	%r529, %f1094;
	and.b32  	%r549, %r548, -2147483648;
	and.b32  	%r579, %r578, -2147483648;
	add.f32 	%f1254, %f1388, %f1388;
	and.b32  	%r261, %r260, -2147483648;
	and.b32  	%r268, %r267, -2147483648;
	and.b32  	%r279, %r278, -2147483648;
	and.b32  	%r286, %r285, -2147483648;
	and.b32  	%r297, %r296, -2147483648;
	and.b32  	%r304, %r303, -2147483648;
	and.b32  	%r315, %r314, -2147483648;
	and.b32  	%r322, %r321, -2147483648;
	and.b32  	%r333, %r332, -2147483648;
	and.b32  	%r340, %r339, -2147483648;
	and.b32  	%r351, %r350, -2147483648;
	and.b32  	%r358, %r357, -2147483648;
	and.b32  	%r369, %r368, -2147483648;
	and.b32  	%r376, %r375, -2147483648;
	and.b32  	%r387, %r386, -2147483648;
	and.b32  	%r394, %r393, -2147483648;
	or.b32  	%r413, %r412, 1056964608;
	or.b32  	%r442, %r441, 1056964608;
	or.b32  	%r461, %r460, 1056964608;
	or.b32  	%r490, %r489, 1056964608;
	and.b32  	%r507, %r506, -2147483648;
	and.b32  	%r530, %r529, -2147483648;
	or.b32  	%r550, %r549, 1056964608;
	or.b32  	%r580, %r579, 1056964608;
	mov.b32 	%r602, %f1254;
	or.b32  	%r262, %r261, 1056964608;
	or.b32  	%r269, %r268, 1056964608;
	or.b32  	%r280, %r279, 1056964608;
	or.b32  	%r287, %r286, 1056964608;
	or.b32  	%r298, %r297, 1056964608;
	or.b32  	%r305, %r304, 1056964608;
	or.b32  	%r316, %r315, 1056964608;
	or.b32  	%r323, %r322, 1056964608;
	or.b32  	%r334, %r333, 1056964608;
	or.b32  	%r341, %r340, 1056964608;
	or.b32  	%r352, %r351, 1056964608;
	or.b32  	%r359, %r358, 1056964608;
	or.b32  	%r370, %r369, 1056964608;
	or.b32  	%r377, %r376, 1056964608;
	or.b32  	%r388, %r387, 1056964608;
	or.b32  	%r395, %r394, 1056964608;
	mov.b32 	%f831, %r413;
	mov.b32 	%f883, %r442;
	mov.b32 	%f937, %r461;
	mov.b32 	%f989, %r490;
	or.b32  	%r508, %r507, 1056964608;
	or.b32  	%r531, %r530, 1056964608;
	mov.b32 	%f1149, %r550;
	mov.b32 	%f1201, %r580;
	and.b32  	%r603, %r602, -2147483648;
	mov.b32 	%f265, %r262;
	mov.b32 	%f299, %r269;
	mov.b32 	%f334, %r280;
	mov.b32 	%f368, %r287;
	mov.b32 	%f403, %r298;
	mov.b32 	%f437, %r305;
	mov.b32 	%f472, %r316;
	mov.b32 	%f506, %r323;
	mov.b32 	%f541, %r334;
	mov.b32 	%f575, %r341;
	mov.b32 	%f610, %r352;
	mov.b32 	%f644, %r359;
	mov.b32 	%f679, %r370;
	mov.b32 	%f713, %r377;
	mov.b32 	%f748, %r388;
	mov.b32 	%f782, %r395;
	add.f32 	%f832, %f830, %f831;
	abs.f32 	%f834, %f830;
	add.f32 	%f884, %f882, %f883;
	abs.f32 	%f886, %f882;
	add.f32 	%f938, %f936, %f937;
	abs.f32 	%f940, %f936;
	add.f32 	%f990, %f988, %f989;
	abs.f32 	%f992, %f988;
	mov.b32 	%f1043, %r508;
	mov.b32 	%f1095, %r531;
	add.f32 	%f1150, %f1148, %f1149;
	abs.f32 	%f1152, %f1148;
	add.f32 	%f1202, %f1200, %f1201;
	abs.f32 	%f1204, %f1200;
	or.b32  	%r604, %r603, 1056964608;
	add.f32 	%f266, %f264, %f265;
	abs.f32 	%f268, %f264;
	add.f32 	%f300, %f298, %f299;
	abs.f32 	%f302, %f298;
	add.f32 	%f335, %f333, %f334;
	abs.f32 	%f337, %f333;
	add.f32 	%f369, %f367, %f368;
	abs.f32 	%f371, %f367;
	add.f32 	%f404, %f402, %f403;
	abs.f32 	%f406, %f402;
	add.f32 	%f438, %f436, %f437;
	abs.f32 	%f440, %f436;
	add.f32 	%f473, %f471, %f472;
	abs.f32 	%f475, %f471;
	add.f32 	%f507, %f505, %f506;
	abs.f32 	%f509, %f505;
	add.f32 	%f542, %f540, %f541;
	abs.f32 	%f544, %f540;
	add.f32 	%f576, %f574, %f575;
	abs.f32 	%f578, %f574;
	add.f32 	%f611, %f609, %f610;
	abs.f32 	%f613, %f609;
	add.f32 	%f645, %f643, %f644;
	abs.f32 	%f647, %f643;
	add.f32 	%f680, %f678, %f679;
	abs.f32 	%f682, %f678;
	add.f32 	%f714, %f712, %f713;
	abs.f32 	%f716, %f712;
	add.f32 	%f749, %f747, %f748;
	abs.f32 	%f751, %f747;
	add.f32 	%f783, %f781, %f782;
	abs.f32 	%f785, %f781;
	cvt.rzi.f32.f32 	%f833, %f832;
	setp.gt.f32 	%p126, %f834, 0f4B000000;
	cvt.rzi.f32.f32 	%f885, %f884;
	setp.gt.f32 	%p146, %f886, 0f4B000000;
	cvt.rzi.f32.f32 	%f939, %f938;
	setp.gt.f32 	%p166, %f940, 0f4B000000;
	cvt.rzi.f32.f32 	%f991, %f990;
	setp.gt.f32 	%p186, %f992, 0f4B000000;
	add.f32 	%f1044, %f1042, %f1043;
	abs.f32 	%f1046, %f1042;
	add.f32 	%f1096, %f1094, %f1095;
	abs.f32 	%f1098, %f1094;
	cvt.rzi.f32.f32 	%f1151, %f1150;
	setp.gt.f32 	%p246, %f1152, 0f4B000000;
	cvt.rzi.f32.f32 	%f1203, %f1202;
	setp.gt.f32 	%p266, %f1204, 0f4B000000;
	mov.b32 	%f1255, %r604;
	cvt.rzi.f32.f32 	%f267, %f266;
	setp.gt.f32 	%p18, %f268, 0f4B000000;
	cvt.rzi.f32.f32 	%f301, %f300;
	setp.gt.f32 	%p24, %f302, 0f4B000000;
	cvt.rzi.f32.f32 	%f336, %f335;
	setp.gt.f32 	%p30, %f337, 0f4B000000;
	cvt.rzi.f32.f32 	%f370, %f369;
	setp.gt.f32 	%p36, %f371, 0f4B000000;
	cvt.rzi.f32.f32 	%f405, %f404;
	setp.gt.f32 	%p42, %f406, 0f4B000000;
	cvt.rzi.f32.f32 	%f439, %f438;
	setp.gt.f32 	%p48, %f440, 0f4B000000;
	cvt.rzi.f32.f32 	%f474, %f473;
	setp.gt.f32 	%p54, %f475, 0f4B000000;
	cvt.rzi.f32.f32 	%f508, %f507;
	setp.gt.f32 	%p60, %f509, 0f4B000000;
	cvt.rzi.f32.f32 	%f543, %f542;
	setp.gt.f32 	%p66, %f544, 0f4B000000;
	cvt.rzi.f32.f32 	%f577, %f576;
	setp.gt.f32 	%p72, %f578, 0f4B000000;
	cvt.rzi.f32.f32 	%f612, %f611;
	setp.gt.f32 	%p78, %f613, 0f4B000000;
	cvt.rzi.f32.f32 	%f646, %f645;
	setp.gt.f32 	%p84, %f647, 0f4B000000;
	cvt.rzi.f32.f32 	%f681, %f680;
	setp.gt.f32 	%p90, %f682, 0f4B000000;
	cvt.rzi.f32.f32 	%f715, %f714;
	setp.gt.f32 	%p96, %f716, 0f4B000000;
	cvt.rzi.f32.f32 	%f750, %f749;
	setp.gt.f32 	%p102, %f751, 0f4B000000;
	cvt.rzi.f32.f32 	%f784, %f783;
	setp.gt.f32 	%p108, %f785, 0f4B000000;
	selp.f32 	%f835, %f830, %f833, %p126;
	cvt.rzi.f32.f32 	%f836, %f830;
	setp.lt.f32 	%p127, %f834, 0f3F000000;
	selp.f32 	%f887, %f882, %f885, %p146;
	cvt.rzi.f32.f32 	%f888, %f882;
	setp.lt.f32 	%p147, %f886, 0f3F000000;
	selp.f32 	%f941, %f936, %f939, %p166;
	cvt.rzi.f32.f32 	%f942, %f936;
	setp.lt.f32 	%p167, %f940, 0f3F000000;
	selp.f32 	%f993, %f988, %f991, %p186;
	cvt.rzi.f32.f32 	%f994, %f988;
	setp.lt.f32 	%p187, %f992, 0f3F000000;
	cvt.rzi.f32.f32 	%f1045, %f1044;
	setp.gt.f32 	%p206, %f1046, 0f4B000000;
	cvt.rzi.f32.f32 	%f1097, %f1096;
	setp.gt.f32 	%p226, %f1098, 0f4B000000;
	selp.f32 	%f1153, %f1148, %f1151, %p246;
	cvt.rzi.f32.f32 	%f1154, %f1148;
	setp.lt.f32 	%p247, %f1152, 0f3F000000;
	selp.f32 	%f1205, %f1200, %f1203, %p266;
	cvt.rzi.f32.f32 	%f1206, %f1200;
	setp.lt.f32 	%p267, %f1204, 0f3F000000;
	add.f32 	%f1256, %f1254, %f1255;
	abs.f32 	%f1258, %f1254;
	selp.f32 	%f269, %f264, %f267, %p18;
	cvt.rzi.f32.f32 	%f270, %f264;
	setp.lt.f32 	%p19, %f268, 0f3F000000;
	selp.f32 	%f303, %f298, %f301, %p24;
	cvt.rzi.f32.f32 	%f304, %f298;
	setp.lt.f32 	%p25, %f302, 0f3F000000;
	selp.f32 	%f338, %f333, %f336, %p30;
	cvt.rzi.f32.f32 	%f339, %f333;
	setp.lt.f32 	%p31, %f337, 0f3F000000;
	selp.f32 	%f372, %f367, %f370, %p36;
	cvt.rzi.f32.f32 	%f373, %f367;
	setp.lt.f32 	%p37, %f371, 0f3F000000;
	selp.f32 	%f407, %f402, %f405, %p42;
	cvt.rzi.f32.f32 	%f408, %f402;
	setp.lt.f32 	%p43, %f406, 0f3F000000;
	selp.f32 	%f441, %f436, %f439, %p48;
	cvt.rzi.f32.f32 	%f442, %f436;
	setp.lt.f32 	%p49, %f440, 0f3F000000;
	selp.f32 	%f476, %f471, %f474, %p54;
	cvt.rzi.f32.f32 	%f477, %f471;
	setp.lt.f32 	%p55, %f475, 0f3F000000;
	selp.f32 	%f510, %f505, %f508, %p60;
	cvt.rzi.f32.f32 	%f511, %f505;
	setp.lt.f32 	%p61, %f509, 0f3F000000;
	selp.f32 	%f545, %f540, %f543, %p66;
	cvt.rzi.f32.f32 	%f546, %f540;
	setp.lt.f32 	%p67, %f544, 0f3F000000;
	selp.f32 	%f579, %f574, %f577, %p72;
	cvt.rzi.f32.f32 	%f580, %f574;
	setp.lt.f32 	%p73, %f578, 0f3F000000;
	selp.f32 	%f614, %f609, %f612, %p78;
	cvt.rzi.f32.f32 	%f615, %f609;
	setp.lt.f32 	%p79, %f613, 0f3F000000;
	selp.f32 	%f648, %f643, %f646, %p84;
	cvt.rzi.f32.f32 	%f649, %f643;
	setp.lt.f32 	%p85, %f647, 0f3F000000;
	selp.f32 	%f683, %f678, %f681, %p90;
	cvt.rzi.f32.f32 	%f684, %f678;
	setp.lt.f32 	%p91, %f682, 0f3F000000;
	selp.f32 	%f717, %f712, %f715, %p96;
	cvt.rzi.f32.f32 	%f718, %f712;
	setp.lt.f32 	%p97, %f716, 0f3F000000;
	selp.f32 	%f752, %f747, %f750, %p102;
	cvt.rzi.f32.f32 	%f753, %f747;
	setp.lt.f32 	%p103, %f751, 0f3F000000;
	selp.f32 	%f786, %f781, %f784, %p108;
	cvt.rzi.f32.f32 	%f787, %f781;
	setp.lt.f32 	%p109, %f785, 0f3F000000;
	selp.f32 	%f837, %f836, %f835, %p127;
	selp.f32 	%f889, %f888, %f887, %p147;
	selp.f32 	%f943, %f942, %f941, %p167;
	selp.f32 	%f995, %f994, %f993, %p187;
	selp.f32 	%f1047, %f1042, %f1045, %p206;
	cvt.rzi.f32.f32 	%f1048, %f1042;
	setp.lt.f32 	%p207, %f1046, 0f3F000000;
	selp.f32 	%f1099, %f1094, %f1097, %p226;
	cvt.rzi.f32.f32 	%f1100, %f1094;
	setp.lt.f32 	%p227, %f1098, 0f3F000000;
	selp.f32 	%f1155, %f1154, %f1153, %p247;
	selp.f32 	%f1207, %f1206, %f1205, %p267;
	cvt.rzi.f32.f32 	%f1257, %f1256;
	setp.gt.f32 	%p286, %f1258, 0f4B000000;
	selp.f32 	%f271, %f270, %f269, %p19;
	selp.f32 	%f305, %f304, %f303, %p25;
	selp.f32 	%f340, %f339, %f338, %p31;
	selp.f32 	%f374, %f373, %f372, %p37;
	selp.f32 	%f409, %f408, %f407, %p43;
	selp.f32 	%f443, %f442, %f441, %p49;
	selp.f32 	%f478, %f477, %f476, %p55;
	selp.f32 	%f512, %f511, %f510, %p61;
	selp.f32 	%f547, %f546, %f545, %p67;
	selp.f32 	%f581, %f580, %f579, %p73;
	selp.f32 	%f616, %f615, %f614, %p79;
	selp.f32 	%f650, %f649, %f648, %p85;
	selp.f32 	%f685, %f684, %f683, %p91;
	selp.f32 	%f719, %f718, %f717, %p97;
	selp.f32 	%f754, %f753, %f752, %p103;
	selp.f32 	%f788, %f787, %f786, %p109;
	fma.rn.f32 	%f838, %f837, 0fBF000000, %f1356;
	fma.rn.f32 	%f890, %f889, 0fBF000000, %f1360;
	fma.rn.f32 	%f944, %f943, 0fBF000000, %f1364;
	fma.rn.f32 	%f996, %f995, 0fBF000000, %f1368;
	selp.f32 	%f1049, %f1048, %f1047, %p207;
	selp.f32 	%f1101, %f1100, %f1099, %p227;
	fma.rn.f32 	%f1156, %f1155, 0fBF000000, %f1380;
	fma.rn.f32 	%f1208, %f1207, 0fBF000000, %f1384;
	selp.f32 	%f1259, %f1254, %f1257, %p286;
	cvt.rzi.f32.f32 	%f1260, %f1254;
	setp.lt.f32 	%p287, %f1258, 0f3F000000;
	fma.rn.f32 	%f272, %f271, 0fBF000000, %f263;
	fma.rn.f32 	%f306, %f305, 0fBF000000, %f297;
	fma.rn.f32 	%f341, %f340, 0fBF000000, %f332;
	fma.rn.f32 	%f375, %f374, 0fBF000000, %f366;
	fma.rn.f32 	%f410, %f409, 0fBF000000, %f401;
	fma.rn.f32 	%f444, %f443, 0fBF000000, %f435;
	fma.rn.f32 	%f479, %f478, 0fBF000000, %f470;
	fma.rn.f32 	%f513, %f512, 0fBF000000, %f504;
	fma.rn.f32 	%f548, %f547, 0fBF000000, %f539;
	fma.rn.f32 	%f582, %f581, 0fBF000000, %f573;
	fma.rn.f32 	%f617, %f616, 0fBF000000, %f608;
	fma.rn.f32 	%f651, %f650, 0fBF000000, %f642;
	fma.rn.f32 	%f686, %f685, 0fBF000000, %f677;
	fma.rn.f32 	%f720, %f719, 0fBF000000, %f711;
	fma.rn.f32 	%f755, %f754, 0fBF000000, %f746;
	fma.rn.f32 	%f789, %f788, 0fBF000000, %f780;
	mul.f32 	%f839, %f838, %f838;
	mul.f32 	%f891, %f890, %f890;
	mul.f32 	%f945, %f944, %f944;
	mul.f32 	%f997, %f996, %f996;
	fma.rn.f32 	%f1050, %f1049, 0fBF000000, %f1372;
	fma.rn.f32 	%f1102, %f1101, 0fBF000000, %f1376;
	mul.f32 	%f1157, %f1156, %f1156;
	mul.f32 	%f1209, %f1208, %f1208;
	selp.f32 	%f1261, %f1260, %f1259, %p287;
	mul.f32 	%f273, %f272, %f272;
	mul.f32 	%f307, %f306, %f306;
	mul.f32 	%f342, %f341, %f341;
	mul.f32 	%f376, %f375, %f375;
	mul.f32 	%f411, %f410, %f410;
	mul.f32 	%f445, %f444, %f444;
	mul.f32 	%f480, %f479, %f479;
	mul.f32 	%f514, %f513, %f513;
	mul.f32 	%f549, %f548, %f548;
	mul.f32 	%f583, %f582, %f582;
	mul.f32 	%f618, %f617, %f617;
	mul.f32 	%f652, %f651, %f651;
	mul.f32 	%f687, %f686, %f686;
	mul.f32 	%f721, %f720, %f720;
	mul.f32 	%f756, %f755, %f755;
	mul.f32 	%f790, %f789, %f789;
	fma.rn.f32 	%f840, %f839, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f841, %f839, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f892, %f891, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f893, %f891, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f946, %f945, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f947, %f945, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f998, %f997, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f999, %f997, 0f3E684E12, 0fBFAAD2E0;
	mul.f32 	%f1051, %f1050, %f1050;
	mul.f32 	%f1103, %f1102, %f1102;
	fma.rn.f32 	%f1158, %f1157, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1159, %f1157, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1210, %f1209, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1211, %f1209, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1262, %f1261, 0fBF000000, %f1388;
	cvt.rzi.s32.f32 	%r263, %f271;
	fma.rn.f32 	%f274, %f273, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f275, %f273, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r270, %f305;
	fma.rn.f32 	%f308, %f307, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f309, %f307, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r281, %f340;
	fma.rn.f32 	%f343, %f342, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f344, %f342, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r288, %f374;
	fma.rn.f32 	%f377, %f376, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f378, %f376, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r299, %f409;
	fma.rn.f32 	%f412, %f411, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f413, %f411, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r306, %f443;
	fma.rn.f32 	%f446, %f445, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f447, %f445, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r317, %f478;
	fma.rn.f32 	%f481, %f480, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f482, %f480, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r324, %f512;
	fma.rn.f32 	%f515, %f514, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f516, %f514, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r335, %f547;
	fma.rn.f32 	%f550, %f549, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f551, %f549, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r342, %f581;
	fma.rn.f32 	%f584, %f583, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f585, %f583, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r353, %f616;
	fma.rn.f32 	%f619, %f618, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f620, %f618, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r360, %f650;
	fma.rn.f32 	%f653, %f652, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f654, %f652, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r371, %f685;
	fma.rn.f32 	%f688, %f687, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f689, %f687, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r378, %f719;
	fma.rn.f32 	%f722, %f721, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f723, %f721, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r389, %f754;
	fma.rn.f32 	%f757, %f756, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f758, %f756, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r396, %f788;
	fma.rn.f32 	%f791, %f790, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f792, %f790, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r414, %f837;
	fma.rn.f32 	%f842, %f840, %f839, 0fC0A55DF6;
	fma.rn.f32 	%f843, %f841, %f839, 0f4081E0CF;
	fma.rn.f32 	%f844, %f839, %f838, 0f00000000;
	cvt.rzi.s32.f32 	%r443, %f889;
	fma.rn.f32 	%f894, %f892, %f891, 0fC0A55DF6;
	fma.rn.f32 	%f895, %f893, %f891, 0f4081E0CF;
	fma.rn.f32 	%f896, %f891, %f890, 0f00000000;
	cvt.rzi.s32.f32 	%r462, %f943;
	fma.rn.f32 	%f948, %f946, %f945, 0fC0A55DF6;
	fma.rn.f32 	%f949, %f947, %f945, 0f4081E0CF;
	fma.rn.f32 	%f950, %f945, %f944, 0f00000000;
	cvt.rzi.s32.f32 	%r491, %f995;
	fma.rn.f32 	%f1000, %f998, %f997, 0fC0A55DF6;
	fma.rn.f32 	%f1001, %f999, %f997, 0f4081E0CF;
	fma.rn.f32 	%f1002, %f997, %f996, 0f00000000;
	fma.rn.f32 	%f1052, %f1051, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1053, %f1051, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1104, %f1103, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1105, %f1103, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r551, %f1155;
	fma.rn.f32 	%f1160, %f1158, %f1157, 0fC0A55DF6;
	fma.rn.f32 	%f1161, %f1159, %f1157, 0f4081E0CF;
	fma.rn.f32 	%f1162, %f1157, %f1156, 0f00000000;
	cvt.rzi.s32.f32 	%r581, %f1207;
	fma.rn.f32 	%f1212, %f1210, %f1209, 0fC0A55DF6;
	fma.rn.f32 	%f1213, %f1211, %f1209, 0f4081E0CF;
	fma.rn.f32 	%f1214, %f1209, %f1208, 0f00000000;
	mul.f32 	%f1263, %f1262, %f1262;
	add.s32 	%r264, %r263, 1;
	fma.rn.f32 	%f276, %f274, %f273, 0fC0A55DF6;
	fma.rn.f32 	%f277, %f275, %f273, 0f4081E0CF;
	fma.rn.f32 	%f278, %f273, %f272, 0f00000000;
	add.s32 	%r271, %r270, 1;
	fma.rn.f32 	%f310, %f308, %f307, 0fC0A55DF6;
	fma.rn.f32 	%f311, %f309, %f307, 0f4081E0CF;
	fma.rn.f32 	%f312, %f307, %f306, 0f00000000;
	add.s32 	%r282, %r281, 1;
	fma.rn.f32 	%f345, %f343, %f342, 0fC0A55DF6;
	fma.rn.f32 	%f346, %f344, %f342, 0f4081E0CF;
	fma.rn.f32 	%f347, %f342, %f341, 0f00000000;
	add.s32 	%r289, %r288, 1;
	fma.rn.f32 	%f379, %f377, %f376, 0fC0A55DF6;
	fma.rn.f32 	%f380, %f378, %f376, 0f4081E0CF;
	fma.rn.f32 	%f381, %f376, %f375, 0f00000000;
	add.s32 	%r300, %r299, 1;
	fma.rn.f32 	%f414, %f412, %f411, 0fC0A55DF6;
	fma.rn.f32 	%f415, %f413, %f411, 0f4081E0CF;
	fma.rn.f32 	%f416, %f411, %f410, 0f00000000;
	add.s32 	%r307, %r306, 1;
	fma.rn.f32 	%f448, %f446, %f445, 0fC0A55DF6;
	fma.rn.f32 	%f449, %f447, %f445, 0f4081E0CF;
	fma.rn.f32 	%f450, %f445, %f444, 0f00000000;
	add.s32 	%r318, %r317, 1;
	fma.rn.f32 	%f483, %f481, %f480, 0fC0A55DF6;
	fma.rn.f32 	%f484, %f482, %f480, 0f4081E0CF;
	fma.rn.f32 	%f485, %f480, %f479, 0f00000000;
	add.s32 	%r325, %r324, 1;
	fma.rn.f32 	%f517, %f515, %f514, 0fC0A55DF6;
	fma.rn.f32 	%f518, %f516, %f514, 0f4081E0CF;
	fma.rn.f32 	%f519, %f514, %f513, 0f00000000;
	add.s32 	%r336, %r335, 1;
	fma.rn.f32 	%f552, %f550, %f549, 0fC0A55DF6;
	fma.rn.f32 	%f553, %f551, %f549, 0f4081E0CF;
	fma.rn.f32 	%f554, %f549, %f548, 0f00000000;
	add.s32 	%r343, %r342, 1;
	fma.rn.f32 	%f586, %f584, %f583, 0fC0A55DF6;
	fma.rn.f32 	%f587, %f585, %f583, 0f4081E0CF;
	fma.rn.f32 	%f588, %f583, %f582, 0f00000000;
	add.s32 	%r354, %r353, 1;
	fma.rn.f32 	%f621, %f619, %f618, 0fC0A55DF6;
	fma.rn.f32 	%f622, %f620, %f618, 0f4081E0CF;
	fma.rn.f32 	%f623, %f618, %f617, 0f00000000;
	add.s32 	%r361, %r360, 1;
	fma.rn.f32 	%f655, %f653, %f652, 0fC0A55DF6;
	fma.rn.f32 	%f656, %f654, %f652, 0f4081E0CF;
	fma.rn.f32 	%f657, %f652, %f651, 0f00000000;
	add.s32 	%r372, %r371, 1;
	fma.rn.f32 	%f690, %f688, %f687, 0fC0A55DF6;
	fma.rn.f32 	%f691, %f689, %f687, 0f4081E0CF;
	fma.rn.f32 	%f692, %f687, %f686, 0f00000000;
	add.s32 	%r379, %r378, 1;
	fma.rn.f32 	%f724, %f722, %f721, 0fC0A55DF6;
	fma.rn.f32 	%f725, %f723, %f721, 0f4081E0CF;
	fma.rn.f32 	%f726, %f721, %f720, 0f00000000;
	add.s32 	%r390, %r389, 1;
	fma.rn.f32 	%f759, %f757, %f756, 0fC0A55DF6;
	fma.rn.f32 	%f760, %f758, %f756, 0f4081E0CF;
	fma.rn.f32 	%f761, %f756, %f755, 0f00000000;
	add.s32 	%r397, %r396, 1;
	fma.rn.f32 	%f793, %f791, %f790, 0fC0A55DF6;
	fma.rn.f32 	%f794, %f792, %f790, 0f4081E0CF;
	fma.rn.f32 	%f795, %f790, %f789, 0f00000000;
	fma.rn.f32 	%f845, %f843, %f839, 0fC09DE9E6;
	fma.rn.f32 	%f846, %f842, %f844, 0f00000000;
	and.b32  	%r415, %r414, 1;
	fma.rn.f32 	%f897, %f895, %f891, 0fC09DE9E6;
	fma.rn.f32 	%f898, %f894, %f896, 0f00000000;
	and.b32  	%r444, %r443, 1;
	fma.rn.f32 	%f951, %f949, %f945, 0fC09DE9E6;
	fma.rn.f32 	%f952, %f948, %f950, 0f00000000;
	and.b32  	%r463, %r462, 1;
	fma.rn.f32 	%f1003, %f1001, %f997, 0fC09DE9E6;
	fma.rn.f32 	%f1004, %f1000, %f1002, 0f00000000;
	and.b32  	%r492, %r491, 1;
	cvt.rzi.s32.f32 	%r509, %f1049;
	fma.rn.f32 	%f1054, %f1052, %f1051, 0fC0A55DF6;
	fma.rn.f32 	%f1055, %f1053, %f1051, 0f4081E0CF;
	fma.rn.f32 	%f1056, %f1051, %f1050, 0f00000000;
	cvt.rzi.s32.f32 	%r532, %f1101;
	fma.rn.f32 	%f1106, %f1104, %f1103, 0fC0A55DF6;
	fma.rn.f32 	%f1107, %f1105, %f1103, 0f4081E0CF;
	fma.rn.f32 	%f1108, %f1103, %f1102, 0f00000000;
	fma.rn.f32 	%f1163, %f1161, %f1157, 0fC09DE9E6;
	fma.rn.f32 	%f1164, %f1160, %f1162, 0f00000000;
	and.b32  	%r552, %r551, 1;
	fma.rn.f32 	%f1215, %f1213, %f1209, 0fC09DE9E6;
	fma.rn.f32 	%f1216, %f1212, %f1214, 0f00000000;
	and.b32  	%r582, %r581, 1;
	fma.rn.f32 	%f1264, %f1263, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1265, %f1263, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f279, %f277, %f273, 0fC09DE9E6;
	fma.rn.f32 	%f280, %f276, %f278, 0f00000000;
	and.b32  	%r265, %r264, 1;
	fma.rn.f32 	%f313, %f311, %f307, 0fC09DE9E6;
	fma.rn.f32 	%f314, %f310, %f312, 0f00000000;
	and.b32  	%r272, %r271, 1;
	fma.rn.f32 	%f348, %f346, %f342, 0fC09DE9E6;
	fma.rn.f32 	%f349, %f345, %f347, 0f00000000;
	and.b32  	%r283, %r282, 1;
	fma.rn.f32 	%f382, %f380, %f376, 0fC09DE9E6;
	fma.rn.f32 	%f383, %f379, %f381, 0f00000000;
	and.b32  	%r290, %r289, 1;
	fma.rn.f32 	%f417, %f415, %f411, 0fC09DE9E6;
	fma.rn.f32 	%f418, %f414, %f416, 0f00000000;
	and.b32  	%r301, %r300, 1;
	fma.rn.f32 	%f451, %f449, %f445, 0fC09DE9E6;
	fma.rn.f32 	%f452, %f448, %f450, 0f00000000;
	and.b32  	%r308, %r307, 1;
	fma.rn.f32 	%f486, %f484, %f480, 0fC09DE9E6;
	fma.rn.f32 	%f487, %f483, %f485, 0f00000000;
	and.b32  	%r319, %r318, 1;
	fma.rn.f32 	%f520, %f518, %f514, 0fC09DE9E6;
	fma.rn.f32 	%f521, %f517, %f519, 0f00000000;
	and.b32  	%r326, %r325, 1;
	fma.rn.f32 	%f555, %f553, %f549, 0fC09DE9E6;
	fma.rn.f32 	%f556, %f552, %f554, 0f00000000;
	and.b32  	%r337, %r336, 1;
	fma.rn.f32 	%f589, %f587, %f583, 0fC09DE9E6;
	fma.rn.f32 	%f590, %f586, %f588, 0f00000000;
	and.b32  	%r344, %r343, 1;
	fma.rn.f32 	%f624, %f622, %f618, 0fC09DE9E6;
	fma.rn.f32 	%f625, %f621, %f623, 0f00000000;
	and.b32  	%r355, %r354, 1;
	fma.rn.f32 	%f658, %f656, %f652, 0fC09DE9E6;
	fma.rn.f32 	%f659, %f655, %f657, 0f00000000;
	and.b32  	%r362, %r361, 1;
	fma.rn.f32 	%f693, %f691, %f687, 0fC09DE9E6;
	fma.rn.f32 	%f694, %f690, %f692, 0f00000000;
	and.b32  	%r373, %r372, 1;
	fma.rn.f32 	%f727, %f725, %f721, 0fC09DE9E6;
	fma.rn.f32 	%f728, %f724, %f726, 0f00000000;
	and.b32  	%r380, %r379, 1;
	fma.rn.f32 	%f762, %f760, %f756, 0fC09DE9E6;
	fma.rn.f32 	%f763, %f759, %f761, 0f00000000;
	and.b32  	%r391, %r390, 1;
	fma.rn.f32 	%f796, %f794, %f790, 0fC09DE9E6;
	fma.rn.f32 	%f797, %f793, %f795, 0f00000000;
	and.b32  	%r398, %r397, 1;
	fma.rn.f32 	%f847, %f845, %f839, 0f3F800000;
	fma.rn.f32 	%f848, %f838, 0f40490FDB, %f846;
	setp.eq.b32 	%p128, %r415, 1;
	fma.rn.f32 	%f899, %f897, %f891, 0f3F800000;
	fma.rn.f32 	%f900, %f890, 0f40490FDB, %f898;
	setp.eq.b32 	%p148, %r444, 1;
	fma.rn.f32 	%f953, %f951, %f945, 0f3F800000;
	fma.rn.f32 	%f954, %f944, 0f40490FDB, %f952;
	setp.eq.b32 	%p168, %r463, 1;
	fma.rn.f32 	%f1005, %f1003, %f997, 0f3F800000;
	fma.rn.f32 	%f1006, %f996, 0f40490FDB, %f1004;
	setp.eq.b32 	%p188, %r492, 1;
	fma.rn.f32 	%f1057, %f1055, %f1051, 0fC09DE9E6;
	fma.rn.f32 	%f1058, %f1054, %f1056, 0f00000000;
	and.b32  	%r510, %r509, 1;
	fma.rn.f32 	%f1109, %f1107, %f1103, 0fC09DE9E6;
	fma.rn.f32 	%f1110, %f1106, %f1108, 0f00000000;
	and.b32  	%r533, %r532, 1;
	fma.rn.f32 	%f1165, %f1163, %f1157, 0f3F800000;
	fma.rn.f32 	%f1166, %f1156, 0f40490FDB, %f1164;
	setp.eq.b32 	%p248, %r552, 1;
	fma.rn.f32 	%f1217, %f1215, %f1209, 0f3F800000;
	fma.rn.f32 	%f1218, %f1208, 0f40490FDB, %f1216;
	setp.eq.b32 	%p268, %r582, 1;
	cvt.rzi.s32.f32 	%r605, %f1261;
	fma.rn.f32 	%f1266, %f1264, %f1263, 0fC0A55DF6;
	fma.rn.f32 	%f1267, %f1265, %f1263, 0f4081E0CF;
	fma.rn.f32 	%f1268, %f1263, %f1262, 0f00000000;
	and.b32  	%r184, %r183, 8;
	shl.b32 	%r185, %r1, 2;
	and.b32  	%r189, %r1, 18;
	fma.rn.f32 	%f281, %f279, %f273, 0f3F800000;
	fma.rn.f32 	%f282, %f272, 0f40490FDB, %f280;
	setp.eq.b32 	%p20, %r265, 1;
	fma.rn.f32 	%f315, %f313, %f307, 0f3F800000;
	fma.rn.f32 	%f316, %f306, 0f40490FDB, %f314;
	setp.eq.b32 	%p26, %r272, 1;
	fma.rn.f32 	%f350, %f348, %f342, 0f3F800000;
	fma.rn.f32 	%f351, %f341, 0f40490FDB, %f349;
	setp.eq.b32 	%p32, %r283, 1;
	fma.rn.f32 	%f384, %f382, %f376, 0f3F800000;
	fma.rn.f32 	%f385, %f375, 0f40490FDB, %f383;
	setp.eq.b32 	%p38, %r290, 1;
	fma.rn.f32 	%f419, %f417, %f411, 0f3F800000;
	fma.rn.f32 	%f420, %f410, 0f40490FDB, %f418;
	setp.eq.b32 	%p44, %r301, 1;
	fma.rn.f32 	%f453, %f451, %f445, 0f3F800000;
	fma.rn.f32 	%f454, %f444, 0f40490FDB, %f452;
	setp.eq.b32 	%p50, %r308, 1;
	fma.rn.f32 	%f488, %f486, %f480, 0f3F800000;
	fma.rn.f32 	%f489, %f479, 0f40490FDB, %f487;
	setp.eq.b32 	%p56, %r319, 1;
	fma.rn.f32 	%f522, %f520, %f514, 0f3F800000;
	fma.rn.f32 	%f523, %f513, 0f40490FDB, %f521;
	setp.eq.b32 	%p62, %r326, 1;
	fma.rn.f32 	%f557, %f555, %f549, 0f3F800000;
	fma.rn.f32 	%f558, %f548, 0f40490FDB, %f556;
	setp.eq.b32 	%p68, %r337, 1;
	fma.rn.f32 	%f591, %f589, %f583, 0f3F800000;
	fma.rn.f32 	%f592, %f582, 0f40490FDB, %f590;
	setp.eq.b32 	%p74, %r344, 1;
	fma.rn.f32 	%f626, %f624, %f618, 0f3F800000;
	fma.rn.f32 	%f627, %f617, 0f40490FDB, %f625;
	setp.eq.b32 	%p80, %r355, 1;
	fma.rn.f32 	%f660, %f658, %f652, 0f3F800000;
	fma.rn.f32 	%f661, %f651, 0f40490FDB, %f659;
	setp.eq.b32 	%p86, %r362, 1;
	fma.rn.f32 	%f695, %f693, %f687, 0f3F800000;
	fma.rn.f32 	%f696, %f686, 0f40490FDB, %f694;
	setp.eq.b32 	%p92, %r373, 1;
	fma.rn.f32 	%f729, %f727, %f721, 0f3F800000;
	fma.rn.f32 	%f730, %f720, 0f40490FDB, %f728;
	setp.eq.b32 	%p98, %r380, 1;
	fma.rn.f32 	%f764, %f762, %f756, 0f3F800000;
	fma.rn.f32 	%f765, %f755, 0f40490FDB, %f763;
	setp.eq.b32 	%p104, %r391, 1;
	fma.rn.f32 	%f798, %f796, %f790, 0f3F800000;
	fma.rn.f32 	%f799, %f789, 0f40490FDB, %f797;
	setp.eq.b32 	%p110, %r398, 1;
	selp.f32 	%f849, %f847, %f848, %p128;
	and.b32  	%r416, %r414, 2;
	selp.f32 	%f901, %f899, %f900, %p148;
	and.b32  	%r445, %r443, 2;
	selp.f32 	%f955, %f953, %f954, %p168;
	and.b32  	%r464, %r462, 2;
	selp.f32 	%f1007, %f1005, %f1006, %p188;
	and.b32  	%r493, %r491, 2;
	fma.rn.f32 	%f1059, %f1057, %f1051, 0f3F800000;
	fma.rn.f32 	%f1060, %f1050, 0f40490FDB, %f1058;
	setp.eq.b32 	%p208, %r510, 1;
	fma.rn.f32 	%f1111, %f1109, %f1103, 0f3F800000;
	fma.rn.f32 	%f1112, %f1102, 0f40490FDB, %f1110;
	setp.eq.b32 	%p228, %r533, 1;
	selp.f32 	%f1167, %f1165, %f1166, %p248;
	and.b32  	%r553, %r551, 2;
	selp.f32 	%f1219, %f1217, %f1218, %p268;
	and.b32  	%r583, %r581, 2;
	fma.rn.f32 	%f1269, %f1267, %f1263, 0fC09DE9E6;
	fma.rn.f32 	%f1270, %f1266, %f1268, 0f00000000;
	and.b32  	%r606, %r605, 1;
	and.b32  	%r186, %r185, 32;
	or.b32  	%r248, %r189, %r184;
	selp.f32 	%f283, %f281, %f282, %p20;
	and.b32  	%r266, %r264, 2;
	mov.f32 	%f284, 0f00000000;
	selp.f32 	%f317, %f315, %f316, %p26;
	and.b32  	%r273, %r271, 2;
	selp.f32 	%f352, %f350, %f351, %p32;
	and.b32  	%r284, %r282, 2;
	selp.f32 	%f386, %f384, %f385, %p38;
	and.b32  	%r291, %r289, 2;
	selp.f32 	%f421, %f419, %f420, %p44;
	and.b32  	%r302, %r300, 2;
	selp.f32 	%f455, %f453, %f454, %p50;
	and.b32  	%r309, %r307, 2;
	selp.f32 	%f490, %f488, %f489, %p56;
	and.b32  	%r320, %r318, 2;
	selp.f32 	%f524, %f522, %f523, %p62;
	and.b32  	%r327, %r325, 2;
	selp.f32 	%f559, %f557, %f558, %p68;
	and.b32  	%r338, %r336, 2;
	selp.f32 	%f593, %f591, %f592, %p74;
	and.b32  	%r345, %r343, 2;
	selp.f32 	%f628, %f626, %f627, %p80;
	and.b32  	%r356, %r354, 2;
	selp.f32 	%f662, %f660, %f661, %p86;
	and.b32  	%r363, %r361, 2;
	selp.f32 	%f697, %f695, %f696, %p92;
	and.b32  	%r374, %r372, 2;
	selp.f32 	%f731, %f729, %f730, %p98;
	and.b32  	%r381, %r379, 2;
	selp.f32 	%f766, %f764, %f765, %p104;
	and.b32  	%r392, %r390, 2;
	selp.f32 	%f800, %f798, %f799, %p110;
	and.b32  	%r399, %r397, 2;
	setp.eq.s32 	%p129, %r416, 0;
	neg.f32 	%f851, %f849;
	add.s32 	%r417, %r414, 1;
	cvt.rzi.f32.f32 	%f856, %f1356;
	setp.eq.s32 	%p149, %r445, 0;
	neg.f32 	%f903, %f901;
	add.s32 	%r446, %r443, 1;
	cvt.rzi.f32.f32 	%f908, %f1360;
	setp.eq.s32 	%p169, %r464, 0;
	neg.f32 	%f957, %f955;
	add.s32 	%r465, %r462, 1;
	cvt.rzi.f32.f32 	%f962, %f1364;
	setp.eq.s32 	%p189, %r493, 0;
	neg.f32 	%f1009, %f1007;
	add.s32 	%r494, %r491, 1;
	cvt.rzi.f32.f32 	%f1014, %f1368;
	selp.f32 	%f1061, %f1059, %f1060, %p208;
	and.b32  	%r511, %r509, 2;
	selp.f32 	%f1113, %f1111, %f1112, %p228;
	and.b32  	%r534, %r532, 2;
	setp.eq.s32 	%p249, %r553, 0;
	neg.f32 	%f1169, %f1167;
	add.s32 	%r554, %r551, 1;
	cvt.rzi.f32.f32 	%f1174, %f1380;
	setp.eq.s32 	%p269, %r583, 0;
	neg.f32 	%f1221, %f1219;
	add.s32 	%r584, %r581, 1;
	cvt.rzi.f32.f32 	%f1226, %f1384;
	fma.rn.f32 	%f1271, %f1269, %f1263, 0f3F800000;
	fma.rn.f32 	%f1272, %f1262, 0f40490FDB, %f1270;
	setp.eq.b32 	%p288, %r606, 1;
	and.b32  	%r187, %r185, 4;
	or.b32  	%r249, %r248, %r186;
	setp.eq.s32 	%p21, %r266, 0;
	sub.f32 	%f285, %f284, %f283;
	setp.eq.s32 	%p27, %r273, 0;
	sub.f32 	%f319, %f284, %f317;
	setp.eq.s32 	%p33, %r284, 0;
	sub.f32 	%f354, %f284, %f352;
	setp.eq.s32 	%p39, %r291, 0;
	sub.f32 	%f388, %f284, %f386;
	setp.eq.s32 	%p45, %r302, 0;
	sub.f32 	%f423, %f284, %f421;
	setp.eq.s32 	%p51, %r309, 0;
	sub.f32 	%f457, %f284, %f455;
	setp.eq.s32 	%p57, %r320, 0;
	sub.f32 	%f492, %f284, %f490;
	setp.eq.s32 	%p63, %r327, 0;
	sub.f32 	%f526, %f284, %f524;
	setp.eq.s32 	%p69, %r338, 0;
	sub.f32 	%f561, %f284, %f559;
	setp.eq.s32 	%p75, %r345, 0;
	sub.f32 	%f595, %f284, %f593;
	setp.eq.s32 	%p81, %r356, 0;
	sub.f32 	%f630, %f284, %f628;
	setp.eq.s32 	%p87, %r363, 0;
	sub.f32 	%f664, %f284, %f662;
	setp.eq.s32 	%p93, %r374, 0;
	sub.f32 	%f699, %f284, %f697;
	setp.eq.s32 	%p99, %r381, 0;
	sub.f32 	%f733, %f284, %f731;
	setp.eq.s32 	%p105, %r392, 0;
	sub.f32 	%f768, %f284, %f766;
	setp.eq.s32 	%p111, %r399, 0;
	sub.f32 	%f802, %f284, %f800;
	selp.f32 	%f850, %f848, %f847, %p128;
	selp.f32 	%f852, %f849, %f851, %p129;
	and.b32  	%r418, %r417, 2;
	setp.eq.f32 	%p131, %f856, %f1356;
	mul.f32 	%f857, %f1356, 0f00000000;
	selp.f32 	%f902, %f900, %f899, %p148;
	selp.f32 	%f904, %f901, %f903, %p149;
	and.b32  	%r447, %r446, 2;
	setp.eq.f32 	%p151, %f908, %f1360;
	mul.f32 	%f909, %f1360, 0f00000000;
	selp.f32 	%f956, %f954, %f953, %p168;
	selp.f32 	%f958, %f955, %f957, %p169;
	and.b32  	%r466, %r465, 2;
	setp.eq.f32 	%p171, %f962, %f1364;
	mul.f32 	%f963, %f1364, 0f00000000;
	selp.f32 	%f1008, %f1006, %f1005, %p188;
	selp.f32 	%f1010, %f1007, %f1009, %p189;
	and.b32  	%r495, %r494, 2;
	setp.eq.f32 	%p191, %f1014, %f1368;
	mul.f32 	%f1015, %f1368, 0f00000000;
	setp.eq.s32 	%p209, %r511, 0;
	neg.f32 	%f1063, %f1061;
	add.s32 	%r512, %r509, 1;
	cvt.rzi.f32.f32 	%f1068, %f1372;
	setp.eq.s32 	%p229, %r534, 0;
	neg.f32 	%f1115, %f1113;
	add.s32 	%r535, %r532, 1;
	cvt.rzi.f32.f32 	%f1120, %f1376;
	selp.f32 	%f1168, %f1166, %f1165, %p248;
	selp.f32 	%f1170, %f1167, %f1169, %p249;
	and.b32  	%r555, %r554, 2;
	setp.eq.f32 	%p251, %f1174, %f1380;
	mul.f32 	%f1175, %f1380, 0f00000000;
	selp.f32 	%f1220, %f1218, %f1217, %p268;
	selp.f32 	%f1222, %f1219, %f1221, %p269;
	and.b32  	%r585, %r584, 2;
	setp.eq.f32 	%p271, %f1226, %f1384;
	mul.f32 	%f1227, %f1384, 0f00000000;
	selp.f32 	%f1273, %f1271, %f1272, %p288;
	and.b32  	%r607, %r605, 2;
	or.b32  	%r250, %r249, %r187;
	selp.f32 	%f286, %f283, %f285, %p21;
	selp.f32 	%f320, %f317, %f319, %p27;
	selp.f32 	%f355, %f352, %f354, %p33;
	selp.f32 	%f389, %f386, %f388, %p39;
	selp.f32 	%f424, %f421, %f423, %p45;
	selp.f32 	%f458, %f455, %f457, %p51;
	selp.f32 	%f493, %f490, %f492, %p57;
	selp.f32 	%f527, %f524, %f526, %p63;
	selp.f32 	%f562, %f559, %f561, %p69;
	selp.f32 	%f596, %f593, %f595, %p75;
	selp.f32 	%f631, %f628, %f630, %p81;
	selp.f32 	%f665, %f662, %f664, %p87;
	selp.f32 	%f700, %f697, %f699, %p93;
	selp.f32 	%f734, %f731, %f733, %p99;
	selp.f32 	%f769, %f766, %f768, %p105;
	selp.f32 	%f803, %f800, %f802, %p111;
	setp.eq.s32 	%p130, %r418, 0;
	sub.f32 	%f854, %f284, %f850;
	selp.f32 	%f88, %f857, %f852, %p131;
	abs.f32 	%f858, %f1356;
	setp.eq.s32 	%p150, %r447, 0;
	sub.f32 	%f906, %f284, %f902;
	selp.f32 	%f910, %f909, %f904, %p151;
	abs.f32 	%f911, %f1360;
	setp.eq.s32 	%p170, %r466, 0;
	sub.f32 	%f960, %f284, %f956;
	selp.f32 	%f124, %f963, %f958, %p171;
	abs.f32 	%f964, %f1364;
	setp.eq.s32 	%p190, %r495, 0;
	sub.f32 	%f1012, %f284, %f1008;
	selp.f32 	%f1016, %f1015, %f1010, %p191;
	abs.f32 	%f1017, %f1368;
	selp.f32 	%f1062, %f1060, %f1059, %p208;
	selp.f32 	%f1064, %f1061, %f1063, %p209;
	and.b32  	%r513, %r512, 2;
	setp.eq.f32 	%p211, %f1068, %f1372;
	mul.f32 	%f1069, %f1372, 0f00000000;
	selp.f32 	%f1114, %f1112, %f1111, %p228;
	selp.f32 	%f1116, %f1113, %f1115, %p229;
	and.b32  	%r536, %r535, 2;
	setp.eq.f32 	%p231, %f1120, %f1376;
	mul.f32 	%f1121, %f1376, 0f00000000;
	setp.eq.s32 	%p250, %r555, 0;
	sub.f32 	%f1172, %f284, %f1168;
	selp.f32 	%f196, %f1175, %f1170, %p251;
	abs.f32 	%f1176, %f1380;
	setp.eq.s32 	%p270, %r585, 0;
	sub.f32 	%f1224, %f284, %f1220;
	selp.f32 	%f1228, %f1227, %f1222, %p271;
	abs.f32 	%f1229, %f1384;
	setp.eq.s32 	%p289, %r607, 0;
	neg.f32 	%f1275, %f1273;
	add.s32 	%r608, %r605, 1;
	cvt.rzi.f32.f32 	%f1280, %f1388;
	shr.u32 	%r251, %r250, 1;
	mul.f32 	%f252, %f286, %f286;
	mul.f32 	%f4, %f320, %f320;
	mul.f32 	%f8, %f355, %f355;
	mul.f32 	%f13, %f389, %f389;
	mul.f32 	%f17, %f424, %f424;
	mul.f32 	%f22, %f458, %f458;
	mul.f32 	%f26, %f493, %f493;
	mul.f32 	%f31, %f527, %f527;
	mul.f32 	%f35, %f562, %f562;
	mul.f32 	%f40, %f596, %f596;
	mul.f32 	%f44, %f631, %f631;
	mul.f32 	%f49, %f665, %f665;
	mul.f32 	%f53, %f700, %f700;
	mul.f32 	%f58, %f734, %f734;
	mul.f32 	%f62, %f769, %f769;
	mul.f32 	%f67, %f803, %f803;
	selp.f32 	%f855, %f850, %f854, %p130;
	setp.gt.f32 	%p132, %f858, 0f4B800000;
	add.f32 	%f859, %f88, 0f3F800000;
	selp.f32 	%f907, %f902, %f906, %p150;
	setp.gt.f32 	%p152, %f911, 0f4B800000;
	add.f32 	%f912, %f910, 0f3F800000;
	selp.f32 	%f961, %f956, %f960, %p170;
	setp.gt.f32 	%p172, %f964, 0f4B800000;
	add.f32 	%f965, %f124, 0f3F800000;
	selp.f32 	%f1013, %f1008, %f1012, %p190;
	setp.gt.f32 	%p192, %f1017, 0f4B800000;
	add.f32 	%f1018, %f1016, 0f3F800000;
	setp.eq.s32 	%p210, %r513, 0;
	sub.f32 	%f1066, %f284, %f1062;
	selp.f32 	%f160, %f1069, %f1064, %p211;
	abs.f32 	%f1070, %f1372;
	setp.eq.s32 	%p230, %r536, 0;
	sub.f32 	%f1118, %f284, %f1114;
	selp.f32 	%f1122, %f1121, %f1116, %p231;
	abs.f32 	%f1123, %f1376;
	selp.f32 	%f1173, %f1168, %f1172, %p250;
	setp.gt.f32 	%p252, %f1176, 0f4B800000;
	add.f32 	%f1177, %f196, 0f3F800000;
	selp.f32 	%f1225, %f1220, %f1224, %p270;
	setp.gt.f32 	%p272, %f1229, 0f4B800000;
	add.f32 	%f1230, %f1228, 0f3F800000;
	selp.f32 	%f1274, %f1272, %f1271, %p288;
	selp.f32 	%f1276, %f1273, %f1275, %p289;
	and.b32  	%r609, %r608, 2;
	setp.eq.f32 	%p291, %f1280, %f1388;
	mul.f32 	%f1281, %f1388, 0f00000000;
	ld.param.u64 	%rd1, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_5];
	mul.wide.u32 	%rd73, %r251, 4;
	mul.f32 	%f290, %f252, 0f3B8B2FF9;
	mul.f32 	%f324, %f4, 0f3B8B2FF9;
	mul.f32 	%f359, %f8, 0f3B8B2FF9;
	mul.f32 	%f393, %f13, 0f3B8B2FF9;
	mul.f32 	%f428, %f17, 0f3B8B2FF9;
	mul.f32 	%f462, %f22, 0f3B8B2FF9;
	mul.f32 	%f497, %f26, 0f3B8B2FF9;
	mul.f32 	%f531, %f31, 0f3B8B2FF9;
	mul.f32 	%f566, %f35, 0f3B8B2FF9;
	mul.f32 	%f600, %f40, 0f3B8B2FF9;
	mul.f32 	%f635, %f44, 0f3B8B2FF9;
	mul.f32 	%f669, %f49, 0f3B8B2FF9;
	mul.f32 	%f704, %f53, 0f3B8B2FF9;
	mul.f32 	%f738, %f58, 0f3B8B2FF9;
	mul.f32 	%f773, %f62, 0f3B8B2FF9;
	mul.f32 	%f806, %f67, 0f3B8B2FF9;
	selp.f32 	%f89, %f859, %f855, %p132;
	selp.f32 	%f913, %f912, %f907, %p152;
	selp.f32 	%f125, %f965, %f961, %p172;
	selp.f32 	%f1019, %f1018, %f1013, %p192;
	selp.f32 	%f1067, %f1062, %f1066, %p210;
	setp.gt.f32 	%p212, %f1070, 0f4B800000;
	add.f32 	%f1071, %f160, 0f3F800000;
	selp.f32 	%f1119, %f1114, %f1118, %p230;
	setp.gt.f32 	%p232, %f1123, 0f4B800000;
	add.f32 	%f1124, %f1122, 0f3F800000;
	selp.f32 	%f197, %f1177, %f1173, %p252;
	selp.f32 	%f1231, %f1230, %f1225, %p272;
	setp.eq.s32 	%p290, %r609, 0;
	sub.f32 	%f1278, %f284, %f1274;
	selp.f32 	%f232, %f1281, %f1276, %p291;
	abs.f32 	%f1282, %f1388;
	add.s64 	%rd74, %rd1, %rd73;
	mul.f32 	%f3, %f290, %f1338;
	mul.f32 	%f325, %f324, %f1339;
	mul.f32 	%f12, %f359, %f1340;
	mul.f32 	%f394, %f393, %f1341;
	mul.f32 	%f21, %f428, %f1342;
	mul.f32 	%f463, %f462, %f1343;
	mul.f32 	%f30, %f497, %f1344;
	mul.f32 	%f532, %f531, %f1345;
	mul.f32 	%f39, %f566, %f1346;
	mul.f32 	%f601, %f600, %f1347;
	mul.f32 	%f48, %f635, %f1348;
	mul.f32 	%f670, %f669, %f1349;
	mul.f32 	%f57, %f704, %f1350;
	mul.f32 	%f739, %f738, %f1351;
	mul.f32 	%f66, %f773, %f1352;
	mul.f32 	%f807, %f806, %f1353;
	mov.b32 	%r430, %f913;
	mov.b32 	%r429, %f89;
	mov.b32 	%r436, %f910;
	mov.b32 	%r435, %f88;
	mov.b32 	%r478, %f1019;
	mov.b32 	%r477, %f125;
	mov.b32 	%r484, %f1016;
	mov.b32 	%r483, %f124;
	selp.f32 	%f161, %f1071, %f1067, %p212;
	selp.f32 	%f1125, %f1124, %f1119, %p232;
	mov.b32 	%r568, %f1231;
	mov.b32 	%r567, %f197;
	mov.b32 	%r574, %f1228;
	mov.b32 	%r573, %f196;
	selp.f32 	%f1279, %f1274, %f1278, %p290;
	setp.gt.f32 	%p292, %f1282, 0f4B800000;
	add.f32 	%f1283, %f232, 0f3F800000;
	ld.param.u64 	%rd2, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_6];
	ld.param.u64 	%rd3, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_7];
	ld.global.u32 	%r190, [%rd74];
	ld.global.u32 	%r191, [%rd74+128];
	mov.b32 	%r276, %f325;
	mov.b32 	%r275, %f3;
	mov.b32 	%r294, %f394;
	mov.b32 	%r293, %f12;
	mov.b32 	%r312, %f463;
	mov.b32 	%r311, %f21;
	mov.b32 	%r330, %f532;
	mov.b32 	%r329, %f30;
	mov.b32 	%r348, %f601;
	mov.b32 	%r347, %f39;
	mov.b32 	%r366, %f670;
	mov.b32 	%r365, %f48;
	mov.b32 	%r384, %f739;
	mov.b32 	%r383, %f57;
	mov.b32 	%r402, %f807;
	mov.b32 	%r401, %f66;
	xor.b32  	%r481, %r484, -2147483648;
	xor.b32  	%r480, %r483, -2147483648;
	mov.b32 	%r525, %f1125;
	mov.b32 	%r524, %f161;
	mov.b32 	%r528, %f1122;
	mov.b32 	%r527, %f160;
	xor.b32  	%r571, %r574, -2147483648;
	xor.b32  	%r570, %r573, -2147483648;
	selp.f32 	%f233, %f1283, %f1279, %p292;
	// begin inline asm
	cvt.rn.f16x2.f32 %r274, %r276, %r275;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r292, %r294, %r293;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r310, %r312, %r311;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r328, %r330, %r329;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r346, %r348, %r347;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r364, %r366, %r365;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r382, %r384, %r383;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r400, %r402, %r401;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r428, %r430, %r429;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r431, %r430, %r429;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r434, %r436, %r435;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r437, %r436, %r435;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r476, %r478, %r477;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r479, %r481, %r480;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r482, %r484, %r483;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r485, %r478, %r477;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r523, %r525, %r524;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r526, %r528, %r527;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r566, %r568, %r567;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r569, %r571, %r570;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r572, %r574, %r573;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r575, %r568, %r567;
	// end inline asm
	add.f32 	%f1306, %f1392, %f1392;
	mov.b32 	%r625, %f1306;
	and.b32  	%r626, %r625, -2147483648;
	or.b32  	%r627, %r626, 1056964608;
	mov.b32 	%f1307, %r627;
	add.f32 	%f1308, %f1306, %f1307;
	cvt.rzi.f32.f32 	%f1309, %f1308;
	abs.f32 	%f1310, %f1306;
	setp.gt.f32 	%p306, %f1310, 0f4B000000;
	selp.f32 	%f1311, %f1306, %f1309, %p306;
	cvt.rzi.f32.f32 	%f1312, %f1306;
	setp.lt.f32 	%p307, %f1310, 0f3F000000;
	selp.f32 	%f1313, %f1312, %f1311, %p307;
	cvt.rzi.s32.f32 	%r628, %f1313;
	fma.rn.f32 	%f1314, %f1313, 0fBF000000, %f1392;
	mul.f32 	%f1315, %f1314, %f1314;
	fma.rn.f32 	%f1316, %f1315, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1317, %f1315, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1318, %f1316, %f1315, 0fC0A55DF6;
	fma.rn.f32 	%f1319, %f1317, %f1315, 0f4081E0CF;
	fma.rn.f32 	%f1320, %f1315, %f1314, 0f00000000;
	fma.rn.f32 	%f1321, %f1319, %f1315, 0fC09DE9E6;
	fma.rn.f32 	%f1322, %f1318, %f1320, 0f00000000;
	fma.rn.f32 	%f1323, %f1321, %f1315, 0f3F800000;
	fma.rn.f32 	%f1324, %f1314, 0f40490FDB, %f1322;
	and.b32  	%r629, %r628, 1;
	setp.eq.b32 	%p308, %r629, 1;
	selp.f32 	%f1325, %f1323, %f1324, %p308;
	selp.f32 	%f1326, %f1324, %f1323, %p308;
	and.b32  	%r630, %r628, 2;
	setp.eq.s32 	%p309, %r630, 0;
	neg.f32 	%f1327, %f1325;
	selp.f32 	%f1328, %f1325, %f1327, %p309;
	add.s32 	%r631, %r628, 1;
	and.b32  	%r632, %r631, 2;
	setp.eq.s32 	%p310, %r632, 0;
	sub.f32 	%f1330, %f284, %f1326;
	selp.f32 	%f1331, %f1326, %f1330, %p310;
	cvt.rzi.f32.f32 	%f1332, %f1392;
	setp.eq.f32 	%p311, %f1332, %f1392;
	mul.f32 	%f1333, %f1392, 0f00000000;
	selp.f32 	%f1334, %f1333, %f1328, %p311;
	abs.f32 	%f1335, %f1392;
	setp.gt.f32 	%p312, %f1335, 0f4B800000;
	add.f32 	%f1336, %f1334, 0f3F800000;
	selp.f32 	%f1337, %f1336, %f1331, %p312;
	mov.b32 	%r621, %f1337;
	mov.b32 	%r620, %f233;
	// begin inline asm
	cvt.rn.f16x2.f32 %r619, %r621, %r620;
	// end inline asm
	mov.b32 	%r624, %f1334;
	mov.b32 	%r623, %f232;
	// begin inline asm
	cvt.rn.f16x2.f32 %r622, %r624, %r623;
	// end inline asm
	shl.b32 	%r634, %r4, 7;
	shl.b32 	%r635, %r1, 4;
	and.b32  	%r636, %r635, 112;
	and.b32  	%r637, %r634, 384;
	and.b32  	%r638, %r634, 512;
	shl.b32 	%r639, %r1, 3;
	and.b32  	%r640, %r639, 64;
	and.b32  	%r641, %r183, 32;
	or.b32  	%r642, %r641, %r2;
	or.b32  	%r643, %r642, %r640;
	shl.b32 	%r644, %r643, 14;
	or.b32  	%r645, %r636, %r637;
	or.b32  	%r646, %r645, %r638;
	or.b32  	%r647, %r646, %r644;
	cvt.u64.u32 	%rd75, %r647;
	add.s64 	%rd76, %rd75, %rd2;
	add.s64 	%rd5, %rd76, -4;
	or.b32  	%r648, %r647, 262144;
	cvt.u64.u32 	%rd77, %r648;
	add.s64 	%rd6, %rd2, %rd77;
	and.b32  	%r128, %r1, 8;
	shr.u32 	%r649, %r2, 3;
	mul.lo.s32 	%r650, %r649, 260;
	bfe.u32 	%r651, %r2, 2, 1;
	or.b32  	%r652, %r635, %r128;
	shr.u32 	%r653, %r652, 2;
	and.b32  	%r654, %r653, 30;
	shr.u32 	%r655, %r2, 1;
	bfe.u32 	%r656, %r2, 1, 1;
	and.b32  	%r657, %r2, 1;
	mad.lo.s32 	%r658, %r197, 65, %r650;
	mad.lo.s32 	%r659, %r657, 2080, %r658;
	mad.lo.s32 	%r660, %r651, 520, %r659;
	mad.lo.s32 	%r661, %r656, 1040, %r660;
	add.s32 	%r662, %r661, %r654;
	mul.wide.u32 	%rd78, %r662, 4;
	mov.u64 	%rd79, shmem;
	add.s64 	%rd7, %rd79, %rd78;
	add.s32 	%r663, %r662, 32;
	mul.wide.u32 	%rd80, %r663, 4;
	add.s64 	%rd8, %rd79, %rd80;
	add.s32 	%r664, %r662, 1;
	mul.wide.u32 	%rd81, %r664, 4;
	add.s64 	%rd9, %rd79, %rd81;
	add.s32 	%r665, %r662, 33;
	mul.wide.u32 	%rd82, %r665, 4;
	add.s64 	%rd10, %rd79, %rd82;
	add.s32 	%r666, %r662, 130;
	mul.wide.u32 	%rd83, %r666, 4;
	add.s64 	%rd11, %rd79, %rd83;
	add.s32 	%r667, %r662, 162;
	mul.wide.u32 	%rd84, %r667, 4;
	add.s64 	%rd12, %rd79, %rd84;
	add.s32 	%r668, %r662, 131;
	mul.wide.u32 	%rd85, %r668, 4;
	add.s64 	%rd13, %rd79, %rd85;
	add.s32 	%r669, %r662, 163;
	mul.wide.u32 	%rd86, %r669, 4;
	add.s64 	%rd14, %rd79, %rd86;
	mul.lo.s32 	%r670, %r193, 65;
	mul.lo.s32 	%r671, %r196, 260;
	and.b32  	%r672, %r3, 32;
	mul.lo.s32 	%r673, %r194, 130;
	mul.lo.s32 	%r674, %r197, 520;
	mul.lo.s32 	%r675, %r199, 1040;
	or.b32  	%r676, %r672, %r655;
	add.s32 	%r677, %r676, %r673;
	add.s32 	%r678, %r677, %r674;
	add.s32 	%r679, %r678, %r671;
	add.s32 	%r680, %r679, %r670;
	add.s32 	%r681, %r680, %r675;
	or.b32  	%r682, %r655, 8;
	add.s32 	%r683, %r673, %r672;
	add.s32 	%r684, %r683, %r674;
	add.s32 	%r685, %r684, %r682;
	add.s32 	%r686, %r685, %r671;
	add.s32 	%r687, %r686, %r670;
	add.s32 	%r688, %r687, %r675;
	or.b32  	%r689, %r655, 16;
	add.s32 	%r690, %r684, %r689;
	add.s32 	%r691, %r690, %r671;
	add.s32 	%r692, %r691, %r670;
	add.s32 	%r693, %r692, %r675;
	or.b32  	%r694, %r655, 24;
	add.s32 	%r695, %r684, %r694;
	add.s32 	%r696, %r695, %r671;
	add.s32 	%r697, %r696, %r670;
	add.s32 	%r698, %r697, %r675;
	or.b32  	%r699, %r655, 2080;
	add.s32 	%r700, %r684, %r699;
	add.s32 	%r701, %r700, %r671;
	add.s32 	%r702, %r701, %r670;
	add.s32 	%r703, %r702, %r675;
	add.s32 	%r704, %r684, 2080;
	add.s32 	%r705, %r704, %r682;
	add.s32 	%r706, %r705, %r671;
	add.s32 	%r707, %r706, %r670;
	add.s32 	%r708, %r707, %r675;
	add.s32 	%r709, %r704, %r689;
	add.s32 	%r710, %r709, %r671;
	add.s32 	%r711, %r710, %r670;
	add.s32 	%r712, %r711, %r675;
	add.s32 	%r713, %r704, %r694;
	add.s32 	%r714, %r713, %r671;
	add.s32 	%r715, %r714, %r670;
	add.s32 	%r716, %r715, %r675;
	or.b32  	%r717, %r189, %r186;
	or.b32  	%r718, %r717, %r184;
	or.b32  	%r719, %r718, %r187;
	shr.u32 	%r720, %r719, 1;
	mul.lo.s32 	%r721, %r720, 65;
	add.s32 	%r722, %r676, %r721;
	or.b32  	%r723, %r682, %r672;
	add.s32 	%r724, %r723, %r721;
	or.b32  	%r725, %r689, %r672;
	add.s32 	%r726, %r725, %r721;
	or.b32  	%r727, %r694, %r672;
	add.s32 	%r728, %r727, %r721;
	shl.b32 	%r729, %r4, 4;
	and.b32  	%r730, %r729, 1920;
	add.s32 	%r731, %r721, 2080;
	add.s32 	%r732, %r676, %r731;
	add.s32 	%r733, %r723, %r731;
	add.s32 	%r734, %r725, %r731;
	add.s32 	%r735, %r727, %r731;
	shl.b32 	%r736, %r2, 1;
	or.b32  	%r737, %r197, %r736;
	mul.lo.s32 	%r738, %r737, 65;
	add.s32 	%r739, %r654, %r738;
	mul.wide.u32 	%rd87, %r739, 4;
	add.s64 	%rd15, %rd79, %rd87;
	cvt.u64.u32 	%rd88, %r654;
	cvt.u64.u32 	%rd89, %r738;
	add.s64 	%rd90, %rd89, %rd88;
	shl.b64 	%rd91, %rd90, 2;
	add.s64 	%rd16, %rd79, %rd91;
	or.b32  	%r740, %r737, 32;
	mul.lo.s32 	%r741, %r740, 65;
	add.s32 	%r742, %r654, %r741;
	mul.wide.u32 	%rd92, %r742, 4;
	add.s64 	%rd17, %rd79, %rd92;
	cvt.u64.u32 	%rd93, %r741;
	add.s64 	%rd94, %rd88, %rd93;
	shl.b64 	%rd95, %rd94, 2;
	add.s64 	%rd18, %rd79, %rd95;
	shl.b32 	%r743, %r2, 4;
	cvt.rn.f64.s32 	%fd6, %r743;
	mul.f64 	%fd7, %fd6, 0d3FD0000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r744}, %fd7;
	}
	and.b32  	%r745, %r744, 2147483647;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r746, %temp}, %fd7;
	}
	mov.f64 	%fd8, 0d4010000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r747}, %fd8;
	}
	and.b32  	%r748, %r747, 2147483647;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r749, %temp}, %fd8;
	}
	mov.b64 	%fd9, {%r746, %r745};
	mov.b64 	%fd10, {%r749, %r748};
	setp.gt.u32 	%p314, %r745, 2146435071;
	setp.gt.u32 	%p315, %r748, 2146435071;
	or.pred  	%p1, %p314, %p315;
	setp.eq.f64 	%p316, %fd10, 0d0000000000000000;
	setp.ltu.f64 	%p317, %fd9, %fd10;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r750}, %fd9;
	}
	shr.u32 	%r751, %r750, 20;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r752}, %fd10;
	}
	shr.u32 	%r753, %r752, 20;
	setp.lt.u32 	%p318, %r750, 1048576;
	mul.f64 	%fd11, %fd9, 0d4350000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r754}, %fd11;
	}
	shr.u32 	%r755, %r754, 20;
	add.s32 	%r756, %r751, %r755;
	add.s32 	%r757, %r756, -54;
	setp.lt.u32 	%p319, %r752, 1048576;
	mul.f64 	%fd12, %fd10, 0d4350000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r758}, %fd12;
	}
	shr.u32 	%r759, %r758, 20;
	add.s32 	%r760, %r753, %r759;
	add.s32 	%r761, %r760, -54;
	and.b32  	%r129, %r744, -2147483648;
	setp.le.f64 	%p320, %fd9, 0d7FF0000000000000;
	setp.le.f64 	%p321, %fd10, 0d7FF0000000000000;
	add.f64 	%fd13, %fd7, 0d4010000000000000;
	setp.eq.f64 	%p322, %fd9, 0d7FF0000000000000;
	selp.f64 	%fd14, 0dFFF8000000000000, %fd7, %p322;
	shl.b32 	%r762, %r7, 19;
	add.s32 	%r763, %r762, -1572864;
	shl.b32 	%r764, %r4, 5;
	and.b32  	%r765, %r185, 28;
	and.b32  	%r766, %r764, 96;
	or.b32  	%r767, %r766, %r765;
	and.b32  	%r768, %r764, 128;
	shl.b32 	%r769, %r2, 2;
	or.b32  	%r770, %r198, %r769;
	or.b32  	%r771, %r767, %r768;
	cvt.s64.s32 	%rd96, %r763;
	or.pred  	%p2, %p316, %p317;
	selp.f64 	%fd1, 0dFFF8000000000000, %fd7, %p316;
	selp.f64 	%fd15, %fd11, %fd9, %p318;
	selp.b32 	%r772, %r757, %r751, %p318;
	selp.f64 	%fd16, %fd12, %fd10, %p319;
	selp.b32 	%r130, %r761, %r753, %p319;
	mov.b64 	%rd97, %fd15;
	mov.b64 	%rd98, %fd16;
	and.b64  	%rd99, %rd97, 4503599627370495;
	or.b64  	%rd19, %rd99, 4503599627370496;
	and.b64  	%rd100, %rd98, 4503599627370495;
	or.b64  	%rd20, %rd100, 4503599627370496;
	selp.f64 	%fd17, %fd14, %fd13, %p321;
	selp.f64 	%fd2, %fd17, %fd13, %p320;
	or.b32  	%r773, %r770, %r730;
	shl.b32 	%r774, %r773, 8;
	or.b32  	%r775, %r771, %r774;
	cvt.u64.u32 	%rd101, %r775;
	add.s64 	%rd102, %rd96, %rd101;
	shr.u64 	%rd103, %rd102, 35;
	add.s64 	%rd104, %rd102, %rd103;
	shr.s64 	%rd105, %rd104, 29;
	setp.lt.s64 	%p323, %rd102, 0;
	and.b64  	%rd106, %rd104, -536870912;
	setp.ne.s64 	%p324, %rd106, %rd102;
	and.pred  	%p325, %p323, %p324;
	selp.u64 	%rd107, 1, 0, %p325;
	sub.s64 	%rd108, %rd107, %rd105;
	shl.b64 	%rd109, %rd108, 29;
	add.s64 	%rd110, %rd109, %rd102;
	shl.b64 	%rd111, %rd110, 2;
	add.s64 	%rd21, %rd3, %rd111;
	or.b32  	%r776, %r775, 16384;
	cvt.s64.s32 	%rd112, %r776;
	add.s64 	%rd113, %rd96, %rd112;
	shr.u64 	%rd114, %rd113, 35;
	add.s64 	%rd115, %rd113, %rd114;
	shr.u64 	%rd116, %rd115, 29;
	shr.u64 	%rd117, %rd113, 63;
	sub.s64 	%rd118, %rd117, %rd116;
	shl.b64 	%rd119, %rd118, 29;
	add.s64 	%rd120, %rd119, %rd113;
	shl.b64 	%rd121, %rd120, 2;
	add.s64 	%rd22, %rd3, %rd121;
	mul.wide.u32 	%rd23, %r735, 4;
	mul.wide.u32 	%rd24, %r734, 4;
	mul.wide.u32 	%rd25, %r733, 4;
	mul.wide.u32 	%rd26, %r732, 4;
	mul.wide.u32 	%rd27, %r728, 4;
	mul.wide.u32 	%rd28, %r726, 4;
	mul.wide.u32 	%rd29, %r724, 4;
	mul.wide.u32 	%rd30, %r722, 4;
	mul.wide.u32 	%rd31, %r716, 4;
	mul.wide.u32 	%rd32, %r712, 4;
	mul.wide.u32 	%rd33, %r708, 4;
	mul.wide.u32 	%rd34, %r703, 4;
	mul.wide.u32 	%rd35, %r698, 4;
	mul.wide.u32 	%rd36, %r693, 4;
	mul.wide.u32 	%rd37, %r688, 4;
	mul.wide.u32 	%rd38, %r681, 4;
	sub.s32 	%r777, %r772, %r130;
	add.s32 	%r131, %r777, 1;
	mov.u16 	%rs2381, 25600;
	mov.u16 	%rs2173, 21504;
	mov.u16 	%rs2389, 18432;
	mov.u16 	%rs2307, -14592;
	or.pred  	%p329, %p1, %p2;
	selp.f64 	%fd5, %fd2, %fd1, %p1;
	mov.u32 	%r16231, %r16185;
	mov.u32 	%r16230, %r16185;
	mov.u32 	%r16229, %r16185;
	mov.u32 	%r16228, %r16185;
	mov.u32 	%r16227, %r16185;
	mov.u32 	%r16226, %r16185;
	mov.u32 	%r16225, %r16185;
	mov.u32 	%r16224, %r16185;
	mov.u32 	%r16223, %r16185;
	mov.u32 	%r16222, %r16185;
	mov.u32 	%r16221, %r16185;
	mov.u32 	%r16220, %r16185;
	mov.u32 	%r16219, %r16185;
	mov.u32 	%r16218, %r16185;
	mov.u32 	%r16217, %r16185;
	mov.u32 	%r16216, %r16185;
	mov.u32 	%r16215, %r16185;
	mov.u32 	%r16214, %r16185;
	mov.u32 	%r16213, %r16185;
	mov.u32 	%r16212, %r16185;
	mov.u32 	%r16211, %r16185;
	mov.u32 	%r16210, %r16185;
	mov.u32 	%r16209, %r16185;
	mov.u32 	%r16208, %r16185;
	mov.u32 	%r16207, %r16185;
	bra.uni 	LBB0_182;
LBB0_190:                               // %L63687
                                        //   in Loop: Header=BB0_182 Depth=1
	setp.ne.s32 	%p335, %r16231, 130816;
	add.s32 	%r16231, %r16231, 256;
	add.s32 	%r16182, %r16231, %r5;
	setp.gt.s32 	%p336, %r6, %r16182;
	and.pred  	%p337, %p335, %p336;
	@%p337 bra 	LBB0_182;
	bra.uni 	LBB0_191;
LBB0_182:                               // %oksrem532
                                        // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_183 Depth 2
                                        //     Child Loop BB0_185 Depth 2
	setp.eq.s32 	%p326, %r128, 0;
	ld.global.v4.u32 	{%r811, %r812, %r813, %r814}, [%rd5+4];
	ld.global.v4.u32 	{%r815, %r816, %r817, %r818}, [%rd6];
	selp.b32 	%r819, %r813, %r811, %p326;
	shfl.sync.bfly.b32	%r820, %r819, 8, 31, -1;
	selp.b32 	%r779, %r811, %r820, %p326;
	selp.b32 	%r780, %r820, %r813, %p326;
	selp.b32 	%r821, %r814, %r812, %p326;
	shfl.sync.bfly.b32	%r822, %r821, 8, 31, -1;
	selp.b32 	%r787, %r812, %r822, %p326;
	selp.b32 	%r788, %r822, %r814, %p326;
	selp.b32 	%r823, %r817, %r815, %p326;
	shfl.sync.bfly.b32	%r824, %r823, 8, 31, -1;
	selp.b32 	%r795, %r815, %r824, %p326;
	selp.b32 	%r796, %r824, %r817, %p326;
	selp.b32 	%r825, %r818, %r816, %p326;
	shfl.sync.bfly.b32	%r826, %r825, 8, 31, -1;
	selp.b32 	%r803, %r816, %r826, %p326;
	selp.b32 	%r804, %r826, %r818, %p326;
	mov.u32 	%r805, 21520;
	// begin inline asm
	prmt.b32 %r778, %r779, %r780, %r805;
	// end inline asm
	mov.u32 	%r809, 30258;
	// begin inline asm
	prmt.b32 %r782, %r779, %r780, %r809;
	// end inline asm
	// begin inline asm
	prmt.b32 %r786, %r787, %r788, %r805;
	// end inline asm
	// begin inline asm
	prmt.b32 %r790, %r787, %r788, %r809;
	// end inline asm
	// begin inline asm
	prmt.b32 %r794, %r795, %r796, %r805;
	// end inline asm
	// begin inline asm
	prmt.b32 %r798, %r795, %r796, %r809;
	// end inline asm
	// begin inline asm
	prmt.b32 %r802, %r803, %r804, %r805;
	// end inline asm
	// begin inline asm
	prmt.b32 %r806, %r803, %r804, %r809;
	// end inline asm
	st.shared.u32 	[%rd7], %r778;
	st.shared.u32 	[%rd8], %r782;
	st.shared.u32 	[%rd9], %r786;
	st.shared.u32 	[%rd10], %r790;
	st.shared.u32 	[%rd11], %r794;
	st.shared.u32 	[%rd12], %r798;
	st.shared.u32 	[%rd13], %r802;
	st.shared.u32 	[%rd14], %r806;
	bar.sync 	0;
	mov.u32 	%r16206, 256;
	mov.u64 	%rd145, %rd79;
LBB0_183:                               // %L9159
                                        //   Parent Loop BB0_182 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	add.s64 	%rd123, %rd145, %rd38;
	ld.shared.u32 	%r16091, [%rd123];
	add.s64 	%rd124, %rd145, %rd37;
	ld.shared.u32 	%r16092, [%rd124];
	add.s64 	%rd125, %rd145, %rd36;
	ld.shared.u32 	%r16093, [%rd125];
	add.s64 	%rd126, %rd145, %rd35;
	ld.shared.u32 	%r16094, [%rd126];
	add.s64 	%rd127, %rd145, %rd34;
	ld.shared.u32 	%r16095, [%rd127];
	add.s64 	%rd128, %rd145, %rd33;
	ld.shared.u32 	%r16096, [%rd128];
	add.s64 	%rd129, %rd145, %rd32;
	ld.shared.u32 	%r16097, [%rd129];
	add.s64 	%rd130, %rd145, %rd31;
	ld.shared.u32 	%r16098, [%rd130];
	// begin inline asm
	mov.b32 %r832, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r843, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r831, %r16091, -2004318072;
	mov.u32 	%r830, 983055;
	// begin inline asm
	lop3.b32 %r829, %r830, %r831, %r832, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r833, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r834, %r832, %r833;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r837, %r829, %r834;
	// end inline asm
	mov.u32 	%r841, 15728880;
	// begin inline asm
	lop3.b32 %r840, %r841, %r831, %r843, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r844, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r845, %r843, %r844;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r848, %r840, %r845;
	// end inline asm
	shr.u32 	%r853, %r831, 8;
	// begin inline asm
	lop3.b32 %r851, %r830, %r853, %r832, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r855, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r856, %r832, %r855;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r859, %r851, %r856;
	// end inline asm
	// begin inline asm
	lop3.b32 %r862, %r841, %r853, %r843, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r866, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r867, %r843, %r866;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r870, %r862, %r867;
	// end inline asm
	// begin inline asm
	mov.b32 %r878, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r889, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r877, %r16092, -2004318072;
	// begin inline asm
	lop3.b32 %r875, %r830, %r877, %r878, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r879, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r880, %r878, %r879;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r883, %r875, %r880;
	// end inline asm
	// begin inline asm
	lop3.b32 %r886, %r841, %r877, %r889, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r890, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r891, %r889, %r890;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r894, %r886, %r891;
	// end inline asm
	shr.u32 	%r899, %r877, 8;
	// begin inline asm
	lop3.b32 %r897, %r830, %r899, %r878, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r901, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r902, %r878, %r901;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r905, %r897, %r902;
	// end inline asm
	// begin inline asm
	lop3.b32 %r908, %r841, %r899, %r889, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r912, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r913, %r889, %r912;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r916, %r908, %r913;
	// end inline asm
	// begin inline asm
	mov.b32 %r924, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r935, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r923, %r16093, -2004318072;
	// begin inline asm
	lop3.b32 %r921, %r830, %r923, %r924, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r925, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r926, %r924, %r925;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r929, %r921, %r926;
	// end inline asm
	// begin inline asm
	lop3.b32 %r932, %r841, %r923, %r935, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r936, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r937, %r935, %r936;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r940, %r932, %r937;
	// end inline asm
	shr.u32 	%r945, %r923, 8;
	// begin inline asm
	lop3.b32 %r943, %r830, %r945, %r924, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r947, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r948, %r924, %r947;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r951, %r943, %r948;
	// end inline asm
	// begin inline asm
	lop3.b32 %r954, %r841, %r945, %r935, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r958, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r959, %r935, %r958;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r962, %r954, %r959;
	// end inline asm
	// begin inline asm
	mov.b32 %r970, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r981, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r969, %r16094, -2004318072;
	// begin inline asm
	lop3.b32 %r967, %r830, %r969, %r970, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r971, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r972, %r970, %r971;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r975, %r967, %r972;
	// end inline asm
	// begin inline asm
	lop3.b32 %r978, %r841, %r969, %r981, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r982, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r983, %r981, %r982;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r986, %r978, %r983;
	// end inline asm
	shr.u32 	%r991, %r969, 8;
	// begin inline asm
	lop3.b32 %r989, %r830, %r991, %r970, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r993, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r994, %r970, %r993;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r997, %r989, %r994;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1000, %r841, %r991, %r981, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1004, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1005, %r981, %r1004;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1008, %r1000, %r1005;
	// end inline asm
	// begin inline asm
	mov.b32 %r1016, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1027, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1015, %r16095, -2004318072;
	// begin inline asm
	lop3.b32 %r1013, %r830, %r1015, %r1016, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1017, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1018, %r1016, %r1017;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1021, %r1013, %r1018;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1024, %r841, %r1015, %r1027, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1028, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1029, %r1027, %r1028;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1032, %r1024, %r1029;
	// end inline asm
	shr.u32 	%r1037, %r1015, 8;
	// begin inline asm
	lop3.b32 %r1035, %r830, %r1037, %r1016, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1039, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1040, %r1016, %r1039;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1043, %r1035, %r1040;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1046, %r841, %r1037, %r1027, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1050, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1051, %r1027, %r1050;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1054, %r1046, %r1051;
	// end inline asm
	// begin inline asm
	mov.b32 %r1062, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1073, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1061, %r16096, -2004318072;
	// begin inline asm
	lop3.b32 %r1059, %r830, %r1061, %r1062, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1063, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1064, %r1062, %r1063;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1067, %r1059, %r1064;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1070, %r841, %r1061, %r1073, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1074, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1075, %r1073, %r1074;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1078, %r1070, %r1075;
	// end inline asm
	shr.u32 	%r1083, %r1061, 8;
	// begin inline asm
	lop3.b32 %r1081, %r830, %r1083, %r1062, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1085, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1086, %r1062, %r1085;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1089, %r1081, %r1086;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1092, %r841, %r1083, %r1073, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1096, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1097, %r1073, %r1096;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1100, %r1092, %r1097;
	// end inline asm
	// begin inline asm
	mov.b32 %r1108, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1119, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1107, %r16097, -2004318072;
	// begin inline asm
	lop3.b32 %r1105, %r830, %r1107, %r1108, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1109, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1110, %r1108, %r1109;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1113, %r1105, %r1110;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1116, %r841, %r1107, %r1119, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1120, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1121, %r1119, %r1120;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1124, %r1116, %r1121;
	// end inline asm
	shr.u32 	%r1129, %r1107, 8;
	// begin inline asm
	lop3.b32 %r1127, %r830, %r1129, %r1108, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1131, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1132, %r1108, %r1131;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1135, %r1127, %r1132;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1138, %r841, %r1129, %r1119, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1142, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1143, %r1119, %r1142;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1146, %r1138, %r1143;
	// end inline asm
	// begin inline asm
	mov.b32 %r1154, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1165, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1153, %r16098, -2004318072;
	// begin inline asm
	lop3.b32 %r1151, %r830, %r1153, %r1154, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1155, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1156, %r1154, %r1155;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1159, %r1151, %r1156;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1162, %r841, %r1153, %r1165, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1166, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1167, %r1165, %r1166;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1170, %r1162, %r1167;
	// end inline asm
	shr.u32 	%r1175, %r1153, 8;
	// begin inline asm
	lop3.b32 %r1173, %r830, %r1175, %r1154, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1177, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1178, %r1154, %r1177;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1181, %r1173, %r1178;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1184, %r841, %r1175, %r1165, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1188, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1189, %r1165, %r1188;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1192, %r1184, %r1189;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1195, %r382;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1197, %r1195, %r837;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1200, %r382;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1202, %r1200, %r848;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1205, %r382;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1207, %r1205, %r859;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1210, %r382;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1212, %r1210, %r870;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1215, %r382;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1217, %r1215, %r883;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1220, %r382;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1222, %r1220, %r894;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1225, %r382;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1227, %r1225, %r905;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1230, %r382;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1232, %r1230, %r916;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1235, %r382;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1237, %r1235, %r929;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1240, %r382;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1242, %r1240, %r940;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1245, %r382;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1247, %r1245, %r951;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1250, %r382;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1252, %r1250, %r962;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1255, %r382;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1257, %r1255, %r975;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1260, %r382;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1262, %r1260, %r986;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1265, %r382;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1267, %r1265, %r997;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1270, %r382;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1272, %r1270, %r1008;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1275, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1277, %r1275, %r1021;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1280, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1282, %r1280, %r1032;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1285, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1287, %r1285, %r1043;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1290, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1292, %r1290, %r1054;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1295, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1297, %r1295, %r1067;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1300, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1302, %r1300, %r1078;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1305, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1307, %r1305, %r1089;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1310, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1312, %r1310, %r1100;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1315, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1317, %r1315, %r1113;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1320, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1322, %r1320, %r1124;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1325, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1327, %r1325, %r1135;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1330, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1332, %r1330, %r1146;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1335, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1337, %r1335, %r1159;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1340, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1342, %r1340, %r1170;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1345, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1347, %r1345, %r1181;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1350, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1352, %r1350, %r1192;
	// end inline asm
	// begin inline asm
	mov.b32 %r1360, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1371, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1359, %r16207, -2004318072;
	// begin inline asm
	lop3.b32 %r1357, %r830, %r1359, %r1360, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1361, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1362, %r1360, %r1361;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1365, %r1357, %r1362;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1368, %r841, %r1359, %r1371, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1372, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1373, %r1371, %r1372;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1376, %r1368, %r1373;
	// end inline asm
	shr.u32 	%r1381, %r1359, 8;
	// begin inline asm
	lop3.b32 %r1379, %r830, %r1381, %r1360, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1383, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1384, %r1360, %r1383;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1387, %r1379, %r1384;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1390, %r841, %r1381, %r1371, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1394, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1395, %r1371, %r1394;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1398, %r1390, %r1395;
	// end inline asm
	// begin inline asm
	mov.b32 %r1406, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1417, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1405, %r16208, -2004318072;
	// begin inline asm
	lop3.b32 %r1403, %r830, %r1405, %r1406, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1407, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1408, %r1406, %r1407;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1411, %r1403, %r1408;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1414, %r841, %r1405, %r1417, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1418, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1419, %r1417, %r1418;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1422, %r1414, %r1419;
	// end inline asm
	shr.u32 	%r1427, %r1405, 8;
	// begin inline asm
	lop3.b32 %r1425, %r830, %r1427, %r1406, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1429, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1430, %r1406, %r1429;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1433, %r1425, %r1430;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1436, %r841, %r1427, %r1417, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1440, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1441, %r1417, %r1440;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1444, %r1436, %r1441;
	// end inline asm
	// begin inline asm
	mov.b32 %r1452, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1463, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1451, %r16209, -2004318072;
	// begin inline asm
	lop3.b32 %r1449, %r830, %r1451, %r1452, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1453, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1454, %r1452, %r1453;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1457, %r1449, %r1454;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1460, %r841, %r1451, %r1463, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1464, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1465, %r1463, %r1464;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1468, %r1460, %r1465;
	// end inline asm
	shr.u32 	%r1473, %r1451, 8;
	// begin inline asm
	lop3.b32 %r1471, %r830, %r1473, %r1452, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1475, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1476, %r1452, %r1475;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1479, %r1471, %r1476;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1482, %r841, %r1473, %r1463, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1486, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1487, %r1463, %r1486;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1490, %r1482, %r1487;
	// end inline asm
	// begin inline asm
	mov.b32 %r1498, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1509, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1497, %r16210, -2004318072;
	// begin inline asm
	lop3.b32 %r1495, %r830, %r1497, %r1498, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1499, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1500, %r1498, %r1499;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1503, %r1495, %r1500;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1506, %r841, %r1497, %r1509, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1510, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1511, %r1509, %r1510;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1514, %r1506, %r1511;
	// end inline asm
	shr.u32 	%r1519, %r1497, 8;
	// begin inline asm
	lop3.b32 %r1517, %r830, %r1519, %r1498, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1521, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1522, %r1498, %r1521;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1525, %r1517, %r1522;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1528, %r841, %r1519, %r1509, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1532, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1533, %r1509, %r1532;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1536, %r1528, %r1533;
	// end inline asm
	// begin inline asm
	mov.b32 %r1544, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1555, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1543, %r16219, -2004318072;
	// begin inline asm
	lop3.b32 %r1541, %r830, %r1543, %r1544, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1545, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1546, %r1544, %r1545;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1549, %r1541, %r1546;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1552, %r841, %r1543, %r1555, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1556, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1557, %r1555, %r1556;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1560, %r1552, %r1557;
	// end inline asm
	shr.u32 	%r1565, %r1543, 8;
	// begin inline asm
	lop3.b32 %r1563, %r830, %r1565, %r1544, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1567, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1568, %r1544, %r1567;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1571, %r1563, %r1568;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1574, %r841, %r1565, %r1555, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1578, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1579, %r1555, %r1578;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1582, %r1574, %r1579;
	// end inline asm
	// begin inline asm
	mov.b32 %r1590, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1601, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1589, %r16220, -2004318072;
	// begin inline asm
	lop3.b32 %r1587, %r830, %r1589, %r1590, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1591, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1592, %r1590, %r1591;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1595, %r1587, %r1592;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1598, %r841, %r1589, %r1601, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1602, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1603, %r1601, %r1602;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1606, %r1598, %r1603;
	// end inline asm
	shr.u32 	%r1611, %r1589, 8;
	// begin inline asm
	lop3.b32 %r1609, %r830, %r1611, %r1590, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1613, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1614, %r1590, %r1613;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1617, %r1609, %r1614;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1620, %r841, %r1611, %r1601, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1624, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1625, %r1601, %r1624;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1628, %r1620, %r1625;
	// end inline asm
	// begin inline asm
	mov.b32 %r1636, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1647, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1635, %r16221, -2004318072;
	// begin inline asm
	lop3.b32 %r1633, %r830, %r1635, %r1636, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1637, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1638, %r1636, %r1637;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1641, %r1633, %r1638;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1644, %r841, %r1635, %r1647, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1648, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1649, %r1647, %r1648;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1652, %r1644, %r1649;
	// end inline asm
	shr.u32 	%r1657, %r1635, 8;
	// begin inline asm
	lop3.b32 %r1655, %r830, %r1657, %r1636, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1659, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1660, %r1636, %r1659;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1663, %r1655, %r1660;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1666, %r841, %r1657, %r1647, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1670, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1671, %r1647, %r1670;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1674, %r1666, %r1671;
	// end inline asm
	// begin inline asm
	mov.b32 %r1682, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1693, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1681, %r16222, -2004318072;
	// begin inline asm
	lop3.b32 %r1679, %r830, %r1681, %r1682, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1683, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1684, %r1682, %r1683;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1687, %r1679, %r1684;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1690, %r841, %r1681, %r1693, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1694, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1695, %r1693, %r1694;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1698, %r1690, %r1695;
	// end inline asm
	shr.u32 	%r1703, %r1681, 8;
	// begin inline asm
	lop3.b32 %r1701, %r830, %r1703, %r1682, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1705, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1706, %r1682, %r1705;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1709, %r1701, %r1706;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1712, %r841, %r1703, %r1693, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1716, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1717, %r1693, %r1716;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1720, %r1712, %r1717;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1723, %r274, %r1365, %r1197;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1727, %r274, %r1376, %r1202;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1731, %r274, %r1387, %r1207;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1735, %r274, %r1398, %r1212;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1739, %r274, %r1411, %r1217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1743, %r274, %r1422, %r1222;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1747, %r274, %r1433, %r1227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1751, %r274, %r1444, %r1232;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1755, %r274, %r1457, %r1237;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1759, %r274, %r1468, %r1242;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1763, %r274, %r1479, %r1247;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1767, %r274, %r1490, %r1252;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1771, %r274, %r1503, %r1257;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1775, %r274, %r1514, %r1262;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1779, %r274, %r1525, %r1267;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1783, %r274, %r1536, %r1272;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1787, %r292, %r1549, %r1277;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1791, %r292, %r1560, %r1282;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1795, %r292, %r1571, %r1287;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1799, %r292, %r1582, %r1292;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1803, %r292, %r1595, %r1297;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1807, %r292, %r1606, %r1302;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1811, %r292, %r1617, %r1307;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1815, %r292, %r1628, %r1312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1819, %r292, %r1641, %r1317;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1823, %r292, %r1652, %r1322;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1827, %r292, %r1663, %r1327;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1831, %r292, %r1674, %r1332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1835, %r292, %r1687, %r1337;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1839, %r292, %r1698, %r1342;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1843, %r292, %r1709, %r1347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1847, %r292, %r1720, %r1352;
	// end inline asm
	// begin inline asm
	mov.b32 %r1856, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1867, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1855, %r16211, -2004318072;
	// begin inline asm
	lop3.b32 %r1853, %r830, %r1855, %r1856, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1857, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1858, %r1856, %r1857;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1861, %r1853, %r1858;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1864, %r841, %r1855, %r1867, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1868, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1869, %r1867, %r1868;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1872, %r1864, %r1869;
	// end inline asm
	shr.u32 	%r1877, %r1855, 8;
	// begin inline asm
	lop3.b32 %r1875, %r830, %r1877, %r1856, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1879, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1880, %r1856, %r1879;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1883, %r1875, %r1880;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1886, %r841, %r1877, %r1867, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1890, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1891, %r1867, %r1890;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1894, %r1886, %r1891;
	// end inline asm
	// begin inline asm
	mov.b32 %r1902, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1913, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1901, %r16212, -2004318072;
	// begin inline asm
	lop3.b32 %r1899, %r830, %r1901, %r1902, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1903, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1904, %r1902, %r1903;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1907, %r1899, %r1904;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1910, %r841, %r1901, %r1913, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1914, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1915, %r1913, %r1914;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1918, %r1910, %r1915;
	// end inline asm
	shr.u32 	%r1923, %r1901, 8;
	// begin inline asm
	lop3.b32 %r1921, %r830, %r1923, %r1902, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1925, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1926, %r1902, %r1925;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1929, %r1921, %r1926;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1932, %r841, %r1923, %r1913, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1936, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1937, %r1913, %r1936;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1940, %r1932, %r1937;
	// end inline asm
	// begin inline asm
	mov.b32 %r1948, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1959, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1947, %r16213, -2004318072;
	// begin inline asm
	lop3.b32 %r1945, %r830, %r1947, %r1948, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1949, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1950, %r1948, %r1949;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1953, %r1945, %r1950;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1956, %r841, %r1947, %r1959, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1960, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1961, %r1959, %r1960;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1964, %r1956, %r1961;
	// end inline asm
	shr.u32 	%r1969, %r1947, 8;
	// begin inline asm
	lop3.b32 %r1967, %r830, %r1969, %r1948, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1971, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1972, %r1948, %r1971;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1975, %r1967, %r1972;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1978, %r841, %r1969, %r1959, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1982, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1983, %r1959, %r1982;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1986, %r1978, %r1983;
	// end inline asm
	// begin inline asm
	mov.b32 %r1994, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2005, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1993, %r16214, -2004318072;
	// begin inline asm
	lop3.b32 %r1991, %r830, %r1993, %r1994, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1995, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1996, %r1994, %r1995;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1999, %r1991, %r1996;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2002, %r841, %r1993, %r2005, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2006, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2007, %r2005, %r2006;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2010, %r2002, %r2007;
	// end inline asm
	shr.u32 	%r2015, %r1993, 8;
	// begin inline asm
	lop3.b32 %r2013, %r830, %r2015, %r1994, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2017, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2018, %r1994, %r2017;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2021, %r2013, %r2018;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2024, %r841, %r2015, %r2005, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2028, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2029, %r2005, %r2028;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2032, %r2024, %r2029;
	// end inline asm
	// begin inline asm
	mov.b32 %r2040, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2051, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2039, %r16223, -2004318072;
	// begin inline asm
	lop3.b32 %r2037, %r830, %r2039, %r2040, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2041, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2042, %r2040, %r2041;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2045, %r2037, %r2042;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2048, %r841, %r2039, %r2051, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2052, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2053, %r2051, %r2052;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2056, %r2048, %r2053;
	// end inline asm
	shr.u32 	%r2061, %r2039, 8;
	// begin inline asm
	lop3.b32 %r2059, %r830, %r2061, %r2040, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2063, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2064, %r2040, %r2063;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2067, %r2059, %r2064;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2070, %r841, %r2061, %r2051, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2074, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2075, %r2051, %r2074;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2078, %r2070, %r2075;
	// end inline asm
	// begin inline asm
	mov.b32 %r2086, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2097, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2085, %r16224, -2004318072;
	// begin inline asm
	lop3.b32 %r2083, %r830, %r2085, %r2086, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2087, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2088, %r2086, %r2087;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2091, %r2083, %r2088;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2094, %r841, %r2085, %r2097, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2098, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2099, %r2097, %r2098;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2102, %r2094, %r2099;
	// end inline asm
	shr.u32 	%r2107, %r2085, 8;
	// begin inline asm
	lop3.b32 %r2105, %r830, %r2107, %r2086, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2109, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2110, %r2086, %r2109;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2113, %r2105, %r2110;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2116, %r841, %r2107, %r2097, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2120, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2121, %r2097, %r2120;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2124, %r2116, %r2121;
	// end inline asm
	// begin inline asm
	mov.b32 %r2132, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2143, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2131, %r16225, -2004318072;
	// begin inline asm
	lop3.b32 %r2129, %r830, %r2131, %r2132, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2133, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2134, %r2132, %r2133;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2137, %r2129, %r2134;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2140, %r841, %r2131, %r2143, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2144, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2145, %r2143, %r2144;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2148, %r2140, %r2145;
	// end inline asm
	shr.u32 	%r2153, %r2131, 8;
	// begin inline asm
	lop3.b32 %r2151, %r830, %r2153, %r2132, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2155, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2156, %r2132, %r2155;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2159, %r2151, %r2156;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2162, %r841, %r2153, %r2143, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2166, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2167, %r2143, %r2166;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2170, %r2162, %r2167;
	// end inline asm
	// begin inline asm
	mov.b32 %r2178, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2189, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2177, %r16226, -2004318072;
	// begin inline asm
	lop3.b32 %r2175, %r830, %r2177, %r2178, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2179, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2180, %r2178, %r2179;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2183, %r2175, %r2180;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2186, %r841, %r2177, %r2189, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2190, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2191, %r2189, %r2190;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2194, %r2186, %r2191;
	// end inline asm
	shr.u32 	%r2199, %r2177, 8;
	// begin inline asm
	lop3.b32 %r2197, %r830, %r2199, %r2178, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2201, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2202, %r2178, %r2201;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2205, %r2197, %r2202;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2208, %r841, %r2199, %r2189, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2212, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2213, %r2189, %r2212;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2216, %r2208, %r2213;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2219, %r310;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2221, %r2219, %r1861, %r1723;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2225, %r310;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2227, %r2225, %r1872, %r1727;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2231, %r310;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2233, %r2231, %r1883, %r1731;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2237, %r310;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2239, %r2237, %r1894, %r1735;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2243, %r310;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2245, %r2243, %r1907, %r1739;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2249, %r310;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2251, %r2249, %r1918, %r1743;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2255, %r310;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2257, %r2255, %r1929, %r1747;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2261, %r310;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2263, %r2261, %r1940, %r1751;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2267, %r310;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2269, %r2267, %r1953, %r1755;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2273, %r310;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2275, %r2273, %r1964, %r1759;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2279, %r310;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2281, %r2279, %r1975, %r1763;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2285, %r310;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2287, %r2285, %r1986, %r1767;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2291, %r310;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2293, %r2291, %r1999, %r1771;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2297, %r310;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2299, %r2297, %r2010, %r1775;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2303, %r310;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2305, %r2303, %r2021, %r1779;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2309, %r310;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2311, %r2309, %r2032, %r1783;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2315, %r328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2317, %r2315, %r2045, %r1787;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2321, %r328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2323, %r2321, %r2056, %r1791;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2327, %r328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2329, %r2327, %r2067, %r1795;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2333, %r328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2335, %r2333, %r2078, %r1799;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2339, %r328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2341, %r2339, %r2091, %r1803;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2345, %r328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2347, %r2345, %r2102, %r1807;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2351, %r328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2353, %r2351, %r2113, %r1811;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2357, %r328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2359, %r2357, %r2124, %r1815;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2363, %r328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2365, %r2363, %r2137, %r1819;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2369, %r328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2371, %r2369, %r2148, %r1823;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2375, %r328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2377, %r2375, %r2159, %r1827;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2381, %r328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2383, %r2381, %r2170, %r1831;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2387, %r328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2389, %r2387, %r2183, %r1835;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2393, %r328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2395, %r2393, %r2194, %r1839;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2399, %r328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2401, %r2399, %r2205, %r1843;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2405, %r328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2407, %r2405, %r2216, %r1847;
	// end inline asm
	// begin inline asm
	mov.b32 %r2416, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2427, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2415, %r16215, -2004318072;
	// begin inline asm
	lop3.b32 %r2413, %r830, %r2415, %r2416, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2417, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2418, %r2416, %r2417;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2421, %r2413, %r2418;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2424, %r841, %r2415, %r2427, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2428, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2429, %r2427, %r2428;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2432, %r2424, %r2429;
	// end inline asm
	shr.u32 	%r2437, %r2415, 8;
	// begin inline asm
	lop3.b32 %r2435, %r830, %r2437, %r2416, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2439, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2440, %r2416, %r2439;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2443, %r2435, %r2440;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2446, %r841, %r2437, %r2427, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2450, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2451, %r2427, %r2450;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2454, %r2446, %r2451;
	// end inline asm
	// begin inline asm
	mov.b32 %r2462, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2473, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2461, %r16216, -2004318072;
	// begin inline asm
	lop3.b32 %r2459, %r830, %r2461, %r2462, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2463, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2464, %r2462, %r2463;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2467, %r2459, %r2464;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2470, %r841, %r2461, %r2473, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2474, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2475, %r2473, %r2474;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2478, %r2470, %r2475;
	// end inline asm
	shr.u32 	%r2483, %r2461, 8;
	// begin inline asm
	lop3.b32 %r2481, %r830, %r2483, %r2462, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2485, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2486, %r2462, %r2485;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2489, %r2481, %r2486;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2492, %r841, %r2483, %r2473, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2496, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2497, %r2473, %r2496;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2500, %r2492, %r2497;
	// end inline asm
	// begin inline asm
	mov.b32 %r2508, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2519, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2507, %r16217, -2004318072;
	// begin inline asm
	lop3.b32 %r2505, %r830, %r2507, %r2508, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2509, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2510, %r2508, %r2509;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2513, %r2505, %r2510;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2516, %r841, %r2507, %r2519, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2520, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2521, %r2519, %r2520;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2524, %r2516, %r2521;
	// end inline asm
	shr.u32 	%r2529, %r2507, 8;
	// begin inline asm
	lop3.b32 %r2527, %r830, %r2529, %r2508, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2531, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2532, %r2508, %r2531;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2535, %r2527, %r2532;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2538, %r841, %r2529, %r2519, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2542, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2543, %r2519, %r2542;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2546, %r2538, %r2543;
	// end inline asm
	// begin inline asm
	mov.b32 %r2554, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2565, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2553, %r16218, -2004318072;
	// begin inline asm
	lop3.b32 %r2551, %r830, %r2553, %r2554, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2555, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2556, %r2554, %r2555;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2559, %r2551, %r2556;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2562, %r841, %r2553, %r2565, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2566, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2567, %r2565, %r2566;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2570, %r2562, %r2567;
	// end inline asm
	shr.u32 	%r2575, %r2553, 8;
	// begin inline asm
	lop3.b32 %r2573, %r830, %r2575, %r2554, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2577, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2578, %r2554, %r2577;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2581, %r2573, %r2578;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2584, %r841, %r2575, %r2565, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2588, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2589, %r2565, %r2588;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2592, %r2584, %r2589;
	// end inline asm
	// begin inline asm
	mov.b32 %r2600, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2611, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2599, %r16227, -2004318072;
	// begin inline asm
	lop3.b32 %r2597, %r830, %r2599, %r2600, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2601, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2602, %r2600, %r2601;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2605, %r2597, %r2602;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2608, %r841, %r2599, %r2611, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2612, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2613, %r2611, %r2612;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2616, %r2608, %r2613;
	// end inline asm
	shr.u32 	%r2621, %r2599, 8;
	// begin inline asm
	lop3.b32 %r2619, %r830, %r2621, %r2600, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2623, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2624, %r2600, %r2623;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2627, %r2619, %r2624;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2630, %r841, %r2621, %r2611, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2634, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2635, %r2611, %r2634;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2638, %r2630, %r2635;
	// end inline asm
	// begin inline asm
	mov.b32 %r2646, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2657, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2645, %r16228, -2004318072;
	// begin inline asm
	lop3.b32 %r2643, %r830, %r2645, %r2646, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2647, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2648, %r2646, %r2647;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2651, %r2643, %r2648;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2654, %r841, %r2645, %r2657, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2658, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2659, %r2657, %r2658;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2662, %r2654, %r2659;
	// end inline asm
	shr.u32 	%r2667, %r2645, 8;
	// begin inline asm
	lop3.b32 %r2665, %r830, %r2667, %r2646, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2669, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2670, %r2646, %r2669;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2673, %r2665, %r2670;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2676, %r841, %r2667, %r2657, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2680, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2681, %r2657, %r2680;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2684, %r2676, %r2681;
	// end inline asm
	// begin inline asm
	mov.b32 %r2692, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2703, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2691, %r16229, -2004318072;
	// begin inline asm
	lop3.b32 %r2689, %r830, %r2691, %r2692, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2693, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2694, %r2692, %r2693;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2697, %r2689, %r2694;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2700, %r841, %r2691, %r2703, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2704, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2705, %r2703, %r2704;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2708, %r2700, %r2705;
	// end inline asm
	shr.u32 	%r2713, %r2691, 8;
	// begin inline asm
	lop3.b32 %r2711, %r830, %r2713, %r2692, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2715, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2716, %r2692, %r2715;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2719, %r2711, %r2716;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2722, %r841, %r2713, %r2703, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2726, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2727, %r2703, %r2726;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2730, %r2722, %r2727;
	// end inline asm
	// begin inline asm
	mov.b32 %r2738, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2749, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2737, %r16230, -2004318072;
	// begin inline asm
	lop3.b32 %r2735, %r830, %r2737, %r2738, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2739, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2740, %r2738, %r2739;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2743, %r2735, %r2740;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2746, %r841, %r2737, %r2749, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2750, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2751, %r2749, %r2750;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2754, %r2746, %r2751;
	// end inline asm
	shr.u32 	%r2759, %r2737, 8;
	// begin inline asm
	lop3.b32 %r2757, %r830, %r2759, %r2738, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2761, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2762, %r2738, %r2761;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2765, %r2757, %r2762;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2768, %r841, %r2759, %r2749, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2772, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2773, %r2749, %r2772;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2776, %r2768, %r2773;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2914, %r346, %r2421, %r2221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2911, %r346, %r2432, %r2227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2923, %r346, %r2443, %r2233;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2920, %r346, %r2454, %r2239;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2932, %r346, %r2467, %r2245;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2929, %r346, %r2478, %r2251;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2941, %r346, %r2489, %r2257;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2938, %r346, %r2500, %r2263;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2950, %r346, %r2513, %r2269;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2947, %r346, %r2524, %r2275;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2959, %r346, %r2535, %r2281;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2956, %r346, %r2546, %r2287;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2968, %r346, %r2559, %r2293;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2965, %r346, %r2570, %r2299;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2977, %r346, %r2581, %r2305;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2974, %r346, %r2592, %r2311;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2986, %r364, %r2605, %r2317;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2983, %r364, %r2616, %r2323;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2995, %r364, %r2627, %r2329;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2992, %r364, %r2638, %r2335;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3004, %r364, %r2651, %r2341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3001, %r364, %r2662, %r2347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3013, %r364, %r2673, %r2353;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3010, %r364, %r2684, %r2359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3022, %r364, %r2697, %r2365;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3019, %r364, %r2708, %r2371;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3031, %r364, %r2719, %r2377;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3028, %r364, %r2730, %r2383;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3040, %r364, %r2743, %r2389;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3037, %r364, %r2754, %r2395;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3049, %r364, %r2765, %r2401;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3046, %r364, %r2776, %r2407;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2907, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2909, %r2907, %r2911;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2912, %r428, %r2914, %r2909;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2916, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2918, %r2916, %r2920;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2921, %r428, %r2923, %r2918;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2925, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2927, %r2925, %r2929;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2930, %r428, %r2932, %r2927;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2934, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2936, %r2934, %r2938;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2939, %r428, %r2941, %r2936;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2943, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2945, %r2943, %r2947;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2948, %r428, %r2950, %r2945;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2952, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2954, %r2952, %r2956;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2957, %r428, %r2959, %r2954;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2961, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2963, %r2961, %r2965;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2966, %r428, %r2968, %r2963;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2970, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2972, %r2970, %r2974;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2975, %r428, %r2977, %r2972;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2979, %r437;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2981, %r2979, %r2983;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2984, %r431, %r2986, %r2981;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2988, %r437;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2990, %r2988, %r2992;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2993, %r431, %r2995, %r2990;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2997, %r437;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2999, %r2997, %r3001;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3002, %r431, %r3004, %r2999;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3006, %r437;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3008, %r3006, %r3010;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3011, %r431, %r3013, %r3008;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3015, %r437;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3017, %r3015, %r3019;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3020, %r431, %r3022, %r3017;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3024, %r437;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3026, %r3024, %r3028;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3029, %r431, %r3031, %r3026;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3033, %r437;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3035, %r3033, %r3037;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3038, %r431, %r3040, %r3035;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3042, %r437;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3044, %r3042, %r3046;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3047, %r431, %r3049, %r3044;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3051, %r434, %r2914;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3054, %r428, %r2911, %r3051;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3058, %r434, %r2923;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3061, %r428, %r2920, %r3058;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3065, %r434, %r2932;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3068, %r428, %r2929, %r3065;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3072, %r434, %r2941;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3075, %r428, %r2938, %r3072;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3079, %r434, %r2950;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3082, %r428, %r2947, %r3079;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3086, %r434, %r2959;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3089, %r428, %r2956, %r3086;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3093, %r434, %r2968;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3096, %r428, %r2965, %r3093;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3100, %r434, %r2977;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3103, %r428, %r2974, %r3100;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3107, %r437, %r2986;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3110, %r431, %r2983, %r3107;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3114, %r437, %r2995;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3117, %r431, %r2992, %r3114;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3121, %r437, %r3004;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3124, %r431, %r3001, %r3121;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3128, %r437, %r3013;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3131, %r431, %r3010, %r3128;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3135, %r437, %r3022;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3138, %r431, %r3019, %r3135;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3142, %r437, %r3031;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3145, %r431, %r3028, %r3142;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3149, %r437, %r3040;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3152, %r431, %r3037, %r3149;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3156, %r437, %r3049;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3159, %r431, %r3046, %r3156;
	// end inline asm
	mov.u32 	%r3171, 0;
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3330, %r3327}, {%r476, %r482, %r479, %r485}, {%r2912, %r3054}, {%r3171, %r3171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3339, %r3336}, {%r476, %r482, %r479, %r485}, {%r2921, %r3061}, {%r3171, %r3171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3348, %r3345}, {%r476, %r482, %r479, %r485}, {%r2930, %r3068}, {%r3171, %r3171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3357, %r3354}, {%r476, %r482, %r479, %r485}, {%r2939, %r3075}, {%r3171, %r3171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3366, %r3363}, {%r476, %r482, %r479, %r485}, {%r2948, %r3082}, {%r3171, %r3171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3375, %r3372}, {%r476, %r482, %r479, %r485}, {%r2957, %r3089}, {%r3171, %r3171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3384, %r3381}, {%r476, %r482, %r479, %r485}, {%r2966, %r3096}, {%r3171, %r3171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3393, %r3390}, {%r476, %r482, %r479, %r485}, {%r2975, %r3103}, {%r3171, %r3171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3402, %r3399}, {%r476, %r482, %r479, %r485}, {%r2984, %r3110}, {%r3171, %r3171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3411, %r3408}, {%r476, %r482, %r479, %r485}, {%r2993, %r3117}, {%r3171, %r3171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3420, %r3417}, {%r476, %r482, %r479, %r485}, {%r3002, %r3124}, {%r3171, %r3171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3429, %r3426}, {%r476, %r482, %r479, %r485}, {%r3011, %r3131}, {%r3171, %r3171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3438, %r3435}, {%r476, %r482, %r479, %r485}, {%r3020, %r3138}, {%r3171, %r3171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3447, %r3444}, {%r476, %r482, %r479, %r485}, {%r3029, %r3145}, {%r3171, %r3171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3456, %r3453}, {%r476, %r482, %r479, %r485}, {%r3038, %r3152}, {%r3171, %r3171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3465, %r3462}, {%r476, %r482, %r479, %r485}, {%r3047, %r3159}, {%r3171, %r3171};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3323, %r526;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3325, %r3323, %r3327;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3328, %r523, %r3330, %r3325;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3332, %r526;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3334, %r3332, %r3336;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3337, %r523, %r3339, %r3334;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3341, %r526;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3343, %r3341, %r3345;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3346, %r523, %r3348, %r3343;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3350, %r526;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3352, %r3350, %r3354;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3355, %r523, %r3357, %r3352;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3359, %r526;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3361, %r3359, %r3363;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3364, %r523, %r3366, %r3361;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3368, %r526;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3370, %r3368, %r3372;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3373, %r523, %r3375, %r3370;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3377, %r526;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3379, %r3377, %r3381;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3382, %r523, %r3384, %r3379;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3386, %r526;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3388, %r3386, %r3390;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3391, %r523, %r3393, %r3388;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3395, %r526;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3397, %r3395, %r3399;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3400, %r523, %r3402, %r3397;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3404, %r526;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3406, %r3404, %r3408;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3409, %r523, %r3411, %r3406;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3413, %r526;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3415, %r3413, %r3417;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3418, %r523, %r3420, %r3415;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3422, %r526;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3424, %r3422, %r3426;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3427, %r523, %r3429, %r3424;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3431, %r526;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3433, %r3431, %r3435;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3436, %r523, %r3438, %r3433;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3440, %r526;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3442, %r3440, %r3444;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3445, %r523, %r3447, %r3442;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3449, %r526;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3451, %r3449, %r3453;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3454, %r523, %r3456, %r3451;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3458, %r526;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3460, %r3458, %r3462;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3463, %r523, %r3465, %r3460;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3467, %r526, %r3330;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3470, %r523, %r3327, %r3467;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3474, %r526, %r3339;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3477, %r523, %r3336, %r3474;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3481, %r526, %r3348;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3484, %r523, %r3345, %r3481;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3488, %r526, %r3357;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3491, %r523, %r3354, %r3488;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3495, %r526, %r3366;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3498, %r523, %r3363, %r3495;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3502, %r526, %r3375;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3505, %r523, %r3372, %r3502;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3509, %r526, %r3384;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3512, %r523, %r3381, %r3509;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3516, %r526, %r3393;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3519, %r523, %r3390, %r3516;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3523, %r526, %r3402;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3526, %r523, %r3399, %r3523;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3530, %r526, %r3411;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3533, %r523, %r3408, %r3530;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3537, %r526, %r3420;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3540, %r523, %r3417, %r3537;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3544, %r526, %r3429;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3547, %r523, %r3426, %r3544;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3551, %r526, %r3438;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3554, %r523, %r3435, %r3551;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3558, %r526, %r3447;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3561, %r523, %r3444, %r3558;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3565, %r526, %r3456;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3568, %r523, %r3453, %r3565;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3572, %r526, %r3465;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3575, %r523, %r3462, %r3572;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3868, %r3871}, {%r566, %r572, %r569, %r575}, {%r3328, %r3470}, {%r3171, %r3171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3874, %r3877}, {%r566, %r572, %r569, %r575}, {%r3337, %r3477}, {%r3171, %r3171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3880, %r3883}, {%r566, %r572, %r569, %r575}, {%r3346, %r3484}, {%r3171, %r3171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3886, %r3889}, {%r566, %r572, %r569, %r575}, {%r3355, %r3491}, {%r3171, %r3171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3892, %r3895}, {%r566, %r572, %r569, %r575}, {%r3364, %r3498}, {%r3171, %r3171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3898, %r3901}, {%r566, %r572, %r569, %r575}, {%r3373, %r3505}, {%r3171, %r3171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3904, %r3907}, {%r566, %r572, %r569, %r575}, {%r3382, %r3512}, {%r3171, %r3171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3910, %r3913}, {%r566, %r572, %r569, %r575}, {%r3391, %r3519}, {%r3171, %r3171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3869, %r3872}, {%r566, %r572, %r569, %r575}, {%r3400, %r3526}, {%r3171, %r3171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3875, %r3878}, {%r566, %r572, %r569, %r575}, {%r3409, %r3533}, {%r3171, %r3171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3881, %r3884}, {%r566, %r572, %r569, %r575}, {%r3418, %r3540}, {%r3171, %r3171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3887, %r3890}, {%r566, %r572, %r569, %r575}, {%r3427, %r3547}, {%r3171, %r3171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3893, %r3896}, {%r566, %r572, %r569, %r575}, {%r3436, %r3554}, {%r3171, %r3171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3899, %r3902}, {%r566, %r572, %r569, %r575}, {%r3445, %r3561}, {%r3171, %r3171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3905, %r3908}, {%r566, %r572, %r569, %r575}, {%r3454, %r3568}, {%r3171, %r3171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3911, %r3914}, {%r566, %r572, %r569, %r575}, {%r3463, %r3575}, {%r3171, %r3171};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3867, %r3868, %r3869;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3870, %r3871, %r3872;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3873, %r3874, %r3875;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3876, %r3877, %r3878;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3879, %r3880, %r3881;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3882, %r3883, %r3884;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3885, %r3886, %r3887;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3888, %r3889, %r3890;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3891, %r3892, %r3893;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3894, %r3895, %r3896;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3897, %r3898, %r3899;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3900, %r3901, %r3902;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3903, %r3904, %r3905;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3906, %r3907, %r3908;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3909, %r3910, %r3911;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3912, %r3913, %r3914;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3915, %r3868, %r3869;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3918, %r3871, %r3872;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3921, %r3874, %r3875;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3924, %r3877, %r3878;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3927, %r3880, %r3881;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3930, %r3883, %r3884;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3933, %r3886, %r3887;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3936, %r3889, %r3890;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3939, %r3892, %r3893;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3942, %r3895, %r3896;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3945, %r3898, %r3899;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3948, %r3901, %r3902;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3951, %r3904, %r3905;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3954, %r3907, %r3908;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3957, %r3910, %r3911;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3960, %r3913, %r3914;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3963, %r190, %r3867;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3966, %r190, %r3870;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3969, %r190, %r3873;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3972, %r190, %r3876;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3975, %r190, %r3879;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3978, %r190, %r3882;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3981, %r190, %r3885;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3984, %r190, %r3888;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3987, %r190, %r3891;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3990, %r190, %r3894;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3993, %r190, %r3897;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3996, %r190, %r3900;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3999, %r190, %r3903;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4002, %r190, %r3906;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4005, %r190, %r3909;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4008, %r190, %r3912;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4011, %r191, %r3915;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4014, %r191, %r3918;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4017, %r191, %r3921;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4020, %r191, %r3924;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4023, %r191, %r3927;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4026, %r191, %r3930;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4029, %r191, %r3933;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4032, %r191, %r3936;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4035, %r191, %r3939;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4038, %r191, %r3942;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4041, %r191, %r3945;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4044, %r191, %r3948;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4047, %r191, %r3951;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4050, %r191, %r3954;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4053, %r191, %r3957;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4056, %r191, %r3960;
	// end inline asm
	// begin inline asm
	mov.b32 %r4059, {%rs2307, %rs2307};
	// end inline asm
	mov.u16 	%rs408, 18176;
	// begin inline asm
	mov.b32 %r4060, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4061, %r3963, %r4059;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4064, %r4061, %r4060;
	// end inline asm
	// begin inline asm
	mov.b32 %r4067, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4068, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4069, %r3966, %r4067;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4072, %r4069, %r4068;
	// end inline asm
	// begin inline asm
	mov.b32 %r4075, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4076, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4077, %r3969, %r4075;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4080, %r4077, %r4076;
	// end inline asm
	// begin inline asm
	mov.b32 %r4083, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4084, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4085, %r3972, %r4083;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4088, %r4085, %r4084;
	// end inline asm
	// begin inline asm
	mov.b32 %r4091, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4092, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4093, %r3975, %r4091;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4096, %r4093, %r4092;
	// end inline asm
	// begin inline asm
	mov.b32 %r4099, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4100, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4101, %r3978, %r4099;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4104, %r4101, %r4100;
	// end inline asm
	// begin inline asm
	mov.b32 %r4107, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4108, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4109, %r3981, %r4107;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4112, %r4109, %r4108;
	// end inline asm
	// begin inline asm
	mov.b32 %r4115, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4116, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4117, %r3984, %r4115;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4120, %r4117, %r4116;
	// end inline asm
	// begin inline asm
	mov.b32 %r4123, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4124, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4125, %r3987, %r4123;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4128, %r4125, %r4124;
	// end inline asm
	// begin inline asm
	mov.b32 %r4131, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4132, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4133, %r3990, %r4131;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4136, %r4133, %r4132;
	// end inline asm
	// begin inline asm
	mov.b32 %r4139, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4140, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4141, %r3993, %r4139;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4144, %r4141, %r4140;
	// end inline asm
	// begin inline asm
	mov.b32 %r4147, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4148, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4149, %r3996, %r4147;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4152, %r4149, %r4148;
	// end inline asm
	// begin inline asm
	mov.b32 %r4155, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4156, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4157, %r3999, %r4155;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4160, %r4157, %r4156;
	// end inline asm
	// begin inline asm
	mov.b32 %r4163, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4164, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4165, %r4002, %r4163;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4168, %r4165, %r4164;
	// end inline asm
	// begin inline asm
	mov.b32 %r4171, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4172, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4173, %r4005, %r4171;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4176, %r4173, %r4172;
	// end inline asm
	// begin inline asm
	mov.b32 %r4179, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4180, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4181, %r4008, %r4179;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4184, %r4181, %r4180;
	// end inline asm
	// begin inline asm
	mov.b32 %r4187, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4188, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4189, %r4011, %r4187;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4192, %r4189, %r4188;
	// end inline asm
	// begin inline asm
	mov.b32 %r4195, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4196, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4197, %r4014, %r4195;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4200, %r4197, %r4196;
	// end inline asm
	// begin inline asm
	mov.b32 %r4203, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4204, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4205, %r4017, %r4203;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4208, %r4205, %r4204;
	// end inline asm
	// begin inline asm
	mov.b32 %r4211, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4212, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4213, %r4020, %r4211;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4216, %r4213, %r4212;
	// end inline asm
	// begin inline asm
	mov.b32 %r4219, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4220, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4221, %r4023, %r4219;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4224, %r4221, %r4220;
	// end inline asm
	// begin inline asm
	mov.b32 %r4227, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4228, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4229, %r4026, %r4227;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4232, %r4229, %r4228;
	// end inline asm
	// begin inline asm
	mov.b32 %r4235, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4236, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4237, %r4029, %r4235;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4240, %r4237, %r4236;
	// end inline asm
	// begin inline asm
	mov.b32 %r4243, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4244, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4245, %r4032, %r4243;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4248, %r4245, %r4244;
	// end inline asm
	// begin inline asm
	mov.b32 %r4251, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4252, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4253, %r4035, %r4251;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4256, %r4253, %r4252;
	// end inline asm
	// begin inline asm
	mov.b32 %r4259, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4260, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4261, %r4038, %r4259;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4264, %r4261, %r4260;
	// end inline asm
	// begin inline asm
	mov.b32 %r4267, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4268, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4269, %r4041, %r4267;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4272, %r4269, %r4268;
	// end inline asm
	// begin inline asm
	mov.b32 %r4275, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4276, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4277, %r4044, %r4275;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4280, %r4277, %r4276;
	// end inline asm
	// begin inline asm
	mov.b32 %r4283, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4284, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4285, %r4047, %r4283;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4288, %r4285, %r4284;
	// end inline asm
	// begin inline asm
	mov.b32 %r4291, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4292, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4293, %r4050, %r4291;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4296, %r4293, %r4292;
	// end inline asm
	// begin inline asm
	mov.b32 %r4299, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4300, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4301, %r4053, %r4299;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4304, %r4301, %r4300;
	// end inline asm
	// begin inline asm
	mov.b32 %r4307, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4308, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4309, %r4056, %r4307;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4312, %r4309, %r4308;
	// end inline asm
	// begin inline asm
	mov.b32 %r4318, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4316, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4317, %r4318, %r4316;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4320, %r4064, %r4317;
	// end inline asm
	// begin inline asm
	mov.b32 %r4323, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4324, %r4318, %r4323;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4327, %r4072, %r4324;
	// end inline asm
	// begin inline asm
	mov.b32 %r4330, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4331, %r4318, %r4330;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4334, %r4080, %r4331;
	// end inline asm
	// begin inline asm
	mov.b32 %r4337, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4338, %r4318, %r4337;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4341, %r4088, %r4338;
	// end inline asm
	mov.u32 	%r4347, 25152;
	// begin inline asm
	prmt.b32 %r4344, %r4320, %r4334, %r4347;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4348, %r4327, %r4341, %r4347;
	// end inline asm
	shl.b32 	%r4355, %r4348, 4;
	mov.u32 	%r4353, 252645135;
	// begin inline asm
	lop3.b32 %r4352, %r4353, %r4344, %r4355, 202;
	// end inline asm
	xor.b32  	%r16099, %r4352, -2004318072;
	// begin inline asm
	mov.b32 %r4359, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4357, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4358, %r4359, %r4357;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4361, %r4096, %r4358;
	// end inline asm
	// begin inline asm
	mov.b32 %r4364, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4365, %r4359, %r4364;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4368, %r4104, %r4365;
	// end inline asm
	// begin inline asm
	mov.b32 %r4371, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4372, %r4359, %r4371;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4375, %r4112, %r4372;
	// end inline asm
	// begin inline asm
	mov.b32 %r4378, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4379, %r4359, %r4378;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4382, %r4120, %r4379;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4385, %r4361, %r4375, %r4347;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4389, %r4368, %r4382, %r4347;
	// end inline asm
	shl.b32 	%r4396, %r4389, 4;
	// begin inline asm
	lop3.b32 %r4393, %r4353, %r4385, %r4396, 202;
	// end inline asm
	xor.b32  	%r16100, %r4393, -2004318072;
	// begin inline asm
	mov.b32 %r4400, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4398, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4399, %r4400, %r4398;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4402, %r4128, %r4399;
	// end inline asm
	// begin inline asm
	mov.b32 %r4405, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4406, %r4400, %r4405;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4409, %r4136, %r4406;
	// end inline asm
	// begin inline asm
	mov.b32 %r4412, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4413, %r4400, %r4412;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4416, %r4144, %r4413;
	// end inline asm
	// begin inline asm
	mov.b32 %r4419, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4420, %r4400, %r4419;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4423, %r4152, %r4420;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4426, %r4402, %r4416, %r4347;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4430, %r4409, %r4423, %r4347;
	// end inline asm
	shl.b32 	%r4437, %r4430, 4;
	// begin inline asm
	lop3.b32 %r4434, %r4353, %r4426, %r4437, 202;
	// end inline asm
	xor.b32  	%r16101, %r4434, -2004318072;
	// begin inline asm
	mov.b32 %r4441, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4439, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4440, %r4441, %r4439;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4443, %r4160, %r4440;
	// end inline asm
	// begin inline asm
	mov.b32 %r4446, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4447, %r4441, %r4446;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4450, %r4168, %r4447;
	// end inline asm
	// begin inline asm
	mov.b32 %r4453, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4454, %r4441, %r4453;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4457, %r4176, %r4454;
	// end inline asm
	// begin inline asm
	mov.b32 %r4460, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4461, %r4441, %r4460;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4464, %r4184, %r4461;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4467, %r4443, %r4457, %r4347;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4471, %r4450, %r4464, %r4347;
	// end inline asm
	shl.b32 	%r4478, %r4471, 4;
	// begin inline asm
	lop3.b32 %r4475, %r4353, %r4467, %r4478, 202;
	// end inline asm
	xor.b32  	%r16102, %r4475, -2004318072;
	// begin inline asm
	mov.b32 %r4482, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4480, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4481, %r4482, %r4480;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4484, %r4192, %r4481;
	// end inline asm
	// begin inline asm
	mov.b32 %r4487, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4488, %r4482, %r4487;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4491, %r4200, %r4488;
	// end inline asm
	// begin inline asm
	mov.b32 %r4494, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4495, %r4482, %r4494;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4498, %r4208, %r4495;
	// end inline asm
	// begin inline asm
	mov.b32 %r4501, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4502, %r4482, %r4501;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4505, %r4216, %r4502;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4508, %r4484, %r4498, %r4347;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4512, %r4491, %r4505, %r4347;
	// end inline asm
	shl.b32 	%r4519, %r4512, 4;
	// begin inline asm
	lop3.b32 %r4516, %r4353, %r4508, %r4519, 202;
	// end inline asm
	xor.b32  	%r16103, %r4516, -2004318072;
	// begin inline asm
	mov.b32 %r4523, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4521, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4522, %r4523, %r4521;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4525, %r4224, %r4522;
	// end inline asm
	// begin inline asm
	mov.b32 %r4528, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4529, %r4523, %r4528;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4532, %r4232, %r4529;
	// end inline asm
	// begin inline asm
	mov.b32 %r4535, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4536, %r4523, %r4535;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4539, %r4240, %r4536;
	// end inline asm
	// begin inline asm
	mov.b32 %r4542, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4543, %r4523, %r4542;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4546, %r4248, %r4543;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4549, %r4525, %r4539, %r4347;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4553, %r4532, %r4546, %r4347;
	// end inline asm
	shl.b32 	%r4560, %r4553, 4;
	// begin inline asm
	lop3.b32 %r4557, %r4353, %r4549, %r4560, 202;
	// end inline asm
	xor.b32  	%r16104, %r4557, -2004318072;
	// begin inline asm
	mov.b32 %r4564, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4562, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4563, %r4564, %r4562;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4566, %r4256, %r4563;
	// end inline asm
	// begin inline asm
	mov.b32 %r4569, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4570, %r4564, %r4569;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4573, %r4264, %r4570;
	// end inline asm
	// begin inline asm
	mov.b32 %r4576, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4577, %r4564, %r4576;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4580, %r4272, %r4577;
	// end inline asm
	// begin inline asm
	mov.b32 %r4583, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4584, %r4564, %r4583;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4587, %r4280, %r4584;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4590, %r4566, %r4580, %r4347;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4594, %r4573, %r4587, %r4347;
	// end inline asm
	shl.b32 	%r4601, %r4594, 4;
	// begin inline asm
	lop3.b32 %r4598, %r4353, %r4590, %r4601, 202;
	// end inline asm
	xor.b32  	%r16105, %r4598, -2004318072;
	// begin inline asm
	mov.b32 %r4605, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4603, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4604, %r4605, %r4603;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4607, %r4288, %r4604;
	// end inline asm
	// begin inline asm
	mov.b32 %r4610, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4611, %r4605, %r4610;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4614, %r4296, %r4611;
	// end inline asm
	// begin inline asm
	mov.b32 %r4617, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4618, %r4605, %r4617;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4621, %r4304, %r4618;
	// end inline asm
	// begin inline asm
	mov.b32 %r4624, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4625, %r4605, %r4624;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4628, %r4312, %r4625;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4631, %r4607, %r4621, %r4347;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4635, %r4614, %r4628, %r4347;
	// end inline asm
	shl.b32 	%r4642, %r4635, 4;
	// begin inline asm
	lop3.b32 %r4639, %r4353, %r4631, %r4642, 202;
	// end inline asm
	xor.b32  	%r16106, %r4639, -2004318072;
	add.s64 	%rd131, %rd145, %rd30;
	st.shared.u32 	[%rd131], %r16099;
	add.s64 	%rd132, %rd145, %rd29;
	st.shared.u32 	[%rd132], %r16100;
	add.s64 	%rd133, %rd145, %rd28;
	st.shared.u32 	[%rd133], %r16101;
	add.s64 	%rd134, %rd145, %rd27;
	st.shared.u32 	[%rd134], %r16102;
	add.s64 	%rd135, %rd145, %rd26;
	st.shared.u32 	[%rd135], %r16103;
	add.s64 	%rd136, %rd145, %rd25;
	st.shared.u32 	[%rd136], %r16104;
	add.s64 	%rd137, %rd145, %rd24;
	st.shared.u32 	[%rd137], %r16105;
	add.s64 	%rd138, %rd145, %rd23;
	st.shared.u32 	[%rd138], %r16106;
	ld.shared.u32 	%r16207, [%rd123];
	ld.shared.u32 	%r16208, [%rd124];
	ld.shared.u32 	%r16209, [%rd125];
	ld.shared.u32 	%r16210, [%rd126];
	ld.shared.u32 	%r16219, [%rd127];
	ld.shared.u32 	%r16220, [%rd128];
	ld.shared.u32 	%r16221, [%rd129];
	ld.shared.u32 	%r16222, [%rd130];
	// begin inline asm
	mov.b32 %r4648, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4659, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4647, %r16207, -2004318072;
	// begin inline asm
	lop3.b32 %r4645, %r830, %r4647, %r4648, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4649, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4650, %r4648, %r4649;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4653, %r4645, %r4650;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4656, %r841, %r4647, %r4659, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4660, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4661, %r4659, %r4660;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4664, %r4656, %r4661;
	// end inline asm
	shr.u32 	%r4669, %r4647, 8;
	// begin inline asm
	lop3.b32 %r4667, %r830, %r4669, %r4648, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4671, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4672, %r4648, %r4671;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4675, %r4667, %r4672;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4678, %r841, %r4669, %r4659, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4682, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4683, %r4659, %r4682;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4686, %r4678, %r4683;
	// end inline asm
	// begin inline asm
	mov.b32 %r4694, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4705, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4693, %r16208, -2004318072;
	// begin inline asm
	lop3.b32 %r4691, %r830, %r4693, %r4694, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4695, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4696, %r4694, %r4695;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4699, %r4691, %r4696;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4702, %r841, %r4693, %r4705, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4706, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4707, %r4705, %r4706;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4710, %r4702, %r4707;
	// end inline asm
	shr.u32 	%r4715, %r4693, 8;
	// begin inline asm
	lop3.b32 %r4713, %r830, %r4715, %r4694, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4717, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4718, %r4694, %r4717;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4721, %r4713, %r4718;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4724, %r841, %r4715, %r4705, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4728, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4729, %r4705, %r4728;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4732, %r4724, %r4729;
	// end inline asm
	// begin inline asm
	mov.b32 %r4740, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4751, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4739, %r16209, -2004318072;
	// begin inline asm
	lop3.b32 %r4737, %r830, %r4739, %r4740, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4741, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4742, %r4740, %r4741;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4745, %r4737, %r4742;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4748, %r841, %r4739, %r4751, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4752, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4753, %r4751, %r4752;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4756, %r4748, %r4753;
	// end inline asm
	shr.u32 	%r4761, %r4739, 8;
	// begin inline asm
	lop3.b32 %r4759, %r830, %r4761, %r4740, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4763, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4764, %r4740, %r4763;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4767, %r4759, %r4764;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4770, %r841, %r4761, %r4751, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4774, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4775, %r4751, %r4774;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4778, %r4770, %r4775;
	// end inline asm
	// begin inline asm
	mov.b32 %r4786, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4797, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4785, %r16210, -2004318072;
	// begin inline asm
	lop3.b32 %r4783, %r830, %r4785, %r4786, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4787, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4788, %r4786, %r4787;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4791, %r4783, %r4788;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4794, %r841, %r4785, %r4797, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4798, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4799, %r4797, %r4798;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4802, %r4794, %r4799;
	// end inline asm
	shr.u32 	%r4807, %r4785, 8;
	// begin inline asm
	lop3.b32 %r4805, %r830, %r4807, %r4786, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4809, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4810, %r4786, %r4809;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4813, %r4805, %r4810;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4816, %r841, %r4807, %r4797, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4820, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4821, %r4797, %r4820;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4824, %r4816, %r4821;
	// end inline asm
	// begin inline asm
	mov.b32 %r4832, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4843, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4831, %r16219, -2004318072;
	// begin inline asm
	lop3.b32 %r4829, %r830, %r4831, %r4832, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4833, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4834, %r4832, %r4833;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4837, %r4829, %r4834;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4840, %r841, %r4831, %r4843, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4844, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4845, %r4843, %r4844;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4848, %r4840, %r4845;
	// end inline asm
	shr.u32 	%r4853, %r4831, 8;
	// begin inline asm
	lop3.b32 %r4851, %r830, %r4853, %r4832, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4855, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4856, %r4832, %r4855;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4859, %r4851, %r4856;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4862, %r841, %r4853, %r4843, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4866, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4867, %r4843, %r4866;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4870, %r4862, %r4867;
	// end inline asm
	// begin inline asm
	mov.b32 %r4878, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4889, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4877, %r16220, -2004318072;
	// begin inline asm
	lop3.b32 %r4875, %r830, %r4877, %r4878, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4879, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4880, %r4878, %r4879;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4883, %r4875, %r4880;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4886, %r841, %r4877, %r4889, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4890, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4891, %r4889, %r4890;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4894, %r4886, %r4891;
	// end inline asm
	shr.u32 	%r4899, %r4877, 8;
	// begin inline asm
	lop3.b32 %r4897, %r830, %r4899, %r4878, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4901, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4902, %r4878, %r4901;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4905, %r4897, %r4902;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4908, %r841, %r4899, %r4889, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4912, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4913, %r4889, %r4912;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4916, %r4908, %r4913;
	// end inline asm
	// begin inline asm
	mov.b32 %r4924, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4935, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4923, %r16221, -2004318072;
	// begin inline asm
	lop3.b32 %r4921, %r830, %r4923, %r4924, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4925, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4926, %r4924, %r4925;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4929, %r4921, %r4926;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4932, %r841, %r4923, %r4935, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4936, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4937, %r4935, %r4936;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4940, %r4932, %r4937;
	// end inline asm
	shr.u32 	%r4945, %r4923, 8;
	// begin inline asm
	lop3.b32 %r4943, %r830, %r4945, %r4924, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4947, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4948, %r4924, %r4947;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4951, %r4943, %r4948;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4954, %r841, %r4945, %r4935, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4958, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4959, %r4935, %r4958;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4962, %r4954, %r4959;
	// end inline asm
	// begin inline asm
	mov.b32 %r4970, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4981, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4969, %r16222, -2004318072;
	// begin inline asm
	lop3.b32 %r4967, %r830, %r4969, %r4970, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4971, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4972, %r4970, %r4971;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4975, %r4967, %r4972;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4978, %r841, %r4969, %r4981, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4982, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4983, %r4981, %r4982;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4986, %r4978, %r4983;
	// end inline asm
	shr.u32 	%r4991, %r4969, 8;
	// begin inline asm
	lop3.b32 %r4989, %r830, %r4991, %r4970, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4993, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4994, %r4970, %r4993;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4997, %r4989, %r4994;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5000, %r841, %r4991, %r4981, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5004, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5005, %r4981, %r5004;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5008, %r5000, %r5005;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5011, %r382;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5013, %r5011, %r4653;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5016, %r382;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5018, %r5016, %r4664;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5021, %r382;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5023, %r5021, %r4675;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5026, %r382;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5028, %r5026, %r4686;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5031, %r382;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5033, %r5031, %r4699;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5036, %r382;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5038, %r5036, %r4710;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5041, %r382;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5043, %r5041, %r4721;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5046, %r382;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5048, %r5046, %r4732;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5051, %r382;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5053, %r5051, %r4745;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5056, %r382;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5058, %r5056, %r4756;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5061, %r382;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5063, %r5061, %r4767;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5066, %r382;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5068, %r5066, %r4778;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5071, %r382;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5073, %r5071, %r4791;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5076, %r382;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5078, %r5076, %r4802;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5081, %r382;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5083, %r5081, %r4813;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5086, %r382;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5088, %r5086, %r4824;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5091, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5093, %r5091, %r4837;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5096, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5098, %r5096, %r4848;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5101, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5103, %r5101, %r4859;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5106, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5108, %r5106, %r4870;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5111, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5113, %r5111, %r4883;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5116, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5118, %r5116, %r4894;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5121, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5123, %r5121, %r4905;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5126, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5128, %r5126, %r4916;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5131, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5133, %r5131, %r4929;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5136, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5138, %r5136, %r4940;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5141, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5143, %r5141, %r4951;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5146, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5148, %r5146, %r4962;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5151, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5153, %r5151, %r4975;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5156, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5158, %r5156, %r4986;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5161, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5163, %r5161, %r4997;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5166, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5168, %r5166, %r5008;
	// end inline asm
	// begin inline asm
	mov.b32 %r5176, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5187, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5173, %r830, %r1855, %r5176, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5177, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5178, %r5176, %r5177;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5181, %r5173, %r5178;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5184, %r841, %r1855, %r5187, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5188, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5189, %r5187, %r5188;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5192, %r5184, %r5189;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5195, %r830, %r1877, %r5176, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5199, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5200, %r5176, %r5199;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5203, %r5195, %r5200;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5206, %r841, %r1877, %r5187, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5210, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5211, %r5187, %r5210;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5214, %r5206, %r5211;
	// end inline asm
	// begin inline asm
	mov.b32 %r5222, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5233, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5219, %r830, %r1901, %r5222, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5223, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5224, %r5222, %r5223;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5227, %r5219, %r5224;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5230, %r841, %r1901, %r5233, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5234, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5235, %r5233, %r5234;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5238, %r5230, %r5235;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5241, %r830, %r1923, %r5222, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5245, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5246, %r5222, %r5245;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5249, %r5241, %r5246;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5252, %r841, %r1923, %r5233, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5256, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5257, %r5233, %r5256;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5260, %r5252, %r5257;
	// end inline asm
	// begin inline asm
	mov.b32 %r5268, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5279, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5265, %r830, %r1947, %r5268, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5269, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5270, %r5268, %r5269;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5273, %r5265, %r5270;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5276, %r841, %r1947, %r5279, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5280, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5281, %r5279, %r5280;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5284, %r5276, %r5281;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5287, %r830, %r1969, %r5268, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5291, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5292, %r5268, %r5291;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5295, %r5287, %r5292;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5298, %r841, %r1969, %r5279, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5302, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5303, %r5279, %r5302;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5306, %r5298, %r5303;
	// end inline asm
	// begin inline asm
	mov.b32 %r5314, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5325, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5311, %r830, %r1993, %r5314, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5315, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5316, %r5314, %r5315;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5319, %r5311, %r5316;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5322, %r841, %r1993, %r5325, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5326, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5327, %r5325, %r5326;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5330, %r5322, %r5327;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5333, %r830, %r2015, %r5314, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5337, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5338, %r5314, %r5337;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5341, %r5333, %r5338;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5344, %r841, %r2015, %r5325, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5348, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5349, %r5325, %r5348;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5352, %r5344, %r5349;
	// end inline asm
	// begin inline asm
	mov.b32 %r5360, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5371, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5357, %r830, %r2039, %r5360, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5361, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5362, %r5360, %r5361;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5365, %r5357, %r5362;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5368, %r841, %r2039, %r5371, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5372, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5373, %r5371, %r5372;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5376, %r5368, %r5373;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5379, %r830, %r2061, %r5360, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5383, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5384, %r5360, %r5383;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5387, %r5379, %r5384;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5390, %r841, %r2061, %r5371, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5394, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5395, %r5371, %r5394;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5398, %r5390, %r5395;
	// end inline asm
	// begin inline asm
	mov.b32 %r5406, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5417, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5403, %r830, %r2085, %r5406, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5407, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5408, %r5406, %r5407;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5411, %r5403, %r5408;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5414, %r841, %r2085, %r5417, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5418, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5419, %r5417, %r5418;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5422, %r5414, %r5419;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5425, %r830, %r2107, %r5406, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5429, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5430, %r5406, %r5429;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5433, %r5425, %r5430;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5436, %r841, %r2107, %r5417, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5440, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5441, %r5417, %r5440;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5444, %r5436, %r5441;
	// end inline asm
	// begin inline asm
	mov.b32 %r5452, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5463, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5449, %r830, %r2131, %r5452, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5453, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5454, %r5452, %r5453;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5457, %r5449, %r5454;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5460, %r841, %r2131, %r5463, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5464, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5465, %r5463, %r5464;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5468, %r5460, %r5465;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5471, %r830, %r2153, %r5452, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5475, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5476, %r5452, %r5475;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5479, %r5471, %r5476;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5482, %r841, %r2153, %r5463, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5486, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5487, %r5463, %r5486;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5490, %r5482, %r5487;
	// end inline asm
	// begin inline asm
	mov.b32 %r5498, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5509, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5495, %r830, %r2177, %r5498, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5499, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5500, %r5498, %r5499;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5503, %r5495, %r5500;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5506, %r841, %r2177, %r5509, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5510, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5511, %r5509, %r5510;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5514, %r5506, %r5511;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5517, %r830, %r2199, %r5498, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5521, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5522, %r5498, %r5521;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5525, %r5517, %r5522;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5528, %r841, %r2199, %r5509, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5532, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5533, %r5509, %r5532;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5536, %r5528, %r5533;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5539, %r274, %r5181, %r5013;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5543, %r274, %r5192, %r5018;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5547, %r274, %r5203, %r5023;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5551, %r274, %r5214, %r5028;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5555, %r274, %r5227, %r5033;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5559, %r274, %r5238, %r5038;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5563, %r274, %r5249, %r5043;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5567, %r274, %r5260, %r5048;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5571, %r274, %r5273, %r5053;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5575, %r274, %r5284, %r5058;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5579, %r274, %r5295, %r5063;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5583, %r274, %r5306, %r5068;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5587, %r274, %r5319, %r5073;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5591, %r274, %r5330, %r5078;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5595, %r274, %r5341, %r5083;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5599, %r274, %r5352, %r5088;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5603, %r292, %r5365, %r5093;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5607, %r292, %r5376, %r5098;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5611, %r292, %r5387, %r5103;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5615, %r292, %r5398, %r5108;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5619, %r292, %r5411, %r5113;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5623, %r292, %r5422, %r5118;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5627, %r292, %r5433, %r5123;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5631, %r292, %r5444, %r5128;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5635, %r292, %r5457, %r5133;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5639, %r292, %r5468, %r5138;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5643, %r292, %r5479, %r5143;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5647, %r292, %r5490, %r5148;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5651, %r292, %r5503, %r5153;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5655, %r292, %r5514, %r5158;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5659, %r292, %r5525, %r5163;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5663, %r292, %r5536, %r5168;
	// end inline asm
	// begin inline asm
	mov.b32 %r5672, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5683, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5669, %r830, %r2415, %r5672, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5673, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5674, %r5672, %r5673;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5677, %r5669, %r5674;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5680, %r841, %r2415, %r5683, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5684, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5685, %r5683, %r5684;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5688, %r5680, %r5685;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5691, %r830, %r2437, %r5672, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5695, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5696, %r5672, %r5695;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5699, %r5691, %r5696;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5702, %r841, %r2437, %r5683, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5706, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5707, %r5683, %r5706;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5710, %r5702, %r5707;
	// end inline asm
	// begin inline asm
	mov.b32 %r5718, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5729, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5715, %r830, %r2461, %r5718, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5719, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5720, %r5718, %r5719;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5723, %r5715, %r5720;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5726, %r841, %r2461, %r5729, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5730, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5731, %r5729, %r5730;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5734, %r5726, %r5731;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5737, %r830, %r2483, %r5718, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5741, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5742, %r5718, %r5741;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5745, %r5737, %r5742;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5748, %r841, %r2483, %r5729, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5752, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5753, %r5729, %r5752;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5756, %r5748, %r5753;
	// end inline asm
	// begin inline asm
	mov.b32 %r5764, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5775, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5761, %r830, %r2507, %r5764, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5765, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5766, %r5764, %r5765;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5769, %r5761, %r5766;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5772, %r841, %r2507, %r5775, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5776, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5777, %r5775, %r5776;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5780, %r5772, %r5777;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5783, %r830, %r2529, %r5764, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5787, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5788, %r5764, %r5787;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5791, %r5783, %r5788;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5794, %r841, %r2529, %r5775, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5798, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5799, %r5775, %r5798;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5802, %r5794, %r5799;
	// end inline asm
	// begin inline asm
	mov.b32 %r5810, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5821, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5807, %r830, %r2553, %r5810, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5811, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5812, %r5810, %r5811;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5815, %r5807, %r5812;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5818, %r841, %r2553, %r5821, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5822, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5823, %r5821, %r5822;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5826, %r5818, %r5823;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5829, %r830, %r2575, %r5810, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5833, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5834, %r5810, %r5833;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5837, %r5829, %r5834;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5840, %r841, %r2575, %r5821, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5844, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5845, %r5821, %r5844;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5848, %r5840, %r5845;
	// end inline asm
	// begin inline asm
	mov.b32 %r5856, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5867, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5853, %r830, %r2599, %r5856, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5857, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5858, %r5856, %r5857;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5861, %r5853, %r5858;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5864, %r841, %r2599, %r5867, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5868, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5869, %r5867, %r5868;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5872, %r5864, %r5869;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5875, %r830, %r2621, %r5856, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5879, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5880, %r5856, %r5879;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5883, %r5875, %r5880;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5886, %r841, %r2621, %r5867, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5890, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5891, %r5867, %r5890;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5894, %r5886, %r5891;
	// end inline asm
	// begin inline asm
	mov.b32 %r5902, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5913, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5899, %r830, %r2645, %r5902, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5903, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5904, %r5902, %r5903;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5907, %r5899, %r5904;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5910, %r841, %r2645, %r5913, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5914, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5915, %r5913, %r5914;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5918, %r5910, %r5915;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5921, %r830, %r2667, %r5902, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5925, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5926, %r5902, %r5925;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5929, %r5921, %r5926;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5932, %r841, %r2667, %r5913, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5936, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5937, %r5913, %r5936;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5940, %r5932, %r5937;
	// end inline asm
	// begin inline asm
	mov.b32 %r5948, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5959, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5945, %r830, %r2691, %r5948, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5949, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5950, %r5948, %r5949;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5953, %r5945, %r5950;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5956, %r841, %r2691, %r5959, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5960, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5961, %r5959, %r5960;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5964, %r5956, %r5961;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5967, %r830, %r2713, %r5948, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5971, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5972, %r5948, %r5971;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5975, %r5967, %r5972;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5978, %r841, %r2713, %r5959, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5982, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5983, %r5959, %r5982;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5986, %r5978, %r5983;
	// end inline asm
	// begin inline asm
	mov.b32 %r5994, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6005, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5991, %r830, %r2737, %r5994, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5995, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5996, %r5994, %r5995;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5999, %r5991, %r5996;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6002, %r841, %r2737, %r6005, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6006, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6007, %r6005, %r6006;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6010, %r6002, %r6007;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6013, %r830, %r2759, %r5994, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6017, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6018, %r5994, %r6017;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6021, %r6013, %r6018;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6024, %r841, %r2759, %r6005, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6028, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6029, %r6005, %r6028;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6032, %r6024, %r6029;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6035, %r310;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6037, %r6035, %r5677, %r5539;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6041, %r310;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6043, %r6041, %r5688, %r5543;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6047, %r310;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6049, %r6047, %r5699, %r5547;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6053, %r310;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6055, %r6053, %r5710, %r5551;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6059, %r310;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6061, %r6059, %r5723, %r5555;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6065, %r310;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6067, %r6065, %r5734, %r5559;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6071, %r310;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6073, %r6071, %r5745, %r5563;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6077, %r310;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6079, %r6077, %r5756, %r5567;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6083, %r310;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6085, %r6083, %r5769, %r5571;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6089, %r310;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6091, %r6089, %r5780, %r5575;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6095, %r310;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6097, %r6095, %r5791, %r5579;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6101, %r310;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6103, %r6101, %r5802, %r5583;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6107, %r310;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6109, %r6107, %r5815, %r5587;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6113, %r310;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6115, %r6113, %r5826, %r5591;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6119, %r310;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6121, %r6119, %r5837, %r5595;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6125, %r310;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6127, %r6125, %r5848, %r5599;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6131, %r328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6133, %r6131, %r5861, %r5603;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6137, %r328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6139, %r6137, %r5872, %r5607;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6143, %r328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6145, %r6143, %r5883, %r5611;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6149, %r328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6151, %r6149, %r5894, %r5615;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6155, %r328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6157, %r6155, %r5907, %r5619;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6161, %r328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6163, %r6161, %r5918, %r5623;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6167, %r328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6169, %r6167, %r5929, %r5627;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6173, %r328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6175, %r6173, %r5940, %r5631;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6179, %r328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6181, %r6179, %r5953, %r5635;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6185, %r328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6187, %r6185, %r5964, %r5639;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6191, %r328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6193, %r6191, %r5975, %r5643;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6197, %r328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6199, %r6197, %r5986, %r5647;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6203, %r328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6205, %r6203, %r5999, %r5651;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6209, %r328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6211, %r6209, %r6010, %r5655;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6215, %r328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6217, %r6215, %r6021, %r5659;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6221, %r328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6223, %r6221, %r6032, %r5663;
	// end inline asm
	// begin inline asm
	mov.b32 %r6232, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6243, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6229, %r830, %r831, %r6232, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6233, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6234, %r6232, %r6233;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6237, %r6229, %r6234;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6240, %r841, %r831, %r6243, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6244, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6245, %r6243, %r6244;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6248, %r6240, %r6245;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6251, %r830, %r853, %r6232, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6255, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6256, %r6232, %r6255;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6259, %r6251, %r6256;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6262, %r841, %r853, %r6243, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6266, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6267, %r6243, %r6266;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6270, %r6262, %r6267;
	// end inline asm
	// begin inline asm
	mov.b32 %r6278, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6289, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6275, %r830, %r877, %r6278, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6279, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6280, %r6278, %r6279;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6283, %r6275, %r6280;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6286, %r841, %r877, %r6289, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6290, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6291, %r6289, %r6290;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6294, %r6286, %r6291;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6297, %r830, %r899, %r6278, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6301, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6302, %r6278, %r6301;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6305, %r6297, %r6302;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6308, %r841, %r899, %r6289, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6312, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6313, %r6289, %r6312;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6316, %r6308, %r6313;
	// end inline asm
	// begin inline asm
	mov.b32 %r6324, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6335, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6321, %r830, %r923, %r6324, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6325, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6326, %r6324, %r6325;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6329, %r6321, %r6326;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6332, %r841, %r923, %r6335, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6336, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6337, %r6335, %r6336;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6340, %r6332, %r6337;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6343, %r830, %r945, %r6324, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6347, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6348, %r6324, %r6347;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6351, %r6343, %r6348;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6354, %r841, %r945, %r6335, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6358, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6359, %r6335, %r6358;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6362, %r6354, %r6359;
	// end inline asm
	// begin inline asm
	mov.b32 %r6370, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6381, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6367, %r830, %r969, %r6370, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6371, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6372, %r6370, %r6371;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6375, %r6367, %r6372;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6378, %r841, %r969, %r6381, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6382, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6383, %r6381, %r6382;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6386, %r6378, %r6383;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6389, %r830, %r991, %r6370, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6393, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6394, %r6370, %r6393;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6397, %r6389, %r6394;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6400, %r841, %r991, %r6381, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6404, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6405, %r6381, %r6404;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6408, %r6400, %r6405;
	// end inline asm
	// begin inline asm
	mov.b32 %r6416, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6427, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6413, %r830, %r1015, %r6416, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6417, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6418, %r6416, %r6417;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6421, %r6413, %r6418;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6424, %r841, %r1015, %r6427, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6428, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6429, %r6427, %r6428;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6432, %r6424, %r6429;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6435, %r830, %r1037, %r6416, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6439, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6440, %r6416, %r6439;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6443, %r6435, %r6440;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6446, %r841, %r1037, %r6427, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6450, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6451, %r6427, %r6450;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6454, %r6446, %r6451;
	// end inline asm
	// begin inline asm
	mov.b32 %r6462, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6473, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6459, %r830, %r1061, %r6462, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6463, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6464, %r6462, %r6463;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6467, %r6459, %r6464;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6470, %r841, %r1061, %r6473, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6474, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6475, %r6473, %r6474;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6478, %r6470, %r6475;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6481, %r830, %r1083, %r6462, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6485, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6486, %r6462, %r6485;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6489, %r6481, %r6486;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6492, %r841, %r1083, %r6473, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6496, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6497, %r6473, %r6496;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6500, %r6492, %r6497;
	// end inline asm
	// begin inline asm
	mov.b32 %r6508, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6519, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6505, %r830, %r1107, %r6508, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6509, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6510, %r6508, %r6509;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6513, %r6505, %r6510;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6516, %r841, %r1107, %r6519, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6520, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6521, %r6519, %r6520;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6524, %r6516, %r6521;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6527, %r830, %r1129, %r6508, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6531, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6532, %r6508, %r6531;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6535, %r6527, %r6532;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6538, %r841, %r1129, %r6519, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6542, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6543, %r6519, %r6542;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6546, %r6538, %r6543;
	// end inline asm
	// begin inline asm
	mov.b32 %r6554, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6565, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6551, %r830, %r1153, %r6554, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6555, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6556, %r6554, %r6555;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6559, %r6551, %r6556;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6562, %r841, %r1153, %r6565, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6566, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6567, %r6565, %r6566;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6570, %r6562, %r6567;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6573, %r830, %r1175, %r6554, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6577, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6578, %r6554, %r6577;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6581, %r6573, %r6578;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6584, %r841, %r1175, %r6565, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6588, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6589, %r6565, %r6588;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6592, %r6584, %r6589;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6730, %r346, %r6237, %r6037;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6727, %r346, %r6248, %r6043;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6739, %r346, %r6259, %r6049;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6736, %r346, %r6270, %r6055;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6748, %r346, %r6283, %r6061;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6745, %r346, %r6294, %r6067;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6757, %r346, %r6305, %r6073;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6754, %r346, %r6316, %r6079;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6766, %r346, %r6329, %r6085;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6763, %r346, %r6340, %r6091;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6775, %r346, %r6351, %r6097;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6772, %r346, %r6362, %r6103;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6784, %r346, %r6375, %r6109;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6781, %r346, %r6386, %r6115;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6793, %r346, %r6397, %r6121;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6790, %r346, %r6408, %r6127;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6802, %r364, %r6421, %r6133;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6799, %r364, %r6432, %r6139;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6811, %r364, %r6443, %r6145;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6808, %r364, %r6454, %r6151;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6820, %r364, %r6467, %r6157;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6817, %r364, %r6478, %r6163;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6829, %r364, %r6489, %r6169;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6826, %r364, %r6500, %r6175;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6838, %r364, %r6513, %r6181;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6835, %r364, %r6524, %r6187;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6847, %r364, %r6535, %r6193;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6844, %r364, %r6546, %r6199;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6856, %r364, %r6559, %r6205;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6853, %r364, %r6570, %r6211;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6865, %r364, %r6581, %r6217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6862, %r364, %r6592, %r6223;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6723, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6725, %r6723, %r6727;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6728, %r428, %r6730, %r6725;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6732, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6734, %r6732, %r6736;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6737, %r428, %r6739, %r6734;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6741, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6743, %r6741, %r6745;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6746, %r428, %r6748, %r6743;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6750, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6752, %r6750, %r6754;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6755, %r428, %r6757, %r6752;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6759, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6761, %r6759, %r6763;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6764, %r428, %r6766, %r6761;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6768, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6770, %r6768, %r6772;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6773, %r428, %r6775, %r6770;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6777, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6779, %r6777, %r6781;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6782, %r428, %r6784, %r6779;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6786, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6788, %r6786, %r6790;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6791, %r428, %r6793, %r6788;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6795, %r437;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6797, %r6795, %r6799;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6800, %r431, %r6802, %r6797;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6804, %r437;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6806, %r6804, %r6808;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6809, %r431, %r6811, %r6806;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6813, %r437;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6815, %r6813, %r6817;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6818, %r431, %r6820, %r6815;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6822, %r437;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6824, %r6822, %r6826;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6827, %r431, %r6829, %r6824;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6831, %r437;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6833, %r6831, %r6835;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6836, %r431, %r6838, %r6833;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6840, %r437;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6842, %r6840, %r6844;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6845, %r431, %r6847, %r6842;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6849, %r437;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6851, %r6849, %r6853;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6854, %r431, %r6856, %r6851;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6858, %r437;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6860, %r6858, %r6862;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6863, %r431, %r6865, %r6860;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6867, %r434, %r6730;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6870, %r428, %r6727, %r6867;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6874, %r434, %r6739;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6877, %r428, %r6736, %r6874;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6881, %r434, %r6748;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6884, %r428, %r6745, %r6881;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6888, %r434, %r6757;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6891, %r428, %r6754, %r6888;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6895, %r434, %r6766;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6898, %r428, %r6763, %r6895;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6902, %r434, %r6775;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6905, %r428, %r6772, %r6902;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6909, %r434, %r6784;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6912, %r428, %r6781, %r6909;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6916, %r434, %r6793;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6919, %r428, %r6790, %r6916;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6923, %r437, %r6802;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6926, %r431, %r6799, %r6923;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6930, %r437, %r6811;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6933, %r431, %r6808, %r6930;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6937, %r437, %r6820;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6940, %r431, %r6817, %r6937;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6944, %r437, %r6829;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6947, %r431, %r6826, %r6944;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6951, %r437, %r6838;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6954, %r431, %r6835, %r6951;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6958, %r437, %r6847;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6961, %r431, %r6844, %r6958;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6965, %r437, %r6856;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6968, %r431, %r6853, %r6965;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6972, %r437, %r6865;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6975, %r431, %r6862, %r6972;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7146, %r7143}, {%r476, %r482, %r479, %r485}, {%r6728, %r6870}, {%r3171, %r3171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7155, %r7152}, {%r476, %r482, %r479, %r485}, {%r6737, %r6877}, {%r3171, %r3171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7164, %r7161}, {%r476, %r482, %r479, %r485}, {%r6746, %r6884}, {%r3171, %r3171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7173, %r7170}, {%r476, %r482, %r479, %r485}, {%r6755, %r6891}, {%r3171, %r3171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7182, %r7179}, {%r476, %r482, %r479, %r485}, {%r6764, %r6898}, {%r3171, %r3171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7191, %r7188}, {%r476, %r482, %r479, %r485}, {%r6773, %r6905}, {%r3171, %r3171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7200, %r7197}, {%r476, %r482, %r479, %r485}, {%r6782, %r6912}, {%r3171, %r3171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7209, %r7206}, {%r476, %r482, %r479, %r485}, {%r6791, %r6919}, {%r3171, %r3171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7218, %r7215}, {%r476, %r482, %r479, %r485}, {%r6800, %r6926}, {%r3171, %r3171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7227, %r7224}, {%r476, %r482, %r479, %r485}, {%r6809, %r6933}, {%r3171, %r3171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7236, %r7233}, {%r476, %r482, %r479, %r485}, {%r6818, %r6940}, {%r3171, %r3171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7245, %r7242}, {%r476, %r482, %r479, %r485}, {%r6827, %r6947}, {%r3171, %r3171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7254, %r7251}, {%r476, %r482, %r479, %r485}, {%r6836, %r6954}, {%r3171, %r3171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7263, %r7260}, {%r476, %r482, %r479, %r485}, {%r6845, %r6961}, {%r3171, %r3171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7272, %r7269}, {%r476, %r482, %r479, %r485}, {%r6854, %r6968}, {%r3171, %r3171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7281, %r7278}, {%r476, %r482, %r479, %r485}, {%r6863, %r6975}, {%r3171, %r3171};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7139, %r526;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7141, %r7139, %r7143;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7144, %r523, %r7146, %r7141;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7148, %r526;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7150, %r7148, %r7152;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7153, %r523, %r7155, %r7150;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7157, %r526;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7159, %r7157, %r7161;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7162, %r523, %r7164, %r7159;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7166, %r526;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7168, %r7166, %r7170;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7171, %r523, %r7173, %r7168;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7175, %r526;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7177, %r7175, %r7179;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7180, %r523, %r7182, %r7177;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7184, %r526;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7186, %r7184, %r7188;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7189, %r523, %r7191, %r7186;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7193, %r526;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7195, %r7193, %r7197;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7198, %r523, %r7200, %r7195;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7202, %r526;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7204, %r7202, %r7206;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7207, %r523, %r7209, %r7204;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7211, %r526;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7213, %r7211, %r7215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7216, %r523, %r7218, %r7213;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7220, %r526;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7222, %r7220, %r7224;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7225, %r523, %r7227, %r7222;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7229, %r526;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7231, %r7229, %r7233;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7234, %r523, %r7236, %r7231;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7238, %r526;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7240, %r7238, %r7242;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7243, %r523, %r7245, %r7240;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7247, %r526;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7249, %r7247, %r7251;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7252, %r523, %r7254, %r7249;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7256, %r526;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7258, %r7256, %r7260;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7261, %r523, %r7263, %r7258;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7265, %r526;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7267, %r7265, %r7269;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7270, %r523, %r7272, %r7267;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7274, %r526;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7276, %r7274, %r7278;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7279, %r523, %r7281, %r7276;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7283, %r526, %r7146;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7286, %r523, %r7143, %r7283;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7290, %r526, %r7155;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7293, %r523, %r7152, %r7290;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7297, %r526, %r7164;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7300, %r523, %r7161, %r7297;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7304, %r526, %r7173;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7307, %r523, %r7170, %r7304;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7311, %r526, %r7182;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7314, %r523, %r7179, %r7311;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7318, %r526, %r7191;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7321, %r523, %r7188, %r7318;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7325, %r526, %r7200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7328, %r523, %r7197, %r7325;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7332, %r526, %r7209;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7335, %r523, %r7206, %r7332;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7339, %r526, %r7218;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7342, %r523, %r7215, %r7339;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7346, %r526, %r7227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7349, %r523, %r7224, %r7346;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7353, %r526, %r7236;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7356, %r523, %r7233, %r7353;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7360, %r526, %r7245;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7363, %r523, %r7242, %r7360;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7367, %r526, %r7254;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7370, %r523, %r7251, %r7367;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7374, %r526, %r7263;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7377, %r523, %r7260, %r7374;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7381, %r526, %r7272;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7384, %r523, %r7269, %r7381;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7388, %r526, %r7281;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7391, %r523, %r7278, %r7388;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7684, %r7687}, {%r566, %r572, %r569, %r575}, {%r7144, %r7286}, {%r3171, %r3171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7690, %r7693}, {%r566, %r572, %r569, %r575}, {%r7153, %r7293}, {%r3171, %r3171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7696, %r7699}, {%r566, %r572, %r569, %r575}, {%r7162, %r7300}, {%r3171, %r3171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7702, %r7705}, {%r566, %r572, %r569, %r575}, {%r7171, %r7307}, {%r3171, %r3171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7708, %r7711}, {%r566, %r572, %r569, %r575}, {%r7180, %r7314}, {%r3171, %r3171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7714, %r7717}, {%r566, %r572, %r569, %r575}, {%r7189, %r7321}, {%r3171, %r3171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7720, %r7723}, {%r566, %r572, %r569, %r575}, {%r7198, %r7328}, {%r3171, %r3171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7726, %r7729}, {%r566, %r572, %r569, %r575}, {%r7207, %r7335}, {%r3171, %r3171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7685, %r7688}, {%r566, %r572, %r569, %r575}, {%r7216, %r7342}, {%r3171, %r3171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7691, %r7694}, {%r566, %r572, %r569, %r575}, {%r7225, %r7349}, {%r3171, %r3171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7697, %r7700}, {%r566, %r572, %r569, %r575}, {%r7234, %r7356}, {%r3171, %r3171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7703, %r7706}, {%r566, %r572, %r569, %r575}, {%r7243, %r7363}, {%r3171, %r3171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7709, %r7712}, {%r566, %r572, %r569, %r575}, {%r7252, %r7370}, {%r3171, %r3171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7715, %r7718}, {%r566, %r572, %r569, %r575}, {%r7261, %r7377}, {%r3171, %r3171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7721, %r7724}, {%r566, %r572, %r569, %r575}, {%r7270, %r7384}, {%r3171, %r3171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7727, %r7730}, {%r566, %r572, %r569, %r575}, {%r7279, %r7391}, {%r3171, %r3171};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7683, %r7684, %r7685;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7686, %r7687, %r7688;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7689, %r7690, %r7691;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7692, %r7693, %r7694;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7695, %r7696, %r7697;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7698, %r7699, %r7700;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7701, %r7702, %r7703;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7704, %r7705, %r7706;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7707, %r7708, %r7709;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7710, %r7711, %r7712;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7713, %r7714, %r7715;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7716, %r7717, %r7718;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7719, %r7720, %r7721;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7722, %r7723, %r7724;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7725, %r7726, %r7727;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7728, %r7729, %r7730;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7731, %r7684, %r7685;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7734, %r7687, %r7688;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7737, %r7690, %r7691;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7740, %r7693, %r7694;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7743, %r7696, %r7697;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7746, %r7699, %r7700;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7749, %r7702, %r7703;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7752, %r7705, %r7706;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7755, %r7708, %r7709;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7758, %r7711, %r7712;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7761, %r7714, %r7715;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7764, %r7717, %r7718;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7767, %r7720, %r7721;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7770, %r7723, %r7724;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7773, %r7726, %r7727;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7776, %r7729, %r7730;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7779, %r190, %r7683;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7782, %r190, %r7686;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7785, %r190, %r7689;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7788, %r190, %r7692;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7791, %r190, %r7695;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7794, %r190, %r7698;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7797, %r190, %r7701;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7800, %r190, %r7704;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7803, %r190, %r7707;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7806, %r190, %r7710;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7809, %r190, %r7713;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7812, %r190, %r7716;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7815, %r190, %r7719;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7818, %r190, %r7722;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7821, %r190, %r7725;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7824, %r190, %r7728;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7827, %r191, %r7731;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7830, %r191, %r7734;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7833, %r191, %r7737;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7836, %r191, %r7740;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7839, %r191, %r7743;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7842, %r191, %r7746;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7845, %r191, %r7749;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7848, %r191, %r7752;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7851, %r191, %r7755;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7854, %r191, %r7758;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7857, %r191, %r7761;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7860, %r191, %r7764;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7863, %r191, %r7767;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7866, %r191, %r7770;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7869, %r191, %r7773;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7872, %r191, %r7776;
	// end inline asm
	// begin inline asm
	mov.b32 %r7875, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7876, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7877, %r7779, %r7875;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7880, %r7877, %r7876;
	// end inline asm
	// begin inline asm
	mov.b32 %r7883, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7884, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7885, %r7782, %r7883;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7888, %r7885, %r7884;
	// end inline asm
	// begin inline asm
	mov.b32 %r7891, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7892, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7893, %r7785, %r7891;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7896, %r7893, %r7892;
	// end inline asm
	// begin inline asm
	mov.b32 %r7899, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7900, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7901, %r7788, %r7899;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7904, %r7901, %r7900;
	// end inline asm
	// begin inline asm
	mov.b32 %r7907, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7908, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7909, %r7791, %r7907;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7912, %r7909, %r7908;
	// end inline asm
	// begin inline asm
	mov.b32 %r7915, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7916, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7917, %r7794, %r7915;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7920, %r7917, %r7916;
	// end inline asm
	// begin inline asm
	mov.b32 %r7923, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7924, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7925, %r7797, %r7923;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7928, %r7925, %r7924;
	// end inline asm
	// begin inline asm
	mov.b32 %r7931, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7932, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7933, %r7800, %r7931;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7936, %r7933, %r7932;
	// end inline asm
	// begin inline asm
	mov.b32 %r7939, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7940, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7941, %r7803, %r7939;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7944, %r7941, %r7940;
	// end inline asm
	// begin inline asm
	mov.b32 %r7947, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7948, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7949, %r7806, %r7947;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7952, %r7949, %r7948;
	// end inline asm
	// begin inline asm
	mov.b32 %r7955, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7956, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7957, %r7809, %r7955;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7960, %r7957, %r7956;
	// end inline asm
	// begin inline asm
	mov.b32 %r7963, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7964, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7965, %r7812, %r7963;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7968, %r7965, %r7964;
	// end inline asm
	// begin inline asm
	mov.b32 %r7971, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7972, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7973, %r7815, %r7971;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7976, %r7973, %r7972;
	// end inline asm
	// begin inline asm
	mov.b32 %r7979, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7980, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7981, %r7818, %r7979;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7984, %r7981, %r7980;
	// end inline asm
	// begin inline asm
	mov.b32 %r7987, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7988, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7989, %r7821, %r7987;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7992, %r7989, %r7988;
	// end inline asm
	// begin inline asm
	mov.b32 %r7995, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7996, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7997, %r7824, %r7995;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8000, %r7997, %r7996;
	// end inline asm
	// begin inline asm
	mov.b32 %r8003, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8004, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8005, %r7827, %r8003;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8008, %r8005, %r8004;
	// end inline asm
	// begin inline asm
	mov.b32 %r8011, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8012, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8013, %r7830, %r8011;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8016, %r8013, %r8012;
	// end inline asm
	// begin inline asm
	mov.b32 %r8019, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8020, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8021, %r7833, %r8019;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8024, %r8021, %r8020;
	// end inline asm
	// begin inline asm
	mov.b32 %r8027, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8028, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8029, %r7836, %r8027;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8032, %r8029, %r8028;
	// end inline asm
	// begin inline asm
	mov.b32 %r8035, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8036, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8037, %r7839, %r8035;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8040, %r8037, %r8036;
	// end inline asm
	// begin inline asm
	mov.b32 %r8043, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8044, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8045, %r7842, %r8043;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8048, %r8045, %r8044;
	// end inline asm
	// begin inline asm
	mov.b32 %r8051, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8052, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8053, %r7845, %r8051;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8056, %r8053, %r8052;
	// end inline asm
	// begin inline asm
	mov.b32 %r8059, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8060, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8061, %r7848, %r8059;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8064, %r8061, %r8060;
	// end inline asm
	// begin inline asm
	mov.b32 %r8067, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8068, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8069, %r7851, %r8067;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8072, %r8069, %r8068;
	// end inline asm
	// begin inline asm
	mov.b32 %r8075, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8076, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8077, %r7854, %r8075;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8080, %r8077, %r8076;
	// end inline asm
	// begin inline asm
	mov.b32 %r8083, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8084, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8085, %r7857, %r8083;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8088, %r8085, %r8084;
	// end inline asm
	// begin inline asm
	mov.b32 %r8091, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8092, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8093, %r7860, %r8091;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8096, %r8093, %r8092;
	// end inline asm
	// begin inline asm
	mov.b32 %r8099, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8100, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8101, %r7863, %r8099;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8104, %r8101, %r8100;
	// end inline asm
	// begin inline asm
	mov.b32 %r8107, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8108, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8109, %r7866, %r8107;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8112, %r8109, %r8108;
	// end inline asm
	// begin inline asm
	mov.b32 %r8115, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8116, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8117, %r7869, %r8115;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8120, %r8117, %r8116;
	// end inline asm
	// begin inline asm
	mov.b32 %r8123, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8124, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8125, %r7872, %r8123;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8128, %r8125, %r8124;
	// end inline asm
	// begin inline asm
	mov.b32 %r8134, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8132, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8133, %r8134, %r8132;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8136, %r7880, %r8133;
	// end inline asm
	// begin inline asm
	mov.b32 %r8139, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8140, %r8134, %r8139;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8143, %r7888, %r8140;
	// end inline asm
	// begin inline asm
	mov.b32 %r8146, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8147, %r8134, %r8146;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8150, %r7896, %r8147;
	// end inline asm
	// begin inline asm
	mov.b32 %r8153, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8154, %r8134, %r8153;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8157, %r7904, %r8154;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8160, %r8136, %r8150, %r4347;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8164, %r8143, %r8157, %r4347;
	// end inline asm
	shl.b32 	%r8171, %r8164, 4;
	// begin inline asm
	lop3.b32 %r8168, %r4353, %r8160, %r8171, 202;
	// end inline asm
	xor.b32  	%r16107, %r8168, -2004318072;
	// begin inline asm
	mov.b32 %r8175, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8173, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8174, %r8175, %r8173;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8177, %r7912, %r8174;
	// end inline asm
	// begin inline asm
	mov.b32 %r8180, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8181, %r8175, %r8180;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8184, %r7920, %r8181;
	// end inline asm
	// begin inline asm
	mov.b32 %r8187, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8188, %r8175, %r8187;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8191, %r7928, %r8188;
	// end inline asm
	// begin inline asm
	mov.b32 %r8194, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8195, %r8175, %r8194;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8198, %r7936, %r8195;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8201, %r8177, %r8191, %r4347;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8205, %r8184, %r8198, %r4347;
	// end inline asm
	shl.b32 	%r8212, %r8205, 4;
	// begin inline asm
	lop3.b32 %r8209, %r4353, %r8201, %r8212, 202;
	// end inline asm
	xor.b32  	%r16108, %r8209, -2004318072;
	// begin inline asm
	mov.b32 %r8216, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8214, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8215, %r8216, %r8214;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8218, %r7944, %r8215;
	// end inline asm
	// begin inline asm
	mov.b32 %r8221, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8222, %r8216, %r8221;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8225, %r7952, %r8222;
	// end inline asm
	// begin inline asm
	mov.b32 %r8228, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8229, %r8216, %r8228;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8232, %r7960, %r8229;
	// end inline asm
	// begin inline asm
	mov.b32 %r8235, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8236, %r8216, %r8235;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8239, %r7968, %r8236;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8242, %r8218, %r8232, %r4347;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8246, %r8225, %r8239, %r4347;
	// end inline asm
	shl.b32 	%r8253, %r8246, 4;
	// begin inline asm
	lop3.b32 %r8250, %r4353, %r8242, %r8253, 202;
	// end inline asm
	xor.b32  	%r16109, %r8250, -2004318072;
	// begin inline asm
	mov.b32 %r8257, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8255, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8256, %r8257, %r8255;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8259, %r7976, %r8256;
	// end inline asm
	// begin inline asm
	mov.b32 %r8262, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8263, %r8257, %r8262;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8266, %r7984, %r8263;
	// end inline asm
	// begin inline asm
	mov.b32 %r8269, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8270, %r8257, %r8269;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8273, %r7992, %r8270;
	// end inline asm
	// begin inline asm
	mov.b32 %r8276, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8277, %r8257, %r8276;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8280, %r8000, %r8277;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8283, %r8259, %r8273, %r4347;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8287, %r8266, %r8280, %r4347;
	// end inline asm
	shl.b32 	%r8294, %r8287, 4;
	// begin inline asm
	lop3.b32 %r8291, %r4353, %r8283, %r8294, 202;
	// end inline asm
	xor.b32  	%r16110, %r8291, -2004318072;
	// begin inline asm
	mov.b32 %r8298, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8296, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8297, %r8298, %r8296;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8300, %r8008, %r8297;
	// end inline asm
	// begin inline asm
	mov.b32 %r8303, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8304, %r8298, %r8303;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8307, %r8016, %r8304;
	// end inline asm
	// begin inline asm
	mov.b32 %r8310, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8311, %r8298, %r8310;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8314, %r8024, %r8311;
	// end inline asm
	// begin inline asm
	mov.b32 %r8317, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8318, %r8298, %r8317;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8321, %r8032, %r8318;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8324, %r8300, %r8314, %r4347;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8328, %r8307, %r8321, %r4347;
	// end inline asm
	shl.b32 	%r8335, %r8328, 4;
	// begin inline asm
	lop3.b32 %r8332, %r4353, %r8324, %r8335, 202;
	// end inline asm
	xor.b32  	%r16111, %r8332, -2004318072;
	// begin inline asm
	mov.b32 %r8339, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8337, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8338, %r8339, %r8337;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8341, %r8040, %r8338;
	// end inline asm
	// begin inline asm
	mov.b32 %r8344, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8345, %r8339, %r8344;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8348, %r8048, %r8345;
	// end inline asm
	// begin inline asm
	mov.b32 %r8351, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8352, %r8339, %r8351;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8355, %r8056, %r8352;
	// end inline asm
	// begin inline asm
	mov.b32 %r8358, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8359, %r8339, %r8358;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8362, %r8064, %r8359;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8365, %r8341, %r8355, %r4347;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8369, %r8348, %r8362, %r4347;
	// end inline asm
	shl.b32 	%r8376, %r8369, 4;
	// begin inline asm
	lop3.b32 %r8373, %r4353, %r8365, %r8376, 202;
	// end inline asm
	xor.b32  	%r16112, %r8373, -2004318072;
	// begin inline asm
	mov.b32 %r8380, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8378, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8379, %r8380, %r8378;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8382, %r8072, %r8379;
	// end inline asm
	// begin inline asm
	mov.b32 %r8385, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8386, %r8380, %r8385;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8389, %r8080, %r8386;
	// end inline asm
	// begin inline asm
	mov.b32 %r8392, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8393, %r8380, %r8392;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8396, %r8088, %r8393;
	// end inline asm
	// begin inline asm
	mov.b32 %r8399, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8400, %r8380, %r8399;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8403, %r8096, %r8400;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8406, %r8382, %r8396, %r4347;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8410, %r8389, %r8403, %r4347;
	// end inline asm
	shl.b32 	%r8417, %r8410, 4;
	// begin inline asm
	lop3.b32 %r8414, %r4353, %r8406, %r8417, 202;
	// end inline asm
	xor.b32  	%r16113, %r8414, -2004318072;
	// begin inline asm
	mov.b32 %r8421, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8419, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8420, %r8421, %r8419;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8423, %r8104, %r8420;
	// end inline asm
	// begin inline asm
	mov.b32 %r8426, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8427, %r8421, %r8426;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8430, %r8112, %r8427;
	// end inline asm
	// begin inline asm
	mov.b32 %r8433, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8434, %r8421, %r8433;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8437, %r8120, %r8434;
	// end inline asm
	// begin inline asm
	mov.b32 %r8440, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8441, %r8421, %r8440;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8444, %r8128, %r8441;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8447, %r8423, %r8437, %r4347;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8451, %r8430, %r8444, %r4347;
	// end inline asm
	shl.b32 	%r8458, %r8451, 4;
	// begin inline asm
	lop3.b32 %r8455, %r4353, %r8447, %r8458, 202;
	// end inline asm
	xor.b32  	%r16114, %r8455, -2004318072;
	st.shared.u32 	[%rd131], %r16107;
	st.shared.u32 	[%rd132], %r16108;
	st.shared.u32 	[%rd133], %r16109;
	st.shared.u32 	[%rd134], %r16110;
	st.shared.u32 	[%rd135], %r16111;
	st.shared.u32 	[%rd136], %r16112;
	st.shared.u32 	[%rd137], %r16113;
	st.shared.u32 	[%rd138], %r16114;
	ld.shared.u32 	%r16211, [%rd123];
	ld.shared.u32 	%r16212, [%rd124];
	ld.shared.u32 	%r16213, [%rd125];
	ld.shared.u32 	%r16214, [%rd126];
	ld.shared.u32 	%r16223, [%rd127];
	ld.shared.u32 	%r16224, [%rd128];
	ld.shared.u32 	%r16225, [%rd129];
	ld.shared.u32 	%r16226, [%rd130];
	// begin inline asm
	mov.b32 %r8464, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8475, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8463, %r16211, -2004318072;
	// begin inline asm
	lop3.b32 %r8461, %r830, %r8463, %r8464, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8465, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8466, %r8464, %r8465;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8469, %r8461, %r8466;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8472, %r841, %r8463, %r8475, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8476, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8477, %r8475, %r8476;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8480, %r8472, %r8477;
	// end inline asm
	shr.u32 	%r8485, %r8463, 8;
	// begin inline asm
	lop3.b32 %r8483, %r830, %r8485, %r8464, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8487, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8488, %r8464, %r8487;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8491, %r8483, %r8488;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8494, %r841, %r8485, %r8475, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8498, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8499, %r8475, %r8498;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8502, %r8494, %r8499;
	// end inline asm
	// begin inline asm
	mov.b32 %r8510, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8521, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8509, %r16212, -2004318072;
	// begin inline asm
	lop3.b32 %r8507, %r830, %r8509, %r8510, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8511, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8512, %r8510, %r8511;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8515, %r8507, %r8512;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8518, %r841, %r8509, %r8521, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8522, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8523, %r8521, %r8522;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8526, %r8518, %r8523;
	// end inline asm
	shr.u32 	%r8531, %r8509, 8;
	// begin inline asm
	lop3.b32 %r8529, %r830, %r8531, %r8510, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8533, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8534, %r8510, %r8533;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8537, %r8529, %r8534;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8540, %r841, %r8531, %r8521, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8544, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8545, %r8521, %r8544;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8548, %r8540, %r8545;
	// end inline asm
	// begin inline asm
	mov.b32 %r8556, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8567, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8555, %r16213, -2004318072;
	// begin inline asm
	lop3.b32 %r8553, %r830, %r8555, %r8556, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8557, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8558, %r8556, %r8557;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8561, %r8553, %r8558;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8564, %r841, %r8555, %r8567, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8568, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8569, %r8567, %r8568;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8572, %r8564, %r8569;
	// end inline asm
	shr.u32 	%r8577, %r8555, 8;
	// begin inline asm
	lop3.b32 %r8575, %r830, %r8577, %r8556, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8579, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8580, %r8556, %r8579;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8583, %r8575, %r8580;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8586, %r841, %r8577, %r8567, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8590, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8591, %r8567, %r8590;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8594, %r8586, %r8591;
	// end inline asm
	// begin inline asm
	mov.b32 %r8602, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8613, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8601, %r16214, -2004318072;
	// begin inline asm
	lop3.b32 %r8599, %r830, %r8601, %r8602, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8603, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8604, %r8602, %r8603;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8607, %r8599, %r8604;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8610, %r841, %r8601, %r8613, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8614, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8615, %r8613, %r8614;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8618, %r8610, %r8615;
	// end inline asm
	shr.u32 	%r8623, %r8601, 8;
	// begin inline asm
	lop3.b32 %r8621, %r830, %r8623, %r8602, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8625, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8626, %r8602, %r8625;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8629, %r8621, %r8626;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8632, %r841, %r8623, %r8613, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8636, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8637, %r8613, %r8636;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8640, %r8632, %r8637;
	// end inline asm
	// begin inline asm
	mov.b32 %r8648, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8659, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8647, %r16223, -2004318072;
	// begin inline asm
	lop3.b32 %r8645, %r830, %r8647, %r8648, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8649, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8650, %r8648, %r8649;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8653, %r8645, %r8650;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8656, %r841, %r8647, %r8659, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8660, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8661, %r8659, %r8660;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8664, %r8656, %r8661;
	// end inline asm
	shr.u32 	%r8669, %r8647, 8;
	// begin inline asm
	lop3.b32 %r8667, %r830, %r8669, %r8648, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8671, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8672, %r8648, %r8671;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8675, %r8667, %r8672;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8678, %r841, %r8669, %r8659, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8682, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8683, %r8659, %r8682;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8686, %r8678, %r8683;
	// end inline asm
	// begin inline asm
	mov.b32 %r8694, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8705, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8693, %r16224, -2004318072;
	// begin inline asm
	lop3.b32 %r8691, %r830, %r8693, %r8694, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8695, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8696, %r8694, %r8695;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8699, %r8691, %r8696;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8702, %r841, %r8693, %r8705, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8706, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8707, %r8705, %r8706;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8710, %r8702, %r8707;
	// end inline asm
	shr.u32 	%r8715, %r8693, 8;
	// begin inline asm
	lop3.b32 %r8713, %r830, %r8715, %r8694, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8717, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8718, %r8694, %r8717;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8721, %r8713, %r8718;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8724, %r841, %r8715, %r8705, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8728, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8729, %r8705, %r8728;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8732, %r8724, %r8729;
	// end inline asm
	// begin inline asm
	mov.b32 %r8740, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8751, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8739, %r16225, -2004318072;
	// begin inline asm
	lop3.b32 %r8737, %r830, %r8739, %r8740, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8741, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8742, %r8740, %r8741;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8745, %r8737, %r8742;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8748, %r841, %r8739, %r8751, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8752, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8753, %r8751, %r8752;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8756, %r8748, %r8753;
	// end inline asm
	shr.u32 	%r8761, %r8739, 8;
	// begin inline asm
	lop3.b32 %r8759, %r830, %r8761, %r8740, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8763, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8764, %r8740, %r8763;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8767, %r8759, %r8764;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8770, %r841, %r8761, %r8751, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8774, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8775, %r8751, %r8774;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8778, %r8770, %r8775;
	// end inline asm
	// begin inline asm
	mov.b32 %r8786, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8797, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8785, %r16226, -2004318072;
	// begin inline asm
	lop3.b32 %r8783, %r830, %r8785, %r8786, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8787, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8788, %r8786, %r8787;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8791, %r8783, %r8788;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8794, %r841, %r8785, %r8797, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8798, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8799, %r8797, %r8798;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8802, %r8794, %r8799;
	// end inline asm
	shr.u32 	%r8807, %r8785, 8;
	// begin inline asm
	lop3.b32 %r8805, %r830, %r8807, %r8786, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8809, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8810, %r8786, %r8809;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8813, %r8805, %r8810;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8816, %r841, %r8807, %r8797, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8820, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8821, %r8797, %r8820;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8824, %r8816, %r8821;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8827, %r382;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8829, %r8827, %r8469;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8832, %r382;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8834, %r8832, %r8480;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8837, %r382;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8839, %r8837, %r8491;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8842, %r382;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8844, %r8842, %r8502;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8847, %r382;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8849, %r8847, %r8515;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8852, %r382;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8854, %r8852, %r8526;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8857, %r382;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8859, %r8857, %r8537;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8862, %r382;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8864, %r8862, %r8548;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8867, %r382;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8869, %r8867, %r8561;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8872, %r382;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8874, %r8872, %r8572;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8877, %r382;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8879, %r8877, %r8583;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8882, %r382;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8884, %r8882, %r8594;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8887, %r382;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8889, %r8887, %r8607;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8892, %r382;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8894, %r8892, %r8618;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8897, %r382;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8899, %r8897, %r8629;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8902, %r382;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8904, %r8902, %r8640;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8907, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8909, %r8907, %r8653;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8912, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8914, %r8912, %r8664;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8917, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8919, %r8917, %r8675;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8922, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8924, %r8922, %r8686;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8927, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8929, %r8927, %r8699;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8932, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8934, %r8932, %r8710;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8937, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8939, %r8937, %r8721;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8942, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8944, %r8942, %r8732;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8947, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8949, %r8947, %r8745;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8952, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8954, %r8952, %r8756;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8957, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8959, %r8957, %r8767;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8962, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8964, %r8962, %r8778;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8967, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8969, %r8967, %r8791;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8972, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8974, %r8972, %r8802;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8977, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8979, %r8977, %r8813;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8982, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8984, %r8982, %r8824;
	// end inline asm
	// begin inline asm
	mov.b32 %r8992, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9003, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r8989, %r830, %r2415, %r8992, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8993, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8994, %r8992, %r8993;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8997, %r8989, %r8994;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9000, %r841, %r2415, %r9003, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9004, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9005, %r9003, %r9004;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9008, %r9000, %r9005;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9011, %r830, %r2437, %r8992, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9015, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9016, %r8992, %r9015;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9019, %r9011, %r9016;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9022, %r841, %r2437, %r9003, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9026, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9027, %r9003, %r9026;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9030, %r9022, %r9027;
	// end inline asm
	// begin inline asm
	mov.b32 %r9038, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9049, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9035, %r830, %r2461, %r9038, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9039, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9040, %r9038, %r9039;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9043, %r9035, %r9040;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9046, %r841, %r2461, %r9049, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9050, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9051, %r9049, %r9050;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9054, %r9046, %r9051;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9057, %r830, %r2483, %r9038, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9061, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9062, %r9038, %r9061;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9065, %r9057, %r9062;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9068, %r841, %r2483, %r9049, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9072, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9073, %r9049, %r9072;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9076, %r9068, %r9073;
	// end inline asm
	// begin inline asm
	mov.b32 %r9084, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9095, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9081, %r830, %r2507, %r9084, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9085, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9086, %r9084, %r9085;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9089, %r9081, %r9086;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9092, %r841, %r2507, %r9095, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9096, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9097, %r9095, %r9096;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9100, %r9092, %r9097;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9103, %r830, %r2529, %r9084, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9107, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9108, %r9084, %r9107;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9111, %r9103, %r9108;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9114, %r841, %r2529, %r9095, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9118, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9119, %r9095, %r9118;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9122, %r9114, %r9119;
	// end inline asm
	// begin inline asm
	mov.b32 %r9130, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9141, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9127, %r830, %r2553, %r9130, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9131, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9132, %r9130, %r9131;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9135, %r9127, %r9132;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9138, %r841, %r2553, %r9141, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9142, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9143, %r9141, %r9142;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9146, %r9138, %r9143;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9149, %r830, %r2575, %r9130, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9153, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9154, %r9130, %r9153;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9157, %r9149, %r9154;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9160, %r841, %r2575, %r9141, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9164, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9165, %r9141, %r9164;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9168, %r9160, %r9165;
	// end inline asm
	// begin inline asm
	mov.b32 %r9176, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9187, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9173, %r830, %r2599, %r9176, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9177, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9178, %r9176, %r9177;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9181, %r9173, %r9178;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9184, %r841, %r2599, %r9187, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9188, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9189, %r9187, %r9188;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9192, %r9184, %r9189;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9195, %r830, %r2621, %r9176, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9199, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9200, %r9176, %r9199;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9203, %r9195, %r9200;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9206, %r841, %r2621, %r9187, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9210, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9211, %r9187, %r9210;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9214, %r9206, %r9211;
	// end inline asm
	// begin inline asm
	mov.b32 %r9222, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9233, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9219, %r830, %r2645, %r9222, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9223, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9224, %r9222, %r9223;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9227, %r9219, %r9224;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9230, %r841, %r2645, %r9233, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9234, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9235, %r9233, %r9234;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9238, %r9230, %r9235;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9241, %r830, %r2667, %r9222, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9245, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9246, %r9222, %r9245;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9249, %r9241, %r9246;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9252, %r841, %r2667, %r9233, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9256, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9257, %r9233, %r9256;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9260, %r9252, %r9257;
	// end inline asm
	// begin inline asm
	mov.b32 %r9268, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9279, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9265, %r830, %r2691, %r9268, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9269, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9270, %r9268, %r9269;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9273, %r9265, %r9270;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9276, %r841, %r2691, %r9279, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9280, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9281, %r9279, %r9280;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9284, %r9276, %r9281;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9287, %r830, %r2713, %r9268, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9291, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9292, %r9268, %r9291;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9295, %r9287, %r9292;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9298, %r841, %r2713, %r9279, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9302, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9303, %r9279, %r9302;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9306, %r9298, %r9303;
	// end inline asm
	// begin inline asm
	mov.b32 %r9314, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9325, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9311, %r830, %r2737, %r9314, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9315, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9316, %r9314, %r9315;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9319, %r9311, %r9316;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9322, %r841, %r2737, %r9325, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9326, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9327, %r9325, %r9326;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9330, %r9322, %r9327;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9333, %r830, %r2759, %r9314, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9337, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9338, %r9314, %r9337;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9341, %r9333, %r9338;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9344, %r841, %r2759, %r9325, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9348, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9349, %r9325, %r9348;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9352, %r9344, %r9349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9355, %r274, %r8997, %r8829;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9359, %r274, %r9008, %r8834;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9363, %r274, %r9019, %r8839;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9367, %r274, %r9030, %r8844;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9371, %r274, %r9043, %r8849;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9375, %r274, %r9054, %r8854;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9379, %r274, %r9065, %r8859;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9383, %r274, %r9076, %r8864;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9387, %r274, %r9089, %r8869;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9391, %r274, %r9100, %r8874;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9395, %r274, %r9111, %r8879;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9399, %r274, %r9122, %r8884;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9403, %r274, %r9135, %r8889;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9407, %r274, %r9146, %r8894;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9411, %r274, %r9157, %r8899;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9415, %r274, %r9168, %r8904;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9419, %r292, %r9181, %r8909;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9423, %r292, %r9192, %r8914;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9427, %r292, %r9203, %r8919;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9431, %r292, %r9214, %r8924;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9435, %r292, %r9227, %r8929;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9439, %r292, %r9238, %r8934;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9443, %r292, %r9249, %r8939;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9447, %r292, %r9260, %r8944;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9451, %r292, %r9273, %r8949;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9455, %r292, %r9284, %r8954;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9459, %r292, %r9295, %r8959;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9463, %r292, %r9306, %r8964;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9467, %r292, %r9319, %r8969;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9471, %r292, %r9330, %r8974;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9475, %r292, %r9341, %r8979;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9479, %r292, %r9352, %r8984;
	// end inline asm
	// begin inline asm
	mov.b32 %r9488, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9499, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9485, %r830, %r831, %r9488, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9489, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9490, %r9488, %r9489;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9493, %r9485, %r9490;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9496, %r841, %r831, %r9499, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9500, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9501, %r9499, %r9500;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9504, %r9496, %r9501;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9507, %r830, %r853, %r9488, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9511, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9512, %r9488, %r9511;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9515, %r9507, %r9512;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9518, %r841, %r853, %r9499, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9522, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9523, %r9499, %r9522;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9526, %r9518, %r9523;
	// end inline asm
	// begin inline asm
	mov.b32 %r9534, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9545, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9531, %r830, %r877, %r9534, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9535, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9536, %r9534, %r9535;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9539, %r9531, %r9536;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9542, %r841, %r877, %r9545, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9546, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9547, %r9545, %r9546;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9550, %r9542, %r9547;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9553, %r830, %r899, %r9534, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9557, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9558, %r9534, %r9557;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9561, %r9553, %r9558;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9564, %r841, %r899, %r9545, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9568, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9569, %r9545, %r9568;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9572, %r9564, %r9569;
	// end inline asm
	// begin inline asm
	mov.b32 %r9580, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9591, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9577, %r830, %r923, %r9580, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9581, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9582, %r9580, %r9581;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9585, %r9577, %r9582;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9588, %r841, %r923, %r9591, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9592, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9593, %r9591, %r9592;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9596, %r9588, %r9593;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9599, %r830, %r945, %r9580, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9603, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9604, %r9580, %r9603;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9607, %r9599, %r9604;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9610, %r841, %r945, %r9591, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9614, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9615, %r9591, %r9614;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9618, %r9610, %r9615;
	// end inline asm
	// begin inline asm
	mov.b32 %r9626, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9637, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9623, %r830, %r969, %r9626, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9627, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9628, %r9626, %r9627;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9631, %r9623, %r9628;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9634, %r841, %r969, %r9637, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9638, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9639, %r9637, %r9638;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9642, %r9634, %r9639;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9645, %r830, %r991, %r9626, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9649, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9650, %r9626, %r9649;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9653, %r9645, %r9650;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9656, %r841, %r991, %r9637, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9660, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9661, %r9637, %r9660;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9664, %r9656, %r9661;
	// end inline asm
	// begin inline asm
	mov.b32 %r9672, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9683, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9669, %r830, %r1015, %r9672, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9673, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9674, %r9672, %r9673;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9677, %r9669, %r9674;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9680, %r841, %r1015, %r9683, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9684, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9685, %r9683, %r9684;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9688, %r9680, %r9685;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9691, %r830, %r1037, %r9672, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9695, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9696, %r9672, %r9695;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9699, %r9691, %r9696;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9702, %r841, %r1037, %r9683, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9706, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9707, %r9683, %r9706;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9710, %r9702, %r9707;
	// end inline asm
	// begin inline asm
	mov.b32 %r9718, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9729, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9715, %r830, %r1061, %r9718, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9719, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9720, %r9718, %r9719;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9723, %r9715, %r9720;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9726, %r841, %r1061, %r9729, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9730, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9731, %r9729, %r9730;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9734, %r9726, %r9731;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9737, %r830, %r1083, %r9718, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9741, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9742, %r9718, %r9741;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9745, %r9737, %r9742;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9748, %r841, %r1083, %r9729, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9752, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9753, %r9729, %r9752;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9756, %r9748, %r9753;
	// end inline asm
	// begin inline asm
	mov.b32 %r9764, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9775, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9761, %r830, %r1107, %r9764, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9765, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9766, %r9764, %r9765;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9769, %r9761, %r9766;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9772, %r841, %r1107, %r9775, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9776, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9777, %r9775, %r9776;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9780, %r9772, %r9777;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9783, %r830, %r1129, %r9764, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9787, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9788, %r9764, %r9787;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9791, %r9783, %r9788;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9794, %r841, %r1129, %r9775, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9798, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9799, %r9775, %r9798;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9802, %r9794, %r9799;
	// end inline asm
	// begin inline asm
	mov.b32 %r9810, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9821, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9807, %r830, %r1153, %r9810, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9811, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9812, %r9810, %r9811;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9815, %r9807, %r9812;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9818, %r841, %r1153, %r9821, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9822, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9823, %r9821, %r9822;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9826, %r9818, %r9823;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9829, %r830, %r1175, %r9810, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9833, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9834, %r9810, %r9833;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9837, %r9829, %r9834;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9840, %r841, %r1175, %r9821, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9844, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9845, %r9821, %r9844;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9848, %r9840, %r9845;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9851, %r310;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9853, %r9851, %r9493, %r9355;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9857, %r310;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9859, %r9857, %r9504, %r9359;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9863, %r310;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9865, %r9863, %r9515, %r9363;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9869, %r310;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9871, %r9869, %r9526, %r9367;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9875, %r310;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9877, %r9875, %r9539, %r9371;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9881, %r310;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9883, %r9881, %r9550, %r9375;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9887, %r310;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9889, %r9887, %r9561, %r9379;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9893, %r310;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9895, %r9893, %r9572, %r9383;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9899, %r310;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9901, %r9899, %r9585, %r9387;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9905, %r310;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9907, %r9905, %r9596, %r9391;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9911, %r310;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9913, %r9911, %r9607, %r9395;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9917, %r310;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9919, %r9917, %r9618, %r9399;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9923, %r310;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9925, %r9923, %r9631, %r9403;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9929, %r310;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9931, %r9929, %r9642, %r9407;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9935, %r310;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9937, %r9935, %r9653, %r9411;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9941, %r310;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9943, %r9941, %r9664, %r9415;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9947, %r328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9949, %r9947, %r9677, %r9419;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9953, %r328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9955, %r9953, %r9688, %r9423;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9959, %r328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9961, %r9959, %r9699, %r9427;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9965, %r328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9967, %r9965, %r9710, %r9431;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9971, %r328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9973, %r9971, %r9723, %r9435;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9977, %r328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9979, %r9977, %r9734, %r9439;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9983, %r328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9985, %r9983, %r9745, %r9443;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9989, %r328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9991, %r9989, %r9756, %r9447;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9995, %r328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9997, %r9995, %r9769, %r9451;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10001, %r328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10003, %r10001, %r9780, %r9455;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10007, %r328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10009, %r10007, %r9791, %r9459;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10013, %r328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10015, %r10013, %r9802, %r9463;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10019, %r328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10021, %r10019, %r9815, %r9467;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10025, %r328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10027, %r10025, %r9826, %r9471;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10031, %r328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10033, %r10031, %r9837, %r9475;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10037, %r328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10039, %r10037, %r9848, %r9479;
	// end inline asm
	// begin inline asm
	mov.b32 %r10048, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10059, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10045, %r830, %r4647, %r10048, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10049, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10050, %r10048, %r10049;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10053, %r10045, %r10050;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10056, %r841, %r4647, %r10059, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10060, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10061, %r10059, %r10060;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10064, %r10056, %r10061;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10067, %r830, %r4669, %r10048, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10071, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10072, %r10048, %r10071;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10075, %r10067, %r10072;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10078, %r841, %r4669, %r10059, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10082, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10083, %r10059, %r10082;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10086, %r10078, %r10083;
	// end inline asm
	// begin inline asm
	mov.b32 %r10094, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10105, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10091, %r830, %r4693, %r10094, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10095, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10096, %r10094, %r10095;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10099, %r10091, %r10096;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10102, %r841, %r4693, %r10105, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10106, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10107, %r10105, %r10106;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10110, %r10102, %r10107;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10113, %r830, %r4715, %r10094, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10117, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10118, %r10094, %r10117;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10121, %r10113, %r10118;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10124, %r841, %r4715, %r10105, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10128, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10129, %r10105, %r10128;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10132, %r10124, %r10129;
	// end inline asm
	// begin inline asm
	mov.b32 %r10140, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10151, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10137, %r830, %r4739, %r10140, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10141, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10142, %r10140, %r10141;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10145, %r10137, %r10142;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10148, %r841, %r4739, %r10151, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10152, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10153, %r10151, %r10152;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10156, %r10148, %r10153;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10159, %r830, %r4761, %r10140, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10163, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10164, %r10140, %r10163;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10167, %r10159, %r10164;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10170, %r841, %r4761, %r10151, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10174, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10175, %r10151, %r10174;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10178, %r10170, %r10175;
	// end inline asm
	// begin inline asm
	mov.b32 %r10186, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10197, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10183, %r830, %r4785, %r10186, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10187, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10188, %r10186, %r10187;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10191, %r10183, %r10188;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10194, %r841, %r4785, %r10197, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10198, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10199, %r10197, %r10198;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10202, %r10194, %r10199;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10205, %r830, %r4807, %r10186, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10209, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10210, %r10186, %r10209;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10213, %r10205, %r10210;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10216, %r841, %r4807, %r10197, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10220, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10221, %r10197, %r10220;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10224, %r10216, %r10221;
	// end inline asm
	// begin inline asm
	mov.b32 %r10232, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10243, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10229, %r830, %r4831, %r10232, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10233, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10234, %r10232, %r10233;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10237, %r10229, %r10234;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10240, %r841, %r4831, %r10243, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10244, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10245, %r10243, %r10244;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10248, %r10240, %r10245;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10251, %r830, %r4853, %r10232, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10255, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10256, %r10232, %r10255;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10259, %r10251, %r10256;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10262, %r841, %r4853, %r10243, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10266, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10267, %r10243, %r10266;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10270, %r10262, %r10267;
	// end inline asm
	// begin inline asm
	mov.b32 %r10278, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10289, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10275, %r830, %r4877, %r10278, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10279, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10280, %r10278, %r10279;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10283, %r10275, %r10280;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10286, %r841, %r4877, %r10289, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10290, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10291, %r10289, %r10290;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10294, %r10286, %r10291;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10297, %r830, %r4899, %r10278, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10301, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10302, %r10278, %r10301;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10305, %r10297, %r10302;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10308, %r841, %r4899, %r10289, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10312, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10313, %r10289, %r10312;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10316, %r10308, %r10313;
	// end inline asm
	// begin inline asm
	mov.b32 %r10324, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10335, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10321, %r830, %r4923, %r10324, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10325, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10326, %r10324, %r10325;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10329, %r10321, %r10326;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10332, %r841, %r4923, %r10335, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10336, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10337, %r10335, %r10336;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10340, %r10332, %r10337;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10343, %r830, %r4945, %r10324, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10347, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10348, %r10324, %r10347;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10351, %r10343, %r10348;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10354, %r841, %r4945, %r10335, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10358, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10359, %r10335, %r10358;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10362, %r10354, %r10359;
	// end inline asm
	// begin inline asm
	mov.b32 %r10370, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10381, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10367, %r830, %r4969, %r10370, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10371, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10372, %r10370, %r10371;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10375, %r10367, %r10372;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10378, %r841, %r4969, %r10381, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10382, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10383, %r10381, %r10382;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10386, %r10378, %r10383;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10389, %r830, %r4991, %r10370, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10393, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10394, %r10370, %r10393;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10397, %r10389, %r10394;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10400, %r841, %r4991, %r10381, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10404, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10405, %r10381, %r10404;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10408, %r10400, %r10405;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10546, %r346, %r10053, %r9853;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10543, %r346, %r10064, %r9859;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10555, %r346, %r10075, %r9865;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10552, %r346, %r10086, %r9871;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10564, %r346, %r10099, %r9877;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10561, %r346, %r10110, %r9883;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10573, %r346, %r10121, %r9889;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10570, %r346, %r10132, %r9895;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10582, %r346, %r10145, %r9901;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10579, %r346, %r10156, %r9907;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10591, %r346, %r10167, %r9913;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10588, %r346, %r10178, %r9919;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10600, %r346, %r10191, %r9925;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10597, %r346, %r10202, %r9931;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10609, %r346, %r10213, %r9937;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10606, %r346, %r10224, %r9943;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10618, %r364, %r10237, %r9949;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10615, %r364, %r10248, %r9955;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10627, %r364, %r10259, %r9961;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10624, %r364, %r10270, %r9967;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10636, %r364, %r10283, %r9973;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10633, %r364, %r10294, %r9979;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10645, %r364, %r10305, %r9985;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10642, %r364, %r10316, %r9991;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10654, %r364, %r10329, %r9997;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10651, %r364, %r10340, %r10003;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10663, %r364, %r10351, %r10009;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10660, %r364, %r10362, %r10015;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10672, %r364, %r10375, %r10021;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10669, %r364, %r10386, %r10027;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10681, %r364, %r10397, %r10033;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10678, %r364, %r10408, %r10039;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10539, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10541, %r10539, %r10543;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10544, %r428, %r10546, %r10541;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10548, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10550, %r10548, %r10552;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10553, %r428, %r10555, %r10550;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10557, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10559, %r10557, %r10561;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10562, %r428, %r10564, %r10559;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10566, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10568, %r10566, %r10570;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10571, %r428, %r10573, %r10568;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10575, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10577, %r10575, %r10579;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10580, %r428, %r10582, %r10577;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10584, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10586, %r10584, %r10588;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10589, %r428, %r10591, %r10586;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10593, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10595, %r10593, %r10597;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10598, %r428, %r10600, %r10595;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10602, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10604, %r10602, %r10606;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10607, %r428, %r10609, %r10604;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10611, %r437;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10613, %r10611, %r10615;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10616, %r431, %r10618, %r10613;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10620, %r437;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10622, %r10620, %r10624;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10625, %r431, %r10627, %r10622;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10629, %r437;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10631, %r10629, %r10633;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10634, %r431, %r10636, %r10631;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10638, %r437;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10640, %r10638, %r10642;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10643, %r431, %r10645, %r10640;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10647, %r437;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10649, %r10647, %r10651;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10652, %r431, %r10654, %r10649;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10656, %r437;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10658, %r10656, %r10660;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10661, %r431, %r10663, %r10658;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10665, %r437;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10667, %r10665, %r10669;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10670, %r431, %r10672, %r10667;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10674, %r437;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10676, %r10674, %r10678;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10679, %r431, %r10681, %r10676;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10683, %r434, %r10546;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10686, %r428, %r10543, %r10683;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10690, %r434, %r10555;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10693, %r428, %r10552, %r10690;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10697, %r434, %r10564;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10700, %r428, %r10561, %r10697;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10704, %r434, %r10573;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10707, %r428, %r10570, %r10704;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10711, %r434, %r10582;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10714, %r428, %r10579, %r10711;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10718, %r434, %r10591;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10721, %r428, %r10588, %r10718;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10725, %r434, %r10600;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10728, %r428, %r10597, %r10725;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10732, %r434, %r10609;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10735, %r428, %r10606, %r10732;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10739, %r437, %r10618;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10742, %r431, %r10615, %r10739;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10746, %r437, %r10627;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10749, %r431, %r10624, %r10746;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10753, %r437, %r10636;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10756, %r431, %r10633, %r10753;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10760, %r437, %r10645;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10763, %r431, %r10642, %r10760;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10767, %r437, %r10654;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10770, %r431, %r10651, %r10767;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10774, %r437, %r10663;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10777, %r431, %r10660, %r10774;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10781, %r437, %r10672;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10784, %r431, %r10669, %r10781;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10788, %r437, %r10681;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10791, %r431, %r10678, %r10788;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r10962, %r10959}, {%r476, %r482, %r479, %r485}, {%r10544, %r10686}, {%r3171, %r3171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r10971, %r10968}, {%r476, %r482, %r479, %r485}, {%r10553, %r10693}, {%r3171, %r3171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r10980, %r10977}, {%r476, %r482, %r479, %r485}, {%r10562, %r10700}, {%r3171, %r3171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r10989, %r10986}, {%r476, %r482, %r479, %r485}, {%r10571, %r10707}, {%r3171, %r3171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r10998, %r10995}, {%r476, %r482, %r479, %r485}, {%r10580, %r10714}, {%r3171, %r3171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11007, %r11004}, {%r476, %r482, %r479, %r485}, {%r10589, %r10721}, {%r3171, %r3171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11016, %r11013}, {%r476, %r482, %r479, %r485}, {%r10598, %r10728}, {%r3171, %r3171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11025, %r11022}, {%r476, %r482, %r479, %r485}, {%r10607, %r10735}, {%r3171, %r3171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11034, %r11031}, {%r476, %r482, %r479, %r485}, {%r10616, %r10742}, {%r3171, %r3171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11043, %r11040}, {%r476, %r482, %r479, %r485}, {%r10625, %r10749}, {%r3171, %r3171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11052, %r11049}, {%r476, %r482, %r479, %r485}, {%r10634, %r10756}, {%r3171, %r3171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11061, %r11058}, {%r476, %r482, %r479, %r485}, {%r10643, %r10763}, {%r3171, %r3171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11070, %r11067}, {%r476, %r482, %r479, %r485}, {%r10652, %r10770}, {%r3171, %r3171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11079, %r11076}, {%r476, %r482, %r479, %r485}, {%r10661, %r10777}, {%r3171, %r3171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11088, %r11085}, {%r476, %r482, %r479, %r485}, {%r10670, %r10784}, {%r3171, %r3171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11097, %r11094}, {%r476, %r482, %r479, %r485}, {%r10679, %r10791}, {%r3171, %r3171};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10955, %r526;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10957, %r10955, %r10959;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10960, %r523, %r10962, %r10957;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10964, %r526;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10966, %r10964, %r10968;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10969, %r523, %r10971, %r10966;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10973, %r526;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10975, %r10973, %r10977;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10978, %r523, %r10980, %r10975;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10982, %r526;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10984, %r10982, %r10986;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10987, %r523, %r10989, %r10984;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10991, %r526;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10993, %r10991, %r10995;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10996, %r523, %r10998, %r10993;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11000, %r526;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11002, %r11000, %r11004;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11005, %r523, %r11007, %r11002;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11009, %r526;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11011, %r11009, %r11013;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11014, %r523, %r11016, %r11011;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11018, %r526;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11020, %r11018, %r11022;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11023, %r523, %r11025, %r11020;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11027, %r526;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11029, %r11027, %r11031;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11032, %r523, %r11034, %r11029;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11036, %r526;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11038, %r11036, %r11040;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11041, %r523, %r11043, %r11038;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11045, %r526;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11047, %r11045, %r11049;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11050, %r523, %r11052, %r11047;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11054, %r526;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11056, %r11054, %r11058;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11059, %r523, %r11061, %r11056;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11063, %r526;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11065, %r11063, %r11067;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11068, %r523, %r11070, %r11065;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11072, %r526;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11074, %r11072, %r11076;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11077, %r523, %r11079, %r11074;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11081, %r526;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11083, %r11081, %r11085;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11086, %r523, %r11088, %r11083;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11090, %r526;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11092, %r11090, %r11094;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11095, %r523, %r11097, %r11092;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11099, %r526, %r10962;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11102, %r523, %r10959, %r11099;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11106, %r526, %r10971;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11109, %r523, %r10968, %r11106;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11113, %r526, %r10980;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11116, %r523, %r10977, %r11113;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11120, %r526, %r10989;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11123, %r523, %r10986, %r11120;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11127, %r526, %r10998;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11130, %r523, %r10995, %r11127;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11134, %r526, %r11007;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11137, %r523, %r11004, %r11134;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11141, %r526, %r11016;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11144, %r523, %r11013, %r11141;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11148, %r526, %r11025;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11151, %r523, %r11022, %r11148;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11155, %r526, %r11034;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11158, %r523, %r11031, %r11155;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11162, %r526, %r11043;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11165, %r523, %r11040, %r11162;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11169, %r526, %r11052;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11172, %r523, %r11049, %r11169;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11176, %r526, %r11061;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11179, %r523, %r11058, %r11176;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11183, %r526, %r11070;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11186, %r523, %r11067, %r11183;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11190, %r526, %r11079;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11193, %r523, %r11076, %r11190;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11197, %r526, %r11088;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11200, %r523, %r11085, %r11197;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11204, %r526, %r11097;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11207, %r523, %r11094, %r11204;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11500, %r11503}, {%r566, %r572, %r569, %r575}, {%r10960, %r11102}, {%r3171, %r3171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11506, %r11509}, {%r566, %r572, %r569, %r575}, {%r10969, %r11109}, {%r3171, %r3171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11512, %r11515}, {%r566, %r572, %r569, %r575}, {%r10978, %r11116}, {%r3171, %r3171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11518, %r11521}, {%r566, %r572, %r569, %r575}, {%r10987, %r11123}, {%r3171, %r3171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11524, %r11527}, {%r566, %r572, %r569, %r575}, {%r10996, %r11130}, {%r3171, %r3171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11530, %r11533}, {%r566, %r572, %r569, %r575}, {%r11005, %r11137}, {%r3171, %r3171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11536, %r11539}, {%r566, %r572, %r569, %r575}, {%r11014, %r11144}, {%r3171, %r3171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11542, %r11545}, {%r566, %r572, %r569, %r575}, {%r11023, %r11151}, {%r3171, %r3171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11501, %r11504}, {%r566, %r572, %r569, %r575}, {%r11032, %r11158}, {%r3171, %r3171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11507, %r11510}, {%r566, %r572, %r569, %r575}, {%r11041, %r11165}, {%r3171, %r3171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11513, %r11516}, {%r566, %r572, %r569, %r575}, {%r11050, %r11172}, {%r3171, %r3171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11519, %r11522}, {%r566, %r572, %r569, %r575}, {%r11059, %r11179}, {%r3171, %r3171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11525, %r11528}, {%r566, %r572, %r569, %r575}, {%r11068, %r11186}, {%r3171, %r3171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11531, %r11534}, {%r566, %r572, %r569, %r575}, {%r11077, %r11193}, {%r3171, %r3171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11537, %r11540}, {%r566, %r572, %r569, %r575}, {%r11086, %r11200}, {%r3171, %r3171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11543, %r11546}, {%r566, %r572, %r569, %r575}, {%r11095, %r11207}, {%r3171, %r3171};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11499, %r11500, %r11501;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11502, %r11503, %r11504;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11505, %r11506, %r11507;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11508, %r11509, %r11510;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11511, %r11512, %r11513;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11514, %r11515, %r11516;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11517, %r11518, %r11519;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11520, %r11521, %r11522;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11523, %r11524, %r11525;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11526, %r11527, %r11528;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11529, %r11530, %r11531;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11532, %r11533, %r11534;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11535, %r11536, %r11537;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11538, %r11539, %r11540;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11541, %r11542, %r11543;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11544, %r11545, %r11546;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11547, %r11500, %r11501;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11550, %r11503, %r11504;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11553, %r11506, %r11507;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11556, %r11509, %r11510;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11559, %r11512, %r11513;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11562, %r11515, %r11516;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11565, %r11518, %r11519;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11568, %r11521, %r11522;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11571, %r11524, %r11525;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11574, %r11527, %r11528;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11577, %r11530, %r11531;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11580, %r11533, %r11534;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11583, %r11536, %r11537;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11586, %r11539, %r11540;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11589, %r11542, %r11543;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11592, %r11545, %r11546;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11595, %r190, %r11499;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11598, %r190, %r11502;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11601, %r190, %r11505;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11604, %r190, %r11508;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11607, %r190, %r11511;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11610, %r190, %r11514;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11613, %r190, %r11517;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11616, %r190, %r11520;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11619, %r190, %r11523;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11622, %r190, %r11526;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11625, %r190, %r11529;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11628, %r190, %r11532;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11631, %r190, %r11535;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11634, %r190, %r11538;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11637, %r190, %r11541;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11640, %r190, %r11544;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11643, %r191, %r11547;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11646, %r191, %r11550;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11649, %r191, %r11553;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11652, %r191, %r11556;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11655, %r191, %r11559;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11658, %r191, %r11562;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11661, %r191, %r11565;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11664, %r191, %r11568;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11667, %r191, %r11571;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11670, %r191, %r11574;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11673, %r191, %r11577;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11676, %r191, %r11580;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11679, %r191, %r11583;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11682, %r191, %r11586;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11685, %r191, %r11589;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11688, %r191, %r11592;
	// end inline asm
	// begin inline asm
	mov.b32 %r11691, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11692, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11693, %r11595, %r11691;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11696, %r11693, %r11692;
	// end inline asm
	// begin inline asm
	mov.b32 %r11699, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11700, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11701, %r11598, %r11699;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11704, %r11701, %r11700;
	// end inline asm
	// begin inline asm
	mov.b32 %r11707, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11708, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11709, %r11601, %r11707;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11712, %r11709, %r11708;
	// end inline asm
	// begin inline asm
	mov.b32 %r11715, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11716, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11717, %r11604, %r11715;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11720, %r11717, %r11716;
	// end inline asm
	// begin inline asm
	mov.b32 %r11723, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11724, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11725, %r11607, %r11723;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11728, %r11725, %r11724;
	// end inline asm
	// begin inline asm
	mov.b32 %r11731, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11732, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11733, %r11610, %r11731;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11736, %r11733, %r11732;
	// end inline asm
	// begin inline asm
	mov.b32 %r11739, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11740, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11741, %r11613, %r11739;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11744, %r11741, %r11740;
	// end inline asm
	// begin inline asm
	mov.b32 %r11747, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11748, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11749, %r11616, %r11747;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11752, %r11749, %r11748;
	// end inline asm
	// begin inline asm
	mov.b32 %r11755, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11756, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11757, %r11619, %r11755;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11760, %r11757, %r11756;
	// end inline asm
	// begin inline asm
	mov.b32 %r11763, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11764, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11765, %r11622, %r11763;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11768, %r11765, %r11764;
	// end inline asm
	// begin inline asm
	mov.b32 %r11771, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11772, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11773, %r11625, %r11771;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11776, %r11773, %r11772;
	// end inline asm
	// begin inline asm
	mov.b32 %r11779, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11780, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11781, %r11628, %r11779;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11784, %r11781, %r11780;
	// end inline asm
	// begin inline asm
	mov.b32 %r11787, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11788, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11789, %r11631, %r11787;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11792, %r11789, %r11788;
	// end inline asm
	// begin inline asm
	mov.b32 %r11795, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11796, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11797, %r11634, %r11795;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11800, %r11797, %r11796;
	// end inline asm
	// begin inline asm
	mov.b32 %r11803, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11804, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11805, %r11637, %r11803;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11808, %r11805, %r11804;
	// end inline asm
	// begin inline asm
	mov.b32 %r11811, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11812, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11813, %r11640, %r11811;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11816, %r11813, %r11812;
	// end inline asm
	// begin inline asm
	mov.b32 %r11819, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11820, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11821, %r11643, %r11819;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11824, %r11821, %r11820;
	// end inline asm
	// begin inline asm
	mov.b32 %r11827, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11828, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11829, %r11646, %r11827;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11832, %r11829, %r11828;
	// end inline asm
	// begin inline asm
	mov.b32 %r11835, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11836, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11837, %r11649, %r11835;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11840, %r11837, %r11836;
	// end inline asm
	// begin inline asm
	mov.b32 %r11843, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11844, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11845, %r11652, %r11843;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11848, %r11845, %r11844;
	// end inline asm
	// begin inline asm
	mov.b32 %r11851, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11852, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11853, %r11655, %r11851;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11856, %r11853, %r11852;
	// end inline asm
	// begin inline asm
	mov.b32 %r11859, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11860, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11861, %r11658, %r11859;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11864, %r11861, %r11860;
	// end inline asm
	// begin inline asm
	mov.b32 %r11867, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11868, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11869, %r11661, %r11867;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11872, %r11869, %r11868;
	// end inline asm
	// begin inline asm
	mov.b32 %r11875, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11876, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11877, %r11664, %r11875;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11880, %r11877, %r11876;
	// end inline asm
	// begin inline asm
	mov.b32 %r11883, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11884, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11885, %r11667, %r11883;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11888, %r11885, %r11884;
	// end inline asm
	// begin inline asm
	mov.b32 %r11891, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11892, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11893, %r11670, %r11891;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11896, %r11893, %r11892;
	// end inline asm
	// begin inline asm
	mov.b32 %r11899, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11900, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11901, %r11673, %r11899;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11904, %r11901, %r11900;
	// end inline asm
	// begin inline asm
	mov.b32 %r11907, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11908, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11909, %r11676, %r11907;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11912, %r11909, %r11908;
	// end inline asm
	// begin inline asm
	mov.b32 %r11915, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11916, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11917, %r11679, %r11915;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11920, %r11917, %r11916;
	// end inline asm
	// begin inline asm
	mov.b32 %r11923, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11924, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11925, %r11682, %r11923;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11928, %r11925, %r11924;
	// end inline asm
	// begin inline asm
	mov.b32 %r11931, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11932, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11933, %r11685, %r11931;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11936, %r11933, %r11932;
	// end inline asm
	// begin inline asm
	mov.b32 %r11939, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11940, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11941, %r11688, %r11939;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11944, %r11941, %r11940;
	// end inline asm
	// begin inline asm
	mov.b32 %r11950, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r11948, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11949, %r11950, %r11948;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11952, %r11696, %r11949;
	// end inline asm
	// begin inline asm
	mov.b32 %r11955, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11956, %r11950, %r11955;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11959, %r11704, %r11956;
	// end inline asm
	// begin inline asm
	mov.b32 %r11962, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11963, %r11950, %r11962;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11966, %r11712, %r11963;
	// end inline asm
	// begin inline asm
	mov.b32 %r11969, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11970, %r11950, %r11969;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11973, %r11720, %r11970;
	// end inline asm
	// begin inline asm
	prmt.b32 %r11976, %r11952, %r11966, %r4347;
	// end inline asm
	// begin inline asm
	prmt.b32 %r11980, %r11959, %r11973, %r4347;
	// end inline asm
	shl.b32 	%r11987, %r11980, 4;
	// begin inline asm
	lop3.b32 %r11984, %r4353, %r11976, %r11987, 202;
	// end inline asm
	xor.b32  	%r16115, %r11984, -2004318072;
	// begin inline asm
	mov.b32 %r11991, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r11989, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11990, %r11991, %r11989;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11993, %r11728, %r11990;
	// end inline asm
	// begin inline asm
	mov.b32 %r11996, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11997, %r11991, %r11996;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12000, %r11736, %r11997;
	// end inline asm
	// begin inline asm
	mov.b32 %r12003, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12004, %r11991, %r12003;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12007, %r11744, %r12004;
	// end inline asm
	// begin inline asm
	mov.b32 %r12010, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12011, %r11991, %r12010;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12014, %r11752, %r12011;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12017, %r11993, %r12007, %r4347;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12021, %r12000, %r12014, %r4347;
	// end inline asm
	shl.b32 	%r12028, %r12021, 4;
	// begin inline asm
	lop3.b32 %r12025, %r4353, %r12017, %r12028, 202;
	// end inline asm
	xor.b32  	%r16116, %r12025, -2004318072;
	// begin inline asm
	mov.b32 %r12032, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12030, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12031, %r12032, %r12030;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12034, %r11760, %r12031;
	// end inline asm
	// begin inline asm
	mov.b32 %r12037, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12038, %r12032, %r12037;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12041, %r11768, %r12038;
	// end inline asm
	// begin inline asm
	mov.b32 %r12044, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12045, %r12032, %r12044;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12048, %r11776, %r12045;
	// end inline asm
	// begin inline asm
	mov.b32 %r12051, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12052, %r12032, %r12051;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12055, %r11784, %r12052;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12058, %r12034, %r12048, %r4347;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12062, %r12041, %r12055, %r4347;
	// end inline asm
	shl.b32 	%r12069, %r12062, 4;
	// begin inline asm
	lop3.b32 %r12066, %r4353, %r12058, %r12069, 202;
	// end inline asm
	xor.b32  	%r16117, %r12066, -2004318072;
	// begin inline asm
	mov.b32 %r12073, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12071, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12072, %r12073, %r12071;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12075, %r11792, %r12072;
	// end inline asm
	// begin inline asm
	mov.b32 %r12078, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12079, %r12073, %r12078;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12082, %r11800, %r12079;
	// end inline asm
	// begin inline asm
	mov.b32 %r12085, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12086, %r12073, %r12085;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12089, %r11808, %r12086;
	// end inline asm
	// begin inline asm
	mov.b32 %r12092, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12093, %r12073, %r12092;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12096, %r11816, %r12093;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12099, %r12075, %r12089, %r4347;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12103, %r12082, %r12096, %r4347;
	// end inline asm
	shl.b32 	%r12110, %r12103, 4;
	// begin inline asm
	lop3.b32 %r12107, %r4353, %r12099, %r12110, 202;
	// end inline asm
	xor.b32  	%r16118, %r12107, -2004318072;
	// begin inline asm
	mov.b32 %r12114, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12112, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12113, %r12114, %r12112;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12116, %r11824, %r12113;
	// end inline asm
	// begin inline asm
	mov.b32 %r12119, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12120, %r12114, %r12119;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12123, %r11832, %r12120;
	// end inline asm
	// begin inline asm
	mov.b32 %r12126, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12127, %r12114, %r12126;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12130, %r11840, %r12127;
	// end inline asm
	// begin inline asm
	mov.b32 %r12133, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12134, %r12114, %r12133;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12137, %r11848, %r12134;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12140, %r12116, %r12130, %r4347;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12144, %r12123, %r12137, %r4347;
	// end inline asm
	shl.b32 	%r12151, %r12144, 4;
	// begin inline asm
	lop3.b32 %r12148, %r4353, %r12140, %r12151, 202;
	// end inline asm
	xor.b32  	%r16119, %r12148, -2004318072;
	// begin inline asm
	mov.b32 %r12155, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12153, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12154, %r12155, %r12153;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12157, %r11856, %r12154;
	// end inline asm
	// begin inline asm
	mov.b32 %r12160, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12161, %r12155, %r12160;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12164, %r11864, %r12161;
	// end inline asm
	// begin inline asm
	mov.b32 %r12167, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12168, %r12155, %r12167;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12171, %r11872, %r12168;
	// end inline asm
	// begin inline asm
	mov.b32 %r12174, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12175, %r12155, %r12174;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12178, %r11880, %r12175;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12181, %r12157, %r12171, %r4347;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12185, %r12164, %r12178, %r4347;
	// end inline asm
	shl.b32 	%r12192, %r12185, 4;
	// begin inline asm
	lop3.b32 %r12189, %r4353, %r12181, %r12192, 202;
	// end inline asm
	xor.b32  	%r16120, %r12189, -2004318072;
	// begin inline asm
	mov.b32 %r12196, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12194, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12195, %r12196, %r12194;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12198, %r11888, %r12195;
	// end inline asm
	// begin inline asm
	mov.b32 %r12201, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12202, %r12196, %r12201;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12205, %r11896, %r12202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12208, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12209, %r12196, %r12208;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12212, %r11904, %r12209;
	// end inline asm
	// begin inline asm
	mov.b32 %r12215, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12216, %r12196, %r12215;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12219, %r11912, %r12216;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12222, %r12198, %r12212, %r4347;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12226, %r12205, %r12219, %r4347;
	// end inline asm
	shl.b32 	%r12233, %r12226, 4;
	// begin inline asm
	lop3.b32 %r12230, %r4353, %r12222, %r12233, 202;
	// end inline asm
	xor.b32  	%r16121, %r12230, -2004318072;
	// begin inline asm
	mov.b32 %r12237, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12235, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12236, %r12237, %r12235;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12239, %r11920, %r12236;
	// end inline asm
	// begin inline asm
	mov.b32 %r12242, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12243, %r12237, %r12242;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12246, %r11928, %r12243;
	// end inline asm
	// begin inline asm
	mov.b32 %r12249, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12250, %r12237, %r12249;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12253, %r11936, %r12250;
	// end inline asm
	// begin inline asm
	mov.b32 %r12256, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12257, %r12237, %r12256;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12260, %r11944, %r12257;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12263, %r12239, %r12253, %r4347;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12267, %r12246, %r12260, %r4347;
	// end inline asm
	shl.b32 	%r12274, %r12267, 4;
	// begin inline asm
	lop3.b32 %r12271, %r4353, %r12263, %r12274, 202;
	// end inline asm
	xor.b32  	%r16122, %r12271, -2004318072;
	st.shared.u32 	[%rd131], %r16115;
	st.shared.u32 	[%rd132], %r16116;
	st.shared.u32 	[%rd133], %r16117;
	st.shared.u32 	[%rd134], %r16118;
	st.shared.u32 	[%rd135], %r16119;
	st.shared.u32 	[%rd136], %r16120;
	st.shared.u32 	[%rd137], %r16121;
	st.shared.u32 	[%rd138], %r16122;
	ld.shared.u32 	%r16215, [%rd123];
	ld.shared.u32 	%r16216, [%rd124];
	ld.shared.u32 	%r16217, [%rd125];
	ld.shared.u32 	%r16218, [%rd126];
	ld.shared.u32 	%r16227, [%rd127];
	ld.shared.u32 	%r16228, [%rd128];
	ld.shared.u32 	%r16229, [%rd129];
	ld.shared.u32 	%r16230, [%rd130];
	// begin inline asm
	mov.b32 %r12280, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12291, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12279, %r16215, -2004318072;
	// begin inline asm
	lop3.b32 %r12277, %r830, %r12279, %r12280, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12281, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12282, %r12280, %r12281;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12285, %r12277, %r12282;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12288, %r841, %r12279, %r12291, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12292, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12293, %r12291, %r12292;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12296, %r12288, %r12293;
	// end inline asm
	shr.u32 	%r12301, %r12279, 8;
	// begin inline asm
	lop3.b32 %r12299, %r830, %r12301, %r12280, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12303, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12304, %r12280, %r12303;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12307, %r12299, %r12304;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12310, %r841, %r12301, %r12291, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12314, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12315, %r12291, %r12314;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12318, %r12310, %r12315;
	// end inline asm
	// begin inline asm
	mov.b32 %r12326, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12337, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12325, %r16216, -2004318072;
	// begin inline asm
	lop3.b32 %r12323, %r830, %r12325, %r12326, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12327, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12328, %r12326, %r12327;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12331, %r12323, %r12328;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12334, %r841, %r12325, %r12337, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12338, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12339, %r12337, %r12338;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12342, %r12334, %r12339;
	// end inline asm
	shr.u32 	%r12347, %r12325, 8;
	// begin inline asm
	lop3.b32 %r12345, %r830, %r12347, %r12326, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12349, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12350, %r12326, %r12349;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12353, %r12345, %r12350;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12356, %r841, %r12347, %r12337, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12360, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12361, %r12337, %r12360;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12364, %r12356, %r12361;
	// end inline asm
	// begin inline asm
	mov.b32 %r12372, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12383, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12371, %r16217, -2004318072;
	// begin inline asm
	lop3.b32 %r12369, %r830, %r12371, %r12372, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12373, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12374, %r12372, %r12373;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12377, %r12369, %r12374;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12380, %r841, %r12371, %r12383, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12384, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12385, %r12383, %r12384;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12388, %r12380, %r12385;
	// end inline asm
	shr.u32 	%r12393, %r12371, 8;
	// begin inline asm
	lop3.b32 %r12391, %r830, %r12393, %r12372, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12395, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12396, %r12372, %r12395;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12399, %r12391, %r12396;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12402, %r841, %r12393, %r12383, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12406, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12407, %r12383, %r12406;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12410, %r12402, %r12407;
	// end inline asm
	// begin inline asm
	mov.b32 %r12418, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12429, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12417, %r16218, -2004318072;
	// begin inline asm
	lop3.b32 %r12415, %r830, %r12417, %r12418, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12419, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12420, %r12418, %r12419;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12423, %r12415, %r12420;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12426, %r841, %r12417, %r12429, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12430, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12431, %r12429, %r12430;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12434, %r12426, %r12431;
	// end inline asm
	shr.u32 	%r12439, %r12417, 8;
	// begin inline asm
	lop3.b32 %r12437, %r830, %r12439, %r12418, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12441, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12442, %r12418, %r12441;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12445, %r12437, %r12442;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12448, %r841, %r12439, %r12429, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12452, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12453, %r12429, %r12452;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12456, %r12448, %r12453;
	// end inline asm
	// begin inline asm
	mov.b32 %r12464, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12475, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12463, %r16227, -2004318072;
	// begin inline asm
	lop3.b32 %r12461, %r830, %r12463, %r12464, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12465, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12466, %r12464, %r12465;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12469, %r12461, %r12466;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12472, %r841, %r12463, %r12475, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12476, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12477, %r12475, %r12476;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12480, %r12472, %r12477;
	// end inline asm
	shr.u32 	%r12485, %r12463, 8;
	// begin inline asm
	lop3.b32 %r12483, %r830, %r12485, %r12464, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12487, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12488, %r12464, %r12487;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12491, %r12483, %r12488;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12494, %r841, %r12485, %r12475, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12498, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12499, %r12475, %r12498;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12502, %r12494, %r12499;
	// end inline asm
	// begin inline asm
	mov.b32 %r12510, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12521, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12509, %r16228, -2004318072;
	// begin inline asm
	lop3.b32 %r12507, %r830, %r12509, %r12510, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12511, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12512, %r12510, %r12511;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12515, %r12507, %r12512;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12518, %r841, %r12509, %r12521, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12522, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12523, %r12521, %r12522;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12526, %r12518, %r12523;
	// end inline asm
	shr.u32 	%r12531, %r12509, 8;
	// begin inline asm
	lop3.b32 %r12529, %r830, %r12531, %r12510, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12533, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12534, %r12510, %r12533;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12537, %r12529, %r12534;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12540, %r841, %r12531, %r12521, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12544, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12545, %r12521, %r12544;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12548, %r12540, %r12545;
	// end inline asm
	// begin inline asm
	mov.b32 %r12556, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12567, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12555, %r16229, -2004318072;
	// begin inline asm
	lop3.b32 %r12553, %r830, %r12555, %r12556, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12557, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12558, %r12556, %r12557;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12561, %r12553, %r12558;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12564, %r841, %r12555, %r12567, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12568, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12569, %r12567, %r12568;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12572, %r12564, %r12569;
	// end inline asm
	shr.u32 	%r12577, %r12555, 8;
	// begin inline asm
	lop3.b32 %r12575, %r830, %r12577, %r12556, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12579, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12580, %r12556, %r12579;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12583, %r12575, %r12580;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12586, %r841, %r12577, %r12567, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12590, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12591, %r12567, %r12590;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12594, %r12586, %r12591;
	// end inline asm
	// begin inline asm
	mov.b32 %r12602, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12613, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12601, %r16230, -2004318072;
	// begin inline asm
	lop3.b32 %r12599, %r830, %r12601, %r12602, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12603, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12604, %r12602, %r12603;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12607, %r12599, %r12604;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12610, %r841, %r12601, %r12613, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12614, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12615, %r12613, %r12614;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12618, %r12610, %r12615;
	// end inline asm
	shr.u32 	%r12623, %r12601, 8;
	// begin inline asm
	lop3.b32 %r12621, %r830, %r12623, %r12602, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12625, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12626, %r12602, %r12625;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12629, %r12621, %r12626;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12632, %r841, %r12623, %r12613, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12636, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12637, %r12613, %r12636;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12640, %r12632, %r12637;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12643, %r382;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12645, %r12643, %r12285;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12648, %r382;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12650, %r12648, %r12296;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12653, %r382;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12655, %r12653, %r12307;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12658, %r382;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12660, %r12658, %r12318;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12663, %r382;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12665, %r12663, %r12331;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12668, %r382;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12670, %r12668, %r12342;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12673, %r382;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12675, %r12673, %r12353;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12678, %r382;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12680, %r12678, %r12364;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12683, %r382;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12685, %r12683, %r12377;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12688, %r382;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12690, %r12688, %r12388;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12693, %r382;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12695, %r12693, %r12399;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12698, %r382;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12700, %r12698, %r12410;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12703, %r382;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12705, %r12703, %r12423;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12708, %r382;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12710, %r12708, %r12434;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12713, %r382;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12715, %r12713, %r12445;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12718, %r382;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12720, %r12718, %r12456;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12723, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12725, %r12723, %r12469;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12728, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12730, %r12728, %r12480;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12733, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12735, %r12733, %r12491;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12738, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12740, %r12738, %r12502;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12743, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12745, %r12743, %r12515;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12748, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12750, %r12748, %r12526;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12753, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12755, %r12753, %r12537;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12758, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12760, %r12758, %r12548;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12763, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12765, %r12763, %r12561;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12768, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12770, %r12768, %r12572;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12773, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12775, %r12773, %r12583;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12778, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12780, %r12778, %r12594;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12783, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12785, %r12783, %r12607;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12788, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12790, %r12788, %r12618;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12793, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12795, %r12793, %r12629;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12798, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12800, %r12798, %r12640;
	// end inline asm
	// begin inline asm
	mov.b32 %r12808, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12819, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12805, %r830, %r831, %r12808, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12809, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12810, %r12808, %r12809;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12813, %r12805, %r12810;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12816, %r841, %r831, %r12819, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12820, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12821, %r12819, %r12820;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12824, %r12816, %r12821;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12827, %r830, %r853, %r12808, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12831, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12832, %r12808, %r12831;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12835, %r12827, %r12832;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12838, %r841, %r853, %r12819, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12842, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12843, %r12819, %r12842;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12846, %r12838, %r12843;
	// end inline asm
	// begin inline asm
	mov.b32 %r12854, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12865, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12851, %r830, %r877, %r12854, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12855, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12856, %r12854, %r12855;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12859, %r12851, %r12856;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12862, %r841, %r877, %r12865, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12866, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12867, %r12865, %r12866;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12870, %r12862, %r12867;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12873, %r830, %r899, %r12854, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12877, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12878, %r12854, %r12877;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12881, %r12873, %r12878;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12884, %r841, %r899, %r12865, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12888, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12889, %r12865, %r12888;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12892, %r12884, %r12889;
	// end inline asm
	// begin inline asm
	mov.b32 %r12900, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12911, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12897, %r830, %r923, %r12900, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12901, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12902, %r12900, %r12901;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12905, %r12897, %r12902;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12908, %r841, %r923, %r12911, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12912, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12913, %r12911, %r12912;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12916, %r12908, %r12913;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12919, %r830, %r945, %r12900, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12923, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12924, %r12900, %r12923;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12927, %r12919, %r12924;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12930, %r841, %r945, %r12911, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12934, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12935, %r12911, %r12934;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12938, %r12930, %r12935;
	// end inline asm
	// begin inline asm
	mov.b32 %r12946, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12957, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12943, %r830, %r969, %r12946, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12947, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12948, %r12946, %r12947;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12951, %r12943, %r12948;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12954, %r841, %r969, %r12957, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12958, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12959, %r12957, %r12958;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12962, %r12954, %r12959;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12965, %r830, %r991, %r12946, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12969, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12970, %r12946, %r12969;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12973, %r12965, %r12970;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12976, %r841, %r991, %r12957, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12980, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12981, %r12957, %r12980;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12984, %r12976, %r12981;
	// end inline asm
	// begin inline asm
	mov.b32 %r12992, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13003, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12989, %r830, %r1015, %r12992, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12993, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12994, %r12992, %r12993;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12997, %r12989, %r12994;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13000, %r841, %r1015, %r13003, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13004, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13005, %r13003, %r13004;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13008, %r13000, %r13005;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13011, %r830, %r1037, %r12992, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13015, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13016, %r12992, %r13015;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13019, %r13011, %r13016;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13022, %r841, %r1037, %r13003, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13026, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13027, %r13003, %r13026;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13030, %r13022, %r13027;
	// end inline asm
	// begin inline asm
	mov.b32 %r13038, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13049, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13035, %r830, %r1061, %r13038, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13039, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13040, %r13038, %r13039;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13043, %r13035, %r13040;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13046, %r841, %r1061, %r13049, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13050, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13051, %r13049, %r13050;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13054, %r13046, %r13051;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13057, %r830, %r1083, %r13038, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13061, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13062, %r13038, %r13061;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13065, %r13057, %r13062;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13068, %r841, %r1083, %r13049, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13072, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13073, %r13049, %r13072;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13076, %r13068, %r13073;
	// end inline asm
	// begin inline asm
	mov.b32 %r13084, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13095, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13081, %r830, %r1107, %r13084, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13085, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13086, %r13084, %r13085;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13089, %r13081, %r13086;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13092, %r841, %r1107, %r13095, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13096, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13097, %r13095, %r13096;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13100, %r13092, %r13097;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13103, %r830, %r1129, %r13084, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13107, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13108, %r13084, %r13107;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13111, %r13103, %r13108;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13114, %r841, %r1129, %r13095, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13118, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13119, %r13095, %r13118;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13122, %r13114, %r13119;
	// end inline asm
	// begin inline asm
	mov.b32 %r13130, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13141, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13127, %r830, %r1153, %r13130, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13131, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13132, %r13130, %r13131;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13135, %r13127, %r13132;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13138, %r841, %r1153, %r13141, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13142, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13143, %r13141, %r13142;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13146, %r13138, %r13143;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13149, %r830, %r1175, %r13130, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13153, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13154, %r13130, %r13153;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13157, %r13149, %r13154;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13160, %r841, %r1175, %r13141, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13164, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13165, %r13141, %r13164;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13168, %r13160, %r13165;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13171, %r274, %r12813, %r12645;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13175, %r274, %r12824, %r12650;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13179, %r274, %r12835, %r12655;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13183, %r274, %r12846, %r12660;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13187, %r274, %r12859, %r12665;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13191, %r274, %r12870, %r12670;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13195, %r274, %r12881, %r12675;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13199, %r274, %r12892, %r12680;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13203, %r274, %r12905, %r12685;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13207, %r274, %r12916, %r12690;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13211, %r274, %r12927, %r12695;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13215, %r274, %r12938, %r12700;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13219, %r274, %r12951, %r12705;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13223, %r274, %r12962, %r12710;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13227, %r274, %r12973, %r12715;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13231, %r274, %r12984, %r12720;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13235, %r292, %r12997, %r12725;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13239, %r292, %r13008, %r12730;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13243, %r292, %r13019, %r12735;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13247, %r292, %r13030, %r12740;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13251, %r292, %r13043, %r12745;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13255, %r292, %r13054, %r12750;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13259, %r292, %r13065, %r12755;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13263, %r292, %r13076, %r12760;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13267, %r292, %r13089, %r12765;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13271, %r292, %r13100, %r12770;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13275, %r292, %r13111, %r12775;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13279, %r292, %r13122, %r12780;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13283, %r292, %r13135, %r12785;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13287, %r292, %r13146, %r12790;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13291, %r292, %r13157, %r12795;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13295, %r292, %r13168, %r12800;
	// end inline asm
	// begin inline asm
	mov.b32 %r13304, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13315, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13301, %r830, %r4647, %r13304, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13305, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13306, %r13304, %r13305;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13309, %r13301, %r13306;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13312, %r841, %r4647, %r13315, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13316, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13317, %r13315, %r13316;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13320, %r13312, %r13317;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13323, %r830, %r4669, %r13304, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13327, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13328, %r13304, %r13327;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13331, %r13323, %r13328;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13334, %r841, %r4669, %r13315, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13338, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13339, %r13315, %r13338;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13342, %r13334, %r13339;
	// end inline asm
	// begin inline asm
	mov.b32 %r13350, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13361, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13347, %r830, %r4693, %r13350, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13351, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13352, %r13350, %r13351;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13355, %r13347, %r13352;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13358, %r841, %r4693, %r13361, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13362, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13363, %r13361, %r13362;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13366, %r13358, %r13363;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13369, %r830, %r4715, %r13350, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13373, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13374, %r13350, %r13373;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13377, %r13369, %r13374;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13380, %r841, %r4715, %r13361, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13384, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13385, %r13361, %r13384;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13388, %r13380, %r13385;
	// end inline asm
	// begin inline asm
	mov.b32 %r13396, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13407, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13393, %r830, %r4739, %r13396, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13397, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13398, %r13396, %r13397;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13401, %r13393, %r13398;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13404, %r841, %r4739, %r13407, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13408, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13409, %r13407, %r13408;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13412, %r13404, %r13409;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13415, %r830, %r4761, %r13396, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13419, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13420, %r13396, %r13419;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13423, %r13415, %r13420;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13426, %r841, %r4761, %r13407, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13430, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13431, %r13407, %r13430;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13434, %r13426, %r13431;
	// end inline asm
	// begin inline asm
	mov.b32 %r13442, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13453, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13439, %r830, %r4785, %r13442, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13443, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13444, %r13442, %r13443;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13447, %r13439, %r13444;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13450, %r841, %r4785, %r13453, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13454, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13455, %r13453, %r13454;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13458, %r13450, %r13455;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13461, %r830, %r4807, %r13442, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13465, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13466, %r13442, %r13465;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13469, %r13461, %r13466;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13472, %r841, %r4807, %r13453, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13476, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13477, %r13453, %r13476;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13480, %r13472, %r13477;
	// end inline asm
	// begin inline asm
	mov.b32 %r13488, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13499, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13485, %r830, %r4831, %r13488, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13489, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13490, %r13488, %r13489;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13493, %r13485, %r13490;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13496, %r841, %r4831, %r13499, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13500, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13501, %r13499, %r13500;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13504, %r13496, %r13501;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13507, %r830, %r4853, %r13488, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13511, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13512, %r13488, %r13511;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13515, %r13507, %r13512;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13518, %r841, %r4853, %r13499, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13522, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13523, %r13499, %r13522;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13526, %r13518, %r13523;
	// end inline asm
	// begin inline asm
	mov.b32 %r13534, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13545, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13531, %r830, %r4877, %r13534, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13535, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13536, %r13534, %r13535;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13539, %r13531, %r13536;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13542, %r841, %r4877, %r13545, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13546, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13547, %r13545, %r13546;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13550, %r13542, %r13547;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13553, %r830, %r4899, %r13534, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13557, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13558, %r13534, %r13557;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13561, %r13553, %r13558;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13564, %r841, %r4899, %r13545, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13568, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13569, %r13545, %r13568;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13572, %r13564, %r13569;
	// end inline asm
	// begin inline asm
	mov.b32 %r13580, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13591, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13577, %r830, %r4923, %r13580, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13581, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13582, %r13580, %r13581;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13585, %r13577, %r13582;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13588, %r841, %r4923, %r13591, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13592, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13593, %r13591, %r13592;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13596, %r13588, %r13593;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13599, %r830, %r4945, %r13580, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13603, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13604, %r13580, %r13603;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13607, %r13599, %r13604;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13610, %r841, %r4945, %r13591, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13614, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13615, %r13591, %r13614;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13618, %r13610, %r13615;
	// end inline asm
	// begin inline asm
	mov.b32 %r13626, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13637, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13623, %r830, %r4969, %r13626, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13627, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13628, %r13626, %r13627;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13631, %r13623, %r13628;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13634, %r841, %r4969, %r13637, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13638, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13639, %r13637, %r13638;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13642, %r13634, %r13639;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13645, %r830, %r4991, %r13626, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13649, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13650, %r13626, %r13649;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13653, %r13645, %r13650;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13656, %r841, %r4991, %r13637, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13660, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13661, %r13637, %r13660;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13664, %r13656, %r13661;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13667, %r310;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13669, %r13667, %r13309, %r13171;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13673, %r310;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13675, %r13673, %r13320, %r13175;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13679, %r310;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13681, %r13679, %r13331, %r13179;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13685, %r310;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13687, %r13685, %r13342, %r13183;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13691, %r310;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13693, %r13691, %r13355, %r13187;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13697, %r310;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13699, %r13697, %r13366, %r13191;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13703, %r310;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13705, %r13703, %r13377, %r13195;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13709, %r310;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13711, %r13709, %r13388, %r13199;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13715, %r310;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13717, %r13715, %r13401, %r13203;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13721, %r310;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13723, %r13721, %r13412, %r13207;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13727, %r310;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13729, %r13727, %r13423, %r13211;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13733, %r310;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13735, %r13733, %r13434, %r13215;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13739, %r310;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13741, %r13739, %r13447, %r13219;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13745, %r310;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13747, %r13745, %r13458, %r13223;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13751, %r310;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13753, %r13751, %r13469, %r13227;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13757, %r310;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13759, %r13757, %r13480, %r13231;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13763, %r328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13765, %r13763, %r13493, %r13235;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13769, %r328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13771, %r13769, %r13504, %r13239;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13775, %r328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13777, %r13775, %r13515, %r13243;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13781, %r328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13783, %r13781, %r13526, %r13247;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13787, %r328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13789, %r13787, %r13539, %r13251;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13793, %r328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13795, %r13793, %r13550, %r13255;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13799, %r328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13801, %r13799, %r13561, %r13259;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13805, %r328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13807, %r13805, %r13572, %r13263;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13811, %r328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13813, %r13811, %r13585, %r13267;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13817, %r328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13819, %r13817, %r13596, %r13271;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13823, %r328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13825, %r13823, %r13607, %r13275;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13829, %r328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13831, %r13829, %r13618, %r13279;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13835, %r328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13837, %r13835, %r13631, %r13283;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13841, %r328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13843, %r13841, %r13642, %r13287;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13847, %r328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13849, %r13847, %r13653, %r13291;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13853, %r328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13855, %r13853, %r13664, %r13295;
	// end inline asm
	// begin inline asm
	mov.b32 %r13864, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13875, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13861, %r830, %r8463, %r13864, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13865, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13866, %r13864, %r13865;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13869, %r13861, %r13866;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13872, %r841, %r8463, %r13875, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13876, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13877, %r13875, %r13876;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13880, %r13872, %r13877;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13883, %r830, %r8485, %r13864, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13887, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13888, %r13864, %r13887;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13891, %r13883, %r13888;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13894, %r841, %r8485, %r13875, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13898, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13899, %r13875, %r13898;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13902, %r13894, %r13899;
	// end inline asm
	// begin inline asm
	mov.b32 %r13910, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13921, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13907, %r830, %r8509, %r13910, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13911, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13912, %r13910, %r13911;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13915, %r13907, %r13912;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13918, %r841, %r8509, %r13921, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13922, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13923, %r13921, %r13922;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13926, %r13918, %r13923;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13929, %r830, %r8531, %r13910, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13933, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13934, %r13910, %r13933;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13937, %r13929, %r13934;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13940, %r841, %r8531, %r13921, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13944, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13945, %r13921, %r13944;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13948, %r13940, %r13945;
	// end inline asm
	// begin inline asm
	mov.b32 %r13956, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13967, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13953, %r830, %r8555, %r13956, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13957, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13958, %r13956, %r13957;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13961, %r13953, %r13958;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13964, %r841, %r8555, %r13967, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13968, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13969, %r13967, %r13968;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13972, %r13964, %r13969;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13975, %r830, %r8577, %r13956, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13979, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13980, %r13956, %r13979;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13983, %r13975, %r13980;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13986, %r841, %r8577, %r13967, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13990, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13991, %r13967, %r13990;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13994, %r13986, %r13991;
	// end inline asm
	// begin inline asm
	mov.b32 %r14002, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r14013, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13999, %r830, %r8601, %r14002, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14003, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14004, %r14002, %r14003;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14007, %r13999, %r14004;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14010, %r841, %r8601, %r14013, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14014, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14015, %r14013, %r14014;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14018, %r14010, %r14015;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14021, %r830, %r8623, %r14002, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14025, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14026, %r14002, %r14025;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14029, %r14021, %r14026;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14032, %r841, %r8623, %r14013, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14036, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14037, %r14013, %r14036;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14040, %r14032, %r14037;
	// end inline asm
	// begin inline asm
	mov.b32 %r14048, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r14059, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14045, %r830, %r8647, %r14048, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14049, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14050, %r14048, %r14049;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14053, %r14045, %r14050;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14056, %r841, %r8647, %r14059, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14060, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14061, %r14059, %r14060;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14064, %r14056, %r14061;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14067, %r830, %r8669, %r14048, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14071, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14072, %r14048, %r14071;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14075, %r14067, %r14072;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14078, %r841, %r8669, %r14059, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14082, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14083, %r14059, %r14082;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14086, %r14078, %r14083;
	// end inline asm
	// begin inline asm
	mov.b32 %r14094, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r14105, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14091, %r830, %r8693, %r14094, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14095, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14096, %r14094, %r14095;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14099, %r14091, %r14096;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14102, %r841, %r8693, %r14105, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14106, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14107, %r14105, %r14106;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14110, %r14102, %r14107;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14113, %r830, %r8715, %r14094, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14117, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14118, %r14094, %r14117;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14121, %r14113, %r14118;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14124, %r841, %r8715, %r14105, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14128, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14129, %r14105, %r14128;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14132, %r14124, %r14129;
	// end inline asm
	// begin inline asm
	mov.b32 %r14140, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r14151, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14137, %r830, %r8739, %r14140, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14141, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14142, %r14140, %r14141;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14145, %r14137, %r14142;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14148, %r841, %r8739, %r14151, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14152, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14153, %r14151, %r14152;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14156, %r14148, %r14153;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14159, %r830, %r8761, %r14140, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14163, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14164, %r14140, %r14163;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14167, %r14159, %r14164;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14170, %r841, %r8761, %r14151, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14174, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14175, %r14151, %r14174;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14178, %r14170, %r14175;
	// end inline asm
	// begin inline asm
	mov.b32 %r14186, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r14197, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14183, %r830, %r8785, %r14186, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14187, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14188, %r14186, %r14187;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14191, %r14183, %r14188;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14194, %r841, %r8785, %r14197, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14198, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14199, %r14197, %r14198;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14202, %r14194, %r14199;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14205, %r830, %r8807, %r14186, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14209, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14210, %r14186, %r14209;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14213, %r14205, %r14210;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14216, %r841, %r8807, %r14197, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14220, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14221, %r14197, %r14220;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14224, %r14216, %r14221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14362, %r346, %r13869, %r13669;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14359, %r346, %r13880, %r13675;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14371, %r346, %r13891, %r13681;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14368, %r346, %r13902, %r13687;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14380, %r346, %r13915, %r13693;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14377, %r346, %r13926, %r13699;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14389, %r346, %r13937, %r13705;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14386, %r346, %r13948, %r13711;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14398, %r346, %r13961, %r13717;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14395, %r346, %r13972, %r13723;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14407, %r346, %r13983, %r13729;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14404, %r346, %r13994, %r13735;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14416, %r346, %r14007, %r13741;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14413, %r346, %r14018, %r13747;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14425, %r346, %r14029, %r13753;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14422, %r346, %r14040, %r13759;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14434, %r364, %r14053, %r13765;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14431, %r364, %r14064, %r13771;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14443, %r364, %r14075, %r13777;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14440, %r364, %r14086, %r13783;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14452, %r364, %r14099, %r13789;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14449, %r364, %r14110, %r13795;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14461, %r364, %r14121, %r13801;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14458, %r364, %r14132, %r13807;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14470, %r364, %r14145, %r13813;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14467, %r364, %r14156, %r13819;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14479, %r364, %r14167, %r13825;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14476, %r364, %r14178, %r13831;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14488, %r364, %r14191, %r13837;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14485, %r364, %r14202, %r13843;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14497, %r364, %r14213, %r13849;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14494, %r364, %r14224, %r13855;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14355, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14357, %r14355, %r14359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14360, %r428, %r14362, %r14357;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14364, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14366, %r14364, %r14368;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14369, %r428, %r14371, %r14366;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14373, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14375, %r14373, %r14377;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14378, %r428, %r14380, %r14375;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14382, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14384, %r14382, %r14386;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14387, %r428, %r14389, %r14384;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14391, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14393, %r14391, %r14395;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14396, %r428, %r14398, %r14393;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14400, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14402, %r14400, %r14404;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14405, %r428, %r14407, %r14402;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14409, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14411, %r14409, %r14413;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14414, %r428, %r14416, %r14411;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14418, %r434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14420, %r14418, %r14422;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14423, %r428, %r14425, %r14420;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14427, %r437;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14429, %r14427, %r14431;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14432, %r431, %r14434, %r14429;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14436, %r437;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14438, %r14436, %r14440;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14441, %r431, %r14443, %r14438;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14445, %r437;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14447, %r14445, %r14449;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14450, %r431, %r14452, %r14447;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14454, %r437;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14456, %r14454, %r14458;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14459, %r431, %r14461, %r14456;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14463, %r437;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14465, %r14463, %r14467;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14468, %r431, %r14470, %r14465;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14472, %r437;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14474, %r14472, %r14476;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14477, %r431, %r14479, %r14474;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14481, %r437;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14483, %r14481, %r14485;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14486, %r431, %r14488, %r14483;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14490, %r437;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14492, %r14490, %r14494;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14495, %r431, %r14497, %r14492;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14499, %r434, %r14362;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14502, %r428, %r14359, %r14499;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14506, %r434, %r14371;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14509, %r428, %r14368, %r14506;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14513, %r434, %r14380;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14516, %r428, %r14377, %r14513;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14520, %r434, %r14389;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14523, %r428, %r14386, %r14520;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14527, %r434, %r14398;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14530, %r428, %r14395, %r14527;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14534, %r434, %r14407;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14537, %r428, %r14404, %r14534;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14541, %r434, %r14416;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14544, %r428, %r14413, %r14541;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14548, %r434, %r14425;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14551, %r428, %r14422, %r14548;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14555, %r437, %r14434;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14558, %r431, %r14431, %r14555;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14562, %r437, %r14443;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14565, %r431, %r14440, %r14562;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14569, %r437, %r14452;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14572, %r431, %r14449, %r14569;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14576, %r437, %r14461;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14579, %r431, %r14458, %r14576;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14583, %r437, %r14470;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14586, %r431, %r14467, %r14583;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14590, %r437, %r14479;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14593, %r431, %r14476, %r14590;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14597, %r437, %r14488;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14600, %r431, %r14485, %r14597;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14604, %r437, %r14497;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14607, %r431, %r14494, %r14604;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14778, %r14775}, {%r476, %r482, %r479, %r485}, {%r14360, %r14502}, {%r3171, %r3171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14787, %r14784}, {%r476, %r482, %r479, %r485}, {%r14369, %r14509}, {%r3171, %r3171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14796, %r14793}, {%r476, %r482, %r479, %r485}, {%r14378, %r14516}, {%r3171, %r3171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14805, %r14802}, {%r476, %r482, %r479, %r485}, {%r14387, %r14523}, {%r3171, %r3171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14814, %r14811}, {%r476, %r482, %r479, %r485}, {%r14396, %r14530}, {%r3171, %r3171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14823, %r14820}, {%r476, %r482, %r479, %r485}, {%r14405, %r14537}, {%r3171, %r3171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14832, %r14829}, {%r476, %r482, %r479, %r485}, {%r14414, %r14544}, {%r3171, %r3171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14841, %r14838}, {%r476, %r482, %r479, %r485}, {%r14423, %r14551}, {%r3171, %r3171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14850, %r14847}, {%r476, %r482, %r479, %r485}, {%r14432, %r14558}, {%r3171, %r3171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14859, %r14856}, {%r476, %r482, %r479, %r485}, {%r14441, %r14565}, {%r3171, %r3171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14868, %r14865}, {%r476, %r482, %r479, %r485}, {%r14450, %r14572}, {%r3171, %r3171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14877, %r14874}, {%r476, %r482, %r479, %r485}, {%r14459, %r14579}, {%r3171, %r3171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14886, %r14883}, {%r476, %r482, %r479, %r485}, {%r14468, %r14586}, {%r3171, %r3171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14895, %r14892}, {%r476, %r482, %r479, %r485}, {%r14477, %r14593}, {%r3171, %r3171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14904, %r14901}, {%r476, %r482, %r479, %r485}, {%r14486, %r14600}, {%r3171, %r3171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14913, %r14910}, {%r476, %r482, %r479, %r485}, {%r14495, %r14607}, {%r3171, %r3171};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14771, %r526;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14773, %r14771, %r14775;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14776, %r523, %r14778, %r14773;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14780, %r526;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14782, %r14780, %r14784;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14785, %r523, %r14787, %r14782;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14789, %r526;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14791, %r14789, %r14793;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14794, %r523, %r14796, %r14791;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14798, %r526;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14800, %r14798, %r14802;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14803, %r523, %r14805, %r14800;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14807, %r526;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14809, %r14807, %r14811;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14812, %r523, %r14814, %r14809;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14816, %r526;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14818, %r14816, %r14820;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14821, %r523, %r14823, %r14818;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14825, %r526;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14827, %r14825, %r14829;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14830, %r523, %r14832, %r14827;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14834, %r526;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14836, %r14834, %r14838;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14839, %r523, %r14841, %r14836;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14843, %r526;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14845, %r14843, %r14847;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14848, %r523, %r14850, %r14845;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14852, %r526;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14854, %r14852, %r14856;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14857, %r523, %r14859, %r14854;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14861, %r526;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14863, %r14861, %r14865;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14866, %r523, %r14868, %r14863;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14870, %r526;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14872, %r14870, %r14874;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14875, %r523, %r14877, %r14872;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14879, %r526;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14881, %r14879, %r14883;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14884, %r523, %r14886, %r14881;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14888, %r526;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14890, %r14888, %r14892;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14893, %r523, %r14895, %r14890;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14897, %r526;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14899, %r14897, %r14901;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14902, %r523, %r14904, %r14899;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14906, %r526;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14908, %r14906, %r14910;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14911, %r523, %r14913, %r14908;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14915, %r526, %r14778;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14918, %r523, %r14775, %r14915;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14922, %r526, %r14787;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14925, %r523, %r14784, %r14922;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14929, %r526, %r14796;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14932, %r523, %r14793, %r14929;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14936, %r526, %r14805;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14939, %r523, %r14802, %r14936;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14943, %r526, %r14814;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14946, %r523, %r14811, %r14943;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14950, %r526, %r14823;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14953, %r523, %r14820, %r14950;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14957, %r526, %r14832;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14960, %r523, %r14829, %r14957;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14964, %r526, %r14841;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14967, %r523, %r14838, %r14964;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14971, %r526, %r14850;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14974, %r523, %r14847, %r14971;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14978, %r526, %r14859;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14981, %r523, %r14856, %r14978;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14985, %r526, %r14868;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14988, %r523, %r14865, %r14985;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14992, %r526, %r14877;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14995, %r523, %r14874, %r14992;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14999, %r526, %r14886;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15002, %r523, %r14883, %r14999;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15006, %r526, %r14895;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15009, %r523, %r14892, %r15006;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15013, %r526, %r14904;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15016, %r523, %r14901, %r15013;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15020, %r526, %r14913;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15023, %r523, %r14910, %r15020;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15316, %r15319}, {%r566, %r572, %r569, %r575}, {%r14776, %r14918}, {%r3171, %r3171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15322, %r15325}, {%r566, %r572, %r569, %r575}, {%r14785, %r14925}, {%r3171, %r3171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15328, %r15331}, {%r566, %r572, %r569, %r575}, {%r14794, %r14932}, {%r3171, %r3171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15334, %r15337}, {%r566, %r572, %r569, %r575}, {%r14803, %r14939}, {%r3171, %r3171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15340, %r15343}, {%r566, %r572, %r569, %r575}, {%r14812, %r14946}, {%r3171, %r3171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15346, %r15349}, {%r566, %r572, %r569, %r575}, {%r14821, %r14953}, {%r3171, %r3171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15352, %r15355}, {%r566, %r572, %r569, %r575}, {%r14830, %r14960}, {%r3171, %r3171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15358, %r15361}, {%r566, %r572, %r569, %r575}, {%r14839, %r14967}, {%r3171, %r3171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15317, %r15320}, {%r566, %r572, %r569, %r575}, {%r14848, %r14974}, {%r3171, %r3171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15323, %r15326}, {%r566, %r572, %r569, %r575}, {%r14857, %r14981}, {%r3171, %r3171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15329, %r15332}, {%r566, %r572, %r569, %r575}, {%r14866, %r14988}, {%r3171, %r3171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15335, %r15338}, {%r566, %r572, %r569, %r575}, {%r14875, %r14995}, {%r3171, %r3171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15341, %r15344}, {%r566, %r572, %r569, %r575}, {%r14884, %r15002}, {%r3171, %r3171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15347, %r15350}, {%r566, %r572, %r569, %r575}, {%r14893, %r15009}, {%r3171, %r3171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15353, %r15356}, {%r566, %r572, %r569, %r575}, {%r14902, %r15016}, {%r3171, %r3171};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15359, %r15362}, {%r566, %r572, %r569, %r575}, {%r14911, %r15023}, {%r3171, %r3171};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15315, %r15316, %r15317;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15318, %r15319, %r15320;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15321, %r15322, %r15323;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15324, %r15325, %r15326;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15327, %r15328, %r15329;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15330, %r15331, %r15332;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15333, %r15334, %r15335;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15336, %r15337, %r15338;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15339, %r15340, %r15341;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15342, %r15343, %r15344;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15345, %r15346, %r15347;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15348, %r15349, %r15350;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15351, %r15352, %r15353;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15354, %r15355, %r15356;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15357, %r15358, %r15359;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15360, %r15361, %r15362;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15363, %r15316, %r15317;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15366, %r15319, %r15320;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15369, %r15322, %r15323;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15372, %r15325, %r15326;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15375, %r15328, %r15329;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15378, %r15331, %r15332;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15381, %r15334, %r15335;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15384, %r15337, %r15338;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15387, %r15340, %r15341;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15390, %r15343, %r15344;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15393, %r15346, %r15347;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15396, %r15349, %r15350;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15399, %r15352, %r15353;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15402, %r15355, %r15356;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15405, %r15358, %r15359;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15408, %r15361, %r15362;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15411, %r190, %r15315;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15414, %r190, %r15318;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15417, %r190, %r15321;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15420, %r190, %r15324;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15423, %r190, %r15327;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15426, %r190, %r15330;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15429, %r190, %r15333;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15432, %r190, %r15336;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15435, %r190, %r15339;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15438, %r190, %r15342;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15441, %r190, %r15345;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15444, %r190, %r15348;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15447, %r190, %r15351;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15450, %r190, %r15354;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15453, %r190, %r15357;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15456, %r190, %r15360;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15459, %r191, %r15363;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15462, %r191, %r15366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15465, %r191, %r15369;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15468, %r191, %r15372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15471, %r191, %r15375;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15474, %r191, %r15378;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15477, %r191, %r15381;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15480, %r191, %r15384;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15483, %r191, %r15387;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15486, %r191, %r15390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15489, %r191, %r15393;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15492, %r191, %r15396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15495, %r191, %r15399;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15498, %r191, %r15402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15501, %r191, %r15405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15504, %r191, %r15408;
	// end inline asm
	// begin inline asm
	mov.b32 %r15507, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15508, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15509, %r15411, %r15507;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15512, %r15509, %r15508;
	// end inline asm
	// begin inline asm
	mov.b32 %r15515, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15516, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15517, %r15414, %r15515;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15520, %r15517, %r15516;
	// end inline asm
	// begin inline asm
	mov.b32 %r15523, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15524, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15525, %r15417, %r15523;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15528, %r15525, %r15524;
	// end inline asm
	// begin inline asm
	mov.b32 %r15531, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15532, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15533, %r15420, %r15531;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15536, %r15533, %r15532;
	// end inline asm
	// begin inline asm
	mov.b32 %r15539, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15540, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15541, %r15423, %r15539;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15544, %r15541, %r15540;
	// end inline asm
	// begin inline asm
	mov.b32 %r15547, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15548, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15549, %r15426, %r15547;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15552, %r15549, %r15548;
	// end inline asm
	// begin inline asm
	mov.b32 %r15555, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15556, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15557, %r15429, %r15555;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15560, %r15557, %r15556;
	// end inline asm
	// begin inline asm
	mov.b32 %r15563, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15564, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15565, %r15432, %r15563;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15568, %r15565, %r15564;
	// end inline asm
	// begin inline asm
	mov.b32 %r15571, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15572, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15573, %r15435, %r15571;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15576, %r15573, %r15572;
	// end inline asm
	// begin inline asm
	mov.b32 %r15579, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15580, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15581, %r15438, %r15579;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15584, %r15581, %r15580;
	// end inline asm
	// begin inline asm
	mov.b32 %r15587, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15588, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15589, %r15441, %r15587;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15592, %r15589, %r15588;
	// end inline asm
	// begin inline asm
	mov.b32 %r15595, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15596, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15597, %r15444, %r15595;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15600, %r15597, %r15596;
	// end inline asm
	// begin inline asm
	mov.b32 %r15603, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15604, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15605, %r15447, %r15603;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15608, %r15605, %r15604;
	// end inline asm
	// begin inline asm
	mov.b32 %r15611, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15612, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15613, %r15450, %r15611;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15616, %r15613, %r15612;
	// end inline asm
	// begin inline asm
	mov.b32 %r15619, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15620, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15621, %r15453, %r15619;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15624, %r15621, %r15620;
	// end inline asm
	// begin inline asm
	mov.b32 %r15627, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15628, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15629, %r15456, %r15627;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15632, %r15629, %r15628;
	// end inline asm
	// begin inline asm
	mov.b32 %r15635, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15636, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15637, %r15459, %r15635;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15640, %r15637, %r15636;
	// end inline asm
	// begin inline asm
	mov.b32 %r15643, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15644, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15645, %r15462, %r15643;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15648, %r15645, %r15644;
	// end inline asm
	// begin inline asm
	mov.b32 %r15651, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15652, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15653, %r15465, %r15651;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15656, %r15653, %r15652;
	// end inline asm
	// begin inline asm
	mov.b32 %r15659, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15660, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15661, %r15468, %r15659;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15664, %r15661, %r15660;
	// end inline asm
	// begin inline asm
	mov.b32 %r15667, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15668, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15669, %r15471, %r15667;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15672, %r15669, %r15668;
	// end inline asm
	// begin inline asm
	mov.b32 %r15675, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15676, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15677, %r15474, %r15675;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15680, %r15677, %r15676;
	// end inline asm
	// begin inline asm
	mov.b32 %r15683, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15684, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15685, %r15477, %r15683;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15688, %r15685, %r15684;
	// end inline asm
	// begin inline asm
	mov.b32 %r15691, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15692, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15693, %r15480, %r15691;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15696, %r15693, %r15692;
	// end inline asm
	// begin inline asm
	mov.b32 %r15699, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15700, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15701, %r15483, %r15699;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15704, %r15701, %r15700;
	// end inline asm
	// begin inline asm
	mov.b32 %r15707, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15708, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15709, %r15486, %r15707;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15712, %r15709, %r15708;
	// end inline asm
	// begin inline asm
	mov.b32 %r15715, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15716, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15717, %r15489, %r15715;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15720, %r15717, %r15716;
	// end inline asm
	// begin inline asm
	mov.b32 %r15723, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15724, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15725, %r15492, %r15723;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15728, %r15725, %r15724;
	// end inline asm
	// begin inline asm
	mov.b32 %r15731, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15732, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15733, %r15495, %r15731;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15736, %r15733, %r15732;
	// end inline asm
	// begin inline asm
	mov.b32 %r15739, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15740, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15741, %r15498, %r15739;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15744, %r15741, %r15740;
	// end inline asm
	// begin inline asm
	mov.b32 %r15747, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15748, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15749, %r15501, %r15747;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15752, %r15749, %r15748;
	// end inline asm
	// begin inline asm
	mov.b32 %r15755, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15756, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15757, %r15504, %r15755;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15760, %r15757, %r15756;
	// end inline asm
	// begin inline asm
	mov.b32 %r15766, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r15764, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15765, %r15766, %r15764;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15768, %r15512, %r15765;
	// end inline asm
	// begin inline asm
	mov.b32 %r15771, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15772, %r15766, %r15771;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15775, %r15520, %r15772;
	// end inline asm
	// begin inline asm
	mov.b32 %r15778, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15779, %r15766, %r15778;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15782, %r15528, %r15779;
	// end inline asm
	// begin inline asm
	mov.b32 %r15785, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15786, %r15766, %r15785;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15789, %r15536, %r15786;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15792, %r15768, %r15782, %r4347;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15796, %r15775, %r15789, %r4347;
	// end inline asm
	shl.b32 	%r15803, %r15796, 4;
	// begin inline asm
	lop3.b32 %r15800, %r4353, %r15792, %r15803, 202;
	// end inline asm
	xor.b32  	%r16123, %r15800, -2004318072;
	// begin inline asm
	mov.b32 %r15807, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r15805, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15806, %r15807, %r15805;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15809, %r15544, %r15806;
	// end inline asm
	// begin inline asm
	mov.b32 %r15812, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15813, %r15807, %r15812;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15816, %r15552, %r15813;
	// end inline asm
	// begin inline asm
	mov.b32 %r15819, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15820, %r15807, %r15819;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15823, %r15560, %r15820;
	// end inline asm
	// begin inline asm
	mov.b32 %r15826, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15827, %r15807, %r15826;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15830, %r15568, %r15827;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15833, %r15809, %r15823, %r4347;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15837, %r15816, %r15830, %r4347;
	// end inline asm
	shl.b32 	%r15844, %r15837, 4;
	// begin inline asm
	lop3.b32 %r15841, %r4353, %r15833, %r15844, 202;
	// end inline asm
	xor.b32  	%r16124, %r15841, -2004318072;
	// begin inline asm
	mov.b32 %r15848, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r15846, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15847, %r15848, %r15846;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15850, %r15576, %r15847;
	// end inline asm
	// begin inline asm
	mov.b32 %r15853, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15854, %r15848, %r15853;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15857, %r15584, %r15854;
	// end inline asm
	// begin inline asm
	mov.b32 %r15860, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15861, %r15848, %r15860;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15864, %r15592, %r15861;
	// end inline asm
	// begin inline asm
	mov.b32 %r15867, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15868, %r15848, %r15867;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15871, %r15600, %r15868;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15874, %r15850, %r15864, %r4347;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15878, %r15857, %r15871, %r4347;
	// end inline asm
	shl.b32 	%r15885, %r15878, 4;
	// begin inline asm
	lop3.b32 %r15882, %r4353, %r15874, %r15885, 202;
	// end inline asm
	xor.b32  	%r16125, %r15882, -2004318072;
	// begin inline asm
	mov.b32 %r15889, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r15887, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15888, %r15889, %r15887;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15891, %r15608, %r15888;
	// end inline asm
	// begin inline asm
	mov.b32 %r15894, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15895, %r15889, %r15894;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15898, %r15616, %r15895;
	// end inline asm
	// begin inline asm
	mov.b32 %r15901, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15902, %r15889, %r15901;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15905, %r15624, %r15902;
	// end inline asm
	// begin inline asm
	mov.b32 %r15908, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15909, %r15889, %r15908;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15912, %r15632, %r15909;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15915, %r15891, %r15905, %r4347;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15919, %r15898, %r15912, %r4347;
	// end inline asm
	shl.b32 	%r15926, %r15919, 4;
	// begin inline asm
	lop3.b32 %r15923, %r4353, %r15915, %r15926, 202;
	// end inline asm
	xor.b32  	%r16126, %r15923, -2004318072;
	// begin inline asm
	mov.b32 %r15930, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r15928, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15929, %r15930, %r15928;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15932, %r15640, %r15929;
	// end inline asm
	// begin inline asm
	mov.b32 %r15935, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15936, %r15930, %r15935;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15939, %r15648, %r15936;
	// end inline asm
	// begin inline asm
	mov.b32 %r15942, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15943, %r15930, %r15942;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15946, %r15656, %r15943;
	// end inline asm
	// begin inline asm
	mov.b32 %r15949, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15950, %r15930, %r15949;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15953, %r15664, %r15950;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15956, %r15932, %r15946, %r4347;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15960, %r15939, %r15953, %r4347;
	// end inline asm
	shl.b32 	%r15967, %r15960, 4;
	// begin inline asm
	lop3.b32 %r15964, %r4353, %r15956, %r15967, 202;
	// end inline asm
	xor.b32  	%r16127, %r15964, -2004318072;
	// begin inline asm
	mov.b32 %r15971, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r15969, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15970, %r15971, %r15969;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15973, %r15672, %r15970;
	// end inline asm
	// begin inline asm
	mov.b32 %r15976, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15977, %r15971, %r15976;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15980, %r15680, %r15977;
	// end inline asm
	// begin inline asm
	mov.b32 %r15983, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15984, %r15971, %r15983;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15987, %r15688, %r15984;
	// end inline asm
	// begin inline asm
	mov.b32 %r15990, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15991, %r15971, %r15990;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15994, %r15696, %r15991;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15997, %r15973, %r15987, %r4347;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16001, %r15980, %r15994, %r4347;
	// end inline asm
	shl.b32 	%r16008, %r16001, 4;
	// begin inline asm
	lop3.b32 %r16005, %r4353, %r15997, %r16008, 202;
	// end inline asm
	xor.b32  	%r16128, %r16005, -2004318072;
	// begin inline asm
	mov.b32 %r16012, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r16010, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16011, %r16012, %r16010;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16014, %r15704, %r16011;
	// end inline asm
	// begin inline asm
	mov.b32 %r16017, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16018, %r16012, %r16017;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16021, %r15712, %r16018;
	// end inline asm
	// begin inline asm
	mov.b32 %r16024, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16025, %r16012, %r16024;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16028, %r15720, %r16025;
	// end inline asm
	// begin inline asm
	mov.b32 %r16031, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16032, %r16012, %r16031;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16035, %r15728, %r16032;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16038, %r16014, %r16028, %r4347;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16042, %r16021, %r16035, %r4347;
	// end inline asm
	shl.b32 	%r16049, %r16042, 4;
	// begin inline asm
	lop3.b32 %r16046, %r4353, %r16038, %r16049, 202;
	// end inline asm
	xor.b32  	%r16129, %r16046, -2004318072;
	// begin inline asm
	mov.b32 %r16053, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r16051, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16052, %r16053, %r16051;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16055, %r15736, %r16052;
	// end inline asm
	// begin inline asm
	mov.b32 %r16058, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16059, %r16053, %r16058;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16062, %r15744, %r16059;
	// end inline asm
	// begin inline asm
	mov.b32 %r16065, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16066, %r16053, %r16065;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16069, %r15752, %r16066;
	// end inline asm
	// begin inline asm
	mov.b32 %r16072, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16073, %r16053, %r16072;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16076, %r15760, %r16073;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16079, %r16055, %r16069, %r4347;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16083, %r16062, %r16076, %r4347;
	// end inline asm
	shl.b32 	%r16090, %r16083, 4;
	// begin inline asm
	lop3.b32 %r16087, %r4353, %r16079, %r16090, 202;
	// end inline asm
	xor.b32  	%r16130, %r16087, -2004318072;
	st.shared.u32 	[%rd131], %r16123;
	st.shared.u32 	[%rd132], %r16124;
	st.shared.u32 	[%rd133], %r16125;
	st.shared.u32 	[%rd134], %r16126;
	st.shared.u32 	[%rd135], %r16127;
	st.shared.u32 	[%rd136], %r16128;
	st.shared.u32 	[%rd137], %r16129;
	st.shared.u32 	[%rd138], %r16130;
	add.s32 	%r16206, %r16206, -128;
	add.s64 	%rd145, %rd145, 16644;
	setp.eq.s32 	%p327, %r16206, 0;
	@%p327 bra 	LBB0_184;
	bra.uni 	LBB0_183;
LBB0_184:                               // %guard_pass23002
                                        //   in Loop: Header=BB0_182 Depth=1
	bar.sync 	0;
	ld.shared.u32 	%r16136, [%rd15];
	ld.shared.u32 	%r16137, [%rd16+128];
	ld.shared.u32 	%r16144, [%rd16+4];
	ld.shared.u32 	%r16145, [%rd16+132];
	ld.shared.u32 	%r16152, [%rd17];
	ld.shared.u32 	%r16153, [%rd18+128];
	ld.shared.u32 	%r16160, [%rd18+4];
	ld.shared.u32 	%r16161, [%rd18+132];
	// begin inline asm
	prmt.b32 %r16131, %r16136, %r16137, %r805;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16135, %r16136, %r16137, %r809;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16139, %r16144, %r16145, %r805;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16143, %r16144, %r16145, %r809;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16147, %r16152, %r16153, %r805;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16151, %r16152, %r16153, %r809;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16155, %r16160, %r16161, %r805;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16159, %r16160, %r16161, %r809;
	// end inline asm
	selp.b32 	%r16163, %r16135, %r16131, %p326;
	shfl.sync.bfly.b32	%r16164, %r16163, 8, 31, -1;
	selp.b32 	%r16165, %r16143, %r16139, %p326;
	shfl.sync.bfly.b32	%r16166, %r16165, 8, 31, -1;
	selp.b32 	%r16167, %r16151, %r16147, %p326;
	shfl.sync.bfly.b32	%r16168, %r16167, 8, 31, -1;
	selp.b32 	%r16169, %r16159, %r16155, %p326;
	shfl.sync.bfly.b32	%r16170, %r16169, 8, 31, -1;
	mov.u32 	%r16256, %r131;
	mov.u64 	%rd146, %rd19;
	mov.f64 	%fd22, %fd5;
	@%p329 bra 	LBB0_194;
LBB0_185:                               //   Parent Loop BB0_182 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	sub.s64 	%rd139, %rd146, %rd20;
	mov.b64 	%fd18, %rd139;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r16171}, %fd18;
	}
	setp.lt.s32 	%p330, %r16171, 0;
	selp.b64 	%rd42, %rd146, %rd139, %p330;
	shl.b64 	%rd146, %rd42, 1;
	add.s32 	%r16256, %r16256, -1;
	setp.gt.s32 	%p331, %r16256, 0;
	@%p331 bra 	LBB0_185;
// %bb.186:                             //   in Loop: Header=BB0_182 Depth=1
	and.b64  	%rd44, %rd42, 9223372036854775807;
	setp.eq.s64 	%p332, %rd44, 0;
	mov.u64 	%rd147, 0;
	@%p332 bra 	LBB0_193;
// %bb.187:                             //   in Loop: Header=BB0_182 Depth=1
	mov.b64 	%fd19, %rd44;
	mul.f64 	%fd20, %fd19, 0d4350000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r16172}, %fd20;
	}
	shr.u32 	%r16173, %r16172, 20;
	mov.u32 	%r16174, 55;
	sub.s32 	%r16175, %r16174, %r16173;
	sub.s32 	%r229, %r130, %r16175;
	shl.b64 	%rd45, %rd44, %r16175;
	setp.gt.s32 	%p333, %r229, 0;
	@%p333 bra 	LBB0_192;
	bra.uni 	LBB0_188;
LBB0_192:                               //   in Loop: Header=BB0_182 Depth=1
	add.s32 	%r16176, %r229, -1;
	cvt.u64.u32 	%rd141, %r16176;
	shl.b64 	%rd142, %rd141, 52;
	add.s64 	%rd147, %rd142, %rd45;
	bra.uni 	LBB0_193;
LBB0_188:                               //   in Loop: Header=BB0_182 Depth=1
	sub.s32 	%r16178, %r243, %r229;
	shr.u64 	%rd147, %rd45, %r16178;
LBB0_193:                               //   in Loop: Header=BB0_182 Depth=1
	mov.b64 	%fd21, %rd147;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r16179, %temp}, %fd21;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r16180}, %fd21;
	}
	or.b32  	%r16181, %r16180, %r129;
	mov.b64 	%fd22, {%r16179, %r16181};
LBB0_194:                               // %__nv_fmod.exit
                                        //   in Loop: Header=BB0_182 Depth=1
	setp.ltu.f64 	%p334, %fd22, 0d4078000000000000;
	@%p334 bra 	LBB0_190;
// %bb.189:                             // %L63248
                                        //   in Loop: Header=BB0_182 Depth=1
	selp.b32 	%r230, %r16131, %r16164, %p326;
	selp.b32 	%r231, %r16164, %r16135, %p326;
	selp.b32 	%r232, %r16139, %r16166, %p326;
	selp.b32 	%r233, %r16166, %r16143, %p326;
	selp.b32 	%r234, %r16147, %r16168, %p326;
	selp.b32 	%r235, %r16168, %r16151, %p326;
	selp.b32 	%r236, %r16155, %r16170, %p326;
	selp.b32 	%r237, %r16170, %r16159, %p326;
	st.global.v4.u32 	[%rd21], {%r230, %r232, %r231, %r233};
	st.global.v4.u32 	[%rd22], {%r234, %r236, %r235, %r237};
	bra.uni 	LBB0_190;
LBB0_191:                               // %L63698
	st.global.u32 	[%rd4], %r16185;
	ret;
LBB0_7:                                 // %L259
	mov.u32 	%r16184, 2;
	st.global.u32 	[%rd4], %r16184;
	mov.u64 	%rd143, exception5097;
	cvta.global.u64 	%rd144, %rd143;
	{ // callseq 2, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd144;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 2
	{ // callseq 3, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd49;
	st.param.b32 	[param0+8], %r238;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 3
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
LBB0_1:                                 // %L8
	mov.u64 	%rd70, exception1;
	cvta.global.u64 	%rd71, %rd70;
	{ // callseq 0, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd71;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 0
	{ // callseq 1, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd49;
	st.param.b32 	[param0+8], %r238;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 1
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
                                        // -- End function
}
