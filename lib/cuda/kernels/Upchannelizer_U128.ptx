// PTX CompilerJob of MethodInstance for upchan(::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Float16x2, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int32, 1}) for sm_86, minthreads=512, blocks_per_sm=2

//
// Generated by LLVM NVPTX Back-End
//

.version 7.1
.target sm_86
.address_size 64

	// .globl	_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE // -- Begin function _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE
.func gpu_report_exception
(
	.param .b64 gpu_report_exception_param_0
)
.noreturn
{
	trap;
}
.func gpu_signal_exception
(
	.param .align 8 .b8 gpu_signal_exception_param_0[16]
)
.noreturn
{
	trap;
}
.extern .shared .align 32 .b8 shmem[];
.global .align 1 .b8 exception5095[6] = {101, 114, 114, 111, 114, 0};
.global .align 1 .b8 exception1[10] = {101, 120, 99, 101, 112, 116, 105, 111, 110, 0};
                                        // @_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE
.visible .entry _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE(
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_0[16],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_1[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_2[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_3[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_4[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_5[32]
)
.reqntid 512, 1, 1
.minnctapersm 2
{
	.reg .pred 	%p<309>;
	.reg .b16 	%rs<2390>;
	.reg .b32 	%r<16217>;
	.reg .f32 	%f<1404>;
	.reg .b64 	%rd<95>;

// %bb.0:                               // %conversion
	ld.param.u32 	%r237, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_0+8];
	ld.param.u64 	%rd35, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_0];
	// begin inline asm
	mov.u32 %r238, %dynamic_smem_size;
	// end inline asm
	setp.gt.u32 	%p1, %r238, 66815;
	@%p1 bra 	LBB0_2;
	bra.uni 	LBB0_1;
LBB0_2:                                 // %L10
	ld.param.u64 	%rd40, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_5];
	ld.param.u64 	%rd36, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_1];
	mov.u32 	%r1, %tid.x;
	mov.u32 	%r2, %tid.y;
	shl.b32 	%r3, %r2, 5;
	mov.u32 	%r4, %ctaid.x;
	shl.b32 	%r5, %r4, 9;
	or.b32  	%r239, %r3, %r1;
	or.b32  	%r240, %r239, %r5;
	mul.wide.u32 	%rd46, %r240, 4;
	add.s64 	%rd4, %rd40, %rd46;
	mov.u32 	%r241, 1;
	st.global.u32 	[%rd4], %r241;
	ld.global.u32 	%r6, [%rd36];
	setp.lt.u32 	%p2, %r6, 32769;
	and.b32  	%r242, %r6, 255;
	setp.eq.s32 	%p3, %r242, 0;
	and.pred  	%p4, %p2, %p3;
	@%p4 bra 	LBB0_4;
	bra.uni 	LBB0_3;
LBB0_4:                                 // %L256
	bfe.u32 	%r14, %r1, 1, 1;
	and.b32  	%r15, %r1, 1;
	bfe.u32 	%r17, %r1, 2, 1;
	shr.u32 	%r18, %r1, 4;
	shl.b32 	%r251, %r18, 2;
	shl.b32 	%r252, %r17, 3;
	shl.b32 	%r253, %r15, 4;
	shl.b32 	%r254, %r14, 5;
	or.b32  	%r255, %r253, %r254;
	or.b32  	%r256, %r252, %r255;
	or.b32  	%r257, %r251, %r256;
	bfe.u32 	%r20, %r1, 3, 1;
	shl.b32 	%r258, %r20, 1;
	or.b32  	%r21, %r258, %r257;
	or.b32  	%r22, %r21, 64;
	mov.f32 	%f255, 0f40000000;
	mov.f32 	%f256, 0f43FF8000;
	div.approx.f32 	%f1, %f256, %f255;
	cvt.rn.f32.s32 	%f257, %r21;
	sub.f32 	%f258, %f257, %f1;
	mov.f32 	%f287, 0f43000000;
	div.approx.f32 	%f3, %f258, %f287;
	setp.eq.f32 	%p10, %f3, 0f00000000;
	mov.f32 	%f1363, 0f3F800000;
	mov.f32 	%f1348, %f1363;
	@%p10 bra 	LBB0_6;
// %bb.5:                               // %L592
	sin.approx.f32 	%f288, %f3;
	div.approx.f32 	%f1348, %f288, %f3;
LBB0_6:                                 // %L595
	cvt.rn.f32.s32 	%f291, %r22;
	sub.f32 	%f292, %f291, %f1;
	div.approx.f32 	%f8, %f292, %f287;
	setp.eq.f32 	%p16, %f8, 0f00000000;
	mov.f32 	%f1349, %f1363;
	@%p16 bra 	LBB0_8;
// %bb.7:                               // %L612
	sin.approx.f32 	%f322, %f8;
	div.approx.f32 	%f1349, %f322, %f8;
LBB0_8:                                 // %L615
	or.b32  	%r276, %r21, 1;
	or.b32  	%r24, %r21, 65;
	cvt.rn.f32.s32 	%f326, %r276;
	sub.f32 	%f327, %f326, %f1;
	div.approx.f32 	%f12, %f327, %f287;
	setp.eq.f32 	%p22, %f12, 0f00000000;
	mov.f32 	%f1350, %f1363;
	@%p22 bra 	LBB0_10;
// %bb.9:                               // %L694
	sin.approx.f32 	%f357, %f12;
	div.approx.f32 	%f1350, %f357, %f12;
LBB0_10:                                // %L697
	cvt.rn.f32.s32 	%f360, %r24;
	sub.f32 	%f361, %f360, %f1;
	div.approx.f32 	%f17, %f361, %f287;
	setp.eq.f32 	%p28, %f17, 0f00000000;
	mov.f32 	%f1351, %f1363;
	@%p28 bra 	LBB0_12;
// %bb.11:                              // %L714
	sin.approx.f32 	%f391, %f17;
	div.approx.f32 	%f1351, %f391, %f17;
LBB0_12:                                // %L717
	or.b32  	%r294, %r21, 128;
	or.b32  	%r26, %r21, 192;
	cvt.rn.f32.s32 	%f395, %r294;
	sub.f32 	%f396, %f395, %f1;
	div.approx.f32 	%f21, %f396, %f287;
	setp.eq.f32 	%p34, %f21, 0f00000000;
	mov.f32 	%f1352, %f1363;
	@%p34 bra 	LBB0_14;
// %bb.13:                              // %L796
	sin.approx.f32 	%f426, %f21;
	div.approx.f32 	%f1352, %f426, %f21;
LBB0_14:                                // %L799
	cvt.rn.f32.s32 	%f429, %r26;
	sub.f32 	%f430, %f429, %f1;
	div.approx.f32 	%f26, %f430, %f287;
	setp.eq.f32 	%p40, %f26, 0f00000000;
	mov.f32 	%f1353, %f1363;
	@%p40 bra 	LBB0_16;
// %bb.15:                              // %L816
	sin.approx.f32 	%f460, %f26;
	div.approx.f32 	%f1353, %f460, %f26;
LBB0_16:                                // %L819
	or.b32  	%r312, %r21, 129;
	or.b32  	%r28, %r21, 193;
	cvt.rn.f32.s32 	%f464, %r312;
	sub.f32 	%f465, %f464, %f1;
	div.approx.f32 	%f30, %f465, %f287;
	setp.eq.f32 	%p46, %f30, 0f00000000;
	mov.f32 	%f1354, %f1363;
	@%p46 bra 	LBB0_18;
// %bb.17:                              // %L898
	sin.approx.f32 	%f495, %f30;
	div.approx.f32 	%f1354, %f495, %f30;
LBB0_18:                                // %L901
	cvt.rn.f32.s32 	%f498, %r28;
	sub.f32 	%f499, %f498, %f1;
	div.approx.f32 	%f35, %f499, %f287;
	setp.eq.f32 	%p52, %f35, 0f00000000;
	mov.f32 	%f1355, %f1363;
	@%p52 bra 	LBB0_20;
// %bb.19:                              // %L918
	sin.approx.f32 	%f529, %f35;
	div.approx.f32 	%f1355, %f529, %f35;
LBB0_20:                                // %L921
	or.b32  	%r330, %r21, 256;
	or.b32  	%r30, %r21, 320;
	cvt.rn.f32.s32 	%f533, %r330;
	sub.f32 	%f534, %f533, %f1;
	div.approx.f32 	%f39, %f534, %f287;
	setp.eq.f32 	%p58, %f39, 0f00000000;
	mov.f32 	%f1356, %f1363;
	@%p58 bra 	LBB0_22;
// %bb.21:                              // %L1000
	sin.approx.f32 	%f564, %f39;
	div.approx.f32 	%f1356, %f564, %f39;
LBB0_22:                                // %L1003
	mov.f32 	%f259, 0f44004000;
	cvt.rn.f32.s32 	%f567, %r30;
	sub.f32 	%f568, %f567, %f1;
	div.approx.f32 	%f44, %f568, %f287;
	setp.eq.f32 	%p64, %f44, 0f00000000;
	mov.f32 	%f1357, %f1363;
	@%p64 bra 	LBB0_24;
// %bb.23:                              // %L1020
	sin.approx.f32 	%f598, %f44;
	div.approx.f32 	%f1357, %f598, %f44;
LBB0_24:                                // %L1023
	div.approx.f32 	%f260, %f258, %f259;
	div.approx.f32 	%f294, %f292, %f259;
	div.approx.f32 	%f329, %f327, %f259;
	div.approx.f32 	%f363, %f361, %f259;
	div.approx.f32 	%f398, %f396, %f259;
	div.approx.f32 	%f432, %f430, %f259;
	div.approx.f32 	%f467, %f465, %f259;
	div.approx.f32 	%f501, %f499, %f259;
	div.approx.f32 	%f536, %f534, %f259;
	div.approx.f32 	%f570, %f568, %f259;
	or.b32  	%r348, %r21, 257;
	or.b32  	%r32, %r21, 321;
	cvt.rn.f32.s32 	%f602, %r348;
	sub.f32 	%f603, %f602, %f1;
	div.approx.f32 	%f605, %f603, %f259;
	div.approx.f32 	%f48, %f603, %f287;
	setp.eq.f32 	%p70, %f48, 0f00000000;
	mov.f32 	%f1358, %f1363;
	@%p70 bra 	LBB0_26;
// %bb.25:                              // %L1102
	sin.approx.f32 	%f633, %f48;
	div.approx.f32 	%f1358, %f633, %f48;
LBB0_26:                                // %L1105
	abs.f32 	%f261, %f260;
	abs.f32 	%f295, %f294;
	abs.f32 	%f330, %f329;
	abs.f32 	%f364, %f363;
	abs.f32 	%f399, %f398;
	abs.f32 	%f433, %f432;
	abs.f32 	%f468, %f467;
	abs.f32 	%f502, %f501;
	abs.f32 	%f537, %f536;
	abs.f32 	%f571, %f570;
	abs.f32 	%f606, %f605;
	cvt.rn.f32.s32 	%f636, %r32;
	sub.f32 	%f637, %f636, %f1;
	div.approx.f32 	%f639, %f637, %f259;
	abs.f32 	%f640, %f639;
	div.approx.f32 	%f53, %f637, %f287;
	setp.eq.f32 	%p76, %f53, 0f00000000;
	mov.f32 	%f1359, %f1363;
	@%p76 bra 	LBB0_28;
// %bb.27:                              // %L1122
	sin.approx.f32 	%f667, %f53;
	div.approx.f32 	%f1359, %f667, %f53;
LBB0_28:                                // %L1125
	setp.gt.f32 	%p5, %f261, 0f4B800000;
	mul.f32 	%f262, %f260, 0f00000000;
	setp.gt.f32 	%p11, %f295, 0f4B800000;
	mul.f32 	%f296, %f294, 0f00000000;
	setp.gt.f32 	%p17, %f330, 0f4B800000;
	mul.f32 	%f331, %f329, 0f00000000;
	setp.gt.f32 	%p23, %f364, 0f4B800000;
	mul.f32 	%f365, %f363, 0f00000000;
	setp.gt.f32 	%p29, %f399, 0f4B800000;
	mul.f32 	%f400, %f398, 0f00000000;
	setp.gt.f32 	%p35, %f433, 0f4B800000;
	mul.f32 	%f434, %f432, 0f00000000;
	setp.gt.f32 	%p41, %f468, 0f4B800000;
	mul.f32 	%f469, %f467, 0f00000000;
	setp.gt.f32 	%p47, %f502, 0f4B800000;
	mul.f32 	%f503, %f501, 0f00000000;
	setp.gt.f32 	%p53, %f537, 0f4B800000;
	mul.f32 	%f538, %f536, 0f00000000;
	setp.gt.f32 	%p59, %f571, 0f4B800000;
	mul.f32 	%f572, %f570, 0f00000000;
	setp.gt.f32 	%p65, %f606, 0f4B800000;
	mul.f32 	%f607, %f605, 0f00000000;
	setp.gt.f32 	%p71, %f640, 0f4B800000;
	mul.f32 	%f641, %f639, 0f00000000;
	or.b32  	%r366, %r21, 384;
	or.b32  	%r34, %r21, 448;
	cvt.rn.f32.s32 	%f671, %r366;
	sub.f32 	%f672, %f671, %f1;
	div.approx.f32 	%f674, %f672, %f259;
	abs.f32 	%f675, %f674;
	setp.gt.f32 	%p77, %f675, 0f4B800000;
	mul.f32 	%f676, %f674, 0f00000000;
	div.approx.f32 	%f57, %f672, %f287;
	setp.eq.f32 	%p82, %f57, 0f00000000;
	mov.f32 	%f1360, %f1363;
	@%p82 bra 	LBB0_30;
// %bb.29:                              // %L1204
	sin.approx.f32 	%f702, %f57;
	div.approx.f32 	%f1360, %f702, %f57;
LBB0_30:                                // %L1207
	selp.f32 	%f263, %f262, %f260, %p5;
	selp.f32 	%f297, %f296, %f294, %p11;
	selp.f32 	%f332, %f331, %f329, %p17;
	selp.f32 	%f366, %f365, %f363, %p23;
	selp.f32 	%f401, %f400, %f398, %p29;
	selp.f32 	%f435, %f434, %f432, %p35;
	selp.f32 	%f470, %f469, %f467, %p41;
	selp.f32 	%f504, %f503, %f501, %p47;
	selp.f32 	%f539, %f538, %f536, %p53;
	selp.f32 	%f573, %f572, %f570, %p59;
	selp.f32 	%f608, %f607, %f605, %p65;
	selp.f32 	%f642, %f641, %f639, %p71;
	selp.f32 	%f677, %f676, %f674, %p77;
	cvt.rn.f32.s32 	%f705, %r34;
	sub.f32 	%f706, %f705, %f1;
	div.approx.f32 	%f708, %f706, %f259;
	abs.f32 	%f709, %f708;
	setp.gt.f32 	%p83, %f709, 0f4B800000;
	mul.f32 	%f710, %f708, 0f00000000;
	selp.f32 	%f711, %f710, %f708, %p83;
	div.approx.f32 	%f62, %f706, %f287;
	setp.eq.f32 	%p88, %f62, 0f00000000;
	mov.f32 	%f1361, %f1363;
	@%p88 bra 	LBB0_32;
// %bb.31:                              // %L1224
	sin.approx.f32 	%f736, %f62;
	div.approx.f32 	%f1361, %f736, %f62;
LBB0_32:                                // %L1227
	add.f32 	%f264, %f263, %f263;
	add.f32 	%f298, %f297, %f297;
	add.f32 	%f333, %f332, %f332;
	add.f32 	%f367, %f366, %f366;
	add.f32 	%f402, %f401, %f401;
	add.f32 	%f436, %f435, %f435;
	add.f32 	%f471, %f470, %f470;
	add.f32 	%f505, %f504, %f504;
	add.f32 	%f540, %f539, %f539;
	add.f32 	%f574, %f573, %f573;
	add.f32 	%f609, %f608, %f608;
	add.f32 	%f643, %f642, %f642;
	add.f32 	%f678, %f677, %f677;
	add.f32 	%f712, %f711, %f711;
	or.b32  	%r384, %r21, 385;
	or.b32  	%r36, %r21, 449;
	cvt.rn.f32.s32 	%f740, %r384;
	sub.f32 	%f741, %f740, %f1;
	div.approx.f32 	%f743, %f741, %f259;
	abs.f32 	%f744, %f743;
	setp.gt.f32 	%p89, %f744, 0f4B800000;
	mul.f32 	%f745, %f743, 0f00000000;
	selp.f32 	%f746, %f745, %f743, %p89;
	add.f32 	%f747, %f746, %f746;
	div.approx.f32 	%f66, %f741, %f287;
	setp.eq.f32 	%p94, %f66, 0f00000000;
	mov.f32 	%f1362, %f1363;
	@%p94 bra 	LBB0_34;
// %bb.33:                              // %L1306
	sin.approx.f32 	%f771, %f66;
	div.approx.f32 	%f1362, %f771, %f66;
LBB0_34:                                // %L1309
	mov.b32 	%r259, %f264;
	mov.b32 	%r266, %f298;
	mov.b32 	%r277, %f333;
	mov.b32 	%r284, %f367;
	mov.b32 	%r295, %f402;
	mov.b32 	%r302, %f436;
	mov.b32 	%r313, %f471;
	mov.b32 	%r320, %f505;
	mov.b32 	%r331, %f540;
	mov.b32 	%r338, %f574;
	mov.b32 	%r349, %f609;
	mov.b32 	%r356, %f643;
	mov.b32 	%r367, %f678;
	mov.b32 	%r374, %f712;
	mov.b32 	%r385, %f747;
	cvt.rn.f32.s32 	%f774, %r36;
	sub.f32 	%f775, %f774, %f1;
	div.approx.f32 	%f777, %f775, %f259;
	abs.f32 	%f778, %f777;
	setp.gt.f32 	%p95, %f778, 0f4B800000;
	mul.f32 	%f779, %f777, 0f00000000;
	selp.f32 	%f780, %f779, %f777, %p95;
	add.f32 	%f781, %f780, %f780;
	mov.b32 	%r392, %f781;
	div.approx.f32 	%f71, %f775, %f287;
	setp.eq.f32 	%p100, %f71, 0f00000000;
	@%p100 bra 	LBB0_36;
// %bb.35:                              // %L1326
	sin.approx.f32 	%f805, %f71;
	div.approx.f32 	%f1363, %f805, %f71;
LBB0_36:                                // %L1329
	and.b32  	%r260, %r259, -2147483648;
	and.b32  	%r267, %r266, -2147483648;
	and.b32  	%r278, %r277, -2147483648;
	and.b32  	%r285, %r284, -2147483648;
	and.b32  	%r296, %r295, -2147483648;
	and.b32  	%r303, %r302, -2147483648;
	and.b32  	%r314, %r313, -2147483648;
	and.b32  	%r321, %r320, -2147483648;
	and.b32  	%r332, %r331, -2147483648;
	and.b32  	%r339, %r338, -2147483648;
	and.b32  	%r350, %r349, -2147483648;
	and.b32  	%r357, %r356, -2147483648;
	and.b32  	%r368, %r367, -2147483648;
	and.b32  	%r375, %r374, -2147483648;
	and.b32  	%r386, %r385, -2147483648;
	and.b32  	%r393, %r392, -2147483648;
	mul.lo.s32 	%r38, %r21, 127;
	cvt.rn.f32.s32 	%f808, %r38;
	div.approx.f32 	%f74, %f808, %f287;
	abs.f32 	%f1366, %f74;
	setp.lt.f32 	%p101, %f1366, 0f40000000;
	@%p101 bra 	LBB0_48;
// %bb.37:
	setp.gtu.f32 	%p102, %f1366, 0f4B800000;
	@%p102 bra 	LBB0_44;
	bra.uni 	LBB0_38;
LBB0_44:
	mov.b32 	%r40, %f1366;
	and.b32  	%r402, %r40, 8388607;
	or.b32  	%r16147, %r402, 1065353216;
	mov.b32 	%f1365, %r16147;
	add.s32 	%r403, %r40, -1073741824;
	and.b32  	%r16148, %r403, -8388608;
	setp.eq.s32 	%p108, %r16148, 0;
	@%p108 bra 	LBB0_47;
// %bb.45:                              // %__nv_fmaf_rn.exit4.i.i.i.preheader
	mov.f32 	%f819, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f818,%f819;
	// end inline asm
LBB0_46:                                // %__nv_fmaf_rn.exit4.i.i.i
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r404, %r16148, 192937984;
	add.s32 	%r405, %r404, %r16147;
	mov.b32 	%f820, %r405;
	mul.f32 	%f821, %f818, %f820;
	sub.f32 	%f822, %f820, %f821;
	fma.rn.f32 	%f823, %f822, %f818, %f821;
	sub.f32 	%f824, %f820, %f823;
	fma.rz.f32 	%f825, %f824, %f818, %f823;
	cvt.rzi.f32.f32 	%f826, %f825;
	sub.f32 	%f1365, %f820, %f826;
	sub.s32 	%r16148, %r16148, %r404;
	mov.b32 	%r16147, %f1365;
	setp.ne.s32 	%p109, %r16148, 0;
	setp.ne.s32 	%p110, %r16147, 0;
	and.pred  	%p111, %p109, %p110;
	@%p111 bra 	LBB0_46;
LBB0_47:                                // %__internal_fmodf_slowpath_mod.exit.i.i
	setp.gt.u32 	%p112, %r40, 2139095039;
	selp.f32 	%f827, 0f7FFFFFFF, 0f4B800000, %p112;
	mul.f32 	%f828, %f1365, 0f34000000;
	mul.f32 	%f1366, %f827, %f828;
	bra.uni 	LBB0_48;
LBB0_38:                                // %__nv_fast_fdividef.exit.i.i.i
	div.approx.f32 	%f811, %f1366, %f255;
	cvt.rzi.f32.f32 	%f1364, %f811;
	fma.rn.f32 	%f77, %f1364, 0fC0000000, %f1366;
	mov.b32 	%r39, %f77;
	setp.lt.u32 	%p103, %r39, 1073741824;
	@%p103 bra 	LBB0_43;
// %bb.39:
	setp.lt.u32 	%p104, %r39, -2147483647;
	@%p104 bra 	LBB0_41;
// %bb.40:
	add.f32 	%f816, %f1364, 0fBF800000;
	setp.lt.f32 	%p107, %f77, 0fC0000000;
	add.f32 	%f817, %f816, 0fBF800000;
	selp.f32 	%f1364, %f817, %f816, %p107;
	bra.uni 	LBB0_43;
LBB0_41:
	add.f32 	%f1364, %f1364, 0f3F800000;
	setp.ltu.f32 	%p105, %f77, 0f40800000;
	@%p105 bra 	LBB0_43;
// %bb.42:                              // %__nv_fmaf_rn.exit.i.i.i
	add.f32 	%f812, %f1364, 0f3F800000;
	fma.rn.f32 	%f814, %f255, 0fC0400000, %f77;
	setp.ge.f32 	%p106, %f814, 0f00000000;
	add.f32 	%f815, %f812, 0f3F800000;
	selp.f32 	%f1364, %f815, %f812, %p106;
LBB0_43:                                // %__internal_fmodf_fastpath_quot.exit.i.i
	fma.rn.f32 	%f1366, %f1364, 0fC0000000, %f1366;
LBB0_48:                                // %__internal_fmodf_kernel.exit.i
	or.b32  	%r261, %r260, 1056964608;
	or.b32  	%r268, %r267, 1056964608;
	or.b32  	%r279, %r278, 1056964608;
	or.b32  	%r286, %r285, 1056964608;
	or.b32  	%r297, %r296, 1056964608;
	or.b32  	%r304, %r303, 1056964608;
	or.b32  	%r315, %r314, 1056964608;
	or.b32  	%r322, %r321, 1056964608;
	or.b32  	%r333, %r332, 1056964608;
	or.b32  	%r340, %r339, 1056964608;
	or.b32  	%r351, %r350, 1056964608;
	or.b32  	%r358, %r357, 1056964608;
	or.b32  	%r369, %r368, 1056964608;
	or.b32  	%r376, %r375, 1056964608;
	or.b32  	%r387, %r386, 1056964608;
	or.b32  	%r394, %r393, 1056964608;
	abs.f32 	%f829, %f1366;
	setp.gtu.f32 	%p113, %f829, 0f7F800000;
	@%p113 bra 	LBB0_50;
// %bb.49:
	mov.b32 	%r406, %f74;
	and.b32  	%r407, %r406, -2147483648;
	mov.b32 	%r408, %f1366;
	or.b32  	%r409, %r407, %r408;
	mov.b32 	%f1366, %r409;
LBB0_50:                                // %__nv_fmodf.exit
	mov.b32 	%f265, %r261;
	mov.b32 	%f299, %r268;
	mov.b32 	%f334, %r279;
	mov.b32 	%f368, %r286;
	mov.b32 	%f403, %r297;
	mov.b32 	%f437, %r304;
	mov.b32 	%f472, %r315;
	mov.b32 	%f506, %r322;
	mov.b32 	%f541, %r333;
	mov.b32 	%f575, %r340;
	mov.b32 	%f610, %r351;
	mov.b32 	%f644, %r358;
	mov.b32 	%f679, %r369;
	mov.b32 	%f713, %r376;
	mov.b32 	%f748, %r387;
	mov.b32 	%f782, %r394;
	add.f32 	%f830, %f1366, %f1366;
	mov.b32 	%r410, %f830;
	and.b32  	%r411, %r410, -2147483648;
	or.b32  	%r412, %r411, 1056964608;
	mov.b32 	%f831, %r412;
	add.f32 	%f832, %f830, %f831;
	cvt.rzi.f32.f32 	%f833, %f832;
	abs.f32 	%f834, %f830;
	setp.gt.f32 	%p114, %f834, 0f4B000000;
	selp.f32 	%f835, %f830, %f833, %p114;
	cvt.rzi.f32.f32 	%f836, %f830;
	setp.lt.f32 	%p115, %f834, 0f3F000000;
	add.s32 	%r418, %r38, 8128;
	cvt.rn.f32.s32 	%f861, %r418;
	div.approx.f32 	%f93, %f861, %f287;
	abs.f32 	%f1370, %f93;
	setp.lt.f32 	%p121, %f1370, 0f40000000;
	@%p121 bra 	LBB0_62;
// %bb.51:
	setp.gtu.f32 	%p122, %f1370, 0f4B800000;
	@%p122 bra 	LBB0_58;
	bra.uni 	LBB0_52;
LBB0_58:
	mov.b32 	%r48, %f1370;
	and.b32  	%r419, %r48, 8388607;
	or.b32  	%r16149, %r419, 1065353216;
	mov.b32 	%f1369, %r16149;
	add.s32 	%r420, %r48, -1073741824;
	and.b32  	%r16150, %r420, -8388608;
	setp.eq.s32 	%p128, %r16150, 0;
	@%p128 bra 	LBB0_61;
// %bb.59:                              // %__nv_fmaf_rn.exit4.i.i.i2229.preheader
	mov.f32 	%f872, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f871,%f872;
	// end inline asm
LBB0_60:                                // %__nv_fmaf_rn.exit4.i.i.i2229
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r421, %r16150, 192937984;
	add.s32 	%r422, %r421, %r16149;
	mov.b32 	%f873, %r422;
	mul.f32 	%f874, %f871, %f873;
	sub.f32 	%f875, %f873, %f874;
	fma.rn.f32 	%f876, %f875, %f871, %f874;
	sub.f32 	%f877, %f873, %f876;
	fma.rz.f32 	%f878, %f877, %f871, %f876;
	cvt.rzi.f32.f32 	%f879, %f878;
	sub.f32 	%f1369, %f873, %f879;
	sub.s32 	%r16150, %r16150, %r421;
	mov.b32 	%r16149, %f1369;
	setp.ne.s32 	%p129, %r16150, 0;
	setp.ne.s32 	%p130, %r16149, 0;
	and.pred  	%p131, %p129, %p130;
	@%p131 bra 	LBB0_60;
LBB0_61:                                // %__internal_fmodf_slowpath_mod.exit.i.i2231
	setp.gt.u32 	%p132, %r48, 2139095039;
	selp.f32 	%f880, 0f7FFFFFFF, 0f4B800000, %p132;
	mul.f32 	%f881, %f1369, 0f34000000;
	mul.f32 	%f1370, %f880, %f881;
	bra.uni 	LBB0_62;
LBB0_52:                                // %__nv_fast_fdividef.exit.i.i.i2201
	div.approx.f32 	%f864, %f1370, %f255;
	cvt.rzi.f32.f32 	%f1368, %f864;
	fma.rn.f32 	%f96, %f1368, 0fC0000000, %f1370;
	mov.b32 	%r47, %f96;
	setp.lt.u32 	%p123, %r47, 1073741824;
	@%p123 bra 	LBB0_57;
// %bb.53:
	setp.lt.u32 	%p124, %r47, -2147483647;
	@%p124 bra 	LBB0_55;
// %bb.54:
	add.f32 	%f869, %f1368, 0fBF800000;
	setp.lt.f32 	%p127, %f96, 0fC0000000;
	add.f32 	%f870, %f869, 0fBF800000;
	selp.f32 	%f1368, %f870, %f869, %p127;
	bra.uni 	LBB0_57;
LBB0_55:
	add.f32 	%f1368, %f1368, 0f3F800000;
	setp.ltu.f32 	%p125, %f96, 0f40800000;
	@%p125 bra 	LBB0_57;
// %bb.56:                              // %__nv_fmaf_rn.exit.i.i.i2206
	add.f32 	%f865, %f1368, 0f3F800000;
	fma.rn.f32 	%f867, %f255, 0fC0400000, %f96;
	setp.ge.f32 	%p126, %f867, 0f00000000;
	add.f32 	%f868, %f865, 0f3F800000;
	selp.f32 	%f1368, %f868, %f865, %p126;
LBB0_57:                                // %__internal_fmodf_fastpath_quot.exit.i.i2210
	fma.rn.f32 	%f1370, %f1368, 0fC0000000, %f1370;
LBB0_62:                                // %__internal_fmodf_kernel.exit.i2235
	add.f32 	%f266, %f264, %f265;
	abs.f32 	%f268, %f264;
	add.f32 	%f300, %f298, %f299;
	abs.f32 	%f302, %f298;
	add.f32 	%f335, %f333, %f334;
	abs.f32 	%f337, %f333;
	add.f32 	%f369, %f367, %f368;
	abs.f32 	%f371, %f367;
	add.f32 	%f404, %f402, %f403;
	abs.f32 	%f406, %f402;
	add.f32 	%f438, %f436, %f437;
	abs.f32 	%f440, %f436;
	add.f32 	%f473, %f471, %f472;
	abs.f32 	%f475, %f471;
	add.f32 	%f507, %f505, %f506;
	abs.f32 	%f509, %f505;
	add.f32 	%f542, %f540, %f541;
	abs.f32 	%f544, %f540;
	add.f32 	%f576, %f574, %f575;
	abs.f32 	%f578, %f574;
	add.f32 	%f611, %f609, %f610;
	abs.f32 	%f613, %f609;
	add.f32 	%f645, %f643, %f644;
	abs.f32 	%f647, %f643;
	add.f32 	%f680, %f678, %f679;
	abs.f32 	%f682, %f678;
	add.f32 	%f714, %f712, %f713;
	abs.f32 	%f716, %f712;
	add.f32 	%f749, %f747, %f748;
	abs.f32 	%f751, %f747;
	add.f32 	%f783, %f781, %f782;
	abs.f32 	%f785, %f781;
	selp.f32 	%f837, %f836, %f835, %p115;
	shr.u32 	%r16, %r1, 2;
	abs.f32 	%f882, %f1370;
	setp.gtu.f32 	%p133, %f882, 0f7F800000;
	@%p133 bra 	LBB0_64;
// %bb.63:
	mov.b32 	%r423, %f93;
	and.b32  	%r424, %r423, -2147483648;
	mov.b32 	%r425, %f1370;
	or.b32  	%r426, %r424, %r425;
	mov.b32 	%f1370, %r426;
LBB0_64:                                // %__nv_fmodf.exit2236
	cvt.rzi.f32.f32 	%f267, %f266;
	setp.gt.f32 	%p6, %f268, 0f4B000000;
	cvt.rzi.f32.f32 	%f301, %f300;
	setp.gt.f32 	%p12, %f302, 0f4B000000;
	cvt.rzi.f32.f32 	%f336, %f335;
	setp.gt.f32 	%p18, %f337, 0f4B000000;
	cvt.rzi.f32.f32 	%f370, %f369;
	setp.gt.f32 	%p24, %f371, 0f4B000000;
	cvt.rzi.f32.f32 	%f405, %f404;
	setp.gt.f32 	%p30, %f406, 0f4B000000;
	cvt.rzi.f32.f32 	%f439, %f438;
	setp.gt.f32 	%p36, %f440, 0f4B000000;
	cvt.rzi.f32.f32 	%f474, %f473;
	setp.gt.f32 	%p42, %f475, 0f4B000000;
	cvt.rzi.f32.f32 	%f508, %f507;
	setp.gt.f32 	%p48, %f509, 0f4B000000;
	cvt.rzi.f32.f32 	%f543, %f542;
	setp.gt.f32 	%p54, %f544, 0f4B000000;
	cvt.rzi.f32.f32 	%f577, %f576;
	setp.gt.f32 	%p60, %f578, 0f4B000000;
	cvt.rzi.f32.f32 	%f612, %f611;
	setp.gt.f32 	%p66, %f613, 0f4B000000;
	cvt.rzi.f32.f32 	%f646, %f645;
	setp.gt.f32 	%p72, %f647, 0f4B000000;
	cvt.rzi.f32.f32 	%f681, %f680;
	setp.gt.f32 	%p78, %f682, 0f4B000000;
	cvt.rzi.f32.f32 	%f715, %f714;
	setp.gt.f32 	%p84, %f716, 0f4B000000;
	cvt.rzi.f32.f32 	%f750, %f749;
	setp.gt.f32 	%p90, %f751, 0f4B000000;
	cvt.rzi.f32.f32 	%f784, %f783;
	setp.gt.f32 	%p96, %f785, 0f4B000000;
	fma.rn.f32 	%f838, %f837, 0fBF000000, %f1366;
	add.f32 	%f883, %f1370, %f1370;
	mov.b32 	%r439, %f883;
	and.b32  	%r440, %r439, -2147483648;
	or.b32  	%r441, %r440, 1056964608;
	mov.b32 	%f884, %r441;
	add.f32 	%f885, %f883, %f884;
	cvt.rzi.f32.f32 	%f886, %f885;
	abs.f32 	%f887, %f883;
	setp.gt.f32 	%p134, %f887, 0f4B000000;
	selp.f32 	%f888, %f883, %f886, %p134;
	cvt.rzi.f32.f32 	%f889, %f883;
	setp.lt.f32 	%p135, %f887, 0f3F000000;
	selp.f32 	%f890, %f889, %f888, %p135;
	fma.rn.f32 	%f891, %f890, 0fBF000000, %f1370;
	and.b32  	%r447, %r1, 3;
	mul.lo.s32 	%r448, %r447, %r16;
	shl.b32 	%r449, %r448, 1;
	neg.s32 	%r59, %r449;
	cvt.rn.f32.s32 	%f916, %r59;
	mov.f32 	%f917, 0f41000000;
	div.approx.f32 	%f110, %f916, %f917;
	abs.f32 	%f1374, %f110;
	setp.lt.f32 	%p141, %f1374, 0f40000000;
	@%p141 bra 	LBB0_76;
// %bb.65:
	setp.gtu.f32 	%p142, %f1374, 0f4B800000;
	@%p142 bra 	LBB0_72;
	bra.uni 	LBB0_66;
LBB0_72:
	mov.b32 	%r61, %f1374;
	and.b32  	%r450, %r61, 8388607;
	or.b32  	%r16151, %r450, 1065353216;
	mov.b32 	%f1373, %r16151;
	add.s32 	%r451, %r61, -1073741824;
	and.b32  	%r16152, %r451, -8388608;
	setp.eq.s32 	%p148, %r16152, 0;
	@%p148 bra 	LBB0_75;
// %bb.73:                              // %__nv_fmaf_rn.exit4.i.i.i2275.preheader
	mov.f32 	%f927, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f926,%f927;
	// end inline asm
LBB0_74:                                // %__nv_fmaf_rn.exit4.i.i.i2275
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r452, %r16152, 192937984;
	add.s32 	%r453, %r452, %r16151;
	mov.b32 	%f928, %r453;
	mul.f32 	%f929, %f926, %f928;
	sub.f32 	%f930, %f928, %f929;
	fma.rn.f32 	%f931, %f930, %f926, %f929;
	sub.f32 	%f932, %f928, %f931;
	fma.rz.f32 	%f933, %f932, %f926, %f931;
	cvt.rzi.f32.f32 	%f934, %f933;
	sub.f32 	%f1373, %f928, %f934;
	sub.s32 	%r16152, %r16152, %r452;
	mov.b32 	%r16151, %f1373;
	setp.ne.s32 	%p149, %r16152, 0;
	setp.ne.s32 	%p150, %r16151, 0;
	and.pred  	%p151, %p149, %p150;
	@%p151 bra 	LBB0_74;
LBB0_75:                                // %__internal_fmodf_slowpath_mod.exit.i.i2277
	setp.gt.u32 	%p152, %r61, 2139095039;
	selp.f32 	%f935, 0f7FFFFFFF, 0f4B800000, %p152;
	mul.f32 	%f936, %f1373, 0f34000000;
	mul.f32 	%f1374, %f935, %f936;
	bra.uni 	LBB0_76;
LBB0_66:                                // %__nv_fast_fdividef.exit.i.i.i2247
	div.approx.f32 	%f919, %f1374, %f255;
	cvt.rzi.f32.f32 	%f1372, %f919;
	fma.rn.f32 	%f113, %f1372, 0fC0000000, %f1374;
	mov.b32 	%r60, %f113;
	setp.lt.u32 	%p143, %r60, 1073741824;
	@%p143 bra 	LBB0_71;
// %bb.67:
	setp.lt.u32 	%p144, %r60, -2147483647;
	@%p144 bra 	LBB0_69;
// %bb.68:
	add.f32 	%f924, %f1372, 0fBF800000;
	setp.lt.f32 	%p147, %f113, 0fC0000000;
	add.f32 	%f925, %f924, 0fBF800000;
	selp.f32 	%f1372, %f925, %f924, %p147;
	bra.uni 	LBB0_71;
LBB0_69:
	add.f32 	%f1372, %f1372, 0f3F800000;
	setp.ltu.f32 	%p145, %f113, 0f40800000;
	@%p145 bra 	LBB0_71;
// %bb.70:                              // %__nv_fmaf_rn.exit.i.i.i2252
	add.f32 	%f920, %f1372, 0f3F800000;
	fma.rn.f32 	%f922, %f255, 0fC0400000, %f113;
	setp.ge.f32 	%p146, %f922, 0f00000000;
	add.f32 	%f923, %f920, 0f3F800000;
	selp.f32 	%f1372, %f923, %f920, %p146;
LBB0_71:                                // %__internal_fmodf_fastpath_quot.exit.i.i2256
	fma.rn.f32 	%f1374, %f1372, 0fC0000000, %f1374;
LBB0_76:                                // %__internal_fmodf_kernel.exit.i2281
	selp.f32 	%f269, %f264, %f267, %p6;
	cvt.rzi.f32.f32 	%f270, %f264;
	setp.lt.f32 	%p7, %f268, 0f3F000000;
	selp.f32 	%f303, %f298, %f301, %p12;
	cvt.rzi.f32.f32 	%f304, %f298;
	setp.lt.f32 	%p13, %f302, 0f3F000000;
	selp.f32 	%f338, %f333, %f336, %p18;
	cvt.rzi.f32.f32 	%f339, %f333;
	setp.lt.f32 	%p19, %f337, 0f3F000000;
	selp.f32 	%f372, %f367, %f370, %p24;
	cvt.rzi.f32.f32 	%f373, %f367;
	setp.lt.f32 	%p25, %f371, 0f3F000000;
	selp.f32 	%f407, %f402, %f405, %p30;
	cvt.rzi.f32.f32 	%f408, %f402;
	setp.lt.f32 	%p31, %f406, 0f3F000000;
	selp.f32 	%f441, %f436, %f439, %p36;
	cvt.rzi.f32.f32 	%f442, %f436;
	setp.lt.f32 	%p37, %f440, 0f3F000000;
	selp.f32 	%f476, %f471, %f474, %p42;
	cvt.rzi.f32.f32 	%f477, %f471;
	setp.lt.f32 	%p43, %f475, 0f3F000000;
	selp.f32 	%f510, %f505, %f508, %p48;
	cvt.rzi.f32.f32 	%f511, %f505;
	setp.lt.f32 	%p49, %f509, 0f3F000000;
	selp.f32 	%f545, %f540, %f543, %p54;
	cvt.rzi.f32.f32 	%f546, %f540;
	setp.lt.f32 	%p55, %f544, 0f3F000000;
	selp.f32 	%f579, %f574, %f577, %p60;
	cvt.rzi.f32.f32 	%f580, %f574;
	setp.lt.f32 	%p61, %f578, 0f3F000000;
	selp.f32 	%f614, %f609, %f612, %p66;
	cvt.rzi.f32.f32 	%f615, %f609;
	setp.lt.f32 	%p67, %f613, 0f3F000000;
	selp.f32 	%f648, %f643, %f646, %p72;
	cvt.rzi.f32.f32 	%f649, %f643;
	setp.lt.f32 	%p73, %f647, 0f3F000000;
	selp.f32 	%f683, %f678, %f681, %p78;
	cvt.rzi.f32.f32 	%f684, %f678;
	setp.lt.f32 	%p79, %f682, 0f3F000000;
	selp.f32 	%f717, %f712, %f715, %p84;
	cvt.rzi.f32.f32 	%f718, %f712;
	setp.lt.f32 	%p85, %f716, 0f3F000000;
	selp.f32 	%f752, %f747, %f750, %p90;
	cvt.rzi.f32.f32 	%f753, %f747;
	setp.lt.f32 	%p91, %f751, 0f3F000000;
	selp.f32 	%f786, %f781, %f784, %p96;
	cvt.rzi.f32.f32 	%f787, %f781;
	setp.lt.f32 	%p97, %f785, 0f3F000000;
	mul.f32 	%f839, %f838, 0f34222169;
	mul.f32 	%f892, %f891, 0f34222169;
	abs.f32 	%f937, %f1374;
	setp.gtu.f32 	%p153, %f937, 0f7F800000;
	@%p153 bra 	LBB0_78;
// %bb.77:
	mov.b32 	%r454, %f110;
	and.b32  	%r455, %r454, -2147483648;
	mov.b32 	%r456, %f1374;
	or.b32  	%r457, %r455, %r456;
	mov.b32 	%f1374, %r457;
LBB0_78:                                // %__nv_fmodf.exit2282
	selp.f32 	%f271, %f270, %f269, %p7;
	selp.f32 	%f305, %f304, %f303, %p13;
	selp.f32 	%f340, %f339, %f338, %p19;
	selp.f32 	%f374, %f373, %f372, %p25;
	selp.f32 	%f409, %f408, %f407, %p31;
	selp.f32 	%f443, %f442, %f441, %p37;
	selp.f32 	%f478, %f477, %f476, %p43;
	selp.f32 	%f512, %f511, %f510, %p49;
	selp.f32 	%f547, %f546, %f545, %p55;
	selp.f32 	%f581, %f580, %f579, %p61;
	selp.f32 	%f616, %f615, %f614, %p67;
	selp.f32 	%f650, %f649, %f648, %p73;
	selp.f32 	%f685, %f684, %f683, %p79;
	selp.f32 	%f719, %f718, %f717, %p85;
	selp.f32 	%f754, %f753, %f752, %p91;
	selp.f32 	%f788, %f787, %f786, %p97;
	fma.rn.f32 	%f840, %f838, 0f40490FDA, %f839;
	fma.rn.f32 	%f893, %f891, 0f40490FDA, %f892;
	add.f32 	%f938, %f1374, %f1374;
	mov.b32 	%r458, %f938;
	and.b32  	%r459, %r458, -2147483648;
	or.b32  	%r460, %r459, 1056964608;
	mov.b32 	%f939, %r460;
	add.f32 	%f940, %f938, %f939;
	cvt.rzi.f32.f32 	%f941, %f940;
	abs.f32 	%f942, %f938;
	setp.gt.f32 	%p154, %f942, 0f4B000000;
	selp.f32 	%f943, %f938, %f941, %p154;
	cvt.rzi.f32.f32 	%f944, %f938;
	setp.lt.f32 	%p155, %f942, 0f3F000000;
	selp.f32 	%f945, %f944, %f943, %p155;
	fma.rn.f32 	%f946, %f945, 0fBF000000, %f1374;
	mul.f32 	%f947, %f946, 0f34222169;
	fma.rn.f32 	%f948, %f946, 0f40490FDA, %f947;
	shl.b32 	%r68, %r16, 3;
	sub.s32 	%r466, %r59, %r68;
	cvt.rn.f32.s32 	%f969, %r466;
	div.approx.f32 	%f129, %f969, %f917;
	abs.f32 	%f1378, %f129;
	setp.lt.f32 	%p161, %f1378, 0f40000000;
	@%p161 bra 	LBB0_90;
// %bb.79:
	setp.gtu.f32 	%p162, %f1378, 0f4B800000;
	@%p162 bra 	LBB0_86;
	bra.uni 	LBB0_80;
LBB0_86:
	mov.b32 	%r70, %f1378;
	and.b32  	%r467, %r70, 8388607;
	or.b32  	%r16153, %r467, 1065353216;
	mov.b32 	%f1377, %r16153;
	add.s32 	%r468, %r70, -1073741824;
	and.b32  	%r16154, %r468, -8388608;
	setp.eq.s32 	%p168, %r16154, 0;
	@%p168 bra 	LBB0_89;
// %bb.87:                              // %__nv_fmaf_rn.exit4.i.i.i2321.preheader
	mov.f32 	%f980, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f979,%f980;
	// end inline asm
LBB0_88:                                // %__nv_fmaf_rn.exit4.i.i.i2321
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r469, %r16154, 192937984;
	add.s32 	%r470, %r469, %r16153;
	mov.b32 	%f981, %r470;
	mul.f32 	%f982, %f979, %f981;
	sub.f32 	%f983, %f981, %f982;
	fma.rn.f32 	%f984, %f983, %f979, %f982;
	sub.f32 	%f985, %f981, %f984;
	fma.rz.f32 	%f986, %f985, %f979, %f984;
	cvt.rzi.f32.f32 	%f987, %f986;
	sub.f32 	%f1377, %f981, %f987;
	sub.s32 	%r16154, %r16154, %r469;
	mov.b32 	%r16153, %f1377;
	setp.ne.s32 	%p169, %r16154, 0;
	setp.ne.s32 	%p170, %r16153, 0;
	and.pred  	%p171, %p169, %p170;
	@%p171 bra 	LBB0_88;
LBB0_89:                                // %__internal_fmodf_slowpath_mod.exit.i.i2323
	setp.gt.u32 	%p172, %r70, 2139095039;
	selp.f32 	%f988, 0f7FFFFFFF, 0f4B800000, %p172;
	mul.f32 	%f989, %f1377, 0f34000000;
	mul.f32 	%f1378, %f988, %f989;
	bra.uni 	LBB0_90;
LBB0_80:                                // %__nv_fast_fdividef.exit.i.i.i2293
	div.approx.f32 	%f972, %f1378, %f255;
	cvt.rzi.f32.f32 	%f1376, %f972;
	fma.rn.f32 	%f132, %f1376, 0fC0000000, %f1378;
	mov.b32 	%r69, %f132;
	setp.lt.u32 	%p163, %r69, 1073741824;
	@%p163 bra 	LBB0_85;
// %bb.81:
	setp.lt.u32 	%p164, %r69, -2147483647;
	@%p164 bra 	LBB0_83;
// %bb.82:
	add.f32 	%f977, %f1376, 0fBF800000;
	setp.lt.f32 	%p167, %f132, 0fC0000000;
	add.f32 	%f978, %f977, 0fBF800000;
	selp.f32 	%f1376, %f978, %f977, %p167;
	bra.uni 	LBB0_85;
LBB0_83:
	add.f32 	%f1376, %f1376, 0f3F800000;
	setp.ltu.f32 	%p165, %f132, 0f40800000;
	@%p165 bra 	LBB0_85;
// %bb.84:                              // %__nv_fmaf_rn.exit.i.i.i2298
	add.f32 	%f973, %f1376, 0f3F800000;
	fma.rn.f32 	%f975, %f255, 0fC0400000, %f132;
	setp.ge.f32 	%p166, %f975, 0f00000000;
	add.f32 	%f976, %f973, 0f3F800000;
	selp.f32 	%f1376, %f976, %f973, %p166;
LBB0_85:                                // %__internal_fmodf_fastpath_quot.exit.i.i2302
	fma.rn.f32 	%f1378, %f1376, 0fC0000000, %f1378;
LBB0_90:                                // %__internal_fmodf_kernel.exit.i2327
	fma.rn.f32 	%f272, %f271, 0fBF000000, %f263;
	fma.rn.f32 	%f306, %f305, 0fBF000000, %f297;
	fma.rn.f32 	%f341, %f340, 0fBF000000, %f332;
	fma.rn.f32 	%f375, %f374, 0fBF000000, %f366;
	fma.rn.f32 	%f410, %f409, 0fBF000000, %f401;
	fma.rn.f32 	%f444, %f443, 0fBF000000, %f435;
	fma.rn.f32 	%f479, %f478, 0fBF000000, %f470;
	fma.rn.f32 	%f513, %f512, 0fBF000000, %f504;
	fma.rn.f32 	%f548, %f547, 0fBF000000, %f539;
	fma.rn.f32 	%f582, %f581, 0fBF000000, %f573;
	fma.rn.f32 	%f617, %f616, 0fBF000000, %f608;
	fma.rn.f32 	%f651, %f650, 0fBF000000, %f642;
	fma.rn.f32 	%f686, %f685, 0fBF000000, %f677;
	fma.rn.f32 	%f720, %f719, 0fBF000000, %f711;
	fma.rn.f32 	%f755, %f754, 0fBF000000, %f746;
	fma.rn.f32 	%f789, %f788, 0fBF000000, %f780;
	mul.f32 	%f841, %f840, %f840;
	mul.f32 	%f894, %f893, %f893;
	mul.f32 	%f949, %f948, %f948;
	shl.b32 	%r8, %r1, 1;
	abs.f32 	%f990, %f1378;
	setp.gtu.f32 	%p173, %f990, 0f7F800000;
	@%p173 bra 	LBB0_92;
// %bb.91:
	mov.b32 	%r471, %f129;
	and.b32  	%r472, %r471, -2147483648;
	mov.b32 	%r473, %f1378;
	or.b32  	%r474, %r472, %r473;
	mov.b32 	%f1378, %r474;
LBB0_92:                                // %__nv_fmodf.exit2328
	mul.f32 	%f273, %f272, %f272;
	mul.f32 	%f307, %f306, %f306;
	mul.f32 	%f342, %f341, %f341;
	mul.f32 	%f376, %f375, %f375;
	mul.f32 	%f411, %f410, %f410;
	mul.f32 	%f445, %f444, %f444;
	mul.f32 	%f480, %f479, %f479;
	mul.f32 	%f514, %f513, %f513;
	mul.f32 	%f549, %f548, %f548;
	mul.f32 	%f583, %f582, %f582;
	mul.f32 	%f618, %f617, %f617;
	mul.f32 	%f652, %f651, %f651;
	mul.f32 	%f687, %f686, %f686;
	mul.f32 	%f721, %f720, %f720;
	mul.f32 	%f756, %f755, %f755;
	mul.f32 	%f790, %f789, %f789;
	fma.rn.f32 	%f842, %f841, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f895, %f894, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f950, %f949, 0f37CBAC00, 0fBAB607ED;
	add.f32 	%f991, %f1378, %f1378;
	mov.b32 	%r487, %f991;
	and.b32  	%r488, %r487, -2147483648;
	or.b32  	%r489, %r488, 1056964608;
	mov.b32 	%f992, %r489;
	add.f32 	%f993, %f991, %f992;
	cvt.rzi.f32.f32 	%f994, %f993;
	abs.f32 	%f995, %f991;
	setp.gt.f32 	%p174, %f995, 0f4B000000;
	selp.f32 	%f996, %f991, %f994, %p174;
	cvt.rzi.f32.f32 	%f997, %f991;
	setp.lt.f32 	%p175, %f995, 0f3F000000;
	selp.f32 	%f998, %f997, %f996, %p175;
	fma.rn.f32 	%f999, %f998, 0fBF000000, %f1378;
	mul.f32 	%f1000, %f999, 0f34222169;
	fma.rn.f32 	%f1001, %f999, 0f40490FDA, %f1000;
	mul.f32 	%f1002, %f1001, %f1001;
	fma.rn.f32 	%f1003, %f1002, 0f37CBAC00, 0fBAB607ED;
	and.b32  	%r495, %r8, 6;
	shl.b32 	%r496, %r495, 1;
	neg.s32 	%r81, %r496;
	mul.lo.s32 	%r82, %r81, %r16;
	cvt.rn.f32.s32 	%f1024, %r82;
	div.approx.f32 	%f146, %f1024, %f287;
	abs.f32 	%f1382, %f146;
	setp.lt.f32 	%p181, %f1382, 0f40000000;
	@%p181 bra 	LBB0_104;
// %bb.93:
	setp.gtu.f32 	%p182, %f1382, 0f4B800000;
	@%p182 bra 	LBB0_100;
	bra.uni 	LBB0_94;
LBB0_100:
	mov.b32 	%r84, %f1382;
	and.b32  	%r497, %r84, 8388607;
	or.b32  	%r16155, %r497, 1065353216;
	mov.b32 	%f1381, %r16155;
	add.s32 	%r498, %r84, -1073741824;
	and.b32  	%r16156, %r498, -8388608;
	setp.eq.s32 	%p188, %r16156, 0;
	@%p188 bra 	LBB0_103;
// %bb.101:                             // %__nv_fmaf_rn.exit4.i.i.i2367.preheader
	mov.f32 	%f1035, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1034,%f1035;
	// end inline asm
LBB0_102:                               // %__nv_fmaf_rn.exit4.i.i.i2367
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r499, %r16156, 192937984;
	add.s32 	%r500, %r499, %r16155;
	mov.b32 	%f1036, %r500;
	mul.f32 	%f1037, %f1034, %f1036;
	sub.f32 	%f1038, %f1036, %f1037;
	fma.rn.f32 	%f1039, %f1038, %f1034, %f1037;
	sub.f32 	%f1040, %f1036, %f1039;
	fma.rz.f32 	%f1041, %f1040, %f1034, %f1039;
	cvt.rzi.f32.f32 	%f1042, %f1041;
	sub.f32 	%f1381, %f1036, %f1042;
	sub.s32 	%r16156, %r16156, %r499;
	mov.b32 	%r16155, %f1381;
	setp.ne.s32 	%p189, %r16156, 0;
	setp.ne.s32 	%p190, %r16155, 0;
	and.pred  	%p191, %p189, %p190;
	@%p191 bra 	LBB0_102;
LBB0_103:                               // %__internal_fmodf_slowpath_mod.exit.i.i2369
	setp.gt.u32 	%p192, %r84, 2139095039;
	selp.f32 	%f1043, 0f7FFFFFFF, 0f4B800000, %p192;
	mul.f32 	%f1044, %f1381, 0f34000000;
	mul.f32 	%f1382, %f1043, %f1044;
	bra.uni 	LBB0_104;
LBB0_94:                                // %__nv_fast_fdividef.exit.i.i.i2339
	div.approx.f32 	%f1027, %f1382, %f255;
	cvt.rzi.f32.f32 	%f1380, %f1027;
	fma.rn.f32 	%f149, %f1380, 0fC0000000, %f1382;
	mov.b32 	%r83, %f149;
	setp.lt.u32 	%p183, %r83, 1073741824;
	@%p183 bra 	LBB0_99;
// %bb.95:
	setp.lt.u32 	%p184, %r83, -2147483647;
	@%p184 bra 	LBB0_97;
// %bb.96:
	add.f32 	%f1032, %f1380, 0fBF800000;
	setp.lt.f32 	%p187, %f149, 0fC0000000;
	add.f32 	%f1033, %f1032, 0fBF800000;
	selp.f32 	%f1380, %f1033, %f1032, %p187;
	bra.uni 	LBB0_99;
LBB0_97:
	add.f32 	%f1380, %f1380, 0f3F800000;
	setp.ltu.f32 	%p185, %f149, 0f40800000;
	@%p185 bra 	LBB0_99;
// %bb.98:                              // %__nv_fmaf_rn.exit.i.i.i2344
	add.f32 	%f1028, %f1380, 0f3F800000;
	fma.rn.f32 	%f1030, %f255, 0fC0400000, %f149;
	setp.ge.f32 	%p186, %f1030, 0f00000000;
	add.f32 	%f1031, %f1028, 0f3F800000;
	selp.f32 	%f1380, %f1031, %f1028, %p186;
LBB0_99:                                // %__internal_fmodf_fastpath_quot.exit.i.i2348
	fma.rn.f32 	%f1382, %f1380, 0fC0000000, %f1382;
LBB0_104:                               // %__internal_fmodf_kernel.exit.i2373
	cvt.rzi.s32.f32 	%r262, %f271;
	fma.rn.f32 	%f274, %f273, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f275, %f273, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r269, %f305;
	fma.rn.f32 	%f308, %f307, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f309, %f307, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r280, %f340;
	fma.rn.f32 	%f343, %f342, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f344, %f342, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r287, %f374;
	fma.rn.f32 	%f377, %f376, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f378, %f376, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r298, %f409;
	fma.rn.f32 	%f412, %f411, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f413, %f411, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r305, %f443;
	fma.rn.f32 	%f446, %f445, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f447, %f445, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r316, %f478;
	fma.rn.f32 	%f481, %f480, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f482, %f480, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r323, %f512;
	fma.rn.f32 	%f515, %f514, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f516, %f514, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r334, %f547;
	fma.rn.f32 	%f550, %f549, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f551, %f549, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r341, %f581;
	fma.rn.f32 	%f584, %f583, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f585, %f583, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r352, %f616;
	fma.rn.f32 	%f619, %f618, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f620, %f618, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r359, %f650;
	fma.rn.f32 	%f653, %f652, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f654, %f652, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r370, %f685;
	fma.rn.f32 	%f688, %f687, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f689, %f687, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r377, %f719;
	fma.rn.f32 	%f722, %f721, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f723, %f721, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r388, %f754;
	fma.rn.f32 	%f757, %f756, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f758, %f756, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r395, %f788;
	fma.rn.f32 	%f791, %f790, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f792, %f790, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r413, %f837;
	fma.rn.f32 	%f843, %f842, %f841, 0f3D2AAABB;
	fma.rn.f32 	%f847, %f841, 0fB94D4153, 0f3C0885E4;
	cvt.rzi.s32.f32 	%r442, %f890;
	fma.rn.f32 	%f896, %f895, %f894, 0f3D2AAABB;
	fma.rn.f32 	%f900, %f894, 0fB94D4153, 0f3C0885E4;
	cvt.rzi.s32.f32 	%r461, %f945;
	fma.rn.f32 	%f951, %f950, %f949, 0f3D2AAABB;
	fma.rn.f32 	%f955, %f949, 0fB94D4153, 0f3C0885E4;
	cvt.rzi.s32.f32 	%r490, %f998;
	fma.rn.f32 	%f1004, %f1003, %f1002, 0f3D2AAABB;
	fma.rn.f32 	%f1008, %f1002, 0fB94D4153, 0f3C0885E4;
	abs.f32 	%f1045, %f1382;
	setp.gtu.f32 	%p193, %f1045, 0f7F800000;
	@%p193 bra 	LBB0_106;
// %bb.105:
	mov.b32 	%r501, %f146;
	and.b32  	%r502, %r501, -2147483648;
	mov.b32 	%r503, %f1382;
	or.b32  	%r504, %r502, %r503;
	mov.b32 	%f1382, %r504;
LBB0_106:                               // %__nv_fmodf.exit2374
	add.s32 	%r263, %r262, 1;
	fma.rn.f32 	%f276, %f274, %f273, 0fC0A55DF6;
	fma.rn.f32 	%f277, %f275, %f273, 0f4081E0CF;
	fma.rn.f32 	%f278, %f273, %f272, 0f00000000;
	add.s32 	%r270, %r269, 1;
	fma.rn.f32 	%f310, %f308, %f307, 0fC0A55DF6;
	fma.rn.f32 	%f311, %f309, %f307, 0f4081E0CF;
	fma.rn.f32 	%f312, %f307, %f306, 0f00000000;
	add.s32 	%r281, %r280, 1;
	fma.rn.f32 	%f345, %f343, %f342, 0fC0A55DF6;
	fma.rn.f32 	%f346, %f344, %f342, 0f4081E0CF;
	fma.rn.f32 	%f347, %f342, %f341, 0f00000000;
	add.s32 	%r288, %r287, 1;
	fma.rn.f32 	%f379, %f377, %f376, 0fC0A55DF6;
	fma.rn.f32 	%f380, %f378, %f376, 0f4081E0CF;
	fma.rn.f32 	%f381, %f376, %f375, 0f00000000;
	add.s32 	%r299, %r298, 1;
	fma.rn.f32 	%f414, %f412, %f411, 0fC0A55DF6;
	fma.rn.f32 	%f415, %f413, %f411, 0f4081E0CF;
	fma.rn.f32 	%f416, %f411, %f410, 0f00000000;
	add.s32 	%r306, %r305, 1;
	fma.rn.f32 	%f448, %f446, %f445, 0fC0A55DF6;
	fma.rn.f32 	%f449, %f447, %f445, 0f4081E0CF;
	fma.rn.f32 	%f450, %f445, %f444, 0f00000000;
	add.s32 	%r317, %r316, 1;
	fma.rn.f32 	%f483, %f481, %f480, 0fC0A55DF6;
	fma.rn.f32 	%f484, %f482, %f480, 0f4081E0CF;
	fma.rn.f32 	%f485, %f480, %f479, 0f00000000;
	add.s32 	%r324, %r323, 1;
	fma.rn.f32 	%f517, %f515, %f514, 0fC0A55DF6;
	fma.rn.f32 	%f518, %f516, %f514, 0f4081E0CF;
	fma.rn.f32 	%f519, %f514, %f513, 0f00000000;
	add.s32 	%r335, %r334, 1;
	fma.rn.f32 	%f552, %f550, %f549, 0fC0A55DF6;
	fma.rn.f32 	%f553, %f551, %f549, 0f4081E0CF;
	fma.rn.f32 	%f554, %f549, %f548, 0f00000000;
	add.s32 	%r342, %r341, 1;
	fma.rn.f32 	%f586, %f584, %f583, 0fC0A55DF6;
	fma.rn.f32 	%f587, %f585, %f583, 0f4081E0CF;
	fma.rn.f32 	%f588, %f583, %f582, 0f00000000;
	add.s32 	%r353, %r352, 1;
	fma.rn.f32 	%f621, %f619, %f618, 0fC0A55DF6;
	fma.rn.f32 	%f622, %f620, %f618, 0f4081E0CF;
	fma.rn.f32 	%f623, %f618, %f617, 0f00000000;
	add.s32 	%r360, %r359, 1;
	fma.rn.f32 	%f655, %f653, %f652, 0fC0A55DF6;
	fma.rn.f32 	%f656, %f654, %f652, 0f4081E0CF;
	fma.rn.f32 	%f657, %f652, %f651, 0f00000000;
	add.s32 	%r371, %r370, 1;
	fma.rn.f32 	%f690, %f688, %f687, 0fC0A55DF6;
	fma.rn.f32 	%f691, %f689, %f687, 0f4081E0CF;
	fma.rn.f32 	%f692, %f687, %f686, 0f00000000;
	add.s32 	%r378, %r377, 1;
	fma.rn.f32 	%f724, %f722, %f721, 0fC0A55DF6;
	fma.rn.f32 	%f725, %f723, %f721, 0f4081E0CF;
	fma.rn.f32 	%f726, %f721, %f720, 0f00000000;
	add.s32 	%r389, %r388, 1;
	fma.rn.f32 	%f759, %f757, %f756, 0fC0A55DF6;
	fma.rn.f32 	%f760, %f758, %f756, 0f4081E0CF;
	fma.rn.f32 	%f761, %f756, %f755, 0f00000000;
	add.s32 	%r396, %r395, 1;
	fma.rn.f32 	%f793, %f791, %f790, 0fC0A55DF6;
	fma.rn.f32 	%f794, %f792, %f790, 0f4081E0CF;
	fma.rn.f32 	%f795, %f790, %f789, 0f00000000;
	fma.rn.f32 	%f844, %f843, %f841, 0fBEFFFFFF;
	fma.rn.f32 	%f846, %f841, %f840, 0f00000000;
	fma.rn.f32 	%f848, %f847, %f841, 0fBE2AAAA8;
	and.b32  	%r414, %r413, 1;
	fma.rn.f32 	%f897, %f896, %f894, 0fBEFFFFFF;
	fma.rn.f32 	%f899, %f894, %f893, 0f00000000;
	fma.rn.f32 	%f901, %f900, %f894, 0fBE2AAAA8;
	and.b32  	%r443, %r442, 1;
	fma.rn.f32 	%f952, %f951, %f949, 0fBEFFFFFF;
	fma.rn.f32 	%f954, %f949, %f948, 0f00000000;
	fma.rn.f32 	%f956, %f955, %f949, 0fBE2AAAA8;
	and.b32  	%r462, %r461, 1;
	fma.rn.f32 	%f1005, %f1004, %f1002, 0fBEFFFFFF;
	fma.rn.f32 	%f1007, %f1002, %f1001, 0f00000000;
	fma.rn.f32 	%f1009, %f1008, %f1002, 0fBE2AAAA8;
	and.b32  	%r491, %r490, 1;
	add.f32 	%f1046, %f1382, %f1382;
	mov.b32 	%r505, %f1046;
	and.b32  	%r506, %r505, -2147483648;
	or.b32  	%r507, %r506, 1056964608;
	mov.b32 	%f1047, %r507;
	add.f32 	%f1048, %f1046, %f1047;
	cvt.rzi.f32.f32 	%f1049, %f1048;
	abs.f32 	%f1050, %f1046;
	setp.gt.f32 	%p194, %f1050, 0f4B000000;
	selp.f32 	%f1051, %f1046, %f1049, %p194;
	cvt.rzi.f32.f32 	%f1052, %f1046;
	setp.lt.f32 	%p195, %f1050, 0f3F000000;
	selp.f32 	%f1053, %f1052, %f1051, %p195;
	cvt.rzi.s32.f32 	%r508, %f1053;
	fma.rn.f32 	%f1054, %f1053, 0fBF000000, %f1382;
	mul.f32 	%f1055, %f1054, 0f34222169;
	fma.rn.f32 	%f1056, %f1054, 0f40490FDA, %f1055;
	mul.f32 	%f1057, %f1056, %f1056;
	fma.rn.f32 	%f1058, %f1057, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f1059, %f1058, %f1057, 0f3D2AAABB;
	fma.rn.f32 	%f1063, %f1057, 0fB94D4153, 0f3C0885E4;
	sub.s32 	%r513, %r82, %r68;
	cvt.rn.f32.s32 	%f1077, %r513;
	div.approx.f32 	%f165, %f1077, %f287;
	abs.f32 	%f1386, %f165;
	setp.lt.f32 	%p201, %f1386, 0f40000000;
	@%p201 bra 	LBB0_118;
// %bb.107:
	setp.gtu.f32 	%p202, %f1386, 0f4B800000;
	@%p202 bra 	LBB0_114;
	bra.uni 	LBB0_108;
LBB0_114:
	mov.b32 	%r92, %f1386;
	and.b32  	%r514, %r92, 8388607;
	or.b32  	%r16157, %r514, 1065353216;
	mov.b32 	%f1385, %r16157;
	add.s32 	%r515, %r92, -1073741824;
	and.b32  	%r16158, %r515, -8388608;
	setp.eq.s32 	%p208, %r16158, 0;
	@%p208 bra 	LBB0_117;
// %bb.115:                             // %__nv_fmaf_rn.exit4.i.i.i2413.preheader
	mov.f32 	%f1088, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1087,%f1088;
	// end inline asm
LBB0_116:                               // %__nv_fmaf_rn.exit4.i.i.i2413
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r516, %r16158, 192937984;
	add.s32 	%r517, %r516, %r16157;
	mov.b32 	%f1089, %r517;
	mul.f32 	%f1090, %f1087, %f1089;
	sub.f32 	%f1091, %f1089, %f1090;
	fma.rn.f32 	%f1092, %f1091, %f1087, %f1090;
	sub.f32 	%f1093, %f1089, %f1092;
	fma.rz.f32 	%f1094, %f1093, %f1087, %f1092;
	cvt.rzi.f32.f32 	%f1095, %f1094;
	sub.f32 	%f1385, %f1089, %f1095;
	sub.s32 	%r16158, %r16158, %r516;
	mov.b32 	%r16157, %f1385;
	setp.ne.s32 	%p209, %r16158, 0;
	setp.ne.s32 	%p210, %r16157, 0;
	and.pred  	%p211, %p209, %p210;
	@%p211 bra 	LBB0_116;
LBB0_117:                               // %__internal_fmodf_slowpath_mod.exit.i.i2415
	setp.gt.u32 	%p212, %r92, 2139095039;
	selp.f32 	%f1096, 0f7FFFFFFF, 0f4B800000, %p212;
	mul.f32 	%f1097, %f1385, 0f34000000;
	mul.f32 	%f1386, %f1096, %f1097;
	bra.uni 	LBB0_118;
LBB0_108:                               // %__nv_fast_fdividef.exit.i.i.i2385
	div.approx.f32 	%f1080, %f1386, %f255;
	cvt.rzi.f32.f32 	%f1384, %f1080;
	fma.rn.f32 	%f168, %f1384, 0fC0000000, %f1386;
	mov.b32 	%r91, %f168;
	setp.lt.u32 	%p203, %r91, 1073741824;
	@%p203 bra 	LBB0_113;
// %bb.109:
	setp.lt.u32 	%p204, %r91, -2147483647;
	@%p204 bra 	LBB0_111;
// %bb.110:
	add.f32 	%f1085, %f1384, 0fBF800000;
	setp.lt.f32 	%p207, %f168, 0fC0000000;
	add.f32 	%f1086, %f1085, 0fBF800000;
	selp.f32 	%f1384, %f1086, %f1085, %p207;
	bra.uni 	LBB0_113;
LBB0_111:
	add.f32 	%f1384, %f1384, 0f3F800000;
	setp.ltu.f32 	%p205, %f168, 0f40800000;
	@%p205 bra 	LBB0_113;
// %bb.112:                             // %__nv_fmaf_rn.exit.i.i.i2390
	add.f32 	%f1081, %f1384, 0f3F800000;
	fma.rn.f32 	%f1083, %f255, 0fC0400000, %f168;
	setp.ge.f32 	%p206, %f1083, 0f00000000;
	add.f32 	%f1084, %f1081, 0f3F800000;
	selp.f32 	%f1384, %f1084, %f1081, %p206;
LBB0_113:                               // %__internal_fmodf_fastpath_quot.exit.i.i2394
	fma.rn.f32 	%f1386, %f1384, 0fC0000000, %f1386;
LBB0_118:                               // %__internal_fmodf_kernel.exit.i2419
	fma.rn.f32 	%f279, %f277, %f273, 0fC09DE9E6;
	fma.rn.f32 	%f280, %f276, %f278, 0f00000000;
	and.b32  	%r264, %r263, 1;
	fma.rn.f32 	%f313, %f311, %f307, 0fC09DE9E6;
	fma.rn.f32 	%f314, %f310, %f312, 0f00000000;
	and.b32  	%r271, %r270, 1;
	fma.rn.f32 	%f348, %f346, %f342, 0fC09DE9E6;
	fma.rn.f32 	%f349, %f345, %f347, 0f00000000;
	and.b32  	%r282, %r281, 1;
	fma.rn.f32 	%f382, %f380, %f376, 0fC09DE9E6;
	fma.rn.f32 	%f383, %f379, %f381, 0f00000000;
	and.b32  	%r289, %r288, 1;
	fma.rn.f32 	%f417, %f415, %f411, 0fC09DE9E6;
	fma.rn.f32 	%f418, %f414, %f416, 0f00000000;
	and.b32  	%r300, %r299, 1;
	fma.rn.f32 	%f451, %f449, %f445, 0fC09DE9E6;
	fma.rn.f32 	%f452, %f448, %f450, 0f00000000;
	and.b32  	%r307, %r306, 1;
	fma.rn.f32 	%f486, %f484, %f480, 0fC09DE9E6;
	fma.rn.f32 	%f487, %f483, %f485, 0f00000000;
	and.b32  	%r318, %r317, 1;
	fma.rn.f32 	%f520, %f518, %f514, 0fC09DE9E6;
	fma.rn.f32 	%f521, %f517, %f519, 0f00000000;
	and.b32  	%r325, %r324, 1;
	fma.rn.f32 	%f555, %f553, %f549, 0fC09DE9E6;
	fma.rn.f32 	%f556, %f552, %f554, 0f00000000;
	and.b32  	%r336, %r335, 1;
	fma.rn.f32 	%f589, %f587, %f583, 0fC09DE9E6;
	fma.rn.f32 	%f590, %f586, %f588, 0f00000000;
	and.b32  	%r343, %r342, 1;
	fma.rn.f32 	%f624, %f622, %f618, 0fC09DE9E6;
	fma.rn.f32 	%f625, %f621, %f623, 0f00000000;
	and.b32  	%r354, %r353, 1;
	fma.rn.f32 	%f658, %f656, %f652, 0fC09DE9E6;
	fma.rn.f32 	%f659, %f655, %f657, 0f00000000;
	and.b32  	%r361, %r360, 1;
	fma.rn.f32 	%f693, %f691, %f687, 0fC09DE9E6;
	fma.rn.f32 	%f694, %f690, %f692, 0f00000000;
	and.b32  	%r372, %r371, 1;
	fma.rn.f32 	%f727, %f725, %f721, 0fC09DE9E6;
	fma.rn.f32 	%f728, %f724, %f726, 0f00000000;
	and.b32  	%r379, %r378, 1;
	fma.rn.f32 	%f762, %f760, %f756, 0fC09DE9E6;
	fma.rn.f32 	%f763, %f759, %f761, 0f00000000;
	and.b32  	%r390, %r389, 1;
	fma.rn.f32 	%f796, %f794, %f790, 0fC09DE9E6;
	fma.rn.f32 	%f797, %f793, %f795, 0f00000000;
	and.b32  	%r397, %r396, 1;
	fma.rn.f32 	%f845, %f844, %f841, 0f3F800000;
	fma.rn.f32 	%f849, %f848, %f846, %f840;
	setp.eq.b32 	%p116, %r414, 1;
	fma.rn.f32 	%f898, %f897, %f894, 0f3F800000;
	fma.rn.f32 	%f902, %f901, %f899, %f893;
	setp.eq.b32 	%p136, %r443, 1;
	fma.rn.f32 	%f953, %f952, %f949, 0f3F800000;
	fma.rn.f32 	%f957, %f956, %f954, %f948;
	setp.eq.b32 	%p156, %r462, 1;
	fma.rn.f32 	%f1006, %f1005, %f1002, 0f3F800000;
	fma.rn.f32 	%f1010, %f1009, %f1007, %f1001;
	setp.eq.b32 	%p176, %r491, 1;
	fma.rn.f32 	%f1060, %f1059, %f1057, 0fBEFFFFFF;
	fma.rn.f32 	%f1062, %f1057, %f1056, 0f00000000;
	fma.rn.f32 	%f1064, %f1063, %f1057, 0fBE2AAAA8;
	and.b32  	%r509, %r508, 1;
	shr.u32 	%r13, %r1, 1;
	shr.u32 	%r19, %r1, 3;
	abs.f32 	%f1098, %f1386;
	setp.gtu.f32 	%p213, %f1098, 0f7F800000;
	@%p213 bra 	LBB0_120;
// %bb.119:
	mov.b32 	%r518, %f165;
	and.b32  	%r519, %r518, -2147483648;
	mov.b32 	%r520, %f1386;
	or.b32  	%r521, %r519, %r520;
	mov.b32 	%f1386, %r521;
LBB0_120:                               // %__nv_fmodf.exit2420
	fma.rn.f32 	%f281, %f279, %f273, 0f3F800000;
	fma.rn.f32 	%f282, %f272, 0f40490FDB, %f280;
	setp.eq.b32 	%p8, %r264, 1;
	fma.rn.f32 	%f315, %f313, %f307, 0f3F800000;
	fma.rn.f32 	%f316, %f306, 0f40490FDB, %f314;
	setp.eq.b32 	%p14, %r271, 1;
	fma.rn.f32 	%f350, %f348, %f342, 0f3F800000;
	fma.rn.f32 	%f351, %f341, 0f40490FDB, %f349;
	setp.eq.b32 	%p20, %r282, 1;
	fma.rn.f32 	%f384, %f382, %f376, 0f3F800000;
	fma.rn.f32 	%f385, %f375, 0f40490FDB, %f383;
	setp.eq.b32 	%p26, %r289, 1;
	fma.rn.f32 	%f419, %f417, %f411, 0f3F800000;
	fma.rn.f32 	%f420, %f410, 0f40490FDB, %f418;
	setp.eq.b32 	%p32, %r300, 1;
	fma.rn.f32 	%f453, %f451, %f445, 0f3F800000;
	fma.rn.f32 	%f454, %f444, 0f40490FDB, %f452;
	setp.eq.b32 	%p38, %r307, 1;
	fma.rn.f32 	%f488, %f486, %f480, 0f3F800000;
	fma.rn.f32 	%f489, %f479, 0f40490FDB, %f487;
	setp.eq.b32 	%p44, %r318, 1;
	fma.rn.f32 	%f522, %f520, %f514, 0f3F800000;
	fma.rn.f32 	%f523, %f513, 0f40490FDB, %f521;
	setp.eq.b32 	%p50, %r325, 1;
	fma.rn.f32 	%f557, %f555, %f549, 0f3F800000;
	fma.rn.f32 	%f558, %f548, 0f40490FDB, %f556;
	setp.eq.b32 	%p56, %r336, 1;
	fma.rn.f32 	%f591, %f589, %f583, 0f3F800000;
	fma.rn.f32 	%f592, %f582, 0f40490FDB, %f590;
	setp.eq.b32 	%p62, %r343, 1;
	fma.rn.f32 	%f626, %f624, %f618, 0f3F800000;
	fma.rn.f32 	%f627, %f617, 0f40490FDB, %f625;
	setp.eq.b32 	%p68, %r354, 1;
	fma.rn.f32 	%f660, %f658, %f652, 0f3F800000;
	fma.rn.f32 	%f661, %f651, 0f40490FDB, %f659;
	setp.eq.b32 	%p74, %r361, 1;
	fma.rn.f32 	%f695, %f693, %f687, 0f3F800000;
	fma.rn.f32 	%f696, %f686, 0f40490FDB, %f694;
	setp.eq.b32 	%p80, %r372, 1;
	fma.rn.f32 	%f729, %f727, %f721, 0f3F800000;
	fma.rn.f32 	%f730, %f720, 0f40490FDB, %f728;
	setp.eq.b32 	%p86, %r379, 1;
	fma.rn.f32 	%f764, %f762, %f756, 0f3F800000;
	fma.rn.f32 	%f765, %f755, 0f40490FDB, %f763;
	setp.eq.b32 	%p92, %r390, 1;
	fma.rn.f32 	%f798, %f796, %f790, 0f3F800000;
	fma.rn.f32 	%f799, %f789, 0f40490FDB, %f797;
	setp.eq.b32 	%p98, %r397, 1;
	selp.f32 	%f850, %f845, %f849, %p116;
	and.b32  	%r415, %r413, 2;
	selp.f32 	%f903, %f898, %f902, %p136;
	and.b32  	%r444, %r442, 2;
	selp.f32 	%f958, %f953, %f957, %p156;
	and.b32  	%r463, %r461, 2;
	selp.f32 	%f1011, %f1006, %f1010, %p176;
	and.b32  	%r492, %r490, 2;
	fma.rn.f32 	%f1061, %f1060, %f1057, 0f3F800000;
	fma.rn.f32 	%f1065, %f1064, %f1062, %f1056;
	setp.eq.b32 	%p196, %r509, 1;
	add.f32 	%f1099, %f1386, %f1386;
	mov.b32 	%r528, %f1099;
	and.b32  	%r529, %r528, -2147483648;
	or.b32  	%r530, %r529, 1056964608;
	mov.b32 	%f1100, %r530;
	add.f32 	%f1101, %f1099, %f1100;
	cvt.rzi.f32.f32 	%f1102, %f1101;
	abs.f32 	%f1103, %f1099;
	setp.gt.f32 	%p214, %f1103, 0f4B000000;
	selp.f32 	%f1104, %f1099, %f1102, %p214;
	cvt.rzi.f32.f32 	%f1105, %f1099;
	setp.lt.f32 	%p215, %f1103, 0f3F000000;
	selp.f32 	%f1106, %f1105, %f1104, %p215;
	cvt.rzi.s32.f32 	%r531, %f1106;
	fma.rn.f32 	%f1107, %f1106, 0fBF000000, %f1386;
	mul.f32 	%f1108, %f1107, 0f34222169;
	fma.rn.f32 	%f1109, %f1107, 0f40490FDA, %f1108;
	mul.f32 	%f1110, %f1109, %f1109;
	fma.rn.f32 	%f1111, %f1110, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f1112, %f1111, %f1110, 0f3D2AAABB;
	fma.rn.f32 	%f1113, %f1112, %f1110, 0fBEFFFFFF;
	fma.rn.f32 	%f1114, %f1113, %f1110, 0f3F800000;
	fma.rn.f32 	%f1115, %f1110, %f1109, 0f00000000;
	fma.rn.f32 	%f1116, %f1110, 0fB94D4153, 0f3C0885E4;
	fma.rn.f32 	%f1117, %f1116, %f1110, 0fBE2AAAA8;
	fma.rn.f32 	%f1118, %f1117, %f1115, %f1109;
	and.b32  	%r532, %r531, 1;
	setp.eq.b32 	%p216, %r532, 1;
	and.b32  	%r536, %r19, 2;
	and.b32  	%r537, %r13, 4;
	or.b32  	%r538, %r17, %r536;
	or.b32  	%r101, %r538, %r537;
	mul.lo.s32 	%r102, %r81, %r101;
	cvt.rn.f32.s32 	%f1132, %r102;
	mov.f32 	%f1133, 0f41800000;
	div.approx.f32 	%f182, %f1132, %f1133;
	abs.f32 	%f1390, %f182;
	setp.lt.f32 	%p221, %f1390, 0f40000000;
	@%p221 bra 	LBB0_132;
// %bb.121:
	setp.gtu.f32 	%p222, %f1390, 0f4B800000;
	@%p222 bra 	LBB0_128;
	bra.uni 	LBB0_122;
LBB0_128:
	mov.b32 	%r104, %f1390;
	and.b32  	%r539, %r104, 8388607;
	or.b32  	%r16159, %r539, 1065353216;
	mov.b32 	%f1389, %r16159;
	add.s32 	%r540, %r104, -1073741824;
	and.b32  	%r16160, %r540, -8388608;
	setp.eq.s32 	%p228, %r16160, 0;
	@%p228 bra 	LBB0_131;
// %bb.129:                             // %__nv_fmaf_rn.exit4.i.i.i2459.preheader
	mov.f32 	%f1143, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1142,%f1143;
	// end inline asm
LBB0_130:                               // %__nv_fmaf_rn.exit4.i.i.i2459
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r541, %r16160, 192937984;
	add.s32 	%r542, %r541, %r16159;
	mov.b32 	%f1144, %r542;
	mul.f32 	%f1145, %f1142, %f1144;
	sub.f32 	%f1146, %f1144, %f1145;
	fma.rn.f32 	%f1147, %f1146, %f1142, %f1145;
	sub.f32 	%f1148, %f1144, %f1147;
	fma.rz.f32 	%f1149, %f1148, %f1142, %f1147;
	cvt.rzi.f32.f32 	%f1150, %f1149;
	sub.f32 	%f1389, %f1144, %f1150;
	sub.s32 	%r16160, %r16160, %r541;
	mov.b32 	%r16159, %f1389;
	setp.ne.s32 	%p229, %r16160, 0;
	setp.ne.s32 	%p230, %r16159, 0;
	and.pred  	%p231, %p229, %p230;
	@%p231 bra 	LBB0_130;
LBB0_131:                               // %__internal_fmodf_slowpath_mod.exit.i.i2461
	setp.gt.u32 	%p232, %r104, 2139095039;
	selp.f32 	%f1151, 0f7FFFFFFF, 0f4B800000, %p232;
	mul.f32 	%f1152, %f1389, 0f34000000;
	mul.f32 	%f1390, %f1151, %f1152;
	bra.uni 	LBB0_132;
LBB0_122:                               // %__nv_fast_fdividef.exit.i.i.i2431
	div.approx.f32 	%f1135, %f1390, %f255;
	cvt.rzi.f32.f32 	%f1388, %f1135;
	fma.rn.f32 	%f185, %f1388, 0fC0000000, %f1390;
	mov.b32 	%r103, %f185;
	setp.lt.u32 	%p223, %r103, 1073741824;
	@%p223 bra 	LBB0_127;
// %bb.123:
	setp.lt.u32 	%p224, %r103, -2147483647;
	@%p224 bra 	LBB0_125;
// %bb.124:
	add.f32 	%f1140, %f1388, 0fBF800000;
	setp.lt.f32 	%p227, %f185, 0fC0000000;
	add.f32 	%f1141, %f1140, 0fBF800000;
	selp.f32 	%f1388, %f1141, %f1140, %p227;
	bra.uni 	LBB0_127;
LBB0_125:
	add.f32 	%f1388, %f1388, 0f3F800000;
	setp.ltu.f32 	%p225, %f185, 0f40800000;
	@%p225 bra 	LBB0_127;
// %bb.126:                             // %__nv_fmaf_rn.exit.i.i.i2436
	add.f32 	%f1136, %f1388, 0f3F800000;
	fma.rn.f32 	%f1138, %f255, 0fC0400000, %f185;
	setp.ge.f32 	%p226, %f1138, 0f00000000;
	add.f32 	%f1139, %f1136, 0f3F800000;
	selp.f32 	%f1388, %f1139, %f1136, %p226;
LBB0_127:                               // %__internal_fmodf_fastpath_quot.exit.i.i2440
	fma.rn.f32 	%f1390, %f1388, 0fC0000000, %f1390;
LBB0_132:                               // %__internal_fmodf_kernel.exit.i2465
	shl.b32 	%r7, %r1, 2;
	and.b32  	%r245, %r8, 8;
	and.b32  	%r247, %r1, 18;
	selp.f32 	%f283, %f281, %f282, %p8;
	and.b32  	%r265, %r263, 2;
	mov.f32 	%f284, 0f00000000;
	selp.f32 	%f317, %f315, %f316, %p14;
	and.b32  	%r272, %r270, 2;
	selp.f32 	%f352, %f350, %f351, %p20;
	and.b32  	%r283, %r281, 2;
	selp.f32 	%f386, %f384, %f385, %p26;
	and.b32  	%r290, %r288, 2;
	selp.f32 	%f421, %f419, %f420, %p32;
	and.b32  	%r301, %r299, 2;
	selp.f32 	%f455, %f453, %f454, %p38;
	and.b32  	%r308, %r306, 2;
	selp.f32 	%f490, %f488, %f489, %p44;
	and.b32  	%r319, %r317, 2;
	selp.f32 	%f524, %f522, %f523, %p50;
	and.b32  	%r326, %r324, 2;
	selp.f32 	%f559, %f557, %f558, %p56;
	and.b32  	%r337, %r335, 2;
	selp.f32 	%f593, %f591, %f592, %p62;
	and.b32  	%r344, %r342, 2;
	selp.f32 	%f628, %f626, %f627, %p68;
	and.b32  	%r355, %r353, 2;
	selp.f32 	%f662, %f660, %f661, %p74;
	and.b32  	%r362, %r360, 2;
	selp.f32 	%f697, %f695, %f696, %p80;
	and.b32  	%r373, %r371, 2;
	selp.f32 	%f731, %f729, %f730, %p86;
	and.b32  	%r380, %r378, 2;
	selp.f32 	%f766, %f764, %f765, %p92;
	and.b32  	%r391, %r389, 2;
	selp.f32 	%f800, %f798, %f799, %p98;
	and.b32  	%r398, %r396, 2;
	setp.eq.s32 	%p117, %r415, 0;
	neg.f32 	%f852, %f850;
	add.s32 	%r416, %r413, 1;
	cvt.rzi.f32.f32 	%f857, %f1366;
	setp.eq.s32 	%p137, %r444, 0;
	neg.f32 	%f905, %f903;
	add.s32 	%r445, %r442, 1;
	cvt.rzi.f32.f32 	%f910, %f1370;
	setp.eq.s32 	%p157, %r463, 0;
	neg.f32 	%f960, %f958;
	add.s32 	%r464, %r461, 1;
	cvt.rzi.f32.f32 	%f965, %f1374;
	setp.eq.s32 	%p177, %r492, 0;
	neg.f32 	%f1013, %f1011;
	add.s32 	%r493, %r490, 1;
	cvt.rzi.f32.f32 	%f1018, %f1378;
	selp.f32 	%f1066, %f1061, %f1065, %p196;
	and.b32  	%r510, %r508, 2;
	selp.f32 	%f1119, %f1114, %f1118, %p216;
	and.b32  	%r533, %r531, 2;
	abs.f32 	%f1153, %f1390;
	setp.gtu.f32 	%p233, %f1153, 0f7F800000;
	@%p233 bra 	LBB0_134;
// %bb.133:
	mov.b32 	%r543, %f182;
	and.b32  	%r544, %r543, -2147483648;
	mov.b32 	%r545, %f1390;
	or.b32  	%r546, %r544, %r545;
	mov.b32 	%f1390, %r546;
LBB0_134:                               // %__nv_fmodf.exit2466
	and.b32  	%r244, %r7, 4;
	or.b32  	%r248, %r247, %r245;
	setp.eq.s32 	%p9, %r265, 0;
	sub.f32 	%f285, %f284, %f283;
	setp.eq.s32 	%p15, %r272, 0;
	sub.f32 	%f319, %f284, %f317;
	setp.eq.s32 	%p21, %r283, 0;
	sub.f32 	%f354, %f284, %f352;
	setp.eq.s32 	%p27, %r290, 0;
	sub.f32 	%f388, %f284, %f386;
	setp.eq.s32 	%p33, %r301, 0;
	sub.f32 	%f423, %f284, %f421;
	setp.eq.s32 	%p39, %r308, 0;
	sub.f32 	%f457, %f284, %f455;
	setp.eq.s32 	%p45, %r319, 0;
	sub.f32 	%f492, %f284, %f490;
	setp.eq.s32 	%p51, %r326, 0;
	sub.f32 	%f526, %f284, %f524;
	setp.eq.s32 	%p57, %r337, 0;
	sub.f32 	%f561, %f284, %f559;
	setp.eq.s32 	%p63, %r344, 0;
	sub.f32 	%f595, %f284, %f593;
	setp.eq.s32 	%p69, %r355, 0;
	sub.f32 	%f630, %f284, %f628;
	setp.eq.s32 	%p75, %r362, 0;
	sub.f32 	%f664, %f284, %f662;
	setp.eq.s32 	%p81, %r373, 0;
	sub.f32 	%f699, %f284, %f697;
	setp.eq.s32 	%p87, %r380, 0;
	sub.f32 	%f733, %f284, %f731;
	setp.eq.s32 	%p93, %r391, 0;
	sub.f32 	%f768, %f284, %f766;
	setp.eq.s32 	%p99, %r398, 0;
	sub.f32 	%f802, %f284, %f800;
	selp.f32 	%f851, %f849, %f845, %p116;
	selp.f32 	%f853, %f850, %f852, %p117;
	and.b32  	%r417, %r416, 2;
	setp.eq.f32 	%p119, %f857, %f1366;
	mul.f32 	%f858, %f1366, 0f00000000;
	selp.f32 	%f904, %f902, %f898, %p136;
	selp.f32 	%f906, %f903, %f905, %p137;
	and.b32  	%r446, %r445, 2;
	setp.eq.f32 	%p139, %f910, %f1370;
	mul.f32 	%f911, %f1370, 0f00000000;
	selp.f32 	%f959, %f957, %f953, %p156;
	selp.f32 	%f961, %f958, %f960, %p157;
	and.b32  	%r465, %r464, 2;
	setp.eq.f32 	%p159, %f965, %f1374;
	mul.f32 	%f966, %f1374, 0f00000000;
	selp.f32 	%f1012, %f1010, %f1006, %p176;
	selp.f32 	%f1014, %f1011, %f1013, %p177;
	and.b32  	%r494, %r493, 2;
	setp.eq.f32 	%p179, %f1018, %f1378;
	mul.f32 	%f1019, %f1378, 0f00000000;
	setp.eq.s32 	%p197, %r510, 0;
	neg.f32 	%f1068, %f1066;
	add.s32 	%r511, %r508, 1;
	cvt.rzi.f32.f32 	%f1073, %f1382;
	setp.eq.s32 	%p217, %r533, 0;
	neg.f32 	%f1121, %f1119;
	add.s32 	%r534, %r531, 1;
	cvt.rzi.f32.f32 	%f1126, %f1386;
	add.f32 	%f1154, %f1390, %f1390;
	mov.b32 	%r547, %f1154;
	and.b32  	%r548, %r547, -2147483648;
	or.b32  	%r549, %r548, 1056964608;
	mov.b32 	%f1155, %r549;
	add.f32 	%f1156, %f1154, %f1155;
	cvt.rzi.f32.f32 	%f1157, %f1156;
	abs.f32 	%f1158, %f1154;
	setp.gt.f32 	%p234, %f1158, 0f4B000000;
	selp.f32 	%f1159, %f1154, %f1157, %p234;
	cvt.rzi.f32.f32 	%f1160, %f1154;
	setp.lt.f32 	%p235, %f1158, 0f3F000000;
	selp.f32 	%f1161, %f1160, %f1159, %p235;
	cvt.rzi.s32.f32 	%r550, %f1161;
	fma.rn.f32 	%f1162, %f1161, 0fBF000000, %f1390;
	mul.f32 	%f1163, %f1162, 0f34222169;
	fma.rn.f32 	%f1164, %f1162, 0f40490FDA, %f1163;
	mul.f32 	%f1165, %f1164, %f1164;
	fma.rn.f32 	%f1166, %f1165, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f1167, %f1166, %f1165, 0f3D2AAABB;
	fma.rn.f32 	%f1168, %f1167, %f1165, 0fBEFFFFFF;
	fma.rn.f32 	%f1169, %f1168, %f1165, 0f3F800000;
	fma.rn.f32 	%f1170, %f1165, %f1164, 0f00000000;
	fma.rn.f32 	%f1171, %f1165, 0fB94D4153, 0f3C0885E4;
	fma.rn.f32 	%f1172, %f1171, %f1165, 0fBE2AAAA8;
	fma.rn.f32 	%f1173, %f1172, %f1170, %f1164;
	and.b32  	%r551, %r550, 1;
	setp.eq.b32 	%p236, %r551, 1;
	selp.f32 	%f1174, %f1169, %f1173, %p236;
	selp.f32 	%f1175, %f1173, %f1169, %p236;
	and.b32  	%r552, %r550, 2;
	setp.eq.s32 	%p237, %r552, 0;
	neg.f32 	%f1176, %f1174;
	selp.f32 	%f1177, %f1174, %f1176, %p237;
	add.s32 	%r553, %r550, 1;
	and.b32  	%r554, %r553, 2;
	cvt.rzi.f32.f32 	%f1181, %f1390;
	setp.eq.f32 	%p239, %f1181, %f1390;
	mul.f32 	%f1182, %f1390, 0f00000000;
	shl.b32 	%r555, %r101, 3;
	sub.s32 	%r556, %r102, %r555;
	cvt.rn.f32.s32 	%f1185, %r556;
	div.approx.f32 	%f201, %f1185, %f1133;
	abs.f32 	%f1394, %f201;
	setp.lt.f32 	%p241, %f1394, 0f40000000;
	@%p241 bra 	LBB0_146;
// %bb.135:
	setp.gtu.f32 	%p242, %f1394, 0f4B800000;
	@%p242 bra 	LBB0_142;
	bra.uni 	LBB0_136;
LBB0_142:
	mov.b32 	%r112, %f1394;
	and.b32  	%r557, %r112, 8388607;
	or.b32  	%r16161, %r557, 1065353216;
	mov.b32 	%f1393, %r16161;
	add.s32 	%r558, %r112, -1073741824;
	and.b32  	%r16162, %r558, -8388608;
	setp.eq.s32 	%p248, %r16162, 0;
	@%p248 bra 	LBB0_145;
// %bb.143:                             // %__nv_fmaf_rn.exit4.i.i.i2505.preheader
	mov.f32 	%f1196, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1195,%f1196;
	// end inline asm
LBB0_144:                               // %__nv_fmaf_rn.exit4.i.i.i2505
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r559, %r16162, 192937984;
	add.s32 	%r560, %r559, %r16161;
	mov.b32 	%f1197, %r560;
	mul.f32 	%f1198, %f1195, %f1197;
	sub.f32 	%f1199, %f1197, %f1198;
	fma.rn.f32 	%f1200, %f1199, %f1195, %f1198;
	sub.f32 	%f1201, %f1197, %f1200;
	fma.rz.f32 	%f1202, %f1201, %f1195, %f1200;
	cvt.rzi.f32.f32 	%f1203, %f1202;
	sub.f32 	%f1393, %f1197, %f1203;
	sub.s32 	%r16162, %r16162, %r559;
	mov.b32 	%r16161, %f1393;
	setp.ne.s32 	%p249, %r16162, 0;
	setp.ne.s32 	%p250, %r16161, 0;
	and.pred  	%p251, %p249, %p250;
	@%p251 bra 	LBB0_144;
LBB0_145:                               // %__internal_fmodf_slowpath_mod.exit.i.i2507
	setp.gt.u32 	%p252, %r112, 2139095039;
	selp.f32 	%f1204, 0f7FFFFFFF, 0f4B800000, %p252;
	mul.f32 	%f1205, %f1393, 0f34000000;
	mul.f32 	%f1394, %f1204, %f1205;
	bra.uni 	LBB0_146;
LBB0_136:                               // %__nv_fast_fdividef.exit.i.i.i2477
	div.approx.f32 	%f1188, %f1394, %f255;
	cvt.rzi.f32.f32 	%f1392, %f1188;
	fma.rn.f32 	%f204, %f1392, 0fC0000000, %f1394;
	mov.b32 	%r111, %f204;
	setp.lt.u32 	%p243, %r111, 1073741824;
	@%p243 bra 	LBB0_141;
// %bb.137:
	setp.lt.u32 	%p244, %r111, -2147483647;
	@%p244 bra 	LBB0_139;
// %bb.138:
	add.f32 	%f1193, %f1392, 0fBF800000;
	setp.lt.f32 	%p247, %f204, 0fC0000000;
	add.f32 	%f1194, %f1193, 0fBF800000;
	selp.f32 	%f1392, %f1194, %f1193, %p247;
	bra.uni 	LBB0_141;
LBB0_139:
	add.f32 	%f1392, %f1392, 0f3F800000;
	setp.ltu.f32 	%p245, %f204, 0f40800000;
	@%p245 bra 	LBB0_141;
// %bb.140:                             // %__nv_fmaf_rn.exit.i.i.i2482
	add.f32 	%f1189, %f1392, 0f3F800000;
	fma.rn.f32 	%f1191, %f255, 0fC0400000, %f204;
	setp.ge.f32 	%p246, %f1191, 0f00000000;
	add.f32 	%f1192, %f1189, 0f3F800000;
	selp.f32 	%f1392, %f1192, %f1189, %p246;
LBB0_141:                               // %__internal_fmodf_fastpath_quot.exit.i.i2486
	fma.rn.f32 	%f1394, %f1392, 0fC0000000, %f1394;
LBB0_146:                               // %__internal_fmodf_kernel.exit.i2511
	and.b32  	%r246, %r7, 32;
	or.b32  	%r249, %r248, %r244;
	selp.f32 	%f286, %f283, %f285, %p9;
	selp.f32 	%f320, %f317, %f319, %p15;
	selp.f32 	%f355, %f352, %f354, %p21;
	selp.f32 	%f389, %f386, %f388, %p27;
	selp.f32 	%f424, %f421, %f423, %p33;
	selp.f32 	%f458, %f455, %f457, %p39;
	selp.f32 	%f493, %f490, %f492, %p45;
	selp.f32 	%f527, %f524, %f526, %p51;
	selp.f32 	%f562, %f559, %f561, %p57;
	selp.f32 	%f596, %f593, %f595, %p63;
	selp.f32 	%f631, %f628, %f630, %p69;
	selp.f32 	%f665, %f662, %f664, %p75;
	selp.f32 	%f700, %f697, %f699, %p81;
	selp.f32 	%f734, %f731, %f733, %p87;
	selp.f32 	%f769, %f766, %f768, %p93;
	selp.f32 	%f803, %f800, %f802, %p99;
	setp.eq.s32 	%p118, %r417, 0;
	sub.f32 	%f855, %f284, %f851;
	selp.f32 	%f91, %f858, %f853, %p119;
	abs.f32 	%f859, %f1366;
	setp.eq.s32 	%p138, %r446, 0;
	sub.f32 	%f908, %f284, %f904;
	selp.f32 	%f912, %f911, %f906, %p139;
	abs.f32 	%f913, %f1370;
	setp.eq.s32 	%p158, %r465, 0;
	sub.f32 	%f963, %f284, %f959;
	selp.f32 	%f127, %f966, %f961, %p159;
	abs.f32 	%f967, %f1374;
	setp.eq.s32 	%p178, %r494, 0;
	sub.f32 	%f1016, %f284, %f1012;
	selp.f32 	%f1020, %f1019, %f1014, %p179;
	abs.f32 	%f1021, %f1378;
	selp.f32 	%f1067, %f1065, %f1061, %p196;
	selp.f32 	%f1069, %f1066, %f1068, %p197;
	and.b32  	%r512, %r511, 2;
	setp.eq.f32 	%p199, %f1073, %f1382;
	mul.f32 	%f1074, %f1382, 0f00000000;
	selp.f32 	%f1120, %f1118, %f1114, %p216;
	selp.f32 	%f1122, %f1119, %f1121, %p217;
	and.b32  	%r535, %r534, 2;
	setp.eq.f32 	%p219, %f1126, %f1386;
	mul.f32 	%f1127, %f1386, 0f00000000;
	setp.eq.s32 	%p238, %r554, 0;
	sub.f32 	%f1179, %f284, %f1175;
	selp.f32 	%f199, %f1182, %f1177, %p239;
	abs.f32 	%f1183, %f1390;
	and.b32  	%r9, %r1, 16;
	abs.f32 	%f1206, %f1394;
	setp.gtu.f32 	%p253, %f1206, 0f7F800000;
	@%p253 bra 	LBB0_148;
// %bb.147:
	mov.b32 	%r561, %f201;
	and.b32  	%r562, %r561, -2147483648;
	mov.b32 	%r563, %f1394;
	or.b32  	%r564, %r562, %r563;
	mov.b32 	%f1394, %r564;
LBB0_148:                               // %__nv_fmodf.exit2512
	or.b32  	%r250, %r249, %r246;
	mul.f32 	%f2, %f286, %f286;
	mul.f32 	%f7, %f320, %f320;
	mul.f32 	%f11, %f355, %f355;
	mul.f32 	%f16, %f389, %f389;
	mul.f32 	%f20, %f424, %f424;
	mul.f32 	%f25, %f458, %f458;
	mul.f32 	%f29, %f493, %f493;
	mul.f32 	%f34, %f527, %f527;
	mul.f32 	%f38, %f562, %f562;
	mul.f32 	%f43, %f596, %f596;
	mul.f32 	%f47, %f631, %f631;
	mul.f32 	%f52, %f665, %f665;
	mul.f32 	%f56, %f700, %f700;
	mul.f32 	%f61, %f734, %f734;
	mul.f32 	%f65, %f769, %f769;
	mul.f32 	%f70, %f803, %f803;
	selp.f32 	%f856, %f851, %f855, %p118;
	setp.gt.f32 	%p120, %f859, 0f4B800000;
	add.f32 	%f860, %f91, 0f3F800000;
	selp.f32 	%f909, %f904, %f908, %p138;
	setp.gt.f32 	%p140, %f913, 0f4B800000;
	add.f32 	%f914, %f912, 0f3F800000;
	selp.f32 	%f964, %f959, %f963, %p158;
	setp.gt.f32 	%p160, %f967, 0f4B800000;
	add.f32 	%f968, %f127, 0f3F800000;
	selp.f32 	%f1017, %f1012, %f1016, %p178;
	setp.gt.f32 	%p180, %f1021, 0f4B800000;
	add.f32 	%f1022, %f1020, 0f3F800000;
	setp.eq.s32 	%p198, %r512, 0;
	sub.f32 	%f1071, %f284, %f1067;
	selp.f32 	%f163, %f1074, %f1069, %p199;
	abs.f32 	%f1075, %f1382;
	setp.eq.s32 	%p218, %r535, 0;
	sub.f32 	%f1124, %f284, %f1120;
	selp.f32 	%f1128, %f1127, %f1122, %p219;
	abs.f32 	%f1129, %f1386;
	selp.f32 	%f1180, %f1175, %f1179, %p238;
	setp.gt.f32 	%p240, %f1183, 0f4B800000;
	add.f32 	%f1184, %f199, 0f3F800000;
	add.f32 	%f1207, %f1394, %f1394;
	mov.b32 	%r577, %f1207;
	and.b32  	%r578, %r577, -2147483648;
	or.b32  	%r579, %r578, 1056964608;
	mov.b32 	%f1208, %r579;
	add.f32 	%f1209, %f1207, %f1208;
	cvt.rzi.f32.f32 	%f1210, %f1209;
	abs.f32 	%f1211, %f1207;
	setp.gt.f32 	%p254, %f1211, 0f4B000000;
	selp.f32 	%f1212, %f1207, %f1210, %p254;
	cvt.rzi.f32.f32 	%f1213, %f1207;
	setp.lt.f32 	%p255, %f1211, 0f3F000000;
	selp.f32 	%f1214, %f1213, %f1212, %p255;
	cvt.rzi.s32.f32 	%r580, %f1214;
	fma.rn.f32 	%f1215, %f1214, 0fBF000000, %f1394;
	mul.f32 	%f1216, %f1215, 0f34222169;
	fma.rn.f32 	%f1217, %f1215, 0f40490FDA, %f1216;
	mul.f32 	%f1218, %f1217, %f1217;
	fma.rn.f32 	%f1219, %f1218, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f1220, %f1219, %f1218, 0f3D2AAABB;
	fma.rn.f32 	%f1221, %f1220, %f1218, 0fBEFFFFFF;
	fma.rn.f32 	%f1222, %f1221, %f1218, 0f3F800000;
	fma.rn.f32 	%f1223, %f1218, %f1217, 0f00000000;
	fma.rn.f32 	%f1224, %f1218, 0fB94D4153, 0f3C0885E4;
	fma.rn.f32 	%f1225, %f1224, %f1218, 0fBE2AAAA8;
	fma.rn.f32 	%f1226, %f1225, %f1223, %f1217;
	and.b32  	%r581, %r580, 1;
	setp.eq.b32 	%p256, %r581, 1;
	selp.f32 	%f1227, %f1222, %f1226, %p256;
	selp.f32 	%f1228, %f1226, %f1222, %p256;
	and.b32  	%r582, %r580, 2;
	setp.eq.s32 	%p257, %r582, 0;
	neg.f32 	%f1229, %f1227;
	selp.f32 	%f1230, %f1227, %f1229, %p257;
	add.s32 	%r583, %r580, 1;
	and.b32  	%r584, %r583, 2;
	setp.eq.s32 	%p258, %r584, 0;
	sub.f32 	%f1232, %f284, %f1228;
	selp.f32 	%f1233, %f1228, %f1232, %p258;
	cvt.rzi.f32.f32 	%f1234, %f1394;
	setp.eq.f32 	%p259, %f1234, %f1394;
	mul.f32 	%f1235, %f1394, 0f00000000;
	selp.f32 	%f1236, %f1235, %f1230, %p259;
	abs.f32 	%f1237, %f1394;
	setp.gt.f32 	%p260, %f1237, 0f4B800000;
	add.f32 	%f1238, %f1236, 0f3F800000;
	cvt.u16.u32 	%rs1, %r1;
	shr.u16 	%rs2, %rs1, 8;
	shl.b16 	%rs3, %rs1, 8;
	or.b16  	%rs4, %rs3, %rs2;
	shl.b16 	%rs5, %rs4, 4;
	shr.u16 	%rs6, %rs4, 4;
	and.b16  	%rs7, %rs6, 3840;
	or.b16  	%rs8, %rs7, %rs5;
	and.b16  	%rs9, %rs8, 13107;
	shl.b16 	%rs10, %rs9, 2;
	shr.u16 	%rs11, %rs8, 2;
	and.b16  	%rs12, %rs11, 13107;
	or.b16  	%rs13, %rs12, %rs10;
	and.b16  	%rs14, %rs13, 20480;
	shl.b16 	%rs15, %rs14, 1;
	shr.u16 	%rs16, %rs13, 1;
	and.b16  	%rs17, %rs16, 16384;
	or.b16  	%rs18, %rs17, %rs15;
	shr.u16 	%rs19, %rs18, 13;
	add.s32 	%r586, %r252, %r9;
	neg.s32 	%r587, %r586;
	mad.lo.s32 	%r588, %r20, -32, %r587;
	or.b16  	%rs20, %rs19, 1;
	cvt.u32.u16 	%r589, %rs20;
	and.b16  	%rs21, %rs19, 6;
	cvt.u32.u16 	%r590, %rs21;
	sub.s32 	%r591, %r588, %r590;
	shl.b32 	%r592, %r591, 1;
	cvt.rn.f32.s32 	%f1240, %r592;
	div.approx.f32 	%f218, %f1240, %f287;
	abs.f32 	%f1398, %f218;
	setp.lt.f32 	%p261, %f1398, 0f40000000;
	@%p261 bra 	LBB0_160;
// %bb.149:
	setp.gtu.f32 	%p262, %f1398, 0f4B800000;
	@%p262 bra 	LBB0_156;
	bra.uni 	LBB0_150;
LBB0_156:
	mov.b32 	%r125, %f1398;
	and.b32  	%r593, %r125, 8388607;
	or.b32  	%r16163, %r593, 1065353216;
	mov.b32 	%f1397, %r16163;
	add.s32 	%r594, %r125, -1073741824;
	and.b32  	%r16164, %r594, -8388608;
	setp.eq.s32 	%p268, %r16164, 0;
	@%p268 bra 	LBB0_159;
// %bb.157:                             // %__nv_fmaf_rn.exit4.i.i.i2551.preheader
	mov.f32 	%f1251, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1250,%f1251;
	// end inline asm
LBB0_158:                               // %__nv_fmaf_rn.exit4.i.i.i2551
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r595, %r16164, 192937984;
	add.s32 	%r596, %r595, %r16163;
	mov.b32 	%f1252, %r596;
	mul.f32 	%f1253, %f1250, %f1252;
	sub.f32 	%f1254, %f1252, %f1253;
	fma.rn.f32 	%f1255, %f1254, %f1250, %f1253;
	sub.f32 	%f1256, %f1252, %f1255;
	fma.rz.f32 	%f1257, %f1256, %f1250, %f1255;
	cvt.rzi.f32.f32 	%f1258, %f1257;
	sub.f32 	%f1397, %f1252, %f1258;
	sub.s32 	%r16164, %r16164, %r595;
	mov.b32 	%r16163, %f1397;
	setp.ne.s32 	%p269, %r16164, 0;
	setp.ne.s32 	%p270, %r16163, 0;
	and.pred  	%p271, %p269, %p270;
	@%p271 bra 	LBB0_158;
LBB0_159:                               // %__internal_fmodf_slowpath_mod.exit.i.i2553
	setp.gt.u32 	%p272, %r125, 2139095039;
	selp.f32 	%f1259, 0f7FFFFFFF, 0f4B800000, %p272;
	mul.f32 	%f1260, %f1397, 0f34000000;
	mul.f32 	%f1398, %f1259, %f1260;
	bra.uni 	LBB0_160;
LBB0_150:                               // %__nv_fast_fdividef.exit.i.i.i2523
	div.approx.f32 	%f1243, %f1398, %f255;
	cvt.rzi.f32.f32 	%f1396, %f1243;
	fma.rn.f32 	%f221, %f1396, 0fC0000000, %f1398;
	mov.b32 	%r124, %f221;
	setp.lt.u32 	%p263, %r124, 1073741824;
	@%p263 bra 	LBB0_155;
// %bb.151:
	setp.lt.u32 	%p264, %r124, -2147483647;
	@%p264 bra 	LBB0_153;
// %bb.152:
	add.f32 	%f1248, %f1396, 0fBF800000;
	setp.lt.f32 	%p267, %f221, 0fC0000000;
	add.f32 	%f1249, %f1248, 0fBF800000;
	selp.f32 	%f1396, %f1249, %f1248, %p267;
	bra.uni 	LBB0_155;
LBB0_153:
	add.f32 	%f1396, %f1396, 0f3F800000;
	setp.ltu.f32 	%p265, %f221, 0f40800000;
	@%p265 bra 	LBB0_155;
// %bb.154:                             // %__nv_fmaf_rn.exit.i.i.i2528
	add.f32 	%f1244, %f1396, 0f3F800000;
	fma.rn.f32 	%f1246, %f255, 0fC0400000, %f221;
	setp.ge.f32 	%p266, %f1246, 0f00000000;
	add.f32 	%f1247, %f1244, 0f3F800000;
	selp.f32 	%f1396, %f1247, %f1244, %p266;
LBB0_155:                               // %__internal_fmodf_fastpath_quot.exit.i.i2532
	fma.rn.f32 	%f1398, %f1396, 0fC0000000, %f1398;
LBB0_160:                               // %__internal_fmodf_kernel.exit.i2557
	shr.u32 	%r10, %r250, 1;
	mul.f32 	%f290, %f2, 0f3B8B2FF9;
	mul.f32 	%f324, %f7, 0f3B8B2FF9;
	mul.f32 	%f359, %f11, 0f3B8B2FF9;
	mul.f32 	%f393, %f16, 0f3B8B2FF9;
	mul.f32 	%f428, %f20, 0f3B8B2FF9;
	mul.f32 	%f462, %f25, 0f3B8B2FF9;
	mul.f32 	%f497, %f29, 0f3B8B2FF9;
	mul.f32 	%f531, %f34, 0f3B8B2FF9;
	mul.f32 	%f566, %f38, 0f3B8B2FF9;
	mul.f32 	%f600, %f43, 0f3B8B2FF9;
	mul.f32 	%f635, %f47, 0f3B8B2FF9;
	mul.f32 	%f669, %f52, 0f3B8B2FF9;
	mul.f32 	%f704, %f56, 0f3B8B2FF9;
	mul.f32 	%f738, %f61, 0f3B8B2FF9;
	mul.f32 	%f773, %f65, 0f3B8B2FF9;
	mul.f32 	%f806, %f70, 0f3B8B2FF9;
	selp.f32 	%f92, %f860, %f856, %p120;
	selp.f32 	%f915, %f914, %f909, %p140;
	selp.f32 	%f128, %f968, %f964, %p160;
	selp.f32 	%f1023, %f1022, %f1017, %p180;
	selp.f32 	%f1072, %f1067, %f1071, %p198;
	setp.gt.f32 	%p200, %f1075, 0f4B800000;
	add.f32 	%f1076, %f163, 0f3F800000;
	selp.f32 	%f1125, %f1120, %f1124, %p218;
	setp.gt.f32 	%p220, %f1129, 0f4B800000;
	add.f32 	%f1130, %f1128, 0f3F800000;
	selp.f32 	%f200, %f1184, %f1180, %p240;
	selp.f32 	%f1239, %f1238, %f1233, %p260;
	sub.s32 	%r123, %r588, %r589;
	abs.f32 	%f1261, %f1398;
	setp.gtu.f32 	%p273, %f1261, 0f7F800000;
	@%p273 bra 	LBB0_162;
// %bb.161:
	mov.b32 	%r597, %f218;
	and.b32  	%r598, %r597, -2147483648;
	mov.b32 	%r599, %f1398;
	or.b32  	%r600, %r598, %r599;
	mov.b32 	%f1398, %r600;
LBB0_162:                               // %__nv_fmodf.exit2558
	ld.param.u64 	%rd1, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_2];
	mul.wide.u32 	%rd49, %r10, 4;
	mul.f32 	%f6, %f290, %f1348;
	mul.f32 	%f325, %f324, %f1349;
	mul.f32 	%f15, %f359, %f1350;
	mul.f32 	%f394, %f393, %f1351;
	mul.f32 	%f24, %f428, %f1352;
	mul.f32 	%f463, %f462, %f1353;
	mul.f32 	%f33, %f497, %f1354;
	mul.f32 	%f532, %f531, %f1355;
	mul.f32 	%f42, %f566, %f1356;
	mul.f32 	%f601, %f600, %f1357;
	mul.f32 	%f51, %f635, %f1358;
	mul.f32 	%f670, %f669, %f1359;
	mul.f32 	%f60, %f704, %f1360;
	mul.f32 	%f739, %f738, %f1361;
	mul.f32 	%f69, %f773, %f1362;
	mul.f32 	%f807, %f806, %f1363;
	mov.b32 	%r429, %f915;
	mov.b32 	%r428, %f92;
	mov.b32 	%r435, %f912;
	mov.b32 	%r434, %f91;
	mov.b32 	%r477, %f1023;
	mov.b32 	%r476, %f128;
	mov.b32 	%r483, %f1020;
	mov.b32 	%r482, %f127;
	selp.f32 	%f164, %f1076, %f1072, %p200;
	selp.f32 	%f1131, %f1130, %f1125, %p220;
	mov.b32 	%r567, %f1239;
	mov.b32 	%r566, %f200;
	mov.b32 	%r573, %f1236;
	mov.b32 	%r572, %f199;
	add.f32 	%f1262, %f1398, %f1398;
	mov.b32 	%r601, %f1262;
	and.b32  	%r602, %r601, -2147483648;
	or.b32  	%r603, %r602, 1056964608;
	mov.b32 	%f1263, %r603;
	add.f32 	%f1264, %f1262, %f1263;
	cvt.rzi.f32.f32 	%f1265, %f1264;
	abs.f32 	%f1266, %f1262;
	setp.gt.f32 	%p274, %f1266, 0f4B000000;
	selp.f32 	%f1267, %f1262, %f1265, %p274;
	cvt.rzi.f32.f32 	%f1268, %f1262;
	setp.lt.f32 	%p275, %f1266, 0f3F000000;
	selp.f32 	%f1269, %f1268, %f1267, %p275;
	cvt.rzi.s32.f32 	%r604, %f1269;
	fma.rn.f32 	%f1270, %f1269, 0fBF000000, %f1398;
	mul.f32 	%f1271, %f1270, 0f34222169;
	fma.rn.f32 	%f1272, %f1270, 0f40490FDA, %f1271;
	mul.f32 	%f1273, %f1272, %f1272;
	fma.rn.f32 	%f1274, %f1273, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f1275, %f1274, %f1273, 0f3D2AAABB;
	fma.rn.f32 	%f1276, %f1275, %f1273, 0fBEFFFFFF;
	fma.rn.f32 	%f1277, %f1276, %f1273, 0f3F800000;
	fma.rn.f32 	%f1278, %f1273, %f1272, 0f00000000;
	fma.rn.f32 	%f1279, %f1273, 0fB94D4153, 0f3C0885E4;
	fma.rn.f32 	%f1280, %f1279, %f1273, 0fBE2AAAA8;
	fma.rn.f32 	%f1281, %f1280, %f1278, %f1272;
	and.b32  	%r605, %r604, 1;
	setp.eq.b32 	%p276, %r605, 1;
	selp.f32 	%f1282, %f1277, %f1281, %p276;
	selp.f32 	%f1283, %f1281, %f1277, %p276;
	and.b32  	%r606, %r604, 2;
	setp.eq.s32 	%p277, %r606, 0;
	neg.f32 	%f1284, %f1282;
	selp.f32 	%f1285, %f1282, %f1284, %p277;
	add.s32 	%r607, %r604, 1;
	and.b32  	%r608, %r607, 2;
	setp.eq.s32 	%p278, %r608, 0;
	sub.f32 	%f1287, %f284, %f1283;
	selp.f32 	%f1288, %f1283, %f1287, %p278;
	cvt.rzi.f32.f32 	%f1289, %f1398;
	setp.eq.f32 	%p279, %f1289, %f1398;
	mul.f32 	%f1290, %f1398, 0f00000000;
	selp.f32 	%f235, %f1290, %f1285, %p279;
	abs.f32 	%f1291, %f1398;
	setp.gt.f32 	%p280, %f1291, 0f4B800000;
	add.f32 	%f1292, %f235, 0f3F800000;
	shl.b32 	%r609, %r123, 1;
	cvt.rn.f32.s32 	%f1293, %r609;
	div.approx.f32 	%f237, %f1293, %f287;
	abs.f32 	%f1402, %f237;
	setp.lt.f32 	%p281, %f1402, 0f40000000;
	@%p281 bra 	LBB0_174;
// %bb.163:
	setp.gtu.f32 	%p282, %f1402, 0f4B800000;
	@%p282 bra 	LBB0_170;
	bra.uni 	LBB0_164;
LBB0_170:
	mov.b32 	%r133, %f1402;
	and.b32  	%r610, %r133, 8388607;
	or.b32  	%r16165, %r610, 1065353216;
	mov.b32 	%f1401, %r16165;
	add.s32 	%r611, %r133, -1073741824;
	and.b32  	%r16166, %r611, -8388608;
	setp.eq.s32 	%p288, %r16166, 0;
	@%p288 bra 	LBB0_173;
// %bb.171:                             // %__nv_fmaf_rn.exit4.i.i.i2597.preheader
	mov.f32 	%f1304, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1303,%f1304;
	// end inline asm
LBB0_172:                               // %__nv_fmaf_rn.exit4.i.i.i2597
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r612, %r16166, 192937984;
	add.s32 	%r613, %r612, %r16165;
	mov.b32 	%f1305, %r613;
	mul.f32 	%f1306, %f1303, %f1305;
	sub.f32 	%f1307, %f1305, %f1306;
	fma.rn.f32 	%f1308, %f1307, %f1303, %f1306;
	sub.f32 	%f1309, %f1305, %f1308;
	fma.rz.f32 	%f1310, %f1309, %f1303, %f1308;
	cvt.rzi.f32.f32 	%f1311, %f1310;
	sub.f32 	%f1401, %f1305, %f1311;
	sub.s32 	%r16166, %r16166, %r612;
	mov.b32 	%r16165, %f1401;
	setp.ne.s32 	%p289, %r16166, 0;
	setp.ne.s32 	%p290, %r16165, 0;
	and.pred  	%p291, %p289, %p290;
	@%p291 bra 	LBB0_172;
LBB0_173:                               // %__internal_fmodf_slowpath_mod.exit.i.i2599
	setp.gt.u32 	%p292, %r133, 2139095039;
	selp.f32 	%f1312, 0f7FFFFFFF, 0f4B800000, %p292;
	mul.f32 	%f1313, %f1401, 0f34000000;
	mul.f32 	%f1402, %f1312, %f1313;
	bra.uni 	LBB0_174;
LBB0_164:                               // %__nv_fast_fdividef.exit.i.i.i2569
	div.approx.f32 	%f1296, %f1402, %f255;
	cvt.rzi.f32.f32 	%f1400, %f1296;
	fma.rn.f32 	%f240, %f1400, 0fC0000000, %f1402;
	mov.b32 	%r132, %f240;
	setp.lt.u32 	%p283, %r132, 1073741824;
	@%p283 bra 	LBB0_169;
// %bb.165:
	setp.lt.u32 	%p284, %r132, -2147483647;
	@%p284 bra 	LBB0_167;
// %bb.166:
	add.f32 	%f1301, %f1400, 0fBF800000;
	setp.lt.f32 	%p287, %f240, 0fC0000000;
	add.f32 	%f1302, %f1301, 0fBF800000;
	selp.f32 	%f1400, %f1302, %f1301, %p287;
	bra.uni 	LBB0_169;
LBB0_167:
	add.f32 	%f1400, %f1400, 0f3F800000;
	setp.ltu.f32 	%p285, %f240, 0f40800000;
	@%p285 bra 	LBB0_169;
// %bb.168:                             // %__nv_fmaf_rn.exit.i.i.i2574
	add.f32 	%f1297, %f1400, 0f3F800000;
	fma.rn.f32 	%f1299, %f255, 0fC0400000, %f240;
	setp.ge.f32 	%p286, %f1299, 0f00000000;
	add.f32 	%f1300, %f1297, 0f3F800000;
	selp.f32 	%f1400, %f1300, %f1297, %p286;
LBB0_169:                               // %__internal_fmodf_fastpath_quot.exit.i.i2578
	fma.rn.f32 	%f1402, %f1400, 0fC0000000, %f1402;
LBB0_174:                               // %__internal_fmodf_kernel.exit.i2603
	add.s64 	%rd50, %rd1, %rd49;
	mov.b32 	%r275, %f325;
	mov.b32 	%r274, %f6;
	mov.b32 	%r293, %f394;
	mov.b32 	%r292, %f15;
	mov.b32 	%r311, %f463;
	mov.b32 	%r310, %f24;
	mov.b32 	%r329, %f532;
	mov.b32 	%r328, %f33;
	mov.b32 	%r347, %f601;
	mov.b32 	%r346, %f42;
	mov.b32 	%r365, %f670;
	mov.b32 	%r364, %f51;
	mov.b32 	%r383, %f739;
	mov.b32 	%r382, %f60;
	mov.b32 	%r401, %f807;
	mov.b32 	%r400, %f69;
	xor.b32  	%r480, %r483, -2147483648;
	xor.b32  	%r479, %r482, -2147483648;
	mov.b32 	%r524, %f1131;
	mov.b32 	%r523, %f164;
	mov.b32 	%r527, %f1128;
	mov.b32 	%r526, %f163;
	xor.b32  	%r570, %r573, -2147483648;
	xor.b32  	%r569, %r572, -2147483648;
	selp.f32 	%f236, %f1292, %f1288, %p280;
	abs.f32 	%f1314, %f1402;
	setp.gtu.f32 	%p293, %f1314, 0f7F800000;
	@%p293 bra 	LBB0_176;
// %bb.175:
	mov.b32 	%r614, %f237;
	and.b32  	%r615, %r614, -2147483648;
	mov.b32 	%r616, %f1402;
	or.b32  	%r617, %r615, %r616;
	mov.b32 	%f1402, %r617;
LBB0_176:                               // %__nv_fmodf.exit2604
	ld.param.u64 	%rd2, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_3];
	ld.param.u64 	%rd3, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_4];
	ld.global.u32 	%r11, [%rd50];
	ld.global.u32 	%r12, [%rd50+128];
	// begin inline asm
	cvt.rn.f16x2.f32 %r273, %r275, %r274;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r291, %r293, %r292;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r309, %r311, %r310;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r327, %r329, %r328;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r345, %r347, %r346;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r363, %r365, %r364;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r381, %r383, %r382;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r399, %r401, %r400;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r427, %r429, %r428;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r430, %r429, %r428;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r433, %r435, %r434;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r436, %r435, %r434;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r475, %r477, %r476;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r478, %r480, %r479;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r481, %r483, %r482;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r484, %r477, %r476;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r522, %r524, %r523;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r525, %r527, %r526;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r565, %r567, %r566;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r568, %r570, %r569;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r571, %r573, %r572;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r574, %r567, %r566;
	// end inline asm
	add.f32 	%f1315, %f1402, %f1402;
	mov.b32 	%r625, %f1315;
	and.b32  	%r626, %r625, -2147483648;
	or.b32  	%r627, %r626, 1056964608;
	mov.b32 	%f1316, %r627;
	add.f32 	%f1317, %f1315, %f1316;
	cvt.rzi.f32.f32 	%f1318, %f1317;
	abs.f32 	%f1319, %f1315;
	setp.gt.f32 	%p294, %f1319, 0f4B000000;
	selp.f32 	%f1320, %f1315, %f1318, %p294;
	cvt.rzi.f32.f32 	%f1321, %f1315;
	setp.lt.f32 	%p295, %f1319, 0f3F000000;
	selp.f32 	%f1322, %f1321, %f1320, %p295;
	cvt.rzi.s32.f32 	%r628, %f1322;
	fma.rn.f32 	%f1323, %f1322, 0fBF000000, %f1402;
	mul.f32 	%f1324, %f1323, 0f34222169;
	fma.rn.f32 	%f1325, %f1323, 0f40490FDA, %f1324;
	mul.f32 	%f1326, %f1325, %f1325;
	fma.rn.f32 	%f1327, %f1326, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f1328, %f1327, %f1326, 0f3D2AAABB;
	fma.rn.f32 	%f1329, %f1328, %f1326, 0fBEFFFFFF;
	fma.rn.f32 	%f1330, %f1329, %f1326, 0f3F800000;
	fma.rn.f32 	%f1331, %f1326, %f1325, 0f00000000;
	fma.rn.f32 	%f1332, %f1326, 0fB94D4153, 0f3C0885E4;
	fma.rn.f32 	%f1333, %f1332, %f1326, 0fBE2AAAA8;
	fma.rn.f32 	%f1334, %f1333, %f1331, %f1325;
	and.b32  	%r629, %r628, 1;
	setp.eq.b32 	%p296, %r629, 1;
	selp.f32 	%f1335, %f1330, %f1334, %p296;
	selp.f32 	%f1336, %f1334, %f1330, %p296;
	and.b32  	%r630, %r628, 2;
	setp.eq.s32 	%p297, %r630, 0;
	neg.f32 	%f1337, %f1335;
	selp.f32 	%f1338, %f1335, %f1337, %p297;
	add.s32 	%r631, %r628, 1;
	and.b32  	%r632, %r631, 2;
	setp.eq.s32 	%p298, %r632, 0;
	sub.f32 	%f1340, %f284, %f1336;
	selp.f32 	%f1341, %f1336, %f1340, %p298;
	cvt.rzi.f32.f32 	%f1342, %f1402;
	setp.eq.f32 	%p299, %f1342, %f1402;
	mul.f32 	%f1343, %f1402, 0f00000000;
	selp.f32 	%f1344, %f1343, %f1338, %p299;
	abs.f32 	%f1345, %f1402;
	setp.gt.f32 	%p300, %f1345, 0f4B800000;
	add.f32 	%f1346, %f1344, 0f3F800000;
	selp.f32 	%f1347, %f1346, %f1341, %p300;
	mov.b32 	%r620, %f1347;
	mov.b32 	%r619, %f236;
	// begin inline asm
	cvt.rn.f16x2.f32 %r618, %r620, %r619;
	// end inline asm
	mov.b32 	%r623, %f1344;
	mov.b32 	%r622, %f235;
	// begin inline asm
	cvt.rn.f16x2.f32 %r621, %r623, %r622;
	// end inline asm
	and.b32  	%r633, %r8, 32;
	shl.b32 	%r634, %r1, 3;
	and.b32  	%r635, %r634, 64;
	or.b32  	%r636, %r635, %r2;
	or.b32  	%r142, %r636, %r633;
	shl.b32 	%r637, %r4, 5;
	and.b32  	%r638, %r7, 28;
	and.b32  	%r639, %r637, 96;
	or.b32  	%r143, %r639, %r638;
	and.b32  	%r144, %r5, 2048;
	shl.b32 	%r640, %r4, 4;
	and.b32  	%r145, %r640, 1920;
	and.b32  	%r146, %r1, 8;
	mul.lo.s32 	%r641, %r18, 65;
	bfe.u32 	%r642, %r2, 2, 1;
	shr.u32 	%r643, %r2, 1;
	bfe.u32 	%r644, %r2, 1, 1;
	and.b32  	%r645, %r2, 1;
	shr.u32 	%r646, %r2, 3;
	shl.b32 	%r647, %r1, 4;
	or.b32  	%r648, %r146, %r647;
	shr.u32 	%r649, %r648, 2;
	and.b32  	%r650, %r649, 30;
	mad.lo.s32 	%r651, %r645, 2080, %r641;
	mad.lo.s32 	%r652, %r646, 260, %r651;
	mad.lo.s32 	%r653, %r642, 520, %r652;
	mad.lo.s32 	%r654, %r644, 1040, %r653;
	add.s32 	%r655, %r654, %r650;
	mul.wide.u32 	%rd51, %r655, 4;
	mov.u64 	%rd52, shmem;
	add.s64 	%rd5, %rd52, %rd51;
	add.s32 	%r656, %r655, 32;
	mul.wide.u32 	%rd53, %r656, 4;
	add.s64 	%rd6, %rd52, %rd53;
	add.s32 	%r657, %r655, 1;
	mul.wide.u32 	%rd54, %r657, 4;
	add.s64 	%rd7, %rd52, %rd54;
	add.s32 	%r658, %r655, 33;
	mul.wide.u32 	%rd55, %r658, 4;
	add.s64 	%rd8, %rd52, %rd55;
	add.s32 	%r659, %r655, 130;
	mul.wide.u32 	%rd56, %r659, 4;
	add.s64 	%rd9, %rd52, %rd56;
	add.s32 	%r660, %r655, 162;
	mul.wide.u32 	%rd57, %r660, 4;
	add.s64 	%rd10, %rd52, %rd57;
	add.s32 	%r661, %r655, 131;
	mul.wide.u32 	%rd58, %r661, 4;
	add.s64 	%rd11, %rd52, %rd58;
	add.s32 	%r662, %r655, 163;
	mul.wide.u32 	%rd59, %r662, 4;
	add.s64 	%rd12, %rd52, %rd59;
	and.b32  	%r663, %r3, 32;
	mul.lo.s32 	%r664, %r14, 65;
	mul.lo.s32 	%r665, %r15, 130;
	mul.lo.s32 	%r666, %r18, 520;
	mul.lo.s32 	%r667, %r20, 1040;
	mul.lo.s32 	%r668, %r17, 260;
	or.b32  	%r669, %r663, %r643;
	add.s32 	%r670, %r669, %r665;
	add.s32 	%r671, %r670, %r666;
	add.s32 	%r672, %r671, %r664;
	add.s32 	%r673, %r672, %r667;
	add.s32 	%r674, %r673, %r668;
	or.b32  	%r675, %r643, 8;
	add.s32 	%r676, %r665, %r663;
	add.s32 	%r677, %r676, %r666;
	add.s32 	%r678, %r677, %r675;
	add.s32 	%r679, %r678, %r664;
	add.s32 	%r680, %r679, %r667;
	add.s32 	%r681, %r680, %r668;
	or.b32  	%r682, %r643, 16;
	add.s32 	%r683, %r677, %r682;
	add.s32 	%r684, %r683, %r664;
	add.s32 	%r685, %r684, %r667;
	add.s32 	%r686, %r685, %r668;
	or.b32  	%r687, %r643, 24;
	add.s32 	%r688, %r677, %r687;
	add.s32 	%r689, %r688, %r664;
	add.s32 	%r690, %r689, %r667;
	add.s32 	%r691, %r690, %r668;
	or.b32  	%r692, %r643, 2080;
	add.s32 	%r693, %r677, %r692;
	add.s32 	%r694, %r693, %r664;
	add.s32 	%r695, %r694, %r667;
	add.s32 	%r696, %r695, %r668;
	add.s32 	%r697, %r677, 2080;
	add.s32 	%r698, %r697, %r675;
	add.s32 	%r699, %r698, %r664;
	add.s32 	%r700, %r699, %r667;
	add.s32 	%r701, %r700, %r668;
	add.s32 	%r702, %r697, %r682;
	add.s32 	%r703, %r702, %r664;
	add.s32 	%r704, %r703, %r667;
	add.s32 	%r705, %r704, %r668;
	add.s32 	%r706, %r697, %r687;
	add.s32 	%r707, %r706, %r664;
	add.s32 	%r708, %r707, %r667;
	add.s32 	%r709, %r708, %r668;
	mul.lo.s32 	%r710, %r10, 65;
	add.s32 	%r711, %r669, %r710;
	or.b32  	%r712, %r675, %r663;
	add.s32 	%r713, %r712, %r710;
	or.b32  	%r714, %r682, %r663;
	add.s32 	%r715, %r714, %r710;
	or.b32  	%r716, %r687, %r663;
	add.s32 	%r717, %r716, %r710;
	add.s32 	%r718, %r710, 2080;
	add.s32 	%r719, %r669, %r718;
	add.s32 	%r720, %r712, %r718;
	add.s32 	%r721, %r714, %r718;
	add.s32 	%r722, %r716, %r718;
	shl.b32 	%r723, %r2, 1;
	or.b32  	%r724, %r723, %r18;
	mul.lo.s32 	%r725, %r724, 65;
	add.s32 	%r726, %r650, %r725;
	mul.wide.u32 	%rd60, %r726, 4;
	add.s64 	%rd13, %rd52, %rd60;
	cvt.u64.u32 	%rd61, %r650;
	cvt.u64.u32 	%rd62, %r725;
	add.s64 	%rd63, %rd62, %rd61;
	shl.b64 	%rd64, %rd63, 2;
	add.s64 	%rd14, %rd52, %rd64;
	or.b32  	%r727, %r724, 32;
	mul.lo.s32 	%r728, %r727, 65;
	add.s32 	%r729, %r728, %r650;
	mul.wide.u32 	%rd65, %r729, 4;
	add.s64 	%rd15, %rd52, %rd65;
	cvt.u64.u32 	%rd66, %r728;
	add.s64 	%rd67, %rd66, %rd61;
	shl.b64 	%rd68, %rd67, 2;
	add.s64 	%rd16, %rd52, %rd68;
	shl.b32 	%r730, %r2, 2;
	or.b32  	%r731, %r730, %r19;
	or.b32  	%r732, %r731, %r145;
	shl.b32 	%r733, %r732, 7;
	shl.b32 	%r734, %r4, 16;
	and.b32  	%r735, %r734, 262144;
	or.b32  	%r736, %r733, %r143;
	or.b32  	%r737, %r736, %r735;
	add.s32 	%r147, %r737, -1572864;
	or.b32  	%r738, %r735, %r143;
	or.b32  	%r739, %r738, %r733;
	or.b32  	%r148, %r739, -1564672;
	mul.wide.u32 	%rd17, %r722, 4;
	mul.wide.u32 	%rd18, %r721, 4;
	mul.wide.u32 	%rd19, %r720, 4;
	mul.wide.u32 	%rd20, %r719, 4;
	mul.wide.u32 	%rd21, %r717, 4;
	mul.wide.u32 	%rd22, %r715, 4;
	mul.wide.u32 	%rd23, %r713, 4;
	mul.wide.u32 	%rd24, %r711, 4;
	mul.wide.u32 	%rd25, %r709, 4;
	mul.wide.u32 	%rd26, %r705, 4;
	mul.wide.u32 	%rd27, %r701, 4;
	mul.wide.u32 	%rd28, %r696, 4;
	mul.wide.u32 	%rd29, %r691, 4;
	mul.wide.u32 	%rd30, %r686, 4;
	mul.wide.u32 	%rd31, %r681, 4;
	mul.wide.u32 	%rd32, %r674, 4;
	mov.u32 	%r16193, 0;
	setp.eq.s32 	%p301, %r146, 0;
	mov.u16 	%rs2381, 25600;
	mov.u16 	%rs2173, 21504;
	mov.u16 	%rs2389, 18432;
	mov.u16 	%rs2307, -14592;
	mov.u32 	%r16194, %r16193;
	mov.u32 	%r16195, %r16193;
	mov.u32 	%r16196, %r16193;
	mov.u32 	%r16197, %r16193;
	mov.u32 	%r16198, %r16193;
	mov.u32 	%r16199, %r16193;
	mov.u32 	%r16200, %r16193;
	mov.u32 	%r16201, %r16193;
	mov.u32 	%r16202, %r16193;
	mov.u32 	%r16203, %r16193;
	mov.u32 	%r16204, %r16193;
	mov.u32 	%r16205, %r16193;
	mov.u32 	%r16206, %r16193;
	mov.u32 	%r16207, %r16193;
	mov.u32 	%r16208, %r16193;
	mov.u32 	%r16209, %r16193;
	mov.u32 	%r16210, %r16193;
	mov.u32 	%r16211, %r16193;
	mov.u32 	%r16212, %r16193;
	mov.u32 	%r16213, %r16193;
	mov.u32 	%r16214, %r16193;
	mov.u32 	%r16215, %r16193;
	mov.u32 	%r16216, %r16193;
	mov.u32 	%r16191, %r16193;
	bra.uni 	LBB0_177;
LBB0_181:                               // %L63543
                                        //   in Loop: Header=BB0_177 Depth=1
	add.s32 	%r16191, %r173, 256;
	setp.gt.s32 	%p306, %r6, %r16191;
	setp.ne.s32 	%p307, %r173, 32512;
	and.pred  	%p308, %p307, %p306;
	@%p308 bra 	LBB0_177;
	bra.uni 	LBB0_182;
LBB0_177:                               // %L2061
                                        // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_178 Depth 2
	mov.u32 	%r173, %r16191;
	or.b32  	%r773, %r142, %r173;
	shl.b32 	%r774, %r773, 12;
	or.b32  	%r775, %r774, %r143;
	or.b32  	%r776, %r775, %r144;
	or.b32  	%r777, %r776, %r145;
	mul.wide.s32 	%rd70, %r777, 4;
	add.s64 	%rd71, %rd2, %rd70;
	ld.global.v4.u32 	{%r778, %r779, %r780, %r781}, [%rd71];
	or.b32  	%r782, %r777, 65536;
	mul.wide.s32 	%rd72, %r782, 4;
	add.s64 	%rd73, %rd2, %rd72;
	ld.global.v4.u32 	{%r783, %r784, %r785, %r786}, [%rd73];
	selp.b32 	%r787, %r780, %r778, %p301;
	shfl.sync.bfly.b32	%r788, %r787, 8, 31, -1;
	selp.b32 	%r741, %r778, %r788, %p301;
	selp.b32 	%r742, %r788, %r780, %p301;
	selp.b32 	%r789, %r781, %r779, %p301;
	shfl.sync.bfly.b32	%r790, %r789, 8, 31, -1;
	selp.b32 	%r749, %r779, %r790, %p301;
	selp.b32 	%r750, %r790, %r781, %p301;
	selp.b32 	%r791, %r785, %r783, %p301;
	shfl.sync.bfly.b32	%r792, %r791, 8, 31, -1;
	selp.b32 	%r757, %r783, %r792, %p301;
	selp.b32 	%r758, %r792, %r785, %p301;
	selp.b32 	%r793, %r786, %r784, %p301;
	shfl.sync.bfly.b32	%r794, %r793, 8, 31, -1;
	selp.b32 	%r765, %r784, %r794, %p301;
	selp.b32 	%r766, %r794, %r786, %p301;
	mov.u32 	%r767, 21520;
	// begin inline asm
	prmt.b32 %r740, %r741, %r742, %r767;
	// end inline asm
	mov.u32 	%r771, 30258;
	// begin inline asm
	prmt.b32 %r744, %r741, %r742, %r771;
	// end inline asm
	// begin inline asm
	prmt.b32 %r748, %r749, %r750, %r767;
	// end inline asm
	// begin inline asm
	prmt.b32 %r752, %r749, %r750, %r771;
	// end inline asm
	// begin inline asm
	prmt.b32 %r756, %r757, %r758, %r767;
	// end inline asm
	// begin inline asm
	prmt.b32 %r760, %r757, %r758, %r771;
	// end inline asm
	// begin inline asm
	prmt.b32 %r764, %r765, %r766, %r767;
	// end inline asm
	// begin inline asm
	prmt.b32 %r768, %r765, %r766, %r771;
	// end inline asm
	st.shared.u32 	[%rd5], %r740;
	st.shared.u32 	[%rd6], %r744;
	st.shared.u32 	[%rd7], %r748;
	st.shared.u32 	[%rd8], %r752;
	st.shared.u32 	[%rd9], %r756;
	st.shared.u32 	[%rd10], %r760;
	st.shared.u32 	[%rd11], %r764;
	st.shared.u32 	[%rd12], %r768;
	bar.sync 	0;
	mov.u32 	%r16192, 256;
	mov.u64 	%rd94, %rd52;
LBB0_178:                               // %L9061
                                        //   Parent Loop BB0_177 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	add.s64 	%rd74, %rd94, %rd32;
	ld.shared.u32 	%r16059, [%rd74];
	add.s64 	%rd75, %rd94, %rd31;
	ld.shared.u32 	%r16060, [%rd75];
	add.s64 	%rd76, %rd94, %rd30;
	ld.shared.u32 	%r16061, [%rd76];
	add.s64 	%rd77, %rd94, %rd29;
	ld.shared.u32 	%r16062, [%rd77];
	add.s64 	%rd78, %rd94, %rd28;
	ld.shared.u32 	%r16063, [%rd78];
	add.s64 	%rd79, %rd94, %rd27;
	ld.shared.u32 	%r16064, [%rd79];
	add.s64 	%rd80, %rd94, %rd26;
	ld.shared.u32 	%r16065, [%rd80];
	add.s64 	%rd81, %rd94, %rd25;
	ld.shared.u32 	%r16066, [%rd81];
	// begin inline asm
	mov.b32 %r800, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r811, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r799, %r16059, -2004318072;
	mov.u32 	%r798, 983055;
	// begin inline asm
	lop3.b32 %r797, %r798, %r799, %r800, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r801, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r802, %r800, %r801;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r805, %r797, %r802;
	// end inline asm
	mov.u32 	%r809, 15728880;
	// begin inline asm
	lop3.b32 %r808, %r809, %r799, %r811, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r812, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r813, %r811, %r812;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r816, %r808, %r813;
	// end inline asm
	shr.u32 	%r821, %r799, 8;
	// begin inline asm
	lop3.b32 %r819, %r798, %r821, %r800, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r823, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r824, %r800, %r823;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r827, %r819, %r824;
	// end inline asm
	// begin inline asm
	lop3.b32 %r830, %r809, %r821, %r811, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r834, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r835, %r811, %r834;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r838, %r830, %r835;
	// end inline asm
	// begin inline asm
	mov.b32 %r846, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r857, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r845, %r16060, -2004318072;
	// begin inline asm
	lop3.b32 %r843, %r798, %r845, %r846, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r847, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r848, %r846, %r847;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r851, %r843, %r848;
	// end inline asm
	// begin inline asm
	lop3.b32 %r854, %r809, %r845, %r857, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r858, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r859, %r857, %r858;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r862, %r854, %r859;
	// end inline asm
	shr.u32 	%r867, %r845, 8;
	// begin inline asm
	lop3.b32 %r865, %r798, %r867, %r846, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r869, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r870, %r846, %r869;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r873, %r865, %r870;
	// end inline asm
	// begin inline asm
	lop3.b32 %r876, %r809, %r867, %r857, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r880, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r881, %r857, %r880;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r884, %r876, %r881;
	// end inline asm
	// begin inline asm
	mov.b32 %r892, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r903, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r891, %r16061, -2004318072;
	// begin inline asm
	lop3.b32 %r889, %r798, %r891, %r892, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r893, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r894, %r892, %r893;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r897, %r889, %r894;
	// end inline asm
	// begin inline asm
	lop3.b32 %r900, %r809, %r891, %r903, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r904, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r905, %r903, %r904;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r908, %r900, %r905;
	// end inline asm
	shr.u32 	%r913, %r891, 8;
	// begin inline asm
	lop3.b32 %r911, %r798, %r913, %r892, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r915, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r916, %r892, %r915;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r919, %r911, %r916;
	// end inline asm
	// begin inline asm
	lop3.b32 %r922, %r809, %r913, %r903, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r926, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r927, %r903, %r926;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r930, %r922, %r927;
	// end inline asm
	// begin inline asm
	mov.b32 %r938, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r949, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r937, %r16062, -2004318072;
	// begin inline asm
	lop3.b32 %r935, %r798, %r937, %r938, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r939, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r940, %r938, %r939;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r943, %r935, %r940;
	// end inline asm
	// begin inline asm
	lop3.b32 %r946, %r809, %r937, %r949, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r950, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r951, %r949, %r950;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r954, %r946, %r951;
	// end inline asm
	shr.u32 	%r959, %r937, 8;
	// begin inline asm
	lop3.b32 %r957, %r798, %r959, %r938, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r961, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r962, %r938, %r961;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r965, %r957, %r962;
	// end inline asm
	// begin inline asm
	lop3.b32 %r968, %r809, %r959, %r949, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r972, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r973, %r949, %r972;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r976, %r968, %r973;
	// end inline asm
	// begin inline asm
	mov.b32 %r984, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r995, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r983, %r16063, -2004318072;
	// begin inline asm
	lop3.b32 %r981, %r798, %r983, %r984, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r985, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r986, %r984, %r985;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r989, %r981, %r986;
	// end inline asm
	// begin inline asm
	lop3.b32 %r992, %r809, %r983, %r995, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r996, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r997, %r995, %r996;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1000, %r992, %r997;
	// end inline asm
	shr.u32 	%r1005, %r983, 8;
	// begin inline asm
	lop3.b32 %r1003, %r798, %r1005, %r984, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1007, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1008, %r984, %r1007;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1011, %r1003, %r1008;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1014, %r809, %r1005, %r995, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1018, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1019, %r995, %r1018;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1022, %r1014, %r1019;
	// end inline asm
	// begin inline asm
	mov.b32 %r1030, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1041, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1029, %r16064, -2004318072;
	// begin inline asm
	lop3.b32 %r1027, %r798, %r1029, %r1030, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1031, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1032, %r1030, %r1031;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1035, %r1027, %r1032;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1038, %r809, %r1029, %r1041, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1042, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1043, %r1041, %r1042;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1046, %r1038, %r1043;
	// end inline asm
	shr.u32 	%r1051, %r1029, 8;
	// begin inline asm
	lop3.b32 %r1049, %r798, %r1051, %r1030, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1053, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1054, %r1030, %r1053;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1057, %r1049, %r1054;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1060, %r809, %r1051, %r1041, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1064, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1065, %r1041, %r1064;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1068, %r1060, %r1065;
	// end inline asm
	// begin inline asm
	mov.b32 %r1076, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1087, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1075, %r16065, -2004318072;
	// begin inline asm
	lop3.b32 %r1073, %r798, %r1075, %r1076, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1077, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1078, %r1076, %r1077;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1081, %r1073, %r1078;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1084, %r809, %r1075, %r1087, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1088, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1089, %r1087, %r1088;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1092, %r1084, %r1089;
	// end inline asm
	shr.u32 	%r1097, %r1075, 8;
	// begin inline asm
	lop3.b32 %r1095, %r798, %r1097, %r1076, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1099, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1100, %r1076, %r1099;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1103, %r1095, %r1100;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1106, %r809, %r1097, %r1087, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1110, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1111, %r1087, %r1110;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1114, %r1106, %r1111;
	// end inline asm
	// begin inline asm
	mov.b32 %r1122, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1133, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1121, %r16066, -2004318072;
	// begin inline asm
	lop3.b32 %r1119, %r798, %r1121, %r1122, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1123, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1124, %r1122, %r1123;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1127, %r1119, %r1124;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1130, %r809, %r1121, %r1133, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1134, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1135, %r1133, %r1134;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1138, %r1130, %r1135;
	// end inline asm
	shr.u32 	%r1143, %r1121, 8;
	// begin inline asm
	lop3.b32 %r1141, %r798, %r1143, %r1122, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1145, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1146, %r1122, %r1145;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1149, %r1141, %r1146;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1152, %r809, %r1143, %r1133, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1156, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1157, %r1133, %r1156;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1160, %r1152, %r1157;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1163, %r381;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1165, %r1163, %r805;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1168, %r381;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1170, %r1168, %r816;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1173, %r381;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1175, %r1173, %r827;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1178, %r381;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1180, %r1178, %r838;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1183, %r381;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1185, %r1183, %r851;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1188, %r381;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1190, %r1188, %r862;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1193, %r381;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1195, %r1193, %r873;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1198, %r381;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1200, %r1198, %r884;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1203, %r381;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1205, %r1203, %r897;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1208, %r381;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1210, %r1208, %r908;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1213, %r381;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1215, %r1213, %r919;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1218, %r381;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1220, %r1218, %r930;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1223, %r381;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1225, %r1223, %r943;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1228, %r381;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1230, %r1228, %r954;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1233, %r381;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1235, %r1233, %r965;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1238, %r381;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1240, %r1238, %r976;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1243, %r399;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1245, %r1243, %r989;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1248, %r399;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1250, %r1248, %r1000;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1253, %r399;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1255, %r1253, %r1011;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1258, %r399;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1260, %r1258, %r1022;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1263, %r399;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1265, %r1263, %r1035;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1268, %r399;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1270, %r1268, %r1046;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1273, %r399;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1275, %r1273, %r1057;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1278, %r399;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1280, %r1278, %r1068;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1283, %r399;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1285, %r1283, %r1081;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1288, %r399;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1290, %r1288, %r1092;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1293, %r399;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1295, %r1293, %r1103;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1298, %r399;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1300, %r1298, %r1114;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1303, %r399;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1305, %r1303, %r1127;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1308, %r399;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1310, %r1308, %r1138;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1313, %r399;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1315, %r1313, %r1149;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1318, %r399;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1320, %r1318, %r1160;
	// end inline asm
	// begin inline asm
	mov.b32 %r1328, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1339, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1327, %r16193, -2004318072;
	// begin inline asm
	lop3.b32 %r1325, %r798, %r1327, %r1328, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1329, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1330, %r1328, %r1329;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1333, %r1325, %r1330;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1336, %r809, %r1327, %r1339, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1340, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1341, %r1339, %r1340;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1344, %r1336, %r1341;
	// end inline asm
	shr.u32 	%r1349, %r1327, 8;
	// begin inline asm
	lop3.b32 %r1347, %r798, %r1349, %r1328, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1351, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1352, %r1328, %r1351;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1355, %r1347, %r1352;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1358, %r809, %r1349, %r1339, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1362, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1363, %r1339, %r1362;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1366, %r1358, %r1363;
	// end inline asm
	// begin inline asm
	mov.b32 %r1374, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1385, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1373, %r16194, -2004318072;
	// begin inline asm
	lop3.b32 %r1371, %r798, %r1373, %r1374, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1375, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1376, %r1374, %r1375;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1379, %r1371, %r1376;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1382, %r809, %r1373, %r1385, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1386, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1387, %r1385, %r1386;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1390, %r1382, %r1387;
	// end inline asm
	shr.u32 	%r1395, %r1373, 8;
	// begin inline asm
	lop3.b32 %r1393, %r798, %r1395, %r1374, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1397, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1398, %r1374, %r1397;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1401, %r1393, %r1398;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1404, %r809, %r1395, %r1385, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1408, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1409, %r1385, %r1408;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1412, %r1404, %r1409;
	// end inline asm
	// begin inline asm
	mov.b32 %r1420, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1431, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1419, %r16195, -2004318072;
	// begin inline asm
	lop3.b32 %r1417, %r798, %r1419, %r1420, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1421, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1422, %r1420, %r1421;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1425, %r1417, %r1422;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1428, %r809, %r1419, %r1431, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1432, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1433, %r1431, %r1432;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1436, %r1428, %r1433;
	// end inline asm
	shr.u32 	%r1441, %r1419, 8;
	// begin inline asm
	lop3.b32 %r1439, %r798, %r1441, %r1420, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1443, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1444, %r1420, %r1443;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1447, %r1439, %r1444;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1450, %r809, %r1441, %r1431, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1454, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1455, %r1431, %r1454;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1458, %r1450, %r1455;
	// end inline asm
	// begin inline asm
	mov.b32 %r1466, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1477, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1465, %r16196, -2004318072;
	// begin inline asm
	lop3.b32 %r1463, %r798, %r1465, %r1466, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1467, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1468, %r1466, %r1467;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1471, %r1463, %r1468;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1474, %r809, %r1465, %r1477, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1478, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1479, %r1477, %r1478;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1482, %r1474, %r1479;
	// end inline asm
	shr.u32 	%r1487, %r1465, 8;
	// begin inline asm
	lop3.b32 %r1485, %r798, %r1487, %r1466, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1489, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1490, %r1466, %r1489;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1493, %r1485, %r1490;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1496, %r809, %r1487, %r1477, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1500, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1501, %r1477, %r1500;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1504, %r1496, %r1501;
	// end inline asm
	// begin inline asm
	mov.b32 %r1512, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1523, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1511, %r16205, -2004318072;
	// begin inline asm
	lop3.b32 %r1509, %r798, %r1511, %r1512, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1513, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1514, %r1512, %r1513;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1517, %r1509, %r1514;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1520, %r809, %r1511, %r1523, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1524, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1525, %r1523, %r1524;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1528, %r1520, %r1525;
	// end inline asm
	shr.u32 	%r1533, %r1511, 8;
	// begin inline asm
	lop3.b32 %r1531, %r798, %r1533, %r1512, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1535, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1536, %r1512, %r1535;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1539, %r1531, %r1536;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1542, %r809, %r1533, %r1523, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1546, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1547, %r1523, %r1546;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1550, %r1542, %r1547;
	// end inline asm
	// begin inline asm
	mov.b32 %r1558, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1569, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1557, %r16206, -2004318072;
	// begin inline asm
	lop3.b32 %r1555, %r798, %r1557, %r1558, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1559, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1560, %r1558, %r1559;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1563, %r1555, %r1560;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1566, %r809, %r1557, %r1569, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1570, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1571, %r1569, %r1570;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1574, %r1566, %r1571;
	// end inline asm
	shr.u32 	%r1579, %r1557, 8;
	// begin inline asm
	lop3.b32 %r1577, %r798, %r1579, %r1558, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1581, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1582, %r1558, %r1581;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1585, %r1577, %r1582;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1588, %r809, %r1579, %r1569, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1592, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1593, %r1569, %r1592;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1596, %r1588, %r1593;
	// end inline asm
	// begin inline asm
	mov.b32 %r1604, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1615, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1603, %r16207, -2004318072;
	// begin inline asm
	lop3.b32 %r1601, %r798, %r1603, %r1604, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1605, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1606, %r1604, %r1605;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1609, %r1601, %r1606;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1612, %r809, %r1603, %r1615, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1616, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1617, %r1615, %r1616;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1620, %r1612, %r1617;
	// end inline asm
	shr.u32 	%r1625, %r1603, 8;
	// begin inline asm
	lop3.b32 %r1623, %r798, %r1625, %r1604, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1627, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1628, %r1604, %r1627;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1631, %r1623, %r1628;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1634, %r809, %r1625, %r1615, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1638, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1639, %r1615, %r1638;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1642, %r1634, %r1639;
	// end inline asm
	// begin inline asm
	mov.b32 %r1650, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1661, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1649, %r16208, -2004318072;
	// begin inline asm
	lop3.b32 %r1647, %r798, %r1649, %r1650, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1651, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1652, %r1650, %r1651;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1655, %r1647, %r1652;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1658, %r809, %r1649, %r1661, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1662, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1663, %r1661, %r1662;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1666, %r1658, %r1663;
	// end inline asm
	shr.u32 	%r1671, %r1649, 8;
	// begin inline asm
	lop3.b32 %r1669, %r798, %r1671, %r1650, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1673, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1674, %r1650, %r1673;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1677, %r1669, %r1674;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1680, %r809, %r1671, %r1661, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1684, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1685, %r1661, %r1684;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1688, %r1680, %r1685;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1691, %r273, %r1333, %r1165;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1695, %r273, %r1344, %r1170;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1699, %r273, %r1355, %r1175;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1703, %r273, %r1366, %r1180;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1707, %r273, %r1379, %r1185;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1711, %r273, %r1390, %r1190;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1715, %r273, %r1401, %r1195;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1719, %r273, %r1412, %r1200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1723, %r273, %r1425, %r1205;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1727, %r273, %r1436, %r1210;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1731, %r273, %r1447, %r1215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1735, %r273, %r1458, %r1220;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1739, %r273, %r1471, %r1225;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1743, %r273, %r1482, %r1230;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1747, %r273, %r1493, %r1235;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1751, %r273, %r1504, %r1240;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1755, %r291, %r1517, %r1245;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1759, %r291, %r1528, %r1250;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1763, %r291, %r1539, %r1255;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1767, %r291, %r1550, %r1260;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1771, %r291, %r1563, %r1265;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1775, %r291, %r1574, %r1270;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1779, %r291, %r1585, %r1275;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1783, %r291, %r1596, %r1280;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1787, %r291, %r1609, %r1285;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1791, %r291, %r1620, %r1290;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1795, %r291, %r1631, %r1295;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1799, %r291, %r1642, %r1300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1803, %r291, %r1655, %r1305;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1807, %r291, %r1666, %r1310;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1811, %r291, %r1677, %r1315;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1815, %r291, %r1688, %r1320;
	// end inline asm
	// begin inline asm
	mov.b32 %r1824, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1835, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1823, %r16197, -2004318072;
	// begin inline asm
	lop3.b32 %r1821, %r798, %r1823, %r1824, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1825, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1826, %r1824, %r1825;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1829, %r1821, %r1826;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1832, %r809, %r1823, %r1835, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1836, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1837, %r1835, %r1836;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1840, %r1832, %r1837;
	// end inline asm
	shr.u32 	%r1845, %r1823, 8;
	// begin inline asm
	lop3.b32 %r1843, %r798, %r1845, %r1824, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1847, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1848, %r1824, %r1847;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1851, %r1843, %r1848;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1854, %r809, %r1845, %r1835, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1858, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1859, %r1835, %r1858;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1862, %r1854, %r1859;
	// end inline asm
	// begin inline asm
	mov.b32 %r1870, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1881, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1869, %r16198, -2004318072;
	// begin inline asm
	lop3.b32 %r1867, %r798, %r1869, %r1870, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1871, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1872, %r1870, %r1871;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1875, %r1867, %r1872;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1878, %r809, %r1869, %r1881, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1882, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1883, %r1881, %r1882;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1886, %r1878, %r1883;
	// end inline asm
	shr.u32 	%r1891, %r1869, 8;
	// begin inline asm
	lop3.b32 %r1889, %r798, %r1891, %r1870, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1893, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1894, %r1870, %r1893;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1897, %r1889, %r1894;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1900, %r809, %r1891, %r1881, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1904, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1905, %r1881, %r1904;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1908, %r1900, %r1905;
	// end inline asm
	// begin inline asm
	mov.b32 %r1916, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1927, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1915, %r16199, -2004318072;
	// begin inline asm
	lop3.b32 %r1913, %r798, %r1915, %r1916, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1917, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1918, %r1916, %r1917;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1921, %r1913, %r1918;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1924, %r809, %r1915, %r1927, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1928, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1929, %r1927, %r1928;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1932, %r1924, %r1929;
	// end inline asm
	shr.u32 	%r1937, %r1915, 8;
	// begin inline asm
	lop3.b32 %r1935, %r798, %r1937, %r1916, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1939, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1940, %r1916, %r1939;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1943, %r1935, %r1940;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1946, %r809, %r1937, %r1927, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1950, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1951, %r1927, %r1950;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1954, %r1946, %r1951;
	// end inline asm
	// begin inline asm
	mov.b32 %r1962, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1973, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1961, %r16200, -2004318072;
	// begin inline asm
	lop3.b32 %r1959, %r798, %r1961, %r1962, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1963, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1964, %r1962, %r1963;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1967, %r1959, %r1964;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1970, %r809, %r1961, %r1973, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1974, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1975, %r1973, %r1974;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1978, %r1970, %r1975;
	// end inline asm
	shr.u32 	%r1983, %r1961, 8;
	// begin inline asm
	lop3.b32 %r1981, %r798, %r1983, %r1962, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1985, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1986, %r1962, %r1985;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1989, %r1981, %r1986;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1992, %r809, %r1983, %r1973, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1996, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1997, %r1973, %r1996;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2000, %r1992, %r1997;
	// end inline asm
	// begin inline asm
	mov.b32 %r2008, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2019, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2007, %r16209, -2004318072;
	// begin inline asm
	lop3.b32 %r2005, %r798, %r2007, %r2008, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2009, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2010, %r2008, %r2009;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2013, %r2005, %r2010;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2016, %r809, %r2007, %r2019, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2020, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2021, %r2019, %r2020;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2024, %r2016, %r2021;
	// end inline asm
	shr.u32 	%r2029, %r2007, 8;
	// begin inline asm
	lop3.b32 %r2027, %r798, %r2029, %r2008, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2031, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2032, %r2008, %r2031;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2035, %r2027, %r2032;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2038, %r809, %r2029, %r2019, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2042, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2043, %r2019, %r2042;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2046, %r2038, %r2043;
	// end inline asm
	// begin inline asm
	mov.b32 %r2054, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2065, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2053, %r16210, -2004318072;
	// begin inline asm
	lop3.b32 %r2051, %r798, %r2053, %r2054, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2055, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2056, %r2054, %r2055;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2059, %r2051, %r2056;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2062, %r809, %r2053, %r2065, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2066, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2067, %r2065, %r2066;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2070, %r2062, %r2067;
	// end inline asm
	shr.u32 	%r2075, %r2053, 8;
	// begin inline asm
	lop3.b32 %r2073, %r798, %r2075, %r2054, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2077, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2078, %r2054, %r2077;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2081, %r2073, %r2078;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2084, %r809, %r2075, %r2065, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2088, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2089, %r2065, %r2088;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2092, %r2084, %r2089;
	// end inline asm
	// begin inline asm
	mov.b32 %r2100, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2111, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2099, %r16211, -2004318072;
	// begin inline asm
	lop3.b32 %r2097, %r798, %r2099, %r2100, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2101, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2102, %r2100, %r2101;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2105, %r2097, %r2102;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2108, %r809, %r2099, %r2111, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2112, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2113, %r2111, %r2112;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2116, %r2108, %r2113;
	// end inline asm
	shr.u32 	%r2121, %r2099, 8;
	// begin inline asm
	lop3.b32 %r2119, %r798, %r2121, %r2100, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2123, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2124, %r2100, %r2123;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2127, %r2119, %r2124;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2130, %r809, %r2121, %r2111, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2134, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2135, %r2111, %r2134;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2138, %r2130, %r2135;
	// end inline asm
	// begin inline asm
	mov.b32 %r2146, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2157, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2145, %r16212, -2004318072;
	// begin inline asm
	lop3.b32 %r2143, %r798, %r2145, %r2146, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2147, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2148, %r2146, %r2147;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2151, %r2143, %r2148;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2154, %r809, %r2145, %r2157, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2158, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2159, %r2157, %r2158;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2162, %r2154, %r2159;
	// end inline asm
	shr.u32 	%r2167, %r2145, 8;
	// begin inline asm
	lop3.b32 %r2165, %r798, %r2167, %r2146, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2169, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2170, %r2146, %r2169;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2173, %r2165, %r2170;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2176, %r809, %r2167, %r2157, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2180, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2181, %r2157, %r2180;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2184, %r2176, %r2181;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2187, %r309;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2189, %r2187, %r1829, %r1691;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2193, %r309;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2195, %r2193, %r1840, %r1695;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2199, %r309;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2201, %r2199, %r1851, %r1699;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2205, %r309;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2207, %r2205, %r1862, %r1703;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2211, %r309;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2213, %r2211, %r1875, %r1707;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2217, %r309;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2219, %r2217, %r1886, %r1711;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2223, %r309;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2225, %r2223, %r1897, %r1715;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2229, %r309;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2231, %r2229, %r1908, %r1719;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2235, %r309;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2237, %r2235, %r1921, %r1723;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2241, %r309;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2243, %r2241, %r1932, %r1727;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2247, %r309;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2249, %r2247, %r1943, %r1731;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2253, %r309;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2255, %r2253, %r1954, %r1735;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2259, %r309;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2261, %r2259, %r1967, %r1739;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2265, %r309;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2267, %r2265, %r1978, %r1743;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2271, %r309;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2273, %r2271, %r1989, %r1747;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2277, %r309;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2279, %r2277, %r2000, %r1751;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2283, %r327;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2285, %r2283, %r2013, %r1755;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2289, %r327;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2291, %r2289, %r2024, %r1759;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2295, %r327;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2297, %r2295, %r2035, %r1763;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2301, %r327;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2303, %r2301, %r2046, %r1767;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2307, %r327;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2309, %r2307, %r2059, %r1771;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2313, %r327;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2315, %r2313, %r2070, %r1775;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2319, %r327;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2321, %r2319, %r2081, %r1779;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2325, %r327;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2327, %r2325, %r2092, %r1783;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2331, %r327;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2333, %r2331, %r2105, %r1787;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2337, %r327;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2339, %r2337, %r2116, %r1791;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2343, %r327;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2345, %r2343, %r2127, %r1795;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2349, %r327;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2351, %r2349, %r2138, %r1799;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2355, %r327;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2357, %r2355, %r2151, %r1803;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2361, %r327;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2363, %r2361, %r2162, %r1807;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2367, %r327;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2369, %r2367, %r2173, %r1811;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2373, %r327;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2375, %r2373, %r2184, %r1815;
	// end inline asm
	// begin inline asm
	mov.b32 %r2384, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2395, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2383, %r16201, -2004318072;
	// begin inline asm
	lop3.b32 %r2381, %r798, %r2383, %r2384, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2385, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2386, %r2384, %r2385;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2389, %r2381, %r2386;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2392, %r809, %r2383, %r2395, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2396, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2397, %r2395, %r2396;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2400, %r2392, %r2397;
	// end inline asm
	shr.u32 	%r2405, %r2383, 8;
	// begin inline asm
	lop3.b32 %r2403, %r798, %r2405, %r2384, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2407, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2408, %r2384, %r2407;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2411, %r2403, %r2408;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2414, %r809, %r2405, %r2395, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2418, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2419, %r2395, %r2418;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2422, %r2414, %r2419;
	// end inline asm
	// begin inline asm
	mov.b32 %r2430, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2441, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2429, %r16202, -2004318072;
	// begin inline asm
	lop3.b32 %r2427, %r798, %r2429, %r2430, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2431, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2432, %r2430, %r2431;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2435, %r2427, %r2432;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2438, %r809, %r2429, %r2441, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2442, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2443, %r2441, %r2442;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2446, %r2438, %r2443;
	// end inline asm
	shr.u32 	%r2451, %r2429, 8;
	// begin inline asm
	lop3.b32 %r2449, %r798, %r2451, %r2430, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2453, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2454, %r2430, %r2453;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2457, %r2449, %r2454;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2460, %r809, %r2451, %r2441, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2464, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2465, %r2441, %r2464;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2468, %r2460, %r2465;
	// end inline asm
	// begin inline asm
	mov.b32 %r2476, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2487, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2475, %r16203, -2004318072;
	// begin inline asm
	lop3.b32 %r2473, %r798, %r2475, %r2476, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2477, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2478, %r2476, %r2477;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2481, %r2473, %r2478;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2484, %r809, %r2475, %r2487, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2488, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2489, %r2487, %r2488;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2492, %r2484, %r2489;
	// end inline asm
	shr.u32 	%r2497, %r2475, 8;
	// begin inline asm
	lop3.b32 %r2495, %r798, %r2497, %r2476, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2499, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2500, %r2476, %r2499;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2503, %r2495, %r2500;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2506, %r809, %r2497, %r2487, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2510, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2511, %r2487, %r2510;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2514, %r2506, %r2511;
	// end inline asm
	// begin inline asm
	mov.b32 %r2522, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2533, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2521, %r16204, -2004318072;
	// begin inline asm
	lop3.b32 %r2519, %r798, %r2521, %r2522, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2523, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2524, %r2522, %r2523;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2527, %r2519, %r2524;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2530, %r809, %r2521, %r2533, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2534, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2535, %r2533, %r2534;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2538, %r2530, %r2535;
	// end inline asm
	shr.u32 	%r2543, %r2521, 8;
	// begin inline asm
	lop3.b32 %r2541, %r798, %r2543, %r2522, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2545, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2546, %r2522, %r2545;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2549, %r2541, %r2546;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2552, %r809, %r2543, %r2533, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2556, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2557, %r2533, %r2556;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2560, %r2552, %r2557;
	// end inline asm
	// begin inline asm
	mov.b32 %r2568, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2579, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2567, %r16213, -2004318072;
	// begin inline asm
	lop3.b32 %r2565, %r798, %r2567, %r2568, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2569, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2570, %r2568, %r2569;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2573, %r2565, %r2570;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2576, %r809, %r2567, %r2579, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2580, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2581, %r2579, %r2580;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2584, %r2576, %r2581;
	// end inline asm
	shr.u32 	%r2589, %r2567, 8;
	// begin inline asm
	lop3.b32 %r2587, %r798, %r2589, %r2568, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2591, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2592, %r2568, %r2591;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2595, %r2587, %r2592;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2598, %r809, %r2589, %r2579, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2602, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2603, %r2579, %r2602;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2606, %r2598, %r2603;
	// end inline asm
	// begin inline asm
	mov.b32 %r2614, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2625, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2613, %r16214, -2004318072;
	// begin inline asm
	lop3.b32 %r2611, %r798, %r2613, %r2614, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2615, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2616, %r2614, %r2615;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2619, %r2611, %r2616;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2622, %r809, %r2613, %r2625, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2626, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2627, %r2625, %r2626;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2630, %r2622, %r2627;
	// end inline asm
	shr.u32 	%r2635, %r2613, 8;
	// begin inline asm
	lop3.b32 %r2633, %r798, %r2635, %r2614, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2637, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2638, %r2614, %r2637;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2641, %r2633, %r2638;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2644, %r809, %r2635, %r2625, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2648, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2649, %r2625, %r2648;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2652, %r2644, %r2649;
	// end inline asm
	// begin inline asm
	mov.b32 %r2660, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2671, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2659, %r16215, -2004318072;
	// begin inline asm
	lop3.b32 %r2657, %r798, %r2659, %r2660, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2661, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2662, %r2660, %r2661;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2665, %r2657, %r2662;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2668, %r809, %r2659, %r2671, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2672, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2673, %r2671, %r2672;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2676, %r2668, %r2673;
	// end inline asm
	shr.u32 	%r2681, %r2659, 8;
	// begin inline asm
	lop3.b32 %r2679, %r798, %r2681, %r2660, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2683, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2684, %r2660, %r2683;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2687, %r2679, %r2684;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2690, %r809, %r2681, %r2671, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2694, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2695, %r2671, %r2694;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2698, %r2690, %r2695;
	// end inline asm
	// begin inline asm
	mov.b32 %r2706, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2717, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2705, %r16216, -2004318072;
	// begin inline asm
	lop3.b32 %r2703, %r798, %r2705, %r2706, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2707, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2708, %r2706, %r2707;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2711, %r2703, %r2708;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2714, %r809, %r2705, %r2717, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2718, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2719, %r2717, %r2718;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2722, %r2714, %r2719;
	// end inline asm
	shr.u32 	%r2727, %r2705, 8;
	// begin inline asm
	lop3.b32 %r2725, %r798, %r2727, %r2706, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2729, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2730, %r2706, %r2729;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2733, %r2725, %r2730;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2736, %r809, %r2727, %r2717, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2740, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2741, %r2717, %r2740;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2744, %r2736, %r2741;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2882, %r345, %r2389, %r2189;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2879, %r345, %r2400, %r2195;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2891, %r345, %r2411, %r2201;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2888, %r345, %r2422, %r2207;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2900, %r345, %r2435, %r2213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2897, %r345, %r2446, %r2219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2909, %r345, %r2457, %r2225;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2906, %r345, %r2468, %r2231;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2918, %r345, %r2481, %r2237;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2915, %r345, %r2492, %r2243;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2927, %r345, %r2503, %r2249;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2924, %r345, %r2514, %r2255;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2936, %r345, %r2527, %r2261;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2933, %r345, %r2538, %r2267;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2945, %r345, %r2549, %r2273;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2942, %r345, %r2560, %r2279;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2954, %r363, %r2573, %r2285;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2951, %r363, %r2584, %r2291;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2963, %r363, %r2595, %r2297;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2960, %r363, %r2606, %r2303;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2972, %r363, %r2619, %r2309;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2969, %r363, %r2630, %r2315;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2981, %r363, %r2641, %r2321;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2978, %r363, %r2652, %r2327;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2990, %r363, %r2665, %r2333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2987, %r363, %r2676, %r2339;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2999, %r363, %r2687, %r2345;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2996, %r363, %r2698, %r2351;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3008, %r363, %r2711, %r2357;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3005, %r363, %r2722, %r2363;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3017, %r363, %r2733, %r2369;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3014, %r363, %r2744, %r2375;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2875, %r433;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2877, %r2875, %r2879;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2880, %r427, %r2882, %r2877;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2884, %r433;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2886, %r2884, %r2888;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2889, %r427, %r2891, %r2886;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2893, %r433;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2895, %r2893, %r2897;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2898, %r427, %r2900, %r2895;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2902, %r433;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2904, %r2902, %r2906;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2907, %r427, %r2909, %r2904;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2911, %r433;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2913, %r2911, %r2915;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2916, %r427, %r2918, %r2913;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2920, %r433;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2922, %r2920, %r2924;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2925, %r427, %r2927, %r2922;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2929, %r433;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2931, %r2929, %r2933;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2934, %r427, %r2936, %r2931;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2938, %r433;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2940, %r2938, %r2942;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2943, %r427, %r2945, %r2940;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2947, %r436;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2949, %r2947, %r2951;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2952, %r430, %r2954, %r2949;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2956, %r436;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2958, %r2956, %r2960;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2961, %r430, %r2963, %r2958;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2965, %r436;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2967, %r2965, %r2969;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2970, %r430, %r2972, %r2967;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2974, %r436;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2976, %r2974, %r2978;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2979, %r430, %r2981, %r2976;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2983, %r436;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2985, %r2983, %r2987;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2988, %r430, %r2990, %r2985;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2992, %r436;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2994, %r2992, %r2996;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2997, %r430, %r2999, %r2994;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3001, %r436;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3003, %r3001, %r3005;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3006, %r430, %r3008, %r3003;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3010, %r436;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3012, %r3010, %r3014;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3015, %r430, %r3017, %r3012;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3019, %r433, %r2882;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3022, %r427, %r2879, %r3019;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3026, %r433, %r2891;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3029, %r427, %r2888, %r3026;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3033, %r433, %r2900;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3036, %r427, %r2897, %r3033;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3040, %r433, %r2909;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3043, %r427, %r2906, %r3040;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3047, %r433, %r2918;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3050, %r427, %r2915, %r3047;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3054, %r433, %r2927;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3057, %r427, %r2924, %r3054;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3061, %r433, %r2936;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3064, %r427, %r2933, %r3061;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3068, %r433, %r2945;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3071, %r427, %r2942, %r3068;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3075, %r436, %r2954;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3078, %r430, %r2951, %r3075;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3082, %r436, %r2963;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3085, %r430, %r2960, %r3082;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3089, %r436, %r2972;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3092, %r430, %r2969, %r3089;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3096, %r436, %r2981;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3099, %r430, %r2978, %r3096;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3103, %r436, %r2990;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3106, %r430, %r2987, %r3103;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3110, %r436, %r2999;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3113, %r430, %r2996, %r3110;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3117, %r436, %r3008;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3120, %r430, %r3005, %r3117;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3124, %r436, %r3017;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3127, %r430, %r3014, %r3124;
	// end inline asm
	mov.u32 	%r15154, 0;
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3298, %r3295}, {%r475, %r481, %r478, %r484}, {%r2880, %r3022}, {%r15154, %r15154};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3307, %r3304}, {%r475, %r481, %r478, %r484}, {%r2889, %r3029}, {%r15154, %r15154};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3316, %r3313}, {%r475, %r481, %r478, %r484}, {%r2898, %r3036}, {%r15154, %r15154};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3325, %r3322}, {%r475, %r481, %r478, %r484}, {%r2907, %r3043}, {%r15154, %r15154};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3334, %r3331}, {%r475, %r481, %r478, %r484}, {%r2916, %r3050}, {%r15154, %r15154};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3343, %r3340}, {%r475, %r481, %r478, %r484}, {%r2925, %r3057}, {%r15154, %r15154};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3352, %r3349}, {%r475, %r481, %r478, %r484}, {%r2934, %r3064}, {%r15154, %r15154};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3361, %r3358}, {%r475, %r481, %r478, %r484}, {%r2943, %r3071}, {%r15154, %r15154};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3370, %r3367}, {%r475, %r481, %r478, %r484}, {%r2952, %r3078}, {%r15154, %r15154};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3379, %r3376}, {%r475, %r481, %r478, %r484}, {%r2961, %r3085}, {%r15154, %r15154};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3388, %r3385}, {%r475, %r481, %r478, %r484}, {%r2970, %r3092}, {%r15154, %r15154};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3397, %r3394}, {%r475, %r481, %r478, %r484}, {%r2979, %r3099}, {%r15154, %r15154};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3406, %r3403}, {%r475, %r481, %r478, %r484}, {%r2988, %r3106}, {%r15154, %r15154};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3415, %r3412}, {%r475, %r481, %r478, %r484}, {%r2997, %r3113}, {%r15154, %r15154};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3424, %r3421}, {%r475, %r481, %r478, %r484}, {%r3006, %r3120}, {%r15154, %r15154};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3433, %r3430}, {%r475, %r481, %r478, %r484}, {%r3015, %r3127}, {%r15154, %r15154};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3291, %r525;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3293, %r3291, %r3295;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3296, %r522, %r3298, %r3293;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3300, %r525;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3302, %r3300, %r3304;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3305, %r522, %r3307, %r3302;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3309, %r525;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3311, %r3309, %r3313;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3314, %r522, %r3316, %r3311;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3318, %r525;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3320, %r3318, %r3322;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3323, %r522, %r3325, %r3320;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3327, %r525;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3329, %r3327, %r3331;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3332, %r522, %r3334, %r3329;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3336, %r525;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3338, %r3336, %r3340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3341, %r522, %r3343, %r3338;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3345, %r525;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3347, %r3345, %r3349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3350, %r522, %r3352, %r3347;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3354, %r525;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3356, %r3354, %r3358;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3359, %r522, %r3361, %r3356;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3363, %r525;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3365, %r3363, %r3367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3368, %r522, %r3370, %r3365;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3372, %r525;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3374, %r3372, %r3376;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3377, %r522, %r3379, %r3374;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3381, %r525;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3383, %r3381, %r3385;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3386, %r522, %r3388, %r3383;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3390, %r525;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3392, %r3390, %r3394;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3395, %r522, %r3397, %r3392;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3399, %r525;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3401, %r3399, %r3403;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3404, %r522, %r3406, %r3401;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3408, %r525;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3410, %r3408, %r3412;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3413, %r522, %r3415, %r3410;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3417, %r525;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3419, %r3417, %r3421;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3422, %r522, %r3424, %r3419;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3426, %r525;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3428, %r3426, %r3430;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3431, %r522, %r3433, %r3428;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3435, %r525, %r3298;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3438, %r522, %r3295, %r3435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3442, %r525, %r3307;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3445, %r522, %r3304, %r3442;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3449, %r525, %r3316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3452, %r522, %r3313, %r3449;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3456, %r525, %r3325;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3459, %r522, %r3322, %r3456;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3463, %r525, %r3334;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3466, %r522, %r3331, %r3463;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3470, %r525, %r3343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3473, %r522, %r3340, %r3470;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3477, %r525, %r3352;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3480, %r522, %r3349, %r3477;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3484, %r525, %r3361;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3487, %r522, %r3358, %r3484;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3491, %r525, %r3370;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3494, %r522, %r3367, %r3491;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3498, %r525, %r3379;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3501, %r522, %r3376, %r3498;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3505, %r525, %r3388;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3508, %r522, %r3385, %r3505;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3512, %r525, %r3397;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3515, %r522, %r3394, %r3512;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3519, %r525, %r3406;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3522, %r522, %r3403, %r3519;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3526, %r525, %r3415;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3529, %r522, %r3412, %r3526;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3533, %r525, %r3424;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3536, %r522, %r3421, %r3533;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3540, %r525, %r3433;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3543, %r522, %r3430, %r3540;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3836, %r3839}, {%r565, %r571, %r568, %r574}, {%r3296, %r3438}, {%r15154, %r15154};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3842, %r3845}, {%r565, %r571, %r568, %r574}, {%r3305, %r3445}, {%r15154, %r15154};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3848, %r3851}, {%r565, %r571, %r568, %r574}, {%r3314, %r3452}, {%r15154, %r15154};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3854, %r3857}, {%r565, %r571, %r568, %r574}, {%r3323, %r3459}, {%r15154, %r15154};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3860, %r3863}, {%r565, %r571, %r568, %r574}, {%r3332, %r3466}, {%r15154, %r15154};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3866, %r3869}, {%r565, %r571, %r568, %r574}, {%r3341, %r3473}, {%r15154, %r15154};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3872, %r3875}, {%r565, %r571, %r568, %r574}, {%r3350, %r3480}, {%r15154, %r15154};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3878, %r3881}, {%r565, %r571, %r568, %r574}, {%r3359, %r3487}, {%r15154, %r15154};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3837, %r3840}, {%r565, %r571, %r568, %r574}, {%r3368, %r3494}, {%r15154, %r15154};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3843, %r3846}, {%r565, %r571, %r568, %r574}, {%r3377, %r3501}, {%r15154, %r15154};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3849, %r3852}, {%r565, %r571, %r568, %r574}, {%r3386, %r3508}, {%r15154, %r15154};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3855, %r3858}, {%r565, %r571, %r568, %r574}, {%r3395, %r3515}, {%r15154, %r15154};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3861, %r3864}, {%r565, %r571, %r568, %r574}, {%r3404, %r3522}, {%r15154, %r15154};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3867, %r3870}, {%r565, %r571, %r568, %r574}, {%r3413, %r3529}, {%r15154, %r15154};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3873, %r3876}, {%r565, %r571, %r568, %r574}, {%r3422, %r3536}, {%r15154, %r15154};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3879, %r3882}, {%r565, %r571, %r568, %r574}, {%r3431, %r3543}, {%r15154, %r15154};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3835, %r3836, %r3837;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3838, %r3839, %r3840;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3841, %r3842, %r3843;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3844, %r3845, %r3846;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3847, %r3848, %r3849;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3850, %r3851, %r3852;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3853, %r3854, %r3855;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3856, %r3857, %r3858;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3859, %r3860, %r3861;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3862, %r3863, %r3864;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3865, %r3866, %r3867;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3868, %r3869, %r3870;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3871, %r3872, %r3873;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3874, %r3875, %r3876;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3877, %r3878, %r3879;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3880, %r3881, %r3882;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3883, %r3836, %r3837;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3886, %r3839, %r3840;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3889, %r3842, %r3843;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3892, %r3845, %r3846;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3895, %r3848, %r3849;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3898, %r3851, %r3852;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3901, %r3854, %r3855;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3904, %r3857, %r3858;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3907, %r3860, %r3861;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3910, %r3863, %r3864;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3913, %r3866, %r3867;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3916, %r3869, %r3870;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3919, %r3872, %r3873;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3922, %r3875, %r3876;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3925, %r3878, %r3879;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3928, %r3881, %r3882;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3931, %r11, %r3835;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3934, %r11, %r3838;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3937, %r11, %r3841;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3940, %r11, %r3844;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3943, %r11, %r3847;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3946, %r11, %r3850;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3949, %r11, %r3853;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3952, %r11, %r3856;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3955, %r11, %r3859;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3958, %r11, %r3862;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3961, %r11, %r3865;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3964, %r11, %r3868;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3967, %r11, %r3871;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3970, %r11, %r3874;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3973, %r11, %r3877;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3976, %r11, %r3880;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3979, %r12, %r3883;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3982, %r12, %r3886;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3985, %r12, %r3889;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3988, %r12, %r3892;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3991, %r12, %r3895;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3994, %r12, %r3898;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3997, %r12, %r3901;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4000, %r12, %r3904;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4003, %r12, %r3907;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4006, %r12, %r3910;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4009, %r12, %r3913;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4012, %r12, %r3916;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4015, %r12, %r3919;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4018, %r12, %r3922;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4021, %r12, %r3925;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4024, %r12, %r3928;
	// end inline asm
	// begin inline asm
	mov.b32 %r4027, {%rs2307, %rs2307};
	// end inline asm
	mov.u16 	%rs408, 18176;
	// begin inline asm
	mov.b32 %r4028, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4029, %r3931, %r4027;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4032, %r4029, %r4028;
	// end inline asm
	// begin inline asm
	mov.b32 %r4035, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4036, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4037, %r3934, %r4035;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4040, %r4037, %r4036;
	// end inline asm
	// begin inline asm
	mov.b32 %r4043, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4044, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4045, %r3937, %r4043;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4048, %r4045, %r4044;
	// end inline asm
	// begin inline asm
	mov.b32 %r4051, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4052, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4053, %r3940, %r4051;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4056, %r4053, %r4052;
	// end inline asm
	// begin inline asm
	mov.b32 %r4059, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4060, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4061, %r3943, %r4059;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4064, %r4061, %r4060;
	// end inline asm
	// begin inline asm
	mov.b32 %r4067, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4068, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4069, %r3946, %r4067;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4072, %r4069, %r4068;
	// end inline asm
	// begin inline asm
	mov.b32 %r4075, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4076, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4077, %r3949, %r4075;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4080, %r4077, %r4076;
	// end inline asm
	// begin inline asm
	mov.b32 %r4083, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4084, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4085, %r3952, %r4083;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4088, %r4085, %r4084;
	// end inline asm
	// begin inline asm
	mov.b32 %r4091, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4092, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4093, %r3955, %r4091;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4096, %r4093, %r4092;
	// end inline asm
	// begin inline asm
	mov.b32 %r4099, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4100, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4101, %r3958, %r4099;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4104, %r4101, %r4100;
	// end inline asm
	// begin inline asm
	mov.b32 %r4107, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4108, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4109, %r3961, %r4107;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4112, %r4109, %r4108;
	// end inline asm
	// begin inline asm
	mov.b32 %r4115, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4116, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4117, %r3964, %r4115;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4120, %r4117, %r4116;
	// end inline asm
	// begin inline asm
	mov.b32 %r4123, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4124, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4125, %r3967, %r4123;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4128, %r4125, %r4124;
	// end inline asm
	// begin inline asm
	mov.b32 %r4131, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4132, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4133, %r3970, %r4131;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4136, %r4133, %r4132;
	// end inline asm
	// begin inline asm
	mov.b32 %r4139, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4140, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4141, %r3973, %r4139;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4144, %r4141, %r4140;
	// end inline asm
	// begin inline asm
	mov.b32 %r4147, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4148, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4149, %r3976, %r4147;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4152, %r4149, %r4148;
	// end inline asm
	// begin inline asm
	mov.b32 %r4155, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4156, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4157, %r3979, %r4155;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4160, %r4157, %r4156;
	// end inline asm
	// begin inline asm
	mov.b32 %r4163, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4164, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4165, %r3982, %r4163;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4168, %r4165, %r4164;
	// end inline asm
	// begin inline asm
	mov.b32 %r4171, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4172, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4173, %r3985, %r4171;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4176, %r4173, %r4172;
	// end inline asm
	// begin inline asm
	mov.b32 %r4179, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4180, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4181, %r3988, %r4179;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4184, %r4181, %r4180;
	// end inline asm
	// begin inline asm
	mov.b32 %r4187, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4188, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4189, %r3991, %r4187;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4192, %r4189, %r4188;
	// end inline asm
	// begin inline asm
	mov.b32 %r4195, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4196, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4197, %r3994, %r4195;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4200, %r4197, %r4196;
	// end inline asm
	// begin inline asm
	mov.b32 %r4203, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4204, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4205, %r3997, %r4203;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4208, %r4205, %r4204;
	// end inline asm
	// begin inline asm
	mov.b32 %r4211, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4212, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4213, %r4000, %r4211;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4216, %r4213, %r4212;
	// end inline asm
	// begin inline asm
	mov.b32 %r4219, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4220, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4221, %r4003, %r4219;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4224, %r4221, %r4220;
	// end inline asm
	// begin inline asm
	mov.b32 %r4227, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4228, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4229, %r4006, %r4227;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4232, %r4229, %r4228;
	// end inline asm
	// begin inline asm
	mov.b32 %r4235, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4236, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4237, %r4009, %r4235;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4240, %r4237, %r4236;
	// end inline asm
	// begin inline asm
	mov.b32 %r4243, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4244, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4245, %r4012, %r4243;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4248, %r4245, %r4244;
	// end inline asm
	// begin inline asm
	mov.b32 %r4251, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4252, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4253, %r4015, %r4251;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4256, %r4253, %r4252;
	// end inline asm
	// begin inline asm
	mov.b32 %r4259, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4260, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4261, %r4018, %r4259;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4264, %r4261, %r4260;
	// end inline asm
	// begin inline asm
	mov.b32 %r4267, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4268, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4269, %r4021, %r4267;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4272, %r4269, %r4268;
	// end inline asm
	// begin inline asm
	mov.b32 %r4275, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4276, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4277, %r4024, %r4275;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4280, %r4277, %r4276;
	// end inline asm
	// begin inline asm
	mov.b32 %r4286, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4284, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4285, %r4286, %r4284;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4288, %r4032, %r4285;
	// end inline asm
	// begin inline asm
	mov.b32 %r4291, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4292, %r4286, %r4291;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4295, %r4040, %r4292;
	// end inline asm
	// begin inline asm
	mov.b32 %r4298, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4299, %r4286, %r4298;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4302, %r4048, %r4299;
	// end inline asm
	// begin inline asm
	mov.b32 %r4305, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4306, %r4286, %r4305;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4309, %r4056, %r4306;
	// end inline asm
	mov.u32 	%r4315, 25152;
	// begin inline asm
	prmt.b32 %r4312, %r4288, %r4302, %r4315;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4316, %r4295, %r4309, %r4315;
	// end inline asm
	shl.b32 	%r4323, %r4316, 4;
	mov.u32 	%r4321, 252645135;
	// begin inline asm
	lop3.b32 %r4320, %r4321, %r4312, %r4323, 202;
	// end inline asm
	xor.b32  	%r16067, %r4320, -2004318072;
	// begin inline asm
	mov.b32 %r4327, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4325, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4326, %r4327, %r4325;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4329, %r4064, %r4326;
	// end inline asm
	// begin inline asm
	mov.b32 %r4332, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4333, %r4327, %r4332;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4336, %r4072, %r4333;
	// end inline asm
	// begin inline asm
	mov.b32 %r4339, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4340, %r4327, %r4339;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4343, %r4080, %r4340;
	// end inline asm
	// begin inline asm
	mov.b32 %r4346, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4347, %r4327, %r4346;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4350, %r4088, %r4347;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4353, %r4329, %r4343, %r4315;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4357, %r4336, %r4350, %r4315;
	// end inline asm
	shl.b32 	%r4364, %r4357, 4;
	// begin inline asm
	lop3.b32 %r4361, %r4321, %r4353, %r4364, 202;
	// end inline asm
	xor.b32  	%r16068, %r4361, -2004318072;
	// begin inline asm
	mov.b32 %r4368, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4366, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4367, %r4368, %r4366;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4370, %r4096, %r4367;
	// end inline asm
	// begin inline asm
	mov.b32 %r4373, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4374, %r4368, %r4373;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4377, %r4104, %r4374;
	// end inline asm
	// begin inline asm
	mov.b32 %r4380, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4381, %r4368, %r4380;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4384, %r4112, %r4381;
	// end inline asm
	// begin inline asm
	mov.b32 %r4387, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4388, %r4368, %r4387;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4391, %r4120, %r4388;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4394, %r4370, %r4384, %r4315;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4398, %r4377, %r4391, %r4315;
	// end inline asm
	shl.b32 	%r4405, %r4398, 4;
	// begin inline asm
	lop3.b32 %r4402, %r4321, %r4394, %r4405, 202;
	// end inline asm
	xor.b32  	%r16069, %r4402, -2004318072;
	// begin inline asm
	mov.b32 %r4409, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4407, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4408, %r4409, %r4407;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4411, %r4128, %r4408;
	// end inline asm
	// begin inline asm
	mov.b32 %r4414, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4415, %r4409, %r4414;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4418, %r4136, %r4415;
	// end inline asm
	// begin inline asm
	mov.b32 %r4421, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4422, %r4409, %r4421;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4425, %r4144, %r4422;
	// end inline asm
	// begin inline asm
	mov.b32 %r4428, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4429, %r4409, %r4428;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4432, %r4152, %r4429;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4435, %r4411, %r4425, %r4315;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4439, %r4418, %r4432, %r4315;
	// end inline asm
	shl.b32 	%r4446, %r4439, 4;
	// begin inline asm
	lop3.b32 %r4443, %r4321, %r4435, %r4446, 202;
	// end inline asm
	xor.b32  	%r16070, %r4443, -2004318072;
	// begin inline asm
	mov.b32 %r4450, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4448, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4449, %r4450, %r4448;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4452, %r4160, %r4449;
	// end inline asm
	// begin inline asm
	mov.b32 %r4455, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4456, %r4450, %r4455;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4459, %r4168, %r4456;
	// end inline asm
	// begin inline asm
	mov.b32 %r4462, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4463, %r4450, %r4462;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4466, %r4176, %r4463;
	// end inline asm
	// begin inline asm
	mov.b32 %r4469, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4470, %r4450, %r4469;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4473, %r4184, %r4470;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4476, %r4452, %r4466, %r4315;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4480, %r4459, %r4473, %r4315;
	// end inline asm
	shl.b32 	%r4487, %r4480, 4;
	// begin inline asm
	lop3.b32 %r4484, %r4321, %r4476, %r4487, 202;
	// end inline asm
	xor.b32  	%r16071, %r4484, -2004318072;
	// begin inline asm
	mov.b32 %r4491, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4489, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4490, %r4491, %r4489;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4493, %r4192, %r4490;
	// end inline asm
	// begin inline asm
	mov.b32 %r4496, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4497, %r4491, %r4496;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4500, %r4200, %r4497;
	// end inline asm
	// begin inline asm
	mov.b32 %r4503, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4504, %r4491, %r4503;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4507, %r4208, %r4504;
	// end inline asm
	// begin inline asm
	mov.b32 %r4510, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4511, %r4491, %r4510;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4514, %r4216, %r4511;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4517, %r4493, %r4507, %r4315;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4521, %r4500, %r4514, %r4315;
	// end inline asm
	shl.b32 	%r4528, %r4521, 4;
	// begin inline asm
	lop3.b32 %r4525, %r4321, %r4517, %r4528, 202;
	// end inline asm
	xor.b32  	%r16072, %r4525, -2004318072;
	// begin inline asm
	mov.b32 %r4532, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4530, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4531, %r4532, %r4530;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4534, %r4224, %r4531;
	// end inline asm
	// begin inline asm
	mov.b32 %r4537, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4538, %r4532, %r4537;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4541, %r4232, %r4538;
	// end inline asm
	// begin inline asm
	mov.b32 %r4544, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4545, %r4532, %r4544;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4548, %r4240, %r4545;
	// end inline asm
	// begin inline asm
	mov.b32 %r4551, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4552, %r4532, %r4551;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4555, %r4248, %r4552;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4558, %r4534, %r4548, %r4315;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4562, %r4541, %r4555, %r4315;
	// end inline asm
	shl.b32 	%r4569, %r4562, 4;
	// begin inline asm
	lop3.b32 %r4566, %r4321, %r4558, %r4569, 202;
	// end inline asm
	xor.b32  	%r16073, %r4566, -2004318072;
	// begin inline asm
	mov.b32 %r4573, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4571, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4572, %r4573, %r4571;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4575, %r4256, %r4572;
	// end inline asm
	// begin inline asm
	mov.b32 %r4578, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4579, %r4573, %r4578;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4582, %r4264, %r4579;
	// end inline asm
	// begin inline asm
	mov.b32 %r4585, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4586, %r4573, %r4585;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4589, %r4272, %r4586;
	// end inline asm
	// begin inline asm
	mov.b32 %r4592, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4593, %r4573, %r4592;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4596, %r4280, %r4593;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4599, %r4575, %r4589, %r4315;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4603, %r4582, %r4596, %r4315;
	// end inline asm
	shl.b32 	%r4610, %r4603, 4;
	// begin inline asm
	lop3.b32 %r4607, %r4321, %r4599, %r4610, 202;
	// end inline asm
	xor.b32  	%r16074, %r4607, -2004318072;
	add.s64 	%rd82, %rd94, %rd24;
	st.shared.u32 	[%rd82], %r16067;
	add.s64 	%rd83, %rd94, %rd23;
	st.shared.u32 	[%rd83], %r16068;
	add.s64 	%rd84, %rd94, %rd22;
	st.shared.u32 	[%rd84], %r16069;
	add.s64 	%rd85, %rd94, %rd21;
	st.shared.u32 	[%rd85], %r16070;
	add.s64 	%rd86, %rd94, %rd20;
	st.shared.u32 	[%rd86], %r16071;
	add.s64 	%rd87, %rd94, %rd19;
	st.shared.u32 	[%rd87], %r16072;
	add.s64 	%rd88, %rd94, %rd18;
	st.shared.u32 	[%rd88], %r16073;
	add.s64 	%rd89, %rd94, %rd17;
	st.shared.u32 	[%rd89], %r16074;
	ld.shared.u32 	%r16193, [%rd74];
	ld.shared.u32 	%r16194, [%rd75];
	ld.shared.u32 	%r16195, [%rd76];
	ld.shared.u32 	%r16196, [%rd77];
	ld.shared.u32 	%r16205, [%rd78];
	ld.shared.u32 	%r16206, [%rd79];
	ld.shared.u32 	%r16207, [%rd80];
	ld.shared.u32 	%r16208, [%rd81];
	// begin inline asm
	mov.b32 %r4616, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4627, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4615, %r16193, -2004318072;
	// begin inline asm
	lop3.b32 %r4613, %r798, %r4615, %r4616, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4617, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4618, %r4616, %r4617;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4621, %r4613, %r4618;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4624, %r809, %r4615, %r4627, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4628, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4629, %r4627, %r4628;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4632, %r4624, %r4629;
	// end inline asm
	shr.u32 	%r4637, %r4615, 8;
	// begin inline asm
	lop3.b32 %r4635, %r798, %r4637, %r4616, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4639, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4640, %r4616, %r4639;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4643, %r4635, %r4640;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4646, %r809, %r4637, %r4627, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4650, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4651, %r4627, %r4650;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4654, %r4646, %r4651;
	// end inline asm
	// begin inline asm
	mov.b32 %r4662, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4673, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4661, %r16194, -2004318072;
	// begin inline asm
	lop3.b32 %r4659, %r798, %r4661, %r4662, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4663, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4664, %r4662, %r4663;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4667, %r4659, %r4664;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4670, %r809, %r4661, %r4673, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4674, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4675, %r4673, %r4674;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4678, %r4670, %r4675;
	// end inline asm
	shr.u32 	%r4683, %r4661, 8;
	// begin inline asm
	lop3.b32 %r4681, %r798, %r4683, %r4662, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4685, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4686, %r4662, %r4685;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4689, %r4681, %r4686;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4692, %r809, %r4683, %r4673, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4696, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4697, %r4673, %r4696;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4700, %r4692, %r4697;
	// end inline asm
	// begin inline asm
	mov.b32 %r4708, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4719, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4707, %r16195, -2004318072;
	// begin inline asm
	lop3.b32 %r4705, %r798, %r4707, %r4708, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4709, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4710, %r4708, %r4709;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4713, %r4705, %r4710;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4716, %r809, %r4707, %r4719, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4720, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4721, %r4719, %r4720;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4724, %r4716, %r4721;
	// end inline asm
	shr.u32 	%r4729, %r4707, 8;
	// begin inline asm
	lop3.b32 %r4727, %r798, %r4729, %r4708, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4731, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4732, %r4708, %r4731;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4735, %r4727, %r4732;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4738, %r809, %r4729, %r4719, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4742, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4743, %r4719, %r4742;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4746, %r4738, %r4743;
	// end inline asm
	// begin inline asm
	mov.b32 %r4754, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4765, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4753, %r16196, -2004318072;
	// begin inline asm
	lop3.b32 %r4751, %r798, %r4753, %r4754, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4755, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4756, %r4754, %r4755;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4759, %r4751, %r4756;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4762, %r809, %r4753, %r4765, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4766, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4767, %r4765, %r4766;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4770, %r4762, %r4767;
	// end inline asm
	shr.u32 	%r4775, %r4753, 8;
	// begin inline asm
	lop3.b32 %r4773, %r798, %r4775, %r4754, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4777, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4778, %r4754, %r4777;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4781, %r4773, %r4778;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4784, %r809, %r4775, %r4765, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4788, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4789, %r4765, %r4788;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4792, %r4784, %r4789;
	// end inline asm
	// begin inline asm
	mov.b32 %r4800, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4811, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4799, %r16205, -2004318072;
	// begin inline asm
	lop3.b32 %r4797, %r798, %r4799, %r4800, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4801, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4802, %r4800, %r4801;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4805, %r4797, %r4802;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4808, %r809, %r4799, %r4811, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4812, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4813, %r4811, %r4812;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4816, %r4808, %r4813;
	// end inline asm
	shr.u32 	%r4821, %r4799, 8;
	// begin inline asm
	lop3.b32 %r4819, %r798, %r4821, %r4800, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4823, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4824, %r4800, %r4823;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4827, %r4819, %r4824;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4830, %r809, %r4821, %r4811, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4834, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4835, %r4811, %r4834;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4838, %r4830, %r4835;
	// end inline asm
	// begin inline asm
	mov.b32 %r4846, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4857, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4845, %r16206, -2004318072;
	// begin inline asm
	lop3.b32 %r4843, %r798, %r4845, %r4846, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4847, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4848, %r4846, %r4847;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4851, %r4843, %r4848;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4854, %r809, %r4845, %r4857, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4858, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4859, %r4857, %r4858;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4862, %r4854, %r4859;
	// end inline asm
	shr.u32 	%r4867, %r4845, 8;
	// begin inline asm
	lop3.b32 %r4865, %r798, %r4867, %r4846, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4869, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4870, %r4846, %r4869;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4873, %r4865, %r4870;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4876, %r809, %r4867, %r4857, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4880, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4881, %r4857, %r4880;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4884, %r4876, %r4881;
	// end inline asm
	// begin inline asm
	mov.b32 %r4892, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4903, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4891, %r16207, -2004318072;
	// begin inline asm
	lop3.b32 %r4889, %r798, %r4891, %r4892, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4893, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4894, %r4892, %r4893;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4897, %r4889, %r4894;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4900, %r809, %r4891, %r4903, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4904, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4905, %r4903, %r4904;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4908, %r4900, %r4905;
	// end inline asm
	shr.u32 	%r4913, %r4891, 8;
	// begin inline asm
	lop3.b32 %r4911, %r798, %r4913, %r4892, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4915, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4916, %r4892, %r4915;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4919, %r4911, %r4916;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4922, %r809, %r4913, %r4903, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4926, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4927, %r4903, %r4926;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4930, %r4922, %r4927;
	// end inline asm
	// begin inline asm
	mov.b32 %r4938, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4949, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4937, %r16208, -2004318072;
	// begin inline asm
	lop3.b32 %r4935, %r798, %r4937, %r4938, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4939, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4940, %r4938, %r4939;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4943, %r4935, %r4940;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4946, %r809, %r4937, %r4949, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4950, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4951, %r4949, %r4950;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4954, %r4946, %r4951;
	// end inline asm
	shr.u32 	%r4959, %r4937, 8;
	// begin inline asm
	lop3.b32 %r4957, %r798, %r4959, %r4938, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4961, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4962, %r4938, %r4961;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4965, %r4957, %r4962;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4968, %r809, %r4959, %r4949, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4972, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4973, %r4949, %r4972;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4976, %r4968, %r4973;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4979, %r381;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4981, %r4979, %r4621;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4984, %r381;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4986, %r4984, %r4632;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4989, %r381;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4991, %r4989, %r4643;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4994, %r381;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4996, %r4994, %r4654;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4999, %r381;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5001, %r4999, %r4667;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5004, %r381;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5006, %r5004, %r4678;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5009, %r381;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5011, %r5009, %r4689;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5014, %r381;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5016, %r5014, %r4700;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5019, %r381;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5021, %r5019, %r4713;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5024, %r381;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5026, %r5024, %r4724;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5029, %r381;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5031, %r5029, %r4735;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5034, %r381;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5036, %r5034, %r4746;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5039, %r381;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5041, %r5039, %r4759;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5044, %r381;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5046, %r5044, %r4770;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5049, %r381;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5051, %r5049, %r4781;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5054, %r381;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5056, %r5054, %r4792;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5059, %r399;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5061, %r5059, %r4805;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5064, %r399;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5066, %r5064, %r4816;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5069, %r399;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5071, %r5069, %r4827;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5074, %r399;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5076, %r5074, %r4838;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5079, %r399;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5081, %r5079, %r4851;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5084, %r399;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5086, %r5084, %r4862;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5089, %r399;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5091, %r5089, %r4873;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5094, %r399;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5096, %r5094, %r4884;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5099, %r399;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5101, %r5099, %r4897;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5104, %r399;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5106, %r5104, %r4908;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5109, %r399;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5111, %r5109, %r4919;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5114, %r399;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5116, %r5114, %r4930;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5119, %r399;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5121, %r5119, %r4943;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5124, %r399;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5126, %r5124, %r4954;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5129, %r399;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5131, %r5129, %r4965;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5134, %r399;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5136, %r5134, %r4976;
	// end inline asm
	// begin inline asm
	mov.b32 %r5144, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5155, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5141, %r798, %r1823, %r5144, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5145, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5146, %r5144, %r5145;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5149, %r5141, %r5146;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5152, %r809, %r1823, %r5155, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5156, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5157, %r5155, %r5156;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5160, %r5152, %r5157;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5163, %r798, %r1845, %r5144, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5167, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5168, %r5144, %r5167;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5171, %r5163, %r5168;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5174, %r809, %r1845, %r5155, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5178, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5179, %r5155, %r5178;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5182, %r5174, %r5179;
	// end inline asm
	// begin inline asm
	mov.b32 %r5190, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5201, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5187, %r798, %r1869, %r5190, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5191, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5192, %r5190, %r5191;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5195, %r5187, %r5192;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5198, %r809, %r1869, %r5201, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5202, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5203, %r5201, %r5202;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5206, %r5198, %r5203;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5209, %r798, %r1891, %r5190, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5213, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5214, %r5190, %r5213;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5217, %r5209, %r5214;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5220, %r809, %r1891, %r5201, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5224, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5225, %r5201, %r5224;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5228, %r5220, %r5225;
	// end inline asm
	// begin inline asm
	mov.b32 %r5236, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5247, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5233, %r798, %r1915, %r5236, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5237, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5238, %r5236, %r5237;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5241, %r5233, %r5238;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5244, %r809, %r1915, %r5247, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5248, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5249, %r5247, %r5248;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5252, %r5244, %r5249;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5255, %r798, %r1937, %r5236, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5259, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5260, %r5236, %r5259;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5263, %r5255, %r5260;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5266, %r809, %r1937, %r5247, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5270, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5271, %r5247, %r5270;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5274, %r5266, %r5271;
	// end inline asm
	// begin inline asm
	mov.b32 %r5282, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5293, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5279, %r798, %r1961, %r5282, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5283, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5284, %r5282, %r5283;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5287, %r5279, %r5284;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5290, %r809, %r1961, %r5293, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5294, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5295, %r5293, %r5294;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5298, %r5290, %r5295;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5301, %r798, %r1983, %r5282, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5305, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5306, %r5282, %r5305;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5309, %r5301, %r5306;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5312, %r809, %r1983, %r5293, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5316, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5317, %r5293, %r5316;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5320, %r5312, %r5317;
	// end inline asm
	// begin inline asm
	mov.b32 %r5328, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5339, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5325, %r798, %r2007, %r5328, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5329, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5330, %r5328, %r5329;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5333, %r5325, %r5330;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5336, %r809, %r2007, %r5339, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5340, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5341, %r5339, %r5340;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5344, %r5336, %r5341;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5347, %r798, %r2029, %r5328, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5351, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5352, %r5328, %r5351;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5355, %r5347, %r5352;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5358, %r809, %r2029, %r5339, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5362, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5363, %r5339, %r5362;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5366, %r5358, %r5363;
	// end inline asm
	// begin inline asm
	mov.b32 %r5374, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5385, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5371, %r798, %r2053, %r5374, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5375, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5376, %r5374, %r5375;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5379, %r5371, %r5376;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5382, %r809, %r2053, %r5385, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5386, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5387, %r5385, %r5386;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5390, %r5382, %r5387;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5393, %r798, %r2075, %r5374, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5397, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5398, %r5374, %r5397;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5401, %r5393, %r5398;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5404, %r809, %r2075, %r5385, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5408, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5409, %r5385, %r5408;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5412, %r5404, %r5409;
	// end inline asm
	// begin inline asm
	mov.b32 %r5420, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5431, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5417, %r798, %r2099, %r5420, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5421, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5422, %r5420, %r5421;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5425, %r5417, %r5422;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5428, %r809, %r2099, %r5431, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5432, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5433, %r5431, %r5432;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5436, %r5428, %r5433;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5439, %r798, %r2121, %r5420, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5443, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5444, %r5420, %r5443;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5447, %r5439, %r5444;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5450, %r809, %r2121, %r5431, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5454, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5455, %r5431, %r5454;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5458, %r5450, %r5455;
	// end inline asm
	// begin inline asm
	mov.b32 %r5466, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5477, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5463, %r798, %r2145, %r5466, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5467, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5468, %r5466, %r5467;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5471, %r5463, %r5468;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5474, %r809, %r2145, %r5477, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5478, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5479, %r5477, %r5478;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5482, %r5474, %r5479;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5485, %r798, %r2167, %r5466, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5489, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5490, %r5466, %r5489;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5493, %r5485, %r5490;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5496, %r809, %r2167, %r5477, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5500, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5501, %r5477, %r5500;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5504, %r5496, %r5501;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5507, %r273, %r5149, %r4981;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5511, %r273, %r5160, %r4986;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5515, %r273, %r5171, %r4991;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5519, %r273, %r5182, %r4996;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5523, %r273, %r5195, %r5001;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5527, %r273, %r5206, %r5006;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5531, %r273, %r5217, %r5011;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5535, %r273, %r5228, %r5016;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5539, %r273, %r5241, %r5021;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5543, %r273, %r5252, %r5026;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5547, %r273, %r5263, %r5031;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5551, %r273, %r5274, %r5036;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5555, %r273, %r5287, %r5041;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5559, %r273, %r5298, %r5046;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5563, %r273, %r5309, %r5051;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5567, %r273, %r5320, %r5056;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5571, %r291, %r5333, %r5061;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5575, %r291, %r5344, %r5066;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5579, %r291, %r5355, %r5071;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5583, %r291, %r5366, %r5076;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5587, %r291, %r5379, %r5081;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5591, %r291, %r5390, %r5086;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5595, %r291, %r5401, %r5091;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5599, %r291, %r5412, %r5096;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5603, %r291, %r5425, %r5101;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5607, %r291, %r5436, %r5106;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5611, %r291, %r5447, %r5111;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5615, %r291, %r5458, %r5116;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5619, %r291, %r5471, %r5121;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5623, %r291, %r5482, %r5126;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5627, %r291, %r5493, %r5131;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5631, %r291, %r5504, %r5136;
	// end inline asm
	// begin inline asm
	mov.b32 %r5640, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5651, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5637, %r798, %r2383, %r5640, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5641, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5642, %r5640, %r5641;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5645, %r5637, %r5642;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5648, %r809, %r2383, %r5651, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5652, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5653, %r5651, %r5652;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5656, %r5648, %r5653;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5659, %r798, %r2405, %r5640, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5663, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5664, %r5640, %r5663;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5667, %r5659, %r5664;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5670, %r809, %r2405, %r5651, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5674, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5675, %r5651, %r5674;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5678, %r5670, %r5675;
	// end inline asm
	// begin inline asm
	mov.b32 %r5686, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5697, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5683, %r798, %r2429, %r5686, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5687, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5688, %r5686, %r5687;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5691, %r5683, %r5688;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5694, %r809, %r2429, %r5697, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5698, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5699, %r5697, %r5698;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5702, %r5694, %r5699;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5705, %r798, %r2451, %r5686, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5709, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5710, %r5686, %r5709;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5713, %r5705, %r5710;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5716, %r809, %r2451, %r5697, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5720, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5721, %r5697, %r5720;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5724, %r5716, %r5721;
	// end inline asm
	// begin inline asm
	mov.b32 %r5732, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5743, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5729, %r798, %r2475, %r5732, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5733, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5734, %r5732, %r5733;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5737, %r5729, %r5734;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5740, %r809, %r2475, %r5743, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5744, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5745, %r5743, %r5744;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5748, %r5740, %r5745;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5751, %r798, %r2497, %r5732, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5755, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5756, %r5732, %r5755;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5759, %r5751, %r5756;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5762, %r809, %r2497, %r5743, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5766, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5767, %r5743, %r5766;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5770, %r5762, %r5767;
	// end inline asm
	// begin inline asm
	mov.b32 %r5778, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5789, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5775, %r798, %r2521, %r5778, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5779, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5780, %r5778, %r5779;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5783, %r5775, %r5780;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5786, %r809, %r2521, %r5789, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5790, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5791, %r5789, %r5790;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5794, %r5786, %r5791;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5797, %r798, %r2543, %r5778, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5801, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5802, %r5778, %r5801;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5805, %r5797, %r5802;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5808, %r809, %r2543, %r5789, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5812, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5813, %r5789, %r5812;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5816, %r5808, %r5813;
	// end inline asm
	// begin inline asm
	mov.b32 %r5824, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5835, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5821, %r798, %r2567, %r5824, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5825, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5826, %r5824, %r5825;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5829, %r5821, %r5826;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5832, %r809, %r2567, %r5835, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5836, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5837, %r5835, %r5836;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5840, %r5832, %r5837;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5843, %r798, %r2589, %r5824, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5847, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5848, %r5824, %r5847;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5851, %r5843, %r5848;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5854, %r809, %r2589, %r5835, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5858, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5859, %r5835, %r5858;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5862, %r5854, %r5859;
	// end inline asm
	// begin inline asm
	mov.b32 %r5870, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5881, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5867, %r798, %r2613, %r5870, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5871, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5872, %r5870, %r5871;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5875, %r5867, %r5872;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5878, %r809, %r2613, %r5881, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5882, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5883, %r5881, %r5882;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5886, %r5878, %r5883;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5889, %r798, %r2635, %r5870, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5893, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5894, %r5870, %r5893;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5897, %r5889, %r5894;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5900, %r809, %r2635, %r5881, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5904, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5905, %r5881, %r5904;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5908, %r5900, %r5905;
	// end inline asm
	// begin inline asm
	mov.b32 %r5916, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5927, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5913, %r798, %r2659, %r5916, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5917, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5918, %r5916, %r5917;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5921, %r5913, %r5918;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5924, %r809, %r2659, %r5927, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5928, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5929, %r5927, %r5928;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5932, %r5924, %r5929;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5935, %r798, %r2681, %r5916, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5939, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5940, %r5916, %r5939;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5943, %r5935, %r5940;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5946, %r809, %r2681, %r5927, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5950, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5951, %r5927, %r5950;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5954, %r5946, %r5951;
	// end inline asm
	// begin inline asm
	mov.b32 %r5962, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5973, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5959, %r798, %r2705, %r5962, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5963, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5964, %r5962, %r5963;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5967, %r5959, %r5964;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5970, %r809, %r2705, %r5973, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5974, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5975, %r5973, %r5974;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5978, %r5970, %r5975;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5981, %r798, %r2727, %r5962, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5985, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5986, %r5962, %r5985;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5989, %r5981, %r5986;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5992, %r809, %r2727, %r5973, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5996, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5997, %r5973, %r5996;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6000, %r5992, %r5997;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6003, %r309;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6005, %r6003, %r5645, %r5507;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6009, %r309;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6011, %r6009, %r5656, %r5511;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6015, %r309;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6017, %r6015, %r5667, %r5515;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6021, %r309;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6023, %r6021, %r5678, %r5519;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6027, %r309;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6029, %r6027, %r5691, %r5523;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6033, %r309;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6035, %r6033, %r5702, %r5527;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6039, %r309;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6041, %r6039, %r5713, %r5531;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6045, %r309;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6047, %r6045, %r5724, %r5535;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6051, %r309;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6053, %r6051, %r5737, %r5539;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6057, %r309;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6059, %r6057, %r5748, %r5543;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6063, %r309;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6065, %r6063, %r5759, %r5547;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6069, %r309;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6071, %r6069, %r5770, %r5551;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6075, %r309;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6077, %r6075, %r5783, %r5555;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6081, %r309;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6083, %r6081, %r5794, %r5559;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6087, %r309;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6089, %r6087, %r5805, %r5563;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6093, %r309;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6095, %r6093, %r5816, %r5567;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6099, %r327;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6101, %r6099, %r5829, %r5571;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6105, %r327;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6107, %r6105, %r5840, %r5575;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6111, %r327;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6113, %r6111, %r5851, %r5579;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6117, %r327;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6119, %r6117, %r5862, %r5583;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6123, %r327;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6125, %r6123, %r5875, %r5587;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6129, %r327;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6131, %r6129, %r5886, %r5591;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6135, %r327;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6137, %r6135, %r5897, %r5595;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6141, %r327;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6143, %r6141, %r5908, %r5599;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6147, %r327;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6149, %r6147, %r5921, %r5603;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6153, %r327;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6155, %r6153, %r5932, %r5607;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6159, %r327;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6161, %r6159, %r5943, %r5611;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6165, %r327;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6167, %r6165, %r5954, %r5615;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6171, %r327;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6173, %r6171, %r5967, %r5619;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6177, %r327;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6179, %r6177, %r5978, %r5623;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6183, %r327;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6185, %r6183, %r5989, %r5627;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6189, %r327;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6191, %r6189, %r6000, %r5631;
	// end inline asm
	// begin inline asm
	mov.b32 %r6200, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6211, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6197, %r798, %r799, %r6200, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6201, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6202, %r6200, %r6201;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6205, %r6197, %r6202;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6208, %r809, %r799, %r6211, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6212, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6213, %r6211, %r6212;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6216, %r6208, %r6213;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6219, %r798, %r821, %r6200, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6223, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6224, %r6200, %r6223;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6227, %r6219, %r6224;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6230, %r809, %r821, %r6211, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6234, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6235, %r6211, %r6234;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6238, %r6230, %r6235;
	// end inline asm
	// begin inline asm
	mov.b32 %r6246, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6257, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6243, %r798, %r845, %r6246, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6247, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6248, %r6246, %r6247;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6251, %r6243, %r6248;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6254, %r809, %r845, %r6257, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6258, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6259, %r6257, %r6258;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6262, %r6254, %r6259;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6265, %r798, %r867, %r6246, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6269, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6270, %r6246, %r6269;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6273, %r6265, %r6270;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6276, %r809, %r867, %r6257, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6280, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6281, %r6257, %r6280;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6284, %r6276, %r6281;
	// end inline asm
	// begin inline asm
	mov.b32 %r6292, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6303, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6289, %r798, %r891, %r6292, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6293, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6294, %r6292, %r6293;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6297, %r6289, %r6294;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6300, %r809, %r891, %r6303, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6304, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6305, %r6303, %r6304;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6308, %r6300, %r6305;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6311, %r798, %r913, %r6292, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6315, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6316, %r6292, %r6315;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6319, %r6311, %r6316;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6322, %r809, %r913, %r6303, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6326, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6327, %r6303, %r6326;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6330, %r6322, %r6327;
	// end inline asm
	// begin inline asm
	mov.b32 %r6338, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6349, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6335, %r798, %r937, %r6338, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6339, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6340, %r6338, %r6339;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6343, %r6335, %r6340;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6346, %r809, %r937, %r6349, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6350, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6351, %r6349, %r6350;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6354, %r6346, %r6351;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6357, %r798, %r959, %r6338, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6361, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6362, %r6338, %r6361;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6365, %r6357, %r6362;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6368, %r809, %r959, %r6349, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6372, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6373, %r6349, %r6372;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6376, %r6368, %r6373;
	// end inline asm
	// begin inline asm
	mov.b32 %r6384, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6395, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6381, %r798, %r983, %r6384, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6385, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6386, %r6384, %r6385;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6389, %r6381, %r6386;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6392, %r809, %r983, %r6395, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6396, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6397, %r6395, %r6396;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6400, %r6392, %r6397;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6403, %r798, %r1005, %r6384, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6407, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6408, %r6384, %r6407;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6411, %r6403, %r6408;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6414, %r809, %r1005, %r6395, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6418, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6419, %r6395, %r6418;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6422, %r6414, %r6419;
	// end inline asm
	// begin inline asm
	mov.b32 %r6430, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6441, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6427, %r798, %r1029, %r6430, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6431, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6432, %r6430, %r6431;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6435, %r6427, %r6432;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6438, %r809, %r1029, %r6441, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6442, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6443, %r6441, %r6442;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6446, %r6438, %r6443;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6449, %r798, %r1051, %r6430, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6453, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6454, %r6430, %r6453;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6457, %r6449, %r6454;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6460, %r809, %r1051, %r6441, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6464, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6465, %r6441, %r6464;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6468, %r6460, %r6465;
	// end inline asm
	// begin inline asm
	mov.b32 %r6476, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6487, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6473, %r798, %r1075, %r6476, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6477, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6478, %r6476, %r6477;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6481, %r6473, %r6478;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6484, %r809, %r1075, %r6487, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6488, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6489, %r6487, %r6488;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6492, %r6484, %r6489;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6495, %r798, %r1097, %r6476, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6499, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6500, %r6476, %r6499;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6503, %r6495, %r6500;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6506, %r809, %r1097, %r6487, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6510, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6511, %r6487, %r6510;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6514, %r6506, %r6511;
	// end inline asm
	// begin inline asm
	mov.b32 %r6522, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6533, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6519, %r798, %r1121, %r6522, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6523, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6524, %r6522, %r6523;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6527, %r6519, %r6524;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6530, %r809, %r1121, %r6533, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6534, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6535, %r6533, %r6534;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6538, %r6530, %r6535;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6541, %r798, %r1143, %r6522, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6545, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6546, %r6522, %r6545;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6549, %r6541, %r6546;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6552, %r809, %r1143, %r6533, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6556, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6557, %r6533, %r6556;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6560, %r6552, %r6557;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6698, %r345, %r6205, %r6005;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6695, %r345, %r6216, %r6011;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6707, %r345, %r6227, %r6017;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6704, %r345, %r6238, %r6023;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6716, %r345, %r6251, %r6029;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6713, %r345, %r6262, %r6035;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6725, %r345, %r6273, %r6041;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6722, %r345, %r6284, %r6047;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6734, %r345, %r6297, %r6053;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6731, %r345, %r6308, %r6059;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6743, %r345, %r6319, %r6065;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6740, %r345, %r6330, %r6071;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6752, %r345, %r6343, %r6077;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6749, %r345, %r6354, %r6083;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6761, %r345, %r6365, %r6089;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6758, %r345, %r6376, %r6095;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6770, %r363, %r6389, %r6101;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6767, %r363, %r6400, %r6107;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6779, %r363, %r6411, %r6113;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6776, %r363, %r6422, %r6119;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6788, %r363, %r6435, %r6125;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6785, %r363, %r6446, %r6131;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6797, %r363, %r6457, %r6137;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6794, %r363, %r6468, %r6143;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6806, %r363, %r6481, %r6149;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6803, %r363, %r6492, %r6155;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6815, %r363, %r6503, %r6161;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6812, %r363, %r6514, %r6167;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6824, %r363, %r6527, %r6173;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6821, %r363, %r6538, %r6179;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6833, %r363, %r6549, %r6185;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6830, %r363, %r6560, %r6191;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6691, %r433;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6693, %r6691, %r6695;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6696, %r427, %r6698, %r6693;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6700, %r433;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6702, %r6700, %r6704;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6705, %r427, %r6707, %r6702;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6709, %r433;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6711, %r6709, %r6713;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6714, %r427, %r6716, %r6711;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6718, %r433;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6720, %r6718, %r6722;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6723, %r427, %r6725, %r6720;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6727, %r433;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6729, %r6727, %r6731;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6732, %r427, %r6734, %r6729;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6736, %r433;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6738, %r6736, %r6740;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6741, %r427, %r6743, %r6738;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6745, %r433;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6747, %r6745, %r6749;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6750, %r427, %r6752, %r6747;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6754, %r433;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6756, %r6754, %r6758;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6759, %r427, %r6761, %r6756;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6763, %r436;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6765, %r6763, %r6767;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6768, %r430, %r6770, %r6765;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6772, %r436;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6774, %r6772, %r6776;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6777, %r430, %r6779, %r6774;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6781, %r436;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6783, %r6781, %r6785;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6786, %r430, %r6788, %r6783;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6790, %r436;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6792, %r6790, %r6794;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6795, %r430, %r6797, %r6792;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6799, %r436;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6801, %r6799, %r6803;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6804, %r430, %r6806, %r6801;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6808, %r436;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6810, %r6808, %r6812;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6813, %r430, %r6815, %r6810;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6817, %r436;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6819, %r6817, %r6821;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6822, %r430, %r6824, %r6819;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6826, %r436;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6828, %r6826, %r6830;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6831, %r430, %r6833, %r6828;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6835, %r433, %r6698;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6838, %r427, %r6695, %r6835;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6842, %r433, %r6707;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6845, %r427, %r6704, %r6842;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6849, %r433, %r6716;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6852, %r427, %r6713, %r6849;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6856, %r433, %r6725;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6859, %r427, %r6722, %r6856;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6863, %r433, %r6734;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6866, %r427, %r6731, %r6863;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6870, %r433, %r6743;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6873, %r427, %r6740, %r6870;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6877, %r433, %r6752;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6880, %r427, %r6749, %r6877;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6884, %r433, %r6761;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6887, %r427, %r6758, %r6884;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6891, %r436, %r6770;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6894, %r430, %r6767, %r6891;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6898, %r436, %r6779;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6901, %r430, %r6776, %r6898;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6905, %r436, %r6788;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6908, %r430, %r6785, %r6905;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6912, %r436, %r6797;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6915, %r430, %r6794, %r6912;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6919, %r436, %r6806;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6922, %r430, %r6803, %r6919;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6926, %r436, %r6815;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6929, %r430, %r6812, %r6926;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6933, %r436, %r6824;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6936, %r430, %r6821, %r6933;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6940, %r436, %r6833;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6943, %r430, %r6830, %r6940;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7114, %r7111}, {%r475, %r481, %r478, %r484}, {%r6696, %r6838}, {%r15154, %r15154};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7123, %r7120}, {%r475, %r481, %r478, %r484}, {%r6705, %r6845}, {%r15154, %r15154};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7132, %r7129}, {%r475, %r481, %r478, %r484}, {%r6714, %r6852}, {%r15154, %r15154};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7141, %r7138}, {%r475, %r481, %r478, %r484}, {%r6723, %r6859}, {%r15154, %r15154};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7150, %r7147}, {%r475, %r481, %r478, %r484}, {%r6732, %r6866}, {%r15154, %r15154};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7159, %r7156}, {%r475, %r481, %r478, %r484}, {%r6741, %r6873}, {%r15154, %r15154};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7168, %r7165}, {%r475, %r481, %r478, %r484}, {%r6750, %r6880}, {%r15154, %r15154};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7177, %r7174}, {%r475, %r481, %r478, %r484}, {%r6759, %r6887}, {%r15154, %r15154};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7186, %r7183}, {%r475, %r481, %r478, %r484}, {%r6768, %r6894}, {%r15154, %r15154};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7195, %r7192}, {%r475, %r481, %r478, %r484}, {%r6777, %r6901}, {%r15154, %r15154};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7204, %r7201}, {%r475, %r481, %r478, %r484}, {%r6786, %r6908}, {%r15154, %r15154};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7213, %r7210}, {%r475, %r481, %r478, %r484}, {%r6795, %r6915}, {%r15154, %r15154};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7222, %r7219}, {%r475, %r481, %r478, %r484}, {%r6804, %r6922}, {%r15154, %r15154};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7231, %r7228}, {%r475, %r481, %r478, %r484}, {%r6813, %r6929}, {%r15154, %r15154};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7240, %r7237}, {%r475, %r481, %r478, %r484}, {%r6822, %r6936}, {%r15154, %r15154};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7249, %r7246}, {%r475, %r481, %r478, %r484}, {%r6831, %r6943}, {%r15154, %r15154};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7107, %r525;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7109, %r7107, %r7111;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7112, %r522, %r7114, %r7109;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7116, %r525;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7118, %r7116, %r7120;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7121, %r522, %r7123, %r7118;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7125, %r525;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7127, %r7125, %r7129;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7130, %r522, %r7132, %r7127;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7134, %r525;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7136, %r7134, %r7138;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7139, %r522, %r7141, %r7136;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7143, %r525;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7145, %r7143, %r7147;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7148, %r522, %r7150, %r7145;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7152, %r525;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7154, %r7152, %r7156;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7157, %r522, %r7159, %r7154;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7161, %r525;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7163, %r7161, %r7165;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7166, %r522, %r7168, %r7163;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7170, %r525;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7172, %r7170, %r7174;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7175, %r522, %r7177, %r7172;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7179, %r525;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7181, %r7179, %r7183;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7184, %r522, %r7186, %r7181;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7188, %r525;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7190, %r7188, %r7192;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7193, %r522, %r7195, %r7190;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7197, %r525;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7199, %r7197, %r7201;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7202, %r522, %r7204, %r7199;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7206, %r525;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7208, %r7206, %r7210;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7211, %r522, %r7213, %r7208;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7215, %r525;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7217, %r7215, %r7219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7220, %r522, %r7222, %r7217;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7224, %r525;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7226, %r7224, %r7228;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7229, %r522, %r7231, %r7226;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7233, %r525;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7235, %r7233, %r7237;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7238, %r522, %r7240, %r7235;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7242, %r525;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7244, %r7242, %r7246;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7247, %r522, %r7249, %r7244;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7251, %r525, %r7114;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7254, %r522, %r7111, %r7251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7258, %r525, %r7123;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7261, %r522, %r7120, %r7258;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7265, %r525, %r7132;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7268, %r522, %r7129, %r7265;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7272, %r525, %r7141;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7275, %r522, %r7138, %r7272;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7279, %r525, %r7150;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7282, %r522, %r7147, %r7279;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7286, %r525, %r7159;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7289, %r522, %r7156, %r7286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7293, %r525, %r7168;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7296, %r522, %r7165, %r7293;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7300, %r525, %r7177;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7303, %r522, %r7174, %r7300;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7307, %r525, %r7186;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7310, %r522, %r7183, %r7307;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7314, %r525, %r7195;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7317, %r522, %r7192, %r7314;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7321, %r525, %r7204;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7324, %r522, %r7201, %r7321;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7328, %r525, %r7213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7331, %r522, %r7210, %r7328;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7335, %r525, %r7222;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7338, %r522, %r7219, %r7335;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7342, %r525, %r7231;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7345, %r522, %r7228, %r7342;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7349, %r525, %r7240;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7352, %r522, %r7237, %r7349;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7356, %r525, %r7249;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7359, %r522, %r7246, %r7356;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7652, %r7655}, {%r565, %r571, %r568, %r574}, {%r7112, %r7254}, {%r15154, %r15154};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7658, %r7661}, {%r565, %r571, %r568, %r574}, {%r7121, %r7261}, {%r15154, %r15154};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7664, %r7667}, {%r565, %r571, %r568, %r574}, {%r7130, %r7268}, {%r15154, %r15154};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7670, %r7673}, {%r565, %r571, %r568, %r574}, {%r7139, %r7275}, {%r15154, %r15154};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7676, %r7679}, {%r565, %r571, %r568, %r574}, {%r7148, %r7282}, {%r15154, %r15154};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7682, %r7685}, {%r565, %r571, %r568, %r574}, {%r7157, %r7289}, {%r15154, %r15154};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7688, %r7691}, {%r565, %r571, %r568, %r574}, {%r7166, %r7296}, {%r15154, %r15154};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7694, %r7697}, {%r565, %r571, %r568, %r574}, {%r7175, %r7303}, {%r15154, %r15154};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7653, %r7656}, {%r565, %r571, %r568, %r574}, {%r7184, %r7310}, {%r15154, %r15154};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7659, %r7662}, {%r565, %r571, %r568, %r574}, {%r7193, %r7317}, {%r15154, %r15154};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7665, %r7668}, {%r565, %r571, %r568, %r574}, {%r7202, %r7324}, {%r15154, %r15154};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7671, %r7674}, {%r565, %r571, %r568, %r574}, {%r7211, %r7331}, {%r15154, %r15154};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7677, %r7680}, {%r565, %r571, %r568, %r574}, {%r7220, %r7338}, {%r15154, %r15154};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7683, %r7686}, {%r565, %r571, %r568, %r574}, {%r7229, %r7345}, {%r15154, %r15154};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7689, %r7692}, {%r565, %r571, %r568, %r574}, {%r7238, %r7352}, {%r15154, %r15154};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7695, %r7698}, {%r565, %r571, %r568, %r574}, {%r7247, %r7359}, {%r15154, %r15154};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7651, %r7652, %r7653;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7654, %r7655, %r7656;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7657, %r7658, %r7659;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7660, %r7661, %r7662;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7663, %r7664, %r7665;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7666, %r7667, %r7668;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7669, %r7670, %r7671;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7672, %r7673, %r7674;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7675, %r7676, %r7677;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7678, %r7679, %r7680;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7681, %r7682, %r7683;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7684, %r7685, %r7686;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7687, %r7688, %r7689;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7690, %r7691, %r7692;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7693, %r7694, %r7695;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7696, %r7697, %r7698;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7699, %r7652, %r7653;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7702, %r7655, %r7656;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7705, %r7658, %r7659;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7708, %r7661, %r7662;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7711, %r7664, %r7665;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7714, %r7667, %r7668;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7717, %r7670, %r7671;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7720, %r7673, %r7674;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7723, %r7676, %r7677;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7726, %r7679, %r7680;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7729, %r7682, %r7683;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7732, %r7685, %r7686;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7735, %r7688, %r7689;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7738, %r7691, %r7692;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7741, %r7694, %r7695;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7744, %r7697, %r7698;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7747, %r11, %r7651;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7750, %r11, %r7654;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7753, %r11, %r7657;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7756, %r11, %r7660;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7759, %r11, %r7663;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7762, %r11, %r7666;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7765, %r11, %r7669;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7768, %r11, %r7672;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7771, %r11, %r7675;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7774, %r11, %r7678;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7777, %r11, %r7681;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7780, %r11, %r7684;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7783, %r11, %r7687;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7786, %r11, %r7690;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7789, %r11, %r7693;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7792, %r11, %r7696;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7795, %r12, %r7699;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7798, %r12, %r7702;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7801, %r12, %r7705;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7804, %r12, %r7708;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7807, %r12, %r7711;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7810, %r12, %r7714;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7813, %r12, %r7717;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7816, %r12, %r7720;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7819, %r12, %r7723;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7822, %r12, %r7726;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7825, %r12, %r7729;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7828, %r12, %r7732;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7831, %r12, %r7735;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7834, %r12, %r7738;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7837, %r12, %r7741;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7840, %r12, %r7744;
	// end inline asm
	// begin inline asm
	mov.b32 %r7843, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7844, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7845, %r7747, %r7843;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7848, %r7845, %r7844;
	// end inline asm
	// begin inline asm
	mov.b32 %r7851, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7852, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7853, %r7750, %r7851;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7856, %r7853, %r7852;
	// end inline asm
	// begin inline asm
	mov.b32 %r7859, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7860, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7861, %r7753, %r7859;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7864, %r7861, %r7860;
	// end inline asm
	// begin inline asm
	mov.b32 %r7867, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7868, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7869, %r7756, %r7867;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7872, %r7869, %r7868;
	// end inline asm
	// begin inline asm
	mov.b32 %r7875, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7876, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7877, %r7759, %r7875;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7880, %r7877, %r7876;
	// end inline asm
	// begin inline asm
	mov.b32 %r7883, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7884, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7885, %r7762, %r7883;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7888, %r7885, %r7884;
	// end inline asm
	// begin inline asm
	mov.b32 %r7891, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7892, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7893, %r7765, %r7891;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7896, %r7893, %r7892;
	// end inline asm
	// begin inline asm
	mov.b32 %r7899, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7900, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7901, %r7768, %r7899;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7904, %r7901, %r7900;
	// end inline asm
	// begin inline asm
	mov.b32 %r7907, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7908, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7909, %r7771, %r7907;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7912, %r7909, %r7908;
	// end inline asm
	// begin inline asm
	mov.b32 %r7915, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7916, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7917, %r7774, %r7915;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7920, %r7917, %r7916;
	// end inline asm
	// begin inline asm
	mov.b32 %r7923, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7924, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7925, %r7777, %r7923;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7928, %r7925, %r7924;
	// end inline asm
	// begin inline asm
	mov.b32 %r7931, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7932, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7933, %r7780, %r7931;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7936, %r7933, %r7932;
	// end inline asm
	// begin inline asm
	mov.b32 %r7939, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7940, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7941, %r7783, %r7939;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7944, %r7941, %r7940;
	// end inline asm
	// begin inline asm
	mov.b32 %r7947, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7948, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7949, %r7786, %r7947;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7952, %r7949, %r7948;
	// end inline asm
	// begin inline asm
	mov.b32 %r7955, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7956, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7957, %r7789, %r7955;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7960, %r7957, %r7956;
	// end inline asm
	// begin inline asm
	mov.b32 %r7963, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7964, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7965, %r7792, %r7963;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7968, %r7965, %r7964;
	// end inline asm
	// begin inline asm
	mov.b32 %r7971, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7972, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7973, %r7795, %r7971;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7976, %r7973, %r7972;
	// end inline asm
	// begin inline asm
	mov.b32 %r7979, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7980, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7981, %r7798, %r7979;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7984, %r7981, %r7980;
	// end inline asm
	// begin inline asm
	mov.b32 %r7987, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7988, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7989, %r7801, %r7987;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7992, %r7989, %r7988;
	// end inline asm
	// begin inline asm
	mov.b32 %r7995, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7996, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7997, %r7804, %r7995;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8000, %r7997, %r7996;
	// end inline asm
	// begin inline asm
	mov.b32 %r8003, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8004, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8005, %r7807, %r8003;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8008, %r8005, %r8004;
	// end inline asm
	// begin inline asm
	mov.b32 %r8011, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8012, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8013, %r7810, %r8011;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8016, %r8013, %r8012;
	// end inline asm
	// begin inline asm
	mov.b32 %r8019, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8020, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8021, %r7813, %r8019;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8024, %r8021, %r8020;
	// end inline asm
	// begin inline asm
	mov.b32 %r8027, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8028, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8029, %r7816, %r8027;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8032, %r8029, %r8028;
	// end inline asm
	// begin inline asm
	mov.b32 %r8035, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8036, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8037, %r7819, %r8035;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8040, %r8037, %r8036;
	// end inline asm
	// begin inline asm
	mov.b32 %r8043, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8044, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8045, %r7822, %r8043;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8048, %r8045, %r8044;
	// end inline asm
	// begin inline asm
	mov.b32 %r8051, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8052, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8053, %r7825, %r8051;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8056, %r8053, %r8052;
	// end inline asm
	// begin inline asm
	mov.b32 %r8059, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8060, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8061, %r7828, %r8059;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8064, %r8061, %r8060;
	// end inline asm
	// begin inline asm
	mov.b32 %r8067, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8068, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8069, %r7831, %r8067;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8072, %r8069, %r8068;
	// end inline asm
	// begin inline asm
	mov.b32 %r8075, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8076, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8077, %r7834, %r8075;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8080, %r8077, %r8076;
	// end inline asm
	// begin inline asm
	mov.b32 %r8083, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8084, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8085, %r7837, %r8083;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8088, %r8085, %r8084;
	// end inline asm
	// begin inline asm
	mov.b32 %r8091, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8092, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8093, %r7840, %r8091;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8096, %r8093, %r8092;
	// end inline asm
	// begin inline asm
	mov.b32 %r8102, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8100, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8101, %r8102, %r8100;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8104, %r7848, %r8101;
	// end inline asm
	// begin inline asm
	mov.b32 %r8107, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8108, %r8102, %r8107;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8111, %r7856, %r8108;
	// end inline asm
	// begin inline asm
	mov.b32 %r8114, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8115, %r8102, %r8114;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8118, %r7864, %r8115;
	// end inline asm
	// begin inline asm
	mov.b32 %r8121, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8122, %r8102, %r8121;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8125, %r7872, %r8122;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8128, %r8104, %r8118, %r4315;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8132, %r8111, %r8125, %r4315;
	// end inline asm
	shl.b32 	%r8139, %r8132, 4;
	// begin inline asm
	lop3.b32 %r8136, %r4321, %r8128, %r8139, 202;
	// end inline asm
	xor.b32  	%r16075, %r8136, -2004318072;
	// begin inline asm
	mov.b32 %r8143, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8141, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8142, %r8143, %r8141;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8145, %r7880, %r8142;
	// end inline asm
	// begin inline asm
	mov.b32 %r8148, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8149, %r8143, %r8148;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8152, %r7888, %r8149;
	// end inline asm
	// begin inline asm
	mov.b32 %r8155, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8156, %r8143, %r8155;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8159, %r7896, %r8156;
	// end inline asm
	// begin inline asm
	mov.b32 %r8162, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8163, %r8143, %r8162;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8166, %r7904, %r8163;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8169, %r8145, %r8159, %r4315;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8173, %r8152, %r8166, %r4315;
	// end inline asm
	shl.b32 	%r8180, %r8173, 4;
	// begin inline asm
	lop3.b32 %r8177, %r4321, %r8169, %r8180, 202;
	// end inline asm
	xor.b32  	%r16076, %r8177, -2004318072;
	// begin inline asm
	mov.b32 %r8184, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8182, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8183, %r8184, %r8182;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8186, %r7912, %r8183;
	// end inline asm
	// begin inline asm
	mov.b32 %r8189, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8190, %r8184, %r8189;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8193, %r7920, %r8190;
	// end inline asm
	// begin inline asm
	mov.b32 %r8196, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8197, %r8184, %r8196;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8200, %r7928, %r8197;
	// end inline asm
	// begin inline asm
	mov.b32 %r8203, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8204, %r8184, %r8203;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8207, %r7936, %r8204;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8210, %r8186, %r8200, %r4315;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8214, %r8193, %r8207, %r4315;
	// end inline asm
	shl.b32 	%r8221, %r8214, 4;
	// begin inline asm
	lop3.b32 %r8218, %r4321, %r8210, %r8221, 202;
	// end inline asm
	xor.b32  	%r16077, %r8218, -2004318072;
	// begin inline asm
	mov.b32 %r8225, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8223, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8224, %r8225, %r8223;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8227, %r7944, %r8224;
	// end inline asm
	// begin inline asm
	mov.b32 %r8230, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8231, %r8225, %r8230;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8234, %r7952, %r8231;
	// end inline asm
	// begin inline asm
	mov.b32 %r8237, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8238, %r8225, %r8237;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8241, %r7960, %r8238;
	// end inline asm
	// begin inline asm
	mov.b32 %r8244, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8245, %r8225, %r8244;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8248, %r7968, %r8245;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8251, %r8227, %r8241, %r4315;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8255, %r8234, %r8248, %r4315;
	// end inline asm
	shl.b32 	%r8262, %r8255, 4;
	// begin inline asm
	lop3.b32 %r8259, %r4321, %r8251, %r8262, 202;
	// end inline asm
	xor.b32  	%r16078, %r8259, -2004318072;
	// begin inline asm
	mov.b32 %r8266, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8264, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8265, %r8266, %r8264;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8268, %r7976, %r8265;
	// end inline asm
	// begin inline asm
	mov.b32 %r8271, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8272, %r8266, %r8271;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8275, %r7984, %r8272;
	// end inline asm
	// begin inline asm
	mov.b32 %r8278, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8279, %r8266, %r8278;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8282, %r7992, %r8279;
	// end inline asm
	// begin inline asm
	mov.b32 %r8285, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8286, %r8266, %r8285;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8289, %r8000, %r8286;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8292, %r8268, %r8282, %r4315;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8296, %r8275, %r8289, %r4315;
	// end inline asm
	shl.b32 	%r8303, %r8296, 4;
	// begin inline asm
	lop3.b32 %r8300, %r4321, %r8292, %r8303, 202;
	// end inline asm
	xor.b32  	%r16079, %r8300, -2004318072;
	// begin inline asm
	mov.b32 %r8307, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8305, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8306, %r8307, %r8305;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8309, %r8008, %r8306;
	// end inline asm
	// begin inline asm
	mov.b32 %r8312, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8313, %r8307, %r8312;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8316, %r8016, %r8313;
	// end inline asm
	// begin inline asm
	mov.b32 %r8319, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8320, %r8307, %r8319;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8323, %r8024, %r8320;
	// end inline asm
	// begin inline asm
	mov.b32 %r8326, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8327, %r8307, %r8326;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8330, %r8032, %r8327;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8333, %r8309, %r8323, %r4315;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8337, %r8316, %r8330, %r4315;
	// end inline asm
	shl.b32 	%r8344, %r8337, 4;
	// begin inline asm
	lop3.b32 %r8341, %r4321, %r8333, %r8344, 202;
	// end inline asm
	xor.b32  	%r16080, %r8341, -2004318072;
	// begin inline asm
	mov.b32 %r8348, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8346, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8347, %r8348, %r8346;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8350, %r8040, %r8347;
	// end inline asm
	// begin inline asm
	mov.b32 %r8353, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8354, %r8348, %r8353;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8357, %r8048, %r8354;
	// end inline asm
	// begin inline asm
	mov.b32 %r8360, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8361, %r8348, %r8360;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8364, %r8056, %r8361;
	// end inline asm
	// begin inline asm
	mov.b32 %r8367, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8368, %r8348, %r8367;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8371, %r8064, %r8368;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8374, %r8350, %r8364, %r4315;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8378, %r8357, %r8371, %r4315;
	// end inline asm
	shl.b32 	%r8385, %r8378, 4;
	// begin inline asm
	lop3.b32 %r8382, %r4321, %r8374, %r8385, 202;
	// end inline asm
	xor.b32  	%r16081, %r8382, -2004318072;
	// begin inline asm
	mov.b32 %r8389, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8387, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8388, %r8389, %r8387;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8391, %r8072, %r8388;
	// end inline asm
	// begin inline asm
	mov.b32 %r8394, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8395, %r8389, %r8394;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8398, %r8080, %r8395;
	// end inline asm
	// begin inline asm
	mov.b32 %r8401, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8402, %r8389, %r8401;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8405, %r8088, %r8402;
	// end inline asm
	// begin inline asm
	mov.b32 %r8408, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8409, %r8389, %r8408;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8412, %r8096, %r8409;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8415, %r8391, %r8405, %r4315;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8419, %r8398, %r8412, %r4315;
	// end inline asm
	shl.b32 	%r8426, %r8419, 4;
	// begin inline asm
	lop3.b32 %r8423, %r4321, %r8415, %r8426, 202;
	// end inline asm
	xor.b32  	%r16082, %r8423, -2004318072;
	st.shared.u32 	[%rd82], %r16075;
	st.shared.u32 	[%rd83], %r16076;
	st.shared.u32 	[%rd84], %r16077;
	st.shared.u32 	[%rd85], %r16078;
	st.shared.u32 	[%rd86], %r16079;
	st.shared.u32 	[%rd87], %r16080;
	st.shared.u32 	[%rd88], %r16081;
	st.shared.u32 	[%rd89], %r16082;
	ld.shared.u32 	%r16197, [%rd74];
	ld.shared.u32 	%r16198, [%rd75];
	ld.shared.u32 	%r16199, [%rd76];
	ld.shared.u32 	%r16200, [%rd77];
	ld.shared.u32 	%r16209, [%rd78];
	ld.shared.u32 	%r16210, [%rd79];
	ld.shared.u32 	%r16211, [%rd80];
	ld.shared.u32 	%r16212, [%rd81];
	// begin inline asm
	mov.b32 %r8432, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8443, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8431, %r16197, -2004318072;
	// begin inline asm
	lop3.b32 %r8429, %r798, %r8431, %r8432, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8433, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8434, %r8432, %r8433;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8437, %r8429, %r8434;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8440, %r809, %r8431, %r8443, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8444, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8445, %r8443, %r8444;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8448, %r8440, %r8445;
	// end inline asm
	shr.u32 	%r8453, %r8431, 8;
	// begin inline asm
	lop3.b32 %r8451, %r798, %r8453, %r8432, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8455, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8456, %r8432, %r8455;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8459, %r8451, %r8456;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8462, %r809, %r8453, %r8443, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8466, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8467, %r8443, %r8466;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8470, %r8462, %r8467;
	// end inline asm
	// begin inline asm
	mov.b32 %r8478, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8489, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8477, %r16198, -2004318072;
	// begin inline asm
	lop3.b32 %r8475, %r798, %r8477, %r8478, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8479, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8480, %r8478, %r8479;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8483, %r8475, %r8480;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8486, %r809, %r8477, %r8489, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8490, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8491, %r8489, %r8490;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8494, %r8486, %r8491;
	// end inline asm
	shr.u32 	%r8499, %r8477, 8;
	// begin inline asm
	lop3.b32 %r8497, %r798, %r8499, %r8478, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8501, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8502, %r8478, %r8501;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8505, %r8497, %r8502;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8508, %r809, %r8499, %r8489, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8512, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8513, %r8489, %r8512;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8516, %r8508, %r8513;
	// end inline asm
	// begin inline asm
	mov.b32 %r8524, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8535, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8523, %r16199, -2004318072;
	// begin inline asm
	lop3.b32 %r8521, %r798, %r8523, %r8524, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8525, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8526, %r8524, %r8525;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8529, %r8521, %r8526;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8532, %r809, %r8523, %r8535, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8536, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8537, %r8535, %r8536;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8540, %r8532, %r8537;
	// end inline asm
	shr.u32 	%r8545, %r8523, 8;
	// begin inline asm
	lop3.b32 %r8543, %r798, %r8545, %r8524, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8547, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8548, %r8524, %r8547;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8551, %r8543, %r8548;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8554, %r809, %r8545, %r8535, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8558, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8559, %r8535, %r8558;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8562, %r8554, %r8559;
	// end inline asm
	// begin inline asm
	mov.b32 %r8570, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8581, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8569, %r16200, -2004318072;
	// begin inline asm
	lop3.b32 %r8567, %r798, %r8569, %r8570, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8571, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8572, %r8570, %r8571;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8575, %r8567, %r8572;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8578, %r809, %r8569, %r8581, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8582, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8583, %r8581, %r8582;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8586, %r8578, %r8583;
	// end inline asm
	shr.u32 	%r8591, %r8569, 8;
	// begin inline asm
	lop3.b32 %r8589, %r798, %r8591, %r8570, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8593, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8594, %r8570, %r8593;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8597, %r8589, %r8594;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8600, %r809, %r8591, %r8581, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8604, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8605, %r8581, %r8604;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8608, %r8600, %r8605;
	// end inline asm
	// begin inline asm
	mov.b32 %r8616, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8627, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8615, %r16209, -2004318072;
	// begin inline asm
	lop3.b32 %r8613, %r798, %r8615, %r8616, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8617, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8618, %r8616, %r8617;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8621, %r8613, %r8618;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8624, %r809, %r8615, %r8627, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8628, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8629, %r8627, %r8628;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8632, %r8624, %r8629;
	// end inline asm
	shr.u32 	%r8637, %r8615, 8;
	// begin inline asm
	lop3.b32 %r8635, %r798, %r8637, %r8616, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8639, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8640, %r8616, %r8639;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8643, %r8635, %r8640;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8646, %r809, %r8637, %r8627, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8650, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8651, %r8627, %r8650;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8654, %r8646, %r8651;
	// end inline asm
	// begin inline asm
	mov.b32 %r8662, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8673, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8661, %r16210, -2004318072;
	// begin inline asm
	lop3.b32 %r8659, %r798, %r8661, %r8662, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8663, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8664, %r8662, %r8663;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8667, %r8659, %r8664;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8670, %r809, %r8661, %r8673, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8674, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8675, %r8673, %r8674;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8678, %r8670, %r8675;
	// end inline asm
	shr.u32 	%r8683, %r8661, 8;
	// begin inline asm
	lop3.b32 %r8681, %r798, %r8683, %r8662, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8685, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8686, %r8662, %r8685;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8689, %r8681, %r8686;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8692, %r809, %r8683, %r8673, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8696, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8697, %r8673, %r8696;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8700, %r8692, %r8697;
	// end inline asm
	// begin inline asm
	mov.b32 %r8708, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8719, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8707, %r16211, -2004318072;
	// begin inline asm
	lop3.b32 %r8705, %r798, %r8707, %r8708, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8709, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8710, %r8708, %r8709;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8713, %r8705, %r8710;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8716, %r809, %r8707, %r8719, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8720, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8721, %r8719, %r8720;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8724, %r8716, %r8721;
	// end inline asm
	shr.u32 	%r8729, %r8707, 8;
	// begin inline asm
	lop3.b32 %r8727, %r798, %r8729, %r8708, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8731, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8732, %r8708, %r8731;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8735, %r8727, %r8732;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8738, %r809, %r8729, %r8719, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8742, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8743, %r8719, %r8742;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8746, %r8738, %r8743;
	// end inline asm
	// begin inline asm
	mov.b32 %r8754, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8765, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8753, %r16212, -2004318072;
	// begin inline asm
	lop3.b32 %r8751, %r798, %r8753, %r8754, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8755, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8756, %r8754, %r8755;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8759, %r8751, %r8756;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8762, %r809, %r8753, %r8765, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8766, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8767, %r8765, %r8766;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8770, %r8762, %r8767;
	// end inline asm
	shr.u32 	%r8775, %r8753, 8;
	// begin inline asm
	lop3.b32 %r8773, %r798, %r8775, %r8754, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8777, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8778, %r8754, %r8777;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8781, %r8773, %r8778;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8784, %r809, %r8775, %r8765, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8788, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8789, %r8765, %r8788;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8792, %r8784, %r8789;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8795, %r381;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8797, %r8795, %r8437;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8800, %r381;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8802, %r8800, %r8448;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8805, %r381;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8807, %r8805, %r8459;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8810, %r381;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8812, %r8810, %r8470;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8815, %r381;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8817, %r8815, %r8483;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8820, %r381;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8822, %r8820, %r8494;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8825, %r381;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8827, %r8825, %r8505;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8830, %r381;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8832, %r8830, %r8516;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8835, %r381;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8837, %r8835, %r8529;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8840, %r381;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8842, %r8840, %r8540;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8845, %r381;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8847, %r8845, %r8551;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8850, %r381;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8852, %r8850, %r8562;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8855, %r381;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8857, %r8855, %r8575;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8860, %r381;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8862, %r8860, %r8586;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8865, %r381;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8867, %r8865, %r8597;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8870, %r381;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8872, %r8870, %r8608;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8875, %r399;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8877, %r8875, %r8621;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8880, %r399;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8882, %r8880, %r8632;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8885, %r399;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8887, %r8885, %r8643;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8890, %r399;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8892, %r8890, %r8654;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8895, %r399;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8897, %r8895, %r8667;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8900, %r399;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8902, %r8900, %r8678;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8905, %r399;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8907, %r8905, %r8689;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8910, %r399;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8912, %r8910, %r8700;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8915, %r399;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8917, %r8915, %r8713;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8920, %r399;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8922, %r8920, %r8724;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8925, %r399;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8927, %r8925, %r8735;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8930, %r399;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8932, %r8930, %r8746;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8935, %r399;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8937, %r8935, %r8759;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8940, %r399;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8942, %r8940, %r8770;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8945, %r399;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8947, %r8945, %r8781;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8950, %r399;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8952, %r8950, %r8792;
	// end inline asm
	// begin inline asm
	mov.b32 %r8960, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8971, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r8957, %r798, %r2383, %r8960, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8961, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8962, %r8960, %r8961;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8965, %r8957, %r8962;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8968, %r809, %r2383, %r8971, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8972, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8973, %r8971, %r8972;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8976, %r8968, %r8973;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8979, %r798, %r2405, %r8960, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8983, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8984, %r8960, %r8983;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8987, %r8979, %r8984;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8990, %r809, %r2405, %r8971, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8994, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8995, %r8971, %r8994;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8998, %r8990, %r8995;
	// end inline asm
	// begin inline asm
	mov.b32 %r9006, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9017, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9003, %r798, %r2429, %r9006, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9007, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9008, %r9006, %r9007;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9011, %r9003, %r9008;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9014, %r809, %r2429, %r9017, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9018, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9019, %r9017, %r9018;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9022, %r9014, %r9019;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9025, %r798, %r2451, %r9006, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9029, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9030, %r9006, %r9029;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9033, %r9025, %r9030;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9036, %r809, %r2451, %r9017, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9040, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9041, %r9017, %r9040;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9044, %r9036, %r9041;
	// end inline asm
	// begin inline asm
	mov.b32 %r9052, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9063, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9049, %r798, %r2475, %r9052, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9053, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9054, %r9052, %r9053;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9057, %r9049, %r9054;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9060, %r809, %r2475, %r9063, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9064, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9065, %r9063, %r9064;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9068, %r9060, %r9065;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9071, %r798, %r2497, %r9052, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9075, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9076, %r9052, %r9075;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9079, %r9071, %r9076;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9082, %r809, %r2497, %r9063, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9086, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9087, %r9063, %r9086;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9090, %r9082, %r9087;
	// end inline asm
	// begin inline asm
	mov.b32 %r9098, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9109, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9095, %r798, %r2521, %r9098, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9099, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9100, %r9098, %r9099;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9103, %r9095, %r9100;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9106, %r809, %r2521, %r9109, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9110, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9111, %r9109, %r9110;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9114, %r9106, %r9111;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9117, %r798, %r2543, %r9098, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9121, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9122, %r9098, %r9121;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9125, %r9117, %r9122;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9128, %r809, %r2543, %r9109, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9132, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9133, %r9109, %r9132;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9136, %r9128, %r9133;
	// end inline asm
	// begin inline asm
	mov.b32 %r9144, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9155, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9141, %r798, %r2567, %r9144, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9145, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9146, %r9144, %r9145;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9149, %r9141, %r9146;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9152, %r809, %r2567, %r9155, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9156, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9157, %r9155, %r9156;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9160, %r9152, %r9157;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9163, %r798, %r2589, %r9144, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9167, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9168, %r9144, %r9167;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9171, %r9163, %r9168;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9174, %r809, %r2589, %r9155, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9178, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9179, %r9155, %r9178;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9182, %r9174, %r9179;
	// end inline asm
	// begin inline asm
	mov.b32 %r9190, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9201, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9187, %r798, %r2613, %r9190, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9191, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9192, %r9190, %r9191;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9195, %r9187, %r9192;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9198, %r809, %r2613, %r9201, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9202, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9203, %r9201, %r9202;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9206, %r9198, %r9203;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9209, %r798, %r2635, %r9190, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9213, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9214, %r9190, %r9213;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9217, %r9209, %r9214;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9220, %r809, %r2635, %r9201, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9224, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9225, %r9201, %r9224;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9228, %r9220, %r9225;
	// end inline asm
	// begin inline asm
	mov.b32 %r9236, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9247, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9233, %r798, %r2659, %r9236, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9237, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9238, %r9236, %r9237;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9241, %r9233, %r9238;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9244, %r809, %r2659, %r9247, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9248, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9249, %r9247, %r9248;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9252, %r9244, %r9249;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9255, %r798, %r2681, %r9236, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9259, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9260, %r9236, %r9259;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9263, %r9255, %r9260;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9266, %r809, %r2681, %r9247, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9270, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9271, %r9247, %r9270;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9274, %r9266, %r9271;
	// end inline asm
	// begin inline asm
	mov.b32 %r9282, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9293, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9279, %r798, %r2705, %r9282, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9283, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9284, %r9282, %r9283;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9287, %r9279, %r9284;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9290, %r809, %r2705, %r9293, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9294, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9295, %r9293, %r9294;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9298, %r9290, %r9295;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9301, %r798, %r2727, %r9282, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9305, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9306, %r9282, %r9305;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9309, %r9301, %r9306;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9312, %r809, %r2727, %r9293, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9316, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9317, %r9293, %r9316;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9320, %r9312, %r9317;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9323, %r273, %r8965, %r8797;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9327, %r273, %r8976, %r8802;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9331, %r273, %r8987, %r8807;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9335, %r273, %r8998, %r8812;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9339, %r273, %r9011, %r8817;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9343, %r273, %r9022, %r8822;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9347, %r273, %r9033, %r8827;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9351, %r273, %r9044, %r8832;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9355, %r273, %r9057, %r8837;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9359, %r273, %r9068, %r8842;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9363, %r273, %r9079, %r8847;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9367, %r273, %r9090, %r8852;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9371, %r273, %r9103, %r8857;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9375, %r273, %r9114, %r8862;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9379, %r273, %r9125, %r8867;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9383, %r273, %r9136, %r8872;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9387, %r291, %r9149, %r8877;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9391, %r291, %r9160, %r8882;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9395, %r291, %r9171, %r8887;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9399, %r291, %r9182, %r8892;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9403, %r291, %r9195, %r8897;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9407, %r291, %r9206, %r8902;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9411, %r291, %r9217, %r8907;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9415, %r291, %r9228, %r8912;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9419, %r291, %r9241, %r8917;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9423, %r291, %r9252, %r8922;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9427, %r291, %r9263, %r8927;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9431, %r291, %r9274, %r8932;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9435, %r291, %r9287, %r8937;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9439, %r291, %r9298, %r8942;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9443, %r291, %r9309, %r8947;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9447, %r291, %r9320, %r8952;
	// end inline asm
	// begin inline asm
	mov.b32 %r9456, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9467, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9453, %r798, %r799, %r9456, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9457, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9458, %r9456, %r9457;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9461, %r9453, %r9458;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9464, %r809, %r799, %r9467, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9468, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9469, %r9467, %r9468;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9472, %r9464, %r9469;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9475, %r798, %r821, %r9456, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9479, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9480, %r9456, %r9479;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9483, %r9475, %r9480;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9486, %r809, %r821, %r9467, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9490, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9491, %r9467, %r9490;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9494, %r9486, %r9491;
	// end inline asm
	// begin inline asm
	mov.b32 %r9502, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9513, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9499, %r798, %r845, %r9502, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9503, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9504, %r9502, %r9503;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9507, %r9499, %r9504;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9510, %r809, %r845, %r9513, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9514, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9515, %r9513, %r9514;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9518, %r9510, %r9515;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9521, %r798, %r867, %r9502, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9525, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9526, %r9502, %r9525;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9529, %r9521, %r9526;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9532, %r809, %r867, %r9513, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9536, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9537, %r9513, %r9536;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9540, %r9532, %r9537;
	// end inline asm
	// begin inline asm
	mov.b32 %r9548, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9559, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9545, %r798, %r891, %r9548, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9549, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9550, %r9548, %r9549;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9553, %r9545, %r9550;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9556, %r809, %r891, %r9559, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9560, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9561, %r9559, %r9560;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9564, %r9556, %r9561;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9567, %r798, %r913, %r9548, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9571, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9572, %r9548, %r9571;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9575, %r9567, %r9572;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9578, %r809, %r913, %r9559, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9582, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9583, %r9559, %r9582;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9586, %r9578, %r9583;
	// end inline asm
	// begin inline asm
	mov.b32 %r9594, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9605, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9591, %r798, %r937, %r9594, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9595, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9596, %r9594, %r9595;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9599, %r9591, %r9596;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9602, %r809, %r937, %r9605, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9606, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9607, %r9605, %r9606;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9610, %r9602, %r9607;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9613, %r798, %r959, %r9594, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9617, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9618, %r9594, %r9617;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9621, %r9613, %r9618;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9624, %r809, %r959, %r9605, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9628, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9629, %r9605, %r9628;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9632, %r9624, %r9629;
	// end inline asm
	// begin inline asm
	mov.b32 %r9640, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9651, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9637, %r798, %r983, %r9640, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9641, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9642, %r9640, %r9641;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9645, %r9637, %r9642;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9648, %r809, %r983, %r9651, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9652, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9653, %r9651, %r9652;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9656, %r9648, %r9653;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9659, %r798, %r1005, %r9640, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9663, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9664, %r9640, %r9663;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9667, %r9659, %r9664;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9670, %r809, %r1005, %r9651, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9674, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9675, %r9651, %r9674;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9678, %r9670, %r9675;
	// end inline asm
	// begin inline asm
	mov.b32 %r9686, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9697, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9683, %r798, %r1029, %r9686, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9687, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9688, %r9686, %r9687;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9691, %r9683, %r9688;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9694, %r809, %r1029, %r9697, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9698, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9699, %r9697, %r9698;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9702, %r9694, %r9699;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9705, %r798, %r1051, %r9686, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9709, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9710, %r9686, %r9709;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9713, %r9705, %r9710;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9716, %r809, %r1051, %r9697, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9720, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9721, %r9697, %r9720;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9724, %r9716, %r9721;
	// end inline asm
	// begin inline asm
	mov.b32 %r9732, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9743, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9729, %r798, %r1075, %r9732, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9733, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9734, %r9732, %r9733;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9737, %r9729, %r9734;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9740, %r809, %r1075, %r9743, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9744, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9745, %r9743, %r9744;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9748, %r9740, %r9745;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9751, %r798, %r1097, %r9732, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9755, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9756, %r9732, %r9755;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9759, %r9751, %r9756;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9762, %r809, %r1097, %r9743, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9766, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9767, %r9743, %r9766;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9770, %r9762, %r9767;
	// end inline asm
	// begin inline asm
	mov.b32 %r9778, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9789, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9775, %r798, %r1121, %r9778, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9779, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9780, %r9778, %r9779;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9783, %r9775, %r9780;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9786, %r809, %r1121, %r9789, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9790, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9791, %r9789, %r9790;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9794, %r9786, %r9791;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9797, %r798, %r1143, %r9778, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9801, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9802, %r9778, %r9801;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9805, %r9797, %r9802;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9808, %r809, %r1143, %r9789, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9812, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9813, %r9789, %r9812;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9816, %r9808, %r9813;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9819, %r309;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9821, %r9819, %r9461, %r9323;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9825, %r309;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9827, %r9825, %r9472, %r9327;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9831, %r309;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9833, %r9831, %r9483, %r9331;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9837, %r309;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9839, %r9837, %r9494, %r9335;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9843, %r309;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9845, %r9843, %r9507, %r9339;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9849, %r309;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9851, %r9849, %r9518, %r9343;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9855, %r309;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9857, %r9855, %r9529, %r9347;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9861, %r309;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9863, %r9861, %r9540, %r9351;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9867, %r309;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9869, %r9867, %r9553, %r9355;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9873, %r309;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9875, %r9873, %r9564, %r9359;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9879, %r309;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9881, %r9879, %r9575, %r9363;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9885, %r309;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9887, %r9885, %r9586, %r9367;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9891, %r309;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9893, %r9891, %r9599, %r9371;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9897, %r309;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9899, %r9897, %r9610, %r9375;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9903, %r309;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9905, %r9903, %r9621, %r9379;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9909, %r309;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9911, %r9909, %r9632, %r9383;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9915, %r327;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9917, %r9915, %r9645, %r9387;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9921, %r327;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9923, %r9921, %r9656, %r9391;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9927, %r327;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9929, %r9927, %r9667, %r9395;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9933, %r327;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9935, %r9933, %r9678, %r9399;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9939, %r327;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9941, %r9939, %r9691, %r9403;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9945, %r327;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9947, %r9945, %r9702, %r9407;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9951, %r327;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9953, %r9951, %r9713, %r9411;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9957, %r327;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9959, %r9957, %r9724, %r9415;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9963, %r327;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9965, %r9963, %r9737, %r9419;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9969, %r327;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9971, %r9969, %r9748, %r9423;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9975, %r327;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9977, %r9975, %r9759, %r9427;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9981, %r327;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9983, %r9981, %r9770, %r9431;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9987, %r327;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9989, %r9987, %r9783, %r9435;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9993, %r327;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9995, %r9993, %r9794, %r9439;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9999, %r327;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10001, %r9999, %r9805, %r9443;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10005, %r327;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10007, %r10005, %r9816, %r9447;
	// end inline asm
	// begin inline asm
	mov.b32 %r10016, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10027, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10013, %r798, %r4615, %r10016, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10017, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10018, %r10016, %r10017;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10021, %r10013, %r10018;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10024, %r809, %r4615, %r10027, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10028, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10029, %r10027, %r10028;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10032, %r10024, %r10029;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10035, %r798, %r4637, %r10016, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10039, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10040, %r10016, %r10039;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10043, %r10035, %r10040;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10046, %r809, %r4637, %r10027, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10050, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10051, %r10027, %r10050;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10054, %r10046, %r10051;
	// end inline asm
	// begin inline asm
	mov.b32 %r10062, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10073, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10059, %r798, %r4661, %r10062, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10063, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10064, %r10062, %r10063;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10067, %r10059, %r10064;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10070, %r809, %r4661, %r10073, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10074, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10075, %r10073, %r10074;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10078, %r10070, %r10075;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10081, %r798, %r4683, %r10062, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10085, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10086, %r10062, %r10085;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10089, %r10081, %r10086;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10092, %r809, %r4683, %r10073, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10096, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10097, %r10073, %r10096;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10100, %r10092, %r10097;
	// end inline asm
	// begin inline asm
	mov.b32 %r10108, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10119, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10105, %r798, %r4707, %r10108, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10109, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10110, %r10108, %r10109;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10113, %r10105, %r10110;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10116, %r809, %r4707, %r10119, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10120, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10121, %r10119, %r10120;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10124, %r10116, %r10121;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10127, %r798, %r4729, %r10108, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10131, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10132, %r10108, %r10131;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10135, %r10127, %r10132;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10138, %r809, %r4729, %r10119, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10142, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10143, %r10119, %r10142;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10146, %r10138, %r10143;
	// end inline asm
	// begin inline asm
	mov.b32 %r10154, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10165, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10151, %r798, %r4753, %r10154, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10155, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10156, %r10154, %r10155;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10159, %r10151, %r10156;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10162, %r809, %r4753, %r10165, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10166, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10167, %r10165, %r10166;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10170, %r10162, %r10167;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10173, %r798, %r4775, %r10154, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10177, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10178, %r10154, %r10177;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10181, %r10173, %r10178;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10184, %r809, %r4775, %r10165, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10188, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10189, %r10165, %r10188;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10192, %r10184, %r10189;
	// end inline asm
	// begin inline asm
	mov.b32 %r10200, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10211, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10197, %r798, %r4799, %r10200, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10201, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10202, %r10200, %r10201;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10205, %r10197, %r10202;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10208, %r809, %r4799, %r10211, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10212, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10213, %r10211, %r10212;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10216, %r10208, %r10213;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10219, %r798, %r4821, %r10200, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10223, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10224, %r10200, %r10223;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10227, %r10219, %r10224;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10230, %r809, %r4821, %r10211, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10234, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10235, %r10211, %r10234;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10238, %r10230, %r10235;
	// end inline asm
	// begin inline asm
	mov.b32 %r10246, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10257, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10243, %r798, %r4845, %r10246, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10247, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10248, %r10246, %r10247;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10251, %r10243, %r10248;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10254, %r809, %r4845, %r10257, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10258, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10259, %r10257, %r10258;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10262, %r10254, %r10259;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10265, %r798, %r4867, %r10246, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10269, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10270, %r10246, %r10269;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10273, %r10265, %r10270;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10276, %r809, %r4867, %r10257, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10280, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10281, %r10257, %r10280;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10284, %r10276, %r10281;
	// end inline asm
	// begin inline asm
	mov.b32 %r10292, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10303, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10289, %r798, %r4891, %r10292, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10293, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10294, %r10292, %r10293;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10297, %r10289, %r10294;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10300, %r809, %r4891, %r10303, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10304, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10305, %r10303, %r10304;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10308, %r10300, %r10305;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10311, %r798, %r4913, %r10292, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10315, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10316, %r10292, %r10315;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10319, %r10311, %r10316;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10322, %r809, %r4913, %r10303, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10326, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10327, %r10303, %r10326;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10330, %r10322, %r10327;
	// end inline asm
	// begin inline asm
	mov.b32 %r10338, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10349, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10335, %r798, %r4937, %r10338, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10339, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10340, %r10338, %r10339;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10343, %r10335, %r10340;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10346, %r809, %r4937, %r10349, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10350, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10351, %r10349, %r10350;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10354, %r10346, %r10351;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10357, %r798, %r4959, %r10338, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10361, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10362, %r10338, %r10361;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10365, %r10357, %r10362;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10368, %r809, %r4959, %r10349, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10372, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10373, %r10349, %r10372;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10376, %r10368, %r10373;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10514, %r345, %r10021, %r9821;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10511, %r345, %r10032, %r9827;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10523, %r345, %r10043, %r9833;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10520, %r345, %r10054, %r9839;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10532, %r345, %r10067, %r9845;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10529, %r345, %r10078, %r9851;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10541, %r345, %r10089, %r9857;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10538, %r345, %r10100, %r9863;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10550, %r345, %r10113, %r9869;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10547, %r345, %r10124, %r9875;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10559, %r345, %r10135, %r9881;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10556, %r345, %r10146, %r9887;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10568, %r345, %r10159, %r9893;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10565, %r345, %r10170, %r9899;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10577, %r345, %r10181, %r9905;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10574, %r345, %r10192, %r9911;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10586, %r363, %r10205, %r9917;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10583, %r363, %r10216, %r9923;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10595, %r363, %r10227, %r9929;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10592, %r363, %r10238, %r9935;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10604, %r363, %r10251, %r9941;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10601, %r363, %r10262, %r9947;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10613, %r363, %r10273, %r9953;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10610, %r363, %r10284, %r9959;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10622, %r363, %r10297, %r9965;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10619, %r363, %r10308, %r9971;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10631, %r363, %r10319, %r9977;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10628, %r363, %r10330, %r9983;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10640, %r363, %r10343, %r9989;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10637, %r363, %r10354, %r9995;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10649, %r363, %r10365, %r10001;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10646, %r363, %r10376, %r10007;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10507, %r433;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10509, %r10507, %r10511;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10512, %r427, %r10514, %r10509;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10516, %r433;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10518, %r10516, %r10520;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10521, %r427, %r10523, %r10518;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10525, %r433;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10527, %r10525, %r10529;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10530, %r427, %r10532, %r10527;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10534, %r433;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10536, %r10534, %r10538;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10539, %r427, %r10541, %r10536;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10543, %r433;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10545, %r10543, %r10547;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10548, %r427, %r10550, %r10545;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10552, %r433;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10554, %r10552, %r10556;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10557, %r427, %r10559, %r10554;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10561, %r433;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10563, %r10561, %r10565;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10566, %r427, %r10568, %r10563;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10570, %r433;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10572, %r10570, %r10574;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10575, %r427, %r10577, %r10572;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10579, %r436;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10581, %r10579, %r10583;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10584, %r430, %r10586, %r10581;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10588, %r436;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10590, %r10588, %r10592;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10593, %r430, %r10595, %r10590;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10597, %r436;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10599, %r10597, %r10601;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10602, %r430, %r10604, %r10599;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10606, %r436;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10608, %r10606, %r10610;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10611, %r430, %r10613, %r10608;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10615, %r436;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10617, %r10615, %r10619;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10620, %r430, %r10622, %r10617;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10624, %r436;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10626, %r10624, %r10628;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10629, %r430, %r10631, %r10626;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10633, %r436;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10635, %r10633, %r10637;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10638, %r430, %r10640, %r10635;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10642, %r436;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10644, %r10642, %r10646;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10647, %r430, %r10649, %r10644;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10651, %r433, %r10514;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10654, %r427, %r10511, %r10651;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10658, %r433, %r10523;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10661, %r427, %r10520, %r10658;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10665, %r433, %r10532;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10668, %r427, %r10529, %r10665;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10672, %r433, %r10541;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10675, %r427, %r10538, %r10672;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10679, %r433, %r10550;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10682, %r427, %r10547, %r10679;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10686, %r433, %r10559;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10689, %r427, %r10556, %r10686;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10693, %r433, %r10568;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10696, %r427, %r10565, %r10693;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10700, %r433, %r10577;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10703, %r427, %r10574, %r10700;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10707, %r436, %r10586;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10710, %r430, %r10583, %r10707;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10714, %r436, %r10595;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10717, %r430, %r10592, %r10714;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10721, %r436, %r10604;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10724, %r430, %r10601, %r10721;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10728, %r436, %r10613;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10731, %r430, %r10610, %r10728;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10735, %r436, %r10622;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10738, %r430, %r10619, %r10735;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10742, %r436, %r10631;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10745, %r430, %r10628, %r10742;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10749, %r436, %r10640;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10752, %r430, %r10637, %r10749;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10756, %r436, %r10649;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10759, %r430, %r10646, %r10756;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r10930, %r10927}, {%r475, %r481, %r478, %r484}, {%r10512, %r10654}, {%r15154, %r15154};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r10939, %r10936}, {%r475, %r481, %r478, %r484}, {%r10521, %r10661}, {%r15154, %r15154};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r10948, %r10945}, {%r475, %r481, %r478, %r484}, {%r10530, %r10668}, {%r15154, %r15154};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r10957, %r10954}, {%r475, %r481, %r478, %r484}, {%r10539, %r10675}, {%r15154, %r15154};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r10966, %r10963}, {%r475, %r481, %r478, %r484}, {%r10548, %r10682}, {%r15154, %r15154};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r10975, %r10972}, {%r475, %r481, %r478, %r484}, {%r10557, %r10689}, {%r15154, %r15154};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r10984, %r10981}, {%r475, %r481, %r478, %r484}, {%r10566, %r10696}, {%r15154, %r15154};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r10993, %r10990}, {%r475, %r481, %r478, %r484}, {%r10575, %r10703}, {%r15154, %r15154};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11002, %r10999}, {%r475, %r481, %r478, %r484}, {%r10584, %r10710}, {%r15154, %r15154};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11011, %r11008}, {%r475, %r481, %r478, %r484}, {%r10593, %r10717}, {%r15154, %r15154};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11020, %r11017}, {%r475, %r481, %r478, %r484}, {%r10602, %r10724}, {%r15154, %r15154};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11029, %r11026}, {%r475, %r481, %r478, %r484}, {%r10611, %r10731}, {%r15154, %r15154};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11038, %r11035}, {%r475, %r481, %r478, %r484}, {%r10620, %r10738}, {%r15154, %r15154};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11047, %r11044}, {%r475, %r481, %r478, %r484}, {%r10629, %r10745}, {%r15154, %r15154};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11056, %r11053}, {%r475, %r481, %r478, %r484}, {%r10638, %r10752}, {%r15154, %r15154};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11065, %r11062}, {%r475, %r481, %r478, %r484}, {%r10647, %r10759}, {%r15154, %r15154};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10923, %r525;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10925, %r10923, %r10927;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10928, %r522, %r10930, %r10925;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10932, %r525;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10934, %r10932, %r10936;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10937, %r522, %r10939, %r10934;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10941, %r525;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10943, %r10941, %r10945;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10946, %r522, %r10948, %r10943;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10950, %r525;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10952, %r10950, %r10954;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10955, %r522, %r10957, %r10952;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10959, %r525;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10961, %r10959, %r10963;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10964, %r522, %r10966, %r10961;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10968, %r525;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10970, %r10968, %r10972;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10973, %r522, %r10975, %r10970;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10977, %r525;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10979, %r10977, %r10981;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10982, %r522, %r10984, %r10979;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10986, %r525;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10988, %r10986, %r10990;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10991, %r522, %r10993, %r10988;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10995, %r525;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10997, %r10995, %r10999;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11000, %r522, %r11002, %r10997;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11004, %r525;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11006, %r11004, %r11008;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11009, %r522, %r11011, %r11006;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11013, %r525;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11015, %r11013, %r11017;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11018, %r522, %r11020, %r11015;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11022, %r525;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11024, %r11022, %r11026;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11027, %r522, %r11029, %r11024;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11031, %r525;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11033, %r11031, %r11035;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11036, %r522, %r11038, %r11033;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11040, %r525;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11042, %r11040, %r11044;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11045, %r522, %r11047, %r11042;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11049, %r525;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11051, %r11049, %r11053;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11054, %r522, %r11056, %r11051;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11058, %r525;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11060, %r11058, %r11062;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11063, %r522, %r11065, %r11060;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11067, %r525, %r10930;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11070, %r522, %r10927, %r11067;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11074, %r525, %r10939;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11077, %r522, %r10936, %r11074;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11081, %r525, %r10948;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11084, %r522, %r10945, %r11081;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11088, %r525, %r10957;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11091, %r522, %r10954, %r11088;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11095, %r525, %r10966;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11098, %r522, %r10963, %r11095;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11102, %r525, %r10975;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11105, %r522, %r10972, %r11102;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11109, %r525, %r10984;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11112, %r522, %r10981, %r11109;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11116, %r525, %r10993;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11119, %r522, %r10990, %r11116;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11123, %r525, %r11002;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11126, %r522, %r10999, %r11123;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11130, %r525, %r11011;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11133, %r522, %r11008, %r11130;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11137, %r525, %r11020;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11140, %r522, %r11017, %r11137;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11144, %r525, %r11029;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11147, %r522, %r11026, %r11144;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11151, %r525, %r11038;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11154, %r522, %r11035, %r11151;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11158, %r525, %r11047;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11161, %r522, %r11044, %r11158;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11165, %r525, %r11056;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11168, %r522, %r11053, %r11165;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11172, %r525, %r11065;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11175, %r522, %r11062, %r11172;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11468, %r11471}, {%r565, %r571, %r568, %r574}, {%r10928, %r11070}, {%r15154, %r15154};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11474, %r11477}, {%r565, %r571, %r568, %r574}, {%r10937, %r11077}, {%r15154, %r15154};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11480, %r11483}, {%r565, %r571, %r568, %r574}, {%r10946, %r11084}, {%r15154, %r15154};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11486, %r11489}, {%r565, %r571, %r568, %r574}, {%r10955, %r11091}, {%r15154, %r15154};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11492, %r11495}, {%r565, %r571, %r568, %r574}, {%r10964, %r11098}, {%r15154, %r15154};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11498, %r11501}, {%r565, %r571, %r568, %r574}, {%r10973, %r11105}, {%r15154, %r15154};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11504, %r11507}, {%r565, %r571, %r568, %r574}, {%r10982, %r11112}, {%r15154, %r15154};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11510, %r11513}, {%r565, %r571, %r568, %r574}, {%r10991, %r11119}, {%r15154, %r15154};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11469, %r11472}, {%r565, %r571, %r568, %r574}, {%r11000, %r11126}, {%r15154, %r15154};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11475, %r11478}, {%r565, %r571, %r568, %r574}, {%r11009, %r11133}, {%r15154, %r15154};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11481, %r11484}, {%r565, %r571, %r568, %r574}, {%r11018, %r11140}, {%r15154, %r15154};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11487, %r11490}, {%r565, %r571, %r568, %r574}, {%r11027, %r11147}, {%r15154, %r15154};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11493, %r11496}, {%r565, %r571, %r568, %r574}, {%r11036, %r11154}, {%r15154, %r15154};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11499, %r11502}, {%r565, %r571, %r568, %r574}, {%r11045, %r11161}, {%r15154, %r15154};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11505, %r11508}, {%r565, %r571, %r568, %r574}, {%r11054, %r11168}, {%r15154, %r15154};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11511, %r11514}, {%r565, %r571, %r568, %r574}, {%r11063, %r11175}, {%r15154, %r15154};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11467, %r11468, %r11469;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11470, %r11471, %r11472;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11473, %r11474, %r11475;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11476, %r11477, %r11478;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11479, %r11480, %r11481;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11482, %r11483, %r11484;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11485, %r11486, %r11487;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11488, %r11489, %r11490;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11491, %r11492, %r11493;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11494, %r11495, %r11496;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11497, %r11498, %r11499;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11500, %r11501, %r11502;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11503, %r11504, %r11505;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11506, %r11507, %r11508;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11509, %r11510, %r11511;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11512, %r11513, %r11514;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11515, %r11468, %r11469;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11518, %r11471, %r11472;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11521, %r11474, %r11475;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11524, %r11477, %r11478;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11527, %r11480, %r11481;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11530, %r11483, %r11484;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11533, %r11486, %r11487;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11536, %r11489, %r11490;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11539, %r11492, %r11493;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11542, %r11495, %r11496;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11545, %r11498, %r11499;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11548, %r11501, %r11502;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11551, %r11504, %r11505;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11554, %r11507, %r11508;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11557, %r11510, %r11511;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11560, %r11513, %r11514;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11563, %r11, %r11467;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11566, %r11, %r11470;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11569, %r11, %r11473;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11572, %r11, %r11476;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11575, %r11, %r11479;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11578, %r11, %r11482;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11581, %r11, %r11485;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11584, %r11, %r11488;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11587, %r11, %r11491;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11590, %r11, %r11494;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11593, %r11, %r11497;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11596, %r11, %r11500;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11599, %r11, %r11503;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11602, %r11, %r11506;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11605, %r11, %r11509;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11608, %r11, %r11512;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11611, %r12, %r11515;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11614, %r12, %r11518;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11617, %r12, %r11521;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11620, %r12, %r11524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11623, %r12, %r11527;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11626, %r12, %r11530;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11629, %r12, %r11533;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11632, %r12, %r11536;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11635, %r12, %r11539;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11638, %r12, %r11542;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11641, %r12, %r11545;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11644, %r12, %r11548;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11647, %r12, %r11551;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11650, %r12, %r11554;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11653, %r12, %r11557;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11656, %r12, %r11560;
	// end inline asm
	// begin inline asm
	mov.b32 %r11659, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11660, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11661, %r11563, %r11659;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11664, %r11661, %r11660;
	// end inline asm
	// begin inline asm
	mov.b32 %r11667, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11668, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11669, %r11566, %r11667;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11672, %r11669, %r11668;
	// end inline asm
	// begin inline asm
	mov.b32 %r11675, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11676, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11677, %r11569, %r11675;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11680, %r11677, %r11676;
	// end inline asm
	// begin inline asm
	mov.b32 %r11683, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11684, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11685, %r11572, %r11683;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11688, %r11685, %r11684;
	// end inline asm
	// begin inline asm
	mov.b32 %r11691, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11692, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11693, %r11575, %r11691;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11696, %r11693, %r11692;
	// end inline asm
	// begin inline asm
	mov.b32 %r11699, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11700, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11701, %r11578, %r11699;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11704, %r11701, %r11700;
	// end inline asm
	// begin inline asm
	mov.b32 %r11707, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11708, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11709, %r11581, %r11707;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11712, %r11709, %r11708;
	// end inline asm
	// begin inline asm
	mov.b32 %r11715, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11716, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11717, %r11584, %r11715;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11720, %r11717, %r11716;
	// end inline asm
	// begin inline asm
	mov.b32 %r11723, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11724, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11725, %r11587, %r11723;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11728, %r11725, %r11724;
	// end inline asm
	// begin inline asm
	mov.b32 %r11731, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11732, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11733, %r11590, %r11731;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11736, %r11733, %r11732;
	// end inline asm
	// begin inline asm
	mov.b32 %r11739, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11740, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11741, %r11593, %r11739;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11744, %r11741, %r11740;
	// end inline asm
	// begin inline asm
	mov.b32 %r11747, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11748, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11749, %r11596, %r11747;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11752, %r11749, %r11748;
	// end inline asm
	// begin inline asm
	mov.b32 %r11755, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11756, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11757, %r11599, %r11755;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11760, %r11757, %r11756;
	// end inline asm
	// begin inline asm
	mov.b32 %r11763, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11764, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11765, %r11602, %r11763;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11768, %r11765, %r11764;
	// end inline asm
	// begin inline asm
	mov.b32 %r11771, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11772, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11773, %r11605, %r11771;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11776, %r11773, %r11772;
	// end inline asm
	// begin inline asm
	mov.b32 %r11779, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11780, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11781, %r11608, %r11779;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11784, %r11781, %r11780;
	// end inline asm
	// begin inline asm
	mov.b32 %r11787, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11788, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11789, %r11611, %r11787;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11792, %r11789, %r11788;
	// end inline asm
	// begin inline asm
	mov.b32 %r11795, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11796, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11797, %r11614, %r11795;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11800, %r11797, %r11796;
	// end inline asm
	// begin inline asm
	mov.b32 %r11803, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11804, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11805, %r11617, %r11803;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11808, %r11805, %r11804;
	// end inline asm
	// begin inline asm
	mov.b32 %r11811, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11812, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11813, %r11620, %r11811;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11816, %r11813, %r11812;
	// end inline asm
	// begin inline asm
	mov.b32 %r11819, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11820, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11821, %r11623, %r11819;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11824, %r11821, %r11820;
	// end inline asm
	// begin inline asm
	mov.b32 %r11827, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11828, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11829, %r11626, %r11827;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11832, %r11829, %r11828;
	// end inline asm
	// begin inline asm
	mov.b32 %r11835, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11836, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11837, %r11629, %r11835;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11840, %r11837, %r11836;
	// end inline asm
	// begin inline asm
	mov.b32 %r11843, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11844, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11845, %r11632, %r11843;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11848, %r11845, %r11844;
	// end inline asm
	// begin inline asm
	mov.b32 %r11851, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11852, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11853, %r11635, %r11851;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11856, %r11853, %r11852;
	// end inline asm
	// begin inline asm
	mov.b32 %r11859, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11860, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11861, %r11638, %r11859;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11864, %r11861, %r11860;
	// end inline asm
	// begin inline asm
	mov.b32 %r11867, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11868, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11869, %r11641, %r11867;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11872, %r11869, %r11868;
	// end inline asm
	// begin inline asm
	mov.b32 %r11875, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11876, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11877, %r11644, %r11875;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11880, %r11877, %r11876;
	// end inline asm
	// begin inline asm
	mov.b32 %r11883, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11884, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11885, %r11647, %r11883;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11888, %r11885, %r11884;
	// end inline asm
	// begin inline asm
	mov.b32 %r11891, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11892, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11893, %r11650, %r11891;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11896, %r11893, %r11892;
	// end inline asm
	// begin inline asm
	mov.b32 %r11899, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11900, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11901, %r11653, %r11899;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11904, %r11901, %r11900;
	// end inline asm
	// begin inline asm
	mov.b32 %r11907, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11908, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11909, %r11656, %r11907;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11912, %r11909, %r11908;
	// end inline asm
	// begin inline asm
	mov.b32 %r11918, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r11916, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11917, %r11918, %r11916;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11920, %r11664, %r11917;
	// end inline asm
	// begin inline asm
	mov.b32 %r11923, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11924, %r11918, %r11923;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11927, %r11672, %r11924;
	// end inline asm
	// begin inline asm
	mov.b32 %r11930, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11931, %r11918, %r11930;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11934, %r11680, %r11931;
	// end inline asm
	// begin inline asm
	mov.b32 %r11937, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11938, %r11918, %r11937;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11941, %r11688, %r11938;
	// end inline asm
	// begin inline asm
	prmt.b32 %r11944, %r11920, %r11934, %r4315;
	// end inline asm
	// begin inline asm
	prmt.b32 %r11948, %r11927, %r11941, %r4315;
	// end inline asm
	shl.b32 	%r11955, %r11948, 4;
	// begin inline asm
	lop3.b32 %r11952, %r4321, %r11944, %r11955, 202;
	// end inline asm
	xor.b32  	%r16083, %r11952, -2004318072;
	// begin inline asm
	mov.b32 %r11959, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r11957, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11958, %r11959, %r11957;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11961, %r11696, %r11958;
	// end inline asm
	// begin inline asm
	mov.b32 %r11964, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11965, %r11959, %r11964;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11968, %r11704, %r11965;
	// end inline asm
	// begin inline asm
	mov.b32 %r11971, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11972, %r11959, %r11971;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11975, %r11712, %r11972;
	// end inline asm
	// begin inline asm
	mov.b32 %r11978, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11979, %r11959, %r11978;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11982, %r11720, %r11979;
	// end inline asm
	// begin inline asm
	prmt.b32 %r11985, %r11961, %r11975, %r4315;
	// end inline asm
	// begin inline asm
	prmt.b32 %r11989, %r11968, %r11982, %r4315;
	// end inline asm
	shl.b32 	%r11996, %r11989, 4;
	// begin inline asm
	lop3.b32 %r11993, %r4321, %r11985, %r11996, 202;
	// end inline asm
	xor.b32  	%r16084, %r11993, -2004318072;
	// begin inline asm
	mov.b32 %r12000, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r11998, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11999, %r12000, %r11998;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12002, %r11728, %r11999;
	// end inline asm
	// begin inline asm
	mov.b32 %r12005, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12006, %r12000, %r12005;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12009, %r11736, %r12006;
	// end inline asm
	// begin inline asm
	mov.b32 %r12012, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12013, %r12000, %r12012;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12016, %r11744, %r12013;
	// end inline asm
	// begin inline asm
	mov.b32 %r12019, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12020, %r12000, %r12019;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12023, %r11752, %r12020;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12026, %r12002, %r12016, %r4315;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12030, %r12009, %r12023, %r4315;
	// end inline asm
	shl.b32 	%r12037, %r12030, 4;
	// begin inline asm
	lop3.b32 %r12034, %r4321, %r12026, %r12037, 202;
	// end inline asm
	xor.b32  	%r16085, %r12034, -2004318072;
	// begin inline asm
	mov.b32 %r12041, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12039, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12040, %r12041, %r12039;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12043, %r11760, %r12040;
	// end inline asm
	// begin inline asm
	mov.b32 %r12046, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12047, %r12041, %r12046;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12050, %r11768, %r12047;
	// end inline asm
	// begin inline asm
	mov.b32 %r12053, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12054, %r12041, %r12053;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12057, %r11776, %r12054;
	// end inline asm
	// begin inline asm
	mov.b32 %r12060, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12061, %r12041, %r12060;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12064, %r11784, %r12061;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12067, %r12043, %r12057, %r4315;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12071, %r12050, %r12064, %r4315;
	// end inline asm
	shl.b32 	%r12078, %r12071, 4;
	// begin inline asm
	lop3.b32 %r12075, %r4321, %r12067, %r12078, 202;
	// end inline asm
	xor.b32  	%r16086, %r12075, -2004318072;
	// begin inline asm
	mov.b32 %r12082, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12080, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12081, %r12082, %r12080;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12084, %r11792, %r12081;
	// end inline asm
	// begin inline asm
	mov.b32 %r12087, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12088, %r12082, %r12087;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12091, %r11800, %r12088;
	// end inline asm
	// begin inline asm
	mov.b32 %r12094, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12095, %r12082, %r12094;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12098, %r11808, %r12095;
	// end inline asm
	// begin inline asm
	mov.b32 %r12101, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12102, %r12082, %r12101;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12105, %r11816, %r12102;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12108, %r12084, %r12098, %r4315;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12112, %r12091, %r12105, %r4315;
	// end inline asm
	shl.b32 	%r12119, %r12112, 4;
	// begin inline asm
	lop3.b32 %r12116, %r4321, %r12108, %r12119, 202;
	// end inline asm
	xor.b32  	%r16087, %r12116, -2004318072;
	// begin inline asm
	mov.b32 %r12123, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12121, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12122, %r12123, %r12121;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12125, %r11824, %r12122;
	// end inline asm
	// begin inline asm
	mov.b32 %r12128, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12129, %r12123, %r12128;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12132, %r11832, %r12129;
	// end inline asm
	// begin inline asm
	mov.b32 %r12135, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12136, %r12123, %r12135;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12139, %r11840, %r12136;
	// end inline asm
	// begin inline asm
	mov.b32 %r12142, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12143, %r12123, %r12142;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12146, %r11848, %r12143;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12149, %r12125, %r12139, %r4315;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12153, %r12132, %r12146, %r4315;
	// end inline asm
	shl.b32 	%r12160, %r12153, 4;
	// begin inline asm
	lop3.b32 %r12157, %r4321, %r12149, %r12160, 202;
	// end inline asm
	xor.b32  	%r16088, %r12157, -2004318072;
	// begin inline asm
	mov.b32 %r12164, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12162, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12163, %r12164, %r12162;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12166, %r11856, %r12163;
	// end inline asm
	// begin inline asm
	mov.b32 %r12169, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12170, %r12164, %r12169;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12173, %r11864, %r12170;
	// end inline asm
	// begin inline asm
	mov.b32 %r12176, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12177, %r12164, %r12176;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12180, %r11872, %r12177;
	// end inline asm
	// begin inline asm
	mov.b32 %r12183, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12184, %r12164, %r12183;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12187, %r11880, %r12184;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12190, %r12166, %r12180, %r4315;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12194, %r12173, %r12187, %r4315;
	// end inline asm
	shl.b32 	%r12201, %r12194, 4;
	// begin inline asm
	lop3.b32 %r12198, %r4321, %r12190, %r12201, 202;
	// end inline asm
	xor.b32  	%r16089, %r12198, -2004318072;
	// begin inline asm
	mov.b32 %r12205, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12203, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12204, %r12205, %r12203;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12207, %r11888, %r12204;
	// end inline asm
	// begin inline asm
	mov.b32 %r12210, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12211, %r12205, %r12210;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12214, %r11896, %r12211;
	// end inline asm
	// begin inline asm
	mov.b32 %r12217, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12218, %r12205, %r12217;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12221, %r11904, %r12218;
	// end inline asm
	// begin inline asm
	mov.b32 %r12224, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12225, %r12205, %r12224;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12228, %r11912, %r12225;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12231, %r12207, %r12221, %r4315;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12235, %r12214, %r12228, %r4315;
	// end inline asm
	shl.b32 	%r12242, %r12235, 4;
	// begin inline asm
	lop3.b32 %r12239, %r4321, %r12231, %r12242, 202;
	// end inline asm
	xor.b32  	%r16090, %r12239, -2004318072;
	st.shared.u32 	[%rd82], %r16083;
	st.shared.u32 	[%rd83], %r16084;
	st.shared.u32 	[%rd84], %r16085;
	st.shared.u32 	[%rd85], %r16086;
	st.shared.u32 	[%rd86], %r16087;
	st.shared.u32 	[%rd87], %r16088;
	st.shared.u32 	[%rd88], %r16089;
	st.shared.u32 	[%rd89], %r16090;
	ld.shared.u32 	%r16201, [%rd74];
	ld.shared.u32 	%r16202, [%rd75];
	ld.shared.u32 	%r16203, [%rd76];
	ld.shared.u32 	%r16204, [%rd77];
	ld.shared.u32 	%r16213, [%rd78];
	ld.shared.u32 	%r16214, [%rd79];
	ld.shared.u32 	%r16215, [%rd80];
	ld.shared.u32 	%r16216, [%rd81];
	// begin inline asm
	mov.b32 %r12248, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12259, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12247, %r16201, -2004318072;
	// begin inline asm
	lop3.b32 %r12245, %r798, %r12247, %r12248, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12249, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12250, %r12248, %r12249;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12253, %r12245, %r12250;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12256, %r809, %r12247, %r12259, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12260, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12261, %r12259, %r12260;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12264, %r12256, %r12261;
	// end inline asm
	shr.u32 	%r12269, %r12247, 8;
	// begin inline asm
	lop3.b32 %r12267, %r798, %r12269, %r12248, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12271, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12272, %r12248, %r12271;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12275, %r12267, %r12272;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12278, %r809, %r12269, %r12259, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12282, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12283, %r12259, %r12282;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12286, %r12278, %r12283;
	// end inline asm
	// begin inline asm
	mov.b32 %r12294, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12305, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12293, %r16202, -2004318072;
	// begin inline asm
	lop3.b32 %r12291, %r798, %r12293, %r12294, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12295, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12296, %r12294, %r12295;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12299, %r12291, %r12296;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12302, %r809, %r12293, %r12305, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12306, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12307, %r12305, %r12306;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12310, %r12302, %r12307;
	// end inline asm
	shr.u32 	%r12315, %r12293, 8;
	// begin inline asm
	lop3.b32 %r12313, %r798, %r12315, %r12294, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12317, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12318, %r12294, %r12317;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12321, %r12313, %r12318;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12324, %r809, %r12315, %r12305, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12328, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12329, %r12305, %r12328;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12332, %r12324, %r12329;
	// end inline asm
	// begin inline asm
	mov.b32 %r12340, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12351, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12339, %r16203, -2004318072;
	// begin inline asm
	lop3.b32 %r12337, %r798, %r12339, %r12340, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12341, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12342, %r12340, %r12341;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12345, %r12337, %r12342;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12348, %r809, %r12339, %r12351, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12352, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12353, %r12351, %r12352;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12356, %r12348, %r12353;
	// end inline asm
	shr.u32 	%r12361, %r12339, 8;
	// begin inline asm
	lop3.b32 %r12359, %r798, %r12361, %r12340, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12363, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12364, %r12340, %r12363;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12367, %r12359, %r12364;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12370, %r809, %r12361, %r12351, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12374, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12375, %r12351, %r12374;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12378, %r12370, %r12375;
	// end inline asm
	// begin inline asm
	mov.b32 %r12386, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12397, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12385, %r16204, -2004318072;
	// begin inline asm
	lop3.b32 %r12383, %r798, %r12385, %r12386, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12387, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12388, %r12386, %r12387;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12391, %r12383, %r12388;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12394, %r809, %r12385, %r12397, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12398, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12399, %r12397, %r12398;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12402, %r12394, %r12399;
	// end inline asm
	shr.u32 	%r12407, %r12385, 8;
	// begin inline asm
	lop3.b32 %r12405, %r798, %r12407, %r12386, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12409, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12410, %r12386, %r12409;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12413, %r12405, %r12410;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12416, %r809, %r12407, %r12397, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12420, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12421, %r12397, %r12420;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12424, %r12416, %r12421;
	// end inline asm
	// begin inline asm
	mov.b32 %r12432, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12443, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12431, %r16213, -2004318072;
	// begin inline asm
	lop3.b32 %r12429, %r798, %r12431, %r12432, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12433, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12434, %r12432, %r12433;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12437, %r12429, %r12434;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12440, %r809, %r12431, %r12443, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12444, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12445, %r12443, %r12444;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12448, %r12440, %r12445;
	// end inline asm
	shr.u32 	%r12453, %r12431, 8;
	// begin inline asm
	lop3.b32 %r12451, %r798, %r12453, %r12432, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12455, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12456, %r12432, %r12455;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12459, %r12451, %r12456;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12462, %r809, %r12453, %r12443, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12466, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12467, %r12443, %r12466;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12470, %r12462, %r12467;
	// end inline asm
	// begin inline asm
	mov.b32 %r12478, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12489, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12477, %r16214, -2004318072;
	// begin inline asm
	lop3.b32 %r12475, %r798, %r12477, %r12478, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12479, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12480, %r12478, %r12479;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12483, %r12475, %r12480;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12486, %r809, %r12477, %r12489, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12490, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12491, %r12489, %r12490;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12494, %r12486, %r12491;
	// end inline asm
	shr.u32 	%r12499, %r12477, 8;
	// begin inline asm
	lop3.b32 %r12497, %r798, %r12499, %r12478, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12501, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12502, %r12478, %r12501;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12505, %r12497, %r12502;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12508, %r809, %r12499, %r12489, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12512, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12513, %r12489, %r12512;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12516, %r12508, %r12513;
	// end inline asm
	// begin inline asm
	mov.b32 %r12524, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12535, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12523, %r16215, -2004318072;
	// begin inline asm
	lop3.b32 %r12521, %r798, %r12523, %r12524, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12525, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12526, %r12524, %r12525;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12529, %r12521, %r12526;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12532, %r809, %r12523, %r12535, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12536, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12537, %r12535, %r12536;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12540, %r12532, %r12537;
	// end inline asm
	shr.u32 	%r12545, %r12523, 8;
	// begin inline asm
	lop3.b32 %r12543, %r798, %r12545, %r12524, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12547, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12548, %r12524, %r12547;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12551, %r12543, %r12548;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12554, %r809, %r12545, %r12535, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12558, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12559, %r12535, %r12558;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12562, %r12554, %r12559;
	// end inline asm
	// begin inline asm
	mov.b32 %r12570, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12581, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12569, %r16216, -2004318072;
	// begin inline asm
	lop3.b32 %r12567, %r798, %r12569, %r12570, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12571, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12572, %r12570, %r12571;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12575, %r12567, %r12572;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12578, %r809, %r12569, %r12581, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12582, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12583, %r12581, %r12582;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12586, %r12578, %r12583;
	// end inline asm
	shr.u32 	%r12591, %r12569, 8;
	// begin inline asm
	lop3.b32 %r12589, %r798, %r12591, %r12570, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12593, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12594, %r12570, %r12593;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12597, %r12589, %r12594;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12600, %r809, %r12591, %r12581, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12604, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12605, %r12581, %r12604;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12608, %r12600, %r12605;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12611, %r381;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12613, %r12611, %r12253;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12616, %r381;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12618, %r12616, %r12264;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12621, %r381;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12623, %r12621, %r12275;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12626, %r381;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12628, %r12626, %r12286;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12631, %r381;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12633, %r12631, %r12299;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12636, %r381;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12638, %r12636, %r12310;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12641, %r381;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12643, %r12641, %r12321;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12646, %r381;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12648, %r12646, %r12332;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12651, %r381;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12653, %r12651, %r12345;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12656, %r381;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12658, %r12656, %r12356;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12661, %r381;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12663, %r12661, %r12367;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12666, %r381;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12668, %r12666, %r12378;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12671, %r381;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12673, %r12671, %r12391;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12676, %r381;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12678, %r12676, %r12402;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12681, %r381;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12683, %r12681, %r12413;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12686, %r381;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12688, %r12686, %r12424;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12691, %r399;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12693, %r12691, %r12437;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12696, %r399;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12698, %r12696, %r12448;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12701, %r399;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12703, %r12701, %r12459;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12706, %r399;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12708, %r12706, %r12470;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12711, %r399;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12713, %r12711, %r12483;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12716, %r399;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12718, %r12716, %r12494;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12721, %r399;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12723, %r12721, %r12505;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12726, %r399;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12728, %r12726, %r12516;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12731, %r399;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12733, %r12731, %r12529;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12736, %r399;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12738, %r12736, %r12540;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12741, %r399;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12743, %r12741, %r12551;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12746, %r399;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12748, %r12746, %r12562;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12751, %r399;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12753, %r12751, %r12575;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12756, %r399;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12758, %r12756, %r12586;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12761, %r399;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12763, %r12761, %r12597;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12766, %r399;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12768, %r12766, %r12608;
	// end inline asm
	// begin inline asm
	mov.b32 %r12776, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12787, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12773, %r798, %r799, %r12776, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12777, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12778, %r12776, %r12777;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12781, %r12773, %r12778;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12784, %r809, %r799, %r12787, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12788, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12789, %r12787, %r12788;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12792, %r12784, %r12789;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12795, %r798, %r821, %r12776, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12799, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12800, %r12776, %r12799;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12803, %r12795, %r12800;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12806, %r809, %r821, %r12787, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12810, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12811, %r12787, %r12810;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12814, %r12806, %r12811;
	// end inline asm
	// begin inline asm
	mov.b32 %r12822, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12833, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12819, %r798, %r845, %r12822, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12823, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12824, %r12822, %r12823;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12827, %r12819, %r12824;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12830, %r809, %r845, %r12833, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12834, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12835, %r12833, %r12834;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12838, %r12830, %r12835;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12841, %r798, %r867, %r12822, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12845, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12846, %r12822, %r12845;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12849, %r12841, %r12846;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12852, %r809, %r867, %r12833, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12856, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12857, %r12833, %r12856;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12860, %r12852, %r12857;
	// end inline asm
	// begin inline asm
	mov.b32 %r12868, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12879, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12865, %r798, %r891, %r12868, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12869, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12870, %r12868, %r12869;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12873, %r12865, %r12870;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12876, %r809, %r891, %r12879, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12880, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12881, %r12879, %r12880;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12884, %r12876, %r12881;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12887, %r798, %r913, %r12868, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12891, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12892, %r12868, %r12891;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12895, %r12887, %r12892;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12898, %r809, %r913, %r12879, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12902, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12903, %r12879, %r12902;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12906, %r12898, %r12903;
	// end inline asm
	// begin inline asm
	mov.b32 %r12914, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12925, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12911, %r798, %r937, %r12914, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12915, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12916, %r12914, %r12915;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12919, %r12911, %r12916;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12922, %r809, %r937, %r12925, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12926, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12927, %r12925, %r12926;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12930, %r12922, %r12927;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12933, %r798, %r959, %r12914, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12937, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12938, %r12914, %r12937;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12941, %r12933, %r12938;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12944, %r809, %r959, %r12925, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12948, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12949, %r12925, %r12948;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12952, %r12944, %r12949;
	// end inline asm
	// begin inline asm
	mov.b32 %r12960, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12971, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12957, %r798, %r983, %r12960, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12961, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12962, %r12960, %r12961;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12965, %r12957, %r12962;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12968, %r809, %r983, %r12971, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12972, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12973, %r12971, %r12972;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12976, %r12968, %r12973;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12979, %r798, %r1005, %r12960, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12983, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12984, %r12960, %r12983;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12987, %r12979, %r12984;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12990, %r809, %r1005, %r12971, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12994, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12995, %r12971, %r12994;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12998, %r12990, %r12995;
	// end inline asm
	// begin inline asm
	mov.b32 %r13006, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13017, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13003, %r798, %r1029, %r13006, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13007, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13008, %r13006, %r13007;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13011, %r13003, %r13008;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13014, %r809, %r1029, %r13017, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13018, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13019, %r13017, %r13018;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13022, %r13014, %r13019;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13025, %r798, %r1051, %r13006, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13029, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13030, %r13006, %r13029;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13033, %r13025, %r13030;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13036, %r809, %r1051, %r13017, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13040, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13041, %r13017, %r13040;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13044, %r13036, %r13041;
	// end inline asm
	// begin inline asm
	mov.b32 %r13052, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13063, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13049, %r798, %r1075, %r13052, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13053, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13054, %r13052, %r13053;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13057, %r13049, %r13054;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13060, %r809, %r1075, %r13063, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13064, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13065, %r13063, %r13064;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13068, %r13060, %r13065;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13071, %r798, %r1097, %r13052, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13075, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13076, %r13052, %r13075;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13079, %r13071, %r13076;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13082, %r809, %r1097, %r13063, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13086, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13087, %r13063, %r13086;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13090, %r13082, %r13087;
	// end inline asm
	// begin inline asm
	mov.b32 %r13098, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13109, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13095, %r798, %r1121, %r13098, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13099, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13100, %r13098, %r13099;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13103, %r13095, %r13100;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13106, %r809, %r1121, %r13109, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13110, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13111, %r13109, %r13110;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13114, %r13106, %r13111;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13117, %r798, %r1143, %r13098, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13121, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13122, %r13098, %r13121;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13125, %r13117, %r13122;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13128, %r809, %r1143, %r13109, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13132, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13133, %r13109, %r13132;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13136, %r13128, %r13133;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13139, %r273, %r12781, %r12613;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13143, %r273, %r12792, %r12618;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13147, %r273, %r12803, %r12623;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13151, %r273, %r12814, %r12628;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13155, %r273, %r12827, %r12633;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13159, %r273, %r12838, %r12638;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13163, %r273, %r12849, %r12643;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13167, %r273, %r12860, %r12648;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13171, %r273, %r12873, %r12653;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13175, %r273, %r12884, %r12658;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13179, %r273, %r12895, %r12663;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13183, %r273, %r12906, %r12668;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13187, %r273, %r12919, %r12673;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13191, %r273, %r12930, %r12678;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13195, %r273, %r12941, %r12683;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13199, %r273, %r12952, %r12688;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13203, %r291, %r12965, %r12693;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13207, %r291, %r12976, %r12698;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13211, %r291, %r12987, %r12703;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13215, %r291, %r12998, %r12708;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13219, %r291, %r13011, %r12713;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13223, %r291, %r13022, %r12718;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13227, %r291, %r13033, %r12723;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13231, %r291, %r13044, %r12728;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13235, %r291, %r13057, %r12733;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13239, %r291, %r13068, %r12738;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13243, %r291, %r13079, %r12743;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13247, %r291, %r13090, %r12748;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13251, %r291, %r13103, %r12753;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13255, %r291, %r13114, %r12758;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13259, %r291, %r13125, %r12763;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13263, %r291, %r13136, %r12768;
	// end inline asm
	// begin inline asm
	mov.b32 %r13272, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13283, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13269, %r798, %r4615, %r13272, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13273, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13274, %r13272, %r13273;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13277, %r13269, %r13274;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13280, %r809, %r4615, %r13283, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13284, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13285, %r13283, %r13284;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13288, %r13280, %r13285;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13291, %r798, %r4637, %r13272, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13295, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13296, %r13272, %r13295;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13299, %r13291, %r13296;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13302, %r809, %r4637, %r13283, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13306, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13307, %r13283, %r13306;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13310, %r13302, %r13307;
	// end inline asm
	// begin inline asm
	mov.b32 %r13318, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13329, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13315, %r798, %r4661, %r13318, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13319, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13320, %r13318, %r13319;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13323, %r13315, %r13320;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13326, %r809, %r4661, %r13329, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13330, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13331, %r13329, %r13330;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13334, %r13326, %r13331;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13337, %r798, %r4683, %r13318, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13341, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13342, %r13318, %r13341;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13345, %r13337, %r13342;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13348, %r809, %r4683, %r13329, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13352, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13353, %r13329, %r13352;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13356, %r13348, %r13353;
	// end inline asm
	// begin inline asm
	mov.b32 %r13364, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13375, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13361, %r798, %r4707, %r13364, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13365, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13366, %r13364, %r13365;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13369, %r13361, %r13366;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13372, %r809, %r4707, %r13375, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13376, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13377, %r13375, %r13376;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13380, %r13372, %r13377;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13383, %r798, %r4729, %r13364, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13387, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13388, %r13364, %r13387;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13391, %r13383, %r13388;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13394, %r809, %r4729, %r13375, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13398, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13399, %r13375, %r13398;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13402, %r13394, %r13399;
	// end inline asm
	// begin inline asm
	mov.b32 %r13410, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13421, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13407, %r798, %r4753, %r13410, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13411, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13412, %r13410, %r13411;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13415, %r13407, %r13412;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13418, %r809, %r4753, %r13421, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13422, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13423, %r13421, %r13422;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13426, %r13418, %r13423;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13429, %r798, %r4775, %r13410, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13433, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13434, %r13410, %r13433;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13437, %r13429, %r13434;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13440, %r809, %r4775, %r13421, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13444, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13445, %r13421, %r13444;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13448, %r13440, %r13445;
	// end inline asm
	// begin inline asm
	mov.b32 %r13456, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13467, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13453, %r798, %r4799, %r13456, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13457, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13458, %r13456, %r13457;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13461, %r13453, %r13458;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13464, %r809, %r4799, %r13467, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13468, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13469, %r13467, %r13468;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13472, %r13464, %r13469;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13475, %r798, %r4821, %r13456, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13479, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13480, %r13456, %r13479;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13483, %r13475, %r13480;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13486, %r809, %r4821, %r13467, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13490, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13491, %r13467, %r13490;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13494, %r13486, %r13491;
	// end inline asm
	// begin inline asm
	mov.b32 %r13502, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13513, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13499, %r798, %r4845, %r13502, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13503, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13504, %r13502, %r13503;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13507, %r13499, %r13504;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13510, %r809, %r4845, %r13513, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13514, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13515, %r13513, %r13514;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13518, %r13510, %r13515;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13521, %r798, %r4867, %r13502, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13525, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13526, %r13502, %r13525;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13529, %r13521, %r13526;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13532, %r809, %r4867, %r13513, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13536, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13537, %r13513, %r13536;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13540, %r13532, %r13537;
	// end inline asm
	// begin inline asm
	mov.b32 %r13548, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13559, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13545, %r798, %r4891, %r13548, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13549, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13550, %r13548, %r13549;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13553, %r13545, %r13550;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13556, %r809, %r4891, %r13559, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13560, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13561, %r13559, %r13560;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13564, %r13556, %r13561;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13567, %r798, %r4913, %r13548, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13571, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13572, %r13548, %r13571;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13575, %r13567, %r13572;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13578, %r809, %r4913, %r13559, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13582, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13583, %r13559, %r13582;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13586, %r13578, %r13583;
	// end inline asm
	// begin inline asm
	mov.b32 %r13594, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13605, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13591, %r798, %r4937, %r13594, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13595, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13596, %r13594, %r13595;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13599, %r13591, %r13596;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13602, %r809, %r4937, %r13605, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13606, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13607, %r13605, %r13606;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13610, %r13602, %r13607;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13613, %r798, %r4959, %r13594, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13617, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13618, %r13594, %r13617;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13621, %r13613, %r13618;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13624, %r809, %r4959, %r13605, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13628, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13629, %r13605, %r13628;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13632, %r13624, %r13629;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13635, %r309;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13637, %r13635, %r13277, %r13139;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13641, %r309;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13643, %r13641, %r13288, %r13143;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13647, %r309;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13649, %r13647, %r13299, %r13147;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13653, %r309;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13655, %r13653, %r13310, %r13151;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13659, %r309;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13661, %r13659, %r13323, %r13155;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13665, %r309;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13667, %r13665, %r13334, %r13159;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13671, %r309;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13673, %r13671, %r13345, %r13163;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13677, %r309;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13679, %r13677, %r13356, %r13167;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13683, %r309;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13685, %r13683, %r13369, %r13171;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13689, %r309;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13691, %r13689, %r13380, %r13175;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13695, %r309;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13697, %r13695, %r13391, %r13179;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13701, %r309;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13703, %r13701, %r13402, %r13183;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13707, %r309;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13709, %r13707, %r13415, %r13187;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13713, %r309;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13715, %r13713, %r13426, %r13191;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13719, %r309;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13721, %r13719, %r13437, %r13195;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13725, %r309;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13727, %r13725, %r13448, %r13199;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13731, %r327;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13733, %r13731, %r13461, %r13203;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13737, %r327;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13739, %r13737, %r13472, %r13207;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13743, %r327;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13745, %r13743, %r13483, %r13211;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13749, %r327;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13751, %r13749, %r13494, %r13215;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13755, %r327;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13757, %r13755, %r13507, %r13219;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13761, %r327;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13763, %r13761, %r13518, %r13223;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13767, %r327;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13769, %r13767, %r13529, %r13227;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13773, %r327;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13775, %r13773, %r13540, %r13231;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13779, %r327;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13781, %r13779, %r13553, %r13235;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13785, %r327;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13787, %r13785, %r13564, %r13239;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13791, %r327;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13793, %r13791, %r13575, %r13243;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13797, %r327;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13799, %r13797, %r13586, %r13247;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13803, %r327;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13805, %r13803, %r13599, %r13251;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13809, %r327;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13811, %r13809, %r13610, %r13255;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13815, %r327;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13817, %r13815, %r13621, %r13259;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13821, %r327;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13823, %r13821, %r13632, %r13263;
	// end inline asm
	// begin inline asm
	mov.b32 %r13832, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13843, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13829, %r798, %r8431, %r13832, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13833, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13834, %r13832, %r13833;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13837, %r13829, %r13834;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13840, %r809, %r8431, %r13843, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13844, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13845, %r13843, %r13844;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13848, %r13840, %r13845;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13851, %r798, %r8453, %r13832, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13855, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13856, %r13832, %r13855;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13859, %r13851, %r13856;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13862, %r809, %r8453, %r13843, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13866, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13867, %r13843, %r13866;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13870, %r13862, %r13867;
	// end inline asm
	// begin inline asm
	mov.b32 %r13878, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13889, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13875, %r798, %r8477, %r13878, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13879, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13880, %r13878, %r13879;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13883, %r13875, %r13880;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13886, %r809, %r8477, %r13889, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13890, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13891, %r13889, %r13890;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13894, %r13886, %r13891;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13897, %r798, %r8499, %r13878, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13901, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13902, %r13878, %r13901;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13905, %r13897, %r13902;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13908, %r809, %r8499, %r13889, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13912, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13913, %r13889, %r13912;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13916, %r13908, %r13913;
	// end inline asm
	// begin inline asm
	mov.b32 %r13924, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13935, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13921, %r798, %r8523, %r13924, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13925, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13926, %r13924, %r13925;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13929, %r13921, %r13926;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13932, %r809, %r8523, %r13935, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13936, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13937, %r13935, %r13936;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13940, %r13932, %r13937;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13943, %r798, %r8545, %r13924, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13947, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13948, %r13924, %r13947;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13951, %r13943, %r13948;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13954, %r809, %r8545, %r13935, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13958, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13959, %r13935, %r13958;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13962, %r13954, %r13959;
	// end inline asm
	// begin inline asm
	mov.b32 %r13970, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13981, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13967, %r798, %r8569, %r13970, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13971, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13972, %r13970, %r13971;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13975, %r13967, %r13972;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13978, %r809, %r8569, %r13981, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13982, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13983, %r13981, %r13982;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13986, %r13978, %r13983;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13989, %r798, %r8591, %r13970, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13993, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13994, %r13970, %r13993;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13997, %r13989, %r13994;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14000, %r809, %r8591, %r13981, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14004, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14005, %r13981, %r14004;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14008, %r14000, %r14005;
	// end inline asm
	// begin inline asm
	mov.b32 %r14016, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r14027, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14013, %r798, %r8615, %r14016, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14017, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14018, %r14016, %r14017;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14021, %r14013, %r14018;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14024, %r809, %r8615, %r14027, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14028, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14029, %r14027, %r14028;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14032, %r14024, %r14029;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14035, %r798, %r8637, %r14016, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14039, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14040, %r14016, %r14039;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14043, %r14035, %r14040;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14046, %r809, %r8637, %r14027, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14050, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14051, %r14027, %r14050;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14054, %r14046, %r14051;
	// end inline asm
	// begin inline asm
	mov.b32 %r14062, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r14073, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14059, %r798, %r8661, %r14062, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14063, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14064, %r14062, %r14063;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14067, %r14059, %r14064;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14070, %r809, %r8661, %r14073, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14074, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14075, %r14073, %r14074;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14078, %r14070, %r14075;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14081, %r798, %r8683, %r14062, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14085, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14086, %r14062, %r14085;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14089, %r14081, %r14086;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14092, %r809, %r8683, %r14073, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14096, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14097, %r14073, %r14096;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14100, %r14092, %r14097;
	// end inline asm
	// begin inline asm
	mov.b32 %r14108, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r14119, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14105, %r798, %r8707, %r14108, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14109, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14110, %r14108, %r14109;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14113, %r14105, %r14110;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14116, %r809, %r8707, %r14119, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14120, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14121, %r14119, %r14120;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14124, %r14116, %r14121;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14127, %r798, %r8729, %r14108, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14131, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14132, %r14108, %r14131;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14135, %r14127, %r14132;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14138, %r809, %r8729, %r14119, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14142, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14143, %r14119, %r14142;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14146, %r14138, %r14143;
	// end inline asm
	// begin inline asm
	mov.b32 %r14154, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r14165, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14151, %r798, %r8753, %r14154, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14155, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14156, %r14154, %r14155;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14159, %r14151, %r14156;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14162, %r809, %r8753, %r14165, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14166, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14167, %r14165, %r14166;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14170, %r14162, %r14167;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14173, %r798, %r8775, %r14154, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14177, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14178, %r14154, %r14177;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14181, %r14173, %r14178;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14184, %r809, %r8775, %r14165, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14188, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14189, %r14165, %r14188;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14192, %r14184, %r14189;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14330, %r345, %r13837, %r13637;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14327, %r345, %r13848, %r13643;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14339, %r345, %r13859, %r13649;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14336, %r345, %r13870, %r13655;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14348, %r345, %r13883, %r13661;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14345, %r345, %r13894, %r13667;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14357, %r345, %r13905, %r13673;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14354, %r345, %r13916, %r13679;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14366, %r345, %r13929, %r13685;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14363, %r345, %r13940, %r13691;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14375, %r345, %r13951, %r13697;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14372, %r345, %r13962, %r13703;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14384, %r345, %r13975, %r13709;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14381, %r345, %r13986, %r13715;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14393, %r345, %r13997, %r13721;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14390, %r345, %r14008, %r13727;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14402, %r363, %r14021, %r13733;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14399, %r363, %r14032, %r13739;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14411, %r363, %r14043, %r13745;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14408, %r363, %r14054, %r13751;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14420, %r363, %r14067, %r13757;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14417, %r363, %r14078, %r13763;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14429, %r363, %r14089, %r13769;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14426, %r363, %r14100, %r13775;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14438, %r363, %r14113, %r13781;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14435, %r363, %r14124, %r13787;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14447, %r363, %r14135, %r13793;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14444, %r363, %r14146, %r13799;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14456, %r363, %r14159, %r13805;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14453, %r363, %r14170, %r13811;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14465, %r363, %r14181, %r13817;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14462, %r363, %r14192, %r13823;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14323, %r433;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14325, %r14323, %r14327;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14328, %r427, %r14330, %r14325;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14332, %r433;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14334, %r14332, %r14336;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14337, %r427, %r14339, %r14334;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14341, %r433;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14343, %r14341, %r14345;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14346, %r427, %r14348, %r14343;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14350, %r433;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14352, %r14350, %r14354;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14355, %r427, %r14357, %r14352;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14359, %r433;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14361, %r14359, %r14363;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14364, %r427, %r14366, %r14361;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14368, %r433;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14370, %r14368, %r14372;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14373, %r427, %r14375, %r14370;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14377, %r433;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14379, %r14377, %r14381;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14382, %r427, %r14384, %r14379;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14386, %r433;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14388, %r14386, %r14390;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14391, %r427, %r14393, %r14388;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14395, %r436;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14397, %r14395, %r14399;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14400, %r430, %r14402, %r14397;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14404, %r436;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14406, %r14404, %r14408;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14409, %r430, %r14411, %r14406;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14413, %r436;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14415, %r14413, %r14417;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14418, %r430, %r14420, %r14415;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14422, %r436;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14424, %r14422, %r14426;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14427, %r430, %r14429, %r14424;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14431, %r436;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14433, %r14431, %r14435;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14436, %r430, %r14438, %r14433;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14440, %r436;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14442, %r14440, %r14444;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14445, %r430, %r14447, %r14442;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14449, %r436;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14451, %r14449, %r14453;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14454, %r430, %r14456, %r14451;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14458, %r436;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14460, %r14458, %r14462;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14463, %r430, %r14465, %r14460;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14467, %r433, %r14330;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14470, %r427, %r14327, %r14467;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14474, %r433, %r14339;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14477, %r427, %r14336, %r14474;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14481, %r433, %r14348;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14484, %r427, %r14345, %r14481;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14488, %r433, %r14357;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14491, %r427, %r14354, %r14488;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14495, %r433, %r14366;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14498, %r427, %r14363, %r14495;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14502, %r433, %r14375;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14505, %r427, %r14372, %r14502;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14509, %r433, %r14384;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14512, %r427, %r14381, %r14509;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14516, %r433, %r14393;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14519, %r427, %r14390, %r14516;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14523, %r436, %r14402;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14526, %r430, %r14399, %r14523;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14530, %r436, %r14411;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14533, %r430, %r14408, %r14530;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14537, %r436, %r14420;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14540, %r430, %r14417, %r14537;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14544, %r436, %r14429;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14547, %r430, %r14426, %r14544;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14551, %r436, %r14438;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14554, %r430, %r14435, %r14551;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14558, %r436, %r14447;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14561, %r430, %r14444, %r14558;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14565, %r436, %r14456;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14568, %r430, %r14453, %r14565;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14572, %r436, %r14465;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14575, %r430, %r14462, %r14572;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14746, %r14743}, {%r475, %r481, %r478, %r484}, {%r14328, %r14470}, {%r15154, %r15154};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14755, %r14752}, {%r475, %r481, %r478, %r484}, {%r14337, %r14477}, {%r15154, %r15154};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14764, %r14761}, {%r475, %r481, %r478, %r484}, {%r14346, %r14484}, {%r15154, %r15154};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14773, %r14770}, {%r475, %r481, %r478, %r484}, {%r14355, %r14491}, {%r15154, %r15154};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14782, %r14779}, {%r475, %r481, %r478, %r484}, {%r14364, %r14498}, {%r15154, %r15154};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14791, %r14788}, {%r475, %r481, %r478, %r484}, {%r14373, %r14505}, {%r15154, %r15154};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14800, %r14797}, {%r475, %r481, %r478, %r484}, {%r14382, %r14512}, {%r15154, %r15154};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14809, %r14806}, {%r475, %r481, %r478, %r484}, {%r14391, %r14519}, {%r15154, %r15154};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14818, %r14815}, {%r475, %r481, %r478, %r484}, {%r14400, %r14526}, {%r15154, %r15154};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14827, %r14824}, {%r475, %r481, %r478, %r484}, {%r14409, %r14533}, {%r15154, %r15154};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14836, %r14833}, {%r475, %r481, %r478, %r484}, {%r14418, %r14540}, {%r15154, %r15154};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14845, %r14842}, {%r475, %r481, %r478, %r484}, {%r14427, %r14547}, {%r15154, %r15154};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14854, %r14851}, {%r475, %r481, %r478, %r484}, {%r14436, %r14554}, {%r15154, %r15154};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14863, %r14860}, {%r475, %r481, %r478, %r484}, {%r14445, %r14561}, {%r15154, %r15154};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14872, %r14869}, {%r475, %r481, %r478, %r484}, {%r14454, %r14568}, {%r15154, %r15154};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14881, %r14878}, {%r475, %r481, %r478, %r484}, {%r14463, %r14575}, {%r15154, %r15154};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14739, %r525;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14741, %r14739, %r14743;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14744, %r522, %r14746, %r14741;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14748, %r525;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14750, %r14748, %r14752;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14753, %r522, %r14755, %r14750;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14757, %r525;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14759, %r14757, %r14761;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14762, %r522, %r14764, %r14759;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14766, %r525;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14768, %r14766, %r14770;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14771, %r522, %r14773, %r14768;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14775, %r525;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14777, %r14775, %r14779;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14780, %r522, %r14782, %r14777;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14784, %r525;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14786, %r14784, %r14788;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14789, %r522, %r14791, %r14786;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14793, %r525;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14795, %r14793, %r14797;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14798, %r522, %r14800, %r14795;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14802, %r525;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14804, %r14802, %r14806;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14807, %r522, %r14809, %r14804;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14811, %r525;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14813, %r14811, %r14815;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14816, %r522, %r14818, %r14813;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14820, %r525;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14822, %r14820, %r14824;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14825, %r522, %r14827, %r14822;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14829, %r525;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14831, %r14829, %r14833;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14834, %r522, %r14836, %r14831;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14838, %r525;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14840, %r14838, %r14842;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14843, %r522, %r14845, %r14840;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14847, %r525;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14849, %r14847, %r14851;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14852, %r522, %r14854, %r14849;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14856, %r525;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14858, %r14856, %r14860;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14861, %r522, %r14863, %r14858;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14865, %r525;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14867, %r14865, %r14869;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14870, %r522, %r14872, %r14867;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14874, %r525;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14876, %r14874, %r14878;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14879, %r522, %r14881, %r14876;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14883, %r525, %r14746;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14886, %r522, %r14743, %r14883;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14890, %r525, %r14755;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14893, %r522, %r14752, %r14890;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14897, %r525, %r14764;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14900, %r522, %r14761, %r14897;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14904, %r525, %r14773;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14907, %r522, %r14770, %r14904;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14911, %r525, %r14782;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14914, %r522, %r14779, %r14911;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14918, %r525, %r14791;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14921, %r522, %r14788, %r14918;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14925, %r525, %r14800;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14928, %r522, %r14797, %r14925;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14932, %r525, %r14809;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14935, %r522, %r14806, %r14932;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14939, %r525, %r14818;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14942, %r522, %r14815, %r14939;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14946, %r525, %r14827;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14949, %r522, %r14824, %r14946;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14953, %r525, %r14836;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14956, %r522, %r14833, %r14953;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14960, %r525, %r14845;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14963, %r522, %r14842, %r14960;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14967, %r525, %r14854;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14970, %r522, %r14851, %r14967;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14974, %r525, %r14863;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14977, %r522, %r14860, %r14974;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14981, %r525, %r14872;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14984, %r522, %r14869, %r14981;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14988, %r525, %r14881;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14991, %r522, %r14878, %r14988;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15284, %r15287}, {%r565, %r571, %r568, %r574}, {%r14744, %r14886}, {%r15154, %r15154};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15290, %r15293}, {%r565, %r571, %r568, %r574}, {%r14753, %r14893}, {%r15154, %r15154};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15296, %r15299}, {%r565, %r571, %r568, %r574}, {%r14762, %r14900}, {%r15154, %r15154};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15302, %r15305}, {%r565, %r571, %r568, %r574}, {%r14771, %r14907}, {%r15154, %r15154};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15308, %r15311}, {%r565, %r571, %r568, %r574}, {%r14780, %r14914}, {%r15154, %r15154};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15314, %r15317}, {%r565, %r571, %r568, %r574}, {%r14789, %r14921}, {%r15154, %r15154};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15320, %r15323}, {%r565, %r571, %r568, %r574}, {%r14798, %r14928}, {%r15154, %r15154};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15326, %r15329}, {%r565, %r571, %r568, %r574}, {%r14807, %r14935}, {%r15154, %r15154};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15285, %r15288}, {%r565, %r571, %r568, %r574}, {%r14816, %r14942}, {%r15154, %r15154};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15291, %r15294}, {%r565, %r571, %r568, %r574}, {%r14825, %r14949}, {%r15154, %r15154};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15297, %r15300}, {%r565, %r571, %r568, %r574}, {%r14834, %r14956}, {%r15154, %r15154};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15303, %r15306}, {%r565, %r571, %r568, %r574}, {%r14843, %r14963}, {%r15154, %r15154};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15309, %r15312}, {%r565, %r571, %r568, %r574}, {%r14852, %r14970}, {%r15154, %r15154};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15315, %r15318}, {%r565, %r571, %r568, %r574}, {%r14861, %r14977}, {%r15154, %r15154};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15321, %r15324}, {%r565, %r571, %r568, %r574}, {%r14870, %r14984}, {%r15154, %r15154};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15327, %r15330}, {%r565, %r571, %r568, %r574}, {%r14879, %r14991}, {%r15154, %r15154};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15283, %r15284, %r15285;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15286, %r15287, %r15288;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15289, %r15290, %r15291;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15292, %r15293, %r15294;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15295, %r15296, %r15297;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15298, %r15299, %r15300;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15301, %r15302, %r15303;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15304, %r15305, %r15306;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15307, %r15308, %r15309;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15310, %r15311, %r15312;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15313, %r15314, %r15315;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15316, %r15317, %r15318;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15319, %r15320, %r15321;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15322, %r15323, %r15324;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15325, %r15326, %r15327;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15328, %r15329, %r15330;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15331, %r15284, %r15285;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15334, %r15287, %r15288;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15337, %r15290, %r15291;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15340, %r15293, %r15294;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15343, %r15296, %r15297;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15346, %r15299, %r15300;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15349, %r15302, %r15303;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15352, %r15305, %r15306;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15355, %r15308, %r15309;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15358, %r15311, %r15312;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15361, %r15314, %r15315;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15364, %r15317, %r15318;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15367, %r15320, %r15321;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15370, %r15323, %r15324;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15373, %r15326, %r15327;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15376, %r15329, %r15330;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15379, %r11, %r15283;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15382, %r11, %r15286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15385, %r11, %r15289;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15388, %r11, %r15292;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15391, %r11, %r15295;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15394, %r11, %r15298;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15397, %r11, %r15301;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15400, %r11, %r15304;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15403, %r11, %r15307;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15406, %r11, %r15310;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15409, %r11, %r15313;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15412, %r11, %r15316;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15415, %r11, %r15319;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15418, %r11, %r15322;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15421, %r11, %r15325;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15424, %r11, %r15328;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15427, %r12, %r15331;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15430, %r12, %r15334;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15433, %r12, %r15337;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15436, %r12, %r15340;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15439, %r12, %r15343;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15442, %r12, %r15346;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15445, %r12, %r15349;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15448, %r12, %r15352;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15451, %r12, %r15355;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15454, %r12, %r15358;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15457, %r12, %r15361;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15460, %r12, %r15364;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15463, %r12, %r15367;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15466, %r12, %r15370;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15469, %r12, %r15373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15472, %r12, %r15376;
	// end inline asm
	// begin inline asm
	mov.b32 %r15475, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15476, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15477, %r15379, %r15475;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15480, %r15477, %r15476;
	// end inline asm
	// begin inline asm
	mov.b32 %r15483, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15484, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15485, %r15382, %r15483;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15488, %r15485, %r15484;
	// end inline asm
	// begin inline asm
	mov.b32 %r15491, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15492, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15493, %r15385, %r15491;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15496, %r15493, %r15492;
	// end inline asm
	// begin inline asm
	mov.b32 %r15499, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15500, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15501, %r15388, %r15499;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15504, %r15501, %r15500;
	// end inline asm
	// begin inline asm
	mov.b32 %r15507, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15508, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15509, %r15391, %r15507;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15512, %r15509, %r15508;
	// end inline asm
	// begin inline asm
	mov.b32 %r15515, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15516, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15517, %r15394, %r15515;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15520, %r15517, %r15516;
	// end inline asm
	// begin inline asm
	mov.b32 %r15523, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15524, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15525, %r15397, %r15523;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15528, %r15525, %r15524;
	// end inline asm
	// begin inline asm
	mov.b32 %r15531, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15532, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15533, %r15400, %r15531;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15536, %r15533, %r15532;
	// end inline asm
	// begin inline asm
	mov.b32 %r15539, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15540, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15541, %r15403, %r15539;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15544, %r15541, %r15540;
	// end inline asm
	// begin inline asm
	mov.b32 %r15547, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15548, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15549, %r15406, %r15547;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15552, %r15549, %r15548;
	// end inline asm
	// begin inline asm
	mov.b32 %r15555, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15556, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15557, %r15409, %r15555;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15560, %r15557, %r15556;
	// end inline asm
	// begin inline asm
	mov.b32 %r15563, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15564, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15565, %r15412, %r15563;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15568, %r15565, %r15564;
	// end inline asm
	// begin inline asm
	mov.b32 %r15571, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15572, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15573, %r15415, %r15571;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15576, %r15573, %r15572;
	// end inline asm
	// begin inline asm
	mov.b32 %r15579, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15580, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15581, %r15418, %r15579;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15584, %r15581, %r15580;
	// end inline asm
	// begin inline asm
	mov.b32 %r15587, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15588, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15589, %r15421, %r15587;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15592, %r15589, %r15588;
	// end inline asm
	// begin inline asm
	mov.b32 %r15595, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15596, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15597, %r15424, %r15595;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15600, %r15597, %r15596;
	// end inline asm
	// begin inline asm
	mov.b32 %r15603, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15604, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15605, %r15427, %r15603;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15608, %r15605, %r15604;
	// end inline asm
	// begin inline asm
	mov.b32 %r15611, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15612, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15613, %r15430, %r15611;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15616, %r15613, %r15612;
	// end inline asm
	// begin inline asm
	mov.b32 %r15619, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15620, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15621, %r15433, %r15619;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15624, %r15621, %r15620;
	// end inline asm
	// begin inline asm
	mov.b32 %r15627, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15628, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15629, %r15436, %r15627;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15632, %r15629, %r15628;
	// end inline asm
	// begin inline asm
	mov.b32 %r15635, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15636, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15637, %r15439, %r15635;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15640, %r15637, %r15636;
	// end inline asm
	// begin inline asm
	mov.b32 %r15643, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15644, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15645, %r15442, %r15643;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15648, %r15645, %r15644;
	// end inline asm
	// begin inline asm
	mov.b32 %r15651, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15652, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15653, %r15445, %r15651;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15656, %r15653, %r15652;
	// end inline asm
	// begin inline asm
	mov.b32 %r15659, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15660, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15661, %r15448, %r15659;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15664, %r15661, %r15660;
	// end inline asm
	// begin inline asm
	mov.b32 %r15667, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15668, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15669, %r15451, %r15667;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15672, %r15669, %r15668;
	// end inline asm
	// begin inline asm
	mov.b32 %r15675, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15676, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15677, %r15454, %r15675;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15680, %r15677, %r15676;
	// end inline asm
	// begin inline asm
	mov.b32 %r15683, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15684, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15685, %r15457, %r15683;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15688, %r15685, %r15684;
	// end inline asm
	// begin inline asm
	mov.b32 %r15691, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15692, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15693, %r15460, %r15691;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15696, %r15693, %r15692;
	// end inline asm
	// begin inline asm
	mov.b32 %r15699, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15700, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15701, %r15463, %r15699;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15704, %r15701, %r15700;
	// end inline asm
	// begin inline asm
	mov.b32 %r15707, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15708, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15709, %r15466, %r15707;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15712, %r15709, %r15708;
	// end inline asm
	// begin inline asm
	mov.b32 %r15715, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15716, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15717, %r15469, %r15715;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15720, %r15717, %r15716;
	// end inline asm
	// begin inline asm
	mov.b32 %r15723, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15724, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15725, %r15472, %r15723;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15728, %r15725, %r15724;
	// end inline asm
	// begin inline asm
	mov.b32 %r15734, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r15732, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15733, %r15734, %r15732;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15736, %r15480, %r15733;
	// end inline asm
	// begin inline asm
	mov.b32 %r15739, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15740, %r15734, %r15739;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15743, %r15488, %r15740;
	// end inline asm
	// begin inline asm
	mov.b32 %r15746, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15747, %r15734, %r15746;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15750, %r15496, %r15747;
	// end inline asm
	// begin inline asm
	mov.b32 %r15753, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15754, %r15734, %r15753;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15757, %r15504, %r15754;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15760, %r15736, %r15750, %r4315;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15764, %r15743, %r15757, %r4315;
	// end inline asm
	shl.b32 	%r15771, %r15764, 4;
	// begin inline asm
	lop3.b32 %r15768, %r4321, %r15760, %r15771, 202;
	// end inline asm
	xor.b32  	%r16091, %r15768, -2004318072;
	// begin inline asm
	mov.b32 %r15775, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r15773, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15774, %r15775, %r15773;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15777, %r15512, %r15774;
	// end inline asm
	// begin inline asm
	mov.b32 %r15780, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15781, %r15775, %r15780;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15784, %r15520, %r15781;
	// end inline asm
	// begin inline asm
	mov.b32 %r15787, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15788, %r15775, %r15787;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15791, %r15528, %r15788;
	// end inline asm
	// begin inline asm
	mov.b32 %r15794, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15795, %r15775, %r15794;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15798, %r15536, %r15795;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15801, %r15777, %r15791, %r4315;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15805, %r15784, %r15798, %r4315;
	// end inline asm
	shl.b32 	%r15812, %r15805, 4;
	// begin inline asm
	lop3.b32 %r15809, %r4321, %r15801, %r15812, 202;
	// end inline asm
	xor.b32  	%r16092, %r15809, -2004318072;
	// begin inline asm
	mov.b32 %r15816, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r15814, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15815, %r15816, %r15814;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15818, %r15544, %r15815;
	// end inline asm
	// begin inline asm
	mov.b32 %r15821, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15822, %r15816, %r15821;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15825, %r15552, %r15822;
	// end inline asm
	// begin inline asm
	mov.b32 %r15828, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15829, %r15816, %r15828;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15832, %r15560, %r15829;
	// end inline asm
	// begin inline asm
	mov.b32 %r15835, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15836, %r15816, %r15835;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15839, %r15568, %r15836;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15842, %r15818, %r15832, %r4315;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15846, %r15825, %r15839, %r4315;
	// end inline asm
	shl.b32 	%r15853, %r15846, 4;
	// begin inline asm
	lop3.b32 %r15850, %r4321, %r15842, %r15853, 202;
	// end inline asm
	xor.b32  	%r16093, %r15850, -2004318072;
	// begin inline asm
	mov.b32 %r15857, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r15855, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15856, %r15857, %r15855;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15859, %r15576, %r15856;
	// end inline asm
	// begin inline asm
	mov.b32 %r15862, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15863, %r15857, %r15862;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15866, %r15584, %r15863;
	// end inline asm
	// begin inline asm
	mov.b32 %r15869, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15870, %r15857, %r15869;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15873, %r15592, %r15870;
	// end inline asm
	// begin inline asm
	mov.b32 %r15876, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15877, %r15857, %r15876;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15880, %r15600, %r15877;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15883, %r15859, %r15873, %r4315;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15887, %r15866, %r15880, %r4315;
	// end inline asm
	shl.b32 	%r15894, %r15887, 4;
	// begin inline asm
	lop3.b32 %r15891, %r4321, %r15883, %r15894, 202;
	// end inline asm
	xor.b32  	%r16094, %r15891, -2004318072;
	// begin inline asm
	mov.b32 %r15898, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r15896, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15897, %r15898, %r15896;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15900, %r15608, %r15897;
	// end inline asm
	// begin inline asm
	mov.b32 %r15903, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15904, %r15898, %r15903;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15907, %r15616, %r15904;
	// end inline asm
	// begin inline asm
	mov.b32 %r15910, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15911, %r15898, %r15910;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15914, %r15624, %r15911;
	// end inline asm
	// begin inline asm
	mov.b32 %r15917, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15918, %r15898, %r15917;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15921, %r15632, %r15918;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15924, %r15900, %r15914, %r4315;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15928, %r15907, %r15921, %r4315;
	// end inline asm
	shl.b32 	%r15935, %r15928, 4;
	// begin inline asm
	lop3.b32 %r15932, %r4321, %r15924, %r15935, 202;
	// end inline asm
	xor.b32  	%r16095, %r15932, -2004318072;
	// begin inline asm
	mov.b32 %r15939, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r15937, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15938, %r15939, %r15937;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15941, %r15640, %r15938;
	// end inline asm
	// begin inline asm
	mov.b32 %r15944, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15945, %r15939, %r15944;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15948, %r15648, %r15945;
	// end inline asm
	// begin inline asm
	mov.b32 %r15951, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15952, %r15939, %r15951;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15955, %r15656, %r15952;
	// end inline asm
	// begin inline asm
	mov.b32 %r15958, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15959, %r15939, %r15958;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15962, %r15664, %r15959;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15965, %r15941, %r15955, %r4315;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15969, %r15948, %r15962, %r4315;
	// end inline asm
	shl.b32 	%r15976, %r15969, 4;
	// begin inline asm
	lop3.b32 %r15973, %r4321, %r15965, %r15976, 202;
	// end inline asm
	xor.b32  	%r16096, %r15973, -2004318072;
	// begin inline asm
	mov.b32 %r15980, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r15978, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15979, %r15980, %r15978;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15982, %r15672, %r15979;
	// end inline asm
	// begin inline asm
	mov.b32 %r15985, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15986, %r15980, %r15985;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15989, %r15680, %r15986;
	// end inline asm
	// begin inline asm
	mov.b32 %r15992, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15993, %r15980, %r15992;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15996, %r15688, %r15993;
	// end inline asm
	// begin inline asm
	mov.b32 %r15999, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16000, %r15980, %r15999;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16003, %r15696, %r16000;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16006, %r15982, %r15996, %r4315;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16010, %r15989, %r16003, %r4315;
	// end inline asm
	shl.b32 	%r16017, %r16010, 4;
	// begin inline asm
	lop3.b32 %r16014, %r4321, %r16006, %r16017, 202;
	// end inline asm
	xor.b32  	%r16097, %r16014, -2004318072;
	// begin inline asm
	mov.b32 %r16021, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r16019, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16020, %r16021, %r16019;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16023, %r15704, %r16020;
	// end inline asm
	// begin inline asm
	mov.b32 %r16026, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16027, %r16021, %r16026;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16030, %r15712, %r16027;
	// end inline asm
	// begin inline asm
	mov.b32 %r16033, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16034, %r16021, %r16033;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16037, %r15720, %r16034;
	// end inline asm
	// begin inline asm
	mov.b32 %r16040, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16041, %r16021, %r16040;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16044, %r15728, %r16041;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16047, %r16023, %r16037, %r4315;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16051, %r16030, %r16044, %r4315;
	// end inline asm
	shl.b32 	%r16058, %r16051, 4;
	// begin inline asm
	lop3.b32 %r16055, %r4321, %r16047, %r16058, 202;
	// end inline asm
	xor.b32  	%r16098, %r16055, -2004318072;
	st.shared.u32 	[%rd82], %r16091;
	st.shared.u32 	[%rd83], %r16092;
	st.shared.u32 	[%rd84], %r16093;
	st.shared.u32 	[%rd85], %r16094;
	st.shared.u32 	[%rd86], %r16095;
	st.shared.u32 	[%rd87], %r16096;
	st.shared.u32 	[%rd88], %r16097;
	st.shared.u32 	[%rd89], %r16098;
	add.s32 	%r16192, %r16192, -128;
	add.s64 	%rd94, %rd94, 16644;
	setp.eq.s32 	%p302, %r16192, 0;
	@%p302 bra 	LBB0_179;
	bra.uni 	LBB0_178;
LBB0_179:                               // %guard_pass22984
                                        //   in Loop: Header=BB0_177 Depth=1
	bar.sync 	0;
	ld.shared.u32 	%r16104, [%rd13];
	ld.shared.u32 	%r16105, [%rd14+128];
	ld.shared.u32 	%r16112, [%rd14+4];
	ld.shared.u32 	%r16113, [%rd14+132];
	ld.shared.u32 	%r16120, [%rd15];
	ld.shared.u32 	%r16121, [%rd16+128];
	ld.shared.u32 	%r16128, [%rd16+4];
	ld.shared.u32 	%r16129, [%rd16+132];
	// begin inline asm
	prmt.b32 %r16099, %r16104, %r16105, %r767;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16103, %r16104, %r16105, %r771;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16107, %r16112, %r16113, %r767;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16111, %r16112, %r16113, %r771;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16115, %r16120, %r16121, %r767;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16119, %r16120, %r16121, %r771;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16123, %r16128, %r16129, %r767;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16127, %r16128, %r16129, %r771;
	// end inline asm
	selp.b32 	%r16131, %r16103, %r16099, %p301;
	shfl.sync.bfly.b32	%r233, %r16131, 8, 31, -1;
	selp.b32 	%r16132, %r16111, %r16107, %p301;
	shfl.sync.bfly.b32	%r234, %r16132, 8, 31, -1;
	selp.b32 	%r16133, %r16119, %r16115, %p301;
	shfl.sync.bfly.b32	%r235, %r16133, 8, 31, -1;
	selp.b32 	%r16134, %r16127, %r16123, %p301;
	shfl.sync.bfly.b32	%r236, %r16134, 8, 31, -1;
	setp.lt.u32 	%p304, %r173, 384;
	@%p304 bra 	LBB0_181;
// %bb.180:                             // %L63136
                                        //   in Loop: Header=BB0_177 Depth=1
	selp.b32 	%r16135, %r236, %r16127, %p301;
	selp.b32 	%r16136, %r16123, %r236, %p301;
	selp.b32 	%r16137, %r235, %r16119, %p301;
	selp.b32 	%r16138, %r16115, %r235, %p301;
	selp.b32 	%r16139, %r234, %r16111, %p301;
	selp.b32 	%r16140, %r16107, %r234, %p301;
	selp.b32 	%r16141, %r233, %r16103, %p301;
	selp.b32 	%r16142, %r16099, %r233, %p301;
	shl.b32 	%r16143, %r173, 12;
	add.s32 	%r16144, %r147, %r16143;
	mul.wide.s32 	%rd90, %r16144, 4;
	add.s64 	%rd91, %rd3, %rd90;
	st.global.v4.u32 	[%rd91], {%r16142, %r16140, %r16141, %r16139};
	add.s32 	%r16145, %r148, %r16143;
	mul.wide.s32 	%rd92, %r16145, 4;
	add.s64 	%rd93, %rd3, %rd92;
	st.global.v4.u32 	[%rd93], {%r16138, %r16136, %r16137, %r16135};
	bra.uni 	LBB0_181;
LBB0_182:                               // %L63558
	st.global.u32 	[%rd4], %r15154;
	ret;
LBB0_1:                                 // %L8
	mov.u64 	%rd44, exception1;
	cvta.global.u64 	%rd45, %rd44;
	{ // callseq 0, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd45;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 0
	{ // callseq 1, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd35;
	st.param.b32 	[param0+8], %r237;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 1
	// begin inline asm
	exit;
	// end inline asm
	// begin inline asm
	exit;
	// end inline asm
LBB0_3:                                 // %L164
	mov.u32 	%r243, 2;
	st.global.u32 	[%rd4], %r243;
	mov.u64 	%rd47, exception5095;
	cvta.global.u64 	%rd48, %rd47;
	{ // callseq 2, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd48;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 2
	{ // callseq 3, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd35;
	st.param.b32 	[param0+8], %r237;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 3
	// begin inline asm
	exit;
	// end inline asm
	// begin inline asm
	exit;
	// end inline asm
                                        // -- End function
}
