// PTX CompilerJob of MethodInstance for upchan(::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Float16x2, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int32, 1}) for sm_86, minthreads=256, blocks_per_sm=4

//
// Generated by LLVM NVPTX Back-End
//

.version 8.1
.target sm_86
.address_size 64

	// .globl	_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE // -- Begin function _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE
.func gpu_report_exception
(
	.param .b64 gpu_report_exception_param_0
)
.noreturn
{
	trap;
}
.func gpu_signal_exception
(
	.param .align 8 .b8 gpu_signal_exception_param_0[16]
)
.noreturn
{
	trap;
}
.extern .shared .align 32 .b8 shmem[];
.global .align 1 .b8 exception1395[6] = {101, 114, 114, 111, 114, 0};
.global .align 1 .b8 exception11416[10] = {101, 120, 99, 101, 112, 116, 105, 111, 110, 0};
                                        // @_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE
.visible .entry _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE(
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_0[16],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_1[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_2[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_3[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_4[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_5[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_6[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_7[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_8[32]
)
.reqntid 256, 1, 1
.minnctapersm 4
{
	.reg .pred 	%p<216>;
	.reg .b16 	%rs<111>;
	.reg .b32 	%r<1118>;
	.reg .f32 	%f<774>;
	.reg .b64 	%rd<181>;

// %bb.0:                               // %conversion
	ld.param.u32 	%r136, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_0+8];
	ld.param.u64 	%rd36, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_0];
	// begin inline asm
	mov.u32 %r137, %dynamic_smem_size;
	// end inline asm
	setp.gt.u32 	%p1, %r137, 73983;
	@%p1 bra 	LBB0_2;
	bra.uni 	LBB0_1;
LBB0_2:                                 // %L10
	ld.param.u64 	%rd53, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_8];
	ld.param.u64 	%rd37, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_1];
	mov.u32 	%r1, %tid.y;
	shl.b32 	%r2, %r1, 5;
	mov.u32 	%r3, %tid.x;
	mov.u32 	%r4, %ctaid.x;
	shl.b32 	%r5, %r4, 8;
	or.b32  	%r138, %r2, %r3;
	or.b32  	%r139, %r138, %r5;
	mul.wide.u32 	%rd59, %r139, 4;
	add.s64 	%rd4, %rd53, %rd59;
	mov.u32 	%r140, 1;
	st.global.u32 	[%rd4], %r140;
	ld.global.u32 	%r6, [%rd37];
	setp.lt.s32 	%p2, %r6, 0;
	@%p2 bra 	LBB0_7;
// %bb.3:                               // %L205
	ld.param.u64 	%rd41, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_2];
	ld.global.u32 	%r7, [%rd41];
	setp.lt.s32 	%p3, %r7, %r6;
	setp.gt.s32 	%p4, %r7, 262144;
	or.pred  	%p5, %p3, %p4;
	@%p5 bra 	LBB0_7;
// %bb.4:                               // %L215
	ld.param.u64 	%rd45, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_3];
	ld.global.u32 	%r8, [%rd45];
	sub.s32 	%r141, %r7, %r6;
	and.b32  	%r142, %r141, 255;
	setp.ne.s32 	%p6, %r142, 0;
	setp.lt.s32 	%p7, %r8, 0;
	or.pred  	%p8, %p6, %p7;
	@%p8 bra 	LBB0_7;
// %bb.5:                               // %L221
	ld.param.u64 	%rd49, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_4];
	ld.global.u32 	%r9, [%rd49];
	setp.lt.s32 	%p9, %r9, %r8;
	setp.gt.s32 	%p10, %r9, 32768;
	or.pred  	%p11, %p9, %p10;
	@%p11 bra 	LBB0_7;
// %bb.6:                               // %L231
	sub.s32 	%r143, %r9, %r8;
	add.s32 	%r144, %r143, 3;
	and.b32  	%r145, %r144, 31;
	setp.eq.s32 	%p12, %r145, 0;
	@%p12 bra 	LBB0_8;
	bra.uni 	LBB0_7;
LBB0_8:                                 // %L341
	bfe.u32 	%r14, %r3, 1, 1;
	shl.b32 	%r146, %r14, 1;
	and.b32  	%r15, %r3, 1;
	or.b32  	%r16, %r15, %r146;
	or.b32  	%r17, %r16, 4;
	mov.f32 	%f146, 0f40000000;
	mov.f32 	%f147, 0f41F80000;
	div.approx.f32 	%f1, %f147, %f146;
	cvt.rn.f32.s32 	%f148, %r16;
	sub.f32 	%f149, %f148, %f1;
	mov.f32 	%f178, 0f41000000;
	div.approx.f32 	%f3, %f149, %f178;
	setp.eq.f32 	%p18, %f3, 0f00000000;
	mov.f32 	%f749, 0f3F800000;
	mov.f32 	%f742, %f749;
	@%p18 bra 	LBB0_10;
// %bb.9:                               // %L483
	sin.approx.f32 	%f179, %f3;
	div.approx.f32 	%f742, %f179, %f3;
LBB0_10:                                // %L486
	cvt.rn.f32.s32 	%f182, %r17;
	sub.f32 	%f183, %f182, %f1;
	div.approx.f32 	%f8, %f183, %f178;
	setp.eq.f32 	%p24, %f8, 0f00000000;
	mov.f32 	%f743, %f749;
	@%p24 bra 	LBB0_12;
// %bb.11:                              // %L503
	sin.approx.f32 	%f213, %f8;
	div.approx.f32 	%f743, %f213, %f8;
LBB0_12:                                // %L506
	or.b32  	%r164, %r16, 8;
	or.b32  	%r19, %r16, 12;
	cvt.rn.f32.s32 	%f217, %r164;
	sub.f32 	%f218, %f217, %f1;
	div.approx.f32 	%f12, %f218, %f178;
	setp.eq.f32 	%p30, %f12, 0f00000000;
	mov.f32 	%f744, %f749;
	@%p30 bra 	LBB0_14;
// %bb.13:                              // %L585
	sin.approx.f32 	%f248, %f12;
	div.approx.f32 	%f744, %f248, %f12;
LBB0_14:                                // %L588
	cvt.rn.f32.s32 	%f251, %r19;
	sub.f32 	%f252, %f251, %f1;
	div.approx.f32 	%f17, %f252, %f178;
	setp.eq.f32 	%p36, %f17, 0f00000000;
	mov.f32 	%f745, %f749;
	@%p36 bra 	LBB0_16;
// %bb.15:                              // %L605
	sin.approx.f32 	%f282, %f17;
	div.approx.f32 	%f745, %f282, %f17;
LBB0_16:                                // %L608
	or.b32  	%r182, %r16, 16;
	or.b32  	%r21, %r16, 20;
	cvt.rn.f32.s32 	%f286, %r182;
	sub.f32 	%f287, %f286, %f1;
	div.approx.f32 	%f21, %f287, %f178;
	setp.eq.f32 	%p42, %f21, 0f00000000;
	mov.f32 	%f746, %f749;
	@%p42 bra 	LBB0_18;
// %bb.17:                              // %L687
	sin.approx.f32 	%f317, %f21;
	div.approx.f32 	%f746, %f317, %f21;
LBB0_18:                                // %L690
	cvt.rn.f32.s32 	%f320, %r21;
	sub.f32 	%f321, %f320, %f1;
	div.approx.f32 	%f26, %f321, %f178;
	setp.eq.f32 	%p48, %f26, 0f00000000;
	mov.f32 	%f747, %f749;
	@%p48 bra 	LBB0_20;
// %bb.19:                              // %L707
	sin.approx.f32 	%f351, %f26;
	div.approx.f32 	%f747, %f351, %f26;
LBB0_20:                                // %L710
	or.b32  	%r200, %r16, 24;
	or.b32  	%r23, %r16, 28;
	cvt.rn.f32.s32 	%f355, %r200;
	sub.f32 	%f356, %f355, %f1;
	div.approx.f32 	%f30, %f356, %f178;
	setp.eq.f32 	%p54, %f30, 0f00000000;
	mov.f32 	%f748, %f749;
	@%p54 bra 	LBB0_22;
// %bb.21:                              // %L789
	sin.approx.f32 	%f386, %f30;
	div.approx.f32 	%f748, %f386, %f30;
LBB0_22:                                // %L792
	cvt.rn.f32.s32 	%f389, %r23;
	sub.f32 	%f390, %f389, %f1;
	div.approx.f32 	%f35, %f390, %f178;
	setp.eq.f32 	%p60, %f35, 0f00000000;
	@%p60 bra 	LBB0_24;
// %bb.23:                              // %L809
	sin.approx.f32 	%f420, %f35;
	div.approx.f32 	%f749, %f420, %f35;
LBB0_24:                                // %L812
	mul.lo.s32 	%r25, %r16, 7;
	cvt.rn.f32.s32 	%f423, %r25;
	div.approx.f32 	%f38, %f423, %f178;
	abs.f32 	%f752, %f38;
	setp.lt.f32 	%p61, %f752, 0f40000000;
	@%p61 bra 	LBB0_36;
// %bb.25:
	setp.gtu.f32 	%p62, %f752, 0f4B800000;
	@%p62 bra 	LBB0_32;
	bra.uni 	LBB0_26;
LBB0_32:
	mov.b32 	%r27, %f752;
	and.b32  	%r218, %r27, 8388607;
	or.b32  	%r1098, %r218, 1065353216;
	mov.b32 	%f751, %r1098;
	add.s32 	%r219, %r27, -1073741824;
	and.b32  	%r1099, %r219, -8388608;
	setp.eq.s32 	%p68, %r1099, 0;
	@%p68 bra 	LBB0_35;
// %bb.33:                              // %__nv_fmaf_rn.exit4.i.i.i.preheader
	mov.f32 	%f434, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f433,%f434;
	// end inline asm
LBB0_34:                                // %__nv_fmaf_rn.exit4.i.i.i
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r220, %r1099, 192937984;
	add.s32 	%r221, %r220, %r1098;
	mov.b32 	%f435, %r221;
	mul.f32 	%f436, %f433, %f435;
	sub.f32 	%f437, %f435, %f436;
	fma.rn.f32 	%f438, %f437, %f433, %f436;
	sub.f32 	%f439, %f435, %f438;
	fma.rz.f32 	%f440, %f439, %f433, %f438;
	cvt.rzi.f32.f32 	%f441, %f440;
	sub.f32 	%f751, %f435, %f441;
	sub.s32 	%r1099, %r1099, %r220;
	mov.b32 	%r1098, %f751;
	setp.ne.s32 	%p69, %r1099, 0;
	setp.ne.s32 	%p70, %r1098, 0;
	and.pred  	%p71, %p69, %p70;
	@%p71 bra 	LBB0_34;
LBB0_35:                                // %__internal_fmodf_slowpath_mod.exit.i.i
	setp.gt.u32 	%p72, %r27, 2139095039;
	selp.f32 	%f442, 0f7FFFFFFF, 0f4B800000, %p72;
	mul.f32 	%f443, %f751, 0f34000000;
	mul.f32 	%f752, %f442, %f443;
	bra.uni 	LBB0_36;
LBB0_26:                                // %__nv_fast_fdividef.exit.i.i.i
	div.approx.f32 	%f426, %f752, %f146;
	cvt.rzi.f32.f32 	%f750, %f426;
	fma.rn.f32 	%f41, %f750, 0fC0000000, %f752;
	mov.b32 	%r26, %f41;
	setp.lt.u32 	%p63, %r26, 1073741824;
	@%p63 bra 	LBB0_31;
// %bb.27:
	setp.lt.u32 	%p64, %r26, -2147483647;
	@%p64 bra 	LBB0_29;
// %bb.28:
	add.f32 	%f431, %f750, 0fBF800000;
	setp.lt.f32 	%p67, %f41, 0fC0000000;
	add.f32 	%f432, %f431, 0fBF800000;
	selp.f32 	%f750, %f432, %f431, %p67;
	bra.uni 	LBB0_31;
LBB0_29:
	add.f32 	%f750, %f750, 0f3F800000;
	setp.ltu.f32 	%p65, %f41, 0f40800000;
	@%p65 bra 	LBB0_31;
// %bb.30:                              // %__nv_fmaf_rn.exit.i.i.i
	add.f32 	%f427, %f750, 0f3F800000;
	fma.rn.f32 	%f429, %f146, 0fC0400000, %f41;
	setp.ge.f32 	%p66, %f429, 0f00000000;
	add.f32 	%f430, %f427, 0f3F800000;
	selp.f32 	%f750, %f430, %f427, %p66;
LBB0_31:                                // %__internal_fmodf_fastpath_quot.exit.i.i
	fma.rn.f32 	%f752, %f750, 0fC0000000, %f752;
LBB0_36:                                // %__internal_fmodf_kernel.exit.i
	abs.f32 	%f444, %f752;
	setp.gtu.f32 	%p73, %f444, 0f7F800000;
	@%p73 bra 	LBB0_38;
// %bb.37:
	mov.b32 	%r222, %f38;
	and.b32  	%r223, %r222, -2147483648;
	mov.b32 	%r224, %f752;
	or.b32  	%r225, %r223, %r224;
	mov.b32 	%f752, %r225;
LBB0_38:                                // %__nv_fmodf.exit
	add.s32 	%r234, %r25, 28;
	cvt.rn.f32.s32 	%f475, %r234;
	div.approx.f32 	%f57, %f475, %f178;
	abs.f32 	%f756, %f57;
	setp.lt.f32 	%p81, %f756, 0f40000000;
	@%p81 bra 	LBB0_50;
// %bb.39:
	setp.gtu.f32 	%p82, %f756, 0f4B800000;
	@%p82 bra 	LBB0_46;
	bra.uni 	LBB0_40;
LBB0_46:
	mov.b32 	%r35, %f756;
	and.b32  	%r235, %r35, 8388607;
	or.b32  	%r1100, %r235, 1065353216;
	mov.b32 	%f755, %r1100;
	add.s32 	%r236, %r35, -1073741824;
	and.b32  	%r1101, %r236, -8388608;
	setp.eq.s32 	%p88, %r1101, 0;
	@%p88 bra 	LBB0_49;
// %bb.47:                              // %__nv_fmaf_rn.exit4.i.i.i877.preheader
	mov.f32 	%f486, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f485,%f486;
	// end inline asm
LBB0_48:                                // %__nv_fmaf_rn.exit4.i.i.i877
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r237, %r1101, 192937984;
	add.s32 	%r238, %r237, %r1100;
	mov.b32 	%f487, %r238;
	mul.f32 	%f488, %f485, %f487;
	sub.f32 	%f489, %f487, %f488;
	fma.rn.f32 	%f490, %f489, %f485, %f488;
	sub.f32 	%f491, %f487, %f490;
	fma.rz.f32 	%f492, %f491, %f485, %f490;
	cvt.rzi.f32.f32 	%f493, %f492;
	sub.f32 	%f755, %f487, %f493;
	sub.s32 	%r1101, %r1101, %r237;
	mov.b32 	%r1100, %f755;
	setp.ne.s32 	%p89, %r1101, 0;
	setp.ne.s32 	%p90, %r1100, 0;
	and.pred  	%p91, %p89, %p90;
	@%p91 bra 	LBB0_48;
LBB0_49:                                // %__internal_fmodf_slowpath_mod.exit.i.i879
	setp.gt.u32 	%p92, %r35, 2139095039;
	selp.f32 	%f494, 0f7FFFFFFF, 0f4B800000, %p92;
	mul.f32 	%f495, %f755, 0f34000000;
	mul.f32 	%f756, %f494, %f495;
	bra.uni 	LBB0_50;
LBB0_40:                                // %__nv_fast_fdividef.exit.i.i.i849
	div.approx.f32 	%f478, %f756, %f146;
	cvt.rzi.f32.f32 	%f754, %f478;
	fma.rn.f32 	%f60, %f754, 0fC0000000, %f756;
	mov.b32 	%r34, %f60;
	setp.lt.u32 	%p83, %r34, 1073741824;
	@%p83 bra 	LBB0_45;
// %bb.41:
	setp.lt.u32 	%p84, %r34, -2147483647;
	@%p84 bra 	LBB0_43;
// %bb.42:
	add.f32 	%f483, %f754, 0fBF800000;
	setp.lt.f32 	%p87, %f60, 0fC0000000;
	add.f32 	%f484, %f483, 0fBF800000;
	selp.f32 	%f754, %f484, %f483, %p87;
	bra.uni 	LBB0_45;
LBB0_43:
	add.f32 	%f754, %f754, 0f3F800000;
	setp.ltu.f32 	%p85, %f60, 0f40800000;
	@%p85 bra 	LBB0_45;
// %bb.44:                              // %__nv_fmaf_rn.exit.i.i.i854
	add.f32 	%f479, %f754, 0f3F800000;
	fma.rn.f32 	%f481, %f146, 0fC0400000, %f60;
	setp.ge.f32 	%p86, %f481, 0f00000000;
	add.f32 	%f482, %f479, 0f3F800000;
	selp.f32 	%f754, %f482, %f479, %p86;
LBB0_45:                                // %__internal_fmodf_fastpath_quot.exit.i.i858
	fma.rn.f32 	%f756, %f754, 0fC0000000, %f756;
LBB0_50:                                // %__internal_fmodf_kernel.exit.i883
	abs.f32 	%f496, %f756;
	setp.gtu.f32 	%p93, %f496, 0f7F800000;
	@%p93 bra 	LBB0_52;
// %bb.51:
	mov.b32 	%r239, %f57;
	and.b32  	%r240, %r239, -2147483648;
	mov.b32 	%r241, %f756;
	or.b32  	%r242, %r240, %r241;
	mov.b32 	%f756, %r242;
LBB0_52:                                // %__nv_fmodf.exit884
	shr.u32 	%r44, %r3, 2;
	and.b32  	%r257, %r3, 3;
	mul.lo.s32 	%r258, %r257, %r44;
	shl.b32 	%r259, %r258, 1;
	neg.s32 	%r46, %r259;
	cvt.rn.f32.s32 	%f529, %r46;
	div.approx.f32 	%f74, %f529, %f178;
	abs.f32 	%f760, %f74;
	setp.lt.f32 	%p101, %f760, 0f40000000;
	@%p101 bra 	LBB0_64;
// %bb.53:
	setp.gtu.f32 	%p102, %f760, 0f4B800000;
	@%p102 bra 	LBB0_60;
	bra.uni 	LBB0_54;
LBB0_60:
	mov.b32 	%r48, %f760;
	and.b32  	%r260, %r48, 8388607;
	or.b32  	%r1102, %r260, 1065353216;
	mov.b32 	%f759, %r1102;
	add.s32 	%r261, %r48, -1073741824;
	and.b32  	%r1103, %r261, -8388608;
	setp.eq.s32 	%p108, %r1103, 0;
	@%p108 bra 	LBB0_63;
// %bb.61:                              // %__nv_fmaf_rn.exit4.i.i.i923.preheader
	mov.f32 	%f540, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f539,%f540;
	// end inline asm
LBB0_62:                                // %__nv_fmaf_rn.exit4.i.i.i923
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r262, %r1103, 192937984;
	add.s32 	%r263, %r262, %r1102;
	mov.b32 	%f541, %r263;
	mul.f32 	%f542, %f539, %f541;
	sub.f32 	%f543, %f541, %f542;
	fma.rn.f32 	%f544, %f543, %f539, %f542;
	sub.f32 	%f545, %f541, %f544;
	fma.rz.f32 	%f546, %f545, %f539, %f544;
	cvt.rzi.f32.f32 	%f547, %f546;
	sub.f32 	%f759, %f541, %f547;
	sub.s32 	%r1103, %r1103, %r262;
	mov.b32 	%r1102, %f759;
	setp.ne.s32 	%p109, %r1103, 0;
	setp.ne.s32 	%p110, %r1102, 0;
	and.pred  	%p111, %p109, %p110;
	@%p111 bra 	LBB0_62;
LBB0_63:                                // %__internal_fmodf_slowpath_mod.exit.i.i925
	setp.gt.u32 	%p112, %r48, 2139095039;
	selp.f32 	%f548, 0f7FFFFFFF, 0f4B800000, %p112;
	mul.f32 	%f549, %f759, 0f34000000;
	mul.f32 	%f760, %f548, %f549;
	bra.uni 	LBB0_64;
LBB0_54:                                // %__nv_fast_fdividef.exit.i.i.i895
	div.approx.f32 	%f532, %f760, %f146;
	cvt.rzi.f32.f32 	%f758, %f532;
	fma.rn.f32 	%f77, %f758, 0fC0000000, %f760;
	mov.b32 	%r47, %f77;
	setp.lt.u32 	%p103, %r47, 1073741824;
	@%p103 bra 	LBB0_59;
// %bb.55:
	setp.lt.u32 	%p104, %r47, -2147483647;
	@%p104 bra 	LBB0_57;
// %bb.56:
	add.f32 	%f537, %f758, 0fBF800000;
	setp.lt.f32 	%p107, %f77, 0fC0000000;
	add.f32 	%f538, %f537, 0fBF800000;
	selp.f32 	%f758, %f538, %f537, %p107;
	bra.uni 	LBB0_59;
LBB0_57:
	add.f32 	%f758, %f758, 0f3F800000;
	setp.ltu.f32 	%p105, %f77, 0f40800000;
	@%p105 bra 	LBB0_59;
// %bb.58:                              // %__nv_fmaf_rn.exit.i.i.i900
	add.f32 	%f533, %f758, 0f3F800000;
	fma.rn.f32 	%f535, %f146, 0fC0400000, %f77;
	setp.ge.f32 	%p106, %f535, 0f00000000;
	add.f32 	%f536, %f533, 0f3F800000;
	selp.f32 	%f758, %f536, %f533, %p106;
LBB0_59:                                // %__internal_fmodf_fastpath_quot.exit.i.i904
	fma.rn.f32 	%f760, %f758, 0fC0000000, %f760;
LBB0_64:                                // %__internal_fmodf_kernel.exit.i929
	abs.f32 	%f550, %f760;
	setp.gtu.f32 	%p113, %f550, 0f7F800000;
	@%p113 bra 	LBB0_66;
// %bb.65:
	mov.b32 	%r264, %f74;
	and.b32  	%r265, %r264, -2147483648;
	mov.b32 	%r266, %f760;
	or.b32  	%r267, %r265, %r266;
	mov.b32 	%f760, %r267;
LBB0_66:                                // %__nv_fmodf.exit930
	shl.b32 	%r276, %r44, 3;
	sub.s32 	%r277, %r46, %r276;
	cvt.rn.f32.s32 	%f581, %r277;
	div.approx.f32 	%f93, %f581, %f178;
	abs.f32 	%f764, %f93;
	setp.lt.f32 	%p121, %f764, 0f40000000;
	@%p121 bra 	LBB0_78;
// %bb.67:
	setp.gtu.f32 	%p122, %f764, 0f4B800000;
	@%p122 bra 	LBB0_74;
	bra.uni 	LBB0_68;
LBB0_74:
	mov.b32 	%r56, %f764;
	and.b32  	%r278, %r56, 8388607;
	or.b32  	%r1104, %r278, 1065353216;
	mov.b32 	%f763, %r1104;
	add.s32 	%r279, %r56, -1073741824;
	and.b32  	%r1105, %r279, -8388608;
	setp.eq.s32 	%p128, %r1105, 0;
	@%p128 bra 	LBB0_77;
// %bb.75:                              // %__nv_fmaf_rn.exit4.i.i.i969.preheader
	mov.f32 	%f592, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f591,%f592;
	// end inline asm
LBB0_76:                                // %__nv_fmaf_rn.exit4.i.i.i969
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r280, %r1105, 192937984;
	add.s32 	%r281, %r280, %r1104;
	mov.b32 	%f593, %r281;
	mul.f32 	%f594, %f591, %f593;
	sub.f32 	%f595, %f593, %f594;
	fma.rn.f32 	%f596, %f595, %f591, %f594;
	sub.f32 	%f597, %f593, %f596;
	fma.rz.f32 	%f598, %f597, %f591, %f596;
	cvt.rzi.f32.f32 	%f599, %f598;
	sub.f32 	%f763, %f593, %f599;
	sub.s32 	%r1105, %r1105, %r280;
	mov.b32 	%r1104, %f763;
	setp.ne.s32 	%p129, %r1105, 0;
	setp.ne.s32 	%p130, %r1104, 0;
	and.pred  	%p131, %p129, %p130;
	@%p131 bra 	LBB0_76;
LBB0_77:                                // %__internal_fmodf_slowpath_mod.exit.i.i971
	setp.gt.u32 	%p132, %r56, 2139095039;
	selp.f32 	%f600, 0f7FFFFFFF, 0f4B800000, %p132;
	mul.f32 	%f601, %f763, 0f34000000;
	mul.f32 	%f764, %f600, %f601;
	bra.uni 	LBB0_78;
LBB0_68:                                // %__nv_fast_fdividef.exit.i.i.i941
	div.approx.f32 	%f584, %f764, %f146;
	cvt.rzi.f32.f32 	%f762, %f584;
	fma.rn.f32 	%f96, %f762, 0fC0000000, %f764;
	mov.b32 	%r55, %f96;
	setp.lt.u32 	%p123, %r55, 1073741824;
	@%p123 bra 	LBB0_73;
// %bb.69:
	setp.lt.u32 	%p124, %r55, -2147483647;
	@%p124 bra 	LBB0_71;
// %bb.70:
	add.f32 	%f589, %f762, 0fBF800000;
	setp.lt.f32 	%p127, %f96, 0fC0000000;
	add.f32 	%f590, %f589, 0fBF800000;
	selp.f32 	%f762, %f590, %f589, %p127;
	bra.uni 	LBB0_73;
LBB0_71:
	add.f32 	%f762, %f762, 0f3F800000;
	setp.ltu.f32 	%p125, %f96, 0f40800000;
	@%p125 bra 	LBB0_73;
// %bb.72:                              // %__nv_fmaf_rn.exit.i.i.i946
	add.f32 	%f585, %f762, 0f3F800000;
	fma.rn.f32 	%f587, %f146, 0fC0400000, %f96;
	setp.ge.f32 	%p126, %f587, 0f00000000;
	add.f32 	%f588, %f585, 0f3F800000;
	selp.f32 	%f762, %f588, %f585, %p126;
LBB0_73:                                // %__internal_fmodf_fastpath_quot.exit.i.i950
	fma.rn.f32 	%f764, %f762, 0fC0000000, %f764;
LBB0_78:                                // %__internal_fmodf_kernel.exit.i975
	mov.f32 	%f175, 0f00000000;
	abs.f32 	%f602, %f764;
	setp.gtu.f32 	%p133, %f602, 0f7F800000;
	@%p133 bra 	LBB0_80;
// %bb.79:
	mov.b32 	%r282, %f93;
	and.b32  	%r283, %r282, -2147483648;
	mov.b32 	%r284, %f764;
	or.b32  	%r285, %r283, %r284;
	mov.b32 	%f764, %r285;
LBB0_80:                                // %__nv_fmodf.exit976
	mov.f32 	%f635, 0f3F800000;
	div.approx.f32 	%f110, %f175, %f635;
	abs.f32 	%f772, %f110;
	setp.lt.f32 	%p141, %f772, 0f40000000;
	setp.gtu.f32 	%p215, %f772, 0f4B800000;
	mov.f32 	%f768, %f772;
	@%p141 bra 	LBB0_98;
// %bb.81:
	@%p215 bra 	LBB0_94;
	bra.uni 	LBB0_82;
LBB0_94:
	mov.b32 	%r84, %f772;
	and.b32  	%r309, %r84, 8388607;
	or.b32  	%r1114, %r309, 1065353216;
	mov.b32 	%f767, %r1114;
	add.s32 	%r310, %r84, -1073741824;
	and.b32  	%r1115, %r310, -8388608;
	setp.eq.s32 	%p148, %r1115, 0;
	@%p148 bra 	LBB0_97;
// %bb.95:                              // %__nv_fmaf_rn.exit4.i.i.i1015.preheader
	// begin inline asm
	rcp.approx.ftz.f32 %f644,%f635;
	// end inline asm
LBB0_96:                                // %__nv_fmaf_rn.exit4.i.i.i1015
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r311, %r1115, 192937984;
	add.s32 	%r312, %r311, %r1114;
	mov.b32 	%f646, %r312;
	mul.f32 	%f647, %f644, %f646;
	sub.f32 	%f648, %f646, %f647;
	fma.rn.f32 	%f649, %f648, %f644, %f647;
	sub.f32 	%f650, %f646, %f649;
	fma.rz.f32 	%f651, %f650, %f644, %f649;
	cvt.rzi.f32.f32 	%f652, %f651;
	sub.f32 	%f767, %f646, %f652;
	sub.s32 	%r1115, %r1115, %r311;
	mov.b32 	%r1114, %f767;
	setp.ne.s32 	%p149, %r1115, 0;
	setp.ne.s32 	%p150, %r1114, 0;
	and.pred  	%p151, %p149, %p150;
	@%p151 bra 	LBB0_96;
LBB0_97:                                // %__internal_fmodf_slowpath_mod.exit.i.i1017
	setp.gt.u32 	%p152, %r84, 2139095039;
	selp.f32 	%f653, 0f7FFFFFFF, 0f4B800000, %p152;
	mul.f32 	%f654, %f767, 0f34000000;
	mul.f32 	%f768, %f653, %f654;
	bra.uni 	LBB0_98;
LBB0_82:                                // %__nv_fast_fdividef.exit.i.i.i987
	div.approx.f32 	%f637, %f772, %f146;
	cvt.rzi.f32.f32 	%f766, %f637;
	fma.rn.f32 	%f113, %f766, 0fC0000000, %f772;
	mov.b32 	%r83, %f113;
	setp.lt.u32 	%p143, %r83, 1073741824;
	@%p143 bra 	LBB0_93;
// %bb.83:
	setp.lt.u32 	%p144, %r83, -2147483647;
	@%p144 bra 	LBB0_91;
// %bb.84:
	add.f32 	%f642, %f766, 0fBF800000;
	setp.lt.f32 	%p147, %f113, 0fC0000000;
	add.f32 	%f643, %f642, 0fBF800000;
	selp.f32 	%f766, %f643, %f642, %p147;
	bra.uni 	LBB0_93;
LBB0_91:
	add.f32 	%f766, %f766, 0f3F800000;
	setp.ltu.f32 	%p145, %f113, 0f40800000;
	@%p145 bra 	LBB0_93;
// %bb.92:                              // %__nv_fmaf_rn.exit.i.i.i992
	add.f32 	%f638, %f766, 0f3F800000;
	fma.rn.f32 	%f640, %f146, 0fC0400000, %f113;
	setp.ge.f32 	%p146, %f640, 0f00000000;
	add.f32 	%f641, %f638, 0f3F800000;
	selp.f32 	%f766, %f641, %f638, %p146;
LBB0_93:                                // %__internal_fmodf_fastpath_quot.exit.i.i996
	fma.rn.f32 	%f768, %f766, 0fC0000000, %f772;
LBB0_98:                                // %__internal_fmodf_kernel.exit.i1021
	abs.f32 	%f655, %f768;
	setp.gtu.f32 	%p153, %f655, 0f7F800000;
	mov.b32 	%r313, %f110;
	and.b32  	%r91, %r313, -2147483648;
	@%p153 bra 	LBB0_100;
// %bb.99:
	mov.b32 	%r314, %f768;
	or.b32  	%r315, %r91, %r314;
	mov.b32 	%f768, %r315;
LBB0_100:                               // %__nv_fmodf.exit1022
	@%p141 bra 	LBB0_112;
// %bb.101:
	@%p215 bra 	LBB0_108;
	bra.uni 	LBB0_102;
LBB0_108:
	mov.b32 	%r93, %f772;
	and.b32  	%r324, %r93, 8388607;
	or.b32  	%r1116, %r324, 1065353216;
	mov.b32 	%f771, %r1116;
	add.s32 	%r325, %r93, -1073741824;
	and.b32  	%r1117, %r325, -8388608;
	setp.eq.s32 	%p169, %r1117, 0;
	@%p169 bra 	LBB0_111;
// %bb.109:                             // %__nv_fmaf_rn.exit4.i.i.i1061.preheader
	// begin inline asm
	rcp.approx.ftz.f32 %f696,%f635;
	// end inline asm
LBB0_110:                               // %__nv_fmaf_rn.exit4.i.i.i1061
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r326, %r1117, 192937984;
	add.s32 	%r327, %r326, %r1116;
	mov.b32 	%f698, %r327;
	mul.f32 	%f699, %f696, %f698;
	sub.f32 	%f700, %f698, %f699;
	fma.rn.f32 	%f701, %f700, %f696, %f699;
	sub.f32 	%f702, %f698, %f701;
	fma.rz.f32 	%f703, %f702, %f696, %f701;
	cvt.rzi.f32.f32 	%f704, %f703;
	sub.f32 	%f771, %f698, %f704;
	sub.s32 	%r1117, %r1117, %r326;
	mov.b32 	%r1116, %f771;
	setp.ne.s32 	%p170, %r1117, 0;
	setp.ne.s32 	%p171, %r1116, 0;
	and.pred  	%p172, %p170, %p171;
	@%p172 bra 	LBB0_110;
LBB0_111:                               // %__internal_fmodf_slowpath_mod.exit.i.i1063
	setp.gt.u32 	%p173, %r93, 2139095039;
	selp.f32 	%f705, 0f7FFFFFFF, 0f4B800000, %p173;
	mul.f32 	%f706, %f771, 0f34000000;
	mul.f32 	%f772, %f705, %f706;
	bra.uni 	LBB0_112;
LBB0_102:                               // %__nv_fast_fdividef.exit.i.i.i1033
	div.approx.f32 	%f689, %f772, %f146;
	cvt.rzi.f32.f32 	%f770, %f689;
	fma.rn.f32 	%f131, %f770, 0fC0000000, %f772;
	mov.b32 	%r92, %f131;
	setp.lt.u32 	%p164, %r92, 1073741824;
	@%p164 bra 	LBB0_107;
// %bb.103:
	setp.lt.u32 	%p165, %r92, -2147483647;
	@%p165 bra 	LBB0_105;
// %bb.104:
	add.f32 	%f694, %f770, 0fBF800000;
	setp.lt.f32 	%p168, %f131, 0fC0000000;
	add.f32 	%f695, %f694, 0fBF800000;
	selp.f32 	%f770, %f695, %f694, %p168;
	bra.uni 	LBB0_107;
LBB0_105:
	add.f32 	%f770, %f770, 0f3F800000;
	setp.ltu.f32 	%p166, %f131, 0f40800000;
	@%p166 bra 	LBB0_107;
// %bb.106:                             // %__nv_fmaf_rn.exit.i.i.i1038
	add.f32 	%f690, %f770, 0f3F800000;
	fma.rn.f32 	%f692, %f146, 0fC0400000, %f131;
	setp.ge.f32 	%p167, %f692, 0f00000000;
	add.f32 	%f693, %f690, 0f3F800000;
	selp.f32 	%f770, %f693, %f690, %p167;
LBB0_107:                               // %__internal_fmodf_fastpath_quot.exit.i.i1042
	fma.rn.f32 	%f772, %f770, 0fC0000000, %f772;
LBB0_112:                               // %__internal_fmodf_kernel.exit.i1067
	abs.f32 	%f707, %f772;
	setp.gtu.f32 	%p174, %f707, 0f7F800000;
	@%p174 bra 	LBB0_114;
// %bb.113:
	mov.b32 	%r328, %f772;
	or.b32  	%r329, %r91, %r328;
	mov.b32 	%f772, %r329;
LBB0_114:                               // %__nv_fmodf.exit1068
	setp.le.s32 	%p182, %r7, %r6;
	mov.u32 	%r1097, 0;
	@%p182 bra 	LBB0_90;
// %bb.115:                             // %L1195.lr.ph
	mov.f32 	%f150, 0f42040000;
	div.approx.f32 	%f151, %f149, %f150;
	div.approx.f32 	%f185, %f183, %f150;
	div.approx.f32 	%f220, %f218, %f150;
	div.approx.f32 	%f254, %f252, %f150;
	div.approx.f32 	%f289, %f287, %f150;
	div.approx.f32 	%f323, %f321, %f150;
	div.approx.f32 	%f358, %f356, %f150;
	div.approx.f32 	%f392, %f390, %f150;
	abs.f32 	%f152, %f151;
	abs.f32 	%f186, %f185;
	abs.f32 	%f221, %f220;
	abs.f32 	%f255, %f254;
	abs.f32 	%f290, %f289;
	abs.f32 	%f324, %f323;
	abs.f32 	%f359, %f358;
	abs.f32 	%f393, %f392;
	setp.gt.f32 	%p13, %f152, 0f4B800000;
	mul.f32 	%f153, %f151, 0f00000000;
	setp.gt.f32 	%p19, %f186, 0f4B800000;
	mul.f32 	%f187, %f185, 0f00000000;
	setp.gt.f32 	%p25, %f221, 0f4B800000;
	mul.f32 	%f222, %f220, 0f00000000;
	setp.gt.f32 	%p31, %f255, 0f4B800000;
	mul.f32 	%f256, %f254, 0f00000000;
	setp.gt.f32 	%p37, %f290, 0f4B800000;
	mul.f32 	%f291, %f289, 0f00000000;
	setp.gt.f32 	%p43, %f324, 0f4B800000;
	mul.f32 	%f325, %f323, 0f00000000;
	setp.gt.f32 	%p49, %f359, 0f4B800000;
	mul.f32 	%f360, %f358, 0f00000000;
	setp.gt.f32 	%p55, %f393, 0f4B800000;
	mul.f32 	%f394, %f392, 0f00000000;
	selp.f32 	%f154, %f153, %f151, %p13;
	selp.f32 	%f188, %f187, %f185, %p19;
	selp.f32 	%f223, %f222, %f220, %p25;
	selp.f32 	%f257, %f256, %f254, %p31;
	selp.f32 	%f292, %f291, %f289, %p37;
	selp.f32 	%f326, %f325, %f323, %p43;
	selp.f32 	%f361, %f360, %f358, %p49;
	selp.f32 	%f395, %f394, %f392, %p55;
	add.f32 	%f551, %f760, %f760;
	add.f32 	%f603, %f764, %f764;
	add.f32 	%f155, %f154, %f154;
	add.f32 	%f189, %f188, %f188;
	add.f32 	%f224, %f223, %f223;
	add.f32 	%f258, %f257, %f257;
	add.f32 	%f293, %f292, %f292;
	add.f32 	%f327, %f326, %f326;
	add.f32 	%f362, %f361, %f361;
	add.f32 	%f396, %f395, %f395;
	add.f32 	%f445, %f752, %f752;
	add.f32 	%f497, %f756, %f756;
	mov.b32 	%r268, %f551;
	mov.b32 	%r298, %f603;
	add.f32 	%f656, %f768, %f768;
	mov.b32 	%r147, %f155;
	mov.b32 	%r154, %f189;
	mov.b32 	%r165, %f224;
	mov.b32 	%r172, %f258;
	mov.b32 	%r183, %f293;
	mov.b32 	%r190, %f327;
	mov.b32 	%r201, %f362;
	mov.b32 	%r208, %f396;
	mov.b32 	%r226, %f445;
	mov.b32 	%r249, %f497;
	and.b32  	%r269, %r268, -2147483648;
	and.b32  	%r299, %r298, -2147483648;
	mov.b32 	%r316, %f656;
	and.b32  	%r148, %r147, -2147483648;
	and.b32  	%r155, %r154, -2147483648;
	and.b32  	%r166, %r165, -2147483648;
	and.b32  	%r173, %r172, -2147483648;
	and.b32  	%r184, %r183, -2147483648;
	and.b32  	%r191, %r190, -2147483648;
	and.b32  	%r202, %r201, -2147483648;
	and.b32  	%r209, %r208, -2147483648;
	and.b32  	%r227, %r226, -2147483648;
	and.b32  	%r250, %r249, -2147483648;
	or.b32  	%r270, %r269, 1056964608;
	or.b32  	%r300, %r299, 1056964608;
	and.b32  	%r317, %r316, -2147483648;
	or.b32  	%r149, %r148, 1056964608;
	or.b32  	%r156, %r155, 1056964608;
	or.b32  	%r167, %r166, 1056964608;
	or.b32  	%r174, %r173, 1056964608;
	or.b32  	%r185, %r184, 1056964608;
	or.b32  	%r192, %r191, 1056964608;
	or.b32  	%r203, %r202, 1056964608;
	or.b32  	%r210, %r209, 1056964608;
	or.b32  	%r228, %r227, 1056964608;
	or.b32  	%r251, %r250, 1056964608;
	mov.b32 	%f552, %r270;
	mov.b32 	%f604, %r300;
	or.b32  	%r318, %r317, 1056964608;
	mov.b32 	%f156, %r149;
	mov.b32 	%f190, %r156;
	mov.b32 	%f225, %r167;
	mov.b32 	%f259, %r174;
	cvt.u16.u32 	%rs1, %r3;
	mov.b32 	%f294, %r185;
	mov.b32 	%f328, %r192;
	mov.b32 	%f363, %r203;
	mov.b32 	%f397, %r210;
	mov.b32 	%f446, %r228;
	mov.b32 	%f498, %r251;
	add.f32 	%f553, %f551, %f552;
	abs.f32 	%f555, %f551;
	add.f32 	%f605, %f603, %f604;
	abs.f32 	%f607, %f603;
	mov.b32 	%f657, %r318;
	add.f32 	%f157, %f155, %f156;
	abs.f32 	%f159, %f155;
	add.f32 	%f191, %f189, %f190;
	abs.f32 	%f193, %f189;
	add.f32 	%f226, %f224, %f225;
	abs.f32 	%f228, %f224;
	add.f32 	%f260, %f258, %f259;
	abs.f32 	%f262, %f258;
	add.f32 	%f295, %f293, %f294;
	abs.f32 	%f297, %f293;
	shr.u16 	%rs2, %rs1, 8;
	shl.b16 	%rs3, %rs1, 8;
	add.f32 	%f329, %f327, %f328;
	abs.f32 	%f331, %f327;
	add.f32 	%f364, %f362, %f363;
	abs.f32 	%f366, %f362;
	add.f32 	%f398, %f396, %f397;
	abs.f32 	%f400, %f396;
	add.f32 	%f447, %f445, %f446;
	abs.f32 	%f449, %f445;
	add.f32 	%f499, %f497, %f498;
	abs.f32 	%f501, %f497;
	cvt.rzi.f32.f32 	%f554, %f553;
	setp.gt.f32 	%p114, %f555, 0f4B000000;
	cvt.rzi.f32.f32 	%f606, %f605;
	setp.gt.f32 	%p134, %f607, 0f4B000000;
	add.f32 	%f658, %f656, %f657;
	abs.f32 	%f660, %f656;
	cvt.rzi.f32.f32 	%f158, %f157;
	setp.gt.f32 	%p14, %f159, 0f4B000000;
	cvt.rzi.f32.f32 	%f192, %f191;
	setp.gt.f32 	%p20, %f193, 0f4B000000;
	cvt.rzi.f32.f32 	%f227, %f226;
	setp.gt.f32 	%p26, %f228, 0f4B000000;
	cvt.rzi.f32.f32 	%f261, %f260;
	setp.gt.f32 	%p32, %f262, 0f4B000000;
	cvt.rzi.f32.f32 	%f296, %f295;
	setp.gt.f32 	%p38, %f297, 0f4B000000;
	cvt.rzi.f32.f32 	%f330, %f329;
	setp.gt.f32 	%p44, %f331, 0f4B000000;
	or.b16  	%rs4, %rs3, %rs2;
	cvt.rzi.f32.f32 	%f365, %f364;
	setp.gt.f32 	%p50, %f366, 0f4B000000;
	cvt.rzi.f32.f32 	%f399, %f398;
	setp.gt.f32 	%p56, %f400, 0f4B000000;
	cvt.rzi.f32.f32 	%f448, %f447;
	setp.gt.f32 	%p74, %f449, 0f4B000000;
	cvt.rzi.f32.f32 	%f500, %f499;
	setp.gt.f32 	%p94, %f501, 0f4B000000;
	selp.f32 	%f556, %f551, %f554, %p114;
	cvt.rzi.f32.f32 	%f557, %f551;
	setp.lt.f32 	%p115, %f555, 0f3F000000;
	selp.f32 	%f608, %f603, %f606, %p134;
	cvt.rzi.f32.f32 	%f609, %f603;
	setp.lt.f32 	%p135, %f607, 0f3F000000;
	cvt.rzi.f32.f32 	%f659, %f658;
	setp.gt.f32 	%p156, %f660, 0f4B000000;
	selp.f32 	%f160, %f155, %f158, %p14;
	cvt.rzi.f32.f32 	%f161, %f155;
	setp.lt.f32 	%p15, %f159, 0f3F000000;
	selp.f32 	%f194, %f189, %f192, %p20;
	cvt.rzi.f32.f32 	%f195, %f189;
	setp.lt.f32 	%p21, %f193, 0f3F000000;
	selp.f32 	%f229, %f224, %f227, %p26;
	cvt.rzi.f32.f32 	%f230, %f224;
	setp.lt.f32 	%p27, %f228, 0f3F000000;
	selp.f32 	%f263, %f258, %f261, %p32;
	cvt.rzi.f32.f32 	%f264, %f258;
	setp.lt.f32 	%p33, %f262, 0f3F000000;
	selp.f32 	%f298, %f293, %f296, %p38;
	cvt.rzi.f32.f32 	%f299, %f293;
	setp.lt.f32 	%p39, %f297, 0f3F000000;
	selp.f32 	%f332, %f327, %f330, %p44;
	cvt.rzi.f32.f32 	%f333, %f327;
	setp.lt.f32 	%p45, %f331, 0f3F000000;
	selp.f32 	%f367, %f362, %f365, %p50;
	cvt.rzi.f32.f32 	%f368, %f362;
	setp.lt.f32 	%p51, %f366, 0f3F000000;
	shr.u16 	%rs6, %rs4, 4;
	selp.f32 	%f401, %f396, %f399, %p56;
	cvt.rzi.f32.f32 	%f402, %f396;
	setp.lt.f32 	%p57, %f400, 0f3F000000;
	selp.f32 	%f450, %f445, %f448, %p74;
	cvt.rzi.f32.f32 	%f451, %f445;
	setp.lt.f32 	%p75, %f449, 0f3F000000;
	selp.f32 	%f502, %f497, %f500, %p94;
	cvt.rzi.f32.f32 	%f503, %f497;
	setp.lt.f32 	%p95, %f501, 0f3F000000;
	selp.f32 	%f558, %f557, %f556, %p115;
	selp.f32 	%f610, %f609, %f608, %p135;
	selp.f32 	%f661, %f656, %f659, %p156;
	cvt.rzi.f32.f32 	%f662, %f656;
	setp.lt.f32 	%p157, %f660, 0f3F000000;
	selp.f32 	%f162, %f161, %f160, %p15;
	selp.f32 	%f196, %f195, %f194, %p21;
	selp.f32 	%f231, %f230, %f229, %p27;
	selp.f32 	%f265, %f264, %f263, %p33;
	selp.f32 	%f300, %f299, %f298, %p39;
	selp.f32 	%f334, %f333, %f332, %p45;
	selp.f32 	%f369, %f368, %f367, %p51;
	selp.f32 	%f403, %f402, %f401, %p57;
	shl.b16 	%rs5, %rs4, 4;
	and.b16  	%rs7, %rs6, 3840;
	selp.f32 	%f452, %f451, %f450, %p75;
	selp.f32 	%f504, %f503, %f502, %p95;
	fma.rn.f32 	%f559, %f558, 0fBF000000, %f760;
	fma.rn.f32 	%f611, %f610, 0fBF000000, %f764;
	selp.f32 	%f663, %f662, %f661, %p157;
	fma.rn.f32 	%f163, %f162, 0fBF000000, %f154;
	fma.rn.f32 	%f197, %f196, 0fBF000000, %f188;
	fma.rn.f32 	%f232, %f231, 0fBF000000, %f223;
	fma.rn.f32 	%f266, %f265, 0fBF000000, %f257;
	fma.rn.f32 	%f301, %f300, 0fBF000000, %f292;
	fma.rn.f32 	%f335, %f334, 0fBF000000, %f326;
	fma.rn.f32 	%f370, %f369, 0fBF000000, %f361;
	fma.rn.f32 	%f404, %f403, 0fBF000000, %f395;
	or.b16  	%rs8, %rs7, %rs5;
	fma.rn.f32 	%f453, %f452, 0fBF000000, %f752;
	fma.rn.f32 	%f505, %f504, 0fBF000000, %f756;
	mul.f32 	%f560, %f559, %f559;
	mul.f32 	%f612, %f611, %f611;
	fma.rn.f32 	%f664, %f663, 0fBF000000, %f768;
	mul.f32 	%f164, %f163, %f163;
	mul.f32 	%f198, %f197, %f197;
	mul.f32 	%f233, %f232, %f232;
	mul.f32 	%f267, %f266, %f266;
	mul.f32 	%f302, %f301, %f301;
	mul.f32 	%f336, %f335, %f335;
	mul.f32 	%f371, %f370, %f370;
	mul.f32 	%f405, %f404, %f404;
	and.b16  	%rs9, %rs8, 13107;
	shr.u16 	%rs11, %rs8, 2;
	mul.f32 	%f454, %f453, %f453;
	mul.f32 	%f506, %f505, %f505;
	fma.rn.f32 	%f561, %f560, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f562, %f560, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f613, %f612, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f614, %f612, 0f3E684E12, 0fBFAAD2E0;
	mul.f32 	%f665, %f664, %f664;
	cvt.rzi.s32.f32 	%r150, %f162;
	fma.rn.f32 	%f165, %f164, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f166, %f164, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r157, %f196;
	fma.rn.f32 	%f199, %f198, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f200, %f198, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r168, %f231;
	fma.rn.f32 	%f234, %f233, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f235, %f233, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r175, %f265;
	fma.rn.f32 	%f268, %f267, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f269, %f267, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r186, %f300;
	fma.rn.f32 	%f303, %f302, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f304, %f302, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r193, %f334;
	fma.rn.f32 	%f337, %f336, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f338, %f336, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r204, %f369;
	fma.rn.f32 	%f372, %f371, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f373, %f371, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r211, %f403;
	fma.rn.f32 	%f406, %f405, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f407, %f405, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f455, %f454, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f456, %f454, 0f3E684E12, 0fBFAAD2E0;
	shl.b16 	%rs10, %rs9, 2;
	and.b16  	%rs12, %rs11, 13107;
	fma.rn.f32 	%f507, %f506, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f508, %f506, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r271, %f558;
	fma.rn.f32 	%f563, %f561, %f560, 0fC0A55DF6;
	fma.rn.f32 	%f564, %f562, %f560, 0f4081E0CF;
	fma.rn.f32 	%f565, %f560, %f559, 0f00000000;
	cvt.rzi.s32.f32 	%r301, %f610;
	fma.rn.f32 	%f615, %f613, %f612, 0fC0A55DF6;
	fma.rn.f32 	%f616, %f614, %f612, 0f4081E0CF;
	fma.rn.f32 	%f617, %f612, %f611, 0f00000000;
	fma.rn.f32 	%f666, %f665, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f667, %f665, 0f3E684E12, 0fBFAAD2E0;
	add.s32 	%r151, %r150, 1;
	fma.rn.f32 	%f167, %f165, %f164, 0fC0A55DF6;
	fma.rn.f32 	%f168, %f166, %f164, 0f4081E0CF;
	fma.rn.f32 	%f169, %f164, %f163, 0f00000000;
	add.s32 	%r158, %r157, 1;
	fma.rn.f32 	%f201, %f199, %f198, 0fC0A55DF6;
	fma.rn.f32 	%f202, %f200, %f198, 0f4081E0CF;
	fma.rn.f32 	%f203, %f198, %f197, 0f00000000;
	add.s32 	%r169, %r168, 1;
	fma.rn.f32 	%f236, %f234, %f233, 0fC0A55DF6;
	fma.rn.f32 	%f237, %f235, %f233, 0f4081E0CF;
	fma.rn.f32 	%f238, %f233, %f232, 0f00000000;
	add.s32 	%r176, %r175, 1;
	fma.rn.f32 	%f270, %f268, %f267, 0fC0A55DF6;
	fma.rn.f32 	%f271, %f269, %f267, 0f4081E0CF;
	fma.rn.f32 	%f272, %f267, %f266, 0f00000000;
	add.s32 	%r187, %r186, 1;
	fma.rn.f32 	%f305, %f303, %f302, 0fC0A55DF6;
	fma.rn.f32 	%f306, %f304, %f302, 0f4081E0CF;
	fma.rn.f32 	%f307, %f302, %f301, 0f00000000;
	add.s32 	%r194, %r193, 1;
	fma.rn.f32 	%f339, %f337, %f336, 0fC0A55DF6;
	fma.rn.f32 	%f340, %f338, %f336, 0f4081E0CF;
	fma.rn.f32 	%f341, %f336, %f335, 0f00000000;
	add.s32 	%r205, %r204, 1;
	fma.rn.f32 	%f374, %f372, %f371, 0fC0A55DF6;
	fma.rn.f32 	%f375, %f373, %f371, 0f4081E0CF;
	fma.rn.f32 	%f376, %f371, %f370, 0f00000000;
	add.s32 	%r212, %r211, 1;
	fma.rn.f32 	%f408, %f406, %f405, 0fC0A55DF6;
	fma.rn.f32 	%f409, %f407, %f405, 0f4081E0CF;
	fma.rn.f32 	%f410, %f405, %f404, 0f00000000;
	cvt.rzi.s32.f32 	%r229, %f452;
	fma.rn.f32 	%f457, %f455, %f454, 0fC0A55DF6;
	fma.rn.f32 	%f458, %f456, %f454, 0f4081E0CF;
	fma.rn.f32 	%f459, %f454, %f453, 0f00000000;
	or.b16  	%rs13, %rs12, %rs10;
	cvt.rzi.s32.f32 	%r252, %f504;
	fma.rn.f32 	%f509, %f507, %f506, 0fC0A55DF6;
	fma.rn.f32 	%f510, %f508, %f506, 0f4081E0CF;
	fma.rn.f32 	%f511, %f506, %f505, 0f00000000;
	fma.rn.f32 	%f566, %f564, %f560, 0fC09DE9E6;
	fma.rn.f32 	%f567, %f563, %f565, 0f00000000;
	and.b32  	%r272, %r271, 1;
	fma.rn.f32 	%f618, %f616, %f612, 0fC09DE9E6;
	fma.rn.f32 	%f619, %f615, %f617, 0f00000000;
	and.b32  	%r302, %r301, 1;
	cvt.rzi.s32.f32 	%r319, %f663;
	fma.rn.f32 	%f668, %f666, %f665, 0fC0A55DF6;
	fma.rn.f32 	%f669, %f667, %f665, 0f4081E0CF;
	fma.rn.f32 	%f670, %f665, %f664, 0f00000000;
	fma.rn.f32 	%f170, %f168, %f164, 0fC09DE9E6;
	fma.rn.f32 	%f171, %f167, %f169, 0f00000000;
	and.b32  	%r152, %r151, 1;
	fma.rn.f32 	%f204, %f202, %f198, 0fC09DE9E6;
	fma.rn.f32 	%f205, %f201, %f203, 0f00000000;
	and.b32  	%r159, %r158, 1;
	fma.rn.f32 	%f239, %f237, %f233, 0fC09DE9E6;
	fma.rn.f32 	%f240, %f236, %f238, 0f00000000;
	and.b32  	%r170, %r169, 1;
	fma.rn.f32 	%f273, %f271, %f267, 0fC09DE9E6;
	fma.rn.f32 	%f274, %f270, %f272, 0f00000000;
	and.b32  	%r177, %r176, 1;
	fma.rn.f32 	%f308, %f306, %f302, 0fC09DE9E6;
	fma.rn.f32 	%f309, %f305, %f307, 0f00000000;
	and.b32  	%r188, %r187, 1;
	fma.rn.f32 	%f342, %f340, %f336, 0fC09DE9E6;
	fma.rn.f32 	%f343, %f339, %f341, 0f00000000;
	and.b32  	%r195, %r194, 1;
	fma.rn.f32 	%f377, %f375, %f371, 0fC09DE9E6;
	fma.rn.f32 	%f378, %f374, %f376, 0f00000000;
	and.b32  	%r206, %r205, 1;
	fma.rn.f32 	%f411, %f409, %f405, 0fC09DE9E6;
	fma.rn.f32 	%f412, %f408, %f410, 0f00000000;
	and.b32  	%r213, %r212, 1;
	fma.rn.f32 	%f460, %f458, %f454, 0fC09DE9E6;
	fma.rn.f32 	%f461, %f457, %f459, 0f00000000;
	and.b32  	%r230, %r229, 1;
	fma.rn.f32 	%f512, %f510, %f506, 0fC09DE9E6;
	fma.rn.f32 	%f513, %f509, %f511, 0f00000000;
	and.b32  	%r253, %r252, 1;
	and.b16  	%rs15, %rs13, 16384;
	fma.rn.f32 	%f568, %f566, %f560, 0f3F800000;
	fma.rn.f32 	%f569, %f559, 0f40490FDB, %f567;
	setp.eq.b32 	%p116, %r272, 1;
	fma.rn.f32 	%f620, %f618, %f612, 0f3F800000;
	fma.rn.f32 	%f621, %f611, 0f40490FDB, %f619;
	setp.eq.b32 	%p136, %r302, 1;
	fma.rn.f32 	%f671, %f669, %f665, 0fC09DE9E6;
	fma.rn.f32 	%f672, %f668, %f670, 0f00000000;
	and.b32  	%r320, %r319, 1;
	fma.rn.f32 	%f172, %f170, %f164, 0f3F800000;
	fma.rn.f32 	%f173, %f163, 0f40490FDB, %f171;
	setp.eq.b32 	%p16, %r152, 1;
	fma.rn.f32 	%f206, %f204, %f198, 0f3F800000;
	fma.rn.f32 	%f207, %f197, 0f40490FDB, %f205;
	setp.eq.b32 	%p22, %r159, 1;
	fma.rn.f32 	%f241, %f239, %f233, 0f3F800000;
	fma.rn.f32 	%f242, %f232, 0f40490FDB, %f240;
	setp.eq.b32 	%p28, %r170, 1;
	fma.rn.f32 	%f275, %f273, %f267, 0f3F800000;
	fma.rn.f32 	%f276, %f266, 0f40490FDB, %f274;
	setp.eq.b32 	%p34, %r177, 1;
	fma.rn.f32 	%f310, %f308, %f302, 0f3F800000;
	fma.rn.f32 	%f311, %f301, 0f40490FDB, %f309;
	setp.eq.b32 	%p40, %r188, 1;
	fma.rn.f32 	%f344, %f342, %f336, 0f3F800000;
	fma.rn.f32 	%f345, %f335, 0f40490FDB, %f343;
	setp.eq.b32 	%p46, %r195, 1;
	fma.rn.f32 	%f379, %f377, %f371, 0f3F800000;
	fma.rn.f32 	%f380, %f370, 0f40490FDB, %f378;
	setp.eq.b32 	%p52, %r206, 1;
	fma.rn.f32 	%f413, %f411, %f405, 0f3F800000;
	fma.rn.f32 	%f414, %f404, 0f40490FDB, %f412;
	setp.eq.b32 	%p58, %r213, 1;
	fma.rn.f32 	%f462, %f460, %f454, 0f3F800000;
	fma.rn.f32 	%f463, %f453, 0f40490FDB, %f461;
	setp.eq.b32 	%p76, %r230, 1;
	fma.rn.f32 	%f514, %f512, %f506, 0f3F800000;
	fma.rn.f32 	%f515, %f505, 0f40490FDB, %f513;
	setp.eq.b32 	%p96, %r253, 1;
	shr.u16 	%rs14, %rs13, 1;
	shl.b16 	%rs16, %rs15, 1;
	selp.f32 	%f570, %f568, %f569, %p116;
	and.b32  	%r273, %r271, 2;
	selp.f32 	%f622, %f620, %f621, %p136;
	and.b32  	%r303, %r301, 2;
	fma.rn.f32 	%f673, %f671, %f665, 0f3F800000;
	fma.rn.f32 	%f674, %f664, 0f40490FDB, %f672;
	setp.eq.b32 	%p158, %r320, 1;
	selp.f32 	%f174, %f172, %f173, %p16;
	and.b32  	%r153, %r151, 2;
	selp.f32 	%f208, %f206, %f207, %p22;
	and.b32  	%r160, %r158, 2;
	selp.f32 	%f243, %f241, %f242, %p28;
	and.b32  	%r171, %r169, 2;
	selp.f32 	%f277, %f275, %f276, %p34;
	and.b32  	%r178, %r176, 2;
	selp.f32 	%f312, %f310, %f311, %p40;
	and.b32  	%r189, %r187, 2;
	selp.f32 	%f346, %f344, %f345, %p46;
	and.b32  	%r196, %r194, 2;
	selp.f32 	%f381, %f379, %f380, %p52;
	and.b32  	%r207, %r205, 2;
	selp.f32 	%f415, %f413, %f414, %p58;
	and.b32  	%r214, %r212, 2;
	selp.f32 	%f464, %f462, %f463, %p76;
	and.b32  	%r231, %r229, 2;
	selp.f32 	%f516, %f514, %f515, %p96;
	and.b32  	%r254, %r252, 2;
	setp.eq.s32 	%p117, %r273, 0;
	neg.f32 	%f572, %f570;
	add.s32 	%r274, %r271, 1;
	cvt.rzi.f32.f32 	%f577, %f760;
	or.b16  	%rs17, %rs14, %rs16;
	setp.eq.s32 	%p137, %r303, 0;
	neg.f32 	%f624, %f622;
	add.s32 	%r304, %r301, 1;
	cvt.rzi.f32.f32 	%f629, %f764;
	shr.u32 	%r68, %r3, 3;
	selp.f32 	%f675, %f673, %f674, %p158;
	and.b32  	%r321, %r319, 2;
	setp.eq.s32 	%p17, %r153, 0;
	sub.f32 	%f176, %f175, %f174;
	setp.eq.s32 	%p23, %r160, 0;
	sub.f32 	%f210, %f175, %f208;
	setp.eq.s32 	%p29, %r171, 0;
	sub.f32 	%f245, %f175, %f243;
	setp.eq.s32 	%p35, %r178, 0;
	sub.f32 	%f279, %f175, %f277;
	setp.eq.s32 	%p41, %r189, 0;
	sub.f32 	%f314, %f175, %f312;
	setp.eq.s32 	%p47, %r196, 0;
	sub.f32 	%f348, %f175, %f346;
	setp.eq.s32 	%p53, %r207, 0;
	sub.f32 	%f383, %f175, %f381;
	setp.eq.s32 	%p59, %r214, 0;
	sub.f32 	%f417, %f175, %f415;
	setp.eq.s32 	%p77, %r231, 0;
	neg.f32 	%f466, %f464;
	add.s32 	%r232, %r229, 1;
	cvt.rzi.f32.f32 	%f471, %f752;
	setp.eq.s32 	%p97, %r254, 0;
	neg.f32 	%f518, %f516;
	add.s32 	%r255, %r252, 1;
	cvt.rzi.f32.f32 	%f523, %f756;
	selp.f32 	%f571, %f569, %f568, %p116;
	selp.f32 	%f573, %f570, %f572, %p117;
	and.b32  	%r275, %r274, 2;
	setp.eq.f32 	%p119, %f577, %f760;
	mul.f32 	%f578, %f760, 0f00000000;
	shr.u32 	%r13, %r3, 1;
	bfe.u32 	%r45, %r3, 2, 1;
	selp.f32 	%f623, %f621, %f620, %p136;
	selp.f32 	%f625, %f622, %f624, %p137;
	and.b32  	%r305, %r304, 2;
	setp.eq.f32 	%p139, %f629, %f764;
	mul.f32 	%f630, %f764, 0f00000000;
	shr.u16 	%rs36, %rs17, 14;
	and.b32  	%r69, %r68, 2;
	setp.eq.s32 	%p159, %r321, 0;
	neg.f32 	%f677, %f675;
	add.s32 	%r322, %r319, 1;
	cvt.rzi.f32.f32 	%f682, %f768;
	selp.f32 	%f177, %f174, %f176, %p17;
	selp.f32 	%f211, %f208, %f210, %p23;
	selp.f32 	%f246, %f243, %f245, %p29;
	selp.f32 	%f280, %f277, %f279, %p35;
	selp.f32 	%f315, %f312, %f314, %p41;
	selp.f32 	%f349, %f346, %f348, %p47;
	selp.f32 	%f384, %f381, %f383, %p53;
	selp.f32 	%f418, %f415, %f417, %p59;
	selp.f32 	%f465, %f463, %f462, %p76;
	selp.f32 	%f467, %f464, %f466, %p77;
	and.b32  	%r233, %r232, 2;
	setp.eq.f32 	%p79, %f471, %f752;
	mul.f32 	%f472, %f752, 0f00000000;
	selp.f32 	%f517, %f515, %f514, %p96;
	selp.f32 	%f519, %f516, %f518, %p97;
	and.b32  	%r256, %r255, 2;
	setp.eq.f32 	%p99, %f523, %f756;
	mul.f32 	%f524, %f756, 0f00000000;
	setp.eq.s32 	%p118, %r275, 0;
	sub.f32 	%f575, %f175, %f571;
	selp.f32 	%f91, %f578, %f573, %p119;
	abs.f32 	%f579, %f760;
	setp.eq.s32 	%p138, %r305, 0;
	sub.f32 	%f627, %f175, %f623;
	selp.f32 	%f631, %f630, %f625, %p139;
	abs.f32 	%f632, %f764;
	shl.b32 	%r306, %r45, 2;
	cvt.u32.u16 	%r307, %rs36;
	and.b32  	%r70, %r13, 4;
	or.b32  	%r308, %r45, %r69;
	selp.f32 	%f676, %f674, %f673, %p158;
	selp.f32 	%f678, %f675, %f677, %p159;
	and.b32  	%r323, %r322, 2;
	setp.eq.f32 	%p161, %f682, %f768;
	mul.f32 	%f683, %f768, 0f00000000;
	shr.u16 	%rs18, %rs17, 12;
	mul.f32 	%f2, %f177, %f177;
	mul.f32 	%f7, %f211, %f211;
	mul.f32 	%f11, %f246, %f246;
	mul.f32 	%f16, %f280, %f280;
	mul.f32 	%f20, %f315, %f315;
	mul.f32 	%f25, %f349, %f349;
	mul.f32 	%f29, %f384, %f384;
	mul.f32 	%f34, %f418, %f418;
	setp.eq.s32 	%p78, %r233, 0;
	sub.f32 	%f469, %f175, %f465;
	selp.f32 	%f55, %f472, %f467, %p79;
	abs.f32 	%f473, %f752;
	setp.eq.s32 	%p98, %r256, 0;
	sub.f32 	%f521, %f175, %f517;
	selp.f32 	%f525, %f524, %f519, %p99;
	abs.f32 	%f526, %f756;
	selp.f32 	%f576, %f571, %f575, %p118;
	setp.gt.f32 	%p120, %f579, 0f4B800000;
	add.f32 	%f580, %f91, 0f3F800000;
	selp.f32 	%f628, %f623, %f627, %p138;
	setp.gt.f32 	%p140, %f632, 0f4B800000;
	add.f32 	%f633, %f631, 0f3F800000;
	or.b32  	%r67, %r306, %r307;
	or.b32  	%r71, %r308, %r70;
	setp.eq.s32 	%p160, %r323, 0;
	sub.f32 	%f680, %f175, %f676;
	selp.f32 	%f684, %f683, %f678, %p161;
	abs.f32 	%f685, %f768;
	cvt.u64.u16 	%rd60, %rs18;
	mul.f32 	%f181, %f2, 0f3D87E86B;
	mul.f32 	%f215, %f7, 0f3D87E86B;
	mul.f32 	%f250, %f11, 0f3D87E86B;
	mul.f32 	%f284, %f16, 0f3D87E86B;
	mul.f32 	%f319, %f20, 0f3D87E86B;
	mul.f32 	%f353, %f25, 0f3D87E86B;
	mul.f32 	%f388, %f29, 0f3D87E86B;
	mul.f32 	%f421, %f34, 0f3D87E86B;
	selp.f32 	%f470, %f465, %f469, %p78;
	setp.gt.f32 	%p80, %f473, 0f4B800000;
	add.f32 	%f474, %f55, 0f3F800000;
	selp.f32 	%f522, %f517, %f521, %p98;
	setp.gt.f32 	%p100, %f526, 0f4B800000;
	add.f32 	%f527, %f525, 0f3F800000;
	selp.f32 	%f92, %f580, %f576, %p120;
	selp.f32 	%f634, %f633, %f628, %p140;
	setp.eq.s32 	%p155, %r71, %r67;
	selp.f32 	%f681, %f676, %f680, %p160;
	setp.gt.f32 	%p162, %f685, 0f4B800000;
	add.f32 	%f686, %f684, 0f3F800000;
	ld.param.u64 	%rd1, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_5];
	and.b64  	%rd61, %rd60, 12;
	mul.f32 	%f6, %f181, %f742;
	mul.f32 	%f216, %f215, %f743;
	mul.f32 	%f15, %f250, %f744;
	mul.f32 	%f285, %f284, %f745;
	mul.f32 	%f24, %f319, %f746;
	mul.f32 	%f354, %f353, %f747;
	mul.f32 	%f33, %f388, %f748;
	mul.f32 	%f422, %f421, %f749;
	selp.f32 	%f56, %f474, %f470, %p80;
	selp.f32 	%f528, %f527, %f522, %p100;
	mov.b32 	%r288, %f634;
	mov.b32 	%r287, %f92;
	mov.b32 	%r294, %f631;
	mov.b32 	%r293, %f91;
	selp.f32 	%f687, %f686, %f681, %p162;
	selp.f32 	%f127, 0f3F800000, 0f00000000, %p155;
	add.s64 	%rd62, %rd1, %rd61;
	mov.b32 	%r163, %f216;
	mov.b32 	%r162, %f6;
	mov.b32 	%r181, %f285;
	mov.b32 	%r180, %f15;
	mov.b32 	%r199, %f354;
	mov.b32 	%r198, %f24;
	mov.b32 	%r217, %f422;
	mov.b32 	%r216, %f33;
	mov.b32 	%r245, %f528;
	mov.b32 	%r244, %f56;
	mov.b32 	%r248, %f525;
	mov.b32 	%r247, %f55;
	xor.b32  	%r291, %r294, -2147483648;
	xor.b32  	%r290, %r293, -2147483648;
	mul.f32 	%f128, %f687, %f127;
	mul.f32 	%f129, %f684, %f127;
	ld.param.u64 	%rd2, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_6];
	ld.param.u64 	%rd3, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_7];
	shl.b32 	%r10, %r3, 2;
	and.b32  	%r11, %r3, 2;
	ld.global.u32 	%r12, [%rd62];
	// begin inline asm
	cvt.rn.f16x2.f32 %r161, %r163, %r162;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r179, %r181, %r180;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r197, %r199, %r198;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r215, %r217, %r216;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r243, %r245, %r244;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r246, %r248, %r247;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r286, %r288, %r287;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r289, %r291, %r290;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r292, %r294, %r293;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r295, %r288, %r287;
	// end inline asm
	add.f32 	%f708, %f772, %f772;
	mov.b32 	%r342, %f708;
	and.b32  	%r343, %r342, -2147483648;
	or.b32  	%r344, %r343, 1056964608;
	mov.b32 	%f709, %r344;
	add.f32 	%f710, %f708, %f709;
	cvt.rzi.f32.f32 	%f711, %f710;
	abs.f32 	%f712, %f708;
	setp.gt.f32 	%p175, %f712, 0f4B000000;
	selp.f32 	%f713, %f708, %f711, %p175;
	cvt.rzi.f32.f32 	%f714, %f708;
	setp.lt.f32 	%p176, %f712, 0f3F000000;
	selp.f32 	%f715, %f714, %f713, %p176;
	cvt.rzi.s32.f32 	%r345, %f715;
	fma.rn.f32 	%f716, %f715, 0fBF000000, %f772;
	mul.f32 	%f717, %f716, %f716;
	fma.rn.f32 	%f718, %f717, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f719, %f717, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f720, %f718, %f717, 0fC0A55DF6;
	fma.rn.f32 	%f721, %f719, %f717, 0f4081E0CF;
	fma.rn.f32 	%f722, %f717, %f716, 0f00000000;
	fma.rn.f32 	%f723, %f721, %f717, 0fC09DE9E6;
	fma.rn.f32 	%f724, %f720, %f722, 0f00000000;
	fma.rn.f32 	%f725, %f723, %f717, 0f3F800000;
	fma.rn.f32 	%f726, %f716, 0f40490FDB, %f724;
	and.b32  	%r346, %r345, 1;
	setp.eq.b32 	%p177, %r346, 1;
	selp.f32 	%f727, %f725, %f726, %p177;
	selp.f32 	%f728, %f726, %f725, %p177;
	and.b32  	%r347, %r345, 2;
	setp.eq.s32 	%p178, %r347, 0;
	neg.f32 	%f729, %f727;
	selp.f32 	%f730, %f727, %f729, %p178;
	add.s32 	%r348, %r345, 1;
	and.b32  	%r349, %r348, 2;
	setp.eq.s32 	%p179, %r349, 0;
	sub.f32 	%f732, %f175, %f728;
	selp.f32 	%f733, %f728, %f732, %p179;
	cvt.rzi.f32.f32 	%f734, %f772;
	setp.eq.f32 	%p180, %f734, %f772;
	mul.f32 	%f735, %f772, 0f00000000;
	selp.f32 	%f736, %f735, %f730, %p180;
	abs.f32 	%f737, %f772;
	setp.gt.f32 	%p181, %f737, 0f4B800000;
	add.f32 	%f738, %f736, 0f3F800000;
	selp.f32 	%f739, %f738, %f733, %p181;
	mul.f32 	%f740, %f739, %f127;
	mul.f32 	%f741, %f736, %f127;
	mov.b32 	%r332, %f740;
	mov.b32 	%r331, %f128;
	// begin inline asm
	cvt.rn.f16x2.f32 %r330, %r332, %r331;
	// end inline asm
	mov.b32 	%r338, %f741;
	xor.b32  	%r335, %r338, -2147483648;
	mov.b32 	%r337, %f129;
	xor.b32  	%r334, %r337, -2147483648;
	// begin inline asm
	cvt.rn.f16x2.f32 %r333, %r335, %r334;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r336, %r338, %r337;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r339, %r332, %r331;
	// end inline asm
	shl.b32 	%r351, %r6, 12;
	and.b32  	%r352, %r10, 12;
	and.b32  	%r353, %r5, 3840;
	and.b32  	%r354, %r1, 1;
	shl.b32 	%r355, %r1, 2;
	and.b32  	%r356, %r355, 24;
	or.b32  	%r357, %r69, %r354;
	or.b32  	%r358, %r357, %r356;
	or.b32  	%r104, %r358, %r70;
	and.b32  	%r359, %r10, 16;
	or.b32  	%r360, %r353, %r352;
	or.b32  	%r361, %r360, %r359;
	or.b32  	%r105, %r361, %r351;
	add.s32 	%r106, %r105, 262144;
	add.s32 	%r107, %r105, 524288;
	add.s32 	%r108, %r105, 786432;
	and.b32  	%r109, %r3, 8;
	shl.b32 	%r362, %r3, 4;
	or.b32  	%r363, %r362, %r109;
	shr.u32 	%r364, %r363, 2;
	and.b32  	%r365, %r364, 14;
	shr.u32 	%r366, %r3, 4;
	mul.lo.s32 	%r367, %r366, 65;
	shr.u32 	%r368, %r1, 1;
	mul.lo.s32 	%r369, %r368, 289;
	mul.lo.s32 	%r370, %r354, 130;
	add.s32 	%r371, %r369, %r367;
	add.s32 	%r372, %r371, %r359;
	add.s32 	%r373, %r372, %r370;
	add.s32 	%r374, %r373, %r365;
	mul.wide.u32 	%rd63, %r374, 4;
	mov.u64 	%rd64, shmem;
	add.s64 	%rd11, %rd64, %rd63;
	cvt.u64.u32 	%rd65, %r365;
	cvt.u64.u32 	%rd66, %r370;
	cvt.u64.u32 	%rd67, %r359;
	cvt.u64.u32 	%rd68, %r369;
	cvt.u64.u32 	%rd69, %r367;
	add.s64 	%rd70, %rd69, %rd68;
	add.s64 	%rd71, %rd70, %rd67;
	add.s64 	%rd72, %rd71, %rd66;
	add.s64 	%rd73, %rd72, %rd65;
	shl.b64 	%rd74, %rd73, 2;
	add.s64 	%rd12, %rd64, %rd74;
	or.b32  	%r375, %r368, 8;
	mul.lo.s32 	%r376, %r375, 289;
	add.s32 	%r377, %r359, %r367;
	add.s32 	%r378, %r377, %r370;
	add.s32 	%r379, %r378, %r376;
	add.s32 	%r380, %r379, %r365;
	mul.wide.u32 	%rd75, %r380, 4;
	add.s64 	%rd13, %rd64, %rd75;
	add.s32 	%r381, %r378, 32;
	add.s32 	%r382, %r381, %r376;
	add.s32 	%r383, %r382, %r365;
	mul.wide.s32 	%rd76, %r383, 4;
	add.s64 	%rd14, %rd64, %rd76;
	cvt.u64.u32 	%rd77, %r376;
	add.s64 	%rd78, %rd69, %rd67;
	add.s64 	%rd79, %rd78, %rd66;
	add.s64 	%rd80, %rd79, %rd77;
	add.s64 	%rd81, %rd80, %rd65;
	shl.b64 	%rd82, %rd81, 2;
	add.s64 	%rd15, %rd64, %rd82;
	add.s32 	%r384, %r378, 33;
	add.s32 	%r385, %r384, %r376;
	add.s32 	%r386, %r385, %r365;
	mul.wide.s32 	%rd83, %r386, 4;
	add.s64 	%rd16, %rd64, %rd83;
	or.b32  	%r387, %r368, 16;
	mul.lo.s32 	%r388, %r387, 289;
	add.s32 	%r389, %r378, %r388;
	add.s32 	%r390, %r389, %r365;
	mul.wide.u32 	%rd84, %r390, 4;
	add.s64 	%rd17, %rd64, %rd84;
	add.s32 	%r391, %r381, %r388;
	add.s32 	%r392, %r391, %r365;
	mul.wide.s32 	%rd85, %r392, 4;
	add.s64 	%rd18, %rd64, %rd85;
	cvt.u64.u32 	%rd86, %r388;
	add.s64 	%rd87, %rd79, %rd86;
	add.s64 	%rd88, %rd87, %rd65;
	shl.b64 	%rd89, %rd88, 2;
	add.s64 	%rd19, %rd64, %rd89;
	add.s32 	%r393, %r384, %r388;
	add.s32 	%r394, %r393, %r365;
	mul.wide.s32 	%rd90, %r394, 4;
	add.s64 	%rd20, %rd64, %rd90;
	or.b32  	%r395, %r368, 24;
	mul.lo.s32 	%r396, %r395, 289;
	add.s32 	%r397, %r378, %r396;
	add.s32 	%r398, %r397, %r365;
	mul.wide.u32 	%rd91, %r398, 4;
	add.s64 	%rd21, %rd64, %rd91;
	add.s32 	%r399, %r381, %r396;
	add.s32 	%r400, %r399, %r365;
	mul.wide.s32 	%rd92, %r400, 4;
	add.s64 	%rd22, %rd64, %rd92;
	cvt.u64.u32 	%rd93, %r396;
	add.s64 	%rd94, %rd79, %rd93;
	add.s64 	%rd95, %rd94, %rd65;
	shl.b64 	%rd96, %rd95, 2;
	add.s64 	%rd23, %rd64, %rd96;
	add.s32 	%r401, %r384, %r396;
	add.s32 	%r402, %r401, %r365;
	mul.wide.s32 	%rd97, %r402, 4;
	add.s64 	%rd24, %rd64, %rd97;
	shl.b32 	%r403, %r1, 1;
	or.b32  	%r404, %r359, %r403;
	shl.b32 	%r405, %r3, 1;
	and.b32  	%r406, %r405, 32;
	or.b32  	%r407, %r404, %r406;
	shr.u32 	%r408, %r407, 2;
	and.b32  	%r409, %r2, 32;
	and.b32  	%r410, %r405, 16;
	or.b32  	%r411, %r410, %r409;
	mad.lo.s32 	%r412, %r15, 130, %r411;
	mad.lo.s32 	%r413, %r14, 65, %r412;
	add.s32 	%r414, %r413, %r408;
	or.b32  	%r415, %r10, %r11;
	bfe.u32 	%r416, %r415, 1, 2;
	or.b32  	%r417, %r411, %r408;
	mad.lo.s32 	%r418, %r416, 65, %r417;
	add.s32 	%r419, %r359, %r369;
	add.s32 	%r420, %r419, %r365;
	add.s32 	%r421, %r376, %r359;
	add.s32 	%r422, %r421, %r365;
	add.s32 	%r423, %r388, %r359;
	add.s32 	%r424, %r423, %r365;
	add.s32 	%r425, %r396, %r359;
	add.s32 	%r426, %r425, %r365;
	shl.b32 	%r427, %r8, 15;
	add.s32 	%r428, %r427, -98304;
	shl.b32 	%r429, %r4, 3;
	or.b32  	%r430, %r429, %r68;
	and.b32  	%r431, %r355, 4;
	or.b32  	%r432, %r430, %r431;
	shl.b32 	%r433, %r432, 5;
	shl.b32 	%r434, %r1, 14;
	and.b32  	%r110, %r434, 98304;
	or.b32  	%r435, %r433, %r352;
	or.b32  	%r111, %r435, %r359;
	cvt.s64.s32 	%rd25, %r428;
	and.b32  	%r436, %r403, 2;
	or.b32  	%r437, %r436, %r366;
	mul.lo.s32 	%r438, %r437, 65;
	add.s32 	%r439, %r420, %r438;
	mul.wide.u32 	%rd98, %r439, 4;
	add.s64 	%rd26, %rd64, %rd98;
	cvt.u64.u32 	%rd99, %r438;
	add.s64 	%rd100, %rd68, %rd67;
	add.s64 	%rd101, %rd100, %rd65;
	add.s64 	%rd102, %rd101, %rd99;
	shl.b64 	%rd103, %rd102, 2;
	add.s64 	%rd27, %rd64, %rd103;
	add.s32 	%r440, %r422, %r438;
	mul.wide.u32 	%rd104, %r440, 4;
	add.s64 	%rd28, %rd64, %rd104;
	add.s64 	%rd105, %rd67, %rd77;
	add.s64 	%rd106, %rd105, %rd65;
	add.s64 	%rd107, %rd106, %rd99;
	shl.b64 	%rd108, %rd107, 2;
	add.s64 	%rd29, %rd64, %rd108;
	add.s32 	%r441, %r424, %r438;
	mul.wide.u32 	%rd109, %r441, 4;
	add.s64 	%rd30, %rd64, %rd109;
	add.s64 	%rd110, %rd67, %rd86;
	add.s64 	%rd111, %rd110, %rd65;
	add.s64 	%rd112, %rd111, %rd99;
	shl.b64 	%rd113, %rd112, 2;
	add.s64 	%rd31, %rd64, %rd113;
	add.s32 	%r442, %r426, %r438;
	mul.wide.u32 	%rd114, %r442, 4;
	add.s64 	%rd32, %rd64, %rd114;
	add.s64 	%rd115, %rd67, %rd93;
	add.s64 	%rd116, %rd115, %rd65;
	add.s64 	%rd117, %rd116, %rd99;
	shl.b64 	%rd118, %rd117, 2;
	add.s64 	%rd33, %rd64, %rd118;
	mul.wide.u32 	%rd119, %r418, 4;
	add.s64 	%rd34, %rd64, %rd119;
	mul.wide.u32 	%rd120, %r414, 4;
	add.s64 	%rd35, %rd64, %rd120;
	setp.eq.s32 	%p183, %r109, 0;
	mov.u16 	%rs102, 25600;
	mov.u16 	%rs76, 21504;
	mov.u16 	%rs110, 18432;
	mov.u16 	%rs98, -14592;
	setp.lt.u32 	%p197, %r1, 6;
	mov.u32 	%r1106, %r1097;
	mov.u32 	%r1113, %r1097;
	mov.u32 	%r1108, %r1097;
	mov.u32 	%r1109, %r1097;
	bra.uni 	LBB0_85;
LBB0_89:                                // %L15163
                                        //   in Loop: Header=BB0_85 Depth=1
	setp.ne.s32 	%p212, %r1106, 130816;
	add.s32 	%r1106, %r1106, 256;
	add.s32 	%r1094, %r1106, %r6;
	setp.gt.s32 	%p213, %r7, %r1094;
	and.pred  	%p214, %p212, %p213;
	@%p214 bra 	LBB0_85;
	bra.uni 	LBB0_90;
LBB0_85:                                // %L1195
                                        // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_86 Depth 2
	or.b32  	%r508, %r104, %r1106;
	shl.b32 	%r509, %r508, 12;
	add.s32 	%r510, %r105, %r509;
	shr.s32 	%r511, %r510, 31;
	shr.u32 	%r512, %r511, 3;
	add.s32 	%r513, %r510, %r512;
	shr.s32 	%r514, %r513, 29;
	setp.lt.s32 	%p184, %r510, 0;
	and.b32  	%r515, %r513, -536870912;
	setp.ne.s32 	%p185, %r515, %r510;
	and.pred  	%p186, %p184, %p185;
	selp.u32 	%r516, 1, 0, %p186;
	sub.s32 	%r517, %r516, %r514;
	shl.b32 	%r518, %r517, 29;
	add.s32 	%r519, %r518, %r510;
	mul.wide.s32 	%rd121, %r519, 4;
	add.s64 	%rd122, %rd2, %rd121;
	ld.global.v4.u32 	{%r520, %r521, %r522, %r523}, [%rd122];
	add.s32 	%r524, %r106, %r509;
	shr.s32 	%r525, %r524, 31;
	shr.u32 	%r526, %r525, 3;
	add.s32 	%r527, %r524, %r526;
	shr.s32 	%r528, %r527, 29;
	setp.lt.s32 	%p187, %r524, 0;
	and.b32  	%r529, %r527, -536870912;
	setp.ne.s32 	%p188, %r529, %r524;
	and.pred  	%p189, %p187, %p188;
	selp.u32 	%r530, 1, 0, %p189;
	sub.s32 	%r531, %r530, %r528;
	shl.b32 	%r532, %r531, 29;
	add.s32 	%r533, %r532, %r524;
	mul.wide.s32 	%rd123, %r533, 4;
	add.s64 	%rd124, %rd2, %rd123;
	ld.global.v4.u32 	{%r534, %r535, %r536, %r537}, [%rd124];
	add.s32 	%r538, %r107, %r509;
	shr.s32 	%r539, %r538, 31;
	shr.u32 	%r540, %r539, 3;
	add.s32 	%r541, %r538, %r540;
	shr.s32 	%r542, %r541, 29;
	setp.lt.s32 	%p190, %r538, 0;
	and.b32  	%r543, %r541, -536870912;
	setp.ne.s32 	%p191, %r543, %r538;
	and.pred  	%p192, %p190, %p191;
	selp.u32 	%r544, 1, 0, %p192;
	sub.s32 	%r545, %r544, %r542;
	shl.b32 	%r546, %r545, 29;
	add.s32 	%r547, %r546, %r538;
	mul.wide.s32 	%rd125, %r547, 4;
	add.s64 	%rd126, %rd2, %rd125;
	ld.global.v4.u32 	{%r548, %r549, %r550, %r551}, [%rd126];
	add.s32 	%r552, %r108, %r509;
	shr.s32 	%r553, %r552, 31;
	shr.u32 	%r554, %r553, 3;
	add.s32 	%r555, %r552, %r554;
	shr.s32 	%r556, %r555, 29;
	setp.lt.s32 	%p193, %r552, 0;
	and.b32  	%r557, %r555, -536870912;
	setp.ne.s32 	%p194, %r557, %r552;
	and.pred  	%p195, %p193, %p194;
	selp.u32 	%r558, 1, 0, %p195;
	sub.s32 	%r559, %r558, %r556;
	shl.b32 	%r560, %r559, 29;
	add.s32 	%r561, %r560, %r552;
	mul.wide.s32 	%rd127, %r561, 4;
	add.s64 	%rd128, %rd2, %rd127;
	ld.global.v4.u32 	{%r562, %r563, %r564, %r565}, [%rd128];
	selp.b32 	%r566, %r522, %r520, %p183;
	shfl.sync.bfly.b32	%r567, %r566, 8, 31, -1;
	selp.b32 	%r444, %r520, %r567, %p183;
	selp.b32 	%r445, %r567, %r522, %p183;
	selp.b32 	%r568, %r523, %r521, %p183;
	shfl.sync.bfly.b32	%r569, %r568, 8, 31, -1;
	selp.b32 	%r452, %r521, %r569, %p183;
	selp.b32 	%r453, %r569, %r523, %p183;
	selp.b32 	%r570, %r536, %r534, %p183;
	shfl.sync.bfly.b32	%r571, %r570, 8, 31, -1;
	selp.b32 	%r460, %r534, %r571, %p183;
	selp.b32 	%r461, %r571, %r536, %p183;
	selp.b32 	%r572, %r537, %r535, %p183;
	shfl.sync.bfly.b32	%r573, %r572, 8, 31, -1;
	selp.b32 	%r468, %r535, %r573, %p183;
	selp.b32 	%r469, %r573, %r537, %p183;
	selp.b32 	%r574, %r550, %r548, %p183;
	shfl.sync.bfly.b32	%r575, %r574, 8, 31, -1;
	selp.b32 	%r476, %r548, %r575, %p183;
	selp.b32 	%r477, %r575, %r550, %p183;
	selp.b32 	%r576, %r551, %r549, %p183;
	shfl.sync.bfly.b32	%r577, %r576, 8, 31, -1;
	selp.b32 	%r484, %r549, %r577, %p183;
	selp.b32 	%r485, %r577, %r551, %p183;
	selp.b32 	%r578, %r564, %r562, %p183;
	shfl.sync.bfly.b32	%r579, %r578, 8, 31, -1;
	selp.b32 	%r492, %r562, %r579, %p183;
	selp.b32 	%r493, %r579, %r564, %p183;
	selp.b32 	%r580, %r565, %r563, %p183;
	shfl.sync.bfly.b32	%r581, %r580, 8, 31, -1;
	selp.b32 	%r500, %r563, %r581, %p183;
	selp.b32 	%r501, %r581, %r565, %p183;
	mov.u32 	%r502, 21520;
	// begin inline asm
	prmt.b32 %r443, %r444, %r445, %r502;
	// end inline asm
	mov.u32 	%r506, 30258;
	// begin inline asm
	prmt.b32 %r447, %r444, %r445, %r506;
	// end inline asm
	// begin inline asm
	prmt.b32 %r451, %r452, %r453, %r502;
	// end inline asm
	// begin inline asm
	prmt.b32 %r455, %r452, %r453, %r506;
	// end inline asm
	// begin inline asm
	prmt.b32 %r459, %r460, %r461, %r502;
	// end inline asm
	// begin inline asm
	prmt.b32 %r463, %r460, %r461, %r506;
	// end inline asm
	// begin inline asm
	prmt.b32 %r467, %r468, %r469, %r502;
	// end inline asm
	// begin inline asm
	prmt.b32 %r471, %r468, %r469, %r506;
	// end inline asm
	// begin inline asm
	prmt.b32 %r475, %r476, %r477, %r502;
	// end inline asm
	// begin inline asm
	prmt.b32 %r479, %r476, %r477, %r506;
	// end inline asm
	// begin inline asm
	prmt.b32 %r483, %r484, %r485, %r502;
	// end inline asm
	// begin inline asm
	prmt.b32 %r487, %r484, %r485, %r506;
	// end inline asm
	// begin inline asm
	prmt.b32 %r491, %r492, %r493, %r502;
	// end inline asm
	// begin inline asm
	prmt.b32 %r495, %r492, %r493, %r506;
	// end inline asm
	// begin inline asm
	prmt.b32 %r499, %r500, %r501, %r502;
	// end inline asm
	// begin inline asm
	prmt.b32 %r503, %r500, %r501, %r506;
	// end inline asm
	st.shared.u32 	[%rd11], %r443;
	st.shared.u32 	[%rd12+128], %r447;
	st.shared.u32 	[%rd12+4], %r451;
	st.shared.u32 	[%rd12+132], %r455;
	st.shared.u32 	[%rd13], %r459;
	st.shared.u32 	[%rd14], %r463;
	st.shared.u32 	[%rd15+4], %r467;
	st.shared.u32 	[%rd16], %r471;
	st.shared.u32 	[%rd17], %r475;
	st.shared.u32 	[%rd18], %r479;
	st.shared.u32 	[%rd19+4], %r483;
	st.shared.u32 	[%rd20], %r487;
	st.shared.u32 	[%rd21], %r491;
	st.shared.u32 	[%rd22], %r495;
	st.shared.u32 	[%rd23+4], %r499;
	st.shared.u32 	[%rd24], %r503;
	bar.sync 	0;
	mov.u32 	%r1110, 256;
	mov.u64 	%rd179, %rd35;
	mov.u64 	%rd180, %rd34;
	mov.u32 	%r1111, %r1109;
	mov.u32 	%r1112, %r1108;
LBB0_86:                                // %L8903
                                        //   Parent Loop BB0_85 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	mov.u32 	%r1108, %r1113;
	mov.u32 	%r1109, %r1112;
	ld.shared.u32 	%r1113, [%rd179];
	// begin inline asm
	mov.b32 %r587, {%rs102, %rs102};
	// end inline asm
	// begin inline asm
	mov.b32 %r598, {%rs76, %rs76};
	// end inline asm
	xor.b32  	%r586, %r1113, -2004318072;
	mov.u32 	%r585, 983055;
	// begin inline asm
	lop3.b32 %r584, %r585, %r586, %r587, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r588, {%rs110, %rs110};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r589, %r587, %r588;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r592, %r584, %r589;
	// end inline asm
	mov.u32 	%r596, 15728880;
	// begin inline asm
	lop3.b32 %r595, %r596, %r586, %r598, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r599, {%rs110, %rs110};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r600, %r598, %r599;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r603, %r595, %r600;
	// end inline asm
	shr.u32 	%r608, %r586, 8;
	// begin inline asm
	lop3.b32 %r606, %r585, %r608, %r587, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r610, {%rs110, %rs110};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r611, %r587, %r610;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r614, %r606, %r611;
	// end inline asm
	// begin inline asm
	lop3.b32 %r617, %r596, %r608, %r598, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r621, {%rs110, %rs110};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r622, %r598, %r621;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r625, %r617, %r622;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r628, %r215;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r630, %r628, %r592;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r633, %r215;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r635, %r633, %r603;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r638, %r215;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r640, %r638, %r614;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r643, %r215;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r645, %r643, %r625;
	// end inline asm
	// begin inline asm
	mov.b32 %r653, {%rs102, %rs102};
	// end inline asm
	// begin inline asm
	mov.b32 %r664, {%rs76, %rs76};
	// end inline asm
	xor.b32  	%r652, %r1111, -2004318072;
	// begin inline asm
	lop3.b32 %r650, %r585, %r652, %r653, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r654, {%rs110, %rs110};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r655, %r653, %r654;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r658, %r650, %r655;
	// end inline asm
	// begin inline asm
	lop3.b32 %r661, %r596, %r652, %r664, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r665, {%rs110, %rs110};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r666, %r664, %r665;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r669, %r661, %r666;
	// end inline asm
	shr.u32 	%r674, %r652, 8;
	// begin inline asm
	lop3.b32 %r672, %r585, %r674, %r653, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r676, {%rs110, %rs110};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r677, %r653, %r676;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r680, %r672, %r677;
	// end inline asm
	// begin inline asm
	lop3.b32 %r683, %r596, %r674, %r664, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r687, {%rs110, %rs110};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r688, %r664, %r687;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r691, %r683, %r688;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r694, %r161, %r658, %r630;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r698, %r161, %r669, %r635;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r702, %r161, %r680, %r640;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r706, %r161, %r691, %r645;
	// end inline asm
	// begin inline asm
	mov.b32 %r715, {%rs102, %rs102};
	// end inline asm
	// begin inline asm
	mov.b32 %r726, {%rs76, %rs76};
	// end inline asm
	xor.b32  	%r714, %r1109, -2004318072;
	// begin inline asm
	lop3.b32 %r712, %r585, %r714, %r715, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r716, {%rs110, %rs110};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r717, %r715, %r716;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r720, %r712, %r717;
	// end inline asm
	// begin inline asm
	lop3.b32 %r723, %r596, %r714, %r726, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r727, {%rs110, %rs110};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r728, %r726, %r727;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r731, %r723, %r728;
	// end inline asm
	shr.u32 	%r736, %r714, 8;
	// begin inline asm
	lop3.b32 %r734, %r585, %r736, %r715, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r738, {%rs110, %rs110};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r739, %r715, %r738;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r742, %r734, %r739;
	// end inline asm
	// begin inline asm
	lop3.b32 %r745, %r596, %r736, %r726, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r749, {%rs110, %rs110};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r750, %r726, %r749;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r753, %r745, %r750;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r756, %r179;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r758, %r756, %r720, %r694;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r762, %r179;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r764, %r762, %r731, %r698;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r768, %r179;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r770, %r768, %r742, %r702;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r774, %r179;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r776, %r774, %r753, %r706;
	// end inline asm
	// begin inline asm
	mov.b32 %r785, {%rs102, %rs102};
	// end inline asm
	// begin inline asm
	mov.b32 %r796, {%rs76, %rs76};
	// end inline asm
	xor.b32  	%r784, %r1108, -2004318072;
	// begin inline asm
	lop3.b32 %r782, %r585, %r784, %r785, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r786, {%rs110, %rs110};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r787, %r785, %r786;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r790, %r782, %r787;
	// end inline asm
	// begin inline asm
	lop3.b32 %r793, %r596, %r784, %r796, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r797, {%rs110, %rs110};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r798, %r796, %r797;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r801, %r793, %r798;
	// end inline asm
	shr.u32 	%r806, %r784, 8;
	// begin inline asm
	lop3.b32 %r804, %r585, %r806, %r785, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r808, {%rs110, %rs110};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r809, %r785, %r808;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r812, %r804, %r809;
	// end inline asm
	// begin inline asm
	lop3.b32 %r815, %r596, %r806, %r796, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r819, {%rs110, %rs110};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r820, %r796, %r819;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r823, %r815, %r820;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r849, %r197, %r790, %r758;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r846, %r197, %r801, %r764;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r858, %r197, %r812, %r770;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r855, %r197, %r823, %r776;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r842, %r246;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r844, %r842, %r846;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r847, %r243, %r849, %r844;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r851, %r246;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r853, %r851, %r855;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r856, %r243, %r858, %r853;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r860, %r246, %r849;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r863, %r243, %r846, %r860;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r867, %r246, %r858;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r870, %r243, %r855, %r867;
	// end inline asm
	mov.u32 	%r882, 0;
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r874, %r875}, {%r286, %r292, %r289, %r295}, {%r847, %r863}, {%r882, %r882};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r884, %r885}, {%r286, %r292, %r289, %r295}, {%r856, %r870}, {%r882, %r882};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r894, %r895}, {%r330, %r336, %r333, %r339}, {%r874, %r875}, {%r882, %r882};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r904, %r905}, {%r330, %r336, %r333, %r339}, {%r884, %r885}, {%r882, %r882};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r914, %r12, %r894;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r917, %r12, %r895;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r920, %r12, %r904;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r923, %r12, %r905;
	// end inline asm
	// begin inline asm
	mov.b32 %r926, {%rs98, %rs98};
	// end inline asm
	mov.u16 	%rs87, 18176;
	// begin inline asm
	mov.b32 %r927, {%rs87, %rs87};
	// end inline asm
	// begin inline asm
	max.f16x2 %r928, %r914, %r926;
	// end inline asm
	// begin inline asm
	min.f16x2 %r931, %r928, %r927;
	// end inline asm
	// begin inline asm
	mov.b32 %r934, {%rs98, %rs98};
	// end inline asm
	// begin inline asm
	mov.b32 %r935, {%rs87, %rs87};
	// end inline asm
	// begin inline asm
	max.f16x2 %r936, %r917, %r934;
	// end inline asm
	// begin inline asm
	min.f16x2 %r939, %r936, %r935;
	// end inline asm
	// begin inline asm
	mov.b32 %r942, {%rs98, %rs98};
	// end inline asm
	// begin inline asm
	mov.b32 %r943, {%rs87, %rs87};
	// end inline asm
	// begin inline asm
	max.f16x2 %r944, %r920, %r942;
	// end inline asm
	// begin inline asm
	min.f16x2 %r947, %r944, %r943;
	// end inline asm
	// begin inline asm
	mov.b32 %r950, {%rs98, %rs98};
	// end inline asm
	// begin inline asm
	mov.b32 %r951, {%rs87, %rs87};
	// end inline asm
	// begin inline asm
	max.f16x2 %r952, %r923, %r950;
	// end inline asm
	// begin inline asm
	min.f16x2 %r955, %r952, %r951;
	// end inline asm
	// begin inline asm
	mov.b32 %r961, {%rs102, %rs102};
	// end inline asm
	// begin inline asm
	mov.b32 %r959, {%rs110, %rs110};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r960, %r961, %r959;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r963, %r931, %r960;
	// end inline asm
	// begin inline asm
	mov.b32 %r966, {%rs110, %rs110};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r967, %r961, %r966;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r970, %r939, %r967;
	// end inline asm
	// begin inline asm
	mov.b32 %r973, {%rs110, %rs110};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r974, %r961, %r973;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r977, %r947, %r974;
	// end inline asm
	// begin inline asm
	mov.b32 %r980, {%rs110, %rs110};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r981, %r961, %r980;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r984, %r955, %r981;
	// end inline asm
	mov.u32 	%r990, 25152;
	// begin inline asm
	prmt.b32 %r987, %r963, %r977, %r990;
	// end inline asm
	// begin inline asm
	prmt.b32 %r991, %r970, %r984, %r990;
	// end inline asm
	shl.b32 	%r998, %r991, 4;
	mov.u32 	%r996, 252645135;
	// begin inline asm
	lop3.b32 %r995, %r996, %r987, %r998, 202;
	// end inline asm
	xor.b32  	%r999, %r995, -2004318072;
	st.shared.u32 	[%rd180], %r999;
	add.s32 	%r1110, %r1110, -8;
	add.s64 	%rd180, %rd180, 1156;
	add.s64 	%rd179, %rd179, 1156;
	setp.eq.s32 	%p196, %r1110, 0;
	mov.u32 	%r1111, %r1109;
	mov.u32 	%r1112, %r1108;
	@%p196 bra 	LBB0_87;
	bra.uni 	LBB0_86;
LBB0_87:                                // %guard_pass6230
                                        //   in Loop: Header=BB0_85 Depth=1
	bar.sync 	0;
	ld.shared.u32 	%r1005, [%rd26];
	ld.shared.u32 	%r1006, [%rd27+128];
	ld.shared.u32 	%r1013, [%rd27+4];
	ld.shared.u32 	%r1014, [%rd27+132];
	ld.shared.u32 	%r1021, [%rd28];
	ld.shared.u32 	%r1022, [%rd29+128];
	ld.shared.u32 	%r1029, [%rd29+4];
	ld.shared.u32 	%r1030, [%rd29+132];
	ld.shared.u32 	%r1037, [%rd30];
	ld.shared.u32 	%r1038, [%rd31+128];
	ld.shared.u32 	%r1045, [%rd31+4];
	ld.shared.u32 	%r1046, [%rd31+132];
	ld.shared.u32 	%r1053, [%rd32];
	ld.shared.u32 	%r1054, [%rd33+128];
	ld.shared.u32 	%r1061, [%rd33+4];
	ld.shared.u32 	%r1062, [%rd33+132];
	// begin inline asm
	prmt.b32 %r1000, %r1005, %r1006, %r502;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1004, %r1005, %r1006, %r506;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1008, %r1013, %r1014, %r502;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1012, %r1013, %r1014, %r506;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1016, %r1021, %r1022, %r502;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1020, %r1021, %r1022, %r506;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1024, %r1029, %r1030, %r502;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1028, %r1029, %r1030, %r506;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1032, %r1037, %r1038, %r502;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1036, %r1037, %r1038, %r506;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1040, %r1045, %r1046, %r502;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1044, %r1045, %r1046, %r506;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1048, %r1053, %r1054, %r502;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1052, %r1053, %r1054, %r506;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1056, %r1061, %r1062, %r502;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1060, %r1061, %r1062, %r506;
	// end inline asm
	selp.b32 	%r1064, %r1004, %r1000, %p183;
	shfl.sync.bfly.b32	%r128, %r1064, 8, 31, -1;
	selp.b32 	%r1065, %r1012, %r1008, %p183;
	shfl.sync.bfly.b32	%r129, %r1065, 8, 31, -1;
	selp.b32 	%r1066, %r1020, %r1016, %p183;
	shfl.sync.bfly.b32	%r130, %r1066, 8, 31, -1;
	selp.b32 	%r1067, %r1028, %r1024, %p183;
	shfl.sync.bfly.b32	%r131, %r1067, 8, 31, -1;
	selp.b32 	%r1068, %r1036, %r1032, %p183;
	shfl.sync.bfly.b32	%r132, %r1068, 8, 31, -1;
	selp.b32 	%r1069, %r1044, %r1040, %p183;
	shfl.sync.bfly.b32	%r133, %r1069, 8, 31, -1;
	selp.b32 	%r1070, %r1052, %r1048, %p183;
	shfl.sync.bfly.b32	%r134, %r1070, 8, 31, -1;
	selp.b32 	%r1071, %r1060, %r1056, %p183;
	shfl.sync.bfly.b32	%r135, %r1071, 8, 31, -1;
	@%p197 bra 	LBB0_89;
// %bb.88:                              // %L14262
                                        //   in Loop: Header=BB0_85 Depth=1
	selp.b32 	%r1072, %r135, %r1060, %p183;
	selp.b32 	%r1073, %r1056, %r135, %p183;
	selp.b32 	%r1074, %r134, %r1052, %p183;
	selp.b32 	%r1075, %r1048, %r134, %p183;
	selp.b32 	%r1076, %r133, %r1044, %p183;
	selp.b32 	%r1077, %r1040, %r133, %p183;
	selp.b32 	%r1078, %r132, %r1036, %p183;
	selp.b32 	%r1079, %r1032, %r132, %p183;
	selp.b32 	%r1080, %r131, %r1028, %p183;
	selp.b32 	%r1081, %r1024, %r131, %p183;
	selp.b32 	%r1082, %r130, %r1020, %p183;
	selp.b32 	%r1083, %r1016, %r130, %p183;
	selp.b32 	%r1084, %r129, %r1012, %p183;
	selp.b32 	%r1085, %r1008, %r129, %p183;
	selp.b32 	%r1086, %r128, %r1004, %p183;
	selp.b32 	%r1087, %r1000, %r128, %p183;
	shl.b32 	%r1088, %r1106, 12;
	or.b32  	%r1089, %r1088, %r110;
	or.b32  	%r1090, %r111, %r1089;
	cvt.s64.s32 	%rd129, %r1090;
	add.s64 	%rd130, %rd129, %rd25;
	shr.u64 	%rd131, %rd130, 35;
	add.s64 	%rd132, %rd130, %rd131;
	shr.s64 	%rd133, %rd132, 29;
	setp.lt.s64 	%p200, %rd130, 0;
	and.b64  	%rd134, %rd132, -536870912;
	setp.ne.s64 	%p201, %rd134, %rd130;
	and.pred  	%p202, %p200, %p201;
	selp.u64 	%rd135, 1, 0, %p202;
	sub.s64 	%rd136, %rd135, %rd133;
	shl.b64 	%rd137, %rd136, 29;
	add.s64 	%rd138, %rd137, %rd130;
	shl.b64 	%rd139, %rd138, 2;
	add.s64 	%rd140, %rd3, %rd139;
	st.global.v4.u32 	[%rd140], {%r1087, %r1085, %r1086, %r1084};
	or.b32  	%r1091, %r1090, 262144;
	cvt.s64.s32 	%rd141, %r1091;
	add.s64 	%rd142, %rd141, %rd25;
	shr.u64 	%rd143, %rd142, 35;
	add.s64 	%rd144, %rd142, %rd143;
	shr.s64 	%rd145, %rd144, 29;
	setp.lt.s64 	%p203, %rd142, 0;
	and.b64  	%rd146, %rd144, -536870912;
	setp.ne.s64 	%p204, %rd146, %rd142;
	and.pred  	%p205, %p203, %p204;
	selp.u64 	%rd147, 1, 0, %p205;
	sub.s64 	%rd148, %rd147, %rd145;
	shl.b64 	%rd149, %rd148, 29;
	add.s64 	%rd150, %rd149, %rd142;
	shl.b64 	%rd151, %rd150, 2;
	add.s64 	%rd152, %rd3, %rd151;
	st.global.v4.u32 	[%rd152], {%r1083, %r1081, %r1082, %r1080};
	or.b32  	%r1092, %r1090, 524288;
	cvt.s64.s32 	%rd153, %r1092;
	add.s64 	%rd154, %rd153, %rd25;
	shr.u64 	%rd155, %rd154, 35;
	add.s64 	%rd156, %rd154, %rd155;
	shr.s64 	%rd157, %rd156, 29;
	setp.lt.s64 	%p206, %rd154, 0;
	and.b64  	%rd158, %rd156, -536870912;
	setp.ne.s64 	%p207, %rd158, %rd154;
	and.pred  	%p208, %p206, %p207;
	selp.u64 	%rd159, 1, 0, %p208;
	sub.s64 	%rd160, %rd159, %rd157;
	shl.b64 	%rd161, %rd160, 29;
	add.s64 	%rd162, %rd161, %rd154;
	shl.b64 	%rd163, %rd162, 2;
	add.s64 	%rd164, %rd3, %rd163;
	st.global.v4.u32 	[%rd164], {%r1079, %r1077, %r1078, %r1076};
	or.b32  	%r1093, %r1090, 786432;
	cvt.s64.s32 	%rd165, %r1093;
	add.s64 	%rd166, %rd165, %rd25;
	shr.u64 	%rd167, %rd166, 35;
	add.s64 	%rd168, %rd166, %rd167;
	shr.s64 	%rd169, %rd168, 29;
	setp.lt.s64 	%p209, %rd166, 0;
	and.b64  	%rd170, %rd168, -536870912;
	setp.ne.s64 	%p210, %rd170, %rd166;
	and.pred  	%p211, %p209, %p210;
	selp.u64 	%rd171, 1, 0, %p211;
	sub.s64 	%rd172, %rd171, %rd169;
	shl.b64 	%rd173, %rd172, 29;
	add.s64 	%rd174, %rd173, %rd166;
	shl.b64 	%rd175, %rd174, 2;
	add.s64 	%rd176, %rd3, %rd175;
	st.global.v4.u32 	[%rd176], {%r1075, %r1073, %r1074, %r1072};
	bra.uni 	LBB0_89;
LBB0_90:                                // %L15174
	st.global.u32 	[%rd4], %r1097;
	ret;
LBB0_7:                                 // %L247
	mov.u32 	%r1096, 2;
	st.global.u32 	[%rd4], %r1096;
	mov.u64 	%rd177, exception1395;
	cvta.global.u64 	%rd178, %rd177;
	{ // callseq 2, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd178;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 2
	{ // callseq 3, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd36;
	st.param.b32 	[param0+8], %r136;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 3
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
LBB0_1:                                 // %L8
	mov.u64 	%rd57, exception11416;
	cvta.global.u64 	%rd58, %rd57;
	{ // callseq 0, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd58;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 0
	{ // callseq 1, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd36;
	st.param.b32 	[param0+8], %r136;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 1
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
                                        // -- End function
}
