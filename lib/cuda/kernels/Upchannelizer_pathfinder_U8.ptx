// PTX kernel code for the CUDA upchannelizer
// This file has been generated automatically by `upchan.jl`.
// Do not modify this file, your changes will be lost.

// PTX CompilerJob of MethodInstance for upchan(::Int32, ::Int32, ::Int32, ::Int32, ::Int32, ::Int32, ::CuDeviceVector{Float16x2, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int32, 1}) for sm_86, minthreads=256, blocks_per_sm=4

//
// Generated by LLVM NVPTX Back-End
//

.version 8.2
.target sm_86
.address_size 64

	// .globl	_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE // -- Begin function _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE
.func gpu_report_exception
(
	.param .b64 gpu_report_exception_param_0
)
.noreturn
{
	trap;
}
.func gpu_signal_exception
(
	.param .align 8 .b8 gpu_signal_exception_param_0[16]
)
.noreturn
{
	trap;
}
.extern .shared .align 32 .b8 shmem[];
.global .align 1 .b8 exception2671[6] = {101, 114, 114, 111, 114, 0};
.global .align 1 .b8 exception1[10] = {101, 120, 99, 101, 112, 116, 105, 111, 110, 0};
                                        // @_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE
.visible .entry _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE(
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_0[16],
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_1,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_2,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_3,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_4,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_5,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_6,
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_7[32],
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_8[32],
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_9[32],
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_10[32]
)
.reqntid 256, 1, 1
.minnctapersm 4
{
	.reg .pred 	%p<221>;
	.reg .b16 	%rs<101>;
	.reg .b32 	%r<1322>;
	.reg .f32 	%f<692>;
	.reg .b64 	%rd<248>;

// %bb.0:                               // %conversion
	ld.param.u32 	%r125, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_0+8];
	ld.param.u64 	%rd46, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_0];
	// begin inline asm
	mov.u32 %r132, %dynamic_smem_size;
	// end inline asm
	setp.gt.u32 	%p1, %r132, 73983;
	@%p1 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:                              // %L19
	ld.param.u64 	%rd47, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_10];
	ld.param.u32 	%r126, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_1];
	mov.u32 	%r1, %ctaid.x;
	shl.b32 	%r133, %r1, 8;
	mov.u32 	%r2, %tid.x;
	mov.u32 	%r3, %tid.y;
	shl.b32 	%r4, %r3, 5;
	or.b32  	%r134, %r133, %r2;
	or.b32  	%r135, %r134, %r4;
	mul.wide.u32 	%rd53, %r135, 4;
	add.s64 	%rd4, %rd47, %rd53;
	mov.u32 	%r136, 1;
	st.global.u32 	[%rd4], %r136;
	setp.gt.u32 	%p2, %r126, 32767;
	@%p2 bra 	$L__BB0_7;
// %bb.3:                               // %L119
	ld.param.u32 	%r127, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_2];
	setp.lt.s32 	%p3, %r127, %r126;
	setp.gt.s32 	%p4, %r127, 65535;
	or.pred  	%p5, %p3, %p4;
	@%p5 bra 	$L__BB0_7;
// %bb.4:                               // %L126
	ld.param.u32 	%r128, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_3];
	sub.s32 	%r137, %r127, %r126;
	and.b32  	%r138, %r137, 255;
	setp.ne.s32 	%p6, %r138, 0;
	setp.gt.u32 	%p7, %r128, 4095;
	or.pred  	%p8, %p6, %p7;
	@%p8 bra 	$L__BB0_7;
// %bb.5:                               // %L137
	ld.param.u32 	%r129, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_4];
	setp.lt.s32 	%p9, %r129, %r128;
	setp.gt.s32 	%p10, %r129, 8191;
	or.pred  	%p11, %p9, %p10;
	@%p11 bra 	$L__BB0_7;
// %bb.6:                               // %L144
	sub.s32 	%r139, %r129, %r128;
	add.s32 	%r140, %r139, 3;
	and.b32  	%r141, %r140, 31;
	setp.eq.s32 	%p12, %r141, 0;
	@%p12 bra 	$L__BB0_8;
	bra.uni 	$L__BB0_7;
$L__BB0_8:                              // %L260
	ld.param.u32 	%r130, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_5];
	setp.lt.s32 	%p13, %r130, 0;
	@%p13 bra 	$L__BB0_10;
// %bb.9:                               // %L262
	ld.param.u32 	%r131, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_6];
	setp.le.s32 	%p14, %r130, %r131;
	setp.lt.s32 	%p15, %r131, 385;
	and.pred  	%p16, %p14, %p15;
	@%p16 bra 	$L__BB0_11;
	bra.uni 	$L__BB0_10;
$L__BB0_11:                             // %pass150
	and.b32  	%r66, %r2, 3;
	or.b32  	%r67, %r66, 4;
	mov.f32 	%f109, 0f40000000;
	mov.f32 	%f110, 0f41F80000;
	div.approx.f32 	%f69, %f110, %f109;
	cvt.rn.f32.s32 	%f111, %r66;
	sub.f32 	%f112, %f111, %f69;
	mov.f32 	%f141, 0f41000000;
	div.approx.f32 	%f71, %f112, %f141;
	setp.ne.f32 	%p22, %f71, 0f00000000;
	mov.f32 	%f675, 0f3F800000;
	mov.f32 	%f668, %f675;
	@%p22 bra 	$L__BB0_12;
	bra.uni 	$L__BB0_13;
$L__BB0_12:                             // %L534
	sin.approx.f32 	%f142, %f71;
	div.approx.f32 	%f668, %f142, %f71;
$L__BB0_13:                             // %L537
	cvt.rn.f32.s32 	%f145, %r67;
	sub.f32 	%f146, %f145, %f69;
	div.approx.f32 	%f5, %f146, %f141;
	setp.eq.f32 	%p28, %f5, 0f00000000;
	mov.f32 	%f669, %f675;
	@%p28 bra 	$L__BB0_15;
// %bb.14:                              // %L554
	sin.approx.f32 	%f176, %f5;
	div.approx.f32 	%f669, %f176, %f5;
$L__BB0_15:                             // %L557
	or.b32  	%r163, %r66, 8;
	or.b32  	%r6, %r66, 12;
	cvt.rn.f32.s32 	%f180, %r163;
	sub.f32 	%f181, %f180, %f69;
	div.approx.f32 	%f9, %f181, %f141;
	setp.eq.f32 	%p34, %f9, 0f00000000;
	mov.f32 	%f670, %f675;
	@%p34 bra 	$L__BB0_17;
// %bb.16:                              // %L636
	sin.approx.f32 	%f211, %f9;
	div.approx.f32 	%f670, %f211, %f9;
$L__BB0_17:                             // %L639
	cvt.rn.f32.s32 	%f214, %r6;
	sub.f32 	%f215, %f214, %f69;
	div.approx.f32 	%f14, %f215, %f141;
	setp.eq.f32 	%p40, %f14, 0f00000000;
	mov.f32 	%f671, %f675;
	@%p40 bra 	$L__BB0_19;
// %bb.18:                              // %L656
	sin.approx.f32 	%f245, %f14;
	div.approx.f32 	%f671, %f245, %f14;
$L__BB0_19:                             // %L659
	or.b32  	%r181, %r66, 16;
	or.b32  	%r8, %r66, 20;
	cvt.rn.f32.s32 	%f249, %r181;
	sub.f32 	%f250, %f249, %f69;
	div.approx.f32 	%f18, %f250, %f141;
	setp.eq.f32 	%p46, %f18, 0f00000000;
	mov.f32 	%f672, %f675;
	@%p46 bra 	$L__BB0_21;
// %bb.20:                              // %L738
	sin.approx.f32 	%f280, %f18;
	div.approx.f32 	%f672, %f280, %f18;
$L__BB0_21:                             // %L741
	cvt.rn.f32.s32 	%f283, %r8;
	sub.f32 	%f284, %f283, %f69;
	div.approx.f32 	%f23, %f284, %f141;
	setp.eq.f32 	%p52, %f23, 0f00000000;
	mov.f32 	%f673, %f675;
	@%p52 bra 	$L__BB0_23;
// %bb.22:                              // %L758
	sin.approx.f32 	%f314, %f23;
	div.approx.f32 	%f673, %f314, %f23;
$L__BB0_23:                             // %L761
	or.b32  	%r199, %r66, 24;
	or.b32  	%r10, %r2, 28;
	cvt.rn.f32.s32 	%f318, %r199;
	sub.f32 	%f319, %f318, %f69;
	div.approx.f32 	%f27, %f319, %f141;
	setp.eq.f32 	%p58, %f27, 0f00000000;
	mov.f32 	%f674, %f675;
	@%p58 bra 	$L__BB0_25;
// %bb.24:                              // %L840
	sin.approx.f32 	%f349, %f27;
	div.approx.f32 	%f674, %f349, %f27;
$L__BB0_25:                             // %L843
	shr.u32 	%r65, %r2, 1;
	cvt.rn.f32.s32 	%f352, %r10;
	sub.f32 	%f353, %f352, %f69;
	div.approx.f32 	%f32, %f353, %f141;
	setp.eq.f32 	%p64, %f32, 0f00000000;
	@%p64 bra 	$L__BB0_27;
// %bb.26:                              // %L860
	sin.approx.f32 	%f383, %f32;
	div.approx.f32 	%f675, %f383, %f32;
$L__BB0_27:                             // %L863
	bfe.u32 	%r243, %r2, 2, 1;
	shr.u32 	%r14, %r2, 3;
	and.b32  	%r15, %r14, 2;
	and.b32  	%r16, %r65, 4;
	or.b32  	%r244, %r243, %r15;
	or.b32  	%r17, %r244, %r16;
	mul.lo.s32 	%r245, %r66, %r17;
	shl.b32 	%r246, %r245, 1;
	neg.s32 	%r247, %r246;
	cvt.rn.f32.s32 	%f454, %r247;
	div.approx.f32 	%f35, %f454, %f141;
	abs.f32 	%f686, %f35;
	setp.lt.f32 	%p79, %f686, 0f40000000;
	@%p79 bra 	$L__BB0_76;
// %bb.28:
	setp.gtu.f32 	%p80, %f686, 0f4B800000;
	@%p80 bra 	$L__BB0_72;
	bra.uni 	$L__BB0_29;
$L__BB0_72:
	mov.b32 	%r69, %f686;
	and.b32  	%r248, %r69, 8388607;
	or.b32  	%r1317, %r248, 1065353216;
	mov.b32 	%f685, %r1317;
	add.s32 	%r249, %r69, -1073741824;
	and.b32  	%r1318, %r249, -8388608;
	setp.eq.s32 	%p86, %r1318, 0;
	@%p86 bra 	$L__BB0_75;
// %bb.73:                              // %__nv_fmaf_rn.exit4.i.i.i592.preheader
	mov.f32 	%f464, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f463,%f464;
	// end inline asm
$L__BB0_74:                             // %__nv_fmaf_rn.exit4.i.i.i592
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r250, %r1318, 192937984;
	add.s32 	%r251, %r1317, %r250;
	mov.b32 	%f465, %r251;
	mul.f32 	%f466, %f463, %f465;
	sub.f32 	%f467, %f465, %f466;
	fma.rn.f32 	%f468, %f467, %f463, %f466;
	sub.f32 	%f469, %f465, %f468;
	fma.rz.f32 	%f470, %f469, %f463, %f468;
	cvt.rzi.f32.f32 	%f471, %f470;
	sub.f32 	%f685, %f465, %f471;
	sub.s32 	%r1318, %r1318, %r250;
	mov.b32 	%r1317, %f685;
	setp.ne.s32 	%p87, %r1318, 0;
	setp.ne.s32 	%p88, %r1317, 0;
	and.pred  	%p89, %p87, %p88;
	@%p89 bra 	$L__BB0_74;
$L__BB0_75:                             // %__internal_fmodf_slowpath_mod.exit.i.i594
	setp.gt.u32 	%p90, %r69, 2139095039;
	selp.f32 	%f472, 0f7FFFFFFF, 0f4B800000, %p90;
	mul.f32 	%f473, %f685, 0f34000000;
	mul.f32 	%f686, %f472, %f473;
	bra.uni 	$L__BB0_76;
$L__BB0_29:                             // %__nv_fast_fdividef.exit.i.i.i571
	div.approx.f32 	%f456, %f686, %f109;
	cvt.rzi.f32.f32 	%f684, %f456;
	fma.rn.f32 	%f73, %f684, 0fC0000000, %f686;
	mov.b32 	%r68, %f73;
	setp.lt.u32 	%p81, %r68, 1073741824;
	@%p81 bra 	$L__BB0_71;
// %bb.30:
	setp.lt.u32 	%p82, %r68, -2147483647;
	@%p82 bra 	$L__BB0_69;
// %bb.31:
	add.f32 	%f461, %f684, 0fBF800000;
	setp.lt.f32 	%p85, %f73, 0fC0000000;
	add.f32 	%f462, %f461, 0fBF800000;
	selp.f32 	%f684, %f462, %f461, %p85;
	bra.uni 	$L__BB0_71;
$L__BB0_69:
	add.f32 	%f684, %f684, 0f3F800000;
	setp.ltu.f32 	%p83, %f73, 0f40800000;
	@%p83 bra 	$L__BB0_71;
// %bb.70:                              // %__nv_fmaf_rn.exit.i.i.i575
	add.f32 	%f457, %f684, 0f3F800000;
	fma.rn.f32 	%f459, %f109, 0fC0400000, %f73;
	setp.ge.f32 	%p84, %f459, 0f00000000;
	add.f32 	%f460, %f457, 0f3F800000;
	selp.f32 	%f684, %f460, %f457, %p84;
$L__BB0_71:                             // %__internal_fmodf_fastpath_quot.exit.i.i578
	fma.rn.f32 	%f686, %f684, 0fC0000000, %f686;
$L__BB0_76:                             // %__internal_fmodf_kernel.exit.i597
	abs.f32 	%f474, %f686;
	setp.gtu.f32 	%p91, %f474, 0f7F800000;
	@%p91 bra 	$L__BB0_78;
// %bb.77:
	mov.b32 	%r252, %f35;
	and.b32  	%r253, %r252, -2147483648;
	mov.b32 	%r254, %f686;
	or.b32  	%r255, %r253, %r254;
	mov.b32 	%f686, %r255;
$L__BB0_78:                             // %__nv_fmodf.exit598
	shl.b32 	%r76, %r2, 1;
	and.b32  	%r264, %r76, 6;
	mov.u32 	%r265, -8;
	sub.s32 	%r266, %r265, %r264;
	mul.lo.s32 	%r267, %r17, %r266;
	cvt.rn.f32.s32 	%f505, %r267;
	div.approx.f32 	%f89, %f505, %f141;
	abs.f32 	%f678, %f89;
	setp.lt.f32 	%p99, %f678, 0f40000000;
	@%p99 bra 	$L__BB0_43;
// %bb.32:
	setp.gtu.f32 	%p100, %f678, 0f4B800000;
	@%p100 bra 	$L__BB0_39;
	bra.uni 	$L__BB0_33;
$L__BB0_39:
	mov.b32 	%r19, %f678;
	and.b32  	%r268, %r19, 8388607;
	or.b32  	%r1305, %r268, 1065353216;
	mov.b32 	%f677, %r1305;
	add.s32 	%r269, %r19, -1073741824;
	and.b32  	%r1306, %r269, -8388608;
	setp.eq.s32 	%p106, %r1306, 0;
	@%p106 bra 	$L__BB0_42;
// %bb.40:                              // %__nv_fmaf_rn.exit4.i.i.i.preheader
	mov.f32 	%f516, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f515,%f516;
	// end inline asm
$L__BB0_41:                             // %__nv_fmaf_rn.exit4.i.i.i
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r270, %r1306, 192937984;
	add.s32 	%r271, %r1305, %r270;
	mov.b32 	%f517, %r271;
	mul.f32 	%f518, %f515, %f517;
	sub.f32 	%f519, %f517, %f518;
	fma.rn.f32 	%f520, %f519, %f515, %f518;
	sub.f32 	%f521, %f517, %f520;
	fma.rz.f32 	%f522, %f521, %f515, %f520;
	cvt.rzi.f32.f32 	%f523, %f522;
	sub.f32 	%f677, %f517, %f523;
	sub.s32 	%r1306, %r1306, %r270;
	mov.b32 	%r1305, %f677;
	setp.ne.s32 	%p107, %r1306, 0;
	setp.ne.s32 	%p108, %r1305, 0;
	and.pred  	%p109, %p107, %p108;
	@%p109 bra 	$L__BB0_41;
$L__BB0_42:                             // %__internal_fmodf_slowpath_mod.exit.i.i
	setp.gt.u32 	%p110, %r19, 2139095039;
	selp.f32 	%f524, 0f7FFFFFFF, 0f4B800000, %p110;
	mul.f32 	%f525, %f677, 0f34000000;
	mul.f32 	%f678, %f524, %f525;
	bra.uni 	$L__BB0_43;
$L__BB0_33:                             // %__nv_fast_fdividef.exit.i.i.i
	div.approx.f32 	%f508, %f678, %f109;
	cvt.rzi.f32.f32 	%f676, %f508;
	fma.rn.f32 	%f38, %f676, 0fC0000000, %f678;
	mov.b32 	%r18, %f38;
	setp.lt.u32 	%p101, %r18, 1073741824;
	@%p101 bra 	$L__BB0_38;
// %bb.34:
	setp.lt.u32 	%p102, %r18, -2147483647;
	@%p102 bra 	$L__BB0_36;
// %bb.35:
	add.f32 	%f513, %f676, 0fBF800000;
	setp.lt.f32 	%p105, %f38, 0fC0000000;
	add.f32 	%f514, %f513, 0fBF800000;
	selp.f32 	%f676, %f514, %f513, %p105;
	bra.uni 	$L__BB0_38;
$L__BB0_36:
	add.f32 	%f676, %f676, 0f3F800000;
	setp.ltu.f32 	%p103, %f38, 0f40800000;
	@%p103 bra 	$L__BB0_38;
// %bb.37:                              // %__nv_fmaf_rn.exit.i.i.i
	add.f32 	%f509, %f676, 0f3F800000;
	fma.rn.f32 	%f511, %f109, 0fC0400000, %f38;
	setp.ge.f32 	%p104, %f511, 0f00000000;
	add.f32 	%f512, %f509, 0f3F800000;
	selp.f32 	%f676, %f512, %f509, %p104;
$L__BB0_38:                             // %__internal_fmodf_fastpath_quot.exit.i.i
	fma.rn.f32 	%f678, %f676, 0fC0000000, %f678;
$L__BB0_43:                             // %__internal_fmodf_kernel.exit.i
	mov.f32 	%f138, 0f00000000;
	abs.f32 	%f526, %f678;
	setp.gtu.f32 	%p111, %f526, 0f7F800000;
	@%p111 bra 	$L__BB0_45;
// %bb.44:
	mov.b32 	%r272, %f89;
	and.b32  	%r273, %r272, -2147483648;
	mov.b32 	%r274, %f678;
	or.b32  	%r275, %r273, %r274;
	mov.b32 	%f678, %r275;
$L__BB0_45:                             // %__nv_fmodf.exit
	mov.f32 	%f559, 0f3F800000;
	div.approx.f32 	%f52, %f138, %f559;
	abs.f32 	%f682, %f52;
	setp.lt.f32 	%p119, %f682, 0f40000000;
	setp.gtu.f32 	%p220, %f682, 0f4B800000;
	mov.f32 	%f690, %f682;
	@%p119 bra 	$L__BB0_86;
// %bb.46:
	@%p220 bra 	$L__BB0_82;
	bra.uni 	$L__BB0_47;
$L__BB0_82:
	mov.b32 	%r78, %f682;
	and.b32  	%r296, %r78, 8388607;
	or.b32  	%r1319, %r296, 1065353216;
	mov.b32 	%f689, %r1319;
	add.s32 	%r297, %r78, -1073741824;
	and.b32  	%r1320, %r297, -8388608;
	setp.eq.s32 	%p126, %r1320, 0;
	@%p126 bra 	$L__BB0_85;
// %bb.83:                              // %__nv_fmaf_rn.exit4.i.i.i623.preheader
	// begin inline asm
	rcp.approx.ftz.f32 %f568,%f559;
	// end inline asm
$L__BB0_84:                             // %__nv_fmaf_rn.exit4.i.i.i623
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r298, %r1320, 192937984;
	add.s32 	%r299, %r1319, %r298;
	mov.b32 	%f570, %r299;
	mul.f32 	%f571, %f568, %f570;
	sub.f32 	%f572, %f570, %f571;
	fma.rn.f32 	%f573, %f572, %f568, %f571;
	sub.f32 	%f574, %f570, %f573;
	fma.rz.f32 	%f575, %f574, %f568, %f573;
	cvt.rzi.f32.f32 	%f576, %f575;
	sub.f32 	%f689, %f570, %f576;
	sub.s32 	%r1320, %r1320, %r298;
	mov.b32 	%r1319, %f689;
	setp.ne.s32 	%p127, %r1320, 0;
	setp.ne.s32 	%p128, %r1319, 0;
	and.pred  	%p129, %p127, %p128;
	@%p129 bra 	$L__BB0_84;
$L__BB0_85:                             // %__internal_fmodf_slowpath_mod.exit.i.i625
	setp.gt.u32 	%p130, %r78, 2139095039;
	selp.f32 	%f577, 0f7FFFFFFF, 0f4B800000, %p130;
	mul.f32 	%f578, %f689, 0f34000000;
	mul.f32 	%f690, %f577, %f578;
	bra.uni 	$L__BB0_86;
$L__BB0_47:                             // %__nv_fast_fdividef.exit.i.i.i602
	div.approx.f32 	%f561, %f682, %f109;
	cvt.rzi.f32.f32 	%f688, %f561;
	fma.rn.f32 	%f92, %f688, 0fC0000000, %f682;
	mov.b32 	%r77, %f92;
	setp.lt.u32 	%p121, %r77, 1073741824;
	@%p121 bra 	$L__BB0_81;
// %bb.48:
	setp.lt.u32 	%p122, %r77, -2147483647;
	@%p122 bra 	$L__BB0_79;
// %bb.49:
	add.f32 	%f566, %f688, 0fBF800000;
	setp.lt.f32 	%p125, %f92, 0fC0000000;
	add.f32 	%f567, %f566, 0fBF800000;
	selp.f32 	%f688, %f567, %f566, %p125;
	bra.uni 	$L__BB0_81;
$L__BB0_79:
	add.f32 	%f688, %f688, 0f3F800000;
	setp.ltu.f32 	%p123, %f92, 0f40800000;
	@%p123 bra 	$L__BB0_81;
// %bb.80:                              // %__nv_fmaf_rn.exit.i.i.i606
	add.f32 	%f562, %f688, 0f3F800000;
	fma.rn.f32 	%f564, %f109, 0fC0400000, %f92;
	setp.ge.f32 	%p124, %f564, 0f00000000;
	add.f32 	%f565, %f562, 0f3F800000;
	selp.f32 	%f688, %f565, %f562, %p124;
$L__BB0_81:                             // %__internal_fmodf_fastpath_quot.exit.i.i609
	fma.rn.f32 	%f690, %f688, 0fC0000000, %f682;
$L__BB0_86:                             // %__internal_fmodf_kernel.exit.i628
	abs.f32 	%f579, %f690;
	setp.gtu.f32 	%p131, %f579, 0f7F800000;
	mov.b32 	%r300, %f52;
	and.b32  	%r85, %r300, -2147483648;
	@%p131 bra 	$L__BB0_88;
// %bb.87:
	mov.b32 	%r301, %f690;
	or.b32  	%r302, %r85, %r301;
	mov.b32 	%f690, %r302;
$L__BB0_88:                             // %__nv_fmodf.exit629
	@%p119 bra 	$L__BB0_61;
// %bb.50:
	@%p220 bra 	$L__BB0_57;
	bra.uni 	$L__BB0_51;
$L__BB0_57:
	mov.b32 	%r33, %f682;
	and.b32  	%r311, %r33, 8388607;
	or.b32  	%r1307, %r311, 1065353216;
	mov.b32 	%f681, %r1307;
	add.s32 	%r312, %r33, -1073741824;
	and.b32  	%r1308, %r312, -8388608;
	setp.eq.s32 	%p147, %r1308, 0;
	@%p147 bra 	$L__BB0_60;
// %bb.58:                              // %__nv_fmaf_rn.exit4.i.i.i561.preheader
	// begin inline asm
	rcp.approx.ftz.f32 %f621,%f559;
	// end inline asm
$L__BB0_59:                             // %__nv_fmaf_rn.exit4.i.i.i561
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r313, %r1308, 192937984;
	add.s32 	%r314, %r1307, %r313;
	mov.b32 	%f623, %r314;
	mul.f32 	%f624, %f621, %f623;
	sub.f32 	%f625, %f623, %f624;
	fma.rn.f32 	%f626, %f625, %f621, %f624;
	sub.f32 	%f627, %f623, %f626;
	fma.rz.f32 	%f628, %f627, %f621, %f626;
	cvt.rzi.f32.f32 	%f629, %f628;
	sub.f32 	%f681, %f623, %f629;
	sub.s32 	%r1308, %r1308, %r313;
	mov.b32 	%r1307, %f681;
	setp.ne.s32 	%p148, %r1308, 0;
	setp.ne.s32 	%p149, %r1307, 0;
	and.pred  	%p150, %p148, %p149;
	@%p150 bra 	$L__BB0_59;
$L__BB0_60:                             // %__internal_fmodf_slowpath_mod.exit.i.i563
	setp.gt.u32 	%p151, %r33, 2139095039;
	selp.f32 	%f630, 0f7FFFFFFF, 0f4B800000, %p151;
	mul.f32 	%f631, %f681, 0f34000000;
	mul.f32 	%f682, %f630, %f631;
	bra.uni 	$L__BB0_61;
$L__BB0_51:                             // %__nv_fast_fdividef.exit.i.i.i540
	div.approx.f32 	%f614, %f682, %f109;
	cvt.rzi.f32.f32 	%f680, %f614;
	fma.rn.f32 	%f55, %f680, 0fC0000000, %f682;
	mov.b32 	%r32, %f55;
	setp.lt.u32 	%p142, %r32, 1073741824;
	@%p142 bra 	$L__BB0_56;
// %bb.52:
	setp.lt.u32 	%p143, %r32, -2147483647;
	@%p143 bra 	$L__BB0_54;
// %bb.53:
	add.f32 	%f619, %f680, 0fBF800000;
	setp.lt.f32 	%p146, %f55, 0fC0000000;
	add.f32 	%f620, %f619, 0fBF800000;
	selp.f32 	%f680, %f620, %f619, %p146;
	bra.uni 	$L__BB0_56;
$L__BB0_54:
	add.f32 	%f680, %f680, 0f3F800000;
	setp.ltu.f32 	%p144, %f55, 0f40800000;
	@%p144 bra 	$L__BB0_56;
// %bb.55:                              // %__nv_fmaf_rn.exit.i.i.i544
	add.f32 	%f615, %f680, 0f3F800000;
	fma.rn.f32 	%f617, %f109, 0fC0400000, %f55;
	setp.ge.f32 	%p145, %f617, 0f00000000;
	add.f32 	%f618, %f615, 0f3F800000;
	selp.f32 	%f680, %f618, %f615, %p145;
$L__BB0_56:                             // %__internal_fmodf_fastpath_quot.exit.i.i547
	fma.rn.f32 	%f682, %f680, 0fC0000000, %f682;
$L__BB0_61:                             // %__internal_fmodf_kernel.exit.i566
	abs.f32 	%f632, %f682;
	setp.gtu.f32 	%p152, %f632, 0f7F800000;
	@%p152 bra 	$L__BB0_63;
// %bb.62:
	mov.b32 	%r315, %f682;
	or.b32  	%r316, %r85, %r315;
	mov.b32 	%f682, %r316;
$L__BB0_63:                             // %__nv_fmodf.exit567
	setp.le.s32 	%p161, %r127, %r126;
	mov.u32 	%r1303, 0;
	@%p161 bra 	$L__BB0_91;
// %bb.64:                              // %L1258.lr.ph
	mov.f32 	%f113, 0f42040000;
	mul.lo.s32 	%r223, %r66, 7;
	div.approx.f32 	%f114, %f112, %f113;
	div.approx.f32 	%f148, %f146, %f113;
	div.approx.f32 	%f183, %f181, %f113;
	div.approx.f32 	%f217, %f215, %f113;
	div.approx.f32 	%f252, %f250, %f113;
	div.approx.f32 	%f286, %f284, %f113;
	div.approx.f32 	%f321, %f319, %f113;
	div.approx.f32 	%f355, %f353, %f113;
	add.s32 	%r233, %r223, 12;
	abs.f32 	%f115, %f114;
	abs.f32 	%f149, %f148;
	abs.f32 	%f184, %f183;
	abs.f32 	%f218, %f217;
	abs.f32 	%f253, %f252;
	abs.f32 	%f287, %f286;
	abs.f32 	%f322, %f321;
	abs.f32 	%f356, %f355;
	and.b32  	%r224, %r223, 15;
	and.b32  	%r234, %r233, 15;
	setp.gt.f32 	%p17, %f115, 0f4B800000;
	mul.f32 	%f116, %f114, 0f00000000;
	setp.gt.f32 	%p23, %f149, 0f4B800000;
	mul.f32 	%f150, %f148, 0f00000000;
	setp.gt.f32 	%p29, %f184, 0f4B800000;
	mul.f32 	%f185, %f183, 0f00000000;
	setp.gt.f32 	%p35, %f218, 0f4B800000;
	mul.f32 	%f219, %f217, 0f00000000;
	setp.gt.f32 	%p41, %f253, 0f4B800000;
	mul.f32 	%f254, %f252, 0f00000000;
	setp.gt.f32 	%p47, %f287, 0f4B800000;
	mul.f32 	%f288, %f286, 0f00000000;
	setp.gt.f32 	%p53, %f322, 0f4B800000;
	mul.f32 	%f323, %f321, 0f00000000;
	setp.gt.f32 	%p59, %f356, 0f4B800000;
	mul.f32 	%f357, %f355, 0f00000000;
	cvt.rn.f32.s32 	%f386, %r224;
	cvt.rn.f32.s32 	%f421, %r234;
	selp.f32 	%f117, %f116, %f114, %p17;
	selp.f32 	%f151, %f150, %f148, %p23;
	selp.f32 	%f186, %f185, %f183, %p29;
	selp.f32 	%f220, %f219, %f217, %p35;
	selp.f32 	%f255, %f254, %f252, %p41;
	selp.f32 	%f289, %f288, %f286, %p47;
	selp.f32 	%f324, %f323, %f321, %p53;
	selp.f32 	%f358, %f357, %f355, %p59;
	div.approx.f32 	%f388, %f386, %f141;
	div.approx.f32 	%f422, %f421, %f141;
	add.f32 	%f118, %f117, %f117;
	add.f32 	%f152, %f151, %f151;
	add.f32 	%f187, %f186, %f186;
	add.f32 	%f221, %f220, %f220;
	add.f32 	%f256, %f255, %f255;
	add.f32 	%f290, %f289, %f289;
	add.f32 	%f325, %f324, %f324;
	add.f32 	%f359, %f358, %f358;
	add.f32 	%f389, %f388, %f388;
	add.f32 	%f423, %f422, %f422;
	add.f32 	%f475, %f686, %f686;
	add.f32 	%f527, %f678, %f678;
	mov.b32 	%r146, %f118;
	mov.b32 	%r153, %f152;
	mov.b32 	%r164, %f187;
	mov.b32 	%r171, %f221;
	mov.b32 	%r182, %f256;
	mov.b32 	%r189, %f290;
	mov.b32 	%r200, %f325;
	mov.b32 	%r207, %f359;
	mov.b32 	%r225, %f389;
	mov.b32 	%r235, %f423;
	mov.b32 	%r256, %f475;
	mov.b32 	%r288, %f527;
	and.b32  	%r147, %r146, -2147483648;
	and.b32  	%r154, %r153, -2147483648;
	and.b32  	%r165, %r164, -2147483648;
	and.b32  	%r172, %r171, -2147483648;
	and.b32  	%r183, %r182, -2147483648;
	and.b32  	%r190, %r189, -2147483648;
	and.b32  	%r201, %r200, -2147483648;
	and.b32  	%r208, %r207, -2147483648;
	and.b32  	%r226, %r225, -2147483648;
	and.b32  	%r236, %r235, -2147483648;
	and.b32  	%r257, %r256, -2147483648;
	and.b32  	%r289, %r288, -2147483648;
	add.f32 	%f580, %f690, %f690;
	or.b32  	%r148, %r147, 1056964608;
	or.b32  	%r155, %r154, 1056964608;
	or.b32  	%r166, %r165, 1056964608;
	or.b32  	%r173, %r172, 1056964608;
	or.b32  	%r184, %r183, 1056964608;
	or.b32  	%r191, %r190, 1056964608;
	or.b32  	%r202, %r201, 1056964608;
	or.b32  	%r209, %r208, 1056964608;
	or.b32  	%r227, %r226, 1056964608;
	or.b32  	%r237, %r236, 1056964608;
	or.b32  	%r258, %r257, 1056964608;
	or.b32  	%r290, %r289, 1056964608;
	mov.b32 	%r303, %f580;
	mov.b32 	%f119, %r148;
	mov.b32 	%f153, %r155;
	mov.b32 	%f188, %r166;
	mov.b32 	%f222, %r173;
	mov.b32 	%f257, %r184;
	mov.b32 	%f291, %r191;
	mov.b32 	%f326, %r202;
	mov.b32 	%f360, %r209;
	mov.b32 	%f390, %r227;
	mov.b32 	%f424, %r237;
	mov.b32 	%f476, %r258;
	mov.b32 	%f528, %r290;
	and.b32  	%r304, %r303, -2147483648;
	add.f32 	%f120, %f118, %f119;
	abs.f32 	%f122, %f118;
	add.f32 	%f154, %f152, %f153;
	abs.f32 	%f156, %f152;
	add.f32 	%f189, %f187, %f188;
	abs.f32 	%f191, %f187;
	add.f32 	%f223, %f221, %f222;
	abs.f32 	%f225, %f221;
	add.f32 	%f258, %f256, %f257;
	abs.f32 	%f260, %f256;
	add.f32 	%f292, %f290, %f291;
	abs.f32 	%f294, %f290;
	add.f32 	%f327, %f325, %f326;
	abs.f32 	%f329, %f325;
	add.f32 	%f361, %f359, %f360;
	abs.f32 	%f363, %f359;
	add.f32 	%f391, %f389, %f390;
	abs.f32 	%f393, %f389;
	add.f32 	%f425, %f423, %f424;
	abs.f32 	%f427, %f423;
	add.f32 	%f477, %f475, %f476;
	abs.f32 	%f479, %f475;
	add.f32 	%f529, %f527, %f528;
	abs.f32 	%f531, %f527;
	or.b32  	%r305, %r304, 1056964608;
	cvt.rzi.f32.f32 	%f121, %f120;
	setp.gt.f32 	%p18, %f122, 0f4B000000;
	cvt.rzi.f32.f32 	%f155, %f154;
	setp.gt.f32 	%p24, %f156, 0f4B000000;
	cvt.rzi.f32.f32 	%f190, %f189;
	setp.gt.f32 	%p30, %f191, 0f4B000000;
	cvt.rzi.f32.f32 	%f224, %f223;
	setp.gt.f32 	%p36, %f225, 0f4B000000;
	cvt.rzi.f32.f32 	%f259, %f258;
	setp.gt.f32 	%p42, %f260, 0f4B000000;
	cvt.rzi.f32.f32 	%f293, %f292;
	setp.gt.f32 	%p48, %f294, 0f4B000000;
	cvt.rzi.f32.f32 	%f328, %f327;
	setp.gt.f32 	%p54, %f329, 0f4B000000;
	cvt.rzi.f32.f32 	%f362, %f361;
	setp.gt.f32 	%p60, %f363, 0f4B000000;
	cvt.rzi.f32.f32 	%f392, %f391;
	setp.gt.f32 	%p65, %f393, 0f4B000000;
	cvt.rzi.f32.f32 	%f426, %f425;
	setp.gt.f32 	%p72, %f427, 0f4B000000;
	cvt.rzi.f32.f32 	%f478, %f477;
	setp.gt.f32 	%p92, %f479, 0f4B000000;
	cvt.rzi.f32.f32 	%f530, %f529;
	setp.gt.f32 	%p112, %f531, 0f4B000000;
	cvt.u16.u32 	%rs1, %r2;
	mov.b32 	%f581, %r305;
	selp.f32 	%f123, %f118, %f121, %p18;
	cvt.rzi.f32.f32 	%f124, %f118;
	setp.lt.f32 	%p19, %f122, 0f3F000000;
	selp.f32 	%f157, %f152, %f155, %p24;
	cvt.rzi.f32.f32 	%f158, %f152;
	setp.lt.f32 	%p25, %f156, 0f3F000000;
	selp.f32 	%f192, %f187, %f190, %p30;
	cvt.rzi.f32.f32 	%f193, %f187;
	setp.lt.f32 	%p31, %f191, 0f3F000000;
	selp.f32 	%f226, %f221, %f224, %p36;
	cvt.rzi.f32.f32 	%f227, %f221;
	setp.lt.f32 	%p37, %f225, 0f3F000000;
	selp.f32 	%f261, %f256, %f259, %p42;
	cvt.rzi.f32.f32 	%f262, %f256;
	setp.lt.f32 	%p43, %f260, 0f3F000000;
	selp.f32 	%f295, %f290, %f293, %p48;
	cvt.rzi.f32.f32 	%f296, %f290;
	setp.lt.f32 	%p49, %f294, 0f3F000000;
	selp.f32 	%f330, %f325, %f328, %p54;
	cvt.rzi.f32.f32 	%f331, %f325;
	setp.lt.f32 	%p55, %f329, 0f3F000000;
	selp.f32 	%f364, %f359, %f362, %p60;
	cvt.rzi.f32.f32 	%f365, %f359;
	setp.lt.f32 	%p61, %f363, 0f3F000000;
	selp.f32 	%f394, %f389, %f392, %p65;
	cvt.rzi.f32.f32 	%f395, %f389;
	setp.lt.f32 	%p66, %f393, 0f3F000000;
	selp.f32 	%f428, %f423, %f426, %p72;
	cvt.rzi.f32.f32 	%f429, %f423;
	setp.lt.f32 	%p73, %f427, 0f3F000000;
	selp.f32 	%f480, %f475, %f478, %p92;
	cvt.rzi.f32.f32 	%f481, %f475;
	setp.lt.f32 	%p93, %f479, 0f3F000000;
	selp.f32 	%f532, %f527, %f530, %p112;
	cvt.rzi.f32.f32 	%f533, %f527;
	setp.lt.f32 	%p113, %f531, 0f3F000000;
	shr.u16 	%rs2, %rs1, 8;
	shl.b16 	%rs3, %rs1, 8;
	add.f32 	%f582, %f580, %f581;
	abs.f32 	%f584, %f580;
	selp.f32 	%f125, %f124, %f123, %p19;
	selp.f32 	%f159, %f158, %f157, %p25;
	selp.f32 	%f194, %f193, %f192, %p31;
	selp.f32 	%f228, %f227, %f226, %p37;
	selp.f32 	%f263, %f262, %f261, %p43;
	selp.f32 	%f297, %f296, %f295, %p49;
	selp.f32 	%f332, %f331, %f330, %p55;
	selp.f32 	%f366, %f365, %f364, %p61;
	selp.f32 	%f396, %f395, %f394, %p66;
	selp.f32 	%f430, %f429, %f428, %p73;
	selp.f32 	%f482, %f481, %f480, %p93;
	selp.f32 	%f534, %f533, %f532, %p113;
	or.b16  	%rs4, %rs3, %rs2;
	cvt.rzi.f32.f32 	%f583, %f582;
	setp.gt.f32 	%p134, %f584, 0f4B000000;
	fma.rn.f32 	%f126, %f125, 0fBF000000, %f117;
	fma.rn.f32 	%f160, %f159, 0fBF000000, %f151;
	fma.rn.f32 	%f195, %f194, 0fBF000000, %f186;
	fma.rn.f32 	%f229, %f228, 0fBF000000, %f220;
	fma.rn.f32 	%f264, %f263, 0fBF000000, %f255;
	fma.rn.f32 	%f298, %f297, 0fBF000000, %f289;
	fma.rn.f32 	%f333, %f332, 0fBF000000, %f324;
	fma.rn.f32 	%f367, %f366, 0fBF000000, %f358;
	fma.rn.f32 	%f397, %f396, 0fBF000000, %f388;
	fma.rn.f32 	%f431, %f430, 0fBF000000, %f422;
	fma.rn.f32 	%f483, %f482, 0fBF000000, %f686;
	fma.rn.f32 	%f535, %f534, 0fBF000000, %f678;
	shr.u16 	%rs6, %rs4, 4;
	selp.f32 	%f585, %f580, %f583, %p134;
	cvt.rzi.f32.f32 	%f586, %f580;
	setp.lt.f32 	%p135, %f584, 0f3F000000;
	mul.f32 	%f127, %f126, %f126;
	mul.f32 	%f161, %f160, %f160;
	mul.f32 	%f196, %f195, %f195;
	mul.f32 	%f230, %f229, %f229;
	mul.f32 	%f265, %f264, %f264;
	mul.f32 	%f299, %f298, %f298;
	mul.f32 	%f334, %f333, %f333;
	mul.f32 	%f368, %f367, %f367;
	mul.f32 	%f398, %f397, %f397;
	mul.f32 	%f432, %f431, %f431;
	mul.f32 	%f484, %f483, %f483;
	mul.f32 	%f536, %f535, %f535;
	shl.b16 	%rs5, %rs4, 4;
	and.b16  	%rs7, %rs6, 3840;
	selp.f32 	%f587, %f586, %f585, %p135;
	cvt.rzi.s32.f32 	%r149, %f125;
	fma.rn.f32 	%f128, %f127, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f129, %f127, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r156, %f159;
	fma.rn.f32 	%f162, %f161, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f163, %f161, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r167, %f194;
	fma.rn.f32 	%f197, %f196, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f198, %f196, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r174, %f228;
	fma.rn.f32 	%f231, %f230, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f232, %f230, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r185, %f263;
	fma.rn.f32 	%f266, %f265, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f267, %f265, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r192, %f297;
	fma.rn.f32 	%f300, %f299, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f301, %f299, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r203, %f332;
	fma.rn.f32 	%f335, %f334, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f336, %f334, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r210, %f366;
	fma.rn.f32 	%f369, %f368, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f370, %f368, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f399, %f398, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f400, %f398, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f433, %f432, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f434, %f432, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f485, %f484, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f486, %f484, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f537, %f536, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f538, %f536, 0f3E684E12, 0fBFAAD2E0;
	or.b16  	%rs8, %rs7, %rs5;
	fma.rn.f32 	%f588, %f587, 0fBF000000, %f690;
	add.s32 	%r150, %r149, 1;
	fma.rn.f32 	%f130, %f128, %f127, 0fC0A55DF6;
	fma.rn.f32 	%f131, %f129, %f127, 0f4081E0CF;
	fma.rn.f32 	%f132, %f127, %f126, 0f00000000;
	add.s32 	%r157, %r156, 1;
	fma.rn.f32 	%f164, %f162, %f161, 0fC0A55DF6;
	fma.rn.f32 	%f165, %f163, %f161, 0f4081E0CF;
	fma.rn.f32 	%f166, %f161, %f160, 0f00000000;
	add.s32 	%r168, %r167, 1;
	fma.rn.f32 	%f199, %f197, %f196, 0fC0A55DF6;
	fma.rn.f32 	%f200, %f198, %f196, 0f4081E0CF;
	fma.rn.f32 	%f201, %f196, %f195, 0f00000000;
	add.s32 	%r175, %r174, 1;
	fma.rn.f32 	%f233, %f231, %f230, 0fC0A55DF6;
	fma.rn.f32 	%f234, %f232, %f230, 0f4081E0CF;
	fma.rn.f32 	%f235, %f230, %f229, 0f00000000;
	add.s32 	%r186, %r185, 1;
	fma.rn.f32 	%f268, %f266, %f265, 0fC0A55DF6;
	fma.rn.f32 	%f269, %f267, %f265, 0f4081E0CF;
	fma.rn.f32 	%f270, %f265, %f264, 0f00000000;
	add.s32 	%r193, %r192, 1;
	fma.rn.f32 	%f302, %f300, %f299, 0fC0A55DF6;
	fma.rn.f32 	%f303, %f301, %f299, 0f4081E0CF;
	fma.rn.f32 	%f304, %f299, %f298, 0f00000000;
	add.s32 	%r204, %r203, 1;
	fma.rn.f32 	%f337, %f335, %f334, 0fC0A55DF6;
	fma.rn.f32 	%f338, %f336, %f334, 0f4081E0CF;
	fma.rn.f32 	%f339, %f334, %f333, 0f00000000;
	add.s32 	%r211, %r210, 1;
	fma.rn.f32 	%f371, %f369, %f368, 0fC0A55DF6;
	fma.rn.f32 	%f372, %f370, %f368, 0f4081E0CF;
	fma.rn.f32 	%f373, %f368, %f367, 0f00000000;
	cvt.rzi.s32.f32 	%r228, %f396;
	fma.rn.f32 	%f401, %f399, %f398, 0fC0A55DF6;
	fma.rn.f32 	%f402, %f400, %f398, 0f4081E0CF;
	fma.rn.f32 	%f403, %f398, %f397, 0f00000000;
	cvt.rzi.s32.f32 	%r238, %f430;
	fma.rn.f32 	%f435, %f433, %f432, 0fC0A55DF6;
	fma.rn.f32 	%f436, %f434, %f432, 0f4081E0CF;
	fma.rn.f32 	%f437, %f432, %f431, 0f00000000;
	cvt.rzi.s32.f32 	%r259, %f482;
	fma.rn.f32 	%f487, %f485, %f484, 0fC0A55DF6;
	fma.rn.f32 	%f488, %f486, %f484, 0f4081E0CF;
	fma.rn.f32 	%f489, %f484, %f483, 0f00000000;
	cvt.rzi.s32.f32 	%r291, %f534;
	fma.rn.f32 	%f539, %f537, %f536, 0fC0A55DF6;
	fma.rn.f32 	%f540, %f538, %f536, 0f4081E0CF;
	fma.rn.f32 	%f541, %f536, %f535, 0f00000000;
	and.b16  	%rs9, %rs8, 13107;
	shr.u16 	%rs11, %rs8, 2;
	mul.f32 	%f589, %f588, %f588;
	fma.rn.f32 	%f133, %f131, %f127, 0fC09DE9E6;
	fma.rn.f32 	%f134, %f130, %f132, 0f00000000;
	and.b32  	%r151, %r150, 1;
	fma.rn.f32 	%f167, %f165, %f161, 0fC09DE9E6;
	fma.rn.f32 	%f168, %f164, %f166, 0f00000000;
	and.b32  	%r158, %r157, 1;
	fma.rn.f32 	%f202, %f200, %f196, 0fC09DE9E6;
	fma.rn.f32 	%f203, %f199, %f201, 0f00000000;
	and.b32  	%r169, %r168, 1;
	fma.rn.f32 	%f236, %f234, %f230, 0fC09DE9E6;
	fma.rn.f32 	%f237, %f233, %f235, 0f00000000;
	and.b32  	%r176, %r175, 1;
	fma.rn.f32 	%f271, %f269, %f265, 0fC09DE9E6;
	fma.rn.f32 	%f272, %f268, %f270, 0f00000000;
	and.b32  	%r187, %r186, 1;
	fma.rn.f32 	%f305, %f303, %f299, 0fC09DE9E6;
	fma.rn.f32 	%f306, %f302, %f304, 0f00000000;
	and.b32  	%r194, %r193, 1;
	fma.rn.f32 	%f340, %f338, %f334, 0fC09DE9E6;
	fma.rn.f32 	%f341, %f337, %f339, 0f00000000;
	and.b32  	%r205, %r204, 1;
	fma.rn.f32 	%f374, %f372, %f368, 0fC09DE9E6;
	fma.rn.f32 	%f375, %f371, %f373, 0f00000000;
	and.b32  	%r212, %r211, 1;
	fma.rn.f32 	%f404, %f402, %f398, 0fC09DE9E6;
	fma.rn.f32 	%f405, %f401, %f403, 0f00000000;
	and.b32  	%r229, %r228, 1;
	fma.rn.f32 	%f438, %f436, %f432, 0fC09DE9E6;
	fma.rn.f32 	%f439, %f435, %f437, 0f00000000;
	and.b32  	%r239, %r238, 1;
	fma.rn.f32 	%f490, %f488, %f484, 0fC09DE9E6;
	fma.rn.f32 	%f491, %f487, %f489, 0f00000000;
	and.b32  	%r260, %r259, 1;
	fma.rn.f32 	%f542, %f540, %f536, 0fC09DE9E6;
	fma.rn.f32 	%f543, %f539, %f541, 0f00000000;
	and.b32  	%r292, %r291, 1;
	shl.b16 	%rs10, %rs9, 2;
	and.b16  	%rs12, %rs11, 13107;
	fma.rn.f32 	%f590, %f589, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f591, %f589, 0f3E684E12, 0fBFAAD2E0;
	shl.b32 	%r62, %r2, 2;
	fma.rn.f32 	%f135, %f133, %f127, 0f3F800000;
	fma.rn.f32 	%f136, %f126, 0f40490FDB, %f134;
	setp.eq.b32 	%p20, %r151, 1;
	fma.rn.f32 	%f169, %f167, %f161, 0f3F800000;
	fma.rn.f32 	%f170, %f160, 0f40490FDB, %f168;
	setp.eq.b32 	%p26, %r158, 1;
	fma.rn.f32 	%f204, %f202, %f196, 0f3F800000;
	fma.rn.f32 	%f205, %f195, 0f40490FDB, %f203;
	setp.eq.b32 	%p32, %r169, 1;
	fma.rn.f32 	%f238, %f236, %f230, 0f3F800000;
	fma.rn.f32 	%f239, %f229, 0f40490FDB, %f237;
	setp.eq.b32 	%p38, %r176, 1;
	fma.rn.f32 	%f273, %f271, %f265, 0f3F800000;
	fma.rn.f32 	%f274, %f264, 0f40490FDB, %f272;
	setp.eq.b32 	%p44, %r187, 1;
	fma.rn.f32 	%f307, %f305, %f299, 0f3F800000;
	fma.rn.f32 	%f308, %f298, 0f40490FDB, %f306;
	setp.eq.b32 	%p50, %r194, 1;
	fma.rn.f32 	%f342, %f340, %f334, 0f3F800000;
	fma.rn.f32 	%f343, %f333, 0f40490FDB, %f341;
	setp.eq.b32 	%p56, %r205, 1;
	fma.rn.f32 	%f376, %f374, %f368, 0f3F800000;
	fma.rn.f32 	%f377, %f367, 0f40490FDB, %f375;
	setp.eq.b32 	%p62, %r212, 1;
	fma.rn.f32 	%f406, %f404, %f398, 0f3F800000;
	fma.rn.f32 	%f407, %f397, 0f40490FDB, %f405;
	setp.eq.b32 	%p67, %r229, 1;
	fma.rn.f32 	%f440, %f438, %f432, 0f3F800000;
	fma.rn.f32 	%f441, %f431, 0f40490FDB, %f439;
	setp.eq.b32 	%p74, %r239, 1;
	fma.rn.f32 	%f492, %f490, %f484, 0f3F800000;
	fma.rn.f32 	%f493, %f483, 0f40490FDB, %f491;
	setp.eq.b32 	%p94, %r260, 1;
	fma.rn.f32 	%f544, %f542, %f536, 0f3F800000;
	fma.rn.f32 	%f545, %f535, 0f40490FDB, %f543;
	setp.eq.b32 	%p114, %r292, 1;
	or.b16  	%rs13, %rs12, %rs10;
	cvt.rzi.s32.f32 	%r306, %f587;
	fma.rn.f32 	%f592, %f590, %f589, 0fC0A55DF6;
	fma.rn.f32 	%f593, %f591, %f589, 0f4081E0CF;
	fma.rn.f32 	%f594, %f589, %f588, 0f00000000;
	shl.b32 	%r61, %r1, 3;
	and.b32  	%r142, %r62, 4;
	selp.f32 	%f137, %f135, %f136, %p20;
	and.b32  	%r152, %r150, 2;
	selp.f32 	%f171, %f169, %f170, %p26;
	and.b32  	%r159, %r157, 2;
	selp.f32 	%f206, %f204, %f205, %p32;
	and.b32  	%r170, %r168, 2;
	selp.f32 	%f240, %f238, %f239, %p38;
	and.b32  	%r177, %r175, 2;
	selp.f32 	%f275, %f273, %f274, %p44;
	and.b32  	%r188, %r186, 2;
	selp.f32 	%f309, %f307, %f308, %p50;
	and.b32  	%r195, %r193, 2;
	selp.f32 	%f344, %f342, %f343, %p56;
	and.b32  	%r206, %r204, 2;
	selp.f32 	%f378, %f376, %f377, %p62;
	and.b32  	%r213, %r211, 2;
	selp.f32 	%f408, %f406, %f407, %p67;
	and.b32  	%r230, %r228, 2;
	selp.f32 	%f442, %f440, %f441, %p74;
	and.b32  	%r240, %r238, 2;
	selp.f32 	%f494, %f492, %f493, %p94;
	and.b32  	%r261, %r259, 2;
	selp.f32 	%f546, %f544, %f545, %p114;
	and.b32  	%r293, %r291, 2;
	and.b16  	%rs14, %rs13, 20480;
	shr.u16 	%rs16, %rs13, 1;
	fma.rn.f32 	%f595, %f593, %f589, 0fC09DE9E6;
	fma.rn.f32 	%f596, %f592, %f594, 0f00000000;
	and.b32  	%r307, %r306, 1;
	or.b32  	%r143, %r142, %r61;
	and.b32  	%r63, %r2, 2;
	setp.eq.s32 	%p21, %r152, 0;
	sub.f32 	%f139, %f138, %f137;
	setp.eq.s32 	%p27, %r159, 0;
	sub.f32 	%f173, %f138, %f171;
	setp.eq.s32 	%p33, %r170, 0;
	sub.f32 	%f208, %f138, %f206;
	setp.eq.s32 	%p39, %r177, 0;
	sub.f32 	%f242, %f138, %f240;
	setp.eq.s32 	%p45, %r188, 0;
	sub.f32 	%f277, %f138, %f275;
	setp.eq.s32 	%p51, %r195, 0;
	sub.f32 	%f311, %f138, %f309;
	setp.eq.s32 	%p57, %r206, 0;
	sub.f32 	%f346, %f138, %f344;
	setp.eq.s32 	%p63, %r213, 0;
	sub.f32 	%f380, %f138, %f378;
	setp.eq.s32 	%p68, %r230, 0;
	neg.f32 	%f410, %f408;
	add.s32 	%r231, %r228, 1;
	cvt.rzi.f32.f32 	%f415, %f388;
	setp.eq.s32 	%p75, %r240, 0;
	neg.f32 	%f444, %f442;
	add.s32 	%r241, %r238, 1;
	cvt.rzi.f32.f32 	%f448, %f422;
	setp.eq.s32 	%p95, %r261, 0;
	neg.f32 	%f496, %f494;
	add.s32 	%r262, %r259, 1;
	cvt.rzi.f32.f32 	%f501, %f686;
	setp.eq.s32 	%p115, %r293, 0;
	neg.f32 	%f548, %f546;
	add.s32 	%r294, %r291, 1;
	cvt.rzi.f32.f32 	%f553, %f678;
	shl.b16 	%rs15, %rs14, 1;
	and.b16  	%rs17, %rs16, 16384;
	fma.rn.f32 	%f597, %f595, %f589, 0f3F800000;
	fma.rn.f32 	%f598, %f588, 0f40490FDB, %f596;
	setp.eq.b32 	%p136, %r307, 1;
	or.b32  	%r144, %r143, %r63;
	selp.f32 	%f140, %f137, %f139, %p21;
	selp.f32 	%f174, %f171, %f173, %p27;
	selp.f32 	%f209, %f206, %f208, %p33;
	selp.f32 	%f243, %f240, %f242, %p39;
	selp.f32 	%f278, %f275, %f277, %p45;
	selp.f32 	%f312, %f309, %f311, %p51;
	selp.f32 	%f347, %f344, %f346, %p57;
	selp.f32 	%f381, %f378, %f380, %p63;
	selp.f32 	%f409, %f407, %f406, %p67;
	selp.f32 	%f411, %f408, %f410, %p68;
	and.b32  	%r232, %r231, 2;
	setp.eq.f32 	%p70, %f415, %f388;
	mul.f32 	%f416, %f388, 0f00000000;
	selp.f32 	%f443, %f441, %f440, %p74;
	selp.f32 	%f445, %f442, %f444, %p75;
	and.b32  	%r242, %r241, 2;
	setp.eq.f32 	%p77, %f448, %f422;
	mul.f32 	%f449, %f422, 0f00000000;
	selp.f32 	%f495, %f493, %f492, %p94;
	selp.f32 	%f497, %f494, %f496, %p95;
	and.b32  	%r263, %r262, 2;
	setp.eq.f32 	%p97, %f501, %f686;
	mul.f32 	%f502, %f686, 0f00000000;
	selp.f32 	%f547, %f545, %f544, %p114;
	selp.f32 	%f549, %f546, %f548, %p115;
	and.b32  	%r295, %r294, 2;
	setp.eq.f32 	%p117, %f553, %f678;
	mul.f32 	%f554, %f678, 0f00000000;
	or.b16  	%rs18, %rs17, %rs15;
	selp.f32 	%f599, %f597, %f598, %p136;
	and.b32  	%r308, %r306, 2;
	bfe.u32 	%r145, %r144, 1, 8;
	mul.f32 	%f70, %f140, %f140;
	mul.f32 	%f4, %f174, %f174;
	mul.f32 	%f8, %f209, %f209;
	mul.f32 	%f13, %f243, %f243;
	mul.f32 	%f17, %f278, %f278;
	mul.f32 	%f22, %f312, %f312;
	mul.f32 	%f26, %f347, %f347;
	mul.f32 	%f31, %f381, %f381;
	setp.eq.s32 	%p69, %r232, 0;
	sub.f32 	%f413, %f138, %f409;
	selp.f32 	%f417, %f416, %f411, %p70;
	abs.f32 	%f418, %f388;
	setp.eq.s32 	%p76, %r242, 0;
	sub.f32 	%f446, %f138, %f443;
	selp.f32 	%f450, %f449, %f445, %p77;
	abs.f32 	%f451, %f422;
	setp.eq.s32 	%p96, %r263, 0;
	sub.f32 	%f499, %f138, %f495;
	selp.f32 	%f87, %f502, %f497, %p97;
	abs.f32 	%f503, %f686;
	setp.eq.s32 	%p116, %r295, 0;
	sub.f32 	%f551, %f138, %f547;
	selp.f32 	%f555, %f554, %f549, %p117;
	abs.f32 	%f556, %f678;
	shr.u16 	%rs19, %rs18, 13;
	setp.eq.s32 	%p137, %r308, 0;
	neg.f32 	%f601, %f599;
	add.s32 	%r309, %r306, 1;
	cvt.rzi.f32.f32 	%f606, %f690;
	ld.param.u64 	%rd1, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_7];
	mul.wide.u32 	%rd54, %r145, 4;
	mul.f32 	%f144, %f70, 0f3D87E86B;
	mul.f32 	%f178, %f4, 0f3D87E86B;
	mul.f32 	%f213, %f8, 0f3D87E86B;
	mul.f32 	%f247, %f13, 0f3D87E86B;
	mul.f32 	%f282, %f17, 0f3D87E86B;
	mul.f32 	%f316, %f22, 0f3D87E86B;
	mul.f32 	%f351, %f26, 0f3D87E86B;
	mul.f32 	%f384, %f31, 0f3D87E86B;
	selp.f32 	%f414, %f409, %f413, %p69;
	setp.gt.f32 	%p71, %f418, 0f4B800000;
	add.f32 	%f419, %f417, 0f3F800000;
	selp.f32 	%f447, %f443, %f446, %p76;
	setp.gt.f32 	%p78, %f451, 0f4B800000;
	add.f32 	%f452, %f450, 0f3F800000;
	selp.f32 	%f500, %f495, %f499, %p96;
	setp.gt.f32 	%p98, %f503, 0f4B800000;
	add.f32 	%f504, %f87, 0f3F800000;
	selp.f32 	%f552, %f547, %f551, %p116;
	setp.gt.f32 	%p118, %f556, 0f4B800000;
	add.f32 	%f557, %f555, 0f3F800000;
	and.b16  	%rs20, %rs19, 6;
	selp.f32 	%f600, %f598, %f597, %p136;
	selp.f32 	%f602, %f599, %f601, %p137;
	and.b32  	%r310, %r309, 2;
	setp.eq.f32 	%p139, %f606, %f690;
	mul.f32 	%f607, %f690, 0f00000000;
	add.s64 	%rd55, %rd1, %rd54;
	mul.f32 	%f3, %f144, %f668;
	mul.f32 	%f179, %f178, %f669;
	mul.f32 	%f12, %f213, %f670;
	mul.f32 	%f248, %f247, %f671;
	mul.f32 	%f21, %f282, %f672;
	mul.f32 	%f317, %f316, %f673;
	mul.f32 	%f30, %f351, %f674;
	mul.f32 	%f385, %f384, %f675;
	selp.f32 	%f420, %f419, %f414, %p71;
	selp.f32 	%f453, %f452, %f447, %p78;
	selp.f32 	%f88, %f504, %f500, %p98;
	selp.f32 	%f558, %f557, %f552, %p118;
	cvt.u32.u16 	%r30, %rs20;
	setp.eq.s32 	%p138, %r310, 0;
	sub.f32 	%f604, %f138, %f600;
	selp.f32 	%f608, %f607, %f602, %p139;
	abs.f32 	%f609, %f690;
	ld.param.u64 	%rd2, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_8];
	ld.param.u64 	%rd3, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_9];
	ld.global.u32 	%r64, [%rd55];
	mov.b32 	%r162, %f179;
	mov.b32 	%r161, %f3;
	mov.b32 	%r180, %f248;
	mov.b32 	%r179, %f12;
	mov.b32 	%r198, %f317;
	mov.b32 	%r197, %f21;
	mov.b32 	%r216, %f385;
	mov.b32 	%r215, %f30;
	mov.b32 	%r218, %f420;
	mov.b32 	%r219, %f453;
	mov.b32 	%r221, %f417;
	mov.b32 	%r222, %f450;
	mov.b32 	%r278, %f558;
	mov.b32 	%r277, %f88;
	mov.b32 	%r284, %f555;
	mov.b32 	%r283, %f87;
	setp.eq.s32 	%p133, %r17, %r30;
	selp.f32 	%f605, %f600, %f604, %p138;
	setp.gt.f32 	%p140, %f609, 0f4B800000;
	add.f32 	%f610, %f608, 0f3F800000;
	// begin inline asm
	cvt.rn.f16x2.f32 %r160, %r162, %r161;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r178, %r180, %r179;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r196, %r198, %r197;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r214, %r216, %r215;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r217, %r219, %r218;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r220, %r222, %r221;
	// end inline asm
	xor.b32  	%r281, %r284, -2147483648;
	xor.b32  	%r280, %r283, -2147483648;
	or.b16  	%rs21, %rs19, 1;
	selp.f32 	%f611, %f610, %f605, %p140;
	selp.f32 	%f612, 0f3F800000, 0f00000000, %p133;
	// begin inline asm
	cvt.rn.f16x2.f32 %r276, %r278, %r277;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r279, %r281, %r280;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r282, %r284, %r283;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r285, %r278, %r277;
	// end inline asm
	cvt.u32.u16 	%r31, %rs21;
	mul.f32 	%f106, %f611, %f612;
	mul.f32 	%f107, %f608, %f612;
	setp.eq.s32 	%p153, %r17, %r31;
	add.f32 	%f633, %f682, %f682;
	mov.b32 	%r329, %f633;
	and.b32  	%r330, %r329, -2147483648;
	or.b32  	%r331, %r330, 1056964608;
	mov.b32 	%f634, %r331;
	add.f32 	%f635, %f633, %f634;
	cvt.rzi.f32.f32 	%f636, %f635;
	abs.f32 	%f637, %f633;
	setp.gt.f32 	%p154, %f637, 0f4B000000;
	selp.f32 	%f638, %f633, %f636, %p154;
	cvt.rzi.f32.f32 	%f639, %f633;
	setp.lt.f32 	%p155, %f637, 0f3F000000;
	selp.f32 	%f640, %f639, %f638, %p155;
	cvt.rzi.s32.f32 	%r332, %f640;
	fma.rn.f32 	%f641, %f640, 0fBF000000, %f682;
	mul.f32 	%f642, %f641, %f641;
	fma.rn.f32 	%f643, %f642, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f644, %f642, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f645, %f643, %f642, 0fC0A55DF6;
	fma.rn.f32 	%f646, %f644, %f642, 0f4081E0CF;
	fma.rn.f32 	%f647, %f642, %f641, 0f00000000;
	fma.rn.f32 	%f648, %f646, %f642, 0fC09DE9E6;
	fma.rn.f32 	%f649, %f645, %f647, 0f00000000;
	fma.rn.f32 	%f650, %f648, %f642, 0f3F800000;
	fma.rn.f32 	%f651, %f641, 0f40490FDB, %f649;
	and.b32  	%r333, %r332, 1;
	setp.eq.b32 	%p156, %r333, 1;
	selp.f32 	%f652, %f650, %f651, %p156;
	selp.f32 	%f653, %f651, %f650, %p156;
	and.b32  	%r334, %r332, 2;
	setp.eq.s32 	%p157, %r334, 0;
	neg.f32 	%f654, %f652;
	selp.f32 	%f655, %f652, %f654, %p157;
	add.s32 	%r335, %r332, 1;
	and.b32  	%r336, %r335, 2;
	setp.eq.s32 	%p158, %r336, 0;
	sub.f32 	%f657, %f138, %f653;
	selp.f32 	%f658, %f653, %f657, %p158;
	cvt.rzi.f32.f32 	%f659, %f682;
	setp.eq.f32 	%p159, %f659, %f682;
	mul.f32 	%f660, %f682, 0f00000000;
	selp.f32 	%f661, %f660, %f655, %p159;
	abs.f32 	%f662, %f682;
	setp.gt.f32 	%p160, %f662, 0f4B800000;
	add.f32 	%f663, %f661, 0f3F800000;
	selp.f32 	%f664, %f663, %f658, %p160;
	selp.f32 	%f665, 0f3F800000, 0f00000000, %p153;
	mul.f32 	%f666, %f664, %f665;
	mul.f32 	%f667, %f661, %f665;
	mov.b32 	%r319, %f666;
	mov.b32 	%r318, %f106;
	// begin inline asm
	cvt.rn.f16x2.f32 %r317, %r319, %r318;
	// end inline asm
	mov.b32 	%r325, %f667;
	xor.b32  	%r322, %r325, -2147483648;
	mov.b32 	%r324, %f107;
	xor.b32  	%r321, %r324, -2147483648;
	// begin inline asm
	cvt.rn.f16x2.f32 %r320, %r322, %r321;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r323, %r325, %r324;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r326, %r319, %r318;
	// end inline asm
	and.b32  	%r44, %r62, 12;
	and.b32  	%r338, %r3, 1;
	neg.s32 	%r339, %r338;
	shl.b32 	%r340, %r3, 2;
	and.b32  	%r45, %r340, 24;
	or.b32  	%r341, %r338, %r45;
	or.b32  	%r46, %r16, %r341;
	and.b32  	%r47, %r62, 16;
	cvt.u16.u32 	%rs22, %r61;
	mul.hi.u16 	%rs23, %rs22, -21845;
	shr.u16 	%rs24, %rs23, 8;
	mul.lo.s16 	%rs25, %rs24, 384;
	sub.s16 	%rs26, %rs22, %rs25;
	cvt.u32.u16 	%r342, %rs26;
	add.s32 	%r343, %r342, %r130;
	shl.b32 	%r344, %r343, 5;
	and.b32  	%r345, %r62, 28;
	or.b32  	%r48, %r345, %r344;
	and.b32  	%r49, %r2, 8;
	shl.b32 	%r346, %r2, 4;
	or.b32  	%r347, %r346, %r49;
	shr.u32 	%r348, %r347, 2;
	and.b32  	%r349, %r348, 14;
	or.b32  	%r350, %r349, %r47;
	and.b32  	%r351, %r76, 32;
	shl.b32 	%r352, %r3, 1;
	or.b32  	%r353, %r351, %r352;
	or.b32  	%r354, %r353, %r47;
	shr.u32 	%r355, %r354, 2;
	and.b32  	%r356, %r76, 16;
	and.b32  	%r357, %r4, 32;
	or.b32  	%r358, %r357, %r356;
	or.b32  	%r359, %r358, %r355;
	or.b32  	%r360, %r62, %r63;
	bfe.u32 	%r361, %r360, 1, 2;
	mad.lo.s32 	%r362, %r361, 65, %r359;
	shr.u32 	%r363, %r2, 4;
	shl.b32 	%r364, %r128, 14;
	add.s32 	%r365, %r364, -49152;
	and.b32  	%r366, %r61, 504;
	and.b32  	%r367, %r340, 4;
	or.b32  	%r368, %r367, %r14;
	or.b32  	%r369, %r368, %r366;
	shl.b32 	%r50, %r369, 5;
	cvt.s64.s32 	%rd5, %r365;
	shr.u32 	%r370, %r66, 1;
	shr.u32 	%r371, %r3, 1;
	setp.gt.u32 	%p162, %r2, 15;
	or.b32  	%r372, %r371, 4;
	or.b32  	%r373, %r371, 8;
	or.b32  	%r374, %r371, 12;
	or.b32  	%r375, %r371, 16;
	or.b32  	%r376, %r371, 20;
	or.b32  	%r377, %r371, 24;
	or.b32  	%r378, %r371, 28;
	setp.eq.s32 	%p163, %r338, 0;
	and.b32  	%r379, %r339, 130;
	mul.lo.s32 	%r380, %r371, 289;
	selp.b32 	%r381, 65, 0, %p162;
	add.s32 	%r382, %r350, %r379;
	add.s32 	%r383, %r382, %r380;
	add.s32 	%r384, %r383, %r381;
	mul.wide.u32 	%rd56, %r384, 4;
	mov.u64 	%rd57, shmem;
	add.s64 	%rd6, %rd57, %rd56;
	selp.b64 	%rd58, 65, 0, %p162;
	cvt.u64.u32 	%rd59, %r380;
	selp.b64 	%rd60, 0, 130, %p163;
	cvt.u64.u32 	%rd61, %r350;
	add.s64 	%rd62, %rd61, %rd60;
	add.s64 	%rd63, %rd62, %rd59;
	add.s64 	%rd64, %rd63, %rd58;
	shl.b64 	%rd65, %rd64, 2;
	add.s64 	%rd7, %rd57, %rd65;
	mul.lo.s32 	%r385, %r372, 289;
	mul.lo.s32 	%r386, %r363, 65;
	add.s32 	%r387, %r382, %r385;
	add.s32 	%r388, %r387, %r386;
	mul.wide.u32 	%rd66, %r388, 4;
	add.s64 	%rd8, %rd57, %rd66;
	cvt.u64.u32 	%rd67, %r386;
	cvt.u64.u32 	%rd68, %r385;
	add.s64 	%rd69, %rd62, %rd68;
	add.s64 	%rd70, %rd69, %rd67;
	shl.b64 	%rd71, %rd70, 2;
	add.s64 	%rd9, %rd57, %rd71;
	mul.lo.s32 	%r389, %r373, 289;
	add.s32 	%r390, %r382, %r389;
	add.s32 	%r391, %r390, %r386;
	mul.wide.u32 	%rd72, %r391, 4;
	add.s64 	%rd10, %rd57, %rd72;
	cvt.u64.u32 	%rd73, %r389;
	add.s64 	%rd74, %rd62, %rd73;
	add.s64 	%rd75, %rd74, %rd67;
	shl.b64 	%rd76, %rd75, 2;
	add.s64 	%rd11, %rd57, %rd76;
	mul.lo.s32 	%r392, %r374, 289;
	add.s32 	%r393, %r382, %r392;
	add.s32 	%r394, %r393, %r386;
	mul.wide.u32 	%rd77, %r394, 4;
	add.s64 	%rd12, %rd57, %rd77;
	cvt.u64.u32 	%rd78, %r392;
	add.s64 	%rd79, %rd62, %rd78;
	add.s64 	%rd80, %rd79, %rd67;
	shl.b64 	%rd81, %rd80, 2;
	add.s64 	%rd13, %rd57, %rd81;
	mul.lo.s32 	%r395, %r375, 289;
	add.s32 	%r396, %r382, %r395;
	add.s32 	%r397, %r396, %r386;
	mul.wide.u32 	%rd82, %r397, 4;
	add.s64 	%rd14, %rd57, %rd82;
	cvt.u64.u32 	%rd83, %r395;
	add.s64 	%rd84, %rd62, %rd83;
	add.s64 	%rd85, %rd84, %rd67;
	shl.b64 	%rd86, %rd85, 2;
	add.s64 	%rd15, %rd57, %rd86;
	mul.lo.s32 	%r398, %r376, 289;
	add.s32 	%r399, %r382, %r398;
	add.s32 	%r400, %r399, %r386;
	mul.wide.u32 	%rd87, %r400, 4;
	add.s64 	%rd16, %rd57, %rd87;
	cvt.u64.u32 	%rd88, %r398;
	add.s64 	%rd89, %rd62, %rd88;
	add.s64 	%rd90, %rd89, %rd67;
	shl.b64 	%rd91, %rd90, 2;
	add.s64 	%rd17, %rd57, %rd91;
	mul.lo.s32 	%r401, %r377, 289;
	add.s32 	%r402, %r382, %r401;
	add.s32 	%r403, %r402, %r386;
	mul.wide.u32 	%rd92, %r403, 4;
	add.s64 	%rd18, %rd57, %rd92;
	cvt.u64.u32 	%rd93, %r401;
	add.s64 	%rd94, %rd62, %rd93;
	add.s64 	%rd95, %rd94, %rd67;
	shl.b64 	%rd96, %rd95, 2;
	add.s64 	%rd19, %rd57, %rd96;
	mul.lo.s32 	%r404, %r378, 289;
	add.s32 	%r405, %r382, %r404;
	add.s32 	%r406, %r405, %r386;
	mul.wide.u32 	%rd97, %r406, 4;
	add.s64 	%rd20, %rd57, %rd97;
	cvt.u64.u32 	%rd98, %r404;
	add.s64 	%rd99, %rd62, %rd98;
	add.s64 	%rd100, %rd99, %rd67;
	shl.b64 	%rd101, %rd100, 2;
	add.s64 	%rd21, %rd57, %rd101;
	and.b32  	%r407, %r2, 1;
	neg.s32 	%r408, %r407;
	and.b32  	%r409, %r408, 130;
	and.b32  	%r410, %r352, 2;
	or.b32  	%r411, %r410, %r363;
	mul.lo.s32 	%r412, %r411, 65;
	add.s32 	%r413, %r350, %r412;
	add.s32 	%r414, %r413, %r380;
	mul.wide.u32 	%rd102, %r414, 4;
	add.s64 	%rd22, %rd57, %rd102;
	cvt.u64.u32 	%rd103, %r412;
	add.s64 	%rd104, %rd61, %rd103;
	add.s64 	%rd105, %rd104, %rd59;
	shl.b64 	%rd106, %rd105, 2;
	add.s64 	%rd23, %rd57, %rd106;
	add.s32 	%r415, %r413, %r385;
	mul.wide.u32 	%rd107, %r415, 4;
	add.s64 	%rd24, %rd57, %rd107;
	add.s64 	%rd108, %rd104, %rd68;
	shl.b64 	%rd109, %rd108, 2;
	add.s64 	%rd25, %rd57, %rd109;
	add.s32 	%r416, %r413, %r389;
	mul.wide.u32 	%rd110, %r416, 4;
	add.s64 	%rd26, %rd57, %rd110;
	add.s64 	%rd111, %rd104, %rd73;
	shl.b64 	%rd112, %rd111, 2;
	add.s64 	%rd27, %rd57, %rd112;
	add.s32 	%r417, %r413, %r392;
	mul.wide.u32 	%rd113, %r417, 4;
	add.s64 	%rd28, %rd57, %rd113;
	add.s64 	%rd114, %rd104, %rd78;
	shl.b64 	%rd115, %rd114, 2;
	add.s64 	%rd29, %rd57, %rd115;
	add.s32 	%r418, %r413, %r395;
	mul.wide.u32 	%rd116, %r418, 4;
	add.s64 	%rd30, %rd57, %rd116;
	add.s64 	%rd117, %rd104, %rd83;
	shl.b64 	%rd118, %rd117, 2;
	add.s64 	%rd31, %rd57, %rd118;
	add.s32 	%r419, %r413, %r398;
	mul.wide.u32 	%rd119, %r419, 4;
	add.s64 	%rd32, %rd57, %rd119;
	add.s64 	%rd120, %rd104, %rd88;
	shl.b64 	%rd121, %rd120, 2;
	add.s64 	%rd33, %rd57, %rd121;
	add.s32 	%r420, %r413, %r401;
	mul.wide.u32 	%rd122, %r420, 4;
	add.s64 	%rd34, %rd57, %rd122;
	add.s64 	%rd123, %rd104, %rd93;
	shl.b64 	%rd124, %rd123, 2;
	add.s64 	%rd35, %rd57, %rd124;
	add.s32 	%r421, %r413, %r404;
	mul.wide.u32 	%rd125, %r421, 4;
	add.s64 	%rd36, %rd57, %rd125;
	add.s64 	%rd126, %rd104, %rd98;
	shl.b64 	%rd127, %rd126, 2;
	add.s64 	%rd37, %rd57, %rd127;
	mul.wide.u32 	%rd128, %r362, 4;
	add.s64 	%rd38, %rd57, %rd128;
	add.s32 	%r422, %r409, %r359;
	mad.lo.s32 	%r423, %r370, 65, %r422;
	mul.wide.u32 	%rd129, %r423, 4;
	add.s64 	%rd39, %rd57, %rd129;
	setp.eq.s32 	%p164, %r49, 0;
	mov.u16 	%rs92, 25600;
	mov.u16 	%rs66, 21504;
	mov.u16 	%rs100, 18432;
	mov.u32 	%r1309, %r1303;
	mov.u32 	%r1310, %r1303;
	mov.u32 	%r1316, %r1303;
	mov.u32 	%r54, %r1303;
	bra.uni 	$L__BB0_65;
$L__BB0_89:                             // %pass12137
                                        //   in Loop: Header=BB0_65 Depth=1
	selp.b32 	%r1282, %r95, %r1136, %p164;
	selp.b32 	%r1283, %r1132, %r95, %p164;
	selp.b32 	%r1284, %r94, %r1128, %p164;
	selp.b32 	%r1285, %r1124, %r94, %p164;
	or.b32  	%r1287, %r1304, %r44;
	or.b32  	%r1288, %r1287, %r50;
	or.b32  	%r1321, %r1288, %r47;
	cvt.u64.u32 	%rd146, %r1321;
	add.s64 	%rd147, %rd146, %rd5;
	shr.u64 	%rd148, %rd147, 38;
	add.s64 	%rd149, %rd147, %rd148;
	shr.s64 	%rd150, %rd149, 26;
	setp.lt.s64 	%p193, %rd147, 0;
	and.b64  	%rd151, %rd149, -67108864;
	setp.ne.s64 	%p194, %rd151, %rd147;
	and.pred  	%p195, %p193, %p194;
	selp.u64 	%rd152, 1, 0, %p195;
	sub.s64 	%rd153, %rd152, %rd150;
	shl.b64 	%rd154, %rd153, 26;
	add.s64 	%rd155, %rd154, %rd147;
	shl.b64 	%rd156, %rd155, 2;
	add.s64 	%rd157, %rd3, %rd156;
	st.global.v4.u32 	[%rd157], {%r1285, %r1283, %r1284, %r1282};
$L__BB0_90:                             // %pass12253
                                        //   in Loop: Header=BB0_65 Depth=1
	or.b32  	%r1292, %r1321, 65536;
	cvt.s64.s32 	%rd158, %r1292;
	add.s64 	%rd159, %rd158, %rd5;
	shr.u64 	%rd160, %rd159, 38;
	add.s64 	%rd161, %rd159, %rd160;
	shr.s64 	%rd162, %rd161, 26;
	setp.lt.s64 	%p196, %rd159, 0;
	and.b64  	%rd163, %rd161, -67108864;
	setp.ne.s64 	%p197, %rd163, %rd159;
	and.pred  	%p198, %p196, %p197;
	selp.u64 	%rd164, 1, 0, %p198;
	sub.s64 	%rd165, %rd164, %rd162;
	shl.b64 	%rd166, %rd165, 26;
	add.s64 	%rd167, %rd166, %rd159;
	shl.b64 	%rd168, %rd167, 2;
	add.s64 	%rd169, %rd3, %rd168;
	st.global.v4.u32 	[%rd169], {%r96, %r98, %r97, %r99};
	or.b32  	%r1293, %r1321, 131072;
	cvt.s64.s32 	%rd170, %r1293;
	add.s64 	%rd171, %rd170, %rd5;
	shr.u64 	%rd172, %rd171, 38;
	add.s64 	%rd173, %rd171, %rd172;
	shr.s64 	%rd174, %rd173, 26;
	setp.lt.s64 	%p199, %rd171, 0;
	and.b64  	%rd175, %rd173, -67108864;
	setp.ne.s64 	%p200, %rd175, %rd171;
	and.pred  	%p201, %p199, %p200;
	selp.u64 	%rd176, 1, 0, %p201;
	sub.s64 	%rd177, %rd176, %rd174;
	shl.b64 	%rd178, %rd177, 26;
	add.s64 	%rd179, %rd178, %rd171;
	shl.b64 	%rd180, %rd179, 2;
	add.s64 	%rd181, %rd3, %rd180;
	st.global.v4.u32 	[%rd181], {%r100, %r102, %r101, %r103};
	or.b32  	%r1294, %r1321, 196608;
	cvt.s64.s32 	%rd182, %r1294;
	add.s64 	%rd183, %rd182, %rd5;
	shr.u64 	%rd184, %rd183, 38;
	add.s64 	%rd185, %rd183, %rd184;
	shr.s64 	%rd186, %rd185, 26;
	setp.lt.s64 	%p202, %rd183, 0;
	and.b64  	%rd187, %rd185, -67108864;
	setp.ne.s64 	%p203, %rd187, %rd183;
	and.pred  	%p204, %p202, %p203;
	selp.u64 	%rd188, 1, 0, %p204;
	sub.s64 	%rd189, %rd188, %rd186;
	shl.b64 	%rd190, %rd189, 26;
	add.s64 	%rd191, %rd190, %rd183;
	shl.b64 	%rd192, %rd191, 2;
	add.s64 	%rd193, %rd3, %rd192;
	st.global.v4.u32 	[%rd193], {%r104, %r106, %r105, %r107};
	or.b32  	%r1295, %r1321, 262144;
	cvt.s64.s32 	%rd194, %r1295;
	add.s64 	%rd195, %rd194, %rd5;
	shr.u64 	%rd196, %rd195, 38;
	add.s64 	%rd197, %rd195, %rd196;
	shr.s64 	%rd198, %rd197, 26;
	setp.lt.s64 	%p205, %rd195, 0;
	and.b64  	%rd199, %rd197, -67108864;
	setp.ne.s64 	%p206, %rd199, %rd195;
	and.pred  	%p207, %p205, %p206;
	selp.u64 	%rd200, 1, 0, %p207;
	sub.s64 	%rd201, %rd200, %rd198;
	shl.b64 	%rd202, %rd201, 26;
	add.s64 	%rd203, %rd202, %rd195;
	shl.b64 	%rd204, %rd203, 2;
	add.s64 	%rd205, %rd3, %rd204;
	st.global.v4.u32 	[%rd205], {%r108, %r110, %r109, %r111};
	or.b32  	%r1296, %r1321, 327680;
	cvt.s64.s32 	%rd206, %r1296;
	add.s64 	%rd207, %rd206, %rd5;
	shr.u64 	%rd208, %rd207, 38;
	add.s64 	%rd209, %rd207, %rd208;
	shr.s64 	%rd210, %rd209, 26;
	setp.lt.s64 	%p208, %rd207, 0;
	and.b64  	%rd211, %rd209, -67108864;
	setp.ne.s64 	%p209, %rd211, %rd207;
	and.pred  	%p210, %p208, %p209;
	selp.u64 	%rd212, 1, 0, %p210;
	sub.s64 	%rd213, %rd212, %rd210;
	shl.b64 	%rd214, %rd213, 26;
	add.s64 	%rd215, %rd214, %rd207;
	shl.b64 	%rd216, %rd215, 2;
	add.s64 	%rd217, %rd3, %rd216;
	st.global.v4.u32 	[%rd217], {%r112, %r114, %r113, %r115};
	or.b32  	%r1297, %r1321, 393216;
	cvt.s64.s32 	%rd218, %r1297;
	add.s64 	%rd219, %rd218, %rd5;
	shr.u64 	%rd220, %rd219, 38;
	add.s64 	%rd221, %rd219, %rd220;
	shr.s64 	%rd222, %rd221, 26;
	setp.lt.s64 	%p211, %rd219, 0;
	and.b64  	%rd223, %rd221, -67108864;
	setp.ne.s64 	%p212, %rd223, %rd219;
	and.pred  	%p213, %p211, %p212;
	selp.u64 	%rd224, 1, 0, %p213;
	sub.s64 	%rd225, %rd224, %rd222;
	shl.b64 	%rd226, %rd225, 26;
	add.s64 	%rd227, %rd226, %rd219;
	shl.b64 	%rd228, %rd227, 2;
	add.s64 	%rd229, %rd3, %rd228;
	st.global.v4.u32 	[%rd229], {%r116, %r118, %r117, %r119};
	or.b32  	%r1298, %r1321, 458752;
	cvt.s64.s32 	%rd230, %r1298;
	add.s64 	%rd231, %rd230, %rd5;
	shr.u64 	%rd232, %rd231, 38;
	add.s64 	%rd233, %rd231, %rd232;
	shr.s64 	%rd234, %rd233, 26;
	setp.lt.s64 	%p214, %rd231, 0;
	and.b64  	%rd235, %rd233, -67108864;
	setp.ne.s64 	%p215, %rd235, %rd231;
	and.pred  	%p216, %p214, %p215;
	selp.u64 	%rd236, 1, 0, %p216;
	sub.s64 	%rd237, %rd236, %rd234;
	shl.b64 	%rd238, %rd237, 26;
	add.s64 	%rd239, %rd238, %rd231;
	shl.b64 	%rd240, %rd239, 2;
	add.s64 	%rd241, %rd3, %rd240;
	st.global.v4.u32 	[%rd241], {%r120, %r122, %r121, %r123};
	setp.ne.s32 	%p217, %r54, 32512;
	add.s32 	%r54, %r54, 256;
	add.s32 	%r1299, %r54, %r126;
	setp.lt.s32 	%p218, %r1299, %r127;
	and.pred  	%p219, %p217, %p218;
	@%p219 bra 	$L__BB0_65;
	bra.uni 	$L__BB0_91;
$L__BB0_65:                             // %L1258
                                        // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_66 Depth 2
	or.b32  	%r553, %r54, %r46;
	or.b32  	%r554, %r553, %r15;
	add.s32 	%r555, %r554, %r126;
	mad.lo.s32 	%r556, %r555, 12288, %r48;
	mul.hi.s32 	%r557, %r556, 715827883;
	shr.u32 	%r558, %r557, 31;
	shr.s32 	%r559, %r557, 26;
	add.s32 	%r560, %r559, %r558;
	setp.lt.s32 	%p165, %r556, 0;
	mul.lo.s32 	%r561, %r560, 402653184;
	setp.ne.s32 	%p166, %r561, %r556;
	and.pred  	%p167, %p165, %p166;
	selp.s32 	%r562, -1, 0, %p167;
	add.s32 	%r563, %r560, %r562;
	mad.lo.s32 	%r564, %r563, -402653184, %r556;
	mul.wide.s32 	%rd130, %r564, 4;
	add.s64 	%rd131, %rd2, %rd130;
	ld.global.v4.u32 	{%r565, %r566, %r567, %r568}, [%rd131];
	or.b32  	%r569, %r554, 32;
	add.s32 	%r570, %r569, %r126;
	mad.lo.s32 	%r571, %r570, 12288, %r48;
	mul.hi.s32 	%r572, %r571, 715827883;
	shr.u32 	%r573, %r572, 31;
	shr.s32 	%r574, %r572, 26;
	add.s32 	%r575, %r574, %r573;
	setp.lt.s32 	%p168, %r571, 0;
	mul.lo.s32 	%r576, %r575, 402653184;
	setp.ne.s32 	%p169, %r576, %r571;
	and.pred  	%p170, %p168, %p169;
	selp.s32 	%r577, -1, 0, %p170;
	add.s32 	%r578, %r575, %r577;
	mad.lo.s32 	%r579, %r578, -402653184, %r571;
	mul.wide.s32 	%rd132, %r579, 4;
	add.s64 	%rd133, %rd2, %rd132;
	ld.global.v4.u32 	{%r580, %r581, %r582, %r583}, [%rd133];
	or.b32  	%r584, %r554, 64;
	add.s32 	%r585, %r584, %r126;
	mad.lo.s32 	%r586, %r585, 12288, %r48;
	mul.hi.s32 	%r587, %r586, 715827883;
	shr.u32 	%r588, %r587, 31;
	shr.s32 	%r589, %r587, 26;
	add.s32 	%r590, %r589, %r588;
	setp.lt.s32 	%p171, %r586, 0;
	mul.lo.s32 	%r591, %r590, 402653184;
	setp.ne.s32 	%p172, %r591, %r586;
	and.pred  	%p173, %p171, %p172;
	selp.s32 	%r592, -1, 0, %p173;
	add.s32 	%r593, %r590, %r592;
	mad.lo.s32 	%r594, %r593, -402653184, %r586;
	mul.wide.s32 	%rd134, %r594, 4;
	add.s64 	%rd135, %rd2, %rd134;
	ld.global.v4.u32 	{%r595, %r596, %r597, %r598}, [%rd135];
	or.b32  	%r599, %r554, 96;
	add.s32 	%r600, %r599, %r126;
	mad.lo.s32 	%r601, %r600, 12288, %r48;
	mul.hi.s32 	%r602, %r601, 715827883;
	shr.u32 	%r603, %r602, 31;
	shr.s32 	%r604, %r602, 26;
	add.s32 	%r605, %r604, %r603;
	setp.lt.s32 	%p174, %r601, 0;
	mul.lo.s32 	%r606, %r605, 402653184;
	setp.ne.s32 	%p175, %r606, %r601;
	and.pred  	%p176, %p174, %p175;
	selp.s32 	%r607, -1, 0, %p176;
	add.s32 	%r608, %r605, %r607;
	mad.lo.s32 	%r609, %r608, -402653184, %r601;
	mul.wide.s32 	%rd136, %r609, 4;
	add.s64 	%rd137, %rd2, %rd136;
	ld.global.v4.u32 	{%r610, %r611, %r612, %r613}, [%rd137];
	or.b32  	%r614, %r554, 128;
	add.s32 	%r615, %r614, %r126;
	mad.lo.s32 	%r616, %r615, 12288, %r48;
	mul.hi.s32 	%r617, %r616, 715827883;
	shr.u32 	%r618, %r617, 31;
	shr.s32 	%r619, %r617, 26;
	add.s32 	%r620, %r619, %r618;
	setp.lt.s32 	%p177, %r616, 0;
	mul.lo.s32 	%r621, %r620, 402653184;
	setp.ne.s32 	%p178, %r621, %r616;
	and.pred  	%p179, %p177, %p178;
	selp.s32 	%r622, -1, 0, %p179;
	add.s32 	%r623, %r620, %r622;
	mad.lo.s32 	%r624, %r623, -402653184, %r616;
	mul.wide.s32 	%rd138, %r624, 4;
	add.s64 	%rd139, %rd2, %rd138;
	ld.global.v4.u32 	{%r625, %r626, %r627, %r628}, [%rd139];
	or.b32  	%r629, %r554, 160;
	add.s32 	%r630, %r629, %r126;
	mad.lo.s32 	%r631, %r630, 12288, %r48;
	mul.hi.s32 	%r632, %r631, 715827883;
	shr.u32 	%r633, %r632, 31;
	shr.s32 	%r634, %r632, 26;
	add.s32 	%r635, %r634, %r633;
	setp.lt.s32 	%p180, %r631, 0;
	mul.lo.s32 	%r636, %r635, 402653184;
	setp.ne.s32 	%p181, %r636, %r631;
	and.pred  	%p182, %p180, %p181;
	selp.s32 	%r637, -1, 0, %p182;
	add.s32 	%r638, %r635, %r637;
	mad.lo.s32 	%r639, %r638, -402653184, %r631;
	mul.wide.s32 	%rd140, %r639, 4;
	add.s64 	%rd141, %rd2, %rd140;
	ld.global.v4.u32 	{%r640, %r641, %r642, %r643}, [%rd141];
	or.b32  	%r644, %r554, 192;
	add.s32 	%r645, %r644, %r126;
	mad.lo.s32 	%r646, %r645, 12288, %r48;
	mul.hi.s32 	%r647, %r646, 715827883;
	shr.u32 	%r648, %r647, 31;
	shr.s32 	%r649, %r647, 26;
	add.s32 	%r650, %r649, %r648;
	setp.lt.s32 	%p183, %r646, 0;
	mul.lo.s32 	%r651, %r650, 402653184;
	setp.ne.s32 	%p184, %r651, %r646;
	and.pred  	%p185, %p183, %p184;
	selp.s32 	%r652, -1, 0, %p185;
	add.s32 	%r653, %r650, %r652;
	mad.lo.s32 	%r654, %r653, -402653184, %r646;
	mul.wide.s32 	%rd142, %r654, 4;
	add.s64 	%rd143, %rd2, %rd142;
	ld.global.v4.u32 	{%r655, %r656, %r657, %r658}, [%rd143];
	or.b32  	%r659, %r554, 224;
	add.s32 	%r660, %r659, %r126;
	mad.lo.s32 	%r661, %r660, 12288, %r48;
	mul.hi.s32 	%r662, %r661, 715827883;
	shr.u32 	%r663, %r662, 31;
	shr.s32 	%r664, %r662, 26;
	add.s32 	%r665, %r664, %r663;
	setp.lt.s32 	%p186, %r661, 0;
	mul.lo.s32 	%r666, %r665, 402653184;
	setp.ne.s32 	%p187, %r666, %r661;
	and.pred  	%p188, %p186, %p187;
	selp.s32 	%r667, -1, 0, %p188;
	add.s32 	%r668, %r665, %r667;
	mad.lo.s32 	%r669, %r668, -402653184, %r661;
	mul.wide.s32 	%rd144, %r669, 4;
	add.s64 	%rd145, %rd2, %rd144;
	ld.global.v4.u32 	{%r670, %r671, %r672, %r673}, [%rd145];
	selp.b32 	%r674, %r567, %r565, %p164;
	shfl.sync.bfly.b32	%r675, %r674, 8, 31, -1;
	selp.b32 	%r425, %r565, %r675, %p164;
	selp.b32 	%r426, %r675, %r567, %p164;
	selp.b32 	%r676, %r568, %r566, %p164;
	shfl.sync.bfly.b32	%r677, %r676, 8, 31, -1;
	selp.b32 	%r433, %r566, %r677, %p164;
	selp.b32 	%r434, %r677, %r568, %p164;
	selp.b32 	%r678, %r582, %r580, %p164;
	shfl.sync.bfly.b32	%r679, %r678, 8, 31, -1;
	selp.b32 	%r441, %r580, %r679, %p164;
	selp.b32 	%r442, %r679, %r582, %p164;
	selp.b32 	%r680, %r583, %r581, %p164;
	shfl.sync.bfly.b32	%r681, %r680, 8, 31, -1;
	selp.b32 	%r449, %r581, %r681, %p164;
	selp.b32 	%r450, %r681, %r583, %p164;
	selp.b32 	%r682, %r597, %r595, %p164;
	shfl.sync.bfly.b32	%r683, %r682, 8, 31, -1;
	selp.b32 	%r457, %r595, %r683, %p164;
	selp.b32 	%r458, %r683, %r597, %p164;
	selp.b32 	%r684, %r598, %r596, %p164;
	shfl.sync.bfly.b32	%r685, %r684, 8, 31, -1;
	selp.b32 	%r465, %r596, %r685, %p164;
	selp.b32 	%r466, %r685, %r598, %p164;
	selp.b32 	%r686, %r612, %r610, %p164;
	shfl.sync.bfly.b32	%r687, %r686, 8, 31, -1;
	selp.b32 	%r473, %r610, %r687, %p164;
	selp.b32 	%r474, %r687, %r612, %p164;
	selp.b32 	%r688, %r613, %r611, %p164;
	shfl.sync.bfly.b32	%r689, %r688, 8, 31, -1;
	selp.b32 	%r481, %r611, %r689, %p164;
	selp.b32 	%r482, %r689, %r613, %p164;
	selp.b32 	%r690, %r627, %r625, %p164;
	shfl.sync.bfly.b32	%r691, %r690, 8, 31, -1;
	selp.b32 	%r489, %r625, %r691, %p164;
	selp.b32 	%r490, %r691, %r627, %p164;
	selp.b32 	%r692, %r628, %r626, %p164;
	shfl.sync.bfly.b32	%r693, %r692, 8, 31, -1;
	selp.b32 	%r497, %r626, %r693, %p164;
	selp.b32 	%r498, %r693, %r628, %p164;
	selp.b32 	%r694, %r642, %r640, %p164;
	shfl.sync.bfly.b32	%r695, %r694, 8, 31, -1;
	selp.b32 	%r505, %r640, %r695, %p164;
	selp.b32 	%r506, %r695, %r642, %p164;
	selp.b32 	%r696, %r643, %r641, %p164;
	shfl.sync.bfly.b32	%r697, %r696, 8, 31, -1;
	selp.b32 	%r513, %r641, %r697, %p164;
	selp.b32 	%r514, %r697, %r643, %p164;
	selp.b32 	%r698, %r657, %r655, %p164;
	shfl.sync.bfly.b32	%r699, %r698, 8, 31, -1;
	selp.b32 	%r521, %r655, %r699, %p164;
	selp.b32 	%r522, %r699, %r657, %p164;
	selp.b32 	%r700, %r658, %r656, %p164;
	shfl.sync.bfly.b32	%r701, %r700, 8, 31, -1;
	selp.b32 	%r529, %r656, %r701, %p164;
	selp.b32 	%r530, %r701, %r658, %p164;
	selp.b32 	%r702, %r672, %r670, %p164;
	shfl.sync.bfly.b32	%r703, %r702, 8, 31, -1;
	selp.b32 	%r537, %r670, %r703, %p164;
	selp.b32 	%r538, %r703, %r672, %p164;
	selp.b32 	%r704, %r673, %r671, %p164;
	shfl.sync.bfly.b32	%r705, %r704, 8, 31, -1;
	selp.b32 	%r545, %r671, %r705, %p164;
	selp.b32 	%r546, %r705, %r673, %p164;
	mov.u32 	%r547, 21520;
	// begin inline asm
	prmt.b32 %r424, %r425, %r426, %r547;
	// end inline asm
	mov.u32 	%r551, 30258;
	// begin inline asm
	prmt.b32 %r428, %r425, %r426, %r551;
	// end inline asm
	// begin inline asm
	prmt.b32 %r432, %r433, %r434, %r547;
	// end inline asm
	// begin inline asm
	prmt.b32 %r436, %r433, %r434, %r551;
	// end inline asm
	// begin inline asm
	prmt.b32 %r440, %r441, %r442, %r547;
	// end inline asm
	// begin inline asm
	prmt.b32 %r444, %r441, %r442, %r551;
	// end inline asm
	// begin inline asm
	prmt.b32 %r448, %r449, %r450, %r547;
	// end inline asm
	// begin inline asm
	prmt.b32 %r452, %r449, %r450, %r551;
	// end inline asm
	// begin inline asm
	prmt.b32 %r456, %r457, %r458, %r547;
	// end inline asm
	// begin inline asm
	prmt.b32 %r460, %r457, %r458, %r551;
	// end inline asm
	// begin inline asm
	prmt.b32 %r464, %r465, %r466, %r547;
	// end inline asm
	// begin inline asm
	prmt.b32 %r468, %r465, %r466, %r551;
	// end inline asm
	// begin inline asm
	prmt.b32 %r472, %r473, %r474, %r547;
	// end inline asm
	// begin inline asm
	prmt.b32 %r476, %r473, %r474, %r551;
	// end inline asm
	// begin inline asm
	prmt.b32 %r480, %r481, %r482, %r547;
	// end inline asm
	// begin inline asm
	prmt.b32 %r484, %r481, %r482, %r551;
	// end inline asm
	// begin inline asm
	prmt.b32 %r488, %r489, %r490, %r547;
	// end inline asm
	// begin inline asm
	prmt.b32 %r492, %r489, %r490, %r551;
	// end inline asm
	// begin inline asm
	prmt.b32 %r496, %r497, %r498, %r547;
	// end inline asm
	// begin inline asm
	prmt.b32 %r500, %r497, %r498, %r551;
	// end inline asm
	// begin inline asm
	prmt.b32 %r504, %r505, %r506, %r547;
	// end inline asm
	// begin inline asm
	prmt.b32 %r508, %r505, %r506, %r551;
	// end inline asm
	// begin inline asm
	prmt.b32 %r512, %r513, %r514, %r547;
	// end inline asm
	// begin inline asm
	prmt.b32 %r516, %r513, %r514, %r551;
	// end inline asm
	// begin inline asm
	prmt.b32 %r520, %r521, %r522, %r547;
	// end inline asm
	// begin inline asm
	prmt.b32 %r524, %r521, %r522, %r551;
	// end inline asm
	// begin inline asm
	prmt.b32 %r528, %r529, %r530, %r547;
	// end inline asm
	// begin inline asm
	prmt.b32 %r532, %r529, %r530, %r551;
	// end inline asm
	// begin inline asm
	prmt.b32 %r536, %r537, %r538, %r547;
	// end inline asm
	// begin inline asm
	prmt.b32 %r540, %r537, %r538, %r551;
	// end inline asm
	// begin inline asm
	prmt.b32 %r544, %r545, %r546, %r547;
	// end inline asm
	// begin inline asm
	prmt.b32 %r548, %r545, %r546, %r551;
	// end inline asm
	st.shared.u32 	[%rd6], %r424;
	st.shared.u32 	[%rd7+128], %r428;
	st.shared.u32 	[%rd7+4], %r432;
	st.shared.u32 	[%rd7+132], %r436;
	st.shared.u32 	[%rd8], %r440;
	st.shared.u32 	[%rd9+128], %r444;
	st.shared.u32 	[%rd9+4], %r448;
	st.shared.u32 	[%rd9+132], %r452;
	st.shared.u32 	[%rd10], %r456;
	st.shared.u32 	[%rd11+128], %r460;
	st.shared.u32 	[%rd11+4], %r464;
	st.shared.u32 	[%rd11+132], %r468;
	st.shared.u32 	[%rd12], %r472;
	st.shared.u32 	[%rd13+128], %r476;
	st.shared.u32 	[%rd13+4], %r480;
	st.shared.u32 	[%rd13+132], %r484;
	st.shared.u32 	[%rd14], %r488;
	st.shared.u32 	[%rd15+128], %r492;
	st.shared.u32 	[%rd15+4], %r496;
	st.shared.u32 	[%rd15+132], %r500;
	st.shared.u32 	[%rd16], %r504;
	st.shared.u32 	[%rd17+128], %r508;
	st.shared.u32 	[%rd17+4], %r512;
	st.shared.u32 	[%rd17+132], %r516;
	st.shared.u32 	[%rd18], %r520;
	st.shared.u32 	[%rd19+128], %r524;
	st.shared.u32 	[%rd19+4], %r528;
	st.shared.u32 	[%rd19+132], %r532;
	st.shared.u32 	[%rd20], %r536;
	st.shared.u32 	[%rd21+128], %r540;
	st.shared.u32 	[%rd21+4], %r544;
	st.shared.u32 	[%rd21+132], %r548;
	bar.sync 	0;
	mov.u32 	%r1313, 256;
	mov.u64 	%rd246, %rd39;
	mov.u64 	%rd247, %rd38;
	mov.u32 	%r1314, %r1309;
	mov.u32 	%r1315, %r1310;
$L__BB0_66:                             // %L16735
                                        //   Parent Loop BB0_65 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	mov.u32 	%r1310, %r1316;
	mov.u32 	%r1309, %r1315;
	ld.shared.u32 	%r1316, [%rd246];
	// begin inline asm
	mov.b32 %r711, {%rs92, %rs92};
	// end inline asm
	// begin inline asm
	mov.b32 %r722, {%rs66, %rs66};
	// end inline asm
	xor.b32  	%r710, %r1316, -2004318072;
	mov.u32 	%r709, 983055;
	// begin inline asm
	lop3.b32 %r708, %r709, %r710, %r711, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r712, {%rs100, %rs100};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r713, %r711, %r712;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r716, %r708, %r713;
	// end inline asm
	mov.u32 	%r720, 15728880;
	// begin inline asm
	lop3.b32 %r719, %r720, %r710, %r722, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r723, {%rs100, %rs100};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r724, %r722, %r723;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r727, %r719, %r724;
	// end inline asm
	shr.u32 	%r732, %r710, 8;
	// begin inline asm
	lop3.b32 %r730, %r709, %r732, %r711, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r734, {%rs100, %rs100};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r735, %r711, %r734;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r738, %r730, %r735;
	// end inline asm
	// begin inline asm
	lop3.b32 %r741, %r720, %r732, %r722, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r745, {%rs100, %rs100};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r746, %r722, %r745;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r749, %r741, %r746;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r752, %r214;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r754, %r752, %r716;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r757, %r214;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r759, %r757, %r727;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r762, %r214;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r764, %r762, %r738;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r767, %r214;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r769, %r767, %r749;
	// end inline asm
	// begin inline asm
	mov.b32 %r777, {%rs92, %rs92};
	// end inline asm
	// begin inline asm
	mov.b32 %r788, {%rs66, %rs66};
	// end inline asm
	xor.b32  	%r776, %r1314, -2004318072;
	// begin inline asm
	lop3.b32 %r774, %r709, %r776, %r777, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r778, {%rs100, %rs100};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r779, %r777, %r778;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r782, %r774, %r779;
	// end inline asm
	// begin inline asm
	lop3.b32 %r785, %r720, %r776, %r788, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r789, {%rs100, %rs100};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r790, %r788, %r789;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r793, %r785, %r790;
	// end inline asm
	shr.u32 	%r798, %r776, 8;
	// begin inline asm
	lop3.b32 %r796, %r709, %r798, %r777, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r800, {%rs100, %rs100};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r801, %r777, %r800;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r804, %r796, %r801;
	// end inline asm
	// begin inline asm
	lop3.b32 %r807, %r720, %r798, %r788, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r811, {%rs100, %rs100};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r812, %r788, %r811;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r815, %r807, %r812;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r818, %r160, %r782, %r754;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r822, %r160, %r793, %r759;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r826, %r160, %r804, %r764;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r830, %r160, %r815, %r769;
	// end inline asm
	// begin inline asm
	mov.b32 %r839, {%rs92, %rs92};
	// end inline asm
	// begin inline asm
	mov.b32 %r850, {%rs66, %rs66};
	// end inline asm
	xor.b32  	%r838, %r1309, -2004318072;
	// begin inline asm
	lop3.b32 %r836, %r709, %r838, %r839, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r840, {%rs100, %rs100};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r841, %r839, %r840;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r844, %r836, %r841;
	// end inline asm
	// begin inline asm
	lop3.b32 %r847, %r720, %r838, %r850, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r851, {%rs100, %rs100};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r852, %r850, %r851;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r855, %r847, %r852;
	// end inline asm
	shr.u32 	%r860, %r838, 8;
	// begin inline asm
	lop3.b32 %r858, %r709, %r860, %r839, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r862, {%rs100, %rs100};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r863, %r839, %r862;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r866, %r858, %r863;
	// end inline asm
	// begin inline asm
	lop3.b32 %r869, %r720, %r860, %r850, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r873, {%rs100, %rs100};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r874, %r850, %r873;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r877, %r869, %r874;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r880, %r178;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r882, %r880, %r844, %r818;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r886, %r178;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r888, %r886, %r855, %r822;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r892, %r178;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r894, %r892, %r866, %r826;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r898, %r178;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r900, %r898, %r877, %r830;
	// end inline asm
	// begin inline asm
	mov.b32 %r909, {%rs92, %rs92};
	// end inline asm
	// begin inline asm
	mov.b32 %r920, {%rs66, %rs66};
	// end inline asm
	xor.b32  	%r908, %r1310, -2004318072;
	// begin inline asm
	lop3.b32 %r906, %r709, %r908, %r909, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r910, {%rs100, %rs100};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r911, %r909, %r910;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r914, %r906, %r911;
	// end inline asm
	// begin inline asm
	lop3.b32 %r917, %r720, %r908, %r920, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r921, {%rs100, %rs100};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r922, %r920, %r921;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r925, %r917, %r922;
	// end inline asm
	shr.u32 	%r930, %r908, 8;
	// begin inline asm
	lop3.b32 %r928, %r709, %r930, %r909, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r932, {%rs100, %rs100};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r933, %r909, %r932;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r936, %r928, %r933;
	// end inline asm
	// begin inline asm
	lop3.b32 %r939, %r720, %r930, %r920, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r943, {%rs100, %rs100};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r944, %r920, %r943;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r947, %r939, %r944;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r973, %r196, %r914, %r882;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r970, %r196, %r925, %r888;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r982, %r196, %r936, %r894;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r979, %r196, %r947, %r900;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r966, %r220;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r968, %r966, %r970;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r971, %r217, %r973, %r968;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r975, %r220;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r977, %r975, %r979;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r980, %r217, %r982, %r977;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r984, %r220, %r973;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r987, %r217, %r970, %r984;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r991, %r220, %r982;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r994, %r217, %r979, %r991;
	// end inline asm
	mov.u32 	%r1006, 0;
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r998, %r999}, {%r276, %r282, %r279, %r285}, {%r971, %r987}, {%r1006, %r1006};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1008, %r1009}, {%r276, %r282, %r279, %r285}, {%r980, %r994}, {%r1006, %r1006};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1018, %r1019}, {%r317, %r323, %r320, %r326}, {%r998, %r999}, {%r1006, %r1006};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1028, %r1029}, {%r317, %r323, %r320, %r326}, {%r1008, %r1009}, {%r1006, %r1006};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1038, %r64, %r1018;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1041, %r64, %r1019;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1044, %r64, %r1028;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1047, %r64, %r1029;
	// end inline asm
	mov.u16 	%rs75, -14592;
	// begin inline asm
	mov.b32 %r1050, {%rs75, %rs75};
	// end inline asm
	mov.u16 	%rs77, 18176;
	// begin inline asm
	mov.b32 %r1051, {%rs77, %rs77};
	// end inline asm
	// begin inline asm
	max.f16x2 %r1052, %r1038, %r1050;
	// end inline asm
	// begin inline asm
	min.f16x2 %r1055, %r1052, %r1051;
	// end inline asm
	// begin inline asm
	mov.b32 %r1058, {%rs75, %rs75};
	// end inline asm
	// begin inline asm
	mov.b32 %r1059, {%rs77, %rs77};
	// end inline asm
	// begin inline asm
	max.f16x2 %r1060, %r1041, %r1058;
	// end inline asm
	// begin inline asm
	min.f16x2 %r1063, %r1060, %r1059;
	// end inline asm
	// begin inline asm
	mov.b32 %r1066, {%rs75, %rs75};
	// end inline asm
	// begin inline asm
	mov.b32 %r1067, {%rs77, %rs77};
	// end inline asm
	// begin inline asm
	max.f16x2 %r1068, %r1044, %r1066;
	// end inline asm
	// begin inline asm
	min.f16x2 %r1071, %r1068, %r1067;
	// end inline asm
	// begin inline asm
	mov.b32 %r1074, {%rs75, %rs75};
	// end inline asm
	// begin inline asm
	mov.b32 %r1075, {%rs77, %rs77};
	// end inline asm
	// begin inline asm
	max.f16x2 %r1076, %r1047, %r1074;
	// end inline asm
	// begin inline asm
	min.f16x2 %r1079, %r1076, %r1075;
	// end inline asm
	// begin inline asm
	mov.b32 %r1085, {%rs92, %rs92};
	// end inline asm
	// begin inline asm
	mov.b32 %r1083, {%rs100, %rs100};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1084, %r1085, %r1083;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1087, %r1055, %r1084;
	// end inline asm
	// begin inline asm
	mov.b32 %r1090, {%rs100, %rs100};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1091, %r1085, %r1090;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1094, %r1063, %r1091;
	// end inline asm
	// begin inline asm
	mov.b32 %r1097, {%rs100, %rs100};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1098, %r1085, %r1097;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1101, %r1071, %r1098;
	// end inline asm
	// begin inline asm
	mov.b32 %r1104, {%rs100, %rs100};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1105, %r1085, %r1104;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1108, %r1079, %r1105;
	// end inline asm
	mov.u32 	%r1114, 25152;
	// begin inline asm
	prmt.b32 %r1111, %r1087, %r1101, %r1114;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1115, %r1094, %r1108, %r1114;
	// end inline asm
	shl.b32 	%r1122, %r1115, 4;
	mov.u32 	%r1120, 252645135;
	// begin inline asm
	lop3.b32 %r1119, %r1120, %r1111, %r1122, 202;
	// end inline asm
	xor.b32  	%r1123, %r1119, -2004318072;
	st.shared.u32 	[%rd247], %r1123;
	add.s32 	%r1313, %r1313, -8;
	add.s64 	%rd247, %rd247, 1156;
	add.s64 	%rd246, %rd246, 1156;
	setp.eq.s32 	%p189, %r1313, 0;
	mov.u32 	%r1314, %r1309;
	mov.u32 	%r1315, %r1310;
	@%p189 bra 	$L__BB0_67;
	bra.uni 	$L__BB0_66;
$L__BB0_67:                             // %guard_exit13181
                                        //   in Loop: Header=BB0_65 Depth=1
	bar.sync 	0;
	or.b32  	%r89, %r54, %r45;
	ld.shared.u32 	%r1129, [%rd22];
	ld.shared.u32 	%r1130, [%rd23+128];
	ld.shared.u32 	%r1137, [%rd23+4];
	ld.shared.u32 	%r1138, [%rd23+132];
	ld.shared.u32 	%r1145, [%rd24];
	ld.shared.u32 	%r1146, [%rd25+128];
	ld.shared.u32 	%r1153, [%rd25+4];
	ld.shared.u32 	%r1154, [%rd25+132];
	ld.shared.u32 	%r1161, [%rd26];
	ld.shared.u32 	%r1162, [%rd27+128];
	ld.shared.u32 	%r1169, [%rd27+4];
	ld.shared.u32 	%r1170, [%rd27+132];
	ld.shared.u32 	%r1177, [%rd28];
	ld.shared.u32 	%r1178, [%rd29+128];
	ld.shared.u32 	%r1185, [%rd29+4];
	ld.shared.u32 	%r1186, [%rd29+132];
	ld.shared.u32 	%r1193, [%rd30];
	ld.shared.u32 	%r1194, [%rd31+128];
	ld.shared.u32 	%r1201, [%rd31+4];
	ld.shared.u32 	%r1202, [%rd31+132];
	ld.shared.u32 	%r1209, [%rd32];
	ld.shared.u32 	%r1210, [%rd33+128];
	ld.shared.u32 	%r1217, [%rd33+4];
	ld.shared.u32 	%r1218, [%rd33+132];
	ld.shared.u32 	%r1225, [%rd34];
	ld.shared.u32 	%r1226, [%rd35+128];
	ld.shared.u32 	%r1233, [%rd35+4];
	ld.shared.u32 	%r1234, [%rd35+132];
	ld.shared.u32 	%r1241, [%rd36];
	ld.shared.u32 	%r1242, [%rd37+128];
	ld.shared.u32 	%r1249, [%rd37+4];
	ld.shared.u32 	%r1250, [%rd37+132];
	// begin inline asm
	prmt.b32 %r1124, %r1129, %r1130, %r547;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1128, %r1129, %r1130, %r551;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1132, %r1137, %r1138, %r547;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1136, %r1137, %r1138, %r551;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1140, %r1145, %r1146, %r547;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1144, %r1145, %r1146, %r551;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1148, %r1153, %r1154, %r547;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1152, %r1153, %r1154, %r551;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1156, %r1161, %r1162, %r547;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1160, %r1161, %r1162, %r551;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1164, %r1169, %r1170, %r547;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1168, %r1169, %r1170, %r551;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1172, %r1177, %r1178, %r547;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1176, %r1177, %r1178, %r551;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1180, %r1185, %r1186, %r547;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1184, %r1185, %r1186, %r551;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1188, %r1193, %r1194, %r547;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1192, %r1193, %r1194, %r551;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1196, %r1201, %r1202, %r547;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1200, %r1201, %r1202, %r551;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1204, %r1209, %r1210, %r547;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1208, %r1209, %r1210, %r551;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1212, %r1217, %r1218, %r547;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1216, %r1217, %r1218, %r551;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1220, %r1225, %r1226, %r547;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1224, %r1225, %r1226, %r551;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1228, %r1233, %r1234, %r547;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1232, %r1233, %r1234, %r551;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1236, %r1241, %r1242, %r547;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1240, %r1241, %r1242, %r551;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1244, %r1249, %r1250, %r547;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1248, %r1249, %r1250, %r551;
	// end inline asm
	selp.b32 	%r1252, %r1128, %r1124, %p164;
	shfl.sync.bfly.b32	%r94, %r1252, 8, 31, -1;
	selp.b32 	%r1253, %r1136, %r1132, %p164;
	shfl.sync.bfly.b32	%r95, %r1253, 8, 31, -1;
	selp.b32 	%r1254, %r1144, %r1140, %p164;
	shfl.sync.bfly.b32	%r1255, %r1254, 8, 31, -1;
	selp.b32 	%r96, %r1140, %r1255, %p164;
	selp.b32 	%r97, %r1255, %r1144, %p164;
	selp.b32 	%r1256, %r1152, %r1148, %p164;
	shfl.sync.bfly.b32	%r1257, %r1256, 8, 31, -1;
	selp.b32 	%r98, %r1148, %r1257, %p164;
	selp.b32 	%r99, %r1257, %r1152, %p164;
	selp.b32 	%r1258, %r1160, %r1156, %p164;
	shfl.sync.bfly.b32	%r1259, %r1258, 8, 31, -1;
	selp.b32 	%r100, %r1156, %r1259, %p164;
	selp.b32 	%r101, %r1259, %r1160, %p164;
	selp.b32 	%r1260, %r1168, %r1164, %p164;
	shfl.sync.bfly.b32	%r1261, %r1260, 8, 31, -1;
	selp.b32 	%r102, %r1164, %r1261, %p164;
	selp.b32 	%r103, %r1261, %r1168, %p164;
	selp.b32 	%r1262, %r1176, %r1172, %p164;
	shfl.sync.bfly.b32	%r1263, %r1262, 8, 31, -1;
	selp.b32 	%r104, %r1172, %r1263, %p164;
	selp.b32 	%r105, %r1263, %r1176, %p164;
	selp.b32 	%r1264, %r1184, %r1180, %p164;
	shfl.sync.bfly.b32	%r1265, %r1264, 8, 31, -1;
	selp.b32 	%r106, %r1180, %r1265, %p164;
	selp.b32 	%r107, %r1265, %r1184, %p164;
	selp.b32 	%r1266, %r1192, %r1188, %p164;
	shfl.sync.bfly.b32	%r1267, %r1266, 8, 31, -1;
	selp.b32 	%r108, %r1188, %r1267, %p164;
	selp.b32 	%r109, %r1267, %r1192, %p164;
	selp.b32 	%r1268, %r1200, %r1196, %p164;
	shfl.sync.bfly.b32	%r1269, %r1268, 8, 31, -1;
	selp.b32 	%r110, %r1196, %r1269, %p164;
	selp.b32 	%r111, %r1269, %r1200, %p164;
	selp.b32 	%r1270, %r1208, %r1204, %p164;
	shfl.sync.bfly.b32	%r1271, %r1270, 8, 31, -1;
	selp.b32 	%r112, %r1204, %r1271, %p164;
	selp.b32 	%r113, %r1271, %r1208, %p164;
	selp.b32 	%r1272, %r1216, %r1212, %p164;
	shfl.sync.bfly.b32	%r1273, %r1272, 8, 31, -1;
	selp.b32 	%r114, %r1212, %r1273, %p164;
	selp.b32 	%r115, %r1273, %r1216, %p164;
	selp.b32 	%r1274, %r1224, %r1220, %p164;
	shfl.sync.bfly.b32	%r1275, %r1274, 8, 31, -1;
	selp.b32 	%r116, %r1220, %r1275, %p164;
	selp.b32 	%r117, %r1275, %r1224, %p164;
	selp.b32 	%r1276, %r1232, %r1228, %p164;
	shfl.sync.bfly.b32	%r1277, %r1276, 8, 31, -1;
	selp.b32 	%r118, %r1228, %r1277, %p164;
	selp.b32 	%r119, %r1277, %r1232, %p164;
	selp.b32 	%r1278, %r1240, %r1236, %p164;
	shfl.sync.bfly.b32	%r1279, %r1278, 8, 31, -1;
	selp.b32 	%r120, %r1236, %r1279, %p164;
	selp.b32 	%r121, %r1279, %r1240, %p164;
	selp.b32 	%r1280, %r1248, %r1244, %p164;
	shfl.sync.bfly.b32	%r1281, %r1280, 8, 31, -1;
	selp.b32 	%r122, %r1244, %r1281, %p164;
	selp.b32 	%r123, %r1281, %r1248, %p164;
	setp.gt.u32 	%p191, %r89, 23;
	shl.b32 	%r1304, %r89, 11;
	@%p191 bra 	$L__BB0_89;
// %bb.68:                              // %guard_exit13181.pass12253_crit_edge
                                        //   in Loop: Header=BB0_65 Depth=1
	or.b32  	%r1290, %r1304, %r44;
	or.b32  	%r1291, %r1290, %r50;
	or.b32  	%r1321, %r1291, %r47;
	bra.uni 	$L__BB0_90;
$L__BB0_91:                             // %L28289
	st.global.u32 	[%rd4], %r1303;
	ret;
$L__BB0_7:                              // %L166
	mov.u32 	%r1302, 2;
	st.global.u32 	[%rd4], %r1302;
	mov.u64 	%rd244, exception2671;
	cvta.global.u64 	%rd245, %rd244;
	{ // callseq 4, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd245;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 4
	{ // callseq 5, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd46;
	st.param.b32 	[param0+8], %r125;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 5
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
$L__BB0_10:                             // %L275
	mov.u32 	%r1301, 3;
	st.global.u32 	[%rd4], %r1301;
	mov.u64 	%rd242, exception2671;
	cvta.global.u64 	%rd243, %rd242;
	{ // callseq 2, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd243;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 2
	{ // callseq 3, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd46;
	st.param.b32 	[param0+8], %r125;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 3
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
$L__BB0_1:                              // %L8
	mov.u64 	%rd51, exception1;
	cvta.global.u64 	%rd52, %rd51;
	{ // callseq 0, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd52;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 0
	{ // callseq 1, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd46;
	st.param.b32 	[param0+8], %r125;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 1
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
                                        // -- End function
}
