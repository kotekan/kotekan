// PTX kernel code for the CUDA upchannelizer
// This file has been generated automatically by `upchan.jl`.
// Do not modify this file, your changes will be lost.

// PTX CompilerJob of MethodInstance for upchan(::Int32, ::Int32, ::Int32, ::Int32, ::CuDeviceVector{Float16x2, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int32, 1}) for sm_86, minthreads=256, blocks_per_sm=4

//
// Generated by LLVM NVPTX Back-End
//

.version 8.2
.target sm_86
.address_size 64

	// .globl	_Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE // -- Begin function _Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE
.func gpu_report_exception
(
	.param .b64 gpu_report_exception_param_0
)
.noreturn
{
	trap;
}
.func gpu_signal_exception
(
	.param .align 8 .b8 gpu_signal_exception_param_0[16]
)
.noreturn
{
	trap;
}
.extern .shared .align 32 .b8 shmem[];
.global .align 1 .b8 exception2667[6] = {101, 114, 114, 111, 114, 0};
.global .align 1 .b8 exception12688[10] = {101, 120, 99, 101, 112, 116, 105, 111, 110, 0};
                                        // @_Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE
.visible .entry _Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE(
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_0[16],
	.param .u32 _Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_1,
	.param .u32 _Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_2,
	.param .u32 _Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_3,
	.param .u32 _Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_4,
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_5[32],
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_6[32],
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_7[32],
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_8[32]
)
.reqntid 256, 1, 1
.minnctapersm 4
{
	.reg .pred 	%p<219>;
	.reg .b16 	%rs<96>;
	.reg .b32 	%r<1322>;
	.reg .f32 	%f<692>;
	.reg .b64 	%rd<245>;

// %bb.0:                               // %conversion
	ld.param.u32 	%r125, [_Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_0+8];
	ld.param.u64 	%rd46, [_Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_0];
	// begin inline asm
	mov.u32 %r130, %dynamic_smem_size;
	// end inline asm
	setp.gt.u32 	%p1, %r130, 73983;
	@%p1 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:                              // %L16
	ld.param.u64 	%rd47, [_Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_8];
	ld.param.u32 	%r126, [_Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_1];
	mov.u32 	%r1, %tid.x;
	mov.u32 	%r2, %tid.y;
	shl.b32 	%r3, %r2, 5;
	mov.u32 	%r4, %ctaid.x;
	shl.b32 	%r5, %r4, 8;
	or.b32  	%r131, %r3, %r1;
	or.b32  	%r132, %r131, %r5;
	mul.wide.u32 	%rd53, %r132, 4;
	add.s64 	%rd4, %rd47, %rd53;
	mov.u32 	%r133, 1;
	st.global.u32 	[%rd4], %r133;
	setp.lt.s32 	%p2, %r126, 0;
	@%p2 bra 	$L__BB0_7;
// %bb.3:                               // %L115
	ld.param.u32 	%r127, [_Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_2];
	setp.lt.s32 	%p3, %r127, %r126;
	setp.gt.s32 	%p4, %r127, 262144;
	or.pred  	%p5, %p3, %p4;
	@%p5 bra 	$L__BB0_7;
// %bb.4:                               // %L125
	ld.param.u32 	%r128, [_Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_3];
	sub.s32 	%r134, %r127, %r126;
	and.b32  	%r135, %r134, 255;
	setp.ne.s32 	%p6, %r135, 0;
	setp.lt.s32 	%p7, %r128, 0;
	or.pred  	%p8, %p6, %p7;
	@%p8 bra 	$L__BB0_7;
// %bb.5:                               // %L131
	ld.param.u32 	%r129, [_Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_4];
	setp.lt.s32 	%p9, %r129, %r128;
	setp.gt.s32 	%p10, %r129, 32768;
	or.pred  	%p11, %p9, %p10;
	@%p11 bra 	$L__BB0_7;
// %bb.6:                               // %L141
	sub.s32 	%r136, %r129, %r128;
	add.s32 	%r137, %r136, 3;
	and.b32  	%r138, %r137, 31;
	setp.eq.s32 	%p12, %r138, 0;
	@%p12 bra 	$L__BB0_8;
	bra.uni 	$L__BB0_7;
$L__BB0_8:                              // %pass118
	and.b32  	%r60, %r1, 3;
	or.b32  	%r61, %r60, 4;
	mov.f32 	%f109, 0f40000000;
	mov.f32 	%f110, 0f41F80000;
	div.approx.f32 	%f69, %f110, %f109;
	cvt.rn.f32.s32 	%f111, %r60;
	sub.f32 	%f112, %f111, %f69;
	mov.f32 	%f141, 0f41000000;
	div.approx.f32 	%f71, %f112, %f141;
	setp.ne.f32 	%p18, %f71, 0f00000000;
	mov.f32 	%f675, 0f3F800000;
	mov.f32 	%f668, %f675;
	@%p18 bra 	$L__BB0_9;
	bra.uni 	$L__BB0_10;
$L__BB0_9:                              // %L415
	sin.approx.f32 	%f142, %f71;
	div.approx.f32 	%f668, %f142, %f71;
$L__BB0_10:                             // %L418
	cvt.rn.f32.s32 	%f145, %r61;
	sub.f32 	%f146, %f145, %f69;
	div.approx.f32 	%f5, %f146, %f141;
	setp.eq.f32 	%p24, %f5, 0f00000000;
	mov.f32 	%f669, %f675;
	@%p24 bra 	$L__BB0_12;
// %bb.11:                              // %L435
	sin.approx.f32 	%f176, %f5;
	div.approx.f32 	%f669, %f176, %f5;
$L__BB0_12:                             // %L438
	or.b32  	%r160, %r60, 8;
	or.b32  	%r7, %r60, 12;
	cvt.rn.f32.s32 	%f180, %r160;
	sub.f32 	%f181, %f180, %f69;
	div.approx.f32 	%f9, %f181, %f141;
	setp.eq.f32 	%p30, %f9, 0f00000000;
	mov.f32 	%f670, %f675;
	@%p30 bra 	$L__BB0_14;
// %bb.13:                              // %L517
	sin.approx.f32 	%f211, %f9;
	div.approx.f32 	%f670, %f211, %f9;
$L__BB0_14:                             // %L520
	cvt.rn.f32.s32 	%f214, %r7;
	sub.f32 	%f215, %f214, %f69;
	div.approx.f32 	%f14, %f215, %f141;
	setp.eq.f32 	%p36, %f14, 0f00000000;
	mov.f32 	%f671, %f675;
	@%p36 bra 	$L__BB0_16;
// %bb.15:                              // %L537
	sin.approx.f32 	%f245, %f14;
	div.approx.f32 	%f671, %f245, %f14;
$L__BB0_16:                             // %L540
	or.b32  	%r178, %r60, 16;
	or.b32  	%r9, %r60, 20;
	cvt.rn.f32.s32 	%f249, %r178;
	sub.f32 	%f250, %f249, %f69;
	div.approx.f32 	%f18, %f250, %f141;
	setp.eq.f32 	%p42, %f18, 0f00000000;
	mov.f32 	%f672, %f675;
	@%p42 bra 	$L__BB0_18;
// %bb.17:                              // %L619
	sin.approx.f32 	%f280, %f18;
	div.approx.f32 	%f672, %f280, %f18;
$L__BB0_18:                             // %L622
	cvt.rn.f32.s32 	%f283, %r9;
	sub.f32 	%f284, %f283, %f69;
	div.approx.f32 	%f23, %f284, %f141;
	setp.eq.f32 	%p48, %f23, 0f00000000;
	mov.f32 	%f673, %f675;
	@%p48 bra 	$L__BB0_20;
// %bb.19:                              // %L639
	sin.approx.f32 	%f314, %f23;
	div.approx.f32 	%f673, %f314, %f23;
$L__BB0_20:                             // %L642
	or.b32  	%r196, %r60, 24;
	or.b32  	%r11, %r1, 28;
	cvt.rn.f32.s32 	%f318, %r196;
	sub.f32 	%f319, %f318, %f69;
	div.approx.f32 	%f27, %f319, %f141;
	setp.eq.f32 	%p54, %f27, 0f00000000;
	mov.f32 	%f674, %f675;
	@%p54 bra 	$L__BB0_22;
// %bb.21:                              // %L721
	sin.approx.f32 	%f349, %f27;
	div.approx.f32 	%f674, %f349, %f27;
$L__BB0_22:                             // %L724
	shr.u32 	%r59, %r1, 1;
	cvt.rn.f32.s32 	%f352, %r11;
	sub.f32 	%f353, %f352, %f69;
	div.approx.f32 	%f32, %f353, %f141;
	setp.eq.f32 	%p60, %f32, 0f00000000;
	@%p60 bra 	$L__BB0_24;
// %bb.23:                              // %L741
	sin.approx.f32 	%f383, %f32;
	div.approx.f32 	%f675, %f383, %f32;
$L__BB0_24:                             // %L744
	bfe.u32 	%r240, %r1, 2, 1;
	shr.u32 	%r15, %r1, 3;
	and.b32  	%r16, %r15, 2;
	and.b32  	%r17, %r59, 4;
	or.b32  	%r241, %r240, %r16;
	or.b32  	%r18, %r241, %r17;
	mul.lo.s32 	%r242, %r60, %r18;
	shl.b32 	%r243, %r242, 1;
	neg.s32 	%r244, %r243;
	cvt.rn.f32.s32 	%f454, %r244;
	div.approx.f32 	%f35, %f454, %f141;
	abs.f32 	%f686, %f35;
	setp.lt.f32 	%p75, %f686, 0f40000000;
	@%p75 bra 	$L__BB0_73;
// %bb.25:
	setp.gtu.f32 	%p76, %f686, 0f4B800000;
	@%p76 bra 	$L__BB0_69;
	bra.uni 	$L__BB0_26;
$L__BB0_69:
	mov.b32 	%r63, %f686;
	and.b32  	%r245, %r63, 8388607;
	or.b32  	%r1313, %r245, 1065353216;
	mov.b32 	%f685, %r1313;
	add.s32 	%r246, %r63, -1073741824;
	and.b32  	%r1314, %r246, -8388608;
	setp.eq.s32 	%p82, %r1314, 0;
	@%p82 bra 	$L__BB0_72;
// %bb.70:                              // %__nv_fmaf_rn.exit4.i.i.i593.preheader
	mov.f32 	%f464, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f463,%f464;
	// end inline asm
$L__BB0_71:                             // %__nv_fmaf_rn.exit4.i.i.i593
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r247, %r1314, 192937984;
	add.s32 	%r248, %r1313, %r247;
	mov.b32 	%f465, %r248;
	mul.f32 	%f466, %f463, %f465;
	sub.f32 	%f467, %f465, %f466;
	fma.rn.f32 	%f468, %f467, %f463, %f466;
	sub.f32 	%f469, %f465, %f468;
	fma.rz.f32 	%f470, %f469, %f463, %f468;
	cvt.rzi.f32.f32 	%f471, %f470;
	sub.f32 	%f685, %f465, %f471;
	sub.s32 	%r1314, %r1314, %r247;
	mov.b32 	%r1313, %f685;
	setp.ne.s32 	%p83, %r1314, 0;
	setp.ne.s32 	%p84, %r1313, 0;
	and.pred  	%p85, %p83, %p84;
	@%p85 bra 	$L__BB0_71;
$L__BB0_72:                             // %__internal_fmodf_slowpath_mod.exit.i.i595
	setp.gt.u32 	%p86, %r63, 2139095039;
	selp.f32 	%f472, 0f7FFFFFFF, 0f4B800000, %p86;
	mul.f32 	%f473, %f685, 0f34000000;
	mul.f32 	%f686, %f472, %f473;
	bra.uni 	$L__BB0_73;
$L__BB0_26:                             // %__nv_fast_fdividef.exit.i.i.i572
	div.approx.f32 	%f456, %f686, %f109;
	cvt.rzi.f32.f32 	%f684, %f456;
	fma.rn.f32 	%f73, %f684, 0fC0000000, %f686;
	mov.b32 	%r62, %f73;
	setp.lt.u32 	%p77, %r62, 1073741824;
	@%p77 bra 	$L__BB0_68;
// %bb.27:
	setp.lt.u32 	%p78, %r62, -2147483647;
	@%p78 bra 	$L__BB0_66;
// %bb.28:
	add.f32 	%f461, %f684, 0fBF800000;
	setp.lt.f32 	%p81, %f73, 0fC0000000;
	add.f32 	%f462, %f461, 0fBF800000;
	selp.f32 	%f684, %f462, %f461, %p81;
	bra.uni 	$L__BB0_68;
$L__BB0_66:
	add.f32 	%f684, %f684, 0f3F800000;
	setp.ltu.f32 	%p79, %f73, 0f40800000;
	@%p79 bra 	$L__BB0_68;
// %bb.67:                              // %__nv_fmaf_rn.exit.i.i.i576
	add.f32 	%f457, %f684, 0f3F800000;
	fma.rn.f32 	%f459, %f109, 0fC0400000, %f73;
	setp.ge.f32 	%p80, %f459, 0f00000000;
	add.f32 	%f460, %f457, 0f3F800000;
	selp.f32 	%f684, %f460, %f457, %p80;
$L__BB0_68:                             // %__internal_fmodf_fastpath_quot.exit.i.i579
	fma.rn.f32 	%f686, %f684, 0fC0000000, %f686;
$L__BB0_73:                             // %__internal_fmodf_kernel.exit.i598
	abs.f32 	%f474, %f686;
	setp.gtu.f32 	%p87, %f474, 0f7F800000;
	@%p87 bra 	$L__BB0_75;
// %bb.74:
	mov.b32 	%r249, %f35;
	and.b32  	%r250, %r249, -2147483648;
	mov.b32 	%r251, %f686;
	or.b32  	%r252, %r250, %r251;
	mov.b32 	%f686, %r252;
$L__BB0_75:                             // %__nv_fmodf.exit599
	shl.b32 	%r70, %r1, 1;
	and.b32  	%r261, %r70, 6;
	mov.u32 	%r262, -8;
	sub.s32 	%r263, %r262, %r261;
	mul.lo.s32 	%r264, %r18, %r263;
	cvt.rn.f32.s32 	%f505, %r264;
	div.approx.f32 	%f89, %f505, %f141;
	abs.f32 	%f678, %f89;
	setp.lt.f32 	%p95, %f678, 0f40000000;
	@%p95 bra 	$L__BB0_40;
// %bb.29:
	setp.gtu.f32 	%p96, %f678, 0f4B800000;
	@%p96 bra 	$L__BB0_36;
	bra.uni 	$L__BB0_30;
$L__BB0_36:
	mov.b32 	%r20, %f678;
	and.b32  	%r265, %r20, 8388607;
	or.b32  	%r1305, %r265, 1065353216;
	mov.b32 	%f677, %r1305;
	add.s32 	%r266, %r20, -1073741824;
	and.b32  	%r1306, %r266, -8388608;
	setp.eq.s32 	%p102, %r1306, 0;
	@%p102 bra 	$L__BB0_39;
// %bb.37:                              // %__nv_fmaf_rn.exit4.i.i.i.preheader
	mov.f32 	%f516, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f515,%f516;
	// end inline asm
$L__BB0_38:                             // %__nv_fmaf_rn.exit4.i.i.i
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r267, %r1306, 192937984;
	add.s32 	%r268, %r1305, %r267;
	mov.b32 	%f517, %r268;
	mul.f32 	%f518, %f515, %f517;
	sub.f32 	%f519, %f517, %f518;
	fma.rn.f32 	%f520, %f519, %f515, %f518;
	sub.f32 	%f521, %f517, %f520;
	fma.rz.f32 	%f522, %f521, %f515, %f520;
	cvt.rzi.f32.f32 	%f523, %f522;
	sub.f32 	%f677, %f517, %f523;
	sub.s32 	%r1306, %r1306, %r267;
	mov.b32 	%r1305, %f677;
	setp.ne.s32 	%p103, %r1306, 0;
	setp.ne.s32 	%p104, %r1305, 0;
	and.pred  	%p105, %p103, %p104;
	@%p105 bra 	$L__BB0_38;
$L__BB0_39:                             // %__internal_fmodf_slowpath_mod.exit.i.i
	setp.gt.u32 	%p106, %r20, 2139095039;
	selp.f32 	%f524, 0f7FFFFFFF, 0f4B800000, %p106;
	mul.f32 	%f525, %f677, 0f34000000;
	mul.f32 	%f678, %f524, %f525;
	bra.uni 	$L__BB0_40;
$L__BB0_30:                             // %__nv_fast_fdividef.exit.i.i.i
	div.approx.f32 	%f508, %f678, %f109;
	cvt.rzi.f32.f32 	%f676, %f508;
	fma.rn.f32 	%f38, %f676, 0fC0000000, %f678;
	mov.b32 	%r19, %f38;
	setp.lt.u32 	%p97, %r19, 1073741824;
	@%p97 bra 	$L__BB0_35;
// %bb.31:
	setp.lt.u32 	%p98, %r19, -2147483647;
	@%p98 bra 	$L__BB0_33;
// %bb.32:
	add.f32 	%f513, %f676, 0fBF800000;
	setp.lt.f32 	%p101, %f38, 0fC0000000;
	add.f32 	%f514, %f513, 0fBF800000;
	selp.f32 	%f676, %f514, %f513, %p101;
	bra.uni 	$L__BB0_35;
$L__BB0_33:
	add.f32 	%f676, %f676, 0f3F800000;
	setp.ltu.f32 	%p99, %f38, 0f40800000;
	@%p99 bra 	$L__BB0_35;
// %bb.34:                              // %__nv_fmaf_rn.exit.i.i.i
	add.f32 	%f509, %f676, 0f3F800000;
	fma.rn.f32 	%f511, %f109, 0fC0400000, %f38;
	setp.ge.f32 	%p100, %f511, 0f00000000;
	add.f32 	%f512, %f509, 0f3F800000;
	selp.f32 	%f676, %f512, %f509, %p100;
$L__BB0_35:                             // %__internal_fmodf_fastpath_quot.exit.i.i
	fma.rn.f32 	%f678, %f676, 0fC0000000, %f678;
$L__BB0_40:                             // %__internal_fmodf_kernel.exit.i
	mov.f32 	%f138, 0f00000000;
	abs.f32 	%f526, %f678;
	setp.gtu.f32 	%p107, %f526, 0f7F800000;
	@%p107 bra 	$L__BB0_42;
// %bb.41:
	mov.b32 	%r269, %f89;
	and.b32  	%r270, %r269, -2147483648;
	mov.b32 	%r271, %f678;
	or.b32  	%r272, %r270, %r271;
	mov.b32 	%f678, %r272;
$L__BB0_42:                             // %__nv_fmodf.exit
	mov.f32 	%f559, 0f3F800000;
	div.approx.f32 	%f52, %f138, %f559;
	abs.f32 	%f682, %f52;
	setp.lt.f32 	%p115, %f682, 0f40000000;
	setp.gtu.f32 	%p218, %f682, 0f4B800000;
	mov.f32 	%f690, %f682;
	@%p115 bra 	$L__BB0_83;
// %bb.43:
	@%p218 bra 	$L__BB0_79;
	bra.uni 	$L__BB0_44;
$L__BB0_79:
	mov.b32 	%r72, %f682;
	and.b32  	%r293, %r72, 8388607;
	or.b32  	%r1315, %r293, 1065353216;
	mov.b32 	%f689, %r1315;
	add.s32 	%r294, %r72, -1073741824;
	and.b32  	%r1316, %r294, -8388608;
	setp.eq.s32 	%p122, %r1316, 0;
	@%p122 bra 	$L__BB0_82;
// %bb.80:                              // %__nv_fmaf_rn.exit4.i.i.i624.preheader
	// begin inline asm
	rcp.approx.ftz.f32 %f568,%f559;
	// end inline asm
$L__BB0_81:                             // %__nv_fmaf_rn.exit4.i.i.i624
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r295, %r1316, 192937984;
	add.s32 	%r296, %r1315, %r295;
	mov.b32 	%f570, %r296;
	mul.f32 	%f571, %f568, %f570;
	sub.f32 	%f572, %f570, %f571;
	fma.rn.f32 	%f573, %f572, %f568, %f571;
	sub.f32 	%f574, %f570, %f573;
	fma.rz.f32 	%f575, %f574, %f568, %f573;
	cvt.rzi.f32.f32 	%f576, %f575;
	sub.f32 	%f689, %f570, %f576;
	sub.s32 	%r1316, %r1316, %r295;
	mov.b32 	%r1315, %f689;
	setp.ne.s32 	%p123, %r1316, 0;
	setp.ne.s32 	%p124, %r1315, 0;
	and.pred  	%p125, %p123, %p124;
	@%p125 bra 	$L__BB0_81;
$L__BB0_82:                             // %__internal_fmodf_slowpath_mod.exit.i.i626
	setp.gt.u32 	%p126, %r72, 2139095039;
	selp.f32 	%f577, 0f7FFFFFFF, 0f4B800000, %p126;
	mul.f32 	%f578, %f689, 0f34000000;
	mul.f32 	%f690, %f577, %f578;
	bra.uni 	$L__BB0_83;
$L__BB0_44:                             // %__nv_fast_fdividef.exit.i.i.i603
	div.approx.f32 	%f561, %f682, %f109;
	cvt.rzi.f32.f32 	%f688, %f561;
	fma.rn.f32 	%f92, %f688, 0fC0000000, %f682;
	mov.b32 	%r71, %f92;
	setp.lt.u32 	%p117, %r71, 1073741824;
	@%p117 bra 	$L__BB0_78;
// %bb.45:
	setp.lt.u32 	%p118, %r71, -2147483647;
	@%p118 bra 	$L__BB0_76;
// %bb.46:
	add.f32 	%f566, %f688, 0fBF800000;
	setp.lt.f32 	%p121, %f92, 0fC0000000;
	add.f32 	%f567, %f566, 0fBF800000;
	selp.f32 	%f688, %f567, %f566, %p121;
	bra.uni 	$L__BB0_78;
$L__BB0_76:
	add.f32 	%f688, %f688, 0f3F800000;
	setp.ltu.f32 	%p119, %f92, 0f40800000;
	@%p119 bra 	$L__BB0_78;
// %bb.77:                              // %__nv_fmaf_rn.exit.i.i.i607
	add.f32 	%f562, %f688, 0f3F800000;
	fma.rn.f32 	%f564, %f109, 0fC0400000, %f92;
	setp.ge.f32 	%p120, %f564, 0f00000000;
	add.f32 	%f565, %f562, 0f3F800000;
	selp.f32 	%f688, %f565, %f562, %p120;
$L__BB0_78:                             // %__internal_fmodf_fastpath_quot.exit.i.i610
	fma.rn.f32 	%f690, %f688, 0fC0000000, %f682;
$L__BB0_83:                             // %__internal_fmodf_kernel.exit.i629
	abs.f32 	%f579, %f690;
	setp.gtu.f32 	%p127, %f579, 0f7F800000;
	mov.b32 	%r297, %f52;
	and.b32  	%r79, %r297, -2147483648;
	@%p127 bra 	$L__BB0_85;
// %bb.84:
	mov.b32 	%r298, %f690;
	or.b32  	%r299, %r79, %r298;
	mov.b32 	%f690, %r299;
$L__BB0_85:                             // %__nv_fmodf.exit630
	@%p115 bra 	$L__BB0_58;
// %bb.47:
	@%p218 bra 	$L__BB0_54;
	bra.uni 	$L__BB0_48;
$L__BB0_54:
	mov.b32 	%r34, %f682;
	and.b32  	%r308, %r34, 8388607;
	or.b32  	%r1307, %r308, 1065353216;
	mov.b32 	%f681, %r1307;
	add.s32 	%r309, %r34, -1073741824;
	and.b32  	%r1308, %r309, -8388608;
	setp.eq.s32 	%p143, %r1308, 0;
	@%p143 bra 	$L__BB0_57;
// %bb.55:                              // %__nv_fmaf_rn.exit4.i.i.i562.preheader
	// begin inline asm
	rcp.approx.ftz.f32 %f621,%f559;
	// end inline asm
$L__BB0_56:                             // %__nv_fmaf_rn.exit4.i.i.i562
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r310, %r1308, 192937984;
	add.s32 	%r311, %r1307, %r310;
	mov.b32 	%f623, %r311;
	mul.f32 	%f624, %f621, %f623;
	sub.f32 	%f625, %f623, %f624;
	fma.rn.f32 	%f626, %f625, %f621, %f624;
	sub.f32 	%f627, %f623, %f626;
	fma.rz.f32 	%f628, %f627, %f621, %f626;
	cvt.rzi.f32.f32 	%f629, %f628;
	sub.f32 	%f681, %f623, %f629;
	sub.s32 	%r1308, %r1308, %r310;
	mov.b32 	%r1307, %f681;
	setp.ne.s32 	%p144, %r1308, 0;
	setp.ne.s32 	%p145, %r1307, 0;
	and.pred  	%p146, %p144, %p145;
	@%p146 bra 	$L__BB0_56;
$L__BB0_57:                             // %__internal_fmodf_slowpath_mod.exit.i.i564
	setp.gt.u32 	%p147, %r34, 2139095039;
	selp.f32 	%f630, 0f7FFFFFFF, 0f4B800000, %p147;
	mul.f32 	%f631, %f681, 0f34000000;
	mul.f32 	%f682, %f630, %f631;
	bra.uni 	$L__BB0_58;
$L__BB0_48:                             // %__nv_fast_fdividef.exit.i.i.i541
	div.approx.f32 	%f614, %f682, %f109;
	cvt.rzi.f32.f32 	%f680, %f614;
	fma.rn.f32 	%f55, %f680, 0fC0000000, %f682;
	mov.b32 	%r33, %f55;
	setp.lt.u32 	%p138, %r33, 1073741824;
	@%p138 bra 	$L__BB0_53;
// %bb.49:
	setp.lt.u32 	%p139, %r33, -2147483647;
	@%p139 bra 	$L__BB0_51;
// %bb.50:
	add.f32 	%f619, %f680, 0fBF800000;
	setp.lt.f32 	%p142, %f55, 0fC0000000;
	add.f32 	%f620, %f619, 0fBF800000;
	selp.f32 	%f680, %f620, %f619, %p142;
	bra.uni 	$L__BB0_53;
$L__BB0_51:
	add.f32 	%f680, %f680, 0f3F800000;
	setp.ltu.f32 	%p140, %f55, 0f40800000;
	@%p140 bra 	$L__BB0_53;
// %bb.52:                              // %__nv_fmaf_rn.exit.i.i.i545
	add.f32 	%f615, %f680, 0f3F800000;
	fma.rn.f32 	%f617, %f109, 0fC0400000, %f55;
	setp.ge.f32 	%p141, %f617, 0f00000000;
	add.f32 	%f618, %f615, 0f3F800000;
	selp.f32 	%f680, %f618, %f615, %p141;
$L__BB0_53:                             // %__internal_fmodf_fastpath_quot.exit.i.i548
	fma.rn.f32 	%f682, %f680, 0fC0000000, %f682;
$L__BB0_58:                             // %__internal_fmodf_kernel.exit.i567
	abs.f32 	%f632, %f682;
	setp.gtu.f32 	%p148, %f632, 0f7F800000;
	@%p148 bra 	$L__BB0_60;
// %bb.59:
	mov.b32 	%r312, %f682;
	or.b32  	%r313, %r79, %r312;
	mov.b32 	%f682, %r313;
$L__BB0_60:                             // %__nv_fmodf.exit568
	setp.le.s32 	%p157, %r127, %r126;
	mov.u32 	%r1303, 0;
	@%p157 bra 	$L__BB0_94;
// %bb.61:                              // %L1139.lr.ph
	mov.f32 	%f113, 0f42040000;
	mul.lo.s32 	%r220, %r60, 7;
	div.approx.f32 	%f114, %f112, %f113;
	div.approx.f32 	%f148, %f146, %f113;
	div.approx.f32 	%f183, %f181, %f113;
	div.approx.f32 	%f217, %f215, %f113;
	div.approx.f32 	%f252, %f250, %f113;
	div.approx.f32 	%f286, %f284, %f113;
	div.approx.f32 	%f321, %f319, %f113;
	div.approx.f32 	%f355, %f353, %f113;
	add.s32 	%r230, %r220, 12;
	abs.f32 	%f115, %f114;
	abs.f32 	%f149, %f148;
	abs.f32 	%f184, %f183;
	abs.f32 	%f218, %f217;
	abs.f32 	%f253, %f252;
	abs.f32 	%f287, %f286;
	abs.f32 	%f322, %f321;
	abs.f32 	%f356, %f355;
	and.b32  	%r221, %r220, 15;
	and.b32  	%r231, %r230, 15;
	setp.gt.f32 	%p13, %f115, 0f4B800000;
	mul.f32 	%f116, %f114, 0f00000000;
	setp.gt.f32 	%p19, %f149, 0f4B800000;
	mul.f32 	%f150, %f148, 0f00000000;
	setp.gt.f32 	%p25, %f184, 0f4B800000;
	mul.f32 	%f185, %f183, 0f00000000;
	setp.gt.f32 	%p31, %f218, 0f4B800000;
	mul.f32 	%f219, %f217, 0f00000000;
	setp.gt.f32 	%p37, %f253, 0f4B800000;
	mul.f32 	%f254, %f252, 0f00000000;
	setp.gt.f32 	%p43, %f287, 0f4B800000;
	mul.f32 	%f288, %f286, 0f00000000;
	setp.gt.f32 	%p49, %f322, 0f4B800000;
	mul.f32 	%f323, %f321, 0f00000000;
	setp.gt.f32 	%p55, %f356, 0f4B800000;
	mul.f32 	%f357, %f355, 0f00000000;
	cvt.rn.f32.s32 	%f386, %r221;
	cvt.rn.f32.s32 	%f421, %r231;
	selp.f32 	%f117, %f116, %f114, %p13;
	selp.f32 	%f151, %f150, %f148, %p19;
	selp.f32 	%f186, %f185, %f183, %p25;
	selp.f32 	%f220, %f219, %f217, %p31;
	selp.f32 	%f255, %f254, %f252, %p37;
	selp.f32 	%f289, %f288, %f286, %p43;
	selp.f32 	%f324, %f323, %f321, %p49;
	selp.f32 	%f358, %f357, %f355, %p55;
	div.approx.f32 	%f388, %f386, %f141;
	div.approx.f32 	%f422, %f421, %f141;
	add.f32 	%f118, %f117, %f117;
	add.f32 	%f152, %f151, %f151;
	add.f32 	%f187, %f186, %f186;
	add.f32 	%f221, %f220, %f220;
	add.f32 	%f256, %f255, %f255;
	add.f32 	%f290, %f289, %f289;
	add.f32 	%f325, %f324, %f324;
	add.f32 	%f359, %f358, %f358;
	add.f32 	%f389, %f388, %f388;
	add.f32 	%f423, %f422, %f422;
	add.f32 	%f475, %f686, %f686;
	add.f32 	%f527, %f678, %f678;
	mov.b32 	%r143, %f118;
	mov.b32 	%r150, %f152;
	mov.b32 	%r161, %f187;
	mov.b32 	%r168, %f221;
	mov.b32 	%r179, %f256;
	mov.b32 	%r186, %f290;
	mov.b32 	%r197, %f325;
	mov.b32 	%r204, %f359;
	mov.b32 	%r222, %f389;
	mov.b32 	%r232, %f423;
	mov.b32 	%r253, %f475;
	mov.b32 	%r285, %f527;
	and.b32  	%r144, %r143, -2147483648;
	and.b32  	%r151, %r150, -2147483648;
	and.b32  	%r162, %r161, -2147483648;
	and.b32  	%r169, %r168, -2147483648;
	and.b32  	%r180, %r179, -2147483648;
	and.b32  	%r187, %r186, -2147483648;
	and.b32  	%r198, %r197, -2147483648;
	and.b32  	%r205, %r204, -2147483648;
	and.b32  	%r223, %r222, -2147483648;
	and.b32  	%r233, %r232, -2147483648;
	and.b32  	%r254, %r253, -2147483648;
	and.b32  	%r286, %r285, -2147483648;
	add.f32 	%f580, %f690, %f690;
	or.b32  	%r145, %r144, 1056964608;
	or.b32  	%r152, %r151, 1056964608;
	or.b32  	%r163, %r162, 1056964608;
	or.b32  	%r170, %r169, 1056964608;
	or.b32  	%r181, %r180, 1056964608;
	or.b32  	%r188, %r187, 1056964608;
	or.b32  	%r199, %r198, 1056964608;
	or.b32  	%r206, %r205, 1056964608;
	or.b32  	%r224, %r223, 1056964608;
	or.b32  	%r234, %r233, 1056964608;
	or.b32  	%r255, %r254, 1056964608;
	or.b32  	%r287, %r286, 1056964608;
	mov.b32 	%r300, %f580;
	mov.b32 	%f119, %r145;
	mov.b32 	%f153, %r152;
	mov.b32 	%f188, %r163;
	mov.b32 	%f222, %r170;
	mov.b32 	%f257, %r181;
	mov.b32 	%f291, %r188;
	mov.b32 	%f326, %r199;
	mov.b32 	%f360, %r206;
	mov.b32 	%f390, %r224;
	mov.b32 	%f424, %r234;
	mov.b32 	%f476, %r255;
	mov.b32 	%f528, %r287;
	and.b32  	%r301, %r300, -2147483648;
	add.f32 	%f120, %f118, %f119;
	abs.f32 	%f122, %f118;
	add.f32 	%f154, %f152, %f153;
	abs.f32 	%f156, %f152;
	add.f32 	%f189, %f187, %f188;
	abs.f32 	%f191, %f187;
	add.f32 	%f223, %f221, %f222;
	abs.f32 	%f225, %f221;
	add.f32 	%f258, %f256, %f257;
	abs.f32 	%f260, %f256;
	add.f32 	%f292, %f290, %f291;
	abs.f32 	%f294, %f290;
	add.f32 	%f327, %f325, %f326;
	abs.f32 	%f329, %f325;
	add.f32 	%f361, %f359, %f360;
	abs.f32 	%f363, %f359;
	add.f32 	%f391, %f389, %f390;
	abs.f32 	%f393, %f389;
	add.f32 	%f425, %f423, %f424;
	abs.f32 	%f427, %f423;
	add.f32 	%f477, %f475, %f476;
	abs.f32 	%f479, %f475;
	add.f32 	%f529, %f527, %f528;
	abs.f32 	%f531, %f527;
	or.b32  	%r302, %r301, 1056964608;
	cvt.rzi.f32.f32 	%f121, %f120;
	setp.gt.f32 	%p14, %f122, 0f4B000000;
	cvt.rzi.f32.f32 	%f155, %f154;
	setp.gt.f32 	%p20, %f156, 0f4B000000;
	cvt.rzi.f32.f32 	%f190, %f189;
	setp.gt.f32 	%p26, %f191, 0f4B000000;
	cvt.rzi.f32.f32 	%f224, %f223;
	setp.gt.f32 	%p32, %f225, 0f4B000000;
	cvt.rzi.f32.f32 	%f259, %f258;
	setp.gt.f32 	%p38, %f260, 0f4B000000;
	cvt.rzi.f32.f32 	%f293, %f292;
	setp.gt.f32 	%p44, %f294, 0f4B000000;
	cvt.rzi.f32.f32 	%f328, %f327;
	setp.gt.f32 	%p50, %f329, 0f4B000000;
	cvt.rzi.f32.f32 	%f362, %f361;
	setp.gt.f32 	%p56, %f363, 0f4B000000;
	cvt.rzi.f32.f32 	%f392, %f391;
	setp.gt.f32 	%p61, %f393, 0f4B000000;
	cvt.rzi.f32.f32 	%f426, %f425;
	setp.gt.f32 	%p68, %f427, 0f4B000000;
	cvt.rzi.f32.f32 	%f478, %f477;
	setp.gt.f32 	%p88, %f479, 0f4B000000;
	cvt.rzi.f32.f32 	%f530, %f529;
	setp.gt.f32 	%p108, %f531, 0f4B000000;
	cvt.u16.u32 	%rs1, %r1;
	mov.b32 	%f581, %r302;
	selp.f32 	%f123, %f118, %f121, %p14;
	cvt.rzi.f32.f32 	%f124, %f118;
	setp.lt.f32 	%p15, %f122, 0f3F000000;
	selp.f32 	%f157, %f152, %f155, %p20;
	cvt.rzi.f32.f32 	%f158, %f152;
	setp.lt.f32 	%p21, %f156, 0f3F000000;
	selp.f32 	%f192, %f187, %f190, %p26;
	cvt.rzi.f32.f32 	%f193, %f187;
	setp.lt.f32 	%p27, %f191, 0f3F000000;
	selp.f32 	%f226, %f221, %f224, %p32;
	cvt.rzi.f32.f32 	%f227, %f221;
	setp.lt.f32 	%p33, %f225, 0f3F000000;
	selp.f32 	%f261, %f256, %f259, %p38;
	cvt.rzi.f32.f32 	%f262, %f256;
	setp.lt.f32 	%p39, %f260, 0f3F000000;
	selp.f32 	%f295, %f290, %f293, %p44;
	cvt.rzi.f32.f32 	%f296, %f290;
	setp.lt.f32 	%p45, %f294, 0f3F000000;
	selp.f32 	%f330, %f325, %f328, %p50;
	cvt.rzi.f32.f32 	%f331, %f325;
	setp.lt.f32 	%p51, %f329, 0f3F000000;
	selp.f32 	%f364, %f359, %f362, %p56;
	cvt.rzi.f32.f32 	%f365, %f359;
	setp.lt.f32 	%p57, %f363, 0f3F000000;
	selp.f32 	%f394, %f389, %f392, %p61;
	cvt.rzi.f32.f32 	%f395, %f389;
	setp.lt.f32 	%p62, %f393, 0f3F000000;
	selp.f32 	%f428, %f423, %f426, %p68;
	cvt.rzi.f32.f32 	%f429, %f423;
	setp.lt.f32 	%p69, %f427, 0f3F000000;
	selp.f32 	%f480, %f475, %f478, %p88;
	cvt.rzi.f32.f32 	%f481, %f475;
	setp.lt.f32 	%p89, %f479, 0f3F000000;
	selp.f32 	%f532, %f527, %f530, %p108;
	cvt.rzi.f32.f32 	%f533, %f527;
	setp.lt.f32 	%p109, %f531, 0f3F000000;
	shr.u16 	%rs2, %rs1, 8;
	shl.b16 	%rs3, %rs1, 8;
	add.f32 	%f582, %f580, %f581;
	abs.f32 	%f584, %f580;
	selp.f32 	%f125, %f124, %f123, %p15;
	selp.f32 	%f159, %f158, %f157, %p21;
	selp.f32 	%f194, %f193, %f192, %p27;
	selp.f32 	%f228, %f227, %f226, %p33;
	selp.f32 	%f263, %f262, %f261, %p39;
	selp.f32 	%f297, %f296, %f295, %p45;
	selp.f32 	%f332, %f331, %f330, %p51;
	selp.f32 	%f366, %f365, %f364, %p57;
	selp.f32 	%f396, %f395, %f394, %p62;
	selp.f32 	%f430, %f429, %f428, %p69;
	selp.f32 	%f482, %f481, %f480, %p89;
	selp.f32 	%f534, %f533, %f532, %p109;
	or.b16  	%rs4, %rs3, %rs2;
	cvt.rzi.f32.f32 	%f583, %f582;
	setp.gt.f32 	%p130, %f584, 0f4B000000;
	fma.rn.f32 	%f126, %f125, 0fBF000000, %f117;
	fma.rn.f32 	%f160, %f159, 0fBF000000, %f151;
	fma.rn.f32 	%f195, %f194, 0fBF000000, %f186;
	fma.rn.f32 	%f229, %f228, 0fBF000000, %f220;
	fma.rn.f32 	%f264, %f263, 0fBF000000, %f255;
	fma.rn.f32 	%f298, %f297, 0fBF000000, %f289;
	fma.rn.f32 	%f333, %f332, 0fBF000000, %f324;
	fma.rn.f32 	%f367, %f366, 0fBF000000, %f358;
	fma.rn.f32 	%f397, %f396, 0fBF000000, %f388;
	fma.rn.f32 	%f431, %f430, 0fBF000000, %f422;
	fma.rn.f32 	%f483, %f482, 0fBF000000, %f686;
	fma.rn.f32 	%f535, %f534, 0fBF000000, %f678;
	shr.u16 	%rs6, %rs4, 4;
	selp.f32 	%f585, %f580, %f583, %p130;
	cvt.rzi.f32.f32 	%f586, %f580;
	setp.lt.f32 	%p131, %f584, 0f3F000000;
	mul.f32 	%f127, %f126, %f126;
	mul.f32 	%f161, %f160, %f160;
	mul.f32 	%f196, %f195, %f195;
	mul.f32 	%f230, %f229, %f229;
	mul.f32 	%f265, %f264, %f264;
	mul.f32 	%f299, %f298, %f298;
	mul.f32 	%f334, %f333, %f333;
	mul.f32 	%f368, %f367, %f367;
	mul.f32 	%f398, %f397, %f397;
	mul.f32 	%f432, %f431, %f431;
	mul.f32 	%f484, %f483, %f483;
	mul.f32 	%f536, %f535, %f535;
	shl.b16 	%rs5, %rs4, 4;
	and.b16  	%rs7, %rs6, 3840;
	selp.f32 	%f587, %f586, %f585, %p131;
	cvt.rzi.s32.f32 	%r146, %f125;
	fma.rn.f32 	%f128, %f127, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f129, %f127, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r153, %f159;
	fma.rn.f32 	%f162, %f161, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f163, %f161, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r164, %f194;
	fma.rn.f32 	%f197, %f196, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f198, %f196, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r171, %f228;
	fma.rn.f32 	%f231, %f230, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f232, %f230, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r182, %f263;
	fma.rn.f32 	%f266, %f265, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f267, %f265, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r189, %f297;
	fma.rn.f32 	%f300, %f299, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f301, %f299, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r200, %f332;
	fma.rn.f32 	%f335, %f334, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f336, %f334, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r207, %f366;
	fma.rn.f32 	%f369, %f368, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f370, %f368, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f399, %f398, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f400, %f398, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f433, %f432, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f434, %f432, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f485, %f484, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f486, %f484, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f537, %f536, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f538, %f536, 0f3E684E12, 0fBFAAD2E0;
	or.b16  	%rs8, %rs7, %rs5;
	fma.rn.f32 	%f588, %f587, 0fBF000000, %f690;
	add.s32 	%r147, %r146, 1;
	fma.rn.f32 	%f130, %f128, %f127, 0fC0A55DF6;
	fma.rn.f32 	%f131, %f129, %f127, 0f4081E0CF;
	fma.rn.f32 	%f132, %f127, %f126, 0f00000000;
	add.s32 	%r154, %r153, 1;
	fma.rn.f32 	%f164, %f162, %f161, 0fC0A55DF6;
	fma.rn.f32 	%f165, %f163, %f161, 0f4081E0CF;
	fma.rn.f32 	%f166, %f161, %f160, 0f00000000;
	add.s32 	%r165, %r164, 1;
	fma.rn.f32 	%f199, %f197, %f196, 0fC0A55DF6;
	fma.rn.f32 	%f200, %f198, %f196, 0f4081E0CF;
	fma.rn.f32 	%f201, %f196, %f195, 0f00000000;
	add.s32 	%r172, %r171, 1;
	fma.rn.f32 	%f233, %f231, %f230, 0fC0A55DF6;
	fma.rn.f32 	%f234, %f232, %f230, 0f4081E0CF;
	fma.rn.f32 	%f235, %f230, %f229, 0f00000000;
	add.s32 	%r183, %r182, 1;
	fma.rn.f32 	%f268, %f266, %f265, 0fC0A55DF6;
	fma.rn.f32 	%f269, %f267, %f265, 0f4081E0CF;
	fma.rn.f32 	%f270, %f265, %f264, 0f00000000;
	add.s32 	%r190, %r189, 1;
	fma.rn.f32 	%f302, %f300, %f299, 0fC0A55DF6;
	fma.rn.f32 	%f303, %f301, %f299, 0f4081E0CF;
	fma.rn.f32 	%f304, %f299, %f298, 0f00000000;
	add.s32 	%r201, %r200, 1;
	fma.rn.f32 	%f337, %f335, %f334, 0fC0A55DF6;
	fma.rn.f32 	%f338, %f336, %f334, 0f4081E0CF;
	fma.rn.f32 	%f339, %f334, %f333, 0f00000000;
	add.s32 	%r208, %r207, 1;
	fma.rn.f32 	%f371, %f369, %f368, 0fC0A55DF6;
	fma.rn.f32 	%f372, %f370, %f368, 0f4081E0CF;
	fma.rn.f32 	%f373, %f368, %f367, 0f00000000;
	cvt.rzi.s32.f32 	%r225, %f396;
	fma.rn.f32 	%f401, %f399, %f398, 0fC0A55DF6;
	fma.rn.f32 	%f402, %f400, %f398, 0f4081E0CF;
	fma.rn.f32 	%f403, %f398, %f397, 0f00000000;
	cvt.rzi.s32.f32 	%r235, %f430;
	fma.rn.f32 	%f435, %f433, %f432, 0fC0A55DF6;
	fma.rn.f32 	%f436, %f434, %f432, 0f4081E0CF;
	fma.rn.f32 	%f437, %f432, %f431, 0f00000000;
	cvt.rzi.s32.f32 	%r256, %f482;
	fma.rn.f32 	%f487, %f485, %f484, 0fC0A55DF6;
	fma.rn.f32 	%f488, %f486, %f484, 0f4081E0CF;
	fma.rn.f32 	%f489, %f484, %f483, 0f00000000;
	cvt.rzi.s32.f32 	%r288, %f534;
	fma.rn.f32 	%f539, %f537, %f536, 0fC0A55DF6;
	fma.rn.f32 	%f540, %f538, %f536, 0f4081E0CF;
	fma.rn.f32 	%f541, %f536, %f535, 0f00000000;
	and.b16  	%rs9, %rs8, 13107;
	shr.u16 	%rs11, %rs8, 2;
	mul.f32 	%f589, %f588, %f588;
	fma.rn.f32 	%f133, %f131, %f127, 0fC09DE9E6;
	fma.rn.f32 	%f134, %f130, %f132, 0f00000000;
	and.b32  	%r148, %r147, 1;
	fma.rn.f32 	%f167, %f165, %f161, 0fC09DE9E6;
	fma.rn.f32 	%f168, %f164, %f166, 0f00000000;
	and.b32  	%r155, %r154, 1;
	fma.rn.f32 	%f202, %f200, %f196, 0fC09DE9E6;
	fma.rn.f32 	%f203, %f199, %f201, 0f00000000;
	and.b32  	%r166, %r165, 1;
	fma.rn.f32 	%f236, %f234, %f230, 0fC09DE9E6;
	fma.rn.f32 	%f237, %f233, %f235, 0f00000000;
	and.b32  	%r173, %r172, 1;
	fma.rn.f32 	%f271, %f269, %f265, 0fC09DE9E6;
	fma.rn.f32 	%f272, %f268, %f270, 0f00000000;
	and.b32  	%r184, %r183, 1;
	fma.rn.f32 	%f305, %f303, %f299, 0fC09DE9E6;
	fma.rn.f32 	%f306, %f302, %f304, 0f00000000;
	and.b32  	%r191, %r190, 1;
	fma.rn.f32 	%f340, %f338, %f334, 0fC09DE9E6;
	fma.rn.f32 	%f341, %f337, %f339, 0f00000000;
	and.b32  	%r202, %r201, 1;
	fma.rn.f32 	%f374, %f372, %f368, 0fC09DE9E6;
	fma.rn.f32 	%f375, %f371, %f373, 0f00000000;
	and.b32  	%r209, %r208, 1;
	fma.rn.f32 	%f404, %f402, %f398, 0fC09DE9E6;
	fma.rn.f32 	%f405, %f401, %f403, 0f00000000;
	and.b32  	%r226, %r225, 1;
	fma.rn.f32 	%f438, %f436, %f432, 0fC09DE9E6;
	fma.rn.f32 	%f439, %f435, %f437, 0f00000000;
	and.b32  	%r236, %r235, 1;
	fma.rn.f32 	%f490, %f488, %f484, 0fC09DE9E6;
	fma.rn.f32 	%f491, %f487, %f489, 0f00000000;
	and.b32  	%r257, %r256, 1;
	fma.rn.f32 	%f542, %f540, %f536, 0fC09DE9E6;
	fma.rn.f32 	%f543, %f539, %f541, 0f00000000;
	and.b32  	%r289, %r288, 1;
	shl.b16 	%rs10, %rs9, 2;
	and.b16  	%rs12, %rs11, 13107;
	fma.rn.f32 	%f590, %f589, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f591, %f589, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f135, %f133, %f127, 0f3F800000;
	fma.rn.f32 	%f136, %f126, 0f40490FDB, %f134;
	setp.eq.b32 	%p16, %r148, 1;
	fma.rn.f32 	%f169, %f167, %f161, 0f3F800000;
	fma.rn.f32 	%f170, %f160, 0f40490FDB, %f168;
	setp.eq.b32 	%p22, %r155, 1;
	fma.rn.f32 	%f204, %f202, %f196, 0f3F800000;
	fma.rn.f32 	%f205, %f195, 0f40490FDB, %f203;
	setp.eq.b32 	%p28, %r166, 1;
	fma.rn.f32 	%f238, %f236, %f230, 0f3F800000;
	fma.rn.f32 	%f239, %f229, 0f40490FDB, %f237;
	setp.eq.b32 	%p34, %r173, 1;
	fma.rn.f32 	%f273, %f271, %f265, 0f3F800000;
	fma.rn.f32 	%f274, %f264, 0f40490FDB, %f272;
	setp.eq.b32 	%p40, %r184, 1;
	fma.rn.f32 	%f307, %f305, %f299, 0f3F800000;
	fma.rn.f32 	%f308, %f298, 0f40490FDB, %f306;
	setp.eq.b32 	%p46, %r191, 1;
	fma.rn.f32 	%f342, %f340, %f334, 0f3F800000;
	fma.rn.f32 	%f343, %f333, 0f40490FDB, %f341;
	setp.eq.b32 	%p52, %r202, 1;
	fma.rn.f32 	%f376, %f374, %f368, 0f3F800000;
	fma.rn.f32 	%f377, %f367, 0f40490FDB, %f375;
	setp.eq.b32 	%p58, %r209, 1;
	fma.rn.f32 	%f406, %f404, %f398, 0f3F800000;
	fma.rn.f32 	%f407, %f397, 0f40490FDB, %f405;
	setp.eq.b32 	%p63, %r226, 1;
	fma.rn.f32 	%f440, %f438, %f432, 0f3F800000;
	fma.rn.f32 	%f441, %f431, 0f40490FDB, %f439;
	setp.eq.b32 	%p70, %r236, 1;
	fma.rn.f32 	%f492, %f490, %f484, 0f3F800000;
	fma.rn.f32 	%f493, %f483, 0f40490FDB, %f491;
	setp.eq.b32 	%p90, %r257, 1;
	fma.rn.f32 	%f544, %f542, %f536, 0f3F800000;
	fma.rn.f32 	%f545, %f535, 0f40490FDB, %f543;
	setp.eq.b32 	%p110, %r289, 1;
	or.b16  	%rs13, %rs12, %rs10;
	cvt.rzi.s32.f32 	%r303, %f587;
	fma.rn.f32 	%f592, %f590, %f589, 0fC0A55DF6;
	fma.rn.f32 	%f593, %f591, %f589, 0f4081E0CF;
	fma.rn.f32 	%f594, %f589, %f588, 0f00000000;
	and.b32  	%r55, %r4, 120;
	shl.b32 	%r56, %r1, 2;
	and.b32  	%r57, %r1, 2;
	selp.f32 	%f137, %f135, %f136, %p16;
	and.b32  	%r149, %r147, 2;
	selp.f32 	%f171, %f169, %f170, %p22;
	and.b32  	%r156, %r154, 2;
	selp.f32 	%f206, %f204, %f205, %p28;
	and.b32  	%r167, %r165, 2;
	selp.f32 	%f240, %f238, %f239, %p34;
	and.b32  	%r174, %r172, 2;
	selp.f32 	%f275, %f273, %f274, %p40;
	and.b32  	%r185, %r183, 2;
	selp.f32 	%f309, %f307, %f308, %p46;
	and.b32  	%r192, %r190, 2;
	selp.f32 	%f344, %f342, %f343, %p52;
	and.b32  	%r203, %r201, 2;
	selp.f32 	%f378, %f376, %f377, %p58;
	and.b32  	%r210, %r208, 2;
	selp.f32 	%f408, %f406, %f407, %p63;
	and.b32  	%r227, %r225, 2;
	selp.f32 	%f442, %f440, %f441, %p70;
	and.b32  	%r237, %r235, 2;
	selp.f32 	%f494, %f492, %f493, %p90;
	and.b32  	%r258, %r256, 2;
	selp.f32 	%f546, %f544, %f545, %p110;
	and.b32  	%r290, %r288, 2;
	and.b16  	%rs14, %rs13, 20480;
	shr.u16 	%rs16, %rs13, 1;
	fma.rn.f32 	%f595, %f593, %f589, 0fC09DE9E6;
	fma.rn.f32 	%f596, %f592, %f594, 0f00000000;
	and.b32  	%r304, %r303, 1;
	and.b32  	%r139, %r56, 4;
	or.b32  	%r140, %r57, %r55;
	setp.eq.s32 	%p17, %r149, 0;
	sub.f32 	%f139, %f138, %f137;
	setp.eq.s32 	%p23, %r156, 0;
	sub.f32 	%f173, %f138, %f171;
	setp.eq.s32 	%p29, %r167, 0;
	sub.f32 	%f208, %f138, %f206;
	setp.eq.s32 	%p35, %r174, 0;
	sub.f32 	%f242, %f138, %f240;
	setp.eq.s32 	%p41, %r185, 0;
	sub.f32 	%f277, %f138, %f275;
	setp.eq.s32 	%p47, %r192, 0;
	sub.f32 	%f311, %f138, %f309;
	setp.eq.s32 	%p53, %r203, 0;
	sub.f32 	%f346, %f138, %f344;
	setp.eq.s32 	%p59, %r210, 0;
	sub.f32 	%f380, %f138, %f378;
	setp.eq.s32 	%p64, %r227, 0;
	neg.f32 	%f410, %f408;
	add.s32 	%r228, %r225, 1;
	cvt.rzi.f32.f32 	%f415, %f388;
	setp.eq.s32 	%p71, %r237, 0;
	neg.f32 	%f444, %f442;
	add.s32 	%r238, %r235, 1;
	cvt.rzi.f32.f32 	%f448, %f422;
	setp.eq.s32 	%p91, %r258, 0;
	neg.f32 	%f496, %f494;
	add.s32 	%r259, %r256, 1;
	cvt.rzi.f32.f32 	%f501, %f686;
	setp.eq.s32 	%p111, %r290, 0;
	neg.f32 	%f548, %f546;
	add.s32 	%r291, %r288, 1;
	cvt.rzi.f32.f32 	%f553, %f678;
	shl.b16 	%rs15, %rs14, 1;
	and.b16  	%rs17, %rs16, 16384;
	fma.rn.f32 	%f597, %f595, %f589, 0f3F800000;
	fma.rn.f32 	%f598, %f588, 0f40490FDB, %f596;
	setp.eq.b32 	%p132, %r304, 1;
	or.b32  	%r141, %r140, %r139;
	selp.f32 	%f140, %f137, %f139, %p17;
	selp.f32 	%f174, %f171, %f173, %p23;
	selp.f32 	%f209, %f206, %f208, %p29;
	selp.f32 	%f243, %f240, %f242, %p35;
	selp.f32 	%f278, %f275, %f277, %p41;
	selp.f32 	%f312, %f309, %f311, %p47;
	selp.f32 	%f347, %f344, %f346, %p53;
	selp.f32 	%f381, %f378, %f380, %p59;
	selp.f32 	%f409, %f407, %f406, %p63;
	selp.f32 	%f411, %f408, %f410, %p64;
	and.b32  	%r229, %r228, 2;
	setp.eq.f32 	%p66, %f415, %f388;
	mul.f32 	%f416, %f388, 0f00000000;
	selp.f32 	%f443, %f441, %f440, %p70;
	selp.f32 	%f445, %f442, %f444, %p71;
	and.b32  	%r239, %r238, 2;
	setp.eq.f32 	%p73, %f448, %f422;
	mul.f32 	%f449, %f422, 0f00000000;
	selp.f32 	%f495, %f493, %f492, %p90;
	selp.f32 	%f497, %f494, %f496, %p91;
	and.b32  	%r260, %r259, 2;
	setp.eq.f32 	%p93, %f501, %f686;
	mul.f32 	%f502, %f686, 0f00000000;
	selp.f32 	%f547, %f545, %f544, %p110;
	selp.f32 	%f549, %f546, %f548, %p111;
	and.b32  	%r292, %r291, 2;
	setp.eq.f32 	%p113, %f553, %f678;
	mul.f32 	%f554, %f678, 0f00000000;
	or.b16  	%rs18, %rs17, %rs15;
	selp.f32 	%f599, %f597, %f598, %p132;
	and.b32  	%r305, %r303, 2;
	shr.u32 	%r142, %r141, 1;
	mul.f32 	%f70, %f140, %f140;
	mul.f32 	%f4, %f174, %f174;
	mul.f32 	%f8, %f209, %f209;
	mul.f32 	%f13, %f243, %f243;
	mul.f32 	%f17, %f278, %f278;
	mul.f32 	%f22, %f312, %f312;
	mul.f32 	%f26, %f347, %f347;
	mul.f32 	%f31, %f381, %f381;
	setp.eq.s32 	%p65, %r229, 0;
	sub.f32 	%f413, %f138, %f409;
	selp.f32 	%f417, %f416, %f411, %p66;
	abs.f32 	%f418, %f388;
	setp.eq.s32 	%p72, %r239, 0;
	sub.f32 	%f446, %f138, %f443;
	selp.f32 	%f450, %f449, %f445, %p73;
	abs.f32 	%f451, %f422;
	setp.eq.s32 	%p92, %r260, 0;
	sub.f32 	%f499, %f138, %f495;
	selp.f32 	%f87, %f502, %f497, %p93;
	abs.f32 	%f503, %f686;
	setp.eq.s32 	%p112, %r292, 0;
	sub.f32 	%f551, %f138, %f547;
	selp.f32 	%f555, %f554, %f549, %p113;
	abs.f32 	%f556, %f678;
	shr.u16 	%rs19, %rs18, 13;
	setp.eq.s32 	%p133, %r305, 0;
	neg.f32 	%f601, %f599;
	add.s32 	%r306, %r303, 1;
	cvt.rzi.f32.f32 	%f606, %f690;
	ld.param.u64 	%rd1, [_Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_5];
	mul.wide.u32 	%rd54, %r142, 4;
	mul.f32 	%f144, %f70, 0f3D87E86B;
	mul.f32 	%f178, %f4, 0f3D87E86B;
	mul.f32 	%f213, %f8, 0f3D87E86B;
	mul.f32 	%f247, %f13, 0f3D87E86B;
	mul.f32 	%f282, %f17, 0f3D87E86B;
	mul.f32 	%f316, %f22, 0f3D87E86B;
	mul.f32 	%f351, %f26, 0f3D87E86B;
	mul.f32 	%f384, %f31, 0f3D87E86B;
	selp.f32 	%f414, %f409, %f413, %p65;
	setp.gt.f32 	%p67, %f418, 0f4B800000;
	add.f32 	%f419, %f417, 0f3F800000;
	selp.f32 	%f447, %f443, %f446, %p72;
	setp.gt.f32 	%p74, %f451, 0f4B800000;
	add.f32 	%f452, %f450, 0f3F800000;
	selp.f32 	%f500, %f495, %f499, %p92;
	setp.gt.f32 	%p94, %f503, 0f4B800000;
	add.f32 	%f504, %f87, 0f3F800000;
	selp.f32 	%f552, %f547, %f551, %p112;
	setp.gt.f32 	%p114, %f556, 0f4B800000;
	add.f32 	%f557, %f555, 0f3F800000;
	and.b16  	%rs20, %rs19, 6;
	selp.f32 	%f600, %f598, %f597, %p132;
	selp.f32 	%f602, %f599, %f601, %p133;
	and.b32  	%r307, %r306, 2;
	setp.eq.f32 	%p135, %f606, %f690;
	mul.f32 	%f607, %f690, 0f00000000;
	add.s64 	%rd55, %rd1, %rd54;
	mul.f32 	%f3, %f144, %f668;
	mul.f32 	%f179, %f178, %f669;
	mul.f32 	%f12, %f213, %f670;
	mul.f32 	%f248, %f247, %f671;
	mul.f32 	%f21, %f282, %f672;
	mul.f32 	%f317, %f316, %f673;
	mul.f32 	%f30, %f351, %f674;
	mul.f32 	%f385, %f384, %f675;
	selp.f32 	%f420, %f419, %f414, %p67;
	selp.f32 	%f453, %f452, %f447, %p74;
	selp.f32 	%f88, %f504, %f500, %p94;
	selp.f32 	%f558, %f557, %f552, %p114;
	cvt.u32.u16 	%r31, %rs20;
	setp.eq.s32 	%p134, %r307, 0;
	sub.f32 	%f604, %f138, %f600;
	selp.f32 	%f608, %f607, %f602, %p135;
	abs.f32 	%f609, %f690;
	ld.param.u64 	%rd2, [_Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_6];
	ld.param.u64 	%rd3, [_Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_7];
	ld.global.u32 	%r58, [%rd55];
	mov.b32 	%r159, %f179;
	mov.b32 	%r158, %f3;
	mov.b32 	%r177, %f248;
	mov.b32 	%r176, %f12;
	mov.b32 	%r195, %f317;
	mov.b32 	%r194, %f21;
	mov.b32 	%r213, %f385;
	mov.b32 	%r212, %f30;
	mov.b32 	%r215, %f420;
	mov.b32 	%r216, %f453;
	mov.b32 	%r218, %f417;
	mov.b32 	%r219, %f450;
	mov.b32 	%r275, %f558;
	mov.b32 	%r274, %f88;
	mov.b32 	%r281, %f555;
	mov.b32 	%r280, %f87;
	setp.eq.s32 	%p129, %r18, %r31;
	selp.f32 	%f605, %f600, %f604, %p134;
	setp.gt.f32 	%p136, %f609, 0f4B800000;
	add.f32 	%f610, %f608, 0f3F800000;
	// begin inline asm
	cvt.rn.f16x2.f32 %r157, %r159, %r158;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r175, %r177, %r176;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r193, %r195, %r194;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r211, %r213, %r212;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r214, %r216, %r215;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r217, %r219, %r218;
	// end inline asm
	xor.b32  	%r278, %r281, -2147483648;
	xor.b32  	%r277, %r280, -2147483648;
	or.b16  	%rs21, %rs19, 1;
	selp.f32 	%f611, %f610, %f605, %p136;
	selp.f32 	%f612, 0f3F800000, 0f00000000, %p129;
	// begin inline asm
	cvt.rn.f16x2.f32 %r273, %r275, %r274;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r276, %r278, %r277;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r279, %r281, %r280;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r282, %r275, %r274;
	// end inline asm
	cvt.u32.u16 	%r32, %rs21;
	mul.f32 	%f106, %f611, %f612;
	mul.f32 	%f107, %f608, %f612;
	setp.eq.s32 	%p149, %r18, %r32;
	add.f32 	%f633, %f682, %f682;
	mov.b32 	%r326, %f633;
	and.b32  	%r327, %r326, -2147483648;
	or.b32  	%r328, %r327, 1056964608;
	mov.b32 	%f634, %r328;
	add.f32 	%f635, %f633, %f634;
	cvt.rzi.f32.f32 	%f636, %f635;
	abs.f32 	%f637, %f633;
	setp.gt.f32 	%p150, %f637, 0f4B000000;
	selp.f32 	%f638, %f633, %f636, %p150;
	cvt.rzi.f32.f32 	%f639, %f633;
	setp.lt.f32 	%p151, %f637, 0f3F000000;
	selp.f32 	%f640, %f639, %f638, %p151;
	cvt.rzi.s32.f32 	%r329, %f640;
	fma.rn.f32 	%f641, %f640, 0fBF000000, %f682;
	mul.f32 	%f642, %f641, %f641;
	fma.rn.f32 	%f643, %f642, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f644, %f642, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f645, %f643, %f642, 0fC0A55DF6;
	fma.rn.f32 	%f646, %f644, %f642, 0f4081E0CF;
	fma.rn.f32 	%f647, %f642, %f641, 0f00000000;
	fma.rn.f32 	%f648, %f646, %f642, 0fC09DE9E6;
	fma.rn.f32 	%f649, %f645, %f647, 0f00000000;
	fma.rn.f32 	%f650, %f648, %f642, 0f3F800000;
	fma.rn.f32 	%f651, %f641, 0f40490FDB, %f649;
	and.b32  	%r330, %r329, 1;
	setp.eq.b32 	%p152, %r330, 1;
	selp.f32 	%f652, %f650, %f651, %p152;
	selp.f32 	%f653, %f651, %f650, %p152;
	and.b32  	%r331, %r329, 2;
	setp.eq.s32 	%p153, %r331, 0;
	neg.f32 	%f654, %f652;
	selp.f32 	%f655, %f652, %f654, %p153;
	add.s32 	%r332, %r329, 1;
	and.b32  	%r333, %r332, 2;
	setp.eq.s32 	%p154, %r333, 0;
	sub.f32 	%f657, %f138, %f653;
	selp.f32 	%f658, %f653, %f657, %p154;
	cvt.rzi.f32.f32 	%f659, %f682;
	setp.eq.f32 	%p155, %f659, %f682;
	mul.f32 	%f660, %f682, 0f00000000;
	selp.f32 	%f661, %f660, %f655, %p155;
	abs.f32 	%f662, %f682;
	setp.gt.f32 	%p156, %f662, 0f4B800000;
	add.f32 	%f663, %f661, 0f3F800000;
	selp.f32 	%f664, %f663, %f658, %p156;
	selp.f32 	%f665, 0f3F800000, 0f00000000, %p149;
	mul.f32 	%f666, %f664, %f665;
	mul.f32 	%f667, %f661, %f665;
	mov.b32 	%r316, %f666;
	mov.b32 	%r315, %f106;
	// begin inline asm
	cvt.rn.f16x2.f32 %r314, %r316, %r315;
	// end inline asm
	mov.b32 	%r322, %f667;
	xor.b32  	%r319, %r322, -2147483648;
	mov.b32 	%r321, %f107;
	xor.b32  	%r318, %r321, -2147483648;
	// begin inline asm
	cvt.rn.f16x2.f32 %r317, %r319, %r318;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r320, %r322, %r321;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r323, %r316, %r315;
	// end inline asm
	shl.b32 	%r335, %r126, 12;
	and.b32  	%r336, %r5, 2048;
	and.b32  	%r45, %r2, 1;
	neg.s32 	%r337, %r45;
	shl.b32 	%r338, %r2, 2;
	and.b32  	%r46, %r338, 24;
	and.b32  	%r339, %r56, 28;
	shl.b32 	%r340, %r4, 5;
	and.b32  	%r341, %r340, 96;
	or.b32  	%r342, %r339, %r341;
	and.b32  	%r343, %r340, 128;
	or.b32  	%r344, %r343, %r336;
	or.b32  	%r345, %r344, %r342;
	or.b32  	%r47, %r345, %r335;
	and.b32  	%r48, %r1, 8;
	shl.b32 	%r346, %r1, 4;
	or.b32  	%r347, %r346, %r48;
	shr.u32 	%r348, %r347, 2;
	and.b32  	%r349, %r348, 30;
	and.b32  	%r350, %r3, 32;
	and.b32  	%r351, %r56, 16;
	shl.b32 	%r352, %r2, 1;
	or.b32  	%r353, %r351, %r352;
	shl.b32 	%r354, %r1, 3;
	and.b32  	%r355, %r354, 64;
	or.b32  	%r356, %r353, %r355;
	and.b32  	%r357, %r70, 32;
	or.b32  	%r358, %r356, %r357;
	shr.u32 	%r359, %r358, 2;
	or.b32  	%r360, %r359, %r350;
	or.b32  	%r361, %r56, %r57;
	bfe.u32 	%r362, %r361, 1, 2;
	mad.lo.s32 	%r363, %r362, 65, %r350;
	add.s32 	%r364, %r363, %r359;
	shr.u32 	%r365, %r1, 4;
	and.b32  	%r49, %r2, 6;
	shl.b32 	%r366, %r128, 15;
	add.s32 	%r367, %r366, -98304;
	or.b32  	%r368, %r15, %r55;
	and.b32  	%r369, %r338, 4;
	or.b32  	%r370, %r368, %r369;
	shl.b32 	%r371, %r370, 8;
	or.b32  	%r372, %r342, %r343;
	or.b32  	%r50, %r372, %r371;
	cvt.s64.s32 	%rd5, %r367;
	shr.u32 	%r373, %r60, 1;
	shr.u32 	%r374, %r2, 1;
	or.b32  	%r375, %r374, 4;
	or.b32  	%r376, %r374, 8;
	or.b32  	%r377, %r374, 12;
	or.b32  	%r378, %r374, 16;
	or.b32  	%r379, %r374, 20;
	or.b32  	%r380, %r374, 24;
	or.b32  	%r381, %r374, 28;
	mul.lo.s32 	%r382, %r374, 289;
	shr.u32 	%r383, %r16, 1;
	mul.lo.s32 	%r384, %r383, 65;
	setp.eq.s32 	%p158, %r45, 0;
	and.b32  	%r385, %r337, 130;
	add.s32 	%r386, %r385, %r349;
	add.s32 	%r387, %r386, %r384;
	add.s32 	%r388, %r387, %r382;
	mul.wide.u32 	%rd56, %r388, 4;
	mov.u64 	%rd57, shmem;
	add.s64 	%rd6, %rd57, %rd56;
	cvt.u64.u32 	%rd58, %r384;
	cvt.u64.u32 	%rd59, %r382;
	selp.b64 	%rd60, 0, 130, %p158;
	cvt.u64.u32 	%rd61, %r349;
	add.s64 	%rd62, %rd61, %rd60;
	add.s64 	%rd63, %rd62, %rd59;
	add.s64 	%rd64, %rd63, %rd58;
	shl.b64 	%rd65, %rd64, 2;
	add.s64 	%rd7, %rd57, %rd65;
	mul.lo.s32 	%r389, %r375, 289;
	add.s32 	%r390, %r387, %r389;
	mul.wide.u32 	%rd66, %r390, 4;
	add.s64 	%rd8, %rd57, %rd66;
	cvt.u64.u32 	%rd67, %r389;
	add.s64 	%rd68, %rd62, %rd67;
	add.s64 	%rd69, %rd68, %rd58;
	shl.b64 	%rd70, %rd69, 2;
	add.s64 	%rd9, %rd57, %rd70;
	mul.lo.s32 	%r391, %r376, 289;
	add.s32 	%r392, %r387, %r391;
	mul.wide.u32 	%rd71, %r392, 4;
	add.s64 	%rd10, %rd57, %rd71;
	cvt.u64.u32 	%rd72, %r391;
	add.s64 	%rd73, %rd62, %rd72;
	add.s64 	%rd74, %rd73, %rd58;
	shl.b64 	%rd75, %rd74, 2;
	add.s64 	%rd11, %rd57, %rd75;
	mul.lo.s32 	%r393, %r377, 289;
	add.s32 	%r394, %r387, %r393;
	mul.wide.u32 	%rd76, %r394, 4;
	add.s64 	%rd12, %rd57, %rd76;
	cvt.u64.u32 	%rd77, %r393;
	add.s64 	%rd78, %rd62, %rd77;
	add.s64 	%rd79, %rd78, %rd58;
	shl.b64 	%rd80, %rd79, 2;
	add.s64 	%rd13, %rd57, %rd80;
	mul.lo.s32 	%r395, %r378, 289;
	add.s32 	%r396, %r387, %r395;
	mul.wide.u32 	%rd81, %r396, 4;
	add.s64 	%rd14, %rd57, %rd81;
	cvt.u64.u32 	%rd82, %r395;
	add.s64 	%rd83, %rd62, %rd82;
	add.s64 	%rd84, %rd83, %rd58;
	shl.b64 	%rd85, %rd84, 2;
	add.s64 	%rd15, %rd57, %rd85;
	mul.lo.s32 	%r397, %r379, 289;
	add.s32 	%r398, %r387, %r397;
	mul.wide.u32 	%rd86, %r398, 4;
	add.s64 	%rd16, %rd57, %rd86;
	cvt.u64.u32 	%rd87, %r397;
	add.s64 	%rd88, %rd62, %rd87;
	add.s64 	%rd89, %rd88, %rd58;
	shl.b64 	%rd90, %rd89, 2;
	add.s64 	%rd17, %rd57, %rd90;
	mul.lo.s32 	%r399, %r380, 289;
	add.s32 	%r400, %r387, %r399;
	mul.wide.u32 	%rd91, %r400, 4;
	add.s64 	%rd18, %rd57, %rd91;
	cvt.u64.u32 	%rd92, %r399;
	add.s64 	%rd93, %rd62, %rd92;
	add.s64 	%rd94, %rd93, %rd58;
	shl.b64 	%rd95, %rd94, 2;
	add.s64 	%rd19, %rd57, %rd95;
	mul.lo.s32 	%r401, %r381, 289;
	add.s32 	%r402, %r387, %r401;
	mul.wide.u32 	%rd96, %r402, 4;
	add.s64 	%rd20, %rd57, %rd96;
	cvt.u64.u32 	%rd97, %r401;
	add.s64 	%rd98, %rd62, %rd97;
	add.s64 	%rd99, %rd98, %rd58;
	shl.b64 	%rd100, %rd99, 2;
	add.s64 	%rd21, %rd57, %rd100;
	and.b32  	%r403, %r1, 1;
	neg.s32 	%r404, %r403;
	and.b32  	%r405, %r404, 130;
	and.b32  	%r406, %r352, 2;
	or.b32  	%r407, %r406, %r365;
	mul.lo.s32 	%r408, %r407, 65;
	add.s32 	%r409, %r408, %r349;
	add.s32 	%r410, %r409, %r382;
	mul.wide.u32 	%rd101, %r410, 4;
	add.s64 	%rd22, %rd57, %rd101;
	cvt.u64.u32 	%rd102, %r408;
	add.s64 	%rd103, %rd61, %rd102;
	add.s64 	%rd104, %rd103, %rd59;
	shl.b64 	%rd105, %rd104, 2;
	add.s64 	%rd23, %rd57, %rd105;
	add.s32 	%r411, %r409, %r389;
	mul.wide.u32 	%rd106, %r411, 4;
	add.s64 	%rd24, %rd57, %rd106;
	add.s64 	%rd107, %rd103, %rd67;
	shl.b64 	%rd108, %rd107, 2;
	add.s64 	%rd25, %rd57, %rd108;
	add.s32 	%r412, %r409, %r391;
	mul.wide.u32 	%rd109, %r412, 4;
	add.s64 	%rd26, %rd57, %rd109;
	add.s64 	%rd110, %rd103, %rd72;
	shl.b64 	%rd111, %rd110, 2;
	add.s64 	%rd27, %rd57, %rd111;
	add.s32 	%r413, %r409, %r393;
	mul.wide.u32 	%rd112, %r413, 4;
	add.s64 	%rd28, %rd57, %rd112;
	add.s64 	%rd113, %rd103, %rd77;
	shl.b64 	%rd114, %rd113, 2;
	add.s64 	%rd29, %rd57, %rd114;
	add.s32 	%r414, %r409, %r395;
	mul.wide.u32 	%rd115, %r414, 4;
	add.s64 	%rd30, %rd57, %rd115;
	add.s64 	%rd116, %rd103, %rd82;
	shl.b64 	%rd117, %rd116, 2;
	add.s64 	%rd31, %rd57, %rd117;
	add.s32 	%r415, %r409, %r397;
	mul.wide.u32 	%rd118, %r415, 4;
	add.s64 	%rd32, %rd57, %rd118;
	add.s64 	%rd119, %rd103, %rd87;
	shl.b64 	%rd120, %rd119, 2;
	add.s64 	%rd33, %rd57, %rd120;
	add.s32 	%r416, %r409, %r399;
	mul.wide.u32 	%rd121, %r416, 4;
	add.s64 	%rd34, %rd57, %rd121;
	add.s64 	%rd122, %rd103, %rd92;
	shl.b64 	%rd123, %rd122, 2;
	add.s64 	%rd35, %rd57, %rd123;
	add.s32 	%r417, %r409, %r401;
	mul.wide.u32 	%rd124, %r417, 4;
	add.s64 	%rd36, %rd57, %rd124;
	add.s64 	%rd125, %rd103, %rd97;
	shl.b64 	%rd126, %rd125, 2;
	add.s64 	%rd37, %rd57, %rd126;
	mul.wide.u32 	%rd127, %r364, 4;
	add.s64 	%rd38, %rd57, %rd127;
	add.s32 	%r418, %r405, %r360;
	mad.lo.s32 	%r419, %r373, 65, %r418;
	mul.wide.u32 	%rd128, %r419, 4;
	add.s64 	%rd39, %rd57, %rd128;
	setp.eq.s32 	%p159, %r48, 0;
	mov.u16 	%rs87, 25600;
	mov.u16 	%rs61, 21504;
	mov.u16 	%rs95, 18432;
	mov.u16 	%rs83, -14592;
	setp.eq.s32 	%p185, %r49, 6;
	setp.ne.s32 	%p191, %r49, 6;
	mov.u32 	%r1309, %r1303;
	mov.u32 	%r1319, %r1303;
	mov.u32 	%r1318, %r1303;
	mov.u32 	%r54, %r1303;
	bra.uni 	$L__BB0_62;
$L__BB0_93:                             // %pass13147
                                        //   in Loop: Header=BB0_62 Depth=1
	or.b32  	%r1299, %r1286, 917504;
	cvt.s64.s32 	%rd229, %r1299;
	add.s64 	%rd230, %rd229, %rd5;
	shr.u64 	%rd231, %rd230, 35;
	add.s64 	%rd232, %rd230, %rd231;
	shr.s64 	%rd233, %rd232, 29;
	setp.lt.s64 	%p212, %rd230, 0;
	and.b64  	%rd234, %rd232, -536870912;
	setp.ne.s64 	%p213, %rd234, %rd230;
	and.pred  	%p214, %p212, %p213;
	selp.u64 	%rd235, 1, 0, %p214;
	sub.s64 	%rd236, %rd235, %rd233;
	shl.b64 	%rd237, %rd236, 29;
	add.s64 	%rd238, %rd237, %rd230;
	shl.b64 	%rd239, %rd238, 2;
	add.s64 	%rd240, %rd3, %rd239;
	st.global.v4.u32 	[%rd240], {%r120, %r122, %r121, %r123};
	setp.ne.s32 	%p215, %r54, 130816;
	add.s32 	%r54, %r54, 256;
	add.s32 	%r1300, %r54, %r126;
	setp.lt.s32 	%p216, %r1300, %r127;
	and.pred  	%p217, %p215, %p216;
	@%p217 bra 	$L__BB0_62;
	bra.uni 	$L__BB0_94;
$L__BB0_62:                             // %L1139
                                        // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_63 Depth 2
	or.b32  	%r549, %r54, %r16;
	or.b32  	%r550, %r549, %r45;
	or.b32  	%r551, %r550, %r46;
	or.b32  	%r552, %r551, %r17;
	shl.b32 	%r553, %r552, 12;
	add.s32 	%r554, %r47, %r553;
	shr.s32 	%r555, %r554, 31;
	shr.u32 	%r556, %r555, 3;
	add.s32 	%r557, %r554, %r556;
	shr.s32 	%r558, %r557, 29;
	setp.lt.s32 	%p160, %r554, 0;
	and.b32  	%r559, %r557, -536870912;
	setp.ne.s32 	%p161, %r559, %r554;
	and.pred  	%p162, %p160, %p161;
	selp.u32 	%r560, 1, 0, %p162;
	sub.s32 	%r561, %r560, %r558;
	shl.b32 	%r562, %r561, 29;
	add.s32 	%r563, %r562, %r554;
	mul.wide.s32 	%rd129, %r563, 4;
	add.s64 	%rd130, %rd2, %rd129;
	ld.global.v4.u32 	{%r564, %r565, %r566, %r567}, [%rd130];
	or.b32  	%r568, %r553, 131072;
	add.s32 	%r569, %r47, %r568;
	shr.s32 	%r570, %r569, 31;
	shr.u32 	%r571, %r570, 3;
	add.s32 	%r572, %r569, %r571;
	shr.s32 	%r573, %r572, 29;
	setp.lt.s32 	%p163, %r569, 0;
	and.b32  	%r574, %r572, -536870912;
	setp.ne.s32 	%p164, %r574, %r569;
	and.pred  	%p165, %p163, %p164;
	selp.u32 	%r575, 1, 0, %p165;
	sub.s32 	%r576, %r575, %r573;
	shl.b32 	%r577, %r576, 29;
	add.s32 	%r578, %r577, %r569;
	mul.wide.s32 	%rd131, %r578, 4;
	add.s64 	%rd132, %rd2, %rd131;
	ld.global.v4.u32 	{%r579, %r580, %r581, %r582}, [%rd132];
	or.b32  	%r583, %r553, 262144;
	add.s32 	%r584, %r47, %r583;
	shr.s32 	%r585, %r584, 31;
	shr.u32 	%r586, %r585, 3;
	add.s32 	%r587, %r584, %r586;
	shr.s32 	%r588, %r587, 29;
	setp.lt.s32 	%p166, %r584, 0;
	and.b32  	%r589, %r587, -536870912;
	setp.ne.s32 	%p167, %r589, %r584;
	and.pred  	%p168, %p166, %p167;
	selp.u32 	%r590, 1, 0, %p168;
	sub.s32 	%r591, %r590, %r588;
	shl.b32 	%r592, %r591, 29;
	add.s32 	%r593, %r592, %r584;
	mul.wide.s32 	%rd133, %r593, 4;
	add.s64 	%rd134, %rd2, %rd133;
	ld.global.v4.u32 	{%r594, %r595, %r596, %r597}, [%rd134];
	or.b32  	%r598, %r553, 393216;
	add.s32 	%r599, %r47, %r598;
	shr.s32 	%r600, %r599, 31;
	shr.u32 	%r601, %r600, 3;
	add.s32 	%r602, %r599, %r601;
	shr.s32 	%r603, %r602, 29;
	setp.lt.s32 	%p169, %r599, 0;
	and.b32  	%r604, %r602, -536870912;
	setp.ne.s32 	%p170, %r604, %r599;
	and.pred  	%p171, %p169, %p170;
	selp.u32 	%r605, 1, 0, %p171;
	sub.s32 	%r606, %r605, %r603;
	shl.b32 	%r607, %r606, 29;
	add.s32 	%r608, %r607, %r599;
	mul.wide.s32 	%rd135, %r608, 4;
	add.s64 	%rd136, %rd2, %rd135;
	ld.global.v4.u32 	{%r609, %r610, %r611, %r612}, [%rd136];
	or.b32  	%r613, %r553, 524288;
	add.s32 	%r614, %r47, %r613;
	shr.s32 	%r615, %r614, 31;
	shr.u32 	%r616, %r615, 3;
	add.s32 	%r617, %r614, %r616;
	shr.s32 	%r618, %r617, 29;
	setp.lt.s32 	%p172, %r614, 0;
	and.b32  	%r619, %r617, -536870912;
	setp.ne.s32 	%p173, %r619, %r614;
	and.pred  	%p174, %p172, %p173;
	selp.u32 	%r620, 1, 0, %p174;
	sub.s32 	%r621, %r620, %r618;
	shl.b32 	%r622, %r621, 29;
	add.s32 	%r623, %r622, %r614;
	mul.wide.s32 	%rd137, %r623, 4;
	add.s64 	%rd138, %rd2, %rd137;
	ld.global.v4.u32 	{%r624, %r625, %r626, %r627}, [%rd138];
	or.b32  	%r628, %r553, 655360;
	add.s32 	%r629, %r47, %r628;
	shr.s32 	%r630, %r629, 31;
	shr.u32 	%r631, %r630, 3;
	add.s32 	%r632, %r629, %r631;
	shr.s32 	%r633, %r632, 29;
	setp.lt.s32 	%p175, %r629, 0;
	and.b32  	%r634, %r632, -536870912;
	setp.ne.s32 	%p176, %r634, %r629;
	and.pred  	%p177, %p175, %p176;
	selp.u32 	%r635, 1, 0, %p177;
	sub.s32 	%r636, %r635, %r633;
	shl.b32 	%r637, %r636, 29;
	add.s32 	%r638, %r637, %r629;
	mul.wide.s32 	%rd139, %r638, 4;
	add.s64 	%rd140, %rd2, %rd139;
	ld.global.v4.u32 	{%r639, %r640, %r641, %r642}, [%rd140];
	or.b32  	%r643, %r553, 786432;
	add.s32 	%r644, %r47, %r643;
	shr.s32 	%r645, %r644, 31;
	shr.u32 	%r646, %r645, 3;
	add.s32 	%r647, %r644, %r646;
	shr.s32 	%r648, %r647, 29;
	setp.lt.s32 	%p178, %r644, 0;
	and.b32  	%r649, %r647, -536870912;
	setp.ne.s32 	%p179, %r649, %r644;
	and.pred  	%p180, %p178, %p179;
	selp.u32 	%r650, 1, 0, %p180;
	sub.s32 	%r651, %r650, %r648;
	shl.b32 	%r652, %r651, 29;
	add.s32 	%r653, %r652, %r644;
	mul.wide.s32 	%rd141, %r653, 4;
	add.s64 	%rd142, %rd2, %rd141;
	ld.global.v4.u32 	{%r654, %r655, %r656, %r657}, [%rd142];
	or.b32  	%r658, %r553, 917504;
	add.s32 	%r659, %r47, %r658;
	shr.s32 	%r660, %r659, 31;
	shr.u32 	%r661, %r660, 3;
	add.s32 	%r662, %r659, %r661;
	shr.s32 	%r663, %r662, 29;
	setp.lt.s32 	%p181, %r659, 0;
	and.b32  	%r664, %r662, -536870912;
	setp.ne.s32 	%p182, %r664, %r659;
	and.pred  	%p183, %p181, %p182;
	selp.u32 	%r665, 1, 0, %p183;
	sub.s32 	%r666, %r665, %r663;
	shl.b32 	%r667, %r666, 29;
	add.s32 	%r668, %r667, %r659;
	mul.wide.s32 	%rd143, %r668, 4;
	add.s64 	%rd144, %rd2, %rd143;
	ld.global.v4.u32 	{%r669, %r670, %r671, %r672}, [%rd144];
	selp.b32 	%r673, %r566, %r564, %p159;
	shfl.sync.bfly.b32	%r674, %r673, 8, 31, -1;
	selp.b32 	%r421, %r564, %r674, %p159;
	selp.b32 	%r422, %r674, %r566, %p159;
	selp.b32 	%r675, %r567, %r565, %p159;
	shfl.sync.bfly.b32	%r676, %r675, 8, 31, -1;
	selp.b32 	%r429, %r565, %r676, %p159;
	selp.b32 	%r430, %r676, %r567, %p159;
	selp.b32 	%r677, %r581, %r579, %p159;
	shfl.sync.bfly.b32	%r678, %r677, 8, 31, -1;
	selp.b32 	%r437, %r579, %r678, %p159;
	selp.b32 	%r438, %r678, %r581, %p159;
	selp.b32 	%r679, %r582, %r580, %p159;
	shfl.sync.bfly.b32	%r680, %r679, 8, 31, -1;
	selp.b32 	%r445, %r580, %r680, %p159;
	selp.b32 	%r446, %r680, %r582, %p159;
	selp.b32 	%r681, %r596, %r594, %p159;
	shfl.sync.bfly.b32	%r682, %r681, 8, 31, -1;
	selp.b32 	%r453, %r594, %r682, %p159;
	selp.b32 	%r454, %r682, %r596, %p159;
	selp.b32 	%r683, %r597, %r595, %p159;
	shfl.sync.bfly.b32	%r684, %r683, 8, 31, -1;
	selp.b32 	%r461, %r595, %r684, %p159;
	selp.b32 	%r462, %r684, %r597, %p159;
	selp.b32 	%r685, %r611, %r609, %p159;
	shfl.sync.bfly.b32	%r686, %r685, 8, 31, -1;
	selp.b32 	%r469, %r609, %r686, %p159;
	selp.b32 	%r470, %r686, %r611, %p159;
	selp.b32 	%r687, %r612, %r610, %p159;
	shfl.sync.bfly.b32	%r688, %r687, 8, 31, -1;
	selp.b32 	%r477, %r610, %r688, %p159;
	selp.b32 	%r478, %r688, %r612, %p159;
	selp.b32 	%r689, %r626, %r624, %p159;
	shfl.sync.bfly.b32	%r690, %r689, 8, 31, -1;
	selp.b32 	%r485, %r624, %r690, %p159;
	selp.b32 	%r486, %r690, %r626, %p159;
	selp.b32 	%r691, %r627, %r625, %p159;
	shfl.sync.bfly.b32	%r692, %r691, 8, 31, -1;
	selp.b32 	%r493, %r625, %r692, %p159;
	selp.b32 	%r494, %r692, %r627, %p159;
	selp.b32 	%r693, %r641, %r639, %p159;
	shfl.sync.bfly.b32	%r694, %r693, 8, 31, -1;
	selp.b32 	%r501, %r639, %r694, %p159;
	selp.b32 	%r502, %r694, %r641, %p159;
	selp.b32 	%r695, %r642, %r640, %p159;
	shfl.sync.bfly.b32	%r696, %r695, 8, 31, -1;
	selp.b32 	%r509, %r640, %r696, %p159;
	selp.b32 	%r510, %r696, %r642, %p159;
	selp.b32 	%r697, %r656, %r654, %p159;
	shfl.sync.bfly.b32	%r698, %r697, 8, 31, -1;
	selp.b32 	%r517, %r654, %r698, %p159;
	selp.b32 	%r518, %r698, %r656, %p159;
	selp.b32 	%r699, %r657, %r655, %p159;
	shfl.sync.bfly.b32	%r700, %r699, 8, 31, -1;
	selp.b32 	%r525, %r655, %r700, %p159;
	selp.b32 	%r526, %r700, %r657, %p159;
	selp.b32 	%r701, %r671, %r669, %p159;
	shfl.sync.bfly.b32	%r702, %r701, 8, 31, -1;
	selp.b32 	%r533, %r669, %r702, %p159;
	selp.b32 	%r534, %r702, %r671, %p159;
	selp.b32 	%r703, %r672, %r670, %p159;
	shfl.sync.bfly.b32	%r704, %r703, 8, 31, -1;
	selp.b32 	%r541, %r670, %r704, %p159;
	selp.b32 	%r542, %r704, %r672, %p159;
	mov.u32 	%r543, 21520;
	// begin inline asm
	prmt.b32 %r420, %r421, %r422, %r543;
	// end inline asm
	mov.u32 	%r547, 30258;
	// begin inline asm
	prmt.b32 %r424, %r421, %r422, %r547;
	// end inline asm
	// begin inline asm
	prmt.b32 %r428, %r429, %r430, %r543;
	// end inline asm
	// begin inline asm
	prmt.b32 %r432, %r429, %r430, %r547;
	// end inline asm
	// begin inline asm
	prmt.b32 %r436, %r437, %r438, %r543;
	// end inline asm
	// begin inline asm
	prmt.b32 %r440, %r437, %r438, %r547;
	// end inline asm
	// begin inline asm
	prmt.b32 %r444, %r445, %r446, %r543;
	// end inline asm
	// begin inline asm
	prmt.b32 %r448, %r445, %r446, %r547;
	// end inline asm
	// begin inline asm
	prmt.b32 %r452, %r453, %r454, %r543;
	// end inline asm
	// begin inline asm
	prmt.b32 %r456, %r453, %r454, %r547;
	// end inline asm
	// begin inline asm
	prmt.b32 %r460, %r461, %r462, %r543;
	// end inline asm
	// begin inline asm
	prmt.b32 %r464, %r461, %r462, %r547;
	// end inline asm
	// begin inline asm
	prmt.b32 %r468, %r469, %r470, %r543;
	// end inline asm
	// begin inline asm
	prmt.b32 %r472, %r469, %r470, %r547;
	// end inline asm
	// begin inline asm
	prmt.b32 %r476, %r477, %r478, %r543;
	// end inline asm
	// begin inline asm
	prmt.b32 %r480, %r477, %r478, %r547;
	// end inline asm
	// begin inline asm
	prmt.b32 %r484, %r485, %r486, %r543;
	// end inline asm
	// begin inline asm
	prmt.b32 %r488, %r485, %r486, %r547;
	// end inline asm
	// begin inline asm
	prmt.b32 %r492, %r493, %r494, %r543;
	// end inline asm
	// begin inline asm
	prmt.b32 %r496, %r493, %r494, %r547;
	// end inline asm
	// begin inline asm
	prmt.b32 %r500, %r501, %r502, %r543;
	// end inline asm
	// begin inline asm
	prmt.b32 %r504, %r501, %r502, %r547;
	// end inline asm
	// begin inline asm
	prmt.b32 %r508, %r509, %r510, %r543;
	// end inline asm
	// begin inline asm
	prmt.b32 %r512, %r509, %r510, %r547;
	// end inline asm
	// begin inline asm
	prmt.b32 %r516, %r517, %r518, %r543;
	// end inline asm
	// begin inline asm
	prmt.b32 %r520, %r517, %r518, %r547;
	// end inline asm
	// begin inline asm
	prmt.b32 %r524, %r525, %r526, %r543;
	// end inline asm
	// begin inline asm
	prmt.b32 %r528, %r525, %r526, %r547;
	// end inline asm
	// begin inline asm
	prmt.b32 %r532, %r533, %r534, %r543;
	// end inline asm
	// begin inline asm
	prmt.b32 %r536, %r533, %r534, %r547;
	// end inline asm
	// begin inline asm
	prmt.b32 %r540, %r541, %r542, %r543;
	// end inline asm
	// begin inline asm
	prmt.b32 %r544, %r541, %r542, %r547;
	// end inline asm
	st.shared.u32 	[%rd6], %r420;
	st.shared.u32 	[%rd7+128], %r424;
	st.shared.u32 	[%rd7+4], %r428;
	st.shared.u32 	[%rd7+132], %r432;
	st.shared.u32 	[%rd8], %r436;
	st.shared.u32 	[%rd9+128], %r440;
	st.shared.u32 	[%rd9+4], %r444;
	st.shared.u32 	[%rd9+132], %r448;
	st.shared.u32 	[%rd10], %r452;
	st.shared.u32 	[%rd11+128], %r456;
	st.shared.u32 	[%rd11+4], %r460;
	st.shared.u32 	[%rd11+132], %r464;
	st.shared.u32 	[%rd12], %r468;
	st.shared.u32 	[%rd13+128], %r472;
	st.shared.u32 	[%rd13+4], %r476;
	st.shared.u32 	[%rd13+132], %r480;
	st.shared.u32 	[%rd14], %r484;
	st.shared.u32 	[%rd15+128], %r488;
	st.shared.u32 	[%rd15+4], %r492;
	st.shared.u32 	[%rd15+132], %r496;
	st.shared.u32 	[%rd16], %r500;
	st.shared.u32 	[%rd17+128], %r504;
	st.shared.u32 	[%rd17+4], %r508;
	st.shared.u32 	[%rd17+132], %r512;
	st.shared.u32 	[%rd18], %r516;
	st.shared.u32 	[%rd19+128], %r520;
	st.shared.u32 	[%rd19+4], %r524;
	st.shared.u32 	[%rd19+132], %r528;
	st.shared.u32 	[%rd20], %r532;
	st.shared.u32 	[%rd21+128], %r536;
	st.shared.u32 	[%rd21+4], %r540;
	st.shared.u32 	[%rd21+132], %r544;
	bar.sync 	0;
	mov.u32 	%r1317, 256;
	mov.u64 	%rd243, %rd39;
	mov.u64 	%rd244, %rd38;
	mov.u32 	%r1320, %r1309;
$L__BB0_63:                             // %pass7744
                                        //   Parent Loop BB0_62 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	mov.u32 	%r1309, %r1319;
	mov.u32 	%r1319, %r1318;
	ld.shared.u32 	%r1318, [%rd243];
	// begin inline asm
	mov.b32 %r710, {%rs87, %rs87};
	// end inline asm
	// begin inline asm
	mov.b32 %r721, {%rs61, %rs61};
	// end inline asm
	xor.b32  	%r709, %r1318, -2004318072;
	mov.u32 	%r708, 983055;
	// begin inline asm
	lop3.b32 %r707, %r708, %r709, %r710, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r711, {%rs95, %rs95};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r712, %r710, %r711;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r715, %r707, %r712;
	// end inline asm
	mov.u32 	%r719, 15728880;
	// begin inline asm
	lop3.b32 %r718, %r719, %r709, %r721, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r722, {%rs95, %rs95};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r723, %r721, %r722;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r726, %r718, %r723;
	// end inline asm
	shr.u32 	%r731, %r709, 8;
	// begin inline asm
	lop3.b32 %r729, %r708, %r731, %r710, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r733, {%rs95, %rs95};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r734, %r710, %r733;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r737, %r729, %r734;
	// end inline asm
	// begin inline asm
	lop3.b32 %r740, %r719, %r731, %r721, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r744, {%rs95, %rs95};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r745, %r721, %r744;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r748, %r740, %r745;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r751, %r211;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r753, %r751, %r715;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r756, %r211;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r758, %r756, %r726;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r761, %r211;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r763, %r761, %r737;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r766, %r211;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r768, %r766, %r748;
	// end inline asm
	// begin inline asm
	mov.b32 %r776, {%rs87, %rs87};
	// end inline asm
	// begin inline asm
	mov.b32 %r787, {%rs61, %rs61};
	// end inline asm
	xor.b32  	%r775, %r1320, -2004318072;
	// begin inline asm
	lop3.b32 %r773, %r708, %r775, %r776, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r777, {%rs95, %rs95};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r778, %r776, %r777;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r781, %r773, %r778;
	// end inline asm
	// begin inline asm
	lop3.b32 %r784, %r719, %r775, %r787, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r788, {%rs95, %rs95};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r789, %r787, %r788;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r792, %r784, %r789;
	// end inline asm
	shr.u32 	%r797, %r775, 8;
	// begin inline asm
	lop3.b32 %r795, %r708, %r797, %r776, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r799, {%rs95, %rs95};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r800, %r776, %r799;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r803, %r795, %r800;
	// end inline asm
	// begin inline asm
	lop3.b32 %r806, %r719, %r797, %r787, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r810, {%rs95, %rs95};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r811, %r787, %r810;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r814, %r806, %r811;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r817, %r157, %r781, %r753;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r821, %r157, %r792, %r758;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r825, %r157, %r803, %r763;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r829, %r157, %r814, %r768;
	// end inline asm
	// begin inline asm
	mov.b32 %r838, {%rs87, %rs87};
	// end inline asm
	// begin inline asm
	mov.b32 %r849, {%rs61, %rs61};
	// end inline asm
	xor.b32  	%r837, %r1309, -2004318072;
	// begin inline asm
	lop3.b32 %r835, %r708, %r837, %r838, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r839, {%rs95, %rs95};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r840, %r838, %r839;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r843, %r835, %r840;
	// end inline asm
	// begin inline asm
	lop3.b32 %r846, %r719, %r837, %r849, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r850, {%rs95, %rs95};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r851, %r849, %r850;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r854, %r846, %r851;
	// end inline asm
	shr.u32 	%r859, %r837, 8;
	// begin inline asm
	lop3.b32 %r857, %r708, %r859, %r838, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r861, {%rs95, %rs95};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r862, %r838, %r861;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r865, %r857, %r862;
	// end inline asm
	// begin inline asm
	lop3.b32 %r868, %r719, %r859, %r849, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r872, {%rs95, %rs95};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r873, %r849, %r872;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r876, %r868, %r873;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r879, %r175;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r881, %r879, %r843, %r817;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r885, %r175;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r887, %r885, %r854, %r821;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r891, %r175;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r893, %r891, %r865, %r825;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r897, %r175;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r899, %r897, %r876, %r829;
	// end inline asm
	// begin inline asm
	mov.b32 %r908, {%rs87, %rs87};
	// end inline asm
	// begin inline asm
	mov.b32 %r919, {%rs61, %rs61};
	// end inline asm
	xor.b32  	%r907, %r1319, -2004318072;
	// begin inline asm
	lop3.b32 %r905, %r708, %r907, %r908, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r909, {%rs95, %rs95};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r910, %r908, %r909;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r913, %r905, %r910;
	// end inline asm
	// begin inline asm
	lop3.b32 %r916, %r719, %r907, %r919, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r920, {%rs95, %rs95};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r921, %r919, %r920;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r924, %r916, %r921;
	// end inline asm
	shr.u32 	%r929, %r907, 8;
	// begin inline asm
	lop3.b32 %r927, %r708, %r929, %r908, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r931, {%rs95, %rs95};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r932, %r908, %r931;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r935, %r927, %r932;
	// end inline asm
	// begin inline asm
	lop3.b32 %r938, %r719, %r929, %r919, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r942, {%rs95, %rs95};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r943, %r919, %r942;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r946, %r938, %r943;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r972, %r193, %r913, %r881;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r969, %r193, %r924, %r887;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r981, %r193, %r935, %r893;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r978, %r193, %r946, %r899;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r965, %r217;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r967, %r965, %r969;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r970, %r214, %r972, %r967;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r974, %r217;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r976, %r974, %r978;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r979, %r214, %r981, %r976;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r983, %r217, %r972;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r986, %r214, %r969, %r983;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r990, %r217, %r981;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r993, %r214, %r978, %r990;
	// end inline asm
	mov.u32 	%r1005, 0;
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r997, %r998}, {%r273, %r279, %r276, %r282}, {%r970, %r986}, {%r1005, %r1005};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1007, %r1008}, {%r273, %r279, %r276, %r282}, {%r979, %r993}, {%r1005, %r1005};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1017, %r1018}, {%r314, %r320, %r317, %r323}, {%r997, %r998}, {%r1005, %r1005};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1027, %r1028}, {%r314, %r320, %r317, %r323}, {%r1007, %r1008}, {%r1005, %r1005};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1037, %r58, %r1017;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1040, %r58, %r1018;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1043, %r58, %r1027;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1046, %r58, %r1028;
	// end inline asm
	// begin inline asm
	mov.b32 %r1049, {%rs83, %rs83};
	// end inline asm
	mov.u16 	%rs72, 18176;
	// begin inline asm
	mov.b32 %r1050, {%rs72, %rs72};
	// end inline asm
	// begin inline asm
	max.f16x2 %r1051, %r1037, %r1049;
	// end inline asm
	// begin inline asm
	min.f16x2 %r1054, %r1051, %r1050;
	// end inline asm
	// begin inline asm
	mov.b32 %r1057, {%rs83, %rs83};
	// end inline asm
	// begin inline asm
	mov.b32 %r1058, {%rs72, %rs72};
	// end inline asm
	// begin inline asm
	max.f16x2 %r1059, %r1040, %r1057;
	// end inline asm
	// begin inline asm
	min.f16x2 %r1062, %r1059, %r1058;
	// end inline asm
	// begin inline asm
	mov.b32 %r1065, {%rs83, %rs83};
	// end inline asm
	// begin inline asm
	mov.b32 %r1066, {%rs72, %rs72};
	// end inline asm
	// begin inline asm
	max.f16x2 %r1067, %r1043, %r1065;
	// end inline asm
	// begin inline asm
	min.f16x2 %r1070, %r1067, %r1066;
	// end inline asm
	// begin inline asm
	mov.b32 %r1073, {%rs83, %rs83};
	// end inline asm
	// begin inline asm
	mov.b32 %r1074, {%rs72, %rs72};
	// end inline asm
	// begin inline asm
	max.f16x2 %r1075, %r1046, %r1073;
	// end inline asm
	// begin inline asm
	min.f16x2 %r1078, %r1075, %r1074;
	// end inline asm
	// begin inline asm
	mov.b32 %r1084, {%rs87, %rs87};
	// end inline asm
	// begin inline asm
	mov.b32 %r1082, {%rs95, %rs95};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1083, %r1084, %r1082;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1086, %r1054, %r1083;
	// end inline asm
	// begin inline asm
	mov.b32 %r1089, {%rs95, %rs95};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1090, %r1084, %r1089;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1093, %r1062, %r1090;
	// end inline asm
	// begin inline asm
	mov.b32 %r1096, {%rs95, %rs95};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1097, %r1084, %r1096;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1100, %r1070, %r1097;
	// end inline asm
	// begin inline asm
	mov.b32 %r1103, {%rs95, %rs95};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1104, %r1084, %r1103;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1107, %r1078, %r1104;
	// end inline asm
	mov.u32 	%r1113, 25152;
	// begin inline asm
	prmt.b32 %r1110, %r1086, %r1100, %r1113;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1114, %r1093, %r1107, %r1113;
	// end inline asm
	shl.b32 	%r1121, %r1114, 4;
	mov.u32 	%r1119, 252645135;
	// begin inline asm
	lop3.b32 %r1118, %r1119, %r1110, %r1121, 202;
	// end inline asm
	xor.b32  	%r1122, %r1118, -2004318072;
	st.shared.u32 	[%rd244], %r1122;
	add.s32 	%r1317, %r1317, -8;
	add.s64 	%rd244, %rd244, 1156;
	add.s64 	%rd243, %rd243, 1156;
	setp.eq.s32 	%p184, %r1317, 0;
	mov.u32 	%r1320, %r1309;
	@%p184 bra 	$L__BB0_64;
	bra.uni 	$L__BB0_63;
$L__BB0_64:                             // %guard_exit13317
                                        //   in Loop: Header=BB0_62 Depth=1
	bar.sync 	0;
	or.b32  	%r89, %r54, %r46;
	ld.shared.u32 	%r1128, [%rd22];
	ld.shared.u32 	%r1129, [%rd23+128];
	ld.shared.u32 	%r1136, [%rd23+4];
	ld.shared.u32 	%r1137, [%rd23+132];
	ld.shared.u32 	%r1144, [%rd24];
	ld.shared.u32 	%r1145, [%rd25+128];
	ld.shared.u32 	%r1152, [%rd25+4];
	ld.shared.u32 	%r1153, [%rd25+132];
	ld.shared.u32 	%r1160, [%rd26];
	ld.shared.u32 	%r1161, [%rd27+128];
	ld.shared.u32 	%r1168, [%rd27+4];
	ld.shared.u32 	%r1169, [%rd27+132];
	ld.shared.u32 	%r1176, [%rd28];
	ld.shared.u32 	%r1177, [%rd29+128];
	ld.shared.u32 	%r1184, [%rd29+4];
	ld.shared.u32 	%r1185, [%rd29+132];
	ld.shared.u32 	%r1192, [%rd30];
	ld.shared.u32 	%r1193, [%rd31+128];
	ld.shared.u32 	%r1200, [%rd31+4];
	ld.shared.u32 	%r1201, [%rd31+132];
	ld.shared.u32 	%r1208, [%rd32];
	ld.shared.u32 	%r1209, [%rd33+128];
	ld.shared.u32 	%r1216, [%rd33+4];
	ld.shared.u32 	%r1217, [%rd33+132];
	ld.shared.u32 	%r1224, [%rd34];
	ld.shared.u32 	%r1225, [%rd35+128];
	ld.shared.u32 	%r1232, [%rd35+4];
	ld.shared.u32 	%r1233, [%rd35+132];
	ld.shared.u32 	%r1240, [%rd36];
	ld.shared.u32 	%r1241, [%rd37+128];
	ld.shared.u32 	%r1248, [%rd37+4];
	ld.shared.u32 	%r1249, [%rd37+132];
	// begin inline asm
	prmt.b32 %r1123, %r1128, %r1129, %r543;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1127, %r1128, %r1129, %r547;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1131, %r1136, %r1137, %r543;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1135, %r1136, %r1137, %r547;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1139, %r1144, %r1145, %r543;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1143, %r1144, %r1145, %r547;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1147, %r1152, %r1153, %r543;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1151, %r1152, %r1153, %r547;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1155, %r1160, %r1161, %r543;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1159, %r1160, %r1161, %r547;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1163, %r1168, %r1169, %r543;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1167, %r1168, %r1169, %r547;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1171, %r1176, %r1177, %r543;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1175, %r1176, %r1177, %r547;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1179, %r1184, %r1185, %r543;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1183, %r1184, %r1185, %r547;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1187, %r1192, %r1193, %r543;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1191, %r1192, %r1193, %r547;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1195, %r1200, %r1201, %r543;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1199, %r1200, %r1201, %r547;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1203, %r1208, %r1209, %r543;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1207, %r1208, %r1209, %r547;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1211, %r1216, %r1217, %r543;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1215, %r1216, %r1217, %r547;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1219, %r1224, %r1225, %r543;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1223, %r1224, %r1225, %r547;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1227, %r1232, %r1233, %r543;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1231, %r1232, %r1233, %r547;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1235, %r1240, %r1241, %r543;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1239, %r1240, %r1241, %r547;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1243, %r1248, %r1249, %r543;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1247, %r1248, %r1249, %r547;
	// end inline asm
	selp.b32 	%r1251, %r1127, %r1123, %p159;
	shfl.sync.bfly.b32	%r94, %r1251, 8, 31, -1;
	selp.b32 	%r1252, %r1135, %r1131, %p159;
	shfl.sync.bfly.b32	%r95, %r1252, 8, 31, -1;
	selp.b32 	%r1253, %r1143, %r1139, %p159;
	shfl.sync.bfly.b32	%r1254, %r1253, 8, 31, -1;
	selp.b32 	%r96, %r1139, %r1254, %p159;
	selp.b32 	%r97, %r1254, %r1143, %p159;
	selp.b32 	%r1255, %r1151, %r1147, %p159;
	shfl.sync.bfly.b32	%r1256, %r1255, 8, 31, -1;
	selp.b32 	%r98, %r1147, %r1256, %p159;
	selp.b32 	%r99, %r1256, %r1151, %p159;
	selp.b32 	%r1257, %r1159, %r1155, %p159;
	shfl.sync.bfly.b32	%r1258, %r1257, 8, 31, -1;
	selp.b32 	%r1259, %r1167, %r1163, %p159;
	shfl.sync.bfly.b32	%r1260, %r1259, 8, 31, -1;
	selp.b32 	%r1261, %r1175, %r1171, %p159;
	shfl.sync.bfly.b32	%r1262, %r1261, 8, 31, -1;
	selp.b32 	%r1263, %r1183, %r1179, %p159;
	shfl.sync.bfly.b32	%r1264, %r1263, 8, 31, -1;
	selp.b32 	%r1265, %r1191, %r1187, %p159;
	shfl.sync.bfly.b32	%r1266, %r1265, 8, 31, -1;
	selp.b32 	%r1267, %r1199, %r1195, %p159;
	shfl.sync.bfly.b32	%r1268, %r1267, 8, 31, -1;
	selp.b32 	%r1269, %r1207, %r1203, %p159;
	shfl.sync.bfly.b32	%r1270, %r1269, 8, 31, -1;
	selp.b32 	%r1271, %r1215, %r1211, %p159;
	shfl.sync.bfly.b32	%r1272, %r1271, 8, 31, -1;
	selp.b32 	%r1273, %r1223, %r1219, %p159;
	shfl.sync.bfly.b32	%r1274, %r1273, 8, 31, -1;
	selp.b32 	%r1275, %r1231, %r1227, %p159;
	shfl.sync.bfly.b32	%r1276, %r1275, 8, 31, -1;
	selp.b32 	%r1277, %r1239, %r1235, %p159;
	shfl.sync.bfly.b32	%r1278, %r1277, 8, 31, -1;
	selp.b32 	%r1279, %r1247, %r1243, %p159;
	shfl.sync.bfly.b32	%r1280, %r1279, 8, 31, -1;
	@%p185 bra 	$L__BB0_86;
	bra.uni 	$L__BB0_65;
$L__BB0_86:                             // %pass12314
                                        //   in Loop: Header=BB0_62 Depth=1
	selp.b32 	%r1281, %r95, %r1135, %p159;
	selp.b32 	%r1282, %r1131, %r95, %p159;
	selp.b32 	%r1283, %r94, %r1127, %p159;
	selp.b32 	%r1284, %r1123, %r94, %p159;
	shl.b32 	%r1321, %r89, 12;
	or.b32  	%r1285, %r50, %r1321;
	cvt.u64.u32 	%rd145, %r1285;
	add.s64 	%rd146, %rd145, %rd5;
	shr.u64 	%rd147, %rd146, 35;
	add.s64 	%rd148, %rd146, %rd147;
	shr.s64 	%rd149, %rd148, 29;
	setp.lt.s64 	%p188, %rd146, 0;
	and.b64  	%rd150, %rd148, -536870912;
	setp.ne.s64 	%p189, %rd150, %rd146;
	and.pred  	%p190, %p188, %p189;
	selp.u64 	%rd151, 1, 0, %p190;
	sub.s64 	%rd152, %rd151, %rd149;
	shl.b64 	%rd153, %rd152, 29;
	add.s64 	%rd154, %rd153, %rd146;
	shl.b64 	%rd155, %rd154, 2;
	add.s64 	%rd156, %rd3, %rd155;
	st.global.v4.u32 	[%rd156], {%r1284, %r1282, %r1283, %r1281};
	bra.uni 	$L__BB0_87;
$L__BB0_65:                             // %guard_exit13317.pass12433_crit_edge
                                        //   in Loop: Header=BB0_62 Depth=1
	shl.b32 	%r1321, %r89, 12;
$L__BB0_87:                             // %pass12433
                                        //   in Loop: Header=BB0_62 Depth=1
	selp.b32 	%r104, %r1171, %r1262, %p159;
	selp.b32 	%r105, %r1262, %r1175, %p159;
	selp.b32 	%r106, %r1179, %r1264, %p159;
	selp.b32 	%r107, %r1264, %r1183, %p159;
	or.b32  	%r1286, %r1321, %r50;
	or.b32  	%r1287, %r1286, 131072;
	cvt.s64.s32 	%rd157, %r1287;
	add.s64 	%rd158, %rd157, %rd5;
	shr.u64 	%rd159, %rd158, 35;
	add.s64 	%rd160, %rd158, %rd159;
	shr.s64 	%rd161, %rd160, 29;
	setp.lt.s64 	%p192, %rd158, 0;
	and.b64  	%rd162, %rd160, -536870912;
	setp.ne.s64 	%p193, %rd162, %rd158;
	and.pred  	%p194, %p192, %p193;
	selp.u64 	%rd163, 1, 0, %p194;
	sub.s64 	%rd164, %rd163, %rd161;
	shl.b64 	%rd165, %rd164, 29;
	add.s64 	%rd166, %rd165, %rd158;
	shl.b64 	%rd167, %rd166, 2;
	add.s64 	%rd168, %rd3, %rd167;
	st.global.v4.u32 	[%rd168], {%r96, %r98, %r97, %r99};
	@%p191 bra 	$L__BB0_89;
// %bb.88:                              // %pass12552
                                        //   in Loop: Header=BB0_62 Depth=1
	selp.b32 	%r100, %r1155, %r1258, %p159;
	selp.b32 	%r101, %r1258, %r1159, %p159;
	selp.b32 	%r102, %r1163, %r1260, %p159;
	selp.b32 	%r103, %r1260, %r1167, %p159;
	or.b32  	%r1289, %r1286, 262144;
	cvt.s64.s32 	%rd169, %r1289;
	add.s64 	%rd170, %rd169, %rd5;
	shr.u64 	%rd171, %rd170, 35;
	add.s64 	%rd172, %rd170, %rd171;
	shr.s64 	%rd173, %rd172, 29;
	setp.lt.s64 	%p195, %rd170, 0;
	and.b64  	%rd174, %rd172, -536870912;
	setp.ne.s64 	%p196, %rd174, %rd170;
	and.pred  	%p197, %p195, %p196;
	selp.u64 	%rd175, 1, 0, %p197;
	sub.s64 	%rd176, %rd175, %rd173;
	shl.b64 	%rd177, %rd176, 29;
	add.s64 	%rd178, %rd177, %rd170;
	shl.b64 	%rd179, %rd178, 2;
	add.s64 	%rd180, %rd3, %rd179;
	st.global.v4.u32 	[%rd180], {%r100, %r102, %r101, %r103};
$L__BB0_89:                             // %pass12671
                                        //   in Loop: Header=BB0_62 Depth=1
	selp.b32 	%r112, %r1203, %r1270, %p159;
	selp.b32 	%r113, %r1270, %r1207, %p159;
	selp.b32 	%r114, %r1211, %r1272, %p159;
	selp.b32 	%r115, %r1272, %r1215, %p159;
	or.b32  	%r1291, %r1286, 393216;
	cvt.s64.s32 	%rd181, %r1291;
	add.s64 	%rd182, %rd181, %rd5;
	shr.u64 	%rd183, %rd182, 35;
	add.s64 	%rd184, %rd182, %rd183;
	shr.s64 	%rd185, %rd184, 29;
	setp.lt.s64 	%p199, %rd182, 0;
	and.b64  	%rd186, %rd184, -536870912;
	setp.ne.s64 	%p200, %rd186, %rd182;
	and.pred  	%p201, %p199, %p200;
	selp.u64 	%rd187, 1, 0, %p201;
	sub.s64 	%rd188, %rd187, %rd185;
	shl.b64 	%rd189, %rd188, 29;
	add.s64 	%rd190, %rd189, %rd182;
	shl.b64 	%rd191, %rd190, 2;
	add.s64 	%rd192, %rd3, %rd191;
	st.global.v4.u32 	[%rd192], {%r104, %r106, %r105, %r107};
	@%p191 bra 	$L__BB0_91;
// %bb.90:                              // %pass12790
                                        //   in Loop: Header=BB0_62 Depth=1
	selp.b32 	%r108, %r1187, %r1266, %p159;
	selp.b32 	%r109, %r1266, %r1191, %p159;
	selp.b32 	%r110, %r1195, %r1268, %p159;
	selp.b32 	%r111, %r1268, %r1199, %p159;
	or.b32  	%r1293, %r1286, 524288;
	cvt.s64.s32 	%rd193, %r1293;
	add.s64 	%rd194, %rd193, %rd5;
	shr.u64 	%rd195, %rd194, 35;
	add.s64 	%rd196, %rd194, %rd195;
	shr.s64 	%rd197, %rd196, 29;
	setp.lt.s64 	%p202, %rd194, 0;
	and.b64  	%rd198, %rd196, -536870912;
	setp.ne.s64 	%p203, %rd198, %rd194;
	and.pred  	%p204, %p202, %p203;
	selp.u64 	%rd199, 1, 0, %p204;
	sub.s64 	%rd200, %rd199, %rd197;
	shl.b64 	%rd201, %rd200, 29;
	add.s64 	%rd202, %rd201, %rd194;
	shl.b64 	%rd203, %rd202, 2;
	add.s64 	%rd204, %rd3, %rd203;
	st.global.v4.u32 	[%rd204], {%r108, %r110, %r109, %r111};
$L__BB0_91:                             // %pass12909
                                        //   in Loop: Header=BB0_62 Depth=1
	selp.b32 	%r120, %r1235, %r1278, %p159;
	selp.b32 	%r121, %r1278, %r1239, %p159;
	selp.b32 	%r122, %r1243, %r1280, %p159;
	selp.b32 	%r123, %r1280, %r1247, %p159;
	or.b32  	%r1295, %r1286, 655360;
	cvt.s64.s32 	%rd205, %r1295;
	add.s64 	%rd206, %rd205, %rd5;
	shr.u64 	%rd207, %rd206, 35;
	add.s64 	%rd208, %rd206, %rd207;
	shr.s64 	%rd209, %rd208, 29;
	setp.lt.s64 	%p206, %rd206, 0;
	and.b64  	%rd210, %rd208, -536870912;
	setp.ne.s64 	%p207, %rd210, %rd206;
	and.pred  	%p208, %p206, %p207;
	selp.u64 	%rd211, 1, 0, %p208;
	sub.s64 	%rd212, %rd211, %rd209;
	shl.b64 	%rd213, %rd212, 29;
	add.s64 	%rd214, %rd213, %rd206;
	shl.b64 	%rd215, %rd214, 2;
	add.s64 	%rd216, %rd3, %rd215;
	st.global.v4.u32 	[%rd216], {%r112, %r114, %r113, %r115};
	@%p191 bra 	$L__BB0_93;
// %bb.92:                              // %pass13028
                                        //   in Loop: Header=BB0_62 Depth=1
	selp.b32 	%r116, %r1219, %r1274, %p159;
	selp.b32 	%r117, %r1274, %r1223, %p159;
	selp.b32 	%r118, %r1227, %r1276, %p159;
	selp.b32 	%r119, %r1276, %r1231, %p159;
	or.b32  	%r1297, %r1286, 786432;
	cvt.s64.s32 	%rd217, %r1297;
	add.s64 	%rd218, %rd217, %rd5;
	shr.u64 	%rd219, %rd218, 35;
	add.s64 	%rd220, %rd218, %rd219;
	shr.s64 	%rd221, %rd220, 29;
	setp.lt.s64 	%p209, %rd218, 0;
	and.b64  	%rd222, %rd220, -536870912;
	setp.ne.s64 	%p210, %rd222, %rd218;
	and.pred  	%p211, %p209, %p210;
	selp.u64 	%rd223, 1, 0, %p211;
	sub.s64 	%rd224, %rd223, %rd221;
	shl.b64 	%rd225, %rd224, 29;
	add.s64 	%rd226, %rd225, %rd218;
	shl.b64 	%rd227, %rd226, 2;
	add.s64 	%rd228, %rd3, %rd227;
	st.global.v4.u32 	[%rd228], {%r116, %r118, %r117, %r119};
	bra.uni 	$L__BB0_93;
$L__BB0_94:                             // %L29851
	st.global.u32 	[%rd4], %r1303;
	ret;
$L__BB0_7:                              // %L157
	mov.u32 	%r1302, 2;
	st.global.u32 	[%rd4], %r1302;
	mov.u64 	%rd241, exception2667;
	cvta.global.u64 	%rd242, %rd241;
	{ // callseq 2, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd242;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 2
	{ // callseq 3, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd46;
	st.param.b32 	[param0+8], %r125;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 3
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
$L__BB0_1:                              // %L8
	mov.u64 	%rd51, exception12688;
	cvta.global.u64 	%rd52, %rd51;
	{ // callseq 0, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd52;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 0
	{ // callseq 1, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd46;
	st.param.b32 	[param0+8], %r125;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 1
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
                                        // -- End function
}
