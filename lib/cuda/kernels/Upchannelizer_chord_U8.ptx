// PTX CompilerJob of MethodInstance for upchan(::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Float16x2, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int32, 1}) for sm_86, minthreads=256, blocks_per_sm=4

//
// Generated by LLVM NVPTX Back-End
//

.version 8.1
.target sm_86
.address_size 64

	// .globl	_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE // -- Begin function _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE
.func gpu_report_exception
(
	.param .b64 gpu_report_exception_param_0
)
.noreturn
{
	trap;
}
.func gpu_signal_exception
(
	.param .align 8 .b8 gpu_signal_exception_param_0[16]
)
.noreturn
{
	trap;
}
.extern .shared .align 32 .b8 shmem[];
.global .align 1 .b8 exception1402[6] = {101, 114, 114, 111, 114, 0};
.global .align 1 .b8 exception1[10] = {101, 120, 99, 101, 112, 116, 105, 111, 110, 0};
                                        // @_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE
.visible .entry _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE(
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_0[16],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_1[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_2[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_3[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_4[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_5[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_6[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_7[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_8[32]
)
.reqntid 256, 1, 1
.minnctapersm 4
{
	.reg .pred 	%p<217>;
	.reg .b16 	%rs<96>;
	.reg .b32 	%r<1130>;
	.reg .f32 	%f<775>;
	.reg .b64 	%rd<162>;

// %bb.0:                               // %conversion
	ld.param.u32 	%r137, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_0+8];
	ld.param.u64 	%rd30, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_0];
	// begin inline asm
	mov.u32 %r138, %dynamic_smem_size;
	// end inline asm
	setp.gt.u32 	%p1, %r138, 73983;
	@%p1 bra 	LBB0_2;
	bra.uni 	LBB0_1;
LBB0_2:                                 // %L10
	ld.param.u64 	%rd47, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_8];
	ld.param.u64 	%rd31, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_1];
	mov.u32 	%r1, %ctaid.x;
	shl.b32 	%r2, %r1, 8;
	mov.u32 	%r3, %tid.x;
	mov.u32 	%r4, %tid.y;
	shl.b32 	%r5, %r4, 5;
	or.b32  	%r139, %r2, %r3;
	or.b32  	%r140, %r139, %r5;
	mul.wide.u32 	%rd53, %r140, 4;
	add.s64 	%rd4, %rd47, %rd53;
	mov.u32 	%r141, 1;
	st.global.u32 	[%rd4], %r141;
	ld.global.u32 	%r6, [%rd31];
	setp.lt.s32 	%p2, %r6, 0;
	@%p2 bra 	LBB0_7;
// %bb.3:                               // %L205
	ld.param.u64 	%rd35, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_2];
	ld.global.u32 	%r7, [%rd35];
	setp.lt.s32 	%p3, %r7, %r6;
	setp.gt.s32 	%p4, %r7, 262144;
	or.pred  	%p5, %p3, %p4;
	@%p5 bra 	LBB0_7;
// %bb.4:                               // %L215
	ld.param.u64 	%rd39, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_3];
	ld.global.u32 	%r8, [%rd39];
	sub.s32 	%r142, %r7, %r6;
	and.b32  	%r143, %r142, 255;
	setp.ne.s32 	%p6, %r143, 0;
	setp.lt.s32 	%p7, %r8, 0;
	or.pred  	%p8, %p6, %p7;
	@%p8 bra 	LBB0_7;
// %bb.5:                               // %L221
	ld.param.u64 	%rd43, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_4];
	ld.global.u32 	%r9, [%rd43];
	setp.lt.s32 	%p9, %r9, %r8;
	setp.gt.s32 	%p10, %r9, 32768;
	or.pred  	%p11, %p9, %p10;
	@%p11 bra 	LBB0_7;
// %bb.6:                               // %L231
	sub.s32 	%r144, %r9, %r8;
	add.s32 	%r145, %r144, 3;
	and.b32  	%r146, %r145, 31;
	setp.eq.s32 	%p12, %r146, 0;
	@%p12 bra 	LBB0_8;
	bra.uni 	LBB0_7;
LBB0_8:                                 // %L341
	bfe.u32 	%r14, %r3, 1, 1;
	shl.b32 	%r147, %r14, 1;
	and.b32  	%r15, %r3, 1;
	or.b32  	%r16, %r15, %r147;
	or.b32  	%r17, %r16, 4;
	mov.f32 	%f145, 0f40000000;
	mov.f32 	%f146, 0f41F80000;
	div.approx.f32 	%f1, %f146, %f145;
	cvt.rn.f32.s32 	%f147, %r16;
	sub.f32 	%f148, %f147, %f1;
	mov.f32 	%f177, 0f41000000;
	div.approx.f32 	%f3, %f148, %f177;
	setp.eq.f32 	%p18, %f3, 0f00000000;
	mov.f32 	%f750, 0f3F800000;
	mov.f32 	%f743, %f750;
	@%p18 bra 	LBB0_10;
// %bb.9:                               // %L483
	sin.approx.f32 	%f178, %f3;
	div.approx.f32 	%f743, %f178, %f3;
LBB0_10:                                // %L486
	cvt.rn.f32.s32 	%f181, %r17;
	sub.f32 	%f182, %f181, %f1;
	div.approx.f32 	%f8, %f182, %f177;
	setp.eq.f32 	%p24, %f8, 0f00000000;
	mov.f32 	%f744, %f750;
	@%p24 bra 	LBB0_12;
// %bb.11:                              // %L503
	sin.approx.f32 	%f212, %f8;
	div.approx.f32 	%f744, %f212, %f8;
LBB0_12:                                // %L506
	or.b32  	%r165, %r16, 8;
	or.b32  	%r19, %r16, 12;
	cvt.rn.f32.s32 	%f216, %r165;
	sub.f32 	%f217, %f216, %f1;
	div.approx.f32 	%f12, %f217, %f177;
	setp.eq.f32 	%p30, %f12, 0f00000000;
	mov.f32 	%f745, %f750;
	@%p30 bra 	LBB0_14;
// %bb.13:                              // %L585
	sin.approx.f32 	%f247, %f12;
	div.approx.f32 	%f745, %f247, %f12;
LBB0_14:                                // %L588
	cvt.rn.f32.s32 	%f250, %r19;
	sub.f32 	%f251, %f250, %f1;
	div.approx.f32 	%f17, %f251, %f177;
	setp.eq.f32 	%p36, %f17, 0f00000000;
	mov.f32 	%f746, %f750;
	@%p36 bra 	LBB0_16;
// %bb.15:                              // %L605
	sin.approx.f32 	%f281, %f17;
	div.approx.f32 	%f746, %f281, %f17;
LBB0_16:                                // %L608
	or.b32  	%r183, %r16, 16;
	or.b32  	%r21, %r16, 20;
	cvt.rn.f32.s32 	%f285, %r183;
	sub.f32 	%f286, %f285, %f1;
	div.approx.f32 	%f21, %f286, %f177;
	setp.eq.f32 	%p42, %f21, 0f00000000;
	mov.f32 	%f747, %f750;
	@%p42 bra 	LBB0_18;
// %bb.17:                              // %L687
	sin.approx.f32 	%f316, %f21;
	div.approx.f32 	%f747, %f316, %f21;
LBB0_18:                                // %L690
	cvt.rn.f32.s32 	%f319, %r21;
	sub.f32 	%f320, %f319, %f1;
	div.approx.f32 	%f26, %f320, %f177;
	setp.eq.f32 	%p48, %f26, 0f00000000;
	mov.f32 	%f748, %f750;
	@%p48 bra 	LBB0_20;
// %bb.19:                              // %L707
	sin.approx.f32 	%f350, %f26;
	div.approx.f32 	%f748, %f350, %f26;
LBB0_20:                                // %L710
	or.b32  	%r201, %r16, 24;
	or.b32  	%r23, %r16, 28;
	cvt.rn.f32.s32 	%f354, %r201;
	sub.f32 	%f355, %f354, %f1;
	div.approx.f32 	%f30, %f355, %f177;
	setp.eq.f32 	%p54, %f30, 0f00000000;
	mov.f32 	%f749, %f750;
	@%p54 bra 	LBB0_22;
// %bb.21:                              // %L789
	sin.approx.f32 	%f385, %f30;
	div.approx.f32 	%f749, %f385, %f30;
LBB0_22:                                // %L792
	cvt.rn.f32.s32 	%f388, %r23;
	sub.f32 	%f389, %f388, %f1;
	div.approx.f32 	%f35, %f389, %f177;
	setp.eq.f32 	%p60, %f35, 0f00000000;
	@%p60 bra 	LBB0_24;
// %bb.23:                              // %L809
	sin.approx.f32 	%f419, %f35;
	div.approx.f32 	%f750, %f419, %f35;
LBB0_24:                                // %L812
	mul.lo.s32 	%r25, %r16, 7;
	cvt.rn.f32.s32 	%f422, %r25;
	div.approx.f32 	%f38, %f422, %f177;
	abs.f32 	%f753, %f38;
	setp.lt.f32 	%p61, %f753, 0f40000000;
	@%p61 bra 	LBB0_36;
// %bb.25:
	setp.gtu.f32 	%p62, %f753, 0f4B800000;
	@%p62 bra 	LBB0_32;
	bra.uni 	LBB0_26;
LBB0_32:
	mov.b32 	%r27, %f753;
	and.b32  	%r219, %r27, 8388607;
	or.b32  	%r1110, %r219, 1065353216;
	mov.b32 	%f752, %r1110;
	add.s32 	%r220, %r27, -1073741824;
	and.b32  	%r1111, %r220, -8388608;
	setp.eq.s32 	%p68, %r1111, 0;
	@%p68 bra 	LBB0_35;
// %bb.33:                              // %__nv_fmaf_rn.exit4.i.i.i.preheader
	mov.f32 	%f433, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f432,%f433;
	// end inline asm
LBB0_34:                                // %__nv_fmaf_rn.exit4.i.i.i
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r221, %r1111, 192937984;
	add.s32 	%r222, %r221, %r1110;
	mov.b32 	%f434, %r222;
	mul.f32 	%f435, %f432, %f434;
	sub.f32 	%f436, %f434, %f435;
	fma.rn.f32 	%f437, %f436, %f432, %f435;
	sub.f32 	%f438, %f434, %f437;
	fma.rz.f32 	%f439, %f438, %f432, %f437;
	cvt.rzi.f32.f32 	%f440, %f439;
	sub.f32 	%f752, %f434, %f440;
	sub.s32 	%r1111, %r1111, %r221;
	mov.b32 	%r1110, %f752;
	setp.ne.s32 	%p69, %r1111, 0;
	setp.ne.s32 	%p70, %r1110, 0;
	and.pred  	%p71, %p69, %p70;
	@%p71 bra 	LBB0_34;
LBB0_35:                                // %__internal_fmodf_slowpath_mod.exit.i.i
	setp.gt.u32 	%p72, %r27, 2139095039;
	selp.f32 	%f441, 0f7FFFFFFF, 0f4B800000, %p72;
	mul.f32 	%f442, %f752, 0f34000000;
	mul.f32 	%f753, %f441, %f442;
	bra.uni 	LBB0_36;
LBB0_26:                                // %__nv_fast_fdividef.exit.i.i.i
	div.approx.f32 	%f425, %f753, %f145;
	cvt.rzi.f32.f32 	%f751, %f425;
	fma.rn.f32 	%f41, %f751, 0fC0000000, %f753;
	mov.b32 	%r26, %f41;
	setp.lt.u32 	%p63, %r26, 1073741824;
	@%p63 bra 	LBB0_31;
// %bb.27:
	setp.lt.u32 	%p64, %r26, -2147483647;
	@%p64 bra 	LBB0_29;
// %bb.28:
	add.f32 	%f430, %f751, 0fBF800000;
	setp.lt.f32 	%p67, %f41, 0fC0000000;
	add.f32 	%f431, %f430, 0fBF800000;
	selp.f32 	%f751, %f431, %f430, %p67;
	bra.uni 	LBB0_31;
LBB0_29:
	add.f32 	%f751, %f751, 0f3F800000;
	setp.ltu.f32 	%p65, %f41, 0f40800000;
	@%p65 bra 	LBB0_31;
// %bb.30:                              // %__nv_fmaf_rn.exit.i.i.i
	add.f32 	%f426, %f751, 0f3F800000;
	fma.rn.f32 	%f428, %f145, 0fC0400000, %f41;
	setp.ge.f32 	%p66, %f428, 0f00000000;
	add.f32 	%f429, %f426, 0f3F800000;
	selp.f32 	%f751, %f429, %f426, %p66;
LBB0_31:                                // %__internal_fmodf_fastpath_quot.exit.i.i
	fma.rn.f32 	%f753, %f751, 0fC0000000, %f753;
LBB0_36:                                // %__internal_fmodf_kernel.exit.i
	abs.f32 	%f443, %f753;
	setp.gtu.f32 	%p73, %f443, 0f7F800000;
	@%p73 bra 	LBB0_38;
// %bb.37:
	mov.b32 	%r223, %f38;
	and.b32  	%r224, %r223, -2147483648;
	mov.b32 	%r225, %f753;
	or.b32  	%r226, %r224, %r225;
	mov.b32 	%f753, %r226;
LBB0_38:                                // %__nv_fmodf.exit
	add.s32 	%r235, %r25, 28;
	cvt.rn.f32.s32 	%f474, %r235;
	div.approx.f32 	%f57, %f474, %f177;
	abs.f32 	%f757, %f57;
	setp.lt.f32 	%p81, %f757, 0f40000000;
	@%p81 bra 	LBB0_50;
// %bb.39:
	setp.gtu.f32 	%p82, %f757, 0f4B800000;
	@%p82 bra 	LBB0_46;
	bra.uni 	LBB0_40;
LBB0_46:
	mov.b32 	%r35, %f757;
	and.b32  	%r236, %r35, 8388607;
	or.b32  	%r1112, %r236, 1065353216;
	mov.b32 	%f756, %r1112;
	add.s32 	%r237, %r35, -1073741824;
	and.b32  	%r1113, %r237, -8388608;
	setp.eq.s32 	%p88, %r1113, 0;
	@%p88 bra 	LBB0_49;
// %bb.47:                              // %__nv_fmaf_rn.exit4.i.i.i877.preheader
	mov.f32 	%f485, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f484,%f485;
	// end inline asm
LBB0_48:                                // %__nv_fmaf_rn.exit4.i.i.i877
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r238, %r1113, 192937984;
	add.s32 	%r239, %r238, %r1112;
	mov.b32 	%f486, %r239;
	mul.f32 	%f487, %f484, %f486;
	sub.f32 	%f488, %f486, %f487;
	fma.rn.f32 	%f489, %f488, %f484, %f487;
	sub.f32 	%f490, %f486, %f489;
	fma.rz.f32 	%f491, %f490, %f484, %f489;
	cvt.rzi.f32.f32 	%f492, %f491;
	sub.f32 	%f756, %f486, %f492;
	sub.s32 	%r1113, %r1113, %r238;
	mov.b32 	%r1112, %f756;
	setp.ne.s32 	%p89, %r1113, 0;
	setp.ne.s32 	%p90, %r1112, 0;
	and.pred  	%p91, %p89, %p90;
	@%p91 bra 	LBB0_48;
LBB0_49:                                // %__internal_fmodf_slowpath_mod.exit.i.i879
	setp.gt.u32 	%p92, %r35, 2139095039;
	selp.f32 	%f493, 0f7FFFFFFF, 0f4B800000, %p92;
	mul.f32 	%f494, %f756, 0f34000000;
	mul.f32 	%f757, %f493, %f494;
	bra.uni 	LBB0_50;
LBB0_40:                                // %__nv_fast_fdividef.exit.i.i.i849
	div.approx.f32 	%f477, %f757, %f145;
	cvt.rzi.f32.f32 	%f755, %f477;
	fma.rn.f32 	%f60, %f755, 0fC0000000, %f757;
	mov.b32 	%r34, %f60;
	setp.lt.u32 	%p83, %r34, 1073741824;
	@%p83 bra 	LBB0_45;
// %bb.41:
	setp.lt.u32 	%p84, %r34, -2147483647;
	@%p84 bra 	LBB0_43;
// %bb.42:
	add.f32 	%f482, %f755, 0fBF800000;
	setp.lt.f32 	%p87, %f60, 0fC0000000;
	add.f32 	%f483, %f482, 0fBF800000;
	selp.f32 	%f755, %f483, %f482, %p87;
	bra.uni 	LBB0_45;
LBB0_43:
	add.f32 	%f755, %f755, 0f3F800000;
	setp.ltu.f32 	%p85, %f60, 0f40800000;
	@%p85 bra 	LBB0_45;
// %bb.44:                              // %__nv_fmaf_rn.exit.i.i.i854
	add.f32 	%f478, %f755, 0f3F800000;
	fma.rn.f32 	%f480, %f145, 0fC0400000, %f60;
	setp.ge.f32 	%p86, %f480, 0f00000000;
	add.f32 	%f481, %f478, 0f3F800000;
	selp.f32 	%f755, %f481, %f478, %p86;
LBB0_45:                                // %__internal_fmodf_fastpath_quot.exit.i.i858
	fma.rn.f32 	%f757, %f755, 0fC0000000, %f757;
LBB0_50:                                // %__internal_fmodf_kernel.exit.i883
	shr.u32 	%r13, %r3, 1;
	abs.f32 	%f495, %f757;
	setp.gtu.f32 	%p93, %f495, 0f7F800000;
	@%p93 bra 	LBB0_52;
// %bb.51:
	mov.b32 	%r240, %f57;
	and.b32  	%r241, %r240, -2147483648;
	mov.b32 	%r242, %f757;
	or.b32  	%r243, %r241, %r242;
	mov.b32 	%f757, %r243;
LBB0_52:                                // %__nv_fmodf.exit884
	bfe.u32 	%r258, %r3, 2, 1;
	shr.u32 	%r44, %r3, 3;
	and.b32  	%r45, %r44, 2;
	or.b32  	%r259, %r258, %r45;
	and.b32  	%r46, %r13, 4;
	or.b32  	%r47, %r259, %r46;
	and.b32  	%r260, %r3, 3;
	mul.lo.s32 	%r261, %r260, %r47;
	shl.b32 	%r262, %r261, 1;
	neg.s32 	%r263, %r262;
	cvt.rn.f32.s32 	%f528, %r263;
	div.approx.f32 	%f74, %f528, %f177;
	abs.f32 	%f761, %f74;
	setp.lt.f32 	%p101, %f761, 0f40000000;
	@%p101 bra 	LBB0_64;
// %bb.53:
	setp.gtu.f32 	%p102, %f761, 0f4B800000;
	@%p102 bra 	LBB0_60;
	bra.uni 	LBB0_54;
LBB0_60:
	mov.b32 	%r49, %f761;
	and.b32  	%r264, %r49, 8388607;
	or.b32  	%r1114, %r264, 1065353216;
	mov.b32 	%f760, %r1114;
	add.s32 	%r265, %r49, -1073741824;
	and.b32  	%r1115, %r265, -8388608;
	setp.eq.s32 	%p108, %r1115, 0;
	@%p108 bra 	LBB0_63;
// %bb.61:                              // %__nv_fmaf_rn.exit4.i.i.i923.preheader
	mov.f32 	%f539, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f538,%f539;
	// end inline asm
LBB0_62:                                // %__nv_fmaf_rn.exit4.i.i.i923
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r266, %r1115, 192937984;
	add.s32 	%r267, %r266, %r1114;
	mov.b32 	%f540, %r267;
	mul.f32 	%f541, %f538, %f540;
	sub.f32 	%f542, %f540, %f541;
	fma.rn.f32 	%f543, %f542, %f538, %f541;
	sub.f32 	%f544, %f540, %f543;
	fma.rz.f32 	%f545, %f544, %f538, %f543;
	cvt.rzi.f32.f32 	%f546, %f545;
	sub.f32 	%f760, %f540, %f546;
	sub.s32 	%r1115, %r1115, %r266;
	mov.b32 	%r1114, %f760;
	setp.ne.s32 	%p109, %r1115, 0;
	setp.ne.s32 	%p110, %r1114, 0;
	and.pred  	%p111, %p109, %p110;
	@%p111 bra 	LBB0_62;
LBB0_63:                                // %__internal_fmodf_slowpath_mod.exit.i.i925
	setp.gt.u32 	%p112, %r49, 2139095039;
	selp.f32 	%f547, 0f7FFFFFFF, 0f4B800000, %p112;
	mul.f32 	%f548, %f760, 0f34000000;
	mul.f32 	%f761, %f547, %f548;
	bra.uni 	LBB0_64;
LBB0_54:                                // %__nv_fast_fdividef.exit.i.i.i895
	div.approx.f32 	%f531, %f761, %f145;
	cvt.rzi.f32.f32 	%f759, %f531;
	fma.rn.f32 	%f77, %f759, 0fC0000000, %f761;
	mov.b32 	%r48, %f77;
	setp.lt.u32 	%p103, %r48, 1073741824;
	@%p103 bra 	LBB0_59;
// %bb.55:
	setp.lt.u32 	%p104, %r48, -2147483647;
	@%p104 bra 	LBB0_57;
// %bb.56:
	add.f32 	%f536, %f759, 0fBF800000;
	setp.lt.f32 	%p107, %f77, 0fC0000000;
	add.f32 	%f537, %f536, 0fBF800000;
	selp.f32 	%f759, %f537, %f536, %p107;
	bra.uni 	LBB0_59;
LBB0_57:
	add.f32 	%f759, %f759, 0f3F800000;
	setp.ltu.f32 	%p105, %f77, 0f40800000;
	@%p105 bra 	LBB0_59;
// %bb.58:                              // %__nv_fmaf_rn.exit.i.i.i900
	add.f32 	%f532, %f759, 0f3F800000;
	fma.rn.f32 	%f534, %f145, 0fC0400000, %f77;
	setp.ge.f32 	%p106, %f534, 0f00000000;
	add.f32 	%f535, %f532, 0f3F800000;
	selp.f32 	%f759, %f535, %f532, %p106;
LBB0_59:                                // %__internal_fmodf_fastpath_quot.exit.i.i904
	fma.rn.f32 	%f761, %f759, 0fC0000000, %f761;
LBB0_64:                                // %__internal_fmodf_kernel.exit.i929
	abs.f32 	%f549, %f761;
	setp.gtu.f32 	%p113, %f549, 0f7F800000;
	@%p113 bra 	LBB0_66;
// %bb.65:
	mov.b32 	%r268, %f74;
	and.b32  	%r269, %r268, -2147483648;
	mov.b32 	%r270, %f761;
	or.b32  	%r271, %r269, %r270;
	mov.b32 	%f761, %r271;
LBB0_66:                                // %__nv_fmodf.exit930
	shl.b32 	%r56, %r3, 1;
	and.b32  	%r280, %r56, 6;
	mov.u32 	%r281, -8;
	sub.s32 	%r282, %r281, %r280;
	mul.lo.s32 	%r283, %r47, %r282;
	cvt.rn.f32.s32 	%f580, %r283;
	div.approx.f32 	%f93, %f580, %f177;
	abs.f32 	%f765, %f93;
	setp.lt.f32 	%p121, %f765, 0f40000000;
	@%p121 bra 	LBB0_78;
// %bb.67:
	setp.gtu.f32 	%p122, %f765, 0f4B800000;
	@%p122 bra 	LBB0_74;
	bra.uni 	LBB0_68;
LBB0_74:
	mov.b32 	%r58, %f765;
	and.b32  	%r284, %r58, 8388607;
	or.b32  	%r1116, %r284, 1065353216;
	mov.b32 	%f764, %r1116;
	add.s32 	%r285, %r58, -1073741824;
	and.b32  	%r1117, %r285, -8388608;
	setp.eq.s32 	%p128, %r1117, 0;
	@%p128 bra 	LBB0_77;
// %bb.75:                              // %__nv_fmaf_rn.exit4.i.i.i969.preheader
	mov.f32 	%f591, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f590,%f591;
	// end inline asm
LBB0_76:                                // %__nv_fmaf_rn.exit4.i.i.i969
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r286, %r1117, 192937984;
	add.s32 	%r287, %r286, %r1116;
	mov.b32 	%f592, %r287;
	mul.f32 	%f593, %f590, %f592;
	sub.f32 	%f594, %f592, %f593;
	fma.rn.f32 	%f595, %f594, %f590, %f593;
	sub.f32 	%f596, %f592, %f595;
	fma.rz.f32 	%f597, %f596, %f590, %f595;
	cvt.rzi.f32.f32 	%f598, %f597;
	sub.f32 	%f764, %f592, %f598;
	sub.s32 	%r1117, %r1117, %r286;
	mov.b32 	%r1116, %f764;
	setp.ne.s32 	%p129, %r1117, 0;
	setp.ne.s32 	%p130, %r1116, 0;
	and.pred  	%p131, %p129, %p130;
	@%p131 bra 	LBB0_76;
LBB0_77:                                // %__internal_fmodf_slowpath_mod.exit.i.i971
	setp.gt.u32 	%p132, %r58, 2139095039;
	selp.f32 	%f599, 0f7FFFFFFF, 0f4B800000, %p132;
	mul.f32 	%f600, %f764, 0f34000000;
	mul.f32 	%f765, %f599, %f600;
	bra.uni 	LBB0_78;
LBB0_68:                                // %__nv_fast_fdividef.exit.i.i.i941
	div.approx.f32 	%f583, %f765, %f145;
	cvt.rzi.f32.f32 	%f763, %f583;
	fma.rn.f32 	%f96, %f763, 0fC0000000, %f765;
	mov.b32 	%r57, %f96;
	setp.lt.u32 	%p123, %r57, 1073741824;
	@%p123 bra 	LBB0_73;
// %bb.69:
	setp.lt.u32 	%p124, %r57, -2147483647;
	@%p124 bra 	LBB0_71;
// %bb.70:
	add.f32 	%f588, %f763, 0fBF800000;
	setp.lt.f32 	%p127, %f96, 0fC0000000;
	add.f32 	%f589, %f588, 0fBF800000;
	selp.f32 	%f763, %f589, %f588, %p127;
	bra.uni 	LBB0_73;
LBB0_71:
	add.f32 	%f763, %f763, 0f3F800000;
	setp.ltu.f32 	%p125, %f96, 0f40800000;
	@%p125 bra 	LBB0_73;
// %bb.72:                              // %__nv_fmaf_rn.exit.i.i.i946
	add.f32 	%f584, %f763, 0f3F800000;
	fma.rn.f32 	%f586, %f145, 0fC0400000, %f96;
	setp.ge.f32 	%p126, %f586, 0f00000000;
	add.f32 	%f587, %f584, 0f3F800000;
	selp.f32 	%f763, %f587, %f584, %p126;
LBB0_73:                                // %__internal_fmodf_fastpath_quot.exit.i.i950
	fma.rn.f32 	%f765, %f763, 0fC0000000, %f765;
LBB0_78:                                // %__internal_fmodf_kernel.exit.i975
	mov.f32 	%f174, 0f00000000;
	abs.f32 	%f601, %f765;
	setp.gtu.f32 	%p133, %f601, 0f7F800000;
	@%p133 bra 	LBB0_80;
// %bb.79:
	mov.b32 	%r288, %f93;
	and.b32  	%r289, %r288, -2147483648;
	mov.b32 	%r290, %f765;
	or.b32  	%r291, %r289, %r290;
	mov.b32 	%f765, %r291;
LBB0_80:                                // %__nv_fmodf.exit976
	mov.f32 	%f634, 0f3F800000;
	div.approx.f32 	%f110, %f174, %f634;
	abs.f32 	%f773, %f110;
	setp.lt.f32 	%p141, %f773, 0f40000000;
	setp.gtu.f32 	%p216, %f773, 0f4B800000;
	mov.f32 	%f769, %f773;
	@%p141 bra 	LBB0_98;
// %bb.81:
	@%p216 bra 	LBB0_94;
	bra.uni 	LBB0_82;
LBB0_94:
	mov.b32 	%r83, %f773;
	and.b32  	%r313, %r83, 8388607;
	or.b32  	%r1126, %r313, 1065353216;
	mov.b32 	%f768, %r1126;
	add.s32 	%r314, %r83, -1073741824;
	and.b32  	%r1127, %r314, -8388608;
	setp.eq.s32 	%p148, %r1127, 0;
	@%p148 bra 	LBB0_97;
// %bb.95:                              // %__nv_fmaf_rn.exit4.i.i.i1015.preheader
	// begin inline asm
	rcp.approx.ftz.f32 %f643,%f634;
	// end inline asm
LBB0_96:                                // %__nv_fmaf_rn.exit4.i.i.i1015
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r315, %r1127, 192937984;
	add.s32 	%r316, %r315, %r1126;
	mov.b32 	%f645, %r316;
	mul.f32 	%f646, %f643, %f645;
	sub.f32 	%f647, %f645, %f646;
	fma.rn.f32 	%f648, %f647, %f643, %f646;
	sub.f32 	%f649, %f645, %f648;
	fma.rz.f32 	%f650, %f649, %f643, %f648;
	cvt.rzi.f32.f32 	%f651, %f650;
	sub.f32 	%f768, %f645, %f651;
	sub.s32 	%r1127, %r1127, %r315;
	mov.b32 	%r1126, %f768;
	setp.ne.s32 	%p149, %r1127, 0;
	setp.ne.s32 	%p150, %r1126, 0;
	and.pred  	%p151, %p149, %p150;
	@%p151 bra 	LBB0_96;
LBB0_97:                                // %__internal_fmodf_slowpath_mod.exit.i.i1017
	setp.gt.u32 	%p152, %r83, 2139095039;
	selp.f32 	%f652, 0f7FFFFFFF, 0f4B800000, %p152;
	mul.f32 	%f653, %f768, 0f34000000;
	mul.f32 	%f769, %f652, %f653;
	bra.uni 	LBB0_98;
LBB0_82:                                // %__nv_fast_fdividef.exit.i.i.i987
	div.approx.f32 	%f636, %f773, %f145;
	cvt.rzi.f32.f32 	%f767, %f636;
	fma.rn.f32 	%f113, %f767, 0fC0000000, %f773;
	mov.b32 	%r82, %f113;
	setp.lt.u32 	%p143, %r82, 1073741824;
	@%p143 bra 	LBB0_93;
// %bb.83:
	setp.lt.u32 	%p144, %r82, -2147483647;
	@%p144 bra 	LBB0_91;
// %bb.84:
	add.f32 	%f641, %f767, 0fBF800000;
	setp.lt.f32 	%p147, %f113, 0fC0000000;
	add.f32 	%f642, %f641, 0fBF800000;
	selp.f32 	%f767, %f642, %f641, %p147;
	bra.uni 	LBB0_93;
LBB0_91:
	add.f32 	%f767, %f767, 0f3F800000;
	setp.ltu.f32 	%p145, %f113, 0f40800000;
	@%p145 bra 	LBB0_93;
// %bb.92:                              // %__nv_fmaf_rn.exit.i.i.i992
	add.f32 	%f637, %f767, 0f3F800000;
	fma.rn.f32 	%f639, %f145, 0fC0400000, %f113;
	setp.ge.f32 	%p146, %f639, 0f00000000;
	add.f32 	%f640, %f637, 0f3F800000;
	selp.f32 	%f767, %f640, %f637, %p146;
LBB0_93:                                // %__internal_fmodf_fastpath_quot.exit.i.i996
	fma.rn.f32 	%f769, %f767, 0fC0000000, %f773;
LBB0_98:                                // %__internal_fmodf_kernel.exit.i1021
	abs.f32 	%f654, %f769;
	setp.gtu.f32 	%p153, %f654, 0f7F800000;
	mov.b32 	%r317, %f110;
	and.b32  	%r90, %r317, -2147483648;
	@%p153 bra 	LBB0_100;
// %bb.99:
	mov.b32 	%r318, %f769;
	or.b32  	%r319, %r90, %r318;
	mov.b32 	%f769, %r319;
LBB0_100:                               // %__nv_fmodf.exit1022
	@%p141 bra 	LBB0_112;
// %bb.101:
	@%p216 bra 	LBB0_108;
	bra.uni 	LBB0_102;
LBB0_108:
	mov.b32 	%r92, %f773;
	and.b32  	%r328, %r92, 8388607;
	or.b32  	%r1128, %r328, 1065353216;
	mov.b32 	%f772, %r1128;
	add.s32 	%r329, %r92, -1073741824;
	and.b32  	%r1129, %r329, -8388608;
	setp.eq.s32 	%p169, %r1129, 0;
	@%p169 bra 	LBB0_111;
// %bb.109:                             // %__nv_fmaf_rn.exit4.i.i.i1061.preheader
	// begin inline asm
	rcp.approx.ftz.f32 %f696,%f634;
	// end inline asm
LBB0_110:                               // %__nv_fmaf_rn.exit4.i.i.i1061
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r330, %r1129, 192937984;
	add.s32 	%r331, %r330, %r1128;
	mov.b32 	%f698, %r331;
	mul.f32 	%f699, %f696, %f698;
	sub.f32 	%f700, %f698, %f699;
	fma.rn.f32 	%f701, %f700, %f696, %f699;
	sub.f32 	%f702, %f698, %f701;
	fma.rz.f32 	%f703, %f702, %f696, %f701;
	cvt.rzi.f32.f32 	%f704, %f703;
	sub.f32 	%f772, %f698, %f704;
	sub.s32 	%r1129, %r1129, %r330;
	mov.b32 	%r1128, %f772;
	setp.ne.s32 	%p170, %r1129, 0;
	setp.ne.s32 	%p171, %r1128, 0;
	and.pred  	%p172, %p170, %p171;
	@%p172 bra 	LBB0_110;
LBB0_111:                               // %__internal_fmodf_slowpath_mod.exit.i.i1063
	setp.gt.u32 	%p173, %r92, 2139095039;
	selp.f32 	%f705, 0f7FFFFFFF, 0f4B800000, %p173;
	mul.f32 	%f706, %f772, 0f34000000;
	mul.f32 	%f773, %f705, %f706;
	bra.uni 	LBB0_112;
LBB0_102:                               // %__nv_fast_fdividef.exit.i.i.i1033
	div.approx.f32 	%f689, %f773, %f145;
	cvt.rzi.f32.f32 	%f771, %f689;
	fma.rn.f32 	%f130, %f771, 0fC0000000, %f773;
	mov.b32 	%r91, %f130;
	setp.lt.u32 	%p164, %r91, 1073741824;
	@%p164 bra 	LBB0_107;
// %bb.103:
	setp.lt.u32 	%p165, %r91, -2147483647;
	@%p165 bra 	LBB0_105;
// %bb.104:
	add.f32 	%f694, %f771, 0fBF800000;
	setp.lt.f32 	%p168, %f130, 0fC0000000;
	add.f32 	%f695, %f694, 0fBF800000;
	selp.f32 	%f771, %f695, %f694, %p168;
	bra.uni 	LBB0_107;
LBB0_105:
	add.f32 	%f771, %f771, 0f3F800000;
	setp.ltu.f32 	%p166, %f130, 0f40800000;
	@%p166 bra 	LBB0_107;
// %bb.106:                             // %__nv_fmaf_rn.exit.i.i.i1038
	add.f32 	%f690, %f771, 0f3F800000;
	fma.rn.f32 	%f692, %f145, 0fC0400000, %f130;
	setp.ge.f32 	%p167, %f692, 0f00000000;
	add.f32 	%f693, %f690, 0f3F800000;
	selp.f32 	%f771, %f693, %f690, %p167;
LBB0_107:                               // %__internal_fmodf_fastpath_quot.exit.i.i1042
	fma.rn.f32 	%f773, %f771, 0fC0000000, %f773;
LBB0_112:                               // %__internal_fmodf_kernel.exit.i1067
	abs.f32 	%f707, %f773;
	setp.gtu.f32 	%p174, %f707, 0f7F800000;
	@%p174 bra 	LBB0_114;
// %bb.113:
	mov.b32 	%r332, %f773;
	or.b32  	%r333, %r90, %r332;
	mov.b32 	%f773, %r333;
LBB0_114:                               // %__nv_fmodf.exit1068
	setp.le.s32 	%p183, %r7, %r6;
	mov.u32 	%r1109, 0;
	@%p183 bra 	LBB0_90;
// %bb.115:                             // %L1219.lr.ph
	mov.f32 	%f149, 0f42040000;
	div.approx.f32 	%f150, %f148, %f149;
	div.approx.f32 	%f184, %f182, %f149;
	div.approx.f32 	%f219, %f217, %f149;
	div.approx.f32 	%f253, %f251, %f149;
	div.approx.f32 	%f288, %f286, %f149;
	div.approx.f32 	%f322, %f320, %f149;
	div.approx.f32 	%f357, %f355, %f149;
	div.approx.f32 	%f391, %f389, %f149;
	abs.f32 	%f151, %f150;
	abs.f32 	%f185, %f184;
	abs.f32 	%f220, %f219;
	abs.f32 	%f254, %f253;
	abs.f32 	%f289, %f288;
	abs.f32 	%f323, %f322;
	abs.f32 	%f358, %f357;
	abs.f32 	%f392, %f391;
	setp.gt.f32 	%p13, %f151, 0f4B800000;
	mul.f32 	%f152, %f150, 0f00000000;
	setp.gt.f32 	%p19, %f185, 0f4B800000;
	mul.f32 	%f186, %f184, 0f00000000;
	setp.gt.f32 	%p25, %f220, 0f4B800000;
	mul.f32 	%f221, %f219, 0f00000000;
	setp.gt.f32 	%p31, %f254, 0f4B800000;
	mul.f32 	%f255, %f253, 0f00000000;
	setp.gt.f32 	%p37, %f289, 0f4B800000;
	mul.f32 	%f290, %f288, 0f00000000;
	setp.gt.f32 	%p43, %f323, 0f4B800000;
	mul.f32 	%f324, %f322, 0f00000000;
	setp.gt.f32 	%p49, %f358, 0f4B800000;
	mul.f32 	%f359, %f357, 0f00000000;
	setp.gt.f32 	%p55, %f392, 0f4B800000;
	mul.f32 	%f393, %f391, 0f00000000;
	selp.f32 	%f153, %f152, %f150, %p13;
	selp.f32 	%f187, %f186, %f184, %p19;
	selp.f32 	%f222, %f221, %f219, %p25;
	selp.f32 	%f256, %f255, %f253, %p31;
	selp.f32 	%f291, %f290, %f288, %p37;
	selp.f32 	%f325, %f324, %f322, %p43;
	selp.f32 	%f360, %f359, %f357, %p49;
	selp.f32 	%f394, %f393, %f391, %p55;
	add.f32 	%f550, %f761, %f761;
	add.f32 	%f602, %f765, %f765;
	add.f32 	%f154, %f153, %f153;
	add.f32 	%f188, %f187, %f187;
	add.f32 	%f223, %f222, %f222;
	add.f32 	%f257, %f256, %f256;
	add.f32 	%f292, %f291, %f291;
	add.f32 	%f326, %f325, %f325;
	add.f32 	%f361, %f360, %f360;
	add.f32 	%f395, %f394, %f394;
	add.f32 	%f444, %f753, %f753;
	add.f32 	%f496, %f757, %f757;
	mov.b32 	%r272, %f550;
	mov.b32 	%r304, %f602;
	add.f32 	%f655, %f769, %f769;
	mov.b32 	%r148, %f154;
	mov.b32 	%r155, %f188;
	mov.b32 	%r166, %f223;
	mov.b32 	%r173, %f257;
	mov.b32 	%r184, %f292;
	mov.b32 	%r191, %f326;
	mov.b32 	%r202, %f361;
	mov.b32 	%r209, %f395;
	mov.b32 	%r227, %f444;
	mov.b32 	%r250, %f496;
	and.b32  	%r273, %r272, -2147483648;
	and.b32  	%r305, %r304, -2147483648;
	mov.b32 	%r320, %f655;
	and.b32  	%r149, %r148, -2147483648;
	and.b32  	%r156, %r155, -2147483648;
	and.b32  	%r167, %r166, -2147483648;
	and.b32  	%r174, %r173, -2147483648;
	and.b32  	%r185, %r184, -2147483648;
	and.b32  	%r192, %r191, -2147483648;
	and.b32  	%r203, %r202, -2147483648;
	and.b32  	%r210, %r209, -2147483648;
	and.b32  	%r228, %r227, -2147483648;
	and.b32  	%r251, %r250, -2147483648;
	or.b32  	%r274, %r273, 1056964608;
	or.b32  	%r306, %r305, 1056964608;
	and.b32  	%r321, %r320, -2147483648;
	or.b32  	%r150, %r149, 1056964608;
	or.b32  	%r157, %r156, 1056964608;
	or.b32  	%r168, %r167, 1056964608;
	or.b32  	%r175, %r174, 1056964608;
	or.b32  	%r186, %r185, 1056964608;
	or.b32  	%r193, %r192, 1056964608;
	or.b32  	%r204, %r203, 1056964608;
	or.b32  	%r211, %r210, 1056964608;
	or.b32  	%r229, %r228, 1056964608;
	or.b32  	%r252, %r251, 1056964608;
	mov.b32 	%f551, %r274;
	mov.b32 	%f603, %r306;
	or.b32  	%r322, %r321, 1056964608;
	mov.b32 	%f155, %r150;
	mov.b32 	%f189, %r157;
	mov.b32 	%f224, %r168;
	cvt.u16.u32 	%rs2, %r3;
	mov.b32 	%f258, %r175;
	mov.b32 	%f293, %r186;
	mov.b32 	%f327, %r193;
	mov.b32 	%f362, %r204;
	mov.b32 	%f396, %r211;
	mov.b32 	%f445, %r229;
	mov.b32 	%f497, %r252;
	add.f32 	%f552, %f550, %f551;
	abs.f32 	%f554, %f550;
	add.f32 	%f604, %f602, %f603;
	abs.f32 	%f606, %f602;
	mov.b32 	%f656, %r322;
	add.f32 	%f156, %f154, %f155;
	abs.f32 	%f158, %f154;
	add.f32 	%f190, %f188, %f189;
	abs.f32 	%f192, %f188;
	add.f32 	%f225, %f223, %f224;
	abs.f32 	%f227, %f223;
	add.f32 	%f259, %f257, %f258;
	abs.f32 	%f261, %f257;
	shr.u16 	%rs3, %rs2, 8;
	shl.b16 	%rs4, %rs2, 8;
	add.f32 	%f294, %f292, %f293;
	abs.f32 	%f296, %f292;
	add.f32 	%f328, %f326, %f327;
	abs.f32 	%f330, %f326;
	add.f32 	%f363, %f361, %f362;
	abs.f32 	%f365, %f361;
	add.f32 	%f397, %f395, %f396;
	abs.f32 	%f399, %f395;
	add.f32 	%f446, %f444, %f445;
	abs.f32 	%f448, %f444;
	add.f32 	%f498, %f496, %f497;
	abs.f32 	%f500, %f496;
	cvt.rzi.f32.f32 	%f553, %f552;
	setp.gt.f32 	%p114, %f554, 0f4B000000;
	cvt.rzi.f32.f32 	%f605, %f604;
	setp.gt.f32 	%p134, %f606, 0f4B000000;
	add.f32 	%f657, %f655, %f656;
	abs.f32 	%f659, %f655;
	cvt.rzi.f32.f32 	%f157, %f156;
	setp.gt.f32 	%p14, %f158, 0f4B000000;
	cvt.rzi.f32.f32 	%f191, %f190;
	setp.gt.f32 	%p20, %f192, 0f4B000000;
	cvt.rzi.f32.f32 	%f226, %f225;
	setp.gt.f32 	%p26, %f227, 0f4B000000;
	cvt.rzi.f32.f32 	%f260, %f259;
	setp.gt.f32 	%p32, %f261, 0f4B000000;
	cvt.rzi.f32.f32 	%f295, %f294;
	setp.gt.f32 	%p38, %f296, 0f4B000000;
	or.b16  	%rs5, %rs4, %rs3;
	cvt.rzi.f32.f32 	%f329, %f328;
	setp.gt.f32 	%p44, %f330, 0f4B000000;
	cvt.rzi.f32.f32 	%f364, %f363;
	setp.gt.f32 	%p50, %f365, 0f4B000000;
	cvt.rzi.f32.f32 	%f398, %f397;
	setp.gt.f32 	%p56, %f399, 0f4B000000;
	cvt.rzi.f32.f32 	%f447, %f446;
	setp.gt.f32 	%p74, %f448, 0f4B000000;
	cvt.rzi.f32.f32 	%f499, %f498;
	setp.gt.f32 	%p94, %f500, 0f4B000000;
	selp.f32 	%f555, %f550, %f553, %p114;
	cvt.rzi.f32.f32 	%f556, %f550;
	setp.lt.f32 	%p115, %f554, 0f3F000000;
	selp.f32 	%f607, %f602, %f605, %p134;
	cvt.rzi.f32.f32 	%f608, %f602;
	setp.lt.f32 	%p135, %f606, 0f3F000000;
	cvt.rzi.f32.f32 	%f658, %f657;
	setp.gt.f32 	%p156, %f659, 0f4B000000;
	selp.f32 	%f159, %f154, %f157, %p14;
	cvt.rzi.f32.f32 	%f160, %f154;
	setp.lt.f32 	%p15, %f158, 0f3F000000;
	selp.f32 	%f193, %f188, %f191, %p20;
	cvt.rzi.f32.f32 	%f194, %f188;
	setp.lt.f32 	%p21, %f192, 0f3F000000;
	selp.f32 	%f228, %f223, %f226, %p26;
	cvt.rzi.f32.f32 	%f229, %f223;
	setp.lt.f32 	%p27, %f227, 0f3F000000;
	selp.f32 	%f262, %f257, %f260, %p32;
	cvt.rzi.f32.f32 	%f263, %f257;
	setp.lt.f32 	%p33, %f261, 0f3F000000;
	selp.f32 	%f297, %f292, %f295, %p38;
	cvt.rzi.f32.f32 	%f298, %f292;
	setp.lt.f32 	%p39, %f296, 0f3F000000;
	selp.f32 	%f331, %f326, %f329, %p44;
	cvt.rzi.f32.f32 	%f332, %f326;
	setp.lt.f32 	%p45, %f330, 0f3F000000;
	shr.u16 	%rs7, %rs5, 4;
	selp.f32 	%f366, %f361, %f364, %p50;
	cvt.rzi.f32.f32 	%f367, %f361;
	setp.lt.f32 	%p51, %f365, 0f3F000000;
	selp.f32 	%f400, %f395, %f398, %p56;
	cvt.rzi.f32.f32 	%f401, %f395;
	setp.lt.f32 	%p57, %f399, 0f3F000000;
	selp.f32 	%f449, %f444, %f447, %p74;
	cvt.rzi.f32.f32 	%f450, %f444;
	setp.lt.f32 	%p75, %f448, 0f3F000000;
	selp.f32 	%f501, %f496, %f499, %p94;
	cvt.rzi.f32.f32 	%f502, %f496;
	setp.lt.f32 	%p95, %f500, 0f3F000000;
	selp.f32 	%f557, %f556, %f555, %p115;
	selp.f32 	%f609, %f608, %f607, %p135;
	selp.f32 	%f660, %f655, %f658, %p156;
	cvt.rzi.f32.f32 	%f661, %f655;
	setp.lt.f32 	%p157, %f659, 0f3F000000;
	selp.f32 	%f161, %f160, %f159, %p15;
	selp.f32 	%f195, %f194, %f193, %p21;
	selp.f32 	%f230, %f229, %f228, %p27;
	selp.f32 	%f264, %f263, %f262, %p33;
	selp.f32 	%f299, %f298, %f297, %p39;
	selp.f32 	%f333, %f332, %f331, %p45;
	selp.f32 	%f368, %f367, %f366, %p51;
	shl.b16 	%rs6, %rs5, 4;
	and.b16  	%rs8, %rs7, 3840;
	selp.f32 	%f402, %f401, %f400, %p57;
	selp.f32 	%f451, %f450, %f449, %p75;
	selp.f32 	%f503, %f502, %f501, %p95;
	fma.rn.f32 	%f558, %f557, 0fBF000000, %f761;
	fma.rn.f32 	%f610, %f609, 0fBF000000, %f765;
	selp.f32 	%f662, %f661, %f660, %p157;
	fma.rn.f32 	%f162, %f161, 0fBF000000, %f153;
	fma.rn.f32 	%f196, %f195, 0fBF000000, %f187;
	fma.rn.f32 	%f231, %f230, 0fBF000000, %f222;
	fma.rn.f32 	%f265, %f264, 0fBF000000, %f256;
	fma.rn.f32 	%f300, %f299, 0fBF000000, %f291;
	fma.rn.f32 	%f334, %f333, 0fBF000000, %f325;
	fma.rn.f32 	%f369, %f368, 0fBF000000, %f360;
	fma.rn.f32 	%f403, %f402, 0fBF000000, %f394;
	or.b16  	%rs9, %rs8, %rs6;
	fma.rn.f32 	%f452, %f451, 0fBF000000, %f753;
	fma.rn.f32 	%f504, %f503, 0fBF000000, %f757;
	mul.f32 	%f559, %f558, %f558;
	mul.f32 	%f611, %f610, %f610;
	fma.rn.f32 	%f663, %f662, 0fBF000000, %f769;
	mul.f32 	%f163, %f162, %f162;
	mul.f32 	%f197, %f196, %f196;
	mul.f32 	%f232, %f231, %f231;
	mul.f32 	%f266, %f265, %f265;
	mul.f32 	%f301, %f300, %f300;
	mul.f32 	%f335, %f334, %f334;
	mul.f32 	%f370, %f369, %f369;
	mul.f32 	%f404, %f403, %f403;
	and.b16  	%rs10, %rs9, 13107;
	shr.u16 	%rs12, %rs9, 2;
	mul.f32 	%f453, %f452, %f452;
	mul.f32 	%f505, %f504, %f504;
	fma.rn.f32 	%f560, %f559, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f561, %f559, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f612, %f611, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f613, %f611, 0f3E684E12, 0fBFAAD2E0;
	mul.f32 	%f664, %f663, %f663;
	cvt.rzi.s32.f32 	%r151, %f161;
	fma.rn.f32 	%f164, %f163, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f165, %f163, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r158, %f195;
	fma.rn.f32 	%f198, %f197, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f199, %f197, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r169, %f230;
	fma.rn.f32 	%f233, %f232, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f234, %f232, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r176, %f264;
	fma.rn.f32 	%f267, %f266, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f268, %f266, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r187, %f299;
	fma.rn.f32 	%f302, %f301, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f303, %f301, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r194, %f333;
	fma.rn.f32 	%f336, %f335, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f337, %f335, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r205, %f368;
	fma.rn.f32 	%f371, %f370, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f372, %f370, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r212, %f402;
	fma.rn.f32 	%f405, %f404, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f406, %f404, 0f3E684E12, 0fBFAAD2E0;
	shl.b16 	%rs11, %rs10, 2;
	and.b16  	%rs13, %rs12, 13107;
	fma.rn.f32 	%f454, %f453, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f455, %f453, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f506, %f505, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f507, %f505, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r275, %f557;
	fma.rn.f32 	%f562, %f560, %f559, 0fC0A55DF6;
	fma.rn.f32 	%f563, %f561, %f559, 0f4081E0CF;
	fma.rn.f32 	%f564, %f559, %f558, 0f00000000;
	cvt.rzi.s32.f32 	%r307, %f609;
	fma.rn.f32 	%f614, %f612, %f611, 0fC0A55DF6;
	fma.rn.f32 	%f615, %f613, %f611, 0f4081E0CF;
	fma.rn.f32 	%f616, %f611, %f610, 0f00000000;
	fma.rn.f32 	%f665, %f664, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f666, %f664, 0f3E684E12, 0fBFAAD2E0;
	add.s32 	%r152, %r151, 1;
	fma.rn.f32 	%f166, %f164, %f163, 0fC0A55DF6;
	fma.rn.f32 	%f167, %f165, %f163, 0f4081E0CF;
	fma.rn.f32 	%f168, %f163, %f162, 0f00000000;
	add.s32 	%r159, %r158, 1;
	fma.rn.f32 	%f200, %f198, %f197, 0fC0A55DF6;
	fma.rn.f32 	%f201, %f199, %f197, 0f4081E0CF;
	fma.rn.f32 	%f202, %f197, %f196, 0f00000000;
	add.s32 	%r170, %r169, 1;
	fma.rn.f32 	%f235, %f233, %f232, 0fC0A55DF6;
	fma.rn.f32 	%f236, %f234, %f232, 0f4081E0CF;
	fma.rn.f32 	%f237, %f232, %f231, 0f00000000;
	add.s32 	%r177, %r176, 1;
	fma.rn.f32 	%f269, %f267, %f266, 0fC0A55DF6;
	fma.rn.f32 	%f270, %f268, %f266, 0f4081E0CF;
	fma.rn.f32 	%f271, %f266, %f265, 0f00000000;
	add.s32 	%r188, %r187, 1;
	fma.rn.f32 	%f304, %f302, %f301, 0fC0A55DF6;
	fma.rn.f32 	%f305, %f303, %f301, 0f4081E0CF;
	fma.rn.f32 	%f306, %f301, %f300, 0f00000000;
	add.s32 	%r195, %r194, 1;
	fma.rn.f32 	%f338, %f336, %f335, 0fC0A55DF6;
	fma.rn.f32 	%f339, %f337, %f335, 0f4081E0CF;
	fma.rn.f32 	%f340, %f335, %f334, 0f00000000;
	add.s32 	%r206, %r205, 1;
	fma.rn.f32 	%f373, %f371, %f370, 0fC0A55DF6;
	fma.rn.f32 	%f374, %f372, %f370, 0f4081E0CF;
	fma.rn.f32 	%f375, %f370, %f369, 0f00000000;
	add.s32 	%r213, %r212, 1;
	fma.rn.f32 	%f407, %f405, %f404, 0fC0A55DF6;
	fma.rn.f32 	%f408, %f406, %f404, 0f4081E0CF;
	fma.rn.f32 	%f409, %f404, %f403, 0f00000000;
	cvt.rzi.s32.f32 	%r230, %f451;
	fma.rn.f32 	%f456, %f454, %f453, 0fC0A55DF6;
	fma.rn.f32 	%f457, %f455, %f453, 0f4081E0CF;
	fma.rn.f32 	%f458, %f453, %f452, 0f00000000;
	or.b16  	%rs14, %rs13, %rs11;
	cvt.rzi.s32.f32 	%r253, %f503;
	fma.rn.f32 	%f508, %f506, %f505, 0fC0A55DF6;
	fma.rn.f32 	%f509, %f507, %f505, 0f4081E0CF;
	fma.rn.f32 	%f510, %f505, %f504, 0f00000000;
	fma.rn.f32 	%f565, %f563, %f559, 0fC09DE9E6;
	fma.rn.f32 	%f566, %f562, %f564, 0f00000000;
	and.b32  	%r276, %r275, 1;
	fma.rn.f32 	%f617, %f615, %f611, 0fC09DE9E6;
	fma.rn.f32 	%f618, %f614, %f616, 0f00000000;
	and.b32  	%r308, %r307, 1;
	cvt.rzi.s32.f32 	%r323, %f662;
	fma.rn.f32 	%f667, %f665, %f664, 0fC0A55DF6;
	fma.rn.f32 	%f668, %f666, %f664, 0f4081E0CF;
	fma.rn.f32 	%f669, %f664, %f663, 0f00000000;
	fma.rn.f32 	%f169, %f167, %f163, 0fC09DE9E6;
	fma.rn.f32 	%f170, %f166, %f168, 0f00000000;
	and.b32  	%r153, %r152, 1;
	fma.rn.f32 	%f203, %f201, %f197, 0fC09DE9E6;
	fma.rn.f32 	%f204, %f200, %f202, 0f00000000;
	and.b32  	%r160, %r159, 1;
	fma.rn.f32 	%f238, %f236, %f232, 0fC09DE9E6;
	fma.rn.f32 	%f239, %f235, %f237, 0f00000000;
	and.b32  	%r171, %r170, 1;
	fma.rn.f32 	%f272, %f270, %f266, 0fC09DE9E6;
	fma.rn.f32 	%f273, %f269, %f271, 0f00000000;
	and.b32  	%r178, %r177, 1;
	fma.rn.f32 	%f307, %f305, %f301, 0fC09DE9E6;
	fma.rn.f32 	%f308, %f304, %f306, 0f00000000;
	and.b32  	%r189, %r188, 1;
	fma.rn.f32 	%f341, %f339, %f335, 0fC09DE9E6;
	fma.rn.f32 	%f342, %f338, %f340, 0f00000000;
	and.b32  	%r196, %r195, 1;
	fma.rn.f32 	%f376, %f374, %f370, 0fC09DE9E6;
	fma.rn.f32 	%f377, %f373, %f375, 0f00000000;
	and.b32  	%r207, %r206, 1;
	fma.rn.f32 	%f410, %f408, %f404, 0fC09DE9E6;
	fma.rn.f32 	%f411, %f407, %f409, 0f00000000;
	and.b32  	%r214, %r213, 1;
	fma.rn.f32 	%f459, %f457, %f453, 0fC09DE9E6;
	fma.rn.f32 	%f460, %f456, %f458, 0f00000000;
	and.b32  	%r231, %r230, 1;
	and.b16  	%rs15, %rs14, 21845;
	shr.u16 	%rs17, %rs14, 1;
	fma.rn.f32 	%f511, %f509, %f505, 0fC09DE9E6;
	fma.rn.f32 	%f512, %f508, %f510, 0f00000000;
	and.b32  	%r254, %r253, 1;
	fma.rn.f32 	%f567, %f565, %f559, 0f3F800000;
	fma.rn.f32 	%f568, %f558, 0f40490FDB, %f566;
	setp.eq.b32 	%p116, %r276, 1;
	fma.rn.f32 	%f619, %f617, %f611, 0f3F800000;
	fma.rn.f32 	%f620, %f610, 0f40490FDB, %f618;
	setp.eq.b32 	%p136, %r308, 1;
	fma.rn.f32 	%f670, %f668, %f664, 0fC09DE9E6;
	fma.rn.f32 	%f671, %f667, %f669, 0f00000000;
	and.b32  	%r324, %r323, 1;
	fma.rn.f32 	%f171, %f169, %f163, 0f3F800000;
	fma.rn.f32 	%f172, %f162, 0f40490FDB, %f170;
	setp.eq.b32 	%p16, %r153, 1;
	fma.rn.f32 	%f205, %f203, %f197, 0f3F800000;
	fma.rn.f32 	%f206, %f196, 0f40490FDB, %f204;
	setp.eq.b32 	%p22, %r160, 1;
	fma.rn.f32 	%f240, %f238, %f232, 0f3F800000;
	fma.rn.f32 	%f241, %f231, 0f40490FDB, %f239;
	setp.eq.b32 	%p28, %r171, 1;
	fma.rn.f32 	%f274, %f272, %f266, 0f3F800000;
	fma.rn.f32 	%f275, %f265, 0f40490FDB, %f273;
	setp.eq.b32 	%p34, %r178, 1;
	fma.rn.f32 	%f309, %f307, %f301, 0f3F800000;
	fma.rn.f32 	%f310, %f300, 0f40490FDB, %f308;
	setp.eq.b32 	%p40, %r189, 1;
	fma.rn.f32 	%f343, %f341, %f335, 0f3F800000;
	fma.rn.f32 	%f344, %f334, 0f40490FDB, %f342;
	setp.eq.b32 	%p46, %r196, 1;
	fma.rn.f32 	%f378, %f376, %f370, 0f3F800000;
	fma.rn.f32 	%f379, %f369, 0f40490FDB, %f377;
	setp.eq.b32 	%p52, %r207, 1;
	fma.rn.f32 	%f412, %f410, %f404, 0f3F800000;
	fma.rn.f32 	%f413, %f403, 0f40490FDB, %f411;
	setp.eq.b32 	%p58, %r214, 1;
	fma.rn.f32 	%f461, %f459, %f453, 0f3F800000;
	fma.rn.f32 	%f462, %f452, 0f40490FDB, %f460;
	setp.eq.b32 	%p76, %r231, 1;
	fma.rn.f32 	%f513, %f511, %f505, 0f3F800000;
	fma.rn.f32 	%f514, %f504, 0f40490FDB, %f512;
	setp.eq.b32 	%p96, %r254, 1;
	shl.b16 	%rs16, %rs15, 1;
	and.b16  	%rs18, %rs17, 21845;
	selp.f32 	%f569, %f567, %f568, %p116;
	and.b32  	%r277, %r275, 2;
	selp.f32 	%f621, %f619, %f620, %p136;
	and.b32  	%r309, %r307, 2;
	fma.rn.f32 	%f672, %f670, %f664, 0f3F800000;
	fma.rn.f32 	%f673, %f663, 0f40490FDB, %f671;
	setp.eq.b32 	%p158, %r324, 1;
	selp.f32 	%f173, %f171, %f172, %p16;
	and.b32  	%r154, %r152, 2;
	selp.f32 	%f207, %f205, %f206, %p22;
	and.b32  	%r161, %r159, 2;
	selp.f32 	%f242, %f240, %f241, %p28;
	and.b32  	%r172, %r170, 2;
	selp.f32 	%f276, %f274, %f275, %p34;
	and.b32  	%r179, %r177, 2;
	selp.f32 	%f311, %f309, %f310, %p40;
	and.b32  	%r190, %r188, 2;
	selp.f32 	%f345, %f343, %f344, %p46;
	and.b32  	%r197, %r195, 2;
	selp.f32 	%f380, %f378, %f379, %p52;
	and.b32  	%r208, %r206, 2;
	selp.f32 	%f414, %f412, %f413, %p58;
	and.b32  	%r215, %r213, 2;
	selp.f32 	%f463, %f461, %f462, %p76;
	and.b32  	%r232, %r230, 2;
	selp.f32 	%f515, %f513, %f514, %p96;
	and.b32  	%r255, %r253, 2;
	or.b16  	%rs19, %rs18, %rs16;
	setp.eq.s32 	%p117, %r277, 0;
	neg.f32 	%f571, %f569;
	add.s32 	%r278, %r275, 1;
	cvt.rzi.f32.f32 	%f576, %f761;
	setp.eq.s32 	%p137, %r309, 0;
	neg.f32 	%f623, %f621;
	add.s32 	%r310, %r307, 1;
	cvt.rzi.f32.f32 	%f628, %f765;
	selp.f32 	%f674, %f672, %f673, %p158;
	and.b32  	%r325, %r323, 2;
	setp.eq.s32 	%p17, %r154, 0;
	sub.f32 	%f175, %f174, %f173;
	setp.eq.s32 	%p23, %r161, 0;
	sub.f32 	%f209, %f174, %f207;
	setp.eq.s32 	%p29, %r172, 0;
	sub.f32 	%f244, %f174, %f242;
	setp.eq.s32 	%p35, %r179, 0;
	sub.f32 	%f278, %f174, %f276;
	setp.eq.s32 	%p41, %r190, 0;
	sub.f32 	%f313, %f174, %f311;
	setp.eq.s32 	%p47, %r197, 0;
	sub.f32 	%f347, %f174, %f345;
	setp.eq.s32 	%p53, %r208, 0;
	sub.f32 	%f382, %f174, %f380;
	setp.eq.s32 	%p59, %r215, 0;
	sub.f32 	%f416, %f174, %f414;
	setp.eq.s32 	%p77, %r232, 0;
	neg.f32 	%f465, %f463;
	add.s32 	%r233, %r230, 1;
	cvt.rzi.f32.f32 	%f470, %f753;
	setp.eq.s32 	%p97, %r255, 0;
	neg.f32 	%f517, %f515;
	add.s32 	%r256, %r253, 1;
	cvt.rzi.f32.f32 	%f522, %f757;
	selp.f32 	%f570, %f568, %f567, %p116;
	selp.f32 	%f572, %f569, %f571, %p117;
	and.b32  	%r279, %r278, 2;
	setp.eq.f32 	%p119, %f576, %f761;
	mul.f32 	%f577, %f761, 0f00000000;
	shr.u16 	%rs1, %rs19, 13;
	selp.f32 	%f622, %f620, %f619, %p136;
	selp.f32 	%f624, %f621, %f623, %p137;
	and.b32  	%r311, %r310, 2;
	setp.eq.f32 	%p139, %f628, %f765;
	mul.f32 	%f629, %f765, 0f00000000;
	setp.eq.s32 	%p159, %r325, 0;
	neg.f32 	%f676, %f674;
	add.s32 	%r326, %r323, 1;
	cvt.rzi.f32.f32 	%f681, %f769;
	selp.f32 	%f176, %f173, %f175, %p17;
	selp.f32 	%f210, %f207, %f209, %p23;
	selp.f32 	%f245, %f242, %f244, %p29;
	selp.f32 	%f279, %f276, %f278, %p35;
	selp.f32 	%f314, %f311, %f313, %p41;
	selp.f32 	%f348, %f345, %f347, %p47;
	selp.f32 	%f383, %f380, %f382, %p53;
	selp.f32 	%f417, %f414, %f416, %p59;
	selp.f32 	%f464, %f462, %f461, %p76;
	selp.f32 	%f466, %f463, %f465, %p77;
	and.b32  	%r234, %r233, 2;
	setp.eq.f32 	%p79, %f470, %f753;
	mul.f32 	%f471, %f753, 0f00000000;
	selp.f32 	%f516, %f514, %f513, %p96;
	selp.f32 	%f518, %f515, %f517, %p97;
	and.b32  	%r257, %r256, 2;
	setp.eq.f32 	%p99, %f522, %f757;
	mul.f32 	%f523, %f757, 0f00000000;
	setp.eq.s32 	%p118, %r279, 0;
	sub.f32 	%f574, %f174, %f570;
	selp.f32 	%f91, %f577, %f572, %p119;
	abs.f32 	%f578, %f761;
	setp.eq.s32 	%p138, %r311, 0;
	sub.f32 	%f626, %f174, %f622;
	selp.f32 	%f630, %f629, %f624, %p139;
	abs.f32 	%f631, %f765;
	cvt.u32.u16 	%r312, %rs1;
	selp.f32 	%f675, %f673, %f672, %p158;
	selp.f32 	%f677, %f674, %f676, %p159;
	and.b32  	%r327, %r326, 2;
	setp.eq.f32 	%p161, %f681, %f769;
	mul.f32 	%f682, %f769, 0f00000000;
	shr.u16 	%rs20, %rs19, 12;
	mul.f32 	%f2, %f176, %f176;
	mul.f32 	%f7, %f210, %f210;
	mul.f32 	%f11, %f245, %f245;
	mul.f32 	%f16, %f279, %f279;
	mul.f32 	%f20, %f314, %f314;
	mul.f32 	%f25, %f348, %f348;
	mul.f32 	%f29, %f383, %f383;
	mul.f32 	%f34, %f417, %f417;
	setp.eq.s32 	%p78, %r234, 0;
	sub.f32 	%f468, %f174, %f464;
	selp.f32 	%f55, %f471, %f466, %p79;
	abs.f32 	%f472, %f753;
	setp.eq.s32 	%p98, %r257, 0;
	sub.f32 	%f520, %f174, %f516;
	selp.f32 	%f524, %f523, %f518, %p99;
	abs.f32 	%f525, %f757;
	selp.f32 	%f575, %f570, %f574, %p118;
	setp.gt.f32 	%p120, %f578, 0f4B800000;
	add.f32 	%f579, %f91, 0f3F800000;
	selp.f32 	%f627, %f622, %f626, %p138;
	setp.gt.f32 	%p140, %f631, 0f4B800000;
	add.f32 	%f632, %f630, 0f3F800000;
	and.b32  	%r69, %r312, 6;
	setp.eq.s32 	%p160, %r327, 0;
	sub.f32 	%f679, %f174, %f675;
	selp.f32 	%f683, %f682, %f677, %p161;
	abs.f32 	%f684, %f769;
	cvt.u64.u16 	%rd54, %rs20;
	mul.f32 	%f180, %f2, 0f3D87E86B;
	mul.f32 	%f214, %f7, 0f3D87E86B;
	mul.f32 	%f249, %f11, 0f3D87E86B;
	mul.f32 	%f283, %f16, 0f3D87E86B;
	mul.f32 	%f318, %f20, 0f3D87E86B;
	mul.f32 	%f352, %f25, 0f3D87E86B;
	mul.f32 	%f387, %f29, 0f3D87E86B;
	mul.f32 	%f420, %f34, 0f3D87E86B;
	selp.f32 	%f469, %f464, %f468, %p78;
	setp.gt.f32 	%p80, %f472, 0f4B800000;
	add.f32 	%f473, %f55, 0f3F800000;
	selp.f32 	%f521, %f516, %f520, %p98;
	setp.gt.f32 	%p100, %f525, 0f4B800000;
	add.f32 	%f526, %f524, 0f3F800000;
	selp.f32 	%f92, %f579, %f575, %p120;
	selp.f32 	%f633, %f632, %f627, %p140;
	setp.eq.s32 	%p155, %r47, %r69;
	selp.f32 	%f680, %f675, %f679, %p160;
	setp.gt.f32 	%p162, %f684, 0f4B800000;
	add.f32 	%f685, %f683, 0f3F800000;
	ld.param.u64 	%rd1, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_5];
	and.b64  	%rd55, %rd54, 12;
	mul.f32 	%f6, %f180, %f743;
	mul.f32 	%f215, %f214, %f744;
	mul.f32 	%f15, %f249, %f745;
	mul.f32 	%f284, %f283, %f746;
	mul.f32 	%f24, %f318, %f747;
	mul.f32 	%f353, %f352, %f748;
	mul.f32 	%f33, %f387, %f749;
	mul.f32 	%f421, %f420, %f750;
	selp.f32 	%f56, %f473, %f469, %p80;
	selp.f32 	%f527, %f526, %f521, %p100;
	mov.b32 	%r294, %f633;
	mov.b32 	%r293, %f92;
	mov.b32 	%r300, %f630;
	mov.b32 	%r299, %f91;
	or.b16  	%rs21, %rs1, 1;
	selp.f32 	%f686, %f685, %f680, %p162;
	selp.f32 	%f687, 0f3F800000, 0f00000000, %p155;
	add.s64 	%rd56, %rd1, %rd55;
	mov.b32 	%r164, %f215;
	mov.b32 	%r163, %f6;
	mov.b32 	%r182, %f284;
	mov.b32 	%r181, %f15;
	mov.b32 	%r200, %f353;
	mov.b32 	%r199, %f24;
	mov.b32 	%r218, %f421;
	mov.b32 	%r217, %f33;
	mov.b32 	%r246, %f527;
	mov.b32 	%r245, %f56;
	mov.b32 	%r249, %f524;
	mov.b32 	%r248, %f55;
	xor.b32  	%r297, %r300, -2147483648;
	xor.b32  	%r296, %r299, -2147483648;
	cvt.u32.u16 	%r70, %rs21;
	mul.f32 	%f127, %f686, %f687;
	mul.f32 	%f128, %f683, %f687;
	ld.param.u64 	%rd2, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_6];
	ld.param.u64 	%rd3, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_7];
	shl.b32 	%r10, %r3, 2;
	and.b32  	%r11, %r3, 2;
	ld.global.u32 	%r12, [%rd56];
	// begin inline asm
	cvt.rn.f16x2.f32 %r162, %r164, %r163;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r180, %r182, %r181;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r198, %r200, %r199;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r216, %r218, %r217;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r244, %r246, %r245;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r247, %r249, %r248;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r292, %r294, %r293;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r295, %r297, %r296;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r298, %r300, %r299;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r301, %r294, %r293;
	// end inline asm
	setp.eq.s32 	%p175, %r47, %r70;
	add.f32 	%f708, %f773, %f773;
	mov.b32 	%r346, %f708;
	and.b32  	%r347, %r346, -2147483648;
	or.b32  	%r348, %r347, 1056964608;
	mov.b32 	%f709, %r348;
	add.f32 	%f710, %f708, %f709;
	cvt.rzi.f32.f32 	%f711, %f710;
	abs.f32 	%f712, %f708;
	setp.gt.f32 	%p176, %f712, 0f4B000000;
	selp.f32 	%f713, %f708, %f711, %p176;
	cvt.rzi.f32.f32 	%f714, %f708;
	setp.lt.f32 	%p177, %f712, 0f3F000000;
	selp.f32 	%f715, %f714, %f713, %p177;
	cvt.rzi.s32.f32 	%r349, %f715;
	fma.rn.f32 	%f716, %f715, 0fBF000000, %f773;
	mul.f32 	%f717, %f716, %f716;
	fma.rn.f32 	%f718, %f717, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f719, %f717, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f720, %f718, %f717, 0fC0A55DF6;
	fma.rn.f32 	%f721, %f719, %f717, 0f4081E0CF;
	fma.rn.f32 	%f722, %f717, %f716, 0f00000000;
	fma.rn.f32 	%f723, %f721, %f717, 0fC09DE9E6;
	fma.rn.f32 	%f724, %f720, %f722, 0f00000000;
	fma.rn.f32 	%f725, %f723, %f717, 0f3F800000;
	fma.rn.f32 	%f726, %f716, 0f40490FDB, %f724;
	and.b32  	%r350, %r349, 1;
	setp.eq.b32 	%p178, %r350, 1;
	selp.f32 	%f727, %f725, %f726, %p178;
	selp.f32 	%f728, %f726, %f725, %p178;
	and.b32  	%r351, %r349, 2;
	setp.eq.s32 	%p179, %r351, 0;
	neg.f32 	%f729, %f727;
	selp.f32 	%f730, %f727, %f729, %p179;
	add.s32 	%r352, %r349, 1;
	and.b32  	%r353, %r352, 2;
	setp.eq.s32 	%p180, %r353, 0;
	sub.f32 	%f732, %f174, %f728;
	selp.f32 	%f733, %f728, %f732, %p180;
	cvt.rzi.f32.f32 	%f734, %f773;
	setp.eq.f32 	%p181, %f734, %f773;
	mul.f32 	%f735, %f773, 0f00000000;
	selp.f32 	%f736, %f735, %f730, %p181;
	abs.f32 	%f737, %f773;
	setp.gt.f32 	%p182, %f737, 0f4B800000;
	add.f32 	%f738, %f736, 0f3F800000;
	selp.f32 	%f739, %f738, %f733, %p182;
	selp.f32 	%f740, 0f3F800000, 0f00000000, %p175;
	mul.f32 	%f741, %f739, %f740;
	mul.f32 	%f742, %f736, %f740;
	mov.b32 	%r336, %f741;
	mov.b32 	%r335, %f127;
	// begin inline asm
	cvt.rn.f16x2.f32 %r334, %r336, %r335;
	// end inline asm
	mov.b32 	%r342, %f742;
	xor.b32  	%r339, %r342, -2147483648;
	mov.b32 	%r341, %f128;
	xor.b32  	%r338, %r341, -2147483648;
	// begin inline asm
	cvt.rn.f16x2.f32 %r337, %r339, %r338;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r340, %r342, %r341;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r343, %r336, %r335;
	// end inline asm
	shl.b32 	%r355, %r6, 12;
	and.b32  	%r356, %r10, 28;
	shl.b32 	%r357, %r1, 5;
	and.b32  	%r358, %r357, 96;
	and.b32  	%r359, %r357, 128;
	shl.b32 	%r360, %r4, 2;
	and.b32  	%r361, %r360, 24;
	and.b32  	%r362, %r4, 1;
	or.b32  	%r363, %r361, %r362;
	or.b32  	%r364, %r363, %r45;
	or.b32  	%r103, %r364, %r46;
	and.b32  	%r365, %r2, 2048;
	or.b32  	%r366, %r365, %r359;
	or.b32  	%r367, %r366, %r358;
	or.b32  	%r368, %r367, %r356;
	or.b32  	%r104, %r368, %r355;
	or.b32  	%r369, %r359, 262144;
	or.b32  	%r370, %r369, %r365;
	or.b32  	%r371, %r370, %r358;
	or.b32  	%r372, %r371, %r356;
	add.s32 	%r105, %r372, %r355;
	or.b32  	%r373, %r359, 524288;
	or.b32  	%r374, %r373, %r365;
	or.b32  	%r375, %r374, %r358;
	or.b32  	%r376, %r375, %r356;
	add.s32 	%r106, %r376, %r355;
	or.b32  	%r377, %r359, 786432;
	or.b32  	%r378, %r377, %r365;
	or.b32  	%r379, %r378, %r358;
	or.b32  	%r380, %r379, %r356;
	add.s32 	%r107, %r380, %r355;
	and.b32  	%r108, %r3, 8;
	shr.u32 	%r381, %r4, 1;
	mul.lo.s32 	%r382, %r381, 289;
	mul.lo.s32 	%r383, %r362, 130;
	shr.u32 	%r384, %r3, 4;
	mul.lo.s32 	%r385, %r384, 65;
	shl.b32 	%r386, %r3, 4;
	or.b32  	%r387, %r108, %r386;
	shr.u32 	%r388, %r387, 2;
	and.b32  	%r389, %r388, 30;
	add.s32 	%r390, %r382, %r383;
	add.s32 	%r391, %r390, %r385;
	add.s32 	%r392, %r391, %r389;
	mul.wide.u32 	%rd57, %r392, 4;
	mov.u64 	%rd58, shmem;
	add.s64 	%rd11, %rd58, %rd57;
	cvt.u64.u32 	%rd59, %r389;
	cvt.u64.u32 	%rd60, %r385;
	cvt.u64.u32 	%rd61, %r383;
	cvt.u64.u32 	%rd62, %r382;
	add.s64 	%rd63, %rd62, %rd61;
	add.s64 	%rd64, %rd63, %rd60;
	add.s64 	%rd65, %rd64, %rd59;
	shl.b64 	%rd66, %rd65, 2;
	add.s64 	%rd12, %rd58, %rd66;
	or.b32  	%r393, %r381, 8;
	mul.lo.s32 	%r394, %r393, 289;
	add.s32 	%r395, %r385, %r383;
	add.s32 	%r396, %r395, %r394;
	add.s32 	%r397, %r396, %r389;
	mul.wide.u32 	%rd67, %r397, 4;
	add.s64 	%rd13, %rd58, %rd67;
	cvt.u64.u32 	%rd68, %r394;
	add.s64 	%rd69, %rd61, %rd60;
	add.s64 	%rd70, %rd69, %rd68;
	add.s64 	%rd71, %rd70, %rd59;
	shl.b64 	%rd72, %rd71, 2;
	add.s64 	%rd14, %rd58, %rd72;
	or.b32  	%r398, %r381, 16;
	mul.lo.s32 	%r399, %r398, 289;
	add.s32 	%r400, %r395, %r399;
	add.s32 	%r401, %r400, %r389;
	mul.wide.u32 	%rd73, %r401, 4;
	add.s64 	%rd15, %rd58, %rd73;
	cvt.u64.u32 	%rd74, %r399;
	add.s64 	%rd75, %rd69, %rd74;
	add.s64 	%rd76, %rd75, %rd59;
	shl.b64 	%rd77, %rd76, 2;
	add.s64 	%rd16, %rd58, %rd77;
	or.b32  	%r402, %r381, 24;
	mul.lo.s32 	%r403, %r402, 289;
	add.s32 	%r404, %r395, %r403;
	add.s32 	%r405, %r404, %r389;
	mul.wide.u32 	%rd78, %r405, 4;
	add.s64 	%rd17, %rd58, %rd78;
	cvt.u64.u32 	%rd79, %r403;
	add.s64 	%rd80, %rd69, %rd79;
	add.s64 	%rd81, %rd80, %rd59;
	shl.b64 	%rd82, %rd81, 2;
	add.s64 	%rd18, %rd58, %rd82;
	and.b32  	%r406, %r5, 32;
	shl.b32 	%r407, %r3, 3;
	and.b32  	%r408, %r407, 64;
	and.b32  	%r409, %r56, 32;
	and.b32  	%r410, %r10, 16;
	shl.b32 	%r411, %r4, 1;
	or.b32  	%r412, %r409, %r411;
	or.b32  	%r413, %r412, %r408;
	or.b32  	%r414, %r413, %r410;
	shr.u32 	%r415, %r414, 2;
	mad.lo.s32 	%r416, %r15, 130, %r406;
	mad.lo.s32 	%r417, %r14, 65, %r416;
	add.s32 	%r418, %r417, %r415;
	or.b32  	%r419, %r11, %r10;
	bfe.u32 	%r420, %r419, 1, 2;
	mad.lo.s32 	%r421, %r420, 65, %r406;
	add.s32 	%r422, %r421, %r415;
	shl.b32 	%r423, %r8, 15;
	add.s32 	%r424, %r423, -98304;
	or.b32  	%r425, %r356, %r358;
	and.b32  	%r426, %r360, 4;
	and.b32  	%r427, %r1, 120;
	or.b32  	%r428, %r427, %r44;
	or.b32  	%r429, %r428, %r426;
	shl.b32 	%r430, %r429, 8;
	shl.b32 	%r431, %r4, 14;
	and.b32  	%r432, %r431, 98304;
	or.b32  	%r433, %r432, %r359;
	or.b32  	%r434, %r433, %r425;
	or.b32  	%r109, %r434, %r430;
	cvt.s64.s32 	%rd19, %r424;
	or.b32  	%r435, %r369, %r432;
	or.b32  	%r436, %r435, %r425;
	or.b32  	%r110, %r436, %r430;
	or.b32  	%r437, %r373, %r432;
	or.b32  	%r438, %r437, %r425;
	or.b32  	%r111, %r438, %r430;
	or.b32  	%r439, %r377, %r432;
	or.b32  	%r440, %r439, %r425;
	or.b32  	%r112, %r440, %r430;
	and.b32  	%r441, %r411, 2;
	or.b32  	%r442, %r441, %r384;
	mul.lo.s32 	%r443, %r442, 65;
	add.s32 	%r444, %r443, %r382;
	add.s32 	%r445, %r444, %r389;
	mul.wide.u32 	%rd83, %r445, 4;
	add.s64 	%rd20, %rd58, %rd83;
	cvt.u64.u32 	%rd84, %r443;
	add.s64 	%rd85, %rd62, %rd84;
	add.s64 	%rd86, %rd85, %rd59;
	shl.b64 	%rd87, %rd86, 2;
	add.s64 	%rd21, %rd58, %rd87;
	add.s32 	%r446, %r443, %r394;
	add.s32 	%r447, %r446, %r389;
	mul.wide.u32 	%rd88, %r447, 4;
	add.s64 	%rd22, %rd58, %rd88;
	add.s64 	%rd89, %rd68, %rd84;
	add.s64 	%rd90, %rd89, %rd59;
	shl.b64 	%rd91, %rd90, 2;
	add.s64 	%rd23, %rd58, %rd91;
	add.s32 	%r448, %r443, %r399;
	add.s32 	%r449, %r448, %r389;
	mul.wide.u32 	%rd92, %r449, 4;
	add.s64 	%rd24, %rd58, %rd92;
	add.s64 	%rd93, %rd74, %rd84;
	add.s64 	%rd94, %rd93, %rd59;
	shl.b64 	%rd95, %rd94, 2;
	add.s64 	%rd25, %rd58, %rd95;
	add.s32 	%r450, %r443, %r403;
	add.s32 	%r451, %r450, %r389;
	mul.wide.u32 	%rd96, %r451, 4;
	add.s64 	%rd26, %rd58, %rd96;
	add.s64 	%rd97, %rd79, %rd84;
	add.s64 	%rd98, %rd97, %rd59;
	shl.b64 	%rd99, %rd98, 2;
	add.s64 	%rd27, %rd58, %rd99;
	mul.wide.u32 	%rd100, %r422, 4;
	add.s64 	%rd28, %rd58, %rd100;
	mul.wide.u32 	%rd101, %r418, 4;
	add.s64 	%rd29, %rd58, %rd101;
	setp.eq.s32 	%p184, %r108, 0;
	mov.u16 	%rs87, 25600;
	mov.u16 	%rs61, 21504;
	mov.u16 	%rs95, 18432;
	mov.u16 	%rs83, -14592;
	setp.lt.u32 	%p198, %r4, 6;
	mov.u32 	%r1118, %r1109;
	mov.u32 	%r1125, %r1109;
	mov.u32 	%r1120, %r1109;
	mov.u32 	%r1121, %r1109;
	bra.uni 	LBB0_85;
LBB0_89:                                // %L16160
                                        //   in Loop: Header=BB0_85 Depth=1
	setp.ne.s32 	%p213, %r1118, 130816;
	add.s32 	%r1118, %r1118, 256;
	add.s32 	%r1106, %r1118, %r6;
	setp.gt.s32 	%p214, %r7, %r1106;
	and.pred  	%p215, %p213, %p214;
	@%p215 bra 	LBB0_85;
	bra.uni 	LBB0_90;
LBB0_85:                                // %L1219
                                        // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_86 Depth 2
	or.b32  	%r517, %r103, %r1118;
	shl.b32 	%r518, %r517, 12;
	add.s32 	%r519, %r104, %r518;
	shr.s32 	%r520, %r519, 31;
	shr.u32 	%r521, %r520, 3;
	add.s32 	%r522, %r519, %r521;
	shr.s32 	%r523, %r522, 29;
	setp.lt.s32 	%p185, %r519, 0;
	and.b32  	%r524, %r522, -536870912;
	setp.ne.s32 	%p186, %r524, %r519;
	and.pred  	%p187, %p185, %p186;
	selp.u32 	%r525, 1, 0, %p187;
	sub.s32 	%r526, %r525, %r523;
	shl.b32 	%r527, %r526, 29;
	or.b32  	%r528, %r519, 1;
	add.s32 	%r529, %r528, %r527;
	mul.wide.s32 	%rd102, %r529, 4;
	add.s64 	%rd103, %rd2, %rd102;
	ld.global.v4.u32 	{%r530, %r531, %r532, %r533}, [%rd103+-4];
	add.s32 	%r534, %r105, %r518;
	shr.s32 	%r535, %r534, 31;
	shr.u32 	%r536, %r535, 3;
	add.s32 	%r537, %r534, %r536;
	shr.s32 	%r538, %r537, 29;
	setp.lt.s32 	%p188, %r534, 0;
	and.b32  	%r539, %r537, -536870912;
	setp.ne.s32 	%p189, %r539, %r534;
	and.pred  	%p190, %p188, %p189;
	selp.u32 	%r540, 1, 0, %p190;
	sub.s32 	%r541, %r540, %r538;
	shl.b32 	%r542, %r541, 29;
	add.s32 	%r543, %r534, %r542;
	add.s32 	%r544, %r543, 1;
	mul.wide.s32 	%rd104, %r544, 4;
	add.s64 	%rd105, %rd2, %rd104;
	ld.global.v4.u32 	{%r545, %r546, %r547, %r548}, [%rd105+-4];
	add.s32 	%r549, %r106, %r518;
	shr.s32 	%r550, %r549, 31;
	shr.u32 	%r551, %r550, 3;
	add.s32 	%r552, %r549, %r551;
	shr.s32 	%r553, %r552, 29;
	setp.lt.s32 	%p191, %r549, 0;
	and.b32  	%r554, %r552, -536870912;
	setp.ne.s32 	%p192, %r554, %r549;
	and.pred  	%p193, %p191, %p192;
	selp.u32 	%r555, 1, 0, %p193;
	sub.s32 	%r556, %r555, %r553;
	shl.b32 	%r557, %r556, 29;
	add.s32 	%r558, %r549, %r557;
	add.s32 	%r559, %r558, 1;
	mul.wide.s32 	%rd106, %r559, 4;
	add.s64 	%rd107, %rd2, %rd106;
	ld.global.v4.u32 	{%r560, %r561, %r562, %r563}, [%rd107+-4];
	add.s32 	%r564, %r107, %r518;
	shr.s32 	%r565, %r564, 31;
	shr.u32 	%r566, %r565, 3;
	add.s32 	%r567, %r564, %r566;
	shr.s32 	%r568, %r567, 29;
	setp.lt.s32 	%p194, %r564, 0;
	and.b32  	%r569, %r567, -536870912;
	setp.ne.s32 	%p195, %r569, %r564;
	and.pred  	%p196, %p194, %p195;
	selp.u32 	%r570, 1, 0, %p196;
	sub.s32 	%r571, %r570, %r568;
	shl.b32 	%r572, %r571, 29;
	add.s32 	%r573, %r564, %r572;
	add.s32 	%r574, %r573, 1;
	mul.wide.s32 	%rd108, %r574, 4;
	add.s64 	%rd109, %rd2, %rd108;
	ld.global.v4.u32 	{%r575, %r576, %r577, %r578}, [%rd109+-4];
	selp.b32 	%r579, %r532, %r530, %p184;
	shfl.sync.bfly.b32	%r580, %r579, 8, 31, -1;
	selp.b32 	%r453, %r530, %r580, %p184;
	selp.b32 	%r454, %r580, %r532, %p184;
	selp.b32 	%r581, %r533, %r531, %p184;
	shfl.sync.bfly.b32	%r582, %r581, 8, 31, -1;
	selp.b32 	%r461, %r531, %r582, %p184;
	selp.b32 	%r462, %r582, %r533, %p184;
	selp.b32 	%r583, %r547, %r545, %p184;
	shfl.sync.bfly.b32	%r584, %r583, 8, 31, -1;
	selp.b32 	%r469, %r545, %r584, %p184;
	selp.b32 	%r470, %r584, %r547, %p184;
	selp.b32 	%r585, %r548, %r546, %p184;
	shfl.sync.bfly.b32	%r586, %r585, 8, 31, -1;
	selp.b32 	%r477, %r546, %r586, %p184;
	selp.b32 	%r478, %r586, %r548, %p184;
	selp.b32 	%r587, %r562, %r560, %p184;
	shfl.sync.bfly.b32	%r588, %r587, 8, 31, -1;
	selp.b32 	%r485, %r560, %r588, %p184;
	selp.b32 	%r486, %r588, %r562, %p184;
	selp.b32 	%r589, %r563, %r561, %p184;
	shfl.sync.bfly.b32	%r590, %r589, 8, 31, -1;
	selp.b32 	%r493, %r561, %r590, %p184;
	selp.b32 	%r494, %r590, %r563, %p184;
	selp.b32 	%r591, %r577, %r575, %p184;
	shfl.sync.bfly.b32	%r592, %r591, 8, 31, -1;
	selp.b32 	%r501, %r575, %r592, %p184;
	selp.b32 	%r502, %r592, %r577, %p184;
	selp.b32 	%r593, %r578, %r576, %p184;
	shfl.sync.bfly.b32	%r594, %r593, 8, 31, -1;
	selp.b32 	%r509, %r576, %r594, %p184;
	selp.b32 	%r510, %r594, %r578, %p184;
	mov.u32 	%r511, 21520;
	// begin inline asm
	prmt.b32 %r452, %r453, %r454, %r511;
	// end inline asm
	mov.u32 	%r515, 30258;
	// begin inline asm
	prmt.b32 %r456, %r453, %r454, %r515;
	// end inline asm
	// begin inline asm
	prmt.b32 %r460, %r461, %r462, %r511;
	// end inline asm
	// begin inline asm
	prmt.b32 %r464, %r461, %r462, %r515;
	// end inline asm
	// begin inline asm
	prmt.b32 %r468, %r469, %r470, %r511;
	// end inline asm
	// begin inline asm
	prmt.b32 %r472, %r469, %r470, %r515;
	// end inline asm
	// begin inline asm
	prmt.b32 %r476, %r477, %r478, %r511;
	// end inline asm
	// begin inline asm
	prmt.b32 %r480, %r477, %r478, %r515;
	// end inline asm
	// begin inline asm
	prmt.b32 %r484, %r485, %r486, %r511;
	// end inline asm
	// begin inline asm
	prmt.b32 %r488, %r485, %r486, %r515;
	// end inline asm
	// begin inline asm
	prmt.b32 %r492, %r493, %r494, %r511;
	// end inline asm
	// begin inline asm
	prmt.b32 %r496, %r493, %r494, %r515;
	// end inline asm
	// begin inline asm
	prmt.b32 %r500, %r501, %r502, %r511;
	// end inline asm
	// begin inline asm
	prmt.b32 %r504, %r501, %r502, %r515;
	// end inline asm
	// begin inline asm
	prmt.b32 %r508, %r509, %r510, %r511;
	// end inline asm
	// begin inline asm
	prmt.b32 %r512, %r509, %r510, %r515;
	// end inline asm
	st.shared.u32 	[%rd11], %r452;
	st.shared.u32 	[%rd12+128], %r456;
	st.shared.u32 	[%rd12+4], %r460;
	st.shared.u32 	[%rd12+132], %r464;
	st.shared.u32 	[%rd13], %r468;
	st.shared.u32 	[%rd14+128], %r472;
	st.shared.u32 	[%rd14+4], %r476;
	st.shared.u32 	[%rd14+132], %r480;
	st.shared.u32 	[%rd15], %r484;
	st.shared.u32 	[%rd16+128], %r488;
	st.shared.u32 	[%rd16+4], %r492;
	st.shared.u32 	[%rd16+132], %r496;
	st.shared.u32 	[%rd17], %r500;
	st.shared.u32 	[%rd18+128], %r504;
	st.shared.u32 	[%rd18+4], %r508;
	st.shared.u32 	[%rd18+132], %r512;
	bar.sync 	0;
	mov.u32 	%r1122, 256;
	mov.u64 	%rd160, %rd29;
	mov.u64 	%rd161, %rd28;
	mov.u32 	%r1123, %r1121;
	mov.u32 	%r1124, %r1120;
LBB0_86:                                // %L9339
                                        //   Parent Loop BB0_85 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	mov.u32 	%r1120, %r1125;
	mov.u32 	%r1121, %r1124;
	ld.shared.u32 	%r1125, [%rd160];
	// begin inline asm
	mov.b32 %r600, {%rs87, %rs87};
	// end inline asm
	// begin inline asm
	mov.b32 %r611, {%rs61, %rs61};
	// end inline asm
	xor.b32  	%r599, %r1125, -2004318072;
	mov.u32 	%r598, 983055;
	// begin inline asm
	lop3.b32 %r597, %r598, %r599, %r600, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r601, {%rs95, %rs95};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r602, %r600, %r601;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r605, %r597, %r602;
	// end inline asm
	mov.u32 	%r609, 15728880;
	// begin inline asm
	lop3.b32 %r608, %r609, %r599, %r611, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r612, {%rs95, %rs95};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r613, %r611, %r612;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r616, %r608, %r613;
	// end inline asm
	shr.u32 	%r621, %r599, 8;
	// begin inline asm
	lop3.b32 %r619, %r598, %r621, %r600, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r623, {%rs95, %rs95};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r624, %r600, %r623;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r627, %r619, %r624;
	// end inline asm
	// begin inline asm
	lop3.b32 %r630, %r609, %r621, %r611, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r634, {%rs95, %rs95};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r635, %r611, %r634;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r638, %r630, %r635;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r641, %r216;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r643, %r641, %r605;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r646, %r216;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r648, %r646, %r616;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r651, %r216;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r653, %r651, %r627;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r656, %r216;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r658, %r656, %r638;
	// end inline asm
	// begin inline asm
	mov.b32 %r666, {%rs87, %rs87};
	// end inline asm
	// begin inline asm
	mov.b32 %r677, {%rs61, %rs61};
	// end inline asm
	xor.b32  	%r665, %r1123, -2004318072;
	// begin inline asm
	lop3.b32 %r663, %r598, %r665, %r666, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r667, {%rs95, %rs95};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r668, %r666, %r667;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r671, %r663, %r668;
	// end inline asm
	// begin inline asm
	lop3.b32 %r674, %r609, %r665, %r677, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r678, {%rs95, %rs95};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r679, %r677, %r678;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r682, %r674, %r679;
	// end inline asm
	shr.u32 	%r687, %r665, 8;
	// begin inline asm
	lop3.b32 %r685, %r598, %r687, %r666, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r689, {%rs95, %rs95};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r690, %r666, %r689;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r693, %r685, %r690;
	// end inline asm
	// begin inline asm
	lop3.b32 %r696, %r609, %r687, %r677, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r700, {%rs95, %rs95};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r701, %r677, %r700;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r704, %r696, %r701;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r707, %r162, %r671, %r643;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r711, %r162, %r682, %r648;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r715, %r162, %r693, %r653;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r719, %r162, %r704, %r658;
	// end inline asm
	// begin inline asm
	mov.b32 %r728, {%rs87, %rs87};
	// end inline asm
	// begin inline asm
	mov.b32 %r739, {%rs61, %rs61};
	// end inline asm
	xor.b32  	%r727, %r1121, -2004318072;
	// begin inline asm
	lop3.b32 %r725, %r598, %r727, %r728, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r729, {%rs95, %rs95};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r730, %r728, %r729;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r733, %r725, %r730;
	// end inline asm
	// begin inline asm
	lop3.b32 %r736, %r609, %r727, %r739, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r740, {%rs95, %rs95};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r741, %r739, %r740;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r744, %r736, %r741;
	// end inline asm
	shr.u32 	%r749, %r727, 8;
	// begin inline asm
	lop3.b32 %r747, %r598, %r749, %r728, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r751, {%rs95, %rs95};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r752, %r728, %r751;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r755, %r747, %r752;
	// end inline asm
	// begin inline asm
	lop3.b32 %r758, %r609, %r749, %r739, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r762, {%rs95, %rs95};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r763, %r739, %r762;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r766, %r758, %r763;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r769, %r180;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r771, %r769, %r733, %r707;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r775, %r180;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r777, %r775, %r744, %r711;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r781, %r180;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r783, %r781, %r755, %r715;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r787, %r180;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r789, %r787, %r766, %r719;
	// end inline asm
	// begin inline asm
	mov.b32 %r798, {%rs87, %rs87};
	// end inline asm
	// begin inline asm
	mov.b32 %r809, {%rs61, %rs61};
	// end inline asm
	xor.b32  	%r797, %r1120, -2004318072;
	// begin inline asm
	lop3.b32 %r795, %r598, %r797, %r798, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r799, {%rs95, %rs95};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r800, %r798, %r799;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r803, %r795, %r800;
	// end inline asm
	// begin inline asm
	lop3.b32 %r806, %r609, %r797, %r809, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r810, {%rs95, %rs95};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r811, %r809, %r810;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r814, %r806, %r811;
	// end inline asm
	shr.u32 	%r819, %r797, 8;
	// begin inline asm
	lop3.b32 %r817, %r598, %r819, %r798, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r821, {%rs95, %rs95};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r822, %r798, %r821;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r825, %r817, %r822;
	// end inline asm
	// begin inline asm
	lop3.b32 %r828, %r609, %r819, %r809, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r832, {%rs95, %rs95};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r833, %r809, %r832;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r836, %r828, %r833;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r862, %r198, %r803, %r771;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r859, %r198, %r814, %r777;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r871, %r198, %r825, %r783;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r868, %r198, %r836, %r789;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r855, %r247;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r857, %r855, %r859;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r860, %r244, %r862, %r857;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r864, %r247;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r866, %r864, %r868;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r869, %r244, %r871, %r866;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r873, %r247, %r862;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r876, %r244, %r859, %r873;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r880, %r247, %r871;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r883, %r244, %r868, %r880;
	// end inline asm
	mov.u32 	%r895, 0;
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r887, %r888}, {%r292, %r298, %r295, %r301}, {%r860, %r876}, {%r895, %r895};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r897, %r898}, {%r292, %r298, %r295, %r301}, {%r869, %r883}, {%r895, %r895};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r907, %r908}, {%r334, %r340, %r337, %r343}, {%r887, %r888}, {%r895, %r895};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r917, %r918}, {%r334, %r340, %r337, %r343}, {%r897, %r898}, {%r895, %r895};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r927, %r12, %r907;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r930, %r12, %r908;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r933, %r12, %r917;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r936, %r12, %r918;
	// end inline asm
	// begin inline asm
	mov.b32 %r939, {%rs83, %rs83};
	// end inline asm
	mov.u16 	%rs72, 18176;
	// begin inline asm
	mov.b32 %r940, {%rs72, %rs72};
	// end inline asm
	// begin inline asm
	max.f16x2 %r941, %r927, %r939;
	// end inline asm
	// begin inline asm
	min.f16x2 %r944, %r941, %r940;
	// end inline asm
	// begin inline asm
	mov.b32 %r947, {%rs83, %rs83};
	// end inline asm
	// begin inline asm
	mov.b32 %r948, {%rs72, %rs72};
	// end inline asm
	// begin inline asm
	max.f16x2 %r949, %r930, %r947;
	// end inline asm
	// begin inline asm
	min.f16x2 %r952, %r949, %r948;
	// end inline asm
	// begin inline asm
	mov.b32 %r955, {%rs83, %rs83};
	// end inline asm
	// begin inline asm
	mov.b32 %r956, {%rs72, %rs72};
	// end inline asm
	// begin inline asm
	max.f16x2 %r957, %r933, %r955;
	// end inline asm
	// begin inline asm
	min.f16x2 %r960, %r957, %r956;
	// end inline asm
	// begin inline asm
	mov.b32 %r963, {%rs83, %rs83};
	// end inline asm
	// begin inline asm
	mov.b32 %r964, {%rs72, %rs72};
	// end inline asm
	// begin inline asm
	max.f16x2 %r965, %r936, %r963;
	// end inline asm
	// begin inline asm
	min.f16x2 %r968, %r965, %r964;
	// end inline asm
	// begin inline asm
	mov.b32 %r974, {%rs87, %rs87};
	// end inline asm
	// begin inline asm
	mov.b32 %r972, {%rs95, %rs95};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r973, %r974, %r972;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r976, %r944, %r973;
	// end inline asm
	// begin inline asm
	mov.b32 %r979, {%rs95, %rs95};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r980, %r974, %r979;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r983, %r952, %r980;
	// end inline asm
	// begin inline asm
	mov.b32 %r986, {%rs95, %rs95};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r987, %r974, %r986;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r990, %r960, %r987;
	// end inline asm
	// begin inline asm
	mov.b32 %r993, {%rs95, %rs95};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r994, %r974, %r993;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r997, %r968, %r994;
	// end inline asm
	mov.u32 	%r1003, 25152;
	// begin inline asm
	prmt.b32 %r1000, %r976, %r990, %r1003;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1004, %r983, %r997, %r1003;
	// end inline asm
	shl.b32 	%r1011, %r1004, 4;
	mov.u32 	%r1009, 252645135;
	// begin inline asm
	lop3.b32 %r1008, %r1009, %r1000, %r1011, 202;
	// end inline asm
	xor.b32  	%r1012, %r1008, -2004318072;
	st.shared.u32 	[%rd161], %r1012;
	add.s32 	%r1122, %r1122, -8;
	add.s64 	%rd161, %rd161, 1156;
	add.s64 	%rd160, %rd160, 1156;
	setp.eq.s32 	%p197, %r1122, 0;
	mov.u32 	%r1123, %r1121;
	mov.u32 	%r1124, %r1120;
	@%p197 bra 	LBB0_87;
	bra.uni 	LBB0_86;
LBB0_87:                                // %guard_pass6326
                                        //   in Loop: Header=BB0_85 Depth=1
	bar.sync 	0;
	ld.shared.u32 	%r1018, [%rd20];
	ld.shared.u32 	%r1019, [%rd21+128];
	ld.shared.u32 	%r1026, [%rd21+4];
	ld.shared.u32 	%r1027, [%rd21+132];
	ld.shared.u32 	%r1034, [%rd22];
	ld.shared.u32 	%r1035, [%rd23+128];
	ld.shared.u32 	%r1042, [%rd23+4];
	ld.shared.u32 	%r1043, [%rd23+132];
	ld.shared.u32 	%r1050, [%rd24];
	ld.shared.u32 	%r1051, [%rd25+128];
	ld.shared.u32 	%r1058, [%rd25+4];
	ld.shared.u32 	%r1059, [%rd25+132];
	ld.shared.u32 	%r1066, [%rd26];
	ld.shared.u32 	%r1067, [%rd27+128];
	ld.shared.u32 	%r1074, [%rd27+4];
	ld.shared.u32 	%r1075, [%rd27+132];
	// begin inline asm
	prmt.b32 %r1013, %r1018, %r1019, %r511;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1017, %r1018, %r1019, %r515;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1021, %r1026, %r1027, %r511;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1025, %r1026, %r1027, %r515;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1029, %r1034, %r1035, %r511;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1033, %r1034, %r1035, %r515;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1037, %r1042, %r1043, %r511;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1041, %r1042, %r1043, %r515;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1045, %r1050, %r1051, %r511;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1049, %r1050, %r1051, %r515;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1053, %r1058, %r1059, %r511;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1057, %r1058, %r1059, %r515;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1061, %r1066, %r1067, %r511;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1065, %r1066, %r1067, %r515;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1069, %r1074, %r1075, %r511;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1073, %r1074, %r1075, %r515;
	// end inline asm
	selp.b32 	%r1077, %r1017, %r1013, %p184;
	shfl.sync.bfly.b32	%r129, %r1077, 8, 31, -1;
	selp.b32 	%r1078, %r1025, %r1021, %p184;
	shfl.sync.bfly.b32	%r130, %r1078, 8, 31, -1;
	selp.b32 	%r1079, %r1033, %r1029, %p184;
	shfl.sync.bfly.b32	%r131, %r1079, 8, 31, -1;
	selp.b32 	%r1080, %r1041, %r1037, %p184;
	shfl.sync.bfly.b32	%r132, %r1080, 8, 31, -1;
	selp.b32 	%r1081, %r1049, %r1045, %p184;
	shfl.sync.bfly.b32	%r133, %r1081, 8, 31, -1;
	selp.b32 	%r1082, %r1057, %r1053, %p184;
	shfl.sync.bfly.b32	%r134, %r1082, 8, 31, -1;
	selp.b32 	%r1083, %r1065, %r1061, %p184;
	shfl.sync.bfly.b32	%r135, %r1083, 8, 31, -1;
	selp.b32 	%r1084, %r1073, %r1069, %p184;
	shfl.sync.bfly.b32	%r136, %r1084, 8, 31, -1;
	@%p198 bra 	LBB0_89;
// %bb.88:                              // %L15167
                                        //   in Loop: Header=BB0_85 Depth=1
	selp.b32 	%r1085, %r136, %r1073, %p184;
	selp.b32 	%r1086, %r1069, %r136, %p184;
	selp.b32 	%r1087, %r135, %r1065, %p184;
	selp.b32 	%r1088, %r1061, %r135, %p184;
	selp.b32 	%r1089, %r134, %r1057, %p184;
	selp.b32 	%r1090, %r1053, %r134, %p184;
	selp.b32 	%r1091, %r133, %r1049, %p184;
	selp.b32 	%r1092, %r1045, %r133, %p184;
	selp.b32 	%r1093, %r132, %r1041, %p184;
	selp.b32 	%r1094, %r1037, %r132, %p184;
	selp.b32 	%r1095, %r131, %r1033, %p184;
	selp.b32 	%r1096, %r1029, %r131, %p184;
	selp.b32 	%r1097, %r130, %r1025, %p184;
	selp.b32 	%r1098, %r1021, %r130, %p184;
	selp.b32 	%r1099, %r129, %r1017, %p184;
	selp.b32 	%r1100, %r1013, %r129, %p184;
	shl.b32 	%r1101, %r1118, 12;
	or.b32  	%r1102, %r109, %r1101;
	cvt.u64.u32 	%rd110, %r1102;
	add.s64 	%rd111, %rd110, %rd19;
	shr.u64 	%rd112, %rd111, 35;
	add.s64 	%rd113, %rd111, %rd112;
	shr.s64 	%rd114, %rd113, 29;
	setp.lt.s64 	%p201, %rd111, 0;
	and.b64  	%rd115, %rd113, -536870912;
	setp.ne.s64 	%p202, %rd115, %rd111;
	and.pred  	%p203, %p201, %p202;
	selp.u64 	%rd116, 1, 0, %p203;
	sub.s64 	%rd117, %rd116, %rd114;
	shl.b64 	%rd118, %rd117, 29;
	add.s64 	%rd119, %rd118, %rd111;
	shl.b64 	%rd120, %rd119, 2;
	add.s64 	%rd121, %rd3, %rd120;
	st.global.v4.u32 	[%rd121], {%r1100, %r1098, %r1099, %r1097};
	or.b32  	%r1103, %r110, %r1101;
	cvt.u64.u32 	%rd122, %r1103;
	add.s64 	%rd123, %rd122, %rd19;
	shr.u64 	%rd124, %rd123, 35;
	add.s64 	%rd125, %rd123, %rd124;
	shr.s64 	%rd126, %rd125, 29;
	setp.lt.s64 	%p204, %rd123, 0;
	and.b64  	%rd127, %rd125, -536870912;
	setp.ne.s64 	%p205, %rd127, %rd123;
	and.pred  	%p206, %p204, %p205;
	selp.u64 	%rd128, 1, 0, %p206;
	sub.s64 	%rd129, %rd128, %rd126;
	shl.b64 	%rd130, %rd129, 29;
	add.s64 	%rd131, %rd130, %rd123;
	shl.b64 	%rd132, %rd131, 2;
	add.s64 	%rd133, %rd3, %rd132;
	st.global.v4.u32 	[%rd133], {%r1096, %r1094, %r1095, %r1093};
	or.b32  	%r1104, %r111, %r1101;
	cvt.u64.u32 	%rd134, %r1104;
	add.s64 	%rd135, %rd134, %rd19;
	shr.u64 	%rd136, %rd135, 35;
	add.s64 	%rd137, %rd135, %rd136;
	shr.s64 	%rd138, %rd137, 29;
	setp.lt.s64 	%p207, %rd135, 0;
	and.b64  	%rd139, %rd137, -536870912;
	setp.ne.s64 	%p208, %rd139, %rd135;
	and.pred  	%p209, %p207, %p208;
	selp.u64 	%rd140, 1, 0, %p209;
	sub.s64 	%rd141, %rd140, %rd138;
	shl.b64 	%rd142, %rd141, 29;
	add.s64 	%rd143, %rd142, %rd135;
	shl.b64 	%rd144, %rd143, 2;
	add.s64 	%rd145, %rd3, %rd144;
	st.global.v4.u32 	[%rd145], {%r1092, %r1090, %r1091, %r1089};
	or.b32  	%r1105, %r112, %r1101;
	cvt.u64.u32 	%rd146, %r1105;
	add.s64 	%rd147, %rd146, %rd19;
	shr.u64 	%rd148, %rd147, 35;
	add.s64 	%rd149, %rd147, %rd148;
	shr.s64 	%rd150, %rd149, 29;
	setp.lt.s64 	%p210, %rd147, 0;
	and.b64  	%rd151, %rd149, -536870912;
	setp.ne.s64 	%p211, %rd151, %rd147;
	and.pred  	%p212, %p210, %p211;
	selp.u64 	%rd152, 1, 0, %p212;
	sub.s64 	%rd153, %rd152, %rd150;
	shl.b64 	%rd154, %rd153, 29;
	add.s64 	%rd155, %rd154, %rd147;
	shl.b64 	%rd156, %rd155, 2;
	add.s64 	%rd157, %rd3, %rd156;
	st.global.v4.u32 	[%rd157], {%r1088, %r1086, %r1087, %r1085};
	bra.uni 	LBB0_89;
LBB0_90:                                // %L16171
	st.global.u32 	[%rd4], %r1109;
	ret;
LBB0_7:                                 // %L247
	mov.u32 	%r1108, 2;
	st.global.u32 	[%rd4], %r1108;
	mov.u64 	%rd158, exception1402;
	cvta.global.u64 	%rd159, %rd158;
	{ // callseq 2, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd159;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 2
	{ // callseq 3, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd30;
	st.param.b32 	[param0+8], %r137;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 3
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
LBB0_1:                                 // %L8
	mov.u64 	%rd51, exception1;
	cvta.global.u64 	%rd52, %rd51;
	{ // callseq 0, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd52;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 0
	{ // callseq 1, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd30;
	st.param.b32 	[param0+8], %r137;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 1
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
                                        // -- End function
}
