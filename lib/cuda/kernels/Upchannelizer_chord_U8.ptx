// PTX kernel code for the CUDA upchannelizer
// This file has been generated automatically by `upchan.jl`.
// Do not modify this file, your changes will be lost.

// PTX CompilerJob of MethodInstance for upchan(::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Float16x2, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int32, 1}) for sm_86, minthreads=256, blocks_per_sm=4

//
// Generated by LLVM NVPTX Back-End
//

.version 8.1
.target sm_86
.address_size 64

	// .globl	_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE // -- Begin function _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE
.func gpu_report_exception
(
	.param .b64 gpu_report_exception_param_0
)
.noreturn
{
	trap;
}
.func gpu_signal_exception
(
	.param .align 8 .b8 gpu_signal_exception_param_0[16]
)
.noreturn
{
	trap;
}
.extern .shared .align 32 .b8 shmem[];
.global .align 1 .b8 exception2656[6] = {101, 114, 114, 111, 114, 0};
.global .align 1 .b8 exception1[10] = {101, 120, 99, 101, 112, 116, 105, 111, 110, 0};
                                        // @_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE
.visible .entry _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE(
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_0[16],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_1[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_2[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_3[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_4[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_5[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_6[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_7[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_8[32]
)
.reqntid 256, 1, 1
.minnctapersm 4
{
	.reg .pred 	%p<244>;
	.reg .b16 	%rs<96>;
	.reg .b32 	%r<1380>;
	.reg .f32 	%f<775>;
	.reg .b64 	%rd<269>;

// %bb.0:                               // %conversion
	ld.param.u32 	%r160, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_0+8];
	ld.param.u64 	%rd46, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_0];
	// begin inline asm
	mov.u32 %r161, %dynamic_smem_size;
	// end inline asm
	setp.gt.u32 	%p1, %r161, 73983;
	@%p1 bra 	LBB0_2;
	bra.uni 	LBB0_1;
LBB0_2:                                 // %L10
	ld.param.u64 	%rd63, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_8];
	ld.param.u64 	%rd47, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_1];
	mov.u32 	%r1, %tid.y;
	shl.b32 	%r2, %r1, 5;
	mov.u32 	%r3, %ctaid.x;
	shl.b32 	%r4, %r3, 8;
	mov.u32 	%r5, %tid.x;
	or.b32  	%r162, %r4, %r5;
	or.b32  	%r163, %r162, %r2;
	mul.wide.u32 	%rd69, %r163, 4;
	add.s64 	%rd4, %rd63, %rd69;
	mov.u32 	%r164, 1;
	st.global.u32 	[%rd4], %r164;
	ld.global.u32 	%r6, [%rd47];
	setp.lt.s32 	%p2, %r6, 0;
	@%p2 bra 	LBB0_7;
// %bb.3:                               // %L205
	ld.param.u64 	%rd51, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_2];
	ld.global.u32 	%r7, [%rd51];
	setp.lt.s32 	%p3, %r7, %r6;
	setp.gt.s32 	%p4, %r7, 262144;
	or.pred  	%p5, %p3, %p4;
	@%p5 bra 	LBB0_7;
// %bb.4:                               // %L215
	ld.param.u64 	%rd55, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_3];
	ld.global.u32 	%r8, [%rd55];
	sub.s32 	%r165, %r7, %r6;
	and.b32  	%r166, %r165, 255;
	setp.ne.s32 	%p6, %r166, 0;
	setp.lt.s32 	%p7, %r8, 0;
	or.pred  	%p8, %p6, %p7;
	@%p8 bra 	LBB0_7;
// %bb.5:                               // %L221
	ld.param.u64 	%rd59, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_4];
	ld.global.u32 	%r9, [%rd59];
	setp.lt.s32 	%p9, %r9, %r8;
	setp.gt.s32 	%p10, %r9, 32768;
	or.pred  	%p11, %p9, %p10;
	@%p11 bra 	LBB0_7;
// %bb.6:                               // %L231
	sub.s32 	%r167, %r9, %r8;
	add.s32 	%r168, %r167, 3;
	and.b32  	%r169, %r168, 31;
	setp.eq.s32 	%p12, %r169, 0;
	@%p12 bra 	LBB0_8;
	bra.uni 	LBB0_7;
LBB0_8:                                 // %L341
	bfe.u32 	%r15, %r5, 1, 1;
	shl.b32 	%r174, %r15, 1;
	and.b32  	%r16, %r5, 1;
	or.b32  	%r17, %r16, %r174;
	or.b32  	%r18, %r17, 4;
	mov.f32 	%f145, 0f40000000;
	mov.f32 	%f146, 0f41F80000;
	div.approx.f32 	%f1, %f146, %f145;
	cvt.rn.f32.s32 	%f147, %r17;
	sub.f32 	%f148, %f147, %f1;
	mov.f32 	%f177, 0f41000000;
	div.approx.f32 	%f3, %f148, %f177;
	setp.eq.f32 	%p18, %f3, 0f00000000;
	mov.f32 	%f750, 0f3F800000;
	mov.f32 	%f743, %f750;
	@%p18 bra 	LBB0_10;
// %bb.9:                               // %L506
	sin.approx.f32 	%f178, %f3;
	div.approx.f32 	%f743, %f178, %f3;
LBB0_10:                                // %L509
	cvt.rn.f32.s32 	%f181, %r18;
	sub.f32 	%f182, %f181, %f1;
	div.approx.f32 	%f8, %f182, %f177;
	setp.eq.f32 	%p24, %f8, 0f00000000;
	mov.f32 	%f744, %f750;
	@%p24 bra 	LBB0_12;
// %bb.11:                              // %L526
	sin.approx.f32 	%f212, %f8;
	div.approx.f32 	%f744, %f212, %f8;
LBB0_12:                                // %L529
	or.b32  	%r192, %r17, 8;
	or.b32  	%r20, %r17, 12;
	cvt.rn.f32.s32 	%f216, %r192;
	sub.f32 	%f217, %f216, %f1;
	div.approx.f32 	%f12, %f217, %f177;
	setp.eq.f32 	%p30, %f12, 0f00000000;
	mov.f32 	%f745, %f750;
	@%p30 bra 	LBB0_14;
// %bb.13:                              // %L608
	sin.approx.f32 	%f247, %f12;
	div.approx.f32 	%f745, %f247, %f12;
LBB0_14:                                // %L611
	cvt.rn.f32.s32 	%f250, %r20;
	sub.f32 	%f251, %f250, %f1;
	div.approx.f32 	%f17, %f251, %f177;
	setp.eq.f32 	%p36, %f17, 0f00000000;
	mov.f32 	%f746, %f750;
	@%p36 bra 	LBB0_16;
// %bb.15:                              // %L628
	sin.approx.f32 	%f281, %f17;
	div.approx.f32 	%f746, %f281, %f17;
LBB0_16:                                // %L631
	or.b32  	%r210, %r17, 16;
	or.b32  	%r22, %r17, 20;
	cvt.rn.f32.s32 	%f285, %r210;
	sub.f32 	%f286, %f285, %f1;
	div.approx.f32 	%f21, %f286, %f177;
	setp.eq.f32 	%p42, %f21, 0f00000000;
	mov.f32 	%f747, %f750;
	@%p42 bra 	LBB0_18;
// %bb.17:                              // %L710
	sin.approx.f32 	%f316, %f21;
	div.approx.f32 	%f747, %f316, %f21;
LBB0_18:                                // %L713
	cvt.rn.f32.s32 	%f319, %r22;
	sub.f32 	%f320, %f319, %f1;
	div.approx.f32 	%f26, %f320, %f177;
	setp.eq.f32 	%p48, %f26, 0f00000000;
	mov.f32 	%f748, %f750;
	@%p48 bra 	LBB0_20;
// %bb.19:                              // %L730
	sin.approx.f32 	%f350, %f26;
	div.approx.f32 	%f748, %f350, %f26;
LBB0_20:                                // %L733
	or.b32  	%r228, %r17, 24;
	or.b32  	%r24, %r17, 28;
	cvt.rn.f32.s32 	%f354, %r228;
	sub.f32 	%f355, %f354, %f1;
	div.approx.f32 	%f30, %f355, %f177;
	setp.eq.f32 	%p54, %f30, 0f00000000;
	mov.f32 	%f749, %f750;
	@%p54 bra 	LBB0_22;
// %bb.21:                              // %L812
	sin.approx.f32 	%f385, %f30;
	div.approx.f32 	%f749, %f385, %f30;
LBB0_22:                                // %L815
	cvt.rn.f32.s32 	%f388, %r24;
	sub.f32 	%f389, %f388, %f1;
	div.approx.f32 	%f35, %f389, %f177;
	setp.eq.f32 	%p60, %f35, 0f00000000;
	@%p60 bra 	LBB0_24;
// %bb.23:                              // %L832
	sin.approx.f32 	%f419, %f35;
	div.approx.f32 	%f750, %f419, %f35;
LBB0_24:                                // %L835
	mul.lo.s32 	%r26, %r17, 7;
	cvt.rn.f32.s32 	%f422, %r26;
	div.approx.f32 	%f38, %f422, %f177;
	abs.f32 	%f753, %f38;
	setp.lt.f32 	%p61, %f753, 0f40000000;
	@%p61 bra 	LBB0_36;
// %bb.25:
	setp.gtu.f32 	%p62, %f753, 0f4B800000;
	@%p62 bra 	LBB0_32;
	bra.uni 	LBB0_26;
LBB0_32:
	mov.b32 	%r28, %f753;
	and.b32  	%r246, %r28, 8388607;
	or.b32  	%r1359, %r246, 1065353216;
	mov.b32 	%f752, %r1359;
	add.s32 	%r247, %r28, -1073741824;
	and.b32  	%r1360, %r247, -8388608;
	setp.eq.s32 	%p68, %r1360, 0;
	@%p68 bra 	LBB0_35;
// %bb.33:                              // %__nv_fmaf_rn.exit4.i.i.i.preheader
	mov.f32 	%f433, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f432,%f433;
	// end inline asm
LBB0_34:                                // %__nv_fmaf_rn.exit4.i.i.i
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r248, %r1360, 192937984;
	add.s32 	%r249, %r248, %r1359;
	mov.b32 	%f434, %r249;
	mul.f32 	%f435, %f432, %f434;
	sub.f32 	%f436, %f434, %f435;
	fma.rn.f32 	%f437, %f436, %f432, %f435;
	sub.f32 	%f438, %f434, %f437;
	fma.rz.f32 	%f439, %f438, %f432, %f437;
	cvt.rzi.f32.f32 	%f440, %f439;
	sub.f32 	%f752, %f434, %f440;
	sub.s32 	%r1360, %r1360, %r248;
	mov.b32 	%r1359, %f752;
	setp.ne.s32 	%p69, %r1360, 0;
	setp.ne.s32 	%p70, %r1359, 0;
	and.pred  	%p71, %p69, %p70;
	@%p71 bra 	LBB0_34;
LBB0_35:                                // %__internal_fmodf_slowpath_mod.exit.i.i
	setp.gt.u32 	%p72, %r28, 2139095039;
	selp.f32 	%f441, 0f7FFFFFFF, 0f4B800000, %p72;
	mul.f32 	%f442, %f752, 0f34000000;
	mul.f32 	%f753, %f441, %f442;
	bra.uni 	LBB0_36;
LBB0_26:                                // %__nv_fast_fdividef.exit.i.i.i
	div.approx.f32 	%f425, %f753, %f145;
	cvt.rzi.f32.f32 	%f751, %f425;
	fma.rn.f32 	%f41, %f751, 0fC0000000, %f753;
	mov.b32 	%r27, %f41;
	setp.lt.u32 	%p63, %r27, 1073741824;
	@%p63 bra 	LBB0_31;
// %bb.27:
	setp.lt.u32 	%p64, %r27, -2147483647;
	@%p64 bra 	LBB0_29;
// %bb.28:
	add.f32 	%f430, %f751, 0fBF800000;
	setp.lt.f32 	%p67, %f41, 0fC0000000;
	add.f32 	%f431, %f430, 0fBF800000;
	selp.f32 	%f751, %f431, %f430, %p67;
	bra.uni 	LBB0_31;
LBB0_29:
	add.f32 	%f751, %f751, 0f3F800000;
	setp.ltu.f32 	%p65, %f41, 0f40800000;
	@%p65 bra 	LBB0_31;
// %bb.30:                              // %__nv_fmaf_rn.exit.i.i.i
	add.f32 	%f426, %f751, 0f3F800000;
	fma.rn.f32 	%f428, %f145, 0fC0400000, %f41;
	setp.ge.f32 	%p66, %f428, 0f00000000;
	add.f32 	%f429, %f426, 0f3F800000;
	selp.f32 	%f751, %f429, %f426, %p66;
LBB0_31:                                // %__internal_fmodf_fastpath_quot.exit.i.i
	fma.rn.f32 	%f753, %f751, 0fC0000000, %f753;
LBB0_36:                                // %__internal_fmodf_kernel.exit.i
	abs.f32 	%f443, %f753;
	setp.gtu.f32 	%p73, %f443, 0f7F800000;
	@%p73 bra 	LBB0_38;
// %bb.37:
	mov.b32 	%r250, %f38;
	and.b32  	%r251, %r250, -2147483648;
	mov.b32 	%r252, %f753;
	or.b32  	%r253, %r251, %r252;
	mov.b32 	%f753, %r253;
LBB0_38:                                // %__nv_fmodf.exit
	add.s32 	%r262, %r26, 28;
	cvt.rn.f32.s32 	%f474, %r262;
	div.approx.f32 	%f57, %f474, %f177;
	abs.f32 	%f757, %f57;
	setp.lt.f32 	%p81, %f757, 0f40000000;
	@%p81 bra 	LBB0_50;
// %bb.39:
	setp.gtu.f32 	%p82, %f757, 0f4B800000;
	@%p82 bra 	LBB0_46;
	bra.uni 	LBB0_40;
LBB0_46:
	mov.b32 	%r36, %f757;
	and.b32  	%r263, %r36, 8388607;
	or.b32  	%r1361, %r263, 1065353216;
	mov.b32 	%f756, %r1361;
	add.s32 	%r264, %r36, -1073741824;
	and.b32  	%r1362, %r264, -8388608;
	setp.eq.s32 	%p88, %r1362, 0;
	@%p88 bra 	LBB0_49;
// %bb.47:                              // %__nv_fmaf_rn.exit4.i.i.i1027.preheader
	mov.f32 	%f485, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f484,%f485;
	// end inline asm
LBB0_48:                                // %__nv_fmaf_rn.exit4.i.i.i1027
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r265, %r1362, 192937984;
	add.s32 	%r266, %r265, %r1361;
	mov.b32 	%f486, %r266;
	mul.f32 	%f487, %f484, %f486;
	sub.f32 	%f488, %f486, %f487;
	fma.rn.f32 	%f489, %f488, %f484, %f487;
	sub.f32 	%f490, %f486, %f489;
	fma.rz.f32 	%f491, %f490, %f484, %f489;
	cvt.rzi.f32.f32 	%f492, %f491;
	sub.f32 	%f756, %f486, %f492;
	sub.s32 	%r1362, %r1362, %r265;
	mov.b32 	%r1361, %f756;
	setp.ne.s32 	%p89, %r1362, 0;
	setp.ne.s32 	%p90, %r1361, 0;
	and.pred  	%p91, %p89, %p90;
	@%p91 bra 	LBB0_48;
LBB0_49:                                // %__internal_fmodf_slowpath_mod.exit.i.i1029
	setp.gt.u32 	%p92, %r36, 2139095039;
	selp.f32 	%f493, 0f7FFFFFFF, 0f4B800000, %p92;
	mul.f32 	%f494, %f756, 0f34000000;
	mul.f32 	%f757, %f493, %f494;
	bra.uni 	LBB0_50;
LBB0_40:                                // %__nv_fast_fdividef.exit.i.i.i999
	div.approx.f32 	%f477, %f757, %f145;
	cvt.rzi.f32.f32 	%f755, %f477;
	fma.rn.f32 	%f60, %f755, 0fC0000000, %f757;
	mov.b32 	%r35, %f60;
	setp.lt.u32 	%p83, %r35, 1073741824;
	@%p83 bra 	LBB0_45;
// %bb.41:
	setp.lt.u32 	%p84, %r35, -2147483647;
	@%p84 bra 	LBB0_43;
// %bb.42:
	add.f32 	%f482, %f755, 0fBF800000;
	setp.lt.f32 	%p87, %f60, 0fC0000000;
	add.f32 	%f483, %f482, 0fBF800000;
	selp.f32 	%f755, %f483, %f482, %p87;
	bra.uni 	LBB0_45;
LBB0_43:
	add.f32 	%f755, %f755, 0f3F800000;
	setp.ltu.f32 	%p85, %f60, 0f40800000;
	@%p85 bra 	LBB0_45;
// %bb.44:                              // %__nv_fmaf_rn.exit.i.i.i1004
	add.f32 	%f478, %f755, 0f3F800000;
	fma.rn.f32 	%f480, %f145, 0fC0400000, %f60;
	setp.ge.f32 	%p86, %f480, 0f00000000;
	add.f32 	%f481, %f478, 0f3F800000;
	selp.f32 	%f755, %f481, %f478, %p86;
LBB0_45:                                // %__internal_fmodf_fastpath_quot.exit.i.i1008
	fma.rn.f32 	%f757, %f755, 0fC0000000, %f757;
LBB0_50:                                // %__internal_fmodf_kernel.exit.i1033
	shr.u32 	%r14, %r5, 1;
	abs.f32 	%f495, %f757;
	setp.gtu.f32 	%p93, %f495, 0f7F800000;
	@%p93 bra 	LBB0_52;
// %bb.51:
	mov.b32 	%r267, %f57;
	and.b32  	%r268, %r267, -2147483648;
	mov.b32 	%r269, %f757;
	or.b32  	%r270, %r268, %r269;
	mov.b32 	%f757, %r270;
LBB0_52:                                // %__nv_fmodf.exit1034
	bfe.u32 	%r285, %r5, 2, 1;
	shr.u32 	%r45, %r5, 3;
	and.b32  	%r46, %r45, 2;
	or.b32  	%r286, %r285, %r46;
	and.b32  	%r47, %r14, 4;
	or.b32  	%r48, %r286, %r47;
	and.b32  	%r287, %r5, 3;
	mul.lo.s32 	%r288, %r287, %r48;
	shl.b32 	%r289, %r288, 1;
	neg.s32 	%r290, %r289;
	cvt.rn.f32.s32 	%f528, %r290;
	div.approx.f32 	%f74, %f528, %f177;
	abs.f32 	%f761, %f74;
	setp.lt.f32 	%p101, %f761, 0f40000000;
	@%p101 bra 	LBB0_64;
// %bb.53:
	setp.gtu.f32 	%p102, %f761, 0f4B800000;
	@%p102 bra 	LBB0_60;
	bra.uni 	LBB0_54;
LBB0_60:
	mov.b32 	%r50, %f761;
	and.b32  	%r291, %r50, 8388607;
	or.b32  	%r1363, %r291, 1065353216;
	mov.b32 	%f760, %r1363;
	add.s32 	%r292, %r50, -1073741824;
	and.b32  	%r1364, %r292, -8388608;
	setp.eq.s32 	%p108, %r1364, 0;
	@%p108 bra 	LBB0_63;
// %bb.61:                              // %__nv_fmaf_rn.exit4.i.i.i1073.preheader
	mov.f32 	%f539, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f538,%f539;
	// end inline asm
LBB0_62:                                // %__nv_fmaf_rn.exit4.i.i.i1073
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r293, %r1364, 192937984;
	add.s32 	%r294, %r293, %r1363;
	mov.b32 	%f540, %r294;
	mul.f32 	%f541, %f538, %f540;
	sub.f32 	%f542, %f540, %f541;
	fma.rn.f32 	%f543, %f542, %f538, %f541;
	sub.f32 	%f544, %f540, %f543;
	fma.rz.f32 	%f545, %f544, %f538, %f543;
	cvt.rzi.f32.f32 	%f546, %f545;
	sub.f32 	%f760, %f540, %f546;
	sub.s32 	%r1364, %r1364, %r293;
	mov.b32 	%r1363, %f760;
	setp.ne.s32 	%p109, %r1364, 0;
	setp.ne.s32 	%p110, %r1363, 0;
	and.pred  	%p111, %p109, %p110;
	@%p111 bra 	LBB0_62;
LBB0_63:                                // %__internal_fmodf_slowpath_mod.exit.i.i1075
	setp.gt.u32 	%p112, %r50, 2139095039;
	selp.f32 	%f547, 0f7FFFFFFF, 0f4B800000, %p112;
	mul.f32 	%f548, %f760, 0f34000000;
	mul.f32 	%f761, %f547, %f548;
	bra.uni 	LBB0_64;
LBB0_54:                                // %__nv_fast_fdividef.exit.i.i.i1045
	div.approx.f32 	%f531, %f761, %f145;
	cvt.rzi.f32.f32 	%f759, %f531;
	fma.rn.f32 	%f77, %f759, 0fC0000000, %f761;
	mov.b32 	%r49, %f77;
	setp.lt.u32 	%p103, %r49, 1073741824;
	@%p103 bra 	LBB0_59;
// %bb.55:
	setp.lt.u32 	%p104, %r49, -2147483647;
	@%p104 bra 	LBB0_57;
// %bb.56:
	add.f32 	%f536, %f759, 0fBF800000;
	setp.lt.f32 	%p107, %f77, 0fC0000000;
	add.f32 	%f537, %f536, 0fBF800000;
	selp.f32 	%f759, %f537, %f536, %p107;
	bra.uni 	LBB0_59;
LBB0_57:
	add.f32 	%f759, %f759, 0f3F800000;
	setp.ltu.f32 	%p105, %f77, 0f40800000;
	@%p105 bra 	LBB0_59;
// %bb.58:                              // %__nv_fmaf_rn.exit.i.i.i1050
	add.f32 	%f532, %f759, 0f3F800000;
	fma.rn.f32 	%f534, %f145, 0fC0400000, %f77;
	setp.ge.f32 	%p106, %f534, 0f00000000;
	add.f32 	%f535, %f532, 0f3F800000;
	selp.f32 	%f759, %f535, %f532, %p106;
LBB0_59:                                // %__internal_fmodf_fastpath_quot.exit.i.i1054
	fma.rn.f32 	%f761, %f759, 0fC0000000, %f761;
LBB0_64:                                // %__internal_fmodf_kernel.exit.i1079
	abs.f32 	%f549, %f761;
	setp.gtu.f32 	%p113, %f549, 0f7F800000;
	@%p113 bra 	LBB0_66;
// %bb.65:
	mov.b32 	%r295, %f74;
	and.b32  	%r296, %r295, -2147483648;
	mov.b32 	%r297, %f761;
	or.b32  	%r298, %r296, %r297;
	mov.b32 	%f761, %r298;
LBB0_66:                                // %__nv_fmodf.exit1080
	shl.b32 	%r57, %r5, 1;
	and.b32  	%r307, %r57, 6;
	mov.u32 	%r308, -8;
	sub.s32 	%r309, %r308, %r307;
	mul.lo.s32 	%r310, %r48, %r309;
	cvt.rn.f32.s32 	%f580, %r310;
	div.approx.f32 	%f93, %f580, %f177;
	abs.f32 	%f765, %f93;
	setp.lt.f32 	%p121, %f765, 0f40000000;
	@%p121 bra 	LBB0_78;
// %bb.67:
	setp.gtu.f32 	%p122, %f765, 0f4B800000;
	@%p122 bra 	LBB0_74;
	bra.uni 	LBB0_68;
LBB0_74:
	mov.b32 	%r59, %f765;
	and.b32  	%r311, %r59, 8388607;
	or.b32  	%r1365, %r311, 1065353216;
	mov.b32 	%f764, %r1365;
	add.s32 	%r312, %r59, -1073741824;
	and.b32  	%r1366, %r312, -8388608;
	setp.eq.s32 	%p128, %r1366, 0;
	@%p128 bra 	LBB0_77;
// %bb.75:                              // %__nv_fmaf_rn.exit4.i.i.i1119.preheader
	mov.f32 	%f591, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f590,%f591;
	// end inline asm
LBB0_76:                                // %__nv_fmaf_rn.exit4.i.i.i1119
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r313, %r1366, 192937984;
	add.s32 	%r314, %r313, %r1365;
	mov.b32 	%f592, %r314;
	mul.f32 	%f593, %f590, %f592;
	sub.f32 	%f594, %f592, %f593;
	fma.rn.f32 	%f595, %f594, %f590, %f593;
	sub.f32 	%f596, %f592, %f595;
	fma.rz.f32 	%f597, %f596, %f590, %f595;
	cvt.rzi.f32.f32 	%f598, %f597;
	sub.f32 	%f764, %f592, %f598;
	sub.s32 	%r1366, %r1366, %r313;
	mov.b32 	%r1365, %f764;
	setp.ne.s32 	%p129, %r1366, 0;
	setp.ne.s32 	%p130, %r1365, 0;
	and.pred  	%p131, %p129, %p130;
	@%p131 bra 	LBB0_76;
LBB0_77:                                // %__internal_fmodf_slowpath_mod.exit.i.i1121
	setp.gt.u32 	%p132, %r59, 2139095039;
	selp.f32 	%f599, 0f7FFFFFFF, 0f4B800000, %p132;
	mul.f32 	%f600, %f764, 0f34000000;
	mul.f32 	%f765, %f599, %f600;
	bra.uni 	LBB0_78;
LBB0_68:                                // %__nv_fast_fdividef.exit.i.i.i1091
	div.approx.f32 	%f583, %f765, %f145;
	cvt.rzi.f32.f32 	%f763, %f583;
	fma.rn.f32 	%f96, %f763, 0fC0000000, %f765;
	mov.b32 	%r58, %f96;
	setp.lt.u32 	%p123, %r58, 1073741824;
	@%p123 bra 	LBB0_73;
// %bb.69:
	setp.lt.u32 	%p124, %r58, -2147483647;
	@%p124 bra 	LBB0_71;
// %bb.70:
	add.f32 	%f588, %f763, 0fBF800000;
	setp.lt.f32 	%p127, %f96, 0fC0000000;
	add.f32 	%f589, %f588, 0fBF800000;
	selp.f32 	%f763, %f589, %f588, %p127;
	bra.uni 	LBB0_73;
LBB0_71:
	add.f32 	%f763, %f763, 0f3F800000;
	setp.ltu.f32 	%p125, %f96, 0f40800000;
	@%p125 bra 	LBB0_73;
// %bb.72:                              // %__nv_fmaf_rn.exit.i.i.i1096
	add.f32 	%f584, %f763, 0f3F800000;
	fma.rn.f32 	%f586, %f145, 0fC0400000, %f96;
	setp.ge.f32 	%p126, %f586, 0f00000000;
	add.f32 	%f587, %f584, 0f3F800000;
	selp.f32 	%f763, %f587, %f584, %p126;
LBB0_73:                                // %__internal_fmodf_fastpath_quot.exit.i.i1100
	fma.rn.f32 	%f765, %f763, 0fC0000000, %f765;
LBB0_78:                                // %__internal_fmodf_kernel.exit.i1125
	mov.f32 	%f174, 0f00000000;
	abs.f32 	%f601, %f765;
	setp.gtu.f32 	%p133, %f601, 0f7F800000;
	@%p133 bra 	LBB0_80;
// %bb.79:
	mov.b32 	%r315, %f93;
	and.b32  	%r316, %r315, -2147483648;
	mov.b32 	%r317, %f765;
	or.b32  	%r318, %r316, %r317;
	mov.b32 	%f765, %r318;
LBB0_80:                                // %__nv_fmodf.exit1126
	mov.f32 	%f634, 0f3F800000;
	div.approx.f32 	%f110, %f174, %f634;
	abs.f32 	%f773, %f110;
	setp.lt.f32 	%p141, %f773, 0f40000000;
	setp.gtu.f32 	%p243, %f773, 0f4B800000;
	mov.f32 	%f769, %f773;
	@%p141 bra 	LBB0_99;
// %bb.81:
	@%p243 bra 	LBB0_95;
	bra.uni 	LBB0_82;
LBB0_95:
	mov.b32 	%r84, %f773;
	and.b32  	%r339, %r84, 8388607;
	or.b32  	%r1375, %r339, 1065353216;
	mov.b32 	%f768, %r1375;
	add.s32 	%r340, %r84, -1073741824;
	and.b32  	%r1376, %r340, -8388608;
	setp.eq.s32 	%p148, %r1376, 0;
	@%p148 bra 	LBB0_98;
// %bb.96:                              // %__nv_fmaf_rn.exit4.i.i.i1165.preheader
	// begin inline asm
	rcp.approx.ftz.f32 %f643,%f634;
	// end inline asm
LBB0_97:                                // %__nv_fmaf_rn.exit4.i.i.i1165
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r341, %r1376, 192937984;
	add.s32 	%r342, %r341, %r1375;
	mov.b32 	%f645, %r342;
	mul.f32 	%f646, %f643, %f645;
	sub.f32 	%f647, %f645, %f646;
	fma.rn.f32 	%f648, %f647, %f643, %f646;
	sub.f32 	%f649, %f645, %f648;
	fma.rz.f32 	%f650, %f649, %f643, %f648;
	cvt.rzi.f32.f32 	%f651, %f650;
	sub.f32 	%f768, %f645, %f651;
	sub.s32 	%r1376, %r1376, %r341;
	mov.b32 	%r1375, %f768;
	setp.ne.s32 	%p149, %r1376, 0;
	setp.ne.s32 	%p150, %r1375, 0;
	and.pred  	%p151, %p149, %p150;
	@%p151 bra 	LBB0_97;
LBB0_98:                                // %__internal_fmodf_slowpath_mod.exit.i.i1167
	setp.gt.u32 	%p152, %r84, 2139095039;
	selp.f32 	%f652, 0f7FFFFFFF, 0f4B800000, %p152;
	mul.f32 	%f653, %f768, 0f34000000;
	mul.f32 	%f769, %f652, %f653;
	bra.uni 	LBB0_99;
LBB0_82:                                // %__nv_fast_fdividef.exit.i.i.i1137
	div.approx.f32 	%f636, %f773, %f145;
	cvt.rzi.f32.f32 	%f767, %f636;
	fma.rn.f32 	%f113, %f767, 0fC0000000, %f773;
	mov.b32 	%r83, %f113;
	setp.lt.u32 	%p143, %r83, 1073741824;
	@%p143 bra 	LBB0_94;
// %bb.83:
	setp.lt.u32 	%p144, %r83, -2147483647;
	@%p144 bra 	LBB0_92;
// %bb.84:
	add.f32 	%f641, %f767, 0fBF800000;
	setp.lt.f32 	%p147, %f113, 0fC0000000;
	add.f32 	%f642, %f641, 0fBF800000;
	selp.f32 	%f767, %f642, %f641, %p147;
	bra.uni 	LBB0_94;
LBB0_92:
	add.f32 	%f767, %f767, 0f3F800000;
	setp.ltu.f32 	%p145, %f113, 0f40800000;
	@%p145 bra 	LBB0_94;
// %bb.93:                              // %__nv_fmaf_rn.exit.i.i.i1142
	add.f32 	%f637, %f767, 0f3F800000;
	fma.rn.f32 	%f639, %f145, 0fC0400000, %f113;
	setp.ge.f32 	%p146, %f639, 0f00000000;
	add.f32 	%f640, %f637, 0f3F800000;
	selp.f32 	%f767, %f640, %f637, %p146;
LBB0_94:                                // %__internal_fmodf_fastpath_quot.exit.i.i1146
	fma.rn.f32 	%f769, %f767, 0fC0000000, %f773;
LBB0_99:                                // %__internal_fmodf_kernel.exit.i1171
	abs.f32 	%f654, %f769;
	setp.gtu.f32 	%p153, %f654, 0f7F800000;
	mov.b32 	%r343, %f110;
	and.b32  	%r91, %r343, -2147483648;
	@%p153 bra 	LBB0_101;
// %bb.100:
	mov.b32 	%r344, %f769;
	or.b32  	%r345, %r91, %r344;
	mov.b32 	%f769, %r345;
LBB0_101:                               // %__nv_fmodf.exit1172
	@%p141 bra 	LBB0_113;
// %bb.102:
	@%p243 bra 	LBB0_109;
	bra.uni 	LBB0_103;
LBB0_109:
	mov.b32 	%r93, %f773;
	and.b32  	%r354, %r93, 8388607;
	or.b32  	%r1377, %r354, 1065353216;
	mov.b32 	%f772, %r1377;
	add.s32 	%r355, %r93, -1073741824;
	and.b32  	%r1378, %r355, -8388608;
	setp.eq.s32 	%p169, %r1378, 0;
	@%p169 bra 	LBB0_112;
// %bb.110:                             // %__nv_fmaf_rn.exit4.i.i.i1211.preheader
	// begin inline asm
	rcp.approx.ftz.f32 %f696,%f634;
	// end inline asm
LBB0_111:                               // %__nv_fmaf_rn.exit4.i.i.i1211
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r356, %r1378, 192937984;
	add.s32 	%r357, %r356, %r1377;
	mov.b32 	%f698, %r357;
	mul.f32 	%f699, %f696, %f698;
	sub.f32 	%f700, %f698, %f699;
	fma.rn.f32 	%f701, %f700, %f696, %f699;
	sub.f32 	%f702, %f698, %f701;
	fma.rz.f32 	%f703, %f702, %f696, %f701;
	cvt.rzi.f32.f32 	%f704, %f703;
	sub.f32 	%f772, %f698, %f704;
	sub.s32 	%r1378, %r1378, %r356;
	mov.b32 	%r1377, %f772;
	setp.ne.s32 	%p170, %r1378, 0;
	setp.ne.s32 	%p171, %r1377, 0;
	and.pred  	%p172, %p170, %p171;
	@%p172 bra 	LBB0_111;
LBB0_112:                               // %__internal_fmodf_slowpath_mod.exit.i.i1213
	setp.gt.u32 	%p173, %r93, 2139095039;
	selp.f32 	%f705, 0f7FFFFFFF, 0f4B800000, %p173;
	mul.f32 	%f706, %f772, 0f34000000;
	mul.f32 	%f773, %f705, %f706;
	bra.uni 	LBB0_113;
LBB0_103:                               // %__nv_fast_fdividef.exit.i.i.i1183
	div.approx.f32 	%f689, %f773, %f145;
	cvt.rzi.f32.f32 	%f771, %f689;
	fma.rn.f32 	%f130, %f771, 0fC0000000, %f773;
	mov.b32 	%r92, %f130;
	setp.lt.u32 	%p164, %r92, 1073741824;
	@%p164 bra 	LBB0_108;
// %bb.104:
	setp.lt.u32 	%p165, %r92, -2147483647;
	@%p165 bra 	LBB0_106;
// %bb.105:
	add.f32 	%f694, %f771, 0fBF800000;
	setp.lt.f32 	%p168, %f130, 0fC0000000;
	add.f32 	%f695, %f694, 0fBF800000;
	selp.f32 	%f771, %f695, %f694, %p168;
	bra.uni 	LBB0_108;
LBB0_106:
	add.f32 	%f771, %f771, 0f3F800000;
	setp.ltu.f32 	%p166, %f130, 0f40800000;
	@%p166 bra 	LBB0_108;
// %bb.107:                             // %__nv_fmaf_rn.exit.i.i.i1188
	add.f32 	%f690, %f771, 0f3F800000;
	fma.rn.f32 	%f692, %f145, 0fC0400000, %f130;
	setp.ge.f32 	%p167, %f692, 0f00000000;
	add.f32 	%f693, %f690, 0f3F800000;
	selp.f32 	%f771, %f693, %f690, %p167;
LBB0_108:                               // %__internal_fmodf_fastpath_quot.exit.i.i1192
	fma.rn.f32 	%f773, %f771, 0fC0000000, %f773;
LBB0_113:                               // %__internal_fmodf_kernel.exit.i1217
	abs.f32 	%f707, %f773;
	setp.gtu.f32 	%p174, %f707, 0f7F800000;
	@%p174 bra 	LBB0_115;
// %bb.114:
	mov.b32 	%r358, %f773;
	or.b32  	%r359, %r91, %r358;
	mov.b32 	%f773, %r359;
LBB0_115:                               // %__nv_fmodf.exit1218
	setp.le.s32 	%p183, %r7, %r6;
	mov.u32 	%r1357, 0;
	@%p183 bra 	LBB0_122;
// %bb.116:                             // %L1242.lr.ph
	mov.f32 	%f149, 0f42040000;
	div.approx.f32 	%f150, %f148, %f149;
	div.approx.f32 	%f184, %f182, %f149;
	div.approx.f32 	%f219, %f217, %f149;
	div.approx.f32 	%f253, %f251, %f149;
	div.approx.f32 	%f288, %f286, %f149;
	div.approx.f32 	%f322, %f320, %f149;
	div.approx.f32 	%f357, %f355, %f149;
	div.approx.f32 	%f391, %f389, %f149;
	abs.f32 	%f151, %f150;
	abs.f32 	%f185, %f184;
	abs.f32 	%f220, %f219;
	abs.f32 	%f254, %f253;
	abs.f32 	%f289, %f288;
	abs.f32 	%f323, %f322;
	abs.f32 	%f358, %f357;
	abs.f32 	%f392, %f391;
	setp.gt.f32 	%p13, %f151, 0f4B800000;
	mul.f32 	%f152, %f150, 0f00000000;
	setp.gt.f32 	%p19, %f185, 0f4B800000;
	mul.f32 	%f186, %f184, 0f00000000;
	setp.gt.f32 	%p25, %f220, 0f4B800000;
	mul.f32 	%f221, %f219, 0f00000000;
	setp.gt.f32 	%p31, %f254, 0f4B800000;
	mul.f32 	%f255, %f253, 0f00000000;
	setp.gt.f32 	%p37, %f289, 0f4B800000;
	mul.f32 	%f290, %f288, 0f00000000;
	setp.gt.f32 	%p43, %f323, 0f4B800000;
	mul.f32 	%f324, %f322, 0f00000000;
	setp.gt.f32 	%p49, %f358, 0f4B800000;
	mul.f32 	%f359, %f357, 0f00000000;
	setp.gt.f32 	%p55, %f392, 0f4B800000;
	mul.f32 	%f393, %f391, 0f00000000;
	selp.f32 	%f153, %f152, %f150, %p13;
	selp.f32 	%f187, %f186, %f184, %p19;
	selp.f32 	%f222, %f221, %f219, %p25;
	selp.f32 	%f256, %f255, %f253, %p31;
	selp.f32 	%f291, %f290, %f288, %p37;
	selp.f32 	%f325, %f324, %f322, %p43;
	selp.f32 	%f360, %f359, %f357, %p49;
	selp.f32 	%f394, %f393, %f391, %p55;
	add.f32 	%f550, %f761, %f761;
	add.f32 	%f602, %f765, %f765;
	add.f32 	%f154, %f153, %f153;
	add.f32 	%f188, %f187, %f187;
	add.f32 	%f223, %f222, %f222;
	add.f32 	%f257, %f256, %f256;
	add.f32 	%f292, %f291, %f291;
	add.f32 	%f326, %f325, %f325;
	add.f32 	%f361, %f360, %f360;
	add.f32 	%f395, %f394, %f394;
	add.f32 	%f444, %f753, %f753;
	add.f32 	%f496, %f757, %f757;
	mov.b32 	%r299, %f550;
	mov.b32 	%r331, %f602;
	add.f32 	%f655, %f769, %f769;
	mov.b32 	%r175, %f154;
	mov.b32 	%r182, %f188;
	mov.b32 	%r193, %f223;
	mov.b32 	%r200, %f257;
	mov.b32 	%r211, %f292;
	mov.b32 	%r218, %f326;
	mov.b32 	%r229, %f361;
	mov.b32 	%r236, %f395;
	mov.b32 	%r254, %f444;
	mov.b32 	%r277, %f496;
	and.b32  	%r300, %r299, -2147483648;
	and.b32  	%r332, %r331, -2147483648;
	mov.b32 	%r346, %f655;
	and.b32  	%r176, %r175, -2147483648;
	and.b32  	%r183, %r182, -2147483648;
	and.b32  	%r194, %r193, -2147483648;
	and.b32  	%r201, %r200, -2147483648;
	and.b32  	%r212, %r211, -2147483648;
	and.b32  	%r219, %r218, -2147483648;
	and.b32  	%r230, %r229, -2147483648;
	and.b32  	%r237, %r236, -2147483648;
	and.b32  	%r255, %r254, -2147483648;
	and.b32  	%r278, %r277, -2147483648;
	or.b32  	%r301, %r300, 1056964608;
	or.b32  	%r333, %r332, 1056964608;
	and.b32  	%r347, %r346, -2147483648;
	or.b32  	%r177, %r176, 1056964608;
	or.b32  	%r184, %r183, 1056964608;
	or.b32  	%r195, %r194, 1056964608;
	or.b32  	%r202, %r201, 1056964608;
	or.b32  	%r213, %r212, 1056964608;
	or.b32  	%r220, %r219, 1056964608;
	or.b32  	%r231, %r230, 1056964608;
	or.b32  	%r238, %r237, 1056964608;
	or.b32  	%r256, %r255, 1056964608;
	or.b32  	%r279, %r278, 1056964608;
	mov.b32 	%f551, %r301;
	mov.b32 	%f603, %r333;
	or.b32  	%r348, %r347, 1056964608;
	mov.b32 	%f155, %r177;
	mov.b32 	%f189, %r184;
	mov.b32 	%f224, %r195;
	mov.b32 	%f258, %r202;
	mov.b32 	%f293, %r213;
	mov.b32 	%f327, %r220;
	mov.b32 	%f362, %r231;
	mov.b32 	%f396, %r238;
	mov.b32 	%f445, %r256;
	mov.b32 	%f497, %r279;
	add.f32 	%f552, %f550, %f551;
	abs.f32 	%f554, %f550;
	add.f32 	%f604, %f602, %f603;
	abs.f32 	%f606, %f602;
	cvt.u16.u32 	%rs1, %r5;
	mov.b32 	%f656, %r348;
	add.f32 	%f156, %f154, %f155;
	abs.f32 	%f158, %f154;
	add.f32 	%f190, %f188, %f189;
	abs.f32 	%f192, %f188;
	add.f32 	%f225, %f223, %f224;
	abs.f32 	%f227, %f223;
	add.f32 	%f259, %f257, %f258;
	abs.f32 	%f261, %f257;
	add.f32 	%f294, %f292, %f293;
	abs.f32 	%f296, %f292;
	add.f32 	%f328, %f326, %f327;
	abs.f32 	%f330, %f326;
	add.f32 	%f363, %f361, %f362;
	abs.f32 	%f365, %f361;
	add.f32 	%f397, %f395, %f396;
	abs.f32 	%f399, %f395;
	add.f32 	%f446, %f444, %f445;
	abs.f32 	%f448, %f444;
	add.f32 	%f498, %f496, %f497;
	abs.f32 	%f500, %f496;
	cvt.rzi.f32.f32 	%f553, %f552;
	setp.gt.f32 	%p114, %f554, 0f4B000000;
	cvt.rzi.f32.f32 	%f605, %f604;
	setp.gt.f32 	%p134, %f606, 0f4B000000;
	shr.u16 	%rs2, %rs1, 8;
	shl.b16 	%rs3, %rs1, 8;
	add.f32 	%f657, %f655, %f656;
	abs.f32 	%f659, %f655;
	cvt.rzi.f32.f32 	%f157, %f156;
	setp.gt.f32 	%p14, %f158, 0f4B000000;
	cvt.rzi.f32.f32 	%f191, %f190;
	setp.gt.f32 	%p20, %f192, 0f4B000000;
	cvt.rzi.f32.f32 	%f226, %f225;
	setp.gt.f32 	%p26, %f227, 0f4B000000;
	cvt.rzi.f32.f32 	%f260, %f259;
	setp.gt.f32 	%p32, %f261, 0f4B000000;
	cvt.rzi.f32.f32 	%f295, %f294;
	setp.gt.f32 	%p38, %f296, 0f4B000000;
	cvt.rzi.f32.f32 	%f329, %f328;
	setp.gt.f32 	%p44, %f330, 0f4B000000;
	cvt.rzi.f32.f32 	%f364, %f363;
	setp.gt.f32 	%p50, %f365, 0f4B000000;
	cvt.rzi.f32.f32 	%f398, %f397;
	setp.gt.f32 	%p56, %f399, 0f4B000000;
	cvt.rzi.f32.f32 	%f447, %f446;
	setp.gt.f32 	%p74, %f448, 0f4B000000;
	cvt.rzi.f32.f32 	%f499, %f498;
	setp.gt.f32 	%p94, %f500, 0f4B000000;
	selp.f32 	%f555, %f550, %f553, %p114;
	cvt.rzi.f32.f32 	%f556, %f550;
	setp.lt.f32 	%p115, %f554, 0f3F000000;
	selp.f32 	%f607, %f602, %f605, %p134;
	cvt.rzi.f32.f32 	%f608, %f602;
	setp.lt.f32 	%p135, %f606, 0f3F000000;
	or.b16  	%rs4, %rs3, %rs2;
	cvt.rzi.f32.f32 	%f658, %f657;
	setp.gt.f32 	%p156, %f659, 0f4B000000;
	selp.f32 	%f159, %f154, %f157, %p14;
	cvt.rzi.f32.f32 	%f160, %f154;
	setp.lt.f32 	%p15, %f158, 0f3F000000;
	selp.f32 	%f193, %f188, %f191, %p20;
	cvt.rzi.f32.f32 	%f194, %f188;
	setp.lt.f32 	%p21, %f192, 0f3F000000;
	selp.f32 	%f228, %f223, %f226, %p26;
	cvt.rzi.f32.f32 	%f229, %f223;
	setp.lt.f32 	%p27, %f227, 0f3F000000;
	selp.f32 	%f262, %f257, %f260, %p32;
	cvt.rzi.f32.f32 	%f263, %f257;
	setp.lt.f32 	%p33, %f261, 0f3F000000;
	selp.f32 	%f297, %f292, %f295, %p38;
	cvt.rzi.f32.f32 	%f298, %f292;
	setp.lt.f32 	%p39, %f296, 0f3F000000;
	selp.f32 	%f331, %f326, %f329, %p44;
	cvt.rzi.f32.f32 	%f332, %f326;
	setp.lt.f32 	%p45, %f330, 0f3F000000;
	selp.f32 	%f366, %f361, %f364, %p50;
	cvt.rzi.f32.f32 	%f367, %f361;
	setp.lt.f32 	%p51, %f365, 0f3F000000;
	selp.f32 	%f400, %f395, %f398, %p56;
	cvt.rzi.f32.f32 	%f401, %f395;
	setp.lt.f32 	%p57, %f399, 0f3F000000;
	selp.f32 	%f449, %f444, %f447, %p74;
	cvt.rzi.f32.f32 	%f450, %f444;
	setp.lt.f32 	%p75, %f448, 0f3F000000;
	selp.f32 	%f501, %f496, %f499, %p94;
	cvt.rzi.f32.f32 	%f502, %f496;
	setp.lt.f32 	%p95, %f500, 0f3F000000;
	selp.f32 	%f557, %f556, %f555, %p115;
	selp.f32 	%f609, %f608, %f607, %p135;
	shr.u16 	%rs6, %rs4, 4;
	selp.f32 	%f660, %f655, %f658, %p156;
	cvt.rzi.f32.f32 	%f661, %f655;
	setp.lt.f32 	%p157, %f659, 0f3F000000;
	selp.f32 	%f161, %f160, %f159, %p15;
	selp.f32 	%f195, %f194, %f193, %p21;
	selp.f32 	%f230, %f229, %f228, %p27;
	selp.f32 	%f264, %f263, %f262, %p33;
	selp.f32 	%f299, %f298, %f297, %p39;
	selp.f32 	%f333, %f332, %f331, %p45;
	selp.f32 	%f368, %f367, %f366, %p51;
	selp.f32 	%f402, %f401, %f400, %p57;
	selp.f32 	%f451, %f450, %f449, %p75;
	selp.f32 	%f503, %f502, %f501, %p95;
	fma.rn.f32 	%f558, %f557, 0fBF000000, %f761;
	fma.rn.f32 	%f610, %f609, 0fBF000000, %f765;
	shl.b16 	%rs5, %rs4, 4;
	and.b16  	%rs7, %rs6, 3840;
	selp.f32 	%f662, %f661, %f660, %p157;
	fma.rn.f32 	%f162, %f161, 0fBF000000, %f153;
	fma.rn.f32 	%f196, %f195, 0fBF000000, %f187;
	fma.rn.f32 	%f231, %f230, 0fBF000000, %f222;
	fma.rn.f32 	%f265, %f264, 0fBF000000, %f256;
	fma.rn.f32 	%f300, %f299, 0fBF000000, %f291;
	fma.rn.f32 	%f334, %f333, 0fBF000000, %f325;
	fma.rn.f32 	%f369, %f368, 0fBF000000, %f360;
	fma.rn.f32 	%f403, %f402, 0fBF000000, %f394;
	fma.rn.f32 	%f452, %f451, 0fBF000000, %f753;
	fma.rn.f32 	%f504, %f503, 0fBF000000, %f757;
	mul.f32 	%f559, %f558, %f558;
	mul.f32 	%f611, %f610, %f610;
	or.b16  	%rs8, %rs7, %rs5;
	fma.rn.f32 	%f663, %f662, 0fBF000000, %f769;
	mul.f32 	%f163, %f162, %f162;
	mul.f32 	%f197, %f196, %f196;
	mul.f32 	%f232, %f231, %f231;
	mul.f32 	%f266, %f265, %f265;
	mul.f32 	%f301, %f300, %f300;
	mul.f32 	%f335, %f334, %f334;
	mul.f32 	%f370, %f369, %f369;
	mul.f32 	%f404, %f403, %f403;
	mul.f32 	%f453, %f452, %f452;
	mul.f32 	%f505, %f504, %f504;
	fma.rn.f32 	%f560, %f559, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f561, %f559, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f612, %f611, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f613, %f611, 0f3E684E12, 0fBFAAD2E0;
	and.b16  	%rs9, %rs8, 13107;
	shr.u16 	%rs11, %rs8, 2;
	mul.f32 	%f664, %f663, %f663;
	cvt.rzi.s32.f32 	%r178, %f161;
	fma.rn.f32 	%f164, %f163, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f165, %f163, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r185, %f195;
	fma.rn.f32 	%f198, %f197, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f199, %f197, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r196, %f230;
	fma.rn.f32 	%f233, %f232, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f234, %f232, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r203, %f264;
	fma.rn.f32 	%f267, %f266, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f268, %f266, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r214, %f299;
	fma.rn.f32 	%f302, %f301, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f303, %f301, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r221, %f333;
	fma.rn.f32 	%f336, %f335, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f337, %f335, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r232, %f368;
	fma.rn.f32 	%f371, %f370, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f372, %f370, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r239, %f402;
	fma.rn.f32 	%f405, %f404, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f406, %f404, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f454, %f453, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f455, %f453, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f506, %f505, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f507, %f505, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r302, %f557;
	fma.rn.f32 	%f562, %f560, %f559, 0fC0A55DF6;
	fma.rn.f32 	%f563, %f561, %f559, 0f4081E0CF;
	fma.rn.f32 	%f564, %f559, %f558, 0f00000000;
	cvt.rzi.s32.f32 	%r334, %f609;
	fma.rn.f32 	%f614, %f612, %f611, 0fC0A55DF6;
	fma.rn.f32 	%f615, %f613, %f611, 0f4081E0CF;
	fma.rn.f32 	%f616, %f611, %f610, 0f00000000;
	shl.b16 	%rs10, %rs9, 2;
	and.b16  	%rs12, %rs11, 13107;
	fma.rn.f32 	%f665, %f664, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f666, %f664, 0f3E684E12, 0fBFAAD2E0;
	add.s32 	%r179, %r178, 1;
	fma.rn.f32 	%f166, %f164, %f163, 0fC0A55DF6;
	fma.rn.f32 	%f167, %f165, %f163, 0f4081E0CF;
	fma.rn.f32 	%f168, %f163, %f162, 0f00000000;
	add.s32 	%r186, %r185, 1;
	fma.rn.f32 	%f200, %f198, %f197, 0fC0A55DF6;
	fma.rn.f32 	%f201, %f199, %f197, 0f4081E0CF;
	fma.rn.f32 	%f202, %f197, %f196, 0f00000000;
	add.s32 	%r197, %r196, 1;
	fma.rn.f32 	%f235, %f233, %f232, 0fC0A55DF6;
	fma.rn.f32 	%f236, %f234, %f232, 0f4081E0CF;
	fma.rn.f32 	%f237, %f232, %f231, 0f00000000;
	add.s32 	%r204, %r203, 1;
	fma.rn.f32 	%f269, %f267, %f266, 0fC0A55DF6;
	fma.rn.f32 	%f270, %f268, %f266, 0f4081E0CF;
	fma.rn.f32 	%f271, %f266, %f265, 0f00000000;
	add.s32 	%r215, %r214, 1;
	fma.rn.f32 	%f304, %f302, %f301, 0fC0A55DF6;
	fma.rn.f32 	%f305, %f303, %f301, 0f4081E0CF;
	fma.rn.f32 	%f306, %f301, %f300, 0f00000000;
	add.s32 	%r222, %r221, 1;
	fma.rn.f32 	%f338, %f336, %f335, 0fC0A55DF6;
	fma.rn.f32 	%f339, %f337, %f335, 0f4081E0CF;
	fma.rn.f32 	%f340, %f335, %f334, 0f00000000;
	add.s32 	%r233, %r232, 1;
	fma.rn.f32 	%f373, %f371, %f370, 0fC0A55DF6;
	fma.rn.f32 	%f374, %f372, %f370, 0f4081E0CF;
	fma.rn.f32 	%f375, %f370, %f369, 0f00000000;
	add.s32 	%r240, %r239, 1;
	fma.rn.f32 	%f407, %f405, %f404, 0fC0A55DF6;
	fma.rn.f32 	%f408, %f406, %f404, 0f4081E0CF;
	fma.rn.f32 	%f409, %f404, %f403, 0f00000000;
	cvt.rzi.s32.f32 	%r257, %f451;
	fma.rn.f32 	%f456, %f454, %f453, 0fC0A55DF6;
	fma.rn.f32 	%f457, %f455, %f453, 0f4081E0CF;
	fma.rn.f32 	%f458, %f453, %f452, 0f00000000;
	cvt.rzi.s32.f32 	%r280, %f503;
	fma.rn.f32 	%f508, %f506, %f505, 0fC0A55DF6;
	fma.rn.f32 	%f509, %f507, %f505, 0f4081E0CF;
	fma.rn.f32 	%f510, %f505, %f504, 0f00000000;
	fma.rn.f32 	%f565, %f563, %f559, 0fC09DE9E6;
	fma.rn.f32 	%f566, %f562, %f564, 0f00000000;
	and.b32  	%r303, %r302, 1;
	fma.rn.f32 	%f617, %f615, %f611, 0fC09DE9E6;
	fma.rn.f32 	%f618, %f614, %f616, 0f00000000;
	and.b32  	%r335, %r334, 1;
	or.b16  	%rs13, %rs12, %rs10;
	cvt.rzi.s32.f32 	%r349, %f662;
	fma.rn.f32 	%f667, %f665, %f664, 0fC0A55DF6;
	fma.rn.f32 	%f668, %f666, %f664, 0f4081E0CF;
	fma.rn.f32 	%f669, %f664, %f663, 0f00000000;
	fma.rn.f32 	%f169, %f167, %f163, 0fC09DE9E6;
	fma.rn.f32 	%f170, %f166, %f168, 0f00000000;
	and.b32  	%r180, %r179, 1;
	fma.rn.f32 	%f203, %f201, %f197, 0fC09DE9E6;
	fma.rn.f32 	%f204, %f200, %f202, 0f00000000;
	and.b32  	%r187, %r186, 1;
	fma.rn.f32 	%f238, %f236, %f232, 0fC09DE9E6;
	fma.rn.f32 	%f239, %f235, %f237, 0f00000000;
	and.b32  	%r198, %r197, 1;
	fma.rn.f32 	%f272, %f270, %f266, 0fC09DE9E6;
	fma.rn.f32 	%f273, %f269, %f271, 0f00000000;
	and.b32  	%r205, %r204, 1;
	fma.rn.f32 	%f307, %f305, %f301, 0fC09DE9E6;
	fma.rn.f32 	%f308, %f304, %f306, 0f00000000;
	and.b32  	%r216, %r215, 1;
	fma.rn.f32 	%f341, %f339, %f335, 0fC09DE9E6;
	fma.rn.f32 	%f342, %f338, %f340, 0f00000000;
	and.b32  	%r223, %r222, 1;
	fma.rn.f32 	%f376, %f374, %f370, 0fC09DE9E6;
	fma.rn.f32 	%f377, %f373, %f375, 0f00000000;
	and.b32  	%r234, %r233, 1;
	fma.rn.f32 	%f410, %f408, %f404, 0fC09DE9E6;
	fma.rn.f32 	%f411, %f407, %f409, 0f00000000;
	and.b32  	%r241, %r240, 1;
	fma.rn.f32 	%f459, %f457, %f453, 0fC09DE9E6;
	fma.rn.f32 	%f460, %f456, %f458, 0f00000000;
	and.b32  	%r258, %r257, 1;
	fma.rn.f32 	%f511, %f509, %f505, 0fC09DE9E6;
	fma.rn.f32 	%f512, %f508, %f510, 0f00000000;
	and.b32  	%r281, %r280, 1;
	fma.rn.f32 	%f567, %f565, %f559, 0f3F800000;
	fma.rn.f32 	%f568, %f558, 0f40490FDB, %f566;
	setp.eq.b32 	%p116, %r303, 1;
	fma.rn.f32 	%f619, %f617, %f611, 0f3F800000;
	fma.rn.f32 	%f620, %f610, 0f40490FDB, %f618;
	setp.eq.b32 	%p136, %r335, 1;
	and.b16  	%rs14, %rs13, 20480;
	shr.u16 	%rs16, %rs13, 1;
	fma.rn.f32 	%f670, %f668, %f664, 0fC09DE9E6;
	fma.rn.f32 	%f671, %f667, %f669, 0f00000000;
	and.b32  	%r350, %r349, 1;
	fma.rn.f32 	%f171, %f169, %f163, 0f3F800000;
	fma.rn.f32 	%f172, %f162, 0f40490FDB, %f170;
	setp.eq.b32 	%p16, %r180, 1;
	fma.rn.f32 	%f205, %f203, %f197, 0f3F800000;
	fma.rn.f32 	%f206, %f196, 0f40490FDB, %f204;
	setp.eq.b32 	%p22, %r187, 1;
	fma.rn.f32 	%f240, %f238, %f232, 0f3F800000;
	fma.rn.f32 	%f241, %f231, 0f40490FDB, %f239;
	setp.eq.b32 	%p28, %r198, 1;
	fma.rn.f32 	%f274, %f272, %f266, 0f3F800000;
	fma.rn.f32 	%f275, %f265, 0f40490FDB, %f273;
	setp.eq.b32 	%p34, %r205, 1;
	fma.rn.f32 	%f309, %f307, %f301, 0f3F800000;
	fma.rn.f32 	%f310, %f300, 0f40490FDB, %f308;
	setp.eq.b32 	%p40, %r216, 1;
	fma.rn.f32 	%f343, %f341, %f335, 0f3F800000;
	fma.rn.f32 	%f344, %f334, 0f40490FDB, %f342;
	setp.eq.b32 	%p46, %r223, 1;
	fma.rn.f32 	%f378, %f376, %f370, 0f3F800000;
	fma.rn.f32 	%f379, %f369, 0f40490FDB, %f377;
	setp.eq.b32 	%p52, %r234, 1;
	fma.rn.f32 	%f412, %f410, %f404, 0f3F800000;
	fma.rn.f32 	%f413, %f403, 0f40490FDB, %f411;
	setp.eq.b32 	%p58, %r241, 1;
	fma.rn.f32 	%f461, %f459, %f453, 0f3F800000;
	fma.rn.f32 	%f462, %f452, 0f40490FDB, %f460;
	setp.eq.b32 	%p76, %r258, 1;
	fma.rn.f32 	%f513, %f511, %f505, 0f3F800000;
	fma.rn.f32 	%f514, %f504, 0f40490FDB, %f512;
	setp.eq.b32 	%p96, %r281, 1;
	selp.f32 	%f569, %f567, %f568, %p116;
	and.b32  	%r304, %r302, 2;
	selp.f32 	%f621, %f619, %f620, %p136;
	and.b32  	%r336, %r334, 2;
	shl.b16 	%rs15, %rs14, 1;
	and.b16  	%rs17, %rs16, 16384;
	fma.rn.f32 	%f672, %f670, %f664, 0f3F800000;
	fma.rn.f32 	%f673, %f663, 0f40490FDB, %f671;
	setp.eq.b32 	%p158, %r350, 1;
	selp.f32 	%f173, %f171, %f172, %p16;
	and.b32  	%r181, %r179, 2;
	selp.f32 	%f207, %f205, %f206, %p22;
	and.b32  	%r188, %r186, 2;
	selp.f32 	%f242, %f240, %f241, %p28;
	and.b32  	%r199, %r197, 2;
	selp.f32 	%f276, %f274, %f275, %p34;
	and.b32  	%r206, %r204, 2;
	selp.f32 	%f311, %f309, %f310, %p40;
	and.b32  	%r217, %r215, 2;
	selp.f32 	%f345, %f343, %f344, %p46;
	and.b32  	%r224, %r222, 2;
	selp.f32 	%f380, %f378, %f379, %p52;
	and.b32  	%r235, %r233, 2;
	selp.f32 	%f414, %f412, %f413, %p58;
	and.b32  	%r242, %r240, 2;
	selp.f32 	%f463, %f461, %f462, %p76;
	and.b32  	%r259, %r257, 2;
	selp.f32 	%f515, %f513, %f514, %p96;
	and.b32  	%r282, %r280, 2;
	setp.eq.s32 	%p117, %r304, 0;
	neg.f32 	%f571, %f569;
	add.s32 	%r305, %r302, 1;
	cvt.rzi.f32.f32 	%f576, %f761;
	setp.eq.s32 	%p137, %r336, 0;
	neg.f32 	%f623, %f621;
	add.s32 	%r337, %r334, 1;
	cvt.rzi.f32.f32 	%f628, %f765;
	or.b16  	%rs18, %rs17, %rs15;
	selp.f32 	%f674, %f672, %f673, %p158;
	and.b32  	%r351, %r349, 2;
	and.b32  	%r10, %r3, 120;
	and.b32  	%r11, %r5, 2;
	shl.b32 	%r12, %r5, 2;
	setp.eq.s32 	%p17, %r181, 0;
	sub.f32 	%f175, %f174, %f173;
	setp.eq.s32 	%p23, %r188, 0;
	sub.f32 	%f209, %f174, %f207;
	setp.eq.s32 	%p29, %r199, 0;
	sub.f32 	%f244, %f174, %f242;
	setp.eq.s32 	%p35, %r206, 0;
	sub.f32 	%f278, %f174, %f276;
	setp.eq.s32 	%p41, %r217, 0;
	sub.f32 	%f313, %f174, %f311;
	setp.eq.s32 	%p47, %r224, 0;
	sub.f32 	%f347, %f174, %f345;
	setp.eq.s32 	%p53, %r235, 0;
	sub.f32 	%f382, %f174, %f380;
	setp.eq.s32 	%p59, %r242, 0;
	sub.f32 	%f416, %f174, %f414;
	setp.eq.s32 	%p77, %r259, 0;
	neg.f32 	%f465, %f463;
	add.s32 	%r260, %r257, 1;
	cvt.rzi.f32.f32 	%f470, %f753;
	setp.eq.s32 	%p97, %r282, 0;
	neg.f32 	%f517, %f515;
	add.s32 	%r283, %r280, 1;
	cvt.rzi.f32.f32 	%f522, %f757;
	selp.f32 	%f570, %f568, %f567, %p116;
	selp.f32 	%f572, %f569, %f571, %p117;
	and.b32  	%r306, %r305, 2;
	setp.eq.f32 	%p119, %f576, %f761;
	mul.f32 	%f577, %f761, 0f00000000;
	selp.f32 	%f622, %f620, %f619, %p136;
	selp.f32 	%f624, %f621, %f623, %p137;
	and.b32  	%r338, %r337, 2;
	setp.eq.f32 	%p139, %f628, %f765;
	mul.f32 	%f629, %f765, 0f00000000;
	shr.u16 	%rs19, %rs18, 13;
	setp.eq.s32 	%p159, %r351, 0;
	neg.f32 	%f676, %f674;
	add.s32 	%r352, %r349, 1;
	cvt.rzi.f32.f32 	%f681, %f769;
	or.b32  	%r170, %r10, %r11;
	and.b32  	%r171, %r12, 4;
	selp.f32 	%f176, %f173, %f175, %p17;
	selp.f32 	%f210, %f207, %f209, %p23;
	selp.f32 	%f245, %f242, %f244, %p29;
	selp.f32 	%f279, %f276, %f278, %p35;
	selp.f32 	%f314, %f311, %f313, %p41;
	selp.f32 	%f348, %f345, %f347, %p47;
	selp.f32 	%f383, %f380, %f382, %p53;
	selp.f32 	%f417, %f414, %f416, %p59;
	selp.f32 	%f464, %f462, %f461, %p76;
	selp.f32 	%f466, %f463, %f465, %p77;
	and.b32  	%r261, %r260, 2;
	setp.eq.f32 	%p79, %f470, %f753;
	mul.f32 	%f471, %f753, 0f00000000;
	selp.f32 	%f516, %f514, %f513, %p96;
	selp.f32 	%f518, %f515, %f517, %p97;
	and.b32  	%r284, %r283, 2;
	setp.eq.f32 	%p99, %f522, %f757;
	mul.f32 	%f523, %f757, 0f00000000;
	setp.eq.s32 	%p118, %r306, 0;
	sub.f32 	%f574, %f174, %f570;
	selp.f32 	%f91, %f577, %f572, %p119;
	abs.f32 	%f578, %f761;
	setp.eq.s32 	%p138, %r338, 0;
	sub.f32 	%f626, %f174, %f622;
	selp.f32 	%f630, %f629, %f624, %p139;
	abs.f32 	%f631, %f765;
	and.b16  	%rs20, %rs19, 6;
	selp.f32 	%f675, %f673, %f672, %p158;
	selp.f32 	%f677, %f674, %f676, %p159;
	and.b32  	%r353, %r352, 2;
	setp.eq.f32 	%p161, %f681, %f769;
	mul.f32 	%f682, %f769, 0f00000000;
	or.b32  	%r172, %r170, %r171;
	mul.f32 	%f2, %f176, %f176;
	mul.f32 	%f7, %f210, %f210;
	mul.f32 	%f11, %f245, %f245;
	mul.f32 	%f16, %f279, %f279;
	mul.f32 	%f20, %f314, %f314;
	mul.f32 	%f25, %f348, %f348;
	mul.f32 	%f29, %f383, %f383;
	mul.f32 	%f34, %f417, %f417;
	setp.eq.s32 	%p78, %r261, 0;
	sub.f32 	%f468, %f174, %f464;
	selp.f32 	%f55, %f471, %f466, %p79;
	abs.f32 	%f472, %f753;
	setp.eq.s32 	%p98, %r284, 0;
	sub.f32 	%f520, %f174, %f516;
	selp.f32 	%f524, %f523, %f518, %p99;
	abs.f32 	%f525, %f757;
	selp.f32 	%f575, %f570, %f574, %p118;
	setp.gt.f32 	%p120, %f578, 0f4B800000;
	add.f32 	%f579, %f91, 0f3F800000;
	selp.f32 	%f627, %f622, %f626, %p138;
	setp.gt.f32 	%p140, %f631, 0f4B800000;
	add.f32 	%f632, %f630, 0f3F800000;
	cvt.u32.u16 	%r70, %rs20;
	setp.eq.s32 	%p160, %r353, 0;
	sub.f32 	%f679, %f174, %f675;
	selp.f32 	%f683, %f682, %f677, %p161;
	abs.f32 	%f684, %f769;
	shr.u32 	%r173, %r172, 1;
	mul.f32 	%f180, %f2, 0f3D87E86B;
	mul.f32 	%f214, %f7, 0f3D87E86B;
	mul.f32 	%f249, %f11, 0f3D87E86B;
	mul.f32 	%f283, %f16, 0f3D87E86B;
	mul.f32 	%f318, %f20, 0f3D87E86B;
	mul.f32 	%f352, %f25, 0f3D87E86B;
	mul.f32 	%f387, %f29, 0f3D87E86B;
	mul.f32 	%f420, %f34, 0f3D87E86B;
	selp.f32 	%f469, %f464, %f468, %p78;
	setp.gt.f32 	%p80, %f472, 0f4B800000;
	add.f32 	%f473, %f55, 0f3F800000;
	selp.f32 	%f521, %f516, %f520, %p98;
	setp.gt.f32 	%p100, %f525, 0f4B800000;
	add.f32 	%f526, %f524, 0f3F800000;
	selp.f32 	%f92, %f579, %f575, %p120;
	selp.f32 	%f633, %f632, %f627, %p140;
	setp.eq.s32 	%p155, %r48, %r70;
	selp.f32 	%f680, %f675, %f679, %p160;
	setp.gt.f32 	%p162, %f684, 0f4B800000;
	add.f32 	%f685, %f683, 0f3F800000;
	ld.param.u64 	%rd1, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_5];
	mul.wide.u32 	%rd70, %r173, 4;
	mul.f32 	%f6, %f180, %f743;
	mul.f32 	%f215, %f214, %f744;
	mul.f32 	%f15, %f249, %f745;
	mul.f32 	%f284, %f283, %f746;
	mul.f32 	%f24, %f318, %f747;
	mul.f32 	%f353, %f352, %f748;
	mul.f32 	%f33, %f387, %f749;
	mul.f32 	%f421, %f420, %f750;
	selp.f32 	%f56, %f473, %f469, %p80;
	selp.f32 	%f527, %f526, %f521, %p100;
	mov.b32 	%r321, %f633;
	mov.b32 	%r320, %f92;
	mov.b32 	%r327, %f630;
	mov.b32 	%r326, %f91;
	or.b16  	%rs21, %rs19, 1;
	selp.f32 	%f686, %f685, %f680, %p162;
	selp.f32 	%f687, 0f3F800000, 0f00000000, %p155;
	add.s64 	%rd71, %rd1, %rd70;
	mov.b32 	%r191, %f215;
	mov.b32 	%r190, %f6;
	mov.b32 	%r209, %f284;
	mov.b32 	%r208, %f15;
	mov.b32 	%r227, %f353;
	mov.b32 	%r226, %f24;
	mov.b32 	%r245, %f421;
	mov.b32 	%r244, %f33;
	mov.b32 	%r273, %f527;
	mov.b32 	%r272, %f56;
	mov.b32 	%r276, %f524;
	mov.b32 	%r275, %f55;
	xor.b32  	%r324, %r327, -2147483648;
	xor.b32  	%r323, %r326, -2147483648;
	cvt.u32.u16 	%r71, %rs21;
	mul.f32 	%f127, %f686, %f687;
	mul.f32 	%f128, %f683, %f687;
	ld.param.u64 	%rd2, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_6];
	ld.param.u64 	%rd3, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_7];
	ld.global.u32 	%r13, [%rd71];
	// begin inline asm
	cvt.rn.f16x2.f32 %r189, %r191, %r190;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r207, %r209, %r208;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r225, %r227, %r226;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r243, %r245, %r244;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r271, %r273, %r272;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r274, %r276, %r275;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r319, %r321, %r320;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r322, %r324, %r323;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r325, %r327, %r326;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r328, %r321, %r320;
	// end inline asm
	setp.eq.s32 	%p175, %r48, %r71;
	add.f32 	%f708, %f773, %f773;
	mov.b32 	%r372, %f708;
	and.b32  	%r373, %r372, -2147483648;
	or.b32  	%r374, %r373, 1056964608;
	mov.b32 	%f709, %r374;
	add.f32 	%f710, %f708, %f709;
	cvt.rzi.f32.f32 	%f711, %f710;
	abs.f32 	%f712, %f708;
	setp.gt.f32 	%p176, %f712, 0f4B000000;
	selp.f32 	%f713, %f708, %f711, %p176;
	cvt.rzi.f32.f32 	%f714, %f708;
	setp.lt.f32 	%p177, %f712, 0f3F000000;
	selp.f32 	%f715, %f714, %f713, %p177;
	cvt.rzi.s32.f32 	%r375, %f715;
	fma.rn.f32 	%f716, %f715, 0fBF000000, %f773;
	mul.f32 	%f717, %f716, %f716;
	fma.rn.f32 	%f718, %f717, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f719, %f717, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f720, %f718, %f717, 0fC0A55DF6;
	fma.rn.f32 	%f721, %f719, %f717, 0f4081E0CF;
	fma.rn.f32 	%f722, %f717, %f716, 0f00000000;
	fma.rn.f32 	%f723, %f721, %f717, 0fC09DE9E6;
	fma.rn.f32 	%f724, %f720, %f722, 0f00000000;
	fma.rn.f32 	%f725, %f723, %f717, 0f3F800000;
	fma.rn.f32 	%f726, %f716, 0f40490FDB, %f724;
	and.b32  	%r376, %r375, 1;
	setp.eq.b32 	%p178, %r376, 1;
	selp.f32 	%f727, %f725, %f726, %p178;
	selp.f32 	%f728, %f726, %f725, %p178;
	and.b32  	%r377, %r375, 2;
	setp.eq.s32 	%p179, %r377, 0;
	neg.f32 	%f729, %f727;
	selp.f32 	%f730, %f727, %f729, %p179;
	add.s32 	%r378, %r375, 1;
	and.b32  	%r379, %r378, 2;
	setp.eq.s32 	%p180, %r379, 0;
	sub.f32 	%f732, %f174, %f728;
	selp.f32 	%f733, %f728, %f732, %p180;
	cvt.rzi.f32.f32 	%f734, %f773;
	setp.eq.f32 	%p181, %f734, %f773;
	mul.f32 	%f735, %f773, 0f00000000;
	selp.f32 	%f736, %f735, %f730, %p181;
	abs.f32 	%f737, %f773;
	setp.gt.f32 	%p182, %f737, 0f4B800000;
	add.f32 	%f738, %f736, 0f3F800000;
	selp.f32 	%f739, %f738, %f733, %p182;
	selp.f32 	%f740, 0f3F800000, 0f00000000, %p175;
	mul.f32 	%f741, %f739, %f740;
	mul.f32 	%f742, %f736, %f740;
	mov.b32 	%r362, %f741;
	mov.b32 	%r361, %f127;
	// begin inline asm
	cvt.rn.f16x2.f32 %r360, %r362, %r361;
	// end inline asm
	mov.b32 	%r368, %f742;
	xor.b32  	%r365, %r368, -2147483648;
	mov.b32 	%r367, %f128;
	xor.b32  	%r364, %r367, -2147483648;
	// begin inline asm
	cvt.rn.f16x2.f32 %r363, %r365, %r364;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r366, %r368, %r367;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r369, %r362, %r361;
	// end inline asm
	shl.b32 	%r381, %r6, 12;
	shl.b32 	%r382, %r3, 5;
	and.b32  	%r383, %r382, 128;
	and.b32  	%r384, %r12, 28;
	and.b32  	%r385, %r382, 96;
	and.b32  	%r386, %r4, 2048;
	shl.b32 	%r387, %r1, 2;
	and.b32  	%r388, %r387, 24;
	and.b32  	%r389, %r1, 1;
	or.b32  	%r390, %r388, %r389;
	or.b32  	%r391, %r390, %r47;
	or.b32  	%r104, %r391, %r46;
	or.b32  	%r392, %r386, %r383;
	or.b32  	%r393, %r392, %r384;
	or.b32  	%r394, %r393, %r385;
	or.b32  	%r105, %r394, %r381;
	add.s32 	%r106, %r105, 131072;
	add.s32 	%r107, %r105, 262144;
	add.s32 	%r108, %r105, 393216;
	add.s32 	%r109, %r105, 524288;
	add.s32 	%r110, %r105, 655360;
	add.s32 	%r111, %r105, 786432;
	add.s32 	%r112, %r105, 917504;
	and.b32  	%r113, %r5, 8;
	shl.b32 	%r395, %r5, 4;
	or.b32  	%r396, %r113, %r395;
	shr.u32 	%r397, %r396, 2;
	and.b32  	%r398, %r397, 30;
	shr.u32 	%r399, %r1, 1;
	mul.lo.s32 	%r400, %r399, 289;
	shr.u32 	%r401, %r5, 4;
	mul.lo.s32 	%r402, %r401, 65;
	mul.lo.s32 	%r403, %r389, 130;
	add.s32 	%r404, %r402, %r400;
	add.s32 	%r405, %r404, %r403;
	add.s32 	%r406, %r405, %r398;
	mul.wide.u32 	%rd72, %r406, 4;
	mov.u64 	%rd73, shmem;
	add.s64 	%rd11, %rd73, %rd72;
	cvt.u64.u32 	%rd74, %r398;
	cvt.u64.u32 	%rd75, %r403;
	cvt.u64.u32 	%rd76, %r402;
	cvt.u64.u32 	%rd77, %r400;
	add.s64 	%rd78, %rd77, %rd76;
	add.s64 	%rd79, %rd78, %rd75;
	add.s64 	%rd80, %rd79, %rd74;
	shl.b64 	%rd81, %rd80, 2;
	add.s64 	%rd12, %rd73, %rd81;
	or.b32  	%r407, %r399, 4;
	mul.lo.s32 	%r408, %r407, 289;
	add.s32 	%r409, %r403, %r402;
	add.s32 	%r410, %r409, %r408;
	add.s32 	%r411, %r410, %r398;
	mul.wide.u32 	%rd82, %r411, 4;
	add.s64 	%rd13, %rd73, %rd82;
	cvt.u64.u32 	%rd83, %r408;
	add.s64 	%rd84, %rd76, %rd75;
	add.s64 	%rd85, %rd84, %rd83;
	add.s64 	%rd86, %rd85, %rd74;
	shl.b64 	%rd87, %rd86, 2;
	add.s64 	%rd14, %rd73, %rd87;
	or.b32  	%r412, %r399, 8;
	mul.lo.s32 	%r413, %r412, 289;
	add.s32 	%r414, %r409, %r413;
	add.s32 	%r415, %r414, %r398;
	mul.wide.u32 	%rd88, %r415, 4;
	add.s64 	%rd15, %rd73, %rd88;
	cvt.u64.u32 	%rd89, %r413;
	add.s64 	%rd90, %rd84, %rd89;
	add.s64 	%rd91, %rd90, %rd74;
	shl.b64 	%rd92, %rd91, 2;
	add.s64 	%rd16, %rd73, %rd92;
	or.b32  	%r416, %r399, 12;
	mul.lo.s32 	%r417, %r416, 289;
	add.s32 	%r418, %r409, %r417;
	add.s32 	%r419, %r418, %r398;
	mul.wide.u32 	%rd93, %r419, 4;
	add.s64 	%rd17, %rd73, %rd93;
	cvt.u64.u32 	%rd94, %r417;
	add.s64 	%rd95, %rd84, %rd94;
	add.s64 	%rd96, %rd95, %rd74;
	shl.b64 	%rd97, %rd96, 2;
	add.s64 	%rd18, %rd73, %rd97;
	or.b32  	%r420, %r399, 16;
	mul.lo.s32 	%r421, %r420, 289;
	add.s32 	%r422, %r409, %r421;
	add.s32 	%r423, %r422, %r398;
	mul.wide.u32 	%rd98, %r423, 4;
	add.s64 	%rd19, %rd73, %rd98;
	cvt.u64.u32 	%rd99, %r421;
	add.s64 	%rd100, %rd84, %rd99;
	add.s64 	%rd101, %rd100, %rd74;
	shl.b64 	%rd102, %rd101, 2;
	add.s64 	%rd20, %rd73, %rd102;
	or.b32  	%r424, %r399, 20;
	mul.lo.s32 	%r425, %r424, 289;
	add.s32 	%r426, %r409, %r425;
	add.s32 	%r427, %r426, %r398;
	mul.wide.u32 	%rd103, %r427, 4;
	add.s64 	%rd21, %rd73, %rd103;
	cvt.u64.u32 	%rd104, %r425;
	add.s64 	%rd105, %rd84, %rd104;
	add.s64 	%rd106, %rd105, %rd74;
	shl.b64 	%rd107, %rd106, 2;
	add.s64 	%rd22, %rd73, %rd107;
	or.b32  	%r428, %r399, 24;
	mul.lo.s32 	%r429, %r428, 289;
	add.s32 	%r430, %r409, %r429;
	add.s32 	%r431, %r430, %r398;
	mul.wide.u32 	%rd108, %r431, 4;
	add.s64 	%rd23, %rd73, %rd108;
	cvt.u64.u32 	%rd109, %r429;
	add.s64 	%rd110, %rd84, %rd109;
	add.s64 	%rd111, %rd110, %rd74;
	shl.b64 	%rd112, %rd111, 2;
	add.s64 	%rd24, %rd73, %rd112;
	or.b32  	%r432, %r399, 28;
	mul.lo.s32 	%r433, %r432, 289;
	add.s32 	%r434, %r409, %r433;
	add.s32 	%r435, %r434, %r398;
	mul.wide.u32 	%rd113, %r435, 4;
	add.s64 	%rd25, %rd73, %rd113;
	cvt.u64.u32 	%rd114, %r433;
	add.s64 	%rd115, %rd84, %rd114;
	add.s64 	%rd116, %rd115, %rd74;
	shl.b64 	%rd117, %rd116, 2;
	add.s64 	%rd26, %rd73, %rd117;
	shl.b32 	%r436, %r5, 3;
	and.b32  	%r437, %r436, 64;
	and.b32  	%r438, %r57, 32;
	and.b32  	%r439, %r12, 16;
	shl.b32 	%r440, %r1, 1;
	or.b32  	%r441, %r438, %r440;
	or.b32  	%r442, %r441, %r437;
	or.b32  	%r443, %r442, %r439;
	shr.u32 	%r444, %r443, 2;
	and.b32  	%r445, %r2, 32;
	mad.lo.s32 	%r446, %r16, 130, %r445;
	mad.lo.s32 	%r447, %r15, 65, %r446;
	add.s32 	%r448, %r447, %r444;
	or.b32  	%r449, %r12, %r11;
	bfe.u32 	%r450, %r449, 1, 2;
	mad.lo.s32 	%r451, %r450, 65, %r445;
	add.s32 	%r452, %r451, %r444;
	add.s32 	%r453, %r398, %r400;
	add.s32 	%r454, %r398, %r408;
	add.s32 	%r455, %r398, %r413;
	add.s32 	%r456, %r398, %r417;
	add.s32 	%r457, %r398, %r421;
	add.s32 	%r458, %r398, %r425;
	add.s32 	%r459, %r398, %r429;
	add.s32 	%r460, %r398, %r433;
	and.b32  	%r114, %r1, 6;
	shl.b32 	%r461, %r8, 15;
	add.s32 	%r462, %r461, -98304;
	shl.b32 	%r463, %r1, 14;
	and.b32  	%r464, %r463, 98304;
	and.b32  	%r465, %r387, 4;
	or.b32  	%r466, %r10, %r45;
	or.b32  	%r467, %r466, %r465;
	shl.b32 	%r468, %r467, 8;
	or.b32  	%r469, %r385, %r384;
	or.b32  	%r470, %r469, %r383;
	or.b32  	%r471, %r470, %r464;
	or.b32  	%r115, %r471, %r468;
	cvt.s64.s32 	%rd27, %r462;
	or.b32  	%r116, %r115, 131072;
	or.b32  	%r117, %r115, 262144;
	or.b32  	%r118, %r115, 393216;
	or.b32  	%r119, %r115, 524288;
	or.b32  	%r120, %r115, 655360;
	or.b32  	%r121, %r115, 786432;
	or.b32  	%r122, %r115, 917504;
	and.b32  	%r472, %r440, 2;
	or.b32  	%r473, %r472, %r401;
	mul.lo.s32 	%r474, %r473, 65;
	add.s32 	%r475, %r453, %r474;
	mul.wide.u32 	%rd118, %r475, 4;
	add.s64 	%rd28, %rd73, %rd118;
	cvt.u64.u32 	%rd119, %r474;
	add.s64 	%rd120, %rd77, %rd74;
	add.s64 	%rd121, %rd120, %rd119;
	shl.b64 	%rd122, %rd121, 2;
	add.s64 	%rd29, %rd73, %rd122;
	add.s32 	%r476, %r454, %r474;
	mul.wide.u32 	%rd123, %r476, 4;
	add.s64 	%rd30, %rd73, %rd123;
	add.s64 	%rd124, %rd83, %rd74;
	add.s64 	%rd125, %rd124, %rd119;
	shl.b64 	%rd126, %rd125, 2;
	add.s64 	%rd31, %rd73, %rd126;
	add.s32 	%r477, %r455, %r474;
	mul.wide.u32 	%rd127, %r477, 4;
	add.s64 	%rd32, %rd73, %rd127;
	add.s64 	%rd128, %rd89, %rd74;
	add.s64 	%rd129, %rd128, %rd119;
	shl.b64 	%rd130, %rd129, 2;
	add.s64 	%rd33, %rd73, %rd130;
	add.s32 	%r478, %r456, %r474;
	mul.wide.u32 	%rd131, %r478, 4;
	add.s64 	%rd34, %rd73, %rd131;
	add.s64 	%rd132, %rd94, %rd74;
	add.s64 	%rd133, %rd132, %rd119;
	shl.b64 	%rd134, %rd133, 2;
	add.s64 	%rd35, %rd73, %rd134;
	add.s32 	%r479, %r457, %r474;
	mul.wide.u32 	%rd135, %r479, 4;
	add.s64 	%rd36, %rd73, %rd135;
	add.s64 	%rd136, %rd99, %rd74;
	add.s64 	%rd137, %rd136, %rd119;
	shl.b64 	%rd138, %rd137, 2;
	add.s64 	%rd37, %rd73, %rd138;
	add.s32 	%r480, %r458, %r474;
	mul.wide.u32 	%rd139, %r480, 4;
	add.s64 	%rd38, %rd73, %rd139;
	add.s64 	%rd140, %rd104, %rd74;
	add.s64 	%rd141, %rd140, %rd119;
	shl.b64 	%rd142, %rd141, 2;
	add.s64 	%rd39, %rd73, %rd142;
	add.s32 	%r481, %r459, %r474;
	mul.wide.u32 	%rd143, %r481, 4;
	add.s64 	%rd40, %rd73, %rd143;
	add.s64 	%rd144, %rd109, %rd74;
	add.s64 	%rd145, %rd144, %rd119;
	shl.b64 	%rd146, %rd145, 2;
	add.s64 	%rd41, %rd73, %rd146;
	add.s32 	%r482, %r460, %r474;
	mul.wide.u32 	%rd147, %r482, 4;
	add.s64 	%rd42, %rd73, %rd147;
	add.s64 	%rd148, %rd114, %rd74;
	add.s64 	%rd149, %rd148, %rd119;
	shl.b64 	%rd150, %rd149, 2;
	add.s64 	%rd43, %rd73, %rd150;
	mul.wide.u32 	%rd151, %r452, 4;
	add.s64 	%rd44, %rd73, %rd151;
	mul.wide.u32 	%rd152, %r448, 4;
	add.s64 	%rd45, %rd73, %rd152;
	setp.eq.s32 	%p184, %r113, 0;
	mov.u16 	%rs87, 25600;
	mov.u16 	%rs61, 21504;
	mov.u16 	%rs95, 18432;
	mov.u16 	%rs83, -14592;
	setp.eq.s32 	%p210, %r114, 6;
	mov.u32 	%r72, %r1357;
	mov.u32 	%r1374, %r1357;
	mov.u32 	%r1369, %r1357;
	mov.u32 	%r1370, %r1357;
	bra.uni 	LBB0_85;
LBB0_121:                               // %pass11676
                                        //   in Loop: Header=BB0_85 Depth=1
	add.s32 	%r1353, %r122, %r1379;
	cvt.u64.u32 	%rd253, %r1353;
	add.s64 	%rd254, %rd253, %rd27;
	shr.u64 	%rd255, %rd254, 35;
	add.s64 	%rd256, %rd254, %rd255;
	shr.s64 	%rd257, %rd256, 29;
	setp.lt.s64 	%p237, %rd254, 0;
	and.b64  	%rd258, %rd256, -536870912;
	setp.ne.s64 	%p238, %rd258, %rd254;
	and.pred  	%p239, %p237, %p238;
	selp.u64 	%rd259, 1, 0, %p239;
	sub.s64 	%rd260, %rd259, %rd257;
	shl.b64 	%rd261, %rd260, 29;
	add.s64 	%rd262, %rd261, %rd254;
	shl.b64 	%rd263, %rd262, 2;
	add.s64 	%rd264, %rd3, %rd263;
	st.global.v4.u32 	[%rd264], {%r155, %r157, %r156, %r158};
	setp.ne.s32 	%p240, %r72, 130816;
	add.s32 	%r72, %r72, 256;
	add.s32 	%r1354, %r72, %r6;
	setp.gt.s32 	%p241, %r7, %r1354;
	and.pred  	%p242, %p240, %p241;
	@%p242 bra 	LBB0_85;
	bra.uni 	LBB0_122;
LBB0_85:                                // %L1242
                                        // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_86 Depth 2
	or.b32  	%r612, %r104, %r72;
	shl.b32 	%r613, %r612, 12;
	add.s32 	%r614, %r105, %r613;
	shr.s32 	%r615, %r614, 31;
	shr.u32 	%r616, %r615, 3;
	add.s32 	%r617, %r614, %r616;
	shr.s32 	%r618, %r617, 29;
	setp.lt.s32 	%p185, %r614, 0;
	and.b32  	%r619, %r617, -536870912;
	setp.ne.s32 	%p186, %r619, %r614;
	and.pred  	%p187, %p185, %p186;
	selp.u32 	%r620, 1, 0, %p187;
	sub.s32 	%r621, %r620, %r618;
	shl.b32 	%r622, %r621, 29;
	or.b32  	%r623, %r614, 1;
	add.s32 	%r624, %r623, %r622;
	mul.wide.s32 	%rd153, %r624, 4;
	add.s64 	%rd154, %rd2, %rd153;
	ld.global.v4.u32 	{%r625, %r626, %r627, %r628}, [%rd154+-4];
	add.s32 	%r629, %r106, %r613;
	shr.s32 	%r630, %r629, 31;
	shr.u32 	%r631, %r630, 3;
	add.s32 	%r632, %r629, %r631;
	shr.s32 	%r633, %r632, 29;
	setp.lt.s32 	%p188, %r629, 0;
	and.b32  	%r634, %r632, -536870912;
	setp.ne.s32 	%p189, %r634, %r629;
	and.pred  	%p190, %p188, %p189;
	selp.u32 	%r635, 1, 0, %p190;
	sub.s32 	%r636, %r635, %r633;
	shl.b32 	%r637, %r636, 29;
	add.s32 	%r638, %r629, %r637;
	add.s32 	%r639, %r638, 1;
	mul.wide.s32 	%rd155, %r639, 4;
	add.s64 	%rd156, %rd2, %rd155;
	ld.global.v4.u32 	{%r640, %r641, %r642, %r643}, [%rd156+-4];
	add.s32 	%r644, %r107, %r613;
	shr.s32 	%r645, %r644, 31;
	shr.u32 	%r646, %r645, 3;
	add.s32 	%r647, %r644, %r646;
	shr.s32 	%r648, %r647, 29;
	setp.lt.s32 	%p191, %r644, 0;
	and.b32  	%r649, %r647, -536870912;
	setp.ne.s32 	%p192, %r649, %r644;
	and.pred  	%p193, %p191, %p192;
	selp.u32 	%r650, 1, 0, %p193;
	sub.s32 	%r651, %r650, %r648;
	shl.b32 	%r652, %r651, 29;
	add.s32 	%r653, %r644, %r652;
	add.s32 	%r654, %r653, 1;
	mul.wide.s32 	%rd157, %r654, 4;
	add.s64 	%rd158, %rd2, %rd157;
	ld.global.v4.u32 	{%r655, %r656, %r657, %r658}, [%rd158+-4];
	add.s32 	%r659, %r108, %r613;
	shr.s32 	%r660, %r659, 31;
	shr.u32 	%r661, %r660, 3;
	add.s32 	%r662, %r659, %r661;
	shr.s32 	%r663, %r662, 29;
	setp.lt.s32 	%p194, %r659, 0;
	and.b32  	%r664, %r662, -536870912;
	setp.ne.s32 	%p195, %r664, %r659;
	and.pred  	%p196, %p194, %p195;
	selp.u32 	%r665, 1, 0, %p196;
	sub.s32 	%r666, %r665, %r663;
	shl.b32 	%r667, %r666, 29;
	add.s32 	%r668, %r659, %r667;
	add.s32 	%r669, %r668, 1;
	mul.wide.s32 	%rd159, %r669, 4;
	add.s64 	%rd160, %rd2, %rd159;
	ld.global.v4.u32 	{%r670, %r671, %r672, %r673}, [%rd160+-4];
	add.s32 	%r674, %r109, %r613;
	shr.s32 	%r675, %r674, 31;
	shr.u32 	%r676, %r675, 3;
	add.s32 	%r677, %r674, %r676;
	shr.s32 	%r678, %r677, 29;
	setp.lt.s32 	%p197, %r674, 0;
	and.b32  	%r679, %r677, -536870912;
	setp.ne.s32 	%p198, %r679, %r674;
	and.pred  	%p199, %p197, %p198;
	selp.u32 	%r680, 1, 0, %p199;
	sub.s32 	%r681, %r680, %r678;
	shl.b32 	%r682, %r681, 29;
	add.s32 	%r683, %r674, %r682;
	add.s32 	%r684, %r683, 1;
	mul.wide.s32 	%rd161, %r684, 4;
	add.s64 	%rd162, %rd2, %rd161;
	ld.global.v4.u32 	{%r685, %r686, %r687, %r688}, [%rd162+-4];
	add.s32 	%r689, %r110, %r613;
	shr.s32 	%r690, %r689, 31;
	shr.u32 	%r691, %r690, 3;
	add.s32 	%r692, %r689, %r691;
	shr.s32 	%r693, %r692, 29;
	setp.lt.s32 	%p200, %r689, 0;
	and.b32  	%r694, %r692, -536870912;
	setp.ne.s32 	%p201, %r694, %r689;
	and.pred  	%p202, %p200, %p201;
	selp.u32 	%r695, 1, 0, %p202;
	sub.s32 	%r696, %r695, %r693;
	shl.b32 	%r697, %r696, 29;
	add.s32 	%r698, %r689, %r697;
	add.s32 	%r699, %r698, 1;
	mul.wide.s32 	%rd163, %r699, 4;
	add.s64 	%rd164, %rd2, %rd163;
	ld.global.v4.u32 	{%r700, %r701, %r702, %r703}, [%rd164+-4];
	add.s32 	%r704, %r111, %r613;
	shr.s32 	%r705, %r704, 31;
	shr.u32 	%r706, %r705, 3;
	add.s32 	%r707, %r704, %r706;
	shr.s32 	%r708, %r707, 29;
	setp.lt.s32 	%p203, %r704, 0;
	and.b32  	%r709, %r707, -536870912;
	setp.ne.s32 	%p204, %r709, %r704;
	and.pred  	%p205, %p203, %p204;
	selp.u32 	%r710, 1, 0, %p205;
	sub.s32 	%r711, %r710, %r708;
	shl.b32 	%r712, %r711, 29;
	add.s32 	%r713, %r704, %r712;
	add.s32 	%r714, %r713, 1;
	mul.wide.s32 	%rd165, %r714, 4;
	add.s64 	%rd166, %rd2, %rd165;
	ld.global.v4.u32 	{%r715, %r716, %r717, %r718}, [%rd166+-4];
	add.s32 	%r719, %r112, %r613;
	shr.s32 	%r720, %r719, 31;
	shr.u32 	%r721, %r720, 3;
	add.s32 	%r722, %r719, %r721;
	shr.s32 	%r723, %r722, 29;
	setp.lt.s32 	%p206, %r719, 0;
	and.b32  	%r724, %r722, -536870912;
	setp.ne.s32 	%p207, %r724, %r719;
	and.pred  	%p208, %p206, %p207;
	selp.u32 	%r725, 1, 0, %p208;
	sub.s32 	%r726, %r725, %r723;
	shl.b32 	%r727, %r726, 29;
	add.s32 	%r728, %r719, %r727;
	add.s32 	%r729, %r728, 1;
	mul.wide.s32 	%rd167, %r729, 4;
	add.s64 	%rd168, %rd2, %rd167;
	ld.global.v4.u32 	{%r730, %r731, %r732, %r733}, [%rd168+-4];
	selp.b32 	%r734, %r627, %r625, %p184;
	shfl.sync.bfly.b32	%r735, %r734, 8, 31, -1;
	selp.b32 	%r484, %r625, %r735, %p184;
	selp.b32 	%r485, %r735, %r627, %p184;
	selp.b32 	%r736, %r628, %r626, %p184;
	shfl.sync.bfly.b32	%r737, %r736, 8, 31, -1;
	selp.b32 	%r492, %r626, %r737, %p184;
	selp.b32 	%r493, %r737, %r628, %p184;
	selp.b32 	%r738, %r642, %r640, %p184;
	shfl.sync.bfly.b32	%r739, %r738, 8, 31, -1;
	selp.b32 	%r500, %r640, %r739, %p184;
	selp.b32 	%r501, %r739, %r642, %p184;
	selp.b32 	%r740, %r643, %r641, %p184;
	shfl.sync.bfly.b32	%r741, %r740, 8, 31, -1;
	selp.b32 	%r508, %r641, %r741, %p184;
	selp.b32 	%r509, %r741, %r643, %p184;
	selp.b32 	%r742, %r657, %r655, %p184;
	shfl.sync.bfly.b32	%r743, %r742, 8, 31, -1;
	selp.b32 	%r516, %r655, %r743, %p184;
	selp.b32 	%r517, %r743, %r657, %p184;
	selp.b32 	%r744, %r658, %r656, %p184;
	shfl.sync.bfly.b32	%r745, %r744, 8, 31, -1;
	selp.b32 	%r524, %r656, %r745, %p184;
	selp.b32 	%r525, %r745, %r658, %p184;
	selp.b32 	%r746, %r672, %r670, %p184;
	shfl.sync.bfly.b32	%r747, %r746, 8, 31, -1;
	selp.b32 	%r532, %r670, %r747, %p184;
	selp.b32 	%r533, %r747, %r672, %p184;
	selp.b32 	%r748, %r673, %r671, %p184;
	shfl.sync.bfly.b32	%r749, %r748, 8, 31, -1;
	selp.b32 	%r540, %r671, %r749, %p184;
	selp.b32 	%r541, %r749, %r673, %p184;
	selp.b32 	%r750, %r687, %r685, %p184;
	shfl.sync.bfly.b32	%r751, %r750, 8, 31, -1;
	selp.b32 	%r548, %r685, %r751, %p184;
	selp.b32 	%r549, %r751, %r687, %p184;
	selp.b32 	%r752, %r688, %r686, %p184;
	shfl.sync.bfly.b32	%r753, %r752, 8, 31, -1;
	selp.b32 	%r556, %r686, %r753, %p184;
	selp.b32 	%r557, %r753, %r688, %p184;
	selp.b32 	%r754, %r702, %r700, %p184;
	shfl.sync.bfly.b32	%r755, %r754, 8, 31, -1;
	selp.b32 	%r564, %r700, %r755, %p184;
	selp.b32 	%r565, %r755, %r702, %p184;
	selp.b32 	%r756, %r703, %r701, %p184;
	shfl.sync.bfly.b32	%r757, %r756, 8, 31, -1;
	selp.b32 	%r572, %r701, %r757, %p184;
	selp.b32 	%r573, %r757, %r703, %p184;
	selp.b32 	%r758, %r717, %r715, %p184;
	shfl.sync.bfly.b32	%r759, %r758, 8, 31, -1;
	selp.b32 	%r580, %r715, %r759, %p184;
	selp.b32 	%r581, %r759, %r717, %p184;
	selp.b32 	%r760, %r718, %r716, %p184;
	shfl.sync.bfly.b32	%r761, %r760, 8, 31, -1;
	selp.b32 	%r588, %r716, %r761, %p184;
	selp.b32 	%r589, %r761, %r718, %p184;
	selp.b32 	%r762, %r732, %r730, %p184;
	shfl.sync.bfly.b32	%r763, %r762, 8, 31, -1;
	selp.b32 	%r596, %r730, %r763, %p184;
	selp.b32 	%r597, %r763, %r732, %p184;
	selp.b32 	%r764, %r733, %r731, %p184;
	shfl.sync.bfly.b32	%r765, %r764, 8, 31, -1;
	selp.b32 	%r604, %r731, %r765, %p184;
	selp.b32 	%r605, %r765, %r733, %p184;
	mov.u32 	%r606, 21520;
	// begin inline asm
	prmt.b32 %r483, %r484, %r485, %r606;
	// end inline asm
	mov.u32 	%r610, 30258;
	// begin inline asm
	prmt.b32 %r487, %r484, %r485, %r610;
	// end inline asm
	// begin inline asm
	prmt.b32 %r491, %r492, %r493, %r606;
	// end inline asm
	// begin inline asm
	prmt.b32 %r495, %r492, %r493, %r610;
	// end inline asm
	// begin inline asm
	prmt.b32 %r499, %r500, %r501, %r606;
	// end inline asm
	// begin inline asm
	prmt.b32 %r503, %r500, %r501, %r610;
	// end inline asm
	// begin inline asm
	prmt.b32 %r507, %r508, %r509, %r606;
	// end inline asm
	// begin inline asm
	prmt.b32 %r511, %r508, %r509, %r610;
	// end inline asm
	// begin inline asm
	prmt.b32 %r515, %r516, %r517, %r606;
	// end inline asm
	// begin inline asm
	prmt.b32 %r519, %r516, %r517, %r610;
	// end inline asm
	// begin inline asm
	prmt.b32 %r523, %r524, %r525, %r606;
	// end inline asm
	// begin inline asm
	prmt.b32 %r527, %r524, %r525, %r610;
	// end inline asm
	// begin inline asm
	prmt.b32 %r531, %r532, %r533, %r606;
	// end inline asm
	// begin inline asm
	prmt.b32 %r535, %r532, %r533, %r610;
	// end inline asm
	// begin inline asm
	prmt.b32 %r539, %r540, %r541, %r606;
	// end inline asm
	// begin inline asm
	prmt.b32 %r543, %r540, %r541, %r610;
	// end inline asm
	// begin inline asm
	prmt.b32 %r547, %r548, %r549, %r606;
	// end inline asm
	// begin inline asm
	prmt.b32 %r551, %r548, %r549, %r610;
	// end inline asm
	// begin inline asm
	prmt.b32 %r555, %r556, %r557, %r606;
	// end inline asm
	// begin inline asm
	prmt.b32 %r559, %r556, %r557, %r610;
	// end inline asm
	// begin inline asm
	prmt.b32 %r563, %r564, %r565, %r606;
	// end inline asm
	// begin inline asm
	prmt.b32 %r567, %r564, %r565, %r610;
	// end inline asm
	// begin inline asm
	prmt.b32 %r571, %r572, %r573, %r606;
	// end inline asm
	// begin inline asm
	prmt.b32 %r575, %r572, %r573, %r610;
	// end inline asm
	// begin inline asm
	prmt.b32 %r579, %r580, %r581, %r606;
	// end inline asm
	// begin inline asm
	prmt.b32 %r583, %r580, %r581, %r610;
	// end inline asm
	// begin inline asm
	prmt.b32 %r587, %r588, %r589, %r606;
	// end inline asm
	// begin inline asm
	prmt.b32 %r591, %r588, %r589, %r610;
	// end inline asm
	// begin inline asm
	prmt.b32 %r595, %r596, %r597, %r606;
	// end inline asm
	// begin inline asm
	prmt.b32 %r599, %r596, %r597, %r610;
	// end inline asm
	// begin inline asm
	prmt.b32 %r603, %r604, %r605, %r606;
	// end inline asm
	// begin inline asm
	prmt.b32 %r607, %r604, %r605, %r610;
	// end inline asm
	st.shared.u32 	[%rd11], %r483;
	st.shared.u32 	[%rd12+128], %r487;
	st.shared.u32 	[%rd12+4], %r491;
	st.shared.u32 	[%rd12+132], %r495;
	st.shared.u32 	[%rd13], %r499;
	st.shared.u32 	[%rd14+128], %r503;
	st.shared.u32 	[%rd14+4], %r507;
	st.shared.u32 	[%rd14+132], %r511;
	st.shared.u32 	[%rd15], %r515;
	st.shared.u32 	[%rd16+128], %r519;
	st.shared.u32 	[%rd16+4], %r523;
	st.shared.u32 	[%rd16+132], %r527;
	st.shared.u32 	[%rd17], %r531;
	st.shared.u32 	[%rd18+128], %r535;
	st.shared.u32 	[%rd18+4], %r539;
	st.shared.u32 	[%rd18+132], %r543;
	st.shared.u32 	[%rd19], %r547;
	st.shared.u32 	[%rd20+128], %r551;
	st.shared.u32 	[%rd20+4], %r555;
	st.shared.u32 	[%rd20+132], %r559;
	st.shared.u32 	[%rd21], %r563;
	st.shared.u32 	[%rd22+128], %r567;
	st.shared.u32 	[%rd22+4], %r571;
	st.shared.u32 	[%rd22+132], %r575;
	st.shared.u32 	[%rd23], %r579;
	st.shared.u32 	[%rd24+128], %r583;
	st.shared.u32 	[%rd24+4], %r587;
	st.shared.u32 	[%rd24+132], %r591;
	st.shared.u32 	[%rd25], %r595;
	st.shared.u32 	[%rd26+128], %r599;
	st.shared.u32 	[%rd26+4], %r603;
	st.shared.u32 	[%rd26+132], %r607;
	bar.sync 	0;
	mov.u32 	%r1371, 256;
	mov.u64 	%rd267, %rd45;
	mov.u64 	%rd268, %rd44;
	mov.u32 	%r1372, %r1370;
	mov.u32 	%r1373, %r1369;
LBB0_86:                                // %L17482
                                        //   Parent Loop BB0_85 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	mov.u32 	%r1369, %r1374;
	mov.u32 	%r1370, %r1373;
	ld.shared.u32 	%r1374, [%rd267];
	// begin inline asm
	mov.b32 %r771, {%rs87, %rs87};
	// end inline asm
	// begin inline asm
	mov.b32 %r782, {%rs61, %rs61};
	// end inline asm
	xor.b32  	%r770, %r1374, -2004318072;
	mov.u32 	%r769, 983055;
	// begin inline asm
	lop3.b32 %r768, %r769, %r770, %r771, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r772, {%rs95, %rs95};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r773, %r771, %r772;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r776, %r768, %r773;
	// end inline asm
	mov.u32 	%r780, 15728880;
	// begin inline asm
	lop3.b32 %r779, %r780, %r770, %r782, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r783, {%rs95, %rs95};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r784, %r782, %r783;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r787, %r779, %r784;
	// end inline asm
	shr.u32 	%r792, %r770, 8;
	// begin inline asm
	lop3.b32 %r790, %r769, %r792, %r771, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r794, {%rs95, %rs95};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r795, %r771, %r794;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r798, %r790, %r795;
	// end inline asm
	// begin inline asm
	lop3.b32 %r801, %r780, %r792, %r782, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r805, {%rs95, %rs95};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r806, %r782, %r805;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r809, %r801, %r806;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r812, %r243;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r814, %r812, %r776;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r817, %r243;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r819, %r817, %r787;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r822, %r243;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r824, %r822, %r798;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r827, %r243;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r829, %r827, %r809;
	// end inline asm
	// begin inline asm
	mov.b32 %r837, {%rs87, %rs87};
	// end inline asm
	// begin inline asm
	mov.b32 %r848, {%rs61, %rs61};
	// end inline asm
	xor.b32  	%r836, %r1372, -2004318072;
	// begin inline asm
	lop3.b32 %r834, %r769, %r836, %r837, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r838, {%rs95, %rs95};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r839, %r837, %r838;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r842, %r834, %r839;
	// end inline asm
	// begin inline asm
	lop3.b32 %r845, %r780, %r836, %r848, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r849, {%rs95, %rs95};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r850, %r848, %r849;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r853, %r845, %r850;
	// end inline asm
	shr.u32 	%r858, %r836, 8;
	// begin inline asm
	lop3.b32 %r856, %r769, %r858, %r837, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r860, {%rs95, %rs95};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r861, %r837, %r860;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r864, %r856, %r861;
	// end inline asm
	// begin inline asm
	lop3.b32 %r867, %r780, %r858, %r848, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r871, {%rs95, %rs95};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r872, %r848, %r871;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r875, %r867, %r872;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r878, %r189, %r842, %r814;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r882, %r189, %r853, %r819;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r886, %r189, %r864, %r824;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r890, %r189, %r875, %r829;
	// end inline asm
	// begin inline asm
	mov.b32 %r899, {%rs87, %rs87};
	// end inline asm
	// begin inline asm
	mov.b32 %r910, {%rs61, %rs61};
	// end inline asm
	xor.b32  	%r898, %r1370, -2004318072;
	// begin inline asm
	lop3.b32 %r896, %r769, %r898, %r899, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r900, {%rs95, %rs95};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r901, %r899, %r900;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r904, %r896, %r901;
	// end inline asm
	// begin inline asm
	lop3.b32 %r907, %r780, %r898, %r910, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r911, {%rs95, %rs95};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r912, %r910, %r911;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r915, %r907, %r912;
	// end inline asm
	shr.u32 	%r920, %r898, 8;
	// begin inline asm
	lop3.b32 %r918, %r769, %r920, %r899, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r922, {%rs95, %rs95};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r923, %r899, %r922;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r926, %r918, %r923;
	// end inline asm
	// begin inline asm
	lop3.b32 %r929, %r780, %r920, %r910, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r933, {%rs95, %rs95};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r934, %r910, %r933;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r937, %r929, %r934;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r940, %r207;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r942, %r940, %r904, %r878;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r946, %r207;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r948, %r946, %r915, %r882;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r952, %r207;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r954, %r952, %r926, %r886;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r958, %r207;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r960, %r958, %r937, %r890;
	// end inline asm
	// begin inline asm
	mov.b32 %r969, {%rs87, %rs87};
	// end inline asm
	// begin inline asm
	mov.b32 %r980, {%rs61, %rs61};
	// end inline asm
	xor.b32  	%r968, %r1369, -2004318072;
	// begin inline asm
	lop3.b32 %r966, %r769, %r968, %r969, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r970, {%rs95, %rs95};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r971, %r969, %r970;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r974, %r966, %r971;
	// end inline asm
	// begin inline asm
	lop3.b32 %r977, %r780, %r968, %r980, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r981, {%rs95, %rs95};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r982, %r980, %r981;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r985, %r977, %r982;
	// end inline asm
	shr.u32 	%r990, %r968, 8;
	// begin inline asm
	lop3.b32 %r988, %r769, %r990, %r969, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r992, {%rs95, %rs95};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r993, %r969, %r992;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r996, %r988, %r993;
	// end inline asm
	// begin inline asm
	lop3.b32 %r999, %r780, %r990, %r980, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1003, {%rs95, %rs95};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1004, %r980, %r1003;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1007, %r999, %r1004;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1033, %r225, %r974, %r942;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1030, %r225, %r985, %r948;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1042, %r225, %r996, %r954;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1039, %r225, %r1007, %r960;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1026, %r274;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1028, %r1026, %r1030;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1031, %r271, %r1033, %r1028;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1035, %r274;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1037, %r1035, %r1039;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1040, %r271, %r1042, %r1037;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1044, %r274, %r1033;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1047, %r271, %r1030, %r1044;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1051, %r274, %r1042;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1054, %r271, %r1039, %r1051;
	// end inline asm
	mov.u32 	%r1066, 0;
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1058, %r1059}, {%r319, %r325, %r322, %r328}, {%r1031, %r1047}, {%r1066, %r1066};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1068, %r1069}, {%r319, %r325, %r322, %r328}, {%r1040, %r1054}, {%r1066, %r1066};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1078, %r1079}, {%r360, %r366, %r363, %r369}, {%r1058, %r1059}, {%r1066, %r1066};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1088, %r1089}, {%r360, %r366, %r363, %r369}, {%r1068, %r1069}, {%r1066, %r1066};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1098, %r13, %r1078;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1101, %r13, %r1079;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1104, %r13, %r1088;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1107, %r13, %r1089;
	// end inline asm
	// begin inline asm
	mov.b32 %r1110, {%rs83, %rs83};
	// end inline asm
	mov.u16 	%rs72, 18176;
	// begin inline asm
	mov.b32 %r1111, {%rs72, %rs72};
	// end inline asm
	// begin inline asm
	max.f16x2 %r1112, %r1098, %r1110;
	// end inline asm
	// begin inline asm
	min.f16x2 %r1115, %r1112, %r1111;
	// end inline asm
	// begin inline asm
	mov.b32 %r1118, {%rs83, %rs83};
	// end inline asm
	// begin inline asm
	mov.b32 %r1119, {%rs72, %rs72};
	// end inline asm
	// begin inline asm
	max.f16x2 %r1120, %r1101, %r1118;
	// end inline asm
	// begin inline asm
	min.f16x2 %r1123, %r1120, %r1119;
	// end inline asm
	// begin inline asm
	mov.b32 %r1126, {%rs83, %rs83};
	// end inline asm
	// begin inline asm
	mov.b32 %r1127, {%rs72, %rs72};
	// end inline asm
	// begin inline asm
	max.f16x2 %r1128, %r1104, %r1126;
	// end inline asm
	// begin inline asm
	min.f16x2 %r1131, %r1128, %r1127;
	// end inline asm
	// begin inline asm
	mov.b32 %r1134, {%rs83, %rs83};
	// end inline asm
	// begin inline asm
	mov.b32 %r1135, {%rs72, %rs72};
	// end inline asm
	// begin inline asm
	max.f16x2 %r1136, %r1107, %r1134;
	// end inline asm
	// begin inline asm
	min.f16x2 %r1139, %r1136, %r1135;
	// end inline asm
	// begin inline asm
	mov.b32 %r1145, {%rs87, %rs87};
	// end inline asm
	// begin inline asm
	mov.b32 %r1143, {%rs95, %rs95};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1144, %r1145, %r1143;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1147, %r1115, %r1144;
	// end inline asm
	// begin inline asm
	mov.b32 %r1150, {%rs95, %rs95};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1151, %r1145, %r1150;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1154, %r1123, %r1151;
	// end inline asm
	// begin inline asm
	mov.b32 %r1157, {%rs95, %rs95};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1158, %r1145, %r1157;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1161, %r1131, %r1158;
	// end inline asm
	// begin inline asm
	mov.b32 %r1164, {%rs95, %rs95};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1165, %r1145, %r1164;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1168, %r1139, %r1165;
	// end inline asm
	mov.u32 	%r1174, 25152;
	// begin inline asm
	prmt.b32 %r1171, %r1147, %r1161, %r1174;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1175, %r1154, %r1168, %r1174;
	// end inline asm
	shl.b32 	%r1182, %r1175, 4;
	mov.u32 	%r1180, 252645135;
	// begin inline asm
	lop3.b32 %r1179, %r1180, %r1171, %r1182, 202;
	// end inline asm
	xor.b32  	%r1183, %r1179, -2004318072;
	st.shared.u32 	[%rd268], %r1183;
	add.s32 	%r1371, %r1371, -8;
	add.s64 	%rd268, %rd268, 1156;
	add.s64 	%rd267, %rd267, 1156;
	setp.eq.s32 	%p209, %r1371, 0;
	mov.u32 	%r1372, %r1370;
	mov.u32 	%r1373, %r1369;
	@%p209 bra 	LBB0_87;
	bra.uni 	LBB0_86;
LBB0_87:                                // %guard_pass11890
                                        //   in Loop: Header=BB0_85 Depth=1
	bar.sync 	0;
	ld.shared.u32 	%r1189, [%rd28];
	ld.shared.u32 	%r1190, [%rd29+128];
	ld.shared.u32 	%r1197, [%rd29+4];
	ld.shared.u32 	%r1198, [%rd29+132];
	ld.shared.u32 	%r1205, [%rd30];
	ld.shared.u32 	%r1206, [%rd31+128];
	ld.shared.u32 	%r1213, [%rd31+4];
	ld.shared.u32 	%r1214, [%rd31+132];
	ld.shared.u32 	%r1221, [%rd32];
	ld.shared.u32 	%r1222, [%rd33+128];
	ld.shared.u32 	%r1229, [%rd33+4];
	ld.shared.u32 	%r1230, [%rd33+132];
	ld.shared.u32 	%r1237, [%rd34];
	ld.shared.u32 	%r1238, [%rd35+128];
	ld.shared.u32 	%r1245, [%rd35+4];
	ld.shared.u32 	%r1246, [%rd35+132];
	ld.shared.u32 	%r1253, [%rd36];
	ld.shared.u32 	%r1254, [%rd37+128];
	ld.shared.u32 	%r1261, [%rd37+4];
	ld.shared.u32 	%r1262, [%rd37+132];
	ld.shared.u32 	%r1269, [%rd38];
	ld.shared.u32 	%r1270, [%rd39+128];
	ld.shared.u32 	%r1277, [%rd39+4];
	ld.shared.u32 	%r1278, [%rd39+132];
	ld.shared.u32 	%r1285, [%rd40];
	ld.shared.u32 	%r1286, [%rd41+128];
	ld.shared.u32 	%r1293, [%rd41+4];
	ld.shared.u32 	%r1294, [%rd41+132];
	ld.shared.u32 	%r1301, [%rd42];
	ld.shared.u32 	%r1302, [%rd43+128];
	ld.shared.u32 	%r1309, [%rd43+4];
	ld.shared.u32 	%r1310, [%rd43+132];
	// begin inline asm
	prmt.b32 %r1184, %r1189, %r1190, %r606;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1188, %r1189, %r1190, %r610;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1192, %r1197, %r1198, %r606;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1196, %r1197, %r1198, %r610;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1200, %r1205, %r1206, %r606;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1204, %r1205, %r1206, %r610;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1208, %r1213, %r1214, %r606;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1212, %r1213, %r1214, %r610;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1216, %r1221, %r1222, %r606;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1220, %r1221, %r1222, %r610;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1224, %r1229, %r1230, %r606;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1228, %r1229, %r1230, %r610;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1232, %r1237, %r1238, %r606;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1236, %r1237, %r1238, %r610;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1240, %r1245, %r1246, %r606;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1244, %r1245, %r1246, %r610;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1248, %r1253, %r1254, %r606;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1252, %r1253, %r1254, %r610;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1256, %r1261, %r1262, %r606;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1260, %r1261, %r1262, %r610;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1264, %r1269, %r1270, %r606;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1268, %r1269, %r1270, %r610;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1272, %r1277, %r1278, %r606;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1276, %r1277, %r1278, %r610;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1280, %r1285, %r1286, %r606;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1284, %r1285, %r1286, %r610;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1288, %r1293, %r1294, %r606;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1292, %r1293, %r1294, %r610;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1296, %r1301, %r1302, %r606;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1300, %r1301, %r1302, %r610;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1304, %r1309, %r1310, %r606;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1308, %r1309, %r1310, %r610;
	// end inline asm
	selp.b32 	%r1312, %r1188, %r1184, %p184;
	shfl.sync.bfly.b32	%r129, %r1312, 8, 31, -1;
	selp.b32 	%r1313, %r1196, %r1192, %p184;
	shfl.sync.bfly.b32	%r130, %r1313, 8, 31, -1;
	selp.b32 	%r1314, %r1204, %r1200, %p184;
	shfl.sync.bfly.b32	%r1315, %r1314, 8, 31, -1;
	selp.b32 	%r131, %r1200, %r1315, %p184;
	selp.b32 	%r132, %r1315, %r1204, %p184;
	selp.b32 	%r1316, %r1212, %r1208, %p184;
	shfl.sync.bfly.b32	%r1317, %r1316, 8, 31, -1;
	selp.b32 	%r133, %r1208, %r1317, %p184;
	selp.b32 	%r134, %r1317, %r1212, %p184;
	selp.b32 	%r1318, %r1220, %r1216, %p184;
	shfl.sync.bfly.b32	%r1319, %r1318, 8, 31, -1;
	selp.b32 	%r1320, %r1228, %r1224, %p184;
	shfl.sync.bfly.b32	%r1321, %r1320, 8, 31, -1;
	selp.b32 	%r1322, %r1236, %r1232, %p184;
	shfl.sync.bfly.b32	%r1323, %r1322, 8, 31, -1;
	selp.b32 	%r1324, %r1244, %r1240, %p184;
	shfl.sync.bfly.b32	%r1325, %r1324, 8, 31, -1;
	selp.b32 	%r1326, %r1252, %r1248, %p184;
	shfl.sync.bfly.b32	%r1327, %r1326, 8, 31, -1;
	selp.b32 	%r1328, %r1260, %r1256, %p184;
	shfl.sync.bfly.b32	%r1329, %r1328, 8, 31, -1;
	selp.b32 	%r1330, %r1268, %r1264, %p184;
	shfl.sync.bfly.b32	%r1331, %r1330, 8, 31, -1;
	selp.b32 	%r1332, %r1276, %r1272, %p184;
	shfl.sync.bfly.b32	%r1333, %r1332, 8, 31, -1;
	selp.b32 	%r1334, %r1284, %r1280, %p184;
	shfl.sync.bfly.b32	%r1335, %r1334, 8, 31, -1;
	selp.b32 	%r1336, %r1292, %r1288, %p184;
	shfl.sync.bfly.b32	%r1337, %r1336, 8, 31, -1;
	selp.b32 	%r1338, %r1300, %r1296, %p184;
	shfl.sync.bfly.b32	%r1339, %r1338, 8, 31, -1;
	selp.b32 	%r1340, %r1308, %r1304, %p184;
	shfl.sync.bfly.b32	%r1341, %r1340, 8, 31, -1;
	@%p210 bra 	LBB0_117;
	bra.uni 	LBB0_88;
LBB0_117:                               // %L27883
                                        //   in Loop: Header=BB0_85 Depth=1
	selp.b32 	%r1342, %r130, %r1196, %p184;
	selp.b32 	%r1343, %r1192, %r130, %p184;
	selp.b32 	%r1344, %r129, %r1188, %p184;
	selp.b32 	%r1345, %r1184, %r129, %p184;
	shl.b32 	%r1379, %r72, 12;
	or.b32  	%r1346, %r115, %r1379;
	cvt.u64.u32 	%rd169, %r1346;
	add.s64 	%rd170, %rd169, %rd27;
	shr.u64 	%rd171, %rd170, 35;
	add.s64 	%rd172, %rd170, %rd171;
	shr.s64 	%rd173, %rd172, 29;
	setp.lt.s64 	%p213, %rd170, 0;
	and.b64  	%rd174, %rd172, -536870912;
	setp.ne.s64 	%p214, %rd174, %rd170;
	and.pred  	%p215, %p213, %p214;
	selp.u64 	%rd175, 1, 0, %p215;
	sub.s64 	%rd176, %rd175, %rd173;
	shl.b64 	%rd177, %rd176, 29;
	add.s64 	%rd178, %rd177, %rd170;
	shl.b64 	%rd179, %rd178, 2;
	add.s64 	%rd180, %rd3, %rd179;
	st.global.v4.u32 	[%rd180], {%r1345, %r1343, %r1344, %r1342};
	bra.uni 	LBB0_118;
LBB0_88:                                // %guard_pass11890.pass11052_crit_edge
                                        //   in Loop: Header=BB0_85 Depth=1
	shl.b32 	%r1379, %r72, 12;
LBB0_118:                               // %pass11052
                                        //   in Loop: Header=BB0_85 Depth=1
	selp.b32 	%r139, %r1232, %r1323, %p184;
	selp.b32 	%r140, %r1323, %r1236, %p184;
	selp.b32 	%r141, %r1240, %r1325, %p184;
	selp.b32 	%r142, %r1325, %r1244, %p184;
	add.s32 	%r1347, %r116, %r1379;
	cvt.u64.u32 	%rd181, %r1347;
	add.s64 	%rd182, %rd181, %rd27;
	shr.u64 	%rd183, %rd182, 35;
	add.s64 	%rd184, %rd182, %rd183;
	shr.s64 	%rd185, %rd184, 29;
	setp.lt.s64 	%p217, %rd182, 0;
	and.b64  	%rd186, %rd184, -536870912;
	setp.ne.s64 	%p218, %rd186, %rd182;
	and.pred  	%p219, %p217, %p218;
	selp.u64 	%rd187, 1, 0, %p219;
	sub.s64 	%rd188, %rd187, %rd185;
	shl.b64 	%rd189, %rd188, 29;
	add.s64 	%rd190, %rd189, %rd182;
	shl.b64 	%rd191, %rd190, 2;
	add.s64 	%rd192, %rd3, %rd191;
	st.global.v4.u32 	[%rd192], {%r131, %r133, %r132, %r134};
	@%p210 bra 	LBB0_89;
	bra.uni 	LBB0_119;
LBB0_89:                                // %L28376
                                        //   in Loop: Header=BB0_85 Depth=1
	selp.b32 	%r135, %r1216, %r1319, %p184;
	selp.b32 	%r136, %r1319, %r1220, %p184;
	selp.b32 	%r137, %r1224, %r1321, %p184;
	selp.b32 	%r138, %r1321, %r1228, %p184;
	add.s32 	%r1348, %r117, %r1379;
	cvt.u64.u32 	%rd193, %r1348;
	add.s64 	%rd194, %rd193, %rd27;
	shr.u64 	%rd195, %rd194, 35;
	add.s64 	%rd196, %rd194, %rd195;
	shr.s64 	%rd197, %rd196, 29;
	setp.lt.s64 	%p220, %rd194, 0;
	and.b64  	%rd198, %rd196, -536870912;
	setp.ne.s64 	%p221, %rd198, %rd194;
	and.pred  	%p222, %p220, %p221;
	selp.u64 	%rd199, 1, 0, %p222;
	sub.s64 	%rd200, %rd199, %rd197;
	shl.b64 	%rd201, %rd200, 29;
	add.s64 	%rd202, %rd201, %rd194;
	shl.b64 	%rd203, %rd202, 2;
	add.s64 	%rd204, %rd3, %rd203;
	st.global.v4.u32 	[%rd204], {%r135, %r137, %r136, %r138};
LBB0_119:                               // %pass11260
                                        //   in Loop: Header=BB0_85 Depth=1
	selp.b32 	%r147, %r1264, %r1331, %p184;
	selp.b32 	%r148, %r1331, %r1268, %p184;
	selp.b32 	%r149, %r1272, %r1333, %p184;
	selp.b32 	%r150, %r1333, %r1276, %p184;
	add.s32 	%r1349, %r118, %r1379;
	cvt.u64.u32 	%rd205, %r1349;
	add.s64 	%rd206, %rd205, %rd27;
	shr.u64 	%rd207, %rd206, 35;
	add.s64 	%rd208, %rd206, %rd207;
	shr.s64 	%rd209, %rd208, 29;
	setp.lt.s64 	%p224, %rd206, 0;
	and.b64  	%rd210, %rd208, -536870912;
	setp.ne.s64 	%p225, %rd210, %rd206;
	and.pred  	%p226, %p224, %p225;
	selp.u64 	%rd211, 1, 0, %p226;
	sub.s64 	%rd212, %rd211, %rd209;
	shl.b64 	%rd213, %rd212, 29;
	add.s64 	%rd214, %rd213, %rd206;
	shl.b64 	%rd215, %rd214, 2;
	add.s64 	%rd216, %rd3, %rd215;
	st.global.v4.u32 	[%rd216], {%r139, %r141, %r140, %r142};
	@%p210 bra 	LBB0_90;
	bra.uni 	LBB0_120;
LBB0_90:                                // %L28870
                                        //   in Loop: Header=BB0_85 Depth=1
	selp.b32 	%r143, %r1248, %r1327, %p184;
	selp.b32 	%r144, %r1327, %r1252, %p184;
	selp.b32 	%r145, %r1256, %r1329, %p184;
	selp.b32 	%r146, %r1329, %r1260, %p184;
	add.s32 	%r1350, %r119, %r1379;
	cvt.u64.u32 	%rd217, %r1350;
	add.s64 	%rd218, %rd217, %rd27;
	shr.u64 	%rd219, %rd218, 35;
	add.s64 	%rd220, %rd218, %rd219;
	shr.s64 	%rd221, %rd220, 29;
	setp.lt.s64 	%p227, %rd218, 0;
	and.b64  	%rd222, %rd220, -536870912;
	setp.ne.s64 	%p228, %rd222, %rd218;
	and.pred  	%p229, %p227, %p228;
	selp.u64 	%rd223, 1, 0, %p229;
	sub.s64 	%rd224, %rd223, %rd221;
	shl.b64 	%rd225, %rd224, 29;
	add.s64 	%rd226, %rd225, %rd218;
	shl.b64 	%rd227, %rd226, 2;
	add.s64 	%rd228, %rd3, %rd227;
	st.global.v4.u32 	[%rd228], {%r143, %r145, %r144, %r146};
LBB0_120:                               // %pass11468
                                        //   in Loop: Header=BB0_85 Depth=1
	selp.b32 	%r155, %r1296, %r1339, %p184;
	selp.b32 	%r156, %r1339, %r1300, %p184;
	selp.b32 	%r157, %r1304, %r1341, %p184;
	selp.b32 	%r158, %r1341, %r1308, %p184;
	add.s32 	%r1351, %r120, %r1379;
	cvt.u64.u32 	%rd229, %r1351;
	add.s64 	%rd230, %rd229, %rd27;
	shr.u64 	%rd231, %rd230, 35;
	add.s64 	%rd232, %rd230, %rd231;
	shr.s64 	%rd233, %rd232, 29;
	setp.lt.s64 	%p231, %rd230, 0;
	and.b64  	%rd234, %rd232, -536870912;
	setp.ne.s64 	%p232, %rd234, %rd230;
	and.pred  	%p233, %p231, %p232;
	selp.u64 	%rd235, 1, 0, %p233;
	sub.s64 	%rd236, %rd235, %rd233;
	shl.b64 	%rd237, %rd236, 29;
	add.s64 	%rd238, %rd237, %rd230;
	shl.b64 	%rd239, %rd238, 2;
	add.s64 	%rd240, %rd3, %rd239;
	st.global.v4.u32 	[%rd240], {%r147, %r149, %r148, %r150};
	@%p210 bra 	LBB0_91;
	bra.uni 	LBB0_121;
LBB0_91:                                // %L29364
                                        //   in Loop: Header=BB0_85 Depth=1
	selp.b32 	%r151, %r1280, %r1335, %p184;
	selp.b32 	%r152, %r1335, %r1284, %p184;
	selp.b32 	%r153, %r1288, %r1337, %p184;
	selp.b32 	%r154, %r1337, %r1292, %p184;
	add.s32 	%r1352, %r121, %r1379;
	cvt.u64.u32 	%rd241, %r1352;
	add.s64 	%rd242, %rd241, %rd27;
	shr.u64 	%rd243, %rd242, 35;
	add.s64 	%rd244, %rd242, %rd243;
	shr.s64 	%rd245, %rd244, 29;
	setp.lt.s64 	%p234, %rd242, 0;
	and.b64  	%rd246, %rd244, -536870912;
	setp.ne.s64 	%p235, %rd246, %rd242;
	and.pred  	%p236, %p234, %p235;
	selp.u64 	%rd247, 1, 0, %p236;
	sub.s64 	%rd248, %rd247, %rd245;
	shl.b64 	%rd249, %rd248, 29;
	add.s64 	%rd250, %rd249, %rd242;
	shl.b64 	%rd251, %rd250, 2;
	add.s64 	%rd252, %rd3, %rd251;
	st.global.v4.u32 	[%rd252], {%r151, %r153, %r152, %r154};
	bra.uni 	LBB0_121;
LBB0_122:                               // %L29842
	st.global.u32 	[%rd4], %r1357;
	ret;
LBB0_7:                                 // %L247
	mov.u32 	%r1356, 2;
	st.global.u32 	[%rd4], %r1356;
	mov.u64 	%rd265, exception2656;
	cvta.global.u64 	%rd266, %rd265;
	{ // callseq 2, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd266;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 2
	{ // callseq 3, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd46;
	st.param.b32 	[param0+8], %r160;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 3
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
LBB0_1:                                 // %L8
	mov.u64 	%rd67, exception1;
	cvta.global.u64 	%rd68, %rd67;
	{ // callseq 0, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd68;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 0
	{ // callseq 1, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd46;
	st.param.b32 	[param0+8], %r160;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 1
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
                                        // -- End function
}
