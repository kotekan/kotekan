// PTX kernel code for the CUDA upchannelizer
// This file has been generated automatically by `upchan.jl`.
// Do not modify this file, your changes will be lost.

// PTX CompilerJob of MethodInstance for upchan16(::Int32, ::Int32, ::Int32, ::Int32, ::Int32, ::Int32, ::CuDeviceVector{Float16x2, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int32, 1}) for sm_86, minthreads=512, blocks_per_sm=2

//
// Generated by LLVM NVPTX Back-End
//

.version 8.2
.target sm_86
.address_size 64

	// .globl	_Z8upchan165Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE // -- Begin function _Z8upchan165Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE
.func gpu_report_exception
(
	.param .b64 gpu_report_exception_param_0
)
.noreturn
{
	trap;
}
.func gpu_signal_exception
(
	.param .align 8 .b8 gpu_signal_exception_param_0[16]
)
.noreturn
{
	trap;
}
.extern .shared .align 32 .b8 shmem[];
.global .align 1 .b8 exception1617[6] = {101, 114, 114, 111, 114, 0};
.global .align 1 .b8 exception1[10] = {101, 120, 99, 101, 112, 116, 105, 111, 110, 0};
                                        // @_Z8upchan165Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE
.visible .entry _Z8upchan165Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE(
	.param .align 8 .b8 _Z8upchan165Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_0[16],
	.param .u32 _Z8upchan165Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_1,
	.param .u32 _Z8upchan165Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_2,
	.param .u32 _Z8upchan165Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_3,
	.param .u32 _Z8upchan165Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_4,
	.param .u32 _Z8upchan165Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_5,
	.param .u32 _Z8upchan165Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_6,
	.param .align 8 .b8 _Z8upchan165Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_7[32],
	.param .align 8 .b8 _Z8upchan165Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_8[32],
	.param .align 8 .b8 _Z8upchan165Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_9[32],
	.param .align 8 .b8 _Z8upchan165Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_10[32]
)
.reqntid 512, 1, 1
.minnctapersm 2
{
	.reg .pred 	%p<198>;
	.reg .b16 	%rs<73>;
	.reg .b32 	%r<1124>;
	.reg .f32 	%f<792>;
	.reg .b64 	%rd<147>;

// %bb.0:                               // %conversion
	ld.param.u32 	%r75, [_Z8upchan165Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_0+8];
	ld.param.u64 	%rd31, [_Z8upchan165Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_0];
	// begin inline asm
	mov.u32 %r82, %dynamic_smem_size;
	// end inline asm
	setp.gt.u32 	%p1, %r82, 34943;
	@%p1 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:                              // %L10
	// begin inline asm
	mov.u32 %r83, %dynamic_smem_size;
	// end inline asm
	setp.gt.u32 	%p2, %r83, 34943;
	@%p2 bra 	$L__BB0_4;
	bra.uni 	$L__BB0_3;
$L__BB0_4:                              // %L26
	ld.param.u32 	%r76, [_Z8upchan165Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_1];
	ld.param.u64 	%rd4, [_Z8upchan165Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_10];
	mov.u32 	%r1, %tid.x;
	mov.u32 	%r2, %tid.y;
	shl.b32 	%r3, %r2, 5;
	mov.u32 	%r4, %ctaid.x;
	shl.b32 	%r84, %r4, 9;
	or.b32  	%r85, %r3, %r1;
	or.b32  	%r86, %r85, %r84;
	mul.wide.u32 	%rd36, %r86, 4;
	add.s64 	%rd5, %rd4, %rd36;
	mov.u32 	%r87, 1;
	st.global.u32 	[%rd5], %r87;
	setp.gt.u32 	%p3, %r76, 65535;
	@%p3 bra 	$L__BB0_9;
// %bb.5:                               // %L133
	ld.param.u32 	%r77, [_Z8upchan165Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_2];
	setp.lt.s32 	%p4, %r77, %r76;
	setp.gt.s32 	%p5, %r77, 131071;
	or.pred  	%p6, %p4, %p5;
	@%p6 bra 	$L__BB0_9;
// %bb.6:                               // %L140
	ld.param.u32 	%r78, [_Z8upchan165Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_3];
	sub.s32 	%r88, %r77, %r76;
	and.b32  	%r89, %r88, 255;
	setp.ne.s32 	%p7, %r89, 0;
	setp.gt.u32 	%p8, %r78, 4095;
	or.pred  	%p9, %p7, %p8;
	@%p9 bra 	$L__BB0_9;
// %bb.7:                               // %L151
	ld.param.u32 	%r79, [_Z8upchan165Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_4];
	setp.lt.s32 	%p10, %r79, %r78;
	setp.gt.s32 	%p11, %r79, 8191;
	or.pred  	%p12, %p10, %p11;
	@%p12 bra 	$L__BB0_9;
// %bb.8:                               // %L158
	sub.s32 	%r90, %r79, %r78;
	add.s32 	%r91, %r90, 3;
	and.b32  	%r92, %r91, 15;
	setp.eq.s32 	%p13, %r92, 0;
	@%p13 bra 	$L__BB0_10;
	bra.uni 	$L__BB0_9;
$L__BB0_10:                             // %L273
	ld.param.u32 	%r80, [_Z8upchan165Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_5];
	setp.lt.s32 	%p14, %r80, 0;
	@%p14 bra 	$L__BB0_12;
// %bb.11:                              // %L275
	ld.param.u32 	%r81, [_Z8upchan165Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_6];
	setp.le.s32 	%p15, %r80, %r81;
	setp.lt.s32 	%p16, %r81, 17;
	and.pred  	%p17, %p15, %p16;
	@%p17 bra 	$L__BB0_13;
	bra.uni 	$L__BB0_12;
$L__BB0_13:                             // %pass173
	shl.b32 	%r44, %r1, 1;
	and.b32  	%r97, %r44, 6;
	bfe.u32 	%r49, %r1, 2, 1;
	or.b32  	%r50, %r49, %r97;
	shl.b32 	%r51, %r50, 1;
	or.b32  	%r98, %r51, -63;
	cvt.rn.f32.s32 	%f46, %r98;
	mov.f32 	%f47, 0f43020000;
	div.approx.f32 	%f42, %f46, %f47;
	mov.f32 	%f71, 0f00000000;
	mul.f32 	%f44, %f42, 0f40800000;
	setp.neu.f32 	%p23, %f44, 0f00000000;
	mov.f32 	%f791, 0f3F800000;
	mov.f32 	%f784, %f791;
	@%p23 bra 	$L__BB0_14;
	bra.uni 	$L__BB0_15;
$L__BB0_14:                             // %L566
	add.f32 	%f74, %f44, %f44;
	mov.b32 	%r106, %f74;
	and.b32  	%r107, %r106, -2147483648;
	or.b32  	%r108, %r107, 1056964608;
	mov.b32 	%f75, %r108;
	add.f32 	%f76, %f74, %f75;
	cvt.rzi.f32.f32 	%f77, %f76;
	abs.f32 	%f78, %f74;
	setp.gt.f32 	%p24, %f78, 0f4B000000;
	selp.f32 	%f79, %f74, %f77, %p24;
	cvt.rzi.f32.f32 	%f80, %f74;
	setp.lt.f32 	%p25, %f78, 0f3F000000;
	selp.f32 	%f81, %f80, %f79, %p25;
	cvt.rzi.s32.f32 	%r109, %f81;
	fma.rn.f32 	%f82, %f81, 0fBF000000, %f44;
	mul.f32 	%f83, %f82, %f82;
	fma.rn.f32 	%f84, %f83, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f85, %f83, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f86, %f84, %f83, 0fC0A55DF6;
	fma.rn.f32 	%f87, %f85, %f83, 0f4081E0CF;
	fma.rn.f32 	%f88, %f83, %f82, 0f00000000;
	fma.rn.f32 	%f89, %f87, %f83, 0fC09DE9E6;
	fma.rn.f32 	%f90, %f86, %f88, 0f00000000;
	fma.rn.f32 	%f91, %f89, %f83, 0f3F800000;
	fma.rn.f32 	%f92, %f82, 0f40490FDB, %f90;
	and.b32  	%r110, %r109, 1;
	setp.eq.b32 	%p26, %r110, 1;
	selp.f32 	%f93, %f91, %f92, %p26;
	and.b32  	%r111, %r109, 2;
	setp.eq.s32 	%p27, %r111, 0;
	sub.f32 	%f95, %f71, %f93;
	selp.f32 	%f96, %f93, %f95, %p27;
	cvt.rzi.f32.f32 	%f97, %f44;
	setp.eq.f32 	%p28, %f44, %f97;
	mul.f32 	%f98, %f44, 0f00000000;
	selp.f32 	%f99, %f98, %f96, %p28;
	mul.f32 	%f100, %f42, 0f41490FDB;
	div.approx.f32 	%f784, %f99, %f100;
$L__BB0_15:                             // %L570
	or.b32  	%r112, %r51, -47;
	cvt.rn.f32.s32 	%f104, %r112;
	div.approx.f32 	%f4, %f104, %f47;
	mul.f32 	%f6, %f4, 0f40800000;
	setp.eq.f32 	%p34, %f6, 0f00000000;
	mov.f32 	%f785, %f791;
	@%p34 bra 	$L__BB0_17;
// %bb.16:                              // %L584
	add.f32 	%f132, %f6, %f6;
	mov.b32 	%r120, %f132;
	and.b32  	%r121, %r120, -2147483648;
	or.b32  	%r122, %r121, 1056964608;
	mov.b32 	%f133, %r122;
	add.f32 	%f134, %f132, %f133;
	cvt.rzi.f32.f32 	%f135, %f134;
	abs.f32 	%f136, %f132;
	setp.gt.f32 	%p35, %f136, 0f4B000000;
	selp.f32 	%f137, %f132, %f135, %p35;
	cvt.rzi.f32.f32 	%f138, %f132;
	setp.lt.f32 	%p36, %f136, 0f3F000000;
	selp.f32 	%f139, %f138, %f137, %p36;
	cvt.rzi.s32.f32 	%r123, %f139;
	fma.rn.f32 	%f140, %f139, 0fBF000000, %f6;
	mul.f32 	%f141, %f140, %f140;
	fma.rn.f32 	%f142, %f141, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f143, %f141, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f144, %f142, %f141, 0fC0A55DF6;
	fma.rn.f32 	%f145, %f143, %f141, 0f4081E0CF;
	fma.rn.f32 	%f146, %f141, %f140, 0f00000000;
	fma.rn.f32 	%f147, %f145, %f141, 0fC09DE9E6;
	fma.rn.f32 	%f148, %f144, %f146, 0f00000000;
	fma.rn.f32 	%f149, %f147, %f141, 0f3F800000;
	fma.rn.f32 	%f150, %f140, 0f40490FDB, %f148;
	and.b32  	%r124, %r123, 1;
	setp.eq.b32 	%p37, %r124, 1;
	selp.f32 	%f151, %f149, %f150, %p37;
	and.b32  	%r125, %r123, 2;
	setp.eq.s32 	%p38, %r125, 0;
	sub.f32 	%f153, %f71, %f151;
	selp.f32 	%f154, %f151, %f153, %p38;
	cvt.rzi.f32.f32 	%f155, %f6;
	setp.eq.f32 	%p39, %f6, %f155;
	mul.f32 	%f156, %f6, 0f00000000;
	selp.f32 	%f157, %f156, %f154, %p39;
	mul.f32 	%f158, %f4, 0f41490FDB;
	div.approx.f32 	%f785, %f157, %f158;
$L__BB0_17:                             // %L588
	or.b32  	%r129, %r51, -31;
	cvt.rn.f32.s32 	%f163, %r129;
	div.approx.f32 	%f9, %f163, %f47;
	mul.f32 	%f11, %f9, 0f40800000;
	setp.eq.f32 	%p45, %f11, 0f00000000;
	mov.f32 	%f786, %f791;
	@%p45 bra 	$L__BB0_19;
// %bb.18:                              // %L664
	add.f32 	%f191, %f11, %f11;
	mov.b32 	%r137, %f191;
	and.b32  	%r138, %r137, -2147483648;
	or.b32  	%r139, %r138, 1056964608;
	mov.b32 	%f192, %r139;
	add.f32 	%f193, %f191, %f192;
	cvt.rzi.f32.f32 	%f194, %f193;
	abs.f32 	%f195, %f191;
	setp.gt.f32 	%p46, %f195, 0f4B000000;
	selp.f32 	%f196, %f191, %f194, %p46;
	cvt.rzi.f32.f32 	%f197, %f191;
	setp.lt.f32 	%p47, %f195, 0f3F000000;
	selp.f32 	%f198, %f197, %f196, %p47;
	cvt.rzi.s32.f32 	%r140, %f198;
	fma.rn.f32 	%f199, %f198, 0fBF000000, %f11;
	mul.f32 	%f200, %f199, %f199;
	fma.rn.f32 	%f201, %f200, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f202, %f200, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f203, %f201, %f200, 0fC0A55DF6;
	fma.rn.f32 	%f204, %f202, %f200, 0f4081E0CF;
	fma.rn.f32 	%f205, %f200, %f199, 0f00000000;
	fma.rn.f32 	%f206, %f204, %f200, 0fC09DE9E6;
	fma.rn.f32 	%f207, %f203, %f205, 0f00000000;
	fma.rn.f32 	%f208, %f206, %f200, 0f3F800000;
	fma.rn.f32 	%f209, %f199, 0f40490FDB, %f207;
	and.b32  	%r141, %r140, 1;
	setp.eq.b32 	%p48, %r141, 1;
	selp.f32 	%f210, %f208, %f209, %p48;
	and.b32  	%r142, %r140, 2;
	setp.eq.s32 	%p49, %r142, 0;
	sub.f32 	%f212, %f71, %f210;
	selp.f32 	%f213, %f210, %f212, %p49;
	cvt.rzi.f32.f32 	%f214, %f11;
	setp.eq.f32 	%p50, %f11, %f214;
	mul.f32 	%f215, %f11, 0f00000000;
	selp.f32 	%f216, %f215, %f213, %p50;
	mul.f32 	%f217, %f9, 0f41490FDB;
	div.approx.f32 	%f786, %f216, %f217;
$L__BB0_19:                             // %L668
	or.b32  	%r143, %r51, -15;
	cvt.rn.f32.s32 	%f221, %r143;
	div.approx.f32 	%f15, %f221, %f47;
	mul.f32 	%f17, %f15, 0f40800000;
	setp.eq.f32 	%p56, %f17, 0f00000000;
	mov.f32 	%f787, %f791;
	@%p56 bra 	$L__BB0_21;
// %bb.20:                              // %L682
	add.f32 	%f249, %f17, %f17;
	mov.b32 	%r151, %f249;
	and.b32  	%r152, %r151, -2147483648;
	or.b32  	%r153, %r152, 1056964608;
	mov.b32 	%f250, %r153;
	add.f32 	%f251, %f249, %f250;
	cvt.rzi.f32.f32 	%f252, %f251;
	abs.f32 	%f253, %f249;
	setp.gt.f32 	%p57, %f253, 0f4B000000;
	selp.f32 	%f254, %f249, %f252, %p57;
	cvt.rzi.f32.f32 	%f255, %f249;
	setp.lt.f32 	%p58, %f253, 0f3F000000;
	selp.f32 	%f256, %f255, %f254, %p58;
	cvt.rzi.s32.f32 	%r154, %f256;
	fma.rn.f32 	%f257, %f256, 0fBF000000, %f17;
	mul.f32 	%f258, %f257, %f257;
	fma.rn.f32 	%f259, %f258, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f260, %f258, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f261, %f259, %f258, 0fC0A55DF6;
	fma.rn.f32 	%f262, %f260, %f258, 0f4081E0CF;
	fma.rn.f32 	%f263, %f258, %f257, 0f00000000;
	fma.rn.f32 	%f264, %f262, %f258, 0fC09DE9E6;
	fma.rn.f32 	%f265, %f261, %f263, 0f00000000;
	fma.rn.f32 	%f266, %f264, %f258, 0f3F800000;
	fma.rn.f32 	%f267, %f257, 0f40490FDB, %f265;
	and.b32  	%r155, %r154, 1;
	setp.eq.b32 	%p59, %r155, 1;
	selp.f32 	%f268, %f266, %f267, %p59;
	and.b32  	%r156, %r154, 2;
	setp.eq.s32 	%p60, %r156, 0;
	sub.f32 	%f270, %f71, %f268;
	selp.f32 	%f271, %f268, %f270, %p60;
	cvt.rzi.f32.f32 	%f272, %f17;
	setp.eq.f32 	%p61, %f17, %f272;
	mul.f32 	%f273, %f17, 0f00000000;
	selp.f32 	%f274, %f273, %f271, %p61;
	mul.f32 	%f275, %f15, 0f41490FDB;
	div.approx.f32 	%f787, %f274, %f275;
$L__BB0_21:                             // %L686
	or.b32  	%r160, %r51, 1;
	cvt.rn.f32.s32 	%f280, %r160;
	div.approx.f32 	%f20, %f280, %f47;
	mul.f32 	%f22, %f20, 0f40800000;
	setp.eq.f32 	%p67, %f22, 0f00000000;
	mov.f32 	%f788, %f791;
	@%p67 bra 	$L__BB0_23;
// %bb.22:                              // %L762
	add.f32 	%f308, %f22, %f22;
	mov.b32 	%r168, %f308;
	and.b32  	%r169, %r168, -2147483648;
	or.b32  	%r170, %r169, 1056964608;
	mov.b32 	%f309, %r170;
	add.f32 	%f310, %f308, %f309;
	cvt.rzi.f32.f32 	%f311, %f310;
	abs.f32 	%f312, %f308;
	setp.gt.f32 	%p68, %f312, 0f4B000000;
	selp.f32 	%f313, %f308, %f311, %p68;
	cvt.rzi.f32.f32 	%f314, %f308;
	setp.lt.f32 	%p69, %f312, 0f3F000000;
	selp.f32 	%f315, %f314, %f313, %p69;
	cvt.rzi.s32.f32 	%r171, %f315;
	fma.rn.f32 	%f316, %f315, 0fBF000000, %f22;
	mul.f32 	%f317, %f316, %f316;
	fma.rn.f32 	%f318, %f317, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f319, %f317, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f320, %f318, %f317, 0fC0A55DF6;
	fma.rn.f32 	%f321, %f319, %f317, 0f4081E0CF;
	fma.rn.f32 	%f322, %f317, %f316, 0f00000000;
	fma.rn.f32 	%f323, %f321, %f317, 0fC09DE9E6;
	fma.rn.f32 	%f324, %f320, %f322, 0f00000000;
	fma.rn.f32 	%f325, %f323, %f317, 0f3F800000;
	fma.rn.f32 	%f326, %f316, 0f40490FDB, %f324;
	and.b32  	%r172, %r171, 1;
	setp.eq.b32 	%p70, %r172, 1;
	selp.f32 	%f327, %f325, %f326, %p70;
	and.b32  	%r173, %r171, 2;
	setp.eq.s32 	%p71, %r173, 0;
	sub.f32 	%f329, %f71, %f327;
	selp.f32 	%f330, %f327, %f329, %p71;
	cvt.rzi.f32.f32 	%f331, %f22;
	setp.eq.f32 	%p72, %f22, %f331;
	mul.f32 	%f332, %f22, 0f00000000;
	selp.f32 	%f333, %f332, %f330, %p72;
	mul.f32 	%f334, %f20, 0f41490FDB;
	div.approx.f32 	%f788, %f333, %f334;
$L__BB0_23:                             // %L766
	or.b32  	%r174, %r51, 17;
	cvt.rn.f32.s32 	%f338, %r174;
	div.approx.f32 	%f26, %f338, %f47;
	mul.f32 	%f28, %f26, 0f40800000;
	setp.eq.f32 	%p78, %f28, 0f00000000;
	mov.f32 	%f789, %f791;
	@%p78 bra 	$L__BB0_25;
// %bb.24:                              // %L780
	add.f32 	%f366, %f28, %f28;
	mov.b32 	%r182, %f366;
	and.b32  	%r183, %r182, -2147483648;
	or.b32  	%r184, %r183, 1056964608;
	mov.b32 	%f367, %r184;
	add.f32 	%f368, %f366, %f367;
	cvt.rzi.f32.f32 	%f369, %f368;
	abs.f32 	%f370, %f366;
	setp.gt.f32 	%p79, %f370, 0f4B000000;
	selp.f32 	%f371, %f366, %f369, %p79;
	cvt.rzi.f32.f32 	%f372, %f366;
	setp.lt.f32 	%p80, %f370, 0f3F000000;
	selp.f32 	%f373, %f372, %f371, %p80;
	cvt.rzi.s32.f32 	%r185, %f373;
	fma.rn.f32 	%f374, %f373, 0fBF000000, %f28;
	mul.f32 	%f375, %f374, %f374;
	fma.rn.f32 	%f376, %f375, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f377, %f375, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f378, %f376, %f375, 0fC0A55DF6;
	fma.rn.f32 	%f379, %f377, %f375, 0f4081E0CF;
	fma.rn.f32 	%f380, %f375, %f374, 0f00000000;
	fma.rn.f32 	%f381, %f379, %f375, 0fC09DE9E6;
	fma.rn.f32 	%f382, %f378, %f380, 0f00000000;
	fma.rn.f32 	%f383, %f381, %f375, 0f3F800000;
	fma.rn.f32 	%f384, %f374, 0f40490FDB, %f382;
	and.b32  	%r186, %r185, 1;
	setp.eq.b32 	%p81, %r186, 1;
	selp.f32 	%f385, %f383, %f384, %p81;
	and.b32  	%r187, %r185, 2;
	setp.eq.s32 	%p82, %r187, 0;
	sub.f32 	%f387, %f71, %f385;
	selp.f32 	%f388, %f385, %f387, %p82;
	cvt.rzi.f32.f32 	%f389, %f28;
	setp.eq.f32 	%p83, %f28, %f389;
	mul.f32 	%f390, %f28, 0f00000000;
	selp.f32 	%f391, %f390, %f388, %p83;
	mul.f32 	%f392, %f26, 0f41490FDB;
	div.approx.f32 	%f789, %f391, %f392;
$L__BB0_25:                             // %L784
	or.b32  	%r191, %r51, 33;
	cvt.rn.f32.s32 	%f397, %r191;
	div.approx.f32 	%f31, %f397, %f47;
	mul.f32 	%f33, %f31, 0f40800000;
	setp.eq.f32 	%p89, %f33, 0f00000000;
	mov.f32 	%f790, %f791;
	@%p89 bra 	$L__BB0_27;
// %bb.26:                              // %L860
	add.f32 	%f425, %f33, %f33;
	mov.b32 	%r199, %f425;
	and.b32  	%r200, %r199, -2147483648;
	or.b32  	%r201, %r200, 1056964608;
	mov.b32 	%f426, %r201;
	add.f32 	%f427, %f425, %f426;
	cvt.rzi.f32.f32 	%f428, %f427;
	abs.f32 	%f429, %f425;
	setp.gt.f32 	%p90, %f429, 0f4B000000;
	selp.f32 	%f430, %f425, %f428, %p90;
	cvt.rzi.f32.f32 	%f431, %f425;
	setp.lt.f32 	%p91, %f429, 0f3F000000;
	selp.f32 	%f432, %f431, %f430, %p91;
	cvt.rzi.s32.f32 	%r202, %f432;
	fma.rn.f32 	%f433, %f432, 0fBF000000, %f33;
	mul.f32 	%f434, %f433, %f433;
	fma.rn.f32 	%f435, %f434, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f436, %f434, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f437, %f435, %f434, 0fC0A55DF6;
	fma.rn.f32 	%f438, %f436, %f434, 0f4081E0CF;
	fma.rn.f32 	%f439, %f434, %f433, 0f00000000;
	fma.rn.f32 	%f440, %f438, %f434, 0fC09DE9E6;
	fma.rn.f32 	%f441, %f437, %f439, 0f00000000;
	fma.rn.f32 	%f442, %f440, %f434, 0f3F800000;
	fma.rn.f32 	%f443, %f433, 0f40490FDB, %f441;
	and.b32  	%r203, %r202, 1;
	setp.eq.b32 	%p92, %r203, 1;
	selp.f32 	%f444, %f442, %f443, %p92;
	and.b32  	%r204, %r202, 2;
	setp.eq.s32 	%p93, %r204, 0;
	sub.f32 	%f446, %f71, %f444;
	selp.f32 	%f447, %f444, %f446, %p93;
	cvt.rzi.f32.f32 	%f448, %f33;
	setp.eq.f32 	%p94, %f33, %f448;
	mul.f32 	%f449, %f33, 0f00000000;
	selp.f32 	%f450, %f449, %f447, %p94;
	mul.f32 	%f451, %f31, 0f41490FDB;
	div.approx.f32 	%f790, %f450, %f451;
$L__BB0_27:                             // %L864
	or.b32  	%r205, %r51, 49;
	cvt.rn.f32.s32 	%f455, %r205;
	div.approx.f32 	%f37, %f455, %f47;
	mul.f32 	%f39, %f37, 0f40800000;
	setp.eq.f32 	%p100, %f39, 0f00000000;
	@%p100 bra 	$L__BB0_29;
// %bb.28:                              // %L878
	add.f32 	%f483, %f39, %f39;
	mov.b32 	%r213, %f483;
	and.b32  	%r214, %r213, -2147483648;
	or.b32  	%r215, %r214, 1056964608;
	mov.b32 	%f484, %r215;
	add.f32 	%f485, %f483, %f484;
	cvt.rzi.f32.f32 	%f486, %f485;
	abs.f32 	%f487, %f483;
	setp.gt.f32 	%p101, %f487, 0f4B000000;
	selp.f32 	%f488, %f483, %f486, %p101;
	cvt.rzi.f32.f32 	%f489, %f483;
	setp.lt.f32 	%p102, %f487, 0f3F000000;
	selp.f32 	%f490, %f489, %f488, %p102;
	cvt.rzi.s32.f32 	%r216, %f490;
	fma.rn.f32 	%f491, %f490, 0fBF000000, %f39;
	mul.f32 	%f492, %f491, %f491;
	fma.rn.f32 	%f493, %f492, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f494, %f492, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f495, %f493, %f492, 0fC0A55DF6;
	fma.rn.f32 	%f496, %f494, %f492, 0f4081E0CF;
	fma.rn.f32 	%f497, %f492, %f491, 0f00000000;
	fma.rn.f32 	%f498, %f496, %f492, 0fC09DE9E6;
	fma.rn.f32 	%f499, %f495, %f497, 0f00000000;
	fma.rn.f32 	%f500, %f498, %f492, 0f3F800000;
	fma.rn.f32 	%f501, %f491, 0f40490FDB, %f499;
	and.b32  	%r217, %r216, 1;
	setp.eq.b32 	%p103, %r217, 1;
	selp.f32 	%f502, %f500, %f501, %p103;
	and.b32  	%r218, %r216, 2;
	setp.eq.s32 	%p104, %r218, 0;
	sub.f32 	%f504, %f71, %f502;
	selp.f32 	%f505, %f502, %f504, %p104;
	cvt.rzi.f32.f32 	%f506, %f39;
	setp.eq.f32 	%p105, %f39, %f506;
	mul.f32 	%f507, %f39, 0f00000000;
	selp.f32 	%f508, %f507, %f505, %p105;
	mul.f32 	%f509, %f37, 0f41490FDB;
	div.approx.f32 	%f791, %f508, %f509;
$L__BB0_29:                             // %L882
	setp.le.s32 	%p163, %r77, %r76;
	mov.u32 	%r1113, 0;
	@%p163 bra 	$L__BB0_36;
// %bb.30:                              // %L1431.lr.ph
	abs.f32 	%f48, %f42;
	abs.f32 	%f106, %f4;
	abs.f32 	%f165, %f9;
	abs.f32 	%f223, %f15;
	abs.f32 	%f282, %f20;
	abs.f32 	%f340, %f26;
	setp.gt.f32 	%p18, %f48, 0f4B800000;
	mul.f32 	%f49, %f42, 0f00000000;
	setp.gt.f32 	%p29, %f106, 0f4B800000;
	mul.f32 	%f107, %f4, 0f00000000;
	setp.gt.f32 	%p40, %f165, 0f4B800000;
	mul.f32 	%f166, %f9, 0f00000000;
	setp.gt.f32 	%p51, %f223, 0f4B800000;
	mul.f32 	%f224, %f15, 0f00000000;
	setp.gt.f32 	%p62, %f282, 0f4B800000;
	mul.f32 	%f283, %f20, 0f00000000;
	setp.gt.f32 	%p73, %f340, 0f4B800000;
	mul.f32 	%f341, %f26, 0f00000000;
	abs.f32 	%f399, %f31;
	selp.f32 	%f50, %f49, %f42, %p18;
	selp.f32 	%f108, %f107, %f4, %p29;
	selp.f32 	%f167, %f166, %f9, %p40;
	selp.f32 	%f225, %f224, %f15, %p51;
	selp.f32 	%f284, %f283, %f20, %p62;
	selp.f32 	%f342, %f341, %f26, %p73;
	setp.gt.f32 	%p84, %f399, 0f4B800000;
	mul.f32 	%f400, %f31, 0f00000000;
	add.f32 	%f51, %f50, %f50;
	add.f32 	%f109, %f108, %f108;
	add.f32 	%f168, %f167, %f167;
	add.f32 	%f226, %f225, %f225;
	add.f32 	%f285, %f284, %f284;
	add.f32 	%f343, %f342, %f342;
	selp.f32 	%f401, %f400, %f31, %p84;
	abs.f32 	%f457, %f37;
	mov.b32 	%r99, %f51;
	mov.b32 	%r113, %f109;
	mov.b32 	%r130, %f168;
	mov.b32 	%r144, %f226;
	mov.b32 	%r161, %f285;
	mov.b32 	%r175, %f343;
	add.f32 	%f402, %f401, %f401;
	setp.gt.f32 	%p95, %f457, 0f4B800000;
	mul.f32 	%f458, %f37, 0f00000000;
	and.b32  	%r100, %r99, -2147483648;
	and.b32  	%r114, %r113, -2147483648;
	and.b32  	%r131, %r130, -2147483648;
	and.b32  	%r145, %r144, -2147483648;
	and.b32  	%r162, %r161, -2147483648;
	and.b32  	%r176, %r175, -2147483648;
	mov.b32 	%r192, %f402;
	selp.f32 	%f459, %f458, %f37, %p95;
	or.b32  	%r101, %r100, 1056964608;
	or.b32  	%r115, %r114, 1056964608;
	or.b32  	%r132, %r131, 1056964608;
	or.b32  	%r146, %r145, 1056964608;
	or.b32  	%r163, %r162, 1056964608;
	or.b32  	%r177, %r176, 1056964608;
	and.b32  	%r193, %r192, -2147483648;
	add.f32 	%f460, %f459, %f459;
	mov.b32 	%f52, %r101;
	mov.b32 	%f110, %r115;
	mov.b32 	%f169, %r132;
	mov.b32 	%f227, %r146;
	mov.b32 	%f286, %r163;
	mov.b32 	%f344, %r177;
	or.b32  	%r194, %r193, 1056964608;
	mov.b32 	%r206, %f460;
	add.f32 	%f53, %f51, %f52;
	abs.f32 	%f55, %f51;
	add.f32 	%f111, %f109, %f110;
	abs.f32 	%f113, %f109;
	add.f32 	%f170, %f168, %f169;
	abs.f32 	%f172, %f168;
	add.f32 	%f228, %f226, %f227;
	abs.f32 	%f230, %f226;
	add.f32 	%f287, %f285, %f286;
	abs.f32 	%f289, %f285;
	add.f32 	%f345, %f343, %f344;
	abs.f32 	%f347, %f343;
	mov.b32 	%f403, %r194;
	and.b32  	%r207, %r206, -2147483648;
	cvt.rzi.f32.f32 	%f54, %f53;
	setp.gt.f32 	%p19, %f55, 0f4B000000;
	cvt.rzi.f32.f32 	%f112, %f111;
	setp.gt.f32 	%p30, %f113, 0f4B000000;
	cvt.rzi.f32.f32 	%f171, %f170;
	setp.gt.f32 	%p41, %f172, 0f4B000000;
	cvt.rzi.f32.f32 	%f229, %f228;
	setp.gt.f32 	%p52, %f230, 0f4B000000;
	cvt.rzi.f32.f32 	%f288, %f287;
	setp.gt.f32 	%p63, %f289, 0f4B000000;
	cvt.rzi.f32.f32 	%f346, %f345;
	setp.gt.f32 	%p74, %f347, 0f4B000000;
	add.f32 	%f404, %f402, %f403;
	abs.f32 	%f406, %f402;
	or.b32  	%r208, %r207, 1056964608;
	selp.f32 	%f56, %f51, %f54, %p19;
	cvt.rzi.f32.f32 	%f57, %f51;
	setp.lt.f32 	%p20, %f55, 0f3F000000;
	selp.f32 	%f114, %f109, %f112, %p30;
	cvt.rzi.f32.f32 	%f115, %f109;
	setp.lt.f32 	%p31, %f113, 0f3F000000;
	selp.f32 	%f173, %f168, %f171, %p41;
	cvt.rzi.f32.f32 	%f174, %f168;
	setp.lt.f32 	%p42, %f172, 0f3F000000;
	selp.f32 	%f231, %f226, %f229, %p52;
	cvt.rzi.f32.f32 	%f232, %f226;
	setp.lt.f32 	%p53, %f230, 0f3F000000;
	selp.f32 	%f290, %f285, %f288, %p63;
	cvt.rzi.f32.f32 	%f291, %f285;
	setp.lt.f32 	%p64, %f289, 0f3F000000;
	selp.f32 	%f348, %f343, %f346, %p74;
	cvt.rzi.f32.f32 	%f349, %f343;
	setp.lt.f32 	%p75, %f347, 0f3F000000;
	cvt.rzi.f32.f32 	%f405, %f404;
	setp.gt.f32 	%p85, %f406, 0f4B000000;
	mov.b32 	%f461, %r208;
	selp.f32 	%f58, %f57, %f56, %p20;
	selp.f32 	%f116, %f115, %f114, %p31;
	selp.f32 	%f175, %f174, %f173, %p42;
	selp.f32 	%f233, %f232, %f231, %p53;
	selp.f32 	%f292, %f291, %f290, %p64;
	selp.f32 	%f350, %f349, %f348, %p75;
	selp.f32 	%f407, %f402, %f405, %p85;
	cvt.rzi.f32.f32 	%f408, %f402;
	setp.lt.f32 	%p86, %f406, 0f3F000000;
	add.f32 	%f462, %f460, %f461;
	abs.f32 	%f464, %f460;
	fma.rn.f32 	%f59, %f58, 0fBF000000, %f50;
	fma.rn.f32 	%f117, %f116, 0fBF000000, %f108;
	fma.rn.f32 	%f176, %f175, 0fBF000000, %f167;
	fma.rn.f32 	%f234, %f233, 0fBF000000, %f225;
	fma.rn.f32 	%f293, %f292, 0fBF000000, %f284;
	fma.rn.f32 	%f351, %f350, 0fBF000000, %f342;
	selp.f32 	%f409, %f408, %f407, %p86;
	cvt.rzi.f32.f32 	%f463, %f462;
	setp.gt.f32 	%p96, %f464, 0f4B000000;
	mul.f32 	%f60, %f59, %f59;
	mul.f32 	%f118, %f117, %f117;
	mul.f32 	%f177, %f176, %f176;
	mul.f32 	%f235, %f234, %f234;
	mul.f32 	%f294, %f293, %f293;
	mul.f32 	%f352, %f351, %f351;
	fma.rn.f32 	%f410, %f409, 0fBF000000, %f401;
	selp.f32 	%f465, %f460, %f463, %p96;
	cvt.rzi.f32.f32 	%f466, %f460;
	setp.lt.f32 	%p97, %f464, 0f3F000000;
	cvt.rzi.s32.f32 	%r102, %f58;
	fma.rn.f32 	%f61, %f60, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f62, %f60, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r116, %f116;
	fma.rn.f32 	%f119, %f118, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f120, %f118, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r133, %f175;
	fma.rn.f32 	%f178, %f177, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f179, %f177, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r147, %f233;
	fma.rn.f32 	%f236, %f235, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f237, %f235, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r164, %f292;
	fma.rn.f32 	%f295, %f294, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f296, %f294, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r178, %f350;
	fma.rn.f32 	%f353, %f352, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f354, %f352, 0f3E684E12, 0fBFAAD2E0;
	mul.f32 	%f411, %f410, %f410;
	selp.f32 	%f467, %f466, %f465, %p97;
	add.s32 	%r103, %r102, 1;
	fma.rn.f32 	%f63, %f61, %f60, 0fC0A55DF6;
	fma.rn.f32 	%f64, %f62, %f60, 0f4081E0CF;
	fma.rn.f32 	%f65, %f60, %f59, 0f00000000;
	add.s32 	%r117, %r116, 1;
	fma.rn.f32 	%f121, %f119, %f118, 0fC0A55DF6;
	fma.rn.f32 	%f122, %f120, %f118, 0f4081E0CF;
	fma.rn.f32 	%f123, %f118, %f117, 0f00000000;
	add.s32 	%r134, %r133, 1;
	fma.rn.f32 	%f180, %f178, %f177, 0fC0A55DF6;
	fma.rn.f32 	%f181, %f179, %f177, 0f4081E0CF;
	fma.rn.f32 	%f182, %f177, %f176, 0f00000000;
	add.s32 	%r148, %r147, 1;
	fma.rn.f32 	%f238, %f236, %f235, 0fC0A55DF6;
	fma.rn.f32 	%f239, %f237, %f235, 0f4081E0CF;
	fma.rn.f32 	%f240, %f235, %f234, 0f00000000;
	add.s32 	%r165, %r164, 1;
	fma.rn.f32 	%f297, %f295, %f294, 0fC0A55DF6;
	fma.rn.f32 	%f298, %f296, %f294, 0f4081E0CF;
	fma.rn.f32 	%f299, %f294, %f293, 0f00000000;
	add.s32 	%r179, %r178, 1;
	fma.rn.f32 	%f355, %f353, %f352, 0fC0A55DF6;
	fma.rn.f32 	%f356, %f354, %f352, 0f4081E0CF;
	fma.rn.f32 	%f357, %f352, %f351, 0f00000000;
	cvt.rzi.s32.f32 	%r195, %f409;
	fma.rn.f32 	%f412, %f411, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f413, %f411, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f468, %f467, 0fBF000000, %f459;
	fma.rn.f32 	%f66, %f64, %f60, 0fC09DE9E6;
	fma.rn.f32 	%f67, %f63, %f65, 0f00000000;
	and.b32  	%r104, %r103, 1;
	fma.rn.f32 	%f124, %f122, %f118, 0fC09DE9E6;
	fma.rn.f32 	%f125, %f121, %f123, 0f00000000;
	and.b32  	%r118, %r117, 1;
	fma.rn.f32 	%f183, %f181, %f177, 0fC09DE9E6;
	fma.rn.f32 	%f184, %f180, %f182, 0f00000000;
	and.b32  	%r135, %r134, 1;
	fma.rn.f32 	%f241, %f239, %f235, 0fC09DE9E6;
	fma.rn.f32 	%f242, %f238, %f240, 0f00000000;
	and.b32  	%r149, %r148, 1;
	fma.rn.f32 	%f300, %f298, %f294, 0fC09DE9E6;
	fma.rn.f32 	%f301, %f297, %f299, 0f00000000;
	and.b32  	%r166, %r165, 1;
	fma.rn.f32 	%f358, %f356, %f352, 0fC09DE9E6;
	fma.rn.f32 	%f359, %f355, %f357, 0f00000000;
	and.b32  	%r180, %r179, 1;
	add.s32 	%r196, %r195, 1;
	fma.rn.f32 	%f414, %f412, %f411, 0fC0A55DF6;
	fma.rn.f32 	%f415, %f413, %f411, 0f4081E0CF;
	fma.rn.f32 	%f416, %f411, %f410, 0f00000000;
	mul.f32 	%f469, %f468, %f468;
	and.b32  	%r40, %r4, 240;
	shl.b32 	%r41, %r1, 2;
	and.b32  	%r43, %r1, 2;
	fma.rn.f32 	%f68, %f66, %f60, 0f3F800000;
	fma.rn.f32 	%f69, %f59, 0f40490FDB, %f67;
	setp.eq.b32 	%p21, %r104, 1;
	fma.rn.f32 	%f126, %f124, %f118, 0f3F800000;
	fma.rn.f32 	%f127, %f117, 0f40490FDB, %f125;
	setp.eq.b32 	%p32, %r118, 1;
	fma.rn.f32 	%f185, %f183, %f177, 0f3F800000;
	fma.rn.f32 	%f186, %f176, 0f40490FDB, %f184;
	setp.eq.b32 	%p43, %r135, 1;
	fma.rn.f32 	%f243, %f241, %f235, 0f3F800000;
	fma.rn.f32 	%f244, %f234, 0f40490FDB, %f242;
	setp.eq.b32 	%p54, %r149, 1;
	fma.rn.f32 	%f302, %f300, %f294, 0f3F800000;
	fma.rn.f32 	%f303, %f293, 0f40490FDB, %f301;
	setp.eq.b32 	%p65, %r166, 1;
	fma.rn.f32 	%f360, %f358, %f352, 0f3F800000;
	fma.rn.f32 	%f361, %f351, 0f40490FDB, %f359;
	setp.eq.b32 	%p76, %r180, 1;
	fma.rn.f32 	%f417, %f415, %f411, 0fC09DE9E6;
	fma.rn.f32 	%f418, %f414, %f416, 0f00000000;
	and.b32  	%r197, %r196, 1;
	cvt.rzi.s32.f32 	%r209, %f467;
	fma.rn.f32 	%f470, %f469, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f471, %f469, 0f3E684E12, 0fBFAAD2E0;
	and.b32  	%r42, %r41, 4;
	or.b32  	%r93, %r43, %r40;
	selp.f32 	%f70, %f68, %f69, %p21;
	and.b32  	%r105, %r103, 2;
	selp.f32 	%f128, %f126, %f127, %p32;
	and.b32  	%r119, %r117, 2;
	selp.f32 	%f187, %f185, %f186, %p43;
	and.b32  	%r136, %r134, 2;
	selp.f32 	%f245, %f243, %f244, %p54;
	and.b32  	%r150, %r148, 2;
	selp.f32 	%f304, %f302, %f303, %p65;
	and.b32  	%r167, %r165, 2;
	selp.f32 	%f362, %f360, %f361, %p76;
	and.b32  	%r181, %r179, 2;
	fma.rn.f32 	%f419, %f417, %f411, 0f3F800000;
	fma.rn.f32 	%f420, %f410, 0f40490FDB, %f418;
	setp.eq.b32 	%p87, %r197, 1;
	add.s32 	%r210, %r209, 1;
	fma.rn.f32 	%f472, %f470, %f469, 0fC0A55DF6;
	fma.rn.f32 	%f473, %f471, %f469, 0f4081E0CF;
	fma.rn.f32 	%f474, %f469, %f468, 0f00000000;
	and.b32  	%r45, %r44, 8;
	or.b32  	%r94, %r93, %r42;
	setp.eq.s32 	%p22, %r105, 0;
	sub.f32 	%f72, %f71, %f70;
	setp.eq.s32 	%p33, %r119, 0;
	sub.f32 	%f130, %f71, %f128;
	setp.eq.s32 	%p44, %r136, 0;
	sub.f32 	%f189, %f71, %f187;
	setp.eq.s32 	%p55, %r150, 0;
	sub.f32 	%f247, %f71, %f245;
	setp.eq.s32 	%p66, %r167, 0;
	sub.f32 	%f306, %f71, %f304;
	setp.eq.s32 	%p77, %r181, 0;
	sub.f32 	%f364, %f71, %f362;
	selp.f32 	%f421, %f419, %f420, %p87;
	and.b32  	%r198, %r196, 2;
	fma.rn.f32 	%f475, %f473, %f469, 0fC09DE9E6;
	fma.rn.f32 	%f476, %f472, %f474, 0f00000000;
	and.b32  	%r211, %r210, 1;
	or.b32  	%r95, %r94, %r45;
	selp.f32 	%f73, %f70, %f72, %p22;
	selp.f32 	%f131, %f128, %f130, %p33;
	selp.f32 	%f190, %f187, %f189, %p44;
	selp.f32 	%f248, %f245, %f247, %p55;
	selp.f32 	%f307, %f304, %f306, %p66;
	selp.f32 	%f365, %f362, %f364, %p77;
	setp.eq.s32 	%p88, %r198, 0;
	sub.f32 	%f423, %f71, %f421;
	fma.rn.f32 	%f477, %f475, %f469, 0f3F800000;
	fma.rn.f32 	%f478, %f468, 0f40490FDB, %f476;
	setp.eq.b32 	%p98, %r211, 1;
	shr.u32 	%r96, %r95, 1;
	mul.f32 	%f43, %f73, %f73;
	mul.f32 	%f5, %f131, %f131;
	mul.f32 	%f10, %f190, %f190;
	mul.f32 	%f16, %f248, %f248;
	mul.f32 	%f21, %f307, %f307;
	mul.f32 	%f27, %f365, %f365;
	selp.f32 	%f424, %f421, %f423, %p88;
	selp.f32 	%f479, %f477, %f478, %p98;
	and.b32  	%r212, %r210, 2;
	ld.param.u64 	%rd1, [_Z8upchan165Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_7];
	mul.wide.u32 	%rd37, %r96, 4;
	mul.f32 	%f102, %f784, %f43;
	mov.f32 	%f103, 0f41800000;
	mul.f32 	%f160, %f785, %f5;
	mul.f32 	%f219, %f786, %f10;
	mul.f32 	%f277, %f787, %f16;
	mul.f32 	%f336, %f788, %f21;
	mul.f32 	%f394, %f789, %f27;
	mul.f32 	%f32, %f424, %f424;
	setp.eq.s32 	%p99, %r212, 0;
	sub.f32 	%f481, %f71, %f479;
	add.s64 	%rd38, %rd1, %rd37;
	div.approx.f32 	%f3, %f102, %f103;
	div.approx.f32 	%f162, %f160, %f103;
	div.approx.f32 	%f14, %f219, %f103;
	div.approx.f32 	%f279, %f277, %f103;
	div.approx.f32 	%f25, %f336, %f103;
	div.approx.f32 	%f396, %f394, %f103;
	mul.f32 	%f453, %f790, %f32;
	selp.f32 	%f482, %f479, %f481, %p99;
	ld.param.u64 	%rd2, [_Z8upchan165Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_8];
	ld.param.u64 	%rd3, [_Z8upchan165Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_9];
	ld.global.u32 	%r46, [%rd38];
	shr.u32 	%r47, %r1, 1;
	shr.u32 	%r48, %r1, 2;
	mov.b32 	%r128, %f162;
	mov.b32 	%r127, %f3;
	mov.b32 	%r159, %f279;
	mov.b32 	%r158, %f14;
	mov.b32 	%r190, %f396;
	mov.b32 	%r189, %f25;
	div.approx.f32 	%f36, %f453, %f103;
	mul.f32 	%f38, %f482, %f482;
	// begin inline asm
	cvt.rn.f16x2.f32 %r126, %r128, %r127;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r157, %r159, %r158;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r188, %r190, %r189;
	// end inline asm
	mul.f32 	%f510, %f791, %f38;
	div.approx.f32 	%f512, %f510, %f103;
	mov.b32 	%r221, %f512;
	mov.b32 	%r220, %f36;
	// begin inline asm
	cvt.rn.f16x2.f32 %r219, %r221, %r220;
	// end inline asm
	mul.lo.s32 	%r258, %r50, 15;
	and.b32  	%r259, %r258, 31;
	cvt.rn.f32.s32 	%f513, %r259;
	div.approx.f32 	%f514, %f513, %f103;
	add.f32 	%f515, %f514, %f514;
	mov.b32 	%r260, %f515;
	and.b32  	%r261, %r260, -2147483648;
	or.b32  	%r262, %r261, 1056964608;
	mov.b32 	%f516, %r262;
	add.f32 	%f517, %f515, %f516;
	cvt.rzi.f32.f32 	%f518, %f517;
	abs.f32 	%f519, %f515;
	setp.gt.f32 	%p106, %f519, 0f4B000000;
	selp.f32 	%f520, %f515, %f518, %p106;
	cvt.rzi.f32.f32 	%f521, %f515;
	setp.lt.f32 	%p107, %f519, 0f3F000000;
	selp.f32 	%f522, %f521, %f520, %p107;
	cvt.rzi.s32.f32 	%r263, %f522;
	fma.rn.f32 	%f523, %f522, 0fBF000000, %f514;
	mul.f32 	%f524, %f523, %f523;
	fma.rn.f32 	%f525, %f524, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f526, %f524, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f527, %f525, %f524, 0fC0A55DF6;
	fma.rn.f32 	%f528, %f526, %f524, 0f4081E0CF;
	fma.rn.f32 	%f529, %f524, %f523, 0f00000000;
	fma.rn.f32 	%f530, %f528, %f524, 0fC09DE9E6;
	fma.rn.f32 	%f531, %f527, %f529, 0f00000000;
	fma.rn.f32 	%f532, %f530, %f524, 0f3F800000;
	fma.rn.f32 	%f533, %f523, 0f40490FDB, %f531;
	and.b32  	%r264, %r263, 1;
	setp.eq.b32 	%p108, %r264, 1;
	selp.f32 	%f534, %f532, %f533, %p108;
	selp.f32 	%f535, %f533, %f532, %p108;
	and.b32  	%r265, %r263, 2;
	setp.eq.s32 	%p109, %r265, 0;
	neg.f32 	%f536, %f534;
	selp.f32 	%f537, %f534, %f536, %p109;
	add.s32 	%r266, %r263, 1;
	and.b32  	%r267, %r266, 2;
	setp.eq.s32 	%p110, %r267, 0;
	sub.f32 	%f539, %f71, %f535;
	selp.f32 	%f540, %f535, %f539, %p110;
	cvt.rzi.f32.f32 	%f541, %f514;
	setp.eq.f32 	%p111, %f541, %f514;
	mul.f32 	%f542, %f514, 0f00000000;
	selp.f32 	%f543, %f542, %f537, %p111;
	abs.f32 	%f544, %f514;
	setp.gt.f32 	%p112, %f544, 0f4B800000;
	add.f32 	%f545, %f543, 0f3F800000;
	selp.f32 	%f546, %f545, %f540, %p112;
	add.s32 	%r268, %r258, 24;
	and.b32  	%r269, %r268, 31;
	cvt.rn.f32.s32 	%f547, %r269;
	div.approx.f32 	%f548, %f547, %f103;
	add.f32 	%f549, %f548, %f548;
	mov.b32 	%r270, %f549;
	and.b32  	%r271, %r270, -2147483648;
	or.b32  	%r272, %r271, 1056964608;
	mov.b32 	%f550, %r272;
	add.f32 	%f551, %f549, %f550;
	cvt.rzi.f32.f32 	%f552, %f551;
	abs.f32 	%f553, %f549;
	setp.gt.f32 	%p113, %f553, 0f4B000000;
	selp.f32 	%f554, %f549, %f552, %p113;
	cvt.rzi.f32.f32 	%f555, %f549;
	setp.lt.f32 	%p114, %f553, 0f3F000000;
	selp.f32 	%f556, %f555, %f554, %p114;
	cvt.rzi.s32.f32 	%r273, %f556;
	fma.rn.f32 	%f557, %f556, 0fBF000000, %f548;
	mul.f32 	%f558, %f557, %f557;
	fma.rn.f32 	%f559, %f558, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f560, %f558, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f561, %f559, %f558, 0fC0A55DF6;
	fma.rn.f32 	%f562, %f560, %f558, 0f4081E0CF;
	fma.rn.f32 	%f563, %f558, %f557, 0f00000000;
	fma.rn.f32 	%f564, %f562, %f558, 0fC09DE9E6;
	fma.rn.f32 	%f565, %f561, %f563, 0f00000000;
	fma.rn.f32 	%f566, %f564, %f558, 0f3F800000;
	fma.rn.f32 	%f567, %f557, 0f40490FDB, %f565;
	and.b32  	%r274, %r273, 1;
	setp.eq.b32 	%p115, %r274, 1;
	selp.f32 	%f568, %f566, %f567, %p115;
	selp.f32 	%f569, %f567, %f566, %p115;
	and.b32  	%r275, %r273, 2;
	setp.eq.s32 	%p116, %r275, 0;
	neg.f32 	%f570, %f568;
	selp.f32 	%f571, %f568, %f570, %p116;
	add.s32 	%r276, %r273, 1;
	and.b32  	%r277, %r276, 2;
	setp.eq.s32 	%p117, %r277, 0;
	sub.f32 	%f572, %f71, %f569;
	selp.f32 	%f573, %f569, %f572, %p117;
	cvt.rzi.f32.f32 	%f574, %f548;
	setp.eq.f32 	%p118, %f574, %f548;
	mul.f32 	%f575, %f548, 0f00000000;
	selp.f32 	%f576, %f575, %f571, %p118;
	abs.f32 	%f577, %f548;
	setp.gt.f32 	%p119, %f577, 0f4B800000;
	add.f32 	%f578, %f576, 0f3F800000;
	selp.f32 	%f579, %f578, %f573, %p119;
	mov.b32 	%r223, %f546;
	mov.b32 	%r224, %f579;
	// begin inline asm
	cvt.rn.f16x2.f32 %r222, %r224, %r223;
	// end inline asm
	mov.b32 	%r226, %f543;
	mov.b32 	%r227, %f576;
	// begin inline asm
	cvt.rn.f16x2.f32 %r225, %r227, %r226;
	// end inline asm
	shr.u32 	%r11, %r1, 3;
	and.b32  	%r278, %r11, 2;
	and.b32  	%r279, %r47, 4;
	or.b32  	%r280, %r49, %r278;
	or.b32  	%r281, %r280, %r279;
	mul.lo.s32 	%r282, %r281, %r97;
	and.b32  	%r283, %r282, 14;
	cvt.rn.f32.s32 	%f580, %r283;
	mov.f32 	%f581, 0f41000000;
	div.approx.f32 	%f582, %f580, %f581;
	add.f32 	%f583, %f582, %f582;
	mov.b32 	%r284, %f583;
	and.b32  	%r285, %r284, -2147483648;
	or.b32  	%r286, %r285, 1056964608;
	mov.b32 	%f584, %r286;
	add.f32 	%f585, %f583, %f584;
	cvt.rzi.f32.f32 	%f586, %f585;
	abs.f32 	%f587, %f583;
	setp.gt.f32 	%p120, %f587, 0f4B000000;
	selp.f32 	%f588, %f583, %f586, %p120;
	cvt.rzi.f32.f32 	%f589, %f583;
	setp.lt.f32 	%p121, %f587, 0f3F000000;
	selp.f32 	%f590, %f589, %f588, %p121;
	cvt.rzi.s32.f32 	%r287, %f590;
	fma.rn.f32 	%f591, %f590, 0fBF000000, %f582;
	mul.f32 	%f592, %f591, %f591;
	fma.rn.f32 	%f593, %f592, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f594, %f592, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f595, %f593, %f592, 0fC0A55DF6;
	fma.rn.f32 	%f596, %f594, %f592, 0f4081E0CF;
	fma.rn.f32 	%f597, %f592, %f591, 0f00000000;
	fma.rn.f32 	%f598, %f596, %f592, 0fC09DE9E6;
	fma.rn.f32 	%f599, %f595, %f597, 0f00000000;
	fma.rn.f32 	%f600, %f598, %f592, 0f3F800000;
	fma.rn.f32 	%f601, %f591, 0f40490FDB, %f599;
	and.b32  	%r288, %r287, 1;
	setp.eq.b32 	%p122, %r288, 1;
	selp.f32 	%f602, %f600, %f601, %p122;
	selp.f32 	%f603, %f601, %f600, %p122;
	and.b32  	%r289, %r287, 2;
	setp.eq.s32 	%p123, %r289, 0;
	neg.f32 	%f604, %f602;
	selp.f32 	%f605, %f602, %f604, %p123;
	add.s32 	%r290, %r287, 1;
	and.b32  	%r291, %r290, 2;
	setp.eq.s32 	%p124, %r291, 0;
	sub.f32 	%f606, %f71, %f603;
	selp.f32 	%f607, %f603, %f606, %p124;
	cvt.rzi.f32.f32 	%f608, %f582;
	setp.eq.f32 	%p125, %f608, %f582;
	mul.f32 	%f609, %f582, 0f00000000;
	selp.f32 	%f610, %f609, %f605, %p125;
	abs.f32 	%f611, %f582;
	setp.gt.f32 	%p126, %f611, 0f4B800000;
	add.f32 	%f612, %f610, 0f3F800000;
	selp.f32 	%f613, %f612, %f607, %p126;
	or.b32  	%r292, %r44, 8;
	mul.lo.s32 	%r293, %r281, %r292;
	and.b32  	%r294, %r293, 14;
	cvt.rn.f32.s32 	%f614, %r294;
	div.approx.f32 	%f615, %f614, %f581;
	add.f32 	%f616, %f615, %f615;
	mov.b32 	%r295, %f616;
	and.b32  	%r296, %r295, -2147483648;
	or.b32  	%r297, %r296, 1056964608;
	mov.b32 	%f617, %r297;
	add.f32 	%f618, %f616, %f617;
	cvt.rzi.f32.f32 	%f619, %f618;
	abs.f32 	%f620, %f616;
	setp.gt.f32 	%p127, %f620, 0f4B000000;
	selp.f32 	%f621, %f616, %f619, %p127;
	cvt.rzi.f32.f32 	%f622, %f616;
	setp.lt.f32 	%p128, %f620, 0f3F000000;
	selp.f32 	%f623, %f622, %f621, %p128;
	cvt.rzi.s32.f32 	%r298, %f623;
	fma.rn.f32 	%f624, %f623, 0fBF000000, %f615;
	mul.f32 	%f625, %f624, %f624;
	fma.rn.f32 	%f626, %f625, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f627, %f625, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f628, %f626, %f625, 0fC0A55DF6;
	fma.rn.f32 	%f629, %f627, %f625, 0f4081E0CF;
	fma.rn.f32 	%f630, %f625, %f624, 0f00000000;
	fma.rn.f32 	%f631, %f629, %f625, 0fC09DE9E6;
	fma.rn.f32 	%f632, %f628, %f630, 0f00000000;
	fma.rn.f32 	%f633, %f631, %f625, 0f3F800000;
	fma.rn.f32 	%f634, %f624, 0f40490FDB, %f632;
	and.b32  	%r299, %r298, 1;
	setp.eq.b32 	%p129, %r299, 1;
	selp.f32 	%f635, %f633, %f634, %p129;
	selp.f32 	%f636, %f634, %f633, %p129;
	and.b32  	%r300, %r298, 2;
	setp.eq.s32 	%p130, %r300, 0;
	neg.f32 	%f637, %f635;
	selp.f32 	%f638, %f635, %f637, %p130;
	add.s32 	%r301, %r298, 1;
	and.b32  	%r302, %r301, 2;
	setp.eq.s32 	%p131, %r302, 0;
	sub.f32 	%f639, %f71, %f636;
	selp.f32 	%f640, %f636, %f639, %p131;
	cvt.rzi.f32.f32 	%f641, %f615;
	setp.eq.f32 	%p132, %f641, %f615;
	mul.f32 	%f642, %f615, 0f00000000;
	selp.f32 	%f643, %f642, %f638, %p132;
	abs.f32 	%f644, %f615;
	setp.gt.f32 	%p133, %f644, 0f4B800000;
	add.f32 	%f645, %f643, 0f3F800000;
	selp.f32 	%f646, %f645, %f640, %p133;
	mov.b32 	%r229, %f613;
	mov.b32 	%r230, %f646;
	// begin inline asm
	cvt.rn.f16x2.f32 %r228, %r230, %r229;
	// end inline asm
	mov.b32 	%r232, %f610;
	mov.b32 	%r233, %f643;
	// begin inline asm
	cvt.rn.f16x2.f32 %r231, %r233, %r232;
	// end inline asm
	xor.b32  	%r235, %r232, -2147483648;
	xor.b32  	%r236, %r233, -2147483648;
	// begin inline asm
	cvt.rn.f16x2.f32 %r234, %r236, %r235;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r237, %r230, %r229;
	// end inline asm
	div.approx.f32 	%f647, %f71, %f103;
	add.f32 	%f648, %f647, %f647;
	mov.b32 	%r303, %f648;
	and.b32  	%r304, %r303, -2147483648;
	or.b32  	%r305, %r304, 1056964608;
	mov.b32 	%f649, %r305;
	add.f32 	%f650, %f648, %f649;
	cvt.rzi.f32.f32 	%f651, %f650;
	abs.f32 	%f652, %f648;
	setp.gt.f32 	%p134, %f652, 0f4B000000;
	selp.f32 	%f653, %f648, %f651, %p134;
	cvt.rzi.f32.f32 	%f654, %f648;
	setp.lt.f32 	%p135, %f652, 0f3F000000;
	selp.f32 	%f655, %f654, %f653, %p135;
	cvt.rzi.s32.f32 	%r306, %f655;
	fma.rn.f32 	%f656, %f655, 0fBF000000, %f647;
	mul.f32 	%f657, %f656, %f656;
	fma.rn.f32 	%f658, %f657, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f659, %f657, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f660, %f658, %f657, 0fC0A55DF6;
	fma.rn.f32 	%f661, %f659, %f657, 0f4081E0CF;
	fma.rn.f32 	%f662, %f657, %f656, 0f00000000;
	fma.rn.f32 	%f663, %f661, %f657, 0fC09DE9E6;
	fma.rn.f32 	%f664, %f660, %f662, 0f00000000;
	fma.rn.f32 	%f665, %f663, %f657, 0f3F800000;
	fma.rn.f32 	%f666, %f656, 0f40490FDB, %f664;
	and.b32  	%r307, %r306, 1;
	setp.eq.b32 	%p136, %r307, 1;
	selp.f32 	%f667, %f665, %f666, %p136;
	selp.f32 	%f668, %f666, %f665, %p136;
	and.b32  	%r308, %r306, 2;
	setp.eq.s32 	%p137, %r308, 0;
	neg.f32 	%f669, %f667;
	selp.f32 	%f670, %f667, %f669, %p137;
	add.s32 	%r309, %r306, 1;
	and.b32  	%r310, %r309, 2;
	setp.eq.s32 	%p138, %r310, 0;
	sub.f32 	%f671, %f71, %f668;
	selp.f32 	%f672, %f668, %f671, %p138;
	cvt.rzi.f32.f32 	%f673, %f647;
	setp.eq.f32 	%p139, %f673, %f647;
	mul.f32 	%f674, %f647, 0f00000000;
	selp.f32 	%f675, %f674, %f670, %p139;
	mov.b32 	%r311, %f675;
	abs.f32 	%f676, %f647;
	setp.gt.f32 	%p140, %f676, 0f4B800000;
	add.f32 	%f677, %f675, 0f3F800000;
	selp.f32 	%f678, %f677, %f672, %p140;
	and.b32  	%r17, %r1, 8;
	shl.b32 	%r312, %r280, 1;
	or.b32  	%r313, %r312, %r17;
	cvt.rn.f32.s32 	%f679, %r313;
	div.approx.f32 	%f680, %f679, %f103;
	add.f32 	%f681, %f680, %f680;
	mov.b32 	%r314, %f681;
	and.b32  	%r315, %r314, -2147483648;
	or.b32  	%r316, %r315, 1056964608;
	mov.b32 	%f682, %r316;
	add.f32 	%f683, %f681, %f682;
	cvt.rzi.f32.f32 	%f684, %f683;
	abs.f32 	%f685, %f681;
	setp.gt.f32 	%p141, %f685, 0f4B000000;
	selp.f32 	%f686, %f681, %f684, %p141;
	cvt.rzi.f32.f32 	%f687, %f681;
	setp.lt.f32 	%p142, %f685, 0f3F000000;
	selp.f32 	%f688, %f687, %f686, %p142;
	cvt.rzi.s32.f32 	%r317, %f688;
	fma.rn.f32 	%f689, %f688, 0fBF000000, %f680;
	mul.f32 	%f690, %f689, %f689;
	fma.rn.f32 	%f691, %f690, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f692, %f690, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f693, %f691, %f690, 0fC0A55DF6;
	fma.rn.f32 	%f694, %f692, %f690, 0f4081E0CF;
	fma.rn.f32 	%f695, %f690, %f689, 0f00000000;
	fma.rn.f32 	%f696, %f694, %f690, 0fC09DE9E6;
	fma.rn.f32 	%f697, %f693, %f695, 0f00000000;
	fma.rn.f32 	%f698, %f696, %f690, 0f3F800000;
	fma.rn.f32 	%f699, %f689, 0f40490FDB, %f697;
	and.b32  	%r318, %r317, 1;
	setp.eq.b32 	%p143, %r318, 1;
	selp.f32 	%f700, %f698, %f699, %p143;
	selp.f32 	%f701, %f699, %f698, %p143;
	and.b32  	%r319, %r317, 2;
	setp.eq.s32 	%p144, %r319, 0;
	neg.f32 	%f702, %f700;
	selp.f32 	%f703, %f700, %f702, %p144;
	add.s32 	%r320, %r317, 1;
	and.b32  	%r321, %r320, 2;
	setp.eq.s32 	%p145, %r321, 0;
	sub.f32 	%f704, %f71, %f701;
	selp.f32 	%f705, %f701, %f704, %p145;
	cvt.rzi.f32.f32 	%f706, %f680;
	setp.eq.f32 	%p146, %f706, %f680;
	mul.f32 	%f707, %f680, 0f00000000;
	selp.f32 	%f708, %f707, %f703, %p146;
	mov.b32 	%r322, %f708;
	abs.f32 	%f709, %f680;
	setp.gt.f32 	%p147, %f709, 0f4B800000;
	add.f32 	%f710, %f708, 0f3F800000;
	selp.f32 	%f711, %f710, %f705, %p147;
	mov.b32 	%r241, %f678;
	mov.b32 	%r242, %f711;
	// begin inline asm
	cvt.rn.f16x2.f32 %r240, %r242, %r241;
	// end inline asm
	xor.b32  	%r244, %r311, -2147483648;
	xor.b32  	%r245, %r322, -2147483648;
	// begin inline asm
	cvt.rn.f16x2.f32 %r243, %r245, %r244;
	// end inline asm
	shr.u32 	%r20, %r1, 4;
	and.b32  	%r323, %r48, 2;
	or.b32  	%r324, %r323, %r20;
	cvt.u16.u32 	%rs1, %r1;
	and.b16  	%rs2, %rs1, 2;
	shl.b16 	%rs3, %rs1, 1;
	shr.u16 	%rs4, %rs2, 1;
	or.b16  	%rs5, %rs3, %rs4;
	and.b16  	%rs6, %rs5, 3;
	cvt.u32.u16 	%r325, %rs6;
	setp.eq.s32 	%p148, %r324, %r325;
	mov.f32 	%f712, 0f40000000;
	div.approx.f32 	%f713, %f71, %f712;
	add.f32 	%f714, %f713, %f713;
	mov.b32 	%r326, %f714;
	and.b32  	%r327, %r326, -2147483648;
	or.b32  	%r328, %r327, 1056964608;
	mov.b32 	%f715, %r328;
	add.f32 	%f716, %f714, %f715;
	cvt.rzi.f32.f32 	%f717, %f716;
	abs.f32 	%f718, %f714;
	setp.gt.f32 	%p149, %f718, 0f4B000000;
	selp.f32 	%f719, %f714, %f717, %p149;
	cvt.rzi.f32.f32 	%f720, %f714;
	setp.lt.f32 	%p150, %f718, 0f3F000000;
	selp.f32 	%f721, %f720, %f719, %p150;
	cvt.rzi.s32.f32 	%r329, %f721;
	fma.rn.f32 	%f722, %f721, 0fBF000000, %f713;
	mul.f32 	%f723, %f722, %f722;
	fma.rn.f32 	%f724, %f723, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f725, %f723, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f726, %f724, %f723, 0fC0A55DF6;
	fma.rn.f32 	%f727, %f725, %f723, 0f4081E0CF;
	fma.rn.f32 	%f728, %f723, %f722, 0f00000000;
	fma.rn.f32 	%f729, %f727, %f723, 0fC09DE9E6;
	fma.rn.f32 	%f730, %f726, %f728, 0f00000000;
	fma.rn.f32 	%f731, %f729, %f723, 0f3F800000;
	fma.rn.f32 	%f732, %f722, 0f40490FDB, %f730;
	and.b32  	%r330, %r329, 1;
	setp.eq.b32 	%p151, %r330, 1;
	selp.f32 	%f733, %f731, %f732, %p151;
	selp.f32 	%f734, %f732, %f731, %p151;
	and.b32  	%r331, %r329, 2;
	setp.eq.s32 	%p152, %r331, 0;
	neg.f32 	%f735, %f733;
	selp.f32 	%f736, %f733, %f735, %p152;
	add.s32 	%r332, %r329, 1;
	and.b32  	%r333, %r332, 2;
	setp.eq.s32 	%p153, %r333, 0;
	sub.f32 	%f737, %f71, %f734;
	selp.f32 	%f738, %f734, %f737, %p153;
	cvt.rzi.f32.f32 	%f739, %f713;
	setp.eq.f32 	%p154, %f739, %f713;
	mul.f32 	%f740, %f713, 0f00000000;
	selp.f32 	%f741, %f740, %f736, %p154;
	abs.f32 	%f742, %f713;
	setp.gt.f32 	%p155, %f742, 0f4B800000;
	add.f32 	%f743, %f741, 0f3F800000;
	selp.f32 	%f744, %f743, %f738, %p155;
	selp.f32 	%f745, 0f3F800000, 0f00000000, %p148;
	mul.f32 	%f746, %f744, %f745;
	neg.f32 	%f747, %f745;
	mul.f32 	%f748, %f741, %f747;
	and.b32  	%r334, %r47, 2;
	cvt.rn.f32.s32 	%f749, %r334;
	div.approx.f32 	%f750, %f749, %f712;
	add.f32 	%f751, %f750, %f750;
	mov.b32 	%r335, %f751;
	and.b32  	%r336, %r335, -2147483648;
	or.b32  	%r337, %r336, 1056964608;
	mov.b32 	%f752, %r337;
	add.f32 	%f753, %f751, %f752;
	cvt.rzi.f32.f32 	%f754, %f753;
	abs.f32 	%f755, %f751;
	setp.gt.f32 	%p156, %f755, 0f4B000000;
	selp.f32 	%f756, %f751, %f754, %p156;
	cvt.rzi.f32.f32 	%f757, %f751;
	setp.lt.f32 	%p157, %f755, 0f3F000000;
	selp.f32 	%f758, %f757, %f756, %p157;
	cvt.rzi.s32.f32 	%r338, %f758;
	fma.rn.f32 	%f759, %f758, 0fBF000000, %f750;
	mul.f32 	%f760, %f759, %f759;
	fma.rn.f32 	%f761, %f760, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f762, %f760, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f763, %f761, %f760, 0fC0A55DF6;
	fma.rn.f32 	%f764, %f762, %f760, 0f4081E0CF;
	fma.rn.f32 	%f765, %f760, %f759, 0f00000000;
	fma.rn.f32 	%f766, %f764, %f760, 0fC09DE9E6;
	fma.rn.f32 	%f767, %f763, %f765, 0f00000000;
	fma.rn.f32 	%f768, %f766, %f760, 0f3F800000;
	fma.rn.f32 	%f769, %f759, 0f40490FDB, %f767;
	and.b32  	%r339, %r338, 1;
	setp.eq.b32 	%p158, %r339, 1;
	selp.f32 	%f770, %f768, %f769, %p158;
	selp.f32 	%f771, %f769, %f768, %p158;
	and.b32  	%r340, %r338, 2;
	setp.eq.s32 	%p159, %r340, 0;
	neg.f32 	%f772, %f770;
	selp.f32 	%f773, %f770, %f772, %p159;
	add.s32 	%r341, %r338, 1;
	and.b32  	%r342, %r341, 2;
	setp.eq.s32 	%p160, %r342, 0;
	sub.f32 	%f774, %f71, %f771;
	selp.f32 	%f775, %f771, %f774, %p160;
	cvt.rzi.f32.f32 	%f776, %f750;
	setp.eq.f32 	%p161, %f776, %f750;
	mul.f32 	%f777, %f750, 0f00000000;
	selp.f32 	%f778, %f777, %f773, %p161;
	abs.f32 	%f779, %f750;
	setp.gt.f32 	%p162, %f779, 0f4B800000;
	add.f32 	%f780, %f778, 0f3F800000;
	selp.f32 	%f781, %f780, %f775, %p162;
	mul.f32 	%f782, %f781, %f745;
	mul.f32 	%f783, %f778, %f747;
	mov.b32 	%r247, %f746;
	mov.b32 	%r248, %f782;
	// begin inline asm
	cvt.rn.f16x2.f32 %r246, %r248, %r247;
	// end inline asm
	mov.b32 	%r253, %f748;
	xor.b32  	%r250, %r253, -2147483648;
	mov.b32 	%r254, %f783;
	xor.b32  	%r251, %r254, -2147483648;
	// begin inline asm
	cvt.rn.f16x2.f32 %r249, %r251, %r250;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r252, %r254, %r253;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r255, %r248, %r247;
	// end inline asm
	shl.b32 	%r344, %r76, 13;
	shl.b32 	%r345, %r80, 9;
	shl.b32 	%r346, %r4, 5;
	and.b32  	%r25, %r2, 3;
	and.b32  	%r26, %r48, 4;
	shl.b32 	%r347, %r2, 2;
	and.b32  	%r27, %r347, 48;
	and.b32  	%r348, %r41, 28;
	and.b32  	%r349, %r346, 224;
	or.b32  	%r350, %r348, %r349;
	and.b32  	%r351, %r346, 256;
	and.b32  	%r352, %r346, 7936;
	or.b32  	%r353, %r352, %r344;
	or.b32  	%r354, %r353, %r350;
	add.s32 	%r28, %r354, %r345;
	shl.b32 	%r355, %r1, 4;
	or.b32  	%r356, %r355, %r17;
	shr.u32 	%r357, %r356, 2;
	and.b32  	%r358, %r357, 30;
	shl.b32 	%r359, %r2, 1;
	shl.b32 	%r360, %r1, 3;
	and.b32  	%r361, %r360, 64;
	or.b32  	%r362, %r361, %r359;
	and.b32  	%r363, %r44, 32;
	or.b32  	%r364, %r362, %r363;
	shr.u32 	%r365, %r364, 2;
	and.b32  	%r366, %r3, 32;
	or.b32  	%r367, %r365, %r366;
	or.b32  	%r368, %r45, %r43;
	or.b32  	%r369, %r368, %r42;
	shr.u32 	%r370, %r369, 1;
	mad.lo.s32 	%r371, %r370, 65, %r367;
	shl.b32 	%r372, %r78, 17;
	add.s32 	%r373, %r372, -393216;
	or.b32  	%r374, %r40, %r11;
	and.b32  	%r375, %r347, 12;
	or.b32  	%r376, %r374, %r375;
	shl.b32 	%r377, %r376, 9;
	or.b32  	%r378, %r351, %r350;
	or.b32  	%r29, %r378, %r377;
	cvt.s64.s32 	%rd6, %r373;
	shr.u32 	%r379, %r97, 2;
	shr.u32 	%r380, %r2, 2;
	or.b32  	%r381, %r380, 4;
	or.b32  	%r382, %r380, 8;
	or.b32  	%r383, %r380, 12;
	mul.lo.s32 	%r384, %r380, 545;
	mul.lo.s32 	%r385, %r20, 65;
	bfe.s32 	%r386, %r2, 1, 1;
	and.b32  	%r387, %r2, 2;
	setp.eq.s32 	%p164, %r387, 0;
	and.b32  	%r388, %r386, 130;
	and.b32  	%r389, %r2, 1;
	neg.s32 	%r390, %r389;
	setp.eq.b32 	%p165, %r389, 1;
	and.b32  	%r391, %r390, 260;
	add.s32 	%r392, %r391, %r358;
	add.s32 	%r393, %r392, %r384;
	add.s32 	%r394, %r393, %r385;
	add.s32 	%r395, %r394, %r388;
	mul.wide.u32 	%rd39, %r395, 4;
	mov.u64 	%rd40, shmem;
	add.s64 	%rd7, %rd40, %rd39;
	selp.b64 	%rd41, 0, 130, %p164;
	cvt.u64.u32 	%rd42, %r385;
	cvt.u64.u32 	%rd43, %r384;
	selp.b64 	%rd44, 260, 0, %p165;
	cvt.u64.u32 	%rd45, %r358;
	add.s64 	%rd46, %rd45, %rd44;
	add.s64 	%rd47, %rd46, %rd43;
	add.s64 	%rd48, %rd47, %rd42;
	add.s64 	%rd49, %rd48, %rd41;
	shl.b64 	%rd50, %rd49, 2;
	add.s64 	%rd8, %rd40, %rd50;
	mul.lo.s32 	%r396, %r381, 545;
	add.s32 	%r397, %r392, %r396;
	add.s32 	%r398, %r397, %r385;
	add.s32 	%r399, %r398, %r388;
	mul.wide.u32 	%rd51, %r399, 4;
	add.s64 	%rd9, %rd40, %rd51;
	cvt.u64.u32 	%rd52, %r396;
	add.s64 	%rd53, %rd46, %rd52;
	add.s64 	%rd54, %rd53, %rd42;
	add.s64 	%rd55, %rd54, %rd41;
	shl.b64 	%rd56, %rd55, 2;
	add.s64 	%rd10, %rd40, %rd56;
	mul.lo.s32 	%r400, %r382, 545;
	add.s32 	%r401, %r392, %r400;
	add.s32 	%r402, %r401, %r385;
	add.s32 	%r403, %r402, %r388;
	mul.wide.u32 	%rd57, %r403, 4;
	add.s64 	%rd11, %rd40, %rd57;
	cvt.u64.u32 	%rd58, %r400;
	add.s64 	%rd59, %rd46, %rd58;
	add.s64 	%rd60, %rd59, %rd42;
	add.s64 	%rd61, %rd60, %rd41;
	shl.b64 	%rd62, %rd61, 2;
	add.s64 	%rd12, %rd40, %rd62;
	mul.lo.s32 	%r404, %r383, 545;
	add.s32 	%r405, %r392, %r404;
	add.s32 	%r406, %r405, %r385;
	add.s32 	%r407, %r406, %r388;
	mul.wide.u32 	%rd63, %r407, 4;
	add.s64 	%rd13, %rd40, %rd63;
	cvt.u64.u32 	%rd64, %r404;
	add.s64 	%rd65, %rd46, %rd64;
	add.s64 	%rd66, %rd65, %rd42;
	add.s64 	%rd67, %rd66, %rd41;
	shl.b64 	%rd68, %rd67, 2;
	add.s64 	%rd14, %rd40, %rd68;
	and.b32  	%r408, %r1, 1;
	neg.s32 	%r409, %r408;
	and.b32  	%r410, %r409, 130;
	bfe.s32 	%r411, %r1, 2, 1;
	and.b32  	%r412, %r411, 260;
	and.b32  	%r413, %r359, 6;
	or.b32  	%r414, %r413, %r20;
	mul.lo.s32 	%r415, %r414, 65;
	add.s32 	%r416, %r415, %r358;
	add.s32 	%r417, %r416, %r384;
	mul.wide.u32 	%rd69, %r417, 4;
	add.s64 	%rd15, %rd40, %rd69;
	cvt.u64.u32 	%rd70, %r415;
	add.s64 	%rd71, %rd45, %rd70;
	add.s64 	%rd72, %rd71, %rd43;
	shl.b64 	%rd73, %rd72, 2;
	add.s64 	%rd16, %rd40, %rd73;
	add.s32 	%r418, %r416, %r396;
	mul.wide.u32 	%rd74, %r418, 4;
	add.s64 	%rd17, %rd40, %rd74;
	add.s64 	%rd75, %rd71, %rd52;
	shl.b64 	%rd76, %rd75, 2;
	add.s64 	%rd18, %rd40, %rd76;
	add.s32 	%r419, %r416, %r400;
	mul.wide.u32 	%rd77, %r419, 4;
	add.s64 	%rd19, %rd40, %rd77;
	add.s64 	%rd78, %rd71, %rd58;
	shl.b64 	%rd79, %rd78, 2;
	add.s64 	%rd20, %rd40, %rd79;
	add.s32 	%r420, %r416, %r404;
	mul.wide.u32 	%rd80, %r420, 4;
	add.s64 	%rd21, %rd40, %rd80;
	add.s64 	%rd81, %rd71, %rd64;
	shl.b64 	%rd82, %rd81, 2;
	add.s64 	%rd22, %rd40, %rd82;
	mul.wide.u32 	%rd83, %r371, 4;
	add.s64 	%rd23, %rd40, %rd83;
	or.b32  	%r421, %r412, %r410;
	add.s32 	%r422, %r421, %r367;
	mad.lo.s32 	%r423, %r379, 65, %r422;
	mul.wide.u32 	%rd84, %r423, 4;
	add.s64 	%rd24, %rd40, %rd84;
	mov.u16 	%rs44, 25600;
	mov.u16 	%rs46, 21504;
	mov.u16 	%rs54, 18432;
	mov.u32 	%r1115, %r1113;
	mov.u32 	%r1116, %r1113;
	mov.u32 	%r1122, %r1113;
	mov.u32 	%r33, %r1113;
	bra.uni 	$L__BB0_31;
$L__BB0_34:                             // %pass7648
                                        //   in Loop: Header=BB0_31 Depth=1
	selp.b32 	%r1100, %r61, %r1034, %p166;
	selp.b32 	%r1101, %r1030, %r61, %p166;
	selp.b32 	%r1102, %r60, %r1026, %p166;
	selp.b32 	%r1103, %r1022, %r60, %p166;
	or.b32  	%r1123, %r1114, %r29;
	cvt.u64.u32 	%rd93, %r1123;
	add.s64 	%rd94, %rd93, %rd6;
	shr.u64 	%rd95, %rd94, 35;
	add.s64 	%rd96, %rd94, %rd95;
	shr.s64 	%rd97, %rd96, 29;
	setp.lt.s64 	%p183, %rd94, 0;
	and.b64  	%rd98, %rd96, -536870912;
	setp.ne.s64 	%p184, %rd98, %rd94;
	and.pred  	%p185, %p183, %p184;
	selp.u64 	%rd99, 1, 0, %p185;
	sub.s64 	%rd100, %rd99, %rd97;
	shl.b64 	%rd101, %rd100, 29;
	add.s64 	%rd102, %rd101, %rd94;
	shl.b64 	%rd103, %rd102, 2;
	add.s64 	%rd104, %rd3, %rd103;
	st.global.v4.u32 	[%rd104], {%r1103, %r1101, %r1102, %r1100};
$L__BB0_35:                             // %pass7773
                                        //   in Loop: Header=BB0_31 Depth=1
	or.b32  	%r1106, %r1123, 524288;
	cvt.s64.s32 	%rd105, %r1106;
	add.s64 	%rd106, %rd105, %rd6;
	shr.u64 	%rd107, %rd106, 35;
	add.s64 	%rd108, %rd106, %rd107;
	shr.s64 	%rd109, %rd108, 29;
	setp.lt.s64 	%p186, %rd106, 0;
	and.b64  	%rd110, %rd108, -536870912;
	setp.ne.s64 	%p187, %rd110, %rd106;
	and.pred  	%p188, %p186, %p187;
	selp.u64 	%rd111, 1, 0, %p188;
	sub.s64 	%rd112, %rd111, %rd109;
	shl.b64 	%rd113, %rd112, 29;
	add.s64 	%rd114, %rd113, %rd106;
	shl.b64 	%rd115, %rd114, 2;
	add.s64 	%rd116, %rd3, %rd115;
	st.global.v4.u32 	[%rd116], {%r62, %r64, %r63, %r65};
	or.b32  	%r1107, %r1123, 1048576;
	cvt.s64.s32 	%rd117, %r1107;
	add.s64 	%rd118, %rd117, %rd6;
	shr.u64 	%rd119, %rd118, 35;
	add.s64 	%rd120, %rd118, %rd119;
	shr.s64 	%rd121, %rd120, 29;
	setp.lt.s64 	%p189, %rd118, 0;
	and.b64  	%rd122, %rd120, -536870912;
	setp.ne.s64 	%p190, %rd122, %rd118;
	and.pred  	%p191, %p189, %p190;
	selp.u64 	%rd123, 1, 0, %p191;
	sub.s64 	%rd124, %rd123, %rd121;
	shl.b64 	%rd125, %rd124, 29;
	add.s64 	%rd126, %rd125, %rd118;
	shl.b64 	%rd127, %rd126, 2;
	add.s64 	%rd128, %rd3, %rd127;
	st.global.v4.u32 	[%rd128], {%r66, %r68, %r67, %r69};
	or.b32  	%r1108, %r1123, 1572864;
	cvt.s64.s32 	%rd129, %r1108;
	add.s64 	%rd130, %rd129, %rd6;
	shr.u64 	%rd131, %rd130, 35;
	add.s64 	%rd132, %rd130, %rd131;
	shr.s64 	%rd133, %rd132, 29;
	setp.lt.s64 	%p192, %rd130, 0;
	and.b64  	%rd134, %rd132, -536870912;
	setp.ne.s64 	%p193, %rd134, %rd130;
	and.pred  	%p194, %p192, %p193;
	selp.u64 	%rd135, 1, 0, %p194;
	sub.s64 	%rd136, %rd135, %rd133;
	shl.b64 	%rd137, %rd136, 29;
	add.s64 	%rd138, %rd137, %rd130;
	shl.b64 	%rd139, %rd138, 2;
	add.s64 	%rd140, %rd3, %rd139;
	st.global.v4.u32 	[%rd140], {%r70, %r72, %r71, %r73};
	setp.ne.s32 	%p195, %r33, 65280;
	add.s32 	%r33, %r33, 256;
	add.s32 	%r1109, %r33, %r76;
	setp.lt.s32 	%p196, %r1109, %r77;
	and.pred  	%p197, %p195, %p196;
	@%p197 bra 	$L__BB0_31;
	bra.uni 	$L__BB0_36;
$L__BB0_31:                             // %L1431
                                        // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_32 Depth 2
	setp.eq.s32 	%p166, %r17, 0;
	or.b32  	%r489, %r33, %r25;
	or.b32  	%r490, %r489, %r17;
	or.b32  	%r491, %r490, %r26;
	or.b32  	%r492, %r491, %r27;
	shl.b32 	%r493, %r492, 13;
	add.s32 	%r494, %r28, %r493;
	shr.s32 	%r495, %r494, 31;
	shr.u32 	%r496, %r495, 3;
	add.s32 	%r497, %r494, %r496;
	shr.s32 	%r498, %r497, 29;
	setp.lt.s32 	%p167, %r494, 0;
	and.b32  	%r499, %r497, -536870912;
	setp.ne.s32 	%p168, %r499, %r494;
	and.pred  	%p169, %p167, %p168;
	selp.u32 	%r500, 1, 0, %p169;
	sub.s32 	%r501, %r500, %r498;
	shl.b32 	%r502, %r501, 29;
	add.s32 	%r503, %r502, %r494;
	mul.wide.s32 	%rd85, %r503, 4;
	add.s64 	%rd86, %rd2, %rd85;
	ld.global.v4.u32 	{%r504, %r505, %r506, %r507}, [%rd86];
	or.b32  	%r508, %r493, 524288;
	add.s32 	%r509, %r28, %r508;
	shr.s32 	%r510, %r509, 31;
	shr.u32 	%r511, %r510, 3;
	add.s32 	%r512, %r509, %r511;
	shr.s32 	%r513, %r512, 29;
	setp.lt.s32 	%p170, %r509, 0;
	and.b32  	%r514, %r512, -536870912;
	setp.ne.s32 	%p171, %r514, %r509;
	and.pred  	%p172, %p170, %p171;
	selp.u32 	%r515, 1, 0, %p172;
	sub.s32 	%r516, %r515, %r513;
	shl.b32 	%r517, %r516, 29;
	add.s32 	%r518, %r517, %r509;
	mul.wide.s32 	%rd87, %r518, 4;
	add.s64 	%rd88, %rd2, %rd87;
	ld.global.v4.u32 	{%r519, %r520, %r521, %r522}, [%rd88];
	or.b32  	%r523, %r493, 1048576;
	add.s32 	%r524, %r28, %r523;
	shr.s32 	%r525, %r524, 31;
	shr.u32 	%r526, %r525, 3;
	add.s32 	%r527, %r524, %r526;
	shr.s32 	%r528, %r527, 29;
	setp.lt.s32 	%p173, %r524, 0;
	and.b32  	%r529, %r527, -536870912;
	setp.ne.s32 	%p174, %r529, %r524;
	and.pred  	%p175, %p173, %p174;
	selp.u32 	%r530, 1, 0, %p175;
	sub.s32 	%r531, %r530, %r528;
	shl.b32 	%r532, %r531, 29;
	add.s32 	%r533, %r532, %r524;
	mul.wide.s32 	%rd89, %r533, 4;
	add.s64 	%rd90, %rd2, %rd89;
	ld.global.v4.u32 	{%r534, %r535, %r536, %r537}, [%rd90];
	or.b32  	%r538, %r493, 1572864;
	add.s32 	%r539, %r28, %r538;
	shr.s32 	%r540, %r539, 31;
	shr.u32 	%r541, %r540, 3;
	add.s32 	%r542, %r539, %r541;
	shr.s32 	%r543, %r542, 29;
	setp.lt.s32 	%p176, %r539, 0;
	and.b32  	%r544, %r542, -536870912;
	setp.ne.s32 	%p177, %r544, %r539;
	and.pred  	%p178, %p176, %p177;
	selp.u32 	%r545, 1, 0, %p178;
	sub.s32 	%r546, %r545, %r543;
	shl.b32 	%r547, %r546, 29;
	add.s32 	%r548, %r547, %r539;
	mul.wide.s32 	%rd91, %r548, 4;
	add.s64 	%rd92, %rd2, %rd91;
	ld.global.v4.u32 	{%r549, %r550, %r551, %r552}, [%rd92];
	selp.b32 	%r553, %r506, %r504, %p166;
	shfl.sync.bfly.b32	%r554, %r553, 8, 31, -1;
	selp.b32 	%r425, %r504, %r554, %p166;
	selp.b32 	%r426, %r554, %r506, %p166;
	selp.b32 	%r555, %r507, %r505, %p166;
	shfl.sync.bfly.b32	%r556, %r555, 8, 31, -1;
	selp.b32 	%r433, %r505, %r556, %p166;
	selp.b32 	%r434, %r556, %r507, %p166;
	selp.b32 	%r557, %r521, %r519, %p166;
	shfl.sync.bfly.b32	%r558, %r557, 8, 31, -1;
	selp.b32 	%r441, %r519, %r558, %p166;
	selp.b32 	%r442, %r558, %r521, %p166;
	selp.b32 	%r559, %r522, %r520, %p166;
	shfl.sync.bfly.b32	%r560, %r559, 8, 31, -1;
	selp.b32 	%r449, %r520, %r560, %p166;
	selp.b32 	%r450, %r560, %r522, %p166;
	selp.b32 	%r561, %r536, %r534, %p166;
	shfl.sync.bfly.b32	%r562, %r561, 8, 31, -1;
	selp.b32 	%r457, %r534, %r562, %p166;
	selp.b32 	%r458, %r562, %r536, %p166;
	selp.b32 	%r563, %r537, %r535, %p166;
	shfl.sync.bfly.b32	%r564, %r563, 8, 31, -1;
	selp.b32 	%r465, %r535, %r564, %p166;
	selp.b32 	%r466, %r564, %r537, %p166;
	selp.b32 	%r565, %r551, %r549, %p166;
	shfl.sync.bfly.b32	%r566, %r565, 8, 31, -1;
	selp.b32 	%r473, %r549, %r566, %p166;
	selp.b32 	%r474, %r566, %r551, %p166;
	selp.b32 	%r567, %r552, %r550, %p166;
	shfl.sync.bfly.b32	%r568, %r567, 8, 31, -1;
	selp.b32 	%r481, %r550, %r568, %p166;
	selp.b32 	%r482, %r568, %r552, %p166;
	mov.u32 	%r483, 21520;
	// begin inline asm
	prmt.b32 %r424, %r425, %r426, %r483;
	// end inline asm
	mov.u32 	%r487, 30258;
	// begin inline asm
	prmt.b32 %r428, %r425, %r426, %r487;
	// end inline asm
	// begin inline asm
	prmt.b32 %r432, %r433, %r434, %r483;
	// end inline asm
	// begin inline asm
	prmt.b32 %r436, %r433, %r434, %r487;
	// end inline asm
	// begin inline asm
	prmt.b32 %r440, %r441, %r442, %r483;
	// end inline asm
	// begin inline asm
	prmt.b32 %r444, %r441, %r442, %r487;
	// end inline asm
	// begin inline asm
	prmt.b32 %r448, %r449, %r450, %r483;
	// end inline asm
	// begin inline asm
	prmt.b32 %r452, %r449, %r450, %r487;
	// end inline asm
	// begin inline asm
	prmt.b32 %r456, %r457, %r458, %r483;
	// end inline asm
	// begin inline asm
	prmt.b32 %r460, %r457, %r458, %r487;
	// end inline asm
	// begin inline asm
	prmt.b32 %r464, %r465, %r466, %r483;
	// end inline asm
	// begin inline asm
	prmt.b32 %r468, %r465, %r466, %r487;
	// end inline asm
	// begin inline asm
	prmt.b32 %r472, %r473, %r474, %r483;
	// end inline asm
	// begin inline asm
	prmt.b32 %r476, %r473, %r474, %r487;
	// end inline asm
	// begin inline asm
	prmt.b32 %r480, %r481, %r482, %r483;
	// end inline asm
	// begin inline asm
	prmt.b32 %r484, %r481, %r482, %r487;
	// end inline asm
	st.shared.u32 	[%rd7], %r424;
	st.shared.u32 	[%rd8+128], %r428;
	st.shared.u32 	[%rd8+4], %r432;
	st.shared.u32 	[%rd8+132], %r436;
	st.shared.u32 	[%rd9], %r440;
	st.shared.u32 	[%rd10+128], %r444;
	st.shared.u32 	[%rd10+4], %r448;
	st.shared.u32 	[%rd10+132], %r452;
	st.shared.u32 	[%rd11], %r456;
	st.shared.u32 	[%rd12+128], %r460;
	st.shared.u32 	[%rd12+4], %r464;
	st.shared.u32 	[%rd12+132], %r468;
	st.shared.u32 	[%rd13], %r472;
	st.shared.u32 	[%rd14+128], %r476;
	st.shared.u32 	[%rd14+4], %r480;
	st.shared.u32 	[%rd14+132], %r484;
	bar.sync 	0;
	mov.u32 	%r1119, 256;
	mov.u64 	%rd145, %rd24;
	mov.u64 	%rd146, %rd23;
	mov.u32 	%r1120, %r1115;
	mov.u32 	%r1121, %r1116;
$L__BB0_32:                             // %L11064
                                        //   Parent Loop BB0_31 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	mov.u32 	%r1116, %r1122;
	mov.u32 	%r1115, %r1121;
	ld.shared.u32 	%r1122, [%rd145];
	// begin inline asm
	mov.b32 %r574, {%rs44, %rs44};
	// end inline asm
	// begin inline asm
	mov.b32 %r585, {%rs46, %rs46};
	// end inline asm
	xor.b32  	%r573, %r1122, -2004318072;
	mov.u32 	%r572, 983055;
	// begin inline asm
	lop3.b32 %r571, %r572, %r573, %r574, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r575, {%rs54, %rs54};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r576, %r574, %r575;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r579, %r571, %r576;
	// end inline asm
	mov.u32 	%r583, 15728880;
	// begin inline asm
	lop3.b32 %r582, %r583, %r573, %r585, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r586, {%rs54, %rs54};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r587, %r585, %r586;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r590, %r582, %r587;
	// end inline asm
	shr.u32 	%r595, %r573, 8;
	// begin inline asm
	lop3.b32 %r593, %r572, %r595, %r574, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r597, {%rs54, %rs54};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r598, %r574, %r597;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r601, %r593, %r598;
	// end inline asm
	// begin inline asm
	lop3.b32 %r604, %r583, %r595, %r585, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r608, {%rs54, %rs54};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r609, %r585, %r608;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r612, %r604, %r609;
	// end inline asm
	// begin inline asm
	mov.b32 %r620, {%rs44, %rs44};
	// end inline asm
	// begin inline asm
	mov.b32 %r631, {%rs46, %rs46};
	// end inline asm
	xor.b32  	%r619, %r1120, -2004318072;
	// begin inline asm
	lop3.b32 %r617, %r572, %r619, %r620, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r621, {%rs54, %rs54};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r622, %r620, %r621;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r625, %r617, %r622;
	// end inline asm
	// begin inline asm
	lop3.b32 %r628, %r583, %r619, %r631, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r632, {%rs54, %rs54};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r633, %r631, %r632;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r636, %r628, %r633;
	// end inline asm
	shr.u32 	%r641, %r619, 8;
	// begin inline asm
	lop3.b32 %r639, %r572, %r641, %r620, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r643, {%rs54, %rs54};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r644, %r620, %r643;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r647, %r639, %r644;
	// end inline asm
	// begin inline asm
	lop3.b32 %r650, %r583, %r641, %r631, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r654, {%rs54, %rs54};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r655, %r631, %r654;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r658, %r650, %r655;
	// end inline asm
	mov.u32 	%r666, 0;
	// begin inline asm
	fma.rn.f16x2 %r663, %r126, %r625, %r666;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r669, %r126, %r636, %r666;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r675, %r126, %r647, %r666;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r681, %r126, %r658, %r666;
	// end inline asm
	// begin inline asm
	mov.b32 %r690, {%rs44, %rs44};
	// end inline asm
	// begin inline asm
	mov.b32 %r701, {%rs46, %rs46};
	// end inline asm
	xor.b32  	%r689, %r1115, -2004318072;
	// begin inline asm
	lop3.b32 %r687, %r572, %r689, %r690, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r691, {%rs54, %rs54};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r692, %r690, %r691;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r695, %r687, %r692;
	// end inline asm
	// begin inline asm
	lop3.b32 %r698, %r583, %r689, %r701, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r702, {%rs54, %rs54};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r703, %r701, %r702;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r706, %r698, %r703;
	// end inline asm
	shr.u32 	%r711, %r689, 8;
	// begin inline asm
	lop3.b32 %r709, %r572, %r711, %r690, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r713, {%rs54, %rs54};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r714, %r690, %r713;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r717, %r709, %r714;
	// end inline asm
	// begin inline asm
	lop3.b32 %r720, %r583, %r711, %r701, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r724, {%rs54, %rs54};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r725, %r701, %r724;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r728, %r720, %r725;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r731, %r157;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r733, %r731, %r695, %r663;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r737, %r157;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r739, %r737, %r706, %r669;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r743, %r157;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r745, %r743, %r717, %r675;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r749, %r157;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r751, %r749, %r728, %r681;
	// end inline asm
	// begin inline asm
	mov.b32 %r760, {%rs44, %rs44};
	// end inline asm
	// begin inline asm
	mov.b32 %r771, {%rs46, %rs46};
	// end inline asm
	xor.b32  	%r759, %r1116, -2004318072;
	// begin inline asm
	lop3.b32 %r757, %r572, %r759, %r760, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r761, {%rs54, %rs54};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r762, %r760, %r761;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r765, %r757, %r762;
	// end inline asm
	// begin inline asm
	lop3.b32 %r768, %r583, %r759, %r771, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r772, {%rs54, %rs54};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r773, %r771, %r772;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r776, %r768, %r773;
	// end inline asm
	shr.u32 	%r781, %r759, 8;
	// begin inline asm
	lop3.b32 %r779, %r572, %r781, %r760, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r783, {%rs54, %rs54};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r784, %r760, %r783;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r787, %r779, %r784;
	// end inline asm
	// begin inline asm
	lop3.b32 %r790, %r583, %r781, %r771, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r794, {%rs54, %rs54};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r795, %r771, %r794;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r798, %r790, %r795;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r803, %r188, %r765, %r733;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r809, %r188, %r776, %r739;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r815, %r188, %r787, %r745;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r821, %r188, %r798, %r751;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r825, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r856, %r825, %r579, %r803;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r831, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r853, %r831, %r590, %r809;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r837, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r865, %r837, %r601, %r815;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r843, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r862, %r843, %r612, %r821;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r849, %r225;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r851, %r849, %r853;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r854, %r222, %r856, %r851;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r858, %r225;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r860, %r858, %r862;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r863, %r222, %r865, %r860;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r867, %r225, %r856;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r870, %r222, %r853, %r867;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r874, %r225, %r865;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r877, %r222, %r862, %r874;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r908, %r905}, {%r228, %r234, %r231, %r237}, {%r854, %r870}, {%r666, %r666};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r917, %r914}, {%r228, %r234, %r231, %r237}, {%r863, %r877}, {%r666, %r666};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r901, %r243;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r903, %r901, %r905;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r906, %r240, %r908, %r903;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r910, %r243;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r912, %r910, %r914;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r915, %r240, %r917, %r912;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r919, %r243, %r908;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r922, %r240, %r905, %r919;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r926, %r243, %r917;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r929, %r240, %r914, %r926;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r933, %r934}, {%r246, %r252, %r249, %r255}, {%r906, %r922}, {%r666, %r666};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r943, %r944}, {%r246, %r252, %r249, %r255}, {%r915, %r929}, {%r666, %r666};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r953, %r46, %r933;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r956, %r46, %r934;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r959, %r46, %r943;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r962, %r46, %r944;
	// end inline asm
	mov.u16 	%rs55, -14592;
	// begin inline asm
	mov.b32 %r965, {%rs55, %rs55};
	// end inline asm
	mov.u16 	%rs57, 18176;
	// begin inline asm
	mov.b32 %r966, {%rs57, %rs57};
	// end inline asm
	// begin inline asm
	max.f16x2 %r967, %r953, %r965;
	// end inline asm
	// begin inline asm
	min.f16x2 %r970, %r967, %r966;
	// end inline asm
	// begin inline asm
	mov.b32 %r973, {%rs55, %rs55};
	// end inline asm
	// begin inline asm
	mov.b32 %r974, {%rs57, %rs57};
	// end inline asm
	// begin inline asm
	max.f16x2 %r975, %r956, %r973;
	// end inline asm
	// begin inline asm
	min.f16x2 %r978, %r975, %r974;
	// end inline asm
	// begin inline asm
	mov.b32 %r981, {%rs55, %rs55};
	// end inline asm
	// begin inline asm
	mov.b32 %r982, {%rs57, %rs57};
	// end inline asm
	// begin inline asm
	max.f16x2 %r983, %r959, %r981;
	// end inline asm
	// begin inline asm
	min.f16x2 %r986, %r983, %r982;
	// end inline asm
	// begin inline asm
	mov.b32 %r989, {%rs55, %rs55};
	// end inline asm
	// begin inline asm
	mov.b32 %r990, {%rs57, %rs57};
	// end inline asm
	// begin inline asm
	max.f16x2 %r991, %r962, %r989;
	// end inline asm
	// begin inline asm
	min.f16x2 %r994, %r991, %r990;
	// end inline asm
	mov.u16 	%rs71, 26112;
	// begin inline asm
	mov.b32 %r1000, {%rs71, %rs71};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r998, %r970, %r1000;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1001, %r978, %r1000;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1004, %r986, %r1000;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1007, %r994, %r1000;
	// end inline asm
	mov.u32 	%r1013, 25152;
	// begin inline asm
	prmt.b32 %r1010, %r998, %r1004, %r1013;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1014, %r1001, %r1007, %r1013;
	// end inline asm
	shl.b32 	%r1021, %r1014, 4;
	mov.u32 	%r1019, 252645135;
	// begin inline asm
	lop3.b32 %r1018, %r1019, %r1010, %r1021, 202;
	// end inline asm
	st.shared.u32 	[%rd146], %r1018;
	add.s32 	%r1119, %r1119, -16;
	add.s64 	%rd146, %rd146, 2180;
	add.s64 	%rd145, %rd145, 2180;
	setp.eq.s32 	%p179, %r1119, 0;
	mov.u32 	%r1120, %r1115;
	mov.u32 	%r1121, %r1116;
	@%p179 bra 	$L__BB0_33;
	bra.uni 	$L__BB0_32;
$L__BB0_33:                             // %guard_exit8181
                                        //   in Loop: Header=BB0_31 Depth=1
	bar.sync 	0;
	or.b32  	%r55, %r33, %r27;
	ld.shared.u32 	%r1027, [%rd15];
	ld.shared.u32 	%r1028, [%rd16+128];
	ld.shared.u32 	%r1035, [%rd16+4];
	ld.shared.u32 	%r1036, [%rd16+132];
	ld.shared.u32 	%r1043, [%rd17];
	ld.shared.u32 	%r1044, [%rd18+128];
	ld.shared.u32 	%r1051, [%rd18+4];
	ld.shared.u32 	%r1052, [%rd18+132];
	ld.shared.u32 	%r1059, [%rd19];
	ld.shared.u32 	%r1060, [%rd20+128];
	ld.shared.u32 	%r1067, [%rd20+4];
	ld.shared.u32 	%r1068, [%rd20+132];
	ld.shared.u32 	%r1075, [%rd21];
	ld.shared.u32 	%r1076, [%rd22+128];
	ld.shared.u32 	%r1083, [%rd22+4];
	ld.shared.u32 	%r1084, [%rd22+132];
	// begin inline asm
	prmt.b32 %r1022, %r1027, %r1028, %r483;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1026, %r1027, %r1028, %r487;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1030, %r1035, %r1036, %r483;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1034, %r1035, %r1036, %r487;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1038, %r1043, %r1044, %r483;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1042, %r1043, %r1044, %r487;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1046, %r1051, %r1052, %r483;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1050, %r1051, %r1052, %r487;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1054, %r1059, %r1060, %r483;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1058, %r1059, %r1060, %r487;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1062, %r1067, %r1068, %r483;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1066, %r1067, %r1068, %r487;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1070, %r1075, %r1076, %r483;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1074, %r1075, %r1076, %r487;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1078, %r1083, %r1084, %r483;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1082, %r1083, %r1084, %r487;
	// end inline asm
	selp.b32 	%r1086, %r1026, %r1022, %p166;
	shfl.sync.bfly.b32	%r60, %r1086, 8, 31, -1;
	selp.b32 	%r1087, %r1034, %r1030, %p166;
	shfl.sync.bfly.b32	%r61, %r1087, 8, 31, -1;
	selp.b32 	%r1088, %r1042, %r1038, %p166;
	shfl.sync.bfly.b32	%r1089, %r1088, 8, 31, -1;
	selp.b32 	%r62, %r1038, %r1089, %p166;
	selp.b32 	%r63, %r1089, %r1042, %p166;
	selp.b32 	%r1090, %r1050, %r1046, %p166;
	shfl.sync.bfly.b32	%r1091, %r1090, 8, 31, -1;
	selp.b32 	%r64, %r1046, %r1091, %p166;
	selp.b32 	%r65, %r1091, %r1050, %p166;
	selp.b32 	%r1092, %r1058, %r1054, %p166;
	shfl.sync.bfly.b32	%r1093, %r1092, 8, 31, -1;
	selp.b32 	%r66, %r1054, %r1093, %p166;
	selp.b32 	%r67, %r1093, %r1058, %p166;
	selp.b32 	%r1094, %r1066, %r1062, %p166;
	shfl.sync.bfly.b32	%r1095, %r1094, 8, 31, -1;
	selp.b32 	%r68, %r1062, %r1095, %p166;
	selp.b32 	%r69, %r1095, %r1066, %p166;
	selp.b32 	%r1096, %r1074, %r1070, %p166;
	shfl.sync.bfly.b32	%r1097, %r1096, 8, 31, -1;
	selp.b32 	%r70, %r1070, %r1097, %p166;
	selp.b32 	%r71, %r1097, %r1074, %p166;
	selp.b32 	%r1098, %r1082, %r1078, %p166;
	shfl.sync.bfly.b32	%r1099, %r1098, 8, 31, -1;
	selp.b32 	%r72, %r1078, %r1099, %p166;
	selp.b32 	%r73, %r1099, %r1082, %p166;
	setp.gt.u32 	%p181, %r55, 47;
	shl.b32 	%r1114, %r55, 13;
	@%p181 bra 	$L__BB0_34;
// %bb.37:                              // %guard_exit8181.pass7773_crit_edge
                                        //   in Loop: Header=BB0_31 Depth=1
	or.b32  	%r1123, %r1114, %r29;
	bra.uni 	$L__BB0_35;
$L__BB0_36:                             // %L18100
	st.global.u32 	[%rd5], %r1113;
	ret;
$L__BB0_9:                              // %L180
	mov.u32 	%r1112, 2;
	st.global.u32 	[%rd5], %r1112;
	mov.u64 	%rd143, exception1617;
	cvta.global.u64 	%rd144, %rd143;
	{ // callseq 6, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd144;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 6
	{ // callseq 7, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd31;
	st.param.b32 	[param0+8], %r75;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 7
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
$L__BB0_12:                             // %L288
	mov.u32 	%r1111, 3;
	st.global.u32 	[%rd5], %r1111;
	mov.u64 	%rd141, exception1617;
	cvta.global.u64 	%rd142, %rd141;
	{ // callseq 4, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd142;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 4
	{ // callseq 5, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd31;
	st.param.b32 	[param0+8], %r75;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 5
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
$L__BB0_1:                              // %L8
	mov.u64 	%rd32, exception1;
	cvta.global.u64 	%rd33, %rd32;
	{ // callseq 0, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd33;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 0
	{ // callseq 1, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd31;
	st.param.b32 	[param0+8], %r75;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 1
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
$L__BB0_3:                              // %L24
	mov.u64 	%rd34, exception1;
	cvta.global.u64 	%rd35, %rd34;
	{ // callseq 2, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd35;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 2
	{ // callseq 3, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd31;
	st.param.b32 	[param0+8], %r75;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 3
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
                                        // -- End function
}
