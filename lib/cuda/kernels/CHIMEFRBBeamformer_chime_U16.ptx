// PTX kernel code for CUDA chimefrb beamformer
// This file has been generated automatically by `chimefrb.jl`.
// Do not modify this file, your changes will be lost.

// PTX CompilerJob of MethodInstance for chimefrb(::Int32, ::Int32, ::Int32, ::Int32, ::CuDeviceVector{Float16x2, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Float16x2, 1}, ::CuDeviceVector{Int32, 1}) for sm_86, minthreads=256, blocks_per_sm=2

//
// Generated by LLVM NVPTX Back-End
//

.version 8.2
.target sm_86
.address_size 64

	// .globl	_Z8chimefrb5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS1_Li1ELi1EES0_IS_Li1ELi1EE // -- Begin function _Z8chimefrb5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS1_Li1ELi1EES0_IS_Li1ELi1EE
.func gpu_report_exception
(
	.param .b64 gpu_report_exception_param_0
)
.noreturn
{
	trap;
}
.func gpu_signal_exception
(
	.param .align 8 .b8 gpu_signal_exception_param_0[16]
)
.noreturn
{
	trap;
}
.extern .shared .align 32 .b8 shmem[];
.global .align 1 .b8 exception686[6] = {101, 114, 114, 111, 114, 0};
.global .align 1 .b8 exception1[10] = {101, 120, 99, 101, 112, 116, 105, 111, 110, 0};
                                        // @_Z8chimefrb5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS1_Li1ELi1EES0_IS_Li1ELi1EE
.visible .entry _Z8chimefrb5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS1_Li1ELi1EES0_IS_Li1ELi1EE(
	.param .align 8 .b8 _Z8chimefrb5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS1_Li1ELi1EES0_IS_Li1ELi1EE_param_0[16],
	.param .u32 _Z8chimefrb5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS1_Li1ELi1EES0_IS_Li1ELi1EE_param_1,
	.param .u32 _Z8chimefrb5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS1_Li1ELi1EES0_IS_Li1ELi1EE_param_2,
	.param .u32 _Z8chimefrb5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS1_Li1ELi1EES0_IS_Li1ELi1EE_param_3,
	.param .u32 _Z8chimefrb5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS1_Li1ELi1EES0_IS_Li1ELi1EE_param_4,
	.param .align 8 .b8 _Z8chimefrb5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS1_Li1ELi1EES0_IS_Li1ELi1EE_param_5[32],
	.param .align 8 .b8 _Z8chimefrb5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS1_Li1ELi1EES0_IS_Li1ELi1EE_param_6[32],
	.param .align 8 .b8 _Z8chimefrb5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS1_Li1ELi1EES0_IS_Li1ELi1EE_param_7[32],
	.param .align 8 .b8 _Z8chimefrb5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS1_Li1ELi1EES0_IS_Li1ELi1EE_param_8[32]
)
.reqntid 256, 1, 1
.minnctapersm 2
{
	.reg .pred 	%p<108>;
	.reg .b16 	%rs<80>;
	.reg .b32 	%r<2119>;
	.reg .f32 	%f<398>;
	.reg .b64 	%rd<181>;

// %bb.0:                               // %conversion
	ld.param.u32 	%r151, [_Z8chimefrb5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS1_Li1ELi1EES0_IS_Li1ELi1EE_param_0+8];
	ld.param.u64 	%rd38, [_Z8chimefrb5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS1_Li1ELi1EES0_IS_Li1ELi1EE_param_0];
	// begin inline asm
	mov.u32 %r156, %dynamic_smem_size;
	// end inline asm
	setp.gt.u32 	%p1, %r156, 16383;
	@%p1 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:                              // %L16
	ld.param.u64 	%rd39, [_Z8chimefrb5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS1_Li1ELi1EES0_IS_Li1ELi1EE_param_8];
	ld.param.u32 	%r152, [_Z8chimefrb5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS1_Li1ELi1EES0_IS_Li1ELi1EE_param_1];
	mov.u32 	%r1, %tid.y;
	shl.b32 	%r157, %r1, 5;
	mov.u32 	%r2, %tid.x;
	mov.u32 	%r3, %ctaid.x;
	shl.b32 	%r158, %r3, 8;
	or.b32  	%r159, %r157, %r2;
	or.b32  	%r160, %r159, %r158;
	mul.wide.u32 	%rd45, %r160, 4;
	add.s64 	%rd4, %rd39, %rd45;
	mov.u32 	%r161, 1;
	st.global.u32 	[%rd4], %r161;
	setp.gt.u32 	%p2, %r152, 4095;
	@%p2 bra 	$L__BB0_6;
// %bb.3:                               // %L116
	ld.param.u32 	%r153, [_Z8chimefrb5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS1_Li1ELi1EES0_IS_Li1ELi1EE_param_2];
	setp.lt.s32 	%p3, %r153, %r152;
	setp.gt.s32 	%p4, %r153, 8191;
	or.pred  	%p5, %p3, %p4;
	@%p5 bra 	$L__BB0_6;
// %bb.4:                               // %L123
	ld.param.u32 	%r154, [_Z8chimefrb5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS1_Li1ELi1EES0_IS_Li1ELi1EE_param_3];
	sub.s32 	%r162, %r153, %r152;
	mul.hi.s32 	%r164, %r162, 715827883;
	shr.u32 	%r165, %r164, 31;
	shr.s32 	%r166, %r164, 2;
	add.s32 	%r4, %r166, %r165;
	mul.lo.s32 	%r167, %r4, -24;
	neg.s32 	%r168, %r162;
	setp.ne.s32 	%p6, %r167, %r168;
	setp.gt.u32 	%p7, %r154, 1023;
	or.pred  	%p8, %p6, %p7;
	@%p8 bra 	$L__BB0_6;
// %bb.5:                               // %L134
	ld.param.u32 	%r155, [_Z8chimefrb5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS1_Li1ELi1EES0_IS_Li1ELi1EE_param_4];
	setp.ge.s32 	%p9, %r155, %r154;
	setp.lt.s32 	%p10, %r155, 2048;
	and.pred  	%p11, %p9, %p10;
	sub.s32 	%r169, %r155, %r154;
	setp.eq.s32 	%p12, %r169, %r4;
	and.pred  	%p13, %p11, %p12;
	@%p13 bra 	$L__BB0_7;
	bra.uni 	$L__BB0_6;
$L__BB0_7:                              // %pass107
	ld.param.u64 	%rd1, [_Z8chimefrb5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS1_Li1ELi1EES0_IS_Li1ELi1EE_param_5];
	ld.param.u64 	%rd2, [_Z8chimefrb5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS1_Li1ELi1EES0_IS_Li1ELi1EE_param_6];
	ld.param.u64 	%rd3, [_Z8chimefrb5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS1_Li1ELi1EES0_IS_Li1ELi1EE_param_7];
	shr.u32 	%r507, %r2, 2;
	cvt.u16.u32 	%rs6, %r2;
	and.b16  	%rs7, %rs6, 240;
	and.b16  	%rs8, %rs6, 15;
	shl.b16 	%rs9, %rs8, 4;
	shr.u16 	%rs10, %rs7, 4;
	or.b16  	%rs11, %rs10, %rs9;
	and.b16  	%rs12, %rs11, 51;
	shl.b16 	%rs13, %rs12, 2;
	shr.u16 	%rs14, %rs11, 2;
	and.b16  	%rs15, %rs14, 51;
	or.b16  	%rs16, %rs15, %rs13;
	shr.u16 	%rs17, %rs16, 1;
	and.b16  	%rs18, %rs16, 64;
	shl.b16 	%rs19, %rs18, 1;
	or.b16  	%rs20, %rs17, %rs19;
	and.b16  	%rs21, %rs20, 192;
	cvt.u32.u16 	%r508, %rs21;
	or.b16  	%rs22, %rs21, 2;
	cvt.u32.u16 	%r509, %rs22;
	or.b16  	%rs23, %rs21, 1;
	cvt.u32.u16 	%r510, %rs23;
	or.b16  	%rs24, %rs21, 3;
	cvt.u32.u16 	%r511, %rs24;
	mul.lo.s32 	%r512, %r507, %r508;
	and.b32  	%r513, %r512, 448;
	cvt.rn.f32.s32 	%f1, %r513;
	mul.f32 	%f2, %f1, 0f3B800000;
	add.f32 	%f3, %f2, %f2;
	mov.b32 	%r514, %f3;
	and.b32  	%r515, %r514, -2147483648;
	or.b32  	%r516, %r515, 1056964608;
	mov.b32 	%f4, %r516;
	add.f32 	%f5, %f3, %f4;
	cvt.rzi.f32.f32 	%f6, %f5;
	abs.f32 	%f7, %f3;
	setp.gt.f32 	%p14, %f7, 0f4B000000;
	selp.f32 	%f8, %f3, %f6, %p14;
	cvt.rzi.f32.f32 	%f9, %f3;
	setp.lt.f32 	%p15, %f7, 0f3F000000;
	selp.f32 	%f10, %f9, %f8, %p15;
	cvt.rzi.s32.f32 	%r517, %f10;
	fma.rn.f32 	%f11, %f10, 0fBF000000, %f2;
	mul.f32 	%f12, %f11, %f11;
	fma.rn.f32 	%f13, %f12, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f14, %f12, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f15, %f13, %f12, 0fC0A55DF6;
	fma.rn.f32 	%f16, %f14, %f12, 0f4081E0CF;
	fma.rn.f32 	%f17, %f12, %f11, 0f00000000;
	fma.rn.f32 	%f18, %f16, %f12, 0fC09DE9E6;
	fma.rn.f32 	%f19, %f15, %f17, 0f00000000;
	fma.rn.f32 	%f20, %f18, %f12, 0f3F800000;
	fma.rn.f32 	%f21, %f11, 0f40490FDB, %f19;
	and.b32  	%r518, %r517, 1;
	setp.eq.b32 	%p16, %r518, 1;
	selp.f32 	%f22, %f20, %f21, %p16;
	selp.f32 	%f23, %f21, %f20, %p16;
	and.b32  	%r519, %r517, 2;
	setp.eq.s32 	%p17, %r519, 0;
	neg.f32 	%f24, %f22;
	selp.f32 	%f25, %f22, %f24, %p17;
	add.s32 	%r520, %r517, 1;
	and.b32  	%r521, %r520, 2;
	setp.eq.s32 	%p18, %r521, 0;
	mov.f32 	%f26, 0f00000000;
	sub.f32 	%f27, %f26, %f23;
	selp.f32 	%f28, %f23, %f27, %p18;
	cvt.rzi.f32.f32 	%f29, %f2;
	setp.eq.f32 	%p19, %f29, %f2;
	mul.f32 	%f30, %f2, 0f00000000;
	selp.f32 	%f31, %f30, %f25, %p19;
	abs.f32 	%f32, %f2;
	setp.gt.f32 	%p20, %f32, 0f4B800000;
	add.f32 	%f33, %f31, 0f3F800000;
	selp.f32 	%f34, %f33, %f28, %p20;
	mul.lo.s32 	%r522, %r507, %r509;
	and.b32  	%r523, %r522, 510;
	cvt.rn.f32.s32 	%f35, %r523;
	mul.f32 	%f36, %f35, 0f3B800000;
	add.f32 	%f37, %f36, %f36;
	mov.b32 	%r524, %f37;
	and.b32  	%r525, %r524, -2147483648;
	or.b32  	%r526, %r525, 1056964608;
	mov.b32 	%f38, %r526;
	add.f32 	%f39, %f37, %f38;
	cvt.rzi.f32.f32 	%f40, %f39;
	abs.f32 	%f41, %f37;
	setp.gt.f32 	%p21, %f41, 0f4B000000;
	selp.f32 	%f42, %f37, %f40, %p21;
	cvt.rzi.f32.f32 	%f43, %f37;
	setp.lt.f32 	%p22, %f41, 0f3F000000;
	selp.f32 	%f44, %f43, %f42, %p22;
	cvt.rzi.s32.f32 	%r527, %f44;
	fma.rn.f32 	%f45, %f44, 0fBF000000, %f36;
	mul.f32 	%f46, %f45, %f45;
	fma.rn.f32 	%f47, %f46, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f48, %f46, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f49, %f47, %f46, 0fC0A55DF6;
	fma.rn.f32 	%f50, %f48, %f46, 0f4081E0CF;
	fma.rn.f32 	%f51, %f46, %f45, 0f00000000;
	fma.rn.f32 	%f52, %f50, %f46, 0fC09DE9E6;
	fma.rn.f32 	%f53, %f49, %f51, 0f00000000;
	fma.rn.f32 	%f54, %f52, %f46, 0f3F800000;
	fma.rn.f32 	%f55, %f45, 0f40490FDB, %f53;
	and.b32  	%r528, %r527, 1;
	setp.eq.b32 	%p23, %r528, 1;
	selp.f32 	%f56, %f54, %f55, %p23;
	selp.f32 	%f57, %f55, %f54, %p23;
	and.b32  	%r529, %r527, 2;
	setp.eq.s32 	%p24, %r529, 0;
	neg.f32 	%f58, %f56;
	selp.f32 	%f59, %f56, %f58, %p24;
	add.s32 	%r530, %r527, 1;
	and.b32  	%r531, %r530, 2;
	setp.eq.s32 	%p25, %r531, 0;
	sub.f32 	%f60, %f26, %f57;
	selp.f32 	%f61, %f57, %f60, %p25;
	cvt.rzi.f32.f32 	%f62, %f36;
	setp.eq.f32 	%p26, %f62, %f36;
	mul.f32 	%f63, %f36, 0f00000000;
	selp.f32 	%f64, %f63, %f59, %p26;
	abs.f32 	%f65, %f36;
	setp.gt.f32 	%p27, %f65, 0f4B800000;
	add.f32 	%f66, %f64, 0f3F800000;
	selp.f32 	%f67, %f66, %f61, %p27;
	mul.lo.s32 	%r532, %r507, %r510;
	and.b32  	%r533, %r532, 511;
	cvt.rn.f32.s32 	%f68, %r533;
	mul.f32 	%f69, %f68, 0f3B800000;
	add.f32 	%f70, %f69, %f69;
	mov.b32 	%r534, %f70;
	and.b32  	%r535, %r534, -2147483648;
	or.b32  	%r536, %r535, 1056964608;
	mov.b32 	%f71, %r536;
	add.f32 	%f72, %f70, %f71;
	cvt.rzi.f32.f32 	%f73, %f72;
	abs.f32 	%f74, %f70;
	setp.gt.f32 	%p28, %f74, 0f4B000000;
	selp.f32 	%f75, %f70, %f73, %p28;
	cvt.rzi.f32.f32 	%f76, %f70;
	setp.lt.f32 	%p29, %f74, 0f3F000000;
	selp.f32 	%f77, %f76, %f75, %p29;
	cvt.rzi.s32.f32 	%r537, %f77;
	fma.rn.f32 	%f78, %f77, 0fBF000000, %f69;
	mul.f32 	%f79, %f78, %f78;
	fma.rn.f32 	%f80, %f79, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f81, %f79, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f82, %f80, %f79, 0fC0A55DF6;
	fma.rn.f32 	%f83, %f81, %f79, 0f4081E0CF;
	fma.rn.f32 	%f84, %f79, %f78, 0f00000000;
	fma.rn.f32 	%f85, %f83, %f79, 0fC09DE9E6;
	fma.rn.f32 	%f86, %f82, %f84, 0f00000000;
	fma.rn.f32 	%f87, %f85, %f79, 0f3F800000;
	fma.rn.f32 	%f88, %f78, 0f40490FDB, %f86;
	and.b32  	%r538, %r537, 1;
	setp.eq.b32 	%p30, %r538, 1;
	selp.f32 	%f89, %f87, %f88, %p30;
	selp.f32 	%f90, %f88, %f87, %p30;
	and.b32  	%r539, %r537, 2;
	setp.eq.s32 	%p31, %r539, 0;
	neg.f32 	%f91, %f89;
	selp.f32 	%f92, %f89, %f91, %p31;
	add.s32 	%r540, %r537, 1;
	and.b32  	%r541, %r540, 2;
	setp.eq.s32 	%p32, %r541, 0;
	sub.f32 	%f93, %f26, %f90;
	selp.f32 	%f94, %f90, %f93, %p32;
	cvt.rzi.f32.f32 	%f95, %f69;
	setp.eq.f32 	%p33, %f95, %f69;
	mul.f32 	%f96, %f69, 0f00000000;
	selp.f32 	%f97, %f96, %f92, %p33;
	abs.f32 	%f98, %f69;
	setp.gt.f32 	%p34, %f98, 0f4B800000;
	add.f32 	%f99, %f97, 0f3F800000;
	selp.f32 	%f100, %f99, %f94, %p34;
	mul.lo.s32 	%r542, %r507, %r511;
	and.b32  	%r543, %r542, 511;
	cvt.rn.f32.s32 	%f101, %r543;
	mul.f32 	%f102, %f101, 0f3B800000;
	add.f32 	%f103, %f102, %f102;
	mov.b32 	%r544, %f103;
	and.b32  	%r545, %r544, -2147483648;
	or.b32  	%r546, %r545, 1056964608;
	mov.b32 	%f104, %r546;
	add.f32 	%f105, %f103, %f104;
	cvt.rzi.f32.f32 	%f106, %f105;
	abs.f32 	%f107, %f103;
	setp.gt.f32 	%p35, %f107, 0f4B000000;
	selp.f32 	%f108, %f103, %f106, %p35;
	cvt.rzi.f32.f32 	%f109, %f103;
	setp.lt.f32 	%p36, %f107, 0f3F000000;
	selp.f32 	%f110, %f109, %f108, %p36;
	cvt.rzi.s32.f32 	%r547, %f110;
	fma.rn.f32 	%f111, %f110, 0fBF000000, %f102;
	mul.f32 	%f112, %f111, %f111;
	fma.rn.f32 	%f113, %f112, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f114, %f112, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f115, %f113, %f112, 0fC0A55DF6;
	fma.rn.f32 	%f116, %f114, %f112, 0f4081E0CF;
	fma.rn.f32 	%f117, %f112, %f111, 0f00000000;
	fma.rn.f32 	%f118, %f116, %f112, 0fC09DE9E6;
	fma.rn.f32 	%f119, %f115, %f117, 0f00000000;
	fma.rn.f32 	%f120, %f118, %f112, 0f3F800000;
	fma.rn.f32 	%f121, %f111, 0f40490FDB, %f119;
	and.b32  	%r548, %r547, 1;
	setp.eq.b32 	%p37, %r548, 1;
	selp.f32 	%f122, %f120, %f121, %p37;
	selp.f32 	%f123, %f121, %f120, %p37;
	and.b32  	%r549, %r547, 2;
	setp.eq.s32 	%p38, %r549, 0;
	neg.f32 	%f124, %f122;
	selp.f32 	%f125, %f122, %f124, %p38;
	add.s32 	%r550, %r547, 1;
	and.b32  	%r551, %r550, 2;
	setp.eq.s32 	%p39, %r551, 0;
	sub.f32 	%f126, %f26, %f123;
	selp.f32 	%f127, %f123, %f126, %p39;
	cvt.rzi.f32.f32 	%f128, %f102;
	setp.eq.f32 	%p40, %f128, %f102;
	mul.f32 	%f129, %f102, 0f00000000;
	selp.f32 	%f130, %f129, %f125, %p40;
	abs.f32 	%f131, %f102;
	setp.gt.f32 	%p41, %f131, 0f4B800000;
	add.f32 	%f132, %f130, 0f3F800000;
	selp.f32 	%f133, %f132, %f127, %p41;
	mov.b32 	%r171, %f34;
	mov.b32 	%r177, %f31;
	xor.b32  	%r175, %r177, -2147483648;
	// begin inline asm
	cvt.rn.f16x2.f32 %r868, %r175, %r171;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r896, %r175, %r171;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r869, %r171, %r177;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r897, %r171, %r177;
	// end inline asm
	mov.b32 	%r183, %f67;
	mov.b32 	%r189, %f64;
	xor.b32  	%r187, %r189, -2147483648;
	// begin inline asm
	cvt.rn.f16x2.f32 %r882, %r187, %r183;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r910, %r187, %r183;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r883, %r183, %r189;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r911, %r183, %r189;
	// end inline asm
	mov.b32 	%r195, %f100;
	mov.b32 	%r201, %f97;
	xor.b32  	%r199, %r201, -2147483648;
	// begin inline asm
	cvt.rn.f16x2.f32 %r875, %r199, %r195;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r903, %r199, %r195;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r876, %r195, %r201;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r904, %r195, %r201;
	// end inline asm
	mov.b32 	%r207, %f133;
	mov.b32 	%r213, %f130;
	xor.b32  	%r211, %r213, -2147483648;
	// begin inline asm
	cvt.rn.f16x2.f32 %r889, %r211, %r207;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r917, %r211, %r207;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r890, %r207, %r213;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r918, %r207, %r213;
	// end inline asm
	shr.u16 	%rs25, %rs6, 8;
	shl.b16 	%rs26, %rs6, 8;
	or.b16  	%rs27, %rs26, %rs25;
	shl.b16 	%rs28, %rs27, 4;
	shr.u16 	%rs29, %rs27, 4;
	and.b16  	%rs30, %rs29, 3840;
	or.b16  	%rs31, %rs30, %rs28;
	and.b16  	%rs32, %rs31, 13107;
	shl.b16 	%rs33, %rs32, 2;
	shr.u16 	%rs34, %rs31, 2;
	and.b16  	%rs35, %rs34, 13107;
	or.b16  	%rs36, %rs35, %rs33;
	shr.u16 	%rs37, %rs36, 1;
	and.b16  	%rs38, %rs36, 16384;
	shl.b16 	%rs39, %rs38, 1;
	or.b16  	%rs40, %rs37, %rs39;
	shr.u16 	%rs41, %rs40, 11;
	and.b16  	%rs42, %rs41, 24;
	cvt.u32.u16 	%r552, %rs42;
	or.b16  	%rs43, %rs42, 4;
	cvt.u32.u16 	%r553, %rs43;
	mul.lo.s32 	%r554, %r507, %r552;
	cvt.rn.f32.s32 	%f134, %r554;
	mul.f32 	%f135, %f134, 0f3B800000;
	add.f32 	%f136, %f135, %f135;
	mov.b32 	%r555, %f136;
	and.b32  	%r556, %r555, -2147483648;
	or.b32  	%r557, %r556, 1056964608;
	mov.b32 	%f137, %r557;
	add.f32 	%f138, %f136, %f137;
	cvt.rzi.f32.f32 	%f139, %f138;
	abs.f32 	%f140, %f136;
	setp.gt.f32 	%p42, %f140, 0f4B000000;
	selp.f32 	%f141, %f136, %f139, %p42;
	cvt.rzi.f32.f32 	%f142, %f136;
	setp.lt.f32 	%p43, %f140, 0f3F000000;
	selp.f32 	%f143, %f142, %f141, %p43;
	cvt.rzi.s32.f32 	%r558, %f143;
	fma.rn.f32 	%f144, %f143, 0fBF000000, %f135;
	mul.f32 	%f145, %f144, %f144;
	fma.rn.f32 	%f146, %f145, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f147, %f145, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f148, %f146, %f145, 0fC0A55DF6;
	fma.rn.f32 	%f149, %f147, %f145, 0f4081E0CF;
	fma.rn.f32 	%f150, %f145, %f144, 0f00000000;
	fma.rn.f32 	%f151, %f149, %f145, 0fC09DE9E6;
	fma.rn.f32 	%f152, %f148, %f150, 0f00000000;
	fma.rn.f32 	%f153, %f151, %f145, 0f3F800000;
	fma.rn.f32 	%f154, %f144, 0f40490FDB, %f152;
	and.b32  	%r559, %r558, 1;
	setp.eq.b32 	%p44, %r559, 1;
	selp.f32 	%f155, %f153, %f154, %p44;
	selp.f32 	%f156, %f154, %f153, %p44;
	and.b32  	%r560, %r558, 2;
	setp.eq.s32 	%p45, %r560, 0;
	neg.f32 	%f157, %f155;
	selp.f32 	%f158, %f155, %f157, %p45;
	add.s32 	%r561, %r558, 1;
	and.b32  	%r562, %r561, 2;
	setp.eq.s32 	%p46, %r562, 0;
	sub.f32 	%f159, %f26, %f156;
	selp.f32 	%f160, %f156, %f159, %p46;
	cvt.rzi.f32.f32 	%f161, %f135;
	setp.eq.f32 	%p47, %f161, %f135;
	mul.f32 	%f162, %f135, 0f00000000;
	selp.f32 	%f163, %f162, %f158, %p47;
	abs.f32 	%f164, %f135;
	setp.gt.f32 	%p48, %f164, 0f4B800000;
	add.f32 	%f165, %f163, 0f3F800000;
	selp.f32 	%f166, %f165, %f160, %p48;
	mul.lo.s32 	%r563, %r507, %r553;
	cvt.rn.f32.s32 	%f167, %r563;
	mul.f32 	%f168, %f167, 0f3B800000;
	add.f32 	%f169, %f168, %f168;
	mov.b32 	%r564, %f169;
	and.b32  	%r565, %r564, -2147483648;
	or.b32  	%r566, %r565, 1056964608;
	mov.b32 	%f170, %r566;
	add.f32 	%f171, %f169, %f170;
	cvt.rzi.f32.f32 	%f172, %f171;
	abs.f32 	%f173, %f169;
	setp.gt.f32 	%p49, %f173, 0f4B000000;
	selp.f32 	%f174, %f169, %f172, %p49;
	cvt.rzi.f32.f32 	%f175, %f169;
	setp.lt.f32 	%p50, %f173, 0f3F000000;
	selp.f32 	%f176, %f175, %f174, %p50;
	cvt.rzi.s32.f32 	%r567, %f176;
	fma.rn.f32 	%f177, %f176, 0fBF000000, %f168;
	mul.f32 	%f178, %f177, %f177;
	fma.rn.f32 	%f179, %f178, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f180, %f178, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f181, %f179, %f178, 0fC0A55DF6;
	fma.rn.f32 	%f182, %f180, %f178, 0f4081E0CF;
	fma.rn.f32 	%f183, %f178, %f177, 0f00000000;
	fma.rn.f32 	%f184, %f182, %f178, 0fC09DE9E6;
	fma.rn.f32 	%f185, %f181, %f183, 0f00000000;
	fma.rn.f32 	%f186, %f184, %f178, 0f3F800000;
	fma.rn.f32 	%f187, %f177, 0f40490FDB, %f185;
	and.b32  	%r568, %r567, 1;
	setp.eq.b32 	%p51, %r568, 1;
	selp.f32 	%f188, %f186, %f187, %p51;
	selp.f32 	%f189, %f187, %f186, %p51;
	and.b32  	%r569, %r567, 2;
	setp.eq.s32 	%p52, %r569, 0;
	neg.f32 	%f190, %f188;
	selp.f32 	%f191, %f188, %f190, %p52;
	add.s32 	%r570, %r567, 1;
	and.b32  	%r571, %r570, 2;
	setp.eq.s32 	%p53, %r571, 0;
	sub.f32 	%f192, %f26, %f189;
	selp.f32 	%f193, %f189, %f192, %p53;
	cvt.rzi.f32.f32 	%f194, %f168;
	setp.eq.f32 	%p54, %f194, %f168;
	mul.f32 	%f195, %f168, 0f00000000;
	selp.f32 	%f196, %f195, %f191, %p54;
	abs.f32 	%f197, %f168;
	setp.gt.f32 	%p55, %f197, 0f4B800000;
	add.f32 	%f198, %f196, 0f3F800000;
	selp.f32 	%f199, %f198, %f193, %p55;
	mov.b32 	%r219, %f166;
	mov.b32 	%r220, %f199;
	// begin inline asm
	cvt.rn.f16x2.f32 %r41, %r220, %r219;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r42, %r220, %r219;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r43, %r220, %r219;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r44, %r220, %r219;
	// end inline asm
	mov.b32 	%r231, %f163;
	// begin inline asm
	cvt.rn.f16x2.f32 %r45, %r231, %r231;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r46, %r231, %r231;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r47, %r231, %r231;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r48, %r231, %r231;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r49, %r219, %r220;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r50, %r219, %r220;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r51, %r219, %r220;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r52, %r219, %r220;
	// end inline asm
	mov.b32 	%r255, %f196;
	// begin inline asm
	cvt.rn.f16x2.f32 %r53, %r255, %r255;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r54, %r255, %r255;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r55, %r255, %r255;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r56, %r255, %r255;
	// end inline asm
	shl.b32 	%r572, %r2, 1;
	and.b32  	%r573, %r572, 16;
	and.b32  	%r574, %r572, 56;
	mul.lo.s32 	%r575, %r574, %r552;
	and.b32  	%r576, %r575, 448;
	cvt.rn.f32.s32 	%f200, %r576;
	mul.f32 	%f201, %f200, 0f3B800000;
	add.f32 	%f202, %f201, %f201;
	mov.b32 	%r577, %f202;
	and.b32  	%r578, %r577, -2147483648;
	or.b32  	%r579, %r578, 1056964608;
	mov.b32 	%f203, %r579;
	add.f32 	%f204, %f202, %f203;
	cvt.rzi.f32.f32 	%f205, %f204;
	abs.f32 	%f206, %f202;
	setp.gt.f32 	%p56, %f206, 0f4B000000;
	selp.f32 	%f207, %f202, %f205, %p56;
	cvt.rzi.f32.f32 	%f208, %f202;
	setp.lt.f32 	%p57, %f206, 0f3F000000;
	selp.f32 	%f209, %f208, %f207, %p57;
	cvt.rzi.s32.f32 	%r580, %f209;
	fma.rn.f32 	%f210, %f209, 0fBF000000, %f201;
	mul.f32 	%f211, %f210, %f210;
	fma.rn.f32 	%f212, %f211, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f213, %f211, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f214, %f212, %f211, 0fC0A55DF6;
	fma.rn.f32 	%f215, %f213, %f211, 0f4081E0CF;
	fma.rn.f32 	%f216, %f211, %f210, 0f00000000;
	fma.rn.f32 	%f217, %f215, %f211, 0fC09DE9E6;
	fma.rn.f32 	%f218, %f214, %f216, 0f00000000;
	fma.rn.f32 	%f219, %f217, %f211, 0f3F800000;
	fma.rn.f32 	%f220, %f210, 0f40490FDB, %f218;
	and.b32  	%r581, %r580, 1;
	setp.eq.b32 	%p58, %r581, 1;
	selp.f32 	%f221, %f219, %f220, %p58;
	selp.f32 	%f222, %f220, %f219, %p58;
	and.b32  	%r582, %r580, 2;
	setp.eq.s32 	%p59, %r582, 0;
	neg.f32 	%f223, %f221;
	selp.f32 	%f224, %f221, %f223, %p59;
	add.s32 	%r583, %r580, 1;
	and.b32  	%r584, %r583, 2;
	setp.eq.s32 	%p60, %r584, 0;
	sub.f32 	%f225, %f26, %f222;
	selp.f32 	%f226, %f222, %f225, %p60;
	cvt.rzi.f32.f32 	%f227, %f201;
	setp.eq.f32 	%p61, %f227, %f201;
	mul.f32 	%f228, %f201, 0f00000000;
	selp.f32 	%f229, %f228, %f224, %p61;
	abs.f32 	%f230, %f201;
	setp.gt.f32 	%p62, %f230, 0f4B800000;
	add.f32 	%f231, %f229, 0f3F800000;
	selp.f32 	%f232, %f231, %f226, %p62;
	shl.b32 	%r585, %r574, 5;
	add.s32 	%r586, %r575, %r585;
	and.b32  	%r587, %r586, 448;
	cvt.rn.f32.s32 	%f233, %r587;
	mul.f32 	%f234, %f233, 0f3B800000;
	add.f32 	%f235, %f234, %f234;
	mov.b32 	%r588, %f235;
	and.b32  	%r589, %r588, -2147483648;
	or.b32  	%r590, %r589, 1056964608;
	mov.b32 	%f236, %r590;
	add.f32 	%f237, %f235, %f236;
	cvt.rzi.f32.f32 	%f238, %f237;
	abs.f32 	%f239, %f235;
	setp.gt.f32 	%p63, %f239, 0f4B000000;
	selp.f32 	%f240, %f235, %f238, %p63;
	cvt.rzi.f32.f32 	%f241, %f235;
	setp.lt.f32 	%p64, %f239, 0f3F000000;
	selp.f32 	%f242, %f241, %f240, %p64;
	cvt.rzi.s32.f32 	%r591, %f242;
	fma.rn.f32 	%f243, %f242, 0fBF000000, %f234;
	mul.f32 	%f244, %f243, %f243;
	fma.rn.f32 	%f245, %f244, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f246, %f244, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f247, %f245, %f244, 0fC0A55DF6;
	fma.rn.f32 	%f248, %f246, %f244, 0f4081E0CF;
	fma.rn.f32 	%f249, %f244, %f243, 0f00000000;
	fma.rn.f32 	%f250, %f248, %f244, 0fC09DE9E6;
	fma.rn.f32 	%f251, %f247, %f249, 0f00000000;
	fma.rn.f32 	%f252, %f250, %f244, 0f3F800000;
	fma.rn.f32 	%f253, %f243, 0f40490FDB, %f251;
	and.b32  	%r592, %r591, 1;
	setp.eq.b32 	%p65, %r592, 1;
	selp.f32 	%f254, %f252, %f253, %p65;
	selp.f32 	%f255, %f253, %f252, %p65;
	and.b32  	%r593, %r591, 2;
	setp.eq.s32 	%p66, %r593, 0;
	neg.f32 	%f256, %f254;
	selp.f32 	%f257, %f254, %f256, %p66;
	add.s32 	%r594, %r591, 1;
	and.b32  	%r595, %r594, 2;
	setp.eq.s32 	%p67, %r595, 0;
	sub.f32 	%f258, %f26, %f255;
	selp.f32 	%f259, %f255, %f258, %p67;
	cvt.rzi.f32.f32 	%f260, %f234;
	setp.eq.f32 	%p68, %f260, %f234;
	mul.f32 	%f261, %f234, 0f00000000;
	selp.f32 	%f262, %f261, %f257, %p68;
	abs.f32 	%f263, %f234;
	setp.gt.f32 	%p69, %f263, 0f4B800000;
	add.f32 	%f264, %f262, 0f3F800000;
	selp.f32 	%f265, %f264, %f259, %p69;
	mov.b32 	%r267, %f232;
	mov.b32 	%r268, %f265;
	// begin inline asm
	cvt.rn.f16x2.f32 %r1052, %r268, %r267;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r1062, %r268, %r267;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r1072, %r268, %r267;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r1082, %r268, %r267;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r1092, %r268, %r267;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r1102, %r268, %r267;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r1112, %r268, %r267;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r1122, %r268, %r267;
	// end inline asm
	mov.b32 	%r315, %f229;
	xor.b32  	%r294, %r315, -2147483648;
	mov.b32 	%r316, %f262;
	xor.b32  	%r295, %r316, -2147483648;
	// begin inline asm
	cvt.rn.f16x2.f32 %r1053, %r295, %r294;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r1063, %r295, %r294;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r1073, %r295, %r294;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r1083, %r295, %r294;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r1093, %r295, %r294;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r1103, %r295, %r294;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r1113, %r295, %r294;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r1123, %r295, %r294;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r1054, %r316, %r315;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r1064, %r316, %r315;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r1074, %r316, %r315;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r1084, %r316, %r315;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r1094, %r316, %r315;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r1104, %r316, %r315;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r1114, %r316, %r315;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r1124, %r316, %r315;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r1055, %r268, %r267;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r1065, %r268, %r267;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r1075, %r268, %r267;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r1085, %r268, %r267;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r1095, %r268, %r267;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r1105, %r268, %r267;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r1115, %r268, %r267;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r1125, %r268, %r267;
	// end inline asm
	and.b16  	%rs44, %rs6, 2;
	shl.b16 	%rs45, %rs6, 1;
	shr.u16 	%rs46, %rs44, 1;
	or.b16  	%rs47, %rs45, %rs46;
	and.b16  	%rs48, %rs47, 3;
	cvt.u32.u16 	%r596, %rs48;
	mul.lo.s32 	%r597, %r574, %r596;
	cvt.rn.f32.s32 	%f266, %r597;
	mul.f32 	%f267, %f266, 0f3B800000;
	add.f32 	%f268, %f267, %f267;
	mov.b32 	%r598, %f268;
	and.b32  	%r599, %r598, -2147483648;
	or.b32  	%r600, %r599, 1056964608;
	mov.b32 	%f269, %r600;
	add.f32 	%f270, %f268, %f269;
	cvt.rzi.f32.f32 	%f271, %f270;
	abs.f32 	%f272, %f268;
	setp.gt.f32 	%p70, %f272, 0f4B000000;
	selp.f32 	%f273, %f268, %f271, %p70;
	cvt.rzi.f32.f32 	%f274, %f268;
	setp.lt.f32 	%p71, %f272, 0f3F000000;
	selp.f32 	%f275, %f274, %f273, %p71;
	cvt.rzi.s32.f32 	%r601, %f275;
	fma.rn.f32 	%f276, %f275, 0fBF000000, %f267;
	mul.f32 	%f277, %f276, %f276;
	fma.rn.f32 	%f278, %f277, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f279, %f277, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f280, %f278, %f277, 0fC0A55DF6;
	fma.rn.f32 	%f281, %f279, %f277, 0f4081E0CF;
	fma.rn.f32 	%f282, %f277, %f276, 0f00000000;
	fma.rn.f32 	%f283, %f281, %f277, 0fC09DE9E6;
	fma.rn.f32 	%f284, %f280, %f282, 0f00000000;
	fma.rn.f32 	%f285, %f283, %f277, 0f3F800000;
	fma.rn.f32 	%f286, %f276, 0f40490FDB, %f284;
	and.b32  	%r602, %r601, 1;
	setp.eq.b32 	%p72, %r602, 1;
	selp.f32 	%f287, %f285, %f286, %p72;
	selp.f32 	%f288, %f286, %f285, %p72;
	and.b32  	%r603, %r601, 2;
	setp.eq.s32 	%p73, %r603, 0;
	neg.f32 	%f289, %f287;
	selp.f32 	%f290, %f287, %f289, %p73;
	add.s32 	%r604, %r601, 1;
	and.b32  	%r605, %r604, 2;
	setp.eq.s32 	%p74, %r605, 0;
	sub.f32 	%f291, %f26, %f288;
	selp.f32 	%f292, %f288, %f291, %p74;
	cvt.rzi.f32.f32 	%f293, %f267;
	setp.eq.f32 	%p75, %f293, %f267;
	mul.f32 	%f294, %f267, 0f00000000;
	selp.f32 	%f295, %f294, %f290, %p75;
	abs.f32 	%f296, %f267;
	setp.gt.f32 	%p76, %f296, 0f4B800000;
	add.f32 	%f297, %f295, 0f3F800000;
	selp.f32 	%f298, %f297, %f292, %p76;
	shl.b32 	%r606, %r574, 2;
	add.s32 	%r607, %r597, %r606;
	cvt.rn.f32.s32 	%f299, %r607;
	mul.f32 	%f300, %f299, 0f3B800000;
	add.f32 	%f301, %f300, %f300;
	mov.b32 	%r608, %f301;
	and.b32  	%r609, %r608, -2147483648;
	or.b32  	%r610, %r609, 1056964608;
	mov.b32 	%f302, %r610;
	add.f32 	%f303, %f301, %f302;
	cvt.rzi.f32.f32 	%f304, %f303;
	abs.f32 	%f305, %f301;
	setp.gt.f32 	%p77, %f305, 0f4B000000;
	selp.f32 	%f306, %f301, %f304, %p77;
	cvt.rzi.f32.f32 	%f307, %f301;
	setp.lt.f32 	%p78, %f305, 0f3F000000;
	selp.f32 	%f308, %f307, %f306, %p78;
	cvt.rzi.s32.f32 	%r611, %f308;
	fma.rn.f32 	%f309, %f308, 0fBF000000, %f300;
	mul.f32 	%f310, %f309, %f309;
	fma.rn.f32 	%f311, %f310, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f312, %f310, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f313, %f311, %f310, 0fC0A55DF6;
	fma.rn.f32 	%f314, %f312, %f310, 0f4081E0CF;
	fma.rn.f32 	%f315, %f310, %f309, 0f00000000;
	fma.rn.f32 	%f316, %f314, %f310, 0fC09DE9E6;
	fma.rn.f32 	%f317, %f313, %f315, 0f00000000;
	fma.rn.f32 	%f318, %f316, %f310, 0f3F800000;
	fma.rn.f32 	%f319, %f309, 0f40490FDB, %f317;
	and.b32  	%r612, %r611, 1;
	setp.eq.b32 	%p79, %r612, 1;
	selp.f32 	%f320, %f318, %f319, %p79;
	selp.f32 	%f321, %f319, %f318, %p79;
	and.b32  	%r613, %r611, 2;
	setp.eq.s32 	%p80, %r613, 0;
	neg.f32 	%f322, %f320;
	selp.f32 	%f323, %f320, %f322, %p80;
	add.s32 	%r614, %r611, 1;
	and.b32  	%r615, %r614, 2;
	setp.eq.s32 	%p81, %r615, 0;
	sub.f32 	%f324, %f26, %f321;
	selp.f32 	%f325, %f321, %f324, %p81;
	cvt.rzi.f32.f32 	%f326, %f300;
	setp.eq.f32 	%p82, %f326, %f300;
	mul.f32 	%f327, %f300, 0f00000000;
	selp.f32 	%f328, %f327, %f323, %p82;
	abs.f32 	%f329, %f300;
	setp.gt.f32 	%p83, %f329, 0f4B800000;
	add.f32 	%f330, %f328, 0f3F800000;
	selp.f32 	%f331, %f330, %f325, %p83;
	mov.b32 	%r363, %f298;
	mov.b32 	%r364, %f331;
	// begin inline asm
	cvt.rn.f16x2.f32 %r89, %r364, %r363;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r90, %r364, %r363;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r91, %r364, %r363;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r92, %r364, %r363;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r93, %r364, %r363;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r94, %r364, %r363;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r95, %r364, %r363;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r96, %r364, %r363;
	// end inline asm
	mov.b32 	%r387, %f295;
	mov.b32 	%r388, %f328;
	// begin inline asm
	cvt.rn.f16x2.f32 %r97, %r388, %r387;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r98, %r388, %r387;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r99, %r388, %r387;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r100, %r388, %r387;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r101, %r388, %r387;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r102, %r388, %r387;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r103, %r388, %r387;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r104, %r388, %r387;
	// end inline asm
	shl.b32 	%r616, %r2, 4;
	and.b32  	%r617, %r616, 448;
	mul.lo.s32 	%r618, %r617, %r596;
	and.b32  	%r619, %r618, 448;
	cvt.rn.f32.s32 	%f332, %r619;
	mul.f32 	%f333, %f332, 0f3B800000;
	add.f32 	%f334, %f333, %f333;
	mov.b32 	%r620, %f334;
	and.b32  	%r621, %r620, -2147483648;
	or.b32  	%r622, %r621, 1056964608;
	mov.b32 	%f335, %r622;
	add.f32 	%f336, %f334, %f335;
	cvt.rzi.f32.f32 	%f337, %f336;
	abs.f32 	%f338, %f334;
	setp.gt.f32 	%p84, %f338, 0f4B000000;
	selp.f32 	%f339, %f334, %f337, %p84;
	cvt.rzi.f32.f32 	%f340, %f334;
	setp.lt.f32 	%p85, %f338, 0f3F000000;
	selp.f32 	%f341, %f340, %f339, %p85;
	cvt.rzi.s32.f32 	%r623, %f341;
	fma.rn.f32 	%f342, %f341, 0fBF000000, %f333;
	mul.f32 	%f343, %f342, %f342;
	fma.rn.f32 	%f344, %f343, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f345, %f343, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f346, %f344, %f343, 0fC0A55DF6;
	fma.rn.f32 	%f347, %f345, %f343, 0f4081E0CF;
	fma.rn.f32 	%f348, %f343, %f342, 0f00000000;
	fma.rn.f32 	%f349, %f347, %f343, 0fC09DE9E6;
	fma.rn.f32 	%f350, %f346, %f348, 0f00000000;
	fma.rn.f32 	%f351, %f349, %f343, 0f3F800000;
	fma.rn.f32 	%f352, %f342, 0f40490FDB, %f350;
	and.b32  	%r624, %r623, 1;
	setp.eq.b32 	%p86, %r624, 1;
	selp.f32 	%f353, %f351, %f352, %p86;
	selp.f32 	%f354, %f352, %f351, %p86;
	and.b32  	%r625, %r623, 2;
	setp.eq.s32 	%p87, %r625, 0;
	neg.f32 	%f355, %f353;
	selp.f32 	%f356, %f353, %f355, %p87;
	add.s32 	%r626, %r623, 1;
	and.b32  	%r627, %r626, 2;
	setp.eq.s32 	%p88, %r627, 0;
	sub.f32 	%f357, %f26, %f354;
	selp.f32 	%f358, %f354, %f357, %p88;
	cvt.rzi.f32.f32 	%f359, %f333;
	setp.eq.f32 	%p89, %f359, %f333;
	mul.f32 	%f360, %f333, 0f00000000;
	selp.f32 	%f361, %f360, %f356, %p89;
	abs.f32 	%f362, %f333;
	setp.gt.f32 	%p90, %f362, 0f4B800000;
	add.f32 	%f363, %f361, 0f3F800000;
	selp.f32 	%f364, %f363, %f358, %p90;
	shl.b32 	%r628, %r617, 2;
	add.s32 	%r629, %r618, %r628;
	and.b32  	%r630, %r629, 448;
	cvt.rn.f32.s32 	%f365, %r630;
	mul.f32 	%f366, %f365, 0f3B800000;
	add.f32 	%f367, %f366, %f366;
	mov.b32 	%r631, %f367;
	and.b32  	%r632, %r631, -2147483648;
	or.b32  	%r633, %r632, 1056964608;
	mov.b32 	%f368, %r633;
	add.f32 	%f369, %f367, %f368;
	cvt.rzi.f32.f32 	%f370, %f369;
	abs.f32 	%f371, %f367;
	setp.gt.f32 	%p91, %f371, 0f4B000000;
	selp.f32 	%f372, %f367, %f370, %p91;
	cvt.rzi.f32.f32 	%f373, %f367;
	setp.lt.f32 	%p92, %f371, 0f3F000000;
	selp.f32 	%f374, %f373, %f372, %p92;
	cvt.rzi.s32.f32 	%r634, %f374;
	fma.rn.f32 	%f375, %f374, 0fBF000000, %f366;
	mul.f32 	%f376, %f375, %f375;
	fma.rn.f32 	%f377, %f376, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f378, %f376, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f379, %f377, %f376, 0fC0A55DF6;
	fma.rn.f32 	%f380, %f378, %f376, 0f4081E0CF;
	fma.rn.f32 	%f381, %f376, %f375, 0f00000000;
	fma.rn.f32 	%f382, %f380, %f376, 0fC09DE9E6;
	fma.rn.f32 	%f383, %f379, %f381, 0f00000000;
	fma.rn.f32 	%f384, %f382, %f376, 0f3F800000;
	fma.rn.f32 	%f385, %f375, 0f40490FDB, %f383;
	and.b32  	%r635, %r634, 1;
	setp.eq.b32 	%p93, %r635, 1;
	selp.f32 	%f386, %f384, %f385, %p93;
	selp.f32 	%f387, %f385, %f384, %p93;
	and.b32  	%r636, %r634, 2;
	setp.eq.s32 	%p94, %r636, 0;
	neg.f32 	%f388, %f386;
	selp.f32 	%f389, %f386, %f388, %p94;
	add.s32 	%r637, %r634, 1;
	and.b32  	%r638, %r637, 2;
	setp.eq.s32 	%p95, %r638, 0;
	sub.f32 	%f390, %f26, %f387;
	selp.f32 	%f391, %f387, %f390, %p95;
	cvt.rzi.f32.f32 	%f392, %f366;
	setp.eq.f32 	%p96, %f392, %f366;
	mul.f32 	%f393, %f366, 0f00000000;
	selp.f32 	%f394, %f393, %f389, %p96;
	abs.f32 	%f395, %f366;
	setp.gt.f32 	%p97, %f395, 0f4B800000;
	add.f32 	%f396, %f394, 0f3F800000;
	selp.f32 	%f397, %f396, %f391, %p97;
	mov.b32 	%r411, %f364;
	mov.b32 	%r412, %f397;
	// begin inline asm
	cvt.rn.f16x2.f32 %r1324, %r412, %r411;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r1334, %r412, %r411;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r1344, %r412, %r411;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r1354, %r412, %r411;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r1364, %r412, %r411;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r1374, %r412, %r411;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r1384, %r412, %r411;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r1394, %r412, %r411;
	// end inline asm
	mov.b32 	%r459, %f361;
	xor.b32  	%r438, %r459, -2147483648;
	mov.b32 	%r460, %f394;
	xor.b32  	%r439, %r460, -2147483648;
	// begin inline asm
	cvt.rn.f16x2.f32 %r1325, %r439, %r438;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r1335, %r439, %r438;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r1345, %r439, %r438;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r1355, %r439, %r438;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r1365, %r439, %r438;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r1375, %r439, %r438;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r1385, %r439, %r438;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r1395, %r439, %r438;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r1326, %r460, %r459;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r1336, %r460, %r459;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r1346, %r460, %r459;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r1356, %r460, %r459;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r1366, %r460, %r459;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r1376, %r460, %r459;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r1386, %r460, %r459;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r1396, %r460, %r459;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r1327, %r412, %r411;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r1337, %r412, %r411;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r1347, %r412, %r411;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r1357, %r412, %r411;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r1367, %r412, %r411;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r1377, %r412, %r411;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r1387, %r412, %r411;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r1397, %r412, %r411;
	// end inline asm
	shl.b32 	%r639, %r3, 11;
	shl.b32 	%r640, %r1, 8;
	and.b32  	%r641, %r640, 1024;
	shr.u32 	%r642, %r2, 1;
	and.b32  	%r643, %r642, 8;
	shl.b32 	%r644, %r2, 5;
	and.b32  	%r645, %r644, 64;
	and.b32  	%r646, %r640, 768;
	shl.b32 	%r647, %r2, 7;
	and.b32  	%r648, %r647, 128;
	shl.b32 	%r649, %r2, 3;
	and.b32  	%r650, %r649, 32;
	or.b32  	%r651, %r641, %r639;
	or.b32  	%r652, %r651, %r573;
	or.b32  	%r653, %r652, %r648;
	or.b32  	%r654, %r653, %r650;
	or.b32  	%r655, %r654, %r646;
	or.b32  	%r656, %r655, %r645;
	add.s32 	%r657, %r656, %r643;
	mul.wide.u32 	%rd46, %r657, 4;
	add.s64 	%rd47, %rd1, %rd46;
	ld.global.u32 	%r843, [%rd47];
	or.b32  	%r658, %r645, %r643;
	or.b32  	%r659, %r658, %r646;
	or.b32  	%r660, %r659, %r650;
	or.b32  	%r661, %r660, %r648;
	or.b32  	%r662, %r661, %r573;
	cvt.u64.u32 	%rd48, %r651;
	cvt.u64.u32 	%rd49, %r662;
	add.s64 	%rd50, %rd48, %rd49;
	shl.b64 	%rd51, %rd50, 2;
	add.s64 	%rd52, %rd1, %rd51;
	ld.global.u32 	%r846, [%rd52+4];
	ld.global.u32 	%r849, [%rd52+8];
	ld.global.u32 	%r852, [%rd52+12];
	ld.global.u32 	%r855, [%rd52+16];
	ld.global.u32 	%r858, [%rd52+20];
	ld.global.u32 	%r861, [%rd52+24];
	or.b32  	%r663, %r645, %r642;
	or.b32  	%r664, %r663, %r640;
	and.b32  	%r665, %r664, 840;
	or.b32  	%r666, %r665, %r650;
	or.b32  	%r667, %r666, %r648;
	or.b32  	%r668, %r667, %r573;
	or.b32  	%r669, %r651, %r668;
	mul.wide.u32 	%rd53, %r669, 4;
	add.s64 	%rd54, %rd1, %rd53;
	ld.global.u32 	%r864, [%rd54+28];
	shl.b32 	%r145, %r152, 17;
	shr.u32 	%r670, %r662, 2;
	shl.b32 	%r671, %r1, 6;
	and.b32  	%r672, %r671, 256;
	shl.b32 	%r673, %r3, 9;
	or.b32  	%r674, %r672, %r673;
	or.b32  	%r146, %r674, %r670;
	and.b32  	%r147, %r2, 1;
	and.b32  	%r148, %r2, 2;
	shl.b32 	%r675, %r1, 9;
	and.b32  	%r676, %r675, 1536;
	and.b32  	%r677, %r675, 2048;
	or.b32  	%r678, %r677, %r2;
	or.b32  	%r679, %r678, %r676;
	mul.wide.u32 	%rd55, %r679, 4;
	mov.u64 	%rd56, shmem;
	add.s64 	%rd5, %rd56, %rd55;
	or.b32  	%r680, %r679, 64;
	mul.wide.u32 	%rd57, %r680, 4;
	add.s64 	%rd6, %rd56, %rd57;
	or.b32  	%r681, %r679, 128;
	mul.wide.u32 	%rd58, %r681, 4;
	add.s64 	%rd7, %rd56, %rd58;
	or.b32  	%r682, %r679, 192;
	mul.wide.u32 	%rd59, %r682, 4;
	add.s64 	%rd8, %rd56, %rd59;
	or.b32  	%r683, %r679, 256;
	mul.wide.u32 	%rd60, %r683, 4;
	add.s64 	%rd9, %rd56, %rd60;
	or.b32  	%r684, %r679, 320;
	mul.wide.u32 	%rd61, %r684, 4;
	add.s64 	%rd10, %rd56, %rd61;
	or.b32  	%r685, %r679, 384;
	mul.wide.u32 	%rd62, %r685, 4;
	add.s64 	%rd11, %rd56, %rd62;
	or.b32  	%r686, %r679, 448;
	mul.wide.u32 	%rd63, %r686, 4;
	add.s64 	%rd12, %rd56, %rd63;
	or.b32  	%r687, %r2, 32;
	or.b32  	%r688, %r687, %r677;
	or.b32  	%r689, %r688, %r676;
	mul.wide.u32 	%rd64, %r689, 4;
	add.s64 	%rd13, %rd56, %rd64;
	or.b32  	%r690, %r679, 96;
	mul.wide.u32 	%rd65, %r690, 4;
	add.s64 	%rd14, %rd56, %rd65;
	or.b32  	%r691, %r679, 160;
	mul.wide.u32 	%rd66, %r691, 4;
	add.s64 	%rd15, %rd56, %rd66;
	or.b32  	%r692, %r679, 224;
	mul.wide.u32 	%rd67, %r692, 4;
	add.s64 	%rd16, %rd56, %rd67;
	or.b32  	%r693, %r679, 288;
	mul.wide.u32 	%rd68, %r693, 4;
	add.s64 	%rd17, %rd56, %rd68;
	or.b32  	%r694, %r679, 352;
	mul.wide.u32 	%rd69, %r694, 4;
	add.s64 	%rd18, %rd56, %rd69;
	or.b32  	%r695, %r679, 416;
	mul.wide.u32 	%rd70, %r695, 4;
	add.s64 	%rd19, %rd56, %rd70;
	or.b32  	%r696, %r679, 480;
	mul.wide.u32 	%rd71, %r696, 4;
	add.s64 	%rd20, %rd56, %rd71;
	or.b32  	%r697, %r671, %r2;
	mul.wide.u32 	%rd72, %r697, 4;
	add.s64 	%rd21, %rd56, %rd72;
	or.b32  	%r698, %r687, %r671;
	mul.wide.u32 	%rd73, %r698, 4;
	add.s64 	%rd22, %rd56, %rd73;
	or.b32  	%r699, %r697, 512;
	mul.wide.u32 	%rd74, %r699, 4;
	add.s64 	%rd23, %rd56, %rd74;
	or.b32  	%r700, %r697, 544;
	mul.wide.u32 	%rd75, %r700, 4;
	add.s64 	%rd24, %rd56, %rd75;
	or.b32  	%r701, %r697, 1024;
	mul.wide.u32 	%rd76, %r701, 4;
	add.s64 	%rd25, %rd56, %rd76;
	or.b32  	%r702, %r697, 1056;
	mul.wide.u32 	%rd77, %r702, 4;
	add.s64 	%rd26, %rd56, %rd77;
	or.b32  	%r703, %r697, 1536;
	mul.wide.u32 	%rd78, %r703, 4;
	add.s64 	%rd27, %rd56, %rd78;
	or.b32  	%r704, %r697, 1568;
	mul.wide.u32 	%rd79, %r704, 4;
	add.s64 	%rd28, %rd56, %rd79;
	or.b32  	%r705, %r697, 2048;
	mul.wide.u32 	%rd80, %r705, 4;
	add.s64 	%rd29, %rd56, %rd80;
	or.b32  	%r706, %r697, 2080;
	mul.wide.u32 	%rd81, %r706, 4;
	add.s64 	%rd30, %rd56, %rd81;
	or.b32  	%r707, %r697, 2560;
	mul.wide.u32 	%rd82, %r707, 4;
	add.s64 	%rd31, %rd56, %rd82;
	or.b32  	%r708, %r697, 2592;
	mul.wide.u32 	%rd83, %r708, 4;
	add.s64 	%rd32, %rd56, %rd83;
	or.b32  	%r709, %r697, 3072;
	mul.wide.u32 	%rd84, %r709, 4;
	add.s64 	%rd33, %rd56, %rd84;
	or.b32  	%r710, %r697, 3104;
	mul.wide.u32 	%rd85, %r710, 4;
	add.s64 	%rd34, %rd56, %rd85;
	or.b32  	%r711, %r697, 3584;
	mul.wide.u32 	%rd86, %r711, 4;
	add.s64 	%rd35, %rd56, %rd86;
	or.b32  	%r712, %r697, 3616;
	mul.wide.u32 	%rd87, %r712, 4;
	add.s64 	%rd36, %rd56, %rd87;
	shl.b32 	%r713, %r154, 19;
	or.b32  	%r714, %r649, %r1;
	or.b32  	%r149, %r714, %r639;
	cvt.s64.s32 	%rd37, %r713;
	mov.u32 	%r506, 0;
	mov.u16 	%rs78, 0;
	mov.u32 	%r2109, %r506;
$L__BB0_8:                              // %L2812
                                        // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_9 Depth 2
	mul.hi.u32 	%r717, %r2109, -1431655765;
	shr.u32 	%r6, %r717, 4;
	mov.u32 	%r2110, 24;
	mov.u16 	%rs79, %rs78;
	mov.u32 	%r2111, %r506;
	mov.u32 	%r2112, %r506;
	mov.u32 	%r2113, %r506;
	mov.u32 	%r2114, %r506;
	mov.u32 	%r2115, %r506;
	mov.u32 	%r2116, %r506;
	mov.u32 	%r2117, %r506;
	mov.u32 	%r2118, %r506;
$L__BB0_9:                              // %L2815
                                        //   Parent Loop BB0_8 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	setp.eq.s32 	%p98, %r148, 0;
	setp.eq.s32 	%p99, %r147, 0;
	shr.s16 	%rs73, %rs79, 15;
	shr.u16 	%rs74, %rs73, 4;
	add.s16 	%rs75, %rs79, %rs74;
	and.b16  	%rs76, %rs75, 28672;
	sub.s16 	%rs77, %rs79, %rs76;
	cvt.u32.u16 	%r2034, %rs77;
	shl.b32 	%r2035, %r2034, 17;
	or.b32  	%r2036, %r146, %r2035;
	add.s32 	%r2037, %r2036, %r145;
	shr.s32 	%r2038, %r2037, 31;
	shr.u32 	%r2039, %r2038, 3;
	add.s32 	%r2040, %r2037, %r2039;
	shr.s32 	%r2041, %r2040, 29;
	setp.lt.s32 	%p100, %r2037, 0;
	and.b32  	%r2042, %r2040, -536870912;
	setp.ne.s32 	%p101, %r2042, %r2037;
	and.pred  	%p102, %p100, %p101;
	selp.u32 	%r2043, 1, 0, %p102;
	sub.s32 	%r2044, %r2043, %r2041;
	shl.b32 	%r2045, %r2044, 29;
	add.s32 	%r2046, %r2037, %r2045;
	add.s32 	%r2047, %r2046, 1;
	mul.wide.s32 	%rd88, %r2047, 4;
	add.s64 	%rd89, %rd2, %rd88;
	ld.global.v2.u32 	{%r2048, %r2049}, [%rd89+-4];
	mov.u16 	%rs49, 25600;
	// begin inline asm
	mov.b32 %r723, {%rs49, %rs49};
	// end inline asm
	mov.u16 	%rs51, 21504;
	// begin inline asm
	mov.b32 %r734, {%rs51, %rs51};
	// end inline asm
	xor.b32  	%r722, %r2048, -2004318072;
	mov.u32 	%r721, 983055;
	// begin inline asm
	lop3.b32 %r720, %r721, %r722, %r723, 202;
	// end inline asm
	mov.u16 	%rs53, 18432;
	// begin inline asm
	mov.b32 %r724, {%rs53, %rs53};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r725, %r723, %r724;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r811, %r720, %r725;
	// end inline asm
	mov.u32 	%r732, 15728880;
	// begin inline asm
	lop3.b32 %r731, %r732, %r722, %r734, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r735, {%rs53, %rs53};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r736, %r734, %r735;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r812, %r731, %r736;
	// end inline asm
	shr.u32 	%r744, %r722, 8;
	// begin inline asm
	lop3.b32 %r742, %r721, %r744, %r723, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r746, {%rs53, %rs53};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r747, %r723, %r746;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r819, %r742, %r747;
	// end inline asm
	// begin inline asm
	lop3.b32 %r753, %r732, %r744, %r734, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r757, {%rs53, %rs53};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r758, %r734, %r757;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r820, %r753, %r758;
	// end inline asm
	// begin inline asm
	mov.b32 %r769, {%rs49, %rs49};
	// end inline asm
	// begin inline asm
	mov.b32 %r780, {%rs51, %rs51};
	// end inline asm
	xor.b32  	%r768, %r2049, -2004318072;
	// begin inline asm
	lop3.b32 %r766, %r721, %r768, %r769, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r770, {%rs53, %rs53};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r771, %r769, %r770;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r827, %r766, %r771;
	// end inline asm
	// begin inline asm
	lop3.b32 %r777, %r732, %r768, %r780, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r781, {%rs53, %rs53};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r782, %r780, %r781;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r828, %r777, %r782;
	// end inline asm
	shr.u32 	%r790, %r768, 8;
	// begin inline asm
	lop3.b32 %r788, %r721, %r790, %r769, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r792, {%rs53, %rs53};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r793, %r769, %r792;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r835, %r788, %r793;
	// end inline asm
	// begin inline asm
	lop3.b32 %r799, %r732, %r790, %r780, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r803, {%rs53, %rs53};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r804, %r780, %r803;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r836, %r799, %r804;
	// end inline asm
	mov.u32 	%r813, 21520;
	// begin inline asm
	prmt.b32 %r810, %r811, %r812, %r813;
	// end inline asm
	mov.u32 	%r817, 30258;
	// begin inline asm
	prmt.b32 %r814, %r811, %r812, %r817;
	// end inline asm
	// begin inline asm
	prmt.b32 %r818, %r819, %r820, %r813;
	// end inline asm
	// begin inline asm
	prmt.b32 %r822, %r819, %r820, %r817;
	// end inline asm
	// begin inline asm
	prmt.b32 %r826, %r827, %r828, %r813;
	// end inline asm
	// begin inline asm
	prmt.b32 %r830, %r827, %r828, %r817;
	// end inline asm
	// begin inline asm
	prmt.b32 %r834, %r835, %r836, %r813;
	// end inline asm
	// begin inline asm
	prmt.b32 %r838, %r835, %r836, %r817;
	// end inline asm
	// begin inline asm
	{
    .reg .f16 %r1re, %r1im, %r2re, %r2im, %r1imneg, %retmp, %r0re, %imtmp, %r0im;
    mov.b32 {%r1re, %r1im}, %r843;
    mov.b32 {%r2re, %r2im}, %r810;
    mul.f16 %retmp, %r1re, %r2re;
    mul.f16 %imtmp, %r1re, %r2im;
    neg.f16 %r1imneg, %r1im;
    fma.rn.f16 %r0re, %r1imneg, %r2im, %retmp;
    fma.rn.f16 %r0im, %r1im, %r2re, %imtmp;
    mov.b32 %r842, {%r0re, %r0im};
}

	// end inline asm
	// begin inline asm
	{
    .reg .f16 %r1re, %r1im, %r2re, %r2im, %r1imneg, %retmp, %r0re, %imtmp, %r0im;
    mov.b32 {%r1re, %r1im}, %r846;
    mov.b32 {%r2re, %r2im}, %r818;
    mul.f16 %retmp, %r1re, %r2re;
    mul.f16 %imtmp, %r1re, %r2im;
    neg.f16 %r1imneg, %r1im;
    fma.rn.f16 %r0re, %r1imneg, %r2im, %retmp;
    fma.rn.f16 %r0im, %r1im, %r2re, %imtmp;
    mov.b32 %r845, {%r0re, %r0im};
}

	// end inline asm
	// begin inline asm
	{
    .reg .f16 %r1re, %r1im, %r2re, %r2im, %r1imneg, %retmp, %r0re, %imtmp, %r0im;
    mov.b32 {%r1re, %r1im}, %r849;
    mov.b32 {%r2re, %r2im}, %r814;
    mul.f16 %retmp, %r1re, %r2re;
    mul.f16 %imtmp, %r1re, %r2im;
    neg.f16 %r1imneg, %r1im;
    fma.rn.f16 %r0re, %r1imneg, %r2im, %retmp;
    fma.rn.f16 %r0im, %r1im, %r2re, %imtmp;
    mov.b32 %r848, {%r0re, %r0im};
}

	// end inline asm
	// begin inline asm
	{
    .reg .f16 %r1re, %r1im, %r2re, %r2im, %r1imneg, %retmp, %r0re, %imtmp, %r0im;
    mov.b32 {%r1re, %r1im}, %r852;
    mov.b32 {%r2re, %r2im}, %r822;
    mul.f16 %retmp, %r1re, %r2re;
    mul.f16 %imtmp, %r1re, %r2im;
    neg.f16 %r1imneg, %r1im;
    fma.rn.f16 %r0re, %r1imneg, %r2im, %retmp;
    fma.rn.f16 %r0im, %r1im, %r2re, %imtmp;
    mov.b32 %r851, {%r0re, %r0im};
}

	// end inline asm
	// begin inline asm
	{
    .reg .f16 %r1re, %r1im, %r2re, %r2im, %r1imneg, %retmp, %r0re, %imtmp, %r0im;
    mov.b32 {%r1re, %r1im}, %r855;
    mov.b32 {%r2re, %r2im}, %r826;
    mul.f16 %retmp, %r1re, %r2re;
    mul.f16 %imtmp, %r1re, %r2im;
    neg.f16 %r1imneg, %r1im;
    fma.rn.f16 %r0re, %r1imneg, %r2im, %retmp;
    fma.rn.f16 %r0im, %r1im, %r2re, %imtmp;
    mov.b32 %r854, {%r0re, %r0im};
}

	// end inline asm
	// begin inline asm
	{
    .reg .f16 %r1re, %r1im, %r2re, %r2im, %r1imneg, %retmp, %r0re, %imtmp, %r0im;
    mov.b32 {%r1re, %r1im}, %r858;
    mov.b32 {%r2re, %r2im}, %r834;
    mul.f16 %retmp, %r1re, %r2re;
    mul.f16 %imtmp, %r1re, %r2im;
    neg.f16 %r1imneg, %r1im;
    fma.rn.f16 %r0re, %r1imneg, %r2im, %retmp;
    fma.rn.f16 %r0im, %r1im, %r2re, %imtmp;
    mov.b32 %r857, {%r0re, %r0im};
}

	// end inline asm
	// begin inline asm
	{
    .reg .f16 %r1re, %r1im, %r2re, %r2im, %r1imneg, %retmp, %r0re, %imtmp, %r0im;
    mov.b32 {%r1re, %r1im}, %r861;
    mov.b32 {%r2re, %r2im}, %r830;
    mul.f16 %retmp, %r1re, %r2re;
    mul.f16 %imtmp, %r1re, %r2im;
    neg.f16 %r1imneg, %r1im;
    fma.rn.f16 %r0re, %r1imneg, %r2im, %retmp;
    fma.rn.f16 %r0im, %r1im, %r2re, %imtmp;
    mov.b32 %r860, {%r0re, %r0im};
}

	// end inline asm
	// begin inline asm
	{
    .reg .f16 %r1re, %r1im, %r2re, %r2im, %r1imneg, %retmp, %r0re, %imtmp, %r0im;
    mov.b32 {%r1re, %r1im}, %r864;
    mov.b32 {%r2re, %r2im}, %r838;
    mul.f16 %retmp, %r1re, %r2re;
    mul.f16 %imtmp, %r1re, %r2im;
    neg.f16 %r1imneg, %r1im;
    fma.rn.f16 %r0re, %r1imneg, %r2im, %retmp;
    fma.rn.f16 %r0im, %r1im, %r2re, %imtmp;
    mov.b32 %r863, {%r0re, %r0im};
}

	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f16.f16.f16.f16 {%r929, %r926}, {%r868, %r869}, {%r842}, {%r506, %r506};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f16.f16.f16.f16 {%r938, %r935}, {%r875, %r876}, {%r845}, {%r506, %r506};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f16.f16.f16.f16 {%r947, %r944}, {%r882, %r883}, {%r848}, {%r506, %r506};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f16.f16.f16.f16 {%r956, %r953}, {%r889, %r890}, {%r851}, {%r506, %r506};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f16.f16.f16.f16 {%r965, %r962}, {%r896, %r897}, {%r854}, {%r506, %r506};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f16.f16.f16.f16 {%r974, %r971}, {%r903, %r904}, {%r857}, {%r506, %r506};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f16.f16.f16.f16 {%r983, %r980}, {%r910, %r911}, {%r860}, {%r506, %r506};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k8.row.col.f16.f16.f16.f16 {%r992, %r989}, {%r917, %r918}, {%r863}, {%r506, %r506};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r922, %r45;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r924, %r922, %r926;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r927, %r41, %r929, %r924;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r931, %r46;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r933, %r931, %r935;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r936, %r42, %r938, %r933;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r940, %r47;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r942, %r940, %r944;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r945, %r43, %r947, %r942;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r949, %r48;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r951, %r949, %r953;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r954, %r44, %r956, %r951;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r958, %r53;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r960, %r958, %r962;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r963, %r49, %r965, %r960;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r967, %r54;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r969, %r967, %r971;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r972, %r50, %r974, %r969;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r976, %r55;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r978, %r976, %r980;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r981, %r51, %r983, %r978;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r985, %r56;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r987, %r985, %r989;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r990, %r52, %r992, %r987;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r994, %r45, %r929;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r997, %r41, %r926, %r994;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1001, %r46, %r938;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1004, %r42, %r935, %r1001;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1008, %r47, %r947;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1011, %r43, %r944, %r1008;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1015, %r48, %r956;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1018, %r44, %r953, %r1015;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1022, %r53, %r965;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1025, %r49, %r962, %r1022;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1029, %r54, %r974;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1032, %r50, %r971, %r1029;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1036, %r55, %r983;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1039, %r51, %r980, %r1036;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1043, %r56, %r992;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1046, %r52, %r989, %r1043;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1131, %r1139}, {%r1052, %r1053, %r1054, %r1055}, {%r927, %r997}, {%r506, %r506};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1147, %r1155}, {%r1062, %r1063, %r1064, %r1065}, {%r936, %r1004}, {%r506, %r506};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1163, %r1171}, {%r1072, %r1073, %r1074, %r1075}, {%r945, %r1011}, {%r506, %r506};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1179, %r1187}, {%r1082, %r1083, %r1084, %r1085}, {%r954, %r1018}, {%r506, %r506};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1132, %r1140}, {%r1092, %r1093, %r1094, %r1095}, {%r963, %r1025}, {%r506, %r506};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1148, %r1156}, {%r1102, %r1103, %r1104, %r1105}, {%r972, %r1032}, {%r506, %r506};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1164, %r1172}, {%r1112, %r1113, %r1114, %r1115}, {%r981, %r1039}, {%r506, %r506};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1180, %r1188}, {%r1122, %r1123, %r1124, %r1125}, {%r990, %r1046}, {%r506, %r506};
	// end inline asm
	// begin inline asm
	prmt.b32 %r1130, %r1131, %r1132, %r813;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1134, %r1131, %r1132, %r817;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1138, %r1139, %r1140, %r813;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1142, %r1139, %r1140, %r817;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1146, %r1147, %r1148, %r813;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1150, %r1147, %r1148, %r817;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1154, %r1155, %r1156, %r813;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1158, %r1155, %r1156, %r817;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1162, %r1163, %r1164, %r813;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1166, %r1163, %r1164, %r817;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1170, %r1171, %r1172, %r813;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1174, %r1171, %r1172, %r817;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1178, %r1179, %r1180, %r813;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1182, %r1179, %r1180, %r817;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1186, %r1187, %r1188, %r813;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1190, %r1187, %r1188, %r817;
	// end inline asm
	selp.b32 	%r2050, %r1162, %r1130, %p99;
	shfl.sync.bfly.b32	%r2051, %r2050, 1, 31, -1;
	selp.b32 	%r2052, %r1130, %r2051, %p99;
	selp.b32 	%r2053, %r2051, %r1162, %p99;
	selp.b32 	%r2054, %r1166, %r1134, %p99;
	shfl.sync.bfly.b32	%r2055, %r2054, 1, 31, -1;
	selp.b32 	%r2056, %r1134, %r2055, %p99;
	selp.b32 	%r2057, %r2055, %r1166, %p99;
	selp.b32 	%r2058, %r1170, %r1138, %p99;
	shfl.sync.bfly.b32	%r2059, %r2058, 1, 31, -1;
	selp.b32 	%r2060, %r1138, %r2059, %p99;
	selp.b32 	%r2061, %r2059, %r1170, %p99;
	selp.b32 	%r2062, %r1174, %r1142, %p99;
	shfl.sync.bfly.b32	%r2063, %r2062, 1, 31, -1;
	selp.b32 	%r2064, %r1142, %r2063, %p99;
	selp.b32 	%r2065, %r2063, %r1174, %p99;
	selp.b32 	%r2066, %r1178, %r1146, %p99;
	shfl.sync.bfly.b32	%r2067, %r2066, 1, 31, -1;
	selp.b32 	%r2068, %r1146, %r2067, %p99;
	selp.b32 	%r2069, %r2067, %r1178, %p99;
	selp.b32 	%r2070, %r1182, %r1150, %p99;
	shfl.sync.bfly.b32	%r2071, %r2070, 1, 31, -1;
	selp.b32 	%r2072, %r1150, %r2071, %p99;
	selp.b32 	%r2073, %r2071, %r1182, %p99;
	selp.b32 	%r2074, %r1186, %r1154, %p99;
	shfl.sync.bfly.b32	%r2075, %r2074, 1, 31, -1;
	selp.b32 	%r2076, %r1154, %r2075, %p99;
	selp.b32 	%r2077, %r2075, %r1186, %p99;
	selp.b32 	%r2078, %r1190, %r1158, %p99;
	shfl.sync.bfly.b32	%r2079, %r2078, 1, 31, -1;
	selp.b32 	%r2080, %r1158, %r2079, %p99;
	selp.b32 	%r2081, %r2079, %r1190, %p99;
	selp.b32 	%r2082, %r2068, %r2052, %p98;
	shfl.sync.bfly.b32	%r2083, %r2082, 2, 31, -1;
	selp.b32 	%r1201, %r2052, %r2083, %p98;
	selp.b32 	%r1237, %r2083, %r2068, %p98;
	selp.b32 	%r2084, %r2072, %r2056, %p98;
	shfl.sync.bfly.b32	%r2085, %r2084, 2, 31, -1;
	selp.b32 	%r1210, %r2056, %r2085, %p98;
	selp.b32 	%r1246, %r2085, %r2072, %p98;
	selp.b32 	%r2086, %r2069, %r2053, %p98;
	shfl.sync.bfly.b32	%r2087, %r2086, 2, 31, -1;
	selp.b32 	%r1219, %r2053, %r2087, %p98;
	selp.b32 	%r1255, %r2087, %r2069, %p98;
	selp.b32 	%r2088, %r2073, %r2057, %p98;
	shfl.sync.bfly.b32	%r2089, %r2088, 2, 31, -1;
	selp.b32 	%r1228, %r2057, %r2089, %p98;
	selp.b32 	%r1264, %r2089, %r2073, %p98;
	selp.b32 	%r2090, %r2076, %r2060, %p98;
	shfl.sync.bfly.b32	%r2091, %r2090, 2, 31, -1;
	selp.b32 	%r1198, %r2060, %r2091, %p98;
	selp.b32 	%r1234, %r2091, %r2076, %p98;
	selp.b32 	%r2092, %r2080, %r2064, %p98;
	shfl.sync.bfly.b32	%r2093, %r2092, 2, 31, -1;
	selp.b32 	%r1207, %r2064, %r2093, %p98;
	selp.b32 	%r1243, %r2093, %r2080, %p98;
	selp.b32 	%r2094, %r2077, %r2061, %p98;
	shfl.sync.bfly.b32	%r2095, %r2094, 2, 31, -1;
	selp.b32 	%r1216, %r2061, %r2095, %p98;
	selp.b32 	%r1252, %r2095, %r2077, %p98;
	selp.b32 	%r2096, %r2081, %r2065, %p98;
	shfl.sync.bfly.b32	%r2097, %r2096, 2, 31, -1;
	selp.b32 	%r1225, %r2065, %r2097, %p98;
	selp.b32 	%r1261, %r2097, %r2081, %p98;
	// begin inline asm
	neg.f16x2 %r1194, %r97;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1196, %r1194, %r1198;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1199, %r89, %r1201, %r1196;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1203, %r98;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1205, %r1203, %r1207;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1208, %r90, %r1210, %r1205;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1212, %r99;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1214, %r1212, %r1216;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1217, %r91, %r1219, %r1214;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1221, %r100;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1223, %r1221, %r1225;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1226, %r92, %r1228, %r1223;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1230, %r101;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1232, %r1230, %r1234;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1235, %r93, %r1237, %r1232;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1239, %r102;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1241, %r1239, %r1243;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1244, %r94, %r1246, %r1241;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1248, %r103;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1250, %r1248, %r1252;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1253, %r95, %r1255, %r1250;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1257, %r104;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1259, %r1257, %r1261;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1262, %r96, %r1264, %r1259;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1266, %r97, %r1201;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1269, %r89, %r1198, %r1266;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1273, %r98, %r1210;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1276, %r90, %r1207, %r1273;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1280, %r99, %r1219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1283, %r91, %r1216, %r1280;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1287, %r100, %r1228;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1290, %r92, %r1225, %r1287;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1294, %r101, %r1237;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1297, %r93, %r1234, %r1294;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1301, %r102, %r1246;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1304, %r94, %r1243, %r1301;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1308, %r103, %r1255;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1311, %r95, %r1252, %r1308;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1315, %r104, %r1264;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1318, %r96, %r1261, %r1315;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1403, %r1435}, {%r1324, %r1325, %r1326, %r1327}, {%r1199, %r1269}, {%r506, %r506};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1404, %r1436}, {%r1334, %r1335, %r1336, %r1337}, {%r1208, %r1276}, {%r506, %r506};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1411, %r1443}, {%r1344, %r1345, %r1346, %r1347}, {%r1217, %r1283}, {%r506, %r506};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1412, %r1444}, {%r1354, %r1355, %r1356, %r1357}, {%r1226, %r1290}, {%r506, %r506};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1419, %r1451}, {%r1364, %r1365, %r1366, %r1367}, {%r1235, %r1297}, {%r506, %r506};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1420, %r1452}, {%r1374, %r1375, %r1376, %r1377}, {%r1244, %r1304}, {%r506, %r506};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1427, %r1459}, {%r1384, %r1385, %r1386, %r1387}, {%r1253, %r1311}, {%r506, %r506};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1428, %r1460}, {%r1394, %r1395, %r1396, %r1397}, {%r1262, %r1318}, {%r506, %r506};
	// end inline asm
	// begin inline asm
	prmt.b32 %r1402, %r1403, %r1404, %r813;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1406, %r1403, %r1404, %r817;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1410, %r1411, %r1412, %r813;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1414, %r1411, %r1412, %r817;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1418, %r1419, %r1420, %r813;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1422, %r1419, %r1420, %r817;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1426, %r1427, %r1428, %r813;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1430, %r1427, %r1428, %r817;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1434, %r1435, %r1436, %r813;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1438, %r1435, %r1436, %r817;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1442, %r1443, %r1444, %r813;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1446, %r1443, %r1444, %r817;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1450, %r1451, %r1452, %r813;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1454, %r1451, %r1452, %r817;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1458, %r1459, %r1460, %r813;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1462, %r1459, %r1460, %r817;
	// end inline asm
	st.shared.u32 	[%rd5], %r1402;
	st.shared.u32 	[%rd6], %r1410;
	st.shared.u32 	[%rd7], %r1418;
	st.shared.u32 	[%rd8], %r1426;
	st.shared.u32 	[%rd9], %r1406;
	st.shared.u32 	[%rd10], %r1414;
	st.shared.u32 	[%rd11], %r1422;
	st.shared.u32 	[%rd12], %r1430;
	st.shared.u32 	[%rd13], %r1434;
	st.shared.u32 	[%rd14], %r1442;
	st.shared.u32 	[%rd15], %r1450;
	st.shared.u32 	[%rd16], %r1458;
	st.shared.u32 	[%rd17], %r1438;
	st.shared.u32 	[%rd18], %r1446;
	st.shared.u32 	[%rd19], %r1454;
	st.shared.u32 	[%rd20], %r1462;
	bar.sync 	0;
	ld.shared.u32 	%r1507, [%rd21];
	ld.shared.u32 	%r1533, [%rd22];
	ld.shared.u32 	%r1515, [%rd23];
	ld.shared.u32 	%r1541, [%rd24];
	ld.shared.u32 	%r1534, [%rd25];
	ld.shared.u32 	%r1505, [%rd26];
	ld.shared.u32 	%r1537, [%rd27];
	ld.shared.u32 	%r1511, [%rd28];
	ld.shared.u32 	%r1522, [%rd29];
	ld.shared.u32 	%r1544, [%rd30];
	ld.shared.u32 	%r1530, [%rd31];
	ld.shared.u32 	%r1552, [%rd32];
	ld.shared.u32 	%r1545, [%rd33];
	ld.shared.u32 	%r1520, [%rd34];
	ld.shared.u32 	%r1548, [%rd35];
	ld.shared.u32 	%r1526, [%rd36];
	// begin inline asm
	add.rn.f16x2 %r1466, %r1507, %r1515;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1469, %r1466, %r1534;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1883, %r1469, %r1537;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1475, %r1522, %r1530;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1478, %r1475, %r1545;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1890, %r1478, %r1548;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1484, %r1533, %r1541;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1487, %r1484, %r1505;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1886, %r1487, %r1511;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1493, %r1544, %r1552;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1496, %r1493, %r1520;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1894, %r1496, %r1526;
	// end inline asm
	mov.u32 	%r1503, 967326120;
	// begin inline asm
	neg.f16x2 %r1502, %r1503;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1504, %r1505;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1506, %r1507, %r1504;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1509, %r1502, %r1511, %r1506;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1902, %r1503, %r1515, %r1509;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1517, %r1503;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1519, %r1520;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1521, %r1522, %r1519;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1524, %r1517, %r1526, %r1521;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1909, %r1503, %r1530, %r1524;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1532, %r1533, %r1534;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1535, %r1503, %r1537, %r1532;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1905, %r1503, %r1541, %r1535;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1543, %r1544, %r1545;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1546, %r1503, %r1548, %r1543;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1913, %r1503, %r1552, %r1546;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1554, %r1541;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1556, %r1534;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1558, %r1507, %r1554;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1561, %r1558, %r1556;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1921, %r1561, %r1511;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1567, %r1552;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1569, %r1545;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1571, %r1522, %r1567;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1574, %r1571, %r1569;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1928, %r1574, %r1526;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1580, %r1505;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1582, %r1537;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1584, %r1533, %r1515;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1587, %r1584, %r1580;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1924, %r1587, %r1582;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1593, %r1520;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1595, %r1548;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1597, %r1544, %r1530;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1600, %r1597, %r1593;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1932, %r1600, %r1595;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1606, %r1503;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1608, %r1507, %r1505;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1611, %r1503, %r1537, %r1608;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1940, %r1606, %r1541, %r1611;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1619, %r1503;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1621, %r1522, %r1520;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1624, %r1503, %r1548, %r1621;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1947, %r1619, %r1552, %r1624;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1632, %r1534;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1634, %r1533, %r1632;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1637, %r1503, %r1511, %r1634;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1943, %r1503, %r1515, %r1637;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1645, %r1545;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1647, %r1544, %r1645;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1650, %r1503, %r1526, %r1647;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1951, %r1503, %r1530, %r1650;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1658, %r1515;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1660, %r1537;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1662, %r1507, %r1658;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1665, %r1662, %r1534;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1959, %r1665, %r1660;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1671, %r1530;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1673, %r1548;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1675, %r1522, %r1671;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1678, %r1675, %r1545;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1966, %r1678, %r1673;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1684, %r1541;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1686, %r1511;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1688, %r1533, %r1684;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1691, %r1688, %r1505;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1962, %r1691, %r1686;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1697, %r1552;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1699, %r1526;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1701, %r1544, %r1697;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1704, %r1701, %r1520;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1970, %r1704, %r1699;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1710, %r1503;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1712, %r1505;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1714, %r1507, %r1712;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1717, %r1503, %r1511, %r1714;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1978, %r1710, %r1515, %r1717;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1725, %r1503;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1727, %r1520;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1729, %r1522, %r1727;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1732, %r1503, %r1526, %r1729;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1985, %r1725, %r1530, %r1732;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1740, %r1503;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1742, %r1503;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1744, %r1533, %r1534;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1747, %r1742, %r1537, %r1744;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1981, %r1740, %r1541, %r1747;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1755, %r1503;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1757, %r1503;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1759, %r1544, %r1545;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1762, %r1757, %r1548, %r1759;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1989, %r1755, %r1552, %r1762;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1770, %r1534;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1772, %r1511;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1774, %r1507, %r1541;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1777, %r1774, %r1770;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1997, %r1777, %r1772;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1783, %r1545;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1785, %r1526;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1787, %r1522, %r1552;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1790, %r1787, %r1783;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2004, %r1790, %r1785;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1796, %r1515;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1798, %r1505;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1800, %r1533, %r1796;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1803, %r1800, %r1798;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2000, %r1803, %r1537;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1809, %r1530;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1811, %r1520;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1813, %r1544, %r1809;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1816, %r1813, %r1811;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2008, %r1816, %r1548;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1822, %r1503;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1824, %r1507, %r1505;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1827, %r1822, %r1537, %r1824;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2016, %r1503, %r1541, %r1827;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1835, %r1503;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1837, %r1522, %r1520;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1840, %r1835, %r1548, %r1837;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2023, %r1503, %r1552, %r1840;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1848, %r1503;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1850, %r1503;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1852, %r1534;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1854, %r1533, %r1852;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1857, %r1850, %r1511, %r1854;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2019, %r1848, %r1515, %r1857;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1865, %r1503;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1867, %r1503;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1869, %r1545;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1871, %r1544, %r1869;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1874, %r1867, %r1526, %r1871;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2027, %r1865, %r1530, %r1874;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1882, %r1883, %r1883;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1885, %r1886, %r1886, %r1882;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1889, %r1890, %r1890, %r1885;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1893, %r1894, %r1894, %r1889;
	// end inline asm
	mov.u32 	%r1898, 492117333;
	// begin inline asm
	fma.rn.f16x2 %r2118, %r1898, %r1893, %r2118;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1901, %r1902, %r1902;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1904, %r1905, %r1905, %r1901;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1908, %r1909, %r1909, %r1904;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1912, %r1913, %r1913, %r1908;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2117, %r1898, %r1912, %r2117;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1920, %r1921, %r1921;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1923, %r1924, %r1924, %r1920;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1927, %r1928, %r1928, %r1923;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1931, %r1932, %r1932, %r1927;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2116, %r1898, %r1931, %r2116;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1939, %r1940, %r1940;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1942, %r1943, %r1943, %r1939;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1946, %r1947, %r1947, %r1942;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1950, %r1951, %r1951, %r1946;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2115, %r1898, %r1950, %r2115;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1958, %r1959, %r1959;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1961, %r1962, %r1962, %r1958;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1965, %r1966, %r1966, %r1961;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1969, %r1970, %r1970, %r1965;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2114, %r1898, %r1969, %r2114;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1977, %r1978, %r1978;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1980, %r1981, %r1981, %r1977;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1984, %r1985, %r1985, %r1980;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1988, %r1989, %r1989, %r1984;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2113, %r1898, %r1988, %r2113;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1996, %r1997, %r1997;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1999, %r2000, %r2000, %r1996;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2003, %r2004, %r2004, %r1999;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2007, %r2008, %r2008, %r2003;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2112, %r1898, %r2007, %r2112;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2015, %r2016, %r2016;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2018, %r2019, %r2019, %r2015;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2022, %r2023, %r2023, %r2018;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2026, %r2027, %r2027, %r2022;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2111, %r1898, %r2026, %r2111;
	// end inline asm
	bar.sync 	0;
	add.s32 	%r2110, %r2110, -1;
	add.s16 	%rs79, %rs79, 1;
	setp.eq.s32 	%p103, %r2110, 0;
	@%p103 bra 	$L__BB0_10;
	bra.uni 	$L__BB0_9;
$L__BB0_10:                             // %guard_exit3867
                                        //   in Loop: Header=BB0_8 Depth=1
	shl.b32 	%r2098, %r6, 19;
	or.b32  	%r2099, %r149, %r2098;
	cvt.u64.u32 	%rd90, %r2099;
	add.s64 	%rd91, %rd90, %rd37;
	shr.u64 	%rd92, %rd91, 35;
	add.s64 	%rd93, %rd91, %rd92;
	shr.s64 	%rd94, %rd93, 29;
	setp.lt.s64 	%p104, %rd91, 0;
	and.b64  	%rd95, %rd93, -536870912;
	setp.ne.s64 	%p105, %rd95, %rd91;
	and.pred  	%p106, %p104, %p105;
	selp.u64 	%rd96, 1, 0, %p106;
	sub.s64 	%rd97, %rd96, %rd94;
	shl.b64 	%rd98, %rd97, 29;
	add.s64 	%rd99, %rd98, %rd91;
	shl.b64 	%rd100, %rd99, 2;
	add.s64 	%rd101, %rd3, %rd100;
	st.global.u32 	[%rd101], %r2118;
	or.b32  	%r2100, %r2099, 256;
	cvt.u64.u32 	%rd102, %r2100;
	add.s64 	%rd103, %rd102, %rd37;
	shr.u64 	%rd104, %rd103, 35;
	add.s64 	%rd105, %rd103, %rd104;
	shr.u64 	%rd106, %rd105, 29;
	shr.u64 	%rd107, %rd103, 63;
	sub.s64 	%rd108, %rd107, %rd106;
	shl.b64 	%rd109, %rd108, 29;
	add.s64 	%rd110, %rd109, %rd103;
	shl.b64 	%rd111, %rd110, 2;
	add.s64 	%rd112, %rd3, %rd111;
	st.global.u32 	[%rd112], %r2117;
	or.b32  	%r2101, %r2099, 512;
	cvt.u64.u32 	%rd113, %r2101;
	add.s64 	%rd114, %rd113, %rd37;
	shr.u64 	%rd115, %rd114, 35;
	add.s64 	%rd116, %rd114, %rd115;
	shr.u64 	%rd117, %rd116, 29;
	shr.u64 	%rd118, %rd114, 63;
	sub.s64 	%rd119, %rd118, %rd117;
	shl.b64 	%rd120, %rd119, 29;
	add.s64 	%rd121, %rd120, %rd114;
	shl.b64 	%rd122, %rd121, 2;
	add.s64 	%rd123, %rd3, %rd122;
	st.global.u32 	[%rd123], %r2116;
	or.b32  	%r2102, %r2099, 768;
	cvt.u64.u32 	%rd124, %r2102;
	add.s64 	%rd125, %rd124, %rd37;
	shr.u64 	%rd126, %rd125, 35;
	add.s64 	%rd127, %rd125, %rd126;
	shr.u64 	%rd128, %rd127, 29;
	shr.u64 	%rd129, %rd125, 63;
	sub.s64 	%rd130, %rd129, %rd128;
	shl.b64 	%rd131, %rd130, 29;
	add.s64 	%rd132, %rd131, %rd125;
	shl.b64 	%rd133, %rd132, 2;
	add.s64 	%rd134, %rd3, %rd133;
	st.global.u32 	[%rd134], %r2115;
	or.b32  	%r2103, %r2099, 1024;
	cvt.u64.u32 	%rd135, %r2103;
	add.s64 	%rd136, %rd135, %rd37;
	shr.u64 	%rd137, %rd136, 35;
	add.s64 	%rd138, %rd136, %rd137;
	shr.u64 	%rd139, %rd138, 29;
	shr.u64 	%rd140, %rd136, 63;
	sub.s64 	%rd141, %rd140, %rd139;
	shl.b64 	%rd142, %rd141, 29;
	add.s64 	%rd143, %rd142, %rd136;
	shl.b64 	%rd144, %rd143, 2;
	add.s64 	%rd145, %rd3, %rd144;
	st.global.u32 	[%rd145], %r2114;
	or.b32  	%r2104, %r2099, 1280;
	cvt.u64.u32 	%rd146, %r2104;
	add.s64 	%rd147, %rd146, %rd37;
	shr.u64 	%rd148, %rd147, 35;
	add.s64 	%rd149, %rd147, %rd148;
	shr.u64 	%rd150, %rd149, 29;
	shr.u64 	%rd151, %rd147, 63;
	sub.s64 	%rd152, %rd151, %rd150;
	shl.b64 	%rd153, %rd152, 29;
	add.s64 	%rd154, %rd153, %rd147;
	shl.b64 	%rd155, %rd154, 2;
	add.s64 	%rd156, %rd3, %rd155;
	st.global.u32 	[%rd156], %r2113;
	or.b32  	%r2105, %r2099, 1536;
	cvt.u64.u32 	%rd157, %r2105;
	add.s64 	%rd158, %rd157, %rd37;
	shr.u64 	%rd159, %rd158, 35;
	add.s64 	%rd160, %rd158, %rd159;
	shr.u64 	%rd161, %rd160, 29;
	shr.u64 	%rd162, %rd158, 63;
	sub.s64 	%rd163, %rd162, %rd161;
	shl.b64 	%rd164, %rd163, 29;
	add.s64 	%rd165, %rd164, %rd158;
	shl.b64 	%rd166, %rd165, 2;
	add.s64 	%rd167, %rd3, %rd166;
	st.global.u32 	[%rd167], %r2112;
	or.b32  	%r2106, %r2099, 1792;
	cvt.u64.u32 	%rd168, %r2106;
	add.s64 	%rd169, %rd168, %rd37;
	shr.u64 	%rd170, %rd169, 35;
	add.s64 	%rd171, %rd169, %rd170;
	shr.u64 	%rd172, %rd171, 29;
	shr.u64 	%rd173, %rd169, 63;
	sub.s64 	%rd174, %rd173, %rd172;
	shl.b64 	%rd175, %rd174, 29;
	add.s64 	%rd176, %rd175, %rd169;
	shl.b64 	%rd177, %rd176, 2;
	add.s64 	%rd178, %rd3, %rd177;
	st.global.u32 	[%rd178], %r2111;
	add.s32 	%r150, %r2109, 24;
	add.s16 	%rs78, %rs78, 24;
	setp.eq.s32 	%p107, %r2109, 984;
	mov.u32 	%r2109, %r150;
	@%p107 bra 	$L__BB0_11;
	bra.uni 	$L__BB0_8;
$L__BB0_11:                             // %L9210
	mov.u32 	%r2107, 0;
	st.global.u32 	[%rd4], %r2107;
	ret;
$L__BB0_6:                              // %L162
	mov.u32 	%r2108, 2;
	st.global.u32 	[%rd4], %r2108;
	mov.u64 	%rd179, exception686;
	cvta.global.u64 	%rd180, %rd179;
	{ // callseq 8, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd180;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 8
	{ // callseq 9, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd38;
	st.param.b32 	[param0+8], %r151;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 9
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
$L__BB0_1:                              // %L8
	mov.u64 	%rd43, exception1;
	cvta.global.u64 	%rd44, %rd43;
	{ // callseq 6, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd44;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 6
	{ // callseq 7, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd38;
	st.param.b32 	[param0+8], %r151;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 7
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
                                        // -- End function
}
