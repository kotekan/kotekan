// PTX CompilerJob of upchan(CuDeviceVector{Int32, 1}, CuDeviceVector{Float16x2, 1}, CuDeviceVector{Int4x8, 1}, CuDeviceVector{Int4x8, 1}, CuDeviceVector{Int32, 1}) in world 33605 for sm_86, minthreads=512, blocks_per_sm=2

//
// Generated by LLVM NVPTX Back-End
//

.version 7.1
.target sm_86
.address_size 64

	// .globl	_Z17julia_upchan_406613CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE // -- Begin function _Z17julia_upchan_406613CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE
.func gpu_report_exception
(
	.param .b64 gpu_report_exception_param_0
)
.noreturn
{
	trap;
}
.func gpu_signal_exception
(
	.param .align 8 .b8 gpu_signal_exception_param_0[8]
)
.noreturn
{
	trap;
}
.extern .shared .align 32 .b8 shmem[];
.global .align 1 .b8 exception1553[6] = {101, 114, 114, 111, 114, 0};
.global .align 1 .b8 exception1[10] = {101, 120, 99, 101, 112, 116, 105, 111, 110, 0};
                                        // @_Z17julia_upchan_406613CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE
.visible .entry _Z17julia_upchan_406613CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE(
	.param .align 8 .b8 _Z17julia_upchan_406613CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_0[8],
	.param .align 8 .b8 _Z17julia_upchan_406613CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_1[32],
	.param .align 8 .b8 _Z17julia_upchan_406613CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_2[32],
	.param .align 8 .b8 _Z17julia_upchan_406613CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_3[32],
	.param .align 8 .b8 _Z17julia_upchan_406613CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_4[32],
	.param .align 8 .b8 _Z17julia_upchan_406613CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_5[32]
)
.reqntid 512, 1, 1
.minnctapersm 2
{
	.reg .pred 	%p<220>;
	.reg .b16 	%rs<112>;
	.reg .b32 	%r<1163>;
	.reg .f32 	%f<935>;
	.reg .b64 	%rd<110>;

// %bb.0:                               // %conversion
	ld.param.u64 	%rd29, [_Z17julia_upchan_406613CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_0];
	// begin inline asm
	mov.u32 %r149, %dynamic_smem_size;
	// end inline asm
	setp.gt.u32 	%p1, %r149, 69887;
	@%p1 bra 	LBB0_2;
	bra.uni 	LBB0_1;
LBB0_2:                                 // %L10
	ld.param.u64 	%rd34, [_Z17julia_upchan_406613CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_5];
	ld.param.u64 	%rd30, [_Z17julia_upchan_406613CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_1];
	mov.u32 	%r1, %ctaid.x;
	shl.b32 	%r2, %r1, 9;
	mov.u32 	%r3, %tid.y;
	shl.b32 	%r4, %r3, 5;
	mov.u32 	%r5, %tid.x;
	or.b32  	%r150, %r4, %r5;
	or.b32  	%r151, %r150, %r2;
	mul.wide.u32 	%rd40, %r151, 4;
	add.s64 	%rd4, %rd34, %rd40;
	mov.u32 	%r152, 1;
	st.global.u32 	[%rd4], %r152;
	ld.global.u32 	%r6, [%rd30];
	and.b32  	%r153, %r6, -32513;
	setp.eq.s32 	%p2, %r153, 0;
	@%p2 bra 	LBB0_4;
	bra.uni 	LBB0_3;
LBB0_4:                                 // %L255
	bfe.u32 	%r13, %r5, 1, 1;
	and.b32  	%r14, %r5, 1;
	shl.b32 	%r158, %r14, 1;
	shl.b32 	%r159, %r13, 2;
	or.b32  	%r160, %r158, %r159;
	bfe.u32 	%r16, %r5, 2, 1;
	or.b32  	%r17, %r16, %r160;
	or.b32  	%r18, %r17, 8;
	mov.f32 	%f184, 0f40000000;
	mov.f32 	%f185, 0f427C0000;
	div.approx.f32 	%f1, %f185, %f184;
	cvt.rn.f32.s32 	%f186, %r17;
	sub.f32 	%f187, %f186, %f1;
	mov.f32 	%f188, 0f42820000;
	div.approx.f32 	%f189, %f187, %f188;
	abs.f32 	%f190, %f189;
	setp.gt.f32 	%p3, %f190, 0f4B800000;
	mul.f32 	%f191, %f189, 0f00000000;
	mov.f32 	%f216, 0f41800000;
	div.approx.f32 	%f3, %f187, %f216;
	setp.eq.f32 	%p8, %f3, 0f00000000;
	mov.f32 	%f902, 0f3F800000;
	mov.f32 	%f895, %f902;
	@%p8 bra 	LBB0_6;
// %bb.5:                               // %L420
	sin.approx.f32 	%f217, %f3;
	div.approx.f32 	%f895, %f217, %f3;
LBB0_6:                                 // %L423
	selp.f32 	%f192, %f191, %f189, %p3;
	cvt.rn.f32.s32 	%f220, %r18;
	sub.f32 	%f221, %f220, %f1;
	div.approx.f32 	%f223, %f221, %f188;
	abs.f32 	%f224, %f223;
	setp.gt.f32 	%p9, %f224, 0f4B800000;
	mul.f32 	%f225, %f223, 0f00000000;
	selp.f32 	%f226, %f225, %f223, %p9;
	div.approx.f32 	%f8, %f221, %f216;
	setp.eq.f32 	%p14, %f8, 0f00000000;
	mov.f32 	%f896, %f902;
	@%p14 bra 	LBB0_8;
// %bb.7:                               // %L440
	sin.approx.f32 	%f251, %f8;
	div.approx.f32 	%f896, %f251, %f8;
LBB0_8:                                 // %L443
	add.f32 	%f193, %f192, %f192;
	add.f32 	%f227, %f226, %f226;
	or.b32  	%r178, %r17, 16;
	or.b32  	%r20, %r17, 24;
	cvt.rn.f32.s32 	%f255, %r178;
	sub.f32 	%f256, %f255, %f1;
	div.approx.f32 	%f258, %f256, %f188;
	abs.f32 	%f259, %f258;
	setp.gt.f32 	%p15, %f259, 0f4B800000;
	mul.f32 	%f260, %f258, 0f00000000;
	selp.f32 	%f261, %f260, %f258, %p15;
	add.f32 	%f262, %f261, %f261;
	div.approx.f32 	%f12, %f256, %f216;
	setp.eq.f32 	%p20, %f12, 0f00000000;
	mov.f32 	%f897, %f902;
	@%p20 bra 	LBB0_10;
// %bb.9:                               // %L521
	sin.approx.f32 	%f286, %f12;
	div.approx.f32 	%f897, %f286, %f12;
LBB0_10:                                // %L524
	mov.b32 	%r161, %f193;
	mov.b32 	%r168, %f227;
	mov.b32 	%r179, %f262;
	cvt.rn.f32.s32 	%f289, %r20;
	sub.f32 	%f290, %f289, %f1;
	div.approx.f32 	%f292, %f290, %f188;
	abs.f32 	%f293, %f292;
	setp.gt.f32 	%p21, %f293, 0f4B800000;
	mul.f32 	%f294, %f292, 0f00000000;
	selp.f32 	%f295, %f294, %f292, %p21;
	add.f32 	%f296, %f295, %f295;
	mov.b32 	%r186, %f296;
	div.approx.f32 	%f17, %f290, %f216;
	setp.eq.f32 	%p26, %f17, 0f00000000;
	mov.f32 	%f898, %f902;
	@%p26 bra 	LBB0_12;
// %bb.11:                              // %L541
	sin.approx.f32 	%f320, %f17;
	div.approx.f32 	%f898, %f320, %f17;
LBB0_12:                                // %L544
	and.b32  	%r162, %r161, -2147483648;
	and.b32  	%r169, %r168, -2147483648;
	and.b32  	%r180, %r179, -2147483648;
	and.b32  	%r187, %r186, -2147483648;
	or.b32  	%r196, %r17, 32;
	or.b32  	%r22, %r17, 40;
	cvt.rn.f32.s32 	%f324, %r196;
	sub.f32 	%f325, %f324, %f1;
	div.approx.f32 	%f327, %f325, %f188;
	abs.f32 	%f328, %f327;
	setp.gt.f32 	%p27, %f328, 0f4B800000;
	mul.f32 	%f329, %f327, 0f00000000;
	selp.f32 	%f330, %f329, %f327, %p27;
	add.f32 	%f331, %f330, %f330;
	mov.b32 	%r197, %f331;
	and.b32  	%r198, %r197, -2147483648;
	div.approx.f32 	%f21, %f325, %f216;
	setp.eq.f32 	%p32, %f21, 0f00000000;
	mov.f32 	%f899, %f902;
	@%p32 bra 	LBB0_14;
// %bb.13:                              // %L622
	sin.approx.f32 	%f355, %f21;
	div.approx.f32 	%f899, %f355, %f21;
LBB0_14:                                // %L625
	cvt.u16.u32 	%rs1, %r5;
	or.b32  	%r163, %r162, 1056964608;
	or.b32  	%r170, %r169, 1056964608;
	or.b32  	%r181, %r180, 1056964608;
	or.b32  	%r188, %r187, 1056964608;
	or.b32  	%r199, %r198, 1056964608;
	cvt.rn.f32.s32 	%f358, %r22;
	sub.f32 	%f359, %f358, %f1;
	div.approx.f32 	%f361, %f359, %f188;
	abs.f32 	%f362, %f361;
	setp.gt.f32 	%p33, %f362, 0f4B800000;
	mul.f32 	%f363, %f361, 0f00000000;
	selp.f32 	%f364, %f363, %f361, %p33;
	add.f32 	%f365, %f364, %f364;
	mov.b32 	%r204, %f365;
	and.b32  	%r205, %r204, -2147483648;
	or.b32  	%r206, %r205, 1056964608;
	div.approx.f32 	%f26, %f359, %f216;
	setp.eq.f32 	%p38, %f26, 0f00000000;
	mov.f32 	%f900, %f902;
	@%p38 bra 	LBB0_16;
// %bb.15:                              // %L642
	sin.approx.f32 	%f389, %f26;
	div.approx.f32 	%f900, %f389, %f26;
LBB0_16:                                // %L645
	shr.u16 	%rs2, %rs1, 8;
	shl.b16 	%rs3, %rs1, 8;
	mov.b32 	%f194, %r163;
	mov.b32 	%f228, %r170;
	mov.b32 	%f263, %r181;
	mov.b32 	%f297, %r188;
	mov.b32 	%f332, %r199;
	mov.b32 	%f366, %r206;
	or.b32  	%r214, %r17, 48;
	or.b32  	%r24, %r17, 56;
	cvt.rn.f32.s32 	%f393, %r214;
	sub.f32 	%f394, %f393, %f1;
	div.approx.f32 	%f396, %f394, %f188;
	abs.f32 	%f397, %f396;
	setp.gt.f32 	%p39, %f397, 0f4B800000;
	mul.f32 	%f398, %f396, 0f00000000;
	selp.f32 	%f399, %f398, %f396, %p39;
	add.f32 	%f400, %f399, %f399;
	mov.b32 	%r215, %f400;
	and.b32  	%r216, %r215, -2147483648;
	or.b32  	%r217, %r216, 1056964608;
	mov.b32 	%f401, %r217;
	div.approx.f32 	%f30, %f394, %f216;
	setp.eq.f32 	%p44, %f30, 0f00000000;
	mov.f32 	%f901, %f902;
	@%p44 bra 	LBB0_18;
// %bb.17:                              // %L723
	sin.approx.f32 	%f424, %f30;
	div.approx.f32 	%f901, %f424, %f30;
LBB0_18:                                // %L726
	or.b16  	%rs4, %rs3, %rs2;
	add.f32 	%f195, %f193, %f194;
	abs.f32 	%f197, %f193;
	add.f32 	%f229, %f227, %f228;
	abs.f32 	%f231, %f227;
	add.f32 	%f264, %f262, %f263;
	abs.f32 	%f266, %f262;
	add.f32 	%f298, %f296, %f297;
	abs.f32 	%f300, %f296;
	add.f32 	%f333, %f331, %f332;
	abs.f32 	%f335, %f331;
	add.f32 	%f367, %f365, %f366;
	abs.f32 	%f369, %f365;
	add.f32 	%f402, %f400, %f401;
	abs.f32 	%f404, %f400;
	cvt.rn.f32.s32 	%f427, %r24;
	sub.f32 	%f428, %f427, %f1;
	div.approx.f32 	%f430, %f428, %f188;
	abs.f32 	%f431, %f430;
	setp.gt.f32 	%p45, %f431, 0f4B800000;
	mul.f32 	%f432, %f430, 0f00000000;
	selp.f32 	%f433, %f432, %f430, %p45;
	add.f32 	%f434, %f433, %f433;
	mov.b32 	%r222, %f434;
	and.b32  	%r223, %r222, -2147483648;
	or.b32  	%r224, %r223, 1056964608;
	mov.b32 	%f435, %r224;
	add.f32 	%f436, %f434, %f435;
	abs.f32 	%f438, %f434;
	div.approx.f32 	%f35, %f428, %f216;
	setp.eq.f32 	%p50, %f35, 0f00000000;
	@%p50 bra 	LBB0_20;
// %bb.19:                              // %L743
	sin.approx.f32 	%f458, %f35;
	div.approx.f32 	%f902, %f458, %f35;
LBB0_20:                                // %L746
	shr.u16 	%rs6, %rs4, 4;
	cvt.rzi.f32.f32 	%f196, %f195;
	setp.gt.f32 	%p4, %f197, 0f4B000000;
	cvt.rzi.f32.f32 	%f230, %f229;
	setp.gt.f32 	%p10, %f231, 0f4B000000;
	cvt.rzi.f32.f32 	%f265, %f264;
	setp.gt.f32 	%p16, %f266, 0f4B000000;
	cvt.rzi.f32.f32 	%f299, %f298;
	setp.gt.f32 	%p22, %f300, 0f4B000000;
	cvt.rzi.f32.f32 	%f334, %f333;
	setp.gt.f32 	%p28, %f335, 0f4B000000;
	cvt.rzi.f32.f32 	%f368, %f367;
	setp.gt.f32 	%p34, %f369, 0f4B000000;
	cvt.rzi.f32.f32 	%f403, %f402;
	setp.gt.f32 	%p40, %f404, 0f4B000000;
	cvt.rzi.f32.f32 	%f437, %f436;
	setp.gt.f32 	%p46, %f438, 0f4B000000;
	mul.lo.s32 	%r26, %r17, 15;
	cvt.rn.f32.s32 	%f461, %r26;
	div.approx.f32 	%f38, %f461, %f216;
	abs.f32 	%f905, %f38;
	setp.lt.f32 	%p51, %f905, 0f40000000;
	@%p51 bra 	LBB0_32;
// %bb.21:
	setp.gtu.f32 	%p52, %f905, 0f4B800000;
	@%p52 bra 	LBB0_28;
	bra.uni 	LBB0_22;
LBB0_28:
	mov.b32 	%r28, %f905;
	and.b32  	%r232, %r28, 8388607;
	or.b32  	%r1139, %r232, 1065353216;
	mov.b32 	%f904, %r1139;
	add.s32 	%r233, %r28, -1073741824;
	and.b32  	%r1140, %r233, -8388608;
	setp.eq.s32 	%p58, %r1140, 0;
	@%p58 bra 	LBB0_31;
// %bb.29:                              // %__nv_fmaf_rn.exit4.i.i.i.preheader
	mov.f32 	%f472, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f471,%f472;
	// end inline asm
LBB0_30:                                // %__nv_fmaf_rn.exit4.i.i.i
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r234, %r1140, 192937984;
	add.s32 	%r235, %r234, %r1139;
	mov.b32 	%f473, %r235;
	mul.f32 	%f474, %f471, %f473;
	sub.f32 	%f475, %f473, %f474;
	fma.rn.f32 	%f476, %f475, %f471, %f474;
	sub.f32 	%f477, %f473, %f476;
	fma.rz.f32 	%f478, %f477, %f471, %f476;
	cvt.rzi.f32.f32 	%f479, %f478;
	sub.f32 	%f904, %f473, %f479;
	sub.s32 	%r1140, %r1140, %r234;
	mov.b32 	%r1139, %f904;
	setp.ne.s32 	%p59, %r1140, 0;
	setp.ne.s32 	%p60, %r1139, 0;
	and.pred  	%p61, %p59, %p60;
	@%p61 bra 	LBB0_30;
LBB0_31:                                // %__internal_fmodf_slowpath_mod.exit.i.i
	setp.gt.u32 	%p62, %r28, 2139095039;
	selp.f32 	%f480, 0f7FFFFFFF, 0f4B800000, %p62;
	mul.f32 	%f481, %f904, 0f34000000;
	mul.f32 	%f905, %f480, %f481;
	bra.uni 	LBB0_32;
LBB0_22:                                // %__nv_fast_fdividef.exit.i.i.i
	div.approx.f32 	%f464, %f905, %f184;
	cvt.rzi.f32.f32 	%f903, %f464;
	fma.rn.f32 	%f41, %f903, 0fC0000000, %f905;
	mov.b32 	%r27, %f41;
	setp.lt.u32 	%p53, %r27, 1073741824;
	@%p53 bra 	LBB0_27;
// %bb.23:
	setp.lt.u32 	%p54, %r27, -2147483647;
	@%p54 bra 	LBB0_25;
// %bb.24:
	add.f32 	%f469, %f903, 0fBF800000;
	setp.lt.f32 	%p57, %f41, 0fC0000000;
	add.f32 	%f470, %f469, 0fBF800000;
	selp.f32 	%f903, %f470, %f469, %p57;
	bra.uni 	LBB0_27;
LBB0_25:
	add.f32 	%f903, %f903, 0f3F800000;
	setp.ltu.f32 	%p55, %f41, 0f40800000;
	@%p55 bra 	LBB0_27;
// %bb.26:                              // %__nv_fmaf_rn.exit.i.i.i
	add.f32 	%f465, %f903, 0f3F800000;
	fma.rn.f32 	%f467, %f184, 0fC0400000, %f41;
	setp.ge.f32 	%p56, %f467, 0f00000000;
	add.f32 	%f468, %f465, 0f3F800000;
	selp.f32 	%f903, %f468, %f465, %p56;
LBB0_27:                                // %__internal_fmodf_fastpath_quot.exit.i.i
	fma.rn.f32 	%f905, %f903, 0fC0000000, %f905;
LBB0_32:                                // %__internal_fmodf_kernel.exit.i
	shl.b16 	%rs5, %rs4, 4;
	and.b16  	%rs7, %rs6, 3840;
	selp.f32 	%f198, %f193, %f196, %p4;
	cvt.rzi.f32.f32 	%f199, %f193;
	setp.lt.f32 	%p5, %f197, 0f3F000000;
	selp.f32 	%f232, %f227, %f230, %p10;
	cvt.rzi.f32.f32 	%f233, %f227;
	setp.lt.f32 	%p11, %f231, 0f3F000000;
	selp.f32 	%f267, %f262, %f265, %p16;
	cvt.rzi.f32.f32 	%f268, %f262;
	setp.lt.f32 	%p17, %f266, 0f3F000000;
	selp.f32 	%f301, %f296, %f299, %p22;
	cvt.rzi.f32.f32 	%f302, %f296;
	setp.lt.f32 	%p23, %f300, 0f3F000000;
	selp.f32 	%f336, %f331, %f334, %p28;
	cvt.rzi.f32.f32 	%f337, %f331;
	setp.lt.f32 	%p29, %f335, 0f3F000000;
	selp.f32 	%f370, %f365, %f368, %p34;
	cvt.rzi.f32.f32 	%f371, %f365;
	setp.lt.f32 	%p35, %f369, 0f3F000000;
	selp.f32 	%f405, %f400, %f403, %p40;
	cvt.rzi.f32.f32 	%f406, %f400;
	setp.lt.f32 	%p41, %f404, 0f3F000000;
	selp.f32 	%f439, %f434, %f437, %p46;
	cvt.rzi.f32.f32 	%f440, %f434;
	setp.lt.f32 	%p47, %f438, 0f3F000000;
	abs.f32 	%f482, %f905;
	setp.gtu.f32 	%p63, %f482, 0f7F800000;
	@%p63 bra 	LBB0_34;
// %bb.33:
	mov.b32 	%r236, %f38;
	and.b32  	%r237, %r236, -2147483648;
	mov.b32 	%r238, %f905;
	or.b32  	%r239, %r237, %r238;
	mov.b32 	%f905, %r239;
LBB0_34:                                // %__nv_fmodf.exit
	or.b16  	%rs8, %rs7, %rs5;
	selp.f32 	%f200, %f199, %f198, %p5;
	selp.f32 	%f234, %f233, %f232, %p11;
	selp.f32 	%f269, %f268, %f267, %p17;
	selp.f32 	%f303, %f302, %f301, %p23;
	selp.f32 	%f338, %f337, %f336, %p29;
	selp.f32 	%f372, %f371, %f370, %p35;
	selp.f32 	%f407, %f406, %f405, %p41;
	selp.f32 	%f441, %f440, %f439, %p47;
	add.f32 	%f483, %f905, %f905;
	mov.b32 	%r240, %f483;
	and.b32  	%r241, %r240, -2147483648;
	or.b32  	%r242, %r241, 1056964608;
	mov.b32 	%f484, %r242;
	add.f32 	%f485, %f483, %f484;
	cvt.rzi.f32.f32 	%f486, %f485;
	abs.f32 	%f487, %f483;
	setp.gt.f32 	%p64, %f487, 0f4B000000;
	selp.f32 	%f488, %f483, %f486, %p64;
	cvt.rzi.f32.f32 	%f489, %f483;
	setp.lt.f32 	%p65, %f487, 0f3F000000;
	selp.f32 	%f490, %f489, %f488, %p65;
	fma.rn.f32 	%f491, %f490, 0fBF000000, %f905;
	mul.f32 	%f492, %f491, 0f34222169;
	add.s32 	%r248, %r26, 120;
	cvt.rn.f32.s32 	%f514, %r248;
	div.approx.f32 	%f57, %f514, %f216;
	abs.f32 	%f909, %f57;
	setp.lt.f32 	%p71, %f909, 0f40000000;
	@%p71 bra 	LBB0_46;
// %bb.35:
	setp.gtu.f32 	%p72, %f909, 0f4B800000;
	@%p72 bra 	LBB0_42;
	bra.uni 	LBB0_36;
LBB0_42:
	mov.b32 	%r36, %f909;
	and.b32  	%r249, %r36, 8388607;
	or.b32  	%r1141, %r249, 1065353216;
	mov.b32 	%f908, %r1141;
	add.s32 	%r250, %r36, -1073741824;
	and.b32  	%r1142, %r250, -8388608;
	setp.eq.s32 	%p78, %r1142, 0;
	@%p78 bra 	LBB0_45;
// %bb.43:                              // %__nv_fmaf_rn.exit4.i.i.i850.preheader
	mov.f32 	%f525, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f524,%f525;
	// end inline asm
LBB0_44:                                // %__nv_fmaf_rn.exit4.i.i.i850
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r251, %r1142, 192937984;
	add.s32 	%r252, %r251, %r1141;
	mov.b32 	%f526, %r252;
	mul.f32 	%f527, %f524, %f526;
	sub.f32 	%f528, %f526, %f527;
	fma.rn.f32 	%f529, %f528, %f524, %f527;
	sub.f32 	%f530, %f526, %f529;
	fma.rz.f32 	%f531, %f530, %f524, %f529;
	cvt.rzi.f32.f32 	%f532, %f531;
	sub.f32 	%f908, %f526, %f532;
	sub.s32 	%r1142, %r1142, %r251;
	mov.b32 	%r1141, %f908;
	setp.ne.s32 	%p79, %r1142, 0;
	setp.ne.s32 	%p80, %r1141, 0;
	and.pred  	%p81, %p79, %p80;
	@%p81 bra 	LBB0_44;
LBB0_45:                                // %__internal_fmodf_slowpath_mod.exit.i.i852
	setp.gt.u32 	%p82, %r36, 2139095039;
	selp.f32 	%f533, 0f7FFFFFFF, 0f4B800000, %p82;
	mul.f32 	%f534, %f908, 0f34000000;
	mul.f32 	%f909, %f533, %f534;
	bra.uni 	LBB0_46;
LBB0_36:                                // %__nv_fast_fdividef.exit.i.i.i822
	div.approx.f32 	%f517, %f909, %f184;
	cvt.rzi.f32.f32 	%f907, %f517;
	fma.rn.f32 	%f60, %f907, 0fC0000000, %f909;
	mov.b32 	%r35, %f60;
	setp.lt.u32 	%p73, %r35, 1073741824;
	@%p73 bra 	LBB0_41;
// %bb.37:
	setp.lt.u32 	%p74, %r35, -2147483647;
	@%p74 bra 	LBB0_39;
// %bb.38:
	add.f32 	%f522, %f907, 0fBF800000;
	setp.lt.f32 	%p77, %f60, 0fC0000000;
	add.f32 	%f523, %f522, 0fBF800000;
	selp.f32 	%f907, %f523, %f522, %p77;
	bra.uni 	LBB0_41;
LBB0_39:
	add.f32 	%f907, %f907, 0f3F800000;
	setp.ltu.f32 	%p75, %f60, 0f40800000;
	@%p75 bra 	LBB0_41;
// %bb.40:                              // %__nv_fmaf_rn.exit.i.i.i827
	add.f32 	%f518, %f907, 0f3F800000;
	fma.rn.f32 	%f520, %f184, 0fC0400000, %f60;
	setp.ge.f32 	%p76, %f520, 0f00000000;
	add.f32 	%f521, %f518, 0f3F800000;
	selp.f32 	%f907, %f521, %f518, %p76;
LBB0_41:                                // %__internal_fmodf_fastpath_quot.exit.i.i831
	fma.rn.f32 	%f909, %f907, 0fC0000000, %f909;
LBB0_46:                                // %__internal_fmodf_kernel.exit.i856
	and.b16  	%rs9, %rs8, 13107;
	shr.u16 	%rs11, %rs8, 2;
	fma.rn.f32 	%f201, %f200, 0fBF000000, %f192;
	fma.rn.f32 	%f235, %f234, 0fBF000000, %f226;
	fma.rn.f32 	%f270, %f269, 0fBF000000, %f261;
	fma.rn.f32 	%f304, %f303, 0fBF000000, %f295;
	fma.rn.f32 	%f339, %f338, 0fBF000000, %f330;
	fma.rn.f32 	%f373, %f372, 0fBF000000, %f364;
	fma.rn.f32 	%f408, %f407, 0fBF000000, %f399;
	fma.rn.f32 	%f442, %f441, 0fBF000000, %f433;
	fma.rn.f32 	%f493, %f491, 0f40490FDA, %f492;
	shr.u32 	%r15, %r5, 2;
	abs.f32 	%f535, %f909;
	setp.gtu.f32 	%p83, %f535, 0f7F800000;
	@%p83 bra 	LBB0_48;
// %bb.47:
	mov.b32 	%r253, %f57;
	and.b32  	%r254, %r253, -2147483648;
	mov.b32 	%r255, %f909;
	or.b32  	%r256, %r254, %r255;
	mov.b32 	%f909, %r256;
LBB0_48:                                // %__nv_fmodf.exit857
	shl.b16 	%rs10, %rs9, 2;
	and.b16  	%rs12, %rs11, 13107;
	mul.f32 	%f202, %f201, %f201;
	mul.f32 	%f236, %f235, %f235;
	mul.f32 	%f271, %f270, %f270;
	mul.f32 	%f305, %f304, %f304;
	mul.f32 	%f340, %f339, %f339;
	mul.f32 	%f374, %f373, %f373;
	mul.f32 	%f409, %f408, %f408;
	mul.f32 	%f443, %f442, %f442;
	mul.f32 	%f494, %f493, %f493;
	add.f32 	%f536, %f909, %f909;
	mov.b32 	%r263, %f536;
	and.b32  	%r264, %r263, -2147483648;
	or.b32  	%r265, %r264, 1056964608;
	mov.b32 	%f537, %r265;
	add.f32 	%f538, %f536, %f537;
	cvt.rzi.f32.f32 	%f539, %f538;
	abs.f32 	%f540, %f536;
	setp.gt.f32 	%p84, %f540, 0f4B000000;
	selp.f32 	%f541, %f536, %f539, %p84;
	cvt.rzi.f32.f32 	%f542, %f536;
	setp.lt.f32 	%p85, %f540, 0f3F000000;
	selp.f32 	%f543, %f542, %f541, %p85;
	fma.rn.f32 	%f544, %f543, 0fBF000000, %f909;
	mul.f32 	%f545, %f544, 0f34222169;
	fma.rn.f32 	%f546, %f544, 0f40490FDA, %f545;
	mul.f32 	%f547, %f546, %f546;
	and.b32  	%r271, %r5, 3;
	mul.lo.s32 	%r272, %r271, %r15;
	shl.b32 	%r273, %r272, 1;
	neg.s32 	%r47, %r273;
	cvt.rn.f32.s32 	%f569, %r47;
	mov.f32 	%f570, 0f41000000;
	div.approx.f32 	%f74, %f569, %f570;
	abs.f32 	%f913, %f74;
	setp.lt.f32 	%p91, %f913, 0f40000000;
	@%p91 bra 	LBB0_60;
// %bb.49:
	setp.gtu.f32 	%p92, %f913, 0f4B800000;
	@%p92 bra 	LBB0_56;
	bra.uni 	LBB0_50;
LBB0_56:
	mov.b32 	%r49, %f913;
	and.b32  	%r274, %r49, 8388607;
	or.b32  	%r1143, %r274, 1065353216;
	mov.b32 	%f912, %r1143;
	add.s32 	%r275, %r49, -1073741824;
	and.b32  	%r1144, %r275, -8388608;
	setp.eq.s32 	%p98, %r1144, 0;
	@%p98 bra 	LBB0_59;
// %bb.57:                              // %__nv_fmaf_rn.exit4.i.i.i896.preheader
	mov.f32 	%f580, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f579,%f580;
	// end inline asm
LBB0_58:                                // %__nv_fmaf_rn.exit4.i.i.i896
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r276, %r1144, 192937984;
	add.s32 	%r277, %r276, %r1143;
	mov.b32 	%f581, %r277;
	mul.f32 	%f582, %f579, %f581;
	sub.f32 	%f583, %f581, %f582;
	fma.rn.f32 	%f584, %f583, %f579, %f582;
	sub.f32 	%f585, %f581, %f584;
	fma.rz.f32 	%f586, %f585, %f579, %f584;
	cvt.rzi.f32.f32 	%f587, %f586;
	sub.f32 	%f912, %f581, %f587;
	sub.s32 	%r1144, %r1144, %r276;
	mov.b32 	%r1143, %f912;
	setp.ne.s32 	%p99, %r1144, 0;
	setp.ne.s32 	%p100, %r1143, 0;
	and.pred  	%p101, %p99, %p100;
	@%p101 bra 	LBB0_58;
LBB0_59:                                // %__internal_fmodf_slowpath_mod.exit.i.i898
	setp.gt.u32 	%p102, %r49, 2139095039;
	selp.f32 	%f588, 0f7FFFFFFF, 0f4B800000, %p102;
	mul.f32 	%f589, %f912, 0f34000000;
	mul.f32 	%f913, %f588, %f589;
	bra.uni 	LBB0_60;
LBB0_50:                                // %__nv_fast_fdividef.exit.i.i.i868
	div.approx.f32 	%f572, %f913, %f184;
	cvt.rzi.f32.f32 	%f911, %f572;
	fma.rn.f32 	%f77, %f911, 0fC0000000, %f913;
	mov.b32 	%r48, %f77;
	setp.lt.u32 	%p93, %r48, 1073741824;
	@%p93 bra 	LBB0_55;
// %bb.51:
	setp.lt.u32 	%p94, %r48, -2147483647;
	@%p94 bra 	LBB0_53;
// %bb.52:
	add.f32 	%f577, %f911, 0fBF800000;
	setp.lt.f32 	%p97, %f77, 0fC0000000;
	add.f32 	%f578, %f577, 0fBF800000;
	selp.f32 	%f911, %f578, %f577, %p97;
	bra.uni 	LBB0_55;
LBB0_53:
	add.f32 	%f911, %f911, 0f3F800000;
	setp.ltu.f32 	%p95, %f77, 0f40800000;
	@%p95 bra 	LBB0_55;
// %bb.54:                              // %__nv_fmaf_rn.exit.i.i.i873
	add.f32 	%f573, %f911, 0f3F800000;
	fma.rn.f32 	%f575, %f184, 0fC0400000, %f77;
	setp.ge.f32 	%p96, %f575, 0f00000000;
	add.f32 	%f576, %f573, 0f3F800000;
	selp.f32 	%f911, %f576, %f573, %p96;
LBB0_55:                                // %__internal_fmodf_fastpath_quot.exit.i.i877
	fma.rn.f32 	%f913, %f911, 0fC0000000, %f913;
LBB0_60:                                // %__internal_fmodf_kernel.exit.i902
	or.b16  	%rs13, %rs12, %rs10;
	cvt.rzi.s32.f32 	%r164, %f200;
	fma.rn.f32 	%f203, %f202, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f204, %f202, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r171, %f234;
	fma.rn.f32 	%f237, %f236, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f238, %f236, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r182, %f269;
	fma.rn.f32 	%f272, %f271, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f273, %f271, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r189, %f303;
	fma.rn.f32 	%f306, %f305, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f307, %f305, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r200, %f338;
	fma.rn.f32 	%f341, %f340, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f342, %f340, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r207, %f372;
	fma.rn.f32 	%f375, %f374, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f376, %f374, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r218, %f407;
	fma.rn.f32 	%f410, %f409, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f411, %f409, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r225, %f441;
	fma.rn.f32 	%f444, %f443, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f445, %f443, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f495, %f494, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f548, %f547, 0f37CBAC00, 0fBAB607ED;
	abs.f32 	%f590, %f913;
	setp.gtu.f32 	%p103, %f590, 0f7F800000;
	@%p103 bra 	LBB0_62;
// %bb.61:
	mov.b32 	%r278, %f74;
	and.b32  	%r279, %r278, -2147483648;
	mov.b32 	%r280, %f913;
	or.b32  	%r281, %r279, %r280;
	mov.b32 	%f913, %r281;
LBB0_62:                                // %__nv_fmodf.exit903
	and.b16  	%rs15, %rs13, 16384;
	add.s32 	%r165, %r164, 1;
	fma.rn.f32 	%f205, %f203, %f202, 0fC0A55DF6;
	fma.rn.f32 	%f206, %f204, %f202, 0f4081E0CF;
	fma.rn.f32 	%f207, %f202, %f201, 0f00000000;
	add.s32 	%r172, %r171, 1;
	fma.rn.f32 	%f239, %f237, %f236, 0fC0A55DF6;
	fma.rn.f32 	%f240, %f238, %f236, 0f4081E0CF;
	fma.rn.f32 	%f241, %f236, %f235, 0f00000000;
	add.s32 	%r183, %r182, 1;
	fma.rn.f32 	%f274, %f272, %f271, 0fC0A55DF6;
	fma.rn.f32 	%f275, %f273, %f271, 0f4081E0CF;
	fma.rn.f32 	%f276, %f271, %f270, 0f00000000;
	add.s32 	%r190, %r189, 1;
	fma.rn.f32 	%f308, %f306, %f305, 0fC0A55DF6;
	fma.rn.f32 	%f309, %f307, %f305, 0f4081E0CF;
	fma.rn.f32 	%f310, %f305, %f304, 0f00000000;
	add.s32 	%r201, %r200, 1;
	fma.rn.f32 	%f343, %f341, %f340, 0fC0A55DF6;
	fma.rn.f32 	%f344, %f342, %f340, 0f4081E0CF;
	fma.rn.f32 	%f345, %f340, %f339, 0f00000000;
	add.s32 	%r208, %r207, 1;
	fma.rn.f32 	%f377, %f375, %f374, 0fC0A55DF6;
	fma.rn.f32 	%f378, %f376, %f374, 0f4081E0CF;
	fma.rn.f32 	%f379, %f374, %f373, 0f00000000;
	add.s32 	%r219, %r218, 1;
	fma.rn.f32 	%f412, %f410, %f409, 0fC0A55DF6;
	fma.rn.f32 	%f413, %f411, %f409, 0f4081E0CF;
	fma.rn.f32 	%f414, %f409, %f408, 0f00000000;
	add.s32 	%r226, %r225, 1;
	fma.rn.f32 	%f446, %f444, %f443, 0fC0A55DF6;
	fma.rn.f32 	%f447, %f445, %f443, 0f4081E0CF;
	fma.rn.f32 	%f448, %f443, %f442, 0f00000000;
	cvt.rzi.s32.f32 	%r243, %f490;
	fma.rn.f32 	%f496, %f495, %f494, 0f3D2AAABB;
	fma.rn.f32 	%f500, %f494, 0fB94D4153, 0f3C0885E4;
	cvt.rzi.s32.f32 	%r266, %f543;
	fma.rn.f32 	%f549, %f548, %f547, 0f3D2AAABB;
	fma.rn.f32 	%f553, %f547, 0fB94D4153, 0f3C0885E4;
	add.f32 	%f591, %f913, %f913;
	mov.b32 	%r282, %f591;
	and.b32  	%r283, %r282, -2147483648;
	or.b32  	%r284, %r283, 1056964608;
	mov.b32 	%f592, %r284;
	add.f32 	%f593, %f591, %f592;
	cvt.rzi.f32.f32 	%f594, %f593;
	abs.f32 	%f595, %f591;
	setp.gt.f32 	%p104, %f595, 0f4B000000;
	selp.f32 	%f596, %f591, %f594, %p104;
	cvt.rzi.f32.f32 	%f597, %f591;
	setp.lt.f32 	%p105, %f595, 0f3F000000;
	selp.f32 	%f598, %f597, %f596, %p105;
	cvt.rzi.s32.f32 	%r285, %f598;
	fma.rn.f32 	%f599, %f598, 0fBF000000, %f913;
	mul.f32 	%f600, %f599, 0f34222169;
	fma.rn.f32 	%f601, %f599, 0f40490FDA, %f600;
	mul.f32 	%f602, %f601, %f601;
	fma.rn.f32 	%f603, %f602, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f604, %f603, %f602, 0f3D2AAABB;
	fma.rn.f32 	%f605, %f604, %f602, 0fBEFFFFFF;
	fma.rn.f32 	%f607, %f602, %f601, 0f00000000;
	fma.rn.f32 	%f608, %f602, 0fB94D4153, 0f3C0885E4;
	fma.rn.f32 	%f609, %f608, %f602, 0fBE2AAAA8;
	and.b32  	%r286, %r285, 1;
	shl.b32 	%r290, %r15, 3;
	sub.s32 	%r291, %r47, %r290;
	cvt.rn.f32.s32 	%f622, %r291;
	div.approx.f32 	%f93, %f622, %f570;
	abs.f32 	%f917, %f93;
	setp.lt.f32 	%p111, %f917, 0f40000000;
	@%p111 bra 	LBB0_74;
// %bb.63:
	setp.gtu.f32 	%p112, %f917, 0f4B800000;
	@%p112 bra 	LBB0_70;
	bra.uni 	LBB0_64;
LBB0_70:
	mov.b32 	%r57, %f917;
	and.b32  	%r292, %r57, 8388607;
	or.b32  	%r1145, %r292, 1065353216;
	mov.b32 	%f916, %r1145;
	add.s32 	%r293, %r57, -1073741824;
	and.b32  	%r1146, %r293, -8388608;
	setp.eq.s32 	%p118, %r1146, 0;
	@%p118 bra 	LBB0_73;
// %bb.71:                              // %__nv_fmaf_rn.exit4.i.i.i942.preheader
	mov.f32 	%f633, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f632,%f633;
	// end inline asm
LBB0_72:                                // %__nv_fmaf_rn.exit4.i.i.i942
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r294, %r1146, 192937984;
	add.s32 	%r295, %r294, %r1145;
	mov.b32 	%f634, %r295;
	mul.f32 	%f635, %f632, %f634;
	sub.f32 	%f636, %f634, %f635;
	fma.rn.f32 	%f637, %f636, %f632, %f635;
	sub.f32 	%f638, %f634, %f637;
	fma.rz.f32 	%f639, %f638, %f632, %f637;
	cvt.rzi.f32.f32 	%f640, %f639;
	sub.f32 	%f916, %f634, %f640;
	sub.s32 	%r1146, %r1146, %r294;
	mov.b32 	%r1145, %f916;
	setp.ne.s32 	%p119, %r1146, 0;
	setp.ne.s32 	%p120, %r1145, 0;
	and.pred  	%p121, %p119, %p120;
	@%p121 bra 	LBB0_72;
LBB0_73:                                // %__internal_fmodf_slowpath_mod.exit.i.i944
	setp.gt.u32 	%p122, %r57, 2139095039;
	selp.f32 	%f641, 0f7FFFFFFF, 0f4B800000, %p122;
	mul.f32 	%f642, %f916, 0f34000000;
	mul.f32 	%f917, %f641, %f642;
	bra.uni 	LBB0_74;
LBB0_64:                                // %__nv_fast_fdividef.exit.i.i.i914
	div.approx.f32 	%f625, %f917, %f184;
	cvt.rzi.f32.f32 	%f915, %f625;
	fma.rn.f32 	%f96, %f915, 0fC0000000, %f917;
	mov.b32 	%r56, %f96;
	setp.lt.u32 	%p113, %r56, 1073741824;
	@%p113 bra 	LBB0_69;
// %bb.65:
	setp.lt.u32 	%p114, %r56, -2147483647;
	@%p114 bra 	LBB0_67;
// %bb.66:
	add.f32 	%f630, %f915, 0fBF800000;
	setp.lt.f32 	%p117, %f96, 0fC0000000;
	add.f32 	%f631, %f630, 0fBF800000;
	selp.f32 	%f915, %f631, %f630, %p117;
	bra.uni 	LBB0_69;
LBB0_67:
	add.f32 	%f915, %f915, 0f3F800000;
	setp.ltu.f32 	%p115, %f96, 0f40800000;
	@%p115 bra 	LBB0_69;
// %bb.68:                              // %__nv_fmaf_rn.exit.i.i.i919
	add.f32 	%f626, %f915, 0f3F800000;
	fma.rn.f32 	%f628, %f184, 0fC0400000, %f96;
	setp.ge.f32 	%p116, %f628, 0f00000000;
	add.f32 	%f629, %f626, 0f3F800000;
	selp.f32 	%f915, %f629, %f626, %p116;
LBB0_69:                                // %__internal_fmodf_fastpath_quot.exit.i.i923
	fma.rn.f32 	%f917, %f915, 0fC0000000, %f917;
LBB0_74:                                // %__internal_fmodf_kernel.exit.i948
	shr.u16 	%rs14, %rs13, 1;
	shl.b16 	%rs16, %rs15, 1;
	fma.rn.f32 	%f208, %f206, %f202, 0fC09DE9E6;
	fma.rn.f32 	%f209, %f205, %f207, 0f00000000;
	and.b32  	%r166, %r165, 1;
	fma.rn.f32 	%f242, %f240, %f236, 0fC09DE9E6;
	fma.rn.f32 	%f243, %f239, %f241, 0f00000000;
	and.b32  	%r173, %r172, 1;
	fma.rn.f32 	%f277, %f275, %f271, 0fC09DE9E6;
	fma.rn.f32 	%f278, %f274, %f276, 0f00000000;
	and.b32  	%r184, %r183, 1;
	fma.rn.f32 	%f311, %f309, %f305, 0fC09DE9E6;
	fma.rn.f32 	%f312, %f308, %f310, 0f00000000;
	and.b32  	%r191, %r190, 1;
	fma.rn.f32 	%f346, %f344, %f340, 0fC09DE9E6;
	fma.rn.f32 	%f347, %f343, %f345, 0f00000000;
	and.b32  	%r202, %r201, 1;
	fma.rn.f32 	%f380, %f378, %f374, 0fC09DE9E6;
	fma.rn.f32 	%f381, %f377, %f379, 0f00000000;
	and.b32  	%r209, %r208, 1;
	fma.rn.f32 	%f415, %f413, %f409, 0fC09DE9E6;
	fma.rn.f32 	%f416, %f412, %f414, 0f00000000;
	and.b32  	%r220, %r219, 1;
	fma.rn.f32 	%f449, %f447, %f443, 0fC09DE9E6;
	fma.rn.f32 	%f450, %f446, %f448, 0f00000000;
	and.b32  	%r227, %r226, 1;
	fma.rn.f32 	%f497, %f496, %f494, 0fBEFFFFFF;
	fma.rn.f32 	%f499, %f494, %f493, 0f00000000;
	fma.rn.f32 	%f501, %f500, %f494, 0fBE2AAAA8;
	and.b32  	%r244, %r243, 1;
	fma.rn.f32 	%f550, %f549, %f547, 0fBEFFFFFF;
	fma.rn.f32 	%f552, %f547, %f546, 0f00000000;
	fma.rn.f32 	%f554, %f553, %f547, 0fBE2AAAA8;
	and.b32  	%r267, %r266, 1;
	fma.rn.f32 	%f606, %f605, %f602, 0f3F800000;
	fma.rn.f32 	%f610, %f609, %f607, %f601;
	setp.eq.b32 	%p106, %r286, 1;
	mov.f32 	%f213, 0f00000000;
	abs.f32 	%f643, %f917;
	setp.gtu.f32 	%p123, %f643, 0f7F800000;
	@%p123 bra 	LBB0_76;
// %bb.75:
	mov.b32 	%r296, %f93;
	and.b32  	%r297, %r296, -2147483648;
	mov.b32 	%r298, %f917;
	or.b32  	%r299, %r297, %r298;
	mov.b32 	%f917, %r299;
LBB0_76:                                // %__nv_fmodf.exit949
	or.b16  	%rs17, %rs14, %rs16;
	fma.rn.f32 	%f210, %f208, %f202, 0f3F800000;
	fma.rn.f32 	%f211, %f201, 0f40490FDB, %f209;
	setp.eq.b32 	%p6, %r166, 1;
	fma.rn.f32 	%f244, %f242, %f236, 0f3F800000;
	fma.rn.f32 	%f245, %f235, 0f40490FDB, %f243;
	setp.eq.b32 	%p12, %r173, 1;
	fma.rn.f32 	%f279, %f277, %f271, 0f3F800000;
	fma.rn.f32 	%f280, %f270, 0f40490FDB, %f278;
	setp.eq.b32 	%p18, %r184, 1;
	fma.rn.f32 	%f313, %f311, %f305, 0f3F800000;
	fma.rn.f32 	%f314, %f304, 0f40490FDB, %f312;
	setp.eq.b32 	%p24, %r191, 1;
	fma.rn.f32 	%f348, %f346, %f340, 0f3F800000;
	fma.rn.f32 	%f349, %f339, 0f40490FDB, %f347;
	setp.eq.b32 	%p30, %r202, 1;
	fma.rn.f32 	%f382, %f380, %f374, 0f3F800000;
	fma.rn.f32 	%f383, %f373, 0f40490FDB, %f381;
	setp.eq.b32 	%p36, %r209, 1;
	fma.rn.f32 	%f417, %f415, %f409, 0f3F800000;
	fma.rn.f32 	%f418, %f408, 0f40490FDB, %f416;
	setp.eq.b32 	%p42, %r220, 1;
	fma.rn.f32 	%f451, %f449, %f443, 0f3F800000;
	fma.rn.f32 	%f452, %f442, 0f40490FDB, %f450;
	setp.eq.b32 	%p48, %r227, 1;
	fma.rn.f32 	%f498, %f497, %f494, 0f3F800000;
	fma.rn.f32 	%f502, %f501, %f499, %f493;
	setp.eq.b32 	%p66, %r244, 1;
	fma.rn.f32 	%f551, %f550, %f547, 0f3F800000;
	fma.rn.f32 	%f555, %f554, %f552, %f546;
	setp.eq.b32 	%p86, %r267, 1;
	selp.f32 	%f611, %f606, %f610, %p106;
	and.b32  	%r287, %r285, 2;
	add.f32 	%f644, %f917, %f917;
	mov.b32 	%r312, %f644;
	and.b32  	%r313, %r312, -2147483648;
	or.b32  	%r314, %r313, 1056964608;
	mov.b32 	%f645, %r314;
	add.f32 	%f646, %f644, %f645;
	cvt.rzi.f32.f32 	%f647, %f646;
	abs.f32 	%f648, %f644;
	setp.gt.f32 	%p124, %f648, 0f4B000000;
	selp.f32 	%f649, %f644, %f647, %p124;
	cvt.rzi.f32.f32 	%f650, %f644;
	setp.lt.f32 	%p125, %f648, 0f3F000000;
	selp.f32 	%f651, %f650, %f649, %p125;
	cvt.rzi.s32.f32 	%r315, %f651;
	fma.rn.f32 	%f652, %f651, 0fBF000000, %f917;
	mul.f32 	%f653, %f652, 0f34222169;
	fma.rn.f32 	%f654, %f652, 0f40490FDA, %f653;
	mul.f32 	%f655, %f654, %f654;
	fma.rn.f32 	%f656, %f655, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f657, %f656, %f655, 0f3D2AAABB;
	fma.rn.f32 	%f658, %f657, %f655, 0fBEFFFFFF;
	fma.rn.f32 	%f659, %f658, %f655, 0f3F800000;
	fma.rn.f32 	%f660, %f655, %f654, 0f00000000;
	fma.rn.f32 	%f661, %f655, 0fB94D4153, 0f3C0885E4;
	fma.rn.f32 	%f662, %f661, %f655, 0fBE2AAAA8;
	fma.rn.f32 	%f663, %f662, %f660, %f654;
	and.b32  	%r316, %r315, 1;
	setp.eq.b32 	%p126, %r316, 1;
	selp.f32 	%f664, %f659, %f663, %p126;
	and.b32  	%r317, %r315, 2;
	div.approx.f32 	%f110, %f213, %f216;
	abs.f32 	%f921, %f110;
	setp.lt.f32 	%p131, %f921, 0f40000000;
	@%p131 bra 	LBB0_88;
// %bb.77:
	setp.gtu.f32 	%p132, %f921, 0f4B800000;
	@%p132 bra 	LBB0_84;
	bra.uni 	LBB0_78;
LBB0_84:
	mov.b32 	%r69, %f921;
	and.b32  	%r320, %r69, 8388607;
	or.b32  	%r1147, %r320, 1065353216;
	mov.b32 	%f920, %r1147;
	add.s32 	%r321, %r69, -1073741824;
	and.b32  	%r1148, %r321, -8388608;
	setp.eq.s32 	%p138, %r1148, 0;
	@%p138 bra 	LBB0_87;
// %bb.85:                              // %__nv_fmaf_rn.exit4.i.i.i988.preheader
	mov.f32 	%f687, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f686,%f687;
	// end inline asm
LBB0_86:                                // %__nv_fmaf_rn.exit4.i.i.i988
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r322, %r1148, 192937984;
	add.s32 	%r323, %r322, %r1147;
	mov.b32 	%f688, %r323;
	mul.f32 	%f689, %f686, %f688;
	sub.f32 	%f690, %f688, %f689;
	fma.rn.f32 	%f691, %f690, %f686, %f689;
	sub.f32 	%f692, %f688, %f691;
	fma.rz.f32 	%f693, %f692, %f686, %f691;
	cvt.rzi.f32.f32 	%f694, %f693;
	sub.f32 	%f920, %f688, %f694;
	sub.s32 	%r1148, %r1148, %r322;
	mov.b32 	%r1147, %f920;
	setp.ne.s32 	%p139, %r1148, 0;
	setp.ne.s32 	%p140, %r1147, 0;
	and.pred  	%p141, %p139, %p140;
	@%p141 bra 	LBB0_86;
LBB0_87:                                // %__internal_fmodf_slowpath_mod.exit.i.i990
	setp.gt.u32 	%p142, %r69, 2139095039;
	selp.f32 	%f695, 0f7FFFFFFF, 0f4B800000, %p142;
	mul.f32 	%f696, %f920, 0f34000000;
	mul.f32 	%f921, %f695, %f696;
	bra.uni 	LBB0_88;
LBB0_78:                                // %__nv_fast_fdividef.exit.i.i.i960
	div.approx.f32 	%f679, %f921, %f184;
	cvt.rzi.f32.f32 	%f919, %f679;
	fma.rn.f32 	%f113, %f919, 0fC0000000, %f921;
	mov.b32 	%r68, %f113;
	setp.lt.u32 	%p133, %r68, 1073741824;
	@%p133 bra 	LBB0_83;
// %bb.79:
	setp.lt.u32 	%p134, %r68, -2147483647;
	@%p134 bra 	LBB0_81;
// %bb.80:
	add.f32 	%f684, %f919, 0fBF800000;
	setp.lt.f32 	%p137, %f113, 0fC0000000;
	add.f32 	%f685, %f684, 0fBF800000;
	selp.f32 	%f919, %f685, %f684, %p137;
	bra.uni 	LBB0_83;
LBB0_81:
	add.f32 	%f919, %f919, 0f3F800000;
	setp.ltu.f32 	%p135, %f113, 0f40800000;
	@%p135 bra 	LBB0_83;
// %bb.82:                              // %__nv_fmaf_rn.exit.i.i.i965
	add.f32 	%f680, %f919, 0f3F800000;
	fma.rn.f32 	%f682, %f184, 0fC0400000, %f113;
	setp.ge.f32 	%p136, %f682, 0f00000000;
	add.f32 	%f683, %f680, 0f3F800000;
	selp.f32 	%f919, %f683, %f680, %p136;
LBB0_83:                                // %__internal_fmodf_fastpath_quot.exit.i.i969
	fma.rn.f32 	%f921, %f919, 0fC0000000, %f921;
LBB0_88:                                // %__internal_fmodf_kernel.exit.i994
	shr.u16 	%rs18, %rs17, 13;
	selp.f32 	%f212, %f210, %f211, %p6;
	and.b32  	%r167, %r165, 2;
	selp.f32 	%f246, %f244, %f245, %p12;
	and.b32  	%r174, %r172, 2;
	selp.f32 	%f281, %f279, %f280, %p18;
	and.b32  	%r185, %r183, 2;
	selp.f32 	%f315, %f313, %f314, %p24;
	and.b32  	%r192, %r190, 2;
	selp.f32 	%f350, %f348, %f349, %p30;
	and.b32  	%r203, %r201, 2;
	selp.f32 	%f384, %f382, %f383, %p36;
	and.b32  	%r210, %r208, 2;
	selp.f32 	%f419, %f417, %f418, %p42;
	and.b32  	%r221, %r219, 2;
	selp.f32 	%f453, %f451, %f452, %p48;
	and.b32  	%r228, %r226, 2;
	selp.f32 	%f503, %f498, %f502, %p66;
	and.b32  	%r245, %r243, 2;
	selp.f32 	%f556, %f551, %f555, %p86;
	and.b32  	%r268, %r266, 2;
	setp.eq.s32 	%p107, %r287, 0;
	neg.f32 	%f613, %f611;
	add.s32 	%r288, %r285, 1;
	cvt.rzi.f32.f32 	%f618, %f913;
	setp.eq.s32 	%p127, %r317, 0;
	neg.f32 	%f666, %f664;
	add.s32 	%r318, %r315, 1;
	cvt.rzi.f32.f32 	%f671, %f917;
	abs.f32 	%f697, %f921;
	setp.gtu.f32 	%p143, %f697, 0f7F800000;
	@%p143 bra 	LBB0_90;
// %bb.89:
	mov.b32 	%r324, %f110;
	and.b32  	%r325, %r324, -2147483648;
	mov.b32 	%r326, %f921;
	or.b32  	%r327, %r325, %r326;
	mov.b32 	%f921, %r327;
LBB0_90:                                // %__nv_fmodf.exit995
	shl.b32 	%r7, %r5, 1;
	and.b16  	%rs19, %rs18, 6;
	setp.eq.s32 	%p7, %r167, 0;
	sub.f32 	%f214, %f213, %f212;
	setp.eq.s32 	%p13, %r174, 0;
	sub.f32 	%f248, %f213, %f246;
	setp.eq.s32 	%p19, %r185, 0;
	sub.f32 	%f283, %f213, %f281;
	setp.eq.s32 	%p25, %r192, 0;
	sub.f32 	%f317, %f213, %f315;
	setp.eq.s32 	%p31, %r203, 0;
	sub.f32 	%f352, %f213, %f350;
	setp.eq.s32 	%p37, %r210, 0;
	sub.f32 	%f386, %f213, %f384;
	setp.eq.s32 	%p43, %r221, 0;
	sub.f32 	%f421, %f213, %f419;
	setp.eq.s32 	%p49, %r228, 0;
	sub.f32 	%f455, %f213, %f453;
	setp.eq.s32 	%p67, %r245, 0;
	neg.f32 	%f505, %f503;
	add.s32 	%r246, %r243, 1;
	cvt.rzi.f32.f32 	%f510, %f905;
	setp.eq.s32 	%p87, %r268, 0;
	neg.f32 	%f558, %f556;
	add.s32 	%r269, %r266, 1;
	cvt.rzi.f32.f32 	%f563, %f909;
	selp.f32 	%f612, %f610, %f606, %p106;
	selp.f32 	%f614, %f611, %f613, %p107;
	and.b32  	%r289, %r288, 2;
	setp.eq.f32 	%p109, %f618, %f913;
	mul.f32 	%f619, %f913, 0f00000000;
	selp.f32 	%f665, %f663, %f659, %p126;
	selp.f32 	%f667, %f664, %f666, %p127;
	and.b32  	%r319, %r318, 2;
	setp.eq.f32 	%p129, %f671, %f917;
	mul.f32 	%f672, %f917, 0f00000000;
	add.f32 	%f698, %f921, %f921;
	mov.b32 	%r328, %f698;
	and.b32  	%r329, %r328, -2147483648;
	or.b32  	%r330, %r329, 1056964608;
	mov.b32 	%f699, %r330;
	add.f32 	%f700, %f698, %f699;
	cvt.rzi.f32.f32 	%f701, %f700;
	abs.f32 	%f702, %f698;
	setp.gt.f32 	%p144, %f702, 0f4B000000;
	selp.f32 	%f703, %f698, %f701, %p144;
	cvt.rzi.f32.f32 	%f704, %f698;
	setp.lt.f32 	%p145, %f702, 0f3F000000;
	selp.f32 	%f705, %f704, %f703, %p145;
	cvt.rzi.s32.f32 	%r331, %f705;
	fma.rn.f32 	%f706, %f705, 0fBF000000, %f921;
	mul.f32 	%f707, %f706, 0f34222169;
	fma.rn.f32 	%f708, %f706, 0f40490FDA, %f707;
	mul.f32 	%f709, %f708, %f708;
	fma.rn.f32 	%f710, %f709, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f711, %f710, %f709, 0f3D2AAABB;
	fma.rn.f32 	%f712, %f711, %f709, 0fBEFFFFFF;
	fma.rn.f32 	%f713, %f712, %f709, 0f3F800000;
	fma.rn.f32 	%f714, %f709, %f708, 0f00000000;
	fma.rn.f32 	%f715, %f709, 0fB94D4153, 0f3C0885E4;
	fma.rn.f32 	%f716, %f715, %f709, 0fBE2AAAA8;
	fma.rn.f32 	%f717, %f716, %f714, %f708;
	and.b32  	%r332, %r331, 1;
	setp.eq.b32 	%p146, %r332, 1;
	selp.f32 	%f718, %f713, %f717, %p146;
	and.b32  	%r333, %r331, 2;
	setp.eq.s32 	%p147, %r333, 0;
	neg.f32 	%f720, %f718;
	add.s32 	%r334, %r331, 1;
	cvt.rzi.f32.f32 	%f725, %f921;
	shl.b32 	%r336, %r15, 1;
	neg.s32 	%r337, %r336;
	cvt.rn.f32.s32 	%f729, %r337;
	div.approx.f32 	%f129, %f729, %f216;
	abs.f32 	%f925, %f129;
	setp.lt.f32 	%p151, %f925, 0f40000000;
	@%p151 bra 	LBB0_102;
// %bb.91:
	setp.gtu.f32 	%p152, %f925, 0f4B800000;
	@%p152 bra 	LBB0_98;
	bra.uni 	LBB0_92;
LBB0_98:
	mov.b32 	%r77, %f925;
	and.b32  	%r338, %r77, 8388607;
	or.b32  	%r1149, %r338, 1065353216;
	mov.b32 	%f924, %r1149;
	add.s32 	%r339, %r77, -1073741824;
	and.b32  	%r1150, %r339, -8388608;
	setp.eq.s32 	%p158, %r1150, 0;
	@%p158 bra 	LBB0_101;
// %bb.99:                              // %__nv_fmaf_rn.exit4.i.i.i1034.preheader
	mov.f32 	%f740, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f739,%f740;
	// end inline asm
LBB0_100:                               // %__nv_fmaf_rn.exit4.i.i.i1034
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r340, %r1150, 192937984;
	add.s32 	%r341, %r340, %r1149;
	mov.b32 	%f741, %r341;
	mul.f32 	%f742, %f739, %f741;
	sub.f32 	%f743, %f741, %f742;
	fma.rn.f32 	%f744, %f743, %f739, %f742;
	sub.f32 	%f745, %f741, %f744;
	fma.rz.f32 	%f746, %f745, %f739, %f744;
	cvt.rzi.f32.f32 	%f747, %f746;
	sub.f32 	%f924, %f741, %f747;
	sub.s32 	%r1150, %r1150, %r340;
	mov.b32 	%r1149, %f924;
	setp.ne.s32 	%p159, %r1150, 0;
	setp.ne.s32 	%p160, %r1149, 0;
	and.pred  	%p161, %p159, %p160;
	@%p161 bra 	LBB0_100;
LBB0_101:                               // %__internal_fmodf_slowpath_mod.exit.i.i1036
	setp.gt.u32 	%p162, %r77, 2139095039;
	selp.f32 	%f748, 0f7FFFFFFF, 0f4B800000, %p162;
	mul.f32 	%f749, %f924, 0f34000000;
	mul.f32 	%f925, %f748, %f749;
	bra.uni 	LBB0_102;
LBB0_92:                                // %__nv_fast_fdividef.exit.i.i.i1006
	div.approx.f32 	%f732, %f925, %f184;
	cvt.rzi.f32.f32 	%f923, %f732;
	fma.rn.f32 	%f132, %f923, 0fC0000000, %f925;
	mov.b32 	%r76, %f132;
	setp.lt.u32 	%p153, %r76, 1073741824;
	@%p153 bra 	LBB0_97;
// %bb.93:
	setp.lt.u32 	%p154, %r76, -2147483647;
	@%p154 bra 	LBB0_95;
// %bb.94:
	add.f32 	%f737, %f923, 0fBF800000;
	setp.lt.f32 	%p157, %f132, 0fC0000000;
	add.f32 	%f738, %f737, 0fBF800000;
	selp.f32 	%f923, %f738, %f737, %p157;
	bra.uni 	LBB0_97;
LBB0_95:
	add.f32 	%f923, %f923, 0f3F800000;
	setp.ltu.f32 	%p155, %f132, 0f40800000;
	@%p155 bra 	LBB0_97;
// %bb.96:                              // %__nv_fmaf_rn.exit.i.i.i1011
	add.f32 	%f733, %f923, 0f3F800000;
	fma.rn.f32 	%f735, %f184, 0fC0400000, %f132;
	setp.ge.f32 	%p156, %f735, 0f00000000;
	add.f32 	%f736, %f733, 0f3F800000;
	selp.f32 	%f923, %f736, %f733, %p156;
LBB0_97:                                // %__internal_fmodf_fastpath_quot.exit.i.i1015
	fma.rn.f32 	%f925, %f923, 0fC0000000, %f925;
LBB0_102:                               // %__internal_fmodf_kernel.exit.i1040
	and.b32  	%r8, %r7, 8;
	cvt.u32.u16 	%r155, %rs19;
	selp.f32 	%f215, %f212, %f214, %p7;
	selp.f32 	%f249, %f246, %f248, %p13;
	selp.f32 	%f284, %f281, %f283, %p19;
	selp.f32 	%f318, %f315, %f317, %p25;
	selp.f32 	%f353, %f350, %f352, %p31;
	selp.f32 	%f387, %f384, %f386, %p37;
	selp.f32 	%f422, %f419, %f421, %p43;
	selp.f32 	%f456, %f453, %f455, %p49;
	selp.f32 	%f504, %f502, %f498, %p66;
	selp.f32 	%f506, %f503, %f505, %p67;
	and.b32  	%r247, %r246, 2;
	setp.eq.f32 	%p69, %f510, %f905;
	mul.f32 	%f511, %f905, 0f00000000;
	selp.f32 	%f557, %f555, %f551, %p86;
	selp.f32 	%f559, %f556, %f558, %p87;
	and.b32  	%r270, %r269, 2;
	setp.eq.f32 	%p89, %f563, %f909;
	mul.f32 	%f564, %f909, 0f00000000;
	setp.eq.s32 	%p108, %r289, 0;
	sub.f32 	%f616, %f213, %f612;
	selp.f32 	%f91, %f619, %f614, %p109;
	abs.f32 	%f620, %f913;
	setp.eq.s32 	%p128, %r319, 0;
	sub.f32 	%f669, %f213, %f665;
	selp.f32 	%f673, %f672, %f667, %p129;
	abs.f32 	%f674, %f917;
	selp.f32 	%f719, %f717, %f713, %p146;
	selp.f32 	%f721, %f718, %f720, %p147;
	and.b32  	%r335, %r334, 2;
	setp.eq.f32 	%p149, %f725, %f921;
	mul.f32 	%f726, %f921, 0f00000000;
	abs.f32 	%f750, %f925;
	setp.gtu.f32 	%p163, %f750, 0f7F800000;
	@%p163 bra 	LBB0_104;
// %bb.103:
	mov.b32 	%r342, %f129;
	and.b32  	%r343, %r342, -2147483648;
	mov.b32 	%r344, %f925;
	or.b32  	%r345, %r343, %r344;
	mov.b32 	%f925, %r345;
LBB0_104:                               // %__nv_fmodf.exit1041
	or.b32  	%r156, %r8, %r155;
	mul.f32 	%f2, %f215, %f215;
	mul.f32 	%f7, %f249, %f249;
	mul.f32 	%f11, %f284, %f284;
	mul.f32 	%f16, %f318, %f318;
	mul.f32 	%f20, %f353, %f353;
	mul.f32 	%f25, %f387, %f387;
	mul.f32 	%f29, %f422, %f422;
	mul.f32 	%f34, %f456, %f456;
	setp.eq.s32 	%p68, %r247, 0;
	sub.f32 	%f508, %f213, %f504;
	selp.f32 	%f55, %f511, %f506, %p69;
	abs.f32 	%f512, %f905;
	setp.eq.s32 	%p88, %r270, 0;
	sub.f32 	%f561, %f213, %f557;
	selp.f32 	%f565, %f564, %f559, %p89;
	abs.f32 	%f566, %f909;
	selp.f32 	%f617, %f612, %f616, %p108;
	setp.gt.f32 	%p110, %f620, 0f4B800000;
	add.f32 	%f621, %f91, 0f3F800000;
	selp.f32 	%f670, %f665, %f669, %p128;
	setp.gt.f32 	%p130, %f674, 0f4B800000;
	add.f32 	%f675, %f673, 0f3F800000;
	setp.eq.s32 	%p148, %r335, 0;
	sub.f32 	%f723, %f213, %f719;
	selp.f32 	%f127, %f726, %f721, %p149;
	abs.f32 	%f727, %f921;
	and.b32  	%r45, %r15, 2;
	add.f32 	%f751, %f925, %f925;
	mov.b32 	%r352, %f751;
	and.b32  	%r353, %r352, -2147483648;
	or.b32  	%r354, %r353, 1056964608;
	mov.b32 	%f752, %r354;
	add.f32 	%f753, %f751, %f752;
	cvt.rzi.f32.f32 	%f754, %f753;
	abs.f32 	%f755, %f751;
	setp.gt.f32 	%p164, %f755, 0f4B000000;
	selp.f32 	%f756, %f751, %f754, %p164;
	cvt.rzi.f32.f32 	%f757, %f751;
	setp.lt.f32 	%p165, %f755, 0f3F000000;
	selp.f32 	%f758, %f757, %f756, %p165;
	cvt.rzi.s32.f32 	%r355, %f758;
	fma.rn.f32 	%f759, %f758, 0fBF000000, %f925;
	mul.f32 	%f760, %f759, 0f34222169;
	fma.rn.f32 	%f761, %f759, 0f40490FDA, %f760;
	mul.f32 	%f762, %f761, %f761;
	fma.rn.f32 	%f763, %f762, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f764, %f763, %f762, 0f3D2AAABB;
	fma.rn.f32 	%f765, %f764, %f762, 0fBEFFFFFF;
	fma.rn.f32 	%f766, %f765, %f762, 0f3F800000;
	fma.rn.f32 	%f767, %f762, %f761, 0f00000000;
	fma.rn.f32 	%f768, %f762, 0fB94D4153, 0f3C0885E4;
	fma.rn.f32 	%f769, %f768, %f762, 0fBE2AAAA8;
	fma.rn.f32 	%f770, %f769, %f767, %f761;
	and.b32  	%r356, %r355, 1;
	setp.eq.b32 	%p166, %r356, 1;
	selp.f32 	%f771, %f766, %f770, %p166;
	selp.f32 	%f772, %f770, %f766, %p166;
	and.b32  	%r357, %r355, 2;
	setp.eq.s32 	%p167, %r357, 0;
	neg.f32 	%f773, %f771;
	selp.f32 	%f774, %f771, %f773, %p167;
	add.s32 	%r358, %r355, 1;
	and.b32  	%r359, %r358, 2;
	setp.eq.s32 	%p168, %r359, 0;
	sub.f32 	%f776, %f213, %f772;
	cvt.rzi.f32.f32 	%f778, %f925;
	setp.eq.f32 	%p169, %f778, %f925;
	mul.f32 	%f779, %f925, 0f00000000;
	selp.f32 	%f780, %f779, %f774, %p169;
	abs.f32 	%f781, %f925;
	shr.u32 	%r86, %r5, 4;
	shr.u16 	%rs37, %rs17, 14;
	div.approx.f32 	%f146, %f213, %f184;
	abs.f32 	%f929, %f146;
	setp.lt.f32 	%p171, %f929, 0f40000000;
	@%p171 bra 	LBB0_122;
// %bb.105:
	setp.gtu.f32 	%p172, %f929, 0f4B800000;
	@%p172 bra 	LBB0_118;
	bra.uni 	LBB0_106;
LBB0_118:
	mov.b32 	%r101, %f929;
	and.b32  	%r360, %r101, 8388607;
	or.b32  	%r1159, %r360, 1065353216;
	mov.b32 	%f928, %r1159;
	add.s32 	%r361, %r101, -1073741824;
	and.b32  	%r1160, %r361, -8388608;
	setp.eq.s32 	%p178, %r1160, 0;
	@%p178 bra 	LBB0_121;
// %bb.119:                             // %__nv_fmaf_rn.exit4.i.i.i1080.preheader
	mov.f32 	%f794, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f793,%f794;
	// end inline asm
LBB0_120:                               // %__nv_fmaf_rn.exit4.i.i.i1080
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r362, %r1160, 192937984;
	add.s32 	%r363, %r362, %r1159;
	mov.b32 	%f795, %r363;
	mul.f32 	%f796, %f793, %f795;
	sub.f32 	%f797, %f795, %f796;
	fma.rn.f32 	%f798, %f797, %f793, %f796;
	sub.f32 	%f799, %f795, %f798;
	fma.rz.f32 	%f800, %f799, %f793, %f798;
	cvt.rzi.f32.f32 	%f801, %f800;
	sub.f32 	%f928, %f795, %f801;
	sub.s32 	%r1160, %r1160, %r362;
	mov.b32 	%r1159, %f928;
	setp.ne.s32 	%p179, %r1160, 0;
	setp.ne.s32 	%p180, %r1159, 0;
	and.pred  	%p181, %p179, %p180;
	@%p181 bra 	LBB0_120;
LBB0_121:                               // %__internal_fmodf_slowpath_mod.exit.i.i1082
	setp.gt.u32 	%p182, %r101, 2139095039;
	selp.f32 	%f802, 0f7FFFFFFF, 0f4B800000, %p182;
	mul.f32 	%f803, %f928, 0f34000000;
	mul.f32 	%f929, %f802, %f803;
	bra.uni 	LBB0_122;
LBB0_106:                               // %__nv_fast_fdividef.exit.i.i.i1052
	div.approx.f32 	%f786, %f929, %f184;
	cvt.rzi.f32.f32 	%f927, %f786;
	fma.rn.f32 	%f149, %f927, 0fC0000000, %f929;
	mov.b32 	%r100, %f149;
	setp.lt.u32 	%p173, %r100, 1073741824;
	@%p173 bra 	LBB0_117;
// %bb.107:
	setp.lt.u32 	%p174, %r100, -2147483647;
	@%p174 bra 	LBB0_115;
// %bb.108:
	add.f32 	%f791, %f927, 0fBF800000;
	setp.lt.f32 	%p177, %f149, 0fC0000000;
	add.f32 	%f792, %f791, 0fBF800000;
	selp.f32 	%f927, %f792, %f791, %p177;
	bra.uni 	LBB0_117;
LBB0_115:
	add.f32 	%f927, %f927, 0f3F800000;
	setp.ltu.f32 	%p175, %f149, 0f40800000;
	@%p175 bra 	LBB0_117;
// %bb.116:                             // %__nv_fmaf_rn.exit.i.i.i1057
	add.f32 	%f787, %f927, 0f3F800000;
	fma.rn.f32 	%f789, %f184, 0fC0400000, %f149;
	setp.ge.f32 	%p176, %f789, 0f00000000;
	add.f32 	%f790, %f787, 0f3F800000;
	selp.f32 	%f927, %f790, %f787, %p176;
LBB0_117:                               // %__internal_fmodf_fastpath_quot.exit.i.i1061
	fma.rn.f32 	%f929, %f927, 0fC0000000, %f929;
LBB0_122:                               // %__internal_fmodf_kernel.exit.i1086
	shr.u32 	%r157, %r156, 1;
	mul.f32 	%f219, %f2, 0f3D09A17B;
	mul.f32 	%f253, %f7, 0f3D09A17B;
	mul.f32 	%f288, %f11, 0f3D09A17B;
	mul.f32 	%f322, %f16, 0f3D09A17B;
	mul.f32 	%f357, %f20, 0f3D09A17B;
	mul.f32 	%f391, %f25, 0f3D09A17B;
	mul.f32 	%f426, %f29, 0f3D09A17B;
	mul.f32 	%f459, %f34, 0f3D09A17B;
	selp.f32 	%f509, %f504, %f508, %p68;
	setp.gt.f32 	%p70, %f512, 0f4B800000;
	add.f32 	%f513, %f55, 0f3F800000;
	selp.f32 	%f562, %f557, %f561, %p88;
	setp.gt.f32 	%p90, %f566, 0f4B800000;
	add.f32 	%f567, %f565, 0f3F800000;
	selp.f32 	%f92, %f621, %f617, %p110;
	selp.f32 	%f676, %f675, %f670, %p130;
	selp.f32 	%f724, %f719, %f723, %p148;
	setp.gt.f32 	%p150, %f727, 0f4B800000;
	add.f32 	%f728, %f127, 0f3F800000;
	selp.f32 	%f777, %f772, %f776, %p168;
	setp.gt.f32 	%p170, %f781, 0f4B800000;
	add.f32 	%f782, %f780, 0f3F800000;
	cvt.u32.u16 	%r87, %rs37;
	or.b32  	%r88, %r45, %r86;
	abs.f32 	%f804, %f929;
	setp.gtu.f32 	%p183, %f804, 0f7F800000;
	@%p183 bra 	LBB0_124;
// %bb.123:
	mov.b32 	%r364, %f146;
	and.b32  	%r365, %r364, -2147483648;
	mov.b32 	%r366, %f929;
	or.b32  	%r367, %r365, %r366;
	mov.b32 	%f929, %r367;
LBB0_124:                               // %__nv_fmodf.exit1087
	ld.param.u64 	%rd1, [_Z17julia_upchan_406613CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_2];
	mul.wide.u32 	%rd43, %r157, 4;
	mul.f32 	%f6, %f219, %f895;
	mul.f32 	%f254, %f253, %f896;
	mul.f32 	%f15, %f288, %f897;
	mul.f32 	%f323, %f322, %f898;
	mul.f32 	%f24, %f357, %f899;
	mul.f32 	%f392, %f391, %f900;
	mul.f32 	%f33, %f426, %f901;
	mul.f32 	%f460, %f459, %f902;
	selp.f32 	%f56, %f513, %f509, %p70;
	selp.f32 	%f568, %f567, %f562, %p90;
	mov.b32 	%r302, %f676;
	mov.b32 	%r301, %f92;
	mov.b32 	%r308, %f673;
	mov.b32 	%r307, %f91;
	selp.f32 	%f128, %f728, %f724, %p150;
	selp.f32 	%f783, %f782, %f777, %p170;
	shl.b32 	%r9, %r5, 2;
	setp.eq.s32 	%p184, %r88, %r87;
	add.f32 	%f805, %f929, %f929;
	mov.b32 	%r368, %f805;
	and.b32  	%r369, %r368, -2147483648;
	or.b32  	%r370, %r369, 1056964608;
	mov.b32 	%f806, %r370;
	add.f32 	%f807, %f805, %f806;
	cvt.rzi.f32.f32 	%f808, %f807;
	abs.f32 	%f809, %f805;
	setp.gt.f32 	%p185, %f809, 0f4B000000;
	selp.f32 	%f810, %f805, %f808, %p185;
	cvt.rzi.f32.f32 	%f811, %f805;
	setp.lt.f32 	%p186, %f809, 0f3F000000;
	selp.f32 	%f812, %f811, %f810, %p186;
	cvt.rzi.s32.f32 	%r371, %f812;
	fma.rn.f32 	%f813, %f812, 0fBF000000, %f929;
	mul.f32 	%f814, %f813, 0f34222169;
	fma.rn.f32 	%f815, %f813, 0f40490FDA, %f814;
	mul.f32 	%f816, %f815, %f815;
	fma.rn.f32 	%f817, %f816, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f818, %f817, %f816, 0f3D2AAABB;
	fma.rn.f32 	%f819, %f818, %f816, 0fBEFFFFFF;
	fma.rn.f32 	%f820, %f819, %f816, 0f3F800000;
	fma.rn.f32 	%f821, %f816, %f815, 0f00000000;
	fma.rn.f32 	%f822, %f816, 0fB94D4153, 0f3C0885E4;
	fma.rn.f32 	%f823, %f822, %f816, 0fBE2AAAA8;
	fma.rn.f32 	%f824, %f823, %f821, %f815;
	and.b32  	%r372, %r371, 1;
	setp.eq.b32 	%p187, %r372, 1;
	selp.f32 	%f825, %f820, %f824, %p187;
	selp.f32 	%f826, %f824, %f820, %p187;
	and.b32  	%r373, %r371, 2;
	setp.eq.s32 	%p188, %r373, 0;
	neg.f32 	%f827, %f825;
	selp.f32 	%f828, %f825, %f827, %p188;
	add.s32 	%r374, %r371, 1;
	and.b32  	%r375, %r374, 2;
	setp.eq.s32 	%p189, %r375, 0;
	sub.f32 	%f830, %f213, %f826;
	selp.f32 	%f831, %f826, %f830, %p189;
	cvt.rzi.f32.f32 	%f832, %f929;
	setp.eq.f32 	%p190, %f832, %f929;
	mul.f32 	%f833, %f929, 0f00000000;
	selp.f32 	%f834, %f833, %f828, %p190;
	abs.f32 	%f835, %f929;
	setp.gt.f32 	%p191, %f835, 0f4B800000;
	add.f32 	%f836, %f834, 0f3F800000;
	selp.f32 	%f837, %f836, %f831, %p191;
	selp.f32 	%f163, 0f3F800000, 0f00000000, %p184;
	shl.b32 	%r376, %r16, 1;
	neg.s32 	%r377, %r376;
	cvt.rn.f32.s32 	%f838, %r377;
	div.approx.f32 	%f166, %f838, %f184;
	abs.f32 	%f933, %f166;
	setp.lt.f32 	%p192, %f933, 0f40000000;
	@%p192 bra 	LBB0_136;
// %bb.125:
	setp.gtu.f32 	%p193, %f933, 0f4B800000;
	@%p193 bra 	LBB0_132;
	bra.uni 	LBB0_126;
LBB0_132:
	mov.b32 	%r109, %f933;
	and.b32  	%r378, %r109, 8388607;
	or.b32  	%r1161, %r378, 1065353216;
	mov.b32 	%f932, %r1161;
	add.s32 	%r379, %r109, -1073741824;
	and.b32  	%r1162, %r379, -8388608;
	setp.eq.s32 	%p199, %r1162, 0;
	@%p199 bra 	LBB0_135;
// %bb.133:                             // %__nv_fmaf_rn.exit4.i.i.i1126.preheader
	mov.f32 	%f849, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f848,%f849;
	// end inline asm
LBB0_134:                               // %__nv_fmaf_rn.exit4.i.i.i1126
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r380, %r1162, 192937984;
	add.s32 	%r381, %r380, %r1161;
	mov.b32 	%f850, %r381;
	mul.f32 	%f851, %f848, %f850;
	sub.f32 	%f852, %f850, %f851;
	fma.rn.f32 	%f853, %f852, %f848, %f851;
	sub.f32 	%f854, %f850, %f853;
	fma.rz.f32 	%f855, %f854, %f848, %f853;
	cvt.rzi.f32.f32 	%f856, %f855;
	sub.f32 	%f932, %f850, %f856;
	sub.s32 	%r1162, %r1162, %r380;
	mov.b32 	%r1161, %f932;
	setp.ne.s32 	%p200, %r1162, 0;
	setp.ne.s32 	%p201, %r1161, 0;
	and.pred  	%p202, %p200, %p201;
	@%p202 bra 	LBB0_134;
LBB0_135:                               // %__internal_fmodf_slowpath_mod.exit.i.i1128
	setp.gt.u32 	%p203, %r109, 2139095039;
	selp.f32 	%f857, 0f7FFFFFFF, 0f4B800000, %p203;
	mul.f32 	%f858, %f932, 0f34000000;
	mul.f32 	%f933, %f857, %f858;
	bra.uni 	LBB0_136;
LBB0_126:                               // %__nv_fast_fdividef.exit.i.i.i1098
	div.approx.f32 	%f841, %f933, %f184;
	cvt.rzi.f32.f32 	%f931, %f841;
	fma.rn.f32 	%f169, %f931, 0fC0000000, %f933;
	mov.b32 	%r108, %f169;
	setp.lt.u32 	%p194, %r108, 1073741824;
	@%p194 bra 	LBB0_131;
// %bb.127:
	setp.lt.u32 	%p195, %r108, -2147483647;
	@%p195 bra 	LBB0_129;
// %bb.128:
	add.f32 	%f846, %f931, 0fBF800000;
	setp.lt.f32 	%p198, %f169, 0fC0000000;
	add.f32 	%f847, %f846, 0fBF800000;
	selp.f32 	%f931, %f847, %f846, %p198;
	bra.uni 	LBB0_131;
LBB0_129:
	add.f32 	%f931, %f931, 0f3F800000;
	setp.ltu.f32 	%p196, %f169, 0f40800000;
	@%p196 bra 	LBB0_131;
// %bb.130:                             // %__nv_fmaf_rn.exit.i.i.i1103
	add.f32 	%f842, %f931, 0f3F800000;
	fma.rn.f32 	%f844, %f184, 0fC0400000, %f169;
	setp.ge.f32 	%p197, %f844, 0f00000000;
	add.f32 	%f845, %f842, 0f3F800000;
	selp.f32 	%f931, %f845, %f842, %p197;
LBB0_131:                               // %__internal_fmodf_fastpath_quot.exit.i.i1107
	fma.rn.f32 	%f933, %f931, 0fC0000000, %f933;
LBB0_136:                               // %__internal_fmodf_kernel.exit.i1132
	add.s64 	%rd44, %rd1, %rd43;
	mov.b32 	%r177, %f254;
	mov.b32 	%r176, %f6;
	mov.b32 	%r195, %f323;
	mov.b32 	%r194, %f15;
	mov.b32 	%r213, %f392;
	mov.b32 	%r212, %f24;
	mov.b32 	%r231, %f460;
	mov.b32 	%r230, %f33;
	mov.b32 	%r259, %f568;
	mov.b32 	%r258, %f56;
	mov.b32 	%r262, %f565;
	mov.b32 	%r261, %f55;
	xor.b32  	%r305, %r308, -2147483648;
	xor.b32  	%r304, %r307, -2147483648;
	mov.b32 	%r348, %f783;
	mov.b32 	%r347, %f128;
	mov.b32 	%r351, %f780;
	mov.b32 	%r350, %f127;
	and.b32  	%r10, %r9, 4;
	and.b32  	%r11, %r5, 2;
	and.b32  	%r46, %r15, 4;
	mul.f32 	%f164, %f837, %f163;
	mul.f32 	%f165, %f834, %f163;
	abs.f32 	%f859, %f933;
	setp.gtu.f32 	%p204, %f859, 0f7F800000;
	@%p204 bra 	LBB0_138;
// %bb.137:
	mov.b32 	%r382, %f166;
	and.b32  	%r383, %r382, -2147483648;
	mov.b32 	%r384, %f933;
	or.b32  	%r385, %r383, %r384;
	mov.b32 	%f933, %r385;
LBB0_138:                               // %__nv_fmodf.exit1133
	ld.param.u64 	%rd2, [_Z17julia_upchan_406613CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_3];
	ld.param.u64 	%rd3, [_Z17julia_upchan_406613CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_4];
	ld.global.u32 	%r12, [%rd44];
	// begin inline asm
	cvt.rn.f16x2.f32 %r175, %r177, %r176;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r193, %r195, %r194;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r211, %r213, %r212;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r229, %r231, %r230;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r257, %r259, %r258;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r260, %r262, %r261;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r300, %r302, %r301;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r303, %r305, %r304;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r306, %r308, %r307;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r309, %r302, %r301;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r346, %r348, %r347;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r349, %r351, %r350;
	// end inline asm
	add.f32 	%f860, %f933, %f933;
	mov.b32 	%r399, %f860;
	and.b32  	%r400, %r399, -2147483648;
	or.b32  	%r401, %r400, 1056964608;
	mov.b32 	%f861, %r401;
	add.f32 	%f862, %f860, %f861;
	cvt.rzi.f32.f32 	%f863, %f862;
	abs.f32 	%f864, %f860;
	setp.gt.f32 	%p205, %f864, 0f4B000000;
	selp.f32 	%f865, %f860, %f863, %p205;
	cvt.rzi.f32.f32 	%f866, %f860;
	setp.lt.f32 	%p206, %f864, 0f3F000000;
	selp.f32 	%f867, %f866, %f865, %p206;
	cvt.rzi.s32.f32 	%r402, %f867;
	fma.rn.f32 	%f868, %f867, 0fBF000000, %f933;
	mul.f32 	%f869, %f868, 0f34222169;
	fma.rn.f32 	%f870, %f868, 0f40490FDA, %f869;
	mul.f32 	%f871, %f870, %f870;
	fma.rn.f32 	%f872, %f871, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f873, %f872, %f871, 0f3D2AAABB;
	fma.rn.f32 	%f874, %f873, %f871, 0fBEFFFFFF;
	fma.rn.f32 	%f875, %f874, %f871, 0f3F800000;
	fma.rn.f32 	%f876, %f871, %f870, 0f00000000;
	fma.rn.f32 	%f877, %f871, 0fB94D4153, 0f3C0885E4;
	fma.rn.f32 	%f878, %f877, %f871, 0fBE2AAAA8;
	fma.rn.f32 	%f879, %f878, %f876, %f870;
	and.b32  	%r403, %r402, 1;
	setp.eq.b32 	%p207, %r403, 1;
	selp.f32 	%f880, %f875, %f879, %p207;
	selp.f32 	%f881, %f879, %f875, %p207;
	and.b32  	%r404, %r402, 2;
	setp.eq.s32 	%p208, %r404, 0;
	neg.f32 	%f882, %f880;
	selp.f32 	%f883, %f880, %f882, %p208;
	add.s32 	%r405, %r402, 1;
	and.b32  	%r406, %r405, 2;
	setp.eq.s32 	%p209, %r406, 0;
	sub.f32 	%f885, %f213, %f881;
	selp.f32 	%f886, %f881, %f885, %p209;
	cvt.rzi.f32.f32 	%f887, %f933;
	setp.eq.f32 	%p210, %f887, %f933;
	mul.f32 	%f888, %f933, 0f00000000;
	selp.f32 	%f889, %f888, %f883, %p210;
	abs.f32 	%f890, %f933;
	setp.gt.f32 	%p211, %f890, 0f4B800000;
	add.f32 	%f891, %f889, 0f3F800000;
	selp.f32 	%f892, %f891, %f886, %p211;
	mul.f32 	%f893, %f892, %f163;
	mul.f32 	%f894, %f889, %f163;
	mov.b32 	%r388, %f893;
	mov.b32 	%r387, %f164;
	// begin inline asm
	cvt.rn.f16x2.f32 %r116, %r388, %r387;
	// end inline asm
	mov.b32 	%r394, %f894;
	xor.b32  	%r391, %r394, -2147483648;
	mov.b32 	%r393, %f165;
	xor.b32  	%r390, %r393, -2147483648;
	// begin inline asm
	cvt.rn.f16x2.f32 %r117, %r391, %r390;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r118, %r394, %r393;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r119, %r388, %r387;
	// end inline asm
	and.b32  	%r407, %r9, 28;
	shl.b32 	%r408, %r1, 5;
	and.b32  	%r409, %r408, 96;
	or.b32  	%r410, %r407, %r409;
	shl.b32 	%r411, %r1, 4;
	and.b32  	%r412, %r411, 1920;
	and.b32  	%r413, %r3, 3;
	shl.b32 	%r414, %r3, 2;
	and.b32  	%r415, %r414, 48;
	and.b32  	%r120, %r5, 8;
	or.b32  	%r416, %r120, %r413;
	or.b32  	%r417, %r416, %r415;
	or.b32  	%r121, %r417, %r46;
	and.b32  	%r418, %r2, 2048;
	or.b32  	%r419, %r410, %r412;
	or.b32  	%r122, %r419, %r418;
	and.b32  	%r420, %r3, 1;
	mul.lo.s32 	%r421, %r420, 260;
	bfe.u32 	%r422, %r3, 1, 1;
	mul.lo.s32 	%r423, %r422, 130;
	mul.lo.s32 	%r424, %r86, 65;
	shr.u32 	%r425, %r3, 2;
	mul.lo.s32 	%r426, %r425, 545;
	shl.b32 	%r427, %r5, 4;
	or.b32  	%r428, %r427, %r120;
	shr.u32 	%r429, %r428, 2;
	and.b32  	%r430, %r429, 30;
	add.s32 	%r431, %r424, %r421;
	add.s32 	%r432, %r431, %r426;
	add.s32 	%r433, %r432, %r423;
	add.s32 	%r434, %r433, %r430;
	mul.wide.u32 	%rd45, %r434, 4;
	mov.u64 	%rd46, shmem;
	add.s64 	%rd11, %rd46, %rd45;
	cvt.u64.u32 	%rd47, %r430;
	cvt.u64.u32 	%rd48, %r423;
	cvt.u64.u32 	%rd49, %r426;
	cvt.u64.u32 	%rd50, %r424;
	cvt.u64.u32 	%rd51, %r421;
	add.s64 	%rd52, %rd51, %rd50;
	add.s64 	%rd53, %rd52, %rd49;
	add.s64 	%rd54, %rd53, %rd48;
	add.s64 	%rd55, %rd54, %rd47;
	shl.b64 	%rd56, %rd55, 2;
	add.s64 	%rd12, %rd46, %rd56;
	or.b32  	%r435, %r425, 4;
	mul.lo.s32 	%r436, %r435, 545;
	add.s32 	%r437, %r431, %r423;
	add.s32 	%r438, %r437, %r436;
	add.s32 	%r439, %r438, %r430;
	mul.wide.u32 	%rd57, %r439, 4;
	add.s64 	%rd13, %rd46, %rd57;
	add.s64 	%rd58, %rd52, %rd48;
	cvt.u64.u32 	%rd59, %r436;
	add.s64 	%rd60, %rd58, %rd59;
	add.s64 	%rd61, %rd60, %rd47;
	shl.b64 	%rd62, %rd61, 2;
	add.s64 	%rd14, %rd46, %rd62;
	or.b32  	%r440, %r425, 8;
	mul.lo.s32 	%r441, %r440, 545;
	add.s32 	%r442, %r437, %r441;
	add.s32 	%r443, %r442, %r430;
	mul.wide.u32 	%rd63, %r443, 4;
	add.s64 	%rd15, %rd46, %rd63;
	cvt.u64.u32 	%rd64, %r441;
	add.s64 	%rd65, %rd58, %rd64;
	add.s64 	%rd66, %rd65, %rd47;
	shl.b64 	%rd67, %rd66, 2;
	add.s64 	%rd16, %rd46, %rd67;
	or.b32  	%r444, %r425, 12;
	mul.lo.s32 	%r445, %r444, 545;
	add.s32 	%r446, %r437, %r445;
	add.s32 	%r447, %r446, %r430;
	mul.wide.u32 	%rd68, %r447, 4;
	add.s64 	%rd17, %rd46, %rd68;
	cvt.u64.u32 	%rd69, %r445;
	add.s64 	%rd70, %rd58, %rd69;
	add.s64 	%rd71, %rd70, %rd47;
	shl.b64 	%rd72, %rd71, 2;
	add.s64 	%rd18, %rd46, %rd72;
	and.b32  	%r448, %r4, 32;
	shl.b32 	%r449, %r3, 1;
	and.b32  	%r450, %r7, 32;
	or.b32  	%r451, %r450, %r449;
	shl.b32 	%r452, %r5, 3;
	and.b32  	%r453, %r452, 64;
	or.b32  	%r454, %r451, %r453;
	shr.u32 	%r455, %r454, 2;
	mad.lo.s32 	%r456, %r14, 130, %r448;
	mad.lo.s32 	%r457, %r16, 260, %r456;
	mad.lo.s32 	%r458, %r13, 65, %r457;
	add.s32 	%r459, %r458, %r455;
	or.b32  	%r460, %r8, %r11;
	or.b32  	%r461, %r460, %r10;
	shr.u32 	%r462, %r461, 1;
	or.b32  	%r463, %r455, %r448;
	mad.lo.s32 	%r464, %r462, 65, %r463;
	shl.b32 	%r465, %r1, 1;
	and.b32  	%r466, %r465, 240;
	and.b32  	%r467, %r414, 12;
	shr.u32 	%r468, %r5, 3;
	or.b32  	%r469, %r467, %r468;
	or.b32  	%r470, %r469, %r466;
	shl.b32 	%r471, %r470, 7;
	shl.b32 	%r472, %r1, 13;
	and.b32  	%r473, %r472, 32768;
	shl.b32 	%r474, %r3, 14;
	and.b32  	%r123, %r474, 196608;
	or.b32  	%r475, %r471, %r410;
	or.b32  	%r124, %r475, %r473;
	and.b32  	%r476, %r449, 6;
	or.b32  	%r477, %r476, %r86;
	mul.lo.s32 	%r478, %r477, 65;
	add.s32 	%r479, %r478, %r426;
	add.s32 	%r480, %r479, %r430;
	mul.wide.u32 	%rd73, %r480, 4;
	add.s64 	%rd19, %rd46, %rd73;
	cvt.u64.u32 	%rd74, %r478;
	add.s64 	%rd75, %rd49, %rd74;
	add.s64 	%rd76, %rd75, %rd47;
	shl.b64 	%rd77, %rd76, 2;
	add.s64 	%rd20, %rd46, %rd77;
	add.s32 	%r481, %r478, %r436;
	add.s32 	%r482, %r481, %r430;
	mul.wide.u32 	%rd78, %r482, 4;
	add.s64 	%rd21, %rd46, %rd78;
	add.s64 	%rd79, %rd59, %rd74;
	add.s64 	%rd80, %rd79, %rd47;
	shl.b64 	%rd81, %rd80, 2;
	add.s64 	%rd22, %rd46, %rd81;
	add.s32 	%r483, %r478, %r441;
	add.s32 	%r484, %r483, %r430;
	mul.wide.u32 	%rd82, %r484, 4;
	add.s64 	%rd23, %rd46, %rd82;
	add.s64 	%rd83, %rd64, %rd74;
	add.s64 	%rd84, %rd83, %rd47;
	shl.b64 	%rd85, %rd84, 2;
	add.s64 	%rd24, %rd46, %rd85;
	add.s32 	%r485, %r478, %r445;
	add.s32 	%r486, %r485, %r430;
	mul.wide.u32 	%rd86, %r486, 4;
	add.s64 	%rd25, %rd46, %rd86;
	add.s64 	%rd87, %rd69, %rd74;
	add.s64 	%rd88, %rd87, %rd47;
	shl.b64 	%rd89, %rd88, 2;
	add.s64 	%rd26, %rd46, %rd89;
	mul.wide.u32 	%rd90, %r464, 4;
	add.s64 	%rd27, %rd46, %rd90;
	mul.wide.u32 	%rd91, %r459, 4;
	add.s64 	%rd28, %rd46, %rd91;
	mov.u32 	%r1151, 0;
	setp.eq.s32 	%p212, %r120, 0;
	mov.u16 	%rs103, 25600;
	mov.u16 	%rs77, 21504;
	mov.u16 	%rs111, 18432;
	mov.u16 	%rs99, -14592;
	mov.u32 	%r1152, %r1151;
	mov.u32 	%r1158, %r1151;
	mov.u32 	%r1154, %r1151;
	bra.uni 	LBB0_109;
LBB0_113:                               // %L17437
                                        //   in Loop: Header=BB0_109 Depth=1
	add.s32 	%r1154, %r92, 256;
	setp.gt.s32 	%p217, %r6, %r1154;
	setp.ne.s32 	%p218, %r92, 32512;
	and.pred  	%p219, %p218, %p217;
	@%p219 bra 	LBB0_109;
	bra.uni 	LBB0_114;
LBB0_109:                               // %L1187
                                        // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_110 Depth 2
	mov.u32 	%r92, %r1154;
	or.b32  	%r552, %r121, %r92;
	shl.b32 	%r553, %r552, 12;
	or.b32  	%r554, %r122, %r553;
	mul.wide.s32 	%rd92, %r554, 4;
	add.s64 	%rd93, %rd2, %rd92;
	ld.global.v4.u32 	{%r555, %r556, %r557, %r558}, [%rd93];
	or.b32  	%r559, %r554, 262144;
	mul.wide.s32 	%rd94, %r559, 4;
	add.s64 	%rd95, %rd2, %rd94;
	ld.global.v4.u32 	{%r560, %r561, %r562, %r563}, [%rd95];
	or.b32  	%r564, %r554, 524288;
	mul.wide.s32 	%rd96, %r564, 4;
	add.s64 	%rd97, %rd2, %rd96;
	ld.global.v4.u32 	{%r565, %r566, %r567, %r568}, [%rd97];
	or.b32  	%r569, %r554, 786432;
	mul.wide.s32 	%rd98, %r569, 4;
	add.s64 	%rd99, %rd2, %rd98;
	ld.global.v4.u32 	{%r570, %r571, %r572, %r573}, [%rd99];
	selp.b32 	%r574, %r557, %r555, %p212;
	shfl.sync.bfly.b32	%r575, %r574, 8, 31, -1;
	selp.b32 	%r488, %r555, %r575, %p212;
	selp.b32 	%r489, %r575, %r557, %p212;
	selp.b32 	%r576, %r558, %r556, %p212;
	shfl.sync.bfly.b32	%r577, %r576, 8, 31, -1;
	selp.b32 	%r496, %r556, %r577, %p212;
	selp.b32 	%r497, %r577, %r558, %p212;
	selp.b32 	%r578, %r562, %r560, %p212;
	shfl.sync.bfly.b32	%r579, %r578, 8, 31, -1;
	selp.b32 	%r504, %r560, %r579, %p212;
	selp.b32 	%r505, %r579, %r562, %p212;
	selp.b32 	%r580, %r563, %r561, %p212;
	shfl.sync.bfly.b32	%r581, %r580, 8, 31, -1;
	selp.b32 	%r512, %r561, %r581, %p212;
	selp.b32 	%r513, %r581, %r563, %p212;
	selp.b32 	%r582, %r567, %r565, %p212;
	shfl.sync.bfly.b32	%r583, %r582, 8, 31, -1;
	selp.b32 	%r520, %r565, %r583, %p212;
	selp.b32 	%r521, %r583, %r567, %p212;
	selp.b32 	%r584, %r568, %r566, %p212;
	shfl.sync.bfly.b32	%r585, %r584, 8, 31, -1;
	selp.b32 	%r528, %r566, %r585, %p212;
	selp.b32 	%r529, %r585, %r568, %p212;
	selp.b32 	%r586, %r572, %r570, %p212;
	shfl.sync.bfly.b32	%r587, %r586, 8, 31, -1;
	selp.b32 	%r536, %r570, %r587, %p212;
	selp.b32 	%r537, %r587, %r572, %p212;
	selp.b32 	%r588, %r573, %r571, %p212;
	shfl.sync.bfly.b32	%r589, %r588, 8, 31, -1;
	selp.b32 	%r544, %r571, %r589, %p212;
	selp.b32 	%r545, %r589, %r573, %p212;
	mov.u32 	%r546, 21520;
	// begin inline asm
	prmt.b32 %r487, %r488, %r489, %r546;
	// end inline asm
	mov.u32 	%r550, 30258;
	// begin inline asm
	prmt.b32 %r491, %r488, %r489, %r550;
	// end inline asm
	// begin inline asm
	prmt.b32 %r495, %r496, %r497, %r546;
	// end inline asm
	// begin inline asm
	prmt.b32 %r499, %r496, %r497, %r550;
	// end inline asm
	// begin inline asm
	prmt.b32 %r503, %r504, %r505, %r546;
	// end inline asm
	// begin inline asm
	prmt.b32 %r507, %r504, %r505, %r550;
	// end inline asm
	// begin inline asm
	prmt.b32 %r511, %r512, %r513, %r546;
	// end inline asm
	// begin inline asm
	prmt.b32 %r515, %r512, %r513, %r550;
	// end inline asm
	// begin inline asm
	prmt.b32 %r519, %r520, %r521, %r546;
	// end inline asm
	// begin inline asm
	prmt.b32 %r523, %r520, %r521, %r550;
	// end inline asm
	// begin inline asm
	prmt.b32 %r527, %r528, %r529, %r546;
	// end inline asm
	// begin inline asm
	prmt.b32 %r531, %r528, %r529, %r550;
	// end inline asm
	// begin inline asm
	prmt.b32 %r535, %r536, %r537, %r546;
	// end inline asm
	// begin inline asm
	prmt.b32 %r539, %r536, %r537, %r550;
	// end inline asm
	// begin inline asm
	prmt.b32 %r543, %r544, %r545, %r546;
	// end inline asm
	// begin inline asm
	prmt.b32 %r547, %r544, %r545, %r550;
	// end inline asm
	st.shared.u32 	[%rd11], %r487;
	st.shared.u32 	[%rd12+128], %r491;
	st.shared.u32 	[%rd12+4], %r495;
	st.shared.u32 	[%rd12+132], %r499;
	st.shared.u32 	[%rd13], %r503;
	st.shared.u32 	[%rd14+128], %r507;
	st.shared.u32 	[%rd14+4], %r511;
	st.shared.u32 	[%rd14+132], %r515;
	st.shared.u32 	[%rd15], %r519;
	st.shared.u32 	[%rd16+128], %r523;
	st.shared.u32 	[%rd16+4], %r527;
	st.shared.u32 	[%rd16+132], %r531;
	st.shared.u32 	[%rd17], %r535;
	st.shared.u32 	[%rd18+128], %r539;
	st.shared.u32 	[%rd18+4], %r543;
	st.shared.u32 	[%rd18+132], %r547;
	bar.sync 	0;
	mov.u32 	%r1155, 256;
	mov.u64 	%rd108, %rd28;
	mov.u64 	%rd109, %rd27;
	mov.u32 	%r1156, %r1151;
	mov.u32 	%r1157, %r1152;
LBB0_110:                               // %L10704
                                        //   Parent Loop BB0_109 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	mov.u32 	%r1152, %r1158;
	mov.u32 	%r1151, %r1157;
	ld.shared.u32 	%r1158, [%rd108];
	// begin inline asm
	mov.b32 %r595, {%rs103, %rs103};
	// end inline asm
	// begin inline asm
	mov.b32 %r606, {%rs77, %rs77};
	// end inline asm
	xor.b32  	%r594, %r1158, -2004318072;
	mov.u32 	%r593, 983055;
	// begin inline asm
	lop3.b32 %r592, %r593, %r594, %r595, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r596, {%rs111, %rs111};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r597, %r595, %r596;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r600, %r592, %r597;
	// end inline asm
	mov.u32 	%r604, 15728880;
	// begin inline asm
	lop3.b32 %r603, %r604, %r594, %r606, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r607, {%rs111, %rs111};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r608, %r606, %r607;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r611, %r603, %r608;
	// end inline asm
	shr.u32 	%r616, %r594, 8;
	// begin inline asm
	lop3.b32 %r614, %r593, %r616, %r595, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r618, {%rs111, %rs111};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r619, %r595, %r618;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r622, %r614, %r619;
	// end inline asm
	// begin inline asm
	lop3.b32 %r625, %r604, %r616, %r606, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r629, {%rs111, %rs111};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r630, %r606, %r629;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r633, %r625, %r630;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r636, %r229;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r638, %r636, %r600;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r641, %r229;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r643, %r641, %r611;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r646, %r229;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r648, %r646, %r622;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r651, %r229;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r653, %r651, %r633;
	// end inline asm
	// begin inline asm
	mov.b32 %r661, {%rs103, %rs103};
	// end inline asm
	// begin inline asm
	mov.b32 %r672, {%rs77, %rs77};
	// end inline asm
	xor.b32  	%r660, %r1156, -2004318072;
	// begin inline asm
	lop3.b32 %r658, %r593, %r660, %r661, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r662, {%rs111, %rs111};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r663, %r661, %r662;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r666, %r658, %r663;
	// end inline asm
	// begin inline asm
	lop3.b32 %r669, %r604, %r660, %r672, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r673, {%rs111, %rs111};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r674, %r672, %r673;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r677, %r669, %r674;
	// end inline asm
	shr.u32 	%r682, %r660, 8;
	// begin inline asm
	lop3.b32 %r680, %r593, %r682, %r661, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r684, {%rs111, %rs111};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r685, %r661, %r684;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r688, %r680, %r685;
	// end inline asm
	// begin inline asm
	lop3.b32 %r691, %r604, %r682, %r672, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r695, {%rs111, %rs111};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r696, %r672, %r695;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r699, %r691, %r696;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r702, %r175, %r666, %r638;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r706, %r175, %r677, %r643;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r710, %r175, %r688, %r648;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r714, %r175, %r699, %r653;
	// end inline asm
	// begin inline asm
	mov.b32 %r723, {%rs103, %rs103};
	// end inline asm
	// begin inline asm
	mov.b32 %r734, {%rs77, %rs77};
	// end inline asm
	xor.b32  	%r722, %r1151, -2004318072;
	// begin inline asm
	lop3.b32 %r720, %r593, %r722, %r723, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r724, {%rs111, %rs111};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r725, %r723, %r724;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r728, %r720, %r725;
	// end inline asm
	// begin inline asm
	lop3.b32 %r731, %r604, %r722, %r734, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r735, {%rs111, %rs111};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r736, %r734, %r735;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r739, %r731, %r736;
	// end inline asm
	shr.u32 	%r744, %r722, 8;
	// begin inline asm
	lop3.b32 %r742, %r593, %r744, %r723, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r746, {%rs111, %rs111};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r747, %r723, %r746;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r750, %r742, %r747;
	// end inline asm
	// begin inline asm
	lop3.b32 %r753, %r604, %r744, %r734, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r757, {%rs111, %rs111};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r758, %r734, %r757;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r761, %r753, %r758;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r764, %r193;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r766, %r764, %r728, %r702;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r770, %r193;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r772, %r770, %r739, %r706;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r776, %r193;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r778, %r776, %r750, %r710;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r782, %r193;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r784, %r782, %r761, %r714;
	// end inline asm
	// begin inline asm
	mov.b32 %r793, {%rs103, %rs103};
	// end inline asm
	// begin inline asm
	mov.b32 %r804, {%rs77, %rs77};
	// end inline asm
	xor.b32  	%r792, %r1152, -2004318072;
	// begin inline asm
	lop3.b32 %r790, %r593, %r792, %r793, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r794, {%rs111, %rs111};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r795, %r793, %r794;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r798, %r790, %r795;
	// end inline asm
	// begin inline asm
	lop3.b32 %r801, %r604, %r792, %r804, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r805, {%rs111, %rs111};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r806, %r804, %r805;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r809, %r801, %r806;
	// end inline asm
	shr.u32 	%r814, %r792, 8;
	// begin inline asm
	lop3.b32 %r812, %r593, %r814, %r793, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r816, {%rs111, %rs111};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r817, %r793, %r816;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r820, %r812, %r817;
	// end inline asm
	// begin inline asm
	lop3.b32 %r823, %r604, %r814, %r804, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r827, {%rs111, %rs111};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r828, %r804, %r827;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r831, %r823, %r828;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r857, %r211, %r798, %r766;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r854, %r211, %r809, %r772;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r866, %r211, %r820, %r778;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r863, %r211, %r831, %r784;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r850, %r260;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r852, %r850, %r854;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r855, %r257, %r857, %r852;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r859, %r260;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r861, %r859, %r863;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r864, %r257, %r866, %r861;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r868, %r260, %r857;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r871, %r257, %r854, %r868;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r875, %r260, %r866;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r878, %r257, %r863, %r875;
	// end inline asm
	mov.u32 	%r953, 0;
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r909, %r906}, {%r300, %r306, %r303, %r309}, {%r855, %r871}, {%r953, %r953};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r918, %r915}, {%r300, %r306, %r303, %r309}, {%r864, %r878}, {%r953, %r953};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r902, %r349;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r904, %r902, %r906;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r907, %r346, %r909, %r904;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r911, %r349;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r913, %r911, %r915;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r916, %r346, %r918, %r913;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r920, %r349, %r909;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r923, %r346, %r906, %r920;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r927, %r349, %r918;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r930, %r346, %r915, %r927;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r934, %r935}, {%r116, %r118, %r117, %r119}, {%r907, %r923}, {%r953, %r953};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r944, %r945}, {%r116, %r118, %r117, %r119}, {%r916, %r930}, {%r953, %r953};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r954, %r12, %r934;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r957, %r12, %r935;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r960, %r12, %r944;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r963, %r12, %r945;
	// end inline asm
	// begin inline asm
	mov.b32 %r966, {%rs99, %rs99};
	// end inline asm
	mov.u16 	%rs88, 18176;
	// begin inline asm
	mov.b32 %r967, {%rs88, %rs88};
	// end inline asm
	// begin inline asm
	max.f16x2 %r968, %r954, %r966;
	// end inline asm
	// begin inline asm
	min.f16x2 %r971, %r968, %r967;
	// end inline asm
	// begin inline asm
	mov.b32 %r974, {%rs99, %rs99};
	// end inline asm
	// begin inline asm
	mov.b32 %r975, {%rs88, %rs88};
	// end inline asm
	// begin inline asm
	max.f16x2 %r976, %r957, %r974;
	// end inline asm
	// begin inline asm
	min.f16x2 %r979, %r976, %r975;
	// end inline asm
	// begin inline asm
	mov.b32 %r982, {%rs99, %rs99};
	// end inline asm
	// begin inline asm
	mov.b32 %r983, {%rs88, %rs88};
	// end inline asm
	// begin inline asm
	max.f16x2 %r984, %r960, %r982;
	// end inline asm
	// begin inline asm
	min.f16x2 %r987, %r984, %r983;
	// end inline asm
	// begin inline asm
	mov.b32 %r990, {%rs99, %rs99};
	// end inline asm
	// begin inline asm
	mov.b32 %r991, {%rs88, %rs88};
	// end inline asm
	// begin inline asm
	max.f16x2 %r992, %r963, %r990;
	// end inline asm
	// begin inline asm
	min.f16x2 %r995, %r992, %r991;
	// end inline asm
	// begin inline asm
	mov.b32 %r1001, {%rs103, %rs103};
	// end inline asm
	// begin inline asm
	mov.b32 %r999, {%rs111, %rs111};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1000, %r1001, %r999;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1003, %r971, %r1000;
	// end inline asm
	// begin inline asm
	mov.b32 %r1006, {%rs111, %rs111};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1007, %r1001, %r1006;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1010, %r979, %r1007;
	// end inline asm
	// begin inline asm
	mov.b32 %r1013, {%rs111, %rs111};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1014, %r1001, %r1013;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1017, %r987, %r1014;
	// end inline asm
	// begin inline asm
	mov.b32 %r1020, {%rs111, %rs111};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1021, %r1001, %r1020;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1024, %r995, %r1021;
	// end inline asm
	mov.u32 	%r1030, 25152;
	// begin inline asm
	prmt.b32 %r1027, %r1003, %r1017, %r1030;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1031, %r1010, %r1024, %r1030;
	// end inline asm
	shl.b32 	%r1038, %r1031, 4;
	mov.u32 	%r1036, 252645135;
	// begin inline asm
	lop3.b32 %r1035, %r1036, %r1027, %r1038, 202;
	// end inline asm
	xor.b32  	%r1039, %r1035, -2004318072;
	st.shared.u32 	[%rd109], %r1039;
	add.s32 	%r1155, %r1155, -16;
	add.s64 	%rd109, %rd109, 2180;
	add.s64 	%rd108, %rd108, 2180;
	setp.eq.s32 	%p213, %r1155, 0;
	mov.u32 	%r1156, %r1151;
	mov.u32 	%r1157, %r1152;
	@%p213 bra 	LBB0_111;
	bra.uni 	LBB0_110;
LBB0_111:                               // %guard_pass6995
                                        //   in Loop: Header=BB0_109 Depth=1
	bar.sync 	0;
	ld.shared.u32 	%r1045, [%rd19];
	ld.shared.u32 	%r1046, [%rd20+128];
	ld.shared.u32 	%r1053, [%rd20+4];
	ld.shared.u32 	%r1054, [%rd20+132];
	ld.shared.u32 	%r1061, [%rd21];
	ld.shared.u32 	%r1062, [%rd22+128];
	ld.shared.u32 	%r1069, [%rd22+4];
	ld.shared.u32 	%r1070, [%rd22+132];
	ld.shared.u32 	%r1077, [%rd23];
	ld.shared.u32 	%r1078, [%rd24+128];
	ld.shared.u32 	%r1085, [%rd24+4];
	ld.shared.u32 	%r1086, [%rd24+132];
	ld.shared.u32 	%r1093, [%rd25];
	ld.shared.u32 	%r1094, [%rd26+128];
	ld.shared.u32 	%r1101, [%rd26+4];
	ld.shared.u32 	%r1102, [%rd26+132];
	// begin inline asm
	prmt.b32 %r1040, %r1045, %r1046, %r546;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1044, %r1045, %r1046, %r550;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1048, %r1053, %r1054, %r546;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1052, %r1053, %r1054, %r550;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1056, %r1061, %r1062, %r546;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1060, %r1061, %r1062, %r550;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1064, %r1069, %r1070, %r546;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1068, %r1069, %r1070, %r550;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1072, %r1077, %r1078, %r546;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1076, %r1077, %r1078, %r550;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1080, %r1085, %r1086, %r546;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1084, %r1085, %r1086, %r550;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1088, %r1093, %r1094, %r546;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1092, %r1093, %r1094, %r550;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1096, %r1101, %r1102, %r546;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1100, %r1101, %r1102, %r550;
	// end inline asm
	selp.b32 	%r1104, %r1044, %r1040, %p212;
	shfl.sync.bfly.b32	%r141, %r1104, 8, 31, -1;
	selp.b32 	%r1105, %r1052, %r1048, %p212;
	shfl.sync.bfly.b32	%r142, %r1105, 8, 31, -1;
	selp.b32 	%r1106, %r1060, %r1056, %p212;
	shfl.sync.bfly.b32	%r143, %r1106, 8, 31, -1;
	selp.b32 	%r1107, %r1068, %r1064, %p212;
	shfl.sync.bfly.b32	%r144, %r1107, 8, 31, -1;
	selp.b32 	%r1108, %r1076, %r1072, %p212;
	shfl.sync.bfly.b32	%r145, %r1108, 8, 31, -1;
	selp.b32 	%r1109, %r1084, %r1080, %p212;
	shfl.sync.bfly.b32	%r146, %r1109, 8, 31, -1;
	selp.b32 	%r1110, %r1092, %r1088, %p212;
	shfl.sync.bfly.b32	%r147, %r1110, 8, 31, -1;
	selp.b32 	%r1111, %r1100, %r1096, %p212;
	shfl.sync.bfly.b32	%r148, %r1111, 8, 31, -1;
	setp.eq.s32 	%p215, %r92, 0;
	@%p215 bra 	LBB0_113;
// %bb.112:                             // %L16622
                                        //   in Loop: Header=BB0_109 Depth=1
	selp.b32 	%r1112, %r148, %r1100, %p212;
	selp.b32 	%r1113, %r1096, %r148, %p212;
	selp.b32 	%r1114, %r147, %r1092, %p212;
	selp.b32 	%r1115, %r1088, %r147, %p212;
	selp.b32 	%r1116, %r146, %r1084, %p212;
	selp.b32 	%r1117, %r1080, %r146, %p212;
	selp.b32 	%r1118, %r145, %r1076, %p212;
	selp.b32 	%r1119, %r1072, %r145, %p212;
	selp.b32 	%r1120, %r144, %r1068, %p212;
	selp.b32 	%r1121, %r1064, %r144, %p212;
	selp.b32 	%r1122, %r143, %r1060, %p212;
	selp.b32 	%r1123, %r1056, %r143, %p212;
	selp.b32 	%r1124, %r142, %r1052, %p212;
	selp.b32 	%r1125, %r1048, %r142, %p212;
	selp.b32 	%r1126, %r141, %r1044, %p212;
	selp.b32 	%r1127, %r1040, %r141, %p212;
	shl.b32 	%r1128, %r92, 12;
	or.b32  	%r1129, %r1128, %r123;
	or.b32  	%r1130, %r1129, %r124;
	add.s32 	%r1131, %r1130, -196608;
	mul.wide.s32 	%rd100, %r1131, 4;
	add.s64 	%rd101, %rd3, %rd100;
	st.global.v4.u32 	[%rd101], {%r1127, %r1125, %r1126, %r1124};
	or.b32  	%r1132, %r1130, 262144;
	add.s32 	%r1133, %r1132, -196608;
	mul.wide.s32 	%rd102, %r1133, 4;
	add.s64 	%rd103, %rd3, %rd102;
	st.global.v4.u32 	[%rd103], {%r1123, %r1121, %r1122, %r1120};
	or.b32  	%r1134, %r1130, 524288;
	add.s32 	%r1135, %r1134, -196608;
	mul.wide.s32 	%rd104, %r1135, 4;
	add.s64 	%rd105, %rd3, %rd104;
	st.global.v4.u32 	[%rd105], {%r1119, %r1117, %r1118, %r1116};
	or.b32  	%r1136, %r1130, 786432;
	add.s32 	%r1137, %r1136, -196608;
	mul.wide.s32 	%rd106, %r1137, 4;
	add.s64 	%rd107, %rd3, %rd106;
	st.global.v4.u32 	[%rd107], {%r1115, %r1113, %r1114, %r1112};
	bra.uni 	LBB0_113;
LBB0_114:                               // %L17452
	st.global.u32 	[%rd4], %r953;
	ret;
LBB0_1:                                 // %L8
	mov.u64 	%rd38, exception1;
	cvta.global.u64 	%rd39, %rd38;
	{ // callseq 0, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd39;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 0
	{ // callseq 1, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd29;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 1
	// begin inline asm
	exit;
	// end inline asm
LBB0_3:                                 // %L163
	mov.u32 	%r154, 2;
	st.global.u32 	[%rd4], %r154;
	mov.u64 	%rd41, exception1553;
	cvta.global.u64 	%rd42, %rd41;
	{ // callseq 2, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd42;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 2
	{ // callseq 3, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd29;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 3
	// begin inline asm
	exit;
	// end inline asm
                                        // -- End function
}
