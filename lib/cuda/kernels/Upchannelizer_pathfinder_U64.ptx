// PTX kernel code for the CUDA upchannelizer
// This file has been generated automatically by `upchan.jl`.
// Do not modify this file, your changes will be lost.

// PTX CompilerJob of MethodInstance for upchan(::Int32, ::Int32, ::Int32, ::Int32, ::Int32, ::Int32, ::CuDeviceVector{Float16x2, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int32, 1}) for sm_86, minthreads=512, blocks_per_sm=2

//
// Generated by LLVM NVPTX Back-End
//

.version 8.2
.target sm_86
.address_size 64

	// .globl	_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE // -- Begin function _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE
.func gpu_report_exception
(
	.param .b64 gpu_report_exception_param_0
)
.noreturn
{
	trap;
}
.func gpu_signal_exception
(
	.param .align 8 .b8 gpu_signal_exception_param_0[16]
)
.noreturn
{
	trap;
}
.extern .shared .align 32 .b8 shmem[];
.global .align 1 .b8 exception3329[6] = {101, 114, 114, 111, 114, 0};
.global .align 1 .b8 exception13349[10] = {101, 120, 99, 101, 112, 116, 105, 111, 110, 0};
                                        // @_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE
.visible .entry _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE(
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_0[16],
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_1,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_2,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_3,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_4,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_5,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_6,
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_7[32],
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_8[32],
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_9[32],
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_10[32]
)
.reqntid 512, 1, 1
.minnctapersm 2
{
	.reg .pred 	%p<234>;
	.reg .b16 	%rs<1191>;
	.reg .b32 	%r<8005>;
	.reg .f32 	%f<832>;
	.reg .b64 	%rd<158>;

// %bb.0:                               // %conversion
	ld.param.u32 	%r166, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_0+8];
	ld.param.u64 	%rd43, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_0];
	// begin inline asm
	mov.u32 %r173, %dynamic_smem_size;
	// end inline asm
	setp.gt.u32 	%p1, %r173, 66815;
	@%p1 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:                              // %L19
	ld.param.u64 	%rd44, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_10];
	ld.param.u32 	%r167, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_1];
	mov.u32 	%r1, %tid.x;
	mov.u32 	%r2, %tid.y;
	shl.b32 	%r3, %r2, 5;
	mov.u32 	%r4, %ctaid.x;
	shl.b32 	%r174, %r4, 9;
	or.b32  	%r175, %r3, %r1;
	or.b32  	%r176, %r175, %r174;
	mul.wide.u32 	%rd50, %r176, 4;
	add.s64 	%rd4, %rd44, %rd50;
	mov.u32 	%r177, 1;
	st.global.u32 	[%rd4], %r177;
	setp.gt.u32 	%p2, %r167, 32767;
	@%p2 bra 	$L__BB0_7;
// %bb.3:                               // %L119
	ld.param.u32 	%r168, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_2];
	setp.lt.s32 	%p3, %r168, %r167;
	setp.gt.s32 	%p4, %r168, 65535;
	or.pred  	%p5, %p3, %p4;
	@%p5 bra 	$L__BB0_7;
// %bb.4:                               // %L126
	ld.param.u32 	%r169, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_3];
	sub.s32 	%r178, %r168, %r167;
	and.b32  	%r179, %r178, 255;
	setp.ne.s32 	%p6, %r179, 0;
	setp.gt.u32 	%p7, %r169, 511;
	or.pred  	%p8, %p6, %p7;
	@%p8 bra 	$L__BB0_7;
// %bb.5:                               // %L137
	ld.param.u32 	%r170, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_4];
	setp.lt.s32 	%p9, %r170, %r169;
	setp.gt.s32 	%p10, %r170, 1023;
	or.pred  	%p11, %p9, %p10;
	@%p11 bra 	$L__BB0_7;
// %bb.6:                               // %L144
	not.b32 	%r180, %r169;
	add.s32 	%r181, %r180, %r170;
	and.b32  	%r182, %r181, 3;
	setp.eq.s32 	%p12, %r182, 0;
	@%p12 bra 	$L__BB0_8;
	bra.uni 	$L__BB0_7;
$L__BB0_8:                              // %L260
	ld.param.u32 	%r171, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_5];
	setp.lt.s32 	%p13, %r171, 0;
	@%p13 bra 	$L__BB0_10;
// %bb.9:                               // %L262
	ld.param.u32 	%r172, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_6];
	setp.le.s32 	%p14, %r171, %r172;
	setp.lt.s32 	%p15, %r172, 385;
	and.pred  	%p16, %p14, %p15;
	@%p16 bra 	$L__BB0_11;
	bra.uni 	$L__BB0_10;
$L__BB0_11:                             // %pass177
	bfe.u32 	%r89, %r1, 2, 1;
	shr.u32 	%r90, %r1, 4;
	shl.b32 	%r188, %r90, 1;
	shl.b32 	%r189, %r89, 2;
	shl.b32 	%r190, %r1, 3;
	and.b32  	%r191, %r190, 24;
	or.b32  	%r192, %r189, %r191;
	or.b32  	%r193, %r188, %r192;
	bfe.u32 	%r194, %r1, 3, 1;
	or.b32  	%r92, %r194, %r193;
	or.b32  	%r93, %r92, 32;
	mov.f32 	%f145, 0f40000000;
	mov.f32 	%f146, 0f437F0000;
	div.approx.f32 	%f85, %f146, %f145;
	cvt.rn.f32.s32 	%f147, %r92;
	sub.f32 	%f148, %f147, %f85;
	mov.f32 	%f177, 0f42800000;
	div.approx.f32 	%f87, %f148, %f177;
	setp.ne.f32 	%p22, %f87, 0f00000000;
	mov.f32 	%f807, 0f3F800000;
	mov.f32 	%f800, %f807;
	@%p22 bra 	$L__BB0_12;
	bra.uni 	$L__BB0_13;
$L__BB0_12:                             // %L603
	sin.approx.f32 	%f178, %f87;
	div.approx.f32 	%f800, %f178, %f87;
$L__BB0_13:                             // %L606
	cvt.rn.f32.s32 	%f181, %r93;
	sub.f32 	%f182, %f181, %f85;
	div.approx.f32 	%f5, %f182, %f177;
	setp.eq.f32 	%p28, %f5, 0f00000000;
	mov.f32 	%f801, %f807;
	@%p28 bra 	$L__BB0_15;
// %bb.14:                              // %L623
	sin.approx.f32 	%f212, %f5;
	div.approx.f32 	%f801, %f212, %f5;
$L__BB0_15:                             // %L626
	or.b32  	%r212, %r92, 64;
	or.b32  	%r6, %r92, 96;
	cvt.rn.f32.s32 	%f216, %r212;
	sub.f32 	%f217, %f216, %f85;
	div.approx.f32 	%f9, %f217, %f177;
	setp.eq.f32 	%p34, %f9, 0f00000000;
	mov.f32 	%f802, %f807;
	@%p34 bra 	$L__BB0_17;
// %bb.16:                              // %L705
	sin.approx.f32 	%f247, %f9;
	div.approx.f32 	%f802, %f247, %f9;
$L__BB0_17:                             // %L708
	cvt.rn.f32.s32 	%f250, %r6;
	sub.f32 	%f251, %f250, %f85;
	div.approx.f32 	%f14, %f251, %f177;
	setp.eq.f32 	%p40, %f14, 0f00000000;
	mov.f32 	%f803, %f807;
	@%p40 bra 	$L__BB0_19;
// %bb.18:                              // %L725
	sin.approx.f32 	%f281, %f14;
	div.approx.f32 	%f803, %f281, %f14;
$L__BB0_19:                             // %L728
	or.b32  	%r230, %r92, 128;
	or.b32  	%r8, %r92, 160;
	cvt.rn.f32.s32 	%f285, %r230;
	sub.f32 	%f286, %f285, %f85;
	div.approx.f32 	%f18, %f286, %f177;
	setp.eq.f32 	%p46, %f18, 0f00000000;
	mov.f32 	%f804, %f807;
	@%p46 bra 	$L__BB0_21;
// %bb.20:                              // %L807
	sin.approx.f32 	%f316, %f18;
	div.approx.f32 	%f804, %f316, %f18;
$L__BB0_21:                             // %L810
	cvt.rn.f32.s32 	%f319, %r8;
	sub.f32 	%f320, %f319, %f85;
	div.approx.f32 	%f23, %f320, %f177;
	setp.eq.f32 	%p52, %f23, 0f00000000;
	mov.f32 	%f805, %f807;
	@%p52 bra 	$L__BB0_23;
// %bb.22:                              // %L827
	sin.approx.f32 	%f350, %f23;
	div.approx.f32 	%f805, %f350, %f23;
$L__BB0_23:                             // %L830
	or.b32  	%r248, %r92, 192;
	or.b32  	%r10, %r92, 224;
	cvt.rn.f32.s32 	%f354, %r248;
	sub.f32 	%f355, %f354, %f85;
	div.approx.f32 	%f27, %f355, %f177;
	setp.eq.f32 	%p58, %f27, 0f00000000;
	mov.f32 	%f806, %f807;
	@%p58 bra 	$L__BB0_25;
// %bb.24:                              // %L909
	sin.approx.f32 	%f385, %f27;
	div.approx.f32 	%f806, %f385, %f27;
$L__BB0_25:                             // %L912
	shr.u32 	%r88, %r1, 1;
	shr.u32 	%r91, %r1, 3;
	cvt.rn.f32.s32 	%f388, %r10;
	sub.f32 	%f389, %f388, %f85;
	div.approx.f32 	%f32, %f389, %f177;
	setp.eq.f32 	%p64, %f32, 0f00000000;
	@%p64 bra 	$L__BB0_27;
// %bb.26:                              // %L929
	sin.approx.f32 	%f419, %f32;
	div.approx.f32 	%f807, %f419, %f32;
$L__BB0_27:                             // %L932
	and.b32  	%r292, %r1, 3;
	and.b32  	%r293, %r91, 2;
	and.b32  	%r294, %r88, 4;
	or.b32  	%r295, %r89, %r293;
	or.b32  	%r14, %r295, %r294;
	mul.lo.s32 	%r296, %r292, %r14;
	shl.b32 	%r297, %r296, 1;
	neg.s32 	%r298, %r297;
	cvt.rn.f32.s32 	%f35, %r298;
	mov.f32 	%f490, 0f41000000;
	div.approx.f32 	%f36, %f35, %f490;
	abs.f32 	%f830, %f36;
	setp.lt.f32 	%p79, %f830, 0f40000000;
	setp.gtu.f32 	%p232, %f830, 0f4B800000;
	mov.f32 	%f822, %f830;
	@%p79 bra 	$L__BB0_98;
// %bb.28:
	@%p232 bra 	$L__BB0_94;
	bra.uni 	$L__BB0_29;
$L__BB0_94:
	mov.b32 	%r95, %f830;
	and.b32  	%r299, %r95, 8388607;
	or.b32  	%r7985, %r299, 1065353216;
	mov.b32 	%f821, %r7985;
	add.s32 	%r300, %r95, -1073741824;
	and.b32  	%r7986, %r300, -8388608;
	setp.eq.s32 	%p86, %r7986, 0;
	@%p86 bra 	$L__BB0_97;
// %bb.95:                              // %__nv_fmaf_rn.exit4.i.i.i923.preheader
	mov.f32 	%f500, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f499,%f500;
	// end inline asm
$L__BB0_96:                             // %__nv_fmaf_rn.exit4.i.i.i923
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r301, %r7986, 192937984;
	add.s32 	%r302, %r7985, %r301;
	mov.b32 	%f501, %r302;
	mul.f32 	%f502, %f499, %f501;
	sub.f32 	%f503, %f501, %f502;
	fma.rn.f32 	%f504, %f503, %f499, %f502;
	sub.f32 	%f505, %f501, %f504;
	fma.rz.f32 	%f506, %f505, %f499, %f504;
	cvt.rzi.f32.f32 	%f507, %f506;
	sub.f32 	%f821, %f501, %f507;
	sub.s32 	%r7986, %r7986, %r301;
	mov.b32 	%r7985, %f821;
	setp.ne.s32 	%p87, %r7986, 0;
	setp.ne.s32 	%p88, %r7985, 0;
	and.pred  	%p89, %p87, %p88;
	@%p89 bra 	$L__BB0_96;
$L__BB0_97:                             // %__internal_fmodf_slowpath_mod.exit.i.i925
	setp.gt.u32 	%p90, %r95, 2139095039;
	selp.f32 	%f508, 0f7FFFFFFF, 0f4B800000, %p90;
	mul.f32 	%f509, %f821, 0f34000000;
	mul.f32 	%f822, %f508, %f509;
	bra.uni 	$L__BB0_98;
$L__BB0_29:                             // %__nv_fast_fdividef.exit.i.i.i902
	div.approx.f32 	%f492, %f830, %f145;
	cvt.rzi.f32.f32 	%f820, %f492;
	fma.rn.f32 	%f89, %f820, 0fC0000000, %f830;
	mov.b32 	%r94, %f89;
	setp.lt.u32 	%p81, %r94, 1073741824;
	@%p81 bra 	$L__BB0_93;
// %bb.30:
	setp.lt.u32 	%p82, %r94, -2147483647;
	@%p82 bra 	$L__BB0_91;
// %bb.31:
	add.f32 	%f497, %f820, 0fBF800000;
	setp.lt.f32 	%p85, %f89, 0fC0000000;
	add.f32 	%f498, %f497, 0fBF800000;
	selp.f32 	%f820, %f498, %f497, %p85;
	bra.uni 	$L__BB0_93;
$L__BB0_91:
	add.f32 	%f820, %f820, 0f3F800000;
	setp.ltu.f32 	%p83, %f89, 0f40800000;
	@%p83 bra 	$L__BB0_93;
// %bb.92:                              // %__nv_fmaf_rn.exit.i.i.i906
	add.f32 	%f493, %f820, 0f3F800000;
	fma.rn.f32 	%f495, %f145, 0fC0400000, %f89;
	setp.ge.f32 	%p84, %f495, 0f00000000;
	add.f32 	%f496, %f493, 0f3F800000;
	selp.f32 	%f820, %f496, %f493, %p84;
$L__BB0_93:                             // %__internal_fmodf_fastpath_quot.exit.i.i909
	fma.rn.f32 	%f822, %f820, 0fC0000000, %f830;
$L__BB0_98:                             // %__internal_fmodf_kernel.exit.i928
	shl.b32 	%r82, %r1, 1;
	abs.f32 	%f510, %f822;
	setp.gtu.f32 	%p91, %f510, 0f7F800000;
	mov.b32 	%r303, %f36;
	and.b32  	%r102, %r303, -2147483648;
	@%p91 bra 	$L__BB0_100;
// %bb.99:
	mov.b32 	%r304, %f822;
	or.b32  	%r305, %r102, %r304;
	mov.b32 	%f822, %r305;
$L__BB0_100:                            // %__nv_fmodf.exit929
	and.b32  	%r314, %r82, 6;
	mov.u32 	%r315, -8;
	sub.s32 	%r316, %r315, %r314;
	mul.lo.s32 	%r317, %r14, %r316;
	cvt.rn.f32.s32 	%f105, %r317;
	div.approx.f32 	%f106, %f105, %f490;
	abs.f32 	%f818, %f106;
	setp.lt.f32 	%p99, %f818, 0f40000000;
	setp.gtu.f32 	%p233, %f818, 0f4B800000;
	mov.f32 	%f810, %f818;
	@%p99 bra 	$L__BB0_43;
// %bb.32:
	@%p233 bra 	$L__BB0_39;
	bra.uni 	$L__BB0_33;
$L__BB0_39:
	mov.b32 	%r16, %f818;
	and.b32  	%r318, %r16, 8388607;
	or.b32  	%r7965, %r318, 1065353216;
	mov.b32 	%f809, %r7965;
	add.s32 	%r319, %r16, -1073741824;
	and.b32  	%r7966, %r319, -8388608;
	setp.eq.s32 	%p106, %r7966, 0;
	@%p106 bra 	$L__BB0_42;
// %bb.40:                              // %__nv_fmaf_rn.exit4.i.i.i.preheader
	mov.f32 	%f551, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f550,%f551;
	// end inline asm
$L__BB0_41:                             // %__nv_fmaf_rn.exit4.i.i.i
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r320, %r7966, 192937984;
	add.s32 	%r321, %r7965, %r320;
	mov.b32 	%f552, %r321;
	mul.f32 	%f553, %f550, %f552;
	sub.f32 	%f554, %f552, %f553;
	fma.rn.f32 	%f555, %f554, %f550, %f553;
	sub.f32 	%f556, %f552, %f555;
	fma.rz.f32 	%f557, %f556, %f550, %f555;
	cvt.rzi.f32.f32 	%f558, %f557;
	sub.f32 	%f809, %f552, %f558;
	sub.s32 	%r7966, %r7966, %r320;
	mov.b32 	%r7965, %f809;
	setp.ne.s32 	%p107, %r7966, 0;
	setp.ne.s32 	%p108, %r7965, 0;
	and.pred  	%p109, %p107, %p108;
	@%p109 bra 	$L__BB0_41;
$L__BB0_42:                             // %__internal_fmodf_slowpath_mod.exit.i.i
	setp.gt.u32 	%p110, %r16, 2139095039;
	selp.f32 	%f559, 0f7FFFFFFF, 0f4B800000, %p110;
	mul.f32 	%f560, %f809, 0f34000000;
	mul.f32 	%f810, %f559, %f560;
	bra.uni 	$L__BB0_43;
$L__BB0_33:                             // %__nv_fast_fdividef.exit.i.i.i
	div.approx.f32 	%f543, %f818, %f145;
	cvt.rzi.f32.f32 	%f808, %f543;
	fma.rn.f32 	%f39, %f808, 0fC0000000, %f818;
	mov.b32 	%r15, %f39;
	setp.lt.u32 	%p101, %r15, 1073741824;
	@%p101 bra 	$L__BB0_38;
// %bb.34:
	setp.lt.u32 	%p102, %r15, -2147483647;
	@%p102 bra 	$L__BB0_36;
// %bb.35:
	add.f32 	%f548, %f808, 0fBF800000;
	setp.lt.f32 	%p105, %f39, 0fC0000000;
	add.f32 	%f549, %f548, 0fBF800000;
	selp.f32 	%f808, %f549, %f548, %p105;
	bra.uni 	$L__BB0_38;
$L__BB0_36:
	add.f32 	%f808, %f808, 0f3F800000;
	setp.ltu.f32 	%p103, %f39, 0f40800000;
	@%p103 bra 	$L__BB0_38;
// %bb.37:                              // %__nv_fmaf_rn.exit.i.i.i
	add.f32 	%f544, %f808, 0f3F800000;
	fma.rn.f32 	%f546, %f145, 0fC0400000, %f39;
	setp.ge.f32 	%p104, %f546, 0f00000000;
	add.f32 	%f547, %f544, 0f3F800000;
	selp.f32 	%f808, %f547, %f544, %p104;
$L__BB0_38:                             // %__internal_fmodf_fastpath_quot.exit.i.i
	fma.rn.f32 	%f810, %f808, 0fC0000000, %f818;
$L__BB0_43:                             // %__internal_fmodf_kernel.exit.i
	abs.f32 	%f561, %f810;
	setp.gtu.f32 	%p111, %f561, 0f7F800000;
	mov.b32 	%r322, %f106;
	and.b32  	%r23, %r322, -2147483648;
	@%p111 bra 	$L__BB0_45;
// %bb.44:
	mov.b32 	%r323, %f810;
	or.b32  	%r324, %r23, %r323;
	mov.b32 	%f810, %r324;
$L__BB0_45:                             // %__nv_fmodf.exit
	div.approx.f32 	%f53, %f35, %f177;
	abs.f32 	%f826, %f53;
	setp.lt.f32 	%p119, %f826, 0f40000000;
	@%p119 bra 	$L__BB0_108;
// %bb.46:
	setp.gtu.f32 	%p120, %f826, 0f4B800000;
	@%p120 bra 	$L__BB0_104;
	bra.uni 	$L__BB0_47;
$L__BB0_104:
	mov.b32 	%r104, %f826;
	and.b32  	%r345, %r104, 8388607;
	or.b32  	%r7987, %r345, 1065353216;
	mov.b32 	%f825, %r7987;
	add.s32 	%r346, %r104, -1073741824;
	and.b32  	%r7988, %r346, -8388608;
	setp.eq.s32 	%p126, %r7988, 0;
	@%p126 bra 	$L__BB0_107;
// %bb.105:                             // %__nv_fmaf_rn.exit4.i.i.i954.preheader
	mov.f32 	%f604, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f603,%f604;
	// end inline asm
$L__BB0_106:                            // %__nv_fmaf_rn.exit4.i.i.i954
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r347, %r7988, 192937984;
	add.s32 	%r348, %r7987, %r347;
	mov.b32 	%f605, %r348;
	mul.f32 	%f606, %f603, %f605;
	sub.f32 	%f607, %f605, %f606;
	fma.rn.f32 	%f608, %f607, %f603, %f606;
	sub.f32 	%f609, %f605, %f608;
	fma.rz.f32 	%f610, %f609, %f603, %f608;
	cvt.rzi.f32.f32 	%f611, %f610;
	sub.f32 	%f825, %f605, %f611;
	sub.s32 	%r7988, %r7988, %r347;
	mov.b32 	%r7987, %f825;
	setp.ne.s32 	%p127, %r7988, 0;
	setp.ne.s32 	%p128, %r7987, 0;
	and.pred  	%p129, %p127, %p128;
	@%p129 bra 	$L__BB0_106;
$L__BB0_107:                            // %__internal_fmodf_slowpath_mod.exit.i.i956
	setp.gt.u32 	%p130, %r104, 2139095039;
	selp.f32 	%f612, 0f7FFFFFFF, 0f4B800000, %p130;
	mul.f32 	%f613, %f825, 0f34000000;
	mul.f32 	%f826, %f612, %f613;
	bra.uni 	$L__BB0_108;
$L__BB0_47:                             // %__nv_fast_fdividef.exit.i.i.i933
	div.approx.f32 	%f596, %f826, %f145;
	cvt.rzi.f32.f32 	%f824, %f596;
	fma.rn.f32 	%f109, %f824, 0fC0000000, %f826;
	mov.b32 	%r103, %f109;
	setp.lt.u32 	%p121, %r103, 1073741824;
	@%p121 bra 	$L__BB0_103;
// %bb.48:
	setp.lt.u32 	%p122, %r103, -2147483647;
	@%p122 bra 	$L__BB0_101;
// %bb.49:
	add.f32 	%f601, %f824, 0fBF800000;
	setp.lt.f32 	%p125, %f109, 0fC0000000;
	add.f32 	%f602, %f601, 0fBF800000;
	selp.f32 	%f824, %f602, %f601, %p125;
	bra.uni 	$L__BB0_103;
$L__BB0_101:
	add.f32 	%f824, %f824, 0f3F800000;
	setp.ltu.f32 	%p123, %f109, 0f40800000;
	@%p123 bra 	$L__BB0_103;
// %bb.102:                             // %__nv_fmaf_rn.exit.i.i.i937
	add.f32 	%f597, %f824, 0f3F800000;
	fma.rn.f32 	%f599, %f145, 0fC0400000, %f109;
	setp.ge.f32 	%p124, %f599, 0f00000000;
	add.f32 	%f600, %f597, 0f3F800000;
	selp.f32 	%f824, %f600, %f597, %p124;
$L__BB0_103:                            // %__internal_fmodf_fastpath_quot.exit.i.i940
	fma.rn.f32 	%f826, %f824, 0fC0000000, %f826;
$L__BB0_108:                            // %__internal_fmodf_kernel.exit.i959
	abs.f32 	%f614, %f826;
	setp.gtu.f32 	%p131, %f614, 0f7F800000;
	@%p131 bra 	$L__BB0_110;
// %bb.109:
	mov.b32 	%r349, %f53;
	and.b32  	%r350, %r349, -2147483648;
	mov.b32 	%r351, %f826;
	or.b32  	%r352, %r350, %r351;
	mov.b32 	%f826, %r352;
$L__BB0_110:                            // %__nv_fmodf.exit960
	div.approx.f32 	%f125, %f105, %f177;
	abs.f32 	%f814, %f125;
	setp.lt.f32 	%p139, %f814, 0f40000000;
	@%p139 bra 	$L__BB0_61;
// %bb.50:
	setp.gtu.f32 	%p140, %f814, 0f4B800000;
	@%p140 bra 	$L__BB0_57;
	bra.uni 	$L__BB0_51;
$L__BB0_57:
	mov.b32 	%r29, %f814;
	and.b32  	%r361, %r29, 8388607;
	or.b32  	%r7967, %r361, 1065353216;
	mov.b32 	%f813, %r7967;
	add.s32 	%r362, %r29, -1073741824;
	and.b32  	%r7968, %r362, -8388608;
	setp.eq.s32 	%p146, %r7968, 0;
	@%p146 bra 	$L__BB0_60;
// %bb.58:                              // %__nv_fmaf_rn.exit4.i.i.i861.preheader
	mov.f32 	%f655, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f654,%f655;
	// end inline asm
$L__BB0_59:                             // %__nv_fmaf_rn.exit4.i.i.i861
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r363, %r7968, 192937984;
	add.s32 	%r364, %r7967, %r363;
	mov.b32 	%f656, %r364;
	mul.f32 	%f657, %f654, %f656;
	sub.f32 	%f658, %f656, %f657;
	fma.rn.f32 	%f659, %f658, %f654, %f657;
	sub.f32 	%f660, %f656, %f659;
	fma.rz.f32 	%f661, %f660, %f654, %f659;
	cvt.rzi.f32.f32 	%f662, %f661;
	sub.f32 	%f813, %f656, %f662;
	sub.s32 	%r7968, %r7968, %r363;
	mov.b32 	%r7967, %f813;
	setp.ne.s32 	%p147, %r7968, 0;
	setp.ne.s32 	%p148, %r7967, 0;
	and.pred  	%p149, %p147, %p148;
	@%p149 bra 	$L__BB0_59;
$L__BB0_60:                             // %__internal_fmodf_slowpath_mod.exit.i.i863
	setp.gt.u32 	%p150, %r29, 2139095039;
	selp.f32 	%f663, 0f7FFFFFFF, 0f4B800000, %p150;
	mul.f32 	%f664, %f813, 0f34000000;
	mul.f32 	%f814, %f663, %f664;
	bra.uni 	$L__BB0_61;
$L__BB0_51:                             // %__nv_fast_fdividef.exit.i.i.i840
	div.approx.f32 	%f647, %f814, %f145;
	cvt.rzi.f32.f32 	%f812, %f647;
	fma.rn.f32 	%f56, %f812, 0fC0000000, %f814;
	mov.b32 	%r28, %f56;
	setp.lt.u32 	%p141, %r28, 1073741824;
	@%p141 bra 	$L__BB0_56;
// %bb.52:
	setp.lt.u32 	%p142, %r28, -2147483647;
	@%p142 bra 	$L__BB0_54;
// %bb.53:
	add.f32 	%f652, %f812, 0fBF800000;
	setp.lt.f32 	%p145, %f56, 0fC0000000;
	add.f32 	%f653, %f652, 0fBF800000;
	selp.f32 	%f812, %f653, %f652, %p145;
	bra.uni 	$L__BB0_56;
$L__BB0_54:
	add.f32 	%f812, %f812, 0f3F800000;
	setp.ltu.f32 	%p143, %f56, 0f40800000;
	@%p143 bra 	$L__BB0_56;
// %bb.55:                              // %__nv_fmaf_rn.exit.i.i.i844
	add.f32 	%f648, %f812, 0f3F800000;
	fma.rn.f32 	%f650, %f145, 0fC0400000, %f56;
	setp.ge.f32 	%p144, %f650, 0f00000000;
	add.f32 	%f651, %f648, 0f3F800000;
	selp.f32 	%f812, %f651, %f648, %p144;
$L__BB0_56:                             // %__internal_fmodf_fastpath_quot.exit.i.i847
	fma.rn.f32 	%f814, %f812, 0fC0000000, %f814;
$L__BB0_61:                             // %__internal_fmodf_kernel.exit.i866
	abs.f32 	%f665, %f814;
	setp.gtu.f32 	%p151, %f665, 0f7F800000;
	@%p151 bra 	$L__BB0_63;
// %bb.62:
	mov.b32 	%r365, %f125;
	and.b32  	%r366, %r365, -2147483648;
	mov.b32 	%r367, %f814;
	or.b32  	%r368, %r366, %r367;
	mov.b32 	%f814, %r368;
$L__BB0_63:                             // %__nv_fmodf.exit867
	@%p79 bra 	$L__BB0_118;
// %bb.64:
	@%p232 bra 	$L__BB0_114;
	bra.uni 	$L__BB0_65;
$L__BB0_114:
	mov.b32 	%r112, %f830;
	and.b32  	%r383, %r112, 8388607;
	or.b32  	%r7989, %r383, 1065353216;
	mov.b32 	%f829, %r7989;
	add.s32 	%r384, %r112, -1073741824;
	and.b32  	%r7990, %r384, -8388608;
	setp.eq.s32 	%p166, %r7990, 0;
	@%p166 bra 	$L__BB0_117;
// %bb.115:                             // %__nv_fmaf_rn.exit4.i.i.i985.preheader
	mov.f32 	%f707, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f706,%f707;
	// end inline asm
$L__BB0_116:                            // %__nv_fmaf_rn.exit4.i.i.i985
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r385, %r7990, 192937984;
	add.s32 	%r386, %r7989, %r385;
	mov.b32 	%f708, %r386;
	mul.f32 	%f709, %f706, %f708;
	sub.f32 	%f710, %f708, %f709;
	fma.rn.f32 	%f711, %f710, %f706, %f709;
	sub.f32 	%f712, %f708, %f711;
	fma.rz.f32 	%f713, %f712, %f706, %f711;
	cvt.rzi.f32.f32 	%f714, %f713;
	sub.f32 	%f829, %f708, %f714;
	sub.s32 	%r7990, %r7990, %r385;
	mov.b32 	%r7989, %f829;
	setp.ne.s32 	%p167, %r7990, 0;
	setp.ne.s32 	%p168, %r7989, 0;
	and.pred  	%p169, %p167, %p168;
	@%p169 bra 	$L__BB0_116;
$L__BB0_117:                            // %__internal_fmodf_slowpath_mod.exit.i.i987
	setp.gt.u32 	%p170, %r112, 2139095039;
	selp.f32 	%f715, 0f7FFFFFFF, 0f4B800000, %p170;
	mul.f32 	%f716, %f829, 0f34000000;
	mul.f32 	%f830, %f715, %f716;
	bra.uni 	$L__BB0_118;
$L__BB0_65:                             // %__nv_fast_fdividef.exit.i.i.i964
	div.approx.f32 	%f699, %f830, %f145;
	cvt.rzi.f32.f32 	%f828, %f699;
	fma.rn.f32 	%f128, %f828, 0fC0000000, %f830;
	mov.b32 	%r111, %f128;
	setp.lt.u32 	%p161, %r111, 1073741824;
	@%p161 bra 	$L__BB0_113;
// %bb.66:
	setp.lt.u32 	%p162, %r111, -2147483647;
	@%p162 bra 	$L__BB0_111;
// %bb.67:
	add.f32 	%f704, %f828, 0fBF800000;
	setp.lt.f32 	%p165, %f128, 0fC0000000;
	add.f32 	%f705, %f704, 0fBF800000;
	selp.f32 	%f828, %f705, %f704, %p165;
	bra.uni 	$L__BB0_113;
$L__BB0_111:
	add.f32 	%f828, %f828, 0f3F800000;
	setp.ltu.f32 	%p163, %f128, 0f40800000;
	@%p163 bra 	$L__BB0_113;
// %bb.112:                             // %__nv_fmaf_rn.exit.i.i.i968
	add.f32 	%f700, %f828, 0f3F800000;
	fma.rn.f32 	%f702, %f145, 0fC0400000, %f128;
	setp.ge.f32 	%p164, %f702, 0f00000000;
	add.f32 	%f703, %f700, 0f3F800000;
	selp.f32 	%f828, %f703, %f700, %p164;
$L__BB0_113:                            // %__internal_fmodf_fastpath_quot.exit.i.i971
	fma.rn.f32 	%f830, %f828, 0fC0000000, %f830;
$L__BB0_118:                            // %__internal_fmodf_kernel.exit.i990
	abs.f32 	%f717, %f830;
	setp.gtu.f32 	%p171, %f717, 0f7F800000;
	@%p171 bra 	$L__BB0_120;
// %bb.119:
	mov.b32 	%r387, %f830;
	or.b32  	%r388, %r102, %r387;
	mov.b32 	%f830, %r388;
$L__BB0_120:                            // %__nv_fmodf.exit991
	@%p99 bra 	$L__BB0_79;
// %bb.68:
	@%p233 bra 	$L__BB0_75;
	bra.uni 	$L__BB0_69;
$L__BB0_75:
	mov.b32 	%r39, %f818;
	and.b32  	%r397, %r39, 8388607;
	or.b32  	%r7969, %r397, 1065353216;
	mov.b32 	%f817, %r7969;
	add.s32 	%r398, %r39, -1073741824;
	and.b32  	%r7970, %r398, -8388608;
	setp.eq.s32 	%p186, %r7970, 0;
	@%p186 bra 	$L__BB0_78;
// %bb.76:                              // %__nv_fmaf_rn.exit4.i.i.i892.preheader
	mov.f32 	%f757, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f756,%f757;
	// end inline asm
$L__BB0_77:                             // %__nv_fmaf_rn.exit4.i.i.i892
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r399, %r7970, 192937984;
	add.s32 	%r400, %r7969, %r399;
	mov.b32 	%f758, %r400;
	mul.f32 	%f759, %f756, %f758;
	sub.f32 	%f760, %f758, %f759;
	fma.rn.f32 	%f761, %f760, %f756, %f759;
	sub.f32 	%f762, %f758, %f761;
	fma.rz.f32 	%f763, %f762, %f756, %f761;
	cvt.rzi.f32.f32 	%f764, %f763;
	sub.f32 	%f817, %f758, %f764;
	sub.s32 	%r7970, %r7970, %r399;
	mov.b32 	%r7969, %f817;
	setp.ne.s32 	%p187, %r7970, 0;
	setp.ne.s32 	%p188, %r7969, 0;
	and.pred  	%p189, %p187, %p188;
	@%p189 bra 	$L__BB0_77;
$L__BB0_78:                             // %__internal_fmodf_slowpath_mod.exit.i.i894
	setp.gt.u32 	%p190, %r39, 2139095039;
	selp.f32 	%f765, 0f7FFFFFFF, 0f4B800000, %p190;
	mul.f32 	%f766, %f817, 0f34000000;
	mul.f32 	%f818, %f765, %f766;
	bra.uni 	$L__BB0_79;
$L__BB0_69:                             // %__nv_fast_fdividef.exit.i.i.i871
	div.approx.f32 	%f749, %f818, %f145;
	cvt.rzi.f32.f32 	%f816, %f749;
	fma.rn.f32 	%f71, %f816, 0fC0000000, %f818;
	mov.b32 	%r38, %f71;
	setp.lt.u32 	%p181, %r38, 1073741824;
	@%p181 bra 	$L__BB0_74;
// %bb.70:
	setp.lt.u32 	%p182, %r38, -2147483647;
	@%p182 bra 	$L__BB0_72;
// %bb.71:
	add.f32 	%f754, %f816, 0fBF800000;
	setp.lt.f32 	%p185, %f71, 0fC0000000;
	add.f32 	%f755, %f754, 0fBF800000;
	selp.f32 	%f816, %f755, %f754, %p185;
	bra.uni 	$L__BB0_74;
$L__BB0_72:
	add.f32 	%f816, %f816, 0f3F800000;
	setp.ltu.f32 	%p183, %f71, 0f40800000;
	@%p183 bra 	$L__BB0_74;
// %bb.73:                              // %__nv_fmaf_rn.exit.i.i.i875
	add.f32 	%f750, %f816, 0f3F800000;
	fma.rn.f32 	%f752, %f145, 0fC0400000, %f71;
	setp.ge.f32 	%p184, %f752, 0f00000000;
	add.f32 	%f753, %f750, 0f3F800000;
	selp.f32 	%f816, %f753, %f750, %p184;
$L__BB0_74:                             // %__internal_fmodf_fastpath_quot.exit.i.i878
	fma.rn.f32 	%f818, %f816, 0fC0000000, %f818;
$L__BB0_79:                             // %__internal_fmodf_kernel.exit.i897
	abs.f32 	%f767, %f818;
	setp.gtu.f32 	%p191, %f767, 0f7F800000;
	@%p191 bra 	$L__BB0_81;
// %bb.80:
	mov.b32 	%r401, %f818;
	or.b32  	%r402, %r23, %r401;
	mov.b32 	%f818, %r402;
$L__BB0_81:                             // %__nv_fmodf.exit898
	setp.le.s32 	%p199, %r168, %r167;
	mov.u32 	%r7963, 0;
	@%p199 bra 	$L__BB0_90;
// %bb.82:                              // %L1449.lr.ph
	mov.f32 	%f149, 0f43808000;
	mul.lo.s32 	%r272, %r92, 63;
	div.approx.f32 	%f150, %f148, %f149;
	div.approx.f32 	%f184, %f182, %f149;
	div.approx.f32 	%f219, %f217, %f149;
	div.approx.f32 	%f253, %f251, %f149;
	div.approx.f32 	%f288, %f286, %f149;
	div.approx.f32 	%f322, %f320, %f149;
	div.approx.f32 	%f357, %f355, %f149;
	div.approx.f32 	%f391, %f389, %f149;
	add.s32 	%r282, %r272, 96;
	abs.f32 	%f151, %f150;
	abs.f32 	%f185, %f184;
	abs.f32 	%f220, %f219;
	abs.f32 	%f254, %f253;
	abs.f32 	%f289, %f288;
	abs.f32 	%f323, %f322;
	abs.f32 	%f358, %f357;
	abs.f32 	%f392, %f391;
	and.b32  	%r273, %r272, 127;
	and.b32  	%r283, %r282, 127;
	setp.gt.f32 	%p17, %f151, 0f4B800000;
	mul.f32 	%f152, %f150, 0f00000000;
	setp.gt.f32 	%p23, %f185, 0f4B800000;
	mul.f32 	%f186, %f184, 0f00000000;
	setp.gt.f32 	%p29, %f220, 0f4B800000;
	mul.f32 	%f221, %f219, 0f00000000;
	setp.gt.f32 	%p35, %f254, 0f4B800000;
	mul.f32 	%f255, %f253, 0f00000000;
	setp.gt.f32 	%p41, %f289, 0f4B800000;
	mul.f32 	%f290, %f288, 0f00000000;
	setp.gt.f32 	%p47, %f323, 0f4B800000;
	mul.f32 	%f324, %f322, 0f00000000;
	setp.gt.f32 	%p53, %f358, 0f4B800000;
	mul.f32 	%f359, %f357, 0f00000000;
	setp.gt.f32 	%p59, %f392, 0f4B800000;
	mul.f32 	%f393, %f391, 0f00000000;
	cvt.rn.f32.s32 	%f422, %r273;
	cvt.rn.f32.s32 	%f457, %r283;
	selp.f32 	%f153, %f152, %f150, %p17;
	selp.f32 	%f187, %f186, %f184, %p23;
	selp.f32 	%f222, %f221, %f219, %p29;
	selp.f32 	%f256, %f255, %f253, %p35;
	selp.f32 	%f291, %f290, %f288, %p41;
	selp.f32 	%f325, %f324, %f322, %p47;
	selp.f32 	%f360, %f359, %f357, %p53;
	selp.f32 	%f394, %f393, %f391, %p59;
	div.approx.f32 	%f424, %f422, %f177;
	div.approx.f32 	%f458, %f457, %f177;
	add.f32 	%f154, %f153, %f153;
	add.f32 	%f188, %f187, %f187;
	add.f32 	%f223, %f222, %f222;
	add.f32 	%f257, %f256, %f256;
	add.f32 	%f292, %f291, %f291;
	add.f32 	%f326, %f325, %f325;
	add.f32 	%f361, %f360, %f360;
	add.f32 	%f395, %f394, %f394;
	add.f32 	%f425, %f424, %f424;
	add.f32 	%f459, %f458, %f458;
	add.f32 	%f511, %f822, %f822;
	add.f32 	%f562, %f810, %f810;
	mov.b32 	%r195, %f154;
	mov.b32 	%r202, %f188;
	mov.b32 	%r213, %f223;
	mov.b32 	%r220, %f257;
	mov.b32 	%r231, %f292;
	mov.b32 	%r238, %f326;
	mov.b32 	%r249, %f361;
	mov.b32 	%r256, %f395;
	mov.b32 	%r274, %f425;
	mov.b32 	%r284, %f459;
	mov.b32 	%r306, %f511;
	mov.b32 	%r337, %f562;
	and.b32  	%r196, %r195, -2147483648;
	and.b32  	%r203, %r202, -2147483648;
	and.b32  	%r214, %r213, -2147483648;
	and.b32  	%r221, %r220, -2147483648;
	and.b32  	%r232, %r231, -2147483648;
	and.b32  	%r239, %r238, -2147483648;
	and.b32  	%r250, %r249, -2147483648;
	and.b32  	%r257, %r256, -2147483648;
	and.b32  	%r275, %r274, -2147483648;
	and.b32  	%r285, %r284, -2147483648;
	and.b32  	%r307, %r306, -2147483648;
	and.b32  	%r338, %r337, -2147483648;
	add.f32 	%f615, %f826, %f826;
	add.f32 	%f666, %f814, %f814;
	or.b32  	%r197, %r196, 1056964608;
	or.b32  	%r204, %r203, 1056964608;
	or.b32  	%r215, %r214, 1056964608;
	or.b32  	%r222, %r221, 1056964608;
	or.b32  	%r233, %r232, 1056964608;
	or.b32  	%r240, %r239, 1056964608;
	or.b32  	%r251, %r250, 1056964608;
	or.b32  	%r258, %r257, 1056964608;
	or.b32  	%r276, %r275, 1056964608;
	or.b32  	%r286, %r285, 1056964608;
	or.b32  	%r308, %r307, 1056964608;
	or.b32  	%r339, %r338, 1056964608;
	mov.b32 	%r353, %f615;
	mov.b32 	%r375, %f666;
	mov.b32 	%f155, %r197;
	mov.b32 	%f189, %r204;
	mov.b32 	%f224, %r215;
	mov.b32 	%f258, %r222;
	mov.b32 	%f293, %r233;
	mov.b32 	%f327, %r240;
	mov.b32 	%f362, %r251;
	mov.b32 	%f396, %r258;
	mov.b32 	%f426, %r276;
	mov.b32 	%f460, %r286;
	mov.b32 	%f512, %r308;
	mov.b32 	%f563, %r339;
	and.b32  	%r354, %r353, -2147483648;
	and.b32  	%r376, %r375, -2147483648;
	add.f32 	%f718, %f830, %f830;
	add.f32 	%f156, %f154, %f155;
	abs.f32 	%f158, %f154;
	add.f32 	%f190, %f188, %f189;
	abs.f32 	%f192, %f188;
	add.f32 	%f225, %f223, %f224;
	abs.f32 	%f227, %f223;
	add.f32 	%f259, %f257, %f258;
	abs.f32 	%f261, %f257;
	add.f32 	%f294, %f292, %f293;
	abs.f32 	%f296, %f292;
	add.f32 	%f328, %f326, %f327;
	abs.f32 	%f330, %f326;
	add.f32 	%f363, %f361, %f362;
	abs.f32 	%f365, %f361;
	add.f32 	%f397, %f395, %f396;
	abs.f32 	%f399, %f395;
	add.f32 	%f427, %f425, %f426;
	abs.f32 	%f429, %f425;
	add.f32 	%f461, %f459, %f460;
	abs.f32 	%f463, %f459;
	add.f32 	%f513, %f511, %f512;
	abs.f32 	%f515, %f511;
	add.f32 	%f564, %f562, %f563;
	abs.f32 	%f566, %f562;
	or.b32  	%r355, %r354, 1056964608;
	or.b32  	%r377, %r376, 1056964608;
	mov.b32 	%r389, %f718;
	cvt.rzi.f32.f32 	%f157, %f156;
	setp.gt.f32 	%p18, %f158, 0f4B000000;
	cvt.rzi.f32.f32 	%f191, %f190;
	setp.gt.f32 	%p24, %f192, 0f4B000000;
	cvt.rzi.f32.f32 	%f226, %f225;
	setp.gt.f32 	%p30, %f227, 0f4B000000;
	cvt.rzi.f32.f32 	%f260, %f259;
	setp.gt.f32 	%p36, %f261, 0f4B000000;
	cvt.rzi.f32.f32 	%f295, %f294;
	setp.gt.f32 	%p42, %f296, 0f4B000000;
	cvt.rzi.f32.f32 	%f329, %f328;
	setp.gt.f32 	%p48, %f330, 0f4B000000;
	cvt.rzi.f32.f32 	%f364, %f363;
	setp.gt.f32 	%p54, %f365, 0f4B000000;
	cvt.rzi.f32.f32 	%f398, %f397;
	setp.gt.f32 	%p60, %f399, 0f4B000000;
	cvt.rzi.f32.f32 	%f428, %f427;
	setp.gt.f32 	%p65, %f429, 0f4B000000;
	cvt.rzi.f32.f32 	%f462, %f461;
	setp.gt.f32 	%p72, %f463, 0f4B000000;
	cvt.rzi.f32.f32 	%f514, %f513;
	setp.gt.f32 	%p92, %f515, 0f4B000000;
	cvt.rzi.f32.f32 	%f565, %f564;
	setp.gt.f32 	%p112, %f566, 0f4B000000;
	mov.b32 	%f616, %r355;
	mov.b32 	%f667, %r377;
	and.b32  	%r390, %r389, -2147483648;
	selp.f32 	%f159, %f154, %f157, %p18;
	cvt.rzi.f32.f32 	%f160, %f154;
	setp.lt.f32 	%p19, %f158, 0f3F000000;
	selp.f32 	%f193, %f188, %f191, %p24;
	cvt.rzi.f32.f32 	%f194, %f188;
	setp.lt.f32 	%p25, %f192, 0f3F000000;
	selp.f32 	%f228, %f223, %f226, %p30;
	cvt.rzi.f32.f32 	%f229, %f223;
	setp.lt.f32 	%p31, %f227, 0f3F000000;
	selp.f32 	%f262, %f257, %f260, %p36;
	cvt.rzi.f32.f32 	%f263, %f257;
	setp.lt.f32 	%p37, %f261, 0f3F000000;
	selp.f32 	%f297, %f292, %f295, %p42;
	cvt.rzi.f32.f32 	%f298, %f292;
	setp.lt.f32 	%p43, %f296, 0f3F000000;
	selp.f32 	%f331, %f326, %f329, %p48;
	cvt.rzi.f32.f32 	%f332, %f326;
	setp.lt.f32 	%p49, %f330, 0f3F000000;
	selp.f32 	%f366, %f361, %f364, %p54;
	cvt.rzi.f32.f32 	%f367, %f361;
	setp.lt.f32 	%p55, %f365, 0f3F000000;
	selp.f32 	%f400, %f395, %f398, %p60;
	cvt.rzi.f32.f32 	%f401, %f395;
	setp.lt.f32 	%p61, %f399, 0f3F000000;
	selp.f32 	%f430, %f425, %f428, %p65;
	cvt.rzi.f32.f32 	%f431, %f425;
	setp.lt.f32 	%p66, %f429, 0f3F000000;
	selp.f32 	%f464, %f459, %f462, %p72;
	cvt.rzi.f32.f32 	%f465, %f459;
	setp.lt.f32 	%p73, %f463, 0f3F000000;
	selp.f32 	%f516, %f511, %f514, %p92;
	cvt.rzi.f32.f32 	%f517, %f511;
	setp.lt.f32 	%p93, %f515, 0f3F000000;
	selp.f32 	%f567, %f562, %f565, %p112;
	cvt.rzi.f32.f32 	%f568, %f562;
	setp.lt.f32 	%p113, %f566, 0f3F000000;
	add.f32 	%f617, %f615, %f616;
	abs.f32 	%f619, %f615;
	add.f32 	%f668, %f666, %f667;
	abs.f32 	%f670, %f666;
	or.b32  	%r391, %r390, 1056964608;
	selp.f32 	%f161, %f160, %f159, %p19;
	selp.f32 	%f195, %f194, %f193, %p25;
	selp.f32 	%f230, %f229, %f228, %p31;
	selp.f32 	%f264, %f263, %f262, %p37;
	selp.f32 	%f299, %f298, %f297, %p43;
	selp.f32 	%f333, %f332, %f331, %p49;
	selp.f32 	%f368, %f367, %f366, %p55;
	selp.f32 	%f402, %f401, %f400, %p61;
	selp.f32 	%f432, %f431, %f430, %p66;
	selp.f32 	%f466, %f465, %f464, %p73;
	selp.f32 	%f518, %f517, %f516, %p93;
	selp.f32 	%f569, %f568, %f567, %p113;
	cvt.rzi.f32.f32 	%f618, %f617;
	setp.gt.f32 	%p132, %f619, 0f4B000000;
	cvt.rzi.f32.f32 	%f669, %f668;
	setp.gt.f32 	%p153, %f670, 0f4B000000;
	mov.b32 	%f719, %r391;
	fma.rn.f32 	%f162, %f161, 0fBF000000, %f153;
	fma.rn.f32 	%f196, %f195, 0fBF000000, %f187;
	fma.rn.f32 	%f231, %f230, 0fBF000000, %f222;
	fma.rn.f32 	%f265, %f264, 0fBF000000, %f256;
	fma.rn.f32 	%f300, %f299, 0fBF000000, %f291;
	fma.rn.f32 	%f334, %f333, 0fBF000000, %f325;
	fma.rn.f32 	%f369, %f368, 0fBF000000, %f360;
	fma.rn.f32 	%f403, %f402, 0fBF000000, %f394;
	fma.rn.f32 	%f433, %f432, 0fBF000000, %f424;
	fma.rn.f32 	%f467, %f466, 0fBF000000, %f458;
	fma.rn.f32 	%f519, %f518, 0fBF000000, %f822;
	fma.rn.f32 	%f570, %f569, 0fBF000000, %f810;
	selp.f32 	%f620, %f615, %f618, %p132;
	cvt.rzi.f32.f32 	%f621, %f615;
	setp.lt.f32 	%p133, %f619, 0f3F000000;
	selp.f32 	%f671, %f666, %f669, %p153;
	cvt.rzi.f32.f32 	%f672, %f666;
	setp.lt.f32 	%p154, %f670, 0f3F000000;
	add.f32 	%f720, %f718, %f719;
	abs.f32 	%f722, %f718;
	mul.f32 	%f163, %f162, %f162;
	mul.f32 	%f197, %f196, %f196;
	mul.f32 	%f232, %f231, %f231;
	mul.f32 	%f266, %f265, %f265;
	mul.f32 	%f301, %f300, %f300;
	mul.f32 	%f335, %f334, %f334;
	mul.f32 	%f370, %f369, %f369;
	mul.f32 	%f404, %f403, %f403;
	mul.f32 	%f434, %f433, %f433;
	mul.f32 	%f468, %f467, %f467;
	mul.f32 	%f520, %f519, %f519;
	mul.f32 	%f571, %f570, %f570;
	selp.f32 	%f622, %f621, %f620, %p133;
	selp.f32 	%f673, %f672, %f671, %p154;
	cvt.rzi.f32.f32 	%f721, %f720;
	setp.gt.f32 	%p173, %f722, 0f4B000000;
	cvt.rzi.s32.f32 	%r198, %f161;
	fma.rn.f32 	%f164, %f163, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f165, %f163, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r205, %f195;
	fma.rn.f32 	%f198, %f197, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f199, %f197, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r216, %f230;
	fma.rn.f32 	%f233, %f232, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f234, %f232, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r223, %f264;
	fma.rn.f32 	%f267, %f266, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f268, %f266, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r234, %f299;
	fma.rn.f32 	%f302, %f301, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f303, %f301, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r241, %f333;
	fma.rn.f32 	%f336, %f335, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f337, %f335, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r252, %f368;
	fma.rn.f32 	%f371, %f370, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f372, %f370, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r259, %f402;
	fma.rn.f32 	%f405, %f404, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f406, %f404, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f435, %f434, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f436, %f434, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f469, %f468, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f470, %f468, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f521, %f520, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f522, %f520, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f572, %f571, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f573, %f571, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f623, %f622, 0fBF000000, %f826;
	fma.rn.f32 	%f674, %f673, 0fBF000000, %f814;
	selp.f32 	%f723, %f718, %f721, %p173;
	cvt.rzi.f32.f32 	%f724, %f718;
	setp.lt.f32 	%p174, %f722, 0f3F000000;
	add.s32 	%r199, %r198, 1;
	fma.rn.f32 	%f166, %f164, %f163, 0fC0A55DF6;
	fma.rn.f32 	%f167, %f165, %f163, 0f4081E0CF;
	fma.rn.f32 	%f168, %f163, %f162, 0f00000000;
	add.s32 	%r206, %r205, 1;
	fma.rn.f32 	%f200, %f198, %f197, 0fC0A55DF6;
	fma.rn.f32 	%f201, %f199, %f197, 0f4081E0CF;
	fma.rn.f32 	%f202, %f197, %f196, 0f00000000;
	add.s32 	%r217, %r216, 1;
	fma.rn.f32 	%f235, %f233, %f232, 0fC0A55DF6;
	fma.rn.f32 	%f236, %f234, %f232, 0f4081E0CF;
	fma.rn.f32 	%f237, %f232, %f231, 0f00000000;
	add.s32 	%r224, %r223, 1;
	fma.rn.f32 	%f269, %f267, %f266, 0fC0A55DF6;
	fma.rn.f32 	%f270, %f268, %f266, 0f4081E0CF;
	fma.rn.f32 	%f271, %f266, %f265, 0f00000000;
	add.s32 	%r235, %r234, 1;
	fma.rn.f32 	%f304, %f302, %f301, 0fC0A55DF6;
	fma.rn.f32 	%f305, %f303, %f301, 0f4081E0CF;
	fma.rn.f32 	%f306, %f301, %f300, 0f00000000;
	add.s32 	%r242, %r241, 1;
	fma.rn.f32 	%f338, %f336, %f335, 0fC0A55DF6;
	fma.rn.f32 	%f339, %f337, %f335, 0f4081E0CF;
	fma.rn.f32 	%f340, %f335, %f334, 0f00000000;
	add.s32 	%r253, %r252, 1;
	fma.rn.f32 	%f373, %f371, %f370, 0fC0A55DF6;
	fma.rn.f32 	%f374, %f372, %f370, 0f4081E0CF;
	fma.rn.f32 	%f375, %f370, %f369, 0f00000000;
	add.s32 	%r260, %r259, 1;
	fma.rn.f32 	%f407, %f405, %f404, 0fC0A55DF6;
	fma.rn.f32 	%f408, %f406, %f404, 0f4081E0CF;
	fma.rn.f32 	%f409, %f404, %f403, 0f00000000;
	cvt.rzi.s32.f32 	%r277, %f432;
	fma.rn.f32 	%f437, %f435, %f434, 0fC0A55DF6;
	fma.rn.f32 	%f438, %f436, %f434, 0f4081E0CF;
	fma.rn.f32 	%f439, %f434, %f433, 0f00000000;
	cvt.rzi.s32.f32 	%r287, %f466;
	fma.rn.f32 	%f471, %f469, %f468, 0fC0A55DF6;
	fma.rn.f32 	%f472, %f470, %f468, 0f4081E0CF;
	fma.rn.f32 	%f473, %f468, %f467, 0f00000000;
	cvt.rzi.s32.f32 	%r309, %f518;
	fma.rn.f32 	%f523, %f521, %f520, 0fC0A55DF6;
	fma.rn.f32 	%f524, %f522, %f520, 0f4081E0CF;
	fma.rn.f32 	%f525, %f520, %f519, 0f00000000;
	cvt.rzi.s32.f32 	%r340, %f569;
	fma.rn.f32 	%f574, %f572, %f571, 0fC0A55DF6;
	fma.rn.f32 	%f575, %f573, %f571, 0f4081E0CF;
	fma.rn.f32 	%f576, %f571, %f570, 0f00000000;
	mul.f32 	%f624, %f623, %f623;
	mul.f32 	%f675, %f674, %f674;
	selp.f32 	%f725, %f724, %f723, %p174;
	shl.b32 	%r80, %r1, 2;
	shl.b32 	%r85, %r4, 6;
	and.b32  	%r86, %r1, 18;
	fma.rn.f32 	%f169, %f167, %f163, 0fC09DE9E6;
	fma.rn.f32 	%f170, %f166, %f168, 0f00000000;
	and.b32  	%r200, %r199, 1;
	fma.rn.f32 	%f203, %f201, %f197, 0fC09DE9E6;
	fma.rn.f32 	%f204, %f200, %f202, 0f00000000;
	and.b32  	%r207, %r206, 1;
	fma.rn.f32 	%f238, %f236, %f232, 0fC09DE9E6;
	fma.rn.f32 	%f239, %f235, %f237, 0f00000000;
	and.b32  	%r218, %r217, 1;
	fma.rn.f32 	%f272, %f270, %f266, 0fC09DE9E6;
	fma.rn.f32 	%f273, %f269, %f271, 0f00000000;
	and.b32  	%r225, %r224, 1;
	fma.rn.f32 	%f307, %f305, %f301, 0fC09DE9E6;
	fma.rn.f32 	%f308, %f304, %f306, 0f00000000;
	and.b32  	%r236, %r235, 1;
	fma.rn.f32 	%f341, %f339, %f335, 0fC09DE9E6;
	fma.rn.f32 	%f342, %f338, %f340, 0f00000000;
	and.b32  	%r243, %r242, 1;
	fma.rn.f32 	%f376, %f374, %f370, 0fC09DE9E6;
	fma.rn.f32 	%f377, %f373, %f375, 0f00000000;
	and.b32  	%r254, %r253, 1;
	fma.rn.f32 	%f410, %f408, %f404, 0fC09DE9E6;
	fma.rn.f32 	%f411, %f407, %f409, 0f00000000;
	and.b32  	%r261, %r260, 1;
	fma.rn.f32 	%f440, %f438, %f434, 0fC09DE9E6;
	fma.rn.f32 	%f441, %f437, %f439, 0f00000000;
	and.b32  	%r278, %r277, 1;
	fma.rn.f32 	%f474, %f472, %f468, 0fC09DE9E6;
	fma.rn.f32 	%f475, %f471, %f473, 0f00000000;
	and.b32  	%r288, %r287, 1;
	fma.rn.f32 	%f526, %f524, %f520, 0fC09DE9E6;
	fma.rn.f32 	%f527, %f523, %f525, 0f00000000;
	and.b32  	%r310, %r309, 1;
	fma.rn.f32 	%f577, %f575, %f571, 0fC09DE9E6;
	fma.rn.f32 	%f578, %f574, %f576, 0f00000000;
	and.b32  	%r341, %r340, 1;
	fma.rn.f32 	%f625, %f624, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f626, %f624, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f676, %f675, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f677, %f675, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f726, %f725, 0fBF000000, %f830;
	and.b32  	%r81, %r80, 4;
	or.b32  	%r183, %r86, %r85;
	fma.rn.f32 	%f171, %f169, %f163, 0f3F800000;
	fma.rn.f32 	%f172, %f162, 0f40490FDB, %f170;
	setp.eq.b32 	%p20, %r200, 1;
	fma.rn.f32 	%f205, %f203, %f197, 0f3F800000;
	fma.rn.f32 	%f206, %f196, 0f40490FDB, %f204;
	setp.eq.b32 	%p26, %r207, 1;
	fma.rn.f32 	%f240, %f238, %f232, 0f3F800000;
	fma.rn.f32 	%f241, %f231, 0f40490FDB, %f239;
	setp.eq.b32 	%p32, %r218, 1;
	fma.rn.f32 	%f274, %f272, %f266, 0f3F800000;
	fma.rn.f32 	%f275, %f265, 0f40490FDB, %f273;
	setp.eq.b32 	%p38, %r225, 1;
	fma.rn.f32 	%f309, %f307, %f301, 0f3F800000;
	fma.rn.f32 	%f310, %f300, 0f40490FDB, %f308;
	setp.eq.b32 	%p44, %r236, 1;
	fma.rn.f32 	%f343, %f341, %f335, 0f3F800000;
	fma.rn.f32 	%f344, %f334, 0f40490FDB, %f342;
	setp.eq.b32 	%p50, %r243, 1;
	fma.rn.f32 	%f378, %f376, %f370, 0f3F800000;
	fma.rn.f32 	%f379, %f369, 0f40490FDB, %f377;
	setp.eq.b32 	%p56, %r254, 1;
	fma.rn.f32 	%f412, %f410, %f404, 0f3F800000;
	fma.rn.f32 	%f413, %f403, 0f40490FDB, %f411;
	setp.eq.b32 	%p62, %r261, 1;
	fma.rn.f32 	%f442, %f440, %f434, 0f3F800000;
	fma.rn.f32 	%f443, %f433, 0f40490FDB, %f441;
	setp.eq.b32 	%p67, %r278, 1;
	fma.rn.f32 	%f476, %f474, %f468, 0f3F800000;
	fma.rn.f32 	%f477, %f467, 0f40490FDB, %f475;
	setp.eq.b32 	%p74, %r288, 1;
	fma.rn.f32 	%f528, %f526, %f520, 0f3F800000;
	fma.rn.f32 	%f529, %f519, 0f40490FDB, %f527;
	setp.eq.b32 	%p94, %r310, 1;
	fma.rn.f32 	%f579, %f577, %f571, 0f3F800000;
	fma.rn.f32 	%f580, %f570, 0f40490FDB, %f578;
	setp.eq.b32 	%p114, %r341, 1;
	cvt.rzi.s32.f32 	%r356, %f622;
	fma.rn.f32 	%f627, %f625, %f624, 0fC0A55DF6;
	fma.rn.f32 	%f628, %f626, %f624, 0f4081E0CF;
	fma.rn.f32 	%f629, %f624, %f623, 0f00000000;
	cvt.rzi.s32.f32 	%r378, %f673;
	fma.rn.f32 	%f678, %f676, %f675, 0fC0A55DF6;
	fma.rn.f32 	%f679, %f677, %f675, 0f4081E0CF;
	fma.rn.f32 	%f680, %f675, %f674, 0f00000000;
	mul.f32 	%f727, %f726, %f726;
	and.b32  	%r83, %r82, 8;
	or.b32  	%r184, %r183, %r81;
	selp.f32 	%f173, %f171, %f172, %p20;
	and.b32  	%r201, %r199, 2;
	mov.f32 	%f174, 0f00000000;
	selp.f32 	%f207, %f205, %f206, %p26;
	and.b32  	%r208, %r206, 2;
	selp.f32 	%f242, %f240, %f241, %p32;
	and.b32  	%r219, %r217, 2;
	selp.f32 	%f276, %f274, %f275, %p38;
	and.b32  	%r226, %r224, 2;
	selp.f32 	%f311, %f309, %f310, %p44;
	and.b32  	%r237, %r235, 2;
	selp.f32 	%f345, %f343, %f344, %p50;
	and.b32  	%r244, %r242, 2;
	selp.f32 	%f380, %f378, %f379, %p56;
	and.b32  	%r255, %r253, 2;
	selp.f32 	%f414, %f412, %f413, %p62;
	and.b32  	%r262, %r260, 2;
	selp.f32 	%f444, %f442, %f443, %p67;
	and.b32  	%r279, %r277, 2;
	selp.f32 	%f478, %f476, %f477, %p74;
	and.b32  	%r289, %r287, 2;
	selp.f32 	%f530, %f528, %f529, %p94;
	and.b32  	%r311, %r309, 2;
	selp.f32 	%f581, %f579, %f580, %p114;
	and.b32  	%r342, %r340, 2;
	fma.rn.f32 	%f630, %f628, %f624, 0fC09DE9E6;
	fma.rn.f32 	%f631, %f627, %f629, 0f00000000;
	and.b32  	%r357, %r356, 1;
	fma.rn.f32 	%f681, %f679, %f675, 0fC09DE9E6;
	fma.rn.f32 	%f682, %f678, %f680, 0f00000000;
	and.b32  	%r379, %r378, 1;
	fma.rn.f32 	%f728, %f727, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f729, %f727, 0f3E684E12, 0fBFAAD2E0;
	and.b32  	%r84, %r80, 32;
	or.b32  	%r185, %r184, %r83;
	setp.eq.s32 	%p21, %r201, 0;
	sub.f32 	%f175, %f174, %f173;
	setp.eq.s32 	%p27, %r208, 0;
	sub.f32 	%f209, %f174, %f207;
	setp.eq.s32 	%p33, %r219, 0;
	sub.f32 	%f244, %f174, %f242;
	setp.eq.s32 	%p39, %r226, 0;
	sub.f32 	%f278, %f174, %f276;
	setp.eq.s32 	%p45, %r237, 0;
	sub.f32 	%f313, %f174, %f311;
	setp.eq.s32 	%p51, %r244, 0;
	sub.f32 	%f347, %f174, %f345;
	setp.eq.s32 	%p57, %r255, 0;
	sub.f32 	%f382, %f174, %f380;
	setp.eq.s32 	%p63, %r262, 0;
	sub.f32 	%f416, %f174, %f414;
	setp.eq.s32 	%p68, %r279, 0;
	neg.f32 	%f446, %f444;
	add.s32 	%r280, %r277, 1;
	cvt.rzi.f32.f32 	%f451, %f424;
	setp.eq.s32 	%p75, %r289, 0;
	neg.f32 	%f480, %f478;
	add.s32 	%r290, %r287, 1;
	cvt.rzi.f32.f32 	%f484, %f458;
	setp.eq.s32 	%p95, %r311, 0;
	neg.f32 	%f532, %f530;
	add.s32 	%r312, %r309, 1;
	cvt.rzi.f32.f32 	%f537, %f822;
	setp.eq.s32 	%p115, %r342, 0;
	neg.f32 	%f583, %f581;
	add.s32 	%r343, %r340, 1;
	cvt.rzi.f32.f32 	%f588, %f810;
	fma.rn.f32 	%f632, %f630, %f624, 0f3F800000;
	fma.rn.f32 	%f633, %f623, 0f40490FDB, %f631;
	setp.eq.b32 	%p134, %r357, 1;
	fma.rn.f32 	%f683, %f681, %f675, 0f3F800000;
	fma.rn.f32 	%f684, %f674, 0f40490FDB, %f682;
	setp.eq.b32 	%p155, %r379, 1;
	cvt.rzi.s32.f32 	%r392, %f725;
	fma.rn.f32 	%f730, %f728, %f727, 0fC0A55DF6;
	fma.rn.f32 	%f731, %f729, %f727, 0f4081E0CF;
	fma.rn.f32 	%f732, %f727, %f726, 0f00000000;
	or.b32  	%r186, %r185, %r84;
	selp.f32 	%f176, %f173, %f175, %p21;
	selp.f32 	%f210, %f207, %f209, %p27;
	selp.f32 	%f245, %f242, %f244, %p33;
	selp.f32 	%f279, %f276, %f278, %p39;
	selp.f32 	%f314, %f311, %f313, %p45;
	selp.f32 	%f348, %f345, %f347, %p51;
	selp.f32 	%f383, %f380, %f382, %p57;
	selp.f32 	%f417, %f414, %f416, %p63;
	selp.f32 	%f445, %f443, %f442, %p67;
	selp.f32 	%f447, %f444, %f446, %p68;
	and.b32  	%r281, %r280, 2;
	setp.eq.f32 	%p70, %f451, %f424;
	mul.f32 	%f452, %f424, 0f00000000;
	selp.f32 	%f479, %f477, %f476, %p74;
	selp.f32 	%f481, %f478, %f480, %p75;
	and.b32  	%r291, %r290, 2;
	setp.eq.f32 	%p77, %f484, %f458;
	mul.f32 	%f485, %f458, 0f00000000;
	selp.f32 	%f531, %f529, %f528, %p94;
	selp.f32 	%f533, %f530, %f532, %p95;
	and.b32  	%r313, %r312, 2;
	setp.eq.f32 	%p97, %f537, %f822;
	mul.f32 	%f538, %f822, 0f00000000;
	selp.f32 	%f582, %f580, %f579, %p114;
	selp.f32 	%f584, %f581, %f583, %p115;
	and.b32  	%r344, %r343, 2;
	setp.eq.f32 	%p117, %f588, %f810;
	mul.f32 	%f589, %f810, 0f00000000;
	selp.f32 	%f634, %f632, %f633, %p134;
	and.b32  	%r358, %r356, 2;
	selp.f32 	%f685, %f683, %f684, %p155;
	and.b32  	%r380, %r378, 2;
	fma.rn.f32 	%f733, %f731, %f727, 0fC09DE9E6;
	fma.rn.f32 	%f734, %f730, %f732, 0f00000000;
	and.b32  	%r393, %r392, 1;
	bfe.u32 	%r187, %r186, 1, 10;
	mul.f32 	%f86, %f176, %f176;
	mul.f32 	%f4, %f210, %f210;
	mul.f32 	%f8, %f245, %f245;
	mul.f32 	%f13, %f279, %f279;
	mul.f32 	%f17, %f314, %f314;
	mul.f32 	%f22, %f348, %f348;
	mul.f32 	%f26, %f383, %f383;
	mul.f32 	%f31, %f417, %f417;
	setp.eq.s32 	%p69, %r281, 0;
	sub.f32 	%f449, %f174, %f445;
	selp.f32 	%f453, %f452, %f447, %p70;
	abs.f32 	%f454, %f424;
	setp.eq.s32 	%p76, %r291, 0;
	sub.f32 	%f482, %f174, %f479;
	selp.f32 	%f486, %f485, %f481, %p77;
	abs.f32 	%f487, %f458;
	setp.eq.s32 	%p96, %r313, 0;
	sub.f32 	%f535, %f174, %f531;
	selp.f32 	%f103, %f538, %f533, %p97;
	abs.f32 	%f539, %f822;
	setp.eq.s32 	%p116, %r344, 0;
	sub.f32 	%f586, %f174, %f582;
	selp.f32 	%f590, %f589, %f584, %p117;
	abs.f32 	%f591, %f810;
	setp.eq.s32 	%p135, %r358, 0;
	neg.f32 	%f636, %f634;
	add.s32 	%r359, %r356, 1;
	cvt.rzi.f32.f32 	%f641, %f826;
	setp.eq.s32 	%p156, %r380, 0;
	neg.f32 	%f687, %f685;
	add.s32 	%r381, %r378, 1;
	cvt.rzi.f32.f32 	%f692, %f814;
	fma.rn.f32 	%f735, %f733, %f727, 0f3F800000;
	fma.rn.f32 	%f736, %f726, 0f40490FDB, %f734;
	setp.eq.b32 	%p175, %r393, 1;
	ld.param.u64 	%rd1, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_7];
	mul.wide.u32 	%rd51, %r187, 4;
	mul.f32 	%f180, %f86, 0f3C0AF64E;
	mul.f32 	%f214, %f4, 0f3C0AF64E;
	mul.f32 	%f249, %f8, 0f3C0AF64E;
	mul.f32 	%f283, %f13, 0f3C0AF64E;
	mul.f32 	%f318, %f17, 0f3C0AF64E;
	mul.f32 	%f352, %f22, 0f3C0AF64E;
	mul.f32 	%f387, %f26, 0f3C0AF64E;
	mul.f32 	%f420, %f31, 0f3C0AF64E;
	selp.f32 	%f450, %f445, %f449, %p69;
	setp.gt.f32 	%p71, %f454, 0f4B800000;
	add.f32 	%f455, %f453, 0f3F800000;
	selp.f32 	%f483, %f479, %f482, %p76;
	setp.gt.f32 	%p78, %f487, 0f4B800000;
	add.f32 	%f488, %f486, 0f3F800000;
	selp.f32 	%f536, %f531, %f535, %p96;
	setp.gt.f32 	%p98, %f539, 0f4B800000;
	add.f32 	%f540, %f103, 0f3F800000;
	selp.f32 	%f587, %f582, %f586, %p116;
	setp.gt.f32 	%p118, %f591, 0f4B800000;
	add.f32 	%f592, %f590, 0f3F800000;
	selp.f32 	%f635, %f633, %f632, %p134;
	selp.f32 	%f637, %f634, %f636, %p135;
	and.b32  	%r360, %r359, 2;
	setp.eq.f32 	%p137, %f641, %f826;
	mul.f32 	%f642, %f826, 0f00000000;
	selp.f32 	%f686, %f684, %f683, %p155;
	selp.f32 	%f688, %f685, %f687, %p156;
	and.b32  	%r382, %r381, 2;
	setp.eq.f32 	%p158, %f692, %f814;
	mul.f32 	%f693, %f814, 0f00000000;
	selp.f32 	%f737, %f735, %f736, %p175;
	and.b32  	%r394, %r392, 2;
	add.s64 	%rd52, %rd1, %rd51;
	mul.f32 	%f3, %f180, %f800;
	mul.f32 	%f215, %f214, %f801;
	mul.f32 	%f12, %f249, %f802;
	mul.f32 	%f284, %f283, %f803;
	mul.f32 	%f21, %f318, %f804;
	mul.f32 	%f353, %f352, %f805;
	mul.f32 	%f30, %f387, %f806;
	mul.f32 	%f421, %f420, %f807;
	selp.f32 	%f456, %f455, %f450, %p71;
	selp.f32 	%f489, %f488, %f483, %p78;
	selp.f32 	%f104, %f540, %f536, %p98;
	selp.f32 	%f593, %f592, %f587, %p118;
	setp.eq.s32 	%p136, %r360, 0;
	sub.f32 	%f639, %f174, %f635;
	selp.f32 	%f123, %f642, %f637, %p137;
	abs.f32 	%f643, %f826;
	setp.eq.s32 	%p157, %r382, 0;
	sub.f32 	%f690, %f174, %f686;
	selp.f32 	%f694, %f693, %f688, %p158;
	abs.f32 	%f695, %f814;
	setp.eq.s32 	%p176, %r394, 0;
	neg.f32 	%f739, %f737;
	add.s32 	%r395, %r392, 1;
	cvt.rzi.f32.f32 	%f744, %f830;
	ld.param.u64 	%rd2, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_8];
	ld.param.u64 	%rd3, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_9];
	ld.global.u32 	%r87, [%rd52];
	mov.b32 	%r211, %f215;
	mov.b32 	%r210, %f3;
	mov.b32 	%r229, %f284;
	mov.b32 	%r228, %f12;
	mov.b32 	%r247, %f353;
	mov.b32 	%r246, %f21;
	mov.b32 	%r265, %f421;
	mov.b32 	%r264, %f30;
	mov.b32 	%r267, %f456;
	mov.b32 	%r268, %f489;
	mov.b32 	%r270, %f453;
	mov.b32 	%r271, %f486;
	mov.b32 	%r327, %f593;
	mov.b32 	%r326, %f104;
	mov.b32 	%r333, %f590;
	mov.b32 	%r332, %f103;
	selp.f32 	%f640, %f635, %f639, %p136;
	setp.gt.f32 	%p138, %f643, 0f4B800000;
	add.f32 	%f644, %f123, 0f3F800000;
	selp.f32 	%f691, %f686, %f690, %p157;
	setp.gt.f32 	%p159, %f695, 0f4B800000;
	add.f32 	%f696, %f694, 0f3F800000;
	selp.f32 	%f738, %f736, %f735, %p175;
	selp.f32 	%f740, %f737, %f739, %p176;
	and.b32  	%r396, %r395, 2;
	setp.eq.f32 	%p178, %f744, %f830;
	mul.f32 	%f745, %f830, 0f00000000;
	// begin inline asm
	cvt.rn.f16x2.f32 %r209, %r211, %r210;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r227, %r229, %r228;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r245, %r247, %r246;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r263, %r265, %r264;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r266, %r268, %r267;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r269, %r271, %r270;
	// end inline asm
	xor.b32  	%r330, %r333, -2147483648;
	xor.b32  	%r329, %r332, -2147483648;
	selp.f32 	%f124, %f644, %f640, %p138;
	selp.f32 	%f697, %f696, %f691, %p159;
	setp.eq.s32 	%p177, %r396, 0;
	sub.f32 	%f742, %f174, %f738;
	selp.f32 	%f142, %f745, %f740, %p178;
	abs.f32 	%f746, %f830;
	// begin inline asm
	cvt.rn.f16x2.f32 %r325, %r327, %r326;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r328, %r330, %r329;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r331, %r333, %r332;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r334, %r327, %r326;
	// end inline asm
	mov.b32 	%r371, %f697;
	mov.b32 	%r370, %f124;
	mov.b32 	%r374, %f694;
	mov.b32 	%r373, %f123;
	selp.f32 	%f743, %f738, %f742, %p177;
	setp.gt.f32 	%p179, %f746, 0f4B800000;
	add.f32 	%f747, %f142, 0f3F800000;
	// begin inline asm
	cvt.rn.f16x2.f32 %r369, %r371, %r370;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r372, %r374, %r373;
	// end inline asm
	selp.f32 	%f143, %f747, %f743, %p179;
	add.f32 	%f768, %f818, %f818;
	mov.b32 	%r415, %f768;
	and.b32  	%r416, %r415, -2147483648;
	or.b32  	%r417, %r416, 1056964608;
	mov.b32 	%f769, %r417;
	add.f32 	%f770, %f768, %f769;
	cvt.rzi.f32.f32 	%f771, %f770;
	abs.f32 	%f772, %f768;
	setp.gt.f32 	%p192, %f772, 0f4B000000;
	selp.f32 	%f773, %f768, %f771, %p192;
	cvt.rzi.f32.f32 	%f774, %f768;
	setp.lt.f32 	%p193, %f772, 0f3F000000;
	selp.f32 	%f775, %f774, %f773, %p193;
	cvt.rzi.s32.f32 	%r418, %f775;
	fma.rn.f32 	%f776, %f775, 0fBF000000, %f818;
	mul.f32 	%f777, %f776, %f776;
	fma.rn.f32 	%f778, %f777, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f779, %f777, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f780, %f778, %f777, 0fC0A55DF6;
	fma.rn.f32 	%f781, %f779, %f777, 0f4081E0CF;
	fma.rn.f32 	%f782, %f777, %f776, 0f00000000;
	fma.rn.f32 	%f783, %f781, %f777, 0fC09DE9E6;
	fma.rn.f32 	%f784, %f780, %f782, 0f00000000;
	fma.rn.f32 	%f785, %f783, %f777, 0f3F800000;
	fma.rn.f32 	%f786, %f776, 0f40490FDB, %f784;
	and.b32  	%r419, %r418, 1;
	setp.eq.b32 	%p194, %r419, 1;
	selp.f32 	%f787, %f785, %f786, %p194;
	selp.f32 	%f788, %f786, %f785, %p194;
	and.b32  	%r420, %r418, 2;
	setp.eq.s32 	%p195, %r420, 0;
	neg.f32 	%f789, %f787;
	selp.f32 	%f790, %f787, %f789, %p195;
	add.s32 	%r421, %r418, 1;
	and.b32  	%r422, %r421, 2;
	setp.eq.s32 	%p196, %r422, 0;
	sub.f32 	%f792, %f174, %f788;
	selp.f32 	%f793, %f788, %f792, %p196;
	cvt.rzi.f32.f32 	%f794, %f818;
	setp.eq.f32 	%p197, %f794, %f818;
	mul.f32 	%f795, %f818, 0f00000000;
	selp.f32 	%f796, %f795, %f790, %p197;
	abs.f32 	%f797, %f818;
	setp.gt.f32 	%p198, %f797, 0f4B800000;
	add.f32 	%f798, %f796, 0f3F800000;
	selp.f32 	%f799, %f798, %f793, %p198;
	mov.b32 	%r405, %f799;
	mov.b32 	%r404, %f143;
	// begin inline asm
	cvt.rn.f16x2.f32 %r403, %r405, %r404;
	// end inline asm
	mov.b32 	%r411, %f796;
	xor.b32  	%r408, %r411, -2147483648;
	mov.b32 	%r410, %f142;
	xor.b32  	%r407, %r410, -2147483648;
	// begin inline asm
	cvt.rn.f16x2.f32 %r406, %r408, %r407;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r409, %r411, %r410;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r412, %r405, %r404;
	// end inline asm
	shl.b32 	%r424, %r171, 5;
	cvt.u16.u32 	%rs1, %r85;
	mul.hi.u16 	%rs2, %rs1, -21845;
	shr.u16 	%rs3, %rs2, 8;
	mul.lo.s16 	%rs4, %rs3, 384;
	sub.s16 	%rs5, %rs1, %rs4;
	shl.b16 	%rs6, %rs5, 5;
	cvt.u32.u16 	%r425, %rs6;
	and.b32  	%r426, %r80, 16;
	and.b32  	%r50, %r80, 28;
	or.b32  	%r427, %r50, %r425;
	add.s32 	%r51, %r427, %r424;
	bfe.s32 	%r428, %r1, 3, 1;
	and.b32  	%r52, %r1, 8;
	shl.b32 	%r429, %r1, 4;
	or.b32  	%r430, %r52, %r429;
	shr.u32 	%r431, %r430, 2;
	and.b32  	%r432, %r431, 14;
	or.b32  	%r433, %r432, %r426;
	and.b32  	%r53, %r1, 4;
	shr.u32 	%r434, %r2, 1;
	and.b32  	%r435, %r3, 32;
	or.b32  	%r436, %r435, %r434;
	or.b32  	%r437, %r436, 8;
	or.b32  	%r438, %r436, 16;
	or.b32  	%r439, %r436, 24;
	or.b32  	%r440, %r86, %r84;
	or.b32  	%r441, %r440, %r83;
	or.b32  	%r442, %r441, %r81;
	shr.u32 	%r443, %r442, 1;
	mul.lo.s32 	%r444, %r443, 65;
	add.s32 	%r445, %r436, %r444;
	add.s32 	%r446, %r437, %r444;
	add.s32 	%r447, %r438, %r444;
	add.s32 	%r448, %r439, %r444;
	shl.b32 	%r449, %r2, 1;
	or.b32  	%r450, %r90, %r449;
	mul.lo.s32 	%r451, %r450, 65;
	add.s32 	%r452, %r451, %r426;
	add.s32 	%r453, %r452, %r432;
	mul.wide.u32 	%rd53, %r453, 4;
	mov.u64 	%rd54, shmem;
	add.s64 	%rd5, %rd54, %rd53;
	cvt.u64.u32 	%rd55, %r433;
	cvt.u64.u32 	%rd56, %r451;
	add.s64 	%rd57, %rd56, %rd55;
	shl.b64 	%rd58, %rd57, 2;
	add.s64 	%rd6, %rd54, %rd58;
	shl.b32 	%r454, %r169, 16;
	add.s32 	%r455, %r454, -196608;
	shl.b32 	%r456, %r2, 2;
	or.b32  	%r457, %r91, %r456;
	and.b32  	%r458, %r85, 1984;
	or.b32  	%r459, %r457, %r458;
	shl.b32 	%r54, %r459, 5;
	cvt.s64.s32 	%rd7, %r455;
	bfe.s32 	%r460, %r2, 2, 1;
	and.b32  	%r461, %r460, 260;
	and.b32  	%r462, %r2, 1;
	neg.s32 	%r463, %r462;
	and.b32  	%r464, %r463, 1040;
	bfe.s32 	%r465, %r2, 1, 1;
	and.b32  	%r466, %r465, 520;
	shr.u32 	%r467, %r2, 3;
	add.s32 	%r468, %r464, %r433;
	add.s32 	%r469, %r468, %r461;
	mad.lo.s32 	%r470, %r90, 65, %r469;
	add.s32 	%r471, %r470, %r466;
	mad.lo.s32 	%r472, %r467, 130, %r471;
	mul.wide.u32 	%rd59, %r472, 4;
	add.s64 	%rd8, %rd54, %rd59;
	add.s32 	%r473, %r472, 32;
	mul.wide.u32 	%rd60, %r473, 4;
	add.s64 	%rd9, %rd54, %rd60;
	add.s32 	%r474, %r472, 1;
	mul.wide.u32 	%rd61, %r474, 4;
	add.s64 	%rd10, %rd54, %rd61;
	add.s32 	%r475, %r472, 33;
	mul.wide.u32 	%rd62, %r475, 4;
	add.s64 	%rd11, %rd54, %rd62;
	add.s32 	%r476, %r472, 2081;
	mul.wide.u32 	%rd63, %r476, 4;
	add.s64 	%rd12, %rd54, %rd63;
	add.s32 	%r477, %r472, 2113;
	mul.wide.u32 	%rd64, %r477, 4;
	add.s64 	%rd13, %rd54, %rd64;
	add.s32 	%r478, %r472, 2082;
	mul.wide.u32 	%rd65, %r478, 4;
	add.s64 	%rd14, %rd54, %rd65;
	add.s32 	%r479, %r472, 2114;
	mul.wide.u32 	%rd66, %r479, 4;
	add.s64 	%rd15, %rd54, %rd66;
	add.s32 	%r480, %r472, 4162;
	mul.wide.u32 	%rd67, %r480, 4;
	add.s64 	%rd16, %rd54, %rd67;
	add.s32 	%r481, %r472, 4194;
	mul.wide.u32 	%rd68, %r481, 4;
	add.s64 	%rd17, %rd54, %rd68;
	add.s32 	%r482, %r472, 4163;
	mul.wide.u32 	%rd69, %r482, 4;
	add.s64 	%rd18, %rd54, %rd69;
	add.s32 	%r483, %r472, 4195;
	mul.wide.u32 	%rd70, %r483, 4;
	add.s64 	%rd19, %rd54, %rd70;
	add.s32 	%r484, %r472, 6243;
	mul.wide.u32 	%rd71, %r484, 4;
	add.s64 	%rd20, %rd54, %rd71;
	add.s32 	%r485, %r472, 6275;
	mul.wide.u32 	%rd72, %r485, 4;
	add.s64 	%rd21, %rd54, %rd72;
	add.s32 	%r486, %r472, 6244;
	mul.wide.u32 	%rd73, %r486, 4;
	add.s64 	%rd22, %rd54, %rd73;
	add.s32 	%r487, %r472, 6276;
	mul.wide.u32 	%rd74, %r487, 4;
	add.s64 	%rd23, %rd54, %rd74;
	bfe.s32 	%r488, %r1, 1, 1;
	and.b32  	%r55, %r488, 65;
	and.b32  	%r489, %r428, 1040;
	mul.lo.s32 	%r56, %r90, 520;
	and.b32  	%r490, %r1, 1;
	neg.s32 	%r491, %r490;
	and.b32  	%r57, %r491, 130;
	or.b32  	%r58, %r436, %r489;
	or.b32  	%r59, %r437, %r489;
	add.s32 	%r60, %r438, %r489;
	add.s32 	%r61, %r439, %r489;
	cvt.u64.u32 	%rd75, %r432;
	cvt.u64.u32 	%rd76, %r426;
	add.s64 	%rd77, %rd76, %rd56;
	add.s64 	%rd78, %rd77, %rd75;
	shl.b64 	%rd79, %rd78, 2;
	add.s64 	%rd80, %rd79, %rd54;
	add.s64 	%rd24, %rd80, 8324;
	add.s64 	%rd25, %rd80, 16648;
	add.s64 	%rd26, %rd80, 24972;
	mul.wide.u32 	%rd81, %r448, 4;
	add.s64 	%rd27, %rd54, %rd81;
	mul.wide.u32 	%rd82, %r447, 4;
	add.s64 	%rd28, %rd54, %rd82;
	mul.wide.u32 	%rd83, %r446, 4;
	add.s64 	%rd29, %rd54, %rd83;
	mul.wide.u32 	%rd84, %r445, 4;
	add.s64 	%rd30, %rd54, %rd84;
	setp.eq.s32 	%p200, %r52, 0;
	mov.u16 	%rs1182, 25600;
	mov.u16 	%rs1078, 21504;
	mov.u16 	%rs1190, 18432;
	mov.u32 	%r8004, %r7963;
	mov.u32 	%r8003, %r7963;
	mov.u32 	%r8002, %r7963;
	mov.u32 	%r8001, %r7963;
	mov.u32 	%r8000, %r7963;
	mov.u32 	%r7999, %r7963;
	mov.u32 	%r7998, %r7963;
	mov.u32 	%r7997, %r7963;
	mov.u32 	%r7996, %r7963;
	mov.u32 	%r7995, %r7963;
	mov.u32 	%r7994, %r7963;
	mov.u32 	%r7993, %r7963;
	mov.u32 	%r7983, %r7963;
	bra.uni 	$L__BB0_83;
$L__BB0_89:                             // %L38070
                                        //   in Loop: Header=BB0_83 Depth=1
	or.b32  	%r7958, %r7984, 196608;
	cvt.s64.s32 	%rd138, %r7958;
	add.s64 	%rd139, %rd138, %rd7;
	shr.u64 	%rd140, %rd139, 39;
	add.s64 	%rd141, %rd139, %rd140;
	shr.s64 	%rd142, %rd141, 25;
	setp.lt.s64 	%p228, %rd139, 0;
	and.b64  	%rd143, %rd141, -33554432;
	setp.ne.s64 	%p229, %rd143, %rd139;
	and.pred  	%p230, %p228, %p229;
	selp.u64 	%rd144, 1, 0, %p230;
	sub.s64 	%rd145, %rd144, %rd142;
	shl.b64 	%rd146, %rd145, 25;
	add.s64 	%rd147, %rd146, %rd139;
	shl.b64 	%rd148, %rd147, 2;
	add.s64 	%rd149, %rd3, %rd148;
	st.global.v4.u32 	[%rd149], {%r162, %r164, %r163, %r165};
	add.s32 	%r7983, %r7983, 256;
	add.s32 	%r7959, %r7983, %r167;
	setp.lt.s32 	%p231, %r7959, %r168;
	@%p231 bra 	$L__BB0_83;
	bra.uni 	$L__BB0_90;
$L__BB0_83:                             // %L1449
                                        // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_84 Depth 2
	or.b32  	%r557, %r7983, %r1;
	and.b32  	%r558, %r557, 32528;
	or.b32  	%r559, %r558, %r84;
	or.b32  	%r560, %r559, %r2;
	add.s32 	%r561, %r560, %r167;
	mad.lo.s32 	%r562, %r561, 12288, %r51;
	mul.hi.s32 	%r563, %r562, 715827883;
	shr.u32 	%r564, %r563, 31;
	shr.s32 	%r565, %r563, 26;
	add.s32 	%r566, %r565, %r564;
	setp.lt.s32 	%p201, %r562, 0;
	mul.lo.s32 	%r567, %r566, 402653184;
	setp.ne.s32 	%p202, %r567, %r562;
	and.pred  	%p203, %p201, %p202;
	selp.s32 	%r568, -1, 0, %p203;
	add.s32 	%r569, %r566, %r568;
	mad.lo.s32 	%r570, %r569, -402653184, %r562;
	mul.wide.s32 	%rd85, %r570, 4;
	add.s64 	%rd86, %rd2, %rd85;
	ld.global.v4.u32 	{%r571, %r572, %r573, %r574}, [%rd86];
	or.b32  	%r575, %r560, 64;
	add.s32 	%r576, %r575, %r167;
	mad.lo.s32 	%r577, %r576, 12288, %r51;
	mul.hi.s32 	%r578, %r577, 715827883;
	shr.u32 	%r579, %r578, 31;
	shr.s32 	%r580, %r578, 26;
	add.s32 	%r581, %r580, %r579;
	setp.lt.s32 	%p204, %r577, 0;
	mul.lo.s32 	%r582, %r581, 402653184;
	setp.ne.s32 	%p205, %r582, %r577;
	and.pred  	%p206, %p204, %p205;
	selp.s32 	%r583, -1, 0, %p206;
	add.s32 	%r584, %r581, %r583;
	mad.lo.s32 	%r585, %r584, -402653184, %r577;
	mul.wide.s32 	%rd87, %r585, 4;
	add.s64 	%rd88, %rd2, %rd87;
	ld.global.v4.u32 	{%r586, %r587, %r588, %r589}, [%rd88];
	or.b32  	%r590, %r560, 128;
	add.s32 	%r591, %r590, %r167;
	mad.lo.s32 	%r592, %r591, 12288, %r51;
	mul.hi.s32 	%r593, %r592, 715827883;
	shr.u32 	%r594, %r593, 31;
	shr.s32 	%r595, %r593, 26;
	add.s32 	%r596, %r595, %r594;
	setp.lt.s32 	%p207, %r592, 0;
	mul.lo.s32 	%r597, %r596, 402653184;
	setp.ne.s32 	%p208, %r597, %r592;
	and.pred  	%p209, %p207, %p208;
	selp.s32 	%r598, -1, 0, %p209;
	add.s32 	%r599, %r596, %r598;
	mad.lo.s32 	%r600, %r599, -402653184, %r592;
	mul.wide.s32 	%rd89, %r600, 4;
	add.s64 	%rd90, %rd2, %rd89;
	ld.global.v4.u32 	{%r601, %r602, %r603, %r604}, [%rd90];
	or.b32  	%r605, %r560, 192;
	add.s32 	%r606, %r605, %r167;
	mad.lo.s32 	%r607, %r606, 12288, %r51;
	mul.hi.s32 	%r608, %r607, 715827883;
	shr.u32 	%r609, %r608, 31;
	shr.s32 	%r610, %r608, 26;
	add.s32 	%r611, %r610, %r609;
	setp.lt.s32 	%p210, %r607, 0;
	mul.lo.s32 	%r612, %r611, 402653184;
	setp.ne.s32 	%p211, %r612, %r607;
	and.pred  	%p212, %p210, %p211;
	selp.s32 	%r613, -1, 0, %p212;
	add.s32 	%r614, %r611, %r613;
	mad.lo.s32 	%r615, %r614, -402653184, %r607;
	mul.wide.s32 	%rd91, %r615, 4;
	add.s64 	%rd92, %rd2, %rd91;
	ld.global.v4.u32 	{%r616, %r617, %r618, %r619}, [%rd92];
	selp.b32 	%r620, %r573, %r571, %p200;
	shfl.sync.bfly.b32	%r621, %r620, 8, 31, -1;
	selp.b32 	%r493, %r571, %r621, %p200;
	selp.b32 	%r494, %r621, %r573, %p200;
	selp.b32 	%r622, %r574, %r572, %p200;
	shfl.sync.bfly.b32	%r623, %r622, 8, 31, -1;
	selp.b32 	%r501, %r572, %r623, %p200;
	selp.b32 	%r502, %r623, %r574, %p200;
	selp.b32 	%r624, %r588, %r586, %p200;
	shfl.sync.bfly.b32	%r625, %r624, 8, 31, -1;
	selp.b32 	%r509, %r586, %r625, %p200;
	selp.b32 	%r510, %r625, %r588, %p200;
	selp.b32 	%r626, %r589, %r587, %p200;
	shfl.sync.bfly.b32	%r627, %r626, 8, 31, -1;
	selp.b32 	%r517, %r587, %r627, %p200;
	selp.b32 	%r518, %r627, %r589, %p200;
	selp.b32 	%r628, %r603, %r601, %p200;
	shfl.sync.bfly.b32	%r629, %r628, 8, 31, -1;
	selp.b32 	%r525, %r601, %r629, %p200;
	selp.b32 	%r526, %r629, %r603, %p200;
	selp.b32 	%r630, %r604, %r602, %p200;
	shfl.sync.bfly.b32	%r631, %r630, 8, 31, -1;
	selp.b32 	%r533, %r602, %r631, %p200;
	selp.b32 	%r534, %r631, %r604, %p200;
	selp.b32 	%r632, %r618, %r616, %p200;
	shfl.sync.bfly.b32	%r633, %r632, 8, 31, -1;
	selp.b32 	%r541, %r616, %r633, %p200;
	selp.b32 	%r542, %r633, %r618, %p200;
	selp.b32 	%r634, %r619, %r617, %p200;
	shfl.sync.bfly.b32	%r635, %r634, 8, 31, -1;
	selp.b32 	%r549, %r617, %r635, %p200;
	selp.b32 	%r550, %r635, %r619, %p200;
	mov.u32 	%r551, 21520;
	// begin inline asm
	prmt.b32 %r492, %r493, %r494, %r551;
	// end inline asm
	mov.u32 	%r555, 30258;
	// begin inline asm
	prmt.b32 %r496, %r493, %r494, %r555;
	// end inline asm
	// begin inline asm
	prmt.b32 %r500, %r501, %r502, %r551;
	// end inline asm
	// begin inline asm
	prmt.b32 %r504, %r501, %r502, %r555;
	// end inline asm
	// begin inline asm
	prmt.b32 %r508, %r509, %r510, %r551;
	// end inline asm
	// begin inline asm
	prmt.b32 %r512, %r509, %r510, %r555;
	// end inline asm
	// begin inline asm
	prmt.b32 %r516, %r517, %r518, %r551;
	// end inline asm
	// begin inline asm
	prmt.b32 %r520, %r517, %r518, %r555;
	// end inline asm
	// begin inline asm
	prmt.b32 %r524, %r525, %r526, %r551;
	// end inline asm
	// begin inline asm
	prmt.b32 %r528, %r525, %r526, %r555;
	// end inline asm
	// begin inline asm
	prmt.b32 %r532, %r533, %r534, %r551;
	// end inline asm
	// begin inline asm
	prmt.b32 %r536, %r533, %r534, %r555;
	// end inline asm
	// begin inline asm
	prmt.b32 %r540, %r541, %r542, %r551;
	// end inline asm
	// begin inline asm
	prmt.b32 %r544, %r541, %r542, %r555;
	// end inline asm
	// begin inline asm
	prmt.b32 %r548, %r549, %r550, %r551;
	// end inline asm
	// begin inline asm
	prmt.b32 %r552, %r549, %r550, %r555;
	// end inline asm
	st.shared.u32 	[%rd8], %r492;
	st.shared.u32 	[%rd9], %r496;
	st.shared.u32 	[%rd10], %r500;
	st.shared.u32 	[%rd11], %r504;
	st.shared.u32 	[%rd12], %r508;
	st.shared.u32 	[%rd13], %r512;
	st.shared.u32 	[%rd14], %r516;
	st.shared.u32 	[%rd15], %r520;
	st.shared.u32 	[%rd16], %r524;
	st.shared.u32 	[%rd17], %r528;
	st.shared.u32 	[%rd18], %r532;
	st.shared.u32 	[%rd19], %r536;
	st.shared.u32 	[%rd20], %r540;
	st.shared.u32 	[%rd21], %r544;
	st.shared.u32 	[%rd22], %r548;
	st.shared.u32 	[%rd23], %r552;
	bar.sync 	0;
	or.b32  	%r75, %r7983, %r53;
	shr.u32 	%r7991, %r75, 6;
	mov.u64 	%rd154, %rd30;
	mov.u64 	%rd155, %rd29;
	mov.u64 	%rd156, %rd28;
	mov.u64 	%rd157, %rd27;
	mov.u32 	%r7992, %r7963;
$L__BB0_84:                             // %pass5541
                                        //   Parent Loop BB0_83 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	add.s32 	%r7820, %r75, %r7992;
	bfe.s32 	%r7821, %r7820, 2, 1;
	and.b32  	%r7822, %r7821, 260;
	and.b32  	%r7823, %r7991, 3;
	mul.lo.s32 	%r7824, %r7823, 2081;
	add.s32 	%r7825, %r58, %r7822;
	add.s32 	%r7826, %r7825, %r55;
	add.s32 	%r7827, %r7826, %r7824;
	add.s32 	%r7828, %r7827, %r56;
	add.s32 	%r7829, %r7828, %r57;
	mul.wide.u32 	%rd93, %r7829, 4;
	add.s64 	%rd95, %rd54, %rd93;
	ld.shared.u32 	%r7830, [%rd95];
	add.s32 	%r7831, %r59, %r7822;
	add.s32 	%r7832, %r7831, %r55;
	add.s32 	%r7833, %r7832, %r7824;
	add.s32 	%r7834, %r7833, %r56;
	add.s32 	%r7835, %r7834, %r57;
	mul.wide.u32 	%rd96, %r7835, 4;
	add.s64 	%rd97, %rd54, %rd96;
	ld.shared.u32 	%r7836, [%rd97];
	add.s32 	%r7837, %r60, %r7822;
	add.s32 	%r7838, %r7837, %r55;
	add.s32 	%r7839, %r7838, %r7824;
	add.s32 	%r7840, %r7839, %r56;
	add.s32 	%r7841, %r7840, %r57;
	mul.wide.u32 	%rd98, %r7841, 4;
	add.s64 	%rd99, %rd54, %rd98;
	ld.shared.u32 	%r7842, [%rd99];
	add.s32 	%r7843, %r61, %r7822;
	add.s32 	%r7844, %r7843, %r55;
	add.s32 	%r7845, %r7844, %r7824;
	add.s32 	%r7846, %r7845, %r56;
	add.s32 	%r7847, %r7846, %r57;
	mul.wide.u32 	%rd100, %r7847, 4;
	add.s64 	%rd101, %rd54, %rd100;
	ld.shared.u32 	%r7848, [%rd101];
	// begin inline asm
	mov.b32 %r641, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r652, {%rs1078, %rs1078};
	// end inline asm
	xor.b32  	%r640, %r7830, -2004318072;
	mov.u32 	%r639, 983055;
	// begin inline asm
	lop3.b32 %r638, %r639, %r640, %r641, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r642, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r643, %r641, %r642;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r646, %r638, %r643;
	// end inline asm
	mov.u32 	%r650, 15728880;
	// begin inline asm
	lop3.b32 %r649, %r650, %r640, %r652, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r653, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r654, %r652, %r653;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r657, %r649, %r654;
	// end inline asm
	shr.u32 	%r662, %r640, 8;
	// begin inline asm
	lop3.b32 %r660, %r639, %r662, %r641, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r664, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r665, %r641, %r664;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r668, %r660, %r665;
	// end inline asm
	// begin inline asm
	lop3.b32 %r671, %r650, %r662, %r652, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r675, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r676, %r652, %r675;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r679, %r671, %r676;
	// end inline asm
	// begin inline asm
	mov.b32 %r687, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r698, {%rs1078, %rs1078};
	// end inline asm
	xor.b32  	%r686, %r7836, -2004318072;
	// begin inline asm
	lop3.b32 %r684, %r639, %r686, %r687, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r688, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r689, %r687, %r688;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r692, %r684, %r689;
	// end inline asm
	// begin inline asm
	lop3.b32 %r695, %r650, %r686, %r698, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r699, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r700, %r698, %r699;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r703, %r695, %r700;
	// end inline asm
	shr.u32 	%r708, %r686, 8;
	// begin inline asm
	lop3.b32 %r706, %r639, %r708, %r687, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r710, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r711, %r687, %r710;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r714, %r706, %r711;
	// end inline asm
	// begin inline asm
	lop3.b32 %r717, %r650, %r708, %r698, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r721, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r722, %r698, %r721;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r725, %r717, %r722;
	// end inline asm
	// begin inline asm
	mov.b32 %r733, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r744, {%rs1078, %rs1078};
	// end inline asm
	xor.b32  	%r732, %r7842, -2004318072;
	// begin inline asm
	lop3.b32 %r730, %r639, %r732, %r733, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r734, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r735, %r733, %r734;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r738, %r730, %r735;
	// end inline asm
	// begin inline asm
	lop3.b32 %r741, %r650, %r732, %r744, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r745, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r746, %r744, %r745;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r749, %r741, %r746;
	// end inline asm
	shr.u32 	%r754, %r732, 8;
	// begin inline asm
	lop3.b32 %r752, %r639, %r754, %r733, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r756, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r757, %r733, %r756;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r760, %r752, %r757;
	// end inline asm
	// begin inline asm
	lop3.b32 %r763, %r650, %r754, %r744, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r767, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r768, %r744, %r767;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r771, %r763, %r768;
	// end inline asm
	// begin inline asm
	mov.b32 %r779, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r790, {%rs1078, %rs1078};
	// end inline asm
	xor.b32  	%r778, %r7848, -2004318072;
	// begin inline asm
	lop3.b32 %r776, %r639, %r778, %r779, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r780, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r781, %r779, %r780;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r784, %r776, %r781;
	// end inline asm
	// begin inline asm
	lop3.b32 %r787, %r650, %r778, %r790, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r791, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r792, %r790, %r791;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r795, %r787, %r792;
	// end inline asm
	shr.u32 	%r800, %r778, 8;
	// begin inline asm
	lop3.b32 %r798, %r639, %r800, %r779, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r802, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r803, %r779, %r802;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r806, %r798, %r803;
	// end inline asm
	// begin inline asm
	lop3.b32 %r809, %r650, %r800, %r790, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r813, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r814, %r790, %r813;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r817, %r809, %r814;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r820, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r822, %r820, %r646;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r825, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r827, %r825, %r657;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r830, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r832, %r830, %r668;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r835, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r837, %r835, %r679;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r840, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r842, %r840, %r692;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r845, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r847, %r845, %r703;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r850, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r852, %r850, %r714;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r855, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r857, %r855, %r725;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r860, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r862, %r860, %r738;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r865, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r867, %r865, %r749;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r870, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r872, %r870, %r760;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r875, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r877, %r875, %r771;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r880, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r882, %r880, %r784;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r885, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r887, %r885, %r795;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r890, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r892, %r890, %r806;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r895, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r897, %r895, %r817;
	// end inline asm
	// begin inline asm
	mov.b32 %r905, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r916, {%rs1078, %rs1078};
	// end inline asm
	xor.b32  	%r904, %r8004, -2004318072;
	// begin inline asm
	lop3.b32 %r902, %r639, %r904, %r905, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r906, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r907, %r905, %r906;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r910, %r902, %r907;
	// end inline asm
	// begin inline asm
	lop3.b32 %r913, %r650, %r904, %r916, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r917, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r918, %r916, %r917;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r921, %r913, %r918;
	// end inline asm
	shr.u32 	%r926, %r904, 8;
	// begin inline asm
	lop3.b32 %r924, %r639, %r926, %r905, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r928, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r929, %r905, %r928;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r932, %r924, %r929;
	// end inline asm
	// begin inline asm
	lop3.b32 %r935, %r650, %r926, %r916, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r939, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r940, %r916, %r939;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r943, %r935, %r940;
	// end inline asm
	// begin inline asm
	mov.b32 %r951, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r962, {%rs1078, %rs1078};
	// end inline asm
	xor.b32  	%r950, %r8003, -2004318072;
	// begin inline asm
	lop3.b32 %r948, %r639, %r950, %r951, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r952, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r953, %r951, %r952;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r956, %r948, %r953;
	// end inline asm
	// begin inline asm
	lop3.b32 %r959, %r650, %r950, %r962, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r963, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r964, %r962, %r963;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r967, %r959, %r964;
	// end inline asm
	shr.u32 	%r972, %r950, 8;
	// begin inline asm
	lop3.b32 %r970, %r639, %r972, %r951, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r974, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r975, %r951, %r974;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r978, %r970, %r975;
	// end inline asm
	// begin inline asm
	lop3.b32 %r981, %r650, %r972, %r962, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r985, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r986, %r962, %r985;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r989, %r981, %r986;
	// end inline asm
	// begin inline asm
	mov.b32 %r997, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r1008, {%rs1078, %rs1078};
	// end inline asm
	xor.b32  	%r996, %r7998, -2004318072;
	// begin inline asm
	lop3.b32 %r994, %r639, %r996, %r997, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r998, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r999, %r997, %r998;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1002, %r994, %r999;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1005, %r650, %r996, %r1008, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1009, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1010, %r1008, %r1009;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1013, %r1005, %r1010;
	// end inline asm
	shr.u32 	%r1018, %r996, 8;
	// begin inline asm
	lop3.b32 %r1016, %r639, %r1018, %r997, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1020, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1021, %r997, %r1020;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1024, %r1016, %r1021;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1027, %r650, %r1018, %r1008, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1031, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1032, %r1008, %r1031;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1035, %r1027, %r1032;
	// end inline asm
	// begin inline asm
	mov.b32 %r1043, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r1054, {%rs1078, %rs1078};
	// end inline asm
	xor.b32  	%r1042, %r7997, -2004318072;
	// begin inline asm
	lop3.b32 %r1040, %r639, %r1042, %r1043, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1044, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1045, %r1043, %r1044;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1048, %r1040, %r1045;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1051, %r650, %r1042, %r1054, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1055, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1056, %r1054, %r1055;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1059, %r1051, %r1056;
	// end inline asm
	shr.u32 	%r1064, %r1042, 8;
	// begin inline asm
	lop3.b32 %r1062, %r639, %r1064, %r1043, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1066, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1067, %r1043, %r1066;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1070, %r1062, %r1067;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1073, %r650, %r1064, %r1054, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1077, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1078, %r1054, %r1077;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1081, %r1073, %r1078;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1084, %r209, %r910, %r822;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1088, %r209, %r921, %r827;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1092, %r209, %r932, %r832;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1096, %r209, %r943, %r837;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1100, %r209, %r956, %r842;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1104, %r209, %r967, %r847;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1108, %r209, %r978, %r852;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1112, %r209, %r989, %r857;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1116, %r209, %r1002, %r862;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1120, %r209, %r1013, %r867;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1124, %r209, %r1024, %r872;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1128, %r209, %r1035, %r877;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1132, %r209, %r1048, %r882;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1136, %r209, %r1059, %r887;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1140, %r209, %r1070, %r892;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1144, %r209, %r1081, %r897;
	// end inline asm
	// begin inline asm
	mov.b32 %r1153, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r1164, {%rs1078, %rs1078};
	// end inline asm
	xor.b32  	%r1152, %r8002, -2004318072;
	// begin inline asm
	lop3.b32 %r1150, %r639, %r1152, %r1153, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1154, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1155, %r1153, %r1154;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1158, %r1150, %r1155;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1161, %r650, %r1152, %r1164, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1165, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1166, %r1164, %r1165;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1169, %r1161, %r1166;
	// end inline asm
	shr.u32 	%r1174, %r1152, 8;
	// begin inline asm
	lop3.b32 %r1172, %r639, %r1174, %r1153, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1176, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1177, %r1153, %r1176;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1180, %r1172, %r1177;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1183, %r650, %r1174, %r1164, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1187, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1188, %r1164, %r1187;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1191, %r1183, %r1188;
	// end inline asm
	// begin inline asm
	mov.b32 %r1199, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r1210, {%rs1078, %rs1078};
	// end inline asm
	xor.b32  	%r1198, %r8001, -2004318072;
	// begin inline asm
	lop3.b32 %r1196, %r639, %r1198, %r1199, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1200, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1201, %r1199, %r1200;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1204, %r1196, %r1201;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1207, %r650, %r1198, %r1210, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1211, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1212, %r1210, %r1211;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1215, %r1207, %r1212;
	// end inline asm
	shr.u32 	%r1220, %r1198, 8;
	// begin inline asm
	lop3.b32 %r1218, %r639, %r1220, %r1199, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1222, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1223, %r1199, %r1222;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1226, %r1218, %r1223;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1229, %r650, %r1220, %r1210, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1233, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1234, %r1210, %r1233;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1237, %r1229, %r1234;
	// end inline asm
	// begin inline asm
	mov.b32 %r1245, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r1256, {%rs1078, %rs1078};
	// end inline asm
	xor.b32  	%r1244, %r7996, -2004318072;
	// begin inline asm
	lop3.b32 %r1242, %r639, %r1244, %r1245, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1246, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1247, %r1245, %r1246;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1250, %r1242, %r1247;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1253, %r650, %r1244, %r1256, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1257, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1258, %r1256, %r1257;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1261, %r1253, %r1258;
	// end inline asm
	shr.u32 	%r1266, %r1244, 8;
	// begin inline asm
	lop3.b32 %r1264, %r639, %r1266, %r1245, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1268, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1269, %r1245, %r1268;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1272, %r1264, %r1269;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1275, %r650, %r1266, %r1256, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1279, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1280, %r1256, %r1279;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1283, %r1275, %r1280;
	// end inline asm
	// begin inline asm
	mov.b32 %r1291, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r1302, {%rs1078, %rs1078};
	// end inline asm
	xor.b32  	%r1290, %r7995, -2004318072;
	// begin inline asm
	lop3.b32 %r1288, %r639, %r1290, %r1291, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1292, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1293, %r1291, %r1292;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1296, %r1288, %r1293;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1299, %r650, %r1290, %r1302, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1303, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1304, %r1302, %r1303;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1307, %r1299, %r1304;
	// end inline asm
	shr.u32 	%r1312, %r1290, 8;
	// begin inline asm
	lop3.b32 %r1310, %r639, %r1312, %r1291, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1314, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1315, %r1291, %r1314;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1318, %r1310, %r1315;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1321, %r650, %r1312, %r1302, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1325, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1326, %r1302, %r1325;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1329, %r1321, %r1326;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1332, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1334, %r1332, %r1158, %r1084;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1338, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1340, %r1338, %r1169, %r1088;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1344, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1346, %r1344, %r1180, %r1092;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1350, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1352, %r1350, %r1191, %r1096;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1356, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1358, %r1356, %r1204, %r1100;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1362, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1364, %r1362, %r1215, %r1104;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1368, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1370, %r1368, %r1226, %r1108;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1374, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1376, %r1374, %r1237, %r1112;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1380, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1382, %r1380, %r1250, %r1116;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1386, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1388, %r1386, %r1261, %r1120;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1392, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1394, %r1392, %r1272, %r1124;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1398, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1400, %r1398, %r1283, %r1128;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1404, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1406, %r1404, %r1296, %r1132;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1410, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1412, %r1410, %r1307, %r1136;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1416, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1418, %r1416, %r1318, %r1140;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1422, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1424, %r1422, %r1329, %r1144;
	// end inline asm
	// begin inline asm
	mov.b32 %r1433, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r1444, {%rs1078, %rs1078};
	// end inline asm
	xor.b32  	%r1432, %r8000, -2004318072;
	// begin inline asm
	lop3.b32 %r1430, %r639, %r1432, %r1433, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1434, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1435, %r1433, %r1434;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1438, %r1430, %r1435;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1441, %r650, %r1432, %r1444, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1445, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1446, %r1444, %r1445;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1449, %r1441, %r1446;
	// end inline asm
	shr.u32 	%r1454, %r1432, 8;
	// begin inline asm
	lop3.b32 %r1452, %r639, %r1454, %r1433, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1456, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1457, %r1433, %r1456;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1460, %r1452, %r1457;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1463, %r650, %r1454, %r1444, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1467, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1468, %r1444, %r1467;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1471, %r1463, %r1468;
	// end inline asm
	// begin inline asm
	mov.b32 %r1479, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r1490, {%rs1078, %rs1078};
	// end inline asm
	xor.b32  	%r1478, %r7999, -2004318072;
	// begin inline asm
	lop3.b32 %r1476, %r639, %r1478, %r1479, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1480, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1481, %r1479, %r1480;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1484, %r1476, %r1481;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1487, %r650, %r1478, %r1490, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1491, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1492, %r1490, %r1491;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1495, %r1487, %r1492;
	// end inline asm
	shr.u32 	%r1500, %r1478, 8;
	// begin inline asm
	lop3.b32 %r1498, %r639, %r1500, %r1479, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1502, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1503, %r1479, %r1502;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1506, %r1498, %r1503;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1509, %r650, %r1500, %r1490, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1513, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1514, %r1490, %r1513;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1517, %r1509, %r1514;
	// end inline asm
	// begin inline asm
	mov.b32 %r1525, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r1536, {%rs1078, %rs1078};
	// end inline asm
	xor.b32  	%r1524, %r7994, -2004318072;
	// begin inline asm
	lop3.b32 %r1522, %r639, %r1524, %r1525, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1526, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1527, %r1525, %r1526;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1530, %r1522, %r1527;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1533, %r650, %r1524, %r1536, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1537, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1538, %r1536, %r1537;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1541, %r1533, %r1538;
	// end inline asm
	shr.u32 	%r1546, %r1524, 8;
	// begin inline asm
	lop3.b32 %r1544, %r639, %r1546, %r1525, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1548, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1549, %r1525, %r1548;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1552, %r1544, %r1549;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1555, %r650, %r1546, %r1536, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1559, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1560, %r1536, %r1559;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1563, %r1555, %r1560;
	// end inline asm
	// begin inline asm
	mov.b32 %r1571, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r1582, {%rs1078, %rs1078};
	// end inline asm
	xor.b32  	%r1570, %r7993, -2004318072;
	// begin inline asm
	lop3.b32 %r1568, %r639, %r1570, %r1571, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1572, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1573, %r1571, %r1572;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1576, %r1568, %r1573;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1579, %r650, %r1570, %r1582, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1583, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1584, %r1582, %r1583;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1587, %r1579, %r1584;
	// end inline asm
	shr.u32 	%r1592, %r1570, 8;
	// begin inline asm
	lop3.b32 %r1590, %r639, %r1592, %r1571, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1594, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1595, %r1571, %r1594;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1598, %r1590, %r1595;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1601, %r650, %r1592, %r1582, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1605, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1606, %r1582, %r1605;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1609, %r1601, %r1606;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1683, %r245, %r1438, %r1334;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1680, %r245, %r1449, %r1340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1692, %r245, %r1460, %r1346;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1689, %r245, %r1471, %r1352;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1701, %r245, %r1484, %r1358;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1698, %r245, %r1495, %r1364;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1710, %r245, %r1506, %r1370;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1707, %r245, %r1517, %r1376;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1719, %r245, %r1530, %r1382;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1716, %r245, %r1541, %r1388;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1728, %r245, %r1552, %r1394;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1725, %r245, %r1563, %r1400;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1737, %r245, %r1576, %r1406;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1734, %r245, %r1587, %r1412;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1746, %r245, %r1598, %r1418;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1743, %r245, %r1609, %r1424;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1676, %r269;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1678, %r1676, %r1680;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1681, %r266, %r1683, %r1678;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1685, %r269;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1687, %r1685, %r1689;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1690, %r266, %r1692, %r1687;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1694, %r269;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1696, %r1694, %r1698;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1699, %r266, %r1701, %r1696;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1703, %r269;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1705, %r1703, %r1707;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1708, %r266, %r1710, %r1705;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1712, %r269;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1714, %r1712, %r1716;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1717, %r266, %r1719, %r1714;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1721, %r269;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1723, %r1721, %r1725;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1726, %r266, %r1728, %r1723;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1730, %r269;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1732, %r1730, %r1734;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1735, %r266, %r1737, %r1732;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1739, %r269;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1741, %r1739, %r1743;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1744, %r266, %r1746, %r1741;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1748, %r269, %r1683;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1751, %r266, %r1680, %r1748;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1755, %r269, %r1692;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1758, %r266, %r1689, %r1755;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1762, %r269, %r1701;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1765, %r266, %r1698, %r1762;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1769, %r269, %r1710;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1772, %r266, %r1707, %r1769;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1776, %r269, %r1719;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1779, %r266, %r1716, %r1776;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1783, %r269, %r1728;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1786, %r266, %r1725, %r1783;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1790, %r269, %r1737;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1793, %r266, %r1734, %r1790;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1797, %r269, %r1746;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1800, %r266, %r1743, %r1797;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1891, %r1888}, {%r325, %r331, %r328, %r334}, {%r1681, %r1751}, {%r7963, %r7963};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1900, %r1897}, {%r325, %r331, %r328, %r334}, {%r1690, %r1758}, {%r7963, %r7963};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1909, %r1906}, {%r325, %r331, %r328, %r334}, {%r1699, %r1765}, {%r7963, %r7963};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1918, %r1915}, {%r325, %r331, %r328, %r334}, {%r1708, %r1772}, {%r7963, %r7963};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1927, %r1924}, {%r325, %r331, %r328, %r334}, {%r1717, %r1779}, {%r7963, %r7963};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1936, %r1933}, {%r325, %r331, %r328, %r334}, {%r1726, %r1786}, {%r7963, %r7963};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1945, %r1942}, {%r325, %r331, %r328, %r334}, {%r1735, %r1793}, {%r7963, %r7963};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1954, %r1951}, {%r325, %r331, %r328, %r334}, {%r1744, %r1800}, {%r7963, %r7963};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1884, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1886, %r1884, %r1888;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1889, %r369, %r1891, %r1886;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1893, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1895, %r1893, %r1897;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1898, %r369, %r1900, %r1895;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1902, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1904, %r1902, %r1906;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1907, %r369, %r1909, %r1904;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1911, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1913, %r1911, %r1915;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1916, %r369, %r1918, %r1913;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1920, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1922, %r1920, %r1924;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1925, %r369, %r1927, %r1922;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1929, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1931, %r1929, %r1933;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1934, %r369, %r1936, %r1931;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1938, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1940, %r1938, %r1942;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1943, %r369, %r1945, %r1940;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1947, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1949, %r1947, %r1951;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1952, %r369, %r1954, %r1949;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1956, %r372, %r1891;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1959, %r369, %r1888, %r1956;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1963, %r372, %r1900;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1966, %r369, %r1897, %r1963;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1970, %r372, %r1909;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1973, %r369, %r1906, %r1970;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1977, %r372, %r1918;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1980, %r369, %r1915, %r1977;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1984, %r372, %r1927;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1987, %r369, %r1924, %r1984;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1991, %r372, %r1936;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1994, %r369, %r1933, %r1991;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1998, %r372, %r1945;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2001, %r369, %r1942, %r1998;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2005, %r372, %r1954;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2008, %r369, %r1951, %r2005;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2012, %r2013}, {%r403, %r409, %r406, %r412}, {%r1889, %r1959}, {%r7963, %r7963};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2022, %r2023}, {%r403, %r409, %r406, %r412}, {%r1898, %r1966}, {%r7963, %r7963};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2032, %r2033}, {%r403, %r409, %r406, %r412}, {%r1907, %r1973}, {%r7963, %r7963};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2042, %r2043}, {%r403, %r409, %r406, %r412}, {%r1916, %r1980}, {%r7963, %r7963};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2052, %r2053}, {%r403, %r409, %r406, %r412}, {%r1925, %r1987}, {%r7963, %r7963};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2062, %r2063}, {%r403, %r409, %r406, %r412}, {%r1934, %r1994}, {%r7963, %r7963};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2072, %r2073}, {%r403, %r409, %r406, %r412}, {%r1943, %r2001}, {%r7963, %r7963};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2082, %r2083}, {%r403, %r409, %r406, %r412}, {%r1952, %r2008}, {%r7963, %r7963};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2092, %r87, %r2012;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2095, %r87, %r2013;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2098, %r87, %r2022;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2101, %r87, %r2023;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2104, %r87, %r2032;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2107, %r87, %r2033;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2110, %r87, %r2042;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2113, %r87, %r2043;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2116, %r87, %r2052;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2119, %r87, %r2053;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2122, %r87, %r2062;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2125, %r87, %r2063;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2128, %r87, %r2072;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2131, %r87, %r2073;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2134, %r87, %r2082;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2137, %r87, %r2083;
	// end inline asm
	mov.u16 	%rs199, -14592;
	// begin inline asm
	mov.b32 %r2140, {%rs199, %rs199};
	// end inline asm
	mov.u16 	%rs201, 18176;
	// begin inline asm
	mov.b32 %r2141, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2142, %r2092, %r2140;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2145, %r2142, %r2141;
	// end inline asm
	// begin inline asm
	mov.b32 %r2148, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r2149, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2150, %r2095, %r2148;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2153, %r2150, %r2149;
	// end inline asm
	// begin inline asm
	mov.b32 %r2156, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r2157, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2158, %r2098, %r2156;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2161, %r2158, %r2157;
	// end inline asm
	// begin inline asm
	mov.b32 %r2164, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r2165, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2166, %r2101, %r2164;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2169, %r2166, %r2165;
	// end inline asm
	// begin inline asm
	mov.b32 %r2172, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r2173, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2174, %r2104, %r2172;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2177, %r2174, %r2173;
	// end inline asm
	// begin inline asm
	mov.b32 %r2180, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r2181, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2182, %r2107, %r2180;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2185, %r2182, %r2181;
	// end inline asm
	// begin inline asm
	mov.b32 %r2188, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r2189, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2190, %r2110, %r2188;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2193, %r2190, %r2189;
	// end inline asm
	// begin inline asm
	mov.b32 %r2196, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r2197, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2198, %r2113, %r2196;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2201, %r2198, %r2197;
	// end inline asm
	// begin inline asm
	mov.b32 %r2204, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r2205, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2206, %r2116, %r2204;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2209, %r2206, %r2205;
	// end inline asm
	// begin inline asm
	mov.b32 %r2212, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r2213, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2214, %r2119, %r2212;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2217, %r2214, %r2213;
	// end inline asm
	// begin inline asm
	mov.b32 %r2220, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r2221, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2222, %r2122, %r2220;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2225, %r2222, %r2221;
	// end inline asm
	// begin inline asm
	mov.b32 %r2228, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r2229, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2230, %r2125, %r2228;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2233, %r2230, %r2229;
	// end inline asm
	// begin inline asm
	mov.b32 %r2236, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r2237, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2238, %r2128, %r2236;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2241, %r2238, %r2237;
	// end inline asm
	// begin inline asm
	mov.b32 %r2244, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r2245, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2246, %r2131, %r2244;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2249, %r2246, %r2245;
	// end inline asm
	// begin inline asm
	mov.b32 %r2252, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r2253, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2254, %r2134, %r2252;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2257, %r2254, %r2253;
	// end inline asm
	// begin inline asm
	mov.b32 %r2260, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r2261, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2262, %r2137, %r2260;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2265, %r2262, %r2261;
	// end inline asm
	// begin inline asm
	mov.b32 %r2271, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r2269, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2270, %r2271, %r2269;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2273, %r2145, %r2270;
	// end inline asm
	// begin inline asm
	mov.b32 %r2276, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2277, %r2271, %r2276;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2280, %r2153, %r2277;
	// end inline asm
	// begin inline asm
	mov.b32 %r2283, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2284, %r2271, %r2283;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2287, %r2161, %r2284;
	// end inline asm
	// begin inline asm
	mov.b32 %r2290, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2291, %r2271, %r2290;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2294, %r2169, %r2291;
	// end inline asm
	mov.u32 	%r2300, 25152;
	// begin inline asm
	prmt.b32 %r2297, %r2273, %r2287, %r2300;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2301, %r2280, %r2294, %r2300;
	// end inline asm
	shl.b32 	%r2308, %r2301, 4;
	mov.u32 	%r2306, 252645135;
	// begin inline asm
	lop3.b32 %r2305, %r2306, %r2297, %r2308, 202;
	// end inline asm
	xor.b32  	%r7849, %r2305, -2004318072;
	// begin inline asm
	mov.b32 %r2312, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r2310, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2311, %r2312, %r2310;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2314, %r2177, %r2311;
	// end inline asm
	// begin inline asm
	mov.b32 %r2317, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2318, %r2312, %r2317;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2321, %r2185, %r2318;
	// end inline asm
	// begin inline asm
	mov.b32 %r2324, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2325, %r2312, %r2324;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2328, %r2193, %r2325;
	// end inline asm
	// begin inline asm
	mov.b32 %r2331, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2332, %r2312, %r2331;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2335, %r2201, %r2332;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2338, %r2314, %r2328, %r2300;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2342, %r2321, %r2335, %r2300;
	// end inline asm
	shl.b32 	%r2349, %r2342, 4;
	// begin inline asm
	lop3.b32 %r2346, %r2306, %r2338, %r2349, 202;
	// end inline asm
	xor.b32  	%r7850, %r2346, -2004318072;
	// begin inline asm
	mov.b32 %r2353, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r2351, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2352, %r2353, %r2351;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2355, %r2209, %r2352;
	// end inline asm
	// begin inline asm
	mov.b32 %r2358, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2359, %r2353, %r2358;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2362, %r2217, %r2359;
	// end inline asm
	// begin inline asm
	mov.b32 %r2365, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2366, %r2353, %r2365;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2369, %r2225, %r2366;
	// end inline asm
	// begin inline asm
	mov.b32 %r2372, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2373, %r2353, %r2372;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2376, %r2233, %r2373;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2379, %r2355, %r2369, %r2300;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2383, %r2362, %r2376, %r2300;
	// end inline asm
	shl.b32 	%r2390, %r2383, 4;
	// begin inline asm
	lop3.b32 %r2387, %r2306, %r2379, %r2390, 202;
	// end inline asm
	xor.b32  	%r7851, %r2387, -2004318072;
	// begin inline asm
	mov.b32 %r2394, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r2392, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2393, %r2394, %r2392;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2396, %r2241, %r2393;
	// end inline asm
	// begin inline asm
	mov.b32 %r2399, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2400, %r2394, %r2399;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2403, %r2249, %r2400;
	// end inline asm
	// begin inline asm
	mov.b32 %r2406, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2407, %r2394, %r2406;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2410, %r2257, %r2407;
	// end inline asm
	// begin inline asm
	mov.b32 %r2413, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2414, %r2394, %r2413;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2417, %r2265, %r2414;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2420, %r2396, %r2410, %r2300;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2424, %r2403, %r2417, %r2300;
	// end inline asm
	shl.b32 	%r2431, %r2424, 4;
	// begin inline asm
	lop3.b32 %r2428, %r2306, %r2420, %r2431, 202;
	// end inline asm
	xor.b32  	%r7852, %r2428, -2004318072;
	st.shared.u32 	[%rd154], %r7849;
	st.shared.u32 	[%rd155], %r7850;
	st.shared.u32 	[%rd156], %r7851;
	st.shared.u32 	[%rd157], %r7852;
	ld.shared.u32 	%r8004, [%rd95];
	ld.shared.u32 	%r8003, [%rd97];
	ld.shared.u32 	%r7998, [%rd99];
	ld.shared.u32 	%r7997, [%rd101];
	// begin inline asm
	mov.b32 %r2437, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r2448, {%rs1078, %rs1078};
	// end inline asm
	xor.b32  	%r2436, %r8004, -2004318072;
	// begin inline asm
	lop3.b32 %r2434, %r639, %r2436, %r2437, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2438, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2439, %r2437, %r2438;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2442, %r2434, %r2439;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2445, %r650, %r2436, %r2448, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2449, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2450, %r2448, %r2449;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2453, %r2445, %r2450;
	// end inline asm
	shr.u32 	%r2458, %r2436, 8;
	// begin inline asm
	lop3.b32 %r2456, %r639, %r2458, %r2437, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2460, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2461, %r2437, %r2460;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2464, %r2456, %r2461;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2467, %r650, %r2458, %r2448, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2471, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2472, %r2448, %r2471;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2475, %r2467, %r2472;
	// end inline asm
	// begin inline asm
	mov.b32 %r2483, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r2494, {%rs1078, %rs1078};
	// end inline asm
	xor.b32  	%r2482, %r8003, -2004318072;
	// begin inline asm
	lop3.b32 %r2480, %r639, %r2482, %r2483, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2484, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2485, %r2483, %r2484;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2488, %r2480, %r2485;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2491, %r650, %r2482, %r2494, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2495, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2496, %r2494, %r2495;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2499, %r2491, %r2496;
	// end inline asm
	shr.u32 	%r2504, %r2482, 8;
	// begin inline asm
	lop3.b32 %r2502, %r639, %r2504, %r2483, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2506, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2507, %r2483, %r2506;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2510, %r2502, %r2507;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2513, %r650, %r2504, %r2494, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2517, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2518, %r2494, %r2517;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2521, %r2513, %r2518;
	// end inline asm
	// begin inline asm
	mov.b32 %r2529, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r2540, {%rs1078, %rs1078};
	// end inline asm
	xor.b32  	%r2528, %r7998, -2004318072;
	// begin inline asm
	lop3.b32 %r2526, %r639, %r2528, %r2529, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2530, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2531, %r2529, %r2530;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2534, %r2526, %r2531;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2537, %r650, %r2528, %r2540, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2541, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2542, %r2540, %r2541;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2545, %r2537, %r2542;
	// end inline asm
	shr.u32 	%r2550, %r2528, 8;
	// begin inline asm
	lop3.b32 %r2548, %r639, %r2550, %r2529, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2552, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2553, %r2529, %r2552;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2556, %r2548, %r2553;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2559, %r650, %r2550, %r2540, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2563, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2564, %r2540, %r2563;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2567, %r2559, %r2564;
	// end inline asm
	// begin inline asm
	mov.b32 %r2575, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r2586, {%rs1078, %rs1078};
	// end inline asm
	xor.b32  	%r2574, %r7997, -2004318072;
	// begin inline asm
	lop3.b32 %r2572, %r639, %r2574, %r2575, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2576, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2577, %r2575, %r2576;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2580, %r2572, %r2577;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2583, %r650, %r2574, %r2586, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2587, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2588, %r2586, %r2587;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2591, %r2583, %r2588;
	// end inline asm
	shr.u32 	%r2596, %r2574, 8;
	// begin inline asm
	lop3.b32 %r2594, %r639, %r2596, %r2575, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2598, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2599, %r2575, %r2598;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2602, %r2594, %r2599;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2605, %r650, %r2596, %r2586, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2609, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2610, %r2586, %r2609;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2613, %r2605, %r2610;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2616, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2618, %r2616, %r2442;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2621, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2623, %r2621, %r2453;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2626, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2628, %r2626, %r2464;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2631, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2633, %r2631, %r2475;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2636, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2638, %r2636, %r2488;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2641, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2643, %r2641, %r2499;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2646, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2648, %r2646, %r2510;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2651, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2653, %r2651, %r2521;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2656, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2658, %r2656, %r2534;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2661, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2663, %r2661, %r2545;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2666, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2668, %r2666, %r2556;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2671, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2673, %r2671, %r2567;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2676, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2678, %r2676, %r2580;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2681, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2683, %r2681, %r2591;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2686, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2688, %r2686, %r2602;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2691, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2693, %r2691, %r2613;
	// end inline asm
	// begin inline asm
	mov.b32 %r2701, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r2712, {%rs1078, %rs1078};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2698, %r639, %r1152, %r2701, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2702, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2703, %r2701, %r2702;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2706, %r2698, %r2703;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2709, %r650, %r1152, %r2712, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2713, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2714, %r2712, %r2713;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2717, %r2709, %r2714;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2720, %r639, %r1174, %r2701, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2724, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2725, %r2701, %r2724;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2728, %r2720, %r2725;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2731, %r650, %r1174, %r2712, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2735, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2736, %r2712, %r2735;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2739, %r2731, %r2736;
	// end inline asm
	// begin inline asm
	mov.b32 %r2747, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r2758, {%rs1078, %rs1078};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2744, %r639, %r1198, %r2747, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2748, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2749, %r2747, %r2748;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2752, %r2744, %r2749;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2755, %r650, %r1198, %r2758, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2759, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2760, %r2758, %r2759;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2763, %r2755, %r2760;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2766, %r639, %r1220, %r2747, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2770, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2771, %r2747, %r2770;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2774, %r2766, %r2771;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2777, %r650, %r1220, %r2758, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2781, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2782, %r2758, %r2781;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2785, %r2777, %r2782;
	// end inline asm
	// begin inline asm
	mov.b32 %r2793, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r2804, {%rs1078, %rs1078};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2790, %r639, %r1244, %r2793, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2794, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2795, %r2793, %r2794;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2798, %r2790, %r2795;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2801, %r650, %r1244, %r2804, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2805, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2806, %r2804, %r2805;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2809, %r2801, %r2806;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2812, %r639, %r1266, %r2793, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2816, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2817, %r2793, %r2816;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2820, %r2812, %r2817;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2823, %r650, %r1266, %r2804, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2827, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2828, %r2804, %r2827;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2831, %r2823, %r2828;
	// end inline asm
	// begin inline asm
	mov.b32 %r2839, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r2850, {%rs1078, %rs1078};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2836, %r639, %r1290, %r2839, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2840, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2841, %r2839, %r2840;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2844, %r2836, %r2841;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2847, %r650, %r1290, %r2850, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2851, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2852, %r2850, %r2851;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2855, %r2847, %r2852;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2858, %r639, %r1312, %r2839, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2862, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2863, %r2839, %r2862;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2866, %r2858, %r2863;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2869, %r650, %r1312, %r2850, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2873, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2874, %r2850, %r2873;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2877, %r2869, %r2874;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2880, %r209, %r2706, %r2618;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2884, %r209, %r2717, %r2623;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2888, %r209, %r2728, %r2628;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2892, %r209, %r2739, %r2633;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2896, %r209, %r2752, %r2638;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2900, %r209, %r2763, %r2643;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2904, %r209, %r2774, %r2648;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2908, %r209, %r2785, %r2653;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2912, %r209, %r2798, %r2658;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2916, %r209, %r2809, %r2663;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2920, %r209, %r2820, %r2668;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2924, %r209, %r2831, %r2673;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2928, %r209, %r2844, %r2678;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2932, %r209, %r2855, %r2683;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2936, %r209, %r2866, %r2688;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2940, %r209, %r2877, %r2693;
	// end inline asm
	// begin inline asm
	mov.b32 %r2949, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r2960, {%rs1078, %rs1078};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2946, %r639, %r1432, %r2949, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2950, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2951, %r2949, %r2950;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2954, %r2946, %r2951;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2957, %r650, %r1432, %r2960, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2961, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2962, %r2960, %r2961;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2965, %r2957, %r2962;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2968, %r639, %r1454, %r2949, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2972, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2973, %r2949, %r2972;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2976, %r2968, %r2973;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2979, %r650, %r1454, %r2960, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2983, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2984, %r2960, %r2983;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2987, %r2979, %r2984;
	// end inline asm
	// begin inline asm
	mov.b32 %r2995, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r3006, {%rs1078, %rs1078};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2992, %r639, %r1478, %r2995, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2996, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2997, %r2995, %r2996;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3000, %r2992, %r2997;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3003, %r650, %r1478, %r3006, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3007, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3008, %r3006, %r3007;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3011, %r3003, %r3008;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3014, %r639, %r1500, %r2995, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3018, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3019, %r2995, %r3018;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3022, %r3014, %r3019;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3025, %r650, %r1500, %r3006, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3029, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3030, %r3006, %r3029;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3033, %r3025, %r3030;
	// end inline asm
	// begin inline asm
	mov.b32 %r3041, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r3052, {%rs1078, %rs1078};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3038, %r639, %r1524, %r3041, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3042, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3043, %r3041, %r3042;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3046, %r3038, %r3043;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3049, %r650, %r1524, %r3052, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3053, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3054, %r3052, %r3053;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3057, %r3049, %r3054;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3060, %r639, %r1546, %r3041, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3064, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3065, %r3041, %r3064;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3068, %r3060, %r3065;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3071, %r650, %r1546, %r3052, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3075, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3076, %r3052, %r3075;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3079, %r3071, %r3076;
	// end inline asm
	// begin inline asm
	mov.b32 %r3087, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r3098, {%rs1078, %rs1078};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3084, %r639, %r1570, %r3087, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3088, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3089, %r3087, %r3088;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3092, %r3084, %r3089;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3095, %r650, %r1570, %r3098, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3099, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3100, %r3098, %r3099;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3103, %r3095, %r3100;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3106, %r639, %r1592, %r3087, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3110, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3111, %r3087, %r3110;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3114, %r3106, %r3111;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3117, %r650, %r1592, %r3098, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3121, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3122, %r3098, %r3121;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3125, %r3117, %r3122;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3128, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3130, %r3128, %r2954, %r2880;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3134, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3136, %r3134, %r2965, %r2884;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3140, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3142, %r3140, %r2976, %r2888;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3146, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3148, %r3146, %r2987, %r2892;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3152, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3154, %r3152, %r3000, %r2896;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3158, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3160, %r3158, %r3011, %r2900;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3164, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3166, %r3164, %r3022, %r2904;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3170, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3172, %r3170, %r3033, %r2908;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3176, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3178, %r3176, %r3046, %r2912;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3182, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3184, %r3182, %r3057, %r2916;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3188, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3190, %r3188, %r3068, %r2920;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3194, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3196, %r3194, %r3079, %r2924;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3200, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3202, %r3200, %r3092, %r2928;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3206, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3208, %r3206, %r3103, %r2932;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3212, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3214, %r3212, %r3114, %r2936;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3218, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3220, %r3218, %r3125, %r2940;
	// end inline asm
	// begin inline asm
	mov.b32 %r3229, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r3240, {%rs1078, %rs1078};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3226, %r639, %r640, %r3229, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3230, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3231, %r3229, %r3230;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3234, %r3226, %r3231;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3237, %r650, %r640, %r3240, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3241, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3242, %r3240, %r3241;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3245, %r3237, %r3242;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3248, %r639, %r662, %r3229, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3252, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3253, %r3229, %r3252;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3256, %r3248, %r3253;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3259, %r650, %r662, %r3240, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3263, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3264, %r3240, %r3263;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3267, %r3259, %r3264;
	// end inline asm
	// begin inline asm
	mov.b32 %r3275, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r3286, {%rs1078, %rs1078};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3272, %r639, %r686, %r3275, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3276, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3277, %r3275, %r3276;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3280, %r3272, %r3277;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3283, %r650, %r686, %r3286, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3287, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3288, %r3286, %r3287;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3291, %r3283, %r3288;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3294, %r639, %r708, %r3275, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3298, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3299, %r3275, %r3298;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3302, %r3294, %r3299;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3305, %r650, %r708, %r3286, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3309, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3310, %r3286, %r3309;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3313, %r3305, %r3310;
	// end inline asm
	// begin inline asm
	mov.b32 %r3321, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r3332, {%rs1078, %rs1078};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3318, %r639, %r732, %r3321, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3322, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3323, %r3321, %r3322;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3326, %r3318, %r3323;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3329, %r650, %r732, %r3332, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3333, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3334, %r3332, %r3333;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3337, %r3329, %r3334;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3340, %r639, %r754, %r3321, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3344, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3345, %r3321, %r3344;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3348, %r3340, %r3345;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3351, %r650, %r754, %r3332, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3355, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3356, %r3332, %r3355;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3359, %r3351, %r3356;
	// end inline asm
	// begin inline asm
	mov.b32 %r3367, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r3378, {%rs1078, %rs1078};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3364, %r639, %r778, %r3367, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3368, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3369, %r3367, %r3368;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3372, %r3364, %r3369;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3375, %r650, %r778, %r3378, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3379, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3380, %r3378, %r3379;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3383, %r3375, %r3380;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3386, %r639, %r800, %r3367, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3390, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3391, %r3367, %r3390;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3394, %r3386, %r3391;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3397, %r650, %r800, %r3378, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3401, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3402, %r3378, %r3401;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3405, %r3397, %r3402;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3479, %r245, %r3234, %r3130;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3476, %r245, %r3245, %r3136;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3488, %r245, %r3256, %r3142;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3485, %r245, %r3267, %r3148;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3497, %r245, %r3280, %r3154;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3494, %r245, %r3291, %r3160;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3506, %r245, %r3302, %r3166;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3503, %r245, %r3313, %r3172;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3515, %r245, %r3326, %r3178;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3512, %r245, %r3337, %r3184;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3524, %r245, %r3348, %r3190;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3521, %r245, %r3359, %r3196;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3533, %r245, %r3372, %r3202;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3530, %r245, %r3383, %r3208;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3542, %r245, %r3394, %r3214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3539, %r245, %r3405, %r3220;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3472, %r269;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3474, %r3472, %r3476;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3477, %r266, %r3479, %r3474;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3481, %r269;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3483, %r3481, %r3485;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3486, %r266, %r3488, %r3483;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3490, %r269;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3492, %r3490, %r3494;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3495, %r266, %r3497, %r3492;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3499, %r269;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3501, %r3499, %r3503;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3504, %r266, %r3506, %r3501;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3508, %r269;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3510, %r3508, %r3512;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3513, %r266, %r3515, %r3510;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3517, %r269;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3519, %r3517, %r3521;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3522, %r266, %r3524, %r3519;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3526, %r269;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3528, %r3526, %r3530;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3531, %r266, %r3533, %r3528;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3535, %r269;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3537, %r3535, %r3539;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3540, %r266, %r3542, %r3537;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3544, %r269, %r3479;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3547, %r266, %r3476, %r3544;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3551, %r269, %r3488;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3554, %r266, %r3485, %r3551;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3558, %r269, %r3497;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3561, %r266, %r3494, %r3558;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3565, %r269, %r3506;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3568, %r266, %r3503, %r3565;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3572, %r269, %r3515;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3575, %r266, %r3512, %r3572;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3579, %r269, %r3524;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3582, %r266, %r3521, %r3579;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3586, %r269, %r3533;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3589, %r266, %r3530, %r3586;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3593, %r269, %r3542;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3596, %r266, %r3539, %r3593;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3687, %r3684}, {%r325, %r331, %r328, %r334}, {%r3477, %r3547}, {%r7963, %r7963};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3696, %r3693}, {%r325, %r331, %r328, %r334}, {%r3486, %r3554}, {%r7963, %r7963};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3705, %r3702}, {%r325, %r331, %r328, %r334}, {%r3495, %r3561}, {%r7963, %r7963};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3714, %r3711}, {%r325, %r331, %r328, %r334}, {%r3504, %r3568}, {%r7963, %r7963};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3723, %r3720}, {%r325, %r331, %r328, %r334}, {%r3513, %r3575}, {%r7963, %r7963};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3732, %r3729}, {%r325, %r331, %r328, %r334}, {%r3522, %r3582}, {%r7963, %r7963};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3741, %r3738}, {%r325, %r331, %r328, %r334}, {%r3531, %r3589}, {%r7963, %r7963};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3750, %r3747}, {%r325, %r331, %r328, %r334}, {%r3540, %r3596}, {%r7963, %r7963};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3680, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3682, %r3680, %r3684;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3685, %r369, %r3687, %r3682;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3689, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3691, %r3689, %r3693;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3694, %r369, %r3696, %r3691;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3698, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3700, %r3698, %r3702;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3703, %r369, %r3705, %r3700;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3707, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3709, %r3707, %r3711;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3712, %r369, %r3714, %r3709;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3716, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3718, %r3716, %r3720;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3721, %r369, %r3723, %r3718;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3725, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3727, %r3725, %r3729;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3730, %r369, %r3732, %r3727;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3734, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3736, %r3734, %r3738;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3739, %r369, %r3741, %r3736;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3743, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3745, %r3743, %r3747;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3748, %r369, %r3750, %r3745;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3752, %r372, %r3687;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3755, %r369, %r3684, %r3752;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3759, %r372, %r3696;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3762, %r369, %r3693, %r3759;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3766, %r372, %r3705;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3769, %r369, %r3702, %r3766;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3773, %r372, %r3714;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3776, %r369, %r3711, %r3773;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3780, %r372, %r3723;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3783, %r369, %r3720, %r3780;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3787, %r372, %r3732;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3790, %r369, %r3729, %r3787;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3794, %r372, %r3741;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3797, %r369, %r3738, %r3794;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3801, %r372, %r3750;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3804, %r369, %r3747, %r3801;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3808, %r3809}, {%r403, %r409, %r406, %r412}, {%r3685, %r3755}, {%r7963, %r7963};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3818, %r3819}, {%r403, %r409, %r406, %r412}, {%r3694, %r3762}, {%r7963, %r7963};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3828, %r3829}, {%r403, %r409, %r406, %r412}, {%r3703, %r3769}, {%r7963, %r7963};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3838, %r3839}, {%r403, %r409, %r406, %r412}, {%r3712, %r3776}, {%r7963, %r7963};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3848, %r3849}, {%r403, %r409, %r406, %r412}, {%r3721, %r3783}, {%r7963, %r7963};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3858, %r3859}, {%r403, %r409, %r406, %r412}, {%r3730, %r3790}, {%r7963, %r7963};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3868, %r3869}, {%r403, %r409, %r406, %r412}, {%r3739, %r3797}, {%r7963, %r7963};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3878, %r3879}, {%r403, %r409, %r406, %r412}, {%r3748, %r3804}, {%r7963, %r7963};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3888, %r87, %r3808;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3891, %r87, %r3809;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3894, %r87, %r3818;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3897, %r87, %r3819;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3900, %r87, %r3828;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3903, %r87, %r3829;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3906, %r87, %r3838;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3909, %r87, %r3839;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3912, %r87, %r3848;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3915, %r87, %r3849;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3918, %r87, %r3858;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3921, %r87, %r3859;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3924, %r87, %r3868;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3927, %r87, %r3869;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3930, %r87, %r3878;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3933, %r87, %r3879;
	// end inline asm
	// begin inline asm
	mov.b32 %r3936, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r3937, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3938, %r3888, %r3936;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3941, %r3938, %r3937;
	// end inline asm
	// begin inline asm
	mov.b32 %r3944, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r3945, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3946, %r3891, %r3944;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3949, %r3946, %r3945;
	// end inline asm
	// begin inline asm
	mov.b32 %r3952, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r3953, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3954, %r3894, %r3952;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3957, %r3954, %r3953;
	// end inline asm
	// begin inline asm
	mov.b32 %r3960, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r3961, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3962, %r3897, %r3960;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3965, %r3962, %r3961;
	// end inline asm
	// begin inline asm
	mov.b32 %r3968, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r3969, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3970, %r3900, %r3968;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3973, %r3970, %r3969;
	// end inline asm
	// begin inline asm
	mov.b32 %r3976, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r3977, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3978, %r3903, %r3976;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3981, %r3978, %r3977;
	// end inline asm
	// begin inline asm
	mov.b32 %r3984, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r3985, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3986, %r3906, %r3984;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3989, %r3986, %r3985;
	// end inline asm
	// begin inline asm
	mov.b32 %r3992, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r3993, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3994, %r3909, %r3992;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3997, %r3994, %r3993;
	// end inline asm
	// begin inline asm
	mov.b32 %r4000, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r4001, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4002, %r3912, %r4000;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4005, %r4002, %r4001;
	// end inline asm
	// begin inline asm
	mov.b32 %r4008, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r4009, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4010, %r3915, %r4008;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4013, %r4010, %r4009;
	// end inline asm
	// begin inline asm
	mov.b32 %r4016, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r4017, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4018, %r3918, %r4016;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4021, %r4018, %r4017;
	// end inline asm
	// begin inline asm
	mov.b32 %r4024, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r4025, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4026, %r3921, %r4024;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4029, %r4026, %r4025;
	// end inline asm
	// begin inline asm
	mov.b32 %r4032, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r4033, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4034, %r3924, %r4032;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4037, %r4034, %r4033;
	// end inline asm
	// begin inline asm
	mov.b32 %r4040, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r4041, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4042, %r3927, %r4040;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4045, %r4042, %r4041;
	// end inline asm
	// begin inline asm
	mov.b32 %r4048, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r4049, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4050, %r3930, %r4048;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4053, %r4050, %r4049;
	// end inline asm
	// begin inline asm
	mov.b32 %r4056, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r4057, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4058, %r3933, %r4056;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4061, %r4058, %r4057;
	// end inline asm
	// begin inline asm
	mov.b32 %r4067, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r4065, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4066, %r4067, %r4065;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4069, %r3941, %r4066;
	// end inline asm
	// begin inline asm
	mov.b32 %r4072, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4073, %r4067, %r4072;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4076, %r3949, %r4073;
	// end inline asm
	// begin inline asm
	mov.b32 %r4079, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4080, %r4067, %r4079;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4083, %r3957, %r4080;
	// end inline asm
	// begin inline asm
	mov.b32 %r4086, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4087, %r4067, %r4086;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4090, %r3965, %r4087;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4093, %r4069, %r4083, %r2300;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4097, %r4076, %r4090, %r2300;
	// end inline asm
	shl.b32 	%r4104, %r4097, 4;
	// begin inline asm
	lop3.b32 %r4101, %r2306, %r4093, %r4104, 202;
	// end inline asm
	xor.b32  	%r7853, %r4101, -2004318072;
	// begin inline asm
	mov.b32 %r4108, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r4106, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4107, %r4108, %r4106;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4110, %r3973, %r4107;
	// end inline asm
	// begin inline asm
	mov.b32 %r4113, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4114, %r4108, %r4113;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4117, %r3981, %r4114;
	// end inline asm
	// begin inline asm
	mov.b32 %r4120, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4121, %r4108, %r4120;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4124, %r3989, %r4121;
	// end inline asm
	// begin inline asm
	mov.b32 %r4127, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4128, %r4108, %r4127;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4131, %r3997, %r4128;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4134, %r4110, %r4124, %r2300;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4138, %r4117, %r4131, %r2300;
	// end inline asm
	shl.b32 	%r4145, %r4138, 4;
	// begin inline asm
	lop3.b32 %r4142, %r2306, %r4134, %r4145, 202;
	// end inline asm
	xor.b32  	%r7854, %r4142, -2004318072;
	// begin inline asm
	mov.b32 %r4149, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r4147, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4148, %r4149, %r4147;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4151, %r4005, %r4148;
	// end inline asm
	// begin inline asm
	mov.b32 %r4154, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4155, %r4149, %r4154;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4158, %r4013, %r4155;
	// end inline asm
	// begin inline asm
	mov.b32 %r4161, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4162, %r4149, %r4161;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4165, %r4021, %r4162;
	// end inline asm
	// begin inline asm
	mov.b32 %r4168, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4169, %r4149, %r4168;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4172, %r4029, %r4169;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4175, %r4151, %r4165, %r2300;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4179, %r4158, %r4172, %r2300;
	// end inline asm
	shl.b32 	%r4186, %r4179, 4;
	// begin inline asm
	lop3.b32 %r4183, %r2306, %r4175, %r4186, 202;
	// end inline asm
	xor.b32  	%r7855, %r4183, -2004318072;
	// begin inline asm
	mov.b32 %r4190, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r4188, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4189, %r4190, %r4188;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4192, %r4037, %r4189;
	// end inline asm
	// begin inline asm
	mov.b32 %r4195, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4196, %r4190, %r4195;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4199, %r4045, %r4196;
	// end inline asm
	// begin inline asm
	mov.b32 %r4202, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4203, %r4190, %r4202;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4206, %r4053, %r4203;
	// end inline asm
	// begin inline asm
	mov.b32 %r4209, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4210, %r4190, %r4209;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4213, %r4061, %r4210;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4216, %r4192, %r4206, %r2300;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4220, %r4199, %r4213, %r2300;
	// end inline asm
	shl.b32 	%r4227, %r4220, 4;
	// begin inline asm
	lop3.b32 %r4224, %r2306, %r4216, %r4227, 202;
	// end inline asm
	xor.b32  	%r7856, %r4224, -2004318072;
	st.shared.u32 	[%rd154], %r7853;
	st.shared.u32 	[%rd155], %r7854;
	st.shared.u32 	[%rd156], %r7855;
	st.shared.u32 	[%rd157], %r7856;
	ld.shared.u32 	%r8002, [%rd95];
	ld.shared.u32 	%r8001, [%rd97];
	ld.shared.u32 	%r7996, [%rd99];
	ld.shared.u32 	%r7995, [%rd101];
	// begin inline asm
	mov.b32 %r4233, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r4244, {%rs1078, %rs1078};
	// end inline asm
	xor.b32  	%r4232, %r8002, -2004318072;
	// begin inline asm
	lop3.b32 %r4230, %r639, %r4232, %r4233, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4234, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4235, %r4233, %r4234;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4238, %r4230, %r4235;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4241, %r650, %r4232, %r4244, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4245, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4246, %r4244, %r4245;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4249, %r4241, %r4246;
	// end inline asm
	shr.u32 	%r4254, %r4232, 8;
	// begin inline asm
	lop3.b32 %r4252, %r639, %r4254, %r4233, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4256, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4257, %r4233, %r4256;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4260, %r4252, %r4257;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4263, %r650, %r4254, %r4244, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4267, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4268, %r4244, %r4267;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4271, %r4263, %r4268;
	// end inline asm
	// begin inline asm
	mov.b32 %r4279, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r4290, {%rs1078, %rs1078};
	// end inline asm
	xor.b32  	%r4278, %r8001, -2004318072;
	// begin inline asm
	lop3.b32 %r4276, %r639, %r4278, %r4279, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4280, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4281, %r4279, %r4280;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4284, %r4276, %r4281;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4287, %r650, %r4278, %r4290, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4291, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4292, %r4290, %r4291;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4295, %r4287, %r4292;
	// end inline asm
	shr.u32 	%r4300, %r4278, 8;
	// begin inline asm
	lop3.b32 %r4298, %r639, %r4300, %r4279, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4302, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4303, %r4279, %r4302;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4306, %r4298, %r4303;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4309, %r650, %r4300, %r4290, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4313, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4314, %r4290, %r4313;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4317, %r4309, %r4314;
	// end inline asm
	// begin inline asm
	mov.b32 %r4325, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r4336, {%rs1078, %rs1078};
	// end inline asm
	xor.b32  	%r4324, %r7996, -2004318072;
	// begin inline asm
	lop3.b32 %r4322, %r639, %r4324, %r4325, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4326, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4327, %r4325, %r4326;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4330, %r4322, %r4327;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4333, %r650, %r4324, %r4336, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4337, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4338, %r4336, %r4337;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4341, %r4333, %r4338;
	// end inline asm
	shr.u32 	%r4346, %r4324, 8;
	// begin inline asm
	lop3.b32 %r4344, %r639, %r4346, %r4325, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4348, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4349, %r4325, %r4348;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4352, %r4344, %r4349;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4355, %r650, %r4346, %r4336, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4359, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4360, %r4336, %r4359;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4363, %r4355, %r4360;
	// end inline asm
	// begin inline asm
	mov.b32 %r4371, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r4382, {%rs1078, %rs1078};
	// end inline asm
	xor.b32  	%r4370, %r7995, -2004318072;
	// begin inline asm
	lop3.b32 %r4368, %r639, %r4370, %r4371, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4372, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4373, %r4371, %r4372;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4376, %r4368, %r4373;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4379, %r650, %r4370, %r4382, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4383, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4384, %r4382, %r4383;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4387, %r4379, %r4384;
	// end inline asm
	shr.u32 	%r4392, %r4370, 8;
	// begin inline asm
	lop3.b32 %r4390, %r639, %r4392, %r4371, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4394, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4395, %r4371, %r4394;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4398, %r4390, %r4395;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4401, %r650, %r4392, %r4382, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4405, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4406, %r4382, %r4405;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4409, %r4401, %r4406;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4412, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4414, %r4412, %r4238;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4417, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4419, %r4417, %r4249;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4422, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4424, %r4422, %r4260;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4427, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4429, %r4427, %r4271;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4432, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4434, %r4432, %r4284;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4437, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4439, %r4437, %r4295;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4442, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4444, %r4442, %r4306;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4447, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4449, %r4447, %r4317;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4452, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4454, %r4452, %r4330;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4457, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4459, %r4457, %r4341;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4462, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4464, %r4462, %r4352;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4467, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4469, %r4467, %r4363;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4472, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4474, %r4472, %r4376;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4477, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4479, %r4477, %r4387;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4482, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4484, %r4482, %r4398;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4487, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4489, %r4487, %r4409;
	// end inline asm
	// begin inline asm
	mov.b32 %r4497, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r4508, {%rs1078, %rs1078};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4494, %r639, %r1432, %r4497, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4498, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4499, %r4497, %r4498;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4502, %r4494, %r4499;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4505, %r650, %r1432, %r4508, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4509, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4510, %r4508, %r4509;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4513, %r4505, %r4510;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4516, %r639, %r1454, %r4497, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4520, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4521, %r4497, %r4520;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4524, %r4516, %r4521;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4527, %r650, %r1454, %r4508, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4531, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4532, %r4508, %r4531;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4535, %r4527, %r4532;
	// end inline asm
	// begin inline asm
	mov.b32 %r4543, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r4554, {%rs1078, %rs1078};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4540, %r639, %r1478, %r4543, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4544, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4545, %r4543, %r4544;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4548, %r4540, %r4545;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4551, %r650, %r1478, %r4554, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4555, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4556, %r4554, %r4555;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4559, %r4551, %r4556;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4562, %r639, %r1500, %r4543, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4566, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4567, %r4543, %r4566;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4570, %r4562, %r4567;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4573, %r650, %r1500, %r4554, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4577, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4578, %r4554, %r4577;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4581, %r4573, %r4578;
	// end inline asm
	// begin inline asm
	mov.b32 %r4589, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r4600, {%rs1078, %rs1078};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4586, %r639, %r1524, %r4589, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4590, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4591, %r4589, %r4590;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4594, %r4586, %r4591;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4597, %r650, %r1524, %r4600, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4601, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4602, %r4600, %r4601;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4605, %r4597, %r4602;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4608, %r639, %r1546, %r4589, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4612, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4613, %r4589, %r4612;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4616, %r4608, %r4613;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4619, %r650, %r1546, %r4600, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4623, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4624, %r4600, %r4623;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4627, %r4619, %r4624;
	// end inline asm
	// begin inline asm
	mov.b32 %r4635, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r4646, {%rs1078, %rs1078};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4632, %r639, %r1570, %r4635, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4636, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4637, %r4635, %r4636;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4640, %r4632, %r4637;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4643, %r650, %r1570, %r4646, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4647, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4648, %r4646, %r4647;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4651, %r4643, %r4648;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4654, %r639, %r1592, %r4635, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4658, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4659, %r4635, %r4658;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4662, %r4654, %r4659;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4665, %r650, %r1592, %r4646, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4669, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4670, %r4646, %r4669;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4673, %r4665, %r4670;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4676, %r209, %r4502, %r4414;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4680, %r209, %r4513, %r4419;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4684, %r209, %r4524, %r4424;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4688, %r209, %r4535, %r4429;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4692, %r209, %r4548, %r4434;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4696, %r209, %r4559, %r4439;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4700, %r209, %r4570, %r4444;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4704, %r209, %r4581, %r4449;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4708, %r209, %r4594, %r4454;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4712, %r209, %r4605, %r4459;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4716, %r209, %r4616, %r4464;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4720, %r209, %r4627, %r4469;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4724, %r209, %r4640, %r4474;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4728, %r209, %r4651, %r4479;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4732, %r209, %r4662, %r4484;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4736, %r209, %r4673, %r4489;
	// end inline asm
	// begin inline asm
	mov.b32 %r4745, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r4756, {%rs1078, %rs1078};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4742, %r639, %r640, %r4745, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4746, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4747, %r4745, %r4746;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4750, %r4742, %r4747;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4753, %r650, %r640, %r4756, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4757, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4758, %r4756, %r4757;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4761, %r4753, %r4758;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4764, %r639, %r662, %r4745, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4768, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4769, %r4745, %r4768;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4772, %r4764, %r4769;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4775, %r650, %r662, %r4756, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4779, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4780, %r4756, %r4779;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4783, %r4775, %r4780;
	// end inline asm
	// begin inline asm
	mov.b32 %r4791, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r4802, {%rs1078, %rs1078};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4788, %r639, %r686, %r4791, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4792, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4793, %r4791, %r4792;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4796, %r4788, %r4793;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4799, %r650, %r686, %r4802, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4803, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4804, %r4802, %r4803;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4807, %r4799, %r4804;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4810, %r639, %r708, %r4791, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4814, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4815, %r4791, %r4814;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4818, %r4810, %r4815;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4821, %r650, %r708, %r4802, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4825, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4826, %r4802, %r4825;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4829, %r4821, %r4826;
	// end inline asm
	// begin inline asm
	mov.b32 %r4837, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r4848, {%rs1078, %rs1078};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4834, %r639, %r732, %r4837, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4838, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4839, %r4837, %r4838;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4842, %r4834, %r4839;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4845, %r650, %r732, %r4848, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4849, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4850, %r4848, %r4849;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4853, %r4845, %r4850;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4856, %r639, %r754, %r4837, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4860, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4861, %r4837, %r4860;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4864, %r4856, %r4861;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4867, %r650, %r754, %r4848, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4871, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4872, %r4848, %r4871;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4875, %r4867, %r4872;
	// end inline asm
	// begin inline asm
	mov.b32 %r4883, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r4894, {%rs1078, %rs1078};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4880, %r639, %r778, %r4883, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4884, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4885, %r4883, %r4884;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4888, %r4880, %r4885;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4891, %r650, %r778, %r4894, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4895, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4896, %r4894, %r4895;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4899, %r4891, %r4896;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4902, %r639, %r800, %r4883, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4906, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4907, %r4883, %r4906;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4910, %r4902, %r4907;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4913, %r650, %r800, %r4894, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4917, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4918, %r4894, %r4917;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4921, %r4913, %r4918;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4924, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4926, %r4924, %r4750, %r4676;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4930, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4932, %r4930, %r4761, %r4680;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4936, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4938, %r4936, %r4772, %r4684;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4942, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4944, %r4942, %r4783, %r4688;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4948, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4950, %r4948, %r4796, %r4692;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4954, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4956, %r4954, %r4807, %r4696;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4960, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4962, %r4960, %r4818, %r4700;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4966, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4968, %r4966, %r4829, %r4704;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4972, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4974, %r4972, %r4842, %r4708;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4978, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4980, %r4978, %r4853, %r4712;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4984, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4986, %r4984, %r4864, %r4716;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4990, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4992, %r4990, %r4875, %r4720;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4996, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4998, %r4996, %r4888, %r4724;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5002, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5004, %r5002, %r4899, %r4728;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5008, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5010, %r5008, %r4910, %r4732;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5014, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5016, %r5014, %r4921, %r4736;
	// end inline asm
	// begin inline asm
	mov.b32 %r5025, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r5036, {%rs1078, %rs1078};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5022, %r639, %r2436, %r5025, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5026, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5027, %r5025, %r5026;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5030, %r5022, %r5027;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5033, %r650, %r2436, %r5036, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5037, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5038, %r5036, %r5037;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5041, %r5033, %r5038;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5044, %r639, %r2458, %r5025, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5048, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5049, %r5025, %r5048;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5052, %r5044, %r5049;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5055, %r650, %r2458, %r5036, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5059, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5060, %r5036, %r5059;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5063, %r5055, %r5060;
	// end inline asm
	// begin inline asm
	mov.b32 %r5071, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r5082, {%rs1078, %rs1078};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5068, %r639, %r2482, %r5071, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5072, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5073, %r5071, %r5072;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5076, %r5068, %r5073;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5079, %r650, %r2482, %r5082, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5083, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5084, %r5082, %r5083;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5087, %r5079, %r5084;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5090, %r639, %r2504, %r5071, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5094, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5095, %r5071, %r5094;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5098, %r5090, %r5095;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5101, %r650, %r2504, %r5082, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5105, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5106, %r5082, %r5105;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5109, %r5101, %r5106;
	// end inline asm
	// begin inline asm
	mov.b32 %r5117, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r5128, {%rs1078, %rs1078};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5114, %r639, %r2528, %r5117, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5118, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5119, %r5117, %r5118;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5122, %r5114, %r5119;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5125, %r650, %r2528, %r5128, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5129, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5130, %r5128, %r5129;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5133, %r5125, %r5130;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5136, %r639, %r2550, %r5117, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5140, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5141, %r5117, %r5140;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5144, %r5136, %r5141;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5147, %r650, %r2550, %r5128, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5151, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5152, %r5128, %r5151;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5155, %r5147, %r5152;
	// end inline asm
	// begin inline asm
	mov.b32 %r5163, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r5174, {%rs1078, %rs1078};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5160, %r639, %r2574, %r5163, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5164, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5165, %r5163, %r5164;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5168, %r5160, %r5165;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5171, %r650, %r2574, %r5174, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5175, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5176, %r5174, %r5175;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5179, %r5171, %r5176;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5182, %r639, %r2596, %r5163, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5186, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5187, %r5163, %r5186;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5190, %r5182, %r5187;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5193, %r650, %r2596, %r5174, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5197, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5198, %r5174, %r5197;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5201, %r5193, %r5198;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5275, %r245, %r5030, %r4926;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5272, %r245, %r5041, %r4932;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5284, %r245, %r5052, %r4938;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5281, %r245, %r5063, %r4944;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5293, %r245, %r5076, %r4950;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5290, %r245, %r5087, %r4956;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5302, %r245, %r5098, %r4962;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5299, %r245, %r5109, %r4968;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5311, %r245, %r5122, %r4974;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5308, %r245, %r5133, %r4980;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5320, %r245, %r5144, %r4986;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5317, %r245, %r5155, %r4992;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5329, %r245, %r5168, %r4998;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5326, %r245, %r5179, %r5004;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5338, %r245, %r5190, %r5010;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5335, %r245, %r5201, %r5016;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5268, %r269;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5270, %r5268, %r5272;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5273, %r266, %r5275, %r5270;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5277, %r269;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5279, %r5277, %r5281;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5282, %r266, %r5284, %r5279;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5286, %r269;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5288, %r5286, %r5290;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5291, %r266, %r5293, %r5288;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5295, %r269;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5297, %r5295, %r5299;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5300, %r266, %r5302, %r5297;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5304, %r269;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5306, %r5304, %r5308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5309, %r266, %r5311, %r5306;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5313, %r269;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5315, %r5313, %r5317;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5318, %r266, %r5320, %r5315;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5322, %r269;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5324, %r5322, %r5326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5327, %r266, %r5329, %r5324;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5331, %r269;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5333, %r5331, %r5335;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5336, %r266, %r5338, %r5333;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5340, %r269, %r5275;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5343, %r266, %r5272, %r5340;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5347, %r269, %r5284;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5350, %r266, %r5281, %r5347;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5354, %r269, %r5293;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5357, %r266, %r5290, %r5354;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5361, %r269, %r5302;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5364, %r266, %r5299, %r5361;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5368, %r269, %r5311;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5371, %r266, %r5308, %r5368;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5375, %r269, %r5320;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5378, %r266, %r5317, %r5375;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5382, %r269, %r5329;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5385, %r266, %r5326, %r5382;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5389, %r269, %r5338;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5392, %r266, %r5335, %r5389;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5483, %r5480}, {%r325, %r331, %r328, %r334}, {%r5273, %r5343}, {%r7963, %r7963};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5492, %r5489}, {%r325, %r331, %r328, %r334}, {%r5282, %r5350}, {%r7963, %r7963};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5501, %r5498}, {%r325, %r331, %r328, %r334}, {%r5291, %r5357}, {%r7963, %r7963};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5510, %r5507}, {%r325, %r331, %r328, %r334}, {%r5300, %r5364}, {%r7963, %r7963};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5519, %r5516}, {%r325, %r331, %r328, %r334}, {%r5309, %r5371}, {%r7963, %r7963};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5528, %r5525}, {%r325, %r331, %r328, %r334}, {%r5318, %r5378}, {%r7963, %r7963};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5537, %r5534}, {%r325, %r331, %r328, %r334}, {%r5327, %r5385}, {%r7963, %r7963};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5546, %r5543}, {%r325, %r331, %r328, %r334}, {%r5336, %r5392}, {%r7963, %r7963};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5476, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5478, %r5476, %r5480;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5481, %r369, %r5483, %r5478;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5485, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5487, %r5485, %r5489;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5490, %r369, %r5492, %r5487;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5494, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5496, %r5494, %r5498;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5499, %r369, %r5501, %r5496;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5503, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5505, %r5503, %r5507;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5508, %r369, %r5510, %r5505;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5512, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5514, %r5512, %r5516;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5517, %r369, %r5519, %r5514;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5521, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5523, %r5521, %r5525;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5526, %r369, %r5528, %r5523;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5530, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5532, %r5530, %r5534;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5535, %r369, %r5537, %r5532;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5539, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5541, %r5539, %r5543;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5544, %r369, %r5546, %r5541;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5548, %r372, %r5483;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5551, %r369, %r5480, %r5548;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5555, %r372, %r5492;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5558, %r369, %r5489, %r5555;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5562, %r372, %r5501;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5565, %r369, %r5498, %r5562;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5569, %r372, %r5510;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5572, %r369, %r5507, %r5569;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5576, %r372, %r5519;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5579, %r369, %r5516, %r5576;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5583, %r372, %r5528;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5586, %r369, %r5525, %r5583;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5590, %r372, %r5537;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5593, %r369, %r5534, %r5590;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5597, %r372, %r5546;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5600, %r369, %r5543, %r5597;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5604, %r5605}, {%r403, %r409, %r406, %r412}, {%r5481, %r5551}, {%r7963, %r7963};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5614, %r5615}, {%r403, %r409, %r406, %r412}, {%r5490, %r5558}, {%r7963, %r7963};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5624, %r5625}, {%r403, %r409, %r406, %r412}, {%r5499, %r5565}, {%r7963, %r7963};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5634, %r5635}, {%r403, %r409, %r406, %r412}, {%r5508, %r5572}, {%r7963, %r7963};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5644, %r5645}, {%r403, %r409, %r406, %r412}, {%r5517, %r5579}, {%r7963, %r7963};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5654, %r5655}, {%r403, %r409, %r406, %r412}, {%r5526, %r5586}, {%r7963, %r7963};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5664, %r5665}, {%r403, %r409, %r406, %r412}, {%r5535, %r5593}, {%r7963, %r7963};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5674, %r5675}, {%r403, %r409, %r406, %r412}, {%r5544, %r5600}, {%r7963, %r7963};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5684, %r87, %r5604;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5687, %r87, %r5605;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5690, %r87, %r5614;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5693, %r87, %r5615;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5696, %r87, %r5624;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5699, %r87, %r5625;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5702, %r87, %r5634;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5705, %r87, %r5635;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5708, %r87, %r5644;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5711, %r87, %r5645;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5714, %r87, %r5654;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5717, %r87, %r5655;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5720, %r87, %r5664;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5723, %r87, %r5665;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5726, %r87, %r5674;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5729, %r87, %r5675;
	// end inline asm
	// begin inline asm
	mov.b32 %r5732, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r5733, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5734, %r5684, %r5732;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5737, %r5734, %r5733;
	// end inline asm
	// begin inline asm
	mov.b32 %r5740, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r5741, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5742, %r5687, %r5740;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5745, %r5742, %r5741;
	// end inline asm
	// begin inline asm
	mov.b32 %r5748, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r5749, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5750, %r5690, %r5748;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5753, %r5750, %r5749;
	// end inline asm
	// begin inline asm
	mov.b32 %r5756, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r5757, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5758, %r5693, %r5756;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5761, %r5758, %r5757;
	// end inline asm
	// begin inline asm
	mov.b32 %r5764, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r5765, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5766, %r5696, %r5764;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5769, %r5766, %r5765;
	// end inline asm
	// begin inline asm
	mov.b32 %r5772, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r5773, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5774, %r5699, %r5772;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5777, %r5774, %r5773;
	// end inline asm
	// begin inline asm
	mov.b32 %r5780, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r5781, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5782, %r5702, %r5780;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5785, %r5782, %r5781;
	// end inline asm
	// begin inline asm
	mov.b32 %r5788, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r5789, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5790, %r5705, %r5788;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5793, %r5790, %r5789;
	// end inline asm
	// begin inline asm
	mov.b32 %r5796, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r5797, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5798, %r5708, %r5796;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5801, %r5798, %r5797;
	// end inline asm
	// begin inline asm
	mov.b32 %r5804, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r5805, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5806, %r5711, %r5804;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5809, %r5806, %r5805;
	// end inline asm
	// begin inline asm
	mov.b32 %r5812, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r5813, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5814, %r5714, %r5812;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5817, %r5814, %r5813;
	// end inline asm
	// begin inline asm
	mov.b32 %r5820, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r5821, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5822, %r5717, %r5820;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5825, %r5822, %r5821;
	// end inline asm
	// begin inline asm
	mov.b32 %r5828, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r5829, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5830, %r5720, %r5828;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5833, %r5830, %r5829;
	// end inline asm
	// begin inline asm
	mov.b32 %r5836, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r5837, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5838, %r5723, %r5836;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5841, %r5838, %r5837;
	// end inline asm
	// begin inline asm
	mov.b32 %r5844, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r5845, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5846, %r5726, %r5844;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5849, %r5846, %r5845;
	// end inline asm
	// begin inline asm
	mov.b32 %r5852, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r5853, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5854, %r5729, %r5852;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5857, %r5854, %r5853;
	// end inline asm
	// begin inline asm
	mov.b32 %r5863, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r5861, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5862, %r5863, %r5861;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5865, %r5737, %r5862;
	// end inline asm
	// begin inline asm
	mov.b32 %r5868, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5869, %r5863, %r5868;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5872, %r5745, %r5869;
	// end inline asm
	// begin inline asm
	mov.b32 %r5875, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5876, %r5863, %r5875;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5879, %r5753, %r5876;
	// end inline asm
	// begin inline asm
	mov.b32 %r5882, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5883, %r5863, %r5882;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5886, %r5761, %r5883;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5889, %r5865, %r5879, %r2300;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5893, %r5872, %r5886, %r2300;
	// end inline asm
	shl.b32 	%r5900, %r5893, 4;
	// begin inline asm
	lop3.b32 %r5897, %r2306, %r5889, %r5900, 202;
	// end inline asm
	xor.b32  	%r7857, %r5897, -2004318072;
	// begin inline asm
	mov.b32 %r5904, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r5902, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5903, %r5904, %r5902;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5906, %r5769, %r5903;
	// end inline asm
	// begin inline asm
	mov.b32 %r5909, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5910, %r5904, %r5909;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5913, %r5777, %r5910;
	// end inline asm
	// begin inline asm
	mov.b32 %r5916, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5917, %r5904, %r5916;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5920, %r5785, %r5917;
	// end inline asm
	// begin inline asm
	mov.b32 %r5923, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5924, %r5904, %r5923;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5927, %r5793, %r5924;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5930, %r5906, %r5920, %r2300;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5934, %r5913, %r5927, %r2300;
	// end inline asm
	shl.b32 	%r5941, %r5934, 4;
	// begin inline asm
	lop3.b32 %r5938, %r2306, %r5930, %r5941, 202;
	// end inline asm
	xor.b32  	%r7858, %r5938, -2004318072;
	// begin inline asm
	mov.b32 %r5945, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r5943, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5944, %r5945, %r5943;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5947, %r5801, %r5944;
	// end inline asm
	// begin inline asm
	mov.b32 %r5950, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5951, %r5945, %r5950;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5954, %r5809, %r5951;
	// end inline asm
	// begin inline asm
	mov.b32 %r5957, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5958, %r5945, %r5957;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5961, %r5817, %r5958;
	// end inline asm
	// begin inline asm
	mov.b32 %r5964, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5965, %r5945, %r5964;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5968, %r5825, %r5965;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5971, %r5947, %r5961, %r2300;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5975, %r5954, %r5968, %r2300;
	// end inline asm
	shl.b32 	%r5982, %r5975, 4;
	// begin inline asm
	lop3.b32 %r5979, %r2306, %r5971, %r5982, 202;
	// end inline asm
	xor.b32  	%r7859, %r5979, -2004318072;
	// begin inline asm
	mov.b32 %r5986, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r5984, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5985, %r5986, %r5984;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5988, %r5833, %r5985;
	// end inline asm
	// begin inline asm
	mov.b32 %r5991, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5992, %r5986, %r5991;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5995, %r5841, %r5992;
	// end inline asm
	// begin inline asm
	mov.b32 %r5998, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5999, %r5986, %r5998;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6002, %r5849, %r5999;
	// end inline asm
	// begin inline asm
	mov.b32 %r6005, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6006, %r5986, %r6005;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6009, %r5857, %r6006;
	// end inline asm
	// begin inline asm
	prmt.b32 %r6012, %r5988, %r6002, %r2300;
	// end inline asm
	// begin inline asm
	prmt.b32 %r6016, %r5995, %r6009, %r2300;
	// end inline asm
	shl.b32 	%r6023, %r6016, 4;
	// begin inline asm
	lop3.b32 %r6020, %r2306, %r6012, %r6023, 202;
	// end inline asm
	xor.b32  	%r7860, %r6020, -2004318072;
	st.shared.u32 	[%rd154], %r7857;
	st.shared.u32 	[%rd155], %r7858;
	st.shared.u32 	[%rd156], %r7859;
	st.shared.u32 	[%rd157], %r7860;
	ld.shared.u32 	%r8000, [%rd95];
	ld.shared.u32 	%r7999, [%rd97];
	ld.shared.u32 	%r7994, [%rd99];
	ld.shared.u32 	%r7993, [%rd101];
	// begin inline asm
	mov.b32 %r6029, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r6040, {%rs1078, %rs1078};
	// end inline asm
	xor.b32  	%r6028, %r8000, -2004318072;
	// begin inline asm
	lop3.b32 %r6026, %r639, %r6028, %r6029, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6030, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6031, %r6029, %r6030;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6034, %r6026, %r6031;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6037, %r650, %r6028, %r6040, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6041, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6042, %r6040, %r6041;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6045, %r6037, %r6042;
	// end inline asm
	shr.u32 	%r6050, %r6028, 8;
	// begin inline asm
	lop3.b32 %r6048, %r639, %r6050, %r6029, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6052, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6053, %r6029, %r6052;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6056, %r6048, %r6053;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6059, %r650, %r6050, %r6040, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6063, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6064, %r6040, %r6063;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6067, %r6059, %r6064;
	// end inline asm
	// begin inline asm
	mov.b32 %r6075, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r6086, {%rs1078, %rs1078};
	// end inline asm
	xor.b32  	%r6074, %r7999, -2004318072;
	// begin inline asm
	lop3.b32 %r6072, %r639, %r6074, %r6075, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6076, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6077, %r6075, %r6076;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6080, %r6072, %r6077;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6083, %r650, %r6074, %r6086, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6087, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6088, %r6086, %r6087;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6091, %r6083, %r6088;
	// end inline asm
	shr.u32 	%r6096, %r6074, 8;
	// begin inline asm
	lop3.b32 %r6094, %r639, %r6096, %r6075, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6098, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6099, %r6075, %r6098;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6102, %r6094, %r6099;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6105, %r650, %r6096, %r6086, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6109, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6110, %r6086, %r6109;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6113, %r6105, %r6110;
	// end inline asm
	// begin inline asm
	mov.b32 %r6121, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r6132, {%rs1078, %rs1078};
	// end inline asm
	xor.b32  	%r6120, %r7994, -2004318072;
	// begin inline asm
	lop3.b32 %r6118, %r639, %r6120, %r6121, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6122, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6123, %r6121, %r6122;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6126, %r6118, %r6123;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6129, %r650, %r6120, %r6132, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6133, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6134, %r6132, %r6133;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6137, %r6129, %r6134;
	// end inline asm
	shr.u32 	%r6142, %r6120, 8;
	// begin inline asm
	lop3.b32 %r6140, %r639, %r6142, %r6121, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6144, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6145, %r6121, %r6144;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6148, %r6140, %r6145;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6151, %r650, %r6142, %r6132, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6155, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6156, %r6132, %r6155;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6159, %r6151, %r6156;
	// end inline asm
	// begin inline asm
	mov.b32 %r6167, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r6178, {%rs1078, %rs1078};
	// end inline asm
	xor.b32  	%r6166, %r7993, -2004318072;
	// begin inline asm
	lop3.b32 %r6164, %r639, %r6166, %r6167, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6168, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6169, %r6167, %r6168;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6172, %r6164, %r6169;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6175, %r650, %r6166, %r6178, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6179, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6180, %r6178, %r6179;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6183, %r6175, %r6180;
	// end inline asm
	shr.u32 	%r6188, %r6166, 8;
	// begin inline asm
	lop3.b32 %r6186, %r639, %r6188, %r6167, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6190, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6191, %r6167, %r6190;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6194, %r6186, %r6191;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6197, %r650, %r6188, %r6178, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6201, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6202, %r6178, %r6201;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6205, %r6197, %r6202;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6208, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6210, %r6208, %r6034;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6213, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6215, %r6213, %r6045;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6218, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6220, %r6218, %r6056;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6223, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6225, %r6223, %r6067;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6228, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6230, %r6228, %r6080;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6233, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6235, %r6233, %r6091;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6238, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6240, %r6238, %r6102;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6243, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6245, %r6243, %r6113;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6248, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6250, %r6248, %r6126;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6253, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6255, %r6253, %r6137;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6258, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6260, %r6258, %r6148;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6263, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6265, %r6263, %r6159;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6268, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6270, %r6268, %r6172;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6273, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6275, %r6273, %r6183;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6278, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6280, %r6278, %r6194;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6283, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6285, %r6283, %r6205;
	// end inline asm
	// begin inline asm
	mov.b32 %r6293, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r6304, {%rs1078, %rs1078};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6290, %r639, %r640, %r6293, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6294, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6295, %r6293, %r6294;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6298, %r6290, %r6295;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6301, %r650, %r640, %r6304, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6305, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6306, %r6304, %r6305;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6309, %r6301, %r6306;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6312, %r639, %r662, %r6293, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6316, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6317, %r6293, %r6316;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6320, %r6312, %r6317;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6323, %r650, %r662, %r6304, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6327, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6328, %r6304, %r6327;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6331, %r6323, %r6328;
	// end inline asm
	// begin inline asm
	mov.b32 %r6339, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r6350, {%rs1078, %rs1078};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6336, %r639, %r686, %r6339, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6340, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6341, %r6339, %r6340;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6344, %r6336, %r6341;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6347, %r650, %r686, %r6350, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6351, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6352, %r6350, %r6351;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6355, %r6347, %r6352;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6358, %r639, %r708, %r6339, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6362, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6363, %r6339, %r6362;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6366, %r6358, %r6363;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6369, %r650, %r708, %r6350, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6373, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6374, %r6350, %r6373;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6377, %r6369, %r6374;
	// end inline asm
	// begin inline asm
	mov.b32 %r6385, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r6396, {%rs1078, %rs1078};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6382, %r639, %r732, %r6385, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6386, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6387, %r6385, %r6386;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6390, %r6382, %r6387;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6393, %r650, %r732, %r6396, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6397, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6398, %r6396, %r6397;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6401, %r6393, %r6398;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6404, %r639, %r754, %r6385, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6408, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6409, %r6385, %r6408;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6412, %r6404, %r6409;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6415, %r650, %r754, %r6396, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6419, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6420, %r6396, %r6419;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6423, %r6415, %r6420;
	// end inline asm
	// begin inline asm
	mov.b32 %r6431, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r6442, {%rs1078, %rs1078};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6428, %r639, %r778, %r6431, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6432, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6433, %r6431, %r6432;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6436, %r6428, %r6433;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6439, %r650, %r778, %r6442, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6443, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6444, %r6442, %r6443;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6447, %r6439, %r6444;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6450, %r639, %r800, %r6431, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6454, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6455, %r6431, %r6454;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6458, %r6450, %r6455;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6461, %r650, %r800, %r6442, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6465, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6466, %r6442, %r6465;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6469, %r6461, %r6466;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6472, %r209, %r6298, %r6210;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6476, %r209, %r6309, %r6215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6480, %r209, %r6320, %r6220;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6484, %r209, %r6331, %r6225;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6488, %r209, %r6344, %r6230;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6492, %r209, %r6355, %r6235;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6496, %r209, %r6366, %r6240;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6500, %r209, %r6377, %r6245;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6504, %r209, %r6390, %r6250;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6508, %r209, %r6401, %r6255;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6512, %r209, %r6412, %r6260;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6516, %r209, %r6423, %r6265;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6520, %r209, %r6436, %r6270;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6524, %r209, %r6447, %r6275;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6528, %r209, %r6458, %r6280;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6532, %r209, %r6469, %r6285;
	// end inline asm
	// begin inline asm
	mov.b32 %r6541, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r6552, {%rs1078, %rs1078};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6538, %r639, %r2436, %r6541, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6542, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6543, %r6541, %r6542;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6546, %r6538, %r6543;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6549, %r650, %r2436, %r6552, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6553, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6554, %r6552, %r6553;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6557, %r6549, %r6554;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6560, %r639, %r2458, %r6541, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6564, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6565, %r6541, %r6564;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6568, %r6560, %r6565;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6571, %r650, %r2458, %r6552, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6575, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6576, %r6552, %r6575;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6579, %r6571, %r6576;
	// end inline asm
	// begin inline asm
	mov.b32 %r6587, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r6598, {%rs1078, %rs1078};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6584, %r639, %r2482, %r6587, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6588, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6589, %r6587, %r6588;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6592, %r6584, %r6589;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6595, %r650, %r2482, %r6598, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6599, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6600, %r6598, %r6599;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6603, %r6595, %r6600;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6606, %r639, %r2504, %r6587, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6610, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6611, %r6587, %r6610;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6614, %r6606, %r6611;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6617, %r650, %r2504, %r6598, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6621, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6622, %r6598, %r6621;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6625, %r6617, %r6622;
	// end inline asm
	// begin inline asm
	mov.b32 %r6633, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r6644, {%rs1078, %rs1078};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6630, %r639, %r2528, %r6633, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6634, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6635, %r6633, %r6634;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6638, %r6630, %r6635;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6641, %r650, %r2528, %r6644, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6645, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6646, %r6644, %r6645;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6649, %r6641, %r6646;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6652, %r639, %r2550, %r6633, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6656, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6657, %r6633, %r6656;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6660, %r6652, %r6657;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6663, %r650, %r2550, %r6644, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6667, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6668, %r6644, %r6667;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6671, %r6663, %r6668;
	// end inline asm
	// begin inline asm
	mov.b32 %r6679, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r6690, {%rs1078, %rs1078};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6676, %r639, %r2574, %r6679, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6680, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6681, %r6679, %r6680;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6684, %r6676, %r6681;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6687, %r650, %r2574, %r6690, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6691, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6692, %r6690, %r6691;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6695, %r6687, %r6692;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6698, %r639, %r2596, %r6679, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6702, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6703, %r6679, %r6702;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6706, %r6698, %r6703;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6709, %r650, %r2596, %r6690, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6713, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6714, %r6690, %r6713;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6717, %r6709, %r6714;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6720, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6722, %r6720, %r6546, %r6472;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6726, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6728, %r6726, %r6557, %r6476;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6732, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6734, %r6732, %r6568, %r6480;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6738, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6740, %r6738, %r6579, %r6484;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6744, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6746, %r6744, %r6592, %r6488;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6750, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6752, %r6750, %r6603, %r6492;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6756, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6758, %r6756, %r6614, %r6496;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6762, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6764, %r6762, %r6625, %r6500;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6768, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6770, %r6768, %r6638, %r6504;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6774, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6776, %r6774, %r6649, %r6508;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6780, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6782, %r6780, %r6660, %r6512;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6786, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6788, %r6786, %r6671, %r6516;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6792, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6794, %r6792, %r6684, %r6520;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6798, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6800, %r6798, %r6695, %r6524;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6804, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6806, %r6804, %r6706, %r6528;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6810, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6812, %r6810, %r6717, %r6532;
	// end inline asm
	// begin inline asm
	mov.b32 %r6821, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r6832, {%rs1078, %rs1078};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6818, %r639, %r4232, %r6821, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6822, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6823, %r6821, %r6822;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6826, %r6818, %r6823;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6829, %r650, %r4232, %r6832, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6833, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6834, %r6832, %r6833;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6837, %r6829, %r6834;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6840, %r639, %r4254, %r6821, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6844, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6845, %r6821, %r6844;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6848, %r6840, %r6845;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6851, %r650, %r4254, %r6832, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6855, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6856, %r6832, %r6855;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6859, %r6851, %r6856;
	// end inline asm
	// begin inline asm
	mov.b32 %r6867, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r6878, {%rs1078, %rs1078};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6864, %r639, %r4278, %r6867, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6868, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6869, %r6867, %r6868;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6872, %r6864, %r6869;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6875, %r650, %r4278, %r6878, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6879, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6880, %r6878, %r6879;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6883, %r6875, %r6880;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6886, %r639, %r4300, %r6867, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6890, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6891, %r6867, %r6890;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6894, %r6886, %r6891;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6897, %r650, %r4300, %r6878, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6901, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6902, %r6878, %r6901;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6905, %r6897, %r6902;
	// end inline asm
	// begin inline asm
	mov.b32 %r6913, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r6924, {%rs1078, %rs1078};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6910, %r639, %r4324, %r6913, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6914, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6915, %r6913, %r6914;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6918, %r6910, %r6915;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6921, %r650, %r4324, %r6924, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6925, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6926, %r6924, %r6925;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6929, %r6921, %r6926;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6932, %r639, %r4346, %r6913, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6936, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6937, %r6913, %r6936;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6940, %r6932, %r6937;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6943, %r650, %r4346, %r6924, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6947, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6948, %r6924, %r6947;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6951, %r6943, %r6948;
	// end inline asm
	// begin inline asm
	mov.b32 %r6959, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r6970, {%rs1078, %rs1078};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6956, %r639, %r4370, %r6959, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6960, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6961, %r6959, %r6960;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6964, %r6956, %r6961;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6967, %r650, %r4370, %r6970, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6971, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6972, %r6970, %r6971;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6975, %r6967, %r6972;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6978, %r639, %r4392, %r6959, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6982, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6983, %r6959, %r6982;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6986, %r6978, %r6983;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6989, %r650, %r4392, %r6970, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6993, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6994, %r6970, %r6993;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6997, %r6989, %r6994;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7071, %r245, %r6826, %r6722;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7068, %r245, %r6837, %r6728;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7080, %r245, %r6848, %r6734;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7077, %r245, %r6859, %r6740;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7089, %r245, %r6872, %r6746;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7086, %r245, %r6883, %r6752;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7098, %r245, %r6894, %r6758;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7095, %r245, %r6905, %r6764;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7107, %r245, %r6918, %r6770;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7104, %r245, %r6929, %r6776;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7116, %r245, %r6940, %r6782;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7113, %r245, %r6951, %r6788;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7125, %r245, %r6964, %r6794;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7122, %r245, %r6975, %r6800;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7134, %r245, %r6986, %r6806;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7131, %r245, %r6997, %r6812;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7064, %r269;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7066, %r7064, %r7068;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7069, %r266, %r7071, %r7066;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7073, %r269;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7075, %r7073, %r7077;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7078, %r266, %r7080, %r7075;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7082, %r269;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7084, %r7082, %r7086;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7087, %r266, %r7089, %r7084;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7091, %r269;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7093, %r7091, %r7095;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7096, %r266, %r7098, %r7093;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7100, %r269;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7102, %r7100, %r7104;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7105, %r266, %r7107, %r7102;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7109, %r269;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7111, %r7109, %r7113;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7114, %r266, %r7116, %r7111;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7118, %r269;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7120, %r7118, %r7122;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7123, %r266, %r7125, %r7120;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7127, %r269;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7129, %r7127, %r7131;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7132, %r266, %r7134, %r7129;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7136, %r269, %r7071;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7139, %r266, %r7068, %r7136;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7143, %r269, %r7080;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7146, %r266, %r7077, %r7143;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7150, %r269, %r7089;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7153, %r266, %r7086, %r7150;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7157, %r269, %r7098;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7160, %r266, %r7095, %r7157;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7164, %r269, %r7107;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7167, %r266, %r7104, %r7164;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7171, %r269, %r7116;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7174, %r266, %r7113, %r7171;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7178, %r269, %r7125;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7181, %r266, %r7122, %r7178;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7185, %r269, %r7134;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7188, %r266, %r7131, %r7185;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7279, %r7276}, {%r325, %r331, %r328, %r334}, {%r7069, %r7139}, {%r7963, %r7963};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7288, %r7285}, {%r325, %r331, %r328, %r334}, {%r7078, %r7146}, {%r7963, %r7963};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7297, %r7294}, {%r325, %r331, %r328, %r334}, {%r7087, %r7153}, {%r7963, %r7963};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7306, %r7303}, {%r325, %r331, %r328, %r334}, {%r7096, %r7160}, {%r7963, %r7963};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7315, %r7312}, {%r325, %r331, %r328, %r334}, {%r7105, %r7167}, {%r7963, %r7963};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7324, %r7321}, {%r325, %r331, %r328, %r334}, {%r7114, %r7174}, {%r7963, %r7963};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7333, %r7330}, {%r325, %r331, %r328, %r334}, {%r7123, %r7181}, {%r7963, %r7963};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7342, %r7339}, {%r325, %r331, %r328, %r334}, {%r7132, %r7188}, {%r7963, %r7963};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7272, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7274, %r7272, %r7276;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7277, %r369, %r7279, %r7274;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7281, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7283, %r7281, %r7285;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7286, %r369, %r7288, %r7283;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7290, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7292, %r7290, %r7294;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7295, %r369, %r7297, %r7292;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7299, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7301, %r7299, %r7303;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7304, %r369, %r7306, %r7301;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7308, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7310, %r7308, %r7312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7313, %r369, %r7315, %r7310;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7317, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7319, %r7317, %r7321;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7322, %r369, %r7324, %r7319;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7326, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7328, %r7326, %r7330;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7331, %r369, %r7333, %r7328;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7335, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7337, %r7335, %r7339;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7340, %r369, %r7342, %r7337;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7344, %r372, %r7279;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7347, %r369, %r7276, %r7344;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7351, %r372, %r7288;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7354, %r369, %r7285, %r7351;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7358, %r372, %r7297;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7361, %r369, %r7294, %r7358;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7365, %r372, %r7306;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7368, %r369, %r7303, %r7365;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7372, %r372, %r7315;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7375, %r369, %r7312, %r7372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7379, %r372, %r7324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7382, %r369, %r7321, %r7379;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7386, %r372, %r7333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7389, %r369, %r7330, %r7386;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7393, %r372, %r7342;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7396, %r369, %r7339, %r7393;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7400, %r7401}, {%r403, %r409, %r406, %r412}, {%r7277, %r7347}, {%r7963, %r7963};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7410, %r7411}, {%r403, %r409, %r406, %r412}, {%r7286, %r7354}, {%r7963, %r7963};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7420, %r7421}, {%r403, %r409, %r406, %r412}, {%r7295, %r7361}, {%r7963, %r7963};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7430, %r7431}, {%r403, %r409, %r406, %r412}, {%r7304, %r7368}, {%r7963, %r7963};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7440, %r7441}, {%r403, %r409, %r406, %r412}, {%r7313, %r7375}, {%r7963, %r7963};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7450, %r7451}, {%r403, %r409, %r406, %r412}, {%r7322, %r7382}, {%r7963, %r7963};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7460, %r7461}, {%r403, %r409, %r406, %r412}, {%r7331, %r7389}, {%r7963, %r7963};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7470, %r7471}, {%r403, %r409, %r406, %r412}, {%r7340, %r7396}, {%r7963, %r7963};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7480, %r87, %r7400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7483, %r87, %r7401;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7486, %r87, %r7410;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7489, %r87, %r7411;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7492, %r87, %r7420;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7495, %r87, %r7421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7498, %r87, %r7430;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7501, %r87, %r7431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7504, %r87, %r7440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7507, %r87, %r7441;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7510, %r87, %r7450;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7513, %r87, %r7451;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7516, %r87, %r7460;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7519, %r87, %r7461;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7522, %r87, %r7470;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7525, %r87, %r7471;
	// end inline asm
	// begin inline asm
	mov.b32 %r7528, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r7529, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7530, %r7480, %r7528;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7533, %r7530, %r7529;
	// end inline asm
	// begin inline asm
	mov.b32 %r7536, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r7537, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7538, %r7483, %r7536;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7541, %r7538, %r7537;
	// end inline asm
	// begin inline asm
	mov.b32 %r7544, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r7545, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7546, %r7486, %r7544;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7549, %r7546, %r7545;
	// end inline asm
	// begin inline asm
	mov.b32 %r7552, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r7553, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7554, %r7489, %r7552;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7557, %r7554, %r7553;
	// end inline asm
	// begin inline asm
	mov.b32 %r7560, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r7561, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7562, %r7492, %r7560;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7565, %r7562, %r7561;
	// end inline asm
	// begin inline asm
	mov.b32 %r7568, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r7569, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7570, %r7495, %r7568;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7573, %r7570, %r7569;
	// end inline asm
	// begin inline asm
	mov.b32 %r7576, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r7577, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7578, %r7498, %r7576;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7581, %r7578, %r7577;
	// end inline asm
	// begin inline asm
	mov.b32 %r7584, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r7585, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7586, %r7501, %r7584;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7589, %r7586, %r7585;
	// end inline asm
	// begin inline asm
	mov.b32 %r7592, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r7593, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7594, %r7504, %r7592;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7597, %r7594, %r7593;
	// end inline asm
	// begin inline asm
	mov.b32 %r7600, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r7601, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7602, %r7507, %r7600;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7605, %r7602, %r7601;
	// end inline asm
	// begin inline asm
	mov.b32 %r7608, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r7609, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7610, %r7510, %r7608;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7613, %r7610, %r7609;
	// end inline asm
	// begin inline asm
	mov.b32 %r7616, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r7617, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7618, %r7513, %r7616;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7621, %r7618, %r7617;
	// end inline asm
	// begin inline asm
	mov.b32 %r7624, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r7625, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7626, %r7516, %r7624;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7629, %r7626, %r7625;
	// end inline asm
	// begin inline asm
	mov.b32 %r7632, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r7633, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7634, %r7519, %r7632;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7637, %r7634, %r7633;
	// end inline asm
	// begin inline asm
	mov.b32 %r7640, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r7641, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7642, %r7522, %r7640;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7645, %r7642, %r7641;
	// end inline asm
	// begin inline asm
	mov.b32 %r7648, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r7649, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7650, %r7525, %r7648;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7653, %r7650, %r7649;
	// end inline asm
	// begin inline asm
	mov.b32 %r7659, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r7657, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7658, %r7659, %r7657;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7661, %r7533, %r7658;
	// end inline asm
	// begin inline asm
	mov.b32 %r7664, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7665, %r7659, %r7664;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7668, %r7541, %r7665;
	// end inline asm
	// begin inline asm
	mov.b32 %r7671, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7672, %r7659, %r7671;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7675, %r7549, %r7672;
	// end inline asm
	// begin inline asm
	mov.b32 %r7678, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7679, %r7659, %r7678;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7682, %r7557, %r7679;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7685, %r7661, %r7675, %r2300;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7689, %r7668, %r7682, %r2300;
	// end inline asm
	shl.b32 	%r7696, %r7689, 4;
	// begin inline asm
	lop3.b32 %r7693, %r2306, %r7685, %r7696, 202;
	// end inline asm
	xor.b32  	%r7861, %r7693, -2004318072;
	// begin inline asm
	mov.b32 %r7700, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r7698, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7699, %r7700, %r7698;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7702, %r7565, %r7699;
	// end inline asm
	// begin inline asm
	mov.b32 %r7705, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7706, %r7700, %r7705;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7709, %r7573, %r7706;
	// end inline asm
	// begin inline asm
	mov.b32 %r7712, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7713, %r7700, %r7712;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7716, %r7581, %r7713;
	// end inline asm
	// begin inline asm
	mov.b32 %r7719, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7720, %r7700, %r7719;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7723, %r7589, %r7720;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7726, %r7702, %r7716, %r2300;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7730, %r7709, %r7723, %r2300;
	// end inline asm
	shl.b32 	%r7737, %r7730, 4;
	// begin inline asm
	lop3.b32 %r7734, %r2306, %r7726, %r7737, 202;
	// end inline asm
	xor.b32  	%r7862, %r7734, -2004318072;
	// begin inline asm
	mov.b32 %r7741, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r7739, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7740, %r7741, %r7739;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7743, %r7597, %r7740;
	// end inline asm
	// begin inline asm
	mov.b32 %r7746, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7747, %r7741, %r7746;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7750, %r7605, %r7747;
	// end inline asm
	// begin inline asm
	mov.b32 %r7753, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7754, %r7741, %r7753;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7757, %r7613, %r7754;
	// end inline asm
	// begin inline asm
	mov.b32 %r7760, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7761, %r7741, %r7760;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7764, %r7621, %r7761;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7767, %r7743, %r7757, %r2300;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7771, %r7750, %r7764, %r2300;
	// end inline asm
	shl.b32 	%r7778, %r7771, 4;
	// begin inline asm
	lop3.b32 %r7775, %r2306, %r7767, %r7778, 202;
	// end inline asm
	xor.b32  	%r7863, %r7775, -2004318072;
	// begin inline asm
	mov.b32 %r7782, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r7780, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7781, %r7782, %r7780;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7784, %r7629, %r7781;
	// end inline asm
	// begin inline asm
	mov.b32 %r7787, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7788, %r7782, %r7787;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7791, %r7637, %r7788;
	// end inline asm
	// begin inline asm
	mov.b32 %r7794, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7795, %r7782, %r7794;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7798, %r7645, %r7795;
	// end inline asm
	// begin inline asm
	mov.b32 %r7801, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7802, %r7782, %r7801;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7805, %r7653, %r7802;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7808, %r7784, %r7798, %r2300;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7812, %r7791, %r7805, %r2300;
	// end inline asm
	shl.b32 	%r7819, %r7812, 4;
	// begin inline asm
	lop3.b32 %r7816, %r2306, %r7808, %r7819, 202;
	// end inline asm
	xor.b32  	%r7864, %r7816, -2004318072;
	st.shared.u32 	[%rd154], %r7861;
	st.shared.u32 	[%rd155], %r7862;
	st.shared.u32 	[%rd156], %r7863;
	st.shared.u32 	[%rd157], %r7864;
	add.s32 	%r7992, %r7992, 64;
	add.s64 	%rd157, %rd157, 8324;
	add.s64 	%rd156, %rd156, 8324;
	add.s64 	%rd155, %rd155, 8324;
	add.s64 	%rd154, %rd154, 8324;
	add.s32 	%r7991, %r7991, 1;
	setp.eq.s32 	%p213, %r7992, 256;
	@%p213 bra 	$L__BB0_85;
	bra.uni 	$L__BB0_84;
$L__BB0_85:                             // %guard_exit16861
                                        //   in Loop: Header=BB0_83 Depth=1
	bar.sync 	0;
	ld.shared.u32 	%r7870, [%rd5];
	ld.shared.u32 	%r7871, [%rd6+128];
	ld.shared.u32 	%r7878, [%rd6+4];
	ld.shared.u32 	%r7879, [%rd6+132];
	ld.shared.u32 	%r7886, [%rd5+8324];
	ld.shared.u32 	%r7887, [%rd24+128];
	ld.shared.u32 	%r7894, [%rd24+4];
	ld.shared.u32 	%r7895, [%rd24+132];
	ld.shared.u32 	%r7902, [%rd5+16648];
	ld.shared.u32 	%r7903, [%rd25+128];
	ld.shared.u32 	%r7910, [%rd25+4];
	ld.shared.u32 	%r7911, [%rd25+132];
	ld.shared.u32 	%r7918, [%rd5+24972];
	ld.shared.u32 	%r7919, [%rd26+128];
	ld.shared.u32 	%r7926, [%rd26+4];
	ld.shared.u32 	%r7927, [%rd26+132];
	// begin inline asm
	prmt.b32 %r7865, %r7870, %r7871, %r551;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7869, %r7870, %r7871, %r555;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7873, %r7878, %r7879, %r551;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7877, %r7878, %r7879, %r555;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7881, %r7886, %r7887, %r551;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7885, %r7886, %r7887, %r555;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7889, %r7894, %r7895, %r551;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7893, %r7894, %r7895, %r555;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7897, %r7902, %r7903, %r551;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7901, %r7902, %r7903, %r555;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7905, %r7910, %r7911, %r551;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7909, %r7910, %r7911, %r555;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7913, %r7918, %r7919, %r551;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7917, %r7918, %r7919, %r555;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7921, %r7926, %r7927, %r551;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7925, %r7926, %r7927, %r555;
	// end inline asm
	selp.b32 	%r7929, %r7869, %r7865, %p200;
	shfl.sync.bfly.b32	%r152, %r7929, 8, 31, -1;
	selp.b32 	%r7930, %r7877, %r7873, %p200;
	shfl.sync.bfly.b32	%r153, %r7930, 8, 31, -1;
	selp.b32 	%r7931, %r7885, %r7881, %p200;
	shfl.sync.bfly.b32	%r7932, %r7931, 8, 31, -1;
	selp.b32 	%r7933, %r7893, %r7889, %p200;
	shfl.sync.bfly.b32	%r7934, %r7933, 8, 31, -1;
	selp.b32 	%r7935, %r7901, %r7897, %p200;
	shfl.sync.bfly.b32	%r7936, %r7935, 8, 31, -1;
	selp.b32 	%r7937, %r7909, %r7905, %p200;
	shfl.sync.bfly.b32	%r7938, %r7937, 8, 31, -1;
	selp.b32 	%r7939, %r7917, %r7913, %p200;
	shfl.sync.bfly.b32	%r7940, %r7939, 8, 31, -1;
	selp.b32 	%r7941, %r7925, %r7921, %p200;
	shfl.sync.bfly.b32	%r7942, %r7941, 8, 31, -1;
	setp.eq.s32 	%p215, %r7983, 0;
	shl.b32 	%r7964, %r7983, 10;
	@%p215 bra 	$L__BB0_86;
// %bb.123:                             // %pass16075
                                        //   in Loop: Header=BB0_83 Depth=1
	selp.b32 	%r7943, %r153, %r7877, %p200;
	selp.b32 	%r7944, %r7873, %r153, %p200;
	selp.b32 	%r7945, %r152, %r7869, %p200;
	selp.b32 	%r7946, %r7865, %r152, %p200;
	or.b32  	%r7948, %r7964, %r50;
	or.b32  	%r7949, %r7948, %r54;
	cvt.u64.u32 	%rd102, %r7949;
	add.s64 	%rd103, %rd102, %rd7;
	shr.u64 	%rd104, %rd103, 39;
	add.s64 	%rd105, %rd103, %rd104;
	shr.s64 	%rd106, %rd105, 25;
	setp.lt.s64 	%p217, %rd103, 0;
	and.b64  	%rd107, %rd105, -33554432;
	setp.ne.s64 	%p218, %rd107, %rd103;
	and.pred  	%p219, %p217, %p218;
	selp.u64 	%rd108, 1, 0, %p219;
	sub.s64 	%rd109, %rd108, %rd106;
	shl.b64 	%rd110, %rd109, 25;
	add.s64 	%rd111, %rd110, %rd103;
	shl.b64 	%rd112, %rd111, 2;
	add.s64 	%rd113, %rd3, %rd112;
	st.global.v4.u32 	[%rd113], {%r7946, %r7944, %r7945, %r7943};
$L__BB0_86:                             // %L37680
                                        //   in Loop: Header=BB0_83 Depth=1
	or.b32  	%r7950, %r7983, 64;
	setp.gt.u32 	%p220, %r7950, 191;
	@%p220 bra 	$L__BB0_121;
// %bb.87:                              // %L37680.L37875_crit_edge
                                        //   in Loop: Header=BB0_83 Depth=1
	or.b32  	%r7955, %r7964, %r50;
	or.b32  	%r7984, %r7955, %r54;
	bra.uni 	$L__BB0_88;
$L__BB0_121:                            // %pass16173
                                        //   in Loop: Header=BB0_83 Depth=1
	selp.b32 	%r154, %r7881, %r7932, %p200;
	selp.b32 	%r155, %r7932, %r7885, %p200;
	selp.b32 	%r156, %r7889, %r7934, %p200;
	selp.b32 	%r157, %r7934, %r7893, %p200;
	or.b32  	%r7952, %r7964, %r50;
	or.b32  	%r7984, %r7952, %r54;
	or.b32  	%r7953, %r7984, 65536;
	cvt.s64.s32 	%rd114, %r7953;
	add.s64 	%rd115, %rd114, %rd7;
	shr.u64 	%rd116, %rd115, 39;
	add.s64 	%rd117, %rd115, %rd116;
	shr.s64 	%rd118, %rd117, 25;
	setp.lt.s64 	%p221, %rd115, 0;
	and.b64  	%rd119, %rd117, -33554432;
	setp.ne.s64 	%p222, %rd119, %rd115;
	and.pred  	%p223, %p221, %p222;
	selp.u64 	%rd120, 1, 0, %p223;
	sub.s64 	%rd121, %rd120, %rd118;
	shl.b64 	%rd122, %rd121, 25;
	add.s64 	%rd123, %rd122, %rd115;
	shl.b64 	%rd124, %rd123, 2;
	add.s64 	%rd125, %rd3, %rd124;
	st.global.v4.u32 	[%rd125], {%r154, %r156, %r155, %r157};
$L__BB0_88:                             // %L37875
                                        //   in Loop: Header=BB0_83 Depth=1
	selp.b32 	%r162, %r7913, %r7940, %p200;
	selp.b32 	%r163, %r7940, %r7917, %p200;
	selp.b32 	%r164, %r7921, %r7942, %p200;
	selp.b32 	%r165, %r7942, %r7925, %p200;
	or.b32  	%r7956, %r7983, 128;
	setp.gt.u32 	%p224, %r7956, 191;
	@%p224 bra 	$L__BB0_122;
	bra.uni 	$L__BB0_89;
$L__BB0_122:                            // %pass16271
                                        //   in Loop: Header=BB0_83 Depth=1
	selp.b32 	%r158, %r7897, %r7936, %p200;
	selp.b32 	%r159, %r7936, %r7901, %p200;
	selp.b32 	%r160, %r7905, %r7938, %p200;
	selp.b32 	%r161, %r7938, %r7909, %p200;
	or.b32  	%r7957, %r7984, 131072;
	cvt.s64.s32 	%rd126, %r7957;
	add.s64 	%rd127, %rd126, %rd7;
	shr.u64 	%rd128, %rd127, 39;
	add.s64 	%rd129, %rd127, %rd128;
	shr.s64 	%rd130, %rd129, 25;
	setp.lt.s64 	%p225, %rd127, 0;
	and.b64  	%rd131, %rd129, -33554432;
	setp.ne.s64 	%p226, %rd131, %rd127;
	and.pred  	%p227, %p225, %p226;
	selp.u64 	%rd132, 1, 0, %p227;
	sub.s64 	%rd133, %rd132, %rd130;
	shl.b64 	%rd134, %rd133, 25;
	add.s64 	%rd135, %rd134, %rd127;
	shl.b64 	%rd136, %rd135, 2;
	add.s64 	%rd137, %rd3, %rd136;
	st.global.v4.u32 	[%rd137], {%r158, %r160, %r159, %r161};
	bra.uni 	$L__BB0_89;
$L__BB0_90:                             // %L38276
	st.global.u32 	[%rd4], %r7963;
	ret;
$L__BB0_7:                              // %L166
	mov.u32 	%r7962, 2;
	st.global.u32 	[%rd4], %r7962;
	mov.u64 	%rd152, exception3329;
	cvta.global.u64 	%rd153, %rd152;
	{ // callseq 4, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd153;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 4
	{ // callseq 5, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd43;
	st.param.b32 	[param0+8], %r166;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 5
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
$L__BB0_10:                             // %L275
	mov.u32 	%r7961, 3;
	st.global.u32 	[%rd4], %r7961;
	mov.u64 	%rd150, exception3329;
	cvta.global.u64 	%rd151, %rd150;
	{ // callseq 2, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd151;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 2
	{ // callseq 3, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd43;
	st.param.b32 	[param0+8], %r166;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 3
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
$L__BB0_1:                              // %L8
	mov.u64 	%rd48, exception13349;
	cvta.global.u64 	%rd49, %rd48;
	{ // callseq 0, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd49;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 0
	{ // callseq 1, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd43;
	st.param.b32 	[param0+8], %r166;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 1
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
                                        // -- End function
}
