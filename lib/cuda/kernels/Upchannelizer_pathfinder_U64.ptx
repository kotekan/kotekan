// PTX CompilerJob of MethodInstance for upchan(::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Float16x2, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int32, 1}) for sm_86, minthreads=512, blocks_per_sm=2

//
// Generated by LLVM NVPTX Back-End
//

.version 8.1
.target sm_86
.address_size 64

	// .globl	_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE // -- Begin function _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE
.func gpu_report_exception
(
	.param .b64 gpu_report_exception_param_0
)
.noreturn
{
	trap;
}
.func gpu_signal_exception
(
	.param .align 8 .b8 gpu_signal_exception_param_0[16]
)
.noreturn
{
	trap;
}
.func  (.param .b64 func_retval0) julia_power_by_squaring_13368
(
	.param .align 8 .b8 julia_power_by_squaring_13368_param_0[16],
	.param .b64 julia_power_by_squaring_13368_param_1,
	.param .b64 julia_power_by_squaring_13368_param_2
)
.noreturn
{
	trap;
}
.extern .shared .align 32 .b8 shmem[];
.global .align 1 .b8 exception3309[6] = {101, 114, 114, 111, 114, 0};
.global .align 1 .b8 exception1[10] = {101, 120, 99, 101, 112, 116, 105, 111, 110, 0};
                                        // @_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE
.visible .entry _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE(
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_0[16],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_1[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_2[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_3[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_4[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_5[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_6[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_7[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_8[32]
)
.reqntid 512, 1, 1
.minnctapersm 2
{
	.reg .pred 	%p<259>;
	.reg .b16 	%rs<1199>;
	.reg .f32 	%f<914>;
	.reg .b32 	%r<8023>;
	.reg .b64 	%rd<178>;

// %bb.0:                               // %conversion
	ld.param.u32 	%r179, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_0+8];
	ld.param.u64 	%rd34, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_0];
	// begin inline asm
	mov.u32 %r180, %dynamic_smem_size;
	// end inline asm
	setp.gt.u32 	%p1, %r180, 66815;
	@%p1 bra 	LBB0_2;
	bra.uni 	LBB0_1;
LBB0_2:                                 // %L11
	ld.param.u64 	%rd51, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_8];
	ld.param.u64 	%rd35, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_1];
	mov.u32 	%r1, %tid.y;
	shl.b32 	%r2, %r1, 5;
	mov.u32 	%r3, %ctaid.x;
	shl.b32 	%r181, %r3, 9;
	mov.u32 	%r4, %tid.x;
	or.b32  	%r182, %r181, %r2;
	or.b32  	%r183, %r182, %r4;
	mul.wide.u32 	%rd57, %r183, 4;
	add.s64 	%rd4, %rd51, %rd57;
	mov.u32 	%r184, 1;
	st.global.u32 	[%rd4], %r184;
	ld.global.u32 	%r5, [%rd35];
	setp.lt.s32 	%p2, %r5, 0;
	@%p2 bra 	LBB0_7;
// %bb.3:                               // %L231
	ld.param.u64 	%rd39, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_2];
	ld.global.u32 	%r6, [%rd39];
	setp.lt.s32 	%p3, %r6, %r5;
	setp.gt.s32 	%p4, %r6, 262144;
	or.pred  	%p5, %p3, %p4;
	@%p5 bra 	LBB0_7;
// %bb.4:                               // %L241
	ld.param.u64 	%rd43, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_3];
	ld.global.u32 	%r7, [%rd43];
	sub.s32 	%r185, %r6, %r5;
	and.b32  	%r186, %r185, 255;
	setp.ne.s32 	%p6, %r186, 0;
	setp.lt.s32 	%p7, %r7, 0;
	or.pred  	%p8, %p6, %p7;
	@%p8 bra 	LBB0_7;
// %bb.5:                               // %L247
	ld.param.u64 	%rd47, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_4];
	ld.global.u32 	%r8, [%rd47];
	setp.lt.s32 	%p9, %r8, %r7;
	setp.gt.s32 	%p10, %r8, 4096;
	or.pred  	%p11, %p9, %p10;
	@%p11 bra 	LBB0_7;
// %bb.6:                               // %L257
	not.b32 	%r187, %r7;
	add.s32 	%r188, %r187, %r8;
	and.b32  	%r189, %r188, 3;
	setp.eq.s32 	%p12, %r189, 0;
	@%p12 bra 	LBB0_8;
	bra.uni 	LBB0_7;
LBB0_8:                                 // %L379
	bfe.u32 	%r17, %r4, 1, 1;
	and.b32  	%r18, %r4, 1;
	bfe.u32 	%r19, %r4, 2, 1;
	shr.u32 	%r20, %r4, 4;
	shl.b32 	%r197, %r20, 1;
	shl.b32 	%r198, %r19, 2;
	shl.b32 	%r199, %r18, 3;
	shl.b32 	%r200, %r17, 4;
	or.b32  	%r201, %r199, %r200;
	or.b32  	%r202, %r198, %r201;
	or.b32  	%r203, %r197, %r202;
	bfe.u32 	%r22, %r4, 3, 1;
	or.b32  	%r23, %r22, %r203;
	or.b32  	%r24, %r23, 32;
	mov.f32 	%f181, 0f40000000;
	mov.f32 	%f182, 0f437F0000;
	div.approx.f32 	%f1, %f182, %f181;
	cvt.rn.f32.s32 	%f183, %r23;
	sub.f32 	%f184, %f183, %f1;
	mov.f32 	%f213, 0f42800000;
	div.approx.f32 	%f3, %f184, %f213;
	setp.eq.f32 	%p18, %f3, 0f00000000;
	mov.f32 	%f881, 0f3F800000;
	mov.f32 	%f874, %f881;
	@%p18 bra 	LBB0_10;
// %bb.9:                               // %L639
	sin.approx.f32 	%f214, %f3;
	div.approx.f32 	%f874, %f214, %f3;
LBB0_10:                                // %L642
	cvt.rn.f32.s32 	%f217, %r24;
	sub.f32 	%f218, %f217, %f1;
	div.approx.f32 	%f8, %f218, %f213;
	setp.eq.f32 	%p24, %f8, 0f00000000;
	mov.f32 	%f875, %f881;
	@%p24 bra 	LBB0_12;
// %bb.11:                              // %L659
	sin.approx.f32 	%f248, %f8;
	div.approx.f32 	%f875, %f248, %f8;
LBB0_12:                                // %L662
	or.b32  	%r221, %r23, 64;
	or.b32  	%r26, %r23, 96;
	cvt.rn.f32.s32 	%f252, %r221;
	sub.f32 	%f253, %f252, %f1;
	div.approx.f32 	%f12, %f253, %f213;
	setp.eq.f32 	%p30, %f12, 0f00000000;
	mov.f32 	%f876, %f881;
	@%p30 bra 	LBB0_14;
// %bb.13:                              // %L748
	sin.approx.f32 	%f283, %f12;
	div.approx.f32 	%f876, %f283, %f12;
LBB0_14:                                // %L751
	shl.b32 	%r9, %r4, 2;
	cvt.rn.f32.s32 	%f286, %r26;
	sub.f32 	%f287, %f286, %f1;
	div.approx.f32 	%f17, %f287, %f213;
	setp.eq.f32 	%p36, %f17, 0f00000000;
	mov.f32 	%f877, %f881;
	@%p36 bra 	LBB0_16;
// %bb.15:                              // %L768
	sin.approx.f32 	%f317, %f17;
	div.approx.f32 	%f877, %f317, %f17;
LBB0_16:                                // %L771
	and.b32  	%r190, %r9, 36;
	and.b32  	%r11, %r4, 16;
	or.b32  	%r239, %r23, 128;
	or.b32  	%r28, %r23, 160;
	cvt.rn.f32.s32 	%f321, %r239;
	sub.f32 	%f322, %f321, %f1;
	div.approx.f32 	%f21, %f322, %f213;
	setp.eq.f32 	%p42, %f21, 0f00000000;
	mov.f32 	%f878, %f881;
	@%p42 bra 	LBB0_18;
// %bb.17:                              // %L857
	sin.approx.f32 	%f352, %f21;
	div.approx.f32 	%f878, %f352, %f21;
LBB0_18:                                // %L860
	or.b32  	%r191, %r190, %r11;
	shl.b32 	%r12, %r3, 6;
	cvt.rn.f32.s32 	%f355, %r28;
	sub.f32 	%f356, %f355, %f1;
	div.approx.f32 	%f26, %f356, %f213;
	setp.eq.f32 	%p48, %f26, 0f00000000;
	mov.f32 	%f879, %f881;
	@%p48 bra 	LBB0_20;
// %bb.19:                              // %L877
	sin.approx.f32 	%f386, %f26;
	div.approx.f32 	%f879, %f386, %f26;
LBB0_20:                                // %L880
	or.b32  	%r192, %r191, %r12;
	and.b32  	%r193, %r4, 2;
	shl.b32 	%r13, %r4, 1;
	or.b32  	%r257, %r23, 192;
	or.b32  	%r30, %r23, 224;
	cvt.rn.f32.s32 	%f390, %r257;
	sub.f32 	%f391, %f390, %f1;
	div.approx.f32 	%f30, %f391, %f213;
	setp.eq.f32 	%p54, %f30, 0f00000000;
	mov.f32 	%f880, %f881;
	@%p54 bra 	LBB0_22;
// %bb.21:                              // %L966
	sin.approx.f32 	%f421, %f30;
	div.approx.f32 	%f880, %f421, %f30;
LBB0_22:                                // %L969
	or.b32  	%r194, %r192, %r193;
	and.b32  	%r14, %r13, 8;
	cvt.rn.f32.s32 	%f424, %r30;
	sub.f32 	%f425, %f424, %f1;
	div.approx.f32 	%f35, %f425, %f213;
	setp.eq.f32 	%p60, %f35, 0f00000000;
	@%p60 bra 	LBB0_24;
// %bb.23:                              // %L986
	sin.approx.f32 	%f455, %f35;
	div.approx.f32 	%f881, %f455, %f35;
LBB0_24:                                // %L989
	or.b32  	%r195, %r194, %r14;
	mul.lo.s32 	%r32, %r23, 63;
	cvt.rn.f32.s32 	%f458, %r32;
	div.approx.f32 	%f38, %f458, %f213;
	abs.f32 	%f884, %f38;
	setp.lt.f32 	%p61, %f884, 0f40000000;
	@%p61 bra 	LBB0_36;
// %bb.25:
	setp.gtu.f32 	%p62, %f884, 0f4B800000;
	@%p62 bra 	LBB0_32;
	bra.uni 	LBB0_26;
LBB0_32:
	mov.b32 	%r34, %f884;
	and.b32  	%r275, %r34, 8388607;
	or.b32  	%r7981, %r275, 1065353216;
	mov.b32 	%f883, %r7981;
	add.s32 	%r276, %r34, -1073741824;
	and.b32  	%r7982, %r276, -8388608;
	setp.eq.s32 	%p68, %r7982, 0;
	@%p68 bra 	LBB0_35;
// %bb.33:                              // %.lr.ph2379.preheader
	mov.f32 	%f469, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f468,%f469;
	// end inline asm
LBB0_34:                                // %.lr.ph2379
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r277, %r7982, 192937984;
	add.s32 	%r278, %r277, %r7981;
	mov.b32 	%f470, %r278;
	mul.f32 	%f471, %f468, %f470;
	sub.f32 	%f472, %f470, %f471;
	fma.rn.f32 	%f473, %f472, %f468, %f471;
	sub.f32 	%f474, %f470, %f473;
	fma.rz.f32 	%f475, %f474, %f468, %f473;
	cvt.rzi.f32.f32 	%f476, %f475;
	sub.f32 	%f883, %f470, %f476;
	sub.s32 	%r7982, %r7982, %r277;
	mov.b32 	%r7981, %f883;
	setp.ne.s32 	%p69, %r7982, 0;
	setp.ne.s32 	%p70, %r7981, 0;
	and.pred  	%p71, %p69, %p70;
	@%p71 bra 	LBB0_34;
LBB0_35:                                // %__internal_fmodf_slowpath_mod.exit.i.i
	setp.gt.u32 	%p72, %r34, 2139095039;
	selp.f32 	%f477, 0f7FFFFFFF, 0f4B800000, %p72;
	mul.f32 	%f478, %f883, 0f34000000;
	mul.f32 	%f884, %f477, %f478;
	bra.uni 	LBB0_36;
LBB0_26:                                // %__nv_fast_fdividef.exit.i.i.i
	div.approx.f32 	%f461, %f884, %f181;
	cvt.rzi.f32.f32 	%f40, %f461;
	fma.rn.f32 	%f41, %f40, 0fC0000000, %f884;
	mov.b32 	%r33, %f41;
	setp.lt.u32 	%p63, %r33, 1073741824;
	mov.f32 	%f882, %f40;
	@%p63 bra 	LBB0_31;
// %bb.27:
	setp.lt.u32 	%p64, %r33, -2147483647;
	@%p64 bra 	LBB0_29;
// %bb.28:
	add.f32 	%f466, %f40, 0fBF800000;
	setp.lt.f32 	%p67, %f41, 0fC0000000;
	selp.f32 	%f467, %f466, %f40, %p67;
	add.f32 	%f882, %f467, 0fBF800000;
	bra.uni 	LBB0_31;
LBB0_29:
	add.f32 	%f882, %f40, 0f3F800000;
	setp.ltu.f32 	%p65, %f41, 0f40800000;
	@%p65 bra 	LBB0_31;
// %bb.30:                              // %__nv_fmaf_rn.exit.i.i.i
	fma.rn.f32 	%f463, %f181, 0fC0400000, %f41;
	setp.ge.f32 	%p66, %f463, 0f00000000;
	selp.f32 	%f464, %f882, %f40, %p66;
	add.f32 	%f465, %f464, 0f3F800000;
	add.f32 	%f882, %f465, 0f3F800000;
LBB0_31:                                // %__internal_fmodf_fastpath_quot.exit.i.i
	fma.rn.f32 	%f884, %f882, 0fC0000000, %f884;
LBB0_36:                                // %__internal_fmodf_kernel.exit.i
	shr.u32 	%r196, %r195, 1;
	abs.f32 	%f479, %f884;
	setp.gtu.f32 	%p73, %f479, 0f7F800000;
	@%p73 bra 	LBB0_38;
// %bb.37:
	mov.b32 	%r279, %f38;
	and.b32  	%r280, %r279, -2147483648;
	mov.b32 	%r281, %f884;
	or.b32  	%r282, %r280, %r281;
	mov.b32 	%f884, %r282;
LBB0_38:                                // %__nv_fmodf.exit
	ld.param.u64 	%rd1, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_5];
	mul.wide.u32 	%rd58, %r196, 4;
	add.s32 	%r291, %r32, 2016;
	cvt.rn.f32.s32 	%f510, %r291;
	div.approx.f32 	%f57, %f510, %f213;
	abs.f32 	%f888, %f57;
	setp.lt.f32 	%p81, %f888, 0f40000000;
	@%p81 bra 	LBB0_50;
// %bb.39:
	setp.gtu.f32 	%p82, %f888, 0f4B800000;
	@%p82 bra 	LBB0_46;
	bra.uni 	LBB0_40;
LBB0_46:
	mov.b32 	%r42, %f888;
	and.b32  	%r292, %r42, 8388607;
	or.b32  	%r7983, %r292, 1065353216;
	mov.b32 	%f887, %r7983;
	add.s32 	%r293, %r42, -1073741824;
	and.b32  	%r7984, %r293, -8388608;
	setp.eq.s32 	%p88, %r7984, 0;
	@%p88 bra 	LBB0_49;
// %bb.47:                              // %.lr.ph2374.preheader
	mov.f32 	%f521, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f520,%f521;
	// end inline asm
LBB0_48:                                // %.lr.ph2374
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r294, %r7984, 192937984;
	add.s32 	%r295, %r294, %r7983;
	mov.b32 	%f522, %r295;
	mul.f32 	%f523, %f520, %f522;
	sub.f32 	%f524, %f522, %f523;
	fma.rn.f32 	%f525, %f524, %f520, %f523;
	sub.f32 	%f526, %f522, %f525;
	fma.rz.f32 	%f527, %f526, %f520, %f525;
	cvt.rzi.f32.f32 	%f528, %f527;
	sub.f32 	%f887, %f522, %f528;
	sub.s32 	%r7984, %r7984, %r294;
	mov.b32 	%r7983, %f887;
	setp.ne.s32 	%p89, %r7984, 0;
	setp.ne.s32 	%p90, %r7983, 0;
	and.pred  	%p91, %p89, %p90;
	@%p91 bra 	LBB0_48;
LBB0_49:                                // %__internal_fmodf_slowpath_mod.exit.i.i1377
	setp.gt.u32 	%p92, %r42, 2139095039;
	selp.f32 	%f529, 0f7FFFFFFF, 0f4B800000, %p92;
	mul.f32 	%f530, %f887, 0f34000000;
	mul.f32 	%f888, %f529, %f530;
	bra.uni 	LBB0_50;
LBB0_40:                                // %__nv_fast_fdividef.exit.i.i.i1343
	div.approx.f32 	%f513, %f888, %f181;
	cvt.rzi.f32.f32 	%f59, %f513;
	fma.rn.f32 	%f60, %f59, 0fC0000000, %f888;
	mov.b32 	%r41, %f60;
	setp.lt.u32 	%p83, %r41, 1073741824;
	mov.f32 	%f886, %f59;
	@%p83 bra 	LBB0_45;
// %bb.41:
	setp.lt.u32 	%p84, %r41, -2147483647;
	@%p84 bra 	LBB0_43;
// %bb.42:
	add.f32 	%f518, %f59, 0fBF800000;
	setp.lt.f32 	%p87, %f60, 0fC0000000;
	selp.f32 	%f519, %f518, %f59, %p87;
	add.f32 	%f886, %f519, 0fBF800000;
	bra.uni 	LBB0_45;
LBB0_43:
	add.f32 	%f886, %f59, 0f3F800000;
	setp.ltu.f32 	%p85, %f60, 0f40800000;
	@%p85 bra 	LBB0_45;
// %bb.44:                              // %__nv_fmaf_rn.exit.i.i.i1348
	fma.rn.f32 	%f515, %f181, 0fC0400000, %f60;
	setp.ge.f32 	%p86, %f515, 0f00000000;
	selp.f32 	%f516, %f886, %f59, %p86;
	add.f32 	%f517, %f516, 0f3F800000;
	add.f32 	%f886, %f517, 0f3F800000;
LBB0_45:                                // %__internal_fmodf_fastpath_quot.exit.i.i1351
	fma.rn.f32 	%f888, %f886, 0fC0000000, %f888;
LBB0_50:                                // %__internal_fmodf_kernel.exit.i1380
	add.s64 	%rd59, %rd1, %rd58;
	abs.f32 	%f531, %f888;
	setp.gtu.f32 	%p93, %f531, 0f7F800000;
	@%p93 bra 	LBB0_52;
// %bb.51:
	mov.b32 	%r296, %f57;
	and.b32  	%r297, %r296, -2147483648;
	mov.b32 	%r298, %f888;
	or.b32  	%r299, %r297, %r298;
	mov.b32 	%f888, %r299;
LBB0_52:                                // %__nv_fmodf.exit1383
	ld.global.u32 	%r15, [%rd59];
	mov.u64 	%rd60, 2;
	mov.u64 	%rd61, 6;
	{ // callseq 2, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd34;
	st.param.b32 	[param0+8], %r179;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd60;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd61;
	.param .b64 retval0;
	call.uni (retval0), 
	julia_power_by_squaring_13368, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64 	%rd62, [retval0+0];
	} // callseq 2
	setp.ne.s64 	%p101, %rd62, 64;
	@%p101 bra 	LBB0_128;
// %bb.53:                              // %L1095
	shr.u32 	%r16, %r4, 1;
	shr.u32 	%r21, %r4, 3;
	and.b32  	%r314, %r4, 3;
	and.b32  	%r315, %r21, 2;
	or.b32  	%r316, %r19, %r315;
	and.b32  	%r317, %r16, 4;
	or.b32  	%r51, %r316, %r317;
	mul.lo.s32 	%r318, %r314, %r51;
	shl.b32 	%r319, %r318, 1;
	neg.s32 	%r320, %r319;
	cvt.rn.f32.s32 	%f74, %r320;
	mov.f32 	%f564, 0f41000000;
	div.approx.f32 	%f75, %f74, %f564;
	abs.f32 	%f900, %f75;
	setp.lt.f32 	%p102, %f900, 0f40000000;
	mov.f32 	%f892, %f900;
	@%p102 bra 	LBB0_65;
// %bb.54:
	setp.gtu.f32 	%p103, %f900, 0f4B800000;
	@%p103 bra 	LBB0_61;
	bra.uni 	LBB0_55;
LBB0_61:
	mov.b32 	%r53, %f900;
	and.b32  	%r321, %r53, 8388607;
	or.b32  	%r7985, %r321, 1065353216;
	mov.b32 	%f891, %r7985;
	add.s32 	%r322, %r53, -1073741824;
	and.b32  	%r7986, %r322, -8388608;
	setp.eq.s32 	%p109, %r7986, 0;
	@%p109 bra 	LBB0_64;
// %bb.62:                              // %.lr.ph2364.preheader
	mov.f32 	%f574, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f573,%f574;
	// end inline asm
LBB0_63:                                // %.lr.ph2364
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r323, %r7986, 192937984;
	add.s32 	%r324, %r323, %r7985;
	mov.b32 	%f575, %r324;
	mul.f32 	%f576, %f573, %f575;
	sub.f32 	%f577, %f575, %f576;
	fma.rn.f32 	%f578, %f577, %f573, %f576;
	sub.f32 	%f579, %f575, %f578;
	fma.rz.f32 	%f580, %f579, %f573, %f578;
	cvt.rzi.f32.f32 	%f581, %f580;
	sub.f32 	%f891, %f575, %f581;
	sub.s32 	%r7986, %r7986, %r323;
	mov.b32 	%r7985, %f891;
	setp.ne.s32 	%p110, %r7986, 0;
	setp.ne.s32 	%p111, %r7985, 0;
	and.pred  	%p112, %p110, %p111;
	@%p112 bra 	LBB0_63;
LBB0_64:                                // %__internal_fmodf_slowpath_mod.exit.i.i1430
	setp.gt.u32 	%p113, %r53, 2139095039;
	selp.f32 	%f582, 0f7FFFFFFF, 0f4B800000, %p113;
	mul.f32 	%f583, %f891, 0f34000000;
	mul.f32 	%f892, %f582, %f583;
	bra.uni 	LBB0_65;
LBB0_55:                                // %__nv_fast_fdividef.exit.i.i.i1396
	div.approx.f32 	%f566, %f900, %f181;
	cvt.rzi.f32.f32 	%f77, %f566;
	fma.rn.f32 	%f78, %f77, 0fC0000000, %f900;
	mov.b32 	%r52, %f78;
	setp.lt.u32 	%p104, %r52, 1073741824;
	mov.f32 	%f890, %f77;
	@%p104 bra 	LBB0_60;
// %bb.56:
	setp.lt.u32 	%p105, %r52, -2147483647;
	@%p105 bra 	LBB0_58;
// %bb.57:
	add.f32 	%f571, %f77, 0fBF800000;
	setp.lt.f32 	%p108, %f78, 0fC0000000;
	selp.f32 	%f572, %f571, %f77, %p108;
	add.f32 	%f890, %f572, 0fBF800000;
	bra.uni 	LBB0_60;
LBB0_58:
	add.f32 	%f890, %f77, 0f3F800000;
	setp.ltu.f32 	%p106, %f78, 0f40800000;
	@%p106 bra 	LBB0_60;
// %bb.59:                              // %__nv_fmaf_rn.exit.i.i.i1401
	fma.rn.f32 	%f568, %f181, 0fC0400000, %f78;
	setp.ge.f32 	%p107, %f568, 0f00000000;
	selp.f32 	%f569, %f890, %f77, %p107;
	add.f32 	%f570, %f569, 0f3F800000;
	add.f32 	%f890, %f570, 0f3F800000;
LBB0_60:                                // %__internal_fmodf_fastpath_quot.exit.i.i1404
	fma.rn.f32 	%f892, %f890, 0fC0000000, %f900;
LBB0_65:                                // %__internal_fmodf_kernel.exit.i1433
	abs.f32 	%f584, %f892;
	setp.gtu.f32 	%p114, %f584, 0f7F800000;
	mov.b32 	%r325, %f75;
	and.b32  	%r60, %r325, -2147483648;
	@%p114 bra 	LBB0_67;
// %bb.66:
	mov.b32 	%r326, %f892;
	or.b32  	%r327, %r60, %r326;
	mov.b32 	%f892, %r327;
LBB0_67:                                // %__nv_fmodf.exit1436
	and.b32  	%r336, %r13, 6;
	mov.u32 	%r337, -8;
	sub.s32 	%r338, %r337, %r336;
	mul.lo.s32 	%r339, %r51, %r338;
	cvt.rn.f32.s32 	%f94, %r339;
	div.approx.f32 	%f95, %f94, %f564;
	abs.f32 	%f904, %f95;
	setp.lt.f32 	%p122, %f904, 0f40000000;
	mov.f32 	%f896, %f904;
	@%p122 bra 	LBB0_79;
// %bb.68:
	setp.gtu.f32 	%p123, %f904, 0f4B800000;
	@%p123 bra 	LBB0_75;
	bra.uni 	LBB0_69;
LBB0_75:
	mov.b32 	%r62, %f904;
	and.b32  	%r340, %r62, 8388607;
	or.b32  	%r7987, %r340, 1065353216;
	mov.b32 	%f895, %r7987;
	add.s32 	%r341, %r62, -1073741824;
	and.b32  	%r7988, %r341, -8388608;
	setp.eq.s32 	%p129, %r7988, 0;
	@%p129 bra 	LBB0_78;
// %bb.76:                              // %.lr.ph2354.preheader
	mov.f32 	%f625, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f624,%f625;
	// end inline asm
LBB0_77:                                // %.lr.ph2354
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r342, %r7988, 192937984;
	add.s32 	%r343, %r342, %r7987;
	mov.b32 	%f626, %r343;
	mul.f32 	%f627, %f624, %f626;
	sub.f32 	%f628, %f626, %f627;
	fma.rn.f32 	%f629, %f628, %f624, %f627;
	sub.f32 	%f630, %f626, %f629;
	fma.rz.f32 	%f631, %f630, %f624, %f629;
	cvt.rzi.f32.f32 	%f632, %f631;
	sub.f32 	%f895, %f626, %f632;
	sub.s32 	%r7988, %r7988, %r342;
	mov.b32 	%r7987, %f895;
	setp.ne.s32 	%p130, %r7988, 0;
	setp.ne.s32 	%p131, %r7987, 0;
	and.pred  	%p132, %p130, %p131;
	@%p132 bra 	LBB0_77;
LBB0_78:                                // %__internal_fmodf_slowpath_mod.exit.i.i1483
	setp.gt.u32 	%p133, %r62, 2139095039;
	selp.f32 	%f633, 0f7FFFFFFF, 0f4B800000, %p133;
	mul.f32 	%f634, %f895, 0f34000000;
	mul.f32 	%f896, %f633, %f634;
	bra.uni 	LBB0_79;
LBB0_69:                                // %__nv_fast_fdividef.exit.i.i.i1449
	div.approx.f32 	%f617, %f904, %f181;
	cvt.rzi.f32.f32 	%f97, %f617;
	fma.rn.f32 	%f98, %f97, 0fC0000000, %f904;
	mov.b32 	%r61, %f98;
	setp.lt.u32 	%p124, %r61, 1073741824;
	mov.f32 	%f894, %f97;
	@%p124 bra 	LBB0_74;
// %bb.70:
	setp.lt.u32 	%p125, %r61, -2147483647;
	@%p125 bra 	LBB0_72;
// %bb.71:
	add.f32 	%f622, %f97, 0fBF800000;
	setp.lt.f32 	%p128, %f98, 0fC0000000;
	selp.f32 	%f623, %f622, %f97, %p128;
	add.f32 	%f894, %f623, 0fBF800000;
	bra.uni 	LBB0_74;
LBB0_72:
	add.f32 	%f894, %f97, 0f3F800000;
	setp.ltu.f32 	%p126, %f98, 0f40800000;
	@%p126 bra 	LBB0_74;
// %bb.73:                              // %__nv_fmaf_rn.exit.i.i.i1454
	fma.rn.f32 	%f619, %f181, 0fC0400000, %f98;
	setp.ge.f32 	%p127, %f619, 0f00000000;
	selp.f32 	%f620, %f894, %f97, %p127;
	add.f32 	%f621, %f620, 0f3F800000;
	add.f32 	%f894, %f621, 0f3F800000;
LBB0_74:                                // %__internal_fmodf_fastpath_quot.exit.i.i1457
	fma.rn.f32 	%f896, %f894, 0fC0000000, %f904;
LBB0_79:                                // %__internal_fmodf_kernel.exit.i1486
	abs.f32 	%f635, %f896;
	setp.gtu.f32 	%p134, %f635, 0f7F800000;
	mov.b32 	%r344, %f95;
	and.b32  	%r69, %r344, -2147483648;
	@%p134 bra 	LBB0_81;
// %bb.80:
	mov.b32 	%r345, %f896;
	or.b32  	%r346, %r69, %r345;
	mov.b32 	%f896, %r346;
LBB0_81:                                // %__nv_fmodf.exit1489
	{ // callseq 5, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd34;
	st.param.b32 	[param0+8], %r179;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd60;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd61;
	.param .b64 retval0;
	call.uni (retval0), 
	julia_power_by_squaring_13368, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64 	%rd68, [retval0+0];
	} // callseq 5
	setp.ne.s64 	%p142, %rd68, 64;
	@%p142 bra 	LBB0_127;
// %bb.82:                              // %L1261
	{ // callseq 8, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd34;
	st.param.b32 	[param0+8], %r179;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd60;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd61;
	.param .b64 retval0;
	call.uni (retval0), 
	julia_power_by_squaring_13368, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64 	%rd74, [retval0+0];
	} // callseq 8
	cvt.rn.f32.s64 	%f668, %rd74;
	div.approx.f32 	%f112, %f74, %f668;
	abs.f32 	%f908, %f112;
	setp.lt.f32 	%p143, %f908, 0f40000000;
	@%p143 bra 	LBB0_136;
// %bb.83:
	setp.gtu.f32 	%p144, %f908, 0f4B800000;
	@%p144 bra 	LBB0_132;
	bra.uni 	LBB0_84;
LBB0_132:
	mov.b32 	%r141, %f908;
	and.b32  	%r367, %r141, 8388607;
	or.b32  	%r8019, %r367, 1065353216;
	mov.b32 	%f907, %r8019;
	add.s32 	%r368, %r141, -1073741824;
	and.b32  	%r8020, %r368, -8388608;
	setp.eq.s32 	%p150, %r8020, 0;
	@%p150 bra 	LBB0_135;
// %bb.133:                             // %.lr.ph2349.preheader
	mov.f32 	%f678, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f677,%f678;
	// end inline asm
LBB0_134:                               // %.lr.ph2349
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r369, %r8020, 192937984;
	add.s32 	%r370, %r369, %r8019;
	mov.b32 	%f679, %r370;
	mul.f32 	%f680, %f677, %f679;
	sub.f32 	%f681, %f679, %f680;
	fma.rn.f32 	%f682, %f681, %f677, %f680;
	sub.f32 	%f683, %f679, %f682;
	fma.rz.f32 	%f684, %f683, %f677, %f682;
	cvt.rzi.f32.f32 	%f685, %f684;
	sub.f32 	%f907, %f679, %f685;
	sub.s32 	%r8020, %r8020, %r369;
	mov.b32 	%r8019, %f907;
	setp.ne.s32 	%p151, %r8020, 0;
	setp.ne.s32 	%p152, %r8019, 0;
	and.pred  	%p153, %p151, %p152;
	@%p153 bra 	LBB0_134;
LBB0_135:                               // %__internal_fmodf_slowpath_mod.exit.i.i1642
	setp.gt.u32 	%p154, %r141, 2139095039;
	selp.f32 	%f686, 0f7FFFFFFF, 0f4B800000, %p154;
	mul.f32 	%f687, %f907, 0f34000000;
	mul.f32 	%f908, %f686, %f687;
	bra.uni 	LBB0_136;
LBB0_84:                                // %__nv_fast_fdividef.exit.i.i.i1608
	div.approx.f32 	%f670, %f908, %f181;
	cvt.rzi.f32.f32 	%f146, %f670;
	fma.rn.f32 	%f147, %f146, 0fC0000000, %f908;
	mov.b32 	%r140, %f147;
	setp.lt.u32 	%p145, %r140, 1073741824;
	mov.f32 	%f906, %f146;
	@%p145 bra 	LBB0_131;
// %bb.85:
	setp.lt.u32 	%p146, %r140, -2147483647;
	@%p146 bra 	LBB0_129;
// %bb.86:
	add.f32 	%f675, %f146, 0fBF800000;
	setp.lt.f32 	%p149, %f147, 0fC0000000;
	selp.f32 	%f676, %f675, %f146, %p149;
	add.f32 	%f906, %f676, 0fBF800000;
	bra.uni 	LBB0_131;
LBB0_129:
	add.f32 	%f906, %f146, 0f3F800000;
	setp.ltu.f32 	%p147, %f147, 0f40800000;
	@%p147 bra 	LBB0_131;
// %bb.130:                             // %__nv_fmaf_rn.exit.i.i.i1613
	fma.rn.f32 	%f672, %f181, 0fC0400000, %f147;
	setp.ge.f32 	%p148, %f672, 0f00000000;
	selp.f32 	%f673, %f906, %f146, %p148;
	add.f32 	%f674, %f673, 0f3F800000;
	add.f32 	%f906, %f674, 0f3F800000;
LBB0_131:                               // %__internal_fmodf_fastpath_quot.exit.i.i1616
	fma.rn.f32 	%f908, %f906, 0fC0000000, %f908;
LBB0_136:                               // %__internal_fmodf_kernel.exit.i1645
	abs.f32 	%f688, %f908;
	setp.gtu.f32 	%p155, %f688, 0f7F800000;
	@%p155 bra 	LBB0_138;
// %bb.137:
	mov.b32 	%r371, %f112;
	and.b32  	%r372, %r371, -2147483648;
	mov.b32 	%r373, %f908;
	or.b32  	%r374, %r372, %r373;
	mov.b32 	%f908, %r374;
LBB0_138:                               // %__nv_fmodf.exit1648
	{ // callseq 9, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd34;
	st.param.b32 	[param0+8], %r179;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd60;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd61;
	.param .b64 retval0;
	call.uni (retval0), 
	julia_power_by_squaring_13368, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64 	%rd78, [retval0+0];
	} // callseq 9
	cvt.rn.f32.s64 	%f719, %rd78;
	div.approx.f32 	%f163, %f94, %f719;
	abs.f32 	%f912, %f163;
	setp.lt.f32 	%p163, %f912, 0f40000000;
	@%p163 bra 	LBB0_150;
// %bb.139:
	setp.gtu.f32 	%p164, %f912, 0f4B800000;
	@%p164 bra 	LBB0_146;
	bra.uni 	LBB0_140;
LBB0_146:
	mov.b32 	%r149, %f912;
	and.b32  	%r383, %r149, 8388607;
	or.b32  	%r8021, %r383, 1065353216;
	mov.b32 	%f911, %r8021;
	add.s32 	%r384, %r149, -1073741824;
	and.b32  	%r8022, %r384, -8388608;
	setp.eq.s32 	%p170, %r8022, 0;
	@%p170 bra 	LBB0_149;
// %bb.147:                             // %.lr.ph2344.preheader
	mov.f32 	%f729, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f728,%f729;
	// end inline asm
LBB0_148:                               // %.lr.ph2344
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r385, %r8022, 192937984;
	add.s32 	%r386, %r385, %r8021;
	mov.b32 	%f730, %r386;
	mul.f32 	%f731, %f728, %f730;
	sub.f32 	%f732, %f730, %f731;
	fma.rn.f32 	%f733, %f732, %f728, %f731;
	sub.f32 	%f734, %f730, %f733;
	fma.rz.f32 	%f735, %f734, %f728, %f733;
	cvt.rzi.f32.f32 	%f736, %f735;
	sub.f32 	%f911, %f730, %f736;
	sub.s32 	%r8022, %r8022, %r385;
	mov.b32 	%r8021, %f911;
	setp.ne.s32 	%p171, %r8022, 0;
	setp.ne.s32 	%p172, %r8021, 0;
	and.pred  	%p173, %p171, %p172;
	@%p173 bra 	LBB0_148;
LBB0_149:                               // %__internal_fmodf_slowpath_mod.exit.i.i1695
	setp.gt.u32 	%p174, %r149, 2139095039;
	selp.f32 	%f737, 0f7FFFFFFF, 0f4B800000, %p174;
	mul.f32 	%f738, %f911, 0f34000000;
	mul.f32 	%f912, %f737, %f738;
	bra.uni 	LBB0_150;
LBB0_140:                               // %__nv_fast_fdividef.exit.i.i.i1661
	div.approx.f32 	%f721, %f912, %f181;
	cvt.rzi.f32.f32 	%f165, %f721;
	fma.rn.f32 	%f166, %f165, 0fC0000000, %f912;
	mov.b32 	%r148, %f166;
	setp.lt.u32 	%p165, %r148, 1073741824;
	mov.f32 	%f910, %f165;
	@%p165 bra 	LBB0_145;
// %bb.141:
	setp.lt.u32 	%p166, %r148, -2147483647;
	@%p166 bra 	LBB0_143;
// %bb.142:
	add.f32 	%f726, %f165, 0fBF800000;
	setp.lt.f32 	%p169, %f166, 0fC0000000;
	selp.f32 	%f727, %f726, %f165, %p169;
	add.f32 	%f910, %f727, 0fBF800000;
	bra.uni 	LBB0_145;
LBB0_143:
	add.f32 	%f910, %f165, 0f3F800000;
	setp.ltu.f32 	%p167, %f166, 0f40800000;
	@%p167 bra 	LBB0_145;
// %bb.144:                             // %__nv_fmaf_rn.exit.i.i.i1666
	fma.rn.f32 	%f723, %f181, 0fC0400000, %f166;
	setp.ge.f32 	%p168, %f723, 0f00000000;
	selp.f32 	%f724, %f910, %f165, %p168;
	add.f32 	%f725, %f724, 0f3F800000;
	add.f32 	%f910, %f725, 0f3F800000;
LBB0_145:                               // %__internal_fmodf_fastpath_quot.exit.i.i1669
	fma.rn.f32 	%f912, %f910, 0fC0000000, %f912;
LBB0_150:                               // %__internal_fmodf_kernel.exit.i1698
	abs.f32 	%f739, %f912;
	setp.gtu.f32 	%p175, %f739, 0f7F800000;
	@%p175 bra 	LBB0_152;
// %bb.151:
	mov.b32 	%r387, %f163;
	and.b32  	%r388, %r387, -2147483648;
	mov.b32 	%r389, %f912;
	or.b32  	%r390, %r388, %r389;
	mov.b32 	%f912, %r390;
LBB0_152:                               // %__nv_fmodf.exit1701
	{ // callseq 10, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd34;
	st.param.b32 	[param0+8], %r179;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd60;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd61;
	.param .b64 retval0;
	call.uni (retval0), 
	julia_power_by_squaring_13368, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64 	%rd82, [retval0+0];
	} // callseq 10
	setp.eq.s64 	%p183, %rd82, 64;
	@%p183 bra 	LBB0_87;
	bra.uni 	LBB0_153;
LBB0_87:                                // %L1440
	@%p102 bra 	LBB0_99;
// %bb.88:
	setp.gtu.f32 	%p185, %f900, 0f4B800000;
	@%p185 bra 	LBB0_95;
	bra.uni 	LBB0_89;
LBB0_95:
	mov.b32 	%r75, %f900;
	and.b32  	%r405, %r75, 8388607;
	or.b32  	%r7989, %r405, 1065353216;
	mov.b32 	%f899, %r7989;
	add.s32 	%r406, %r75, -1073741824;
	and.b32  	%r7990, %r406, -8388608;
	setp.eq.s32 	%p191, %r7990, 0;
	@%p191 bra 	LBB0_98;
// %bb.96:                              // %.lr.ph2334.preheader
	mov.f32 	%f781, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f780,%f781;
	// end inline asm
LBB0_97:                                // %.lr.ph2334
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r407, %r7990, 192937984;
	add.s32 	%r408, %r407, %r7989;
	mov.b32 	%f782, %r408;
	mul.f32 	%f783, %f780, %f782;
	sub.f32 	%f784, %f782, %f783;
	fma.rn.f32 	%f785, %f784, %f780, %f783;
	sub.f32 	%f786, %f782, %f785;
	fma.rz.f32 	%f787, %f786, %f780, %f785;
	cvt.rzi.f32.f32 	%f788, %f787;
	sub.f32 	%f899, %f782, %f788;
	sub.s32 	%r7990, %r7990, %r407;
	mov.b32 	%r7989, %f899;
	setp.ne.s32 	%p192, %r7990, 0;
	setp.ne.s32 	%p193, %r7989, 0;
	and.pred  	%p194, %p192, %p193;
	@%p194 bra 	LBB0_97;
LBB0_98:                                // %__internal_fmodf_slowpath_mod.exit.i.i1536
	setp.gt.u32 	%p195, %r75, 2139095039;
	selp.f32 	%f789, 0f7FFFFFFF, 0f4B800000, %p195;
	mul.f32 	%f790, %f899, 0f34000000;
	mul.f32 	%f900, %f789, %f790;
	bra.uni 	LBB0_99;
LBB0_89:                                // %__nv_fast_fdividef.exit.i.i.i1502
	div.approx.f32 	%f773, %f900, %f181;
	cvt.rzi.f32.f32 	%f114, %f773;
	fma.rn.f32 	%f115, %f114, 0fC0000000, %f900;
	mov.b32 	%r74, %f115;
	setp.lt.u32 	%p186, %r74, 1073741824;
	mov.f32 	%f898, %f114;
	@%p186 bra 	LBB0_94;
// %bb.90:
	setp.lt.u32 	%p187, %r74, -2147483647;
	@%p187 bra 	LBB0_92;
// %bb.91:
	add.f32 	%f778, %f114, 0fBF800000;
	setp.lt.f32 	%p190, %f115, 0fC0000000;
	selp.f32 	%f779, %f778, %f114, %p190;
	add.f32 	%f898, %f779, 0fBF800000;
	bra.uni 	LBB0_94;
LBB0_92:
	add.f32 	%f898, %f114, 0f3F800000;
	setp.ltu.f32 	%p188, %f115, 0f40800000;
	@%p188 bra 	LBB0_94;
// %bb.93:                              // %__nv_fmaf_rn.exit.i.i.i1507
	fma.rn.f32 	%f775, %f181, 0fC0400000, %f115;
	setp.ge.f32 	%p189, %f775, 0f00000000;
	selp.f32 	%f776, %f898, %f114, %p189;
	add.f32 	%f777, %f776, 0f3F800000;
	add.f32 	%f898, %f777, 0f3F800000;
LBB0_94:                                // %__internal_fmodf_fastpath_quot.exit.i.i1510
	fma.rn.f32 	%f900, %f898, 0fC0000000, %f900;
LBB0_99:                                // %__internal_fmodf_kernel.exit.i1539
	abs.f32 	%f791, %f900;
	setp.gtu.f32 	%p196, %f791, 0f7F800000;
	@%p196 bra 	LBB0_101;
// %bb.100:
	mov.b32 	%r409, %f900;
	or.b32  	%r410, %r60, %r409;
	mov.b32 	%f900, %r410;
LBB0_101:                               // %__nv_fmodf.exit1542
	@%p122 bra 	LBB0_113;
// %bb.102:
	setp.gtu.f32 	%p205, %f904, 0f4B800000;
	@%p205 bra 	LBB0_109;
	bra.uni 	LBB0_103;
LBB0_109:
	mov.b32 	%r83, %f904;
	and.b32  	%r419, %r83, 8388607;
	or.b32  	%r7991, %r419, 1065353216;
	mov.b32 	%f903, %r7991;
	add.s32 	%r420, %r83, -1073741824;
	and.b32  	%r7992, %r420, -8388608;
	setp.eq.s32 	%p211, %r7992, 0;
	@%p211 bra 	LBB0_112;
// %bb.110:                             // %.lr.ph.preheader
	mov.f32 	%f831, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f830,%f831;
	// end inline asm
LBB0_111:                               // %.lr.ph
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r421, %r7992, 192937984;
	add.s32 	%r422, %r421, %r7991;
	mov.b32 	%f832, %r422;
	mul.f32 	%f833, %f830, %f832;
	sub.f32 	%f834, %f832, %f833;
	fma.rn.f32 	%f835, %f834, %f830, %f833;
	sub.f32 	%f836, %f832, %f835;
	fma.rz.f32 	%f837, %f836, %f830, %f835;
	cvt.rzi.f32.f32 	%f838, %f837;
	sub.f32 	%f903, %f832, %f838;
	sub.s32 	%r7992, %r7992, %r421;
	mov.b32 	%r7991, %f903;
	setp.ne.s32 	%p212, %r7992, 0;
	setp.ne.s32 	%p213, %r7991, 0;
	and.pred  	%p214, %p212, %p213;
	@%p214 bra 	LBB0_111;
LBB0_112:                               // %__internal_fmodf_slowpath_mod.exit.i.i1589
	setp.gt.u32 	%p215, %r83, 2139095039;
	selp.f32 	%f839, 0f7FFFFFFF, 0f4B800000, %p215;
	mul.f32 	%f840, %f903, 0f34000000;
	mul.f32 	%f904, %f839, %f840;
	bra.uni 	LBB0_113;
LBB0_103:                               // %__nv_fast_fdividef.exit.i.i.i1555
	div.approx.f32 	%f823, %f904, %f181;
	cvt.rzi.f32.f32 	%f131, %f823;
	fma.rn.f32 	%f132, %f131, 0fC0000000, %f904;
	mov.b32 	%r82, %f132;
	setp.lt.u32 	%p206, %r82, 1073741824;
	mov.f32 	%f902, %f131;
	@%p206 bra 	LBB0_108;
// %bb.104:
	setp.lt.u32 	%p207, %r82, -2147483647;
	@%p207 bra 	LBB0_106;
// %bb.105:
	add.f32 	%f828, %f131, 0fBF800000;
	setp.lt.f32 	%p210, %f132, 0fC0000000;
	selp.f32 	%f829, %f828, %f131, %p210;
	add.f32 	%f902, %f829, 0fBF800000;
	bra.uni 	LBB0_108;
LBB0_106:
	add.f32 	%f902, %f131, 0f3F800000;
	setp.ltu.f32 	%p208, %f132, 0f40800000;
	@%p208 bra 	LBB0_108;
// %bb.107:                             // %__nv_fmaf_rn.exit.i.i.i1560
	fma.rn.f32 	%f825, %f181, 0fC0400000, %f132;
	setp.ge.f32 	%p209, %f825, 0f00000000;
	selp.f32 	%f826, %f902, %f131, %p209;
	add.f32 	%f827, %f826, 0f3F800000;
	add.f32 	%f902, %f827, 0f3F800000;
LBB0_108:                               // %__internal_fmodf_fastpath_quot.exit.i.i1563
	fma.rn.f32 	%f904, %f902, 0fC0000000, %f904;
LBB0_113:                               // %__internal_fmodf_kernel.exit.i1592
	abs.f32 	%f841, %f904;
	setp.gtu.f32 	%p216, %f841, 0f7F800000;
	@%p216 bra 	LBB0_115;
// %bb.114:
	mov.b32 	%r423, %f904;
	or.b32  	%r424, %r69, %r423;
	mov.b32 	%f904, %r424;
LBB0_115:                               // %__nv_fmodf.exit1595
	setp.le.s32 	%p224, %r6, %r5;
	mov.u32 	%r7978, 0;
	@%p224 bra 	LBB0_126;
// %bb.116:                             // %L1540.lr.ph
	mov.f32 	%f185, 0f43808000;
	div.approx.f32 	%f186, %f184, %f185;
	div.approx.f32 	%f220, %f218, %f185;
	div.approx.f32 	%f255, %f253, %f185;
	div.approx.f32 	%f289, %f287, %f185;
	div.approx.f32 	%f324, %f322, %f185;
	div.approx.f32 	%f358, %f356, %f185;
	div.approx.f32 	%f393, %f391, %f185;
	div.approx.f32 	%f427, %f425, %f185;
	abs.f32 	%f187, %f186;
	abs.f32 	%f221, %f220;
	abs.f32 	%f256, %f255;
	abs.f32 	%f290, %f289;
	abs.f32 	%f325, %f324;
	abs.f32 	%f359, %f358;
	abs.f32 	%f394, %f393;
	abs.f32 	%f428, %f427;
	setp.gt.f32 	%p13, %f187, 0f4B800000;
	mul.f32 	%f188, %f186, 0f00000000;
	setp.gt.f32 	%p19, %f221, 0f4B800000;
	mul.f32 	%f222, %f220, 0f00000000;
	setp.gt.f32 	%p25, %f256, 0f4B800000;
	mul.f32 	%f257, %f255, 0f00000000;
	setp.gt.f32 	%p31, %f290, 0f4B800000;
	mul.f32 	%f291, %f289, 0f00000000;
	setp.gt.f32 	%p37, %f325, 0f4B800000;
	mul.f32 	%f326, %f324, 0f00000000;
	setp.gt.f32 	%p43, %f359, 0f4B800000;
	mul.f32 	%f360, %f358, 0f00000000;
	setp.gt.f32 	%p49, %f394, 0f4B800000;
	mul.f32 	%f395, %f393, 0f00000000;
	setp.gt.f32 	%p55, %f428, 0f4B800000;
	mul.f32 	%f429, %f427, 0f00000000;
	selp.f32 	%f189, %f188, %f186, %p13;
	selp.f32 	%f223, %f222, %f220, %p19;
	selp.f32 	%f258, %f257, %f255, %p25;
	selp.f32 	%f292, %f291, %f289, %p31;
	selp.f32 	%f327, %f326, %f324, %p37;
	selp.f32 	%f361, %f360, %f358, %p43;
	selp.f32 	%f396, %f395, %f393, %p49;
	selp.f32 	%f430, %f429, %f427, %p55;
	add.f32 	%f585, %f892, %f892;
	add.f32 	%f636, %f896, %f896;
	add.f32 	%f190, %f189, %f189;
	add.f32 	%f224, %f223, %f223;
	add.f32 	%f259, %f258, %f258;
	add.f32 	%f293, %f292, %f292;
	add.f32 	%f328, %f327, %f327;
	add.f32 	%f362, %f361, %f361;
	add.f32 	%f397, %f396, %f396;
	add.f32 	%f431, %f430, %f430;
	add.f32 	%f480, %f884, %f884;
	add.f32 	%f532, %f888, %f888;
	mov.b32 	%r328, %f585;
	mov.b32 	%r359, %f636;
	add.f32 	%f689, %f908, %f908;
	add.f32 	%f740, %f912, %f912;
	mov.b32 	%r204, %f190;
	mov.b32 	%r211, %f224;
	mov.b32 	%r222, %f259;
	mov.b32 	%r229, %f293;
	mov.b32 	%r240, %f328;
	mov.b32 	%r247, %f362;
	mov.b32 	%r258, %f397;
	mov.b32 	%r265, %f431;
	mov.b32 	%r283, %f480;
	mov.b32 	%r306, %f532;
	and.b32  	%r329, %r328, -2147483648;
	and.b32  	%r360, %r359, -2147483648;
	mov.b32 	%r375, %f689;
	mov.b32 	%r397, %f740;
	and.b32  	%r205, %r204, -2147483648;
	and.b32  	%r212, %r211, -2147483648;
	and.b32  	%r223, %r222, -2147483648;
	and.b32  	%r230, %r229, -2147483648;
	and.b32  	%r241, %r240, -2147483648;
	and.b32  	%r248, %r247, -2147483648;
	and.b32  	%r259, %r258, -2147483648;
	and.b32  	%r266, %r265, -2147483648;
	and.b32  	%r284, %r283, -2147483648;
	and.b32  	%r307, %r306, -2147483648;
	or.b32  	%r330, %r329, 1056964608;
	or.b32  	%r361, %r360, 1056964608;
	and.b32  	%r376, %r375, -2147483648;
	and.b32  	%r398, %r397, -2147483648;
	add.f32 	%f792, %f900, %f900;
	or.b32  	%r206, %r205, 1056964608;
	or.b32  	%r213, %r212, 1056964608;
	or.b32  	%r224, %r223, 1056964608;
	or.b32  	%r231, %r230, 1056964608;
	or.b32  	%r242, %r241, 1056964608;
	or.b32  	%r249, %r248, 1056964608;
	or.b32  	%r260, %r259, 1056964608;
	or.b32  	%r267, %r266, 1056964608;
	or.b32  	%r285, %r284, 1056964608;
	or.b32  	%r308, %r307, 1056964608;
	mov.b32 	%f586, %r330;
	mov.b32 	%f637, %r361;
	or.b32  	%r377, %r376, 1056964608;
	or.b32  	%r399, %r398, 1056964608;
	mov.b32 	%r411, %f792;
	mov.b32 	%f191, %r206;
	mov.b32 	%f225, %r213;
	mov.b32 	%f260, %r224;
	mov.b32 	%f294, %r231;
	mov.b32 	%f329, %r242;
	mov.b32 	%f363, %r249;
	mov.b32 	%f398, %r260;
	mov.b32 	%f432, %r267;
	mov.b32 	%f481, %r285;
	mov.b32 	%f533, %r308;
	add.f32 	%f587, %f585, %f586;
	abs.f32 	%f589, %f585;
	add.f32 	%f638, %f636, %f637;
	abs.f32 	%f640, %f636;
	mov.b32 	%f690, %r377;
	mov.b32 	%f741, %r399;
	and.b32  	%r412, %r411, -2147483648;
	add.f32 	%f192, %f190, %f191;
	abs.f32 	%f194, %f190;
	add.f32 	%f226, %f224, %f225;
	abs.f32 	%f228, %f224;
	add.f32 	%f261, %f259, %f260;
	abs.f32 	%f263, %f259;
	add.f32 	%f295, %f293, %f294;
	abs.f32 	%f297, %f293;
	add.f32 	%f330, %f328, %f329;
	abs.f32 	%f332, %f328;
	add.f32 	%f364, %f362, %f363;
	abs.f32 	%f366, %f362;
	add.f32 	%f399, %f397, %f398;
	abs.f32 	%f401, %f397;
	add.f32 	%f433, %f431, %f432;
	abs.f32 	%f435, %f431;
	add.f32 	%f482, %f480, %f481;
	abs.f32 	%f484, %f480;
	add.f32 	%f534, %f532, %f533;
	abs.f32 	%f536, %f532;
	cvt.rzi.f32.f32 	%f588, %f587;
	setp.gt.f32 	%p115, %f589, 0f4B000000;
	cvt.rzi.f32.f32 	%f639, %f638;
	setp.gt.f32 	%p135, %f640, 0f4B000000;
	add.f32 	%f691, %f689, %f690;
	abs.f32 	%f693, %f689;
	add.f32 	%f742, %f740, %f741;
	abs.f32 	%f744, %f740;
	or.b32  	%r413, %r412, 1056964608;
	cvt.rzi.f32.f32 	%f193, %f192;
	setp.gt.f32 	%p14, %f194, 0f4B000000;
	cvt.rzi.f32.f32 	%f227, %f226;
	setp.gt.f32 	%p20, %f228, 0f4B000000;
	cvt.rzi.f32.f32 	%f262, %f261;
	setp.gt.f32 	%p26, %f263, 0f4B000000;
	cvt.rzi.f32.f32 	%f296, %f295;
	setp.gt.f32 	%p32, %f297, 0f4B000000;
	cvt.rzi.f32.f32 	%f331, %f330;
	setp.gt.f32 	%p38, %f332, 0f4B000000;
	cvt.rzi.f32.f32 	%f365, %f364;
	setp.gt.f32 	%p44, %f366, 0f4B000000;
	cvt.rzi.f32.f32 	%f400, %f399;
	setp.gt.f32 	%p50, %f401, 0f4B000000;
	cvt.rzi.f32.f32 	%f434, %f433;
	setp.gt.f32 	%p56, %f435, 0f4B000000;
	cvt.rzi.f32.f32 	%f483, %f482;
	setp.gt.f32 	%p74, %f484, 0f4B000000;
	cvt.rzi.f32.f32 	%f535, %f534;
	setp.gt.f32 	%p94, %f536, 0f4B000000;
	selp.f32 	%f590, %f585, %f588, %p115;
	cvt.rzi.f32.f32 	%f591, %f585;
	setp.lt.f32 	%p116, %f589, 0f3F000000;
	selp.f32 	%f641, %f636, %f639, %p135;
	cvt.rzi.f32.f32 	%f642, %f636;
	setp.lt.f32 	%p136, %f640, 0f3F000000;
	cvt.rzi.f32.f32 	%f692, %f691;
	setp.gt.f32 	%p156, %f693, 0f4B000000;
	cvt.rzi.f32.f32 	%f743, %f742;
	setp.gt.f32 	%p176, %f744, 0f4B000000;
	mov.b32 	%f793, %r413;
	selp.f32 	%f195, %f190, %f193, %p14;
	cvt.rzi.f32.f32 	%f196, %f190;
	setp.lt.f32 	%p15, %f194, 0f3F000000;
	selp.f32 	%f229, %f224, %f227, %p20;
	cvt.rzi.f32.f32 	%f230, %f224;
	setp.lt.f32 	%p21, %f228, 0f3F000000;
	selp.f32 	%f264, %f259, %f262, %p26;
	cvt.rzi.f32.f32 	%f265, %f259;
	setp.lt.f32 	%p27, %f263, 0f3F000000;
	selp.f32 	%f298, %f293, %f296, %p32;
	cvt.rzi.f32.f32 	%f299, %f293;
	setp.lt.f32 	%p33, %f297, 0f3F000000;
	selp.f32 	%f333, %f328, %f331, %p38;
	cvt.rzi.f32.f32 	%f334, %f328;
	setp.lt.f32 	%p39, %f332, 0f3F000000;
	selp.f32 	%f367, %f362, %f365, %p44;
	cvt.rzi.f32.f32 	%f368, %f362;
	setp.lt.f32 	%p45, %f366, 0f3F000000;
	selp.f32 	%f402, %f397, %f400, %p50;
	cvt.rzi.f32.f32 	%f403, %f397;
	setp.lt.f32 	%p51, %f401, 0f3F000000;
	selp.f32 	%f436, %f431, %f434, %p56;
	cvt.rzi.f32.f32 	%f437, %f431;
	setp.lt.f32 	%p57, %f435, 0f3F000000;
	selp.f32 	%f485, %f480, %f483, %p74;
	cvt.rzi.f32.f32 	%f486, %f480;
	setp.lt.f32 	%p75, %f484, 0f3F000000;
	selp.f32 	%f537, %f532, %f535, %p94;
	cvt.rzi.f32.f32 	%f538, %f532;
	setp.lt.f32 	%p95, %f536, 0f3F000000;
	selp.f32 	%f592, %f591, %f590, %p116;
	selp.f32 	%f643, %f642, %f641, %p136;
	selp.f32 	%f694, %f689, %f692, %p156;
	cvt.rzi.f32.f32 	%f695, %f689;
	setp.lt.f32 	%p157, %f693, 0f3F000000;
	selp.f32 	%f745, %f740, %f743, %p176;
	cvt.rzi.f32.f32 	%f746, %f740;
	setp.lt.f32 	%p177, %f744, 0f3F000000;
	add.f32 	%f794, %f792, %f793;
	abs.f32 	%f796, %f792;
	selp.f32 	%f197, %f196, %f195, %p15;
	selp.f32 	%f231, %f230, %f229, %p21;
	selp.f32 	%f266, %f265, %f264, %p27;
	selp.f32 	%f300, %f299, %f298, %p33;
	selp.f32 	%f335, %f334, %f333, %p39;
	selp.f32 	%f369, %f368, %f367, %p45;
	selp.f32 	%f404, %f403, %f402, %p51;
	selp.f32 	%f438, %f437, %f436, %p57;
	selp.f32 	%f487, %f486, %f485, %p75;
	selp.f32 	%f539, %f538, %f537, %p95;
	fma.rn.f32 	%f593, %f592, 0fBF000000, %f892;
	fma.rn.f32 	%f644, %f643, 0fBF000000, %f896;
	selp.f32 	%f696, %f695, %f694, %p157;
	selp.f32 	%f747, %f746, %f745, %p177;
	cvt.rzi.f32.f32 	%f795, %f794;
	setp.gt.f32 	%p198, %f796, 0f4B000000;
	fma.rn.f32 	%f198, %f197, 0fBF000000, %f189;
	fma.rn.f32 	%f232, %f231, 0fBF000000, %f223;
	fma.rn.f32 	%f267, %f266, 0fBF000000, %f258;
	fma.rn.f32 	%f301, %f300, 0fBF000000, %f292;
	fma.rn.f32 	%f336, %f335, 0fBF000000, %f327;
	fma.rn.f32 	%f370, %f369, 0fBF000000, %f361;
	fma.rn.f32 	%f405, %f404, 0fBF000000, %f396;
	fma.rn.f32 	%f439, %f438, 0fBF000000, %f430;
	fma.rn.f32 	%f488, %f487, 0fBF000000, %f884;
	fma.rn.f32 	%f540, %f539, 0fBF000000, %f888;
	mul.f32 	%f594, %f593, %f593;
	mul.f32 	%f645, %f644, %f644;
	fma.rn.f32 	%f697, %f696, 0fBF000000, %f908;
	fma.rn.f32 	%f748, %f747, 0fBF000000, %f912;
	selp.f32 	%f797, %f792, %f795, %p198;
	cvt.rzi.f32.f32 	%f798, %f792;
	setp.lt.f32 	%p199, %f796, 0f3F000000;
	mul.f32 	%f199, %f198, %f198;
	mul.f32 	%f233, %f232, %f232;
	mul.f32 	%f268, %f267, %f267;
	mul.f32 	%f302, %f301, %f301;
	mul.f32 	%f337, %f336, %f336;
	mul.f32 	%f371, %f370, %f370;
	mul.f32 	%f406, %f405, %f405;
	mul.f32 	%f440, %f439, %f439;
	mul.f32 	%f489, %f488, %f488;
	mul.f32 	%f541, %f540, %f540;
	fma.rn.f32 	%f595, %f594, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f596, %f594, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f646, %f645, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f647, %f645, 0f3E684E12, 0fBFAAD2E0;
	mul.f32 	%f698, %f697, %f697;
	mul.f32 	%f749, %f748, %f748;
	selp.f32 	%f799, %f798, %f797, %p199;
	cvt.rzi.s32.f32 	%r207, %f197;
	fma.rn.f32 	%f200, %f199, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f201, %f199, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r214, %f231;
	fma.rn.f32 	%f234, %f233, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f235, %f233, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r225, %f266;
	fma.rn.f32 	%f269, %f268, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f270, %f268, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r232, %f300;
	fma.rn.f32 	%f303, %f302, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f304, %f302, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r243, %f335;
	fma.rn.f32 	%f338, %f337, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f339, %f337, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r250, %f369;
	fma.rn.f32 	%f372, %f371, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f373, %f371, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r261, %f404;
	fma.rn.f32 	%f407, %f406, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f408, %f406, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r268, %f438;
	fma.rn.f32 	%f441, %f440, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f442, %f440, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f490, %f489, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f491, %f489, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f542, %f541, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f543, %f541, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r331, %f592;
	fma.rn.f32 	%f597, %f595, %f594, 0fC0A55DF6;
	fma.rn.f32 	%f598, %f596, %f594, 0f4081E0CF;
	fma.rn.f32 	%f599, %f594, %f593, 0f00000000;
	cvt.rzi.s32.f32 	%r362, %f643;
	fma.rn.f32 	%f648, %f646, %f645, 0fC0A55DF6;
	fma.rn.f32 	%f649, %f647, %f645, 0f4081E0CF;
	fma.rn.f32 	%f650, %f645, %f644, 0f00000000;
	fma.rn.f32 	%f699, %f698, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f700, %f698, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f750, %f749, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f751, %f749, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f800, %f799, 0fBF000000, %f900;
	add.s32 	%r208, %r207, 1;
	fma.rn.f32 	%f202, %f200, %f199, 0fC0A55DF6;
	fma.rn.f32 	%f203, %f201, %f199, 0f4081E0CF;
	fma.rn.f32 	%f204, %f199, %f198, 0f00000000;
	add.s32 	%r215, %r214, 1;
	fma.rn.f32 	%f236, %f234, %f233, 0fC0A55DF6;
	fma.rn.f32 	%f237, %f235, %f233, 0f4081E0CF;
	fma.rn.f32 	%f238, %f233, %f232, 0f00000000;
	add.s32 	%r226, %r225, 1;
	fma.rn.f32 	%f271, %f269, %f268, 0fC0A55DF6;
	fma.rn.f32 	%f272, %f270, %f268, 0f4081E0CF;
	fma.rn.f32 	%f273, %f268, %f267, 0f00000000;
	add.s32 	%r233, %r232, 1;
	fma.rn.f32 	%f305, %f303, %f302, 0fC0A55DF6;
	fma.rn.f32 	%f306, %f304, %f302, 0f4081E0CF;
	fma.rn.f32 	%f307, %f302, %f301, 0f00000000;
	add.s32 	%r244, %r243, 1;
	fma.rn.f32 	%f340, %f338, %f337, 0fC0A55DF6;
	fma.rn.f32 	%f341, %f339, %f337, 0f4081E0CF;
	fma.rn.f32 	%f342, %f337, %f336, 0f00000000;
	add.s32 	%r251, %r250, 1;
	fma.rn.f32 	%f374, %f372, %f371, 0fC0A55DF6;
	fma.rn.f32 	%f375, %f373, %f371, 0f4081E0CF;
	fma.rn.f32 	%f376, %f371, %f370, 0f00000000;
	add.s32 	%r262, %r261, 1;
	fma.rn.f32 	%f409, %f407, %f406, 0fC0A55DF6;
	fma.rn.f32 	%f410, %f408, %f406, 0f4081E0CF;
	fma.rn.f32 	%f411, %f406, %f405, 0f00000000;
	add.s32 	%r269, %r268, 1;
	fma.rn.f32 	%f443, %f441, %f440, 0fC0A55DF6;
	fma.rn.f32 	%f444, %f442, %f440, 0f4081E0CF;
	fma.rn.f32 	%f445, %f440, %f439, 0f00000000;
	cvt.rzi.s32.f32 	%r286, %f487;
	fma.rn.f32 	%f492, %f490, %f489, 0fC0A55DF6;
	fma.rn.f32 	%f493, %f491, %f489, 0f4081E0CF;
	fma.rn.f32 	%f494, %f489, %f488, 0f00000000;
	cvt.rzi.s32.f32 	%r309, %f539;
	fma.rn.f32 	%f544, %f542, %f541, 0fC0A55DF6;
	fma.rn.f32 	%f545, %f543, %f541, 0f4081E0CF;
	fma.rn.f32 	%f546, %f541, %f540, 0f00000000;
	fma.rn.f32 	%f600, %f598, %f594, 0fC09DE9E6;
	fma.rn.f32 	%f601, %f597, %f599, 0f00000000;
	and.b32  	%r332, %r331, 1;
	fma.rn.f32 	%f651, %f649, %f645, 0fC09DE9E6;
	fma.rn.f32 	%f652, %f648, %f650, 0f00000000;
	and.b32  	%r363, %r362, 1;
	cvt.rzi.s32.f32 	%r378, %f696;
	fma.rn.f32 	%f701, %f699, %f698, 0fC0A55DF6;
	fma.rn.f32 	%f702, %f700, %f698, 0f4081E0CF;
	fma.rn.f32 	%f703, %f698, %f697, 0f00000000;
	cvt.rzi.s32.f32 	%r400, %f747;
	fma.rn.f32 	%f752, %f750, %f749, 0fC0A55DF6;
	fma.rn.f32 	%f753, %f751, %f749, 0f4081E0CF;
	fma.rn.f32 	%f754, %f749, %f748, 0f00000000;
	mul.f32 	%f801, %f800, %f800;
	fma.rn.f32 	%f205, %f203, %f199, 0fC09DE9E6;
	fma.rn.f32 	%f206, %f202, %f204, 0f00000000;
	and.b32  	%r209, %r208, 1;
	fma.rn.f32 	%f239, %f237, %f233, 0fC09DE9E6;
	fma.rn.f32 	%f240, %f236, %f238, 0f00000000;
	and.b32  	%r216, %r215, 1;
	fma.rn.f32 	%f274, %f272, %f268, 0fC09DE9E6;
	fma.rn.f32 	%f275, %f271, %f273, 0f00000000;
	and.b32  	%r227, %r226, 1;
	fma.rn.f32 	%f308, %f306, %f302, 0fC09DE9E6;
	fma.rn.f32 	%f309, %f305, %f307, 0f00000000;
	and.b32  	%r234, %r233, 1;
	fma.rn.f32 	%f343, %f341, %f337, 0fC09DE9E6;
	fma.rn.f32 	%f344, %f340, %f342, 0f00000000;
	and.b32  	%r245, %r244, 1;
	fma.rn.f32 	%f377, %f375, %f371, 0fC09DE9E6;
	fma.rn.f32 	%f378, %f374, %f376, 0f00000000;
	and.b32  	%r252, %r251, 1;
	fma.rn.f32 	%f412, %f410, %f406, 0fC09DE9E6;
	fma.rn.f32 	%f413, %f409, %f411, 0f00000000;
	and.b32  	%r263, %r262, 1;
	fma.rn.f32 	%f446, %f444, %f440, 0fC09DE9E6;
	fma.rn.f32 	%f447, %f443, %f445, 0f00000000;
	and.b32  	%r270, %r269, 1;
	fma.rn.f32 	%f495, %f493, %f489, 0fC09DE9E6;
	fma.rn.f32 	%f496, %f492, %f494, 0f00000000;
	and.b32  	%r287, %r286, 1;
	fma.rn.f32 	%f547, %f545, %f541, 0fC09DE9E6;
	fma.rn.f32 	%f548, %f544, %f546, 0f00000000;
	and.b32  	%r310, %r309, 1;
	fma.rn.f32 	%f602, %f600, %f594, 0f3F800000;
	fma.rn.f32 	%f603, %f593, 0f40490FDB, %f601;
	setp.eq.b32 	%p117, %r332, 1;
	fma.rn.f32 	%f653, %f651, %f645, 0f3F800000;
	fma.rn.f32 	%f654, %f644, 0f40490FDB, %f652;
	setp.eq.b32 	%p137, %r363, 1;
	fma.rn.f32 	%f704, %f702, %f698, 0fC09DE9E6;
	fma.rn.f32 	%f705, %f701, %f703, 0f00000000;
	and.b32  	%r379, %r378, 1;
	fma.rn.f32 	%f755, %f753, %f749, 0fC09DE9E6;
	fma.rn.f32 	%f756, %f752, %f754, 0f00000000;
	and.b32  	%r401, %r400, 1;
	fma.rn.f32 	%f802, %f801, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f803, %f801, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f207, %f205, %f199, 0f3F800000;
	fma.rn.f32 	%f208, %f198, 0f40490FDB, %f206;
	setp.eq.b32 	%p16, %r209, 1;
	fma.rn.f32 	%f241, %f239, %f233, 0f3F800000;
	fma.rn.f32 	%f242, %f232, 0f40490FDB, %f240;
	setp.eq.b32 	%p22, %r216, 1;
	fma.rn.f32 	%f276, %f274, %f268, 0f3F800000;
	fma.rn.f32 	%f277, %f267, 0f40490FDB, %f275;
	setp.eq.b32 	%p28, %r227, 1;
	fma.rn.f32 	%f310, %f308, %f302, 0f3F800000;
	fma.rn.f32 	%f311, %f301, 0f40490FDB, %f309;
	setp.eq.b32 	%p34, %r234, 1;
	fma.rn.f32 	%f345, %f343, %f337, 0f3F800000;
	fma.rn.f32 	%f346, %f336, 0f40490FDB, %f344;
	setp.eq.b32 	%p40, %r245, 1;
	fma.rn.f32 	%f379, %f377, %f371, 0f3F800000;
	fma.rn.f32 	%f380, %f370, 0f40490FDB, %f378;
	setp.eq.b32 	%p46, %r252, 1;
	fma.rn.f32 	%f414, %f412, %f406, 0f3F800000;
	fma.rn.f32 	%f415, %f405, 0f40490FDB, %f413;
	setp.eq.b32 	%p52, %r263, 1;
	fma.rn.f32 	%f448, %f446, %f440, 0f3F800000;
	fma.rn.f32 	%f449, %f439, 0f40490FDB, %f447;
	setp.eq.b32 	%p58, %r270, 1;
	fma.rn.f32 	%f497, %f495, %f489, 0f3F800000;
	fma.rn.f32 	%f498, %f488, 0f40490FDB, %f496;
	setp.eq.b32 	%p76, %r287, 1;
	fma.rn.f32 	%f549, %f547, %f541, 0f3F800000;
	fma.rn.f32 	%f550, %f540, 0f40490FDB, %f548;
	setp.eq.b32 	%p96, %r310, 1;
	selp.f32 	%f604, %f602, %f603, %p117;
	and.b32  	%r333, %r331, 2;
	selp.f32 	%f655, %f653, %f654, %p137;
	and.b32  	%r364, %r362, 2;
	fma.rn.f32 	%f706, %f704, %f698, 0f3F800000;
	fma.rn.f32 	%f707, %f697, 0f40490FDB, %f705;
	setp.eq.b32 	%p158, %r379, 1;
	fma.rn.f32 	%f757, %f755, %f749, 0f3F800000;
	fma.rn.f32 	%f758, %f748, 0f40490FDB, %f756;
	setp.eq.b32 	%p178, %r401, 1;
	cvt.rzi.s32.f32 	%r414, %f799;
	fma.rn.f32 	%f804, %f802, %f801, 0fC0A55DF6;
	fma.rn.f32 	%f805, %f803, %f801, 0f4081E0CF;
	fma.rn.f32 	%f806, %f801, %f800, 0f00000000;
	selp.f32 	%f209, %f207, %f208, %p16;
	and.b32  	%r210, %r208, 2;
	mov.f32 	%f210, 0f00000000;
	selp.f32 	%f243, %f241, %f242, %p22;
	and.b32  	%r217, %r215, 2;
	selp.f32 	%f278, %f276, %f277, %p28;
	and.b32  	%r228, %r226, 2;
	selp.f32 	%f312, %f310, %f311, %p34;
	and.b32  	%r235, %r233, 2;
	selp.f32 	%f347, %f345, %f346, %p40;
	and.b32  	%r246, %r244, 2;
	selp.f32 	%f381, %f379, %f380, %p46;
	and.b32  	%r253, %r251, 2;
	selp.f32 	%f416, %f414, %f415, %p52;
	and.b32  	%r264, %r262, 2;
	selp.f32 	%f450, %f448, %f449, %p58;
	and.b32  	%r271, %r269, 2;
	selp.f32 	%f499, %f497, %f498, %p76;
	and.b32  	%r288, %r286, 2;
	selp.f32 	%f551, %f549, %f550, %p96;
	and.b32  	%r311, %r309, 2;
	setp.eq.s32 	%p118, %r333, 0;
	neg.f32 	%f606, %f604;
	add.s32 	%r334, %r331, 1;
	cvt.rzi.f32.f32 	%f611, %f892;
	setp.eq.s32 	%p138, %r364, 0;
	neg.f32 	%f657, %f655;
	add.s32 	%r365, %r362, 1;
	cvt.rzi.f32.f32 	%f662, %f896;
	selp.f32 	%f708, %f706, %f707, %p158;
	and.b32  	%r380, %r378, 2;
	selp.f32 	%f759, %f757, %f758, %p178;
	and.b32  	%r402, %r400, 2;
	fma.rn.f32 	%f807, %f805, %f801, 0fC09DE9E6;
	fma.rn.f32 	%f808, %f804, %f806, 0f00000000;
	and.b32  	%r415, %r414, 1;
	setp.eq.s32 	%p17, %r210, 0;
	sub.f32 	%f211, %f210, %f209;
	setp.eq.s32 	%p23, %r217, 0;
	sub.f32 	%f245, %f210, %f243;
	setp.eq.s32 	%p29, %r228, 0;
	sub.f32 	%f280, %f210, %f278;
	setp.eq.s32 	%p35, %r235, 0;
	sub.f32 	%f314, %f210, %f312;
	setp.eq.s32 	%p41, %r246, 0;
	sub.f32 	%f349, %f210, %f347;
	setp.eq.s32 	%p47, %r253, 0;
	sub.f32 	%f383, %f210, %f381;
	setp.eq.s32 	%p53, %r264, 0;
	sub.f32 	%f418, %f210, %f416;
	setp.eq.s32 	%p59, %r271, 0;
	sub.f32 	%f452, %f210, %f450;
	setp.eq.s32 	%p77, %r288, 0;
	neg.f32 	%f501, %f499;
	add.s32 	%r289, %r286, 1;
	cvt.rzi.f32.f32 	%f506, %f884;
	setp.eq.s32 	%p97, %r311, 0;
	neg.f32 	%f553, %f551;
	add.s32 	%r312, %r309, 1;
	cvt.rzi.f32.f32 	%f558, %f888;
	selp.f32 	%f605, %f603, %f602, %p117;
	selp.f32 	%f607, %f604, %f606, %p118;
	and.b32  	%r335, %r334, 2;
	setp.eq.f32 	%p120, %f611, %f892;
	mul.f32 	%f612, %f892, 0f00000000;
	selp.f32 	%f656, %f654, %f653, %p137;
	selp.f32 	%f658, %f655, %f657, %p138;
	and.b32  	%r366, %r365, 2;
	setp.eq.f32 	%p140, %f662, %f896;
	mul.f32 	%f663, %f896, 0f00000000;
	setp.eq.s32 	%p159, %r380, 0;
	neg.f32 	%f710, %f708;
	add.s32 	%r381, %r378, 1;
	cvt.rzi.f32.f32 	%f715, %f908;
	setp.eq.s32 	%p179, %r402, 0;
	neg.f32 	%f761, %f759;
	add.s32 	%r403, %r400, 1;
	cvt.rzi.f32.f32 	%f766, %f912;
	fma.rn.f32 	%f809, %f807, %f801, 0f3F800000;
	fma.rn.f32 	%f810, %f800, 0f40490FDB, %f808;
	setp.eq.b32 	%p200, %r415, 1;
	selp.f32 	%f212, %f209, %f211, %p17;
	selp.f32 	%f246, %f243, %f245, %p23;
	selp.f32 	%f281, %f278, %f280, %p29;
	selp.f32 	%f315, %f312, %f314, %p35;
	selp.f32 	%f350, %f347, %f349, %p41;
	selp.f32 	%f384, %f381, %f383, %p47;
	selp.f32 	%f419, %f416, %f418, %p53;
	selp.f32 	%f453, %f450, %f452, %p59;
	selp.f32 	%f500, %f498, %f497, %p76;
	selp.f32 	%f502, %f499, %f501, %p77;
	and.b32  	%r290, %r289, 2;
	setp.eq.f32 	%p79, %f506, %f884;
	mul.f32 	%f507, %f884, 0f00000000;
	selp.f32 	%f552, %f550, %f549, %p96;
	selp.f32 	%f554, %f551, %f553, %p97;
	and.b32  	%r313, %r312, 2;
	setp.eq.f32 	%p99, %f558, %f888;
	mul.f32 	%f559, %f888, 0f00000000;
	setp.eq.s32 	%p119, %r335, 0;
	sub.f32 	%f609, %f210, %f605;
	selp.f32 	%f92, %f612, %f607, %p120;
	abs.f32 	%f613, %f892;
	setp.eq.s32 	%p139, %r366, 0;
	sub.f32 	%f660, %f210, %f656;
	selp.f32 	%f664, %f663, %f658, %p140;
	abs.f32 	%f665, %f896;
	selp.f32 	%f709, %f707, %f706, %p158;
	selp.f32 	%f711, %f708, %f710, %p159;
	and.b32  	%r382, %r381, 2;
	setp.eq.f32 	%p161, %f715, %f908;
	mul.f32 	%f716, %f908, 0f00000000;
	selp.f32 	%f760, %f758, %f757, %p178;
	selp.f32 	%f762, %f759, %f761, %p179;
	and.b32  	%r404, %r403, 2;
	setp.eq.f32 	%p181, %f766, %f912;
	mul.f32 	%f767, %f912, 0f00000000;
	selp.f32 	%f811, %f809, %f810, %p200;
	and.b32  	%r416, %r414, 2;
	mul.f32 	%f2, %f212, %f212;
	mul.f32 	%f7, %f246, %f246;
	mul.f32 	%f11, %f281, %f281;
	mul.f32 	%f16, %f315, %f315;
	mul.f32 	%f20, %f350, %f350;
	mul.f32 	%f25, %f384, %f384;
	mul.f32 	%f29, %f419, %f419;
	mul.f32 	%f34, %f453, %f453;
	setp.eq.s32 	%p78, %r290, 0;
	sub.f32 	%f504, %f210, %f500;
	selp.f32 	%f55, %f507, %f502, %p79;
	abs.f32 	%f508, %f884;
	setp.eq.s32 	%p98, %r313, 0;
	sub.f32 	%f556, %f210, %f552;
	selp.f32 	%f560, %f559, %f554, %p99;
	abs.f32 	%f561, %f888;
	selp.f32 	%f610, %f605, %f609, %p119;
	setp.gt.f32 	%p121, %f613, 0f4B800000;
	add.f32 	%f614, %f92, 0f3F800000;
	selp.f32 	%f661, %f656, %f660, %p139;
	setp.gt.f32 	%p141, %f665, 0f4B800000;
	add.f32 	%f666, %f664, 0f3F800000;
	setp.eq.s32 	%p160, %r382, 0;
	sub.f32 	%f713, %f210, %f709;
	selp.f32 	%f161, %f716, %f711, %p161;
	abs.f32 	%f717, %f908;
	setp.eq.s32 	%p180, %r404, 0;
	sub.f32 	%f764, %f210, %f760;
	selp.f32 	%f768, %f767, %f762, %p181;
	abs.f32 	%f769, %f912;
	setp.eq.s32 	%p201, %r416, 0;
	neg.f32 	%f813, %f811;
	add.s32 	%r417, %r414, 1;
	cvt.rzi.f32.f32 	%f818, %f900;
	mul.f32 	%f216, %f2, 0f3C0AF64E;
	mul.f32 	%f250, %f7, 0f3C0AF64E;
	mul.f32 	%f285, %f11, 0f3C0AF64E;
	mul.f32 	%f319, %f16, 0f3C0AF64E;
	mul.f32 	%f354, %f20, 0f3C0AF64E;
	mul.f32 	%f388, %f25, 0f3C0AF64E;
	mul.f32 	%f423, %f29, 0f3C0AF64E;
	mul.f32 	%f456, %f34, 0f3C0AF64E;
	selp.f32 	%f505, %f500, %f504, %p78;
	setp.gt.f32 	%p80, %f508, 0f4B800000;
	add.f32 	%f509, %f55, 0f3F800000;
	selp.f32 	%f557, %f552, %f556, %p98;
	setp.gt.f32 	%p100, %f561, 0f4B800000;
	add.f32 	%f562, %f560, 0f3F800000;
	selp.f32 	%f93, %f614, %f610, %p121;
	selp.f32 	%f667, %f666, %f661, %p141;
	selp.f32 	%f714, %f709, %f713, %p160;
	setp.gt.f32 	%p162, %f717, 0f4B800000;
	add.f32 	%f718, %f161, 0f3F800000;
	selp.f32 	%f765, %f760, %f764, %p180;
	setp.gt.f32 	%p182, %f769, 0f4B800000;
	add.f32 	%f770, %f768, 0f3F800000;
	selp.f32 	%f812, %f810, %f809, %p200;
	selp.f32 	%f814, %f811, %f813, %p201;
	and.b32  	%r418, %r417, 2;
	setp.eq.f32 	%p203, %f818, %f900;
	mul.f32 	%f819, %f900, 0f00000000;
	mul.f32 	%f6, %f216, %f874;
	mul.f32 	%f251, %f250, %f875;
	mul.f32 	%f15, %f285, %f876;
	mul.f32 	%f320, %f319, %f877;
	mul.f32 	%f24, %f354, %f878;
	mul.f32 	%f389, %f388, %f879;
	mul.f32 	%f33, %f423, %f880;
	mul.f32 	%f457, %f456, %f881;
	selp.f32 	%f56, %f509, %f505, %p80;
	selp.f32 	%f563, %f562, %f557, %p100;
	mov.b32 	%r349, %f667;
	mov.b32 	%r348, %f93;
	mov.b32 	%r355, %f664;
	mov.b32 	%r354, %f92;
	selp.f32 	%f162, %f718, %f714, %p162;
	selp.f32 	%f771, %f770, %f765, %p182;
	setp.eq.s32 	%p202, %r418, 0;
	sub.f32 	%f816, %f210, %f812;
	selp.f32 	%f129, %f819, %f814, %p203;
	abs.f32 	%f820, %f900;
	mov.b32 	%r220, %f251;
	mov.b32 	%r219, %f6;
	mov.b32 	%r238, %f320;
	mov.b32 	%r237, %f15;
	mov.b32 	%r256, %f389;
	mov.b32 	%r255, %f24;
	mov.b32 	%r274, %f457;
	mov.b32 	%r273, %f33;
	mov.b32 	%r302, %f563;
	mov.b32 	%r301, %f56;
	mov.b32 	%r305, %f560;
	mov.b32 	%r304, %f55;
	xor.b32  	%r352, %r355, -2147483648;
	xor.b32  	%r351, %r354, -2147483648;
	mov.b32 	%r393, %f771;
	mov.b32 	%r392, %f162;
	mov.b32 	%r396, %f768;
	mov.b32 	%r395, %f161;
	selp.f32 	%f817, %f812, %f816, %p202;
	setp.gt.f32 	%p204, %f820, 0f4B800000;
	add.f32 	%f821, %f129, 0f3F800000;
	ld.param.u64 	%rd2, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_6];
	ld.param.u64 	%rd3, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_7];
	and.b32  	%r10, %r9, 32;
	// begin inline asm
	cvt.rn.f16x2.f32 %r218, %r220, %r219;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r236, %r238, %r237;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r254, %r256, %r255;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r272, %r274, %r273;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r300, %r302, %r301;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r303, %r305, %r304;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r347, %r349, %r348;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r350, %r352, %r351;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r353, %r355, %r354;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r356, %r349, %r348;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r391, %r393, %r392;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r394, %r396, %r395;
	// end inline asm
	selp.f32 	%f130, %f821, %f817, %p204;
	add.f32 	%f842, %f904, %f904;
	mov.b32 	%r437, %f842;
	and.b32  	%r438, %r437, -2147483648;
	or.b32  	%r439, %r438, 1056964608;
	mov.b32 	%f843, %r439;
	add.f32 	%f844, %f842, %f843;
	cvt.rzi.f32.f32 	%f845, %f844;
	abs.f32 	%f846, %f842;
	setp.gt.f32 	%p217, %f846, 0f4B000000;
	selp.f32 	%f847, %f842, %f845, %p217;
	cvt.rzi.f32.f32 	%f848, %f842;
	setp.lt.f32 	%p218, %f846, 0f3F000000;
	selp.f32 	%f849, %f848, %f847, %p218;
	cvt.rzi.s32.f32 	%r440, %f849;
	fma.rn.f32 	%f850, %f849, 0fBF000000, %f904;
	mul.f32 	%f851, %f850, %f850;
	fma.rn.f32 	%f852, %f851, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f853, %f851, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f854, %f852, %f851, 0fC0A55DF6;
	fma.rn.f32 	%f855, %f853, %f851, 0f4081E0CF;
	fma.rn.f32 	%f856, %f851, %f850, 0f00000000;
	fma.rn.f32 	%f857, %f855, %f851, 0fC09DE9E6;
	fma.rn.f32 	%f858, %f854, %f856, 0f00000000;
	fma.rn.f32 	%f859, %f857, %f851, 0f3F800000;
	fma.rn.f32 	%f860, %f850, 0f40490FDB, %f858;
	and.b32  	%r441, %r440, 1;
	setp.eq.b32 	%p219, %r441, 1;
	selp.f32 	%f861, %f859, %f860, %p219;
	selp.f32 	%f862, %f860, %f859, %p219;
	and.b32  	%r442, %r440, 2;
	setp.eq.s32 	%p220, %r442, 0;
	neg.f32 	%f863, %f861;
	selp.f32 	%f864, %f861, %f863, %p220;
	add.s32 	%r443, %r440, 1;
	and.b32  	%r444, %r443, 2;
	setp.eq.s32 	%p221, %r444, 0;
	sub.f32 	%f866, %f210, %f862;
	selp.f32 	%f867, %f862, %f866, %p221;
	cvt.rzi.f32.f32 	%f868, %f904;
	setp.eq.f32 	%p222, %f868, %f904;
	mul.f32 	%f869, %f904, 0f00000000;
	selp.f32 	%f870, %f869, %f864, %p222;
	abs.f32 	%f871, %f904;
	setp.gt.f32 	%p223, %f871, 0f4B800000;
	add.f32 	%f872, %f870, 0f3F800000;
	selp.f32 	%f873, %f872, %f867, %p223;
	mov.b32 	%r427, %f873;
	mov.b32 	%r426, %f130;
	// begin inline asm
	cvt.rn.f16x2.f32 %r425, %r427, %r426;
	// end inline asm
	mov.b32 	%r433, %f870;
	xor.b32  	%r430, %r433, -2147483648;
	mov.b32 	%r432, %f129;
	xor.b32  	%r429, %r432, -2147483648;
	// begin inline asm
	cvt.rn.f16x2.f32 %r428, %r430, %r429;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r431, %r433, %r432;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r434, %r427, %r426;
	// end inline asm
	shl.b32 	%r94, %r5, 12;
	and.b32  	%r95, %r9, 16;
	and.b32  	%r96, %r9, 12;
	shl.b32 	%r446, %r3, 11;
	and.b32  	%r447, %r446, 2048;
	or.b32  	%r448, %r95, %r94;
	or.b32  	%r449, %r448, %r96;
	or.b32  	%r97, %r449, %r447;
	and.b32  	%r450, %r9, 28;
	or.b32  	%r98, %r450, %r447;
	and.b32  	%r99, %r4, 8;
	and.b32  	%r451, %r1, 1;
	mul.lo.s32 	%r452, %r451, 1040;
	bfe.u32 	%r453, %r1, 2, 1;
	shr.u32 	%r454, %r1, 3;
	shr.u32 	%r455, %r1, 1;
	bfe.u32 	%r456, %r1, 1, 1;
	shl.b32 	%r457, %r4, 4;
	or.b32  	%r458, %r457, %r99;
	shr.u32 	%r459, %r458, 2;
	and.b32  	%r460, %r459, 14;
	mad.lo.s32 	%r461, %r453, 260, %r452;
	mad.lo.s32 	%r462, %r20, 65, %r461;
	mad.lo.s32 	%r463, %r454, 130, %r462;
	add.s32 	%r464, %r463, %r95;
	mad.lo.s32 	%r465, %r456, 520, %r464;
	add.s32 	%r466, %r465, %r460;
	mul.wide.u32 	%rd86, %r466, 4;
	mov.u64 	%rd87, shmem;
	add.s64 	%rd5, %rd87, %rd86;
	add.s32 	%r467, %r466, 32;
	mul.wide.u32 	%rd88, %r467, 4;
	add.s64 	%rd6, %rd87, %rd88;
	add.s32 	%r468, %r466, 1;
	mul.wide.u32 	%rd89, %r468, 4;
	add.s64 	%rd7, %rd87, %rd89;
	add.s32 	%r469, %r466, 33;
	mul.wide.u32 	%rd90, %r469, 4;
	add.s64 	%rd8, %rd87, %rd90;
	add.s32 	%r470, %r466, 2081;
	mul.wide.u32 	%rd91, %r470, 4;
	add.s64 	%rd9, %rd87, %rd91;
	add.s32 	%r471, %r466, 2113;
	mul.wide.u32 	%rd92, %r471, 4;
	add.s64 	%rd10, %rd87, %rd92;
	add.s32 	%r472, %r466, 2082;
	mul.wide.u32 	%rd93, %r472, 4;
	add.s64 	%rd11, %rd87, %rd93;
	add.s32 	%r473, %r466, 2114;
	mul.wide.u32 	%rd94, %r473, 4;
	add.s64 	%rd12, %rd87, %rd94;
	add.s32 	%r474, %r466, 4162;
	mul.wide.u32 	%rd95, %r474, 4;
	add.s64 	%rd13, %rd87, %rd95;
	add.s32 	%r475, %r466, 4194;
	mul.wide.u32 	%rd96, %r475, 4;
	add.s64 	%rd14, %rd87, %rd96;
	add.s32 	%r476, %r466, 4163;
	mul.wide.u32 	%rd97, %r476, 4;
	add.s64 	%rd15, %rd87, %rd97;
	add.s32 	%r477, %r466, 4195;
	mul.wide.u32 	%rd98, %r477, 4;
	add.s64 	%rd16, %rd87, %rd98;
	add.s32 	%r478, %r466, 6243;
	mul.wide.u32 	%rd99, %r478, 4;
	add.s64 	%rd17, %rd87, %rd99;
	add.s32 	%r479, %r466, 6275;
	mul.wide.u32 	%rd100, %r479, 4;
	add.s64 	%rd18, %rd87, %rd100;
	add.s32 	%r480, %r466, 6244;
	mul.wide.u32 	%rd101, %r480, 4;
	add.s64 	%rd19, %rd87, %rd101;
	add.s32 	%r481, %r466, 6276;
	mul.wide.u32 	%rd102, %r481, 4;
	add.s64 	%rd20, %rd87, %rd102;
	mul.lo.s32 	%r482, %r22, 1040;
	mul.lo.s32 	%r483, %r19, 260;
	mul.lo.s32 	%r484, %r17, 65;
	mul.lo.s32 	%r485, %r18, 130;
	mul.lo.s32 	%r486, %r20, 520;
	and.b32  	%r487, %r2, 32;
	or.b32  	%r488, %r455, 8;
	cvt.u16.u32 	%rs1, %r4;
	shr.u16 	%rs2, %rs1, 8;
	shl.b16 	%rs3, %rs1, 8;
	or.b16  	%rs4, %rs3, %rs2;
	shl.b16 	%rs5, %rs4, 4;
	shl.b16 	%rs6, %rs1, 4;
	and.b16  	%rs7, %rs6, 768;
	or.b16  	%rs8, %rs7, %rs5;
	and.b16  	%rs9, %rs8, 13104;
	shl.b16 	%rs10, %rs9, 3;
	shl.b16 	%rs11, %rs9, 1;
	and.b16  	%rs12, %rs11, 16384;
	or.b16  	%rs13, %rs12, %rs10;
	shr.u16 	%rs14, %rs13, 13;
	cvt.u32.u16 	%r489, %rs14;
	or.b32  	%r490, %r11, %r489;
	or.b32  	%r491, %r490, %r10;
	or.b32  	%r492, %r491, %r14;
	shr.u32 	%r493, %r492, 1;
	mul.lo.s32 	%r494, %r493, 65;
	shl.b32 	%r495, %r1, 1;
	or.b32  	%r496, %r495, %r20;
	mul.lo.s32 	%r497, %r496, 65;
	add.s32 	%r498, %r497, %r95;
	add.s32 	%r499, %r498, %r460;
	mul.wide.u32 	%rd103, %r499, 4;
	add.s64 	%rd21, %rd87, %rd103;
	cvt.u64.u32 	%rd104, %r460;
	cvt.u64.u32 	%rd105, %r497;
	cvt.u64.u32 	%rd106, %r95;
	add.s64 	%rd107, %rd106, %rd105;
	add.s64 	%rd108, %rd107, %rd104;
	shl.b64 	%rd109, %rd108, 2;
	add.s64 	%rd22, %rd87, %rd109;
	shl.b32 	%r500, %r7, 18;
	add.s32 	%r501, %r500, -786432;
	shl.b32 	%r502, %r1, 2;
	or.b32  	%r503, %r12, %r502;
	or.b32  	%r504, %r503, %r21;
	shl.b32 	%r100, %r504, 5;
	cvt.s64.s32 	%rd23, %r501;
	add.s32 	%r505, %r488, %r494;
	add.s32 	%r506, %r505, %r487;
	mul.wide.u32 	%rd24, %r506, 4;
	add.s32 	%r507, %r455, %r494;
	add.s32 	%r508, %r507, %r487;
	mul.wide.u32 	%rd25, %r508, 4;
	add.s32 	%r509, %r506, 16;
	mul.wide.u32 	%rd26, %r509, 4;
	add.s32 	%r510, %r508, 16;
	mul.wide.u32 	%rd27, %r510, 4;
	add.s32 	%r511, %r488, %r482;
	add.s32 	%r512, %r511, %r486;
	add.s32 	%r513, %r512, %r483;
	add.s32 	%r514, %r513, %r485;
	add.s32 	%r515, %r514, %r484;
	add.s32 	%r516, %r515, %r487;
	add.s32 	%r517, %r516, 16;
	mul.wide.u32 	%rd28, %r517, 4;
	add.s32 	%r518, %r455, %r482;
	add.s32 	%r519, %r518, %r486;
	add.s32 	%r520, %r519, %r483;
	add.s32 	%r521, %r520, %r485;
	add.s32 	%r522, %r521, %r484;
	add.s32 	%r523, %r522, %r487;
	add.s32 	%r524, %r523, 16;
	mul.wide.u32 	%rd29, %r524, 4;
	mul.wide.u32 	%rd30, %r516, 4;
	mul.wide.u32 	%rd31, %r523, 4;
	setp.eq.s32 	%p225, %r99, 0;
	mov.u16 	%rs1190, 25600;
	mov.u16 	%rs1086, 21504;
	mov.u32 	%r101, %r7978;
	mov.u32 	%r8018, %r7978;
	mov.u32 	%r8017, %r7978;
	mov.u32 	%r8016, %r7978;
	mov.u32 	%r8015, %r7978;
	mov.u32 	%r8014, %r7978;
	mov.u32 	%r8013, %r7978;
	mov.u32 	%r8012, %r7978;
	mov.u32 	%r8011, %r7978;
	mov.u32 	%r8010, %r7978;
	mov.u32 	%r8009, %r7978;
	mov.u32 	%r8008, %r7978;
	mov.u32 	%r8007, %r7978;
	bra.uni 	LBB0_117;
LBB0_125:                               // %pass14505
                                        //   in Loop: Header=BB0_117 Depth=1
	or.b32  	%r7972, %r7980, %r100;
	or.b32  	%r7973, %r7972, %r96;
	or.b32  	%r7974, %r7973, 786432;
	cvt.s64.s32 	%rd163, %r7974;
	add.s64 	%rd164, %rd163, %rd23;
	shr.u64 	%rd165, %rd164, 35;
	add.s64 	%rd166, %rd164, %rd165;
	shr.s64 	%rd167, %rd166, 29;
	and.b64  	%rd168, %rd166, -536870912;
	setp.ne.s64 	%p253, %rd168, %rd164;
	setp.lt.s64 	%p254, %rd164, 0;
	and.pred  	%p255, %p254, %p253;
	selp.u64 	%rd169, 1, 0, %p255;
	sub.s64 	%rd170, %rd169, %rd167;
	shl.b64 	%rd171, %rd170, 29;
	add.s64 	%rd172, %rd171, %rd164;
	shl.b64 	%rd173, %rd172, 2;
	add.s64 	%rd174, %rd3, %rd173;
	st.global.v4.u32 	[%rd174], {%r174, %r176, %r175, %r177};
	setp.ne.s32 	%p256, %r101, 130816;
	add.s32 	%r101, %r101, 256;
	add.s32 	%r7975, %r101, %r5;
	setp.gt.s32 	%p257, %r6, %r7975;
	and.pred  	%p258, %p256, %p257;
	@%p258 bra 	LBB0_117;
	bra.uni 	LBB0_126;
LBB0_117:                               // %L1540
                                        // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_118 Depth 2
	or.b32  	%r590, %r1, %r101;
	or.b32  	%r591, %r590, %r11;
	or.b32  	%r592, %r591, %r10;
	shl.b32 	%r593, %r592, 12;
	add.s32 	%r594, %r97, %r593;
	shr.s32 	%r595, %r594, 31;
	shr.u32 	%r596, %r595, 3;
	add.s32 	%r597, %r594, %r596;
	shr.s32 	%r598, %r597, 29;
	and.b32  	%r599, %r597, -536870912;
	setp.ne.s32 	%p226, %r599, %r594;
	setp.lt.s32 	%p227, %r594, 0;
	and.pred  	%p228, %p227, %p226;
	selp.u32 	%r600, 1, 0, %p228;
	sub.s32 	%r601, %r600, %r598;
	shl.b32 	%r602, %r601, 29;
	add.s32 	%r603, %r602, %r594;
	mul.wide.s32 	%rd111, %r603, 4;
	add.s64 	%rd112, %rd2, %rd111;
	ld.global.v4.u32 	{%r604, %r605, %r606, %r607}, [%rd112];
	or.b32  	%r608, %r98, %r593;
	or.b32  	%r609, %r608, 262144;
	add.s32 	%r610, %r609, %r94;
	shr.s32 	%r611, %r610, 31;
	shr.u32 	%r612, %r611, 3;
	add.s32 	%r613, %r610, %r612;
	shr.s32 	%r614, %r613, 29;
	and.b32  	%r615, %r613, -536870912;
	setp.ne.s32 	%p229, %r615, %r610;
	setp.lt.s32 	%p230, %r610, 0;
	and.pred  	%p231, %p230, %p229;
	selp.u32 	%r616, 1, 0, %p231;
	sub.s32 	%r617, %r616, %r614;
	shl.b32 	%r618, %r617, 29;
	add.s32 	%r619, %r618, %r610;
	mul.wide.s32 	%rd113, %r619, 4;
	add.s64 	%rd114, %rd2, %rd113;
	ld.global.v4.u32 	{%r620, %r621, %r622, %r623}, [%rd114];
	or.b32  	%r624, %r608, 524288;
	add.s32 	%r625, %r624, %r94;
	shr.s32 	%r626, %r625, 31;
	shr.u32 	%r627, %r626, 3;
	add.s32 	%r628, %r625, %r627;
	shr.s32 	%r629, %r628, 29;
	and.b32  	%r630, %r628, -536870912;
	setp.ne.s32 	%p232, %r630, %r625;
	setp.lt.s32 	%p233, %r625, 0;
	and.pred  	%p234, %p233, %p232;
	selp.u32 	%r631, 1, 0, %p234;
	sub.s32 	%r632, %r631, %r629;
	shl.b32 	%r633, %r632, 29;
	add.s32 	%r634, %r633, %r625;
	mul.wide.s32 	%rd115, %r634, 4;
	add.s64 	%rd116, %rd2, %rd115;
	ld.global.v4.u32 	{%r635, %r636, %r637, %r638}, [%rd116];
	or.b32  	%r639, %r608, 786432;
	add.s32 	%r640, %r639, %r94;
	shr.s32 	%r641, %r640, 31;
	shr.u32 	%r642, %r641, 3;
	add.s32 	%r643, %r640, %r642;
	shr.s32 	%r644, %r643, 29;
	and.b32  	%r645, %r643, -536870912;
	setp.ne.s32 	%p235, %r645, %r640;
	setp.lt.s32 	%p236, %r640, 0;
	and.pred  	%p237, %p236, %p235;
	selp.u32 	%r646, 1, 0, %p237;
	sub.s32 	%r647, %r646, %r644;
	shl.b32 	%r648, %r647, 29;
	add.s32 	%r649, %r648, %r640;
	mul.wide.s32 	%rd117, %r649, 4;
	add.s64 	%rd118, %rd2, %rd117;
	ld.global.v4.u32 	{%r650, %r651, %r652, %r653}, [%rd118];
	selp.b32 	%r654, %r606, %r604, %p225;
	shfl.sync.bfly.b32	%r655, %r654, 8, 31, -1;
	selp.b32 	%r526, %r604, %r655, %p225;
	selp.b32 	%r527, %r655, %r606, %p225;
	selp.b32 	%r656, %r607, %r605, %p225;
	shfl.sync.bfly.b32	%r657, %r656, 8, 31, -1;
	selp.b32 	%r534, %r605, %r657, %p225;
	selp.b32 	%r535, %r657, %r607, %p225;
	selp.b32 	%r658, %r622, %r620, %p225;
	shfl.sync.bfly.b32	%r659, %r658, 8, 31, -1;
	selp.b32 	%r542, %r620, %r659, %p225;
	selp.b32 	%r543, %r659, %r622, %p225;
	selp.b32 	%r660, %r623, %r621, %p225;
	shfl.sync.bfly.b32	%r661, %r660, 8, 31, -1;
	selp.b32 	%r550, %r621, %r661, %p225;
	selp.b32 	%r551, %r661, %r623, %p225;
	selp.b32 	%r662, %r637, %r635, %p225;
	shfl.sync.bfly.b32	%r663, %r662, 8, 31, -1;
	selp.b32 	%r558, %r635, %r663, %p225;
	selp.b32 	%r559, %r663, %r637, %p225;
	selp.b32 	%r664, %r638, %r636, %p225;
	shfl.sync.bfly.b32	%r665, %r664, 8, 31, -1;
	selp.b32 	%r566, %r636, %r665, %p225;
	selp.b32 	%r567, %r665, %r638, %p225;
	selp.b32 	%r666, %r652, %r650, %p225;
	shfl.sync.bfly.b32	%r667, %r666, 8, 31, -1;
	selp.b32 	%r574, %r650, %r667, %p225;
	selp.b32 	%r575, %r667, %r652, %p225;
	selp.b32 	%r668, %r653, %r651, %p225;
	shfl.sync.bfly.b32	%r669, %r668, 8, 31, -1;
	selp.b32 	%r582, %r651, %r669, %p225;
	selp.b32 	%r583, %r669, %r653, %p225;
	mov.u32 	%r584, 21520;
	// begin inline asm
	prmt.b32 %r525, %r526, %r527, %r584;
	// end inline asm
	mov.u32 	%r588, 30258;
	// begin inline asm
	prmt.b32 %r529, %r526, %r527, %r588;
	// end inline asm
	// begin inline asm
	prmt.b32 %r533, %r534, %r535, %r584;
	// end inline asm
	// begin inline asm
	prmt.b32 %r537, %r534, %r535, %r588;
	// end inline asm
	// begin inline asm
	prmt.b32 %r541, %r542, %r543, %r584;
	// end inline asm
	// begin inline asm
	prmt.b32 %r545, %r542, %r543, %r588;
	// end inline asm
	// begin inline asm
	prmt.b32 %r549, %r550, %r551, %r584;
	// end inline asm
	// begin inline asm
	prmt.b32 %r553, %r550, %r551, %r588;
	// end inline asm
	// begin inline asm
	prmt.b32 %r557, %r558, %r559, %r584;
	// end inline asm
	// begin inline asm
	prmt.b32 %r561, %r558, %r559, %r588;
	// end inline asm
	// begin inline asm
	prmt.b32 %r565, %r566, %r567, %r584;
	// end inline asm
	// begin inline asm
	prmt.b32 %r569, %r566, %r567, %r588;
	// end inline asm
	// begin inline asm
	prmt.b32 %r573, %r574, %r575, %r584;
	// end inline asm
	// begin inline asm
	prmt.b32 %r577, %r574, %r575, %r588;
	// end inline asm
	// begin inline asm
	prmt.b32 %r581, %r582, %r583, %r584;
	// end inline asm
	// begin inline asm
	prmt.b32 %r585, %r582, %r583, %r588;
	// end inline asm
	st.shared.u32 	[%rd5], %r525;
	st.shared.u32 	[%rd6], %r529;
	st.shared.u32 	[%rd7], %r533;
	st.shared.u32 	[%rd8], %r537;
	st.shared.u32 	[%rd9], %r541;
	st.shared.u32 	[%rd10], %r545;
	st.shared.u32 	[%rd11], %r549;
	st.shared.u32 	[%rd12], %r553;
	st.shared.u32 	[%rd13], %r557;
	st.shared.u32 	[%rd14], %r561;
	st.shared.u32 	[%rd15], %r565;
	st.shared.u32 	[%rd16], %r569;
	st.shared.u32 	[%rd17], %r573;
	st.shared.u32 	[%rd18], %r577;
	st.shared.u32 	[%rd19], %r581;
	st.shared.u32 	[%rd20], %r585;
	bar.sync 	0;
	mov.u32 	%r8006, 256;
	mov.u64 	%rd177, %rd87;
LBB0_118:                               // %L12395
                                        //   Parent Loop BB0_117 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	add.s64 	%rd119, %rd177, %rd31;
	ld.shared.u32 	%r7854, [%rd119];
	add.s64 	%rd120, %rd177, %rd30;
	ld.shared.u32 	%r7855, [%rd120];
	add.s64 	%rd121, %rd177, %rd29;
	ld.shared.u32 	%r7856, [%rd121];
	add.s64 	%rd122, %rd177, %rd28;
	ld.shared.u32 	%r7857, [%rd122];
	// begin inline asm
	mov.b32 %r675, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	mov.b32 %r686, {%rs1086, %rs1086};
	// end inline asm
	xor.b32  	%r674, %r7854, -2004318072;
	mov.u32 	%r673, 983055;
	// begin inline asm
	lop3.b32 %r672, %r673, %r674, %r675, 202;
	// end inline asm
	mov.u16 	%rs19, 18432;
	// begin inline asm
	mov.b32 %r676, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r677, %r675, %r676;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r680, %r672, %r677;
	// end inline asm
	mov.u32 	%r684, 15728880;
	// begin inline asm
	lop3.b32 %r683, %r684, %r674, %r686, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r687, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r688, %r686, %r687;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r691, %r683, %r688;
	// end inline asm
	shr.u32 	%r696, %r674, 8;
	// begin inline asm
	lop3.b32 %r694, %r673, %r696, %r675, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r698, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r699, %r675, %r698;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r702, %r694, %r699;
	// end inline asm
	// begin inline asm
	lop3.b32 %r705, %r684, %r696, %r686, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r709, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r710, %r686, %r709;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r713, %r705, %r710;
	// end inline asm
	// begin inline asm
	mov.b32 %r721, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	mov.b32 %r732, {%rs1086, %rs1086};
	// end inline asm
	xor.b32  	%r720, %r7855, -2004318072;
	// begin inline asm
	lop3.b32 %r718, %r673, %r720, %r721, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r722, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r723, %r721, %r722;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r726, %r718, %r723;
	// end inline asm
	// begin inline asm
	lop3.b32 %r729, %r684, %r720, %r732, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r733, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r734, %r732, %r733;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r737, %r729, %r734;
	// end inline asm
	shr.u32 	%r742, %r720, 8;
	// begin inline asm
	lop3.b32 %r740, %r673, %r742, %r721, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r744, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r745, %r721, %r744;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r748, %r740, %r745;
	// end inline asm
	// begin inline asm
	lop3.b32 %r751, %r684, %r742, %r732, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r755, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r756, %r732, %r755;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r759, %r751, %r756;
	// end inline asm
	// begin inline asm
	mov.b32 %r767, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	mov.b32 %r778, {%rs1086, %rs1086};
	// end inline asm
	xor.b32  	%r766, %r7856, -2004318072;
	// begin inline asm
	lop3.b32 %r764, %r673, %r766, %r767, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r768, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r769, %r767, %r768;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r772, %r764, %r769;
	// end inline asm
	// begin inline asm
	lop3.b32 %r775, %r684, %r766, %r778, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r779, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r780, %r778, %r779;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r783, %r775, %r780;
	// end inline asm
	shr.u32 	%r788, %r766, 8;
	// begin inline asm
	lop3.b32 %r786, %r673, %r788, %r767, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r790, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r791, %r767, %r790;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r794, %r786, %r791;
	// end inline asm
	// begin inline asm
	lop3.b32 %r797, %r684, %r788, %r778, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r801, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r802, %r778, %r801;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r805, %r797, %r802;
	// end inline asm
	// begin inline asm
	mov.b32 %r813, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	mov.b32 %r824, {%rs1086, %rs1086};
	// end inline asm
	xor.b32  	%r812, %r7857, -2004318072;
	// begin inline asm
	lop3.b32 %r810, %r673, %r812, %r813, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r814, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r815, %r813, %r814;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r818, %r810, %r815;
	// end inline asm
	// begin inline asm
	lop3.b32 %r821, %r684, %r812, %r824, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r825, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r826, %r824, %r825;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r829, %r821, %r826;
	// end inline asm
	shr.u32 	%r834, %r812, 8;
	// begin inline asm
	lop3.b32 %r832, %r673, %r834, %r813, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r836, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r837, %r813, %r836;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r840, %r832, %r837;
	// end inline asm
	// begin inline asm
	lop3.b32 %r843, %r684, %r834, %r824, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r847, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r848, %r824, %r847;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r851, %r843, %r848;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r854, %r272;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r856, %r854, %r680;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r859, %r272;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r861, %r859, %r691;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r864, %r272;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r866, %r864, %r702;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r869, %r272;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r871, %r869, %r713;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r874, %r272;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r876, %r874, %r726;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r879, %r272;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r881, %r879, %r737;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r884, %r272;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r886, %r884, %r748;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r889, %r272;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r891, %r889, %r759;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r894, %r272;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r896, %r894, %r772;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r899, %r272;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r901, %r899, %r783;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r904, %r272;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r906, %r904, %r794;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r909, %r272;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r911, %r909, %r805;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r914, %r272;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r916, %r914, %r818;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r919, %r272;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r921, %r919, %r829;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r924, %r272;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r926, %r924, %r840;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r929, %r272;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r931, %r929, %r851;
	// end inline asm
	// begin inline asm
	mov.b32 %r939, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	mov.b32 %r950, {%rs1086, %rs1086};
	// end inline asm
	xor.b32  	%r938, %r8007, -2004318072;
	// begin inline asm
	lop3.b32 %r936, %r673, %r938, %r939, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r940, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r941, %r939, %r940;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r944, %r936, %r941;
	// end inline asm
	// begin inline asm
	lop3.b32 %r947, %r684, %r938, %r950, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r951, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r952, %r950, %r951;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r955, %r947, %r952;
	// end inline asm
	shr.u32 	%r960, %r938, 8;
	// begin inline asm
	lop3.b32 %r958, %r673, %r960, %r939, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r962, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r963, %r939, %r962;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r966, %r958, %r963;
	// end inline asm
	// begin inline asm
	lop3.b32 %r969, %r684, %r960, %r950, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r973, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r974, %r950, %r973;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r977, %r969, %r974;
	// end inline asm
	// begin inline asm
	mov.b32 %r985, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	mov.b32 %r996, {%rs1086, %rs1086};
	// end inline asm
	xor.b32  	%r984, %r8008, -2004318072;
	// begin inline asm
	lop3.b32 %r982, %r673, %r984, %r985, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r986, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r987, %r985, %r986;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r990, %r982, %r987;
	// end inline asm
	// begin inline asm
	lop3.b32 %r993, %r684, %r984, %r996, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r997, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r998, %r996, %r997;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1001, %r993, %r998;
	// end inline asm
	shr.u32 	%r1006, %r984, 8;
	// begin inline asm
	lop3.b32 %r1004, %r673, %r1006, %r985, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1008, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1009, %r985, %r1008;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1012, %r1004, %r1009;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1015, %r684, %r1006, %r996, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1019, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1020, %r996, %r1019;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1023, %r1015, %r1020;
	// end inline asm
	// begin inline asm
	mov.b32 %r1031, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	mov.b32 %r1042, {%rs1086, %rs1086};
	// end inline asm
	xor.b32  	%r1030, %r8013, -2004318072;
	// begin inline asm
	lop3.b32 %r1028, %r673, %r1030, %r1031, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1032, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1033, %r1031, %r1032;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1036, %r1028, %r1033;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1039, %r684, %r1030, %r1042, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1043, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1044, %r1042, %r1043;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1047, %r1039, %r1044;
	// end inline asm
	shr.u32 	%r1052, %r1030, 8;
	// begin inline asm
	lop3.b32 %r1050, %r673, %r1052, %r1031, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1054, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1055, %r1031, %r1054;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1058, %r1050, %r1055;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1061, %r684, %r1052, %r1042, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1065, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1066, %r1042, %r1065;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1069, %r1061, %r1066;
	// end inline asm
	// begin inline asm
	mov.b32 %r1077, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	mov.b32 %r1088, {%rs1086, %rs1086};
	// end inline asm
	xor.b32  	%r1076, %r8014, -2004318072;
	// begin inline asm
	lop3.b32 %r1074, %r673, %r1076, %r1077, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1078, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1079, %r1077, %r1078;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1082, %r1074, %r1079;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1085, %r684, %r1076, %r1088, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1089, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1090, %r1088, %r1089;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1093, %r1085, %r1090;
	// end inline asm
	shr.u32 	%r1098, %r1076, 8;
	// begin inline asm
	lop3.b32 %r1096, %r673, %r1098, %r1077, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1100, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1101, %r1077, %r1100;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1104, %r1096, %r1101;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1107, %r684, %r1098, %r1088, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1111, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1112, %r1088, %r1111;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1115, %r1107, %r1112;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1118, %r218, %r944, %r856;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1122, %r218, %r955, %r861;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1126, %r218, %r966, %r866;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1130, %r218, %r977, %r871;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1134, %r218, %r990, %r876;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1138, %r218, %r1001, %r881;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1142, %r218, %r1012, %r886;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1146, %r218, %r1023, %r891;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1150, %r218, %r1036, %r896;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1154, %r218, %r1047, %r901;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1158, %r218, %r1058, %r906;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1162, %r218, %r1069, %r911;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1166, %r218, %r1082, %r916;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1170, %r218, %r1093, %r921;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1174, %r218, %r1104, %r926;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1178, %r218, %r1115, %r931;
	// end inline asm
	// begin inline asm
	mov.b32 %r1187, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	mov.b32 %r1198, {%rs1086, %rs1086};
	// end inline asm
	xor.b32  	%r1186, %r8009, -2004318072;
	// begin inline asm
	lop3.b32 %r1184, %r673, %r1186, %r1187, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1188, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1189, %r1187, %r1188;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1192, %r1184, %r1189;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1195, %r684, %r1186, %r1198, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1199, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1200, %r1198, %r1199;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1203, %r1195, %r1200;
	// end inline asm
	shr.u32 	%r1208, %r1186, 8;
	// begin inline asm
	lop3.b32 %r1206, %r673, %r1208, %r1187, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1210, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1211, %r1187, %r1210;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1214, %r1206, %r1211;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1217, %r684, %r1208, %r1198, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1221, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1222, %r1198, %r1221;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1225, %r1217, %r1222;
	// end inline asm
	// begin inline asm
	mov.b32 %r1233, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	mov.b32 %r1244, {%rs1086, %rs1086};
	// end inline asm
	xor.b32  	%r1232, %r8010, -2004318072;
	// begin inline asm
	lop3.b32 %r1230, %r673, %r1232, %r1233, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1234, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1235, %r1233, %r1234;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1238, %r1230, %r1235;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1241, %r684, %r1232, %r1244, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1245, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1246, %r1244, %r1245;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1249, %r1241, %r1246;
	// end inline asm
	shr.u32 	%r1254, %r1232, 8;
	// begin inline asm
	lop3.b32 %r1252, %r673, %r1254, %r1233, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1256, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1257, %r1233, %r1256;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1260, %r1252, %r1257;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1263, %r684, %r1254, %r1244, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1267, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1268, %r1244, %r1267;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1271, %r1263, %r1268;
	// end inline asm
	// begin inline asm
	mov.b32 %r1279, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	mov.b32 %r1290, {%rs1086, %rs1086};
	// end inline asm
	xor.b32  	%r1278, %r8015, -2004318072;
	// begin inline asm
	lop3.b32 %r1276, %r673, %r1278, %r1279, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1280, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1281, %r1279, %r1280;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1284, %r1276, %r1281;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1287, %r684, %r1278, %r1290, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1291, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1292, %r1290, %r1291;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1295, %r1287, %r1292;
	// end inline asm
	shr.u32 	%r1300, %r1278, 8;
	// begin inline asm
	lop3.b32 %r1298, %r673, %r1300, %r1279, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1302, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1303, %r1279, %r1302;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1306, %r1298, %r1303;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1309, %r684, %r1300, %r1290, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1313, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1314, %r1290, %r1313;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1317, %r1309, %r1314;
	// end inline asm
	// begin inline asm
	mov.b32 %r1325, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	mov.b32 %r1336, {%rs1086, %rs1086};
	// end inline asm
	xor.b32  	%r1324, %r8016, -2004318072;
	// begin inline asm
	lop3.b32 %r1322, %r673, %r1324, %r1325, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1326, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1327, %r1325, %r1326;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1330, %r1322, %r1327;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1333, %r684, %r1324, %r1336, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1337, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1338, %r1336, %r1337;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1341, %r1333, %r1338;
	// end inline asm
	shr.u32 	%r1346, %r1324, 8;
	// begin inline asm
	lop3.b32 %r1344, %r673, %r1346, %r1325, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1348, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1349, %r1325, %r1348;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1352, %r1344, %r1349;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1355, %r684, %r1346, %r1336, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1359, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1360, %r1336, %r1359;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1363, %r1355, %r1360;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1366, %r236;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1368, %r1366, %r1192, %r1118;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1372, %r236;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1374, %r1372, %r1203, %r1122;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1378, %r236;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1380, %r1378, %r1214, %r1126;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1384, %r236;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1386, %r1384, %r1225, %r1130;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1390, %r236;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1392, %r1390, %r1238, %r1134;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1396, %r236;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1398, %r1396, %r1249, %r1138;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1402, %r236;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1404, %r1402, %r1260, %r1142;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1408, %r236;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1410, %r1408, %r1271, %r1146;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1414, %r236;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1416, %r1414, %r1284, %r1150;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1420, %r236;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1422, %r1420, %r1295, %r1154;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1426, %r236;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1428, %r1426, %r1306, %r1158;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1432, %r236;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1434, %r1432, %r1317, %r1162;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1438, %r236;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1440, %r1438, %r1330, %r1166;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1444, %r236;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1446, %r1444, %r1341, %r1170;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1450, %r236;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1452, %r1450, %r1352, %r1174;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1456, %r236;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1458, %r1456, %r1363, %r1178;
	// end inline asm
	// begin inline asm
	mov.b32 %r1467, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	mov.b32 %r1478, {%rs1086, %rs1086};
	// end inline asm
	xor.b32  	%r1466, %r8011, -2004318072;
	// begin inline asm
	lop3.b32 %r1464, %r673, %r1466, %r1467, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1468, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1469, %r1467, %r1468;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1472, %r1464, %r1469;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1475, %r684, %r1466, %r1478, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1479, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1480, %r1478, %r1479;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1483, %r1475, %r1480;
	// end inline asm
	shr.u32 	%r1488, %r1466, 8;
	// begin inline asm
	lop3.b32 %r1486, %r673, %r1488, %r1467, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1490, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1491, %r1467, %r1490;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1494, %r1486, %r1491;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1497, %r684, %r1488, %r1478, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1501, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1502, %r1478, %r1501;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1505, %r1497, %r1502;
	// end inline asm
	// begin inline asm
	mov.b32 %r1513, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	mov.b32 %r1524, {%rs1086, %rs1086};
	// end inline asm
	xor.b32  	%r1512, %r8012, -2004318072;
	// begin inline asm
	lop3.b32 %r1510, %r673, %r1512, %r1513, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1514, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1515, %r1513, %r1514;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1518, %r1510, %r1515;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1521, %r684, %r1512, %r1524, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1525, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1526, %r1524, %r1525;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1529, %r1521, %r1526;
	// end inline asm
	shr.u32 	%r1534, %r1512, 8;
	// begin inline asm
	lop3.b32 %r1532, %r673, %r1534, %r1513, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1536, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1537, %r1513, %r1536;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1540, %r1532, %r1537;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1543, %r684, %r1534, %r1524, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1547, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1548, %r1524, %r1547;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1551, %r1543, %r1548;
	// end inline asm
	// begin inline asm
	mov.b32 %r1559, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	mov.b32 %r1570, {%rs1086, %rs1086};
	// end inline asm
	xor.b32  	%r1558, %r8017, -2004318072;
	// begin inline asm
	lop3.b32 %r1556, %r673, %r1558, %r1559, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1560, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1561, %r1559, %r1560;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1564, %r1556, %r1561;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1567, %r684, %r1558, %r1570, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1571, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1572, %r1570, %r1571;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1575, %r1567, %r1572;
	// end inline asm
	shr.u32 	%r1580, %r1558, 8;
	// begin inline asm
	lop3.b32 %r1578, %r673, %r1580, %r1559, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1582, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1583, %r1559, %r1582;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1586, %r1578, %r1583;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1589, %r684, %r1580, %r1570, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1593, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1594, %r1570, %r1593;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1597, %r1589, %r1594;
	// end inline asm
	// begin inline asm
	mov.b32 %r1605, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	mov.b32 %r1616, {%rs1086, %rs1086};
	// end inline asm
	xor.b32  	%r1604, %r8018, -2004318072;
	// begin inline asm
	lop3.b32 %r1602, %r673, %r1604, %r1605, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1606, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1607, %r1605, %r1606;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1610, %r1602, %r1607;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1613, %r684, %r1604, %r1616, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1617, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1618, %r1616, %r1617;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1621, %r1613, %r1618;
	// end inline asm
	shr.u32 	%r1626, %r1604, 8;
	// begin inline asm
	lop3.b32 %r1624, %r673, %r1626, %r1605, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1628, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1629, %r1605, %r1628;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1632, %r1624, %r1629;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1635, %r684, %r1626, %r1616, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1639, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1640, %r1616, %r1639;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1643, %r1635, %r1640;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1717, %r254, %r1472, %r1368;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1714, %r254, %r1483, %r1374;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1726, %r254, %r1494, %r1380;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1723, %r254, %r1505, %r1386;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1735, %r254, %r1518, %r1392;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1732, %r254, %r1529, %r1398;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1744, %r254, %r1540, %r1404;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1741, %r254, %r1551, %r1410;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1753, %r254, %r1564, %r1416;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1750, %r254, %r1575, %r1422;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1762, %r254, %r1586, %r1428;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1759, %r254, %r1597, %r1434;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1771, %r254, %r1610, %r1440;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1768, %r254, %r1621, %r1446;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1780, %r254, %r1632, %r1452;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1777, %r254, %r1643, %r1458;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1710, %r303;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1712, %r1710, %r1714;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1715, %r300, %r1717, %r1712;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1719, %r303;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1721, %r1719, %r1723;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1724, %r300, %r1726, %r1721;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1728, %r303;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1730, %r1728, %r1732;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1733, %r300, %r1735, %r1730;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1737, %r303;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1739, %r1737, %r1741;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1742, %r300, %r1744, %r1739;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1746, %r303;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1748, %r1746, %r1750;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1751, %r300, %r1753, %r1748;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1755, %r303;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1757, %r1755, %r1759;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1760, %r300, %r1762, %r1757;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1764, %r303;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1766, %r1764, %r1768;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1769, %r300, %r1771, %r1766;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1773, %r303;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1775, %r1773, %r1777;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1778, %r300, %r1780, %r1775;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1782, %r303, %r1717;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1785, %r300, %r1714, %r1782;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1789, %r303, %r1726;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1792, %r300, %r1723, %r1789;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1796, %r303, %r1735;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1799, %r300, %r1732, %r1796;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1803, %r303, %r1744;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1806, %r300, %r1741, %r1803;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1810, %r303, %r1753;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1813, %r300, %r1750, %r1810;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1817, %r303, %r1762;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1820, %r300, %r1759, %r1817;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1824, %r303, %r1771;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1827, %r300, %r1768, %r1824;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1831, %r303, %r1780;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1834, %r300, %r1777, %r1831;
	// end inline asm
	mov.u32 	%r1846, 0;
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1925, %r1922}, {%r347, %r353, %r350, %r356}, {%r1715, %r1785}, {%r1846, %r1846};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1934, %r1931}, {%r347, %r353, %r350, %r356}, {%r1724, %r1792}, {%r1846, %r1846};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1943, %r1940}, {%r347, %r353, %r350, %r356}, {%r1733, %r1799}, {%r1846, %r1846};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1952, %r1949}, {%r347, %r353, %r350, %r356}, {%r1742, %r1806}, {%r1846, %r1846};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1961, %r1958}, {%r347, %r353, %r350, %r356}, {%r1751, %r1813}, {%r1846, %r1846};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1970, %r1967}, {%r347, %r353, %r350, %r356}, {%r1760, %r1820}, {%r1846, %r1846};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1979, %r1976}, {%r347, %r353, %r350, %r356}, {%r1769, %r1827}, {%r1846, %r1846};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1988, %r1985}, {%r347, %r353, %r350, %r356}, {%r1778, %r1834}, {%r1846, %r1846};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1918, %r394;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1920, %r1918, %r1922;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1923, %r391, %r1925, %r1920;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1927, %r394;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1929, %r1927, %r1931;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1932, %r391, %r1934, %r1929;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1936, %r394;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1938, %r1936, %r1940;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1941, %r391, %r1943, %r1938;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1945, %r394;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1947, %r1945, %r1949;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1950, %r391, %r1952, %r1947;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1954, %r394;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1956, %r1954, %r1958;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1959, %r391, %r1961, %r1956;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1963, %r394;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1965, %r1963, %r1967;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1968, %r391, %r1970, %r1965;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1972, %r394;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1974, %r1972, %r1976;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1977, %r391, %r1979, %r1974;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1981, %r394;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1983, %r1981, %r1985;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1986, %r391, %r1988, %r1983;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1990, %r394, %r1925;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1993, %r391, %r1922, %r1990;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1997, %r394, %r1934;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2000, %r391, %r1931, %r1997;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2004, %r394, %r1943;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2007, %r391, %r1940, %r2004;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2011, %r394, %r1952;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2014, %r391, %r1949, %r2011;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2018, %r394, %r1961;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2021, %r391, %r1958, %r2018;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2025, %r394, %r1970;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2028, %r391, %r1967, %r2025;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2032, %r394, %r1979;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2035, %r391, %r1976, %r2032;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2039, %r394, %r1988;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2042, %r391, %r1985, %r2039;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2046, %r2047}, {%r425, %r431, %r428, %r434}, {%r1923, %r1993}, {%r1846, %r1846};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2056, %r2057}, {%r425, %r431, %r428, %r434}, {%r1932, %r2000}, {%r1846, %r1846};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2066, %r2067}, {%r425, %r431, %r428, %r434}, {%r1941, %r2007}, {%r1846, %r1846};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2076, %r2077}, {%r425, %r431, %r428, %r434}, {%r1950, %r2014}, {%r1846, %r1846};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2086, %r2087}, {%r425, %r431, %r428, %r434}, {%r1959, %r2021}, {%r1846, %r1846};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2096, %r2097}, {%r425, %r431, %r428, %r434}, {%r1968, %r2028}, {%r1846, %r1846};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2106, %r2107}, {%r425, %r431, %r428, %r434}, {%r1977, %r2035}, {%r1846, %r1846};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2116, %r2117}, {%r425, %r431, %r428, %r434}, {%r1986, %r2042}, {%r1846, %r1846};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2126, %r15, %r2046;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2129, %r15, %r2047;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2132, %r15, %r2056;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2135, %r15, %r2057;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2138, %r15, %r2066;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2141, %r15, %r2067;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2144, %r15, %r2076;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2147, %r15, %r2077;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2150, %r15, %r2086;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2153, %r15, %r2087;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2156, %r15, %r2096;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2159, %r15, %r2097;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2162, %r15, %r2106;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2165, %r15, %r2107;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2168, %r15, %r2116;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2171, %r15, %r2117;
	// end inline asm
	mov.u16 	%rs207, -14592;
	// begin inline asm
	mov.b32 %r2174, {%rs207, %rs207};
	// end inline asm
	mov.u16 	%rs209, 18176;
	// begin inline asm
	mov.b32 %r2175, {%rs209, %rs209};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2176, %r2126, %r2174;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2179, %r2176, %r2175;
	// end inline asm
	// begin inline asm
	mov.b32 %r2182, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	mov.b32 %r2183, {%rs209, %rs209};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2184, %r2129, %r2182;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2187, %r2184, %r2183;
	// end inline asm
	// begin inline asm
	mov.b32 %r2190, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	mov.b32 %r2191, {%rs209, %rs209};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2192, %r2132, %r2190;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2195, %r2192, %r2191;
	// end inline asm
	// begin inline asm
	mov.b32 %r2198, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	mov.b32 %r2199, {%rs209, %rs209};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2200, %r2135, %r2198;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2203, %r2200, %r2199;
	// end inline asm
	// begin inline asm
	mov.b32 %r2206, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	mov.b32 %r2207, {%rs209, %rs209};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2208, %r2138, %r2206;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2211, %r2208, %r2207;
	// end inline asm
	// begin inline asm
	mov.b32 %r2214, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	mov.b32 %r2215, {%rs209, %rs209};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2216, %r2141, %r2214;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2219, %r2216, %r2215;
	// end inline asm
	// begin inline asm
	mov.b32 %r2222, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	mov.b32 %r2223, {%rs209, %rs209};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2224, %r2144, %r2222;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2227, %r2224, %r2223;
	// end inline asm
	// begin inline asm
	mov.b32 %r2230, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	mov.b32 %r2231, {%rs209, %rs209};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2232, %r2147, %r2230;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2235, %r2232, %r2231;
	// end inline asm
	// begin inline asm
	mov.b32 %r2238, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	mov.b32 %r2239, {%rs209, %rs209};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2240, %r2150, %r2238;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2243, %r2240, %r2239;
	// end inline asm
	// begin inline asm
	mov.b32 %r2246, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	mov.b32 %r2247, {%rs209, %rs209};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2248, %r2153, %r2246;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2251, %r2248, %r2247;
	// end inline asm
	// begin inline asm
	mov.b32 %r2254, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	mov.b32 %r2255, {%rs209, %rs209};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2256, %r2156, %r2254;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2259, %r2256, %r2255;
	// end inline asm
	// begin inline asm
	mov.b32 %r2262, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	mov.b32 %r2263, {%rs209, %rs209};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2264, %r2159, %r2262;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2267, %r2264, %r2263;
	// end inline asm
	// begin inline asm
	mov.b32 %r2270, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	mov.b32 %r2271, {%rs209, %rs209};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2272, %r2162, %r2270;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2275, %r2272, %r2271;
	// end inline asm
	// begin inline asm
	mov.b32 %r2278, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	mov.b32 %r2279, {%rs209, %rs209};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2280, %r2165, %r2278;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2283, %r2280, %r2279;
	// end inline asm
	// begin inline asm
	mov.b32 %r2286, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	mov.b32 %r2287, {%rs209, %rs209};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2288, %r2168, %r2286;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2291, %r2288, %r2287;
	// end inline asm
	// begin inline asm
	mov.b32 %r2294, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	mov.b32 %r2295, {%rs209, %rs209};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2296, %r2171, %r2294;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2299, %r2296, %r2295;
	// end inline asm
	// begin inline asm
	mov.b32 %r2305, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	mov.b32 %r2303, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2304, %r2305, %r2303;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2307, %r2179, %r2304;
	// end inline asm
	// begin inline asm
	mov.b32 %r2310, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2311, %r2305, %r2310;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2314, %r2187, %r2311;
	// end inline asm
	// begin inline asm
	mov.b32 %r2317, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2318, %r2305, %r2317;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2321, %r2195, %r2318;
	// end inline asm
	// begin inline asm
	mov.b32 %r2324, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2325, %r2305, %r2324;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2328, %r2203, %r2325;
	// end inline asm
	mov.u32 	%r2334, 25152;
	// begin inline asm
	prmt.b32 %r2331, %r2307, %r2321, %r2334;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2335, %r2314, %r2328, %r2334;
	// end inline asm
	shl.b32 	%r2342, %r2335, 4;
	mov.u32 	%r2340, 252645135;
	// begin inline asm
	lop3.b32 %r2339, %r2340, %r2331, %r2342, 202;
	// end inline asm
	xor.b32  	%r7858, %r2339, -2004318072;
	// begin inline asm
	mov.b32 %r2346, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	mov.b32 %r2344, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2345, %r2346, %r2344;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2348, %r2211, %r2345;
	// end inline asm
	// begin inline asm
	mov.b32 %r2351, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2352, %r2346, %r2351;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2355, %r2219, %r2352;
	// end inline asm
	// begin inline asm
	mov.b32 %r2358, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2359, %r2346, %r2358;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2362, %r2227, %r2359;
	// end inline asm
	// begin inline asm
	mov.b32 %r2365, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2366, %r2346, %r2365;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2369, %r2235, %r2366;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2372, %r2348, %r2362, %r2334;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2376, %r2355, %r2369, %r2334;
	// end inline asm
	shl.b32 	%r2383, %r2376, 4;
	// begin inline asm
	lop3.b32 %r2380, %r2340, %r2372, %r2383, 202;
	// end inline asm
	xor.b32  	%r7859, %r2380, -2004318072;
	// begin inline asm
	mov.b32 %r2387, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	mov.b32 %r2385, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2386, %r2387, %r2385;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2389, %r2243, %r2386;
	// end inline asm
	// begin inline asm
	mov.b32 %r2392, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2393, %r2387, %r2392;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2396, %r2251, %r2393;
	// end inline asm
	// begin inline asm
	mov.b32 %r2399, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2400, %r2387, %r2399;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2403, %r2259, %r2400;
	// end inline asm
	// begin inline asm
	mov.b32 %r2406, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2407, %r2387, %r2406;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2410, %r2267, %r2407;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2413, %r2389, %r2403, %r2334;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2417, %r2396, %r2410, %r2334;
	// end inline asm
	shl.b32 	%r2424, %r2417, 4;
	// begin inline asm
	lop3.b32 %r2421, %r2340, %r2413, %r2424, 202;
	// end inline asm
	xor.b32  	%r7860, %r2421, -2004318072;
	// begin inline asm
	mov.b32 %r2428, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	mov.b32 %r2426, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2427, %r2428, %r2426;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2430, %r2275, %r2427;
	// end inline asm
	// begin inline asm
	mov.b32 %r2433, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2434, %r2428, %r2433;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2437, %r2283, %r2434;
	// end inline asm
	// begin inline asm
	mov.b32 %r2440, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2441, %r2428, %r2440;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2444, %r2291, %r2441;
	// end inline asm
	// begin inline asm
	mov.b32 %r2447, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2448, %r2428, %r2447;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2451, %r2299, %r2448;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2454, %r2430, %r2444, %r2334;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2458, %r2437, %r2451, %r2334;
	// end inline asm
	shl.b32 	%r2465, %r2458, 4;
	// begin inline asm
	lop3.b32 %r2462, %r2340, %r2454, %r2465, 202;
	// end inline asm
	xor.b32  	%r7861, %r2462, -2004318072;
	add.s64 	%rd123, %rd177, %rd25;
	st.shared.u32 	[%rd123], %r7858;
	add.s64 	%rd124, %rd177, %rd24;
	st.shared.u32 	[%rd124], %r7859;
	add.s64 	%rd125, %rd177, %rd27;
	st.shared.u32 	[%rd125], %r7860;
	add.s64 	%rd126, %rd177, %rd26;
	st.shared.u32 	[%rd126], %r7861;
	ld.shared.u32 	%r8007, [%rd119];
	ld.shared.u32 	%r8008, [%rd120];
	ld.shared.u32 	%r8013, [%rd121];
	ld.shared.u32 	%r8014, [%rd122];
	// begin inline asm
	mov.b32 %r2471, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	mov.b32 %r2482, {%rs1086, %rs1086};
	// end inline asm
	xor.b32  	%r2470, %r8007, -2004318072;
	// begin inline asm
	lop3.b32 %r2468, %r673, %r2470, %r2471, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2472, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2473, %r2471, %r2472;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2476, %r2468, %r2473;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2479, %r684, %r2470, %r2482, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2483, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2484, %r2482, %r2483;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2487, %r2479, %r2484;
	// end inline asm
	shr.u32 	%r2492, %r2470, 8;
	// begin inline asm
	lop3.b32 %r2490, %r673, %r2492, %r2471, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2494, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2495, %r2471, %r2494;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2498, %r2490, %r2495;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2501, %r684, %r2492, %r2482, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2505, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2506, %r2482, %r2505;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2509, %r2501, %r2506;
	// end inline asm
	// begin inline asm
	mov.b32 %r2517, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	mov.b32 %r2528, {%rs1086, %rs1086};
	// end inline asm
	xor.b32  	%r2516, %r8008, -2004318072;
	// begin inline asm
	lop3.b32 %r2514, %r673, %r2516, %r2517, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2518, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2519, %r2517, %r2518;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2522, %r2514, %r2519;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2525, %r684, %r2516, %r2528, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2529, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2530, %r2528, %r2529;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2533, %r2525, %r2530;
	// end inline asm
	shr.u32 	%r2538, %r2516, 8;
	// begin inline asm
	lop3.b32 %r2536, %r673, %r2538, %r2517, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2540, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2541, %r2517, %r2540;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2544, %r2536, %r2541;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2547, %r684, %r2538, %r2528, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2551, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2552, %r2528, %r2551;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2555, %r2547, %r2552;
	// end inline asm
	// begin inline asm
	mov.b32 %r2563, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	mov.b32 %r2574, {%rs1086, %rs1086};
	// end inline asm
	xor.b32  	%r2562, %r8013, -2004318072;
	// begin inline asm
	lop3.b32 %r2560, %r673, %r2562, %r2563, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2564, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2565, %r2563, %r2564;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2568, %r2560, %r2565;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2571, %r684, %r2562, %r2574, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2575, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2576, %r2574, %r2575;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2579, %r2571, %r2576;
	// end inline asm
	shr.u32 	%r2584, %r2562, 8;
	// begin inline asm
	lop3.b32 %r2582, %r673, %r2584, %r2563, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2586, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2587, %r2563, %r2586;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2590, %r2582, %r2587;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2593, %r684, %r2584, %r2574, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2597, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2598, %r2574, %r2597;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2601, %r2593, %r2598;
	// end inline asm
	// begin inline asm
	mov.b32 %r2609, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	mov.b32 %r2620, {%rs1086, %rs1086};
	// end inline asm
	xor.b32  	%r2608, %r8014, -2004318072;
	// begin inline asm
	lop3.b32 %r2606, %r673, %r2608, %r2609, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2610, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2611, %r2609, %r2610;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2614, %r2606, %r2611;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2617, %r684, %r2608, %r2620, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2621, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2622, %r2620, %r2621;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2625, %r2617, %r2622;
	// end inline asm
	shr.u32 	%r2630, %r2608, 8;
	// begin inline asm
	lop3.b32 %r2628, %r673, %r2630, %r2609, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2632, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2633, %r2609, %r2632;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2636, %r2628, %r2633;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2639, %r684, %r2630, %r2620, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2643, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2644, %r2620, %r2643;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2647, %r2639, %r2644;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2650, %r272;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2652, %r2650, %r2476;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2655, %r272;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2657, %r2655, %r2487;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2660, %r272;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2662, %r2660, %r2498;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2665, %r272;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2667, %r2665, %r2509;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2670, %r272;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2672, %r2670, %r2522;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2675, %r272;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2677, %r2675, %r2533;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2680, %r272;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2682, %r2680, %r2544;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2685, %r272;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2687, %r2685, %r2555;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2690, %r272;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2692, %r2690, %r2568;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2695, %r272;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2697, %r2695, %r2579;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2700, %r272;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2702, %r2700, %r2590;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2705, %r272;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2707, %r2705, %r2601;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2710, %r272;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2712, %r2710, %r2614;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2715, %r272;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2717, %r2715, %r2625;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2720, %r272;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2722, %r2720, %r2636;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2725, %r272;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2727, %r2725, %r2647;
	// end inline asm
	// begin inline asm
	mov.b32 %r2735, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	mov.b32 %r2746, {%rs1086, %rs1086};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2732, %r673, %r1186, %r2735, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2736, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2737, %r2735, %r2736;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2740, %r2732, %r2737;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2743, %r684, %r1186, %r2746, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2747, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2748, %r2746, %r2747;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2751, %r2743, %r2748;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2754, %r673, %r1208, %r2735, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2758, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2759, %r2735, %r2758;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2762, %r2754, %r2759;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2765, %r684, %r1208, %r2746, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2769, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2770, %r2746, %r2769;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2773, %r2765, %r2770;
	// end inline asm
	// begin inline asm
	mov.b32 %r2781, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	mov.b32 %r2792, {%rs1086, %rs1086};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2778, %r673, %r1232, %r2781, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2782, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2783, %r2781, %r2782;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2786, %r2778, %r2783;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2789, %r684, %r1232, %r2792, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2793, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2794, %r2792, %r2793;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2797, %r2789, %r2794;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2800, %r673, %r1254, %r2781, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2804, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2805, %r2781, %r2804;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2808, %r2800, %r2805;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2811, %r684, %r1254, %r2792, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2815, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2816, %r2792, %r2815;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2819, %r2811, %r2816;
	// end inline asm
	// begin inline asm
	mov.b32 %r2827, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	mov.b32 %r2838, {%rs1086, %rs1086};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2824, %r673, %r1278, %r2827, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2828, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2829, %r2827, %r2828;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2832, %r2824, %r2829;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2835, %r684, %r1278, %r2838, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2839, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2840, %r2838, %r2839;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2843, %r2835, %r2840;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2846, %r673, %r1300, %r2827, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2850, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2851, %r2827, %r2850;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2854, %r2846, %r2851;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2857, %r684, %r1300, %r2838, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2861, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2862, %r2838, %r2861;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2865, %r2857, %r2862;
	// end inline asm
	// begin inline asm
	mov.b32 %r2873, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	mov.b32 %r2884, {%rs1086, %rs1086};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2870, %r673, %r1324, %r2873, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2874, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2875, %r2873, %r2874;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2878, %r2870, %r2875;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2881, %r684, %r1324, %r2884, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2885, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2886, %r2884, %r2885;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2889, %r2881, %r2886;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2892, %r673, %r1346, %r2873, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2896, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2897, %r2873, %r2896;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2900, %r2892, %r2897;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2903, %r684, %r1346, %r2884, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2907, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2908, %r2884, %r2907;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2911, %r2903, %r2908;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2914, %r218, %r2740, %r2652;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2918, %r218, %r2751, %r2657;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2922, %r218, %r2762, %r2662;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2926, %r218, %r2773, %r2667;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2930, %r218, %r2786, %r2672;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2934, %r218, %r2797, %r2677;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2938, %r218, %r2808, %r2682;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2942, %r218, %r2819, %r2687;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2946, %r218, %r2832, %r2692;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2950, %r218, %r2843, %r2697;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2954, %r218, %r2854, %r2702;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2958, %r218, %r2865, %r2707;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2962, %r218, %r2878, %r2712;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2966, %r218, %r2889, %r2717;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2970, %r218, %r2900, %r2722;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2974, %r218, %r2911, %r2727;
	// end inline asm
	// begin inline asm
	mov.b32 %r2983, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	mov.b32 %r2994, {%rs1086, %rs1086};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2980, %r673, %r1466, %r2983, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2984, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2985, %r2983, %r2984;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2988, %r2980, %r2985;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2991, %r684, %r1466, %r2994, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2995, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2996, %r2994, %r2995;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2999, %r2991, %r2996;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3002, %r673, %r1488, %r2983, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3006, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3007, %r2983, %r3006;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3010, %r3002, %r3007;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3013, %r684, %r1488, %r2994, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3017, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3018, %r2994, %r3017;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3021, %r3013, %r3018;
	// end inline asm
	// begin inline asm
	mov.b32 %r3029, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	mov.b32 %r3040, {%rs1086, %rs1086};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3026, %r673, %r1512, %r3029, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3030, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3031, %r3029, %r3030;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3034, %r3026, %r3031;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3037, %r684, %r1512, %r3040, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3041, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3042, %r3040, %r3041;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3045, %r3037, %r3042;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3048, %r673, %r1534, %r3029, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3052, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3053, %r3029, %r3052;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3056, %r3048, %r3053;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3059, %r684, %r1534, %r3040, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3063, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3064, %r3040, %r3063;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3067, %r3059, %r3064;
	// end inline asm
	// begin inline asm
	mov.b32 %r3075, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	mov.b32 %r3086, {%rs1086, %rs1086};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3072, %r673, %r1558, %r3075, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3076, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3077, %r3075, %r3076;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3080, %r3072, %r3077;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3083, %r684, %r1558, %r3086, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3087, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3088, %r3086, %r3087;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3091, %r3083, %r3088;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3094, %r673, %r1580, %r3075, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3098, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3099, %r3075, %r3098;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3102, %r3094, %r3099;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3105, %r684, %r1580, %r3086, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3109, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3110, %r3086, %r3109;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3113, %r3105, %r3110;
	// end inline asm
	// begin inline asm
	mov.b32 %r3121, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	mov.b32 %r3132, {%rs1086, %rs1086};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3118, %r673, %r1604, %r3121, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3122, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3123, %r3121, %r3122;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3126, %r3118, %r3123;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3129, %r684, %r1604, %r3132, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3133, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3134, %r3132, %r3133;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3137, %r3129, %r3134;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3140, %r673, %r1626, %r3121, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3144, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3145, %r3121, %r3144;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3148, %r3140, %r3145;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3151, %r684, %r1626, %r3132, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3155, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3156, %r3132, %r3155;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3159, %r3151, %r3156;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3162, %r236;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3164, %r3162, %r2988, %r2914;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3168, %r236;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3170, %r3168, %r2999, %r2918;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3174, %r236;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3176, %r3174, %r3010, %r2922;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3180, %r236;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3182, %r3180, %r3021, %r2926;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3186, %r236;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3188, %r3186, %r3034, %r2930;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3192, %r236;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3194, %r3192, %r3045, %r2934;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3198, %r236;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3200, %r3198, %r3056, %r2938;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3204, %r236;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3206, %r3204, %r3067, %r2942;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3210, %r236;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3212, %r3210, %r3080, %r2946;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3216, %r236;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3218, %r3216, %r3091, %r2950;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3222, %r236;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3224, %r3222, %r3102, %r2954;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3228, %r236;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3230, %r3228, %r3113, %r2958;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3234, %r236;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3236, %r3234, %r3126, %r2962;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3240, %r236;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3242, %r3240, %r3137, %r2966;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3246, %r236;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3248, %r3246, %r3148, %r2970;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3252, %r236;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3254, %r3252, %r3159, %r2974;
	// end inline asm
	// begin inline asm
	mov.b32 %r3263, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	mov.b32 %r3274, {%rs1086, %rs1086};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3260, %r673, %r674, %r3263, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3264, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3265, %r3263, %r3264;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3268, %r3260, %r3265;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3271, %r684, %r674, %r3274, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3275, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3276, %r3274, %r3275;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3279, %r3271, %r3276;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3282, %r673, %r696, %r3263, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3286, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3287, %r3263, %r3286;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3290, %r3282, %r3287;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3293, %r684, %r696, %r3274, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3297, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3298, %r3274, %r3297;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3301, %r3293, %r3298;
	// end inline asm
	// begin inline asm
	mov.b32 %r3309, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	mov.b32 %r3320, {%rs1086, %rs1086};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3306, %r673, %r720, %r3309, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3310, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3311, %r3309, %r3310;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3314, %r3306, %r3311;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3317, %r684, %r720, %r3320, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3321, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3322, %r3320, %r3321;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3325, %r3317, %r3322;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3328, %r673, %r742, %r3309, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3332, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3333, %r3309, %r3332;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3336, %r3328, %r3333;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3339, %r684, %r742, %r3320, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3343, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3344, %r3320, %r3343;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3347, %r3339, %r3344;
	// end inline asm
	// begin inline asm
	mov.b32 %r3355, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	mov.b32 %r3366, {%rs1086, %rs1086};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3352, %r673, %r766, %r3355, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3356, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3357, %r3355, %r3356;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3360, %r3352, %r3357;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3363, %r684, %r766, %r3366, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3367, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3368, %r3366, %r3367;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3371, %r3363, %r3368;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3374, %r673, %r788, %r3355, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3378, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3379, %r3355, %r3378;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3382, %r3374, %r3379;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3385, %r684, %r788, %r3366, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3389, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3390, %r3366, %r3389;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3393, %r3385, %r3390;
	// end inline asm
	// begin inline asm
	mov.b32 %r3401, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	mov.b32 %r3412, {%rs1086, %rs1086};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3398, %r673, %r812, %r3401, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3402, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3403, %r3401, %r3402;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3406, %r3398, %r3403;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3409, %r684, %r812, %r3412, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3413, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3414, %r3412, %r3413;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3417, %r3409, %r3414;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3420, %r673, %r834, %r3401, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3424, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3425, %r3401, %r3424;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3428, %r3420, %r3425;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3431, %r684, %r834, %r3412, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3435, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3436, %r3412, %r3435;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3439, %r3431, %r3436;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3513, %r254, %r3268, %r3164;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3510, %r254, %r3279, %r3170;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3522, %r254, %r3290, %r3176;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3519, %r254, %r3301, %r3182;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3531, %r254, %r3314, %r3188;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3528, %r254, %r3325, %r3194;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3540, %r254, %r3336, %r3200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3537, %r254, %r3347, %r3206;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3549, %r254, %r3360, %r3212;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3546, %r254, %r3371, %r3218;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3558, %r254, %r3382, %r3224;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3555, %r254, %r3393, %r3230;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3567, %r254, %r3406, %r3236;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3564, %r254, %r3417, %r3242;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3576, %r254, %r3428, %r3248;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3573, %r254, %r3439, %r3254;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3506, %r303;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3508, %r3506, %r3510;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3511, %r300, %r3513, %r3508;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3515, %r303;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3517, %r3515, %r3519;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3520, %r300, %r3522, %r3517;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3524, %r303;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3526, %r3524, %r3528;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3529, %r300, %r3531, %r3526;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3533, %r303;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3535, %r3533, %r3537;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3538, %r300, %r3540, %r3535;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3542, %r303;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3544, %r3542, %r3546;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3547, %r300, %r3549, %r3544;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3551, %r303;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3553, %r3551, %r3555;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3556, %r300, %r3558, %r3553;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3560, %r303;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3562, %r3560, %r3564;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3565, %r300, %r3567, %r3562;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3569, %r303;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3571, %r3569, %r3573;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3574, %r300, %r3576, %r3571;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3578, %r303, %r3513;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3581, %r300, %r3510, %r3578;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3585, %r303, %r3522;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3588, %r300, %r3519, %r3585;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3592, %r303, %r3531;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3595, %r300, %r3528, %r3592;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3599, %r303, %r3540;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3602, %r300, %r3537, %r3599;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3606, %r303, %r3549;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3609, %r300, %r3546, %r3606;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3613, %r303, %r3558;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3616, %r300, %r3555, %r3613;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3620, %r303, %r3567;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3623, %r300, %r3564, %r3620;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3627, %r303, %r3576;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3630, %r300, %r3573, %r3627;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3721, %r3718}, {%r347, %r353, %r350, %r356}, {%r3511, %r3581}, {%r1846, %r1846};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3730, %r3727}, {%r347, %r353, %r350, %r356}, {%r3520, %r3588}, {%r1846, %r1846};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3739, %r3736}, {%r347, %r353, %r350, %r356}, {%r3529, %r3595}, {%r1846, %r1846};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3748, %r3745}, {%r347, %r353, %r350, %r356}, {%r3538, %r3602}, {%r1846, %r1846};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3757, %r3754}, {%r347, %r353, %r350, %r356}, {%r3547, %r3609}, {%r1846, %r1846};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3766, %r3763}, {%r347, %r353, %r350, %r356}, {%r3556, %r3616}, {%r1846, %r1846};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3775, %r3772}, {%r347, %r353, %r350, %r356}, {%r3565, %r3623}, {%r1846, %r1846};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3784, %r3781}, {%r347, %r353, %r350, %r356}, {%r3574, %r3630}, {%r1846, %r1846};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3714, %r394;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3716, %r3714, %r3718;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3719, %r391, %r3721, %r3716;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3723, %r394;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3725, %r3723, %r3727;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3728, %r391, %r3730, %r3725;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3732, %r394;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3734, %r3732, %r3736;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3737, %r391, %r3739, %r3734;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3741, %r394;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3743, %r3741, %r3745;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3746, %r391, %r3748, %r3743;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3750, %r394;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3752, %r3750, %r3754;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3755, %r391, %r3757, %r3752;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3759, %r394;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3761, %r3759, %r3763;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3764, %r391, %r3766, %r3761;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3768, %r394;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3770, %r3768, %r3772;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3773, %r391, %r3775, %r3770;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3777, %r394;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3779, %r3777, %r3781;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3782, %r391, %r3784, %r3779;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3786, %r394, %r3721;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3789, %r391, %r3718, %r3786;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3793, %r394, %r3730;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3796, %r391, %r3727, %r3793;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3800, %r394, %r3739;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3803, %r391, %r3736, %r3800;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3807, %r394, %r3748;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3810, %r391, %r3745, %r3807;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3814, %r394, %r3757;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3817, %r391, %r3754, %r3814;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3821, %r394, %r3766;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3824, %r391, %r3763, %r3821;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3828, %r394, %r3775;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3831, %r391, %r3772, %r3828;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3835, %r394, %r3784;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3838, %r391, %r3781, %r3835;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3842, %r3843}, {%r425, %r431, %r428, %r434}, {%r3719, %r3789}, {%r1846, %r1846};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3852, %r3853}, {%r425, %r431, %r428, %r434}, {%r3728, %r3796}, {%r1846, %r1846};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3862, %r3863}, {%r425, %r431, %r428, %r434}, {%r3737, %r3803}, {%r1846, %r1846};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3872, %r3873}, {%r425, %r431, %r428, %r434}, {%r3746, %r3810}, {%r1846, %r1846};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3882, %r3883}, {%r425, %r431, %r428, %r434}, {%r3755, %r3817}, {%r1846, %r1846};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3892, %r3893}, {%r425, %r431, %r428, %r434}, {%r3764, %r3824}, {%r1846, %r1846};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3902, %r3903}, {%r425, %r431, %r428, %r434}, {%r3773, %r3831}, {%r1846, %r1846};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3912, %r3913}, {%r425, %r431, %r428, %r434}, {%r3782, %r3838}, {%r1846, %r1846};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3922, %r15, %r3842;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3925, %r15, %r3843;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3928, %r15, %r3852;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3931, %r15, %r3853;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3934, %r15, %r3862;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3937, %r15, %r3863;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3940, %r15, %r3872;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3943, %r15, %r3873;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3946, %r15, %r3882;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3949, %r15, %r3883;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3952, %r15, %r3892;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3955, %r15, %r3893;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3958, %r15, %r3902;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3961, %r15, %r3903;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3964, %r15, %r3912;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3967, %r15, %r3913;
	// end inline asm
	// begin inline asm
	mov.b32 %r3970, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	mov.b32 %r3971, {%rs209, %rs209};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3972, %r3922, %r3970;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3975, %r3972, %r3971;
	// end inline asm
	// begin inline asm
	mov.b32 %r3978, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	mov.b32 %r3979, {%rs209, %rs209};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3980, %r3925, %r3978;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3983, %r3980, %r3979;
	// end inline asm
	// begin inline asm
	mov.b32 %r3986, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	mov.b32 %r3987, {%rs209, %rs209};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3988, %r3928, %r3986;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3991, %r3988, %r3987;
	// end inline asm
	// begin inline asm
	mov.b32 %r3994, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	mov.b32 %r3995, {%rs209, %rs209};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3996, %r3931, %r3994;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3999, %r3996, %r3995;
	// end inline asm
	// begin inline asm
	mov.b32 %r4002, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	mov.b32 %r4003, {%rs209, %rs209};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4004, %r3934, %r4002;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4007, %r4004, %r4003;
	// end inline asm
	// begin inline asm
	mov.b32 %r4010, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	mov.b32 %r4011, {%rs209, %rs209};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4012, %r3937, %r4010;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4015, %r4012, %r4011;
	// end inline asm
	// begin inline asm
	mov.b32 %r4018, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	mov.b32 %r4019, {%rs209, %rs209};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4020, %r3940, %r4018;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4023, %r4020, %r4019;
	// end inline asm
	// begin inline asm
	mov.b32 %r4026, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	mov.b32 %r4027, {%rs209, %rs209};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4028, %r3943, %r4026;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4031, %r4028, %r4027;
	// end inline asm
	// begin inline asm
	mov.b32 %r4034, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	mov.b32 %r4035, {%rs209, %rs209};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4036, %r3946, %r4034;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4039, %r4036, %r4035;
	// end inline asm
	// begin inline asm
	mov.b32 %r4042, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	mov.b32 %r4043, {%rs209, %rs209};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4044, %r3949, %r4042;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4047, %r4044, %r4043;
	// end inline asm
	// begin inline asm
	mov.b32 %r4050, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	mov.b32 %r4051, {%rs209, %rs209};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4052, %r3952, %r4050;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4055, %r4052, %r4051;
	// end inline asm
	// begin inline asm
	mov.b32 %r4058, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	mov.b32 %r4059, {%rs209, %rs209};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4060, %r3955, %r4058;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4063, %r4060, %r4059;
	// end inline asm
	// begin inline asm
	mov.b32 %r4066, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	mov.b32 %r4067, {%rs209, %rs209};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4068, %r3958, %r4066;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4071, %r4068, %r4067;
	// end inline asm
	// begin inline asm
	mov.b32 %r4074, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	mov.b32 %r4075, {%rs209, %rs209};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4076, %r3961, %r4074;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4079, %r4076, %r4075;
	// end inline asm
	// begin inline asm
	mov.b32 %r4082, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	mov.b32 %r4083, {%rs209, %rs209};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4084, %r3964, %r4082;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4087, %r4084, %r4083;
	// end inline asm
	// begin inline asm
	mov.b32 %r4090, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	mov.b32 %r4091, {%rs209, %rs209};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4092, %r3967, %r4090;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4095, %r4092, %r4091;
	// end inline asm
	// begin inline asm
	mov.b32 %r4101, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	mov.b32 %r4099, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4100, %r4101, %r4099;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4103, %r3975, %r4100;
	// end inline asm
	// begin inline asm
	mov.b32 %r4106, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4107, %r4101, %r4106;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4110, %r3983, %r4107;
	// end inline asm
	// begin inline asm
	mov.b32 %r4113, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4114, %r4101, %r4113;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4117, %r3991, %r4114;
	// end inline asm
	// begin inline asm
	mov.b32 %r4120, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4121, %r4101, %r4120;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4124, %r3999, %r4121;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4127, %r4103, %r4117, %r2334;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4131, %r4110, %r4124, %r2334;
	// end inline asm
	shl.b32 	%r4138, %r4131, 4;
	// begin inline asm
	lop3.b32 %r4135, %r2340, %r4127, %r4138, 202;
	// end inline asm
	xor.b32  	%r7862, %r4135, -2004318072;
	// begin inline asm
	mov.b32 %r4142, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	mov.b32 %r4140, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4141, %r4142, %r4140;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4144, %r4007, %r4141;
	// end inline asm
	// begin inline asm
	mov.b32 %r4147, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4148, %r4142, %r4147;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4151, %r4015, %r4148;
	// end inline asm
	// begin inline asm
	mov.b32 %r4154, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4155, %r4142, %r4154;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4158, %r4023, %r4155;
	// end inline asm
	// begin inline asm
	mov.b32 %r4161, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4162, %r4142, %r4161;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4165, %r4031, %r4162;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4168, %r4144, %r4158, %r2334;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4172, %r4151, %r4165, %r2334;
	// end inline asm
	shl.b32 	%r4179, %r4172, 4;
	// begin inline asm
	lop3.b32 %r4176, %r2340, %r4168, %r4179, 202;
	// end inline asm
	xor.b32  	%r7863, %r4176, -2004318072;
	// begin inline asm
	mov.b32 %r4183, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	mov.b32 %r4181, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4182, %r4183, %r4181;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4185, %r4039, %r4182;
	// end inline asm
	// begin inline asm
	mov.b32 %r4188, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4189, %r4183, %r4188;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4192, %r4047, %r4189;
	// end inline asm
	// begin inline asm
	mov.b32 %r4195, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4196, %r4183, %r4195;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4199, %r4055, %r4196;
	// end inline asm
	// begin inline asm
	mov.b32 %r4202, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4203, %r4183, %r4202;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4206, %r4063, %r4203;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4209, %r4185, %r4199, %r2334;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4213, %r4192, %r4206, %r2334;
	// end inline asm
	shl.b32 	%r4220, %r4213, 4;
	// begin inline asm
	lop3.b32 %r4217, %r2340, %r4209, %r4220, 202;
	// end inline asm
	xor.b32  	%r7864, %r4217, -2004318072;
	// begin inline asm
	mov.b32 %r4224, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	mov.b32 %r4222, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4223, %r4224, %r4222;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4226, %r4071, %r4223;
	// end inline asm
	// begin inline asm
	mov.b32 %r4229, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4230, %r4224, %r4229;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4233, %r4079, %r4230;
	// end inline asm
	// begin inline asm
	mov.b32 %r4236, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4237, %r4224, %r4236;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4240, %r4087, %r4237;
	// end inline asm
	// begin inline asm
	mov.b32 %r4243, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4244, %r4224, %r4243;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4247, %r4095, %r4244;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4250, %r4226, %r4240, %r2334;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4254, %r4233, %r4247, %r2334;
	// end inline asm
	shl.b32 	%r4261, %r4254, 4;
	// begin inline asm
	lop3.b32 %r4258, %r2340, %r4250, %r4261, 202;
	// end inline asm
	xor.b32  	%r7865, %r4258, -2004318072;
	st.shared.u32 	[%rd123], %r7862;
	st.shared.u32 	[%rd124], %r7863;
	st.shared.u32 	[%rd125], %r7864;
	st.shared.u32 	[%rd126], %r7865;
	ld.shared.u32 	%r8009, [%rd119];
	ld.shared.u32 	%r8010, [%rd120];
	ld.shared.u32 	%r8015, [%rd121];
	ld.shared.u32 	%r8016, [%rd122];
	// begin inline asm
	mov.b32 %r4267, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	mov.b32 %r4278, {%rs1086, %rs1086};
	// end inline asm
	xor.b32  	%r4266, %r8009, -2004318072;
	// begin inline asm
	lop3.b32 %r4264, %r673, %r4266, %r4267, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4268, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4269, %r4267, %r4268;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4272, %r4264, %r4269;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4275, %r684, %r4266, %r4278, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4279, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4280, %r4278, %r4279;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4283, %r4275, %r4280;
	// end inline asm
	shr.u32 	%r4288, %r4266, 8;
	// begin inline asm
	lop3.b32 %r4286, %r673, %r4288, %r4267, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4290, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4291, %r4267, %r4290;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4294, %r4286, %r4291;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4297, %r684, %r4288, %r4278, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4301, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4302, %r4278, %r4301;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4305, %r4297, %r4302;
	// end inline asm
	// begin inline asm
	mov.b32 %r4313, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	mov.b32 %r4324, {%rs1086, %rs1086};
	// end inline asm
	xor.b32  	%r4312, %r8010, -2004318072;
	// begin inline asm
	lop3.b32 %r4310, %r673, %r4312, %r4313, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4314, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4315, %r4313, %r4314;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4318, %r4310, %r4315;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4321, %r684, %r4312, %r4324, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4325, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4326, %r4324, %r4325;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4329, %r4321, %r4326;
	// end inline asm
	shr.u32 	%r4334, %r4312, 8;
	// begin inline asm
	lop3.b32 %r4332, %r673, %r4334, %r4313, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4336, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4337, %r4313, %r4336;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4340, %r4332, %r4337;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4343, %r684, %r4334, %r4324, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4347, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4348, %r4324, %r4347;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4351, %r4343, %r4348;
	// end inline asm
	// begin inline asm
	mov.b32 %r4359, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	mov.b32 %r4370, {%rs1086, %rs1086};
	// end inline asm
	xor.b32  	%r4358, %r8015, -2004318072;
	// begin inline asm
	lop3.b32 %r4356, %r673, %r4358, %r4359, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4360, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4361, %r4359, %r4360;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4364, %r4356, %r4361;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4367, %r684, %r4358, %r4370, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4371, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4372, %r4370, %r4371;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4375, %r4367, %r4372;
	// end inline asm
	shr.u32 	%r4380, %r4358, 8;
	// begin inline asm
	lop3.b32 %r4378, %r673, %r4380, %r4359, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4382, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4383, %r4359, %r4382;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4386, %r4378, %r4383;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4389, %r684, %r4380, %r4370, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4393, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4394, %r4370, %r4393;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4397, %r4389, %r4394;
	// end inline asm
	// begin inline asm
	mov.b32 %r4405, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	mov.b32 %r4416, {%rs1086, %rs1086};
	// end inline asm
	xor.b32  	%r4404, %r8016, -2004318072;
	// begin inline asm
	lop3.b32 %r4402, %r673, %r4404, %r4405, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4406, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4407, %r4405, %r4406;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4410, %r4402, %r4407;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4413, %r684, %r4404, %r4416, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4417, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4418, %r4416, %r4417;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4421, %r4413, %r4418;
	// end inline asm
	shr.u32 	%r4426, %r4404, 8;
	// begin inline asm
	lop3.b32 %r4424, %r673, %r4426, %r4405, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4428, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4429, %r4405, %r4428;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4432, %r4424, %r4429;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4435, %r684, %r4426, %r4416, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4439, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4440, %r4416, %r4439;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4443, %r4435, %r4440;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4446, %r272;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4448, %r4446, %r4272;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4451, %r272;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4453, %r4451, %r4283;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4456, %r272;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4458, %r4456, %r4294;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4461, %r272;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4463, %r4461, %r4305;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4466, %r272;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4468, %r4466, %r4318;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4471, %r272;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4473, %r4471, %r4329;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4476, %r272;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4478, %r4476, %r4340;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4481, %r272;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4483, %r4481, %r4351;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4486, %r272;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4488, %r4486, %r4364;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4491, %r272;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4493, %r4491, %r4375;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4496, %r272;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4498, %r4496, %r4386;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4501, %r272;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4503, %r4501, %r4397;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4506, %r272;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4508, %r4506, %r4410;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4511, %r272;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4513, %r4511, %r4421;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4516, %r272;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4518, %r4516, %r4432;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4521, %r272;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4523, %r4521, %r4443;
	// end inline asm
	// begin inline asm
	mov.b32 %r4531, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	mov.b32 %r4542, {%rs1086, %rs1086};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4528, %r673, %r1466, %r4531, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4532, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4533, %r4531, %r4532;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4536, %r4528, %r4533;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4539, %r684, %r1466, %r4542, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4543, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4544, %r4542, %r4543;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4547, %r4539, %r4544;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4550, %r673, %r1488, %r4531, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4554, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4555, %r4531, %r4554;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4558, %r4550, %r4555;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4561, %r684, %r1488, %r4542, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4565, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4566, %r4542, %r4565;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4569, %r4561, %r4566;
	// end inline asm
	// begin inline asm
	mov.b32 %r4577, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	mov.b32 %r4588, {%rs1086, %rs1086};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4574, %r673, %r1512, %r4577, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4578, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4579, %r4577, %r4578;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4582, %r4574, %r4579;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4585, %r684, %r1512, %r4588, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4589, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4590, %r4588, %r4589;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4593, %r4585, %r4590;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4596, %r673, %r1534, %r4577, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4600, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4601, %r4577, %r4600;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4604, %r4596, %r4601;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4607, %r684, %r1534, %r4588, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4611, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4612, %r4588, %r4611;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4615, %r4607, %r4612;
	// end inline asm
	// begin inline asm
	mov.b32 %r4623, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	mov.b32 %r4634, {%rs1086, %rs1086};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4620, %r673, %r1558, %r4623, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4624, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4625, %r4623, %r4624;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4628, %r4620, %r4625;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4631, %r684, %r1558, %r4634, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4635, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4636, %r4634, %r4635;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4639, %r4631, %r4636;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4642, %r673, %r1580, %r4623, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4646, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4647, %r4623, %r4646;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4650, %r4642, %r4647;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4653, %r684, %r1580, %r4634, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4657, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4658, %r4634, %r4657;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4661, %r4653, %r4658;
	// end inline asm
	// begin inline asm
	mov.b32 %r4669, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	mov.b32 %r4680, {%rs1086, %rs1086};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4666, %r673, %r1604, %r4669, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4670, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4671, %r4669, %r4670;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4674, %r4666, %r4671;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4677, %r684, %r1604, %r4680, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4681, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4682, %r4680, %r4681;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4685, %r4677, %r4682;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4688, %r673, %r1626, %r4669, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4692, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4693, %r4669, %r4692;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4696, %r4688, %r4693;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4699, %r684, %r1626, %r4680, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4703, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4704, %r4680, %r4703;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4707, %r4699, %r4704;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4710, %r218, %r4536, %r4448;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4714, %r218, %r4547, %r4453;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4718, %r218, %r4558, %r4458;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4722, %r218, %r4569, %r4463;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4726, %r218, %r4582, %r4468;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4730, %r218, %r4593, %r4473;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4734, %r218, %r4604, %r4478;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4738, %r218, %r4615, %r4483;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4742, %r218, %r4628, %r4488;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4746, %r218, %r4639, %r4493;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4750, %r218, %r4650, %r4498;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4754, %r218, %r4661, %r4503;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4758, %r218, %r4674, %r4508;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4762, %r218, %r4685, %r4513;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4766, %r218, %r4696, %r4518;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4770, %r218, %r4707, %r4523;
	// end inline asm
	// begin inline asm
	mov.b32 %r4779, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	mov.b32 %r4790, {%rs1086, %rs1086};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4776, %r673, %r674, %r4779, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4780, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4781, %r4779, %r4780;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4784, %r4776, %r4781;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4787, %r684, %r674, %r4790, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4791, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4792, %r4790, %r4791;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4795, %r4787, %r4792;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4798, %r673, %r696, %r4779, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4802, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4803, %r4779, %r4802;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4806, %r4798, %r4803;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4809, %r684, %r696, %r4790, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4813, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4814, %r4790, %r4813;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4817, %r4809, %r4814;
	// end inline asm
	// begin inline asm
	mov.b32 %r4825, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	mov.b32 %r4836, {%rs1086, %rs1086};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4822, %r673, %r720, %r4825, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4826, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4827, %r4825, %r4826;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4830, %r4822, %r4827;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4833, %r684, %r720, %r4836, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4837, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4838, %r4836, %r4837;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4841, %r4833, %r4838;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4844, %r673, %r742, %r4825, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4848, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4849, %r4825, %r4848;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4852, %r4844, %r4849;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4855, %r684, %r742, %r4836, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4859, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4860, %r4836, %r4859;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4863, %r4855, %r4860;
	// end inline asm
	// begin inline asm
	mov.b32 %r4871, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	mov.b32 %r4882, {%rs1086, %rs1086};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4868, %r673, %r766, %r4871, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4872, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4873, %r4871, %r4872;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4876, %r4868, %r4873;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4879, %r684, %r766, %r4882, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4883, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4884, %r4882, %r4883;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4887, %r4879, %r4884;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4890, %r673, %r788, %r4871, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4894, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4895, %r4871, %r4894;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4898, %r4890, %r4895;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4901, %r684, %r788, %r4882, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4905, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4906, %r4882, %r4905;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4909, %r4901, %r4906;
	// end inline asm
	// begin inline asm
	mov.b32 %r4917, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	mov.b32 %r4928, {%rs1086, %rs1086};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4914, %r673, %r812, %r4917, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4918, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4919, %r4917, %r4918;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4922, %r4914, %r4919;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4925, %r684, %r812, %r4928, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4929, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4930, %r4928, %r4929;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4933, %r4925, %r4930;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4936, %r673, %r834, %r4917, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4940, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4941, %r4917, %r4940;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4944, %r4936, %r4941;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4947, %r684, %r834, %r4928, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4951, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4952, %r4928, %r4951;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4955, %r4947, %r4952;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4958, %r236;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4960, %r4958, %r4784, %r4710;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4964, %r236;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4966, %r4964, %r4795, %r4714;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4970, %r236;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4972, %r4970, %r4806, %r4718;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4976, %r236;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4978, %r4976, %r4817, %r4722;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4982, %r236;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4984, %r4982, %r4830, %r4726;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4988, %r236;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4990, %r4988, %r4841, %r4730;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4994, %r236;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4996, %r4994, %r4852, %r4734;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5000, %r236;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5002, %r5000, %r4863, %r4738;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5006, %r236;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5008, %r5006, %r4876, %r4742;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5012, %r236;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5014, %r5012, %r4887, %r4746;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5018, %r236;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5020, %r5018, %r4898, %r4750;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5024, %r236;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5026, %r5024, %r4909, %r4754;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5030, %r236;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5032, %r5030, %r4922, %r4758;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5036, %r236;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5038, %r5036, %r4933, %r4762;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5042, %r236;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5044, %r5042, %r4944, %r4766;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5048, %r236;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5050, %r5048, %r4955, %r4770;
	// end inline asm
	// begin inline asm
	mov.b32 %r5059, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	mov.b32 %r5070, {%rs1086, %rs1086};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5056, %r673, %r2470, %r5059, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5060, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5061, %r5059, %r5060;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5064, %r5056, %r5061;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5067, %r684, %r2470, %r5070, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5071, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5072, %r5070, %r5071;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5075, %r5067, %r5072;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5078, %r673, %r2492, %r5059, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5082, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5083, %r5059, %r5082;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5086, %r5078, %r5083;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5089, %r684, %r2492, %r5070, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5093, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5094, %r5070, %r5093;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5097, %r5089, %r5094;
	// end inline asm
	// begin inline asm
	mov.b32 %r5105, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	mov.b32 %r5116, {%rs1086, %rs1086};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5102, %r673, %r2516, %r5105, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5106, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5107, %r5105, %r5106;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5110, %r5102, %r5107;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5113, %r684, %r2516, %r5116, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5117, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5118, %r5116, %r5117;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5121, %r5113, %r5118;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5124, %r673, %r2538, %r5105, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5128, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5129, %r5105, %r5128;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5132, %r5124, %r5129;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5135, %r684, %r2538, %r5116, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5139, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5140, %r5116, %r5139;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5143, %r5135, %r5140;
	// end inline asm
	// begin inline asm
	mov.b32 %r5151, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	mov.b32 %r5162, {%rs1086, %rs1086};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5148, %r673, %r2562, %r5151, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5152, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5153, %r5151, %r5152;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5156, %r5148, %r5153;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5159, %r684, %r2562, %r5162, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5163, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5164, %r5162, %r5163;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5167, %r5159, %r5164;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5170, %r673, %r2584, %r5151, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5174, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5175, %r5151, %r5174;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5178, %r5170, %r5175;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5181, %r684, %r2584, %r5162, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5185, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5186, %r5162, %r5185;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5189, %r5181, %r5186;
	// end inline asm
	// begin inline asm
	mov.b32 %r5197, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	mov.b32 %r5208, {%rs1086, %rs1086};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5194, %r673, %r2608, %r5197, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5198, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5199, %r5197, %r5198;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5202, %r5194, %r5199;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5205, %r684, %r2608, %r5208, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5209, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5210, %r5208, %r5209;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5213, %r5205, %r5210;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5216, %r673, %r2630, %r5197, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5220, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5221, %r5197, %r5220;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5224, %r5216, %r5221;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5227, %r684, %r2630, %r5208, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5231, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5232, %r5208, %r5231;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5235, %r5227, %r5232;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5309, %r254, %r5064, %r4960;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5306, %r254, %r5075, %r4966;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5318, %r254, %r5086, %r4972;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5315, %r254, %r5097, %r4978;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5327, %r254, %r5110, %r4984;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5324, %r254, %r5121, %r4990;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5336, %r254, %r5132, %r4996;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5333, %r254, %r5143, %r5002;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5345, %r254, %r5156, %r5008;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5342, %r254, %r5167, %r5014;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5354, %r254, %r5178, %r5020;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5351, %r254, %r5189, %r5026;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5363, %r254, %r5202, %r5032;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5360, %r254, %r5213, %r5038;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5372, %r254, %r5224, %r5044;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5369, %r254, %r5235, %r5050;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5302, %r303;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5304, %r5302, %r5306;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5307, %r300, %r5309, %r5304;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5311, %r303;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5313, %r5311, %r5315;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5316, %r300, %r5318, %r5313;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5320, %r303;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5322, %r5320, %r5324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5325, %r300, %r5327, %r5322;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5329, %r303;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5331, %r5329, %r5333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5334, %r300, %r5336, %r5331;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5338, %r303;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5340, %r5338, %r5342;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5343, %r300, %r5345, %r5340;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5347, %r303;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5349, %r5347, %r5351;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5352, %r300, %r5354, %r5349;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5356, %r303;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5358, %r5356, %r5360;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5361, %r300, %r5363, %r5358;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5365, %r303;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5367, %r5365, %r5369;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5370, %r300, %r5372, %r5367;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5374, %r303, %r5309;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5377, %r300, %r5306, %r5374;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5381, %r303, %r5318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5384, %r300, %r5315, %r5381;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5388, %r303, %r5327;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5391, %r300, %r5324, %r5388;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5395, %r303, %r5336;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5398, %r300, %r5333, %r5395;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5402, %r303, %r5345;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5405, %r300, %r5342, %r5402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5409, %r303, %r5354;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5412, %r300, %r5351, %r5409;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5416, %r303, %r5363;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5419, %r300, %r5360, %r5416;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5423, %r303, %r5372;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5426, %r300, %r5369, %r5423;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5517, %r5514}, {%r347, %r353, %r350, %r356}, {%r5307, %r5377}, {%r1846, %r1846};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5526, %r5523}, {%r347, %r353, %r350, %r356}, {%r5316, %r5384}, {%r1846, %r1846};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5535, %r5532}, {%r347, %r353, %r350, %r356}, {%r5325, %r5391}, {%r1846, %r1846};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5544, %r5541}, {%r347, %r353, %r350, %r356}, {%r5334, %r5398}, {%r1846, %r1846};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5553, %r5550}, {%r347, %r353, %r350, %r356}, {%r5343, %r5405}, {%r1846, %r1846};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5562, %r5559}, {%r347, %r353, %r350, %r356}, {%r5352, %r5412}, {%r1846, %r1846};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5571, %r5568}, {%r347, %r353, %r350, %r356}, {%r5361, %r5419}, {%r1846, %r1846};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5580, %r5577}, {%r347, %r353, %r350, %r356}, {%r5370, %r5426}, {%r1846, %r1846};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5510, %r394;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5512, %r5510, %r5514;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5515, %r391, %r5517, %r5512;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5519, %r394;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5521, %r5519, %r5523;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5524, %r391, %r5526, %r5521;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5528, %r394;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5530, %r5528, %r5532;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5533, %r391, %r5535, %r5530;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5537, %r394;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5539, %r5537, %r5541;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5542, %r391, %r5544, %r5539;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5546, %r394;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5548, %r5546, %r5550;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5551, %r391, %r5553, %r5548;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5555, %r394;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5557, %r5555, %r5559;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5560, %r391, %r5562, %r5557;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5564, %r394;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5566, %r5564, %r5568;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5569, %r391, %r5571, %r5566;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5573, %r394;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5575, %r5573, %r5577;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5578, %r391, %r5580, %r5575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5582, %r394, %r5517;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5585, %r391, %r5514, %r5582;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5589, %r394, %r5526;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5592, %r391, %r5523, %r5589;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5596, %r394, %r5535;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5599, %r391, %r5532, %r5596;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5603, %r394, %r5544;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5606, %r391, %r5541, %r5603;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5610, %r394, %r5553;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5613, %r391, %r5550, %r5610;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5617, %r394, %r5562;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5620, %r391, %r5559, %r5617;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5624, %r394, %r5571;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5627, %r391, %r5568, %r5624;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5631, %r394, %r5580;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5634, %r391, %r5577, %r5631;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5638, %r5639}, {%r425, %r431, %r428, %r434}, {%r5515, %r5585}, {%r1846, %r1846};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5648, %r5649}, {%r425, %r431, %r428, %r434}, {%r5524, %r5592}, {%r1846, %r1846};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5658, %r5659}, {%r425, %r431, %r428, %r434}, {%r5533, %r5599}, {%r1846, %r1846};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5668, %r5669}, {%r425, %r431, %r428, %r434}, {%r5542, %r5606}, {%r1846, %r1846};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5678, %r5679}, {%r425, %r431, %r428, %r434}, {%r5551, %r5613}, {%r1846, %r1846};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5688, %r5689}, {%r425, %r431, %r428, %r434}, {%r5560, %r5620}, {%r1846, %r1846};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5698, %r5699}, {%r425, %r431, %r428, %r434}, {%r5569, %r5627}, {%r1846, %r1846};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5708, %r5709}, {%r425, %r431, %r428, %r434}, {%r5578, %r5634}, {%r1846, %r1846};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5718, %r15, %r5638;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5721, %r15, %r5639;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5724, %r15, %r5648;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5727, %r15, %r5649;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5730, %r15, %r5658;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5733, %r15, %r5659;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5736, %r15, %r5668;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5739, %r15, %r5669;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5742, %r15, %r5678;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5745, %r15, %r5679;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5748, %r15, %r5688;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5751, %r15, %r5689;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5754, %r15, %r5698;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5757, %r15, %r5699;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5760, %r15, %r5708;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5763, %r15, %r5709;
	// end inline asm
	// begin inline asm
	mov.b32 %r5766, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	mov.b32 %r5767, {%rs209, %rs209};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5768, %r5718, %r5766;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5771, %r5768, %r5767;
	// end inline asm
	// begin inline asm
	mov.b32 %r5774, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	mov.b32 %r5775, {%rs209, %rs209};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5776, %r5721, %r5774;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5779, %r5776, %r5775;
	// end inline asm
	// begin inline asm
	mov.b32 %r5782, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	mov.b32 %r5783, {%rs209, %rs209};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5784, %r5724, %r5782;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5787, %r5784, %r5783;
	// end inline asm
	// begin inline asm
	mov.b32 %r5790, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	mov.b32 %r5791, {%rs209, %rs209};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5792, %r5727, %r5790;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5795, %r5792, %r5791;
	// end inline asm
	// begin inline asm
	mov.b32 %r5798, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	mov.b32 %r5799, {%rs209, %rs209};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5800, %r5730, %r5798;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5803, %r5800, %r5799;
	// end inline asm
	// begin inline asm
	mov.b32 %r5806, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	mov.b32 %r5807, {%rs209, %rs209};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5808, %r5733, %r5806;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5811, %r5808, %r5807;
	// end inline asm
	// begin inline asm
	mov.b32 %r5814, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	mov.b32 %r5815, {%rs209, %rs209};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5816, %r5736, %r5814;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5819, %r5816, %r5815;
	// end inline asm
	// begin inline asm
	mov.b32 %r5822, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	mov.b32 %r5823, {%rs209, %rs209};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5824, %r5739, %r5822;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5827, %r5824, %r5823;
	// end inline asm
	// begin inline asm
	mov.b32 %r5830, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	mov.b32 %r5831, {%rs209, %rs209};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5832, %r5742, %r5830;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5835, %r5832, %r5831;
	// end inline asm
	// begin inline asm
	mov.b32 %r5838, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	mov.b32 %r5839, {%rs209, %rs209};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5840, %r5745, %r5838;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5843, %r5840, %r5839;
	// end inline asm
	// begin inline asm
	mov.b32 %r5846, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	mov.b32 %r5847, {%rs209, %rs209};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5848, %r5748, %r5846;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5851, %r5848, %r5847;
	// end inline asm
	// begin inline asm
	mov.b32 %r5854, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	mov.b32 %r5855, {%rs209, %rs209};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5856, %r5751, %r5854;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5859, %r5856, %r5855;
	// end inline asm
	// begin inline asm
	mov.b32 %r5862, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	mov.b32 %r5863, {%rs209, %rs209};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5864, %r5754, %r5862;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5867, %r5864, %r5863;
	// end inline asm
	// begin inline asm
	mov.b32 %r5870, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	mov.b32 %r5871, {%rs209, %rs209};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5872, %r5757, %r5870;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5875, %r5872, %r5871;
	// end inline asm
	// begin inline asm
	mov.b32 %r5878, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	mov.b32 %r5879, {%rs209, %rs209};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5880, %r5760, %r5878;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5883, %r5880, %r5879;
	// end inline asm
	// begin inline asm
	mov.b32 %r5886, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	mov.b32 %r5887, {%rs209, %rs209};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5888, %r5763, %r5886;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5891, %r5888, %r5887;
	// end inline asm
	// begin inline asm
	mov.b32 %r5897, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	mov.b32 %r5895, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5896, %r5897, %r5895;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5899, %r5771, %r5896;
	// end inline asm
	// begin inline asm
	mov.b32 %r5902, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5903, %r5897, %r5902;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5906, %r5779, %r5903;
	// end inline asm
	// begin inline asm
	mov.b32 %r5909, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5910, %r5897, %r5909;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5913, %r5787, %r5910;
	// end inline asm
	// begin inline asm
	mov.b32 %r5916, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5917, %r5897, %r5916;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5920, %r5795, %r5917;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5923, %r5899, %r5913, %r2334;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5927, %r5906, %r5920, %r2334;
	// end inline asm
	shl.b32 	%r5934, %r5927, 4;
	// begin inline asm
	lop3.b32 %r5931, %r2340, %r5923, %r5934, 202;
	// end inline asm
	xor.b32  	%r7866, %r5931, -2004318072;
	// begin inline asm
	mov.b32 %r5938, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	mov.b32 %r5936, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5937, %r5938, %r5936;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5940, %r5803, %r5937;
	// end inline asm
	// begin inline asm
	mov.b32 %r5943, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5944, %r5938, %r5943;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5947, %r5811, %r5944;
	// end inline asm
	// begin inline asm
	mov.b32 %r5950, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5951, %r5938, %r5950;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5954, %r5819, %r5951;
	// end inline asm
	// begin inline asm
	mov.b32 %r5957, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5958, %r5938, %r5957;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5961, %r5827, %r5958;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5964, %r5940, %r5954, %r2334;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5968, %r5947, %r5961, %r2334;
	// end inline asm
	shl.b32 	%r5975, %r5968, 4;
	// begin inline asm
	lop3.b32 %r5972, %r2340, %r5964, %r5975, 202;
	// end inline asm
	xor.b32  	%r7867, %r5972, -2004318072;
	// begin inline asm
	mov.b32 %r5979, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	mov.b32 %r5977, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5978, %r5979, %r5977;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5981, %r5835, %r5978;
	// end inline asm
	// begin inline asm
	mov.b32 %r5984, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5985, %r5979, %r5984;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5988, %r5843, %r5985;
	// end inline asm
	// begin inline asm
	mov.b32 %r5991, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5992, %r5979, %r5991;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5995, %r5851, %r5992;
	// end inline asm
	// begin inline asm
	mov.b32 %r5998, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5999, %r5979, %r5998;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6002, %r5859, %r5999;
	// end inline asm
	// begin inline asm
	prmt.b32 %r6005, %r5981, %r5995, %r2334;
	// end inline asm
	// begin inline asm
	prmt.b32 %r6009, %r5988, %r6002, %r2334;
	// end inline asm
	shl.b32 	%r6016, %r6009, 4;
	// begin inline asm
	lop3.b32 %r6013, %r2340, %r6005, %r6016, 202;
	// end inline asm
	xor.b32  	%r7868, %r6013, -2004318072;
	// begin inline asm
	mov.b32 %r6020, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	mov.b32 %r6018, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6019, %r6020, %r6018;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6022, %r5867, %r6019;
	// end inline asm
	// begin inline asm
	mov.b32 %r6025, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6026, %r6020, %r6025;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6029, %r5875, %r6026;
	// end inline asm
	// begin inline asm
	mov.b32 %r6032, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6033, %r6020, %r6032;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6036, %r5883, %r6033;
	// end inline asm
	// begin inline asm
	mov.b32 %r6039, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6040, %r6020, %r6039;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6043, %r5891, %r6040;
	// end inline asm
	// begin inline asm
	prmt.b32 %r6046, %r6022, %r6036, %r2334;
	// end inline asm
	// begin inline asm
	prmt.b32 %r6050, %r6029, %r6043, %r2334;
	// end inline asm
	shl.b32 	%r6057, %r6050, 4;
	// begin inline asm
	lop3.b32 %r6054, %r2340, %r6046, %r6057, 202;
	// end inline asm
	xor.b32  	%r7869, %r6054, -2004318072;
	st.shared.u32 	[%rd123], %r7866;
	st.shared.u32 	[%rd124], %r7867;
	st.shared.u32 	[%rd125], %r7868;
	st.shared.u32 	[%rd126], %r7869;
	ld.shared.u32 	%r8011, [%rd119];
	ld.shared.u32 	%r8012, [%rd120];
	ld.shared.u32 	%r8017, [%rd121];
	ld.shared.u32 	%r8018, [%rd122];
	// begin inline asm
	mov.b32 %r6063, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	mov.b32 %r6074, {%rs1086, %rs1086};
	// end inline asm
	xor.b32  	%r6062, %r8011, -2004318072;
	// begin inline asm
	lop3.b32 %r6060, %r673, %r6062, %r6063, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6064, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6065, %r6063, %r6064;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6068, %r6060, %r6065;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6071, %r684, %r6062, %r6074, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6075, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6076, %r6074, %r6075;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6079, %r6071, %r6076;
	// end inline asm
	shr.u32 	%r6084, %r6062, 8;
	// begin inline asm
	lop3.b32 %r6082, %r673, %r6084, %r6063, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6086, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6087, %r6063, %r6086;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6090, %r6082, %r6087;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6093, %r684, %r6084, %r6074, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6097, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6098, %r6074, %r6097;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6101, %r6093, %r6098;
	// end inline asm
	// begin inline asm
	mov.b32 %r6109, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	mov.b32 %r6120, {%rs1086, %rs1086};
	// end inline asm
	xor.b32  	%r6108, %r8012, -2004318072;
	// begin inline asm
	lop3.b32 %r6106, %r673, %r6108, %r6109, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6110, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6111, %r6109, %r6110;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6114, %r6106, %r6111;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6117, %r684, %r6108, %r6120, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6121, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6122, %r6120, %r6121;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6125, %r6117, %r6122;
	// end inline asm
	shr.u32 	%r6130, %r6108, 8;
	// begin inline asm
	lop3.b32 %r6128, %r673, %r6130, %r6109, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6132, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6133, %r6109, %r6132;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6136, %r6128, %r6133;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6139, %r684, %r6130, %r6120, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6143, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6144, %r6120, %r6143;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6147, %r6139, %r6144;
	// end inline asm
	// begin inline asm
	mov.b32 %r6155, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	mov.b32 %r6166, {%rs1086, %rs1086};
	// end inline asm
	xor.b32  	%r6154, %r8017, -2004318072;
	// begin inline asm
	lop3.b32 %r6152, %r673, %r6154, %r6155, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6156, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6157, %r6155, %r6156;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6160, %r6152, %r6157;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6163, %r684, %r6154, %r6166, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6167, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6168, %r6166, %r6167;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6171, %r6163, %r6168;
	// end inline asm
	shr.u32 	%r6176, %r6154, 8;
	// begin inline asm
	lop3.b32 %r6174, %r673, %r6176, %r6155, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6178, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6179, %r6155, %r6178;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6182, %r6174, %r6179;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6185, %r684, %r6176, %r6166, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6189, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6190, %r6166, %r6189;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6193, %r6185, %r6190;
	// end inline asm
	// begin inline asm
	mov.b32 %r6201, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	mov.b32 %r6212, {%rs1086, %rs1086};
	// end inline asm
	xor.b32  	%r6200, %r8018, -2004318072;
	// begin inline asm
	lop3.b32 %r6198, %r673, %r6200, %r6201, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6202, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6203, %r6201, %r6202;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6206, %r6198, %r6203;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6209, %r684, %r6200, %r6212, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6213, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6214, %r6212, %r6213;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6217, %r6209, %r6214;
	// end inline asm
	shr.u32 	%r6222, %r6200, 8;
	// begin inline asm
	lop3.b32 %r6220, %r673, %r6222, %r6201, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6224, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6225, %r6201, %r6224;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6228, %r6220, %r6225;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6231, %r684, %r6222, %r6212, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6235, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6236, %r6212, %r6235;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6239, %r6231, %r6236;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6242, %r272;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6244, %r6242, %r6068;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6247, %r272;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6249, %r6247, %r6079;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6252, %r272;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6254, %r6252, %r6090;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6257, %r272;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6259, %r6257, %r6101;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6262, %r272;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6264, %r6262, %r6114;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6267, %r272;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6269, %r6267, %r6125;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6272, %r272;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6274, %r6272, %r6136;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6277, %r272;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6279, %r6277, %r6147;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6282, %r272;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6284, %r6282, %r6160;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6287, %r272;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6289, %r6287, %r6171;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6292, %r272;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6294, %r6292, %r6182;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6297, %r272;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6299, %r6297, %r6193;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6302, %r272;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6304, %r6302, %r6206;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6307, %r272;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6309, %r6307, %r6217;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6312, %r272;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6314, %r6312, %r6228;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6317, %r272;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6319, %r6317, %r6239;
	// end inline asm
	// begin inline asm
	mov.b32 %r6327, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	mov.b32 %r6338, {%rs1086, %rs1086};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6324, %r673, %r674, %r6327, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6328, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6329, %r6327, %r6328;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6332, %r6324, %r6329;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6335, %r684, %r674, %r6338, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6339, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6340, %r6338, %r6339;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6343, %r6335, %r6340;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6346, %r673, %r696, %r6327, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6350, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6351, %r6327, %r6350;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6354, %r6346, %r6351;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6357, %r684, %r696, %r6338, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6361, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6362, %r6338, %r6361;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6365, %r6357, %r6362;
	// end inline asm
	// begin inline asm
	mov.b32 %r6373, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	mov.b32 %r6384, {%rs1086, %rs1086};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6370, %r673, %r720, %r6373, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6374, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6375, %r6373, %r6374;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6378, %r6370, %r6375;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6381, %r684, %r720, %r6384, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6385, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6386, %r6384, %r6385;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6389, %r6381, %r6386;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6392, %r673, %r742, %r6373, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6396, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6397, %r6373, %r6396;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6400, %r6392, %r6397;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6403, %r684, %r742, %r6384, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6407, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6408, %r6384, %r6407;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6411, %r6403, %r6408;
	// end inline asm
	// begin inline asm
	mov.b32 %r6419, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	mov.b32 %r6430, {%rs1086, %rs1086};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6416, %r673, %r766, %r6419, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6420, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6421, %r6419, %r6420;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6424, %r6416, %r6421;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6427, %r684, %r766, %r6430, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6431, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6432, %r6430, %r6431;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6435, %r6427, %r6432;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6438, %r673, %r788, %r6419, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6442, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6443, %r6419, %r6442;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6446, %r6438, %r6443;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6449, %r684, %r788, %r6430, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6453, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6454, %r6430, %r6453;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6457, %r6449, %r6454;
	// end inline asm
	// begin inline asm
	mov.b32 %r6465, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	mov.b32 %r6476, {%rs1086, %rs1086};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6462, %r673, %r812, %r6465, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6466, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6467, %r6465, %r6466;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6470, %r6462, %r6467;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6473, %r684, %r812, %r6476, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6477, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6478, %r6476, %r6477;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6481, %r6473, %r6478;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6484, %r673, %r834, %r6465, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6488, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6489, %r6465, %r6488;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6492, %r6484, %r6489;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6495, %r684, %r834, %r6476, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6499, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6500, %r6476, %r6499;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6503, %r6495, %r6500;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6506, %r218, %r6332, %r6244;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6510, %r218, %r6343, %r6249;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6514, %r218, %r6354, %r6254;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6518, %r218, %r6365, %r6259;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6522, %r218, %r6378, %r6264;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6526, %r218, %r6389, %r6269;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6530, %r218, %r6400, %r6274;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6534, %r218, %r6411, %r6279;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6538, %r218, %r6424, %r6284;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6542, %r218, %r6435, %r6289;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6546, %r218, %r6446, %r6294;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6550, %r218, %r6457, %r6299;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6554, %r218, %r6470, %r6304;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6558, %r218, %r6481, %r6309;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6562, %r218, %r6492, %r6314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6566, %r218, %r6503, %r6319;
	// end inline asm
	// begin inline asm
	mov.b32 %r6575, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	mov.b32 %r6586, {%rs1086, %rs1086};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6572, %r673, %r2470, %r6575, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6576, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6577, %r6575, %r6576;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6580, %r6572, %r6577;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6583, %r684, %r2470, %r6586, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6587, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6588, %r6586, %r6587;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6591, %r6583, %r6588;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6594, %r673, %r2492, %r6575, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6598, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6599, %r6575, %r6598;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6602, %r6594, %r6599;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6605, %r684, %r2492, %r6586, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6609, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6610, %r6586, %r6609;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6613, %r6605, %r6610;
	// end inline asm
	// begin inline asm
	mov.b32 %r6621, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	mov.b32 %r6632, {%rs1086, %rs1086};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6618, %r673, %r2516, %r6621, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6622, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6623, %r6621, %r6622;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6626, %r6618, %r6623;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6629, %r684, %r2516, %r6632, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6633, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6634, %r6632, %r6633;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6637, %r6629, %r6634;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6640, %r673, %r2538, %r6621, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6644, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6645, %r6621, %r6644;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6648, %r6640, %r6645;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6651, %r684, %r2538, %r6632, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6655, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6656, %r6632, %r6655;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6659, %r6651, %r6656;
	// end inline asm
	// begin inline asm
	mov.b32 %r6667, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	mov.b32 %r6678, {%rs1086, %rs1086};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6664, %r673, %r2562, %r6667, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6668, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6669, %r6667, %r6668;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6672, %r6664, %r6669;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6675, %r684, %r2562, %r6678, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6679, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6680, %r6678, %r6679;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6683, %r6675, %r6680;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6686, %r673, %r2584, %r6667, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6690, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6691, %r6667, %r6690;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6694, %r6686, %r6691;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6697, %r684, %r2584, %r6678, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6701, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6702, %r6678, %r6701;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6705, %r6697, %r6702;
	// end inline asm
	// begin inline asm
	mov.b32 %r6713, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	mov.b32 %r6724, {%rs1086, %rs1086};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6710, %r673, %r2608, %r6713, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6714, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6715, %r6713, %r6714;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6718, %r6710, %r6715;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6721, %r684, %r2608, %r6724, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6725, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6726, %r6724, %r6725;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6729, %r6721, %r6726;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6732, %r673, %r2630, %r6713, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6736, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6737, %r6713, %r6736;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6740, %r6732, %r6737;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6743, %r684, %r2630, %r6724, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6747, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6748, %r6724, %r6747;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6751, %r6743, %r6748;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6754, %r236;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6756, %r6754, %r6580, %r6506;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6760, %r236;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6762, %r6760, %r6591, %r6510;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6766, %r236;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6768, %r6766, %r6602, %r6514;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6772, %r236;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6774, %r6772, %r6613, %r6518;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6778, %r236;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6780, %r6778, %r6626, %r6522;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6784, %r236;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6786, %r6784, %r6637, %r6526;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6790, %r236;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6792, %r6790, %r6648, %r6530;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6796, %r236;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6798, %r6796, %r6659, %r6534;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6802, %r236;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6804, %r6802, %r6672, %r6538;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6808, %r236;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6810, %r6808, %r6683, %r6542;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6814, %r236;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6816, %r6814, %r6694, %r6546;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6820, %r236;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6822, %r6820, %r6705, %r6550;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6826, %r236;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6828, %r6826, %r6718, %r6554;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6832, %r236;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6834, %r6832, %r6729, %r6558;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6838, %r236;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6840, %r6838, %r6740, %r6562;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6844, %r236;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6846, %r6844, %r6751, %r6566;
	// end inline asm
	// begin inline asm
	mov.b32 %r6855, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	mov.b32 %r6866, {%rs1086, %rs1086};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6852, %r673, %r4266, %r6855, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6856, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6857, %r6855, %r6856;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6860, %r6852, %r6857;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6863, %r684, %r4266, %r6866, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6867, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6868, %r6866, %r6867;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6871, %r6863, %r6868;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6874, %r673, %r4288, %r6855, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6878, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6879, %r6855, %r6878;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6882, %r6874, %r6879;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6885, %r684, %r4288, %r6866, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6889, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6890, %r6866, %r6889;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6893, %r6885, %r6890;
	// end inline asm
	// begin inline asm
	mov.b32 %r6901, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	mov.b32 %r6912, {%rs1086, %rs1086};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6898, %r673, %r4312, %r6901, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6902, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6903, %r6901, %r6902;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6906, %r6898, %r6903;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6909, %r684, %r4312, %r6912, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6913, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6914, %r6912, %r6913;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6917, %r6909, %r6914;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6920, %r673, %r4334, %r6901, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6924, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6925, %r6901, %r6924;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6928, %r6920, %r6925;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6931, %r684, %r4334, %r6912, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6935, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6936, %r6912, %r6935;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6939, %r6931, %r6936;
	// end inline asm
	// begin inline asm
	mov.b32 %r6947, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	mov.b32 %r6958, {%rs1086, %rs1086};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6944, %r673, %r4358, %r6947, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6948, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6949, %r6947, %r6948;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6952, %r6944, %r6949;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6955, %r684, %r4358, %r6958, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6959, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6960, %r6958, %r6959;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6963, %r6955, %r6960;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6966, %r673, %r4380, %r6947, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6970, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6971, %r6947, %r6970;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6974, %r6966, %r6971;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6977, %r684, %r4380, %r6958, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6981, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6982, %r6958, %r6981;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6985, %r6977, %r6982;
	// end inline asm
	// begin inline asm
	mov.b32 %r6993, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	mov.b32 %r7004, {%rs1086, %rs1086};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6990, %r673, %r4404, %r6993, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6994, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6995, %r6993, %r6994;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6998, %r6990, %r6995;
	// end inline asm
	// begin inline asm
	lop3.b32 %r7001, %r684, %r4404, %r7004, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r7005, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7006, %r7004, %r7005;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7009, %r7001, %r7006;
	// end inline asm
	// begin inline asm
	lop3.b32 %r7012, %r673, %r4426, %r6993, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r7016, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7017, %r6993, %r7016;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7020, %r7012, %r7017;
	// end inline asm
	// begin inline asm
	lop3.b32 %r7023, %r684, %r4426, %r7004, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r7027, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7028, %r7004, %r7027;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7031, %r7023, %r7028;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7105, %r254, %r6860, %r6756;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7102, %r254, %r6871, %r6762;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7114, %r254, %r6882, %r6768;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7111, %r254, %r6893, %r6774;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7123, %r254, %r6906, %r6780;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7120, %r254, %r6917, %r6786;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7132, %r254, %r6928, %r6792;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7129, %r254, %r6939, %r6798;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7141, %r254, %r6952, %r6804;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7138, %r254, %r6963, %r6810;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7150, %r254, %r6974, %r6816;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7147, %r254, %r6985, %r6822;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7159, %r254, %r6998, %r6828;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7156, %r254, %r7009, %r6834;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7168, %r254, %r7020, %r6840;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7165, %r254, %r7031, %r6846;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7098, %r303;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7100, %r7098, %r7102;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7103, %r300, %r7105, %r7100;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7107, %r303;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7109, %r7107, %r7111;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7112, %r300, %r7114, %r7109;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7116, %r303;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7118, %r7116, %r7120;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7121, %r300, %r7123, %r7118;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7125, %r303;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7127, %r7125, %r7129;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7130, %r300, %r7132, %r7127;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7134, %r303;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7136, %r7134, %r7138;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7139, %r300, %r7141, %r7136;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7143, %r303;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7145, %r7143, %r7147;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7148, %r300, %r7150, %r7145;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7152, %r303;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7154, %r7152, %r7156;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7157, %r300, %r7159, %r7154;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7161, %r303;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7163, %r7161, %r7165;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7166, %r300, %r7168, %r7163;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7170, %r303, %r7105;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7173, %r300, %r7102, %r7170;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7177, %r303, %r7114;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7180, %r300, %r7111, %r7177;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7184, %r303, %r7123;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7187, %r300, %r7120, %r7184;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7191, %r303, %r7132;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7194, %r300, %r7129, %r7191;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7198, %r303, %r7141;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7201, %r300, %r7138, %r7198;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7205, %r303, %r7150;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7208, %r300, %r7147, %r7205;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7212, %r303, %r7159;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7215, %r300, %r7156, %r7212;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7219, %r303, %r7168;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7222, %r300, %r7165, %r7219;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7313, %r7310}, {%r347, %r353, %r350, %r356}, {%r7103, %r7173}, {%r1846, %r1846};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7322, %r7319}, {%r347, %r353, %r350, %r356}, {%r7112, %r7180}, {%r1846, %r1846};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7331, %r7328}, {%r347, %r353, %r350, %r356}, {%r7121, %r7187}, {%r1846, %r1846};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7340, %r7337}, {%r347, %r353, %r350, %r356}, {%r7130, %r7194}, {%r1846, %r1846};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7349, %r7346}, {%r347, %r353, %r350, %r356}, {%r7139, %r7201}, {%r1846, %r1846};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7358, %r7355}, {%r347, %r353, %r350, %r356}, {%r7148, %r7208}, {%r1846, %r1846};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7367, %r7364}, {%r347, %r353, %r350, %r356}, {%r7157, %r7215}, {%r1846, %r1846};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7376, %r7373}, {%r347, %r353, %r350, %r356}, {%r7166, %r7222}, {%r1846, %r1846};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7306, %r394;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7308, %r7306, %r7310;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7311, %r391, %r7313, %r7308;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7315, %r394;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7317, %r7315, %r7319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7320, %r391, %r7322, %r7317;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7324, %r394;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7326, %r7324, %r7328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7329, %r391, %r7331, %r7326;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7333, %r394;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7335, %r7333, %r7337;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7338, %r391, %r7340, %r7335;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7342, %r394;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7344, %r7342, %r7346;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7347, %r391, %r7349, %r7344;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7351, %r394;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7353, %r7351, %r7355;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7356, %r391, %r7358, %r7353;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7360, %r394;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7362, %r7360, %r7364;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7365, %r391, %r7367, %r7362;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7369, %r394;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7371, %r7369, %r7373;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7374, %r391, %r7376, %r7371;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7378, %r394, %r7313;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7381, %r391, %r7310, %r7378;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7385, %r394, %r7322;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7388, %r391, %r7319, %r7385;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7392, %r394, %r7331;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7395, %r391, %r7328, %r7392;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7399, %r394, %r7340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7402, %r391, %r7337, %r7399;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7406, %r394, %r7349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7409, %r391, %r7346, %r7406;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7413, %r394, %r7358;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7416, %r391, %r7355, %r7413;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7420, %r394, %r7367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7423, %r391, %r7364, %r7420;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7427, %r394, %r7376;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7430, %r391, %r7373, %r7427;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7434, %r7435}, {%r425, %r431, %r428, %r434}, {%r7311, %r7381}, {%r1846, %r1846};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7444, %r7445}, {%r425, %r431, %r428, %r434}, {%r7320, %r7388}, {%r1846, %r1846};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7454, %r7455}, {%r425, %r431, %r428, %r434}, {%r7329, %r7395}, {%r1846, %r1846};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7464, %r7465}, {%r425, %r431, %r428, %r434}, {%r7338, %r7402}, {%r1846, %r1846};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7474, %r7475}, {%r425, %r431, %r428, %r434}, {%r7347, %r7409}, {%r1846, %r1846};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7484, %r7485}, {%r425, %r431, %r428, %r434}, {%r7356, %r7416}, {%r1846, %r1846};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7494, %r7495}, {%r425, %r431, %r428, %r434}, {%r7365, %r7423}, {%r1846, %r1846};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7504, %r7505}, {%r425, %r431, %r428, %r434}, {%r7374, %r7430}, {%r1846, %r1846};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7514, %r15, %r7434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7517, %r15, %r7435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7520, %r15, %r7444;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7523, %r15, %r7445;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7526, %r15, %r7454;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7529, %r15, %r7455;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7532, %r15, %r7464;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7535, %r15, %r7465;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7538, %r15, %r7474;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7541, %r15, %r7475;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7544, %r15, %r7484;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7547, %r15, %r7485;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7550, %r15, %r7494;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7553, %r15, %r7495;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7556, %r15, %r7504;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7559, %r15, %r7505;
	// end inline asm
	// begin inline asm
	mov.b32 %r7562, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	mov.b32 %r7563, {%rs209, %rs209};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7564, %r7514, %r7562;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7567, %r7564, %r7563;
	// end inline asm
	// begin inline asm
	mov.b32 %r7570, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	mov.b32 %r7571, {%rs209, %rs209};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7572, %r7517, %r7570;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7575, %r7572, %r7571;
	// end inline asm
	// begin inline asm
	mov.b32 %r7578, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	mov.b32 %r7579, {%rs209, %rs209};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7580, %r7520, %r7578;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7583, %r7580, %r7579;
	// end inline asm
	// begin inline asm
	mov.b32 %r7586, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	mov.b32 %r7587, {%rs209, %rs209};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7588, %r7523, %r7586;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7591, %r7588, %r7587;
	// end inline asm
	// begin inline asm
	mov.b32 %r7594, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	mov.b32 %r7595, {%rs209, %rs209};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7596, %r7526, %r7594;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7599, %r7596, %r7595;
	// end inline asm
	// begin inline asm
	mov.b32 %r7602, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	mov.b32 %r7603, {%rs209, %rs209};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7604, %r7529, %r7602;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7607, %r7604, %r7603;
	// end inline asm
	// begin inline asm
	mov.b32 %r7610, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	mov.b32 %r7611, {%rs209, %rs209};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7612, %r7532, %r7610;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7615, %r7612, %r7611;
	// end inline asm
	// begin inline asm
	mov.b32 %r7618, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	mov.b32 %r7619, {%rs209, %rs209};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7620, %r7535, %r7618;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7623, %r7620, %r7619;
	// end inline asm
	// begin inline asm
	mov.b32 %r7626, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	mov.b32 %r7627, {%rs209, %rs209};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7628, %r7538, %r7626;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7631, %r7628, %r7627;
	// end inline asm
	// begin inline asm
	mov.b32 %r7634, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	mov.b32 %r7635, {%rs209, %rs209};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7636, %r7541, %r7634;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7639, %r7636, %r7635;
	// end inline asm
	// begin inline asm
	mov.b32 %r7642, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	mov.b32 %r7643, {%rs209, %rs209};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7644, %r7544, %r7642;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7647, %r7644, %r7643;
	// end inline asm
	// begin inline asm
	mov.b32 %r7650, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	mov.b32 %r7651, {%rs209, %rs209};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7652, %r7547, %r7650;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7655, %r7652, %r7651;
	// end inline asm
	// begin inline asm
	mov.b32 %r7658, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	mov.b32 %r7659, {%rs209, %rs209};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7660, %r7550, %r7658;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7663, %r7660, %r7659;
	// end inline asm
	// begin inline asm
	mov.b32 %r7666, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	mov.b32 %r7667, {%rs209, %rs209};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7668, %r7553, %r7666;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7671, %r7668, %r7667;
	// end inline asm
	// begin inline asm
	mov.b32 %r7674, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	mov.b32 %r7675, {%rs209, %rs209};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7676, %r7556, %r7674;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7679, %r7676, %r7675;
	// end inline asm
	// begin inline asm
	mov.b32 %r7682, {%rs207, %rs207};
	// end inline asm
	// begin inline asm
	mov.b32 %r7683, {%rs209, %rs209};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7684, %r7559, %r7682;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7687, %r7684, %r7683;
	// end inline asm
	// begin inline asm
	mov.b32 %r7693, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	mov.b32 %r7691, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7692, %r7693, %r7691;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7695, %r7567, %r7692;
	// end inline asm
	// begin inline asm
	mov.b32 %r7698, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7699, %r7693, %r7698;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7702, %r7575, %r7699;
	// end inline asm
	// begin inline asm
	mov.b32 %r7705, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7706, %r7693, %r7705;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7709, %r7583, %r7706;
	// end inline asm
	// begin inline asm
	mov.b32 %r7712, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7713, %r7693, %r7712;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7716, %r7591, %r7713;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7719, %r7695, %r7709, %r2334;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7723, %r7702, %r7716, %r2334;
	// end inline asm
	shl.b32 	%r7730, %r7723, 4;
	// begin inline asm
	lop3.b32 %r7727, %r2340, %r7719, %r7730, 202;
	// end inline asm
	xor.b32  	%r7870, %r7727, -2004318072;
	// begin inline asm
	mov.b32 %r7734, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	mov.b32 %r7732, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7733, %r7734, %r7732;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7736, %r7599, %r7733;
	// end inline asm
	// begin inline asm
	mov.b32 %r7739, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7740, %r7734, %r7739;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7743, %r7607, %r7740;
	// end inline asm
	// begin inline asm
	mov.b32 %r7746, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7747, %r7734, %r7746;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7750, %r7615, %r7747;
	// end inline asm
	// begin inline asm
	mov.b32 %r7753, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7754, %r7734, %r7753;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7757, %r7623, %r7754;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7760, %r7736, %r7750, %r2334;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7764, %r7743, %r7757, %r2334;
	// end inline asm
	shl.b32 	%r7771, %r7764, 4;
	// begin inline asm
	lop3.b32 %r7768, %r2340, %r7760, %r7771, 202;
	// end inline asm
	xor.b32  	%r7871, %r7768, -2004318072;
	// begin inline asm
	mov.b32 %r7775, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	mov.b32 %r7773, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7774, %r7775, %r7773;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7777, %r7631, %r7774;
	// end inline asm
	// begin inline asm
	mov.b32 %r7780, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7781, %r7775, %r7780;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7784, %r7639, %r7781;
	// end inline asm
	// begin inline asm
	mov.b32 %r7787, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7788, %r7775, %r7787;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7791, %r7647, %r7788;
	// end inline asm
	// begin inline asm
	mov.b32 %r7794, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7795, %r7775, %r7794;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7798, %r7655, %r7795;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7801, %r7777, %r7791, %r2334;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7805, %r7784, %r7798, %r2334;
	// end inline asm
	shl.b32 	%r7812, %r7805, 4;
	// begin inline asm
	lop3.b32 %r7809, %r2340, %r7801, %r7812, 202;
	// end inline asm
	xor.b32  	%r7872, %r7809, -2004318072;
	// begin inline asm
	mov.b32 %r7816, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	mov.b32 %r7814, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7815, %r7816, %r7814;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7818, %r7663, %r7815;
	// end inline asm
	// begin inline asm
	mov.b32 %r7821, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7822, %r7816, %r7821;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7825, %r7671, %r7822;
	// end inline asm
	// begin inline asm
	mov.b32 %r7828, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7829, %r7816, %r7828;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7832, %r7679, %r7829;
	// end inline asm
	// begin inline asm
	mov.b32 %r7835, {%rs19, %rs19};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7836, %r7816, %r7835;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7839, %r7687, %r7836;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7842, %r7818, %r7832, %r2334;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7846, %r7825, %r7839, %r2334;
	// end inline asm
	shl.b32 	%r7853, %r7846, 4;
	// begin inline asm
	lop3.b32 %r7850, %r2340, %r7842, %r7853, 202;
	// end inline asm
	xor.b32  	%r7873, %r7850, -2004318072;
	st.shared.u32 	[%rd123], %r7870;
	st.shared.u32 	[%rd124], %r7871;
	st.shared.u32 	[%rd125], %r7872;
	st.shared.u32 	[%rd126], %r7873;
	add.s32 	%r8006, %r8006, -64;
	add.s64 	%rd177, %rd177, 8324;
	setp.eq.s32 	%p238, %r8006, 0;
	@%p238 bra 	LBB0_119;
	bra.uni 	LBB0_118;
LBB0_119:                               // %guard_pass14812
                                        //   in Loop: Header=BB0_117 Depth=1
	bar.sync 	0;
	ld.shared.u32 	%r7879, [%rd21];
	ld.shared.u32 	%r7880, [%rd22+128];
	ld.shared.u32 	%r7887, [%rd22+4];
	ld.shared.u32 	%r7888, [%rd22+132];
	ld.shared.u32 	%r7895, [%rd22+8324];
	ld.shared.u32 	%r7896, [%rd22+8452];
	ld.shared.u32 	%r7903, [%rd22+8328];
	ld.shared.u32 	%r7904, [%rd22+8456];
	ld.shared.u32 	%r7911, [%rd22+16648];
	ld.shared.u32 	%r7912, [%rd22+16776];
	ld.shared.u32 	%r7919, [%rd22+16652];
	ld.shared.u32 	%r7920, [%rd22+16780];
	ld.shared.u32 	%r7927, [%rd22+24972];
	ld.shared.u32 	%r7928, [%rd22+25100];
	ld.shared.u32 	%r7935, [%rd22+24976];
	ld.shared.u32 	%r7936, [%rd22+25104];
	// begin inline asm
	prmt.b32 %r7874, %r7879, %r7880, %r584;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7878, %r7879, %r7880, %r588;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7882, %r7887, %r7888, %r584;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7886, %r7887, %r7888, %r588;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7890, %r7895, %r7896, %r584;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7894, %r7895, %r7896, %r588;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7898, %r7903, %r7904, %r584;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7902, %r7903, %r7904, %r588;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7906, %r7911, %r7912, %r584;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7910, %r7911, %r7912, %r588;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7914, %r7919, %r7920, %r584;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7918, %r7919, %r7920, %r588;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7922, %r7927, %r7928, %r584;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7926, %r7927, %r7928, %r588;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7930, %r7935, %r7936, %r584;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7934, %r7935, %r7936, %r588;
	// end inline asm
	selp.b32 	%r7938, %r7878, %r7874, %p225;
	shfl.sync.bfly.b32	%r164, %r7938, 8, 31, -1;
	selp.b32 	%r7939, %r7886, %r7882, %p225;
	shfl.sync.bfly.b32	%r165, %r7939, 8, 31, -1;
	selp.b32 	%r7940, %r7894, %r7890, %p225;
	shfl.sync.bfly.b32	%r7941, %r7940, 8, 31, -1;
	selp.b32 	%r7942, %r7902, %r7898, %p225;
	shfl.sync.bfly.b32	%r7943, %r7942, 8, 31, -1;
	selp.b32 	%r7944, %r7910, %r7906, %p225;
	shfl.sync.bfly.b32	%r7945, %r7944, 8, 31, -1;
	selp.b32 	%r7946, %r7918, %r7914, %p225;
	shfl.sync.bfly.b32	%r7947, %r7946, 8, 31, -1;
	selp.b32 	%r7948, %r7926, %r7922, %p225;
	shfl.sync.bfly.b32	%r7949, %r7948, 8, 31, -1;
	selp.b32 	%r7950, %r7934, %r7930, %p225;
	shfl.sync.bfly.b32	%r7951, %r7950, 8, 31, -1;
	and.b32  	%r178, %r101, 256;
	setp.eq.s32 	%p240, %r178, 0;
	shl.b32 	%r7979, %r101, 12;
	@%p240 bra 	LBB0_121;
// %bb.120:                             // %L43003
                                        //   in Loop: Header=BB0_117 Depth=1
	selp.b32 	%r7952, %r165, %r7886, %p225;
	selp.b32 	%r7953, %r7882, %r165, %p225;
	selp.b32 	%r7954, %r164, %r7878, %p225;
	selp.b32 	%r7955, %r7874, %r164, %p225;
	or.b32  	%r7957, %r95, %r7979;
	or.b32  	%r7958, %r7957, %r100;
	or.b32  	%r7959, %r7958, %r96;
	cvt.s64.s32 	%rd127, %r7959;
	add.s64 	%rd128, %rd127, %rd23;
	shr.u64 	%rd129, %rd128, 35;
	add.s64 	%rd130, %rd128, %rd129;
	shr.s64 	%rd131, %rd130, 29;
	and.b64  	%rd132, %rd130, -536870912;
	setp.ne.s64 	%p242, %rd132, %rd128;
	setp.lt.s64 	%p243, %rd128, 0;
	and.pred  	%p244, %p243, %p242;
	selp.u64 	%rd133, 1, 0, %p244;
	sub.s64 	%rd134, %rd133, %rd131;
	shl.b64 	%rd135, %rd134, 29;
	add.s64 	%rd136, %rd135, %rd128;
	shl.b64 	%rd137, %rd136, 2;
	add.s64 	%rd138, %rd3, %rd137;
	st.global.v4.u32 	[%rd138], {%r7955, %r7953, %r7954, %r7952};
LBB0_121:                               // %pass14343
                                        //   in Loop: Header=BB0_117 Depth=1
	or.b32  	%r7960, %r178, 64;
	setp.gt.u32 	%p245, %r7960, 191;
	@%p245 bra 	LBB0_122;
	bra.uni 	LBB0_123;
LBB0_122:                               // %L43199
                                        //   in Loop: Header=BB0_117 Depth=1
	selp.b32 	%r166, %r7890, %r7941, %p225;
	selp.b32 	%r167, %r7941, %r7894, %p225;
	selp.b32 	%r168, %r7898, %r7943, %p225;
	selp.b32 	%r169, %r7943, %r7902, %p225;
	or.b32  	%r7962, %r7979, %r95;
	or.b32  	%r7963, %r7962, %r100;
	or.b32  	%r7964, %r7963, %r96;
	or.b32  	%r7965, %r7964, 262144;
	cvt.s64.s32 	%rd139, %r7965;
	add.s64 	%rd140, %rd139, %rd23;
	shr.u64 	%rd141, %rd140, 35;
	add.s64 	%rd142, %rd140, %rd141;
	shr.s64 	%rd143, %rd142, 29;
	and.b64  	%rd144, %rd142, -536870912;
	setp.ne.s64 	%p246, %rd144, %rd140;
	setp.lt.s64 	%p247, %rd140, 0;
	and.pred  	%p248, %p247, %p246;
	selp.u64 	%rd145, 1, 0, %p248;
	sub.s64 	%rd146, %rd145, %rd143;
	shl.b64 	%rd147, %rd146, 29;
	add.s64 	%rd148, %rd147, %rd140;
	shl.b64 	%rd149, %rd148, 2;
	add.s64 	%rd150, %rd3, %rd149;
	st.global.v4.u32 	[%rd150], {%r166, %r168, %r167, %r169};
LBB0_123:                               // %pass14424
                                        //   in Loop: Header=BB0_117 Depth=1
	selp.b32 	%r174, %r7922, %r7949, %p225;
	selp.b32 	%r175, %r7949, %r7926, %p225;
	selp.b32 	%r176, %r7930, %r7951, %p225;
	selp.b32 	%r177, %r7951, %r7934, %p225;
	or.b32  	%r7966, %r178, 128;
	setp.gt.u32 	%p249, %r7966, 191;
	or.b32  	%r7980, %r7979, %r95;
	@%p249 bra 	LBB0_124;
	bra.uni 	LBB0_125;
LBB0_124:                               // %L43396
                                        //   in Loop: Header=BB0_117 Depth=1
	selp.b32 	%r170, %r7906, %r7945, %p225;
	selp.b32 	%r171, %r7945, %r7910, %p225;
	selp.b32 	%r172, %r7914, %r7947, %p225;
	selp.b32 	%r173, %r7947, %r7918, %p225;
	or.b32  	%r7968, %r7980, %r100;
	or.b32  	%r7969, %r7968, %r96;
	or.b32  	%r7970, %r7969, 524288;
	cvt.s64.s32 	%rd151, %r7970;
	add.s64 	%rd152, %rd151, %rd23;
	shr.u64 	%rd153, %rd152, 35;
	add.s64 	%rd154, %rd152, %rd153;
	shr.s64 	%rd155, %rd154, 29;
	and.b64  	%rd156, %rd154, -536870912;
	setp.ne.s64 	%p250, %rd156, %rd152;
	setp.lt.s64 	%p251, %rd152, 0;
	and.pred  	%p252, %p251, %p250;
	selp.u64 	%rd157, 1, 0, %p252;
	sub.s64 	%rd158, %rd157, %rd155;
	shl.b64 	%rd159, %rd158, 29;
	add.s64 	%rd160, %rd159, %rd152;
	shl.b64 	%rd161, %rd160, 2;
	add.s64 	%rd162, %rd3, %rd161;
	st.global.v4.u32 	[%rd162], {%r170, %r172, %r171, %r173};
	bra.uni 	LBB0_125;
LBB0_126:                               // %L43797
	st.global.u32 	[%rd4], %r7978;
	ret;
LBB0_7:                                 // %L273
	mov.u32 	%r7977, 2;
	st.global.u32 	[%rd4], %r7977;
	mov.u64 	%rd175, exception3309;
	cvta.global.u64 	%rd176, %rd175;
	{ // callseq 13, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd176;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 13
	{ // callseq 14, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd34;
	st.param.b32 	[param0+8], %r179;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 14
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
LBB0_1:                                 // %L9
	mov.u64 	%rd55, exception1;
	cvta.global.u64 	%rd56, %rd55;
	{ // callseq 0, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd56;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 0
	{ // callseq 1, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd34;
	st.param.b32 	[param0+8], %r179;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 1
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
LBB0_128:                               // %L43908
	mov.u64 	%rd64, exception1;
	cvta.global.u64 	%rd65, %rd64;
	{ // callseq 3, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd65;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 3
	{ // callseq 4, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd34;
	st.param.b32 	[param0+8], %r179;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 4
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
LBB0_127:                               // %L43905
	mov.u64 	%rd70, exception1;
	cvta.global.u64 	%rd71, %rd70;
	{ // callseq 6, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd71;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 6
	{ // callseq 7, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd34;
	st.param.b32 	[param0+8], %r179;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 7
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
LBB0_153:                               // %L43902
	mov.u64 	%rd84, exception1;
	cvta.global.u64 	%rd85, %rd84;
	{ // callseq 11, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd85;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 11
	{ // callseq 12, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd34;
	st.param.b32 	[param0+8], %r179;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 12
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
                                        // -- End function
}
