// PTX kernel code for the CUDA upchannelizer
// This file has been generated automatically by `upchan.jl`.
// Do not modify this file, your changes will be lost.

// PTX CompilerJob of MethodInstance for upchan(::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Float16x2, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int32, 1}) for sm_86, minthreads=512, blocks_per_sm=2

//
// Generated by LLVM NVPTX Back-End
//

.version 8.2
.target sm_86
.address_size 64

	// .globl	_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE // -- Begin function _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE
.func gpu_report_exception
(
	.param .b64 gpu_report_exception_param_0
)
.noreturn
{
	trap;
}
.func  (.param .b64 func_retval0) julia_power_by_squaring_13454
(
	.param .align 8 .b8 julia_power_by_squaring_13454_param_0[16],
	.param .b64 julia_power_by_squaring_13454_param_1,
	.param .b64 julia_power_by_squaring_13454_param_2
)
.noreturn
{
	trap;
}
.func gpu_signal_exception
(
	.param .align 8 .b8 gpu_signal_exception_param_0[16]
)
.noreturn
{
	trap;
}
.extern .shared .align 32 .b8 shmem[];
.global .align 1 .b8 exception3309[6] = {101, 114, 114, 111, 114, 0};
.global .align 1 .b8 exception1[10] = {101, 120, 99, 101, 112, 116, 105, 111, 110, 0};
                                        // @_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE
.visible .entry _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE(
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_0[16],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_1[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_2[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_3[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_4[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_5[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_6[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_7[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_8[32]
)
.reqntid 512, 1, 1
.minnctapersm 2
{
	.reg .pred 	%p<259>;
	.reg .b16 	%rs<1185>;
	.reg .f32 	%f<914>;
	.reg .b32 	%r<8026>;
	.reg .b64 	%rd<189>;

// %bb.0:                               // %conversion
	ld.param.u32 	%r180, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_0+8];
	ld.param.u64 	%rd34, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_0];
	// begin inline asm
	mov.u32 %r181, %dynamic_smem_size;
	// end inline asm
	setp.gt.u32 	%p1, %r181, 66815;
	@%p1 bra 	LBB0_2;
	bra.uni 	LBB0_1;
LBB0_2:                                 // %L11
	ld.param.u64 	%rd51, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_8];
	ld.param.u64 	%rd35, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_1];
	mov.u32 	%r1, %tid.x;
	mov.u32 	%r2, %ctaid.x;
	shl.b32 	%r182, %r2, 9;
	mov.u32 	%r3, %tid.y;
	shl.b32 	%r4, %r3, 5;
	or.b32  	%r183, %r182, %r1;
	or.b32  	%r184, %r183, %r4;
	mul.wide.u32 	%rd57, %r184, 4;
	add.s64 	%rd4, %rd51, %rd57;
	mov.u32 	%r185, 1;
	st.global.u32 	[%rd4], %r185;
	ld.global.u32 	%r5, [%rd35];
	setp.lt.s32 	%p2, %r5, 0;
	@%p2 bra 	LBB0_7;
// %bb.3:                               // %L231
	ld.param.u64 	%rd39, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_2];
	ld.global.u32 	%r6, [%rd39];
	setp.lt.s32 	%p3, %r6, %r5;
	setp.gt.s32 	%p4, %r6, 16384;
	or.pred  	%p5, %p3, %p4;
	@%p5 bra 	LBB0_7;
// %bb.4:                               // %L241
	ld.param.u64 	%rd43, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_3];
	ld.global.u32 	%r7, [%rd43];
	sub.s32 	%r186, %r6, %r5;
	and.b32  	%r187, %r186, 255;
	setp.ne.s32 	%p6, %r187, 0;
	setp.lt.s32 	%p7, %r7, 0;
	or.pred  	%p8, %p6, %p7;
	@%p8 bra 	LBB0_7;
// %bb.5:                               // %L247
	ld.param.u64 	%rd47, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_4];
	ld.global.u32 	%r8, [%rd47];
	setp.lt.s32 	%p9, %r8, %r7;
	setp.gt.s32 	%p10, %r8, 256;
	or.pred  	%p11, %p9, %p10;
	@%p11 bra 	LBB0_7;
// %bb.6:                               // %L257
	not.b32 	%r188, %r7;
	add.s32 	%r189, %r188, %r8;
	and.b32  	%r190, %r189, 3;
	setp.eq.s32 	%p12, %r190, 0;
	@%p12 bra 	LBB0_8;
	bra.uni 	LBB0_7;
LBB0_8:                                 // %pass81
	bfe.u32 	%r133, %r1, 1, 1;
	and.b32  	%r134, %r1, 1;
	bfe.u32 	%r135, %r1, 2, 1;
	shr.u32 	%r136, %r1, 4;
	shl.b32 	%r198, %r136, 1;
	shl.b32 	%r199, %r135, 2;
	shl.b32 	%r200, %r134, 3;
	shl.b32 	%r201, %r133, 4;
	or.b32  	%r202, %r200, %r201;
	or.b32  	%r203, %r199, %r202;
	or.b32  	%r204, %r198, %r203;
	bfe.u32 	%r138, %r1, 3, 1;
	or.b32  	%r139, %r138, %r204;
	or.b32  	%r140, %r139, 32;
	mov.f32 	%f181, 0f40000000;
	mov.f32 	%f182, 0f437F0000;
	div.approx.f32 	%f143, %f182, %f181;
	cvt.rn.f32.s32 	%f183, %r139;
	sub.f32 	%f184, %f183, %f143;
	mov.f32 	%f213, 0f42800000;
	div.approx.f32 	%f145, %f184, %f213;
	setp.ne.f32 	%p18, %f145, 0f00000000;
	mov.f32 	%f881, 0f3F800000;
	mov.f32 	%f874, %f881;
	@%p18 bra 	LBB0_9;
	bra.uni 	LBB0_10;
LBB0_9:                                 // %L639
	sin.approx.f32 	%f214, %f145;
	div.approx.f32 	%f874, %f214, %f145;
LBB0_10:                                // %L642
	cvt.rn.f32.s32 	%f217, %r140;
	sub.f32 	%f218, %f217, %f143;
	div.approx.f32 	%f5, %f218, %f213;
	setp.eq.f32 	%p24, %f5, 0f00000000;
	mov.f32 	%f875, %f881;
	@%p24 bra 	LBB0_12;
// %bb.11:                              // %L659
	sin.approx.f32 	%f248, %f5;
	div.approx.f32 	%f875, %f248, %f5;
LBB0_12:                                // %L662
	or.b32  	%r222, %r139, 64;
	or.b32  	%r10, %r139, 96;
	cvt.rn.f32.s32 	%f252, %r222;
	sub.f32 	%f253, %f252, %f143;
	div.approx.f32 	%f9, %f253, %f213;
	setp.eq.f32 	%p30, %f9, 0f00000000;
	mov.f32 	%f876, %f881;
	@%p30 bra 	LBB0_14;
// %bb.13:                              // %L748
	sin.approx.f32 	%f283, %f9;
	div.approx.f32 	%f876, %f283, %f9;
LBB0_14:                                // %L751
	shl.b32 	%r125, %r1, 2;
	cvt.rn.f32.s32 	%f286, %r10;
	sub.f32 	%f287, %f286, %f143;
	div.approx.f32 	%f14, %f287, %f213;
	setp.eq.f32 	%p36, %f14, 0f00000000;
	mov.f32 	%f877, %f881;
	@%p36 bra 	LBB0_16;
// %bb.15:                              // %L768
	sin.approx.f32 	%f317, %f14;
	div.approx.f32 	%f877, %f317, %f14;
LBB0_16:                                // %L771
	and.b32  	%r191, %r125, 36;
	and.b32  	%r127, %r1, 16;
	or.b32  	%r240, %r139, 128;
	or.b32  	%r12, %r139, 160;
	cvt.rn.f32.s32 	%f321, %r240;
	sub.f32 	%f322, %f321, %f143;
	div.approx.f32 	%f18, %f322, %f213;
	setp.eq.f32 	%p42, %f18, 0f00000000;
	mov.f32 	%f878, %f881;
	@%p42 bra 	LBB0_18;
// %bb.17:                              // %L857
	sin.approx.f32 	%f352, %f18;
	div.approx.f32 	%f878, %f352, %f18;
LBB0_18:                                // %L860
	or.b32  	%r192, %r191, %r127;
	and.b32  	%r193, %r1, 2;
	cvt.rn.f32.s32 	%f355, %r12;
	sub.f32 	%f356, %f355, %f143;
	div.approx.f32 	%f23, %f356, %f213;
	setp.eq.f32 	%p48, %f23, 0f00000000;
	mov.f32 	%f879, %f881;
	@%p48 bra 	LBB0_20;
// %bb.19:                              // %L877
	sin.approx.f32 	%f386, %f23;
	div.approx.f32 	%f879, %f386, %f23;
LBB0_20:                                // %L880
	or.b32  	%r128, %r192, %r193;
	shl.b32 	%r194, %r2, 6;
	shl.b32 	%r129, %r1, 1;
	or.b32  	%r258, %r139, 192;
	or.b32  	%r14, %r139, 224;
	cvt.rn.f32.s32 	%f390, %r258;
	sub.f32 	%f391, %f390, %f143;
	div.approx.f32 	%f27, %f391, %f213;
	setp.eq.f32 	%p54, %f27, 0f00000000;
	mov.f32 	%f880, %f881;
	@%p54 bra 	LBB0_22;
// %bb.21:                              // %L966
	sin.approx.f32 	%f421, %f27;
	div.approx.f32 	%f880, %f421, %f27;
LBB0_22:                                // %L969
	or.b32  	%r195, %r128, %r194;
	and.b32  	%r130, %r129, 8;
	cvt.rn.f32.s32 	%f424, %r14;
	sub.f32 	%f425, %f424, %f143;
	div.approx.f32 	%f32, %f425, %f213;
	setp.eq.f32 	%p60, %f32, 0f00000000;
	@%p60 bra 	LBB0_24;
// %bb.23:                              // %L986
	sin.approx.f32 	%f455, %f32;
	div.approx.f32 	%f881, %f455, %f32;
LBB0_24:                                // %L989
	or.b32  	%r196, %r195, %r130;
	mul.lo.s32 	%r16, %r139, 63;
	cvt.rn.f32.s32 	%f458, %r16;
	div.approx.f32 	%f35, %f458, %f213;
	abs.f32 	%f884, %f35;
	setp.lt.f32 	%p61, %f884, 0f40000000;
	@%p61 bra 	LBB0_36;
// %bb.25:
	setp.gtu.f32 	%p62, %f884, 0f4B800000;
	@%p62 bra 	LBB0_32;
	bra.uni 	LBB0_26;
LBB0_32:
	mov.b32 	%r18, %f884;
	and.b32  	%r276, %r18, 8388607;
	or.b32  	%r7984, %r276, 1065353216;
	mov.b32 	%f883, %r7984;
	add.s32 	%r277, %r18, -1073741824;
	and.b32  	%r7985, %r277, -8388608;
	setp.eq.s32 	%p68, %r7985, 0;
	@%p68 bra 	LBB0_35;
// %bb.33:                              // %.lr.ph2375.preheader
	mov.f32 	%f469, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f468,%f469;
	// end inline asm
LBB0_34:                                // %.lr.ph2375
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r278, %r7985, 192937984;
	add.s32 	%r279, %r278, %r7984;
	mov.b32 	%f470, %r279;
	mul.f32 	%f471, %f468, %f470;
	sub.f32 	%f472, %f470, %f471;
	fma.rn.f32 	%f473, %f472, %f468, %f471;
	sub.f32 	%f474, %f470, %f473;
	fma.rz.f32 	%f475, %f474, %f468, %f473;
	cvt.rzi.f32.f32 	%f476, %f475;
	sub.f32 	%f883, %f470, %f476;
	sub.s32 	%r7985, %r7985, %r278;
	mov.b32 	%r7984, %f883;
	setp.ne.s32 	%p69, %r7985, 0;
	setp.ne.s32 	%p70, %r7984, 0;
	and.pred  	%p71, %p69, %p70;
	@%p71 bra 	LBB0_34;
LBB0_35:                                // %__internal_fmodf_slowpath_mod.exit.i.i
	setp.gt.u32 	%p72, %r18, 2139095039;
	selp.f32 	%f477, 0f7FFFFFFF, 0f4B800000, %p72;
	mul.f32 	%f478, %f883, 0f34000000;
	mul.f32 	%f884, %f477, %f478;
	bra.uni 	LBB0_36;
LBB0_26:                                // %__nv_fast_fdividef.exit.i.i.i
	div.approx.f32 	%f461, %f884, %f181;
	cvt.rzi.f32.f32 	%f37, %f461;
	fma.rn.f32 	%f38, %f37, 0fC0000000, %f884;
	mov.b32 	%r17, %f38;
	setp.lt.u32 	%p63, %r17, 1073741824;
	mov.f32 	%f882, %f37;
	@%p63 bra 	LBB0_31;
// %bb.27:
	setp.lt.u32 	%p64, %r17, -2147483647;
	@%p64 bra 	LBB0_29;
// %bb.28:
	add.f32 	%f466, %f37, 0fBF800000;
	setp.lt.f32 	%p67, %f38, 0fC0000000;
	selp.f32 	%f467, %f466, %f37, %p67;
	add.f32 	%f882, %f467, 0fBF800000;
	bra.uni 	LBB0_31;
LBB0_29:
	add.f32 	%f882, %f37, 0f3F800000;
	setp.ltu.f32 	%p65, %f38, 0f40800000;
	@%p65 bra 	LBB0_31;
// %bb.30:                              // %__nv_fmaf_rn.exit.i.i.i
	fma.rn.f32 	%f463, %f181, 0fC0400000, %f38;
	setp.ge.f32 	%p66, %f463, 0f00000000;
	selp.f32 	%f464, %f882, %f37, %p66;
	add.f32 	%f465, %f464, 0f3F800000;
	add.f32 	%f882, %f465, 0f3F800000;
LBB0_31:                                // %__internal_fmodf_fastpath_quot.exit.i.i
	fma.rn.f32 	%f884, %f882, 0fC0000000, %f884;
LBB0_36:                                // %__internal_fmodf_kernel.exit.i
	shr.u32 	%r197, %r196, 1;
	abs.f32 	%f479, %f884;
	setp.gtu.f32 	%p73, %f479, 0f7F800000;
	@%p73 bra 	LBB0_38;
// %bb.37:
	mov.b32 	%r280, %f35;
	and.b32  	%r281, %r280, -2147483648;
	mov.b32 	%r282, %f884;
	or.b32  	%r283, %r281, %r282;
	mov.b32 	%f884, %r283;
LBB0_38:                                // %__nv_fmodf.exit
	ld.param.u64 	%rd1, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_5];
	mul.wide.u32 	%rd58, %r197, 4;
	add.s32 	%r292, %r16, 2016;
	cvt.rn.f32.s32 	%f510, %r292;
	div.approx.f32 	%f54, %f510, %f213;
	abs.f32 	%f888, %f54;
	setp.lt.f32 	%p81, %f888, 0f40000000;
	@%p81 bra 	LBB0_50;
// %bb.39:
	setp.gtu.f32 	%p82, %f888, 0f4B800000;
	@%p82 bra 	LBB0_46;
	bra.uni 	LBB0_40;
LBB0_46:
	mov.b32 	%r26, %f888;
	and.b32  	%r293, %r26, 8388607;
	or.b32  	%r7986, %r293, 1065353216;
	mov.b32 	%f887, %r7986;
	add.s32 	%r294, %r26, -1073741824;
	and.b32  	%r7987, %r294, -8388608;
	setp.eq.s32 	%p88, %r7987, 0;
	@%p88 bra 	LBB0_49;
// %bb.47:                              // %.lr.ph2370.preheader
	mov.f32 	%f521, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f520,%f521;
	// end inline asm
LBB0_48:                                // %.lr.ph2370
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r295, %r7987, 192937984;
	add.s32 	%r296, %r295, %r7986;
	mov.b32 	%f522, %r296;
	mul.f32 	%f523, %f520, %f522;
	sub.f32 	%f524, %f522, %f523;
	fma.rn.f32 	%f525, %f524, %f520, %f523;
	sub.f32 	%f526, %f522, %f525;
	fma.rz.f32 	%f527, %f526, %f520, %f525;
	cvt.rzi.f32.f32 	%f528, %f527;
	sub.f32 	%f887, %f522, %f528;
	sub.s32 	%r7987, %r7987, %r295;
	mov.b32 	%r7986, %f887;
	setp.ne.s32 	%p89, %r7987, 0;
	setp.ne.s32 	%p90, %r7986, 0;
	and.pred  	%p91, %p89, %p90;
	@%p91 bra 	LBB0_48;
LBB0_49:                                // %__internal_fmodf_slowpath_mod.exit.i.i1377
	setp.gt.u32 	%p92, %r26, 2139095039;
	selp.f32 	%f529, 0f7FFFFFFF, 0f4B800000, %p92;
	mul.f32 	%f530, %f887, 0f34000000;
	mul.f32 	%f888, %f529, %f530;
	bra.uni 	LBB0_50;
LBB0_40:                                // %__nv_fast_fdividef.exit.i.i.i1343
	div.approx.f32 	%f513, %f888, %f181;
	cvt.rzi.f32.f32 	%f56, %f513;
	fma.rn.f32 	%f57, %f56, 0fC0000000, %f888;
	mov.b32 	%r25, %f57;
	setp.lt.u32 	%p83, %r25, 1073741824;
	mov.f32 	%f886, %f56;
	@%p83 bra 	LBB0_45;
// %bb.41:
	setp.lt.u32 	%p84, %r25, -2147483647;
	@%p84 bra 	LBB0_43;
// %bb.42:
	add.f32 	%f518, %f56, 0fBF800000;
	setp.lt.f32 	%p87, %f57, 0fC0000000;
	selp.f32 	%f519, %f518, %f56, %p87;
	add.f32 	%f886, %f519, 0fBF800000;
	bra.uni 	LBB0_45;
LBB0_43:
	add.f32 	%f886, %f56, 0f3F800000;
	setp.ltu.f32 	%p85, %f57, 0f40800000;
	@%p85 bra 	LBB0_45;
// %bb.44:                              // %__nv_fmaf_rn.exit.i.i.i1348
	fma.rn.f32 	%f515, %f181, 0fC0400000, %f57;
	setp.ge.f32 	%p86, %f515, 0f00000000;
	selp.f32 	%f516, %f886, %f56, %p86;
	add.f32 	%f517, %f516, 0f3F800000;
	add.f32 	%f886, %f517, 0f3F800000;
LBB0_45:                                // %__internal_fmodf_fastpath_quot.exit.i.i1351
	fma.rn.f32 	%f888, %f886, 0fC0000000, %f888;
LBB0_50:                                // %__internal_fmodf_kernel.exit.i1380
	add.s64 	%rd59, %rd1, %rd58;
	abs.f32 	%f531, %f888;
	setp.gtu.f32 	%p93, %f531, 0f7F800000;
	@%p93 bra 	LBB0_52;
// %bb.51:
	mov.b32 	%r297, %f54;
	and.b32  	%r298, %r297, -2147483648;
	mov.b32 	%r299, %f888;
	or.b32  	%r300, %r298, %r299;
	mov.b32 	%f888, %r300;
LBB0_52:                                // %__nv_fmodf.exit1383
	ld.global.u32 	%r131, [%rd59];
	mov.u64 	%rd60, 2;
	mov.u64 	%rd61, 6;
	{ // callseq 2, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd34;
	st.param.b32 	[param0+8], %r180;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd60;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd61;
	.param .b64 retval0;
	call.uni (retval0), 
	julia_power_by_squaring_13454, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64 	%rd62, [retval0+0];
	} // callseq 2
	setp.ne.s64 	%p101, %rd62, 64;
	@%p101 bra 	LBB0_128;
// %bb.53:                              // %L1095
	shr.u32 	%r132, %r1, 1;
	shr.u32 	%r137, %r1, 3;
	and.b32  	%r315, %r1, 3;
	and.b32  	%r316, %r137, 2;
	or.b32  	%r317, %r135, %r316;
	and.b32  	%r318, %r132, 4;
	or.b32  	%r35, %r317, %r318;
	mul.lo.s32 	%r319, %r315, %r35;
	shl.b32 	%r320, %r319, 1;
	neg.s32 	%r321, %r320;
	cvt.rn.f32.s32 	%f71, %r321;
	mov.f32 	%f564, 0f41000000;
	div.approx.f32 	%f72, %f71, %f564;
	abs.f32 	%f900, %f72;
	setp.lt.f32 	%p102, %f900, 0f40000000;
	mov.f32 	%f892, %f900;
	@%p102 bra 	LBB0_65;
// %bb.54:
	setp.gtu.f32 	%p103, %f900, 0f4B800000;
	@%p103 bra 	LBB0_61;
	bra.uni 	LBB0_55;
LBB0_61:
	mov.b32 	%r37, %f900;
	and.b32  	%r322, %r37, 8388607;
	or.b32  	%r7988, %r322, 1065353216;
	mov.b32 	%f891, %r7988;
	add.s32 	%r323, %r37, -1073741824;
	and.b32  	%r7989, %r323, -8388608;
	setp.eq.s32 	%p109, %r7989, 0;
	@%p109 bra 	LBB0_64;
// %bb.62:                              // %.lr.ph2360.preheader
	mov.f32 	%f574, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f573,%f574;
	// end inline asm
LBB0_63:                                // %.lr.ph2360
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r324, %r7989, 192937984;
	add.s32 	%r325, %r324, %r7988;
	mov.b32 	%f575, %r325;
	mul.f32 	%f576, %f573, %f575;
	sub.f32 	%f577, %f575, %f576;
	fma.rn.f32 	%f578, %f577, %f573, %f576;
	sub.f32 	%f579, %f575, %f578;
	fma.rz.f32 	%f580, %f579, %f573, %f578;
	cvt.rzi.f32.f32 	%f581, %f580;
	sub.f32 	%f891, %f575, %f581;
	sub.s32 	%r7989, %r7989, %r324;
	mov.b32 	%r7988, %f891;
	setp.ne.s32 	%p110, %r7989, 0;
	setp.ne.s32 	%p111, %r7988, 0;
	and.pred  	%p112, %p110, %p111;
	@%p112 bra 	LBB0_63;
LBB0_64:                                // %__internal_fmodf_slowpath_mod.exit.i.i1430
	setp.gt.u32 	%p113, %r37, 2139095039;
	selp.f32 	%f582, 0f7FFFFFFF, 0f4B800000, %p113;
	mul.f32 	%f583, %f891, 0f34000000;
	mul.f32 	%f892, %f582, %f583;
	bra.uni 	LBB0_65;
LBB0_55:                                // %__nv_fast_fdividef.exit.i.i.i1396
	div.approx.f32 	%f566, %f900, %f181;
	cvt.rzi.f32.f32 	%f74, %f566;
	fma.rn.f32 	%f75, %f74, 0fC0000000, %f900;
	mov.b32 	%r36, %f75;
	setp.lt.u32 	%p104, %r36, 1073741824;
	mov.f32 	%f890, %f74;
	@%p104 bra 	LBB0_60;
// %bb.56:
	setp.lt.u32 	%p105, %r36, -2147483647;
	@%p105 bra 	LBB0_58;
// %bb.57:
	add.f32 	%f571, %f74, 0fBF800000;
	setp.lt.f32 	%p108, %f75, 0fC0000000;
	selp.f32 	%f572, %f571, %f74, %p108;
	add.f32 	%f890, %f572, 0fBF800000;
	bra.uni 	LBB0_60;
LBB0_58:
	add.f32 	%f890, %f74, 0f3F800000;
	setp.ltu.f32 	%p106, %f75, 0f40800000;
	@%p106 bra 	LBB0_60;
// %bb.59:                              // %__nv_fmaf_rn.exit.i.i.i1401
	fma.rn.f32 	%f568, %f181, 0fC0400000, %f75;
	setp.ge.f32 	%p107, %f568, 0f00000000;
	selp.f32 	%f569, %f890, %f74, %p107;
	add.f32 	%f570, %f569, 0f3F800000;
	add.f32 	%f890, %f570, 0f3F800000;
LBB0_60:                                // %__internal_fmodf_fastpath_quot.exit.i.i1404
	fma.rn.f32 	%f892, %f890, 0fC0000000, %f900;
LBB0_65:                                // %__internal_fmodf_kernel.exit.i1433
	abs.f32 	%f584, %f892;
	setp.gtu.f32 	%p114, %f584, 0f7F800000;
	mov.b32 	%r326, %f72;
	and.b32  	%r44, %r326, -2147483648;
	@%p114 bra 	LBB0_67;
// %bb.66:
	mov.b32 	%r327, %f892;
	or.b32  	%r328, %r44, %r327;
	mov.b32 	%f892, %r328;
LBB0_67:                                // %__nv_fmodf.exit1436
	and.b32  	%r337, %r129, 6;
	mov.u32 	%r338, -8;
	sub.s32 	%r339, %r338, %r337;
	mul.lo.s32 	%r340, %r35, %r339;
	cvt.rn.f32.s32 	%f91, %r340;
	div.approx.f32 	%f92, %f91, %f564;
	abs.f32 	%f904, %f92;
	setp.lt.f32 	%p122, %f904, 0f40000000;
	mov.f32 	%f896, %f904;
	@%p122 bra 	LBB0_79;
// %bb.68:
	setp.gtu.f32 	%p123, %f904, 0f4B800000;
	@%p123 bra 	LBB0_75;
	bra.uni 	LBB0_69;
LBB0_75:
	mov.b32 	%r46, %f904;
	and.b32  	%r341, %r46, 8388607;
	or.b32  	%r7990, %r341, 1065353216;
	mov.b32 	%f895, %r7990;
	add.s32 	%r342, %r46, -1073741824;
	and.b32  	%r7991, %r342, -8388608;
	setp.eq.s32 	%p129, %r7991, 0;
	@%p129 bra 	LBB0_78;
// %bb.76:                              // %.lr.ph2350.preheader
	mov.f32 	%f625, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f624,%f625;
	// end inline asm
LBB0_77:                                // %.lr.ph2350
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r343, %r7991, 192937984;
	add.s32 	%r344, %r343, %r7990;
	mov.b32 	%f626, %r344;
	mul.f32 	%f627, %f624, %f626;
	sub.f32 	%f628, %f626, %f627;
	fma.rn.f32 	%f629, %f628, %f624, %f627;
	sub.f32 	%f630, %f626, %f629;
	fma.rz.f32 	%f631, %f630, %f624, %f629;
	cvt.rzi.f32.f32 	%f632, %f631;
	sub.f32 	%f895, %f626, %f632;
	sub.s32 	%r7991, %r7991, %r343;
	mov.b32 	%r7990, %f895;
	setp.ne.s32 	%p130, %r7991, 0;
	setp.ne.s32 	%p131, %r7990, 0;
	and.pred  	%p132, %p130, %p131;
	@%p132 bra 	LBB0_77;
LBB0_78:                                // %__internal_fmodf_slowpath_mod.exit.i.i1483
	setp.gt.u32 	%p133, %r46, 2139095039;
	selp.f32 	%f633, 0f7FFFFFFF, 0f4B800000, %p133;
	mul.f32 	%f634, %f895, 0f34000000;
	mul.f32 	%f896, %f633, %f634;
	bra.uni 	LBB0_79;
LBB0_69:                                // %__nv_fast_fdividef.exit.i.i.i1449
	div.approx.f32 	%f617, %f904, %f181;
	cvt.rzi.f32.f32 	%f94, %f617;
	fma.rn.f32 	%f95, %f94, 0fC0000000, %f904;
	mov.b32 	%r45, %f95;
	setp.lt.u32 	%p124, %r45, 1073741824;
	mov.f32 	%f894, %f94;
	@%p124 bra 	LBB0_74;
// %bb.70:
	setp.lt.u32 	%p125, %r45, -2147483647;
	@%p125 bra 	LBB0_72;
// %bb.71:
	add.f32 	%f622, %f94, 0fBF800000;
	setp.lt.f32 	%p128, %f95, 0fC0000000;
	selp.f32 	%f623, %f622, %f94, %p128;
	add.f32 	%f894, %f623, 0fBF800000;
	bra.uni 	LBB0_74;
LBB0_72:
	add.f32 	%f894, %f94, 0f3F800000;
	setp.ltu.f32 	%p126, %f95, 0f40800000;
	@%p126 bra 	LBB0_74;
// %bb.73:                              // %__nv_fmaf_rn.exit.i.i.i1454
	fma.rn.f32 	%f619, %f181, 0fC0400000, %f95;
	setp.ge.f32 	%p127, %f619, 0f00000000;
	selp.f32 	%f620, %f894, %f94, %p127;
	add.f32 	%f621, %f620, 0f3F800000;
	add.f32 	%f894, %f621, 0f3F800000;
LBB0_74:                                // %__internal_fmodf_fastpath_quot.exit.i.i1457
	fma.rn.f32 	%f896, %f894, 0fC0000000, %f904;
LBB0_79:                                // %__internal_fmodf_kernel.exit.i1486
	abs.f32 	%f635, %f896;
	setp.gtu.f32 	%p134, %f635, 0f7F800000;
	mov.b32 	%r345, %f92;
	and.b32  	%r53, %r345, -2147483648;
	@%p134 bra 	LBB0_81;
// %bb.80:
	mov.b32 	%r346, %f896;
	or.b32  	%r347, %r53, %r346;
	mov.b32 	%f896, %r347;
LBB0_81:                                // %__nv_fmodf.exit1489
	{ // callseq 5, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd34;
	st.param.b32 	[param0+8], %r180;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd60;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd61;
	.param .b64 retval0;
	call.uni (retval0), 
	julia_power_by_squaring_13454, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64 	%rd68, [retval0+0];
	} // callseq 5
	setp.ne.s64 	%p142, %rd68, 64;
	@%p142 bra 	LBB0_127;
// %bb.82:                              // %L1261
	{ // callseq 8, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd34;
	st.param.b32 	[param0+8], %r180;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd60;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd61;
	.param .b64 retval0;
	call.uni (retval0), 
	julia_power_by_squaring_13454, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64 	%rd74, [retval0+0];
	} // callseq 8
	cvt.rn.f32.s64 	%f668, %rd74;
	div.approx.f32 	%f109, %f71, %f668;
	abs.f32 	%f908, %f109;
	setp.lt.f32 	%p143, %f908, 0f40000000;
	@%p143 bra 	LBB0_136;
// %bb.83:
	setp.gtu.f32 	%p144, %f908, 0f4B800000;
	@%p144 bra 	LBB0_132;
	bra.uni 	LBB0_84;
LBB0_132:
	mov.b32 	%r142, %f908;
	and.b32  	%r368, %r142, 8388607;
	or.b32  	%r8022, %r368, 1065353216;
	mov.b32 	%f907, %r8022;
	add.s32 	%r369, %r142, -1073741824;
	and.b32  	%r8023, %r369, -8388608;
	setp.eq.s32 	%p150, %r8023, 0;
	@%p150 bra 	LBB0_135;
// %bb.133:                             // %.lr.ph2345.preheader
	mov.f32 	%f678, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f677,%f678;
	// end inline asm
LBB0_134:                               // %.lr.ph2345
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r370, %r8023, 192937984;
	add.s32 	%r371, %r370, %r8022;
	mov.b32 	%f679, %r371;
	mul.f32 	%f680, %f677, %f679;
	sub.f32 	%f681, %f679, %f680;
	fma.rn.f32 	%f682, %f681, %f677, %f680;
	sub.f32 	%f683, %f679, %f682;
	fma.rz.f32 	%f684, %f683, %f677, %f682;
	cvt.rzi.f32.f32 	%f685, %f684;
	sub.f32 	%f907, %f679, %f685;
	sub.s32 	%r8023, %r8023, %r370;
	mov.b32 	%r8022, %f907;
	setp.ne.s32 	%p151, %r8023, 0;
	setp.ne.s32 	%p152, %r8022, 0;
	and.pred  	%p153, %p151, %p152;
	@%p153 bra 	LBB0_134;
LBB0_135:                               // %__internal_fmodf_slowpath_mod.exit.i.i1642
	setp.gt.u32 	%p154, %r142, 2139095039;
	selp.f32 	%f686, 0f7FFFFFFF, 0f4B800000, %p154;
	mul.f32 	%f687, %f907, 0f34000000;
	mul.f32 	%f908, %f686, %f687;
	bra.uni 	LBB0_136;
LBB0_84:                                // %__nv_fast_fdividef.exit.i.i.i1608
	div.approx.f32 	%f670, %f908, %f181;
	cvt.rzi.f32.f32 	%f146, %f670;
	fma.rn.f32 	%f147, %f146, 0fC0000000, %f908;
	mov.b32 	%r141, %f147;
	setp.lt.u32 	%p145, %r141, 1073741824;
	mov.f32 	%f906, %f146;
	@%p145 bra 	LBB0_131;
// %bb.85:
	setp.lt.u32 	%p146, %r141, -2147483647;
	@%p146 bra 	LBB0_129;
// %bb.86:
	add.f32 	%f675, %f146, 0fBF800000;
	setp.lt.f32 	%p149, %f147, 0fC0000000;
	selp.f32 	%f676, %f675, %f146, %p149;
	add.f32 	%f906, %f676, 0fBF800000;
	bra.uni 	LBB0_131;
LBB0_129:
	add.f32 	%f906, %f146, 0f3F800000;
	setp.ltu.f32 	%p147, %f147, 0f40800000;
	@%p147 bra 	LBB0_131;
// %bb.130:                             // %__nv_fmaf_rn.exit.i.i.i1613
	fma.rn.f32 	%f672, %f181, 0fC0400000, %f147;
	setp.ge.f32 	%p148, %f672, 0f00000000;
	selp.f32 	%f673, %f906, %f146, %p148;
	add.f32 	%f674, %f673, 0f3F800000;
	add.f32 	%f906, %f674, 0f3F800000;
LBB0_131:                               // %__internal_fmodf_fastpath_quot.exit.i.i1616
	fma.rn.f32 	%f908, %f906, 0fC0000000, %f908;
LBB0_136:                               // %__internal_fmodf_kernel.exit.i1645
	abs.f32 	%f688, %f908;
	setp.gtu.f32 	%p155, %f688, 0f7F800000;
	@%p155 bra 	LBB0_138;
// %bb.137:
	mov.b32 	%r372, %f109;
	and.b32  	%r373, %r372, -2147483648;
	mov.b32 	%r374, %f908;
	or.b32  	%r375, %r373, %r374;
	mov.b32 	%f908, %r375;
LBB0_138:                               // %__nv_fmodf.exit1648
	{ // callseq 9, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd34;
	st.param.b32 	[param0+8], %r180;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd60;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd61;
	.param .b64 retval0;
	call.uni (retval0), 
	julia_power_by_squaring_13454, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64 	%rd78, [retval0+0];
	} // callseq 9
	cvt.rn.f32.s64 	%f719, %rd78;
	div.approx.f32 	%f163, %f91, %f719;
	abs.f32 	%f912, %f163;
	setp.lt.f32 	%p163, %f912, 0f40000000;
	@%p163 bra 	LBB0_150;
// %bb.139:
	setp.gtu.f32 	%p164, %f912, 0f4B800000;
	@%p164 bra 	LBB0_146;
	bra.uni 	LBB0_140;
LBB0_146:
	mov.b32 	%r150, %f912;
	and.b32  	%r384, %r150, 8388607;
	or.b32  	%r8024, %r384, 1065353216;
	mov.b32 	%f911, %r8024;
	add.s32 	%r385, %r150, -1073741824;
	and.b32  	%r8025, %r385, -8388608;
	setp.eq.s32 	%p170, %r8025, 0;
	@%p170 bra 	LBB0_149;
// %bb.147:                             // %.lr.ph2340.preheader
	mov.f32 	%f729, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f728,%f729;
	// end inline asm
LBB0_148:                               // %.lr.ph2340
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r386, %r8025, 192937984;
	add.s32 	%r387, %r386, %r8024;
	mov.b32 	%f730, %r387;
	mul.f32 	%f731, %f728, %f730;
	sub.f32 	%f732, %f730, %f731;
	fma.rn.f32 	%f733, %f732, %f728, %f731;
	sub.f32 	%f734, %f730, %f733;
	fma.rz.f32 	%f735, %f734, %f728, %f733;
	cvt.rzi.f32.f32 	%f736, %f735;
	sub.f32 	%f911, %f730, %f736;
	sub.s32 	%r8025, %r8025, %r386;
	mov.b32 	%r8024, %f911;
	setp.ne.s32 	%p171, %r8025, 0;
	setp.ne.s32 	%p172, %r8024, 0;
	and.pred  	%p173, %p171, %p172;
	@%p173 bra 	LBB0_148;
LBB0_149:                               // %__internal_fmodf_slowpath_mod.exit.i.i1695
	setp.gt.u32 	%p174, %r150, 2139095039;
	selp.f32 	%f737, 0f7FFFFFFF, 0f4B800000, %p174;
	mul.f32 	%f738, %f911, 0f34000000;
	mul.f32 	%f912, %f737, %f738;
	bra.uni 	LBB0_150;
LBB0_140:                               // %__nv_fast_fdividef.exit.i.i.i1661
	div.approx.f32 	%f721, %f912, %f181;
	cvt.rzi.f32.f32 	%f165, %f721;
	fma.rn.f32 	%f166, %f165, 0fC0000000, %f912;
	mov.b32 	%r149, %f166;
	setp.lt.u32 	%p165, %r149, 1073741824;
	mov.f32 	%f910, %f165;
	@%p165 bra 	LBB0_145;
// %bb.141:
	setp.lt.u32 	%p166, %r149, -2147483647;
	@%p166 bra 	LBB0_143;
// %bb.142:
	add.f32 	%f726, %f165, 0fBF800000;
	setp.lt.f32 	%p169, %f166, 0fC0000000;
	selp.f32 	%f727, %f726, %f165, %p169;
	add.f32 	%f910, %f727, 0fBF800000;
	bra.uni 	LBB0_145;
LBB0_143:
	add.f32 	%f910, %f165, 0f3F800000;
	setp.ltu.f32 	%p167, %f166, 0f40800000;
	@%p167 bra 	LBB0_145;
// %bb.144:                             // %__nv_fmaf_rn.exit.i.i.i1666
	fma.rn.f32 	%f723, %f181, 0fC0400000, %f166;
	setp.ge.f32 	%p168, %f723, 0f00000000;
	selp.f32 	%f724, %f910, %f165, %p168;
	add.f32 	%f725, %f724, 0f3F800000;
	add.f32 	%f910, %f725, 0f3F800000;
LBB0_145:                               // %__internal_fmodf_fastpath_quot.exit.i.i1669
	fma.rn.f32 	%f912, %f910, 0fC0000000, %f912;
LBB0_150:                               // %__internal_fmodf_kernel.exit.i1698
	abs.f32 	%f739, %f912;
	setp.gtu.f32 	%p175, %f739, 0f7F800000;
	@%p175 bra 	LBB0_152;
// %bb.151:
	mov.b32 	%r388, %f163;
	and.b32  	%r389, %r388, -2147483648;
	mov.b32 	%r390, %f912;
	or.b32  	%r391, %r389, %r390;
	mov.b32 	%f912, %r391;
LBB0_152:                               // %__nv_fmodf.exit1701
	{ // callseq 10, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd34;
	st.param.b32 	[param0+8], %r180;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd60;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd61;
	.param .b64 retval0;
	call.uni (retval0), 
	julia_power_by_squaring_13454, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64 	%rd82, [retval0+0];
	} // callseq 10
	setp.eq.s64 	%p183, %rd82, 64;
	@%p183 bra 	LBB0_87;
	bra.uni 	LBB0_153;
LBB0_87:                                // %L1440
	@%p102 bra 	LBB0_99;
// %bb.88:
	setp.gtu.f32 	%p185, %f900, 0f4B800000;
	@%p185 bra 	LBB0_95;
	bra.uni 	LBB0_89;
LBB0_95:
	mov.b32 	%r59, %f900;
	and.b32  	%r406, %r59, 8388607;
	or.b32  	%r7992, %r406, 1065353216;
	mov.b32 	%f899, %r7992;
	add.s32 	%r407, %r59, -1073741824;
	and.b32  	%r7993, %r407, -8388608;
	setp.eq.s32 	%p191, %r7993, 0;
	@%p191 bra 	LBB0_98;
// %bb.96:                              // %.lr.ph2330.preheader
	mov.f32 	%f781, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f780,%f781;
	// end inline asm
LBB0_97:                                // %.lr.ph2330
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r408, %r7993, 192937984;
	add.s32 	%r409, %r408, %r7992;
	mov.b32 	%f782, %r409;
	mul.f32 	%f783, %f780, %f782;
	sub.f32 	%f784, %f782, %f783;
	fma.rn.f32 	%f785, %f784, %f780, %f783;
	sub.f32 	%f786, %f782, %f785;
	fma.rz.f32 	%f787, %f786, %f780, %f785;
	cvt.rzi.f32.f32 	%f788, %f787;
	sub.f32 	%f899, %f782, %f788;
	sub.s32 	%r7993, %r7993, %r408;
	mov.b32 	%r7992, %f899;
	setp.ne.s32 	%p192, %r7993, 0;
	setp.ne.s32 	%p193, %r7992, 0;
	and.pred  	%p194, %p192, %p193;
	@%p194 bra 	LBB0_97;
LBB0_98:                                // %__internal_fmodf_slowpath_mod.exit.i.i1536
	setp.gt.u32 	%p195, %r59, 2139095039;
	selp.f32 	%f789, 0f7FFFFFFF, 0f4B800000, %p195;
	mul.f32 	%f790, %f899, 0f34000000;
	mul.f32 	%f900, %f789, %f790;
	bra.uni 	LBB0_99;
LBB0_89:                                // %__nv_fast_fdividef.exit.i.i.i1502
	div.approx.f32 	%f773, %f900, %f181;
	cvt.rzi.f32.f32 	%f111, %f773;
	fma.rn.f32 	%f112, %f111, 0fC0000000, %f900;
	mov.b32 	%r58, %f112;
	setp.lt.u32 	%p186, %r58, 1073741824;
	mov.f32 	%f898, %f111;
	@%p186 bra 	LBB0_94;
// %bb.90:
	setp.lt.u32 	%p187, %r58, -2147483647;
	@%p187 bra 	LBB0_92;
// %bb.91:
	add.f32 	%f778, %f111, 0fBF800000;
	setp.lt.f32 	%p190, %f112, 0fC0000000;
	selp.f32 	%f779, %f778, %f111, %p190;
	add.f32 	%f898, %f779, 0fBF800000;
	bra.uni 	LBB0_94;
LBB0_92:
	add.f32 	%f898, %f111, 0f3F800000;
	setp.ltu.f32 	%p188, %f112, 0f40800000;
	@%p188 bra 	LBB0_94;
// %bb.93:                              // %__nv_fmaf_rn.exit.i.i.i1507
	fma.rn.f32 	%f775, %f181, 0fC0400000, %f112;
	setp.ge.f32 	%p189, %f775, 0f00000000;
	selp.f32 	%f776, %f898, %f111, %p189;
	add.f32 	%f777, %f776, 0f3F800000;
	add.f32 	%f898, %f777, 0f3F800000;
LBB0_94:                                // %__internal_fmodf_fastpath_quot.exit.i.i1510
	fma.rn.f32 	%f900, %f898, 0fC0000000, %f900;
LBB0_99:                                // %__internal_fmodf_kernel.exit.i1539
	abs.f32 	%f791, %f900;
	setp.gtu.f32 	%p196, %f791, 0f7F800000;
	@%p196 bra 	LBB0_101;
// %bb.100:
	mov.b32 	%r410, %f900;
	or.b32  	%r411, %r44, %r410;
	mov.b32 	%f900, %r411;
LBB0_101:                               // %__nv_fmodf.exit1542
	@%p122 bra 	LBB0_113;
// %bb.102:
	setp.gtu.f32 	%p205, %f904, 0f4B800000;
	@%p205 bra 	LBB0_109;
	bra.uni 	LBB0_103;
LBB0_109:
	mov.b32 	%r67, %f904;
	and.b32  	%r420, %r67, 8388607;
	or.b32  	%r7994, %r420, 1065353216;
	mov.b32 	%f903, %r7994;
	add.s32 	%r421, %r67, -1073741824;
	and.b32  	%r7995, %r421, -8388608;
	setp.eq.s32 	%p211, %r7995, 0;
	@%p211 bra 	LBB0_112;
// %bb.110:                             // %.lr.ph.preheader
	mov.f32 	%f831, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f830,%f831;
	// end inline asm
LBB0_111:                               // %.lr.ph
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r422, %r7995, 192937984;
	add.s32 	%r423, %r422, %r7994;
	mov.b32 	%f832, %r423;
	mul.f32 	%f833, %f830, %f832;
	sub.f32 	%f834, %f832, %f833;
	fma.rn.f32 	%f835, %f834, %f830, %f833;
	sub.f32 	%f836, %f832, %f835;
	fma.rz.f32 	%f837, %f836, %f830, %f835;
	cvt.rzi.f32.f32 	%f838, %f837;
	sub.f32 	%f903, %f832, %f838;
	sub.s32 	%r7995, %r7995, %r422;
	mov.b32 	%r7994, %f903;
	setp.ne.s32 	%p212, %r7995, 0;
	setp.ne.s32 	%p213, %r7994, 0;
	and.pred  	%p214, %p212, %p213;
	@%p214 bra 	LBB0_111;
LBB0_112:                               // %__internal_fmodf_slowpath_mod.exit.i.i1589
	setp.gt.u32 	%p215, %r67, 2139095039;
	selp.f32 	%f839, 0f7FFFFFFF, 0f4B800000, %p215;
	mul.f32 	%f840, %f903, 0f34000000;
	mul.f32 	%f904, %f839, %f840;
	bra.uni 	LBB0_113;
LBB0_103:                               // %__nv_fast_fdividef.exit.i.i.i1555
	div.approx.f32 	%f823, %f904, %f181;
	cvt.rzi.f32.f32 	%f128, %f823;
	fma.rn.f32 	%f129, %f128, 0fC0000000, %f904;
	mov.b32 	%r66, %f129;
	setp.lt.u32 	%p206, %r66, 1073741824;
	mov.f32 	%f902, %f128;
	@%p206 bra 	LBB0_108;
// %bb.104:
	setp.lt.u32 	%p207, %r66, -2147483647;
	@%p207 bra 	LBB0_106;
// %bb.105:
	add.f32 	%f828, %f128, 0fBF800000;
	setp.lt.f32 	%p210, %f129, 0fC0000000;
	selp.f32 	%f829, %f828, %f128, %p210;
	add.f32 	%f902, %f829, 0fBF800000;
	bra.uni 	LBB0_108;
LBB0_106:
	add.f32 	%f902, %f128, 0f3F800000;
	setp.ltu.f32 	%p208, %f129, 0f40800000;
	@%p208 bra 	LBB0_108;
// %bb.107:                             // %__nv_fmaf_rn.exit.i.i.i1560
	fma.rn.f32 	%f825, %f181, 0fC0400000, %f129;
	setp.ge.f32 	%p209, %f825, 0f00000000;
	selp.f32 	%f826, %f902, %f128, %p209;
	add.f32 	%f827, %f826, 0f3F800000;
	add.f32 	%f902, %f827, 0f3F800000;
LBB0_108:                               // %__internal_fmodf_fastpath_quot.exit.i.i1563
	fma.rn.f32 	%f904, %f902, 0fC0000000, %f904;
LBB0_113:                               // %__internal_fmodf_kernel.exit.i1592
	abs.f32 	%f841, %f904;
	setp.gtu.f32 	%p216, %f841, 0f7F800000;
	@%p216 bra 	LBB0_115;
// %bb.114:
	mov.b32 	%r424, %f904;
	or.b32  	%r425, %r53, %r424;
	mov.b32 	%f904, %r425;
LBB0_115:                               // %__nv_fmodf.exit1595
	setp.le.s32 	%p224, %r6, %r5;
	mov.u32 	%r7981, 0;
	@%p224 bra 	LBB0_126;
// %bb.116:                             // %L1540.lr.ph
	mov.f32 	%f185, 0f43808000;
	div.approx.f32 	%f186, %f184, %f185;
	div.approx.f32 	%f220, %f218, %f185;
	div.approx.f32 	%f255, %f253, %f185;
	div.approx.f32 	%f289, %f287, %f185;
	div.approx.f32 	%f324, %f322, %f185;
	div.approx.f32 	%f358, %f356, %f185;
	div.approx.f32 	%f393, %f391, %f185;
	div.approx.f32 	%f427, %f425, %f185;
	abs.f32 	%f187, %f186;
	abs.f32 	%f221, %f220;
	abs.f32 	%f256, %f255;
	abs.f32 	%f290, %f289;
	abs.f32 	%f325, %f324;
	abs.f32 	%f359, %f358;
	abs.f32 	%f394, %f393;
	abs.f32 	%f428, %f427;
	setp.gt.f32 	%p13, %f187, 0f4B800000;
	mul.f32 	%f188, %f186, 0f00000000;
	setp.gt.f32 	%p19, %f221, 0f4B800000;
	mul.f32 	%f222, %f220, 0f00000000;
	setp.gt.f32 	%p25, %f256, 0f4B800000;
	mul.f32 	%f257, %f255, 0f00000000;
	setp.gt.f32 	%p31, %f290, 0f4B800000;
	mul.f32 	%f291, %f289, 0f00000000;
	setp.gt.f32 	%p37, %f325, 0f4B800000;
	mul.f32 	%f326, %f324, 0f00000000;
	setp.gt.f32 	%p43, %f359, 0f4B800000;
	mul.f32 	%f360, %f358, 0f00000000;
	setp.gt.f32 	%p49, %f394, 0f4B800000;
	mul.f32 	%f395, %f393, 0f00000000;
	setp.gt.f32 	%p55, %f428, 0f4B800000;
	mul.f32 	%f429, %f427, 0f00000000;
	selp.f32 	%f189, %f188, %f186, %p13;
	selp.f32 	%f223, %f222, %f220, %p19;
	selp.f32 	%f258, %f257, %f255, %p25;
	selp.f32 	%f292, %f291, %f289, %p31;
	selp.f32 	%f327, %f326, %f324, %p37;
	selp.f32 	%f361, %f360, %f358, %p43;
	selp.f32 	%f396, %f395, %f393, %p49;
	selp.f32 	%f430, %f429, %f427, %p55;
	add.f32 	%f585, %f892, %f892;
	add.f32 	%f636, %f896, %f896;
	add.f32 	%f190, %f189, %f189;
	add.f32 	%f224, %f223, %f223;
	add.f32 	%f259, %f258, %f258;
	add.f32 	%f293, %f292, %f292;
	add.f32 	%f328, %f327, %f327;
	add.f32 	%f362, %f361, %f361;
	add.f32 	%f397, %f396, %f396;
	add.f32 	%f431, %f430, %f430;
	add.f32 	%f480, %f884, %f884;
	add.f32 	%f532, %f888, %f888;
	mov.b32 	%r329, %f585;
	mov.b32 	%r360, %f636;
	add.f32 	%f689, %f908, %f908;
	add.f32 	%f740, %f912, %f912;
	mov.b32 	%r205, %f190;
	mov.b32 	%r212, %f224;
	mov.b32 	%r223, %f259;
	mov.b32 	%r230, %f293;
	mov.b32 	%r241, %f328;
	mov.b32 	%r248, %f362;
	mov.b32 	%r259, %f397;
	mov.b32 	%r266, %f431;
	mov.b32 	%r284, %f480;
	mov.b32 	%r307, %f532;
	and.b32  	%r330, %r329, -2147483648;
	and.b32  	%r361, %r360, -2147483648;
	mov.b32 	%r376, %f689;
	mov.b32 	%r398, %f740;
	and.b32  	%r206, %r205, -2147483648;
	and.b32  	%r213, %r212, -2147483648;
	and.b32  	%r224, %r223, -2147483648;
	and.b32  	%r231, %r230, -2147483648;
	and.b32  	%r242, %r241, -2147483648;
	and.b32  	%r249, %r248, -2147483648;
	and.b32  	%r260, %r259, -2147483648;
	and.b32  	%r267, %r266, -2147483648;
	and.b32  	%r285, %r284, -2147483648;
	and.b32  	%r308, %r307, -2147483648;
	or.b32  	%r331, %r330, 1056964608;
	or.b32  	%r362, %r361, 1056964608;
	and.b32  	%r377, %r376, -2147483648;
	and.b32  	%r399, %r398, -2147483648;
	add.f32 	%f792, %f900, %f900;
	or.b32  	%r207, %r206, 1056964608;
	or.b32  	%r214, %r213, 1056964608;
	or.b32  	%r225, %r224, 1056964608;
	or.b32  	%r232, %r231, 1056964608;
	or.b32  	%r243, %r242, 1056964608;
	or.b32  	%r250, %r249, 1056964608;
	or.b32  	%r261, %r260, 1056964608;
	or.b32  	%r268, %r267, 1056964608;
	or.b32  	%r286, %r285, 1056964608;
	or.b32  	%r309, %r308, 1056964608;
	mov.b32 	%f586, %r331;
	mov.b32 	%f637, %r362;
	or.b32  	%r378, %r377, 1056964608;
	or.b32  	%r400, %r399, 1056964608;
	mov.b32 	%r412, %f792;
	mov.b32 	%f191, %r207;
	mov.b32 	%f225, %r214;
	mov.b32 	%f260, %r225;
	mov.b32 	%f294, %r232;
	mov.b32 	%f329, %r243;
	mov.b32 	%f363, %r250;
	mov.b32 	%f398, %r261;
	mov.b32 	%f432, %r268;
	mov.b32 	%f481, %r286;
	mov.b32 	%f533, %r309;
	add.f32 	%f587, %f585, %f586;
	abs.f32 	%f589, %f585;
	add.f32 	%f638, %f636, %f637;
	abs.f32 	%f640, %f636;
	mov.b32 	%f690, %r378;
	mov.b32 	%f741, %r400;
	and.b32  	%r413, %r412, -2147483648;
	add.f32 	%f192, %f190, %f191;
	abs.f32 	%f194, %f190;
	add.f32 	%f226, %f224, %f225;
	abs.f32 	%f228, %f224;
	add.f32 	%f261, %f259, %f260;
	abs.f32 	%f263, %f259;
	add.f32 	%f295, %f293, %f294;
	abs.f32 	%f297, %f293;
	add.f32 	%f330, %f328, %f329;
	abs.f32 	%f332, %f328;
	add.f32 	%f364, %f362, %f363;
	abs.f32 	%f366, %f362;
	add.f32 	%f399, %f397, %f398;
	abs.f32 	%f401, %f397;
	add.f32 	%f433, %f431, %f432;
	abs.f32 	%f435, %f431;
	add.f32 	%f482, %f480, %f481;
	abs.f32 	%f484, %f480;
	add.f32 	%f534, %f532, %f533;
	abs.f32 	%f536, %f532;
	cvt.rzi.f32.f32 	%f588, %f587;
	setp.gt.f32 	%p115, %f589, 0f4B000000;
	cvt.rzi.f32.f32 	%f639, %f638;
	setp.gt.f32 	%p135, %f640, 0f4B000000;
	add.f32 	%f691, %f689, %f690;
	abs.f32 	%f693, %f689;
	add.f32 	%f742, %f740, %f741;
	abs.f32 	%f744, %f740;
	or.b32  	%r414, %r413, 1056964608;
	cvt.rzi.f32.f32 	%f193, %f192;
	setp.gt.f32 	%p14, %f194, 0f4B000000;
	cvt.rzi.f32.f32 	%f227, %f226;
	setp.gt.f32 	%p20, %f228, 0f4B000000;
	cvt.rzi.f32.f32 	%f262, %f261;
	setp.gt.f32 	%p26, %f263, 0f4B000000;
	cvt.rzi.f32.f32 	%f296, %f295;
	setp.gt.f32 	%p32, %f297, 0f4B000000;
	cvt.rzi.f32.f32 	%f331, %f330;
	setp.gt.f32 	%p38, %f332, 0f4B000000;
	cvt.rzi.f32.f32 	%f365, %f364;
	setp.gt.f32 	%p44, %f366, 0f4B000000;
	cvt.rzi.f32.f32 	%f400, %f399;
	setp.gt.f32 	%p50, %f401, 0f4B000000;
	cvt.rzi.f32.f32 	%f434, %f433;
	setp.gt.f32 	%p56, %f435, 0f4B000000;
	cvt.rzi.f32.f32 	%f483, %f482;
	setp.gt.f32 	%p74, %f484, 0f4B000000;
	cvt.rzi.f32.f32 	%f535, %f534;
	setp.gt.f32 	%p94, %f536, 0f4B000000;
	selp.f32 	%f590, %f585, %f588, %p115;
	cvt.rzi.f32.f32 	%f591, %f585;
	setp.lt.f32 	%p116, %f589, 0f3F000000;
	selp.f32 	%f641, %f636, %f639, %p135;
	cvt.rzi.f32.f32 	%f642, %f636;
	setp.lt.f32 	%p136, %f640, 0f3F000000;
	cvt.rzi.f32.f32 	%f692, %f691;
	setp.gt.f32 	%p156, %f693, 0f4B000000;
	cvt.rzi.f32.f32 	%f743, %f742;
	setp.gt.f32 	%p176, %f744, 0f4B000000;
	mov.b32 	%f793, %r414;
	selp.f32 	%f195, %f190, %f193, %p14;
	cvt.rzi.f32.f32 	%f196, %f190;
	setp.lt.f32 	%p15, %f194, 0f3F000000;
	selp.f32 	%f229, %f224, %f227, %p20;
	cvt.rzi.f32.f32 	%f230, %f224;
	setp.lt.f32 	%p21, %f228, 0f3F000000;
	selp.f32 	%f264, %f259, %f262, %p26;
	cvt.rzi.f32.f32 	%f265, %f259;
	setp.lt.f32 	%p27, %f263, 0f3F000000;
	selp.f32 	%f298, %f293, %f296, %p32;
	cvt.rzi.f32.f32 	%f299, %f293;
	setp.lt.f32 	%p33, %f297, 0f3F000000;
	selp.f32 	%f333, %f328, %f331, %p38;
	cvt.rzi.f32.f32 	%f334, %f328;
	setp.lt.f32 	%p39, %f332, 0f3F000000;
	selp.f32 	%f367, %f362, %f365, %p44;
	cvt.rzi.f32.f32 	%f368, %f362;
	setp.lt.f32 	%p45, %f366, 0f3F000000;
	selp.f32 	%f402, %f397, %f400, %p50;
	cvt.rzi.f32.f32 	%f403, %f397;
	setp.lt.f32 	%p51, %f401, 0f3F000000;
	selp.f32 	%f436, %f431, %f434, %p56;
	cvt.rzi.f32.f32 	%f437, %f431;
	setp.lt.f32 	%p57, %f435, 0f3F000000;
	selp.f32 	%f485, %f480, %f483, %p74;
	cvt.rzi.f32.f32 	%f486, %f480;
	setp.lt.f32 	%p75, %f484, 0f3F000000;
	selp.f32 	%f537, %f532, %f535, %p94;
	cvt.rzi.f32.f32 	%f538, %f532;
	setp.lt.f32 	%p95, %f536, 0f3F000000;
	selp.f32 	%f592, %f591, %f590, %p116;
	selp.f32 	%f643, %f642, %f641, %p136;
	selp.f32 	%f694, %f689, %f692, %p156;
	cvt.rzi.f32.f32 	%f695, %f689;
	setp.lt.f32 	%p157, %f693, 0f3F000000;
	selp.f32 	%f745, %f740, %f743, %p176;
	cvt.rzi.f32.f32 	%f746, %f740;
	setp.lt.f32 	%p177, %f744, 0f3F000000;
	add.f32 	%f794, %f792, %f793;
	abs.f32 	%f796, %f792;
	selp.f32 	%f197, %f196, %f195, %p15;
	selp.f32 	%f231, %f230, %f229, %p21;
	selp.f32 	%f266, %f265, %f264, %p27;
	selp.f32 	%f300, %f299, %f298, %p33;
	selp.f32 	%f335, %f334, %f333, %p39;
	selp.f32 	%f369, %f368, %f367, %p45;
	selp.f32 	%f404, %f403, %f402, %p51;
	selp.f32 	%f438, %f437, %f436, %p57;
	selp.f32 	%f487, %f486, %f485, %p75;
	selp.f32 	%f539, %f538, %f537, %p95;
	fma.rn.f32 	%f593, %f592, 0fBF000000, %f892;
	fma.rn.f32 	%f644, %f643, 0fBF000000, %f896;
	selp.f32 	%f696, %f695, %f694, %p157;
	selp.f32 	%f747, %f746, %f745, %p177;
	cvt.rzi.f32.f32 	%f795, %f794;
	setp.gt.f32 	%p198, %f796, 0f4B000000;
	fma.rn.f32 	%f198, %f197, 0fBF000000, %f189;
	fma.rn.f32 	%f232, %f231, 0fBF000000, %f223;
	fma.rn.f32 	%f267, %f266, 0fBF000000, %f258;
	fma.rn.f32 	%f301, %f300, 0fBF000000, %f292;
	fma.rn.f32 	%f336, %f335, 0fBF000000, %f327;
	fma.rn.f32 	%f370, %f369, 0fBF000000, %f361;
	fma.rn.f32 	%f405, %f404, 0fBF000000, %f396;
	fma.rn.f32 	%f439, %f438, 0fBF000000, %f430;
	fma.rn.f32 	%f488, %f487, 0fBF000000, %f884;
	fma.rn.f32 	%f540, %f539, 0fBF000000, %f888;
	mul.f32 	%f594, %f593, %f593;
	mul.f32 	%f645, %f644, %f644;
	fma.rn.f32 	%f697, %f696, 0fBF000000, %f908;
	fma.rn.f32 	%f748, %f747, 0fBF000000, %f912;
	selp.f32 	%f797, %f792, %f795, %p198;
	cvt.rzi.f32.f32 	%f798, %f792;
	setp.lt.f32 	%p199, %f796, 0f3F000000;
	mul.f32 	%f199, %f198, %f198;
	mul.f32 	%f233, %f232, %f232;
	mul.f32 	%f268, %f267, %f267;
	mul.f32 	%f302, %f301, %f301;
	mul.f32 	%f337, %f336, %f336;
	mul.f32 	%f371, %f370, %f370;
	mul.f32 	%f406, %f405, %f405;
	mul.f32 	%f440, %f439, %f439;
	mul.f32 	%f489, %f488, %f488;
	mul.f32 	%f541, %f540, %f540;
	fma.rn.f32 	%f595, %f594, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f596, %f594, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f646, %f645, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f647, %f645, 0f3E684E12, 0fBFAAD2E0;
	mul.f32 	%f698, %f697, %f697;
	mul.f32 	%f749, %f748, %f748;
	selp.f32 	%f799, %f798, %f797, %p199;
	cvt.rzi.s32.f32 	%r208, %f197;
	fma.rn.f32 	%f200, %f199, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f201, %f199, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r215, %f231;
	fma.rn.f32 	%f234, %f233, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f235, %f233, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r226, %f266;
	fma.rn.f32 	%f269, %f268, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f270, %f268, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r233, %f300;
	fma.rn.f32 	%f303, %f302, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f304, %f302, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r244, %f335;
	fma.rn.f32 	%f338, %f337, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f339, %f337, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r251, %f369;
	fma.rn.f32 	%f372, %f371, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f373, %f371, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r262, %f404;
	fma.rn.f32 	%f407, %f406, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f408, %f406, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r269, %f438;
	fma.rn.f32 	%f441, %f440, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f442, %f440, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f490, %f489, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f491, %f489, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f542, %f541, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f543, %f541, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r332, %f592;
	fma.rn.f32 	%f597, %f595, %f594, 0fC0A55DF6;
	fma.rn.f32 	%f598, %f596, %f594, 0f4081E0CF;
	fma.rn.f32 	%f599, %f594, %f593, 0f00000000;
	cvt.rzi.s32.f32 	%r363, %f643;
	fma.rn.f32 	%f648, %f646, %f645, 0fC0A55DF6;
	fma.rn.f32 	%f649, %f647, %f645, 0f4081E0CF;
	fma.rn.f32 	%f650, %f645, %f644, 0f00000000;
	fma.rn.f32 	%f699, %f698, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f700, %f698, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f750, %f749, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f751, %f749, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f800, %f799, 0fBF000000, %f900;
	add.s32 	%r209, %r208, 1;
	fma.rn.f32 	%f202, %f200, %f199, 0fC0A55DF6;
	fma.rn.f32 	%f203, %f201, %f199, 0f4081E0CF;
	fma.rn.f32 	%f204, %f199, %f198, 0f00000000;
	add.s32 	%r216, %r215, 1;
	fma.rn.f32 	%f236, %f234, %f233, 0fC0A55DF6;
	fma.rn.f32 	%f237, %f235, %f233, 0f4081E0CF;
	fma.rn.f32 	%f238, %f233, %f232, 0f00000000;
	add.s32 	%r227, %r226, 1;
	fma.rn.f32 	%f271, %f269, %f268, 0fC0A55DF6;
	fma.rn.f32 	%f272, %f270, %f268, 0f4081E0CF;
	fma.rn.f32 	%f273, %f268, %f267, 0f00000000;
	add.s32 	%r234, %r233, 1;
	fma.rn.f32 	%f305, %f303, %f302, 0fC0A55DF6;
	fma.rn.f32 	%f306, %f304, %f302, 0f4081E0CF;
	fma.rn.f32 	%f307, %f302, %f301, 0f00000000;
	add.s32 	%r245, %r244, 1;
	fma.rn.f32 	%f340, %f338, %f337, 0fC0A55DF6;
	fma.rn.f32 	%f341, %f339, %f337, 0f4081E0CF;
	fma.rn.f32 	%f342, %f337, %f336, 0f00000000;
	add.s32 	%r252, %r251, 1;
	fma.rn.f32 	%f374, %f372, %f371, 0fC0A55DF6;
	fma.rn.f32 	%f375, %f373, %f371, 0f4081E0CF;
	fma.rn.f32 	%f376, %f371, %f370, 0f00000000;
	add.s32 	%r263, %r262, 1;
	fma.rn.f32 	%f409, %f407, %f406, 0fC0A55DF6;
	fma.rn.f32 	%f410, %f408, %f406, 0f4081E0CF;
	fma.rn.f32 	%f411, %f406, %f405, 0f00000000;
	add.s32 	%r270, %r269, 1;
	fma.rn.f32 	%f443, %f441, %f440, 0fC0A55DF6;
	fma.rn.f32 	%f444, %f442, %f440, 0f4081E0CF;
	fma.rn.f32 	%f445, %f440, %f439, 0f00000000;
	cvt.rzi.s32.f32 	%r287, %f487;
	fma.rn.f32 	%f492, %f490, %f489, 0fC0A55DF6;
	fma.rn.f32 	%f493, %f491, %f489, 0f4081E0CF;
	fma.rn.f32 	%f494, %f489, %f488, 0f00000000;
	cvt.rzi.s32.f32 	%r310, %f539;
	fma.rn.f32 	%f544, %f542, %f541, 0fC0A55DF6;
	fma.rn.f32 	%f545, %f543, %f541, 0f4081E0CF;
	fma.rn.f32 	%f546, %f541, %f540, 0f00000000;
	fma.rn.f32 	%f600, %f598, %f594, 0fC09DE9E6;
	fma.rn.f32 	%f601, %f597, %f599, 0f00000000;
	and.b32  	%r333, %r332, 1;
	fma.rn.f32 	%f651, %f649, %f645, 0fC09DE9E6;
	fma.rn.f32 	%f652, %f648, %f650, 0f00000000;
	and.b32  	%r364, %r363, 1;
	cvt.rzi.s32.f32 	%r379, %f696;
	fma.rn.f32 	%f701, %f699, %f698, 0fC0A55DF6;
	fma.rn.f32 	%f702, %f700, %f698, 0f4081E0CF;
	fma.rn.f32 	%f703, %f698, %f697, 0f00000000;
	cvt.rzi.s32.f32 	%r401, %f747;
	fma.rn.f32 	%f752, %f750, %f749, 0fC0A55DF6;
	fma.rn.f32 	%f753, %f751, %f749, 0f4081E0CF;
	fma.rn.f32 	%f754, %f749, %f748, 0f00000000;
	mul.f32 	%f801, %f800, %f800;
	fma.rn.f32 	%f205, %f203, %f199, 0fC09DE9E6;
	fma.rn.f32 	%f206, %f202, %f204, 0f00000000;
	and.b32  	%r210, %r209, 1;
	fma.rn.f32 	%f239, %f237, %f233, 0fC09DE9E6;
	fma.rn.f32 	%f240, %f236, %f238, 0f00000000;
	and.b32  	%r217, %r216, 1;
	fma.rn.f32 	%f274, %f272, %f268, 0fC09DE9E6;
	fma.rn.f32 	%f275, %f271, %f273, 0f00000000;
	and.b32  	%r228, %r227, 1;
	fma.rn.f32 	%f308, %f306, %f302, 0fC09DE9E6;
	fma.rn.f32 	%f309, %f305, %f307, 0f00000000;
	and.b32  	%r235, %r234, 1;
	fma.rn.f32 	%f343, %f341, %f337, 0fC09DE9E6;
	fma.rn.f32 	%f344, %f340, %f342, 0f00000000;
	and.b32  	%r246, %r245, 1;
	fma.rn.f32 	%f377, %f375, %f371, 0fC09DE9E6;
	fma.rn.f32 	%f378, %f374, %f376, 0f00000000;
	and.b32  	%r253, %r252, 1;
	fma.rn.f32 	%f412, %f410, %f406, 0fC09DE9E6;
	fma.rn.f32 	%f413, %f409, %f411, 0f00000000;
	and.b32  	%r264, %r263, 1;
	fma.rn.f32 	%f446, %f444, %f440, 0fC09DE9E6;
	fma.rn.f32 	%f447, %f443, %f445, 0f00000000;
	and.b32  	%r271, %r270, 1;
	fma.rn.f32 	%f495, %f493, %f489, 0fC09DE9E6;
	fma.rn.f32 	%f496, %f492, %f494, 0f00000000;
	and.b32  	%r288, %r287, 1;
	fma.rn.f32 	%f547, %f545, %f541, 0fC09DE9E6;
	fma.rn.f32 	%f548, %f544, %f546, 0f00000000;
	and.b32  	%r311, %r310, 1;
	fma.rn.f32 	%f602, %f600, %f594, 0f3F800000;
	fma.rn.f32 	%f603, %f593, 0f40490FDB, %f601;
	setp.eq.b32 	%p117, %r333, 1;
	fma.rn.f32 	%f653, %f651, %f645, 0f3F800000;
	fma.rn.f32 	%f654, %f644, 0f40490FDB, %f652;
	setp.eq.b32 	%p137, %r364, 1;
	fma.rn.f32 	%f704, %f702, %f698, 0fC09DE9E6;
	fma.rn.f32 	%f705, %f701, %f703, 0f00000000;
	and.b32  	%r380, %r379, 1;
	fma.rn.f32 	%f755, %f753, %f749, 0fC09DE9E6;
	fma.rn.f32 	%f756, %f752, %f754, 0f00000000;
	and.b32  	%r402, %r401, 1;
	fma.rn.f32 	%f802, %f801, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f803, %f801, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f207, %f205, %f199, 0f3F800000;
	fma.rn.f32 	%f208, %f198, 0f40490FDB, %f206;
	setp.eq.b32 	%p16, %r210, 1;
	fma.rn.f32 	%f241, %f239, %f233, 0f3F800000;
	fma.rn.f32 	%f242, %f232, 0f40490FDB, %f240;
	setp.eq.b32 	%p22, %r217, 1;
	fma.rn.f32 	%f276, %f274, %f268, 0f3F800000;
	fma.rn.f32 	%f277, %f267, 0f40490FDB, %f275;
	setp.eq.b32 	%p28, %r228, 1;
	fma.rn.f32 	%f310, %f308, %f302, 0f3F800000;
	fma.rn.f32 	%f311, %f301, 0f40490FDB, %f309;
	setp.eq.b32 	%p34, %r235, 1;
	fma.rn.f32 	%f345, %f343, %f337, 0f3F800000;
	fma.rn.f32 	%f346, %f336, 0f40490FDB, %f344;
	setp.eq.b32 	%p40, %r246, 1;
	fma.rn.f32 	%f379, %f377, %f371, 0f3F800000;
	fma.rn.f32 	%f380, %f370, 0f40490FDB, %f378;
	setp.eq.b32 	%p46, %r253, 1;
	fma.rn.f32 	%f414, %f412, %f406, 0f3F800000;
	fma.rn.f32 	%f415, %f405, 0f40490FDB, %f413;
	setp.eq.b32 	%p52, %r264, 1;
	fma.rn.f32 	%f448, %f446, %f440, 0f3F800000;
	fma.rn.f32 	%f449, %f439, 0f40490FDB, %f447;
	setp.eq.b32 	%p58, %r271, 1;
	fma.rn.f32 	%f497, %f495, %f489, 0f3F800000;
	fma.rn.f32 	%f498, %f488, 0f40490FDB, %f496;
	setp.eq.b32 	%p76, %r288, 1;
	fma.rn.f32 	%f549, %f547, %f541, 0f3F800000;
	fma.rn.f32 	%f550, %f540, 0f40490FDB, %f548;
	setp.eq.b32 	%p96, %r311, 1;
	selp.f32 	%f604, %f602, %f603, %p117;
	and.b32  	%r334, %r332, 2;
	selp.f32 	%f655, %f653, %f654, %p137;
	and.b32  	%r365, %r363, 2;
	fma.rn.f32 	%f706, %f704, %f698, 0f3F800000;
	fma.rn.f32 	%f707, %f697, 0f40490FDB, %f705;
	setp.eq.b32 	%p158, %r380, 1;
	fma.rn.f32 	%f757, %f755, %f749, 0f3F800000;
	fma.rn.f32 	%f758, %f748, 0f40490FDB, %f756;
	setp.eq.b32 	%p178, %r402, 1;
	cvt.rzi.s32.f32 	%r415, %f799;
	fma.rn.f32 	%f804, %f802, %f801, 0fC0A55DF6;
	fma.rn.f32 	%f805, %f803, %f801, 0f4081E0CF;
	fma.rn.f32 	%f806, %f801, %f800, 0f00000000;
	selp.f32 	%f209, %f207, %f208, %p16;
	and.b32  	%r211, %r209, 2;
	mov.f32 	%f210, 0f00000000;
	selp.f32 	%f243, %f241, %f242, %p22;
	and.b32  	%r218, %r216, 2;
	selp.f32 	%f278, %f276, %f277, %p28;
	and.b32  	%r229, %r227, 2;
	selp.f32 	%f312, %f310, %f311, %p34;
	and.b32  	%r236, %r234, 2;
	selp.f32 	%f347, %f345, %f346, %p40;
	and.b32  	%r247, %r245, 2;
	selp.f32 	%f381, %f379, %f380, %p46;
	and.b32  	%r254, %r252, 2;
	selp.f32 	%f416, %f414, %f415, %p52;
	and.b32  	%r265, %r263, 2;
	selp.f32 	%f450, %f448, %f449, %p58;
	and.b32  	%r272, %r270, 2;
	selp.f32 	%f499, %f497, %f498, %p76;
	and.b32  	%r289, %r287, 2;
	selp.f32 	%f551, %f549, %f550, %p96;
	and.b32  	%r312, %r310, 2;
	setp.eq.s32 	%p118, %r334, 0;
	neg.f32 	%f606, %f604;
	add.s32 	%r335, %r332, 1;
	cvt.rzi.f32.f32 	%f611, %f892;
	setp.eq.s32 	%p138, %r365, 0;
	neg.f32 	%f657, %f655;
	add.s32 	%r366, %r363, 1;
	cvt.rzi.f32.f32 	%f662, %f896;
	selp.f32 	%f708, %f706, %f707, %p158;
	and.b32  	%r381, %r379, 2;
	selp.f32 	%f759, %f757, %f758, %p178;
	and.b32  	%r403, %r401, 2;
	fma.rn.f32 	%f807, %f805, %f801, 0fC09DE9E6;
	fma.rn.f32 	%f808, %f804, %f806, 0f00000000;
	and.b32  	%r416, %r415, 1;
	setp.eq.s32 	%p17, %r211, 0;
	sub.f32 	%f211, %f210, %f209;
	setp.eq.s32 	%p23, %r218, 0;
	sub.f32 	%f245, %f210, %f243;
	setp.eq.s32 	%p29, %r229, 0;
	sub.f32 	%f280, %f210, %f278;
	setp.eq.s32 	%p35, %r236, 0;
	sub.f32 	%f314, %f210, %f312;
	setp.eq.s32 	%p41, %r247, 0;
	sub.f32 	%f349, %f210, %f347;
	setp.eq.s32 	%p47, %r254, 0;
	sub.f32 	%f383, %f210, %f381;
	setp.eq.s32 	%p53, %r265, 0;
	sub.f32 	%f418, %f210, %f416;
	setp.eq.s32 	%p59, %r272, 0;
	sub.f32 	%f452, %f210, %f450;
	setp.eq.s32 	%p77, %r289, 0;
	neg.f32 	%f501, %f499;
	add.s32 	%r290, %r287, 1;
	cvt.rzi.f32.f32 	%f506, %f884;
	setp.eq.s32 	%p97, %r312, 0;
	neg.f32 	%f553, %f551;
	add.s32 	%r313, %r310, 1;
	cvt.rzi.f32.f32 	%f558, %f888;
	selp.f32 	%f605, %f603, %f602, %p117;
	selp.f32 	%f607, %f604, %f606, %p118;
	and.b32  	%r336, %r335, 2;
	setp.eq.f32 	%p120, %f611, %f892;
	mul.f32 	%f612, %f892, 0f00000000;
	selp.f32 	%f656, %f654, %f653, %p137;
	selp.f32 	%f658, %f655, %f657, %p138;
	and.b32  	%r367, %r366, 2;
	setp.eq.f32 	%p140, %f662, %f896;
	mul.f32 	%f663, %f896, 0f00000000;
	setp.eq.s32 	%p159, %r381, 0;
	neg.f32 	%f710, %f708;
	add.s32 	%r382, %r379, 1;
	cvt.rzi.f32.f32 	%f715, %f908;
	setp.eq.s32 	%p179, %r403, 0;
	neg.f32 	%f761, %f759;
	add.s32 	%r404, %r401, 1;
	cvt.rzi.f32.f32 	%f766, %f912;
	fma.rn.f32 	%f809, %f807, %f801, 0f3F800000;
	fma.rn.f32 	%f810, %f800, 0f40490FDB, %f808;
	setp.eq.b32 	%p200, %r416, 1;
	selp.f32 	%f212, %f209, %f211, %p17;
	selp.f32 	%f246, %f243, %f245, %p23;
	selp.f32 	%f281, %f278, %f280, %p29;
	selp.f32 	%f315, %f312, %f314, %p35;
	selp.f32 	%f350, %f347, %f349, %p41;
	selp.f32 	%f384, %f381, %f383, %p47;
	selp.f32 	%f419, %f416, %f418, %p53;
	selp.f32 	%f453, %f450, %f452, %p59;
	selp.f32 	%f500, %f498, %f497, %p76;
	selp.f32 	%f502, %f499, %f501, %p77;
	and.b32  	%r291, %r290, 2;
	setp.eq.f32 	%p79, %f506, %f884;
	mul.f32 	%f507, %f884, 0f00000000;
	selp.f32 	%f552, %f550, %f549, %p96;
	selp.f32 	%f554, %f551, %f553, %p97;
	and.b32  	%r314, %r313, 2;
	setp.eq.f32 	%p99, %f558, %f888;
	mul.f32 	%f559, %f888, 0f00000000;
	setp.eq.s32 	%p119, %r336, 0;
	sub.f32 	%f609, %f210, %f605;
	selp.f32 	%f89, %f612, %f607, %p120;
	abs.f32 	%f613, %f892;
	setp.eq.s32 	%p139, %r367, 0;
	sub.f32 	%f660, %f210, %f656;
	selp.f32 	%f664, %f663, %f658, %p140;
	abs.f32 	%f665, %f896;
	selp.f32 	%f709, %f707, %f706, %p158;
	selp.f32 	%f711, %f708, %f710, %p159;
	and.b32  	%r383, %r382, 2;
	setp.eq.f32 	%p161, %f715, %f908;
	mul.f32 	%f716, %f908, 0f00000000;
	selp.f32 	%f760, %f758, %f757, %p178;
	selp.f32 	%f762, %f759, %f761, %p179;
	and.b32  	%r405, %r404, 2;
	setp.eq.f32 	%p181, %f766, %f912;
	mul.f32 	%f767, %f912, 0f00000000;
	selp.f32 	%f811, %f809, %f810, %p200;
	and.b32  	%r417, %r415, 2;
	mul.f32 	%f144, %f212, %f212;
	mul.f32 	%f4, %f246, %f246;
	mul.f32 	%f8, %f281, %f281;
	mul.f32 	%f13, %f315, %f315;
	mul.f32 	%f17, %f350, %f350;
	mul.f32 	%f22, %f384, %f384;
	mul.f32 	%f26, %f419, %f419;
	mul.f32 	%f31, %f453, %f453;
	setp.eq.s32 	%p78, %r291, 0;
	sub.f32 	%f504, %f210, %f500;
	selp.f32 	%f52, %f507, %f502, %p79;
	abs.f32 	%f508, %f884;
	setp.eq.s32 	%p98, %r314, 0;
	sub.f32 	%f556, %f210, %f552;
	selp.f32 	%f560, %f559, %f554, %p99;
	abs.f32 	%f561, %f888;
	selp.f32 	%f610, %f605, %f609, %p119;
	setp.gt.f32 	%p121, %f613, 0f4B800000;
	add.f32 	%f614, %f89, 0f3F800000;
	selp.f32 	%f661, %f656, %f660, %p139;
	setp.gt.f32 	%p141, %f665, 0f4B800000;
	add.f32 	%f666, %f664, 0f3F800000;
	setp.eq.s32 	%p160, %r383, 0;
	sub.f32 	%f713, %f210, %f709;
	selp.f32 	%f161, %f716, %f711, %p161;
	abs.f32 	%f717, %f908;
	setp.eq.s32 	%p180, %r405, 0;
	sub.f32 	%f764, %f210, %f760;
	selp.f32 	%f768, %f767, %f762, %p181;
	abs.f32 	%f769, %f912;
	setp.eq.s32 	%p201, %r417, 0;
	neg.f32 	%f813, %f811;
	add.s32 	%r418, %r415, 1;
	cvt.rzi.f32.f32 	%f818, %f900;
	mul.f32 	%f216, %f144, 0f3C0AF64E;
	mul.f32 	%f250, %f4, 0f3C0AF64E;
	mul.f32 	%f285, %f8, 0f3C0AF64E;
	mul.f32 	%f319, %f13, 0f3C0AF64E;
	mul.f32 	%f354, %f17, 0f3C0AF64E;
	mul.f32 	%f388, %f22, 0f3C0AF64E;
	mul.f32 	%f423, %f26, 0f3C0AF64E;
	mul.f32 	%f456, %f31, 0f3C0AF64E;
	selp.f32 	%f505, %f500, %f504, %p78;
	setp.gt.f32 	%p80, %f508, 0f4B800000;
	add.f32 	%f509, %f52, 0f3F800000;
	selp.f32 	%f557, %f552, %f556, %p98;
	setp.gt.f32 	%p100, %f561, 0f4B800000;
	add.f32 	%f562, %f560, 0f3F800000;
	selp.f32 	%f90, %f614, %f610, %p121;
	selp.f32 	%f667, %f666, %f661, %p141;
	selp.f32 	%f714, %f709, %f713, %p160;
	setp.gt.f32 	%p162, %f717, 0f4B800000;
	add.f32 	%f718, %f161, 0f3F800000;
	selp.f32 	%f765, %f760, %f764, %p180;
	setp.gt.f32 	%p182, %f769, 0f4B800000;
	add.f32 	%f770, %f768, 0f3F800000;
	selp.f32 	%f812, %f810, %f809, %p200;
	selp.f32 	%f814, %f811, %f813, %p201;
	and.b32  	%r419, %r418, 2;
	setp.eq.f32 	%p203, %f818, %f900;
	mul.f32 	%f819, %f900, 0f00000000;
	mul.f32 	%f3, %f216, %f874;
	mul.f32 	%f251, %f250, %f875;
	mul.f32 	%f12, %f285, %f876;
	mul.f32 	%f320, %f319, %f877;
	mul.f32 	%f21, %f354, %f878;
	mul.f32 	%f389, %f388, %f879;
	mul.f32 	%f30, %f423, %f880;
	mul.f32 	%f457, %f456, %f881;
	selp.f32 	%f53, %f509, %f505, %p80;
	selp.f32 	%f563, %f562, %f557, %p100;
	mov.b32 	%r350, %f667;
	mov.b32 	%r349, %f90;
	mov.b32 	%r356, %f664;
	mov.b32 	%r355, %f89;
	selp.f32 	%f162, %f718, %f714, %p162;
	selp.f32 	%f771, %f770, %f765, %p182;
	setp.eq.s32 	%p202, %r419, 0;
	sub.f32 	%f816, %f210, %f812;
	selp.f32 	%f126, %f819, %f814, %p203;
	abs.f32 	%f820, %f900;
	ld.param.u64 	%rd2, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_6];
	ld.param.u64 	%rd3, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_7];
	and.b32  	%r126, %r125, 32;
	mov.b32 	%r221, %f251;
	mov.b32 	%r220, %f3;
	mov.b32 	%r239, %f320;
	mov.b32 	%r238, %f12;
	mov.b32 	%r257, %f389;
	mov.b32 	%r256, %f21;
	mov.b32 	%r275, %f457;
	mov.b32 	%r274, %f30;
	mov.b32 	%r303, %f563;
	mov.b32 	%r302, %f53;
	mov.b32 	%r306, %f560;
	mov.b32 	%r305, %f52;
	xor.b32  	%r353, %r356, -2147483648;
	xor.b32  	%r352, %r355, -2147483648;
	mov.b32 	%r394, %f771;
	mov.b32 	%r393, %f162;
	mov.b32 	%r397, %f768;
	mov.b32 	%r396, %f161;
	selp.f32 	%f817, %f812, %f816, %p202;
	setp.gt.f32 	%p204, %f820, 0f4B800000;
	add.f32 	%f821, %f126, 0f3F800000;
	// begin inline asm
	cvt.rn.f16x2.f32 %r219, %r221, %r220;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r237, %r239, %r238;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r255, %r257, %r256;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r273, %r275, %r274;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r301, %r303, %r302;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r304, %r306, %r305;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r348, %r350, %r349;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r351, %r353, %r352;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r354, %r356, %r355;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r357, %r350, %r349;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r392, %r394, %r393;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r395, %r397, %r396;
	// end inline asm
	selp.f32 	%f127, %f821, %f817, %p204;
	add.f32 	%f842, %f904, %f904;
	mov.b32 	%r438, %f842;
	and.b32  	%r439, %r438, -2147483648;
	or.b32  	%r440, %r439, 1056964608;
	mov.b32 	%f843, %r440;
	add.f32 	%f844, %f842, %f843;
	cvt.rzi.f32.f32 	%f845, %f844;
	abs.f32 	%f846, %f842;
	setp.gt.f32 	%p217, %f846, 0f4B000000;
	selp.f32 	%f847, %f842, %f845, %p217;
	cvt.rzi.f32.f32 	%f848, %f842;
	setp.lt.f32 	%p218, %f846, 0f3F000000;
	selp.f32 	%f849, %f848, %f847, %p218;
	cvt.rzi.s32.f32 	%r441, %f849;
	fma.rn.f32 	%f850, %f849, 0fBF000000, %f904;
	mul.f32 	%f851, %f850, %f850;
	fma.rn.f32 	%f852, %f851, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f853, %f851, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f854, %f852, %f851, 0fC0A55DF6;
	fma.rn.f32 	%f855, %f853, %f851, 0f4081E0CF;
	fma.rn.f32 	%f856, %f851, %f850, 0f00000000;
	fma.rn.f32 	%f857, %f855, %f851, 0fC09DE9E6;
	fma.rn.f32 	%f858, %f854, %f856, 0f00000000;
	fma.rn.f32 	%f859, %f857, %f851, 0f3F800000;
	fma.rn.f32 	%f860, %f850, 0f40490FDB, %f858;
	and.b32  	%r442, %r441, 1;
	setp.eq.b32 	%p219, %r442, 1;
	selp.f32 	%f861, %f859, %f860, %p219;
	selp.f32 	%f862, %f860, %f859, %p219;
	and.b32  	%r443, %r441, 2;
	setp.eq.s32 	%p220, %r443, 0;
	neg.f32 	%f863, %f861;
	selp.f32 	%f864, %f861, %f863, %p220;
	add.s32 	%r444, %r441, 1;
	and.b32  	%r445, %r444, 2;
	setp.eq.s32 	%p221, %r445, 0;
	sub.f32 	%f866, %f210, %f862;
	selp.f32 	%f867, %f862, %f866, %p221;
	cvt.rzi.f32.f32 	%f868, %f904;
	setp.eq.f32 	%p222, %f868, %f904;
	mul.f32 	%f869, %f904, 0f00000000;
	selp.f32 	%f870, %f869, %f864, %p222;
	abs.f32 	%f871, %f904;
	setp.gt.f32 	%p223, %f871, 0f4B800000;
	add.f32 	%f872, %f870, 0f3F800000;
	selp.f32 	%f873, %f872, %f867, %p223;
	mov.b32 	%r428, %f873;
	mov.b32 	%r427, %f127;
	// begin inline asm
	cvt.rn.f16x2.f32 %r426, %r428, %r427;
	// end inline asm
	mov.b32 	%r434, %f870;
	xor.b32  	%r431, %r434, -2147483648;
	mov.b32 	%r433, %f126;
	xor.b32  	%r430, %r433, -2147483648;
	// begin inline asm
	cvt.rn.f16x2.f32 %r429, %r431, %r430;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r432, %r434, %r433;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r435, %r428, %r427;
	// end inline asm
	shl.b32 	%r78, %r5, 12;
	and.b32  	%r79, %r125, 12;
	shl.b32 	%r447, %r2, 11;
	and.b32  	%r448, %r447, 2048;
	and.b32  	%r80, %r125, 16;
	or.b32  	%r449, %r79, %r78;
	or.b32  	%r450, %r449, %r448;
	or.b32  	%r81, %r450, %r80;
	or.b32  	%r451, %r79, %r448;
	or.b32  	%r82, %r451, %r80;
	and.b32  	%r83, %r1, 8;
	and.b32  	%r452, %r3, 1;
	mul.lo.s32 	%r453, %r452, 1040;
	mul.lo.s32 	%r454, %r136, 65;
	shl.b32 	%r455, %r1, 4;
	or.b32  	%r456, %r455, %r83;
	shr.u32 	%r457, %r456, 2;
	and.b32  	%r458, %r457, 14;
	shr.u32 	%r459, %r3, 1;
	bfe.u32 	%r460, %r3, 1, 1;
	mul.lo.s32 	%r461, %r460, 520;
	shr.u32 	%r462, %r3, 3;
	mul.lo.s32 	%r463, %r462, 130;
	bfe.u32 	%r464, %r3, 2, 1;
	mul.lo.s32 	%r465, %r464, 260;
	add.s32 	%r466, %r454, %r453;
	add.s32 	%r467, %r466, %r458;
	add.s32 	%r468, %r467, %r80;
	add.s32 	%r469, %r468, %r461;
	add.s32 	%r470, %r469, %r463;
	add.s32 	%r471, %r470, %r465;
	mul.wide.u32 	%rd86, %r471, 4;
	mov.u64 	%rd87, shmem;
	add.s64 	%rd5, %rd87, %rd86;
	cvt.u64.u32 	%rd88, %r465;
	cvt.u64.u32 	%rd89, %r463;
	cvt.u64.u32 	%rd90, %r461;
	cvt.u64.u32 	%rd91, %r80;
	cvt.u64.u32 	%rd92, %r458;
	cvt.u64.u32 	%rd93, %r454;
	cvt.u64.u32 	%rd94, %r453;
	add.s64 	%rd95, %rd94, %rd93;
	add.s64 	%rd96, %rd95, %rd92;
	add.s64 	%rd97, %rd96, %rd91;
	add.s64 	%rd98, %rd97, %rd90;
	add.s64 	%rd99, %rd98, %rd89;
	add.s64 	%rd100, %rd99, %rd88;
	shl.b64 	%rd101, %rd100, 2;
	add.s64 	%rd6, %rd87, %rd101;
	add.s32 	%r472, %r471, 1;
	mul.wide.u32 	%rd102, %r472, 4;
	add.s64 	%rd7, %rd87, %rd102;
	add.s32 	%r473, %r471, 33;
	mul.wide.u32 	%rd103, %r473, 4;
	add.s64 	%rd8, %rd87, %rd103;
	add.s32 	%r474, %r471, 2081;
	mul.wide.u32 	%rd104, %r474, 4;
	add.s64 	%rd9, %rd87, %rd104;
	add.s32 	%r475, %r471, 2113;
	mul.wide.u32 	%rd105, %r475, 4;
	add.s64 	%rd10, %rd87, %rd105;
	add.s32 	%r476, %r471, 2082;
	mul.wide.u32 	%rd106, %r476, 4;
	add.s64 	%rd11, %rd87, %rd106;
	add.s32 	%r477, %r471, 2114;
	mul.wide.u32 	%rd107, %r477, 4;
	add.s64 	%rd12, %rd87, %rd107;
	add.s32 	%r478, %r471, 4162;
	mul.wide.u32 	%rd108, %r478, 4;
	add.s64 	%rd13, %rd87, %rd108;
	add.s32 	%r479, %r471, 4194;
	mul.wide.u32 	%rd109, %r479, 4;
	add.s64 	%rd14, %rd87, %rd109;
	add.s32 	%r480, %r471, 4163;
	mul.wide.u32 	%rd110, %r480, 4;
	add.s64 	%rd15, %rd87, %rd110;
	add.s32 	%r481, %r471, 4195;
	mul.wide.u32 	%rd111, %r481, 4;
	add.s64 	%rd16, %rd87, %rd111;
	add.s32 	%r482, %r471, 6243;
	mul.wide.u32 	%rd112, %r482, 4;
	add.s64 	%rd17, %rd87, %rd112;
	add.s32 	%r483, %r471, 6275;
	mul.wide.u32 	%rd113, %r483, 4;
	add.s64 	%rd18, %rd87, %rd113;
	add.s32 	%r484, %r471, 6244;
	mul.wide.u32 	%rd114, %r484, 4;
	add.s64 	%rd19, %rd87, %rd114;
	add.s32 	%r485, %r471, 6276;
	mul.wide.u32 	%rd115, %r485, 4;
	add.s64 	%rd20, %rd87, %rd115;
	mul.lo.s32 	%r486, %r138, 1040;
	and.b32  	%r487, %r4, 32;
	mul.lo.s32 	%r488, %r133, 65;
	mul.lo.s32 	%r489, %r136, 520;
	mul.lo.s32 	%r490, %r134, 130;
	mul.lo.s32 	%r491, %r135, 260;
	or.b32  	%r492, %r459, 8;
	or.b32  	%r493, %r128, %r130;
	shr.u32 	%r494, %r493, 1;
	mul.lo.s32 	%r495, %r494, 65;
	shl.b32 	%r496, %r3, 1;
	or.b32  	%r497, %r496, %r136;
	mul.lo.s32 	%r498, %r497, 65;
	add.s32 	%r499, %r458, %r498;
	add.s32 	%r500, %r499, %r80;
	mul.wide.u32 	%rd116, %r500, 4;
	add.s64 	%rd21, %rd87, %rd116;
	cvt.u64.u32 	%rd117, %r498;
	add.s64 	%rd118, %rd117, %rd92;
	add.s64 	%rd119, %rd118, %rd91;
	shl.b64 	%rd120, %rd119, 2;
	add.s64 	%rd22, %rd87, %rd120;
	shl.b32 	%r501, %r7, 18;
	add.s32 	%r502, %r501, -786432;
	shl.b32 	%r84, %r3, 7;
	and.b32  	%r503, %r125, 96;
	or.b32  	%r85, %r447, %r503;
	cvt.s64.s32 	%rd23, %r502;
	add.s32 	%r504, %r492, %r495;
	add.s32 	%r505, %r504, %r487;
	mul.wide.u32 	%rd24, %r505, 4;
	add.s32 	%r506, %r459, %r495;
	add.s32 	%r507, %r506, %r487;
	mul.wide.u32 	%rd25, %r507, 4;
	add.s32 	%r508, %r505, 16;
	mul.wide.u32 	%rd26, %r508, 4;
	add.s32 	%r509, %r507, 16;
	mul.wide.u32 	%rd27, %r509, 4;
	add.s32 	%r510, %r492, %r486;
	add.s32 	%r511, %r510, %r489;
	add.s32 	%r512, %r511, %r491;
	add.s32 	%r513, %r512, %r490;
	add.s32 	%r514, %r513, %r488;
	add.s32 	%r515, %r514, %r487;
	add.s32 	%r516, %r515, 16;
	mul.wide.u32 	%rd28, %r516, 4;
	add.s32 	%r517, %r459, %r486;
	add.s32 	%r518, %r517, %r489;
	add.s32 	%r519, %r518, %r491;
	add.s32 	%r520, %r519, %r490;
	add.s32 	%r521, %r520, %r488;
	add.s32 	%r522, %r521, %r487;
	add.s32 	%r523, %r522, 16;
	mul.wide.u32 	%rd29, %r523, 4;
	mul.wide.u32 	%rd30, %r515, 4;
	mul.wide.u32 	%rd31, %r522, 4;
	setp.eq.s32 	%p225, %r83, 0;
	mov.u16 	%rs1176, 25600;
	mov.u16 	%rs1072, 21504;
	mov.u16 	%rs1184, 18432;
	mov.u16 	%rs1142, -14592;
	mov.u32 	%r86, %r7981;
	mov.u32 	%r8021, %r7981;
	mov.u32 	%r8020, %r7981;
	mov.u32 	%r8019, %r7981;
	mov.u32 	%r8018, %r7981;
	mov.u32 	%r8017, %r7981;
	mov.u32 	%r8016, %r7981;
	mov.u32 	%r8015, %r7981;
	mov.u32 	%r8014, %r7981;
	mov.u32 	%r8013, %r7981;
	mov.u32 	%r8012, %r7981;
	mov.u32 	%r8011, %r7981;
	mov.u32 	%r8010, %r7981;
	bra.uni 	LBB0_117;
LBB0_125:                               // %pass14505
                                        //   in Loop: Header=BB0_117 Depth=1
	or.b32  	%r7974, %r7983, %r80;
	or.b32  	%r7975, %r7974, %r85;
	or.b32  	%r7976, %r7975, %r84;
	or.b32  	%r7977, %r7976, 786432;
	cvt.u64.u32 	%rd174, %r7977;
	add.s64 	%rd175, %rd174, %rd23;
	shr.u64 	%rd176, %rd175, 39;
	add.s64 	%rd177, %rd175, %rd176;
	shr.s64 	%rd178, %rd177, 25;
	and.b64  	%rd179, %rd177, -33554432;
	setp.ne.s64 	%p253, %rd179, %rd175;
	setp.lt.s64 	%p254, %rd175, 0;
	and.pred  	%p255, %p254, %p253;
	selp.u64 	%rd180, 1, 0, %p255;
	sub.s64 	%rd181, %rd180, %rd178;
	shl.b64 	%rd182, %rd181, 25;
	add.s64 	%rd183, %rd182, %rd175;
	shl.b64 	%rd184, %rd183, 2;
	add.s64 	%rd185, %rd3, %rd184;
	st.global.v4.u32 	[%rd185], {%r175, %r177, %r176, %r178};
	setp.ne.s32 	%p256, %r86, 7936;
	add.s32 	%r86, %r86, 256;
	add.s32 	%r7978, %r86, %r5;
	setp.gt.s32 	%p257, %r6, %r7978;
	and.pred  	%p258, %p256, %p257;
	@%p258 bra 	LBB0_117;
	bra.uni 	LBB0_126;
LBB0_117:                               // %L1540
                                        // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_118 Depth 2
	or.b32  	%r589, %r127, %r86;
	or.b32  	%r590, %r589, %r3;
	or.b32  	%r591, %r590, %r126;
	shl.b32 	%r592, %r591, 12;
	add.s32 	%r593, %r81, %r592;
	shr.s32 	%r594, %r593, 31;
	shr.u32 	%r595, %r594, 7;
	add.s32 	%r596, %r593, %r595;
	shr.s32 	%r597, %r596, 25;
	and.b32  	%r598, %r596, -33554432;
	setp.ne.s32 	%p226, %r598, %r593;
	setp.lt.s32 	%p227, %r593, 0;
	and.pred  	%p228, %p227, %p226;
	selp.u32 	%r599, 1, 0, %p228;
	sub.s32 	%r600, %r599, %r597;
	shl.b32 	%r601, %r600, 25;
	add.s32 	%r602, %r601, %r593;
	mul.wide.s32 	%rd122, %r602, 4;
	add.s64 	%rd123, %rd2, %rd122;
	ld.global.v4.u32 	{%r603, %r604, %r605, %r606}, [%rd123];
	or.b32  	%r607, %r82, %r592;
	or.b32  	%r608, %r607, 262144;
	add.s32 	%r609, %r608, %r78;
	shr.s32 	%r610, %r609, 31;
	shr.u32 	%r611, %r610, 7;
	add.s32 	%r612, %r609, %r611;
	shr.s32 	%r613, %r612, 25;
	and.b32  	%r614, %r612, -33554432;
	setp.ne.s32 	%p229, %r614, %r609;
	setp.lt.s32 	%p230, %r609, 0;
	and.pred  	%p231, %p230, %p229;
	selp.u32 	%r615, 1, 0, %p231;
	sub.s32 	%r616, %r615, %r613;
	shl.b32 	%r617, %r616, 25;
	add.s32 	%r618, %r617, %r609;
	mul.wide.s32 	%rd124, %r618, 4;
	add.s64 	%rd125, %rd2, %rd124;
	ld.global.v4.u32 	{%r619, %r620, %r621, %r622}, [%rd125];
	or.b32  	%r623, %r607, 524288;
	add.s32 	%r624, %r623, %r78;
	shr.s32 	%r625, %r624, 31;
	shr.u32 	%r626, %r625, 7;
	add.s32 	%r627, %r624, %r626;
	shr.s32 	%r628, %r627, 25;
	and.b32  	%r629, %r627, -33554432;
	setp.ne.s32 	%p232, %r629, %r624;
	setp.lt.s32 	%p233, %r624, 0;
	and.pred  	%p234, %p233, %p232;
	selp.u32 	%r630, 1, 0, %p234;
	sub.s32 	%r631, %r630, %r628;
	shl.b32 	%r632, %r631, 25;
	add.s32 	%r633, %r632, %r624;
	mul.wide.s32 	%rd126, %r633, 4;
	add.s64 	%rd127, %rd2, %rd126;
	ld.global.v4.u32 	{%r634, %r635, %r636, %r637}, [%rd127];
	or.b32  	%r638, %r607, 786432;
	add.s32 	%r639, %r638, %r78;
	shr.s32 	%r640, %r639, 31;
	shr.u32 	%r641, %r640, 7;
	add.s32 	%r642, %r639, %r641;
	shr.s32 	%r643, %r642, 25;
	and.b32  	%r644, %r642, -33554432;
	setp.ne.s32 	%p235, %r644, %r639;
	setp.lt.s32 	%p236, %r639, 0;
	and.pred  	%p237, %p236, %p235;
	selp.u32 	%r645, 1, 0, %p237;
	sub.s32 	%r646, %r645, %r643;
	shl.b32 	%r647, %r646, 25;
	add.s32 	%r648, %r647, %r639;
	mul.wide.s32 	%rd128, %r648, 4;
	add.s64 	%rd129, %rd2, %rd128;
	ld.global.v4.u32 	{%r649, %r650, %r651, %r652}, [%rd129];
	selp.b32 	%r653, %r605, %r603, %p225;
	shfl.sync.bfly.b32	%r654, %r653, 8, 31, -1;
	selp.b32 	%r525, %r603, %r654, %p225;
	selp.b32 	%r526, %r654, %r605, %p225;
	selp.b32 	%r655, %r606, %r604, %p225;
	shfl.sync.bfly.b32	%r656, %r655, 8, 31, -1;
	selp.b32 	%r533, %r604, %r656, %p225;
	selp.b32 	%r534, %r656, %r606, %p225;
	selp.b32 	%r657, %r621, %r619, %p225;
	shfl.sync.bfly.b32	%r658, %r657, 8, 31, -1;
	selp.b32 	%r541, %r619, %r658, %p225;
	selp.b32 	%r542, %r658, %r621, %p225;
	selp.b32 	%r659, %r622, %r620, %p225;
	shfl.sync.bfly.b32	%r660, %r659, 8, 31, -1;
	selp.b32 	%r549, %r620, %r660, %p225;
	selp.b32 	%r550, %r660, %r622, %p225;
	selp.b32 	%r661, %r636, %r634, %p225;
	shfl.sync.bfly.b32	%r662, %r661, 8, 31, -1;
	selp.b32 	%r557, %r634, %r662, %p225;
	selp.b32 	%r558, %r662, %r636, %p225;
	selp.b32 	%r663, %r637, %r635, %p225;
	shfl.sync.bfly.b32	%r664, %r663, 8, 31, -1;
	selp.b32 	%r565, %r635, %r664, %p225;
	selp.b32 	%r566, %r664, %r637, %p225;
	selp.b32 	%r665, %r651, %r649, %p225;
	shfl.sync.bfly.b32	%r666, %r665, 8, 31, -1;
	selp.b32 	%r573, %r649, %r666, %p225;
	selp.b32 	%r574, %r666, %r651, %p225;
	selp.b32 	%r667, %r652, %r650, %p225;
	shfl.sync.bfly.b32	%r668, %r667, 8, 31, -1;
	selp.b32 	%r581, %r650, %r668, %p225;
	selp.b32 	%r582, %r668, %r652, %p225;
	mov.u32 	%r583, 21520;
	// begin inline asm
	prmt.b32 %r524, %r525, %r526, %r583;
	// end inline asm
	mov.u32 	%r587, 30258;
	// begin inline asm
	prmt.b32 %r528, %r525, %r526, %r587;
	// end inline asm
	// begin inline asm
	prmt.b32 %r532, %r533, %r534, %r583;
	// end inline asm
	// begin inline asm
	prmt.b32 %r536, %r533, %r534, %r587;
	// end inline asm
	// begin inline asm
	prmt.b32 %r540, %r541, %r542, %r583;
	// end inline asm
	// begin inline asm
	prmt.b32 %r544, %r541, %r542, %r587;
	// end inline asm
	// begin inline asm
	prmt.b32 %r548, %r549, %r550, %r583;
	// end inline asm
	// begin inline asm
	prmt.b32 %r552, %r549, %r550, %r587;
	// end inline asm
	// begin inline asm
	prmt.b32 %r556, %r557, %r558, %r583;
	// end inline asm
	// begin inline asm
	prmt.b32 %r560, %r557, %r558, %r587;
	// end inline asm
	// begin inline asm
	prmt.b32 %r564, %r565, %r566, %r583;
	// end inline asm
	// begin inline asm
	prmt.b32 %r568, %r565, %r566, %r587;
	// end inline asm
	// begin inline asm
	prmt.b32 %r572, %r573, %r574, %r583;
	// end inline asm
	// begin inline asm
	prmt.b32 %r576, %r573, %r574, %r587;
	// end inline asm
	// begin inline asm
	prmt.b32 %r580, %r581, %r582, %r583;
	// end inline asm
	// begin inline asm
	prmt.b32 %r584, %r581, %r582, %r587;
	// end inline asm
	st.shared.u32 	[%rd5], %r524;
	st.shared.u32 	[%rd6+128], %r528;
	st.shared.u32 	[%rd7], %r532;
	st.shared.u32 	[%rd8], %r536;
	st.shared.u32 	[%rd9], %r540;
	st.shared.u32 	[%rd10], %r544;
	st.shared.u32 	[%rd11], %r548;
	st.shared.u32 	[%rd12], %r552;
	st.shared.u32 	[%rd13], %r556;
	st.shared.u32 	[%rd14], %r560;
	st.shared.u32 	[%rd15], %r564;
	st.shared.u32 	[%rd16], %r568;
	st.shared.u32 	[%rd17], %r572;
	st.shared.u32 	[%rd18], %r576;
	st.shared.u32 	[%rd19], %r580;
	st.shared.u32 	[%rd20], %r584;
	bar.sync 	0;
	mov.u32 	%r8009, 256;
	mov.u64 	%rd188, %rd87;
LBB0_118:                               // %L12395
                                        //   Parent Loop BB0_117 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	add.s64 	%rd130, %rd188, %rd31;
	ld.shared.u32 	%r7853, [%rd130];
	add.s64 	%rd131, %rd188, %rd30;
	ld.shared.u32 	%r7854, [%rd131];
	add.s64 	%rd132, %rd188, %rd29;
	ld.shared.u32 	%r7855, [%rd132];
	add.s64 	%rd133, %rd188, %rd28;
	ld.shared.u32 	%r7856, [%rd133];
	// begin inline asm
	mov.b32 %r674, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r685, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r673, %r7853, -2004318072;
	mov.u32 	%r672, 983055;
	// begin inline asm
	lop3.b32 %r671, %r672, %r673, %r674, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r675, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r676, %r674, %r675;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r679, %r671, %r676;
	// end inline asm
	mov.u32 	%r683, 15728880;
	// begin inline asm
	lop3.b32 %r682, %r683, %r673, %r685, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r686, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r687, %r685, %r686;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r690, %r682, %r687;
	// end inline asm
	shr.u32 	%r695, %r673, 8;
	// begin inline asm
	lop3.b32 %r693, %r672, %r695, %r674, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r697, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r698, %r674, %r697;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r701, %r693, %r698;
	// end inline asm
	// begin inline asm
	lop3.b32 %r704, %r683, %r695, %r685, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r708, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r709, %r685, %r708;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r712, %r704, %r709;
	// end inline asm
	// begin inline asm
	mov.b32 %r720, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r731, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r719, %r7854, -2004318072;
	// begin inline asm
	lop3.b32 %r717, %r672, %r719, %r720, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r721, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r722, %r720, %r721;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r725, %r717, %r722;
	// end inline asm
	// begin inline asm
	lop3.b32 %r728, %r683, %r719, %r731, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r732, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r733, %r731, %r732;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r736, %r728, %r733;
	// end inline asm
	shr.u32 	%r741, %r719, 8;
	// begin inline asm
	lop3.b32 %r739, %r672, %r741, %r720, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r743, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r744, %r720, %r743;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r747, %r739, %r744;
	// end inline asm
	// begin inline asm
	lop3.b32 %r750, %r683, %r741, %r731, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r754, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r755, %r731, %r754;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r758, %r750, %r755;
	// end inline asm
	// begin inline asm
	mov.b32 %r766, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r777, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r765, %r7855, -2004318072;
	// begin inline asm
	lop3.b32 %r763, %r672, %r765, %r766, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r767, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r768, %r766, %r767;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r771, %r763, %r768;
	// end inline asm
	// begin inline asm
	lop3.b32 %r774, %r683, %r765, %r777, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r778, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r779, %r777, %r778;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r782, %r774, %r779;
	// end inline asm
	shr.u32 	%r787, %r765, 8;
	// begin inline asm
	lop3.b32 %r785, %r672, %r787, %r766, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r789, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r790, %r766, %r789;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r793, %r785, %r790;
	// end inline asm
	// begin inline asm
	lop3.b32 %r796, %r683, %r787, %r777, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r800, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r801, %r777, %r800;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r804, %r796, %r801;
	// end inline asm
	// begin inline asm
	mov.b32 %r812, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r823, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r811, %r7856, -2004318072;
	// begin inline asm
	lop3.b32 %r809, %r672, %r811, %r812, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r813, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r814, %r812, %r813;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r817, %r809, %r814;
	// end inline asm
	// begin inline asm
	lop3.b32 %r820, %r683, %r811, %r823, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r824, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r825, %r823, %r824;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r828, %r820, %r825;
	// end inline asm
	shr.u32 	%r833, %r811, 8;
	// begin inline asm
	lop3.b32 %r831, %r672, %r833, %r812, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r835, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r836, %r812, %r835;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r839, %r831, %r836;
	// end inline asm
	// begin inline asm
	lop3.b32 %r842, %r683, %r833, %r823, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r846, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r847, %r823, %r846;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r850, %r842, %r847;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r853, %r273;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r855, %r853, %r679;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r858, %r273;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r860, %r858, %r690;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r863, %r273;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r865, %r863, %r701;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r868, %r273;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r870, %r868, %r712;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r873, %r273;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r875, %r873, %r725;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r878, %r273;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r880, %r878, %r736;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r883, %r273;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r885, %r883, %r747;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r888, %r273;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r890, %r888, %r758;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r893, %r273;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r895, %r893, %r771;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r898, %r273;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r900, %r898, %r782;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r903, %r273;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r905, %r903, %r793;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r908, %r273;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r910, %r908, %r804;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r913, %r273;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r915, %r913, %r817;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r918, %r273;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r920, %r918, %r828;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r923, %r273;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r925, %r923, %r839;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r928, %r273;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r930, %r928, %r850;
	// end inline asm
	// begin inline asm
	mov.b32 %r938, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r949, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r937, %r8010, -2004318072;
	// begin inline asm
	lop3.b32 %r935, %r672, %r937, %r938, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r939, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r940, %r938, %r939;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r943, %r935, %r940;
	// end inline asm
	// begin inline asm
	lop3.b32 %r946, %r683, %r937, %r949, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r950, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r951, %r949, %r950;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r954, %r946, %r951;
	// end inline asm
	shr.u32 	%r959, %r937, 8;
	// begin inline asm
	lop3.b32 %r957, %r672, %r959, %r938, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r961, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r962, %r938, %r961;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r965, %r957, %r962;
	// end inline asm
	// begin inline asm
	lop3.b32 %r968, %r683, %r959, %r949, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r972, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r973, %r949, %r972;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r976, %r968, %r973;
	// end inline asm
	// begin inline asm
	mov.b32 %r984, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r995, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r983, %r8011, -2004318072;
	// begin inline asm
	lop3.b32 %r981, %r672, %r983, %r984, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r985, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r986, %r984, %r985;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r989, %r981, %r986;
	// end inline asm
	// begin inline asm
	lop3.b32 %r992, %r683, %r983, %r995, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r996, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r997, %r995, %r996;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1000, %r992, %r997;
	// end inline asm
	shr.u32 	%r1005, %r983, 8;
	// begin inline asm
	lop3.b32 %r1003, %r672, %r1005, %r984, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1007, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1008, %r984, %r1007;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1011, %r1003, %r1008;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1014, %r683, %r1005, %r995, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1018, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1019, %r995, %r1018;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1022, %r1014, %r1019;
	// end inline asm
	// begin inline asm
	mov.b32 %r1030, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1041, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1029, %r8016, -2004318072;
	// begin inline asm
	lop3.b32 %r1027, %r672, %r1029, %r1030, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1031, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1032, %r1030, %r1031;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1035, %r1027, %r1032;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1038, %r683, %r1029, %r1041, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1042, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1043, %r1041, %r1042;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1046, %r1038, %r1043;
	// end inline asm
	shr.u32 	%r1051, %r1029, 8;
	// begin inline asm
	lop3.b32 %r1049, %r672, %r1051, %r1030, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1053, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1054, %r1030, %r1053;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1057, %r1049, %r1054;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1060, %r683, %r1051, %r1041, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1064, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1065, %r1041, %r1064;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1068, %r1060, %r1065;
	// end inline asm
	// begin inline asm
	mov.b32 %r1076, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1087, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1075, %r8017, -2004318072;
	// begin inline asm
	lop3.b32 %r1073, %r672, %r1075, %r1076, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1077, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1078, %r1076, %r1077;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1081, %r1073, %r1078;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1084, %r683, %r1075, %r1087, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1088, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1089, %r1087, %r1088;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1092, %r1084, %r1089;
	// end inline asm
	shr.u32 	%r1097, %r1075, 8;
	// begin inline asm
	lop3.b32 %r1095, %r672, %r1097, %r1076, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1099, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1100, %r1076, %r1099;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1103, %r1095, %r1100;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1106, %r683, %r1097, %r1087, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1110, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1111, %r1087, %r1110;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1114, %r1106, %r1111;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1117, %r219, %r943, %r855;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1121, %r219, %r954, %r860;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1125, %r219, %r965, %r865;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1129, %r219, %r976, %r870;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1133, %r219, %r989, %r875;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1137, %r219, %r1000, %r880;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1141, %r219, %r1011, %r885;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1145, %r219, %r1022, %r890;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1149, %r219, %r1035, %r895;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1153, %r219, %r1046, %r900;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1157, %r219, %r1057, %r905;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1161, %r219, %r1068, %r910;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1165, %r219, %r1081, %r915;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1169, %r219, %r1092, %r920;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1173, %r219, %r1103, %r925;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1177, %r219, %r1114, %r930;
	// end inline asm
	// begin inline asm
	mov.b32 %r1186, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1197, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1185, %r8012, -2004318072;
	// begin inline asm
	lop3.b32 %r1183, %r672, %r1185, %r1186, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1187, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1188, %r1186, %r1187;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1191, %r1183, %r1188;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1194, %r683, %r1185, %r1197, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1198, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1199, %r1197, %r1198;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1202, %r1194, %r1199;
	// end inline asm
	shr.u32 	%r1207, %r1185, 8;
	// begin inline asm
	lop3.b32 %r1205, %r672, %r1207, %r1186, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1209, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1210, %r1186, %r1209;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1213, %r1205, %r1210;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1216, %r683, %r1207, %r1197, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1220, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1221, %r1197, %r1220;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1224, %r1216, %r1221;
	// end inline asm
	// begin inline asm
	mov.b32 %r1232, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1243, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1231, %r8013, -2004318072;
	// begin inline asm
	lop3.b32 %r1229, %r672, %r1231, %r1232, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1233, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1234, %r1232, %r1233;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1237, %r1229, %r1234;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1240, %r683, %r1231, %r1243, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1244, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1245, %r1243, %r1244;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1248, %r1240, %r1245;
	// end inline asm
	shr.u32 	%r1253, %r1231, 8;
	// begin inline asm
	lop3.b32 %r1251, %r672, %r1253, %r1232, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1255, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1256, %r1232, %r1255;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1259, %r1251, %r1256;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1262, %r683, %r1253, %r1243, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1266, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1267, %r1243, %r1266;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1270, %r1262, %r1267;
	// end inline asm
	// begin inline asm
	mov.b32 %r1278, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1289, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1277, %r8018, -2004318072;
	// begin inline asm
	lop3.b32 %r1275, %r672, %r1277, %r1278, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1279, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1280, %r1278, %r1279;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1283, %r1275, %r1280;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1286, %r683, %r1277, %r1289, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1290, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1291, %r1289, %r1290;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1294, %r1286, %r1291;
	// end inline asm
	shr.u32 	%r1299, %r1277, 8;
	// begin inline asm
	lop3.b32 %r1297, %r672, %r1299, %r1278, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1301, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1302, %r1278, %r1301;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1305, %r1297, %r1302;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1308, %r683, %r1299, %r1289, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1312, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1313, %r1289, %r1312;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1316, %r1308, %r1313;
	// end inline asm
	// begin inline asm
	mov.b32 %r1324, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1335, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1323, %r8019, -2004318072;
	// begin inline asm
	lop3.b32 %r1321, %r672, %r1323, %r1324, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1325, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1326, %r1324, %r1325;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1329, %r1321, %r1326;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1332, %r683, %r1323, %r1335, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1336, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1337, %r1335, %r1336;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1340, %r1332, %r1337;
	// end inline asm
	shr.u32 	%r1345, %r1323, 8;
	// begin inline asm
	lop3.b32 %r1343, %r672, %r1345, %r1324, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1347, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1348, %r1324, %r1347;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1351, %r1343, %r1348;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1354, %r683, %r1345, %r1335, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1358, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1359, %r1335, %r1358;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1362, %r1354, %r1359;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1365, %r237;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1367, %r1365, %r1191, %r1117;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1371, %r237;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1373, %r1371, %r1202, %r1121;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1377, %r237;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1379, %r1377, %r1213, %r1125;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1383, %r237;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1385, %r1383, %r1224, %r1129;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1389, %r237;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1391, %r1389, %r1237, %r1133;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1395, %r237;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1397, %r1395, %r1248, %r1137;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1401, %r237;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1403, %r1401, %r1259, %r1141;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1407, %r237;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1409, %r1407, %r1270, %r1145;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1413, %r237;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1415, %r1413, %r1283, %r1149;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1419, %r237;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1421, %r1419, %r1294, %r1153;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1425, %r237;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1427, %r1425, %r1305, %r1157;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1431, %r237;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1433, %r1431, %r1316, %r1161;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1437, %r237;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1439, %r1437, %r1329, %r1165;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1443, %r237;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1445, %r1443, %r1340, %r1169;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1449, %r237;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1451, %r1449, %r1351, %r1173;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1455, %r237;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1457, %r1455, %r1362, %r1177;
	// end inline asm
	// begin inline asm
	mov.b32 %r1466, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1477, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1465, %r8014, -2004318072;
	// begin inline asm
	lop3.b32 %r1463, %r672, %r1465, %r1466, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1467, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1468, %r1466, %r1467;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1471, %r1463, %r1468;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1474, %r683, %r1465, %r1477, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1478, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1479, %r1477, %r1478;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1482, %r1474, %r1479;
	// end inline asm
	shr.u32 	%r1487, %r1465, 8;
	// begin inline asm
	lop3.b32 %r1485, %r672, %r1487, %r1466, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1489, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1490, %r1466, %r1489;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1493, %r1485, %r1490;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1496, %r683, %r1487, %r1477, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1500, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1501, %r1477, %r1500;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1504, %r1496, %r1501;
	// end inline asm
	// begin inline asm
	mov.b32 %r1512, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1523, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1511, %r8015, -2004318072;
	// begin inline asm
	lop3.b32 %r1509, %r672, %r1511, %r1512, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1513, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1514, %r1512, %r1513;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1517, %r1509, %r1514;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1520, %r683, %r1511, %r1523, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1524, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1525, %r1523, %r1524;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1528, %r1520, %r1525;
	// end inline asm
	shr.u32 	%r1533, %r1511, 8;
	// begin inline asm
	lop3.b32 %r1531, %r672, %r1533, %r1512, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1535, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1536, %r1512, %r1535;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1539, %r1531, %r1536;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1542, %r683, %r1533, %r1523, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1546, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1547, %r1523, %r1546;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1550, %r1542, %r1547;
	// end inline asm
	// begin inline asm
	mov.b32 %r1558, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1569, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1557, %r8020, -2004318072;
	// begin inline asm
	lop3.b32 %r1555, %r672, %r1557, %r1558, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1559, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1560, %r1558, %r1559;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1563, %r1555, %r1560;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1566, %r683, %r1557, %r1569, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1570, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1571, %r1569, %r1570;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1574, %r1566, %r1571;
	// end inline asm
	shr.u32 	%r1579, %r1557, 8;
	// begin inline asm
	lop3.b32 %r1577, %r672, %r1579, %r1558, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1581, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1582, %r1558, %r1581;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1585, %r1577, %r1582;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1588, %r683, %r1579, %r1569, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1592, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1593, %r1569, %r1592;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1596, %r1588, %r1593;
	// end inline asm
	// begin inline asm
	mov.b32 %r1604, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1615, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1603, %r8021, -2004318072;
	// begin inline asm
	lop3.b32 %r1601, %r672, %r1603, %r1604, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1605, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1606, %r1604, %r1605;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1609, %r1601, %r1606;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1612, %r683, %r1603, %r1615, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1616, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1617, %r1615, %r1616;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1620, %r1612, %r1617;
	// end inline asm
	shr.u32 	%r1625, %r1603, 8;
	// begin inline asm
	lop3.b32 %r1623, %r672, %r1625, %r1604, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1627, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1628, %r1604, %r1627;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1631, %r1623, %r1628;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1634, %r683, %r1625, %r1615, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1638, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1639, %r1615, %r1638;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1642, %r1634, %r1639;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1716, %r255, %r1471, %r1367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1713, %r255, %r1482, %r1373;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1725, %r255, %r1493, %r1379;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1722, %r255, %r1504, %r1385;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1734, %r255, %r1517, %r1391;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1731, %r255, %r1528, %r1397;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1743, %r255, %r1539, %r1403;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1740, %r255, %r1550, %r1409;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1752, %r255, %r1563, %r1415;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1749, %r255, %r1574, %r1421;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1761, %r255, %r1585, %r1427;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1758, %r255, %r1596, %r1433;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1770, %r255, %r1609, %r1439;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1767, %r255, %r1620, %r1445;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1779, %r255, %r1631, %r1451;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1776, %r255, %r1642, %r1457;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1709, %r304;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1711, %r1709, %r1713;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1714, %r301, %r1716, %r1711;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1718, %r304;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1720, %r1718, %r1722;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1723, %r301, %r1725, %r1720;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1727, %r304;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1729, %r1727, %r1731;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1732, %r301, %r1734, %r1729;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1736, %r304;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1738, %r1736, %r1740;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1741, %r301, %r1743, %r1738;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1745, %r304;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1747, %r1745, %r1749;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1750, %r301, %r1752, %r1747;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1754, %r304;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1756, %r1754, %r1758;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1759, %r301, %r1761, %r1756;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1763, %r304;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1765, %r1763, %r1767;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1768, %r301, %r1770, %r1765;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1772, %r304;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1774, %r1772, %r1776;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1777, %r301, %r1779, %r1774;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1781, %r304, %r1716;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1784, %r301, %r1713, %r1781;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1788, %r304, %r1725;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1791, %r301, %r1722, %r1788;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1795, %r304, %r1734;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1798, %r301, %r1731, %r1795;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1802, %r304, %r1743;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1805, %r301, %r1740, %r1802;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1809, %r304, %r1752;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1812, %r301, %r1749, %r1809;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1816, %r304, %r1761;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1819, %r301, %r1758, %r1816;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1823, %r304, %r1770;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1826, %r301, %r1767, %r1823;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1830, %r304, %r1779;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1833, %r301, %r1776, %r1830;
	// end inline asm
	mov.u32 	%r1845, 0;
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1924, %r1921}, {%r348, %r354, %r351, %r357}, {%r1714, %r1784}, {%r1845, %r1845};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1933, %r1930}, {%r348, %r354, %r351, %r357}, {%r1723, %r1791}, {%r1845, %r1845};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1942, %r1939}, {%r348, %r354, %r351, %r357}, {%r1732, %r1798}, {%r1845, %r1845};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1951, %r1948}, {%r348, %r354, %r351, %r357}, {%r1741, %r1805}, {%r1845, %r1845};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1960, %r1957}, {%r348, %r354, %r351, %r357}, {%r1750, %r1812}, {%r1845, %r1845};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1969, %r1966}, {%r348, %r354, %r351, %r357}, {%r1759, %r1819}, {%r1845, %r1845};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1978, %r1975}, {%r348, %r354, %r351, %r357}, {%r1768, %r1826}, {%r1845, %r1845};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1987, %r1984}, {%r348, %r354, %r351, %r357}, {%r1777, %r1833}, {%r1845, %r1845};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1917, %r395;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1919, %r1917, %r1921;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1922, %r392, %r1924, %r1919;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1926, %r395;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1928, %r1926, %r1930;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1931, %r392, %r1933, %r1928;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1935, %r395;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1937, %r1935, %r1939;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1940, %r392, %r1942, %r1937;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1944, %r395;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1946, %r1944, %r1948;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1949, %r392, %r1951, %r1946;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1953, %r395;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1955, %r1953, %r1957;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1958, %r392, %r1960, %r1955;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1962, %r395;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1964, %r1962, %r1966;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1967, %r392, %r1969, %r1964;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1971, %r395;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1973, %r1971, %r1975;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1976, %r392, %r1978, %r1973;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1980, %r395;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1982, %r1980, %r1984;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1985, %r392, %r1987, %r1982;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1989, %r395, %r1924;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1992, %r392, %r1921, %r1989;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1996, %r395, %r1933;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1999, %r392, %r1930, %r1996;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2003, %r395, %r1942;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2006, %r392, %r1939, %r2003;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2010, %r395, %r1951;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2013, %r392, %r1948, %r2010;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2017, %r395, %r1960;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2020, %r392, %r1957, %r2017;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2024, %r395, %r1969;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2027, %r392, %r1966, %r2024;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2031, %r395, %r1978;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2034, %r392, %r1975, %r2031;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2038, %r395, %r1987;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2041, %r392, %r1984, %r2038;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2045, %r2046}, {%r426, %r432, %r429, %r435}, {%r1922, %r1992}, {%r1845, %r1845};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2055, %r2056}, {%r426, %r432, %r429, %r435}, {%r1931, %r1999}, {%r1845, %r1845};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2065, %r2066}, {%r426, %r432, %r429, %r435}, {%r1940, %r2006}, {%r1845, %r1845};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2075, %r2076}, {%r426, %r432, %r429, %r435}, {%r1949, %r2013}, {%r1845, %r1845};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2085, %r2086}, {%r426, %r432, %r429, %r435}, {%r1958, %r2020}, {%r1845, %r1845};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2095, %r2096}, {%r426, %r432, %r429, %r435}, {%r1967, %r2027}, {%r1845, %r1845};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2105, %r2106}, {%r426, %r432, %r429, %r435}, {%r1976, %r2034}, {%r1845, %r1845};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2115, %r2116}, {%r426, %r432, %r429, %r435}, {%r1985, %r2041}, {%r1845, %r1845};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2125, %r131, %r2045;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2128, %r131, %r2046;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2131, %r131, %r2055;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2134, %r131, %r2056;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2137, %r131, %r2065;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2140, %r131, %r2066;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2143, %r131, %r2075;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2146, %r131, %r2076;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2149, %r131, %r2085;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2152, %r131, %r2086;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2155, %r131, %r2095;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2158, %r131, %r2096;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2161, %r131, %r2105;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2164, %r131, %r2106;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2167, %r131, %r2115;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2170, %r131, %r2116;
	// end inline asm
	// begin inline asm
	mov.b32 %r2173, {%rs1142, %rs1142};
	// end inline asm
	mov.u16 	%rs195, 18176;
	// begin inline asm
	mov.b32 %r2174, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2175, %r2125, %r2173;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2178, %r2175, %r2174;
	// end inline asm
	// begin inline asm
	mov.b32 %r2181, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2182, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2183, %r2128, %r2181;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2186, %r2183, %r2182;
	// end inline asm
	// begin inline asm
	mov.b32 %r2189, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2190, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2191, %r2131, %r2189;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2194, %r2191, %r2190;
	// end inline asm
	// begin inline asm
	mov.b32 %r2197, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2198, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2199, %r2134, %r2197;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2202, %r2199, %r2198;
	// end inline asm
	// begin inline asm
	mov.b32 %r2205, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2206, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2207, %r2137, %r2205;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2210, %r2207, %r2206;
	// end inline asm
	// begin inline asm
	mov.b32 %r2213, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2214, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2215, %r2140, %r2213;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2218, %r2215, %r2214;
	// end inline asm
	// begin inline asm
	mov.b32 %r2221, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2222, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2223, %r2143, %r2221;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2226, %r2223, %r2222;
	// end inline asm
	// begin inline asm
	mov.b32 %r2229, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2230, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2231, %r2146, %r2229;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2234, %r2231, %r2230;
	// end inline asm
	// begin inline asm
	mov.b32 %r2237, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2238, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2239, %r2149, %r2237;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2242, %r2239, %r2238;
	// end inline asm
	// begin inline asm
	mov.b32 %r2245, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2246, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2247, %r2152, %r2245;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2250, %r2247, %r2246;
	// end inline asm
	// begin inline asm
	mov.b32 %r2253, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2254, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2255, %r2155, %r2253;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2258, %r2255, %r2254;
	// end inline asm
	// begin inline asm
	mov.b32 %r2261, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2262, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2263, %r2158, %r2261;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2266, %r2263, %r2262;
	// end inline asm
	// begin inline asm
	mov.b32 %r2269, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2270, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2271, %r2161, %r2269;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2274, %r2271, %r2270;
	// end inline asm
	// begin inline asm
	mov.b32 %r2277, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2278, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2279, %r2164, %r2277;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2282, %r2279, %r2278;
	// end inline asm
	// begin inline asm
	mov.b32 %r2285, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2286, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2287, %r2167, %r2285;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2290, %r2287, %r2286;
	// end inline asm
	// begin inline asm
	mov.b32 %r2293, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2294, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2295, %r2170, %r2293;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2298, %r2295, %r2294;
	// end inline asm
	// begin inline asm
	mov.b32 %r2304, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2302, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2303, %r2304, %r2302;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2306, %r2178, %r2303;
	// end inline asm
	// begin inline asm
	mov.b32 %r2309, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2310, %r2304, %r2309;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2313, %r2186, %r2310;
	// end inline asm
	// begin inline asm
	mov.b32 %r2316, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2317, %r2304, %r2316;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2320, %r2194, %r2317;
	// end inline asm
	// begin inline asm
	mov.b32 %r2323, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2324, %r2304, %r2323;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2327, %r2202, %r2324;
	// end inline asm
	mov.u32 	%r2333, 25152;
	// begin inline asm
	prmt.b32 %r2330, %r2306, %r2320, %r2333;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2334, %r2313, %r2327, %r2333;
	// end inline asm
	shl.b32 	%r2341, %r2334, 4;
	mov.u32 	%r2339, 252645135;
	// begin inline asm
	lop3.b32 %r2338, %r2339, %r2330, %r2341, 202;
	// end inline asm
	xor.b32  	%r7857, %r2338, -2004318072;
	// begin inline asm
	mov.b32 %r2345, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2343, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2344, %r2345, %r2343;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2347, %r2210, %r2344;
	// end inline asm
	// begin inline asm
	mov.b32 %r2350, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2351, %r2345, %r2350;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2354, %r2218, %r2351;
	// end inline asm
	// begin inline asm
	mov.b32 %r2357, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2358, %r2345, %r2357;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2361, %r2226, %r2358;
	// end inline asm
	// begin inline asm
	mov.b32 %r2364, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2365, %r2345, %r2364;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2368, %r2234, %r2365;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2371, %r2347, %r2361, %r2333;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2375, %r2354, %r2368, %r2333;
	// end inline asm
	shl.b32 	%r2382, %r2375, 4;
	// begin inline asm
	lop3.b32 %r2379, %r2339, %r2371, %r2382, 202;
	// end inline asm
	xor.b32  	%r7858, %r2379, -2004318072;
	// begin inline asm
	mov.b32 %r2386, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2384, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2385, %r2386, %r2384;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2388, %r2242, %r2385;
	// end inline asm
	// begin inline asm
	mov.b32 %r2391, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2392, %r2386, %r2391;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2395, %r2250, %r2392;
	// end inline asm
	// begin inline asm
	mov.b32 %r2398, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2399, %r2386, %r2398;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2402, %r2258, %r2399;
	// end inline asm
	// begin inline asm
	mov.b32 %r2405, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2406, %r2386, %r2405;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2409, %r2266, %r2406;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2412, %r2388, %r2402, %r2333;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2416, %r2395, %r2409, %r2333;
	// end inline asm
	shl.b32 	%r2423, %r2416, 4;
	// begin inline asm
	lop3.b32 %r2420, %r2339, %r2412, %r2423, 202;
	// end inline asm
	xor.b32  	%r7859, %r2420, -2004318072;
	// begin inline asm
	mov.b32 %r2427, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2425, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2426, %r2427, %r2425;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2429, %r2274, %r2426;
	// end inline asm
	// begin inline asm
	mov.b32 %r2432, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2433, %r2427, %r2432;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2436, %r2282, %r2433;
	// end inline asm
	// begin inline asm
	mov.b32 %r2439, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2440, %r2427, %r2439;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2443, %r2290, %r2440;
	// end inline asm
	// begin inline asm
	mov.b32 %r2446, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2447, %r2427, %r2446;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2450, %r2298, %r2447;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2453, %r2429, %r2443, %r2333;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2457, %r2436, %r2450, %r2333;
	// end inline asm
	shl.b32 	%r2464, %r2457, 4;
	// begin inline asm
	lop3.b32 %r2461, %r2339, %r2453, %r2464, 202;
	// end inline asm
	xor.b32  	%r7860, %r2461, -2004318072;
	add.s64 	%rd134, %rd188, %rd25;
	st.shared.u32 	[%rd134], %r7857;
	add.s64 	%rd135, %rd188, %rd24;
	st.shared.u32 	[%rd135], %r7858;
	add.s64 	%rd136, %rd188, %rd27;
	st.shared.u32 	[%rd136], %r7859;
	add.s64 	%rd137, %rd188, %rd26;
	st.shared.u32 	[%rd137], %r7860;
	ld.shared.u32 	%r8010, [%rd130];
	ld.shared.u32 	%r8011, [%rd131];
	ld.shared.u32 	%r8016, [%rd132];
	ld.shared.u32 	%r8017, [%rd133];
	// begin inline asm
	mov.b32 %r2470, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2481, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r2469, %r8010, -2004318072;
	// begin inline asm
	lop3.b32 %r2467, %r672, %r2469, %r2470, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2471, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2472, %r2470, %r2471;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2475, %r2467, %r2472;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2478, %r683, %r2469, %r2481, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2482, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2483, %r2481, %r2482;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2486, %r2478, %r2483;
	// end inline asm
	shr.u32 	%r2491, %r2469, 8;
	// begin inline asm
	lop3.b32 %r2489, %r672, %r2491, %r2470, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2493, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2494, %r2470, %r2493;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2497, %r2489, %r2494;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2500, %r683, %r2491, %r2481, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2504, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2505, %r2481, %r2504;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2508, %r2500, %r2505;
	// end inline asm
	// begin inline asm
	mov.b32 %r2516, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2527, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r2515, %r8011, -2004318072;
	// begin inline asm
	lop3.b32 %r2513, %r672, %r2515, %r2516, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2517, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2518, %r2516, %r2517;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2521, %r2513, %r2518;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2524, %r683, %r2515, %r2527, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2528, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2529, %r2527, %r2528;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2532, %r2524, %r2529;
	// end inline asm
	shr.u32 	%r2537, %r2515, 8;
	// begin inline asm
	lop3.b32 %r2535, %r672, %r2537, %r2516, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2539, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2540, %r2516, %r2539;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2543, %r2535, %r2540;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2546, %r683, %r2537, %r2527, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2550, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2551, %r2527, %r2550;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2554, %r2546, %r2551;
	// end inline asm
	// begin inline asm
	mov.b32 %r2562, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2573, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r2561, %r8016, -2004318072;
	// begin inline asm
	lop3.b32 %r2559, %r672, %r2561, %r2562, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2563, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2564, %r2562, %r2563;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2567, %r2559, %r2564;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2570, %r683, %r2561, %r2573, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2574, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2575, %r2573, %r2574;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2578, %r2570, %r2575;
	// end inline asm
	shr.u32 	%r2583, %r2561, 8;
	// begin inline asm
	lop3.b32 %r2581, %r672, %r2583, %r2562, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2585, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2586, %r2562, %r2585;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2589, %r2581, %r2586;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2592, %r683, %r2583, %r2573, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2596, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2597, %r2573, %r2596;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2600, %r2592, %r2597;
	// end inline asm
	// begin inline asm
	mov.b32 %r2608, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2619, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r2607, %r8017, -2004318072;
	// begin inline asm
	lop3.b32 %r2605, %r672, %r2607, %r2608, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2609, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2610, %r2608, %r2609;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2613, %r2605, %r2610;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2616, %r683, %r2607, %r2619, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2620, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2621, %r2619, %r2620;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2624, %r2616, %r2621;
	// end inline asm
	shr.u32 	%r2629, %r2607, 8;
	// begin inline asm
	lop3.b32 %r2627, %r672, %r2629, %r2608, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2631, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2632, %r2608, %r2631;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2635, %r2627, %r2632;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2638, %r683, %r2629, %r2619, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2642, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2643, %r2619, %r2642;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2646, %r2638, %r2643;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2649, %r273;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2651, %r2649, %r2475;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2654, %r273;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2656, %r2654, %r2486;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2659, %r273;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2661, %r2659, %r2497;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2664, %r273;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2666, %r2664, %r2508;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2669, %r273;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2671, %r2669, %r2521;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2674, %r273;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2676, %r2674, %r2532;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2679, %r273;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2681, %r2679, %r2543;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2684, %r273;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2686, %r2684, %r2554;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2689, %r273;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2691, %r2689, %r2567;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2694, %r273;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2696, %r2694, %r2578;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2699, %r273;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2701, %r2699, %r2589;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2704, %r273;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2706, %r2704, %r2600;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2709, %r273;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2711, %r2709, %r2613;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2714, %r273;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2716, %r2714, %r2624;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2719, %r273;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2721, %r2719, %r2635;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2724, %r273;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2726, %r2724, %r2646;
	// end inline asm
	// begin inline asm
	mov.b32 %r2734, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2745, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2731, %r672, %r1185, %r2734, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2735, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2736, %r2734, %r2735;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2739, %r2731, %r2736;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2742, %r683, %r1185, %r2745, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2746, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2747, %r2745, %r2746;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2750, %r2742, %r2747;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2753, %r672, %r1207, %r2734, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2757, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2758, %r2734, %r2757;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2761, %r2753, %r2758;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2764, %r683, %r1207, %r2745, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2768, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2769, %r2745, %r2768;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2772, %r2764, %r2769;
	// end inline asm
	// begin inline asm
	mov.b32 %r2780, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2791, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2777, %r672, %r1231, %r2780, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2781, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2782, %r2780, %r2781;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2785, %r2777, %r2782;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2788, %r683, %r1231, %r2791, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2792, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2793, %r2791, %r2792;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2796, %r2788, %r2793;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2799, %r672, %r1253, %r2780, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2803, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2804, %r2780, %r2803;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2807, %r2799, %r2804;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2810, %r683, %r1253, %r2791, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2814, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2815, %r2791, %r2814;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2818, %r2810, %r2815;
	// end inline asm
	// begin inline asm
	mov.b32 %r2826, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2837, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2823, %r672, %r1277, %r2826, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2827, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2828, %r2826, %r2827;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2831, %r2823, %r2828;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2834, %r683, %r1277, %r2837, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2838, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2839, %r2837, %r2838;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2842, %r2834, %r2839;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2845, %r672, %r1299, %r2826, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2849, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2850, %r2826, %r2849;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2853, %r2845, %r2850;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2856, %r683, %r1299, %r2837, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2860, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2861, %r2837, %r2860;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2864, %r2856, %r2861;
	// end inline asm
	// begin inline asm
	mov.b32 %r2872, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2883, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2869, %r672, %r1323, %r2872, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2873, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2874, %r2872, %r2873;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2877, %r2869, %r2874;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2880, %r683, %r1323, %r2883, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2884, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2885, %r2883, %r2884;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2888, %r2880, %r2885;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2891, %r672, %r1345, %r2872, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2895, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2896, %r2872, %r2895;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2899, %r2891, %r2896;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2902, %r683, %r1345, %r2883, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2906, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2907, %r2883, %r2906;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2910, %r2902, %r2907;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2913, %r219, %r2739, %r2651;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2917, %r219, %r2750, %r2656;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2921, %r219, %r2761, %r2661;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2925, %r219, %r2772, %r2666;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2929, %r219, %r2785, %r2671;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2933, %r219, %r2796, %r2676;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2937, %r219, %r2807, %r2681;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2941, %r219, %r2818, %r2686;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2945, %r219, %r2831, %r2691;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2949, %r219, %r2842, %r2696;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2953, %r219, %r2853, %r2701;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2957, %r219, %r2864, %r2706;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2961, %r219, %r2877, %r2711;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2965, %r219, %r2888, %r2716;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2969, %r219, %r2899, %r2721;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2973, %r219, %r2910, %r2726;
	// end inline asm
	// begin inline asm
	mov.b32 %r2982, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2993, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2979, %r672, %r1465, %r2982, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2983, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2984, %r2982, %r2983;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2987, %r2979, %r2984;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2990, %r683, %r1465, %r2993, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2994, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2995, %r2993, %r2994;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2998, %r2990, %r2995;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3001, %r672, %r1487, %r2982, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3005, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3006, %r2982, %r3005;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3009, %r3001, %r3006;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3012, %r683, %r1487, %r2993, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3016, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3017, %r2993, %r3016;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3020, %r3012, %r3017;
	// end inline asm
	// begin inline asm
	mov.b32 %r3028, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r3039, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3025, %r672, %r1511, %r3028, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3029, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3030, %r3028, %r3029;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3033, %r3025, %r3030;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3036, %r683, %r1511, %r3039, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3040, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3041, %r3039, %r3040;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3044, %r3036, %r3041;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3047, %r672, %r1533, %r3028, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3051, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3052, %r3028, %r3051;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3055, %r3047, %r3052;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3058, %r683, %r1533, %r3039, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3062, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3063, %r3039, %r3062;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3066, %r3058, %r3063;
	// end inline asm
	// begin inline asm
	mov.b32 %r3074, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r3085, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3071, %r672, %r1557, %r3074, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3075, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3076, %r3074, %r3075;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3079, %r3071, %r3076;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3082, %r683, %r1557, %r3085, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3086, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3087, %r3085, %r3086;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3090, %r3082, %r3087;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3093, %r672, %r1579, %r3074, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3097, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3098, %r3074, %r3097;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3101, %r3093, %r3098;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3104, %r683, %r1579, %r3085, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3108, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3109, %r3085, %r3108;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3112, %r3104, %r3109;
	// end inline asm
	// begin inline asm
	mov.b32 %r3120, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r3131, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3117, %r672, %r1603, %r3120, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3121, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3122, %r3120, %r3121;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3125, %r3117, %r3122;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3128, %r683, %r1603, %r3131, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3132, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3133, %r3131, %r3132;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3136, %r3128, %r3133;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3139, %r672, %r1625, %r3120, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3143, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3144, %r3120, %r3143;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3147, %r3139, %r3144;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3150, %r683, %r1625, %r3131, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3154, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3155, %r3131, %r3154;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3158, %r3150, %r3155;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3161, %r237;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3163, %r3161, %r2987, %r2913;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3167, %r237;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3169, %r3167, %r2998, %r2917;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3173, %r237;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3175, %r3173, %r3009, %r2921;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3179, %r237;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3181, %r3179, %r3020, %r2925;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3185, %r237;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3187, %r3185, %r3033, %r2929;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3191, %r237;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3193, %r3191, %r3044, %r2933;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3197, %r237;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3199, %r3197, %r3055, %r2937;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3203, %r237;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3205, %r3203, %r3066, %r2941;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3209, %r237;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3211, %r3209, %r3079, %r2945;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3215, %r237;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3217, %r3215, %r3090, %r2949;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3221, %r237;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3223, %r3221, %r3101, %r2953;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3227, %r237;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3229, %r3227, %r3112, %r2957;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3233, %r237;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3235, %r3233, %r3125, %r2961;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3239, %r237;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3241, %r3239, %r3136, %r2965;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3245, %r237;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3247, %r3245, %r3147, %r2969;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3251, %r237;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3253, %r3251, %r3158, %r2973;
	// end inline asm
	// begin inline asm
	mov.b32 %r3262, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r3273, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3259, %r672, %r673, %r3262, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3263, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3264, %r3262, %r3263;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3267, %r3259, %r3264;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3270, %r683, %r673, %r3273, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3274, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3275, %r3273, %r3274;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3278, %r3270, %r3275;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3281, %r672, %r695, %r3262, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3285, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3286, %r3262, %r3285;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3289, %r3281, %r3286;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3292, %r683, %r695, %r3273, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3296, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3297, %r3273, %r3296;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3300, %r3292, %r3297;
	// end inline asm
	// begin inline asm
	mov.b32 %r3308, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r3319, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3305, %r672, %r719, %r3308, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3309, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3310, %r3308, %r3309;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3313, %r3305, %r3310;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3316, %r683, %r719, %r3319, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3320, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3321, %r3319, %r3320;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3324, %r3316, %r3321;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3327, %r672, %r741, %r3308, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3331, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3332, %r3308, %r3331;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3335, %r3327, %r3332;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3338, %r683, %r741, %r3319, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3342, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3343, %r3319, %r3342;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3346, %r3338, %r3343;
	// end inline asm
	// begin inline asm
	mov.b32 %r3354, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r3365, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3351, %r672, %r765, %r3354, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3355, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3356, %r3354, %r3355;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3359, %r3351, %r3356;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3362, %r683, %r765, %r3365, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3366, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3367, %r3365, %r3366;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3370, %r3362, %r3367;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3373, %r672, %r787, %r3354, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3377, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3378, %r3354, %r3377;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3381, %r3373, %r3378;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3384, %r683, %r787, %r3365, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3388, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3389, %r3365, %r3388;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3392, %r3384, %r3389;
	// end inline asm
	// begin inline asm
	mov.b32 %r3400, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r3411, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3397, %r672, %r811, %r3400, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3401, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3402, %r3400, %r3401;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3405, %r3397, %r3402;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3408, %r683, %r811, %r3411, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3412, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3413, %r3411, %r3412;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3416, %r3408, %r3413;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3419, %r672, %r833, %r3400, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3423, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3424, %r3400, %r3423;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3427, %r3419, %r3424;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3430, %r683, %r833, %r3411, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3434, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3435, %r3411, %r3434;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3438, %r3430, %r3435;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3512, %r255, %r3267, %r3163;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3509, %r255, %r3278, %r3169;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3521, %r255, %r3289, %r3175;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3518, %r255, %r3300, %r3181;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3530, %r255, %r3313, %r3187;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3527, %r255, %r3324, %r3193;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3539, %r255, %r3335, %r3199;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3536, %r255, %r3346, %r3205;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3548, %r255, %r3359, %r3211;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3545, %r255, %r3370, %r3217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3557, %r255, %r3381, %r3223;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3554, %r255, %r3392, %r3229;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3566, %r255, %r3405, %r3235;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3563, %r255, %r3416, %r3241;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3575, %r255, %r3427, %r3247;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3572, %r255, %r3438, %r3253;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3505, %r304;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3507, %r3505, %r3509;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3510, %r301, %r3512, %r3507;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3514, %r304;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3516, %r3514, %r3518;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3519, %r301, %r3521, %r3516;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3523, %r304;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3525, %r3523, %r3527;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3528, %r301, %r3530, %r3525;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3532, %r304;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3534, %r3532, %r3536;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3537, %r301, %r3539, %r3534;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3541, %r304;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3543, %r3541, %r3545;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3546, %r301, %r3548, %r3543;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3550, %r304;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3552, %r3550, %r3554;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3555, %r301, %r3557, %r3552;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3559, %r304;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3561, %r3559, %r3563;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3564, %r301, %r3566, %r3561;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3568, %r304;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3570, %r3568, %r3572;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3573, %r301, %r3575, %r3570;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3577, %r304, %r3512;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3580, %r301, %r3509, %r3577;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3584, %r304, %r3521;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3587, %r301, %r3518, %r3584;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3591, %r304, %r3530;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3594, %r301, %r3527, %r3591;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3598, %r304, %r3539;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3601, %r301, %r3536, %r3598;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3605, %r304, %r3548;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3608, %r301, %r3545, %r3605;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3612, %r304, %r3557;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3615, %r301, %r3554, %r3612;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3619, %r304, %r3566;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3622, %r301, %r3563, %r3619;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3626, %r304, %r3575;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3629, %r301, %r3572, %r3626;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3720, %r3717}, {%r348, %r354, %r351, %r357}, {%r3510, %r3580}, {%r1845, %r1845};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3729, %r3726}, {%r348, %r354, %r351, %r357}, {%r3519, %r3587}, {%r1845, %r1845};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3738, %r3735}, {%r348, %r354, %r351, %r357}, {%r3528, %r3594}, {%r1845, %r1845};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3747, %r3744}, {%r348, %r354, %r351, %r357}, {%r3537, %r3601}, {%r1845, %r1845};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3756, %r3753}, {%r348, %r354, %r351, %r357}, {%r3546, %r3608}, {%r1845, %r1845};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3765, %r3762}, {%r348, %r354, %r351, %r357}, {%r3555, %r3615}, {%r1845, %r1845};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3774, %r3771}, {%r348, %r354, %r351, %r357}, {%r3564, %r3622}, {%r1845, %r1845};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3783, %r3780}, {%r348, %r354, %r351, %r357}, {%r3573, %r3629}, {%r1845, %r1845};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3713, %r395;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3715, %r3713, %r3717;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3718, %r392, %r3720, %r3715;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3722, %r395;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3724, %r3722, %r3726;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3727, %r392, %r3729, %r3724;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3731, %r395;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3733, %r3731, %r3735;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3736, %r392, %r3738, %r3733;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3740, %r395;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3742, %r3740, %r3744;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3745, %r392, %r3747, %r3742;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3749, %r395;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3751, %r3749, %r3753;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3754, %r392, %r3756, %r3751;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3758, %r395;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3760, %r3758, %r3762;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3763, %r392, %r3765, %r3760;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3767, %r395;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3769, %r3767, %r3771;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3772, %r392, %r3774, %r3769;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3776, %r395;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3778, %r3776, %r3780;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3781, %r392, %r3783, %r3778;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3785, %r395, %r3720;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3788, %r392, %r3717, %r3785;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3792, %r395, %r3729;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3795, %r392, %r3726, %r3792;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3799, %r395, %r3738;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3802, %r392, %r3735, %r3799;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3806, %r395, %r3747;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3809, %r392, %r3744, %r3806;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3813, %r395, %r3756;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3816, %r392, %r3753, %r3813;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3820, %r395, %r3765;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3823, %r392, %r3762, %r3820;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3827, %r395, %r3774;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3830, %r392, %r3771, %r3827;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3834, %r395, %r3783;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3837, %r392, %r3780, %r3834;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3841, %r3842}, {%r426, %r432, %r429, %r435}, {%r3718, %r3788}, {%r1845, %r1845};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3851, %r3852}, {%r426, %r432, %r429, %r435}, {%r3727, %r3795}, {%r1845, %r1845};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3861, %r3862}, {%r426, %r432, %r429, %r435}, {%r3736, %r3802}, {%r1845, %r1845};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3871, %r3872}, {%r426, %r432, %r429, %r435}, {%r3745, %r3809}, {%r1845, %r1845};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3881, %r3882}, {%r426, %r432, %r429, %r435}, {%r3754, %r3816}, {%r1845, %r1845};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3891, %r3892}, {%r426, %r432, %r429, %r435}, {%r3763, %r3823}, {%r1845, %r1845};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3901, %r3902}, {%r426, %r432, %r429, %r435}, {%r3772, %r3830}, {%r1845, %r1845};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3911, %r3912}, {%r426, %r432, %r429, %r435}, {%r3781, %r3837}, {%r1845, %r1845};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3921, %r131, %r3841;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3924, %r131, %r3842;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3927, %r131, %r3851;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3930, %r131, %r3852;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3933, %r131, %r3861;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3936, %r131, %r3862;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3939, %r131, %r3871;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3942, %r131, %r3872;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3945, %r131, %r3881;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3948, %r131, %r3882;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3951, %r131, %r3891;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3954, %r131, %r3892;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3957, %r131, %r3901;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3960, %r131, %r3902;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3963, %r131, %r3911;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3966, %r131, %r3912;
	// end inline asm
	// begin inline asm
	mov.b32 %r3969, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3970, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3971, %r3921, %r3969;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3974, %r3971, %r3970;
	// end inline asm
	// begin inline asm
	mov.b32 %r3977, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3978, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3979, %r3924, %r3977;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3982, %r3979, %r3978;
	// end inline asm
	// begin inline asm
	mov.b32 %r3985, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3986, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3987, %r3927, %r3985;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3990, %r3987, %r3986;
	// end inline asm
	// begin inline asm
	mov.b32 %r3993, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3994, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3995, %r3930, %r3993;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3998, %r3995, %r3994;
	// end inline asm
	// begin inline asm
	mov.b32 %r4001, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r4002, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4003, %r3933, %r4001;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4006, %r4003, %r4002;
	// end inline asm
	// begin inline asm
	mov.b32 %r4009, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r4010, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4011, %r3936, %r4009;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4014, %r4011, %r4010;
	// end inline asm
	// begin inline asm
	mov.b32 %r4017, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r4018, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4019, %r3939, %r4017;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4022, %r4019, %r4018;
	// end inline asm
	// begin inline asm
	mov.b32 %r4025, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r4026, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4027, %r3942, %r4025;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4030, %r4027, %r4026;
	// end inline asm
	// begin inline asm
	mov.b32 %r4033, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r4034, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4035, %r3945, %r4033;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4038, %r4035, %r4034;
	// end inline asm
	// begin inline asm
	mov.b32 %r4041, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r4042, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4043, %r3948, %r4041;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4046, %r4043, %r4042;
	// end inline asm
	// begin inline asm
	mov.b32 %r4049, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r4050, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4051, %r3951, %r4049;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4054, %r4051, %r4050;
	// end inline asm
	// begin inline asm
	mov.b32 %r4057, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r4058, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4059, %r3954, %r4057;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4062, %r4059, %r4058;
	// end inline asm
	// begin inline asm
	mov.b32 %r4065, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r4066, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4067, %r3957, %r4065;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4070, %r4067, %r4066;
	// end inline asm
	// begin inline asm
	mov.b32 %r4073, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r4074, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4075, %r3960, %r4073;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4078, %r4075, %r4074;
	// end inline asm
	// begin inline asm
	mov.b32 %r4081, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r4082, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4083, %r3963, %r4081;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4086, %r4083, %r4082;
	// end inline asm
	// begin inline asm
	mov.b32 %r4089, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r4090, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4091, %r3966, %r4089;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4094, %r4091, %r4090;
	// end inline asm
	// begin inline asm
	mov.b32 %r4100, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4098, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4099, %r4100, %r4098;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4102, %r3974, %r4099;
	// end inline asm
	// begin inline asm
	mov.b32 %r4105, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4106, %r4100, %r4105;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4109, %r3982, %r4106;
	// end inline asm
	// begin inline asm
	mov.b32 %r4112, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4113, %r4100, %r4112;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4116, %r3990, %r4113;
	// end inline asm
	// begin inline asm
	mov.b32 %r4119, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4120, %r4100, %r4119;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4123, %r3998, %r4120;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4126, %r4102, %r4116, %r2333;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4130, %r4109, %r4123, %r2333;
	// end inline asm
	shl.b32 	%r4137, %r4130, 4;
	// begin inline asm
	lop3.b32 %r4134, %r2339, %r4126, %r4137, 202;
	// end inline asm
	xor.b32  	%r7861, %r4134, -2004318072;
	// begin inline asm
	mov.b32 %r4141, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4139, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4140, %r4141, %r4139;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4143, %r4006, %r4140;
	// end inline asm
	// begin inline asm
	mov.b32 %r4146, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4147, %r4141, %r4146;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4150, %r4014, %r4147;
	// end inline asm
	// begin inline asm
	mov.b32 %r4153, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4154, %r4141, %r4153;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4157, %r4022, %r4154;
	// end inline asm
	// begin inline asm
	mov.b32 %r4160, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4161, %r4141, %r4160;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4164, %r4030, %r4161;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4167, %r4143, %r4157, %r2333;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4171, %r4150, %r4164, %r2333;
	// end inline asm
	shl.b32 	%r4178, %r4171, 4;
	// begin inline asm
	lop3.b32 %r4175, %r2339, %r4167, %r4178, 202;
	// end inline asm
	xor.b32  	%r7862, %r4175, -2004318072;
	// begin inline asm
	mov.b32 %r4182, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4180, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4181, %r4182, %r4180;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4184, %r4038, %r4181;
	// end inline asm
	// begin inline asm
	mov.b32 %r4187, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4188, %r4182, %r4187;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4191, %r4046, %r4188;
	// end inline asm
	// begin inline asm
	mov.b32 %r4194, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4195, %r4182, %r4194;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4198, %r4054, %r4195;
	// end inline asm
	// begin inline asm
	mov.b32 %r4201, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4202, %r4182, %r4201;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4205, %r4062, %r4202;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4208, %r4184, %r4198, %r2333;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4212, %r4191, %r4205, %r2333;
	// end inline asm
	shl.b32 	%r4219, %r4212, 4;
	// begin inline asm
	lop3.b32 %r4216, %r2339, %r4208, %r4219, 202;
	// end inline asm
	xor.b32  	%r7863, %r4216, -2004318072;
	// begin inline asm
	mov.b32 %r4223, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4221, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4222, %r4223, %r4221;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4225, %r4070, %r4222;
	// end inline asm
	// begin inline asm
	mov.b32 %r4228, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4229, %r4223, %r4228;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4232, %r4078, %r4229;
	// end inline asm
	// begin inline asm
	mov.b32 %r4235, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4236, %r4223, %r4235;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4239, %r4086, %r4236;
	// end inline asm
	// begin inline asm
	mov.b32 %r4242, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4243, %r4223, %r4242;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4246, %r4094, %r4243;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4249, %r4225, %r4239, %r2333;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4253, %r4232, %r4246, %r2333;
	// end inline asm
	shl.b32 	%r4260, %r4253, 4;
	// begin inline asm
	lop3.b32 %r4257, %r2339, %r4249, %r4260, 202;
	// end inline asm
	xor.b32  	%r7864, %r4257, -2004318072;
	st.shared.u32 	[%rd134], %r7861;
	st.shared.u32 	[%rd135], %r7862;
	st.shared.u32 	[%rd136], %r7863;
	st.shared.u32 	[%rd137], %r7864;
	ld.shared.u32 	%r8012, [%rd130];
	ld.shared.u32 	%r8013, [%rd131];
	ld.shared.u32 	%r8018, [%rd132];
	ld.shared.u32 	%r8019, [%rd133];
	// begin inline asm
	mov.b32 %r4266, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4277, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r4265, %r8012, -2004318072;
	// begin inline asm
	lop3.b32 %r4263, %r672, %r4265, %r4266, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4267, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4268, %r4266, %r4267;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4271, %r4263, %r4268;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4274, %r683, %r4265, %r4277, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4278, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4279, %r4277, %r4278;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4282, %r4274, %r4279;
	// end inline asm
	shr.u32 	%r4287, %r4265, 8;
	// begin inline asm
	lop3.b32 %r4285, %r672, %r4287, %r4266, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4289, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4290, %r4266, %r4289;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4293, %r4285, %r4290;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4296, %r683, %r4287, %r4277, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4300, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4301, %r4277, %r4300;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4304, %r4296, %r4301;
	// end inline asm
	// begin inline asm
	mov.b32 %r4312, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4323, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r4311, %r8013, -2004318072;
	// begin inline asm
	lop3.b32 %r4309, %r672, %r4311, %r4312, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4313, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4314, %r4312, %r4313;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4317, %r4309, %r4314;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4320, %r683, %r4311, %r4323, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4324, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4325, %r4323, %r4324;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4328, %r4320, %r4325;
	// end inline asm
	shr.u32 	%r4333, %r4311, 8;
	// begin inline asm
	lop3.b32 %r4331, %r672, %r4333, %r4312, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4335, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4336, %r4312, %r4335;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4339, %r4331, %r4336;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4342, %r683, %r4333, %r4323, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4346, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4347, %r4323, %r4346;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4350, %r4342, %r4347;
	// end inline asm
	// begin inline asm
	mov.b32 %r4358, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4369, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r4357, %r8018, -2004318072;
	// begin inline asm
	lop3.b32 %r4355, %r672, %r4357, %r4358, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4359, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4360, %r4358, %r4359;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4363, %r4355, %r4360;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4366, %r683, %r4357, %r4369, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4370, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4371, %r4369, %r4370;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4374, %r4366, %r4371;
	// end inline asm
	shr.u32 	%r4379, %r4357, 8;
	// begin inline asm
	lop3.b32 %r4377, %r672, %r4379, %r4358, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4381, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4382, %r4358, %r4381;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4385, %r4377, %r4382;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4388, %r683, %r4379, %r4369, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4392, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4393, %r4369, %r4392;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4396, %r4388, %r4393;
	// end inline asm
	// begin inline asm
	mov.b32 %r4404, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4415, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r4403, %r8019, -2004318072;
	// begin inline asm
	lop3.b32 %r4401, %r672, %r4403, %r4404, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4405, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4406, %r4404, %r4405;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4409, %r4401, %r4406;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4412, %r683, %r4403, %r4415, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4416, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4417, %r4415, %r4416;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4420, %r4412, %r4417;
	// end inline asm
	shr.u32 	%r4425, %r4403, 8;
	// begin inline asm
	lop3.b32 %r4423, %r672, %r4425, %r4404, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4427, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4428, %r4404, %r4427;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4431, %r4423, %r4428;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4434, %r683, %r4425, %r4415, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4438, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4439, %r4415, %r4438;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4442, %r4434, %r4439;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4445, %r273;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4447, %r4445, %r4271;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4450, %r273;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4452, %r4450, %r4282;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4455, %r273;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4457, %r4455, %r4293;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4460, %r273;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4462, %r4460, %r4304;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4465, %r273;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4467, %r4465, %r4317;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4470, %r273;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4472, %r4470, %r4328;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4475, %r273;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4477, %r4475, %r4339;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4480, %r273;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4482, %r4480, %r4350;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4485, %r273;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4487, %r4485, %r4363;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4490, %r273;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4492, %r4490, %r4374;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4495, %r273;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4497, %r4495, %r4385;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4500, %r273;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4502, %r4500, %r4396;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4505, %r273;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4507, %r4505, %r4409;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4510, %r273;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4512, %r4510, %r4420;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4515, %r273;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4517, %r4515, %r4431;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4520, %r273;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4522, %r4520, %r4442;
	// end inline asm
	// begin inline asm
	mov.b32 %r4530, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4541, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4527, %r672, %r1465, %r4530, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4531, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4532, %r4530, %r4531;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4535, %r4527, %r4532;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4538, %r683, %r1465, %r4541, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4542, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4543, %r4541, %r4542;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4546, %r4538, %r4543;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4549, %r672, %r1487, %r4530, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4553, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4554, %r4530, %r4553;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4557, %r4549, %r4554;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4560, %r683, %r1487, %r4541, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4564, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4565, %r4541, %r4564;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4568, %r4560, %r4565;
	// end inline asm
	// begin inline asm
	mov.b32 %r4576, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4587, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4573, %r672, %r1511, %r4576, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4577, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4578, %r4576, %r4577;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4581, %r4573, %r4578;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4584, %r683, %r1511, %r4587, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4588, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4589, %r4587, %r4588;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4592, %r4584, %r4589;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4595, %r672, %r1533, %r4576, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4599, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4600, %r4576, %r4599;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4603, %r4595, %r4600;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4606, %r683, %r1533, %r4587, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4610, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4611, %r4587, %r4610;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4614, %r4606, %r4611;
	// end inline asm
	// begin inline asm
	mov.b32 %r4622, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4633, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4619, %r672, %r1557, %r4622, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4623, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4624, %r4622, %r4623;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4627, %r4619, %r4624;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4630, %r683, %r1557, %r4633, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4634, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4635, %r4633, %r4634;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4638, %r4630, %r4635;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4641, %r672, %r1579, %r4622, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4645, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4646, %r4622, %r4645;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4649, %r4641, %r4646;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4652, %r683, %r1579, %r4633, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4656, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4657, %r4633, %r4656;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4660, %r4652, %r4657;
	// end inline asm
	// begin inline asm
	mov.b32 %r4668, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4679, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4665, %r672, %r1603, %r4668, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4669, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4670, %r4668, %r4669;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4673, %r4665, %r4670;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4676, %r683, %r1603, %r4679, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4680, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4681, %r4679, %r4680;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4684, %r4676, %r4681;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4687, %r672, %r1625, %r4668, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4691, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4692, %r4668, %r4691;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4695, %r4687, %r4692;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4698, %r683, %r1625, %r4679, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4702, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4703, %r4679, %r4702;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4706, %r4698, %r4703;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4709, %r219, %r4535, %r4447;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4713, %r219, %r4546, %r4452;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4717, %r219, %r4557, %r4457;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4721, %r219, %r4568, %r4462;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4725, %r219, %r4581, %r4467;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4729, %r219, %r4592, %r4472;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4733, %r219, %r4603, %r4477;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4737, %r219, %r4614, %r4482;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4741, %r219, %r4627, %r4487;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4745, %r219, %r4638, %r4492;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4749, %r219, %r4649, %r4497;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4753, %r219, %r4660, %r4502;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4757, %r219, %r4673, %r4507;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4761, %r219, %r4684, %r4512;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4765, %r219, %r4695, %r4517;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4769, %r219, %r4706, %r4522;
	// end inline asm
	// begin inline asm
	mov.b32 %r4778, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4789, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4775, %r672, %r673, %r4778, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4779, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4780, %r4778, %r4779;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4783, %r4775, %r4780;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4786, %r683, %r673, %r4789, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4790, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4791, %r4789, %r4790;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4794, %r4786, %r4791;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4797, %r672, %r695, %r4778, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4801, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4802, %r4778, %r4801;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4805, %r4797, %r4802;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4808, %r683, %r695, %r4789, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4812, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4813, %r4789, %r4812;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4816, %r4808, %r4813;
	// end inline asm
	// begin inline asm
	mov.b32 %r4824, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4835, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4821, %r672, %r719, %r4824, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4825, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4826, %r4824, %r4825;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4829, %r4821, %r4826;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4832, %r683, %r719, %r4835, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4836, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4837, %r4835, %r4836;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4840, %r4832, %r4837;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4843, %r672, %r741, %r4824, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4847, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4848, %r4824, %r4847;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4851, %r4843, %r4848;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4854, %r683, %r741, %r4835, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4858, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4859, %r4835, %r4858;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4862, %r4854, %r4859;
	// end inline asm
	// begin inline asm
	mov.b32 %r4870, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4881, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4867, %r672, %r765, %r4870, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4871, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4872, %r4870, %r4871;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4875, %r4867, %r4872;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4878, %r683, %r765, %r4881, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4882, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4883, %r4881, %r4882;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4886, %r4878, %r4883;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4889, %r672, %r787, %r4870, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4893, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4894, %r4870, %r4893;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4897, %r4889, %r4894;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4900, %r683, %r787, %r4881, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4904, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4905, %r4881, %r4904;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4908, %r4900, %r4905;
	// end inline asm
	// begin inline asm
	mov.b32 %r4916, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4927, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4913, %r672, %r811, %r4916, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4917, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4918, %r4916, %r4917;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4921, %r4913, %r4918;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4924, %r683, %r811, %r4927, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4928, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4929, %r4927, %r4928;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4932, %r4924, %r4929;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4935, %r672, %r833, %r4916, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4939, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4940, %r4916, %r4939;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4943, %r4935, %r4940;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4946, %r683, %r833, %r4927, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4950, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4951, %r4927, %r4950;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4954, %r4946, %r4951;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4957, %r237;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4959, %r4957, %r4783, %r4709;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4963, %r237;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4965, %r4963, %r4794, %r4713;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4969, %r237;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4971, %r4969, %r4805, %r4717;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4975, %r237;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4977, %r4975, %r4816, %r4721;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4981, %r237;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4983, %r4981, %r4829, %r4725;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4987, %r237;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4989, %r4987, %r4840, %r4729;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4993, %r237;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4995, %r4993, %r4851, %r4733;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4999, %r237;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5001, %r4999, %r4862, %r4737;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5005, %r237;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5007, %r5005, %r4875, %r4741;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5011, %r237;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5013, %r5011, %r4886, %r4745;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5017, %r237;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5019, %r5017, %r4897, %r4749;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5023, %r237;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5025, %r5023, %r4908, %r4753;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5029, %r237;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5031, %r5029, %r4921, %r4757;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5035, %r237;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5037, %r5035, %r4932, %r4761;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5041, %r237;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5043, %r5041, %r4943, %r4765;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5047, %r237;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5049, %r5047, %r4954, %r4769;
	// end inline asm
	// begin inline asm
	mov.b32 %r5058, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5069, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5055, %r672, %r2469, %r5058, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5059, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5060, %r5058, %r5059;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5063, %r5055, %r5060;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5066, %r683, %r2469, %r5069, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5070, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5071, %r5069, %r5070;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5074, %r5066, %r5071;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5077, %r672, %r2491, %r5058, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5081, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5082, %r5058, %r5081;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5085, %r5077, %r5082;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5088, %r683, %r2491, %r5069, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5092, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5093, %r5069, %r5092;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5096, %r5088, %r5093;
	// end inline asm
	// begin inline asm
	mov.b32 %r5104, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5115, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5101, %r672, %r2515, %r5104, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5105, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5106, %r5104, %r5105;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5109, %r5101, %r5106;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5112, %r683, %r2515, %r5115, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5116, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5117, %r5115, %r5116;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5120, %r5112, %r5117;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5123, %r672, %r2537, %r5104, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5127, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5128, %r5104, %r5127;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5131, %r5123, %r5128;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5134, %r683, %r2537, %r5115, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5138, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5139, %r5115, %r5138;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5142, %r5134, %r5139;
	// end inline asm
	// begin inline asm
	mov.b32 %r5150, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5161, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5147, %r672, %r2561, %r5150, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5151, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5152, %r5150, %r5151;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5155, %r5147, %r5152;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5158, %r683, %r2561, %r5161, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5162, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5163, %r5161, %r5162;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5166, %r5158, %r5163;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5169, %r672, %r2583, %r5150, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5173, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5174, %r5150, %r5173;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5177, %r5169, %r5174;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5180, %r683, %r2583, %r5161, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5184, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5185, %r5161, %r5184;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5188, %r5180, %r5185;
	// end inline asm
	// begin inline asm
	mov.b32 %r5196, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5207, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5193, %r672, %r2607, %r5196, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5197, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5198, %r5196, %r5197;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5201, %r5193, %r5198;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5204, %r683, %r2607, %r5207, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5208, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5209, %r5207, %r5208;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5212, %r5204, %r5209;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5215, %r672, %r2629, %r5196, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5219, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5220, %r5196, %r5219;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5223, %r5215, %r5220;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5226, %r683, %r2629, %r5207, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5230, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5231, %r5207, %r5230;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5234, %r5226, %r5231;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5308, %r255, %r5063, %r4959;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5305, %r255, %r5074, %r4965;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5317, %r255, %r5085, %r4971;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5314, %r255, %r5096, %r4977;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5326, %r255, %r5109, %r4983;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5323, %r255, %r5120, %r4989;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5335, %r255, %r5131, %r4995;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5332, %r255, %r5142, %r5001;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5344, %r255, %r5155, %r5007;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5341, %r255, %r5166, %r5013;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5353, %r255, %r5177, %r5019;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5350, %r255, %r5188, %r5025;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5362, %r255, %r5201, %r5031;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5359, %r255, %r5212, %r5037;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5371, %r255, %r5223, %r5043;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5368, %r255, %r5234, %r5049;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5301, %r304;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5303, %r5301, %r5305;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5306, %r301, %r5308, %r5303;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5310, %r304;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5312, %r5310, %r5314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5315, %r301, %r5317, %r5312;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5319, %r304;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5321, %r5319, %r5323;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5324, %r301, %r5326, %r5321;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5328, %r304;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5330, %r5328, %r5332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5333, %r301, %r5335, %r5330;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5337, %r304;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5339, %r5337, %r5341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5342, %r301, %r5344, %r5339;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5346, %r304;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5348, %r5346, %r5350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5351, %r301, %r5353, %r5348;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5355, %r304;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5357, %r5355, %r5359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5360, %r301, %r5362, %r5357;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5364, %r304;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5366, %r5364, %r5368;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5369, %r301, %r5371, %r5366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5373, %r304, %r5308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5376, %r301, %r5305, %r5373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5380, %r304, %r5317;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5383, %r301, %r5314, %r5380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5387, %r304, %r5326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5390, %r301, %r5323, %r5387;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5394, %r304, %r5335;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5397, %r301, %r5332, %r5394;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5401, %r304, %r5344;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5404, %r301, %r5341, %r5401;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5408, %r304, %r5353;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5411, %r301, %r5350, %r5408;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5415, %r304, %r5362;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5418, %r301, %r5359, %r5415;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5422, %r304, %r5371;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5425, %r301, %r5368, %r5422;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5516, %r5513}, {%r348, %r354, %r351, %r357}, {%r5306, %r5376}, {%r1845, %r1845};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5525, %r5522}, {%r348, %r354, %r351, %r357}, {%r5315, %r5383}, {%r1845, %r1845};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5534, %r5531}, {%r348, %r354, %r351, %r357}, {%r5324, %r5390}, {%r1845, %r1845};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5543, %r5540}, {%r348, %r354, %r351, %r357}, {%r5333, %r5397}, {%r1845, %r1845};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5552, %r5549}, {%r348, %r354, %r351, %r357}, {%r5342, %r5404}, {%r1845, %r1845};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5561, %r5558}, {%r348, %r354, %r351, %r357}, {%r5351, %r5411}, {%r1845, %r1845};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5570, %r5567}, {%r348, %r354, %r351, %r357}, {%r5360, %r5418}, {%r1845, %r1845};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5579, %r5576}, {%r348, %r354, %r351, %r357}, {%r5369, %r5425}, {%r1845, %r1845};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5509, %r395;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5511, %r5509, %r5513;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5514, %r392, %r5516, %r5511;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5518, %r395;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5520, %r5518, %r5522;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5523, %r392, %r5525, %r5520;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5527, %r395;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5529, %r5527, %r5531;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5532, %r392, %r5534, %r5529;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5536, %r395;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5538, %r5536, %r5540;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5541, %r392, %r5543, %r5538;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5545, %r395;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5547, %r5545, %r5549;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5550, %r392, %r5552, %r5547;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5554, %r395;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5556, %r5554, %r5558;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5559, %r392, %r5561, %r5556;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5563, %r395;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5565, %r5563, %r5567;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5568, %r392, %r5570, %r5565;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5572, %r395;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5574, %r5572, %r5576;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5577, %r392, %r5579, %r5574;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5581, %r395, %r5516;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5584, %r392, %r5513, %r5581;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5588, %r395, %r5525;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5591, %r392, %r5522, %r5588;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5595, %r395, %r5534;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5598, %r392, %r5531, %r5595;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5602, %r395, %r5543;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5605, %r392, %r5540, %r5602;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5609, %r395, %r5552;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5612, %r392, %r5549, %r5609;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5616, %r395, %r5561;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5619, %r392, %r5558, %r5616;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5623, %r395, %r5570;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5626, %r392, %r5567, %r5623;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5630, %r395, %r5579;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5633, %r392, %r5576, %r5630;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5637, %r5638}, {%r426, %r432, %r429, %r435}, {%r5514, %r5584}, {%r1845, %r1845};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5647, %r5648}, {%r426, %r432, %r429, %r435}, {%r5523, %r5591}, {%r1845, %r1845};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5657, %r5658}, {%r426, %r432, %r429, %r435}, {%r5532, %r5598}, {%r1845, %r1845};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5667, %r5668}, {%r426, %r432, %r429, %r435}, {%r5541, %r5605}, {%r1845, %r1845};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5677, %r5678}, {%r426, %r432, %r429, %r435}, {%r5550, %r5612}, {%r1845, %r1845};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5687, %r5688}, {%r426, %r432, %r429, %r435}, {%r5559, %r5619}, {%r1845, %r1845};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5697, %r5698}, {%r426, %r432, %r429, %r435}, {%r5568, %r5626}, {%r1845, %r1845};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5707, %r5708}, {%r426, %r432, %r429, %r435}, {%r5577, %r5633}, {%r1845, %r1845};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5717, %r131, %r5637;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5720, %r131, %r5638;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5723, %r131, %r5647;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5726, %r131, %r5648;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5729, %r131, %r5657;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5732, %r131, %r5658;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5735, %r131, %r5667;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5738, %r131, %r5668;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5741, %r131, %r5677;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5744, %r131, %r5678;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5747, %r131, %r5687;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5750, %r131, %r5688;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5753, %r131, %r5697;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5756, %r131, %r5698;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5759, %r131, %r5707;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5762, %r131, %r5708;
	// end inline asm
	// begin inline asm
	mov.b32 %r5765, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5766, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5767, %r5717, %r5765;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5770, %r5767, %r5766;
	// end inline asm
	// begin inline asm
	mov.b32 %r5773, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5774, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5775, %r5720, %r5773;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5778, %r5775, %r5774;
	// end inline asm
	// begin inline asm
	mov.b32 %r5781, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5782, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5783, %r5723, %r5781;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5786, %r5783, %r5782;
	// end inline asm
	// begin inline asm
	mov.b32 %r5789, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5790, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5791, %r5726, %r5789;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5794, %r5791, %r5790;
	// end inline asm
	// begin inline asm
	mov.b32 %r5797, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5798, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5799, %r5729, %r5797;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5802, %r5799, %r5798;
	// end inline asm
	// begin inline asm
	mov.b32 %r5805, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5806, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5807, %r5732, %r5805;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5810, %r5807, %r5806;
	// end inline asm
	// begin inline asm
	mov.b32 %r5813, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5814, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5815, %r5735, %r5813;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5818, %r5815, %r5814;
	// end inline asm
	// begin inline asm
	mov.b32 %r5821, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5822, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5823, %r5738, %r5821;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5826, %r5823, %r5822;
	// end inline asm
	// begin inline asm
	mov.b32 %r5829, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5830, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5831, %r5741, %r5829;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5834, %r5831, %r5830;
	// end inline asm
	// begin inline asm
	mov.b32 %r5837, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5838, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5839, %r5744, %r5837;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5842, %r5839, %r5838;
	// end inline asm
	// begin inline asm
	mov.b32 %r5845, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5846, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5847, %r5747, %r5845;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5850, %r5847, %r5846;
	// end inline asm
	// begin inline asm
	mov.b32 %r5853, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5854, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5855, %r5750, %r5853;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5858, %r5855, %r5854;
	// end inline asm
	// begin inline asm
	mov.b32 %r5861, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5862, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5863, %r5753, %r5861;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5866, %r5863, %r5862;
	// end inline asm
	// begin inline asm
	mov.b32 %r5869, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5870, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5871, %r5756, %r5869;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5874, %r5871, %r5870;
	// end inline asm
	// begin inline asm
	mov.b32 %r5877, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5878, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5879, %r5759, %r5877;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5882, %r5879, %r5878;
	// end inline asm
	// begin inline asm
	mov.b32 %r5885, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5886, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5887, %r5762, %r5885;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5890, %r5887, %r5886;
	// end inline asm
	// begin inline asm
	mov.b32 %r5896, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5894, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5895, %r5896, %r5894;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5898, %r5770, %r5895;
	// end inline asm
	// begin inline asm
	mov.b32 %r5901, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5902, %r5896, %r5901;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5905, %r5778, %r5902;
	// end inline asm
	// begin inline asm
	mov.b32 %r5908, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5909, %r5896, %r5908;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5912, %r5786, %r5909;
	// end inline asm
	// begin inline asm
	mov.b32 %r5915, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5916, %r5896, %r5915;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5919, %r5794, %r5916;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5922, %r5898, %r5912, %r2333;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5926, %r5905, %r5919, %r2333;
	// end inline asm
	shl.b32 	%r5933, %r5926, 4;
	// begin inline asm
	lop3.b32 %r5930, %r2339, %r5922, %r5933, 202;
	// end inline asm
	xor.b32  	%r7865, %r5930, -2004318072;
	// begin inline asm
	mov.b32 %r5937, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5935, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5936, %r5937, %r5935;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5939, %r5802, %r5936;
	// end inline asm
	// begin inline asm
	mov.b32 %r5942, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5943, %r5937, %r5942;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5946, %r5810, %r5943;
	// end inline asm
	// begin inline asm
	mov.b32 %r5949, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5950, %r5937, %r5949;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5953, %r5818, %r5950;
	// end inline asm
	// begin inline asm
	mov.b32 %r5956, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5957, %r5937, %r5956;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5960, %r5826, %r5957;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5963, %r5939, %r5953, %r2333;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5967, %r5946, %r5960, %r2333;
	// end inline asm
	shl.b32 	%r5974, %r5967, 4;
	// begin inline asm
	lop3.b32 %r5971, %r2339, %r5963, %r5974, 202;
	// end inline asm
	xor.b32  	%r7866, %r5971, -2004318072;
	// begin inline asm
	mov.b32 %r5978, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5976, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5977, %r5978, %r5976;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5980, %r5834, %r5977;
	// end inline asm
	// begin inline asm
	mov.b32 %r5983, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5984, %r5978, %r5983;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5987, %r5842, %r5984;
	// end inline asm
	// begin inline asm
	mov.b32 %r5990, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5991, %r5978, %r5990;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5994, %r5850, %r5991;
	// end inline asm
	// begin inline asm
	mov.b32 %r5997, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5998, %r5978, %r5997;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6001, %r5858, %r5998;
	// end inline asm
	// begin inline asm
	prmt.b32 %r6004, %r5980, %r5994, %r2333;
	// end inline asm
	// begin inline asm
	prmt.b32 %r6008, %r5987, %r6001, %r2333;
	// end inline asm
	shl.b32 	%r6015, %r6008, 4;
	// begin inline asm
	lop3.b32 %r6012, %r2339, %r6004, %r6015, 202;
	// end inline asm
	xor.b32  	%r7867, %r6012, -2004318072;
	// begin inline asm
	mov.b32 %r6019, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6017, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6018, %r6019, %r6017;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6021, %r5866, %r6018;
	// end inline asm
	// begin inline asm
	mov.b32 %r6024, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6025, %r6019, %r6024;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6028, %r5874, %r6025;
	// end inline asm
	// begin inline asm
	mov.b32 %r6031, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6032, %r6019, %r6031;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6035, %r5882, %r6032;
	// end inline asm
	// begin inline asm
	mov.b32 %r6038, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6039, %r6019, %r6038;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6042, %r5890, %r6039;
	// end inline asm
	// begin inline asm
	prmt.b32 %r6045, %r6021, %r6035, %r2333;
	// end inline asm
	// begin inline asm
	prmt.b32 %r6049, %r6028, %r6042, %r2333;
	// end inline asm
	shl.b32 	%r6056, %r6049, 4;
	// begin inline asm
	lop3.b32 %r6053, %r2339, %r6045, %r6056, 202;
	// end inline asm
	xor.b32  	%r7868, %r6053, -2004318072;
	st.shared.u32 	[%rd134], %r7865;
	st.shared.u32 	[%rd135], %r7866;
	st.shared.u32 	[%rd136], %r7867;
	st.shared.u32 	[%rd137], %r7868;
	ld.shared.u32 	%r8014, [%rd130];
	ld.shared.u32 	%r8015, [%rd131];
	ld.shared.u32 	%r8020, [%rd132];
	ld.shared.u32 	%r8021, [%rd133];
	// begin inline asm
	mov.b32 %r6062, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6073, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r6061, %r8014, -2004318072;
	// begin inline asm
	lop3.b32 %r6059, %r672, %r6061, %r6062, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6063, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6064, %r6062, %r6063;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6067, %r6059, %r6064;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6070, %r683, %r6061, %r6073, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6074, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6075, %r6073, %r6074;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6078, %r6070, %r6075;
	// end inline asm
	shr.u32 	%r6083, %r6061, 8;
	// begin inline asm
	lop3.b32 %r6081, %r672, %r6083, %r6062, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6085, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6086, %r6062, %r6085;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6089, %r6081, %r6086;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6092, %r683, %r6083, %r6073, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6096, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6097, %r6073, %r6096;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6100, %r6092, %r6097;
	// end inline asm
	// begin inline asm
	mov.b32 %r6108, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6119, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r6107, %r8015, -2004318072;
	// begin inline asm
	lop3.b32 %r6105, %r672, %r6107, %r6108, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6109, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6110, %r6108, %r6109;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6113, %r6105, %r6110;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6116, %r683, %r6107, %r6119, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6120, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6121, %r6119, %r6120;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6124, %r6116, %r6121;
	// end inline asm
	shr.u32 	%r6129, %r6107, 8;
	// begin inline asm
	lop3.b32 %r6127, %r672, %r6129, %r6108, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6131, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6132, %r6108, %r6131;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6135, %r6127, %r6132;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6138, %r683, %r6129, %r6119, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6142, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6143, %r6119, %r6142;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6146, %r6138, %r6143;
	// end inline asm
	// begin inline asm
	mov.b32 %r6154, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6165, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r6153, %r8020, -2004318072;
	// begin inline asm
	lop3.b32 %r6151, %r672, %r6153, %r6154, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6155, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6156, %r6154, %r6155;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6159, %r6151, %r6156;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6162, %r683, %r6153, %r6165, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6166, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6167, %r6165, %r6166;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6170, %r6162, %r6167;
	// end inline asm
	shr.u32 	%r6175, %r6153, 8;
	// begin inline asm
	lop3.b32 %r6173, %r672, %r6175, %r6154, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6177, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6178, %r6154, %r6177;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6181, %r6173, %r6178;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6184, %r683, %r6175, %r6165, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6188, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6189, %r6165, %r6188;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6192, %r6184, %r6189;
	// end inline asm
	// begin inline asm
	mov.b32 %r6200, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6211, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r6199, %r8021, -2004318072;
	// begin inline asm
	lop3.b32 %r6197, %r672, %r6199, %r6200, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6201, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6202, %r6200, %r6201;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6205, %r6197, %r6202;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6208, %r683, %r6199, %r6211, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6212, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6213, %r6211, %r6212;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6216, %r6208, %r6213;
	// end inline asm
	shr.u32 	%r6221, %r6199, 8;
	// begin inline asm
	lop3.b32 %r6219, %r672, %r6221, %r6200, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6223, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6224, %r6200, %r6223;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6227, %r6219, %r6224;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6230, %r683, %r6221, %r6211, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6234, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6235, %r6211, %r6234;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6238, %r6230, %r6235;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6241, %r273;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6243, %r6241, %r6067;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6246, %r273;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6248, %r6246, %r6078;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6251, %r273;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6253, %r6251, %r6089;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6256, %r273;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6258, %r6256, %r6100;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6261, %r273;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6263, %r6261, %r6113;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6266, %r273;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6268, %r6266, %r6124;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6271, %r273;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6273, %r6271, %r6135;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6276, %r273;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6278, %r6276, %r6146;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6281, %r273;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6283, %r6281, %r6159;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6286, %r273;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6288, %r6286, %r6170;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6291, %r273;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6293, %r6291, %r6181;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6296, %r273;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6298, %r6296, %r6192;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6301, %r273;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6303, %r6301, %r6205;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6306, %r273;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6308, %r6306, %r6216;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6311, %r273;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6313, %r6311, %r6227;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6316, %r273;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6318, %r6316, %r6238;
	// end inline asm
	// begin inline asm
	mov.b32 %r6326, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6337, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6323, %r672, %r673, %r6326, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6327, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6328, %r6326, %r6327;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6331, %r6323, %r6328;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6334, %r683, %r673, %r6337, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6338, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6339, %r6337, %r6338;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6342, %r6334, %r6339;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6345, %r672, %r695, %r6326, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6349, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6350, %r6326, %r6349;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6353, %r6345, %r6350;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6356, %r683, %r695, %r6337, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6360, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6361, %r6337, %r6360;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6364, %r6356, %r6361;
	// end inline asm
	// begin inline asm
	mov.b32 %r6372, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6383, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6369, %r672, %r719, %r6372, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6373, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6374, %r6372, %r6373;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6377, %r6369, %r6374;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6380, %r683, %r719, %r6383, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6384, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6385, %r6383, %r6384;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6388, %r6380, %r6385;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6391, %r672, %r741, %r6372, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6395, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6396, %r6372, %r6395;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6399, %r6391, %r6396;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6402, %r683, %r741, %r6383, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6406, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6407, %r6383, %r6406;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6410, %r6402, %r6407;
	// end inline asm
	// begin inline asm
	mov.b32 %r6418, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6429, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6415, %r672, %r765, %r6418, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6419, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6420, %r6418, %r6419;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6423, %r6415, %r6420;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6426, %r683, %r765, %r6429, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6430, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6431, %r6429, %r6430;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6434, %r6426, %r6431;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6437, %r672, %r787, %r6418, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6441, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6442, %r6418, %r6441;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6445, %r6437, %r6442;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6448, %r683, %r787, %r6429, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6452, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6453, %r6429, %r6452;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6456, %r6448, %r6453;
	// end inline asm
	// begin inline asm
	mov.b32 %r6464, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6475, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6461, %r672, %r811, %r6464, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6465, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6466, %r6464, %r6465;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6469, %r6461, %r6466;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6472, %r683, %r811, %r6475, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6476, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6477, %r6475, %r6476;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6480, %r6472, %r6477;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6483, %r672, %r833, %r6464, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6487, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6488, %r6464, %r6487;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6491, %r6483, %r6488;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6494, %r683, %r833, %r6475, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6498, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6499, %r6475, %r6498;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6502, %r6494, %r6499;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6505, %r219, %r6331, %r6243;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6509, %r219, %r6342, %r6248;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6513, %r219, %r6353, %r6253;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6517, %r219, %r6364, %r6258;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6521, %r219, %r6377, %r6263;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6525, %r219, %r6388, %r6268;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6529, %r219, %r6399, %r6273;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6533, %r219, %r6410, %r6278;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6537, %r219, %r6423, %r6283;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6541, %r219, %r6434, %r6288;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6545, %r219, %r6445, %r6293;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6549, %r219, %r6456, %r6298;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6553, %r219, %r6469, %r6303;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6557, %r219, %r6480, %r6308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6561, %r219, %r6491, %r6313;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6565, %r219, %r6502, %r6318;
	// end inline asm
	// begin inline asm
	mov.b32 %r6574, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6585, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6571, %r672, %r2469, %r6574, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6575, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6576, %r6574, %r6575;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6579, %r6571, %r6576;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6582, %r683, %r2469, %r6585, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6586, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6587, %r6585, %r6586;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6590, %r6582, %r6587;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6593, %r672, %r2491, %r6574, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6597, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6598, %r6574, %r6597;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6601, %r6593, %r6598;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6604, %r683, %r2491, %r6585, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6608, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6609, %r6585, %r6608;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6612, %r6604, %r6609;
	// end inline asm
	// begin inline asm
	mov.b32 %r6620, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6631, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6617, %r672, %r2515, %r6620, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6621, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6622, %r6620, %r6621;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6625, %r6617, %r6622;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6628, %r683, %r2515, %r6631, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6632, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6633, %r6631, %r6632;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6636, %r6628, %r6633;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6639, %r672, %r2537, %r6620, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6643, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6644, %r6620, %r6643;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6647, %r6639, %r6644;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6650, %r683, %r2537, %r6631, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6654, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6655, %r6631, %r6654;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6658, %r6650, %r6655;
	// end inline asm
	// begin inline asm
	mov.b32 %r6666, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6677, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6663, %r672, %r2561, %r6666, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6667, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6668, %r6666, %r6667;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6671, %r6663, %r6668;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6674, %r683, %r2561, %r6677, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6678, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6679, %r6677, %r6678;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6682, %r6674, %r6679;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6685, %r672, %r2583, %r6666, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6689, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6690, %r6666, %r6689;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6693, %r6685, %r6690;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6696, %r683, %r2583, %r6677, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6700, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6701, %r6677, %r6700;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6704, %r6696, %r6701;
	// end inline asm
	// begin inline asm
	mov.b32 %r6712, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6723, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6709, %r672, %r2607, %r6712, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6713, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6714, %r6712, %r6713;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6717, %r6709, %r6714;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6720, %r683, %r2607, %r6723, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6724, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6725, %r6723, %r6724;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6728, %r6720, %r6725;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6731, %r672, %r2629, %r6712, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6735, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6736, %r6712, %r6735;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6739, %r6731, %r6736;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6742, %r683, %r2629, %r6723, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6746, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6747, %r6723, %r6746;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6750, %r6742, %r6747;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6753, %r237;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6755, %r6753, %r6579, %r6505;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6759, %r237;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6761, %r6759, %r6590, %r6509;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6765, %r237;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6767, %r6765, %r6601, %r6513;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6771, %r237;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6773, %r6771, %r6612, %r6517;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6777, %r237;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6779, %r6777, %r6625, %r6521;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6783, %r237;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6785, %r6783, %r6636, %r6525;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6789, %r237;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6791, %r6789, %r6647, %r6529;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6795, %r237;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6797, %r6795, %r6658, %r6533;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6801, %r237;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6803, %r6801, %r6671, %r6537;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6807, %r237;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6809, %r6807, %r6682, %r6541;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6813, %r237;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6815, %r6813, %r6693, %r6545;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6819, %r237;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6821, %r6819, %r6704, %r6549;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6825, %r237;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6827, %r6825, %r6717, %r6553;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6831, %r237;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6833, %r6831, %r6728, %r6557;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6837, %r237;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6839, %r6837, %r6739, %r6561;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6843, %r237;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6845, %r6843, %r6750, %r6565;
	// end inline asm
	// begin inline asm
	mov.b32 %r6854, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6865, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6851, %r672, %r4265, %r6854, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6855, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6856, %r6854, %r6855;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6859, %r6851, %r6856;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6862, %r683, %r4265, %r6865, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6866, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6867, %r6865, %r6866;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6870, %r6862, %r6867;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6873, %r672, %r4287, %r6854, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6877, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6878, %r6854, %r6877;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6881, %r6873, %r6878;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6884, %r683, %r4287, %r6865, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6888, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6889, %r6865, %r6888;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6892, %r6884, %r6889;
	// end inline asm
	// begin inline asm
	mov.b32 %r6900, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6911, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6897, %r672, %r4311, %r6900, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6901, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6902, %r6900, %r6901;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6905, %r6897, %r6902;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6908, %r683, %r4311, %r6911, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6912, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6913, %r6911, %r6912;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6916, %r6908, %r6913;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6919, %r672, %r4333, %r6900, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6923, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6924, %r6900, %r6923;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6927, %r6919, %r6924;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6930, %r683, %r4333, %r6911, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6934, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6935, %r6911, %r6934;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6938, %r6930, %r6935;
	// end inline asm
	// begin inline asm
	mov.b32 %r6946, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6957, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6943, %r672, %r4357, %r6946, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6947, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6948, %r6946, %r6947;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6951, %r6943, %r6948;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6954, %r683, %r4357, %r6957, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6958, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6959, %r6957, %r6958;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6962, %r6954, %r6959;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6965, %r672, %r4379, %r6946, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6969, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6970, %r6946, %r6969;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6973, %r6965, %r6970;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6976, %r683, %r4379, %r6957, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6980, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6981, %r6957, %r6980;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6984, %r6976, %r6981;
	// end inline asm
	// begin inline asm
	mov.b32 %r6992, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r7003, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6989, %r672, %r4403, %r6992, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6993, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6994, %r6992, %r6993;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6997, %r6989, %r6994;
	// end inline asm
	// begin inline asm
	lop3.b32 %r7000, %r683, %r4403, %r7003, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r7004, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7005, %r7003, %r7004;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7008, %r7000, %r7005;
	// end inline asm
	// begin inline asm
	lop3.b32 %r7011, %r672, %r4425, %r6992, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r7015, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7016, %r6992, %r7015;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7019, %r7011, %r7016;
	// end inline asm
	// begin inline asm
	lop3.b32 %r7022, %r683, %r4425, %r7003, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r7026, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7027, %r7003, %r7026;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7030, %r7022, %r7027;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7104, %r255, %r6859, %r6755;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7101, %r255, %r6870, %r6761;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7113, %r255, %r6881, %r6767;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7110, %r255, %r6892, %r6773;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7122, %r255, %r6905, %r6779;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7119, %r255, %r6916, %r6785;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7131, %r255, %r6927, %r6791;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7128, %r255, %r6938, %r6797;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7140, %r255, %r6951, %r6803;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7137, %r255, %r6962, %r6809;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7149, %r255, %r6973, %r6815;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7146, %r255, %r6984, %r6821;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7158, %r255, %r6997, %r6827;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7155, %r255, %r7008, %r6833;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7167, %r255, %r7019, %r6839;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7164, %r255, %r7030, %r6845;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7097, %r304;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7099, %r7097, %r7101;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7102, %r301, %r7104, %r7099;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7106, %r304;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7108, %r7106, %r7110;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7111, %r301, %r7113, %r7108;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7115, %r304;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7117, %r7115, %r7119;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7120, %r301, %r7122, %r7117;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7124, %r304;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7126, %r7124, %r7128;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7129, %r301, %r7131, %r7126;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7133, %r304;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7135, %r7133, %r7137;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7138, %r301, %r7140, %r7135;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7142, %r304;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7144, %r7142, %r7146;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7147, %r301, %r7149, %r7144;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7151, %r304;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7153, %r7151, %r7155;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7156, %r301, %r7158, %r7153;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7160, %r304;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7162, %r7160, %r7164;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7165, %r301, %r7167, %r7162;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7169, %r304, %r7104;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7172, %r301, %r7101, %r7169;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7176, %r304, %r7113;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7179, %r301, %r7110, %r7176;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7183, %r304, %r7122;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7186, %r301, %r7119, %r7183;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7190, %r304, %r7131;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7193, %r301, %r7128, %r7190;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7197, %r304, %r7140;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7200, %r301, %r7137, %r7197;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7204, %r304, %r7149;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7207, %r301, %r7146, %r7204;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7211, %r304, %r7158;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7214, %r301, %r7155, %r7211;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7218, %r304, %r7167;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7221, %r301, %r7164, %r7218;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7312, %r7309}, {%r348, %r354, %r351, %r357}, {%r7102, %r7172}, {%r1845, %r1845};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7321, %r7318}, {%r348, %r354, %r351, %r357}, {%r7111, %r7179}, {%r1845, %r1845};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7330, %r7327}, {%r348, %r354, %r351, %r357}, {%r7120, %r7186}, {%r1845, %r1845};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7339, %r7336}, {%r348, %r354, %r351, %r357}, {%r7129, %r7193}, {%r1845, %r1845};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7348, %r7345}, {%r348, %r354, %r351, %r357}, {%r7138, %r7200}, {%r1845, %r1845};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7357, %r7354}, {%r348, %r354, %r351, %r357}, {%r7147, %r7207}, {%r1845, %r1845};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7366, %r7363}, {%r348, %r354, %r351, %r357}, {%r7156, %r7214}, {%r1845, %r1845};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7375, %r7372}, {%r348, %r354, %r351, %r357}, {%r7165, %r7221}, {%r1845, %r1845};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7305, %r395;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7307, %r7305, %r7309;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7310, %r392, %r7312, %r7307;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7314, %r395;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7316, %r7314, %r7318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7319, %r392, %r7321, %r7316;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7323, %r395;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7325, %r7323, %r7327;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7328, %r392, %r7330, %r7325;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7332, %r395;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7334, %r7332, %r7336;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7337, %r392, %r7339, %r7334;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7341, %r395;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7343, %r7341, %r7345;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7346, %r392, %r7348, %r7343;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7350, %r395;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7352, %r7350, %r7354;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7355, %r392, %r7357, %r7352;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7359, %r395;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7361, %r7359, %r7363;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7364, %r392, %r7366, %r7361;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7368, %r395;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7370, %r7368, %r7372;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7373, %r392, %r7375, %r7370;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7377, %r395, %r7312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7380, %r392, %r7309, %r7377;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7384, %r395, %r7321;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7387, %r392, %r7318, %r7384;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7391, %r395, %r7330;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7394, %r392, %r7327, %r7391;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7398, %r395, %r7339;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7401, %r392, %r7336, %r7398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7405, %r395, %r7348;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7408, %r392, %r7345, %r7405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7412, %r395, %r7357;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7415, %r392, %r7354, %r7412;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7419, %r395, %r7366;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7422, %r392, %r7363, %r7419;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7426, %r395, %r7375;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7429, %r392, %r7372, %r7426;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7433, %r7434}, {%r426, %r432, %r429, %r435}, {%r7310, %r7380}, {%r1845, %r1845};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7443, %r7444}, {%r426, %r432, %r429, %r435}, {%r7319, %r7387}, {%r1845, %r1845};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7453, %r7454}, {%r426, %r432, %r429, %r435}, {%r7328, %r7394}, {%r1845, %r1845};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7463, %r7464}, {%r426, %r432, %r429, %r435}, {%r7337, %r7401}, {%r1845, %r1845};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7473, %r7474}, {%r426, %r432, %r429, %r435}, {%r7346, %r7408}, {%r1845, %r1845};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7483, %r7484}, {%r426, %r432, %r429, %r435}, {%r7355, %r7415}, {%r1845, %r1845};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7493, %r7494}, {%r426, %r432, %r429, %r435}, {%r7364, %r7422}, {%r1845, %r1845};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7503, %r7504}, {%r426, %r432, %r429, %r435}, {%r7373, %r7429}, {%r1845, %r1845};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7513, %r131, %r7433;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7516, %r131, %r7434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7519, %r131, %r7443;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7522, %r131, %r7444;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7525, %r131, %r7453;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7528, %r131, %r7454;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7531, %r131, %r7463;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7534, %r131, %r7464;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7537, %r131, %r7473;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7540, %r131, %r7474;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7543, %r131, %r7483;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7546, %r131, %r7484;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7549, %r131, %r7493;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7552, %r131, %r7494;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7555, %r131, %r7503;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7558, %r131, %r7504;
	// end inline asm
	// begin inline asm
	mov.b32 %r7561, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7562, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7563, %r7513, %r7561;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7566, %r7563, %r7562;
	// end inline asm
	// begin inline asm
	mov.b32 %r7569, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7570, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7571, %r7516, %r7569;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7574, %r7571, %r7570;
	// end inline asm
	// begin inline asm
	mov.b32 %r7577, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7578, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7579, %r7519, %r7577;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7582, %r7579, %r7578;
	// end inline asm
	// begin inline asm
	mov.b32 %r7585, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7586, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7587, %r7522, %r7585;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7590, %r7587, %r7586;
	// end inline asm
	// begin inline asm
	mov.b32 %r7593, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7594, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7595, %r7525, %r7593;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7598, %r7595, %r7594;
	// end inline asm
	// begin inline asm
	mov.b32 %r7601, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7602, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7603, %r7528, %r7601;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7606, %r7603, %r7602;
	// end inline asm
	// begin inline asm
	mov.b32 %r7609, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7610, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7611, %r7531, %r7609;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7614, %r7611, %r7610;
	// end inline asm
	// begin inline asm
	mov.b32 %r7617, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7618, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7619, %r7534, %r7617;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7622, %r7619, %r7618;
	// end inline asm
	// begin inline asm
	mov.b32 %r7625, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7626, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7627, %r7537, %r7625;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7630, %r7627, %r7626;
	// end inline asm
	// begin inline asm
	mov.b32 %r7633, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7634, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7635, %r7540, %r7633;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7638, %r7635, %r7634;
	// end inline asm
	// begin inline asm
	mov.b32 %r7641, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7642, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7643, %r7543, %r7641;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7646, %r7643, %r7642;
	// end inline asm
	// begin inline asm
	mov.b32 %r7649, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7650, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7651, %r7546, %r7649;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7654, %r7651, %r7650;
	// end inline asm
	// begin inline asm
	mov.b32 %r7657, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7658, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7659, %r7549, %r7657;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7662, %r7659, %r7658;
	// end inline asm
	// begin inline asm
	mov.b32 %r7665, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7666, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7667, %r7552, %r7665;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7670, %r7667, %r7666;
	// end inline asm
	// begin inline asm
	mov.b32 %r7673, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7674, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7675, %r7555, %r7673;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7678, %r7675, %r7674;
	// end inline asm
	// begin inline asm
	mov.b32 %r7681, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7682, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7683, %r7558, %r7681;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7686, %r7683, %r7682;
	// end inline asm
	// begin inline asm
	mov.b32 %r7692, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r7690, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7691, %r7692, %r7690;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7694, %r7566, %r7691;
	// end inline asm
	// begin inline asm
	mov.b32 %r7697, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7698, %r7692, %r7697;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7701, %r7574, %r7698;
	// end inline asm
	// begin inline asm
	mov.b32 %r7704, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7705, %r7692, %r7704;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7708, %r7582, %r7705;
	// end inline asm
	// begin inline asm
	mov.b32 %r7711, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7712, %r7692, %r7711;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7715, %r7590, %r7712;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7718, %r7694, %r7708, %r2333;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7722, %r7701, %r7715, %r2333;
	// end inline asm
	shl.b32 	%r7729, %r7722, 4;
	// begin inline asm
	lop3.b32 %r7726, %r2339, %r7718, %r7729, 202;
	// end inline asm
	xor.b32  	%r7869, %r7726, -2004318072;
	// begin inline asm
	mov.b32 %r7733, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r7731, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7732, %r7733, %r7731;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7735, %r7598, %r7732;
	// end inline asm
	// begin inline asm
	mov.b32 %r7738, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7739, %r7733, %r7738;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7742, %r7606, %r7739;
	// end inline asm
	// begin inline asm
	mov.b32 %r7745, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7746, %r7733, %r7745;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7749, %r7614, %r7746;
	// end inline asm
	// begin inline asm
	mov.b32 %r7752, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7753, %r7733, %r7752;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7756, %r7622, %r7753;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7759, %r7735, %r7749, %r2333;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7763, %r7742, %r7756, %r2333;
	// end inline asm
	shl.b32 	%r7770, %r7763, 4;
	// begin inline asm
	lop3.b32 %r7767, %r2339, %r7759, %r7770, 202;
	// end inline asm
	xor.b32  	%r7870, %r7767, -2004318072;
	// begin inline asm
	mov.b32 %r7774, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r7772, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7773, %r7774, %r7772;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7776, %r7630, %r7773;
	// end inline asm
	// begin inline asm
	mov.b32 %r7779, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7780, %r7774, %r7779;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7783, %r7638, %r7780;
	// end inline asm
	// begin inline asm
	mov.b32 %r7786, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7787, %r7774, %r7786;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7790, %r7646, %r7787;
	// end inline asm
	// begin inline asm
	mov.b32 %r7793, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7794, %r7774, %r7793;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7797, %r7654, %r7794;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7800, %r7776, %r7790, %r2333;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7804, %r7783, %r7797, %r2333;
	// end inline asm
	shl.b32 	%r7811, %r7804, 4;
	// begin inline asm
	lop3.b32 %r7808, %r2339, %r7800, %r7811, 202;
	// end inline asm
	xor.b32  	%r7871, %r7808, -2004318072;
	// begin inline asm
	mov.b32 %r7815, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r7813, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7814, %r7815, %r7813;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7817, %r7662, %r7814;
	// end inline asm
	// begin inline asm
	mov.b32 %r7820, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7821, %r7815, %r7820;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7824, %r7670, %r7821;
	// end inline asm
	// begin inline asm
	mov.b32 %r7827, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7828, %r7815, %r7827;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7831, %r7678, %r7828;
	// end inline asm
	// begin inline asm
	mov.b32 %r7834, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7835, %r7815, %r7834;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7838, %r7686, %r7835;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7841, %r7817, %r7831, %r2333;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7845, %r7824, %r7838, %r2333;
	// end inline asm
	shl.b32 	%r7852, %r7845, 4;
	// begin inline asm
	lop3.b32 %r7849, %r2339, %r7841, %r7852, 202;
	// end inline asm
	xor.b32  	%r7872, %r7849, -2004318072;
	st.shared.u32 	[%rd134], %r7869;
	st.shared.u32 	[%rd135], %r7870;
	st.shared.u32 	[%rd136], %r7871;
	st.shared.u32 	[%rd137], %r7872;
	add.s32 	%r8009, %r8009, -64;
	add.s64 	%rd188, %rd188, 8324;
	setp.eq.s32 	%p238, %r8009, 0;
	@%p238 bra 	LBB0_119;
	bra.uni 	LBB0_118;
LBB0_119:                               // %guard_pass14812
                                        //   in Loop: Header=BB0_117 Depth=1
	bar.sync 	0;
	ld.shared.u32 	%r7878, [%rd21];
	ld.shared.u32 	%r7879, [%rd22+128];
	ld.shared.u32 	%r7886, [%rd22+4];
	ld.shared.u32 	%r7887, [%rd22+132];
	ld.shared.u32 	%r7894, [%rd22+8324];
	ld.shared.u32 	%r7895, [%rd22+8452];
	ld.shared.u32 	%r7902, [%rd22+8328];
	ld.shared.u32 	%r7903, [%rd22+8456];
	ld.shared.u32 	%r7910, [%rd22+16648];
	ld.shared.u32 	%r7911, [%rd22+16776];
	ld.shared.u32 	%r7918, [%rd22+16652];
	ld.shared.u32 	%r7919, [%rd22+16780];
	ld.shared.u32 	%r7926, [%rd22+24972];
	ld.shared.u32 	%r7927, [%rd22+25100];
	ld.shared.u32 	%r7934, [%rd22+24976];
	ld.shared.u32 	%r7935, [%rd22+25104];
	// begin inline asm
	prmt.b32 %r7873, %r7878, %r7879, %r583;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7877, %r7878, %r7879, %r587;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7881, %r7886, %r7887, %r583;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7885, %r7886, %r7887, %r587;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7889, %r7894, %r7895, %r583;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7893, %r7894, %r7895, %r587;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7897, %r7902, %r7903, %r583;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7901, %r7902, %r7903, %r587;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7905, %r7910, %r7911, %r583;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7909, %r7910, %r7911, %r587;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7913, %r7918, %r7919, %r583;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7917, %r7918, %r7919, %r587;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7921, %r7926, %r7927, %r583;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7925, %r7926, %r7927, %r587;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7929, %r7934, %r7935, %r583;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7933, %r7934, %r7935, %r587;
	// end inline asm
	selp.b32 	%r7937, %r7877, %r7873, %p225;
	shfl.sync.bfly.b32	%r165, %r7937, 8, 31, -1;
	selp.b32 	%r7938, %r7885, %r7881, %p225;
	shfl.sync.bfly.b32	%r166, %r7938, 8, 31, -1;
	selp.b32 	%r7939, %r7893, %r7889, %p225;
	shfl.sync.bfly.b32	%r7940, %r7939, 8, 31, -1;
	selp.b32 	%r7941, %r7901, %r7897, %p225;
	shfl.sync.bfly.b32	%r7942, %r7941, 8, 31, -1;
	selp.b32 	%r7943, %r7909, %r7905, %p225;
	shfl.sync.bfly.b32	%r7944, %r7943, 8, 31, -1;
	selp.b32 	%r7945, %r7917, %r7913, %p225;
	shfl.sync.bfly.b32	%r7946, %r7945, 8, 31, -1;
	selp.b32 	%r7947, %r7925, %r7921, %p225;
	shfl.sync.bfly.b32	%r7948, %r7947, 8, 31, -1;
	selp.b32 	%r7949, %r7933, %r7929, %p225;
	shfl.sync.bfly.b32	%r7950, %r7949, 8, 31, -1;
	and.b32  	%r179, %r86, 256;
	setp.eq.s32 	%p240, %r179, 0;
	shl.b32 	%r7982, %r86, 12;
	@%p240 bra 	LBB0_121;
// %bb.120:                             // %L43003
                                        //   in Loop: Header=BB0_117 Depth=1
	selp.b32 	%r7951, %r166, %r7885, %p225;
	selp.b32 	%r7952, %r7881, %r166, %p225;
	selp.b32 	%r7953, %r165, %r7877, %p225;
	selp.b32 	%r7954, %r7873, %r165, %p225;
	or.b32  	%r7956, %r79, %r7982;
	or.b32  	%r7957, %r7956, %r80;
	or.b32  	%r7958, %r7957, %r85;
	or.b32  	%r7959, %r7958, %r84;
	cvt.u64.u32 	%rd138, %r7959;
	add.s64 	%rd139, %rd138, %rd23;
	shr.u64 	%rd140, %rd139, 39;
	add.s64 	%rd141, %rd139, %rd140;
	shr.s64 	%rd142, %rd141, 25;
	and.b64  	%rd143, %rd141, -33554432;
	setp.ne.s64 	%p242, %rd143, %rd139;
	setp.lt.s64 	%p243, %rd139, 0;
	and.pred  	%p244, %p243, %p242;
	selp.u64 	%rd144, 1, 0, %p244;
	sub.s64 	%rd145, %rd144, %rd142;
	shl.b64 	%rd146, %rd145, 25;
	add.s64 	%rd147, %rd146, %rd139;
	shl.b64 	%rd148, %rd147, 2;
	add.s64 	%rd149, %rd3, %rd148;
	st.global.v4.u32 	[%rd149], {%r7954, %r7952, %r7953, %r7951};
LBB0_121:                               // %pass14343
                                        //   in Loop: Header=BB0_117 Depth=1
	or.b32  	%r7960, %r179, 64;
	setp.gt.u32 	%p245, %r7960, 191;
	@%p245 bra 	LBB0_122;
	bra.uni 	LBB0_123;
LBB0_122:                               // %L43199
                                        //   in Loop: Header=BB0_117 Depth=1
	selp.b32 	%r167, %r7889, %r7940, %p225;
	selp.b32 	%r168, %r7940, %r7893, %p225;
	selp.b32 	%r169, %r7897, %r7942, %p225;
	selp.b32 	%r170, %r7942, %r7901, %p225;
	or.b32  	%r7962, %r7982, %r79;
	or.b32  	%r7963, %r7962, %r80;
	or.b32  	%r7964, %r7963, %r85;
	or.b32  	%r7965, %r7964, %r84;
	or.b32  	%r7966, %r7965, 262144;
	cvt.u64.u32 	%rd150, %r7966;
	add.s64 	%rd151, %rd150, %rd23;
	shr.u64 	%rd152, %rd151, 39;
	add.s64 	%rd153, %rd151, %rd152;
	shr.s64 	%rd154, %rd153, 25;
	and.b64  	%rd155, %rd153, -33554432;
	setp.ne.s64 	%p246, %rd155, %rd151;
	setp.lt.s64 	%p247, %rd151, 0;
	and.pred  	%p248, %p247, %p246;
	selp.u64 	%rd156, 1, 0, %p248;
	sub.s64 	%rd157, %rd156, %rd154;
	shl.b64 	%rd158, %rd157, 25;
	add.s64 	%rd159, %rd158, %rd151;
	shl.b64 	%rd160, %rd159, 2;
	add.s64 	%rd161, %rd3, %rd160;
	st.global.v4.u32 	[%rd161], {%r167, %r169, %r168, %r170};
LBB0_123:                               // %pass14424
                                        //   in Loop: Header=BB0_117 Depth=1
	selp.b32 	%r175, %r7921, %r7948, %p225;
	selp.b32 	%r176, %r7948, %r7925, %p225;
	selp.b32 	%r177, %r7929, %r7950, %p225;
	selp.b32 	%r178, %r7950, %r7933, %p225;
	or.b32  	%r7967, %r179, 128;
	setp.gt.u32 	%p249, %r7967, 191;
	or.b32  	%r7983, %r7982, %r79;
	@%p249 bra 	LBB0_124;
	bra.uni 	LBB0_125;
LBB0_124:                               // %L43396
                                        //   in Loop: Header=BB0_117 Depth=1
	selp.b32 	%r171, %r7905, %r7944, %p225;
	selp.b32 	%r172, %r7944, %r7909, %p225;
	selp.b32 	%r173, %r7913, %r7946, %p225;
	selp.b32 	%r174, %r7946, %r7917, %p225;
	or.b32  	%r7969, %r7983, %r80;
	or.b32  	%r7970, %r7969, %r85;
	or.b32  	%r7971, %r7970, %r84;
	or.b32  	%r7972, %r7971, 524288;
	cvt.u64.u32 	%rd162, %r7972;
	add.s64 	%rd163, %rd162, %rd23;
	shr.u64 	%rd164, %rd163, 39;
	add.s64 	%rd165, %rd163, %rd164;
	shr.s64 	%rd166, %rd165, 25;
	and.b64  	%rd167, %rd165, -33554432;
	setp.ne.s64 	%p250, %rd167, %rd163;
	setp.lt.s64 	%p251, %rd163, 0;
	and.pred  	%p252, %p251, %p250;
	selp.u64 	%rd168, 1, 0, %p252;
	sub.s64 	%rd169, %rd168, %rd166;
	shl.b64 	%rd170, %rd169, 25;
	add.s64 	%rd171, %rd170, %rd163;
	shl.b64 	%rd172, %rd171, 2;
	add.s64 	%rd173, %rd3, %rd172;
	st.global.v4.u32 	[%rd173], {%r171, %r173, %r172, %r174};
	bra.uni 	LBB0_125;
LBB0_126:                               // %L43797
	st.global.u32 	[%rd4], %r7981;
	ret;
LBB0_7:                                 // %L291
	mov.u32 	%r7980, 2;
	st.global.u32 	[%rd4], %r7980;
	mov.u64 	%rd186, exception3309;
	cvta.global.u64 	%rd187, %rd186;
	{ // callseq 13, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd187;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 13
	{ // callseq 14, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd34;
	st.param.b32 	[param0+8], %r180;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 14
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
LBB0_1:                                 // %L9
	mov.u64 	%rd55, exception1;
	cvta.global.u64 	%rd56, %rd55;
	{ // callseq 0, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd56;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 0
	{ // callseq 1, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd34;
	st.param.b32 	[param0+8], %r180;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 1
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
LBB0_128:                               // %L43908
	mov.u64 	%rd64, exception1;
	cvta.global.u64 	%rd65, %rd64;
	{ // callseq 3, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd65;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 3
	{ // callseq 4, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd34;
	st.param.b32 	[param0+8], %r180;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 4
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
LBB0_127:                               // %L43905
	mov.u64 	%rd70, exception1;
	cvta.global.u64 	%rd71, %rd70;
	{ // callseq 6, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd71;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 6
	{ // callseq 7, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd34;
	st.param.b32 	[param0+8], %r180;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 7
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
LBB0_153:                               // %L43902
	mov.u64 	%rd84, exception1;
	cvta.global.u64 	%rd85, %rd84;
	{ // callseq 11, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd85;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 11
	{ // callseq 12, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd34;
	st.param.b32 	[param0+8], %r180;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 12
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
                                        // -- End function
}
