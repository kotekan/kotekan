// PTX kernel code for the CUDA upchannelizer
// This file has been generated automatically by `upchan.jl`.
// Do not modify this file, your changes will be lost.

// PTX CompilerJob of MethodInstance for upchan(::Int32, ::Int32, ::Int32, ::Int32, ::Int32, ::Int32, ::CuDeviceVector{Float16x2, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int32, 1}) for sm_86, minthreads=512, blocks_per_sm=2

//
// Generated by LLVM NVPTX Back-End
//

.version 8.2
.target sm_86
.address_size 64

	// .globl	_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE // -- Begin function _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE
.func gpu_report_exception
(
	.param .b64 gpu_report_exception_param_0
)
.noreturn
{
	trap;
}
.func gpu_signal_exception
(
	.param .align 8 .b8 gpu_signal_exception_param_0[16]
)
.noreturn
{
	trap;
}
.extern .shared .align 32 .b8 shmem[];
.global .align 1 .b8 exception3329[6] = {101, 114, 114, 111, 114, 0};
.global .align 1 .b8 exception13349[10] = {101, 120, 99, 101, 112, 116, 105, 111, 110, 0};
                                        // @_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE
.visible .entry _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE(
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_0[16],
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_1,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_2,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_3,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_4,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_5,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_6,
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_7[32],
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_8[32],
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_9[32],
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_10[32]
)
.reqntid 512, 1, 1
.minnctapersm 2
{
	.reg .pred 	%p<235>;
	.reg .b16 	%rs<1191>;
	.reg .b32 	%r<7993>;
	.reg .f32 	%f<832>;
	.reg .b64 	%rd<146>;

// %bb.0:                               // %conversion
	ld.param.u32 	%r155, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_0+8];
	ld.param.u64 	%rd36, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_0];
	// begin inline asm
	mov.u32 %r162, %dynamic_smem_size;
	// end inline asm
	setp.gt.u32 	%p1, %r162, 66815;
	@%p1 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:                              // %L19
	ld.param.u64 	%rd37, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_10];
	ld.param.u32 	%r156, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_1];
	mov.u32 	%r1, %ctaid.x;
	shl.b32 	%r163, %r1, 9;
	mov.u32 	%r2, %tid.y;
	shl.b32 	%r3, %r2, 5;
	mov.u32 	%r4, %tid.x;
	or.b32  	%r164, %r3, %r4;
	or.b32  	%r165, %r164, %r163;
	mul.wide.u32 	%rd43, %r165, 4;
	add.s64 	%rd4, %rd37, %rd43;
	mov.u32 	%r166, 1;
	st.global.u32 	[%rd4], %r166;
	setp.gt.u32 	%p2, %r156, 32767;
	@%p2 bra 	$L__BB0_7;
// %bb.3:                               // %L119
	ld.param.u32 	%r157, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_2];
	setp.lt.s32 	%p3, %r157, %r156;
	setp.gt.s32 	%p4, %r157, 65535;
	or.pred  	%p5, %p3, %p4;
	@%p5 bra 	$L__BB0_7;
// %bb.4:                               // %L126
	ld.param.u32 	%r158, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_3];
	sub.s32 	%r167, %r157, %r156;
	and.b32  	%r168, %r167, 255;
	setp.ne.s32 	%p6, %r168, 0;
	setp.gt.u32 	%p7, %r158, 511;
	or.pred  	%p8, %p6, %p7;
	@%p8 bra 	$L__BB0_7;
// %bb.5:                               // %L137
	ld.param.u32 	%r159, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_4];
	setp.lt.s32 	%p9, %r159, %r158;
	setp.gt.s32 	%p10, %r159, 1023;
	or.pred  	%p11, %p9, %p10;
	@%p11 bra 	$L__BB0_7;
// %bb.6:                               // %L144
	not.b32 	%r169, %r158;
	add.s32 	%r170, %r169, %r159;
	and.b32  	%r171, %r170, 3;
	setp.eq.s32 	%p12, %r171, 0;
	@%p12 bra 	$L__BB0_8;
	bra.uni 	$L__BB0_7;
$L__BB0_8:                              // %L260
	ld.param.u32 	%r160, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_5];
	setp.lt.s32 	%p13, %r160, 0;
	@%p13 bra 	$L__BB0_10;
// %bb.9:                               // %L262
	ld.param.u32 	%r161, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_6];
	setp.le.s32 	%p14, %r160, %r161;
	setp.lt.s32 	%p15, %r161, 385;
	and.pred  	%p16, %p14, %p15;
	@%p16 bra 	$L__BB0_11;
	bra.uni 	$L__BB0_10;
$L__BB0_11:                             // %pass177
	bfe.u32 	%r106, %r4, 2, 1;
	shr.u32 	%r107, %r4, 4;
	shl.b32 	%r178, %r107, 1;
	shl.b32 	%r179, %r106, 2;
	shl.b32 	%r180, %r4, 3;
	and.b32  	%r181, %r180, 24;
	or.b32  	%r182, %r179, %r181;
	or.b32  	%r183, %r178, %r182;
	bfe.u32 	%r184, %r4, 3, 1;
	or.b32  	%r109, %r184, %r183;
	or.b32  	%r110, %r109, 32;
	mov.f32 	%f145, 0f40000000;
	mov.f32 	%f146, 0f437F0000;
	div.approx.f32 	%f85, %f146, %f145;
	cvt.rn.f32.s32 	%f147, %r109;
	sub.f32 	%f148, %f147, %f85;
	mov.f32 	%f177, 0f42800000;
	div.approx.f32 	%f87, %f148, %f177;
	setp.ne.f32 	%p22, %f87, 0f00000000;
	mov.f32 	%f807, 0f3F800000;
	mov.f32 	%f800, %f807;
	@%p22 bra 	$L__BB0_12;
	bra.uni 	$L__BB0_13;
$L__BB0_12:                             // %L603
	sin.approx.f32 	%f178, %f87;
	div.approx.f32 	%f800, %f178, %f87;
$L__BB0_13:                             // %L606
	cvt.rn.f32.s32 	%f181, %r110;
	sub.f32 	%f182, %f181, %f85;
	div.approx.f32 	%f5, %f182, %f177;
	setp.eq.f32 	%p28, %f5, 0f00000000;
	mov.f32 	%f801, %f807;
	@%p28 bra 	$L__BB0_15;
// %bb.14:                              // %L623
	sin.approx.f32 	%f212, %f5;
	div.approx.f32 	%f801, %f212, %f5;
$L__BB0_15:                             // %L626
	or.b32  	%r202, %r109, 64;
	or.b32  	%r6, %r109, 96;
	cvt.rn.f32.s32 	%f216, %r202;
	sub.f32 	%f217, %f216, %f85;
	div.approx.f32 	%f9, %f217, %f177;
	setp.eq.f32 	%p34, %f9, 0f00000000;
	mov.f32 	%f802, %f807;
	@%p34 bra 	$L__BB0_17;
// %bb.16:                              // %L705
	sin.approx.f32 	%f247, %f9;
	div.approx.f32 	%f802, %f247, %f9;
$L__BB0_17:                             // %L708
	cvt.rn.f32.s32 	%f250, %r6;
	sub.f32 	%f251, %f250, %f85;
	div.approx.f32 	%f14, %f251, %f177;
	setp.eq.f32 	%p40, %f14, 0f00000000;
	mov.f32 	%f803, %f807;
	@%p40 bra 	$L__BB0_19;
// %bb.18:                              // %L725
	sin.approx.f32 	%f281, %f14;
	div.approx.f32 	%f803, %f281, %f14;
$L__BB0_19:                             // %L728
	or.b32  	%r220, %r109, 128;
	or.b32  	%r8, %r109, 160;
	cvt.rn.f32.s32 	%f285, %r220;
	sub.f32 	%f286, %f285, %f85;
	div.approx.f32 	%f18, %f286, %f177;
	setp.eq.f32 	%p46, %f18, 0f00000000;
	mov.f32 	%f804, %f807;
	@%p46 bra 	$L__BB0_21;
// %bb.20:                              // %L807
	sin.approx.f32 	%f316, %f18;
	div.approx.f32 	%f804, %f316, %f18;
$L__BB0_21:                             // %L810
	cvt.rn.f32.s32 	%f319, %r8;
	sub.f32 	%f320, %f319, %f85;
	div.approx.f32 	%f23, %f320, %f177;
	setp.eq.f32 	%p52, %f23, 0f00000000;
	mov.f32 	%f805, %f807;
	@%p52 bra 	$L__BB0_23;
// %bb.22:                              // %L827
	sin.approx.f32 	%f350, %f23;
	div.approx.f32 	%f805, %f350, %f23;
$L__BB0_23:                             // %L830
	or.b32  	%r238, %r109, 192;
	or.b32  	%r10, %r109, 224;
	cvt.rn.f32.s32 	%f354, %r238;
	sub.f32 	%f355, %f354, %f85;
	div.approx.f32 	%f27, %f355, %f177;
	setp.eq.f32 	%p58, %f27, 0f00000000;
	mov.f32 	%f806, %f807;
	@%p58 bra 	$L__BB0_25;
// %bb.24:                              // %L909
	sin.approx.f32 	%f385, %f27;
	div.approx.f32 	%f806, %f385, %f27;
$L__BB0_25:                             // %L912
	shr.u32 	%r105, %r4, 1;
	shr.u32 	%r108, %r4, 3;
	cvt.rn.f32.s32 	%f388, %r10;
	sub.f32 	%f389, %f388, %f85;
	div.approx.f32 	%f32, %f389, %f177;
	setp.eq.f32 	%p64, %f32, 0f00000000;
	@%p64 bra 	$L__BB0_27;
// %bb.26:                              // %L929
	sin.approx.f32 	%f419, %f32;
	div.approx.f32 	%f807, %f419, %f32;
$L__BB0_27:                             // %L932
	and.b32  	%r282, %r4, 3;
	and.b32  	%r283, %r108, 2;
	and.b32  	%r284, %r105, 4;
	or.b32  	%r285, %r106, %r283;
	or.b32  	%r14, %r285, %r284;
	mul.lo.s32 	%r286, %r282, %r14;
	shl.b32 	%r287, %r286, 1;
	neg.s32 	%r288, %r287;
	cvt.rn.f32.s32 	%f35, %r288;
	mov.f32 	%f490, 0f41000000;
	div.approx.f32 	%f36, %f35, %f490;
	abs.f32 	%f830, %f36;
	setp.lt.f32 	%p79, %f830, 0f40000000;
	setp.gtu.f32 	%p233, %f830, 0f4B800000;
	mov.f32 	%f822, %f830;
	@%p79 bra 	$L__BB0_97;
// %bb.28:
	@%p233 bra 	$L__BB0_93;
	bra.uni 	$L__BB0_29;
$L__BB0_93:
	mov.b32 	%r112, %f830;
	and.b32  	%r289, %r112, 8388607;
	or.b32  	%r7987, %r289, 1065353216;
	mov.b32 	%f821, %r7987;
	add.s32 	%r290, %r112, -1073741824;
	and.b32  	%r7988, %r290, -8388608;
	setp.eq.s32 	%p86, %r7988, 0;
	@%p86 bra 	$L__BB0_96;
// %bb.94:                              // %__nv_fmaf_rn.exit4.i.i.i923.preheader
	mov.f32 	%f500, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f499,%f500;
	// end inline asm
$L__BB0_95:                             // %__nv_fmaf_rn.exit4.i.i.i923
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r291, %r7988, 192937984;
	add.s32 	%r292, %r7987, %r291;
	mov.b32 	%f501, %r292;
	mul.f32 	%f502, %f499, %f501;
	sub.f32 	%f503, %f501, %f502;
	fma.rn.f32 	%f504, %f503, %f499, %f502;
	sub.f32 	%f505, %f501, %f504;
	fma.rz.f32 	%f506, %f505, %f499, %f504;
	cvt.rzi.f32.f32 	%f507, %f506;
	sub.f32 	%f821, %f501, %f507;
	sub.s32 	%r7988, %r7988, %r291;
	mov.b32 	%r7987, %f821;
	setp.ne.s32 	%p87, %r7988, 0;
	setp.ne.s32 	%p88, %r7987, 0;
	and.pred  	%p89, %p87, %p88;
	@%p89 bra 	$L__BB0_95;
$L__BB0_96:                             // %__internal_fmodf_slowpath_mod.exit.i.i925
	setp.gt.u32 	%p90, %r112, 2139095039;
	selp.f32 	%f508, 0f7FFFFFFF, 0f4B800000, %p90;
	mul.f32 	%f509, %f821, 0f34000000;
	mul.f32 	%f822, %f508, %f509;
	bra.uni 	$L__BB0_97;
$L__BB0_29:                             // %__nv_fast_fdividef.exit.i.i.i902
	div.approx.f32 	%f492, %f830, %f145;
	cvt.rzi.f32.f32 	%f820, %f492;
	fma.rn.f32 	%f89, %f820, 0fC0000000, %f830;
	mov.b32 	%r111, %f89;
	setp.lt.u32 	%p81, %r111, 1073741824;
	@%p81 bra 	$L__BB0_92;
// %bb.30:
	setp.lt.u32 	%p82, %r111, -2147483647;
	@%p82 bra 	$L__BB0_90;
// %bb.31:
	add.f32 	%f497, %f820, 0fBF800000;
	setp.lt.f32 	%p85, %f89, 0fC0000000;
	add.f32 	%f498, %f497, 0fBF800000;
	selp.f32 	%f820, %f498, %f497, %p85;
	bra.uni 	$L__BB0_92;
$L__BB0_90:
	add.f32 	%f820, %f820, 0f3F800000;
	setp.ltu.f32 	%p83, %f89, 0f40800000;
	@%p83 bra 	$L__BB0_92;
// %bb.91:                              // %__nv_fmaf_rn.exit.i.i.i906
	add.f32 	%f493, %f820, 0f3F800000;
	fma.rn.f32 	%f495, %f145, 0fC0400000, %f89;
	setp.ge.f32 	%p84, %f495, 0f00000000;
	add.f32 	%f496, %f493, 0f3F800000;
	selp.f32 	%f820, %f496, %f493, %p84;
$L__BB0_92:                             // %__internal_fmodf_fastpath_quot.exit.i.i909
	fma.rn.f32 	%f822, %f820, 0fC0000000, %f830;
$L__BB0_97:                             // %__internal_fmodf_kernel.exit.i928
	shl.b32 	%r98, %r4, 1;
	abs.f32 	%f510, %f822;
	setp.gtu.f32 	%p91, %f510, 0f7F800000;
	mov.b32 	%r293, %f36;
	and.b32  	%r119, %r293, -2147483648;
	@%p91 bra 	$L__BB0_99;
// %bb.98:
	mov.b32 	%r294, %f822;
	or.b32  	%r295, %r119, %r294;
	mov.b32 	%f822, %r295;
$L__BB0_99:                             // %__nv_fmodf.exit929
	and.b32  	%r304, %r98, 6;
	mov.u32 	%r305, -8;
	sub.s32 	%r306, %r305, %r304;
	mul.lo.s32 	%r307, %r14, %r306;
	cvt.rn.f32.s32 	%f105, %r307;
	div.approx.f32 	%f106, %f105, %f490;
	abs.f32 	%f818, %f106;
	setp.lt.f32 	%p99, %f818, 0f40000000;
	setp.gtu.f32 	%p234, %f818, 0f4B800000;
	mov.f32 	%f810, %f818;
	@%p99 bra 	$L__BB0_43;
// %bb.32:
	@%p234 bra 	$L__BB0_39;
	bra.uni 	$L__BB0_33;
$L__BB0_39:
	mov.b32 	%r16, %f818;
	and.b32  	%r308, %r16, 8388607;
	or.b32  	%r7954, %r308, 1065353216;
	mov.b32 	%f809, %r7954;
	add.s32 	%r309, %r16, -1073741824;
	and.b32  	%r7955, %r309, -8388608;
	setp.eq.s32 	%p106, %r7955, 0;
	@%p106 bra 	$L__BB0_42;
// %bb.40:                              // %__nv_fmaf_rn.exit4.i.i.i.preheader
	mov.f32 	%f551, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f550,%f551;
	// end inline asm
$L__BB0_41:                             // %__nv_fmaf_rn.exit4.i.i.i
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r310, %r7955, 192937984;
	add.s32 	%r311, %r7954, %r310;
	mov.b32 	%f552, %r311;
	mul.f32 	%f553, %f550, %f552;
	sub.f32 	%f554, %f552, %f553;
	fma.rn.f32 	%f555, %f554, %f550, %f553;
	sub.f32 	%f556, %f552, %f555;
	fma.rz.f32 	%f557, %f556, %f550, %f555;
	cvt.rzi.f32.f32 	%f558, %f557;
	sub.f32 	%f809, %f552, %f558;
	sub.s32 	%r7955, %r7955, %r310;
	mov.b32 	%r7954, %f809;
	setp.ne.s32 	%p107, %r7955, 0;
	setp.ne.s32 	%p108, %r7954, 0;
	and.pred  	%p109, %p107, %p108;
	@%p109 bra 	$L__BB0_41;
$L__BB0_42:                             // %__internal_fmodf_slowpath_mod.exit.i.i
	setp.gt.u32 	%p110, %r16, 2139095039;
	selp.f32 	%f559, 0f7FFFFFFF, 0f4B800000, %p110;
	mul.f32 	%f560, %f809, 0f34000000;
	mul.f32 	%f810, %f559, %f560;
	bra.uni 	$L__BB0_43;
$L__BB0_33:                             // %__nv_fast_fdividef.exit.i.i.i
	div.approx.f32 	%f543, %f818, %f145;
	cvt.rzi.f32.f32 	%f808, %f543;
	fma.rn.f32 	%f39, %f808, 0fC0000000, %f818;
	mov.b32 	%r15, %f39;
	setp.lt.u32 	%p101, %r15, 1073741824;
	@%p101 bra 	$L__BB0_38;
// %bb.34:
	setp.lt.u32 	%p102, %r15, -2147483647;
	@%p102 bra 	$L__BB0_36;
// %bb.35:
	add.f32 	%f548, %f808, 0fBF800000;
	setp.lt.f32 	%p105, %f39, 0fC0000000;
	add.f32 	%f549, %f548, 0fBF800000;
	selp.f32 	%f808, %f549, %f548, %p105;
	bra.uni 	$L__BB0_38;
$L__BB0_36:
	add.f32 	%f808, %f808, 0f3F800000;
	setp.ltu.f32 	%p103, %f39, 0f40800000;
	@%p103 bra 	$L__BB0_38;
// %bb.37:                              // %__nv_fmaf_rn.exit.i.i.i
	add.f32 	%f544, %f808, 0f3F800000;
	fma.rn.f32 	%f546, %f145, 0fC0400000, %f39;
	setp.ge.f32 	%p104, %f546, 0f00000000;
	add.f32 	%f547, %f544, 0f3F800000;
	selp.f32 	%f808, %f547, %f544, %p104;
$L__BB0_38:                             // %__internal_fmodf_fastpath_quot.exit.i.i
	fma.rn.f32 	%f810, %f808, 0fC0000000, %f818;
$L__BB0_43:                             // %__internal_fmodf_kernel.exit.i
	abs.f32 	%f561, %f810;
	setp.gtu.f32 	%p111, %f561, 0f7F800000;
	mov.b32 	%r312, %f106;
	and.b32  	%r23, %r312, -2147483648;
	@%p111 bra 	$L__BB0_45;
// %bb.44:
	mov.b32 	%r313, %f810;
	or.b32  	%r314, %r23, %r313;
	mov.b32 	%f810, %r314;
$L__BB0_45:                             // %__nv_fmodf.exit
	div.approx.f32 	%f53, %f35, %f177;
	abs.f32 	%f826, %f53;
	setp.lt.f32 	%p119, %f826, 0f40000000;
	@%p119 bra 	$L__BB0_107;
// %bb.46:
	setp.gtu.f32 	%p120, %f826, 0f4B800000;
	@%p120 bra 	$L__BB0_103;
	bra.uni 	$L__BB0_47;
$L__BB0_103:
	mov.b32 	%r121, %f826;
	and.b32  	%r335, %r121, 8388607;
	or.b32  	%r7989, %r335, 1065353216;
	mov.b32 	%f825, %r7989;
	add.s32 	%r336, %r121, -1073741824;
	and.b32  	%r7990, %r336, -8388608;
	setp.eq.s32 	%p126, %r7990, 0;
	@%p126 bra 	$L__BB0_106;
// %bb.104:                             // %__nv_fmaf_rn.exit4.i.i.i954.preheader
	mov.f32 	%f604, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f603,%f604;
	// end inline asm
$L__BB0_105:                            // %__nv_fmaf_rn.exit4.i.i.i954
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r337, %r7990, 192937984;
	add.s32 	%r338, %r7989, %r337;
	mov.b32 	%f605, %r338;
	mul.f32 	%f606, %f603, %f605;
	sub.f32 	%f607, %f605, %f606;
	fma.rn.f32 	%f608, %f607, %f603, %f606;
	sub.f32 	%f609, %f605, %f608;
	fma.rz.f32 	%f610, %f609, %f603, %f608;
	cvt.rzi.f32.f32 	%f611, %f610;
	sub.f32 	%f825, %f605, %f611;
	sub.s32 	%r7990, %r7990, %r337;
	mov.b32 	%r7989, %f825;
	setp.ne.s32 	%p127, %r7990, 0;
	setp.ne.s32 	%p128, %r7989, 0;
	and.pred  	%p129, %p127, %p128;
	@%p129 bra 	$L__BB0_105;
$L__BB0_106:                            // %__internal_fmodf_slowpath_mod.exit.i.i956
	setp.gt.u32 	%p130, %r121, 2139095039;
	selp.f32 	%f612, 0f7FFFFFFF, 0f4B800000, %p130;
	mul.f32 	%f613, %f825, 0f34000000;
	mul.f32 	%f826, %f612, %f613;
	bra.uni 	$L__BB0_107;
$L__BB0_47:                             // %__nv_fast_fdividef.exit.i.i.i933
	div.approx.f32 	%f596, %f826, %f145;
	cvt.rzi.f32.f32 	%f824, %f596;
	fma.rn.f32 	%f109, %f824, 0fC0000000, %f826;
	mov.b32 	%r120, %f109;
	setp.lt.u32 	%p121, %r120, 1073741824;
	@%p121 bra 	$L__BB0_102;
// %bb.48:
	setp.lt.u32 	%p122, %r120, -2147483647;
	@%p122 bra 	$L__BB0_100;
// %bb.49:
	add.f32 	%f601, %f824, 0fBF800000;
	setp.lt.f32 	%p125, %f109, 0fC0000000;
	add.f32 	%f602, %f601, 0fBF800000;
	selp.f32 	%f824, %f602, %f601, %p125;
	bra.uni 	$L__BB0_102;
$L__BB0_100:
	add.f32 	%f824, %f824, 0f3F800000;
	setp.ltu.f32 	%p123, %f109, 0f40800000;
	@%p123 bra 	$L__BB0_102;
// %bb.101:                             // %__nv_fmaf_rn.exit.i.i.i937
	add.f32 	%f597, %f824, 0f3F800000;
	fma.rn.f32 	%f599, %f145, 0fC0400000, %f109;
	setp.ge.f32 	%p124, %f599, 0f00000000;
	add.f32 	%f600, %f597, 0f3F800000;
	selp.f32 	%f824, %f600, %f597, %p124;
$L__BB0_102:                            // %__internal_fmodf_fastpath_quot.exit.i.i940
	fma.rn.f32 	%f826, %f824, 0fC0000000, %f826;
$L__BB0_107:                            // %__internal_fmodf_kernel.exit.i959
	abs.f32 	%f614, %f826;
	setp.gtu.f32 	%p131, %f614, 0f7F800000;
	@%p131 bra 	$L__BB0_109;
// %bb.108:
	mov.b32 	%r339, %f53;
	and.b32  	%r340, %r339, -2147483648;
	mov.b32 	%r341, %f826;
	or.b32  	%r342, %r340, %r341;
	mov.b32 	%f826, %r342;
$L__BB0_109:                            // %__nv_fmodf.exit960
	div.approx.f32 	%f125, %f105, %f177;
	abs.f32 	%f814, %f125;
	setp.lt.f32 	%p139, %f814, 0f40000000;
	@%p139 bra 	$L__BB0_61;
// %bb.50:
	setp.gtu.f32 	%p140, %f814, 0f4B800000;
	@%p140 bra 	$L__BB0_57;
	bra.uni 	$L__BB0_51;
$L__BB0_57:
	mov.b32 	%r29, %f814;
	and.b32  	%r351, %r29, 8388607;
	or.b32  	%r7956, %r351, 1065353216;
	mov.b32 	%f813, %r7956;
	add.s32 	%r352, %r29, -1073741824;
	and.b32  	%r7957, %r352, -8388608;
	setp.eq.s32 	%p146, %r7957, 0;
	@%p146 bra 	$L__BB0_60;
// %bb.58:                              // %__nv_fmaf_rn.exit4.i.i.i861.preheader
	mov.f32 	%f655, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f654,%f655;
	// end inline asm
$L__BB0_59:                             // %__nv_fmaf_rn.exit4.i.i.i861
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r353, %r7957, 192937984;
	add.s32 	%r354, %r7956, %r353;
	mov.b32 	%f656, %r354;
	mul.f32 	%f657, %f654, %f656;
	sub.f32 	%f658, %f656, %f657;
	fma.rn.f32 	%f659, %f658, %f654, %f657;
	sub.f32 	%f660, %f656, %f659;
	fma.rz.f32 	%f661, %f660, %f654, %f659;
	cvt.rzi.f32.f32 	%f662, %f661;
	sub.f32 	%f813, %f656, %f662;
	sub.s32 	%r7957, %r7957, %r353;
	mov.b32 	%r7956, %f813;
	setp.ne.s32 	%p147, %r7957, 0;
	setp.ne.s32 	%p148, %r7956, 0;
	and.pred  	%p149, %p147, %p148;
	@%p149 bra 	$L__BB0_59;
$L__BB0_60:                             // %__internal_fmodf_slowpath_mod.exit.i.i863
	setp.gt.u32 	%p150, %r29, 2139095039;
	selp.f32 	%f663, 0f7FFFFFFF, 0f4B800000, %p150;
	mul.f32 	%f664, %f813, 0f34000000;
	mul.f32 	%f814, %f663, %f664;
	bra.uni 	$L__BB0_61;
$L__BB0_51:                             // %__nv_fast_fdividef.exit.i.i.i840
	div.approx.f32 	%f647, %f814, %f145;
	cvt.rzi.f32.f32 	%f812, %f647;
	fma.rn.f32 	%f56, %f812, 0fC0000000, %f814;
	mov.b32 	%r28, %f56;
	setp.lt.u32 	%p141, %r28, 1073741824;
	@%p141 bra 	$L__BB0_56;
// %bb.52:
	setp.lt.u32 	%p142, %r28, -2147483647;
	@%p142 bra 	$L__BB0_54;
// %bb.53:
	add.f32 	%f652, %f812, 0fBF800000;
	setp.lt.f32 	%p145, %f56, 0fC0000000;
	add.f32 	%f653, %f652, 0fBF800000;
	selp.f32 	%f812, %f653, %f652, %p145;
	bra.uni 	$L__BB0_56;
$L__BB0_54:
	add.f32 	%f812, %f812, 0f3F800000;
	setp.ltu.f32 	%p143, %f56, 0f40800000;
	@%p143 bra 	$L__BB0_56;
// %bb.55:                              // %__nv_fmaf_rn.exit.i.i.i844
	add.f32 	%f648, %f812, 0f3F800000;
	fma.rn.f32 	%f650, %f145, 0fC0400000, %f56;
	setp.ge.f32 	%p144, %f650, 0f00000000;
	add.f32 	%f651, %f648, 0f3F800000;
	selp.f32 	%f812, %f651, %f648, %p144;
$L__BB0_56:                             // %__internal_fmodf_fastpath_quot.exit.i.i847
	fma.rn.f32 	%f814, %f812, 0fC0000000, %f814;
$L__BB0_61:                             // %__internal_fmodf_kernel.exit.i866
	abs.f32 	%f665, %f814;
	setp.gtu.f32 	%p151, %f665, 0f7F800000;
	@%p151 bra 	$L__BB0_63;
// %bb.62:
	mov.b32 	%r355, %f125;
	and.b32  	%r356, %r355, -2147483648;
	mov.b32 	%r357, %f814;
	or.b32  	%r358, %r356, %r357;
	mov.b32 	%f814, %r358;
$L__BB0_63:                             // %__nv_fmodf.exit867
	@%p79 bra 	$L__BB0_117;
// %bb.64:
	@%p233 bra 	$L__BB0_113;
	bra.uni 	$L__BB0_65;
$L__BB0_113:
	mov.b32 	%r129, %f830;
	and.b32  	%r373, %r129, 8388607;
	or.b32  	%r7991, %r373, 1065353216;
	mov.b32 	%f829, %r7991;
	add.s32 	%r374, %r129, -1073741824;
	and.b32  	%r7992, %r374, -8388608;
	setp.eq.s32 	%p166, %r7992, 0;
	@%p166 bra 	$L__BB0_116;
// %bb.114:                             // %__nv_fmaf_rn.exit4.i.i.i985.preheader
	mov.f32 	%f707, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f706,%f707;
	// end inline asm
$L__BB0_115:                            // %__nv_fmaf_rn.exit4.i.i.i985
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r375, %r7992, 192937984;
	add.s32 	%r376, %r7991, %r375;
	mov.b32 	%f708, %r376;
	mul.f32 	%f709, %f706, %f708;
	sub.f32 	%f710, %f708, %f709;
	fma.rn.f32 	%f711, %f710, %f706, %f709;
	sub.f32 	%f712, %f708, %f711;
	fma.rz.f32 	%f713, %f712, %f706, %f711;
	cvt.rzi.f32.f32 	%f714, %f713;
	sub.f32 	%f829, %f708, %f714;
	sub.s32 	%r7992, %r7992, %r375;
	mov.b32 	%r7991, %f829;
	setp.ne.s32 	%p167, %r7992, 0;
	setp.ne.s32 	%p168, %r7991, 0;
	and.pred  	%p169, %p167, %p168;
	@%p169 bra 	$L__BB0_115;
$L__BB0_116:                            // %__internal_fmodf_slowpath_mod.exit.i.i987
	setp.gt.u32 	%p170, %r129, 2139095039;
	selp.f32 	%f715, 0f7FFFFFFF, 0f4B800000, %p170;
	mul.f32 	%f716, %f829, 0f34000000;
	mul.f32 	%f830, %f715, %f716;
	bra.uni 	$L__BB0_117;
$L__BB0_65:                             // %__nv_fast_fdividef.exit.i.i.i964
	div.approx.f32 	%f699, %f830, %f145;
	cvt.rzi.f32.f32 	%f828, %f699;
	fma.rn.f32 	%f128, %f828, 0fC0000000, %f830;
	mov.b32 	%r128, %f128;
	setp.lt.u32 	%p161, %r128, 1073741824;
	@%p161 bra 	$L__BB0_112;
// %bb.66:
	setp.lt.u32 	%p162, %r128, -2147483647;
	@%p162 bra 	$L__BB0_110;
// %bb.67:
	add.f32 	%f704, %f828, 0fBF800000;
	setp.lt.f32 	%p165, %f128, 0fC0000000;
	add.f32 	%f705, %f704, 0fBF800000;
	selp.f32 	%f828, %f705, %f704, %p165;
	bra.uni 	$L__BB0_112;
$L__BB0_110:
	add.f32 	%f828, %f828, 0f3F800000;
	setp.ltu.f32 	%p163, %f128, 0f40800000;
	@%p163 bra 	$L__BB0_112;
// %bb.111:                             // %__nv_fmaf_rn.exit.i.i.i968
	add.f32 	%f700, %f828, 0f3F800000;
	fma.rn.f32 	%f702, %f145, 0fC0400000, %f128;
	setp.ge.f32 	%p164, %f702, 0f00000000;
	add.f32 	%f703, %f700, 0f3F800000;
	selp.f32 	%f828, %f703, %f700, %p164;
$L__BB0_112:                            // %__internal_fmodf_fastpath_quot.exit.i.i971
	fma.rn.f32 	%f830, %f828, 0fC0000000, %f830;
$L__BB0_117:                            // %__internal_fmodf_kernel.exit.i990
	abs.f32 	%f717, %f830;
	setp.gtu.f32 	%p171, %f717, 0f7F800000;
	@%p171 bra 	$L__BB0_119;
// %bb.118:
	mov.b32 	%r377, %f830;
	or.b32  	%r378, %r119, %r377;
	mov.b32 	%f830, %r378;
$L__BB0_119:                            // %__nv_fmodf.exit991
	@%p99 bra 	$L__BB0_79;
// %bb.68:
	@%p234 bra 	$L__BB0_75;
	bra.uni 	$L__BB0_69;
$L__BB0_75:
	mov.b32 	%r39, %f818;
	and.b32  	%r387, %r39, 8388607;
	or.b32  	%r7958, %r387, 1065353216;
	mov.b32 	%f817, %r7958;
	add.s32 	%r388, %r39, -1073741824;
	and.b32  	%r7959, %r388, -8388608;
	setp.eq.s32 	%p186, %r7959, 0;
	@%p186 bra 	$L__BB0_78;
// %bb.76:                              // %__nv_fmaf_rn.exit4.i.i.i892.preheader
	mov.f32 	%f757, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f756,%f757;
	// end inline asm
$L__BB0_77:                             // %__nv_fmaf_rn.exit4.i.i.i892
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r389, %r7959, 192937984;
	add.s32 	%r390, %r7958, %r389;
	mov.b32 	%f758, %r390;
	mul.f32 	%f759, %f756, %f758;
	sub.f32 	%f760, %f758, %f759;
	fma.rn.f32 	%f761, %f760, %f756, %f759;
	sub.f32 	%f762, %f758, %f761;
	fma.rz.f32 	%f763, %f762, %f756, %f761;
	cvt.rzi.f32.f32 	%f764, %f763;
	sub.f32 	%f817, %f758, %f764;
	sub.s32 	%r7959, %r7959, %r389;
	mov.b32 	%r7958, %f817;
	setp.ne.s32 	%p187, %r7959, 0;
	setp.ne.s32 	%p188, %r7958, 0;
	and.pred  	%p189, %p187, %p188;
	@%p189 bra 	$L__BB0_77;
$L__BB0_78:                             // %__internal_fmodf_slowpath_mod.exit.i.i894
	setp.gt.u32 	%p190, %r39, 2139095039;
	selp.f32 	%f765, 0f7FFFFFFF, 0f4B800000, %p190;
	mul.f32 	%f766, %f817, 0f34000000;
	mul.f32 	%f818, %f765, %f766;
	bra.uni 	$L__BB0_79;
$L__BB0_69:                             // %__nv_fast_fdividef.exit.i.i.i871
	div.approx.f32 	%f749, %f818, %f145;
	cvt.rzi.f32.f32 	%f816, %f749;
	fma.rn.f32 	%f71, %f816, 0fC0000000, %f818;
	mov.b32 	%r38, %f71;
	setp.lt.u32 	%p181, %r38, 1073741824;
	@%p181 bra 	$L__BB0_74;
// %bb.70:
	setp.lt.u32 	%p182, %r38, -2147483647;
	@%p182 bra 	$L__BB0_72;
// %bb.71:
	add.f32 	%f754, %f816, 0fBF800000;
	setp.lt.f32 	%p185, %f71, 0fC0000000;
	add.f32 	%f755, %f754, 0fBF800000;
	selp.f32 	%f816, %f755, %f754, %p185;
	bra.uni 	$L__BB0_74;
$L__BB0_72:
	add.f32 	%f816, %f816, 0f3F800000;
	setp.ltu.f32 	%p183, %f71, 0f40800000;
	@%p183 bra 	$L__BB0_74;
// %bb.73:                              // %__nv_fmaf_rn.exit.i.i.i875
	add.f32 	%f750, %f816, 0f3F800000;
	fma.rn.f32 	%f752, %f145, 0fC0400000, %f71;
	setp.ge.f32 	%p184, %f752, 0f00000000;
	add.f32 	%f753, %f750, 0f3F800000;
	selp.f32 	%f816, %f753, %f750, %p184;
$L__BB0_74:                             // %__internal_fmodf_fastpath_quot.exit.i.i878
	fma.rn.f32 	%f818, %f816, 0fC0000000, %f818;
$L__BB0_79:                             // %__internal_fmodf_kernel.exit.i897
	abs.f32 	%f767, %f818;
	setp.gtu.f32 	%p191, %f767, 0f7F800000;
	@%p191 bra 	$L__BB0_81;
// %bb.80:
	mov.b32 	%r391, %f818;
	or.b32  	%r392, %r23, %r391;
	mov.b32 	%f818, %r392;
$L__BB0_81:                             // %__nv_fmodf.exit898
	setp.le.s32 	%p199, %r157, %r156;
	mov.u32 	%r7951, 0;
	@%p199 bra 	$L__BB0_89;
// %bb.82:                              // %L1449.lr.ph
	mov.f32 	%f149, 0f43808000;
	mul.lo.s32 	%r262, %r109, 63;
	div.approx.f32 	%f150, %f148, %f149;
	div.approx.f32 	%f184, %f182, %f149;
	div.approx.f32 	%f219, %f217, %f149;
	div.approx.f32 	%f253, %f251, %f149;
	div.approx.f32 	%f288, %f286, %f149;
	div.approx.f32 	%f322, %f320, %f149;
	div.approx.f32 	%f357, %f355, %f149;
	div.approx.f32 	%f391, %f389, %f149;
	add.s32 	%r272, %r262, 96;
	abs.f32 	%f151, %f150;
	abs.f32 	%f185, %f184;
	abs.f32 	%f220, %f219;
	abs.f32 	%f254, %f253;
	abs.f32 	%f289, %f288;
	abs.f32 	%f323, %f322;
	abs.f32 	%f358, %f357;
	abs.f32 	%f392, %f391;
	and.b32  	%r263, %r262, 127;
	and.b32  	%r273, %r272, 127;
	setp.gt.f32 	%p17, %f151, 0f4B800000;
	mul.f32 	%f152, %f150, 0f00000000;
	setp.gt.f32 	%p23, %f185, 0f4B800000;
	mul.f32 	%f186, %f184, 0f00000000;
	setp.gt.f32 	%p29, %f220, 0f4B800000;
	mul.f32 	%f221, %f219, 0f00000000;
	setp.gt.f32 	%p35, %f254, 0f4B800000;
	mul.f32 	%f255, %f253, 0f00000000;
	setp.gt.f32 	%p41, %f289, 0f4B800000;
	mul.f32 	%f290, %f288, 0f00000000;
	setp.gt.f32 	%p47, %f323, 0f4B800000;
	mul.f32 	%f324, %f322, 0f00000000;
	setp.gt.f32 	%p53, %f358, 0f4B800000;
	mul.f32 	%f359, %f357, 0f00000000;
	setp.gt.f32 	%p59, %f392, 0f4B800000;
	mul.f32 	%f393, %f391, 0f00000000;
	cvt.rn.f32.s32 	%f422, %r263;
	cvt.rn.f32.s32 	%f457, %r273;
	selp.f32 	%f153, %f152, %f150, %p17;
	selp.f32 	%f187, %f186, %f184, %p23;
	selp.f32 	%f222, %f221, %f219, %p29;
	selp.f32 	%f256, %f255, %f253, %p35;
	selp.f32 	%f291, %f290, %f288, %p41;
	selp.f32 	%f325, %f324, %f322, %p47;
	selp.f32 	%f360, %f359, %f357, %p53;
	selp.f32 	%f394, %f393, %f391, %p59;
	div.approx.f32 	%f424, %f422, %f177;
	div.approx.f32 	%f458, %f457, %f177;
	add.f32 	%f154, %f153, %f153;
	add.f32 	%f188, %f187, %f187;
	add.f32 	%f223, %f222, %f222;
	add.f32 	%f257, %f256, %f256;
	add.f32 	%f292, %f291, %f291;
	add.f32 	%f326, %f325, %f325;
	add.f32 	%f361, %f360, %f360;
	add.f32 	%f395, %f394, %f394;
	add.f32 	%f425, %f424, %f424;
	add.f32 	%f459, %f458, %f458;
	add.f32 	%f511, %f822, %f822;
	add.f32 	%f562, %f810, %f810;
	mov.b32 	%r185, %f154;
	mov.b32 	%r192, %f188;
	mov.b32 	%r203, %f223;
	mov.b32 	%r210, %f257;
	mov.b32 	%r221, %f292;
	mov.b32 	%r228, %f326;
	mov.b32 	%r239, %f361;
	mov.b32 	%r246, %f395;
	mov.b32 	%r264, %f425;
	mov.b32 	%r274, %f459;
	mov.b32 	%r296, %f511;
	mov.b32 	%r327, %f562;
	and.b32  	%r186, %r185, -2147483648;
	and.b32  	%r193, %r192, -2147483648;
	and.b32  	%r204, %r203, -2147483648;
	and.b32  	%r211, %r210, -2147483648;
	and.b32  	%r222, %r221, -2147483648;
	and.b32  	%r229, %r228, -2147483648;
	and.b32  	%r240, %r239, -2147483648;
	and.b32  	%r247, %r246, -2147483648;
	and.b32  	%r265, %r264, -2147483648;
	and.b32  	%r275, %r274, -2147483648;
	and.b32  	%r297, %r296, -2147483648;
	and.b32  	%r328, %r327, -2147483648;
	add.f32 	%f615, %f826, %f826;
	add.f32 	%f666, %f814, %f814;
	or.b32  	%r187, %r186, 1056964608;
	or.b32  	%r194, %r193, 1056964608;
	or.b32  	%r205, %r204, 1056964608;
	or.b32  	%r212, %r211, 1056964608;
	or.b32  	%r223, %r222, 1056964608;
	or.b32  	%r230, %r229, 1056964608;
	or.b32  	%r241, %r240, 1056964608;
	or.b32  	%r248, %r247, 1056964608;
	or.b32  	%r266, %r265, 1056964608;
	or.b32  	%r276, %r275, 1056964608;
	or.b32  	%r298, %r297, 1056964608;
	or.b32  	%r329, %r328, 1056964608;
	mov.b32 	%r343, %f615;
	mov.b32 	%r365, %f666;
	mov.b32 	%f155, %r187;
	mov.b32 	%f189, %r194;
	mov.b32 	%f224, %r205;
	mov.b32 	%f258, %r212;
	mov.b32 	%f293, %r223;
	mov.b32 	%f327, %r230;
	mov.b32 	%f362, %r241;
	mov.b32 	%f396, %r248;
	mov.b32 	%f426, %r266;
	mov.b32 	%f460, %r276;
	mov.b32 	%f512, %r298;
	mov.b32 	%f563, %r329;
	and.b32  	%r344, %r343, -2147483648;
	and.b32  	%r366, %r365, -2147483648;
	add.f32 	%f718, %f830, %f830;
	add.f32 	%f156, %f154, %f155;
	abs.f32 	%f158, %f154;
	add.f32 	%f190, %f188, %f189;
	abs.f32 	%f192, %f188;
	add.f32 	%f225, %f223, %f224;
	abs.f32 	%f227, %f223;
	add.f32 	%f259, %f257, %f258;
	abs.f32 	%f261, %f257;
	add.f32 	%f294, %f292, %f293;
	abs.f32 	%f296, %f292;
	add.f32 	%f328, %f326, %f327;
	abs.f32 	%f330, %f326;
	add.f32 	%f363, %f361, %f362;
	abs.f32 	%f365, %f361;
	add.f32 	%f397, %f395, %f396;
	abs.f32 	%f399, %f395;
	add.f32 	%f427, %f425, %f426;
	abs.f32 	%f429, %f425;
	add.f32 	%f461, %f459, %f460;
	abs.f32 	%f463, %f459;
	add.f32 	%f513, %f511, %f512;
	abs.f32 	%f515, %f511;
	add.f32 	%f564, %f562, %f563;
	abs.f32 	%f566, %f562;
	or.b32  	%r345, %r344, 1056964608;
	or.b32  	%r367, %r366, 1056964608;
	mov.b32 	%r379, %f718;
	cvt.rzi.f32.f32 	%f157, %f156;
	setp.gt.f32 	%p18, %f158, 0f4B000000;
	cvt.rzi.f32.f32 	%f191, %f190;
	setp.gt.f32 	%p24, %f192, 0f4B000000;
	cvt.rzi.f32.f32 	%f226, %f225;
	setp.gt.f32 	%p30, %f227, 0f4B000000;
	cvt.rzi.f32.f32 	%f260, %f259;
	setp.gt.f32 	%p36, %f261, 0f4B000000;
	cvt.rzi.f32.f32 	%f295, %f294;
	setp.gt.f32 	%p42, %f296, 0f4B000000;
	cvt.rzi.f32.f32 	%f329, %f328;
	setp.gt.f32 	%p48, %f330, 0f4B000000;
	cvt.rzi.f32.f32 	%f364, %f363;
	setp.gt.f32 	%p54, %f365, 0f4B000000;
	cvt.rzi.f32.f32 	%f398, %f397;
	setp.gt.f32 	%p60, %f399, 0f4B000000;
	cvt.rzi.f32.f32 	%f428, %f427;
	setp.gt.f32 	%p65, %f429, 0f4B000000;
	cvt.rzi.f32.f32 	%f462, %f461;
	setp.gt.f32 	%p72, %f463, 0f4B000000;
	cvt.rzi.f32.f32 	%f514, %f513;
	setp.gt.f32 	%p92, %f515, 0f4B000000;
	cvt.rzi.f32.f32 	%f565, %f564;
	setp.gt.f32 	%p112, %f566, 0f4B000000;
	mov.b32 	%f616, %r345;
	mov.b32 	%f667, %r367;
	and.b32  	%r380, %r379, -2147483648;
	selp.f32 	%f159, %f154, %f157, %p18;
	cvt.rzi.f32.f32 	%f160, %f154;
	setp.lt.f32 	%p19, %f158, 0f3F000000;
	selp.f32 	%f193, %f188, %f191, %p24;
	cvt.rzi.f32.f32 	%f194, %f188;
	setp.lt.f32 	%p25, %f192, 0f3F000000;
	selp.f32 	%f228, %f223, %f226, %p30;
	cvt.rzi.f32.f32 	%f229, %f223;
	setp.lt.f32 	%p31, %f227, 0f3F000000;
	selp.f32 	%f262, %f257, %f260, %p36;
	cvt.rzi.f32.f32 	%f263, %f257;
	setp.lt.f32 	%p37, %f261, 0f3F000000;
	selp.f32 	%f297, %f292, %f295, %p42;
	cvt.rzi.f32.f32 	%f298, %f292;
	setp.lt.f32 	%p43, %f296, 0f3F000000;
	selp.f32 	%f331, %f326, %f329, %p48;
	cvt.rzi.f32.f32 	%f332, %f326;
	setp.lt.f32 	%p49, %f330, 0f3F000000;
	selp.f32 	%f366, %f361, %f364, %p54;
	cvt.rzi.f32.f32 	%f367, %f361;
	setp.lt.f32 	%p55, %f365, 0f3F000000;
	selp.f32 	%f400, %f395, %f398, %p60;
	cvt.rzi.f32.f32 	%f401, %f395;
	setp.lt.f32 	%p61, %f399, 0f3F000000;
	selp.f32 	%f430, %f425, %f428, %p65;
	cvt.rzi.f32.f32 	%f431, %f425;
	setp.lt.f32 	%p66, %f429, 0f3F000000;
	selp.f32 	%f464, %f459, %f462, %p72;
	cvt.rzi.f32.f32 	%f465, %f459;
	setp.lt.f32 	%p73, %f463, 0f3F000000;
	selp.f32 	%f516, %f511, %f514, %p92;
	cvt.rzi.f32.f32 	%f517, %f511;
	setp.lt.f32 	%p93, %f515, 0f3F000000;
	selp.f32 	%f567, %f562, %f565, %p112;
	cvt.rzi.f32.f32 	%f568, %f562;
	setp.lt.f32 	%p113, %f566, 0f3F000000;
	add.f32 	%f617, %f615, %f616;
	abs.f32 	%f619, %f615;
	add.f32 	%f668, %f666, %f667;
	abs.f32 	%f670, %f666;
	or.b32  	%r381, %r380, 1056964608;
	selp.f32 	%f161, %f160, %f159, %p19;
	selp.f32 	%f195, %f194, %f193, %p25;
	selp.f32 	%f230, %f229, %f228, %p31;
	selp.f32 	%f264, %f263, %f262, %p37;
	selp.f32 	%f299, %f298, %f297, %p43;
	selp.f32 	%f333, %f332, %f331, %p49;
	selp.f32 	%f368, %f367, %f366, %p55;
	selp.f32 	%f402, %f401, %f400, %p61;
	selp.f32 	%f432, %f431, %f430, %p66;
	selp.f32 	%f466, %f465, %f464, %p73;
	selp.f32 	%f518, %f517, %f516, %p93;
	selp.f32 	%f569, %f568, %f567, %p113;
	cvt.rzi.f32.f32 	%f618, %f617;
	setp.gt.f32 	%p132, %f619, 0f4B000000;
	cvt.rzi.f32.f32 	%f669, %f668;
	setp.gt.f32 	%p153, %f670, 0f4B000000;
	mov.b32 	%f719, %r381;
	fma.rn.f32 	%f162, %f161, 0fBF000000, %f153;
	fma.rn.f32 	%f196, %f195, 0fBF000000, %f187;
	fma.rn.f32 	%f231, %f230, 0fBF000000, %f222;
	fma.rn.f32 	%f265, %f264, 0fBF000000, %f256;
	fma.rn.f32 	%f300, %f299, 0fBF000000, %f291;
	fma.rn.f32 	%f334, %f333, 0fBF000000, %f325;
	fma.rn.f32 	%f369, %f368, 0fBF000000, %f360;
	fma.rn.f32 	%f403, %f402, 0fBF000000, %f394;
	fma.rn.f32 	%f433, %f432, 0fBF000000, %f424;
	fma.rn.f32 	%f467, %f466, 0fBF000000, %f458;
	fma.rn.f32 	%f519, %f518, 0fBF000000, %f822;
	fma.rn.f32 	%f570, %f569, 0fBF000000, %f810;
	selp.f32 	%f620, %f615, %f618, %p132;
	cvt.rzi.f32.f32 	%f621, %f615;
	setp.lt.f32 	%p133, %f619, 0f3F000000;
	selp.f32 	%f671, %f666, %f669, %p153;
	cvt.rzi.f32.f32 	%f672, %f666;
	setp.lt.f32 	%p154, %f670, 0f3F000000;
	add.f32 	%f720, %f718, %f719;
	abs.f32 	%f722, %f718;
	mul.f32 	%f163, %f162, %f162;
	mul.f32 	%f197, %f196, %f196;
	mul.f32 	%f232, %f231, %f231;
	mul.f32 	%f266, %f265, %f265;
	mul.f32 	%f301, %f300, %f300;
	mul.f32 	%f335, %f334, %f334;
	mul.f32 	%f370, %f369, %f369;
	mul.f32 	%f404, %f403, %f403;
	mul.f32 	%f434, %f433, %f433;
	mul.f32 	%f468, %f467, %f467;
	mul.f32 	%f520, %f519, %f519;
	mul.f32 	%f571, %f570, %f570;
	selp.f32 	%f622, %f621, %f620, %p133;
	selp.f32 	%f673, %f672, %f671, %p154;
	cvt.rzi.f32.f32 	%f721, %f720;
	setp.gt.f32 	%p173, %f722, 0f4B000000;
	cvt.rzi.s32.f32 	%r188, %f161;
	fma.rn.f32 	%f164, %f163, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f165, %f163, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r195, %f195;
	fma.rn.f32 	%f198, %f197, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f199, %f197, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r206, %f230;
	fma.rn.f32 	%f233, %f232, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f234, %f232, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r213, %f264;
	fma.rn.f32 	%f267, %f266, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f268, %f266, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r224, %f299;
	fma.rn.f32 	%f302, %f301, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f303, %f301, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r231, %f333;
	fma.rn.f32 	%f336, %f335, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f337, %f335, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r242, %f368;
	fma.rn.f32 	%f371, %f370, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f372, %f370, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r249, %f402;
	fma.rn.f32 	%f405, %f404, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f406, %f404, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f435, %f434, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f436, %f434, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f469, %f468, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f470, %f468, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f521, %f520, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f522, %f520, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f572, %f571, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f573, %f571, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f623, %f622, 0fBF000000, %f826;
	fma.rn.f32 	%f674, %f673, 0fBF000000, %f814;
	selp.f32 	%f723, %f718, %f721, %p173;
	cvt.rzi.f32.f32 	%f724, %f718;
	setp.lt.f32 	%p174, %f722, 0f3F000000;
	and.b32  	%r100, %r4, 16;
	shl.b32 	%r102, %r1, 6;
	add.s32 	%r189, %r188, 1;
	fma.rn.f32 	%f166, %f164, %f163, 0fC0A55DF6;
	fma.rn.f32 	%f167, %f165, %f163, 0f4081E0CF;
	fma.rn.f32 	%f168, %f163, %f162, 0f00000000;
	add.s32 	%r196, %r195, 1;
	fma.rn.f32 	%f200, %f198, %f197, 0fC0A55DF6;
	fma.rn.f32 	%f201, %f199, %f197, 0f4081E0CF;
	fma.rn.f32 	%f202, %f197, %f196, 0f00000000;
	add.s32 	%r207, %r206, 1;
	fma.rn.f32 	%f235, %f233, %f232, 0fC0A55DF6;
	fma.rn.f32 	%f236, %f234, %f232, 0f4081E0CF;
	fma.rn.f32 	%f237, %f232, %f231, 0f00000000;
	add.s32 	%r214, %r213, 1;
	fma.rn.f32 	%f269, %f267, %f266, 0fC0A55DF6;
	fma.rn.f32 	%f270, %f268, %f266, 0f4081E0CF;
	fma.rn.f32 	%f271, %f266, %f265, 0f00000000;
	add.s32 	%r225, %r224, 1;
	fma.rn.f32 	%f304, %f302, %f301, 0fC0A55DF6;
	fma.rn.f32 	%f305, %f303, %f301, 0f4081E0CF;
	fma.rn.f32 	%f306, %f301, %f300, 0f00000000;
	add.s32 	%r232, %r231, 1;
	fma.rn.f32 	%f338, %f336, %f335, 0fC0A55DF6;
	fma.rn.f32 	%f339, %f337, %f335, 0f4081E0CF;
	fma.rn.f32 	%f340, %f335, %f334, 0f00000000;
	add.s32 	%r243, %r242, 1;
	fma.rn.f32 	%f373, %f371, %f370, 0fC0A55DF6;
	fma.rn.f32 	%f374, %f372, %f370, 0f4081E0CF;
	fma.rn.f32 	%f375, %f370, %f369, 0f00000000;
	add.s32 	%r250, %r249, 1;
	fma.rn.f32 	%f407, %f405, %f404, 0fC0A55DF6;
	fma.rn.f32 	%f408, %f406, %f404, 0f4081E0CF;
	fma.rn.f32 	%f409, %f404, %f403, 0f00000000;
	cvt.rzi.s32.f32 	%r267, %f432;
	fma.rn.f32 	%f437, %f435, %f434, 0fC0A55DF6;
	fma.rn.f32 	%f438, %f436, %f434, 0f4081E0CF;
	fma.rn.f32 	%f439, %f434, %f433, 0f00000000;
	cvt.rzi.s32.f32 	%r277, %f466;
	fma.rn.f32 	%f471, %f469, %f468, 0fC0A55DF6;
	fma.rn.f32 	%f472, %f470, %f468, 0f4081E0CF;
	fma.rn.f32 	%f473, %f468, %f467, 0f00000000;
	cvt.rzi.s32.f32 	%r299, %f518;
	fma.rn.f32 	%f523, %f521, %f520, 0fC0A55DF6;
	fma.rn.f32 	%f524, %f522, %f520, 0f4081E0CF;
	fma.rn.f32 	%f525, %f520, %f519, 0f00000000;
	cvt.rzi.s32.f32 	%r330, %f569;
	fma.rn.f32 	%f574, %f572, %f571, 0fC0A55DF6;
	fma.rn.f32 	%f575, %f573, %f571, 0f4081E0CF;
	fma.rn.f32 	%f576, %f571, %f570, 0f00000000;
	mul.f32 	%f624, %f623, %f623;
	mul.f32 	%f675, %f674, %f674;
	selp.f32 	%f725, %f724, %f723, %p174;
	and.b32  	%r103, %r4, 2;
	or.b32  	%r172, %r102, %r100;
	fma.rn.f32 	%f169, %f167, %f163, 0fC09DE9E6;
	fma.rn.f32 	%f170, %f166, %f168, 0f00000000;
	and.b32  	%r190, %r189, 1;
	fma.rn.f32 	%f203, %f201, %f197, 0fC09DE9E6;
	fma.rn.f32 	%f204, %f200, %f202, 0f00000000;
	and.b32  	%r197, %r196, 1;
	fma.rn.f32 	%f238, %f236, %f232, 0fC09DE9E6;
	fma.rn.f32 	%f239, %f235, %f237, 0f00000000;
	and.b32  	%r208, %r207, 1;
	fma.rn.f32 	%f272, %f270, %f266, 0fC09DE9E6;
	fma.rn.f32 	%f273, %f269, %f271, 0f00000000;
	and.b32  	%r215, %r214, 1;
	fma.rn.f32 	%f307, %f305, %f301, 0fC09DE9E6;
	fma.rn.f32 	%f308, %f304, %f306, 0f00000000;
	and.b32  	%r226, %r225, 1;
	fma.rn.f32 	%f341, %f339, %f335, 0fC09DE9E6;
	fma.rn.f32 	%f342, %f338, %f340, 0f00000000;
	and.b32  	%r233, %r232, 1;
	fma.rn.f32 	%f376, %f374, %f370, 0fC09DE9E6;
	fma.rn.f32 	%f377, %f373, %f375, 0f00000000;
	and.b32  	%r244, %r243, 1;
	fma.rn.f32 	%f410, %f408, %f404, 0fC09DE9E6;
	fma.rn.f32 	%f411, %f407, %f409, 0f00000000;
	and.b32  	%r251, %r250, 1;
	fma.rn.f32 	%f440, %f438, %f434, 0fC09DE9E6;
	fma.rn.f32 	%f441, %f437, %f439, 0f00000000;
	and.b32  	%r268, %r267, 1;
	fma.rn.f32 	%f474, %f472, %f468, 0fC09DE9E6;
	fma.rn.f32 	%f475, %f471, %f473, 0f00000000;
	and.b32  	%r278, %r277, 1;
	fma.rn.f32 	%f526, %f524, %f520, 0fC09DE9E6;
	fma.rn.f32 	%f527, %f523, %f525, 0f00000000;
	and.b32  	%r300, %r299, 1;
	fma.rn.f32 	%f577, %f575, %f571, 0fC09DE9E6;
	fma.rn.f32 	%f578, %f574, %f576, 0f00000000;
	and.b32  	%r331, %r330, 1;
	fma.rn.f32 	%f625, %f624, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f626, %f624, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f676, %f675, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f677, %f675, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f726, %f725, 0fBF000000, %f830;
	shl.b32 	%r96, %r4, 2;
	and.b32  	%r99, %r98, 8;
	or.b32  	%r173, %r172, %r103;
	fma.rn.f32 	%f171, %f169, %f163, 0f3F800000;
	fma.rn.f32 	%f172, %f162, 0f40490FDB, %f170;
	setp.eq.b32 	%p20, %r190, 1;
	fma.rn.f32 	%f205, %f203, %f197, 0f3F800000;
	fma.rn.f32 	%f206, %f196, 0f40490FDB, %f204;
	setp.eq.b32 	%p26, %r197, 1;
	fma.rn.f32 	%f240, %f238, %f232, 0f3F800000;
	fma.rn.f32 	%f241, %f231, 0f40490FDB, %f239;
	setp.eq.b32 	%p32, %r208, 1;
	fma.rn.f32 	%f274, %f272, %f266, 0f3F800000;
	fma.rn.f32 	%f275, %f265, 0f40490FDB, %f273;
	setp.eq.b32 	%p38, %r215, 1;
	fma.rn.f32 	%f309, %f307, %f301, 0f3F800000;
	fma.rn.f32 	%f310, %f300, 0f40490FDB, %f308;
	setp.eq.b32 	%p44, %r226, 1;
	fma.rn.f32 	%f343, %f341, %f335, 0f3F800000;
	fma.rn.f32 	%f344, %f334, 0f40490FDB, %f342;
	setp.eq.b32 	%p50, %r233, 1;
	fma.rn.f32 	%f378, %f376, %f370, 0f3F800000;
	fma.rn.f32 	%f379, %f369, 0f40490FDB, %f377;
	setp.eq.b32 	%p56, %r244, 1;
	fma.rn.f32 	%f412, %f410, %f404, 0f3F800000;
	fma.rn.f32 	%f413, %f403, 0f40490FDB, %f411;
	setp.eq.b32 	%p62, %r251, 1;
	fma.rn.f32 	%f442, %f440, %f434, 0f3F800000;
	fma.rn.f32 	%f443, %f433, 0f40490FDB, %f441;
	setp.eq.b32 	%p67, %r268, 1;
	fma.rn.f32 	%f476, %f474, %f468, 0f3F800000;
	fma.rn.f32 	%f477, %f467, 0f40490FDB, %f475;
	setp.eq.b32 	%p74, %r278, 1;
	fma.rn.f32 	%f528, %f526, %f520, 0f3F800000;
	fma.rn.f32 	%f529, %f519, 0f40490FDB, %f527;
	setp.eq.b32 	%p94, %r300, 1;
	fma.rn.f32 	%f579, %f577, %f571, 0f3F800000;
	fma.rn.f32 	%f580, %f570, 0f40490FDB, %f578;
	setp.eq.b32 	%p114, %r331, 1;
	cvt.rzi.s32.f32 	%r346, %f622;
	fma.rn.f32 	%f627, %f625, %f624, 0fC0A55DF6;
	fma.rn.f32 	%f628, %f626, %f624, 0f4081E0CF;
	fma.rn.f32 	%f629, %f624, %f623, 0f00000000;
	cvt.rzi.s32.f32 	%r368, %f673;
	fma.rn.f32 	%f678, %f676, %f675, 0fC0A55DF6;
	fma.rn.f32 	%f679, %f677, %f675, 0f4081E0CF;
	fma.rn.f32 	%f680, %f675, %f674, 0f00000000;
	mul.f32 	%f727, %f726, %f726;
	and.b32  	%r97, %r96, 32;
	or.b32  	%r174, %r173, %r99;
	selp.f32 	%f173, %f171, %f172, %p20;
	and.b32  	%r191, %r189, 2;
	mov.f32 	%f174, 0f00000000;
	selp.f32 	%f207, %f205, %f206, %p26;
	and.b32  	%r198, %r196, 2;
	selp.f32 	%f242, %f240, %f241, %p32;
	and.b32  	%r209, %r207, 2;
	selp.f32 	%f276, %f274, %f275, %p38;
	and.b32  	%r216, %r214, 2;
	selp.f32 	%f311, %f309, %f310, %p44;
	and.b32  	%r227, %r225, 2;
	selp.f32 	%f345, %f343, %f344, %p50;
	and.b32  	%r234, %r232, 2;
	selp.f32 	%f380, %f378, %f379, %p56;
	and.b32  	%r245, %r243, 2;
	selp.f32 	%f414, %f412, %f413, %p62;
	and.b32  	%r252, %r250, 2;
	selp.f32 	%f444, %f442, %f443, %p67;
	and.b32  	%r269, %r267, 2;
	selp.f32 	%f478, %f476, %f477, %p74;
	and.b32  	%r279, %r277, 2;
	selp.f32 	%f530, %f528, %f529, %p94;
	and.b32  	%r301, %r299, 2;
	selp.f32 	%f581, %f579, %f580, %p114;
	and.b32  	%r332, %r330, 2;
	fma.rn.f32 	%f630, %f628, %f624, 0fC09DE9E6;
	fma.rn.f32 	%f631, %f627, %f629, 0f00000000;
	and.b32  	%r347, %r346, 1;
	fma.rn.f32 	%f681, %f679, %f675, 0fC09DE9E6;
	fma.rn.f32 	%f682, %f678, %f680, 0f00000000;
	and.b32  	%r369, %r368, 1;
	fma.rn.f32 	%f728, %f727, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f729, %f727, 0f3E684E12, 0fBFAAD2E0;
	and.b32  	%r101, %r96, 4;
	or.b32  	%r175, %r174, %r97;
	setp.eq.s32 	%p21, %r191, 0;
	sub.f32 	%f175, %f174, %f173;
	setp.eq.s32 	%p27, %r198, 0;
	sub.f32 	%f209, %f174, %f207;
	setp.eq.s32 	%p33, %r209, 0;
	sub.f32 	%f244, %f174, %f242;
	setp.eq.s32 	%p39, %r216, 0;
	sub.f32 	%f278, %f174, %f276;
	setp.eq.s32 	%p45, %r227, 0;
	sub.f32 	%f313, %f174, %f311;
	setp.eq.s32 	%p51, %r234, 0;
	sub.f32 	%f347, %f174, %f345;
	setp.eq.s32 	%p57, %r245, 0;
	sub.f32 	%f382, %f174, %f380;
	setp.eq.s32 	%p63, %r252, 0;
	sub.f32 	%f416, %f174, %f414;
	setp.eq.s32 	%p68, %r269, 0;
	neg.f32 	%f446, %f444;
	add.s32 	%r270, %r267, 1;
	cvt.rzi.f32.f32 	%f451, %f424;
	setp.eq.s32 	%p75, %r279, 0;
	neg.f32 	%f480, %f478;
	add.s32 	%r280, %r277, 1;
	cvt.rzi.f32.f32 	%f484, %f458;
	setp.eq.s32 	%p95, %r301, 0;
	neg.f32 	%f532, %f530;
	add.s32 	%r302, %r299, 1;
	cvt.rzi.f32.f32 	%f537, %f822;
	setp.eq.s32 	%p115, %r332, 0;
	neg.f32 	%f583, %f581;
	add.s32 	%r333, %r330, 1;
	cvt.rzi.f32.f32 	%f588, %f810;
	fma.rn.f32 	%f632, %f630, %f624, 0f3F800000;
	fma.rn.f32 	%f633, %f623, 0f40490FDB, %f631;
	setp.eq.b32 	%p134, %r347, 1;
	fma.rn.f32 	%f683, %f681, %f675, 0f3F800000;
	fma.rn.f32 	%f684, %f674, 0f40490FDB, %f682;
	setp.eq.b32 	%p155, %r369, 1;
	cvt.rzi.s32.f32 	%r382, %f725;
	fma.rn.f32 	%f730, %f728, %f727, 0fC0A55DF6;
	fma.rn.f32 	%f731, %f729, %f727, 0f4081E0CF;
	fma.rn.f32 	%f732, %f727, %f726, 0f00000000;
	or.b32  	%r176, %r175, %r101;
	selp.f32 	%f176, %f173, %f175, %p21;
	selp.f32 	%f210, %f207, %f209, %p27;
	selp.f32 	%f245, %f242, %f244, %p33;
	selp.f32 	%f279, %f276, %f278, %p39;
	selp.f32 	%f314, %f311, %f313, %p45;
	selp.f32 	%f348, %f345, %f347, %p51;
	selp.f32 	%f383, %f380, %f382, %p57;
	selp.f32 	%f417, %f414, %f416, %p63;
	selp.f32 	%f445, %f443, %f442, %p67;
	selp.f32 	%f447, %f444, %f446, %p68;
	and.b32  	%r271, %r270, 2;
	setp.eq.f32 	%p70, %f451, %f424;
	mul.f32 	%f452, %f424, 0f00000000;
	selp.f32 	%f479, %f477, %f476, %p74;
	selp.f32 	%f481, %f478, %f480, %p75;
	and.b32  	%r281, %r280, 2;
	setp.eq.f32 	%p77, %f484, %f458;
	mul.f32 	%f485, %f458, 0f00000000;
	selp.f32 	%f531, %f529, %f528, %p94;
	selp.f32 	%f533, %f530, %f532, %p95;
	and.b32  	%r303, %r302, 2;
	setp.eq.f32 	%p97, %f537, %f822;
	mul.f32 	%f538, %f822, 0f00000000;
	selp.f32 	%f582, %f580, %f579, %p114;
	selp.f32 	%f584, %f581, %f583, %p115;
	and.b32  	%r334, %r333, 2;
	setp.eq.f32 	%p117, %f588, %f810;
	mul.f32 	%f589, %f810, 0f00000000;
	selp.f32 	%f634, %f632, %f633, %p134;
	and.b32  	%r348, %r346, 2;
	selp.f32 	%f685, %f683, %f684, %p155;
	and.b32  	%r370, %r368, 2;
	fma.rn.f32 	%f733, %f731, %f727, 0fC09DE9E6;
	fma.rn.f32 	%f734, %f730, %f732, 0f00000000;
	and.b32  	%r383, %r382, 1;
	bfe.u32 	%r177, %r176, 1, 10;
	mul.f32 	%f86, %f176, %f176;
	mul.f32 	%f4, %f210, %f210;
	mul.f32 	%f8, %f245, %f245;
	mul.f32 	%f13, %f279, %f279;
	mul.f32 	%f17, %f314, %f314;
	mul.f32 	%f22, %f348, %f348;
	mul.f32 	%f26, %f383, %f383;
	mul.f32 	%f31, %f417, %f417;
	setp.eq.s32 	%p69, %r271, 0;
	sub.f32 	%f449, %f174, %f445;
	selp.f32 	%f453, %f452, %f447, %p70;
	abs.f32 	%f454, %f424;
	setp.eq.s32 	%p76, %r281, 0;
	sub.f32 	%f482, %f174, %f479;
	selp.f32 	%f486, %f485, %f481, %p77;
	abs.f32 	%f487, %f458;
	setp.eq.s32 	%p96, %r303, 0;
	sub.f32 	%f535, %f174, %f531;
	selp.f32 	%f103, %f538, %f533, %p97;
	abs.f32 	%f539, %f822;
	setp.eq.s32 	%p116, %r334, 0;
	sub.f32 	%f586, %f174, %f582;
	selp.f32 	%f590, %f589, %f584, %p117;
	abs.f32 	%f591, %f810;
	setp.eq.s32 	%p135, %r348, 0;
	neg.f32 	%f636, %f634;
	add.s32 	%r349, %r346, 1;
	cvt.rzi.f32.f32 	%f641, %f826;
	setp.eq.s32 	%p156, %r370, 0;
	neg.f32 	%f687, %f685;
	add.s32 	%r371, %r368, 1;
	cvt.rzi.f32.f32 	%f692, %f814;
	fma.rn.f32 	%f735, %f733, %f727, 0f3F800000;
	fma.rn.f32 	%f736, %f726, 0f40490FDB, %f734;
	setp.eq.b32 	%p175, %r383, 1;
	ld.param.u64 	%rd1, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_7];
	mul.wide.u32 	%rd44, %r177, 4;
	mul.f32 	%f180, %f86, 0f3C0AF64E;
	mul.f32 	%f214, %f4, 0f3C0AF64E;
	mul.f32 	%f249, %f8, 0f3C0AF64E;
	mul.f32 	%f283, %f13, 0f3C0AF64E;
	mul.f32 	%f318, %f17, 0f3C0AF64E;
	mul.f32 	%f352, %f22, 0f3C0AF64E;
	mul.f32 	%f387, %f26, 0f3C0AF64E;
	mul.f32 	%f420, %f31, 0f3C0AF64E;
	selp.f32 	%f450, %f445, %f449, %p69;
	setp.gt.f32 	%p71, %f454, 0f4B800000;
	add.f32 	%f455, %f453, 0f3F800000;
	selp.f32 	%f483, %f479, %f482, %p76;
	setp.gt.f32 	%p78, %f487, 0f4B800000;
	add.f32 	%f488, %f486, 0f3F800000;
	selp.f32 	%f536, %f531, %f535, %p96;
	setp.gt.f32 	%p98, %f539, 0f4B800000;
	add.f32 	%f540, %f103, 0f3F800000;
	selp.f32 	%f587, %f582, %f586, %p116;
	setp.gt.f32 	%p118, %f591, 0f4B800000;
	add.f32 	%f592, %f590, 0f3F800000;
	selp.f32 	%f635, %f633, %f632, %p134;
	selp.f32 	%f637, %f634, %f636, %p135;
	and.b32  	%r350, %r349, 2;
	setp.eq.f32 	%p137, %f641, %f826;
	mul.f32 	%f642, %f826, 0f00000000;
	selp.f32 	%f686, %f684, %f683, %p155;
	selp.f32 	%f688, %f685, %f687, %p156;
	and.b32  	%r372, %r371, 2;
	setp.eq.f32 	%p158, %f692, %f814;
	mul.f32 	%f693, %f814, 0f00000000;
	selp.f32 	%f737, %f735, %f736, %p175;
	and.b32  	%r384, %r382, 2;
	add.s64 	%rd45, %rd1, %rd44;
	mul.f32 	%f3, %f180, %f800;
	mul.f32 	%f215, %f214, %f801;
	mul.f32 	%f12, %f249, %f802;
	mul.f32 	%f284, %f283, %f803;
	mul.f32 	%f21, %f318, %f804;
	mul.f32 	%f353, %f352, %f805;
	mul.f32 	%f30, %f387, %f806;
	mul.f32 	%f421, %f420, %f807;
	selp.f32 	%f456, %f455, %f450, %p71;
	selp.f32 	%f489, %f488, %f483, %p78;
	selp.f32 	%f104, %f540, %f536, %p98;
	selp.f32 	%f593, %f592, %f587, %p118;
	setp.eq.s32 	%p136, %r350, 0;
	sub.f32 	%f639, %f174, %f635;
	selp.f32 	%f123, %f642, %f637, %p137;
	abs.f32 	%f643, %f826;
	setp.eq.s32 	%p157, %r372, 0;
	sub.f32 	%f690, %f174, %f686;
	selp.f32 	%f694, %f693, %f688, %p158;
	abs.f32 	%f695, %f814;
	setp.eq.s32 	%p176, %r384, 0;
	neg.f32 	%f739, %f737;
	add.s32 	%r385, %r382, 1;
	cvt.rzi.f32.f32 	%f744, %f830;
	ld.param.u64 	%rd2, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_8];
	ld.param.u64 	%rd3, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_9];
	ld.global.u32 	%r104, [%rd45];
	mov.b32 	%r201, %f215;
	mov.b32 	%r200, %f3;
	mov.b32 	%r219, %f284;
	mov.b32 	%r218, %f12;
	mov.b32 	%r237, %f353;
	mov.b32 	%r236, %f21;
	mov.b32 	%r255, %f421;
	mov.b32 	%r254, %f30;
	mov.b32 	%r257, %f456;
	mov.b32 	%r258, %f489;
	mov.b32 	%r260, %f453;
	mov.b32 	%r261, %f486;
	mov.b32 	%r317, %f593;
	mov.b32 	%r316, %f104;
	mov.b32 	%r323, %f590;
	mov.b32 	%r322, %f103;
	selp.f32 	%f640, %f635, %f639, %p136;
	setp.gt.f32 	%p138, %f643, 0f4B800000;
	add.f32 	%f644, %f123, 0f3F800000;
	selp.f32 	%f691, %f686, %f690, %p157;
	setp.gt.f32 	%p159, %f695, 0f4B800000;
	add.f32 	%f696, %f694, 0f3F800000;
	selp.f32 	%f738, %f736, %f735, %p175;
	selp.f32 	%f740, %f737, %f739, %p176;
	and.b32  	%r386, %r385, 2;
	setp.eq.f32 	%p178, %f744, %f830;
	mul.f32 	%f745, %f830, 0f00000000;
	// begin inline asm
	cvt.rn.f16x2.f32 %r199, %r201, %r200;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r217, %r219, %r218;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r235, %r237, %r236;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r253, %r255, %r254;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r256, %r258, %r257;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r259, %r261, %r260;
	// end inline asm
	xor.b32  	%r320, %r323, -2147483648;
	xor.b32  	%r319, %r322, -2147483648;
	selp.f32 	%f124, %f644, %f640, %p138;
	selp.f32 	%f697, %f696, %f691, %p159;
	setp.eq.s32 	%p177, %r386, 0;
	sub.f32 	%f742, %f174, %f738;
	selp.f32 	%f142, %f745, %f740, %p178;
	abs.f32 	%f746, %f830;
	// begin inline asm
	cvt.rn.f16x2.f32 %r315, %r317, %r316;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r318, %r320, %r319;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r321, %r323, %r322;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r324, %r317, %r316;
	// end inline asm
	mov.b32 	%r361, %f697;
	mov.b32 	%r360, %f124;
	mov.b32 	%r364, %f694;
	mov.b32 	%r363, %f123;
	selp.f32 	%f743, %f738, %f742, %p177;
	setp.gt.f32 	%p179, %f746, 0f4B800000;
	add.f32 	%f747, %f142, 0f3F800000;
	// begin inline asm
	cvt.rn.f16x2.f32 %r359, %r361, %r360;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r362, %r364, %r363;
	// end inline asm
	selp.f32 	%f143, %f747, %f743, %p179;
	add.f32 	%f768, %f818, %f818;
	mov.b32 	%r405, %f768;
	and.b32  	%r406, %r405, -2147483648;
	or.b32  	%r407, %r406, 1056964608;
	mov.b32 	%f769, %r407;
	add.f32 	%f770, %f768, %f769;
	cvt.rzi.f32.f32 	%f771, %f770;
	abs.f32 	%f772, %f768;
	setp.gt.f32 	%p192, %f772, 0f4B000000;
	selp.f32 	%f773, %f768, %f771, %p192;
	cvt.rzi.f32.f32 	%f774, %f768;
	setp.lt.f32 	%p193, %f772, 0f3F000000;
	selp.f32 	%f775, %f774, %f773, %p193;
	cvt.rzi.s32.f32 	%r408, %f775;
	fma.rn.f32 	%f776, %f775, 0fBF000000, %f818;
	mul.f32 	%f777, %f776, %f776;
	fma.rn.f32 	%f778, %f777, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f779, %f777, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f780, %f778, %f777, 0fC0A55DF6;
	fma.rn.f32 	%f781, %f779, %f777, 0f4081E0CF;
	fma.rn.f32 	%f782, %f777, %f776, 0f00000000;
	fma.rn.f32 	%f783, %f781, %f777, 0fC09DE9E6;
	fma.rn.f32 	%f784, %f780, %f782, 0f00000000;
	fma.rn.f32 	%f785, %f783, %f777, 0f3F800000;
	fma.rn.f32 	%f786, %f776, 0f40490FDB, %f784;
	and.b32  	%r409, %r408, 1;
	setp.eq.b32 	%p194, %r409, 1;
	selp.f32 	%f787, %f785, %f786, %p194;
	selp.f32 	%f788, %f786, %f785, %p194;
	and.b32  	%r410, %r408, 2;
	setp.eq.s32 	%p195, %r410, 0;
	neg.f32 	%f789, %f787;
	selp.f32 	%f790, %f787, %f789, %p195;
	add.s32 	%r411, %r408, 1;
	and.b32  	%r412, %r411, 2;
	setp.eq.s32 	%p196, %r412, 0;
	sub.f32 	%f792, %f174, %f788;
	selp.f32 	%f793, %f788, %f792, %p196;
	cvt.rzi.f32.f32 	%f794, %f818;
	setp.eq.f32 	%p197, %f794, %f818;
	mul.f32 	%f795, %f818, 0f00000000;
	selp.f32 	%f796, %f795, %f790, %p197;
	abs.f32 	%f797, %f818;
	setp.gt.f32 	%p198, %f797, 0f4B800000;
	add.f32 	%f798, %f796, 0f3F800000;
	selp.f32 	%f799, %f798, %f793, %p198;
	mov.b32 	%r395, %f799;
	mov.b32 	%r394, %f143;
	// begin inline asm
	cvt.rn.f16x2.f32 %r393, %r395, %r394;
	// end inline asm
	mov.b32 	%r401, %f796;
	xor.b32  	%r398, %r401, -2147483648;
	mov.b32 	%r400, %f142;
	xor.b32  	%r397, %r400, -2147483648;
	// begin inline asm
	cvt.rn.f16x2.f32 %r396, %r398, %r397;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r399, %r401, %r400;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r402, %r395, %r394;
	// end inline asm
	shl.b32 	%r414, %r160, 5;
	and.b32  	%r415, %r96, 12;
	cvt.u16.u32 	%rs1, %r102;
	mul.hi.u16 	%rs2, %rs1, -21845;
	shr.u16 	%rs3, %rs2, 8;
	mul.lo.s16 	%rs4, %rs3, 384;
	sub.s16 	%rs5, %rs1, %rs4;
	shl.b16 	%rs6, %rs5, 5;
	cvt.u32.u16 	%r416, %rs6;
	and.b32  	%r417, %r96, 16;
	and.b32  	%r418, %r96, 28;
	or.b32  	%r419, %r418, %r416;
	add.s32 	%r50, %r419, %r414;
	bfe.s32 	%r420, %r4, 3, 1;
	and.b32  	%r51, %r4, 8;
	shl.b32 	%r421, %r4, 4;
	or.b32  	%r422, %r421, %r51;
	shr.u32 	%r423, %r422, 2;
	and.b32  	%r424, %r423, 14;
	or.b32  	%r425, %r424, %r417;
	shr.u32 	%r426, %r2, 1;
	and.b32  	%r427, %r3, 32;
	or.b32  	%r428, %r427, %r426;
	or.b32  	%r429, %r428, 8;
	or.b32  	%r430, %r428, 16;
	or.b32  	%r431, %r428, 24;
	and.b32  	%r432, %r4, 18;
	or.b32  	%r433, %r432, %r99;
	or.b32  	%r434, %r433, %r97;
	or.b32  	%r435, %r434, %r101;
	shr.u32 	%r436, %r435, 1;
	mul.lo.s32 	%r437, %r436, 65;
	add.s32 	%r438, %r428, %r437;
	add.s32 	%r439, %r429, %r437;
	add.s32 	%r440, %r430, %r437;
	add.s32 	%r441, %r431, %r437;
	shl.b32 	%r442, %r2, 1;
	or.b32  	%r443, %r107, %r442;
	mul.lo.s32 	%r444, %r443, 65;
	add.s32 	%r445, %r444, %r417;
	add.s32 	%r446, %r445, %r424;
	mul.wide.u32 	%rd46, %r446, 4;
	mov.u64 	%rd47, shmem;
	add.s64 	%rd5, %rd47, %rd46;
	cvt.u64.u32 	%rd48, %r424;
	cvt.u64.u32 	%rd49, %r444;
	cvt.u64.u32 	%rd50, %r417;
	add.s64 	%rd51, %rd50, %rd49;
	add.s64 	%rd52, %rd51, %rd48;
	shl.b64 	%rd53, %rd52, 2;
	add.s64 	%rd6, %rd47, %rd53;
	or.b32  	%r447, %r424, 1;
	cvt.u64.u32 	%rd54, %r445;
	add.s64 	%rd55, %rd54, %rd48;
	shl.b64 	%rd56, %rd55, 2;
	add.s64 	%rd7, %rd47, %rd56;
	cvt.u64.u32 	%rd57, %r447;
	add.s64 	%rd58, %rd51, %rd57;
	shl.b64 	%rd59, %rd58, 2;
	add.s64 	%rd8, %rd47, %rd59;
	shl.b32 	%r448, %r158, 16;
	add.s32 	%r449, %r448, -196608;
	and.b32  	%r450, %r102, 1984;
	or.b32  	%r451, %r450, %r108;
	shl.b32 	%r452, %r2, 7;
	shl.b32 	%r453, %r451, 5;
	or.b32  	%r454, %r453, %r452;
	or.b32  	%r52, %r418, %r454;
	cvt.s64.s32 	%rd9, %r449;
	or.b32  	%r455, %r417, %r452;
	or.b32  	%r456, %r455, %r415;
	or.b32  	%r53, %r456, %r453;
	shr.u32 	%r457, %r2, 3;
	bfe.s32 	%r458, %r2, 1, 1;
	and.b32  	%r459, %r458, 520;
	shr.u32 	%r460, %r100, 4;
	bfe.s32 	%r461, %r2, 2, 1;
	and.b32  	%r462, %r461, 260;
	and.b32  	%r463, %r2, 1;
	neg.s32 	%r464, %r463;
	and.b32  	%r465, %r464, 1040;
	add.s32 	%r466, %r465, %r425;
	mad.lo.s32 	%r467, %r457, 130, %r466;
	add.s32 	%r468, %r467, %r459;
	mad.lo.s32 	%r469, %r460, 65, %r468;
	add.s32 	%r470, %r469, %r462;
	mul.wide.u32 	%rd60, %r470, 4;
	add.s64 	%rd10, %rd47, %rd60;
	add.s32 	%r471, %r470, 32;
	mul.wide.u32 	%rd61, %r471, 4;
	add.s64 	%rd11, %rd47, %rd61;
	add.s32 	%r472, %r470, 1;
	mul.wide.u32 	%rd62, %r472, 4;
	add.s64 	%rd12, %rd47, %rd62;
	add.s32 	%r473, %r470, 33;
	mul.wide.u32 	%rd63, %r473, 4;
	add.s64 	%rd13, %rd47, %rd63;
	add.s32 	%r474, %r470, 2081;
	mul.wide.u32 	%rd64, %r474, 4;
	add.s64 	%rd14, %rd47, %rd64;
	add.s32 	%r475, %r470, 2113;
	mul.wide.u32 	%rd65, %r475, 4;
	add.s64 	%rd15, %rd47, %rd65;
	add.s32 	%r476, %r470, 2082;
	mul.wide.u32 	%rd66, %r476, 4;
	add.s64 	%rd16, %rd47, %rd66;
	add.s32 	%r477, %r470, 2114;
	mul.wide.u32 	%rd67, %r477, 4;
	add.s64 	%rd17, %rd47, %rd67;
	add.s32 	%r478, %r470, 4162;
	mul.wide.u32 	%rd68, %r478, 4;
	add.s64 	%rd18, %rd47, %rd68;
	add.s32 	%r479, %r470, 4194;
	mul.wide.u32 	%rd69, %r479, 4;
	add.s64 	%rd19, %rd47, %rd69;
	add.s32 	%r480, %r470, 4163;
	mul.wide.u32 	%rd70, %r480, 4;
	add.s64 	%rd20, %rd47, %rd70;
	add.s32 	%r481, %r470, 4195;
	mul.wide.u32 	%rd71, %r481, 4;
	add.s64 	%rd21, %rd47, %rd71;
	add.s32 	%r482, %r470, 6243;
	mul.wide.u32 	%rd72, %r482, 4;
	add.s64 	%rd22, %rd47, %rd72;
	add.s32 	%r483, %r470, 6275;
	mul.wide.u32 	%rd73, %r483, 4;
	add.s64 	%rd23, %rd47, %rd73;
	add.s32 	%r484, %r470, 6244;
	mul.wide.u32 	%rd74, %r484, 4;
	add.s64 	%rd24, %rd47, %rd74;
	add.s32 	%r485, %r470, 6276;
	mul.wide.u32 	%rd75, %r485, 4;
	add.s64 	%rd25, %rd47, %rd75;
	and.b32  	%r486, %r4, 1;
	neg.s32 	%r487, %r486;
	and.b32  	%r488, %r487, 130;
	mul.lo.s32 	%r489, %r107, 520;
	setp.eq.s32 	%p200, %r103, 0;
	selp.b32 	%r490, 0, 65, %p200;
	bfe.s32 	%r491, %r4, 2, 1;
	and.b32  	%r492, %r491, 260;
	and.b32  	%r493, %r420, 1040;
	or.b32  	%r494, %r428, %r493;
	or.b32  	%r495, %r429, %r493;
	mul.wide.u32 	%rd26, %r441, 4;
	mul.wide.u32 	%rd27, %r440, 4;
	mul.wide.u32 	%rd28, %r439, 4;
	mul.wide.u32 	%rd29, %r438, 4;
	or.b32  	%r496, %r488, %r490;
	or.b32  	%r497, %r496, %r492;
	or.b32  	%r498, %r497, %r493;
	add.s32 	%r499, %r498, %r431;
	add.s32 	%r500, %r499, %r489;
	mul.wide.u32 	%rd30, %r500, 4;
	add.s32 	%r501, %r498, %r430;
	add.s32 	%r502, %r501, %r489;
	mul.wide.u32 	%rd31, %r502, 4;
	add.s32 	%r503, %r497, %r495;
	add.s32 	%r504, %r503, %r489;
	mul.wide.u32 	%rd32, %r504, 4;
	add.s32 	%r505, %r497, %r494;
	add.s32 	%r506, %r505, %r489;
	mul.wide.u32 	%rd33, %r506, 4;
	setp.eq.s32 	%p201, %r51, 0;
	mov.u16 	%rs1182, 25600;
	mov.u16 	%rs1078, 21504;
	mov.u16 	%rs1190, 18432;
	mov.u32 	%r7974, %r7951;
	mov.u32 	%r7975, %r7951;
	mov.u32 	%r7976, %r7951;
	mov.u32 	%r7977, %r7951;
	mov.u32 	%r7978, %r7951;
	mov.u32 	%r7979, %r7951;
	mov.u32 	%r7980, %r7951;
	mov.u32 	%r7981, %r7951;
	mov.u32 	%r7982, %r7951;
	mov.u32 	%r7983, %r7951;
	mov.u32 	%r7984, %r7951;
	mov.u32 	%r7985, %r7951;
	mov.u32 	%r7972, %r7951;
	bra.uni 	$L__BB0_83;
$L__BB0_88:                             // %L38070
                                        //   in Loop: Header=BB0_83 Depth=1
	or.b32  	%r7946, %r7953, 196608;
	cvt.s64.s32 	%rd129, %r7946;
	add.s64 	%rd130, %rd129, %rd9;
	shr.u64 	%rd131, %rd130, 39;
	add.s64 	%rd132, %rd130, %rd131;
	shr.s64 	%rd133, %rd132, 25;
	setp.lt.s64 	%p229, %rd130, 0;
	and.b64  	%rd134, %rd132, -33554432;
	setp.ne.s64 	%p230, %rd134, %rd130;
	and.pred  	%p231, %p229, %p230;
	selp.u64 	%rd135, 1, 0, %p231;
	sub.s64 	%rd136, %rd135, %rd133;
	shl.b64 	%rd137, %rd136, 25;
	add.s64 	%rd138, %rd137, %rd130;
	shl.b64 	%rd139, %rd138, 2;
	add.s64 	%rd140, %rd3, %rd139;
	st.global.v4.u32 	[%rd140], {%r151, %r153, %r152, %r154};
	add.s32 	%r7972, %r7972, 256;
	add.s32 	%r7947, %r7972, %r156;
	setp.lt.s32 	%p232, %r7947, %r157;
	@%p232 bra 	$L__BB0_83;
	bra.uni 	$L__BB0_89;
$L__BB0_83:                             // %L1449
                                        // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_84 Depth 2
	or.b32  	%r572, %r7972, %r4;
	and.b32  	%r573, %r572, 32528;
	or.b32  	%r574, %r573, %r97;
	or.b32  	%r575, %r574, %r2;
	add.s32 	%r576, %r575, %r156;
	mad.lo.s32 	%r577, %r576, 12288, %r50;
	mul.hi.s32 	%r578, %r577, 715827883;
	shr.u32 	%r579, %r578, 31;
	shr.s32 	%r580, %r578, 26;
	add.s32 	%r581, %r580, %r579;
	setp.lt.s32 	%p202, %r577, 0;
	mul.lo.s32 	%r582, %r581, 402653184;
	setp.ne.s32 	%p203, %r582, %r577;
	and.pred  	%p204, %p202, %p203;
	selp.s32 	%r583, -1, 0, %p204;
	add.s32 	%r584, %r581, %r583;
	mad.lo.s32 	%r585, %r584, -402653184, %r577;
	mul.wide.s32 	%rd77, %r585, 4;
	add.s64 	%rd78, %rd2, %rd77;
	ld.global.v4.u32 	{%r586, %r587, %r588, %r589}, [%rd78];
	or.b32  	%r590, %r575, 64;
	add.s32 	%r591, %r590, %r156;
	mad.lo.s32 	%r592, %r591, 12288, %r50;
	mul.hi.s32 	%r593, %r592, 715827883;
	shr.u32 	%r594, %r593, 31;
	shr.s32 	%r595, %r593, 26;
	add.s32 	%r596, %r595, %r594;
	setp.lt.s32 	%p205, %r592, 0;
	mul.lo.s32 	%r597, %r596, 402653184;
	setp.ne.s32 	%p206, %r597, %r592;
	and.pred  	%p207, %p205, %p206;
	selp.s32 	%r598, -1, 0, %p207;
	add.s32 	%r599, %r596, %r598;
	mad.lo.s32 	%r600, %r599, -402653184, %r592;
	mul.wide.s32 	%rd79, %r600, 4;
	add.s64 	%rd80, %rd2, %rd79;
	ld.global.v4.u32 	{%r601, %r602, %r603, %r604}, [%rd80];
	or.b32  	%r605, %r575, 128;
	add.s32 	%r606, %r605, %r156;
	mad.lo.s32 	%r607, %r606, 12288, %r50;
	mul.hi.s32 	%r608, %r607, 715827883;
	shr.u32 	%r609, %r608, 31;
	shr.s32 	%r610, %r608, 26;
	add.s32 	%r611, %r610, %r609;
	setp.lt.s32 	%p208, %r607, 0;
	mul.lo.s32 	%r612, %r611, 402653184;
	setp.ne.s32 	%p209, %r612, %r607;
	and.pred  	%p210, %p208, %p209;
	selp.s32 	%r613, -1, 0, %p210;
	add.s32 	%r614, %r611, %r613;
	mad.lo.s32 	%r615, %r614, -402653184, %r607;
	mul.wide.s32 	%rd81, %r615, 4;
	add.s64 	%rd82, %rd2, %rd81;
	ld.global.v4.u32 	{%r616, %r617, %r618, %r619}, [%rd82];
	or.b32  	%r620, %r575, 192;
	add.s32 	%r621, %r620, %r156;
	mad.lo.s32 	%r622, %r621, 12288, %r50;
	mul.hi.s32 	%r623, %r622, 715827883;
	shr.u32 	%r624, %r623, 31;
	shr.s32 	%r625, %r623, 26;
	add.s32 	%r626, %r625, %r624;
	setp.lt.s32 	%p211, %r622, 0;
	mul.lo.s32 	%r627, %r626, 402653184;
	setp.ne.s32 	%p212, %r627, %r622;
	and.pred  	%p213, %p211, %p212;
	selp.s32 	%r628, -1, 0, %p213;
	add.s32 	%r629, %r626, %r628;
	mad.lo.s32 	%r630, %r629, -402653184, %r622;
	mul.wide.s32 	%rd83, %r630, 4;
	add.s64 	%rd84, %rd2, %rd83;
	ld.global.v4.u32 	{%r631, %r632, %r633, %r634}, [%rd84];
	selp.b32 	%r635, %r588, %r586, %p201;
	shfl.sync.bfly.b32	%r636, %r635, 8, 31, -1;
	selp.b32 	%r508, %r586, %r636, %p201;
	selp.b32 	%r509, %r636, %r588, %p201;
	selp.b32 	%r637, %r589, %r587, %p201;
	shfl.sync.bfly.b32	%r638, %r637, 8, 31, -1;
	selp.b32 	%r516, %r587, %r638, %p201;
	selp.b32 	%r517, %r638, %r589, %p201;
	selp.b32 	%r639, %r603, %r601, %p201;
	shfl.sync.bfly.b32	%r640, %r639, 8, 31, -1;
	selp.b32 	%r524, %r601, %r640, %p201;
	selp.b32 	%r525, %r640, %r603, %p201;
	selp.b32 	%r641, %r604, %r602, %p201;
	shfl.sync.bfly.b32	%r642, %r641, 8, 31, -1;
	selp.b32 	%r532, %r602, %r642, %p201;
	selp.b32 	%r533, %r642, %r604, %p201;
	selp.b32 	%r643, %r618, %r616, %p201;
	shfl.sync.bfly.b32	%r644, %r643, 8, 31, -1;
	selp.b32 	%r540, %r616, %r644, %p201;
	selp.b32 	%r541, %r644, %r618, %p201;
	selp.b32 	%r645, %r619, %r617, %p201;
	shfl.sync.bfly.b32	%r646, %r645, 8, 31, -1;
	selp.b32 	%r548, %r617, %r646, %p201;
	selp.b32 	%r549, %r646, %r619, %p201;
	selp.b32 	%r647, %r633, %r631, %p201;
	shfl.sync.bfly.b32	%r648, %r647, 8, 31, -1;
	selp.b32 	%r556, %r631, %r648, %p201;
	selp.b32 	%r557, %r648, %r633, %p201;
	selp.b32 	%r649, %r634, %r632, %p201;
	shfl.sync.bfly.b32	%r650, %r649, 8, 31, -1;
	selp.b32 	%r564, %r632, %r650, %p201;
	selp.b32 	%r565, %r650, %r634, %p201;
	mov.u32 	%r566, 21520;
	// begin inline asm
	prmt.b32 %r507, %r508, %r509, %r566;
	// end inline asm
	mov.u32 	%r570, 30258;
	// begin inline asm
	prmt.b32 %r511, %r508, %r509, %r570;
	// end inline asm
	// begin inline asm
	prmt.b32 %r515, %r516, %r517, %r566;
	// end inline asm
	// begin inline asm
	prmt.b32 %r519, %r516, %r517, %r570;
	// end inline asm
	// begin inline asm
	prmt.b32 %r523, %r524, %r525, %r566;
	// end inline asm
	// begin inline asm
	prmt.b32 %r527, %r524, %r525, %r570;
	// end inline asm
	// begin inline asm
	prmt.b32 %r531, %r532, %r533, %r566;
	// end inline asm
	// begin inline asm
	prmt.b32 %r535, %r532, %r533, %r570;
	// end inline asm
	// begin inline asm
	prmt.b32 %r539, %r540, %r541, %r566;
	// end inline asm
	// begin inline asm
	prmt.b32 %r543, %r540, %r541, %r570;
	// end inline asm
	// begin inline asm
	prmt.b32 %r547, %r548, %r549, %r566;
	// end inline asm
	// begin inline asm
	prmt.b32 %r551, %r548, %r549, %r570;
	// end inline asm
	// begin inline asm
	prmt.b32 %r555, %r556, %r557, %r566;
	// end inline asm
	// begin inline asm
	prmt.b32 %r559, %r556, %r557, %r570;
	// end inline asm
	// begin inline asm
	prmt.b32 %r563, %r564, %r565, %r566;
	// end inline asm
	// begin inline asm
	prmt.b32 %r567, %r564, %r565, %r570;
	// end inline asm
	st.shared.u32 	[%rd10], %r507;
	st.shared.u32 	[%rd11], %r511;
	st.shared.u32 	[%rd12], %r515;
	st.shared.u32 	[%rd13], %r519;
	st.shared.u32 	[%rd14], %r523;
	st.shared.u32 	[%rd15], %r527;
	st.shared.u32 	[%rd16], %r531;
	st.shared.u32 	[%rd17], %r535;
	st.shared.u32 	[%rd18], %r539;
	st.shared.u32 	[%rd19], %r543;
	st.shared.u32 	[%rd20], %r547;
	st.shared.u32 	[%rd21], %r551;
	st.shared.u32 	[%rd22], %r555;
	st.shared.u32 	[%rd23], %r559;
	st.shared.u32 	[%rd24], %r563;
	st.shared.u32 	[%rd25], %r567;
	bar.sync 	0;
	mov.u32 	%r7973, 256;
	mov.u64 	%rd145, %rd47;
$L__BB0_84:                             // %L11321
                                        //   Parent Loop BB0_83 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	add.s64 	%rd85, %rd145, %rd33;
	ld.shared.u32 	%r7835, [%rd85];
	add.s64 	%rd86, %rd145, %rd32;
	ld.shared.u32 	%r7836, [%rd86];
	add.s64 	%rd87, %rd145, %rd31;
	ld.shared.u32 	%r7837, [%rd87];
	add.s64 	%rd88, %rd145, %rd30;
	ld.shared.u32 	%r7838, [%rd88];
	// begin inline asm
	mov.b32 %r656, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r667, {%rs1078, %rs1078};
	// end inline asm
	xor.b32  	%r655, %r7835, -2004318072;
	mov.u32 	%r654, 983055;
	// begin inline asm
	lop3.b32 %r653, %r654, %r655, %r656, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r657, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r658, %r656, %r657;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r661, %r653, %r658;
	// end inline asm
	mov.u32 	%r665, 15728880;
	// begin inline asm
	lop3.b32 %r664, %r665, %r655, %r667, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r668, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r669, %r667, %r668;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r672, %r664, %r669;
	// end inline asm
	shr.u32 	%r677, %r655, 8;
	// begin inline asm
	lop3.b32 %r675, %r654, %r677, %r656, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r679, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r680, %r656, %r679;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r683, %r675, %r680;
	// end inline asm
	// begin inline asm
	lop3.b32 %r686, %r665, %r677, %r667, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r690, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r691, %r667, %r690;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r694, %r686, %r691;
	// end inline asm
	// begin inline asm
	mov.b32 %r702, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r713, {%rs1078, %rs1078};
	// end inline asm
	xor.b32  	%r701, %r7836, -2004318072;
	// begin inline asm
	lop3.b32 %r699, %r654, %r701, %r702, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r703, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r704, %r702, %r703;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r707, %r699, %r704;
	// end inline asm
	// begin inline asm
	lop3.b32 %r710, %r665, %r701, %r713, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r714, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r715, %r713, %r714;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r718, %r710, %r715;
	// end inline asm
	shr.u32 	%r723, %r701, 8;
	// begin inline asm
	lop3.b32 %r721, %r654, %r723, %r702, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r725, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r726, %r702, %r725;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r729, %r721, %r726;
	// end inline asm
	// begin inline asm
	lop3.b32 %r732, %r665, %r723, %r713, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r736, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r737, %r713, %r736;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r740, %r732, %r737;
	// end inline asm
	// begin inline asm
	mov.b32 %r748, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r759, {%rs1078, %rs1078};
	// end inline asm
	xor.b32  	%r747, %r7837, -2004318072;
	// begin inline asm
	lop3.b32 %r745, %r654, %r747, %r748, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r749, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r750, %r748, %r749;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r753, %r745, %r750;
	// end inline asm
	// begin inline asm
	lop3.b32 %r756, %r665, %r747, %r759, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r760, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r761, %r759, %r760;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r764, %r756, %r761;
	// end inline asm
	shr.u32 	%r769, %r747, 8;
	// begin inline asm
	lop3.b32 %r767, %r654, %r769, %r748, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r771, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r772, %r748, %r771;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r775, %r767, %r772;
	// end inline asm
	// begin inline asm
	lop3.b32 %r778, %r665, %r769, %r759, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r782, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r783, %r759, %r782;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r786, %r778, %r783;
	// end inline asm
	// begin inline asm
	mov.b32 %r794, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r805, {%rs1078, %rs1078};
	// end inline asm
	xor.b32  	%r793, %r7838, -2004318072;
	// begin inline asm
	lop3.b32 %r791, %r654, %r793, %r794, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r795, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r796, %r794, %r795;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r799, %r791, %r796;
	// end inline asm
	// begin inline asm
	lop3.b32 %r802, %r665, %r793, %r805, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r806, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r807, %r805, %r806;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r810, %r802, %r807;
	// end inline asm
	shr.u32 	%r815, %r793, 8;
	// begin inline asm
	lop3.b32 %r813, %r654, %r815, %r794, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r817, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r818, %r794, %r817;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r821, %r813, %r818;
	// end inline asm
	// begin inline asm
	lop3.b32 %r824, %r665, %r815, %r805, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r828, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r829, %r805, %r828;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r832, %r824, %r829;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r835, %r253;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r837, %r835, %r661;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r840, %r253;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r842, %r840, %r672;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r845, %r253;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r847, %r845, %r683;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r850, %r253;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r852, %r850, %r694;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r855, %r253;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r857, %r855, %r707;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r860, %r253;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r862, %r860, %r718;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r865, %r253;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r867, %r865, %r729;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r870, %r253;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r872, %r870, %r740;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r875, %r253;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r877, %r875, %r753;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r880, %r253;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r882, %r880, %r764;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r885, %r253;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r887, %r885, %r775;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r890, %r253;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r892, %r890, %r786;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r895, %r253;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r897, %r895, %r799;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r900, %r253;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r902, %r900, %r810;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r905, %r253;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r907, %r905, %r821;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r910, %r253;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r912, %r910, %r832;
	// end inline asm
	// begin inline asm
	mov.b32 %r920, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r931, {%rs1078, %rs1078};
	// end inline asm
	xor.b32  	%r919, %r7974, -2004318072;
	// begin inline asm
	lop3.b32 %r917, %r654, %r919, %r920, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r921, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r922, %r920, %r921;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r925, %r917, %r922;
	// end inline asm
	// begin inline asm
	lop3.b32 %r928, %r665, %r919, %r931, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r932, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r933, %r931, %r932;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r936, %r928, %r933;
	// end inline asm
	shr.u32 	%r941, %r919, 8;
	// begin inline asm
	lop3.b32 %r939, %r654, %r941, %r920, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r943, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r944, %r920, %r943;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r947, %r939, %r944;
	// end inline asm
	// begin inline asm
	lop3.b32 %r950, %r665, %r941, %r931, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r954, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r955, %r931, %r954;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r958, %r950, %r955;
	// end inline asm
	// begin inline asm
	mov.b32 %r966, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r977, {%rs1078, %rs1078};
	// end inline asm
	xor.b32  	%r965, %r7975, -2004318072;
	// begin inline asm
	lop3.b32 %r963, %r654, %r965, %r966, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r967, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r968, %r966, %r967;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r971, %r963, %r968;
	// end inline asm
	// begin inline asm
	lop3.b32 %r974, %r665, %r965, %r977, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r978, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r979, %r977, %r978;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r982, %r974, %r979;
	// end inline asm
	shr.u32 	%r987, %r965, 8;
	// begin inline asm
	lop3.b32 %r985, %r654, %r987, %r966, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r989, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r990, %r966, %r989;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r993, %r985, %r990;
	// end inline asm
	// begin inline asm
	lop3.b32 %r996, %r665, %r987, %r977, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1000, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1001, %r977, %r1000;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1004, %r996, %r1001;
	// end inline asm
	// begin inline asm
	mov.b32 %r1012, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r1023, {%rs1078, %rs1078};
	// end inline asm
	xor.b32  	%r1011, %r7980, -2004318072;
	// begin inline asm
	lop3.b32 %r1009, %r654, %r1011, %r1012, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1013, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1014, %r1012, %r1013;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1017, %r1009, %r1014;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1020, %r665, %r1011, %r1023, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1024, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1025, %r1023, %r1024;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1028, %r1020, %r1025;
	// end inline asm
	shr.u32 	%r1033, %r1011, 8;
	// begin inline asm
	lop3.b32 %r1031, %r654, %r1033, %r1012, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1035, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1036, %r1012, %r1035;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1039, %r1031, %r1036;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1042, %r665, %r1033, %r1023, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1046, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1047, %r1023, %r1046;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1050, %r1042, %r1047;
	// end inline asm
	// begin inline asm
	mov.b32 %r1058, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r1069, {%rs1078, %rs1078};
	// end inline asm
	xor.b32  	%r1057, %r7981, -2004318072;
	// begin inline asm
	lop3.b32 %r1055, %r654, %r1057, %r1058, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1059, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1060, %r1058, %r1059;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1063, %r1055, %r1060;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1066, %r665, %r1057, %r1069, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1070, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1071, %r1069, %r1070;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1074, %r1066, %r1071;
	// end inline asm
	shr.u32 	%r1079, %r1057, 8;
	// begin inline asm
	lop3.b32 %r1077, %r654, %r1079, %r1058, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1081, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1082, %r1058, %r1081;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1085, %r1077, %r1082;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1088, %r665, %r1079, %r1069, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1092, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1093, %r1069, %r1092;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1096, %r1088, %r1093;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1099, %r199, %r925, %r837;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1103, %r199, %r936, %r842;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1107, %r199, %r947, %r847;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1111, %r199, %r958, %r852;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1115, %r199, %r971, %r857;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1119, %r199, %r982, %r862;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1123, %r199, %r993, %r867;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1127, %r199, %r1004, %r872;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1131, %r199, %r1017, %r877;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1135, %r199, %r1028, %r882;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1139, %r199, %r1039, %r887;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1143, %r199, %r1050, %r892;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1147, %r199, %r1063, %r897;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1151, %r199, %r1074, %r902;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1155, %r199, %r1085, %r907;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1159, %r199, %r1096, %r912;
	// end inline asm
	// begin inline asm
	mov.b32 %r1168, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r1179, {%rs1078, %rs1078};
	// end inline asm
	xor.b32  	%r1167, %r7976, -2004318072;
	// begin inline asm
	lop3.b32 %r1165, %r654, %r1167, %r1168, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1169, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1170, %r1168, %r1169;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1173, %r1165, %r1170;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1176, %r665, %r1167, %r1179, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1180, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1181, %r1179, %r1180;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1184, %r1176, %r1181;
	// end inline asm
	shr.u32 	%r1189, %r1167, 8;
	// begin inline asm
	lop3.b32 %r1187, %r654, %r1189, %r1168, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1191, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1192, %r1168, %r1191;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1195, %r1187, %r1192;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1198, %r665, %r1189, %r1179, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1202, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1203, %r1179, %r1202;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1206, %r1198, %r1203;
	// end inline asm
	// begin inline asm
	mov.b32 %r1214, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r1225, {%rs1078, %rs1078};
	// end inline asm
	xor.b32  	%r1213, %r7977, -2004318072;
	// begin inline asm
	lop3.b32 %r1211, %r654, %r1213, %r1214, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1215, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1216, %r1214, %r1215;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1219, %r1211, %r1216;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1222, %r665, %r1213, %r1225, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1226, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1227, %r1225, %r1226;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1230, %r1222, %r1227;
	// end inline asm
	shr.u32 	%r1235, %r1213, 8;
	// begin inline asm
	lop3.b32 %r1233, %r654, %r1235, %r1214, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1237, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1238, %r1214, %r1237;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1241, %r1233, %r1238;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1244, %r665, %r1235, %r1225, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1248, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1249, %r1225, %r1248;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1252, %r1244, %r1249;
	// end inline asm
	// begin inline asm
	mov.b32 %r1260, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r1271, {%rs1078, %rs1078};
	// end inline asm
	xor.b32  	%r1259, %r7982, -2004318072;
	// begin inline asm
	lop3.b32 %r1257, %r654, %r1259, %r1260, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1261, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1262, %r1260, %r1261;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1265, %r1257, %r1262;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1268, %r665, %r1259, %r1271, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1272, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1273, %r1271, %r1272;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1276, %r1268, %r1273;
	// end inline asm
	shr.u32 	%r1281, %r1259, 8;
	// begin inline asm
	lop3.b32 %r1279, %r654, %r1281, %r1260, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1283, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1284, %r1260, %r1283;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1287, %r1279, %r1284;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1290, %r665, %r1281, %r1271, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1294, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1295, %r1271, %r1294;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1298, %r1290, %r1295;
	// end inline asm
	// begin inline asm
	mov.b32 %r1306, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r1317, {%rs1078, %rs1078};
	// end inline asm
	xor.b32  	%r1305, %r7983, -2004318072;
	// begin inline asm
	lop3.b32 %r1303, %r654, %r1305, %r1306, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1307, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1308, %r1306, %r1307;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1311, %r1303, %r1308;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1314, %r665, %r1305, %r1317, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1318, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1319, %r1317, %r1318;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1322, %r1314, %r1319;
	// end inline asm
	shr.u32 	%r1327, %r1305, 8;
	// begin inline asm
	lop3.b32 %r1325, %r654, %r1327, %r1306, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1329, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1330, %r1306, %r1329;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1333, %r1325, %r1330;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1336, %r665, %r1327, %r1317, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1340, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1341, %r1317, %r1340;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1344, %r1336, %r1341;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1347, %r217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1349, %r1347, %r1173, %r1099;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1353, %r217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1355, %r1353, %r1184, %r1103;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1359, %r217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1361, %r1359, %r1195, %r1107;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1365, %r217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1367, %r1365, %r1206, %r1111;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1371, %r217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1373, %r1371, %r1219, %r1115;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1377, %r217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1379, %r1377, %r1230, %r1119;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1383, %r217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1385, %r1383, %r1241, %r1123;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1389, %r217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1391, %r1389, %r1252, %r1127;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1395, %r217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1397, %r1395, %r1265, %r1131;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1401, %r217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1403, %r1401, %r1276, %r1135;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1407, %r217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1409, %r1407, %r1287, %r1139;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1413, %r217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1415, %r1413, %r1298, %r1143;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1419, %r217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1421, %r1419, %r1311, %r1147;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1425, %r217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1427, %r1425, %r1322, %r1151;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1431, %r217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1433, %r1431, %r1333, %r1155;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1437, %r217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1439, %r1437, %r1344, %r1159;
	// end inline asm
	// begin inline asm
	mov.b32 %r1448, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r1459, {%rs1078, %rs1078};
	// end inline asm
	xor.b32  	%r1447, %r7978, -2004318072;
	// begin inline asm
	lop3.b32 %r1445, %r654, %r1447, %r1448, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1449, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1450, %r1448, %r1449;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1453, %r1445, %r1450;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1456, %r665, %r1447, %r1459, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1460, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1461, %r1459, %r1460;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1464, %r1456, %r1461;
	// end inline asm
	shr.u32 	%r1469, %r1447, 8;
	// begin inline asm
	lop3.b32 %r1467, %r654, %r1469, %r1448, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1471, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1472, %r1448, %r1471;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1475, %r1467, %r1472;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1478, %r665, %r1469, %r1459, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1482, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1483, %r1459, %r1482;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1486, %r1478, %r1483;
	// end inline asm
	// begin inline asm
	mov.b32 %r1494, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r1505, {%rs1078, %rs1078};
	// end inline asm
	xor.b32  	%r1493, %r7979, -2004318072;
	// begin inline asm
	lop3.b32 %r1491, %r654, %r1493, %r1494, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1495, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1496, %r1494, %r1495;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1499, %r1491, %r1496;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1502, %r665, %r1493, %r1505, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1506, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1507, %r1505, %r1506;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1510, %r1502, %r1507;
	// end inline asm
	shr.u32 	%r1515, %r1493, 8;
	// begin inline asm
	lop3.b32 %r1513, %r654, %r1515, %r1494, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1517, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1518, %r1494, %r1517;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1521, %r1513, %r1518;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1524, %r665, %r1515, %r1505, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1528, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1529, %r1505, %r1528;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1532, %r1524, %r1529;
	// end inline asm
	// begin inline asm
	mov.b32 %r1540, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r1551, {%rs1078, %rs1078};
	// end inline asm
	xor.b32  	%r1539, %r7984, -2004318072;
	// begin inline asm
	lop3.b32 %r1537, %r654, %r1539, %r1540, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1541, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1542, %r1540, %r1541;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1545, %r1537, %r1542;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1548, %r665, %r1539, %r1551, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1552, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1553, %r1551, %r1552;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1556, %r1548, %r1553;
	// end inline asm
	shr.u32 	%r1561, %r1539, 8;
	// begin inline asm
	lop3.b32 %r1559, %r654, %r1561, %r1540, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1563, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1564, %r1540, %r1563;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1567, %r1559, %r1564;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1570, %r665, %r1561, %r1551, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1574, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1575, %r1551, %r1574;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1578, %r1570, %r1575;
	// end inline asm
	// begin inline asm
	mov.b32 %r1586, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r1597, {%rs1078, %rs1078};
	// end inline asm
	xor.b32  	%r1585, %r7985, -2004318072;
	// begin inline asm
	lop3.b32 %r1583, %r654, %r1585, %r1586, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1587, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1588, %r1586, %r1587;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1591, %r1583, %r1588;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1594, %r665, %r1585, %r1597, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1598, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1599, %r1597, %r1598;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1602, %r1594, %r1599;
	// end inline asm
	shr.u32 	%r1607, %r1585, 8;
	// begin inline asm
	lop3.b32 %r1605, %r654, %r1607, %r1586, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1609, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1610, %r1586, %r1609;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1613, %r1605, %r1610;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1616, %r665, %r1607, %r1597, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1620, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1621, %r1597, %r1620;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1624, %r1616, %r1621;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1698, %r235, %r1453, %r1349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1695, %r235, %r1464, %r1355;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1707, %r235, %r1475, %r1361;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1704, %r235, %r1486, %r1367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1716, %r235, %r1499, %r1373;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1713, %r235, %r1510, %r1379;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1725, %r235, %r1521, %r1385;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1722, %r235, %r1532, %r1391;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1734, %r235, %r1545, %r1397;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1731, %r235, %r1556, %r1403;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1743, %r235, %r1567, %r1409;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1740, %r235, %r1578, %r1415;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1752, %r235, %r1591, %r1421;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1749, %r235, %r1602, %r1427;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1761, %r235, %r1613, %r1433;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1758, %r235, %r1624, %r1439;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1691, %r259;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1693, %r1691, %r1695;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1696, %r256, %r1698, %r1693;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1700, %r259;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1702, %r1700, %r1704;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1705, %r256, %r1707, %r1702;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1709, %r259;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1711, %r1709, %r1713;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1714, %r256, %r1716, %r1711;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1718, %r259;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1720, %r1718, %r1722;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1723, %r256, %r1725, %r1720;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1727, %r259;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1729, %r1727, %r1731;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1732, %r256, %r1734, %r1729;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1736, %r259;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1738, %r1736, %r1740;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1741, %r256, %r1743, %r1738;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1745, %r259;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1747, %r1745, %r1749;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1750, %r256, %r1752, %r1747;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1754, %r259;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1756, %r1754, %r1758;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1759, %r256, %r1761, %r1756;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1763, %r259, %r1698;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1766, %r256, %r1695, %r1763;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1770, %r259, %r1707;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1773, %r256, %r1704, %r1770;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1777, %r259, %r1716;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1780, %r256, %r1713, %r1777;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1784, %r259, %r1725;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1787, %r256, %r1722, %r1784;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1791, %r259, %r1734;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1794, %r256, %r1731, %r1791;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1798, %r259, %r1743;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1801, %r256, %r1740, %r1798;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1805, %r259, %r1752;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1808, %r256, %r1749, %r1805;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1812, %r259, %r1761;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1815, %r256, %r1758, %r1812;
	// end inline asm
	mov.u32 	%r1827, 0;
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1906, %r1903}, {%r315, %r321, %r318, %r324}, {%r1696, %r1766}, {%r1827, %r1827};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1915, %r1912}, {%r315, %r321, %r318, %r324}, {%r1705, %r1773}, {%r1827, %r1827};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1924, %r1921}, {%r315, %r321, %r318, %r324}, {%r1714, %r1780}, {%r1827, %r1827};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1933, %r1930}, {%r315, %r321, %r318, %r324}, {%r1723, %r1787}, {%r1827, %r1827};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1942, %r1939}, {%r315, %r321, %r318, %r324}, {%r1732, %r1794}, {%r1827, %r1827};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1951, %r1948}, {%r315, %r321, %r318, %r324}, {%r1741, %r1801}, {%r1827, %r1827};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1960, %r1957}, {%r315, %r321, %r318, %r324}, {%r1750, %r1808}, {%r1827, %r1827};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1969, %r1966}, {%r315, %r321, %r318, %r324}, {%r1759, %r1815}, {%r1827, %r1827};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1899, %r362;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1901, %r1899, %r1903;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1904, %r359, %r1906, %r1901;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1908, %r362;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1910, %r1908, %r1912;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1913, %r359, %r1915, %r1910;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1917, %r362;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1919, %r1917, %r1921;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1922, %r359, %r1924, %r1919;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1926, %r362;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1928, %r1926, %r1930;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1931, %r359, %r1933, %r1928;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1935, %r362;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1937, %r1935, %r1939;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1940, %r359, %r1942, %r1937;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1944, %r362;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1946, %r1944, %r1948;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1949, %r359, %r1951, %r1946;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1953, %r362;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1955, %r1953, %r1957;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1958, %r359, %r1960, %r1955;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1962, %r362;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1964, %r1962, %r1966;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1967, %r359, %r1969, %r1964;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1971, %r362, %r1906;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1974, %r359, %r1903, %r1971;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1978, %r362, %r1915;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1981, %r359, %r1912, %r1978;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1985, %r362, %r1924;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1988, %r359, %r1921, %r1985;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1992, %r362, %r1933;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1995, %r359, %r1930, %r1992;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1999, %r362, %r1942;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2002, %r359, %r1939, %r1999;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2006, %r362, %r1951;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2009, %r359, %r1948, %r2006;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2013, %r362, %r1960;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2016, %r359, %r1957, %r2013;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2020, %r362, %r1969;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2023, %r359, %r1966, %r2020;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2027, %r2028}, {%r393, %r399, %r396, %r402}, {%r1904, %r1974}, {%r1827, %r1827};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2037, %r2038}, {%r393, %r399, %r396, %r402}, {%r1913, %r1981}, {%r1827, %r1827};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2047, %r2048}, {%r393, %r399, %r396, %r402}, {%r1922, %r1988}, {%r1827, %r1827};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2057, %r2058}, {%r393, %r399, %r396, %r402}, {%r1931, %r1995}, {%r1827, %r1827};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2067, %r2068}, {%r393, %r399, %r396, %r402}, {%r1940, %r2002}, {%r1827, %r1827};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2077, %r2078}, {%r393, %r399, %r396, %r402}, {%r1949, %r2009}, {%r1827, %r1827};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2087, %r2088}, {%r393, %r399, %r396, %r402}, {%r1958, %r2016}, {%r1827, %r1827};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2097, %r2098}, {%r393, %r399, %r396, %r402}, {%r1967, %r2023}, {%r1827, %r1827};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2107, %r104, %r2027;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2110, %r104, %r2028;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2113, %r104, %r2037;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2116, %r104, %r2038;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2119, %r104, %r2047;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2122, %r104, %r2048;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2125, %r104, %r2057;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2128, %r104, %r2058;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2131, %r104, %r2067;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2134, %r104, %r2068;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2137, %r104, %r2077;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2140, %r104, %r2078;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2143, %r104, %r2087;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2146, %r104, %r2088;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2149, %r104, %r2097;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2152, %r104, %r2098;
	// end inline asm
	mov.u16 	%rs199, -14592;
	// begin inline asm
	mov.b32 %r2155, {%rs199, %rs199};
	// end inline asm
	mov.u16 	%rs201, 18176;
	// begin inline asm
	mov.b32 %r2156, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2157, %r2107, %r2155;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2160, %r2157, %r2156;
	// end inline asm
	// begin inline asm
	mov.b32 %r2163, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r2164, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2165, %r2110, %r2163;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2168, %r2165, %r2164;
	// end inline asm
	// begin inline asm
	mov.b32 %r2171, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r2172, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2173, %r2113, %r2171;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2176, %r2173, %r2172;
	// end inline asm
	// begin inline asm
	mov.b32 %r2179, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r2180, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2181, %r2116, %r2179;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2184, %r2181, %r2180;
	// end inline asm
	// begin inline asm
	mov.b32 %r2187, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r2188, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2189, %r2119, %r2187;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2192, %r2189, %r2188;
	// end inline asm
	// begin inline asm
	mov.b32 %r2195, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r2196, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2197, %r2122, %r2195;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2200, %r2197, %r2196;
	// end inline asm
	// begin inline asm
	mov.b32 %r2203, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r2204, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2205, %r2125, %r2203;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2208, %r2205, %r2204;
	// end inline asm
	// begin inline asm
	mov.b32 %r2211, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r2212, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2213, %r2128, %r2211;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2216, %r2213, %r2212;
	// end inline asm
	// begin inline asm
	mov.b32 %r2219, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r2220, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2221, %r2131, %r2219;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2224, %r2221, %r2220;
	// end inline asm
	// begin inline asm
	mov.b32 %r2227, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r2228, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2229, %r2134, %r2227;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2232, %r2229, %r2228;
	// end inline asm
	// begin inline asm
	mov.b32 %r2235, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r2236, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2237, %r2137, %r2235;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2240, %r2237, %r2236;
	// end inline asm
	// begin inline asm
	mov.b32 %r2243, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r2244, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2245, %r2140, %r2243;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2248, %r2245, %r2244;
	// end inline asm
	// begin inline asm
	mov.b32 %r2251, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r2252, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2253, %r2143, %r2251;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2256, %r2253, %r2252;
	// end inline asm
	// begin inline asm
	mov.b32 %r2259, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r2260, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2261, %r2146, %r2259;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2264, %r2261, %r2260;
	// end inline asm
	// begin inline asm
	mov.b32 %r2267, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r2268, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2269, %r2149, %r2267;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2272, %r2269, %r2268;
	// end inline asm
	// begin inline asm
	mov.b32 %r2275, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r2276, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2277, %r2152, %r2275;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2280, %r2277, %r2276;
	// end inline asm
	// begin inline asm
	mov.b32 %r2286, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r2284, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2285, %r2286, %r2284;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2288, %r2160, %r2285;
	// end inline asm
	// begin inline asm
	mov.b32 %r2291, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2292, %r2286, %r2291;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2295, %r2168, %r2292;
	// end inline asm
	// begin inline asm
	mov.b32 %r2298, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2299, %r2286, %r2298;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2302, %r2176, %r2299;
	// end inline asm
	// begin inline asm
	mov.b32 %r2305, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2306, %r2286, %r2305;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2309, %r2184, %r2306;
	// end inline asm
	mov.u32 	%r2315, 25152;
	// begin inline asm
	prmt.b32 %r2312, %r2288, %r2302, %r2315;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2316, %r2295, %r2309, %r2315;
	// end inline asm
	shl.b32 	%r2323, %r2316, 4;
	mov.u32 	%r2321, 252645135;
	// begin inline asm
	lop3.b32 %r2320, %r2321, %r2312, %r2323, 202;
	// end inline asm
	xor.b32  	%r7839, %r2320, -2004318072;
	// begin inline asm
	mov.b32 %r2327, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r2325, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2326, %r2327, %r2325;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2329, %r2192, %r2326;
	// end inline asm
	// begin inline asm
	mov.b32 %r2332, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2333, %r2327, %r2332;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2336, %r2200, %r2333;
	// end inline asm
	// begin inline asm
	mov.b32 %r2339, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2340, %r2327, %r2339;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2343, %r2208, %r2340;
	// end inline asm
	// begin inline asm
	mov.b32 %r2346, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2347, %r2327, %r2346;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2350, %r2216, %r2347;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2353, %r2329, %r2343, %r2315;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2357, %r2336, %r2350, %r2315;
	// end inline asm
	shl.b32 	%r2364, %r2357, 4;
	// begin inline asm
	lop3.b32 %r2361, %r2321, %r2353, %r2364, 202;
	// end inline asm
	xor.b32  	%r7840, %r2361, -2004318072;
	// begin inline asm
	mov.b32 %r2368, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r2366, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2367, %r2368, %r2366;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2370, %r2224, %r2367;
	// end inline asm
	// begin inline asm
	mov.b32 %r2373, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2374, %r2368, %r2373;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2377, %r2232, %r2374;
	// end inline asm
	// begin inline asm
	mov.b32 %r2380, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2381, %r2368, %r2380;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2384, %r2240, %r2381;
	// end inline asm
	// begin inline asm
	mov.b32 %r2387, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2388, %r2368, %r2387;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2391, %r2248, %r2388;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2394, %r2370, %r2384, %r2315;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2398, %r2377, %r2391, %r2315;
	// end inline asm
	shl.b32 	%r2405, %r2398, 4;
	// begin inline asm
	lop3.b32 %r2402, %r2321, %r2394, %r2405, 202;
	// end inline asm
	xor.b32  	%r7841, %r2402, -2004318072;
	// begin inline asm
	mov.b32 %r2409, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r2407, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2408, %r2409, %r2407;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2411, %r2256, %r2408;
	// end inline asm
	// begin inline asm
	mov.b32 %r2414, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2415, %r2409, %r2414;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2418, %r2264, %r2415;
	// end inline asm
	// begin inline asm
	mov.b32 %r2421, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2422, %r2409, %r2421;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2425, %r2272, %r2422;
	// end inline asm
	// begin inline asm
	mov.b32 %r2428, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2429, %r2409, %r2428;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2432, %r2280, %r2429;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2435, %r2411, %r2425, %r2315;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2439, %r2418, %r2432, %r2315;
	// end inline asm
	shl.b32 	%r2446, %r2439, 4;
	// begin inline asm
	lop3.b32 %r2443, %r2321, %r2435, %r2446, 202;
	// end inline asm
	xor.b32  	%r7842, %r2443, -2004318072;
	add.s64 	%rd89, %rd145, %rd29;
	st.shared.u32 	[%rd89], %r7839;
	add.s64 	%rd90, %rd145, %rd28;
	st.shared.u32 	[%rd90], %r7840;
	add.s64 	%rd91, %rd145, %rd27;
	st.shared.u32 	[%rd91], %r7841;
	add.s64 	%rd92, %rd145, %rd26;
	st.shared.u32 	[%rd92], %r7842;
	ld.shared.u32 	%r7974, [%rd85];
	ld.shared.u32 	%r7975, [%rd86];
	ld.shared.u32 	%r7980, [%rd87];
	ld.shared.u32 	%r7981, [%rd88];
	// begin inline asm
	mov.b32 %r2452, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r2463, {%rs1078, %rs1078};
	// end inline asm
	xor.b32  	%r2451, %r7974, -2004318072;
	// begin inline asm
	lop3.b32 %r2449, %r654, %r2451, %r2452, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2453, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2454, %r2452, %r2453;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2457, %r2449, %r2454;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2460, %r665, %r2451, %r2463, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2464, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2465, %r2463, %r2464;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2468, %r2460, %r2465;
	// end inline asm
	shr.u32 	%r2473, %r2451, 8;
	// begin inline asm
	lop3.b32 %r2471, %r654, %r2473, %r2452, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2475, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2476, %r2452, %r2475;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2479, %r2471, %r2476;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2482, %r665, %r2473, %r2463, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2486, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2487, %r2463, %r2486;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2490, %r2482, %r2487;
	// end inline asm
	// begin inline asm
	mov.b32 %r2498, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r2509, {%rs1078, %rs1078};
	// end inline asm
	xor.b32  	%r2497, %r7975, -2004318072;
	// begin inline asm
	lop3.b32 %r2495, %r654, %r2497, %r2498, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2499, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2500, %r2498, %r2499;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2503, %r2495, %r2500;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2506, %r665, %r2497, %r2509, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2510, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2511, %r2509, %r2510;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2514, %r2506, %r2511;
	// end inline asm
	shr.u32 	%r2519, %r2497, 8;
	// begin inline asm
	lop3.b32 %r2517, %r654, %r2519, %r2498, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2521, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2522, %r2498, %r2521;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2525, %r2517, %r2522;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2528, %r665, %r2519, %r2509, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2532, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2533, %r2509, %r2532;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2536, %r2528, %r2533;
	// end inline asm
	// begin inline asm
	mov.b32 %r2544, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r2555, {%rs1078, %rs1078};
	// end inline asm
	xor.b32  	%r2543, %r7980, -2004318072;
	// begin inline asm
	lop3.b32 %r2541, %r654, %r2543, %r2544, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2545, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2546, %r2544, %r2545;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2549, %r2541, %r2546;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2552, %r665, %r2543, %r2555, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2556, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2557, %r2555, %r2556;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2560, %r2552, %r2557;
	// end inline asm
	shr.u32 	%r2565, %r2543, 8;
	// begin inline asm
	lop3.b32 %r2563, %r654, %r2565, %r2544, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2567, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2568, %r2544, %r2567;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2571, %r2563, %r2568;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2574, %r665, %r2565, %r2555, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2578, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2579, %r2555, %r2578;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2582, %r2574, %r2579;
	// end inline asm
	// begin inline asm
	mov.b32 %r2590, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r2601, {%rs1078, %rs1078};
	// end inline asm
	xor.b32  	%r2589, %r7981, -2004318072;
	// begin inline asm
	lop3.b32 %r2587, %r654, %r2589, %r2590, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2591, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2592, %r2590, %r2591;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2595, %r2587, %r2592;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2598, %r665, %r2589, %r2601, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2602, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2603, %r2601, %r2602;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2606, %r2598, %r2603;
	// end inline asm
	shr.u32 	%r2611, %r2589, 8;
	// begin inline asm
	lop3.b32 %r2609, %r654, %r2611, %r2590, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2613, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2614, %r2590, %r2613;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2617, %r2609, %r2614;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2620, %r665, %r2611, %r2601, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2624, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2625, %r2601, %r2624;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2628, %r2620, %r2625;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2631, %r253;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2633, %r2631, %r2457;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2636, %r253;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2638, %r2636, %r2468;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2641, %r253;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2643, %r2641, %r2479;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2646, %r253;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2648, %r2646, %r2490;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2651, %r253;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2653, %r2651, %r2503;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2656, %r253;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2658, %r2656, %r2514;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2661, %r253;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2663, %r2661, %r2525;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2666, %r253;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2668, %r2666, %r2536;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2671, %r253;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2673, %r2671, %r2549;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2676, %r253;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2678, %r2676, %r2560;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2681, %r253;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2683, %r2681, %r2571;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2686, %r253;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2688, %r2686, %r2582;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2691, %r253;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2693, %r2691, %r2595;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2696, %r253;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2698, %r2696, %r2606;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2701, %r253;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2703, %r2701, %r2617;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2706, %r253;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2708, %r2706, %r2628;
	// end inline asm
	// begin inline asm
	mov.b32 %r2716, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r2727, {%rs1078, %rs1078};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2713, %r654, %r1167, %r2716, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2717, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2718, %r2716, %r2717;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2721, %r2713, %r2718;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2724, %r665, %r1167, %r2727, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2728, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2729, %r2727, %r2728;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2732, %r2724, %r2729;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2735, %r654, %r1189, %r2716, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2739, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2740, %r2716, %r2739;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2743, %r2735, %r2740;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2746, %r665, %r1189, %r2727, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2750, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2751, %r2727, %r2750;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2754, %r2746, %r2751;
	// end inline asm
	// begin inline asm
	mov.b32 %r2762, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r2773, {%rs1078, %rs1078};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2759, %r654, %r1213, %r2762, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2763, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2764, %r2762, %r2763;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2767, %r2759, %r2764;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2770, %r665, %r1213, %r2773, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2774, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2775, %r2773, %r2774;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2778, %r2770, %r2775;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2781, %r654, %r1235, %r2762, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2785, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2786, %r2762, %r2785;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2789, %r2781, %r2786;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2792, %r665, %r1235, %r2773, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2796, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2797, %r2773, %r2796;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2800, %r2792, %r2797;
	// end inline asm
	// begin inline asm
	mov.b32 %r2808, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r2819, {%rs1078, %rs1078};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2805, %r654, %r1259, %r2808, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2809, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2810, %r2808, %r2809;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2813, %r2805, %r2810;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2816, %r665, %r1259, %r2819, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2820, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2821, %r2819, %r2820;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2824, %r2816, %r2821;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2827, %r654, %r1281, %r2808, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2831, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2832, %r2808, %r2831;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2835, %r2827, %r2832;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2838, %r665, %r1281, %r2819, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2842, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2843, %r2819, %r2842;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2846, %r2838, %r2843;
	// end inline asm
	// begin inline asm
	mov.b32 %r2854, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r2865, {%rs1078, %rs1078};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2851, %r654, %r1305, %r2854, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2855, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2856, %r2854, %r2855;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2859, %r2851, %r2856;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2862, %r665, %r1305, %r2865, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2866, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2867, %r2865, %r2866;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2870, %r2862, %r2867;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2873, %r654, %r1327, %r2854, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2877, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2878, %r2854, %r2877;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2881, %r2873, %r2878;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2884, %r665, %r1327, %r2865, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2888, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2889, %r2865, %r2888;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2892, %r2884, %r2889;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2895, %r199, %r2721, %r2633;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2899, %r199, %r2732, %r2638;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2903, %r199, %r2743, %r2643;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2907, %r199, %r2754, %r2648;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2911, %r199, %r2767, %r2653;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2915, %r199, %r2778, %r2658;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2919, %r199, %r2789, %r2663;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2923, %r199, %r2800, %r2668;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2927, %r199, %r2813, %r2673;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2931, %r199, %r2824, %r2678;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2935, %r199, %r2835, %r2683;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2939, %r199, %r2846, %r2688;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2943, %r199, %r2859, %r2693;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2947, %r199, %r2870, %r2698;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2951, %r199, %r2881, %r2703;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2955, %r199, %r2892, %r2708;
	// end inline asm
	// begin inline asm
	mov.b32 %r2964, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r2975, {%rs1078, %rs1078};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2961, %r654, %r1447, %r2964, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2965, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2966, %r2964, %r2965;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2969, %r2961, %r2966;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2972, %r665, %r1447, %r2975, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2976, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2977, %r2975, %r2976;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2980, %r2972, %r2977;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2983, %r654, %r1469, %r2964, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2987, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2988, %r2964, %r2987;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2991, %r2983, %r2988;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2994, %r665, %r1469, %r2975, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2998, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2999, %r2975, %r2998;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3002, %r2994, %r2999;
	// end inline asm
	// begin inline asm
	mov.b32 %r3010, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r3021, {%rs1078, %rs1078};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3007, %r654, %r1493, %r3010, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3011, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3012, %r3010, %r3011;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3015, %r3007, %r3012;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3018, %r665, %r1493, %r3021, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3022, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3023, %r3021, %r3022;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3026, %r3018, %r3023;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3029, %r654, %r1515, %r3010, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3033, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3034, %r3010, %r3033;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3037, %r3029, %r3034;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3040, %r665, %r1515, %r3021, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3044, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3045, %r3021, %r3044;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3048, %r3040, %r3045;
	// end inline asm
	// begin inline asm
	mov.b32 %r3056, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r3067, {%rs1078, %rs1078};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3053, %r654, %r1539, %r3056, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3057, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3058, %r3056, %r3057;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3061, %r3053, %r3058;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3064, %r665, %r1539, %r3067, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3068, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3069, %r3067, %r3068;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3072, %r3064, %r3069;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3075, %r654, %r1561, %r3056, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3079, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3080, %r3056, %r3079;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3083, %r3075, %r3080;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3086, %r665, %r1561, %r3067, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3090, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3091, %r3067, %r3090;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3094, %r3086, %r3091;
	// end inline asm
	// begin inline asm
	mov.b32 %r3102, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r3113, {%rs1078, %rs1078};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3099, %r654, %r1585, %r3102, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3103, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3104, %r3102, %r3103;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3107, %r3099, %r3104;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3110, %r665, %r1585, %r3113, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3114, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3115, %r3113, %r3114;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3118, %r3110, %r3115;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3121, %r654, %r1607, %r3102, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3125, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3126, %r3102, %r3125;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3129, %r3121, %r3126;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3132, %r665, %r1607, %r3113, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3136, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3137, %r3113, %r3136;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3140, %r3132, %r3137;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3143, %r217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3145, %r3143, %r2969, %r2895;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3149, %r217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3151, %r3149, %r2980, %r2899;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3155, %r217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3157, %r3155, %r2991, %r2903;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3161, %r217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3163, %r3161, %r3002, %r2907;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3167, %r217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3169, %r3167, %r3015, %r2911;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3173, %r217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3175, %r3173, %r3026, %r2915;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3179, %r217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3181, %r3179, %r3037, %r2919;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3185, %r217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3187, %r3185, %r3048, %r2923;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3191, %r217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3193, %r3191, %r3061, %r2927;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3197, %r217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3199, %r3197, %r3072, %r2931;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3203, %r217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3205, %r3203, %r3083, %r2935;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3209, %r217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3211, %r3209, %r3094, %r2939;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3215, %r217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3217, %r3215, %r3107, %r2943;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3221, %r217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3223, %r3221, %r3118, %r2947;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3227, %r217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3229, %r3227, %r3129, %r2951;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3233, %r217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3235, %r3233, %r3140, %r2955;
	// end inline asm
	// begin inline asm
	mov.b32 %r3244, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r3255, {%rs1078, %rs1078};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3241, %r654, %r655, %r3244, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3245, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3246, %r3244, %r3245;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3249, %r3241, %r3246;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3252, %r665, %r655, %r3255, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3256, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3257, %r3255, %r3256;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3260, %r3252, %r3257;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3263, %r654, %r677, %r3244, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3267, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3268, %r3244, %r3267;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3271, %r3263, %r3268;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3274, %r665, %r677, %r3255, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3278, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3279, %r3255, %r3278;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3282, %r3274, %r3279;
	// end inline asm
	// begin inline asm
	mov.b32 %r3290, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r3301, {%rs1078, %rs1078};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3287, %r654, %r701, %r3290, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3291, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3292, %r3290, %r3291;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3295, %r3287, %r3292;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3298, %r665, %r701, %r3301, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3302, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3303, %r3301, %r3302;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3306, %r3298, %r3303;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3309, %r654, %r723, %r3290, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3313, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3314, %r3290, %r3313;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3317, %r3309, %r3314;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3320, %r665, %r723, %r3301, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3324, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3325, %r3301, %r3324;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3328, %r3320, %r3325;
	// end inline asm
	// begin inline asm
	mov.b32 %r3336, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r3347, {%rs1078, %rs1078};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3333, %r654, %r747, %r3336, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3337, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3338, %r3336, %r3337;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3341, %r3333, %r3338;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3344, %r665, %r747, %r3347, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3348, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3349, %r3347, %r3348;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3352, %r3344, %r3349;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3355, %r654, %r769, %r3336, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3359, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3360, %r3336, %r3359;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3363, %r3355, %r3360;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3366, %r665, %r769, %r3347, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3370, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3371, %r3347, %r3370;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3374, %r3366, %r3371;
	// end inline asm
	// begin inline asm
	mov.b32 %r3382, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r3393, {%rs1078, %rs1078};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3379, %r654, %r793, %r3382, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3383, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3384, %r3382, %r3383;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3387, %r3379, %r3384;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3390, %r665, %r793, %r3393, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3394, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3395, %r3393, %r3394;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3398, %r3390, %r3395;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3401, %r654, %r815, %r3382, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3405, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3406, %r3382, %r3405;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3409, %r3401, %r3406;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3412, %r665, %r815, %r3393, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3416, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3417, %r3393, %r3416;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3420, %r3412, %r3417;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3494, %r235, %r3249, %r3145;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3491, %r235, %r3260, %r3151;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3503, %r235, %r3271, %r3157;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3500, %r235, %r3282, %r3163;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3512, %r235, %r3295, %r3169;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3509, %r235, %r3306, %r3175;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3521, %r235, %r3317, %r3181;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3518, %r235, %r3328, %r3187;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3530, %r235, %r3341, %r3193;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3527, %r235, %r3352, %r3199;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3539, %r235, %r3363, %r3205;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3536, %r235, %r3374, %r3211;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3548, %r235, %r3387, %r3217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3545, %r235, %r3398, %r3223;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3557, %r235, %r3409, %r3229;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3554, %r235, %r3420, %r3235;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3487, %r259;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3489, %r3487, %r3491;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3492, %r256, %r3494, %r3489;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3496, %r259;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3498, %r3496, %r3500;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3501, %r256, %r3503, %r3498;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3505, %r259;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3507, %r3505, %r3509;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3510, %r256, %r3512, %r3507;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3514, %r259;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3516, %r3514, %r3518;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3519, %r256, %r3521, %r3516;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3523, %r259;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3525, %r3523, %r3527;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3528, %r256, %r3530, %r3525;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3532, %r259;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3534, %r3532, %r3536;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3537, %r256, %r3539, %r3534;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3541, %r259;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3543, %r3541, %r3545;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3546, %r256, %r3548, %r3543;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3550, %r259;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3552, %r3550, %r3554;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3555, %r256, %r3557, %r3552;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3559, %r259, %r3494;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3562, %r256, %r3491, %r3559;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3566, %r259, %r3503;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3569, %r256, %r3500, %r3566;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3573, %r259, %r3512;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3576, %r256, %r3509, %r3573;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3580, %r259, %r3521;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3583, %r256, %r3518, %r3580;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3587, %r259, %r3530;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3590, %r256, %r3527, %r3587;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3594, %r259, %r3539;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3597, %r256, %r3536, %r3594;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3601, %r259, %r3548;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3604, %r256, %r3545, %r3601;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3608, %r259, %r3557;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3611, %r256, %r3554, %r3608;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3702, %r3699}, {%r315, %r321, %r318, %r324}, {%r3492, %r3562}, {%r1827, %r1827};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3711, %r3708}, {%r315, %r321, %r318, %r324}, {%r3501, %r3569}, {%r1827, %r1827};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3720, %r3717}, {%r315, %r321, %r318, %r324}, {%r3510, %r3576}, {%r1827, %r1827};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3729, %r3726}, {%r315, %r321, %r318, %r324}, {%r3519, %r3583}, {%r1827, %r1827};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3738, %r3735}, {%r315, %r321, %r318, %r324}, {%r3528, %r3590}, {%r1827, %r1827};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3747, %r3744}, {%r315, %r321, %r318, %r324}, {%r3537, %r3597}, {%r1827, %r1827};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3756, %r3753}, {%r315, %r321, %r318, %r324}, {%r3546, %r3604}, {%r1827, %r1827};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3765, %r3762}, {%r315, %r321, %r318, %r324}, {%r3555, %r3611}, {%r1827, %r1827};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3695, %r362;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3697, %r3695, %r3699;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3700, %r359, %r3702, %r3697;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3704, %r362;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3706, %r3704, %r3708;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3709, %r359, %r3711, %r3706;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3713, %r362;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3715, %r3713, %r3717;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3718, %r359, %r3720, %r3715;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3722, %r362;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3724, %r3722, %r3726;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3727, %r359, %r3729, %r3724;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3731, %r362;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3733, %r3731, %r3735;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3736, %r359, %r3738, %r3733;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3740, %r362;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3742, %r3740, %r3744;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3745, %r359, %r3747, %r3742;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3749, %r362;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3751, %r3749, %r3753;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3754, %r359, %r3756, %r3751;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3758, %r362;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3760, %r3758, %r3762;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3763, %r359, %r3765, %r3760;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3767, %r362, %r3702;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3770, %r359, %r3699, %r3767;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3774, %r362, %r3711;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3777, %r359, %r3708, %r3774;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3781, %r362, %r3720;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3784, %r359, %r3717, %r3781;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3788, %r362, %r3729;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3791, %r359, %r3726, %r3788;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3795, %r362, %r3738;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3798, %r359, %r3735, %r3795;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3802, %r362, %r3747;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3805, %r359, %r3744, %r3802;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3809, %r362, %r3756;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3812, %r359, %r3753, %r3809;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3816, %r362, %r3765;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3819, %r359, %r3762, %r3816;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3823, %r3824}, {%r393, %r399, %r396, %r402}, {%r3700, %r3770}, {%r1827, %r1827};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3833, %r3834}, {%r393, %r399, %r396, %r402}, {%r3709, %r3777}, {%r1827, %r1827};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3843, %r3844}, {%r393, %r399, %r396, %r402}, {%r3718, %r3784}, {%r1827, %r1827};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3853, %r3854}, {%r393, %r399, %r396, %r402}, {%r3727, %r3791}, {%r1827, %r1827};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3863, %r3864}, {%r393, %r399, %r396, %r402}, {%r3736, %r3798}, {%r1827, %r1827};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3873, %r3874}, {%r393, %r399, %r396, %r402}, {%r3745, %r3805}, {%r1827, %r1827};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3883, %r3884}, {%r393, %r399, %r396, %r402}, {%r3754, %r3812}, {%r1827, %r1827};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3893, %r3894}, {%r393, %r399, %r396, %r402}, {%r3763, %r3819}, {%r1827, %r1827};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3903, %r104, %r3823;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3906, %r104, %r3824;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3909, %r104, %r3833;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3912, %r104, %r3834;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3915, %r104, %r3843;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3918, %r104, %r3844;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3921, %r104, %r3853;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3924, %r104, %r3854;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3927, %r104, %r3863;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3930, %r104, %r3864;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3933, %r104, %r3873;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3936, %r104, %r3874;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3939, %r104, %r3883;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3942, %r104, %r3884;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3945, %r104, %r3893;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3948, %r104, %r3894;
	// end inline asm
	// begin inline asm
	mov.b32 %r3951, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r3952, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3953, %r3903, %r3951;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3956, %r3953, %r3952;
	// end inline asm
	// begin inline asm
	mov.b32 %r3959, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r3960, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3961, %r3906, %r3959;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3964, %r3961, %r3960;
	// end inline asm
	// begin inline asm
	mov.b32 %r3967, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r3968, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3969, %r3909, %r3967;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3972, %r3969, %r3968;
	// end inline asm
	// begin inline asm
	mov.b32 %r3975, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r3976, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3977, %r3912, %r3975;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3980, %r3977, %r3976;
	// end inline asm
	// begin inline asm
	mov.b32 %r3983, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r3984, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3985, %r3915, %r3983;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3988, %r3985, %r3984;
	// end inline asm
	// begin inline asm
	mov.b32 %r3991, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r3992, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3993, %r3918, %r3991;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3996, %r3993, %r3992;
	// end inline asm
	// begin inline asm
	mov.b32 %r3999, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r4000, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4001, %r3921, %r3999;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4004, %r4001, %r4000;
	// end inline asm
	// begin inline asm
	mov.b32 %r4007, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r4008, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4009, %r3924, %r4007;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4012, %r4009, %r4008;
	// end inline asm
	// begin inline asm
	mov.b32 %r4015, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r4016, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4017, %r3927, %r4015;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4020, %r4017, %r4016;
	// end inline asm
	// begin inline asm
	mov.b32 %r4023, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r4024, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4025, %r3930, %r4023;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4028, %r4025, %r4024;
	// end inline asm
	// begin inline asm
	mov.b32 %r4031, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r4032, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4033, %r3933, %r4031;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4036, %r4033, %r4032;
	// end inline asm
	// begin inline asm
	mov.b32 %r4039, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r4040, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4041, %r3936, %r4039;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4044, %r4041, %r4040;
	// end inline asm
	// begin inline asm
	mov.b32 %r4047, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r4048, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4049, %r3939, %r4047;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4052, %r4049, %r4048;
	// end inline asm
	// begin inline asm
	mov.b32 %r4055, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r4056, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4057, %r3942, %r4055;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4060, %r4057, %r4056;
	// end inline asm
	// begin inline asm
	mov.b32 %r4063, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r4064, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4065, %r3945, %r4063;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4068, %r4065, %r4064;
	// end inline asm
	// begin inline asm
	mov.b32 %r4071, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r4072, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4073, %r3948, %r4071;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4076, %r4073, %r4072;
	// end inline asm
	// begin inline asm
	mov.b32 %r4082, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r4080, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4081, %r4082, %r4080;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4084, %r3956, %r4081;
	// end inline asm
	// begin inline asm
	mov.b32 %r4087, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4088, %r4082, %r4087;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4091, %r3964, %r4088;
	// end inline asm
	// begin inline asm
	mov.b32 %r4094, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4095, %r4082, %r4094;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4098, %r3972, %r4095;
	// end inline asm
	// begin inline asm
	mov.b32 %r4101, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4102, %r4082, %r4101;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4105, %r3980, %r4102;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4108, %r4084, %r4098, %r2315;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4112, %r4091, %r4105, %r2315;
	// end inline asm
	shl.b32 	%r4119, %r4112, 4;
	// begin inline asm
	lop3.b32 %r4116, %r2321, %r4108, %r4119, 202;
	// end inline asm
	xor.b32  	%r7843, %r4116, -2004318072;
	// begin inline asm
	mov.b32 %r4123, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r4121, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4122, %r4123, %r4121;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4125, %r3988, %r4122;
	// end inline asm
	// begin inline asm
	mov.b32 %r4128, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4129, %r4123, %r4128;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4132, %r3996, %r4129;
	// end inline asm
	// begin inline asm
	mov.b32 %r4135, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4136, %r4123, %r4135;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4139, %r4004, %r4136;
	// end inline asm
	// begin inline asm
	mov.b32 %r4142, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4143, %r4123, %r4142;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4146, %r4012, %r4143;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4149, %r4125, %r4139, %r2315;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4153, %r4132, %r4146, %r2315;
	// end inline asm
	shl.b32 	%r4160, %r4153, 4;
	// begin inline asm
	lop3.b32 %r4157, %r2321, %r4149, %r4160, 202;
	// end inline asm
	xor.b32  	%r7844, %r4157, -2004318072;
	// begin inline asm
	mov.b32 %r4164, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r4162, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4163, %r4164, %r4162;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4166, %r4020, %r4163;
	// end inline asm
	// begin inline asm
	mov.b32 %r4169, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4170, %r4164, %r4169;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4173, %r4028, %r4170;
	// end inline asm
	// begin inline asm
	mov.b32 %r4176, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4177, %r4164, %r4176;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4180, %r4036, %r4177;
	// end inline asm
	// begin inline asm
	mov.b32 %r4183, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4184, %r4164, %r4183;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4187, %r4044, %r4184;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4190, %r4166, %r4180, %r2315;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4194, %r4173, %r4187, %r2315;
	// end inline asm
	shl.b32 	%r4201, %r4194, 4;
	// begin inline asm
	lop3.b32 %r4198, %r2321, %r4190, %r4201, 202;
	// end inline asm
	xor.b32  	%r7845, %r4198, -2004318072;
	// begin inline asm
	mov.b32 %r4205, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r4203, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4204, %r4205, %r4203;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4207, %r4052, %r4204;
	// end inline asm
	// begin inline asm
	mov.b32 %r4210, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4211, %r4205, %r4210;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4214, %r4060, %r4211;
	// end inline asm
	// begin inline asm
	mov.b32 %r4217, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4218, %r4205, %r4217;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4221, %r4068, %r4218;
	// end inline asm
	// begin inline asm
	mov.b32 %r4224, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4225, %r4205, %r4224;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4228, %r4076, %r4225;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4231, %r4207, %r4221, %r2315;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4235, %r4214, %r4228, %r2315;
	// end inline asm
	shl.b32 	%r4242, %r4235, 4;
	// begin inline asm
	lop3.b32 %r4239, %r2321, %r4231, %r4242, 202;
	// end inline asm
	xor.b32  	%r7846, %r4239, -2004318072;
	st.shared.u32 	[%rd89], %r7843;
	st.shared.u32 	[%rd90], %r7844;
	st.shared.u32 	[%rd91], %r7845;
	st.shared.u32 	[%rd92], %r7846;
	ld.shared.u32 	%r7976, [%rd85];
	ld.shared.u32 	%r7977, [%rd86];
	ld.shared.u32 	%r7982, [%rd87];
	ld.shared.u32 	%r7983, [%rd88];
	// begin inline asm
	mov.b32 %r4248, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r4259, {%rs1078, %rs1078};
	// end inline asm
	xor.b32  	%r4247, %r7976, -2004318072;
	// begin inline asm
	lop3.b32 %r4245, %r654, %r4247, %r4248, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4249, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4250, %r4248, %r4249;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4253, %r4245, %r4250;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4256, %r665, %r4247, %r4259, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4260, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4261, %r4259, %r4260;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4264, %r4256, %r4261;
	// end inline asm
	shr.u32 	%r4269, %r4247, 8;
	// begin inline asm
	lop3.b32 %r4267, %r654, %r4269, %r4248, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4271, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4272, %r4248, %r4271;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4275, %r4267, %r4272;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4278, %r665, %r4269, %r4259, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4282, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4283, %r4259, %r4282;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4286, %r4278, %r4283;
	// end inline asm
	// begin inline asm
	mov.b32 %r4294, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r4305, {%rs1078, %rs1078};
	// end inline asm
	xor.b32  	%r4293, %r7977, -2004318072;
	// begin inline asm
	lop3.b32 %r4291, %r654, %r4293, %r4294, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4295, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4296, %r4294, %r4295;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4299, %r4291, %r4296;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4302, %r665, %r4293, %r4305, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4306, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4307, %r4305, %r4306;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4310, %r4302, %r4307;
	// end inline asm
	shr.u32 	%r4315, %r4293, 8;
	// begin inline asm
	lop3.b32 %r4313, %r654, %r4315, %r4294, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4317, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4318, %r4294, %r4317;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4321, %r4313, %r4318;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4324, %r665, %r4315, %r4305, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4328, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4329, %r4305, %r4328;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4332, %r4324, %r4329;
	// end inline asm
	// begin inline asm
	mov.b32 %r4340, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r4351, {%rs1078, %rs1078};
	// end inline asm
	xor.b32  	%r4339, %r7982, -2004318072;
	// begin inline asm
	lop3.b32 %r4337, %r654, %r4339, %r4340, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4341, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4342, %r4340, %r4341;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4345, %r4337, %r4342;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4348, %r665, %r4339, %r4351, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4352, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4353, %r4351, %r4352;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4356, %r4348, %r4353;
	// end inline asm
	shr.u32 	%r4361, %r4339, 8;
	// begin inline asm
	lop3.b32 %r4359, %r654, %r4361, %r4340, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4363, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4364, %r4340, %r4363;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4367, %r4359, %r4364;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4370, %r665, %r4361, %r4351, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4374, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4375, %r4351, %r4374;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4378, %r4370, %r4375;
	// end inline asm
	// begin inline asm
	mov.b32 %r4386, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r4397, {%rs1078, %rs1078};
	// end inline asm
	xor.b32  	%r4385, %r7983, -2004318072;
	// begin inline asm
	lop3.b32 %r4383, %r654, %r4385, %r4386, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4387, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4388, %r4386, %r4387;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4391, %r4383, %r4388;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4394, %r665, %r4385, %r4397, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4398, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4399, %r4397, %r4398;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4402, %r4394, %r4399;
	// end inline asm
	shr.u32 	%r4407, %r4385, 8;
	// begin inline asm
	lop3.b32 %r4405, %r654, %r4407, %r4386, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4409, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4410, %r4386, %r4409;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4413, %r4405, %r4410;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4416, %r665, %r4407, %r4397, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4420, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4421, %r4397, %r4420;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4424, %r4416, %r4421;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4427, %r253;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4429, %r4427, %r4253;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4432, %r253;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4434, %r4432, %r4264;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4437, %r253;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4439, %r4437, %r4275;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4442, %r253;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4444, %r4442, %r4286;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4447, %r253;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4449, %r4447, %r4299;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4452, %r253;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4454, %r4452, %r4310;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4457, %r253;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4459, %r4457, %r4321;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4462, %r253;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4464, %r4462, %r4332;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4467, %r253;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4469, %r4467, %r4345;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4472, %r253;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4474, %r4472, %r4356;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4477, %r253;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4479, %r4477, %r4367;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4482, %r253;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4484, %r4482, %r4378;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4487, %r253;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4489, %r4487, %r4391;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4492, %r253;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4494, %r4492, %r4402;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4497, %r253;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4499, %r4497, %r4413;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4502, %r253;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4504, %r4502, %r4424;
	// end inline asm
	// begin inline asm
	mov.b32 %r4512, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r4523, {%rs1078, %rs1078};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4509, %r654, %r1447, %r4512, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4513, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4514, %r4512, %r4513;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4517, %r4509, %r4514;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4520, %r665, %r1447, %r4523, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4524, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4525, %r4523, %r4524;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4528, %r4520, %r4525;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4531, %r654, %r1469, %r4512, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4535, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4536, %r4512, %r4535;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4539, %r4531, %r4536;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4542, %r665, %r1469, %r4523, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4546, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4547, %r4523, %r4546;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4550, %r4542, %r4547;
	// end inline asm
	// begin inline asm
	mov.b32 %r4558, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r4569, {%rs1078, %rs1078};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4555, %r654, %r1493, %r4558, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4559, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4560, %r4558, %r4559;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4563, %r4555, %r4560;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4566, %r665, %r1493, %r4569, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4570, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4571, %r4569, %r4570;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4574, %r4566, %r4571;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4577, %r654, %r1515, %r4558, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4581, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4582, %r4558, %r4581;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4585, %r4577, %r4582;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4588, %r665, %r1515, %r4569, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4592, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4593, %r4569, %r4592;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4596, %r4588, %r4593;
	// end inline asm
	// begin inline asm
	mov.b32 %r4604, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r4615, {%rs1078, %rs1078};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4601, %r654, %r1539, %r4604, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4605, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4606, %r4604, %r4605;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4609, %r4601, %r4606;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4612, %r665, %r1539, %r4615, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4616, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4617, %r4615, %r4616;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4620, %r4612, %r4617;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4623, %r654, %r1561, %r4604, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4627, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4628, %r4604, %r4627;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4631, %r4623, %r4628;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4634, %r665, %r1561, %r4615, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4638, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4639, %r4615, %r4638;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4642, %r4634, %r4639;
	// end inline asm
	// begin inline asm
	mov.b32 %r4650, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r4661, {%rs1078, %rs1078};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4647, %r654, %r1585, %r4650, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4651, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4652, %r4650, %r4651;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4655, %r4647, %r4652;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4658, %r665, %r1585, %r4661, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4662, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4663, %r4661, %r4662;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4666, %r4658, %r4663;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4669, %r654, %r1607, %r4650, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4673, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4674, %r4650, %r4673;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4677, %r4669, %r4674;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4680, %r665, %r1607, %r4661, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4684, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4685, %r4661, %r4684;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4688, %r4680, %r4685;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4691, %r199, %r4517, %r4429;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4695, %r199, %r4528, %r4434;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4699, %r199, %r4539, %r4439;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4703, %r199, %r4550, %r4444;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4707, %r199, %r4563, %r4449;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4711, %r199, %r4574, %r4454;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4715, %r199, %r4585, %r4459;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4719, %r199, %r4596, %r4464;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4723, %r199, %r4609, %r4469;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4727, %r199, %r4620, %r4474;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4731, %r199, %r4631, %r4479;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4735, %r199, %r4642, %r4484;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4739, %r199, %r4655, %r4489;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4743, %r199, %r4666, %r4494;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4747, %r199, %r4677, %r4499;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4751, %r199, %r4688, %r4504;
	// end inline asm
	// begin inline asm
	mov.b32 %r4760, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r4771, {%rs1078, %rs1078};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4757, %r654, %r655, %r4760, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4761, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4762, %r4760, %r4761;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4765, %r4757, %r4762;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4768, %r665, %r655, %r4771, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4772, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4773, %r4771, %r4772;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4776, %r4768, %r4773;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4779, %r654, %r677, %r4760, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4783, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4784, %r4760, %r4783;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4787, %r4779, %r4784;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4790, %r665, %r677, %r4771, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4794, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4795, %r4771, %r4794;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4798, %r4790, %r4795;
	// end inline asm
	// begin inline asm
	mov.b32 %r4806, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r4817, {%rs1078, %rs1078};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4803, %r654, %r701, %r4806, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4807, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4808, %r4806, %r4807;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4811, %r4803, %r4808;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4814, %r665, %r701, %r4817, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4818, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4819, %r4817, %r4818;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4822, %r4814, %r4819;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4825, %r654, %r723, %r4806, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4829, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4830, %r4806, %r4829;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4833, %r4825, %r4830;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4836, %r665, %r723, %r4817, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4840, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4841, %r4817, %r4840;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4844, %r4836, %r4841;
	// end inline asm
	// begin inline asm
	mov.b32 %r4852, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r4863, {%rs1078, %rs1078};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4849, %r654, %r747, %r4852, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4853, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4854, %r4852, %r4853;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4857, %r4849, %r4854;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4860, %r665, %r747, %r4863, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4864, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4865, %r4863, %r4864;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4868, %r4860, %r4865;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4871, %r654, %r769, %r4852, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4875, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4876, %r4852, %r4875;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4879, %r4871, %r4876;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4882, %r665, %r769, %r4863, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4886, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4887, %r4863, %r4886;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4890, %r4882, %r4887;
	// end inline asm
	// begin inline asm
	mov.b32 %r4898, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r4909, {%rs1078, %rs1078};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4895, %r654, %r793, %r4898, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4899, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4900, %r4898, %r4899;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4903, %r4895, %r4900;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4906, %r665, %r793, %r4909, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4910, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4911, %r4909, %r4910;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4914, %r4906, %r4911;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4917, %r654, %r815, %r4898, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4921, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4922, %r4898, %r4921;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4925, %r4917, %r4922;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4928, %r665, %r815, %r4909, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4932, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4933, %r4909, %r4932;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4936, %r4928, %r4933;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4939, %r217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4941, %r4939, %r4765, %r4691;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4945, %r217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4947, %r4945, %r4776, %r4695;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4951, %r217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4953, %r4951, %r4787, %r4699;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4957, %r217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4959, %r4957, %r4798, %r4703;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4963, %r217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4965, %r4963, %r4811, %r4707;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4969, %r217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4971, %r4969, %r4822, %r4711;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4975, %r217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4977, %r4975, %r4833, %r4715;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4981, %r217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4983, %r4981, %r4844, %r4719;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4987, %r217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4989, %r4987, %r4857, %r4723;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4993, %r217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4995, %r4993, %r4868, %r4727;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4999, %r217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5001, %r4999, %r4879, %r4731;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5005, %r217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5007, %r5005, %r4890, %r4735;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5011, %r217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5013, %r5011, %r4903, %r4739;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5017, %r217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5019, %r5017, %r4914, %r4743;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5023, %r217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5025, %r5023, %r4925, %r4747;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5029, %r217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5031, %r5029, %r4936, %r4751;
	// end inline asm
	// begin inline asm
	mov.b32 %r5040, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r5051, {%rs1078, %rs1078};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5037, %r654, %r2451, %r5040, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5041, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5042, %r5040, %r5041;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5045, %r5037, %r5042;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5048, %r665, %r2451, %r5051, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5052, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5053, %r5051, %r5052;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5056, %r5048, %r5053;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5059, %r654, %r2473, %r5040, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5063, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5064, %r5040, %r5063;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5067, %r5059, %r5064;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5070, %r665, %r2473, %r5051, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5074, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5075, %r5051, %r5074;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5078, %r5070, %r5075;
	// end inline asm
	// begin inline asm
	mov.b32 %r5086, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r5097, {%rs1078, %rs1078};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5083, %r654, %r2497, %r5086, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5087, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5088, %r5086, %r5087;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5091, %r5083, %r5088;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5094, %r665, %r2497, %r5097, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5098, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5099, %r5097, %r5098;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5102, %r5094, %r5099;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5105, %r654, %r2519, %r5086, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5109, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5110, %r5086, %r5109;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5113, %r5105, %r5110;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5116, %r665, %r2519, %r5097, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5120, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5121, %r5097, %r5120;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5124, %r5116, %r5121;
	// end inline asm
	// begin inline asm
	mov.b32 %r5132, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r5143, {%rs1078, %rs1078};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5129, %r654, %r2543, %r5132, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5133, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5134, %r5132, %r5133;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5137, %r5129, %r5134;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5140, %r665, %r2543, %r5143, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5144, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5145, %r5143, %r5144;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5148, %r5140, %r5145;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5151, %r654, %r2565, %r5132, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5155, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5156, %r5132, %r5155;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5159, %r5151, %r5156;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5162, %r665, %r2565, %r5143, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5166, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5167, %r5143, %r5166;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5170, %r5162, %r5167;
	// end inline asm
	// begin inline asm
	mov.b32 %r5178, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r5189, {%rs1078, %rs1078};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5175, %r654, %r2589, %r5178, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5179, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5180, %r5178, %r5179;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5183, %r5175, %r5180;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5186, %r665, %r2589, %r5189, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5190, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5191, %r5189, %r5190;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5194, %r5186, %r5191;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5197, %r654, %r2611, %r5178, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5201, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5202, %r5178, %r5201;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5205, %r5197, %r5202;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5208, %r665, %r2611, %r5189, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5212, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5213, %r5189, %r5212;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5216, %r5208, %r5213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5290, %r235, %r5045, %r4941;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5287, %r235, %r5056, %r4947;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5299, %r235, %r5067, %r4953;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5296, %r235, %r5078, %r4959;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5308, %r235, %r5091, %r4965;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5305, %r235, %r5102, %r4971;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5317, %r235, %r5113, %r4977;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5314, %r235, %r5124, %r4983;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5326, %r235, %r5137, %r4989;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5323, %r235, %r5148, %r4995;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5335, %r235, %r5159, %r5001;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5332, %r235, %r5170, %r5007;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5344, %r235, %r5183, %r5013;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5341, %r235, %r5194, %r5019;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5353, %r235, %r5205, %r5025;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5350, %r235, %r5216, %r5031;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5283, %r259;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5285, %r5283, %r5287;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5288, %r256, %r5290, %r5285;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5292, %r259;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5294, %r5292, %r5296;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5297, %r256, %r5299, %r5294;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5301, %r259;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5303, %r5301, %r5305;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5306, %r256, %r5308, %r5303;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5310, %r259;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5312, %r5310, %r5314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5315, %r256, %r5317, %r5312;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5319, %r259;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5321, %r5319, %r5323;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5324, %r256, %r5326, %r5321;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5328, %r259;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5330, %r5328, %r5332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5333, %r256, %r5335, %r5330;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5337, %r259;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5339, %r5337, %r5341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5342, %r256, %r5344, %r5339;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5346, %r259;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5348, %r5346, %r5350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5351, %r256, %r5353, %r5348;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5355, %r259, %r5290;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5358, %r256, %r5287, %r5355;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5362, %r259, %r5299;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5365, %r256, %r5296, %r5362;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5369, %r259, %r5308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5372, %r256, %r5305, %r5369;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5376, %r259, %r5317;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5379, %r256, %r5314, %r5376;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5383, %r259, %r5326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5386, %r256, %r5323, %r5383;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5390, %r259, %r5335;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5393, %r256, %r5332, %r5390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5397, %r259, %r5344;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5400, %r256, %r5341, %r5397;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5404, %r259, %r5353;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5407, %r256, %r5350, %r5404;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5498, %r5495}, {%r315, %r321, %r318, %r324}, {%r5288, %r5358}, {%r1827, %r1827};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5507, %r5504}, {%r315, %r321, %r318, %r324}, {%r5297, %r5365}, {%r1827, %r1827};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5516, %r5513}, {%r315, %r321, %r318, %r324}, {%r5306, %r5372}, {%r1827, %r1827};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5525, %r5522}, {%r315, %r321, %r318, %r324}, {%r5315, %r5379}, {%r1827, %r1827};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5534, %r5531}, {%r315, %r321, %r318, %r324}, {%r5324, %r5386}, {%r1827, %r1827};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5543, %r5540}, {%r315, %r321, %r318, %r324}, {%r5333, %r5393}, {%r1827, %r1827};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5552, %r5549}, {%r315, %r321, %r318, %r324}, {%r5342, %r5400}, {%r1827, %r1827};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5561, %r5558}, {%r315, %r321, %r318, %r324}, {%r5351, %r5407}, {%r1827, %r1827};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5491, %r362;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5493, %r5491, %r5495;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5496, %r359, %r5498, %r5493;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5500, %r362;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5502, %r5500, %r5504;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5505, %r359, %r5507, %r5502;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5509, %r362;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5511, %r5509, %r5513;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5514, %r359, %r5516, %r5511;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5518, %r362;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5520, %r5518, %r5522;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5523, %r359, %r5525, %r5520;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5527, %r362;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5529, %r5527, %r5531;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5532, %r359, %r5534, %r5529;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5536, %r362;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5538, %r5536, %r5540;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5541, %r359, %r5543, %r5538;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5545, %r362;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5547, %r5545, %r5549;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5550, %r359, %r5552, %r5547;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5554, %r362;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5556, %r5554, %r5558;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5559, %r359, %r5561, %r5556;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5563, %r362, %r5498;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5566, %r359, %r5495, %r5563;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5570, %r362, %r5507;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5573, %r359, %r5504, %r5570;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5577, %r362, %r5516;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5580, %r359, %r5513, %r5577;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5584, %r362, %r5525;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5587, %r359, %r5522, %r5584;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5591, %r362, %r5534;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5594, %r359, %r5531, %r5591;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5598, %r362, %r5543;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5601, %r359, %r5540, %r5598;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5605, %r362, %r5552;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5608, %r359, %r5549, %r5605;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5612, %r362, %r5561;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5615, %r359, %r5558, %r5612;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5619, %r5620}, {%r393, %r399, %r396, %r402}, {%r5496, %r5566}, {%r1827, %r1827};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5629, %r5630}, {%r393, %r399, %r396, %r402}, {%r5505, %r5573}, {%r1827, %r1827};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5639, %r5640}, {%r393, %r399, %r396, %r402}, {%r5514, %r5580}, {%r1827, %r1827};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5649, %r5650}, {%r393, %r399, %r396, %r402}, {%r5523, %r5587}, {%r1827, %r1827};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5659, %r5660}, {%r393, %r399, %r396, %r402}, {%r5532, %r5594}, {%r1827, %r1827};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5669, %r5670}, {%r393, %r399, %r396, %r402}, {%r5541, %r5601}, {%r1827, %r1827};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5679, %r5680}, {%r393, %r399, %r396, %r402}, {%r5550, %r5608}, {%r1827, %r1827};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5689, %r5690}, {%r393, %r399, %r396, %r402}, {%r5559, %r5615}, {%r1827, %r1827};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5699, %r104, %r5619;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5702, %r104, %r5620;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5705, %r104, %r5629;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5708, %r104, %r5630;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5711, %r104, %r5639;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5714, %r104, %r5640;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5717, %r104, %r5649;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5720, %r104, %r5650;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5723, %r104, %r5659;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5726, %r104, %r5660;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5729, %r104, %r5669;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5732, %r104, %r5670;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5735, %r104, %r5679;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5738, %r104, %r5680;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5741, %r104, %r5689;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5744, %r104, %r5690;
	// end inline asm
	// begin inline asm
	mov.b32 %r5747, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r5748, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5749, %r5699, %r5747;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5752, %r5749, %r5748;
	// end inline asm
	// begin inline asm
	mov.b32 %r5755, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r5756, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5757, %r5702, %r5755;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5760, %r5757, %r5756;
	// end inline asm
	// begin inline asm
	mov.b32 %r5763, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r5764, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5765, %r5705, %r5763;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5768, %r5765, %r5764;
	// end inline asm
	// begin inline asm
	mov.b32 %r5771, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r5772, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5773, %r5708, %r5771;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5776, %r5773, %r5772;
	// end inline asm
	// begin inline asm
	mov.b32 %r5779, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r5780, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5781, %r5711, %r5779;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5784, %r5781, %r5780;
	// end inline asm
	// begin inline asm
	mov.b32 %r5787, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r5788, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5789, %r5714, %r5787;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5792, %r5789, %r5788;
	// end inline asm
	// begin inline asm
	mov.b32 %r5795, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r5796, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5797, %r5717, %r5795;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5800, %r5797, %r5796;
	// end inline asm
	// begin inline asm
	mov.b32 %r5803, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r5804, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5805, %r5720, %r5803;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5808, %r5805, %r5804;
	// end inline asm
	// begin inline asm
	mov.b32 %r5811, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r5812, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5813, %r5723, %r5811;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5816, %r5813, %r5812;
	// end inline asm
	// begin inline asm
	mov.b32 %r5819, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r5820, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5821, %r5726, %r5819;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5824, %r5821, %r5820;
	// end inline asm
	// begin inline asm
	mov.b32 %r5827, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r5828, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5829, %r5729, %r5827;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5832, %r5829, %r5828;
	// end inline asm
	// begin inline asm
	mov.b32 %r5835, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r5836, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5837, %r5732, %r5835;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5840, %r5837, %r5836;
	// end inline asm
	// begin inline asm
	mov.b32 %r5843, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r5844, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5845, %r5735, %r5843;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5848, %r5845, %r5844;
	// end inline asm
	// begin inline asm
	mov.b32 %r5851, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r5852, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5853, %r5738, %r5851;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5856, %r5853, %r5852;
	// end inline asm
	// begin inline asm
	mov.b32 %r5859, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r5860, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5861, %r5741, %r5859;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5864, %r5861, %r5860;
	// end inline asm
	// begin inline asm
	mov.b32 %r5867, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r5868, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5869, %r5744, %r5867;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5872, %r5869, %r5868;
	// end inline asm
	// begin inline asm
	mov.b32 %r5878, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r5876, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5877, %r5878, %r5876;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5880, %r5752, %r5877;
	// end inline asm
	// begin inline asm
	mov.b32 %r5883, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5884, %r5878, %r5883;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5887, %r5760, %r5884;
	// end inline asm
	// begin inline asm
	mov.b32 %r5890, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5891, %r5878, %r5890;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5894, %r5768, %r5891;
	// end inline asm
	// begin inline asm
	mov.b32 %r5897, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5898, %r5878, %r5897;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5901, %r5776, %r5898;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5904, %r5880, %r5894, %r2315;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5908, %r5887, %r5901, %r2315;
	// end inline asm
	shl.b32 	%r5915, %r5908, 4;
	// begin inline asm
	lop3.b32 %r5912, %r2321, %r5904, %r5915, 202;
	// end inline asm
	xor.b32  	%r7847, %r5912, -2004318072;
	// begin inline asm
	mov.b32 %r5919, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r5917, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5918, %r5919, %r5917;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5921, %r5784, %r5918;
	// end inline asm
	// begin inline asm
	mov.b32 %r5924, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5925, %r5919, %r5924;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5928, %r5792, %r5925;
	// end inline asm
	// begin inline asm
	mov.b32 %r5931, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5932, %r5919, %r5931;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5935, %r5800, %r5932;
	// end inline asm
	// begin inline asm
	mov.b32 %r5938, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5939, %r5919, %r5938;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5942, %r5808, %r5939;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5945, %r5921, %r5935, %r2315;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5949, %r5928, %r5942, %r2315;
	// end inline asm
	shl.b32 	%r5956, %r5949, 4;
	// begin inline asm
	lop3.b32 %r5953, %r2321, %r5945, %r5956, 202;
	// end inline asm
	xor.b32  	%r7848, %r5953, -2004318072;
	// begin inline asm
	mov.b32 %r5960, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r5958, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5959, %r5960, %r5958;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5962, %r5816, %r5959;
	// end inline asm
	// begin inline asm
	mov.b32 %r5965, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5966, %r5960, %r5965;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5969, %r5824, %r5966;
	// end inline asm
	// begin inline asm
	mov.b32 %r5972, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5973, %r5960, %r5972;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5976, %r5832, %r5973;
	// end inline asm
	// begin inline asm
	mov.b32 %r5979, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5980, %r5960, %r5979;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5983, %r5840, %r5980;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5986, %r5962, %r5976, %r2315;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5990, %r5969, %r5983, %r2315;
	// end inline asm
	shl.b32 	%r5997, %r5990, 4;
	// begin inline asm
	lop3.b32 %r5994, %r2321, %r5986, %r5997, 202;
	// end inline asm
	xor.b32  	%r7849, %r5994, -2004318072;
	// begin inline asm
	mov.b32 %r6001, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r5999, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6000, %r6001, %r5999;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6003, %r5848, %r6000;
	// end inline asm
	// begin inline asm
	mov.b32 %r6006, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6007, %r6001, %r6006;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6010, %r5856, %r6007;
	// end inline asm
	// begin inline asm
	mov.b32 %r6013, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6014, %r6001, %r6013;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6017, %r5864, %r6014;
	// end inline asm
	// begin inline asm
	mov.b32 %r6020, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6021, %r6001, %r6020;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6024, %r5872, %r6021;
	// end inline asm
	// begin inline asm
	prmt.b32 %r6027, %r6003, %r6017, %r2315;
	// end inline asm
	// begin inline asm
	prmt.b32 %r6031, %r6010, %r6024, %r2315;
	// end inline asm
	shl.b32 	%r6038, %r6031, 4;
	// begin inline asm
	lop3.b32 %r6035, %r2321, %r6027, %r6038, 202;
	// end inline asm
	xor.b32  	%r7850, %r6035, -2004318072;
	st.shared.u32 	[%rd89], %r7847;
	st.shared.u32 	[%rd90], %r7848;
	st.shared.u32 	[%rd91], %r7849;
	st.shared.u32 	[%rd92], %r7850;
	ld.shared.u32 	%r7978, [%rd85];
	ld.shared.u32 	%r7979, [%rd86];
	ld.shared.u32 	%r7984, [%rd87];
	ld.shared.u32 	%r7985, [%rd88];
	// begin inline asm
	mov.b32 %r6044, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r6055, {%rs1078, %rs1078};
	// end inline asm
	xor.b32  	%r6043, %r7978, -2004318072;
	// begin inline asm
	lop3.b32 %r6041, %r654, %r6043, %r6044, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6045, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6046, %r6044, %r6045;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6049, %r6041, %r6046;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6052, %r665, %r6043, %r6055, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6056, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6057, %r6055, %r6056;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6060, %r6052, %r6057;
	// end inline asm
	shr.u32 	%r6065, %r6043, 8;
	// begin inline asm
	lop3.b32 %r6063, %r654, %r6065, %r6044, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6067, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6068, %r6044, %r6067;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6071, %r6063, %r6068;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6074, %r665, %r6065, %r6055, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6078, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6079, %r6055, %r6078;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6082, %r6074, %r6079;
	// end inline asm
	// begin inline asm
	mov.b32 %r6090, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r6101, {%rs1078, %rs1078};
	// end inline asm
	xor.b32  	%r6089, %r7979, -2004318072;
	// begin inline asm
	lop3.b32 %r6087, %r654, %r6089, %r6090, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6091, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6092, %r6090, %r6091;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6095, %r6087, %r6092;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6098, %r665, %r6089, %r6101, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6102, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6103, %r6101, %r6102;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6106, %r6098, %r6103;
	// end inline asm
	shr.u32 	%r6111, %r6089, 8;
	// begin inline asm
	lop3.b32 %r6109, %r654, %r6111, %r6090, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6113, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6114, %r6090, %r6113;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6117, %r6109, %r6114;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6120, %r665, %r6111, %r6101, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6124, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6125, %r6101, %r6124;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6128, %r6120, %r6125;
	// end inline asm
	// begin inline asm
	mov.b32 %r6136, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r6147, {%rs1078, %rs1078};
	// end inline asm
	xor.b32  	%r6135, %r7984, -2004318072;
	// begin inline asm
	lop3.b32 %r6133, %r654, %r6135, %r6136, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6137, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6138, %r6136, %r6137;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6141, %r6133, %r6138;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6144, %r665, %r6135, %r6147, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6148, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6149, %r6147, %r6148;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6152, %r6144, %r6149;
	// end inline asm
	shr.u32 	%r6157, %r6135, 8;
	// begin inline asm
	lop3.b32 %r6155, %r654, %r6157, %r6136, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6159, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6160, %r6136, %r6159;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6163, %r6155, %r6160;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6166, %r665, %r6157, %r6147, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6170, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6171, %r6147, %r6170;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6174, %r6166, %r6171;
	// end inline asm
	// begin inline asm
	mov.b32 %r6182, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r6193, {%rs1078, %rs1078};
	// end inline asm
	xor.b32  	%r6181, %r7985, -2004318072;
	// begin inline asm
	lop3.b32 %r6179, %r654, %r6181, %r6182, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6183, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6184, %r6182, %r6183;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6187, %r6179, %r6184;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6190, %r665, %r6181, %r6193, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6194, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6195, %r6193, %r6194;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6198, %r6190, %r6195;
	// end inline asm
	shr.u32 	%r6203, %r6181, 8;
	// begin inline asm
	lop3.b32 %r6201, %r654, %r6203, %r6182, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6205, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6206, %r6182, %r6205;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6209, %r6201, %r6206;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6212, %r665, %r6203, %r6193, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6216, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6217, %r6193, %r6216;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6220, %r6212, %r6217;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6223, %r253;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6225, %r6223, %r6049;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6228, %r253;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6230, %r6228, %r6060;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6233, %r253;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6235, %r6233, %r6071;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6238, %r253;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6240, %r6238, %r6082;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6243, %r253;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6245, %r6243, %r6095;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6248, %r253;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6250, %r6248, %r6106;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6253, %r253;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6255, %r6253, %r6117;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6258, %r253;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6260, %r6258, %r6128;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6263, %r253;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6265, %r6263, %r6141;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6268, %r253;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6270, %r6268, %r6152;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6273, %r253;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6275, %r6273, %r6163;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6278, %r253;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6280, %r6278, %r6174;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6283, %r253;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6285, %r6283, %r6187;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6288, %r253;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6290, %r6288, %r6198;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6293, %r253;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6295, %r6293, %r6209;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6298, %r253;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6300, %r6298, %r6220;
	// end inline asm
	// begin inline asm
	mov.b32 %r6308, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r6319, {%rs1078, %rs1078};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6305, %r654, %r655, %r6308, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6309, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6310, %r6308, %r6309;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6313, %r6305, %r6310;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6316, %r665, %r655, %r6319, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6320, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6321, %r6319, %r6320;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6324, %r6316, %r6321;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6327, %r654, %r677, %r6308, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6331, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6332, %r6308, %r6331;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6335, %r6327, %r6332;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6338, %r665, %r677, %r6319, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6342, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6343, %r6319, %r6342;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6346, %r6338, %r6343;
	// end inline asm
	// begin inline asm
	mov.b32 %r6354, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r6365, {%rs1078, %rs1078};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6351, %r654, %r701, %r6354, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6355, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6356, %r6354, %r6355;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6359, %r6351, %r6356;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6362, %r665, %r701, %r6365, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6366, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6367, %r6365, %r6366;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6370, %r6362, %r6367;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6373, %r654, %r723, %r6354, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6377, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6378, %r6354, %r6377;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6381, %r6373, %r6378;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6384, %r665, %r723, %r6365, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6388, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6389, %r6365, %r6388;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6392, %r6384, %r6389;
	// end inline asm
	// begin inline asm
	mov.b32 %r6400, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r6411, {%rs1078, %rs1078};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6397, %r654, %r747, %r6400, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6401, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6402, %r6400, %r6401;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6405, %r6397, %r6402;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6408, %r665, %r747, %r6411, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6412, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6413, %r6411, %r6412;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6416, %r6408, %r6413;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6419, %r654, %r769, %r6400, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6423, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6424, %r6400, %r6423;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6427, %r6419, %r6424;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6430, %r665, %r769, %r6411, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6434, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6435, %r6411, %r6434;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6438, %r6430, %r6435;
	// end inline asm
	// begin inline asm
	mov.b32 %r6446, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r6457, {%rs1078, %rs1078};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6443, %r654, %r793, %r6446, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6447, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6448, %r6446, %r6447;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6451, %r6443, %r6448;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6454, %r665, %r793, %r6457, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6458, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6459, %r6457, %r6458;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6462, %r6454, %r6459;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6465, %r654, %r815, %r6446, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6469, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6470, %r6446, %r6469;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6473, %r6465, %r6470;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6476, %r665, %r815, %r6457, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6480, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6481, %r6457, %r6480;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6484, %r6476, %r6481;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6487, %r199, %r6313, %r6225;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6491, %r199, %r6324, %r6230;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6495, %r199, %r6335, %r6235;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6499, %r199, %r6346, %r6240;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6503, %r199, %r6359, %r6245;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6507, %r199, %r6370, %r6250;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6511, %r199, %r6381, %r6255;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6515, %r199, %r6392, %r6260;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6519, %r199, %r6405, %r6265;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6523, %r199, %r6416, %r6270;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6527, %r199, %r6427, %r6275;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6531, %r199, %r6438, %r6280;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6535, %r199, %r6451, %r6285;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6539, %r199, %r6462, %r6290;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6543, %r199, %r6473, %r6295;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6547, %r199, %r6484, %r6300;
	// end inline asm
	// begin inline asm
	mov.b32 %r6556, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r6567, {%rs1078, %rs1078};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6553, %r654, %r2451, %r6556, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6557, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6558, %r6556, %r6557;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6561, %r6553, %r6558;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6564, %r665, %r2451, %r6567, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6568, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6569, %r6567, %r6568;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6572, %r6564, %r6569;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6575, %r654, %r2473, %r6556, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6579, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6580, %r6556, %r6579;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6583, %r6575, %r6580;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6586, %r665, %r2473, %r6567, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6590, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6591, %r6567, %r6590;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6594, %r6586, %r6591;
	// end inline asm
	// begin inline asm
	mov.b32 %r6602, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r6613, {%rs1078, %rs1078};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6599, %r654, %r2497, %r6602, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6603, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6604, %r6602, %r6603;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6607, %r6599, %r6604;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6610, %r665, %r2497, %r6613, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6614, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6615, %r6613, %r6614;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6618, %r6610, %r6615;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6621, %r654, %r2519, %r6602, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6625, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6626, %r6602, %r6625;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6629, %r6621, %r6626;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6632, %r665, %r2519, %r6613, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6636, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6637, %r6613, %r6636;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6640, %r6632, %r6637;
	// end inline asm
	// begin inline asm
	mov.b32 %r6648, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r6659, {%rs1078, %rs1078};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6645, %r654, %r2543, %r6648, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6649, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6650, %r6648, %r6649;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6653, %r6645, %r6650;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6656, %r665, %r2543, %r6659, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6660, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6661, %r6659, %r6660;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6664, %r6656, %r6661;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6667, %r654, %r2565, %r6648, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6671, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6672, %r6648, %r6671;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6675, %r6667, %r6672;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6678, %r665, %r2565, %r6659, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6682, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6683, %r6659, %r6682;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6686, %r6678, %r6683;
	// end inline asm
	// begin inline asm
	mov.b32 %r6694, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r6705, {%rs1078, %rs1078};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6691, %r654, %r2589, %r6694, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6695, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6696, %r6694, %r6695;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6699, %r6691, %r6696;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6702, %r665, %r2589, %r6705, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6706, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6707, %r6705, %r6706;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6710, %r6702, %r6707;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6713, %r654, %r2611, %r6694, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6717, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6718, %r6694, %r6717;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6721, %r6713, %r6718;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6724, %r665, %r2611, %r6705, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6728, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6729, %r6705, %r6728;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6732, %r6724, %r6729;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6735, %r217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6737, %r6735, %r6561, %r6487;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6741, %r217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6743, %r6741, %r6572, %r6491;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6747, %r217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6749, %r6747, %r6583, %r6495;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6753, %r217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6755, %r6753, %r6594, %r6499;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6759, %r217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6761, %r6759, %r6607, %r6503;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6765, %r217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6767, %r6765, %r6618, %r6507;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6771, %r217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6773, %r6771, %r6629, %r6511;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6777, %r217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6779, %r6777, %r6640, %r6515;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6783, %r217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6785, %r6783, %r6653, %r6519;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6789, %r217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6791, %r6789, %r6664, %r6523;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6795, %r217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6797, %r6795, %r6675, %r6527;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6801, %r217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6803, %r6801, %r6686, %r6531;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6807, %r217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6809, %r6807, %r6699, %r6535;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6813, %r217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6815, %r6813, %r6710, %r6539;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6819, %r217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6821, %r6819, %r6721, %r6543;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6825, %r217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6827, %r6825, %r6732, %r6547;
	// end inline asm
	// begin inline asm
	mov.b32 %r6836, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r6847, {%rs1078, %rs1078};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6833, %r654, %r4247, %r6836, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6837, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6838, %r6836, %r6837;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6841, %r6833, %r6838;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6844, %r665, %r4247, %r6847, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6848, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6849, %r6847, %r6848;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6852, %r6844, %r6849;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6855, %r654, %r4269, %r6836, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6859, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6860, %r6836, %r6859;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6863, %r6855, %r6860;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6866, %r665, %r4269, %r6847, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6870, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6871, %r6847, %r6870;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6874, %r6866, %r6871;
	// end inline asm
	// begin inline asm
	mov.b32 %r6882, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r6893, {%rs1078, %rs1078};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6879, %r654, %r4293, %r6882, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6883, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6884, %r6882, %r6883;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6887, %r6879, %r6884;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6890, %r665, %r4293, %r6893, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6894, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6895, %r6893, %r6894;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6898, %r6890, %r6895;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6901, %r654, %r4315, %r6882, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6905, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6906, %r6882, %r6905;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6909, %r6901, %r6906;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6912, %r665, %r4315, %r6893, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6916, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6917, %r6893, %r6916;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6920, %r6912, %r6917;
	// end inline asm
	// begin inline asm
	mov.b32 %r6928, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r6939, {%rs1078, %rs1078};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6925, %r654, %r4339, %r6928, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6929, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6930, %r6928, %r6929;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6933, %r6925, %r6930;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6936, %r665, %r4339, %r6939, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6940, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6941, %r6939, %r6940;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6944, %r6936, %r6941;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6947, %r654, %r4361, %r6928, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6951, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6952, %r6928, %r6951;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6955, %r6947, %r6952;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6958, %r665, %r4361, %r6939, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6962, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6963, %r6939, %r6962;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6966, %r6958, %r6963;
	// end inline asm
	// begin inline asm
	mov.b32 %r6974, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r6985, {%rs1078, %rs1078};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6971, %r654, %r4385, %r6974, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6975, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6976, %r6974, %r6975;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6979, %r6971, %r6976;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6982, %r665, %r4385, %r6985, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6986, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6987, %r6985, %r6986;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6990, %r6982, %r6987;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6993, %r654, %r4407, %r6974, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6997, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6998, %r6974, %r6997;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7001, %r6993, %r6998;
	// end inline asm
	// begin inline asm
	lop3.b32 %r7004, %r665, %r4407, %r6985, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r7008, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7009, %r6985, %r7008;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7012, %r7004, %r7009;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7086, %r235, %r6841, %r6737;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7083, %r235, %r6852, %r6743;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7095, %r235, %r6863, %r6749;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7092, %r235, %r6874, %r6755;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7104, %r235, %r6887, %r6761;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7101, %r235, %r6898, %r6767;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7113, %r235, %r6909, %r6773;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7110, %r235, %r6920, %r6779;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7122, %r235, %r6933, %r6785;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7119, %r235, %r6944, %r6791;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7131, %r235, %r6955, %r6797;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7128, %r235, %r6966, %r6803;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7140, %r235, %r6979, %r6809;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7137, %r235, %r6990, %r6815;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7149, %r235, %r7001, %r6821;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7146, %r235, %r7012, %r6827;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7079, %r259;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7081, %r7079, %r7083;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7084, %r256, %r7086, %r7081;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7088, %r259;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7090, %r7088, %r7092;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7093, %r256, %r7095, %r7090;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7097, %r259;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7099, %r7097, %r7101;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7102, %r256, %r7104, %r7099;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7106, %r259;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7108, %r7106, %r7110;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7111, %r256, %r7113, %r7108;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7115, %r259;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7117, %r7115, %r7119;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7120, %r256, %r7122, %r7117;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7124, %r259;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7126, %r7124, %r7128;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7129, %r256, %r7131, %r7126;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7133, %r259;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7135, %r7133, %r7137;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7138, %r256, %r7140, %r7135;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7142, %r259;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7144, %r7142, %r7146;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7147, %r256, %r7149, %r7144;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7151, %r259, %r7086;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7154, %r256, %r7083, %r7151;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7158, %r259, %r7095;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7161, %r256, %r7092, %r7158;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7165, %r259, %r7104;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7168, %r256, %r7101, %r7165;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7172, %r259, %r7113;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7175, %r256, %r7110, %r7172;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7179, %r259, %r7122;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7182, %r256, %r7119, %r7179;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7186, %r259, %r7131;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7189, %r256, %r7128, %r7186;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7193, %r259, %r7140;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7196, %r256, %r7137, %r7193;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7200, %r259, %r7149;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7203, %r256, %r7146, %r7200;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7294, %r7291}, {%r315, %r321, %r318, %r324}, {%r7084, %r7154}, {%r1827, %r1827};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7303, %r7300}, {%r315, %r321, %r318, %r324}, {%r7093, %r7161}, {%r1827, %r1827};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7312, %r7309}, {%r315, %r321, %r318, %r324}, {%r7102, %r7168}, {%r1827, %r1827};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7321, %r7318}, {%r315, %r321, %r318, %r324}, {%r7111, %r7175}, {%r1827, %r1827};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7330, %r7327}, {%r315, %r321, %r318, %r324}, {%r7120, %r7182}, {%r1827, %r1827};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7339, %r7336}, {%r315, %r321, %r318, %r324}, {%r7129, %r7189}, {%r1827, %r1827};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7348, %r7345}, {%r315, %r321, %r318, %r324}, {%r7138, %r7196}, {%r1827, %r1827};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7357, %r7354}, {%r315, %r321, %r318, %r324}, {%r7147, %r7203}, {%r1827, %r1827};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7287, %r362;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7289, %r7287, %r7291;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7292, %r359, %r7294, %r7289;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7296, %r362;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7298, %r7296, %r7300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7301, %r359, %r7303, %r7298;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7305, %r362;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7307, %r7305, %r7309;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7310, %r359, %r7312, %r7307;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7314, %r362;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7316, %r7314, %r7318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7319, %r359, %r7321, %r7316;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7323, %r362;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7325, %r7323, %r7327;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7328, %r359, %r7330, %r7325;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7332, %r362;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7334, %r7332, %r7336;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7337, %r359, %r7339, %r7334;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7341, %r362;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7343, %r7341, %r7345;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7346, %r359, %r7348, %r7343;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7350, %r362;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7352, %r7350, %r7354;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7355, %r359, %r7357, %r7352;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7359, %r362, %r7294;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7362, %r359, %r7291, %r7359;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7366, %r362, %r7303;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7369, %r359, %r7300, %r7366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7373, %r362, %r7312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7376, %r359, %r7309, %r7373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7380, %r362, %r7321;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7383, %r359, %r7318, %r7380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7387, %r362, %r7330;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7390, %r359, %r7327, %r7387;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7394, %r362, %r7339;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7397, %r359, %r7336, %r7394;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7401, %r362, %r7348;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7404, %r359, %r7345, %r7401;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7408, %r362, %r7357;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7411, %r359, %r7354, %r7408;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7415, %r7416}, {%r393, %r399, %r396, %r402}, {%r7292, %r7362}, {%r1827, %r1827};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7425, %r7426}, {%r393, %r399, %r396, %r402}, {%r7301, %r7369}, {%r1827, %r1827};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7435, %r7436}, {%r393, %r399, %r396, %r402}, {%r7310, %r7376}, {%r1827, %r1827};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7445, %r7446}, {%r393, %r399, %r396, %r402}, {%r7319, %r7383}, {%r1827, %r1827};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7455, %r7456}, {%r393, %r399, %r396, %r402}, {%r7328, %r7390}, {%r1827, %r1827};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7465, %r7466}, {%r393, %r399, %r396, %r402}, {%r7337, %r7397}, {%r1827, %r1827};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7475, %r7476}, {%r393, %r399, %r396, %r402}, {%r7346, %r7404}, {%r1827, %r1827};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7485, %r7486}, {%r393, %r399, %r396, %r402}, {%r7355, %r7411}, {%r1827, %r1827};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7495, %r104, %r7415;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7498, %r104, %r7416;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7501, %r104, %r7425;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7504, %r104, %r7426;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7507, %r104, %r7435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7510, %r104, %r7436;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7513, %r104, %r7445;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7516, %r104, %r7446;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7519, %r104, %r7455;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7522, %r104, %r7456;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7525, %r104, %r7465;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7528, %r104, %r7466;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7531, %r104, %r7475;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7534, %r104, %r7476;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7537, %r104, %r7485;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7540, %r104, %r7486;
	// end inline asm
	// begin inline asm
	mov.b32 %r7543, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r7544, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7545, %r7495, %r7543;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7548, %r7545, %r7544;
	// end inline asm
	// begin inline asm
	mov.b32 %r7551, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r7552, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7553, %r7498, %r7551;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7556, %r7553, %r7552;
	// end inline asm
	// begin inline asm
	mov.b32 %r7559, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r7560, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7561, %r7501, %r7559;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7564, %r7561, %r7560;
	// end inline asm
	// begin inline asm
	mov.b32 %r7567, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r7568, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7569, %r7504, %r7567;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7572, %r7569, %r7568;
	// end inline asm
	// begin inline asm
	mov.b32 %r7575, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r7576, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7577, %r7507, %r7575;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7580, %r7577, %r7576;
	// end inline asm
	// begin inline asm
	mov.b32 %r7583, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r7584, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7585, %r7510, %r7583;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7588, %r7585, %r7584;
	// end inline asm
	// begin inline asm
	mov.b32 %r7591, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r7592, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7593, %r7513, %r7591;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7596, %r7593, %r7592;
	// end inline asm
	// begin inline asm
	mov.b32 %r7599, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r7600, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7601, %r7516, %r7599;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7604, %r7601, %r7600;
	// end inline asm
	// begin inline asm
	mov.b32 %r7607, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r7608, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7609, %r7519, %r7607;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7612, %r7609, %r7608;
	// end inline asm
	// begin inline asm
	mov.b32 %r7615, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r7616, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7617, %r7522, %r7615;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7620, %r7617, %r7616;
	// end inline asm
	// begin inline asm
	mov.b32 %r7623, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r7624, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7625, %r7525, %r7623;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7628, %r7625, %r7624;
	// end inline asm
	// begin inline asm
	mov.b32 %r7631, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r7632, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7633, %r7528, %r7631;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7636, %r7633, %r7632;
	// end inline asm
	// begin inline asm
	mov.b32 %r7639, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r7640, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7641, %r7531, %r7639;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7644, %r7641, %r7640;
	// end inline asm
	// begin inline asm
	mov.b32 %r7647, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r7648, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7649, %r7534, %r7647;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7652, %r7649, %r7648;
	// end inline asm
	// begin inline asm
	mov.b32 %r7655, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r7656, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7657, %r7537, %r7655;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7660, %r7657, %r7656;
	// end inline asm
	// begin inline asm
	mov.b32 %r7663, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r7664, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7665, %r7540, %r7663;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7668, %r7665, %r7664;
	// end inline asm
	// begin inline asm
	mov.b32 %r7674, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r7672, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7673, %r7674, %r7672;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7676, %r7548, %r7673;
	// end inline asm
	// begin inline asm
	mov.b32 %r7679, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7680, %r7674, %r7679;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7683, %r7556, %r7680;
	// end inline asm
	// begin inline asm
	mov.b32 %r7686, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7687, %r7674, %r7686;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7690, %r7564, %r7687;
	// end inline asm
	// begin inline asm
	mov.b32 %r7693, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7694, %r7674, %r7693;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7697, %r7572, %r7694;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7700, %r7676, %r7690, %r2315;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7704, %r7683, %r7697, %r2315;
	// end inline asm
	shl.b32 	%r7711, %r7704, 4;
	// begin inline asm
	lop3.b32 %r7708, %r2321, %r7700, %r7711, 202;
	// end inline asm
	xor.b32  	%r7851, %r7708, -2004318072;
	// begin inline asm
	mov.b32 %r7715, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r7713, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7714, %r7715, %r7713;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7717, %r7580, %r7714;
	// end inline asm
	// begin inline asm
	mov.b32 %r7720, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7721, %r7715, %r7720;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7724, %r7588, %r7721;
	// end inline asm
	// begin inline asm
	mov.b32 %r7727, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7728, %r7715, %r7727;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7731, %r7596, %r7728;
	// end inline asm
	// begin inline asm
	mov.b32 %r7734, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7735, %r7715, %r7734;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7738, %r7604, %r7735;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7741, %r7717, %r7731, %r2315;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7745, %r7724, %r7738, %r2315;
	// end inline asm
	shl.b32 	%r7752, %r7745, 4;
	// begin inline asm
	lop3.b32 %r7749, %r2321, %r7741, %r7752, 202;
	// end inline asm
	xor.b32  	%r7852, %r7749, -2004318072;
	// begin inline asm
	mov.b32 %r7756, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r7754, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7755, %r7756, %r7754;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7758, %r7612, %r7755;
	// end inline asm
	// begin inline asm
	mov.b32 %r7761, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7762, %r7756, %r7761;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7765, %r7620, %r7762;
	// end inline asm
	// begin inline asm
	mov.b32 %r7768, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7769, %r7756, %r7768;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7772, %r7628, %r7769;
	// end inline asm
	// begin inline asm
	mov.b32 %r7775, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7776, %r7756, %r7775;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7779, %r7636, %r7776;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7782, %r7758, %r7772, %r2315;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7786, %r7765, %r7779, %r2315;
	// end inline asm
	shl.b32 	%r7793, %r7786, 4;
	// begin inline asm
	lop3.b32 %r7790, %r2321, %r7782, %r7793, 202;
	// end inline asm
	xor.b32  	%r7853, %r7790, -2004318072;
	// begin inline asm
	mov.b32 %r7797, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r7795, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7796, %r7797, %r7795;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7799, %r7644, %r7796;
	// end inline asm
	// begin inline asm
	mov.b32 %r7802, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7803, %r7797, %r7802;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7806, %r7652, %r7803;
	// end inline asm
	// begin inline asm
	mov.b32 %r7809, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7810, %r7797, %r7809;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7813, %r7660, %r7810;
	// end inline asm
	// begin inline asm
	mov.b32 %r7816, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7817, %r7797, %r7816;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7820, %r7668, %r7817;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7823, %r7799, %r7813, %r2315;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7827, %r7806, %r7820, %r2315;
	// end inline asm
	shl.b32 	%r7834, %r7827, 4;
	// begin inline asm
	lop3.b32 %r7831, %r2321, %r7823, %r7834, 202;
	// end inline asm
	xor.b32  	%r7854, %r7831, -2004318072;
	st.shared.u32 	[%rd89], %r7851;
	st.shared.u32 	[%rd90], %r7852;
	st.shared.u32 	[%rd91], %r7853;
	st.shared.u32 	[%rd92], %r7854;
	add.s32 	%r7973, %r7973, -64;
	add.s64 	%rd145, %rd145, 8324;
	setp.eq.s32 	%p214, %r7973, 0;
	@%p214 bra 	$L__BB0_85;
	bra.uni 	$L__BB0_84;
$L__BB0_85:                             // %guard_exit16861
                                        //   in Loop: Header=BB0_83 Depth=1
	bar.sync 	0;
	ld.shared.u32 	%r7860, [%rd5];
	ld.shared.u32 	%r7861, [%rd6+128];
	ld.shared.u32 	%r7868, [%rd7+4];
	ld.shared.u32 	%r7869, [%rd8+128];
	ld.shared.u32 	%r7876, [%rd5+8324];
	ld.shared.u32 	%r7877, [%rd6+8452];
	ld.shared.u32 	%r7884, [%rd6+8328];
	ld.shared.u32 	%r7885, [%rd6+8456];
	ld.shared.u32 	%r7892, [%rd5+16648];
	ld.shared.u32 	%r7893, [%rd6+16776];
	ld.shared.u32 	%r7900, [%rd6+16652];
	ld.shared.u32 	%r7901, [%rd6+16780];
	ld.shared.u32 	%r7908, [%rd5+24972];
	ld.shared.u32 	%r7909, [%rd6+25100];
	ld.shared.u32 	%r7916, [%rd6+24976];
	ld.shared.u32 	%r7917, [%rd6+25104];
	// begin inline asm
	prmt.b32 %r7855, %r7860, %r7861, %r566;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7859, %r7860, %r7861, %r570;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7863, %r7868, %r7869, %r566;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7867, %r7868, %r7869, %r570;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7871, %r7876, %r7877, %r566;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7875, %r7876, %r7877, %r570;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7879, %r7884, %r7885, %r566;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7883, %r7884, %r7885, %r570;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7887, %r7892, %r7893, %r566;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7891, %r7892, %r7893, %r570;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7895, %r7900, %r7901, %r566;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7899, %r7900, %r7901, %r570;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7903, %r7908, %r7909, %r566;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7907, %r7908, %r7909, %r570;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7911, %r7916, %r7917, %r566;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7915, %r7916, %r7917, %r570;
	// end inline asm
	selp.b32 	%r7919, %r7859, %r7855, %p201;
	shfl.sync.bfly.b32	%r141, %r7919, 8, 31, -1;
	selp.b32 	%r7920, %r7867, %r7863, %p201;
	shfl.sync.bfly.b32	%r142, %r7920, 8, 31, -1;
	selp.b32 	%r7921, %r7875, %r7871, %p201;
	shfl.sync.bfly.b32	%r7922, %r7921, 8, 31, -1;
	selp.b32 	%r7923, %r7883, %r7879, %p201;
	shfl.sync.bfly.b32	%r7924, %r7923, 8, 31, -1;
	selp.b32 	%r7925, %r7891, %r7887, %p201;
	shfl.sync.bfly.b32	%r7926, %r7925, 8, 31, -1;
	selp.b32 	%r7927, %r7899, %r7895, %p201;
	shfl.sync.bfly.b32	%r7928, %r7927, 8, 31, -1;
	selp.b32 	%r7929, %r7907, %r7903, %p201;
	shfl.sync.bfly.b32	%r7930, %r7929, 8, 31, -1;
	selp.b32 	%r7931, %r7915, %r7911, %p201;
	shfl.sync.bfly.b32	%r7932, %r7931, 8, 31, -1;
	setp.eq.s32 	%p216, %r7972, 0;
	shl.b32 	%r7986, %r7972, 10;
	@%p216 bra 	$L__BB0_86;
// %bb.122:                             // %pass16075
                                        //   in Loop: Header=BB0_83 Depth=1
	selp.b32 	%r7933, %r142, %r7867, %p201;
	selp.b32 	%r7934, %r7863, %r142, %p201;
	selp.b32 	%r7935, %r141, %r7859, %p201;
	selp.b32 	%r7936, %r7855, %r141, %p201;
	or.b32  	%r7938, %r52, %r7986;
	cvt.u64.u32 	%rd93, %r7938;
	add.s64 	%rd94, %rd93, %rd9;
	shr.u64 	%rd95, %rd94, 39;
	add.s64 	%rd96, %rd94, %rd95;
	shr.s64 	%rd97, %rd96, 25;
	setp.lt.s64 	%p218, %rd94, 0;
	and.b64  	%rd98, %rd96, -33554432;
	setp.ne.s64 	%p219, %rd98, %rd94;
	and.pred  	%p220, %p218, %p219;
	selp.u64 	%rd99, 1, 0, %p220;
	sub.s64 	%rd100, %rd99, %rd97;
	shl.b64 	%rd101, %rd100, 25;
	add.s64 	%rd102, %rd101, %rd94;
	shl.b64 	%rd103, %rd102, 2;
	add.s64 	%rd104, %rd3, %rd103;
	st.global.v4.u32 	[%rd104], {%r7936, %r7934, %r7935, %r7933};
$L__BB0_86:                             // %L37680
                                        //   in Loop: Header=BB0_83 Depth=1
	or.b32  	%r7939, %r7972, 64;
	setp.gt.u32 	%p221, %r7939, 191;
	@%p221 bra 	$L__BB0_120;
	bra.uni 	$L__BB0_87;
$L__BB0_120:                            // %pass16173
                                        //   in Loop: Header=BB0_83 Depth=1
	selp.b32 	%r143, %r7871, %r7922, %p201;
	selp.b32 	%r144, %r7922, %r7875, %p201;
	selp.b32 	%r145, %r7879, %r7924, %p201;
	selp.b32 	%r146, %r7924, %r7883, %p201;
	or.b32  	%r7940, %r7986, %r53;
	or.b32  	%r7941, %r7940, 65536;
	cvt.u64.u32 	%rd105, %r7941;
	add.s64 	%rd106, %rd105, %rd9;
	shr.u64 	%rd107, %rd106, 39;
	add.s64 	%rd108, %rd106, %rd107;
	shr.s64 	%rd109, %rd108, 25;
	setp.lt.s64 	%p222, %rd106, 0;
	and.b64  	%rd110, %rd108, -33554432;
	setp.ne.s64 	%p223, %rd110, %rd106;
	and.pred  	%p224, %p222, %p223;
	selp.u64 	%rd111, 1, 0, %p224;
	sub.s64 	%rd112, %rd111, %rd109;
	shl.b64 	%rd113, %rd112, 25;
	add.s64 	%rd114, %rd113, %rd106;
	shl.b64 	%rd115, %rd114, 2;
	add.s64 	%rd116, %rd3, %rd115;
	st.global.v4.u32 	[%rd116], {%r143, %r145, %r144, %r146};
$L__BB0_87:                             // %L37875
                                        //   in Loop: Header=BB0_83 Depth=1
	selp.b32 	%r151, %r7903, %r7930, %p201;
	selp.b32 	%r152, %r7930, %r7907, %p201;
	selp.b32 	%r153, %r7911, %r7932, %p201;
	selp.b32 	%r154, %r7932, %r7915, %p201;
	or.b32  	%r7942, %r7972, 128;
	setp.gt.u32 	%p225, %r7942, 191;
	or.b32  	%r7953, %r7986, %r53;
	@%p225 bra 	$L__BB0_121;
	bra.uni 	$L__BB0_88;
$L__BB0_121:                            // %pass16271
                                        //   in Loop: Header=BB0_83 Depth=1
	selp.b32 	%r147, %r7887, %r7926, %p201;
	selp.b32 	%r148, %r7926, %r7891, %p201;
	selp.b32 	%r149, %r7895, %r7928, %p201;
	selp.b32 	%r150, %r7928, %r7899, %p201;
	or.b32  	%r7944, %r7953, 131072;
	cvt.u64.u32 	%rd117, %r7944;
	add.s64 	%rd118, %rd117, %rd9;
	shr.u64 	%rd119, %rd118, 39;
	add.s64 	%rd120, %rd118, %rd119;
	shr.s64 	%rd121, %rd120, 25;
	setp.lt.s64 	%p226, %rd118, 0;
	and.b64  	%rd122, %rd120, -33554432;
	setp.ne.s64 	%p227, %rd122, %rd118;
	and.pred  	%p228, %p226, %p227;
	selp.u64 	%rd123, 1, 0, %p228;
	sub.s64 	%rd124, %rd123, %rd121;
	shl.b64 	%rd125, %rd124, 25;
	add.s64 	%rd126, %rd125, %rd118;
	shl.b64 	%rd127, %rd126, 2;
	add.s64 	%rd128, %rd3, %rd127;
	st.global.v4.u32 	[%rd128], {%r147, %r149, %r148, %r150};
	bra.uni 	$L__BB0_88;
$L__BB0_89:                             // %L38276
	st.global.u32 	[%rd4], %r7951;
	ret;
$L__BB0_7:                              // %L166
	mov.u32 	%r7950, 2;
	st.global.u32 	[%rd4], %r7950;
	mov.u64 	%rd143, exception3329;
	cvta.global.u64 	%rd144, %rd143;
	{ // callseq 4, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd144;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 4
	{ // callseq 5, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd36;
	st.param.b32 	[param0+8], %r155;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 5
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
$L__BB0_10:                             // %L275
	mov.u32 	%r7949, 3;
	st.global.u32 	[%rd4], %r7949;
	mov.u64 	%rd141, exception3329;
	cvta.global.u64 	%rd142, %rd141;
	{ // callseq 2, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd142;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 2
	{ // callseq 3, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd36;
	st.param.b32 	[param0+8], %r155;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 3
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
$L__BB0_1:                              // %L8
	mov.u64 	%rd41, exception13349;
	cvta.global.u64 	%rd42, %rd41;
	{ // callseq 0, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd42;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 0
	{ // callseq 1, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd36;
	st.param.b32 	[param0+8], %r155;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 1
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
                                        // -- End function
}
