// PTX kernel code for the CUDA upchannelizer
// This file has been generated automatically by `upchan.jl`.
// Do not modify this file, your changes will be lost.

// PTX CompilerJob of MethodInstance for upchan(::Int32, ::Int32, ::Int32, ::Int32, ::Int32, ::Int32, ::CuDeviceVector{Float16x2, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int32, 1}) for sm_86, minthreads=512, blocks_per_sm=2

//
// Generated by LLVM NVPTX Back-End
//

.version 8.2
.target sm_86
.address_size 64

	// .globl	_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE // -- Begin function _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE
.func gpu_report_exception
(
	.param .b64 gpu_report_exception_param_0
)
.noreturn
{
	trap;
}
.func gpu_signal_exception
(
	.param .align 8 .b8 gpu_signal_exception_param_0[16]
)
.noreturn
{
	trap;
}
.extern .shared .align 32 .b8 shmem[];
.global .align 1 .b8 exception2057[6] = {101, 114, 114, 111, 114, 0};
.global .align 1 .b8 exception12077[10] = {101, 120, 99, 101, 112, 116, 105, 111, 110, 0};
                                        // @_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE
.visible .entry _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE(
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_0[16],
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_1,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_2,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_3,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_4,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_5,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_6,
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_7[32],
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_8[32],
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_9[32],
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_10[32]
)
.reqntid 512, 1, 1
.minnctapersm 2
{
	.reg .pred 	%p<230>;
	.reg .b16 	%rs<303>;
	.reg .b32 	%r<2592>;
	.reg .f32 	%f<847>;
	.reg .b64 	%rd<141>;

// %bb.0:                               // %conversion
	ld.param.u32 	%r147, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_0+8];
	ld.param.u64 	%rd38, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_0];
	// begin inline asm
	mov.u32 %r154, %dynamic_smem_size;
	// end inline asm
	setp.gt.u32 	%p1, %r154, 67839;
	@%p1 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:                              // %L19
	ld.param.u64 	%rd39, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_10];
	ld.param.u32 	%r148, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_1];
	mov.u32 	%r1, %tid.x;
	mov.u32 	%r2, %tid.y;
	shl.b32 	%r3, %r2, 5;
	mov.u32 	%r4, %ctaid.x;
	shl.b32 	%r155, %r4, 9;
	or.b32  	%r156, %r3, %r1;
	or.b32  	%r157, %r156, %r155;
	mul.wide.u32 	%rd45, %r157, 4;
	add.s64 	%rd4, %rd39, %rd45;
	mov.u32 	%r158, 1;
	st.global.u32 	[%rd4], %r158;
	setp.gt.u32 	%p2, %r148, 32767;
	@%p2 bra 	$L__BB0_7;
// %bb.3:                               // %L119
	ld.param.u32 	%r149, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_2];
	setp.lt.s32 	%p3, %r149, %r148;
	setp.gt.s32 	%p4, %r149, 65535;
	or.pred  	%p5, %p3, %p4;
	@%p5 bra 	$L__BB0_7;
// %bb.4:                               // %L126
	ld.param.u32 	%r150, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_3];
	sub.s32 	%r159, %r149, %r148;
	and.b32  	%r160, %r159, 255;
	setp.ne.s32 	%p6, %r160, 0;
	setp.gt.u32 	%p7, %r150, 1023;
	or.pred  	%p8, %p6, %p7;
	@%p8 bra 	$L__BB0_7;
// %bb.5:                               // %L137
	ld.param.u32 	%r151, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_4];
	setp.lt.s32 	%p9, %r151, %r150;
	setp.gt.s32 	%p10, %r151, 2047;
	or.pred  	%p11, %p9, %p10;
	@%p11 bra 	$L__BB0_7;
// %bb.6:                               // %L144
	sub.s32 	%r161, %r151, %r150;
	add.s32 	%r162, %r161, 3;
	and.b32  	%r163, %r162, 7;
	setp.eq.s32 	%p12, %r163, 0;
	@%p12 bra 	$L__BB0_8;
	bra.uni 	$L__BB0_7;
$L__BB0_8:                              // %L260
	ld.param.u32 	%r152, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_5];
	setp.lt.s32 	%p13, %r152, 0;
	@%p13 bra 	$L__BB0_10;
// %bb.9:                               // %L262
	ld.param.u32 	%r153, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_6];
	setp.le.s32 	%p14, %r152, %r153;
	setp.lt.s32 	%p15, %r153, 385;
	and.pred  	%p16, %p14, %p15;
	@%p16 bra 	$L__BB0_11;
	bra.uni 	$L__BB0_10;
$L__BB0_11:                             // %pass168
	bfe.u32 	%r99, %r1, 1, 1;
	and.b32  	%r100, %r1, 1;
	bfe.u32 	%r101, %r1, 2, 1;
	shl.b32 	%r168, %r101, 1;
	shl.b32 	%r169, %r100, 2;
	shl.b32 	%r170, %r99, 3;
	or.b32  	%r171, %r169, %r170;
	or.b32  	%r172, %r168, %r171;
	shr.u32 	%r102, %r1, 4;
	or.b32  	%r103, %r102, %r172;
	or.b32  	%r104, %r103, 16;
	mov.f32 	%f148, 0f40000000;
	mov.f32 	%f149, 0f42FE0000;
	div.approx.f32 	%f86, %f149, %f148;
	cvt.rn.f32.s32 	%f150, %r103;
	sub.f32 	%f151, %f150, %f86;
	mov.f32 	%f180, 0f42000000;
	div.approx.f32 	%f88, %f151, %f180;
	setp.ne.f32 	%p22, %f88, 0f00000000;
	mov.f32 	%f822, 0f3F800000;
	mov.f32 	%f815, %f822;
	@%p22 bra 	$L__BB0_12;
	bra.uni 	$L__BB0_13;
$L__BB0_12:                             // %L580
	sin.approx.f32 	%f181, %f88;
	div.approx.f32 	%f815, %f181, %f88;
$L__BB0_13:                             // %L583
	cvt.rn.f32.s32 	%f184, %r104;
	sub.f32 	%f185, %f184, %f86;
	div.approx.f32 	%f5, %f185, %f180;
	setp.eq.f32 	%p28, %f5, 0f00000000;
	mov.f32 	%f816, %f822;
	@%p28 bra 	$L__BB0_15;
// %bb.14:                              // %L600
	sin.approx.f32 	%f215, %f5;
	div.approx.f32 	%f816, %f215, %f5;
$L__BB0_15:                             // %L603
	or.b32  	%r190, %r103, 32;
	or.b32  	%r6, %r103, 48;
	cvt.rn.f32.s32 	%f219, %r190;
	sub.f32 	%f220, %f219, %f86;
	div.approx.f32 	%f9, %f220, %f180;
	setp.eq.f32 	%p34, %f9, 0f00000000;
	mov.f32 	%f817, %f822;
	@%p34 bra 	$L__BB0_17;
// %bb.16:                              // %L682
	sin.approx.f32 	%f250, %f9;
	div.approx.f32 	%f817, %f250, %f9;
$L__BB0_17:                             // %L685
	cvt.rn.f32.s32 	%f253, %r6;
	sub.f32 	%f254, %f253, %f86;
	div.approx.f32 	%f14, %f254, %f180;
	setp.eq.f32 	%p40, %f14, 0f00000000;
	mov.f32 	%f818, %f822;
	@%p40 bra 	$L__BB0_19;
// %bb.18:                              // %L702
	sin.approx.f32 	%f284, %f14;
	div.approx.f32 	%f818, %f284, %f14;
$L__BB0_19:                             // %L705
	or.b32  	%r208, %r103, 64;
	or.b32  	%r8, %r103, 80;
	cvt.rn.f32.s32 	%f288, %r208;
	sub.f32 	%f289, %f288, %f86;
	div.approx.f32 	%f18, %f289, %f180;
	setp.eq.f32 	%p46, %f18, 0f00000000;
	mov.f32 	%f819, %f822;
	@%p46 bra 	$L__BB0_21;
// %bb.20:                              // %L784
	sin.approx.f32 	%f319, %f18;
	div.approx.f32 	%f819, %f319, %f18;
$L__BB0_21:                             // %L787
	cvt.rn.f32.s32 	%f322, %r8;
	sub.f32 	%f323, %f322, %f86;
	div.approx.f32 	%f23, %f323, %f180;
	setp.eq.f32 	%p52, %f23, 0f00000000;
	mov.f32 	%f820, %f822;
	@%p52 bra 	$L__BB0_23;
// %bb.22:                              // %L804
	sin.approx.f32 	%f353, %f23;
	div.approx.f32 	%f820, %f353, %f23;
$L__BB0_23:                             // %L807
	or.b32  	%r226, %r103, 96;
	or.b32  	%r10, %r103, 112;
	cvt.rn.f32.s32 	%f357, %r226;
	sub.f32 	%f358, %f357, %f86;
	div.approx.f32 	%f27, %f358, %f180;
	setp.eq.f32 	%p58, %f27, 0f00000000;
	mov.f32 	%f821, %f822;
	@%p58 bra 	$L__BB0_25;
// %bb.24:                              // %L886
	sin.approx.f32 	%f388, %f27;
	div.approx.f32 	%f821, %f388, %f27;
$L__BB0_25:                             // %L889
	shr.u32 	%r98, %r1, 1;
	cvt.rn.f32.s32 	%f391, %r10;
	sub.f32 	%f392, %f391, %f86;
	div.approx.f32 	%f32, %f392, %f180;
	setp.eq.f32 	%p64, %f32, 0f00000000;
	@%p64 bra 	$L__BB0_27;
// %bb.26:                              // %L906
	sin.approx.f32 	%f422, %f32;
	div.approx.f32 	%f822, %f422, %f32;
$L__BB0_27:                             // %L909
	shr.u32 	%r14, %r1, 3;
	and.b32  	%r270, %r14, 2;
	and.b32  	%r271, %r98, 4;
	or.b32  	%r15, %r101, %r270;
	or.b32  	%r16, %r15, %r271;
	and.b32  	%r272, %r1, 3;
	mul.lo.s32 	%r273, %r272, %r16;
	shl.b32 	%r274, %r273, 1;
	neg.s32 	%r275, %r274;
	cvt.rn.f32.s32 	%f493, %r275;
	mov.f32 	%f494, 0f41000000;
	div.approx.f32 	%f35, %f493, %f494;
	abs.f32 	%f837, %f35;
	setp.lt.f32 	%p79, %f837, 0f40000000;
	@%p79 bra 	$L__BB0_94;
// %bb.28:
	setp.gtu.f32 	%p80, %f837, 0f4B800000;
	@%p80 bra 	$L__BB0_90;
	bra.uni 	$L__BB0_29;
$L__BB0_90:
	mov.b32 	%r106, %f837;
	and.b32  	%r276, %r106, 8388607;
	or.b32  	%r2585, %r276, 1065353216;
	mov.b32 	%f836, %r2585;
	add.s32 	%r277, %r106, -1073741824;
	and.b32  	%r2586, %r277, -8388608;
	setp.eq.s32 	%p86, %r2586, 0;
	@%p86 bra 	$L__BB0_93;
// %bb.91:                              // %__nv_fmaf_rn.exit4.i.i.i649.preheader
	mov.f32 	%f504, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f503,%f504;
	// end inline asm
$L__BB0_92:                             // %__nv_fmaf_rn.exit4.i.i.i649
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r278, %r2586, 192937984;
	add.s32 	%r279, %r2585, %r278;
	mov.b32 	%f505, %r279;
	mul.f32 	%f506, %f503, %f505;
	sub.f32 	%f507, %f505, %f506;
	fma.rn.f32 	%f508, %f507, %f503, %f506;
	sub.f32 	%f509, %f505, %f508;
	fma.rz.f32 	%f510, %f509, %f503, %f508;
	cvt.rzi.f32.f32 	%f511, %f510;
	sub.f32 	%f836, %f505, %f511;
	sub.s32 	%r2586, %r2586, %r278;
	mov.b32 	%r2585, %f836;
	setp.ne.s32 	%p87, %r2586, 0;
	setp.ne.s32 	%p88, %r2585, 0;
	and.pred  	%p89, %p87, %p88;
	@%p89 bra 	$L__BB0_92;
$L__BB0_93:                             // %__internal_fmodf_slowpath_mod.exit.i.i651
	setp.gt.u32 	%p90, %r106, 2139095039;
	selp.f32 	%f512, 0f7FFFFFFF, 0f4B800000, %p90;
	mul.f32 	%f513, %f836, 0f34000000;
	mul.f32 	%f837, %f512, %f513;
	bra.uni 	$L__BB0_94;
$L__BB0_29:                             // %__nv_fast_fdividef.exit.i.i.i628
	div.approx.f32 	%f496, %f837, %f148;
	cvt.rzi.f32.f32 	%f835, %f496;
	fma.rn.f32 	%f90, %f835, 0fC0000000, %f837;
	mov.b32 	%r105, %f90;
	setp.lt.u32 	%p81, %r105, 1073741824;
	@%p81 bra 	$L__BB0_89;
// %bb.30:
	setp.lt.u32 	%p82, %r105, -2147483647;
	@%p82 bra 	$L__BB0_87;
// %bb.31:
	add.f32 	%f501, %f835, 0fBF800000;
	setp.lt.f32 	%p85, %f90, 0fC0000000;
	add.f32 	%f502, %f501, 0fBF800000;
	selp.f32 	%f835, %f502, %f501, %p85;
	bra.uni 	$L__BB0_89;
$L__BB0_87:
	add.f32 	%f835, %f835, 0f3F800000;
	setp.ltu.f32 	%p83, %f90, 0f40800000;
	@%p83 bra 	$L__BB0_89;
// %bb.88:                              // %__nv_fmaf_rn.exit.i.i.i632
	add.f32 	%f497, %f835, 0f3F800000;
	fma.rn.f32 	%f499, %f148, 0fC0400000, %f90;
	setp.ge.f32 	%p84, %f499, 0f00000000;
	add.f32 	%f500, %f497, 0f3F800000;
	selp.f32 	%f835, %f500, %f497, %p84;
$L__BB0_89:                             // %__internal_fmodf_fastpath_quot.exit.i.i635
	fma.rn.f32 	%f837, %f835, 0fC0000000, %f837;
$L__BB0_94:                             // %__internal_fmodf_kernel.exit.i654
	shl.b32 	%r93, %r1, 1;
	abs.f32 	%f514, %f837;
	setp.gtu.f32 	%p91, %f514, 0f7F800000;
	@%p91 bra 	$L__BB0_96;
// %bb.95:
	mov.b32 	%r280, %f35;
	and.b32  	%r281, %r280, -2147483648;
	mov.b32 	%r282, %f837;
	or.b32  	%r283, %r281, %r282;
	mov.b32 	%f837, %r283;
$L__BB0_96:                             // %__nv_fmodf.exit655
	and.b32  	%r292, %r93, 6;
	mov.u32 	%r293, -8;
	sub.s32 	%r294, %r293, %r292;
	mul.lo.s32 	%r295, %r16, %r294;
	cvt.rn.f32.s32 	%f545, %r295;
	div.approx.f32 	%f106, %f545, %f494;
	abs.f32 	%f825, %f106;
	setp.lt.f32 	%p99, %f825, 0f40000000;
	@%p99 bra 	$L__BB0_43;
// %bb.32:
	setp.gtu.f32 	%p100, %f825, 0f4B800000;
	@%p100 bra 	$L__BB0_39;
	bra.uni 	$L__BB0_33;
$L__BB0_39:
	mov.b32 	%r18, %f825;
	and.b32  	%r296, %r18, 8388607;
	or.b32  	%r2564, %r296, 1065353216;
	mov.b32 	%f824, %r2564;
	add.s32 	%r297, %r18, -1073741824;
	and.b32  	%r2565, %r297, -8388608;
	setp.eq.s32 	%p106, %r2565, 0;
	@%p106 bra 	$L__BB0_42;
// %bb.40:                              // %__nv_fmaf_rn.exit4.i.i.i.preheader
	mov.f32 	%f556, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f555,%f556;
	// end inline asm
$L__BB0_41:                             // %__nv_fmaf_rn.exit4.i.i.i
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r298, %r2565, 192937984;
	add.s32 	%r299, %r2564, %r298;
	mov.b32 	%f557, %r299;
	mul.f32 	%f558, %f555, %f557;
	sub.f32 	%f559, %f557, %f558;
	fma.rn.f32 	%f560, %f559, %f555, %f558;
	sub.f32 	%f561, %f557, %f560;
	fma.rz.f32 	%f562, %f561, %f555, %f560;
	cvt.rzi.f32.f32 	%f563, %f562;
	sub.f32 	%f824, %f557, %f563;
	sub.s32 	%r2565, %r2565, %r298;
	mov.b32 	%r2564, %f824;
	setp.ne.s32 	%p107, %r2565, 0;
	setp.ne.s32 	%p108, %r2564, 0;
	and.pred  	%p109, %p107, %p108;
	@%p109 bra 	$L__BB0_41;
$L__BB0_42:                             // %__internal_fmodf_slowpath_mod.exit.i.i
	setp.gt.u32 	%p110, %r18, 2139095039;
	selp.f32 	%f564, 0f7FFFFFFF, 0f4B800000, %p110;
	mul.f32 	%f565, %f824, 0f34000000;
	mul.f32 	%f825, %f564, %f565;
	bra.uni 	$L__BB0_43;
$L__BB0_33:                             // %__nv_fast_fdividef.exit.i.i.i
	div.approx.f32 	%f548, %f825, %f148;
	cvt.rzi.f32.f32 	%f823, %f548;
	fma.rn.f32 	%f38, %f823, 0fC0000000, %f825;
	mov.b32 	%r17, %f38;
	setp.lt.u32 	%p101, %r17, 1073741824;
	@%p101 bra 	$L__BB0_38;
// %bb.34:
	setp.lt.u32 	%p102, %r17, -2147483647;
	@%p102 bra 	$L__BB0_36;
// %bb.35:
	add.f32 	%f553, %f823, 0fBF800000;
	setp.lt.f32 	%p105, %f38, 0fC0000000;
	add.f32 	%f554, %f553, 0fBF800000;
	selp.f32 	%f823, %f554, %f553, %p105;
	bra.uni 	$L__BB0_38;
$L__BB0_36:
	add.f32 	%f823, %f823, 0f3F800000;
	setp.ltu.f32 	%p103, %f38, 0f40800000;
	@%p103 bra 	$L__BB0_38;
// %bb.37:                              // %__nv_fmaf_rn.exit.i.i.i
	add.f32 	%f549, %f823, 0f3F800000;
	fma.rn.f32 	%f551, %f148, 0fC0400000, %f38;
	setp.ge.f32 	%p104, %f551, 0f00000000;
	add.f32 	%f552, %f549, 0f3F800000;
	selp.f32 	%f823, %f552, %f549, %p104;
$L__BB0_38:                             // %__internal_fmodf_fastpath_quot.exit.i.i
	fma.rn.f32 	%f825, %f823, 0fC0000000, %f825;
$L__BB0_43:                             // %__internal_fmodf_kernel.exit.i
	abs.f32 	%f566, %f825;
	setp.gtu.f32 	%p111, %f566, 0f7F800000;
	@%p111 bra 	$L__BB0_45;
// %bb.44:
	mov.b32 	%r300, %f106;
	and.b32  	%r301, %r300, -2147483648;
	mov.b32 	%r302, %f825;
	or.b32  	%r303, %r301, %r302;
	mov.b32 	%f825, %r303;
$L__BB0_45:                             // %__nv_fmodf.exit
	shl.b32 	%r324, %r99, 1;
	neg.s32 	%r29, %r324;
	mul.lo.s32 	%r30, %r29, %r16;
	cvt.rn.f32.s32 	%f599, %r30;
	div.approx.f32 	%f52, %f599, %f180;
	abs.f32 	%f841, %f52;
	setp.lt.f32 	%p119, %f841, 0f40000000;
	@%p119 bra 	$L__BB0_104;
// %bb.46:
	setp.gtu.f32 	%p120, %f841, 0f4B800000;
	@%p120 bra 	$L__BB0_100;
	bra.uni 	$L__BB0_47;
$L__BB0_100:
	mov.b32 	%r114, %f841;
	and.b32  	%r325, %r114, 8388607;
	or.b32  	%r2587, %r325, 1065353216;
	mov.b32 	%f840, %r2587;
	add.s32 	%r326, %r114, -1073741824;
	and.b32  	%r2588, %r326, -8388608;
	setp.eq.s32 	%p126, %r2588, 0;
	@%p126 bra 	$L__BB0_103;
// %bb.101:                             // %__nv_fmaf_rn.exit4.i.i.i680.preheader
	mov.f32 	%f610, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f609,%f610;
	// end inline asm
$L__BB0_102:                            // %__nv_fmaf_rn.exit4.i.i.i680
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r327, %r2588, 192937984;
	add.s32 	%r328, %r2587, %r327;
	mov.b32 	%f611, %r328;
	mul.f32 	%f612, %f609, %f611;
	sub.f32 	%f613, %f611, %f612;
	fma.rn.f32 	%f614, %f613, %f609, %f612;
	sub.f32 	%f615, %f611, %f614;
	fma.rz.f32 	%f616, %f615, %f609, %f614;
	cvt.rzi.f32.f32 	%f617, %f616;
	sub.f32 	%f840, %f611, %f617;
	sub.s32 	%r2588, %r2588, %r327;
	mov.b32 	%r2587, %f840;
	setp.ne.s32 	%p127, %r2588, 0;
	setp.ne.s32 	%p128, %r2587, 0;
	and.pred  	%p129, %p127, %p128;
	@%p129 bra 	$L__BB0_102;
$L__BB0_103:                            // %__internal_fmodf_slowpath_mod.exit.i.i682
	setp.gt.u32 	%p130, %r114, 2139095039;
	selp.f32 	%f618, 0f7FFFFFFF, 0f4B800000, %p130;
	mul.f32 	%f619, %f840, 0f34000000;
	mul.f32 	%f841, %f618, %f619;
	bra.uni 	$L__BB0_104;
$L__BB0_47:                             // %__nv_fast_fdividef.exit.i.i.i659
	div.approx.f32 	%f602, %f841, %f148;
	cvt.rzi.f32.f32 	%f839, %f602;
	fma.rn.f32 	%f109, %f839, 0fC0000000, %f841;
	mov.b32 	%r113, %f109;
	setp.lt.u32 	%p121, %r113, 1073741824;
	@%p121 bra 	$L__BB0_99;
// %bb.48:
	setp.lt.u32 	%p122, %r113, -2147483647;
	@%p122 bra 	$L__BB0_97;
// %bb.49:
	add.f32 	%f607, %f839, 0fBF800000;
	setp.lt.f32 	%p125, %f109, 0fC0000000;
	add.f32 	%f608, %f607, 0fBF800000;
	selp.f32 	%f839, %f608, %f607, %p125;
	bra.uni 	$L__BB0_99;
$L__BB0_97:
	add.f32 	%f839, %f839, 0f3F800000;
	setp.ltu.f32 	%p123, %f109, 0f40800000;
	@%p123 bra 	$L__BB0_99;
// %bb.98:                              // %__nv_fmaf_rn.exit.i.i.i663
	add.f32 	%f603, %f839, 0f3F800000;
	fma.rn.f32 	%f605, %f148, 0fC0400000, %f109;
	setp.ge.f32 	%p124, %f605, 0f00000000;
	add.f32 	%f606, %f603, 0f3F800000;
	selp.f32 	%f839, %f606, %f603, %p124;
$L__BB0_99:                             // %__internal_fmodf_fastpath_quot.exit.i.i666
	fma.rn.f32 	%f841, %f839, 0fC0000000, %f841;
$L__BB0_104:                            // %__internal_fmodf_kernel.exit.i685
	abs.f32 	%f620, %f841;
	setp.gtu.f32 	%p131, %f620, 0f7F800000;
	@%p131 bra 	$L__BB0_106;
// %bb.105:
	mov.b32 	%r329, %f52;
	and.b32  	%r330, %r329, -2147483648;
	mov.b32 	%r331, %f841;
	or.b32  	%r332, %r330, %r331;
	mov.b32 	%f841, %r332;
$L__BB0_106:                            // %__nv_fmodf.exit686
	shl.b32 	%r341, %r16, 2;
	sub.s32 	%r342, %r30, %r341;
	cvt.rn.f32.s32 	%f651, %r342;
	div.approx.f32 	%f125, %f651, %f180;
	abs.f32 	%f829, %f125;
	setp.lt.f32 	%p139, %f829, 0f40000000;
	@%p139 bra 	$L__BB0_61;
// %bb.50:
	setp.gtu.f32 	%p140, %f829, 0f4B800000;
	@%p140 bra 	$L__BB0_57;
	bra.uni 	$L__BB0_51;
$L__BB0_57:
	mov.b32 	%r32, %f829;
	and.b32  	%r343, %r32, 8388607;
	or.b32  	%r2566, %r343, 1065353216;
	mov.b32 	%f828, %r2566;
	add.s32 	%r344, %r32, -1073741824;
	and.b32  	%r2567, %r344, -8388608;
	setp.eq.s32 	%p146, %r2567, 0;
	@%p146 bra 	$L__BB0_60;
// %bb.58:                              // %__nv_fmaf_rn.exit4.i.i.i587.preheader
	mov.f32 	%f662, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f661,%f662;
	// end inline asm
$L__BB0_59:                             // %__nv_fmaf_rn.exit4.i.i.i587
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r345, %r2567, 192937984;
	add.s32 	%r346, %r2566, %r345;
	mov.b32 	%f663, %r346;
	mul.f32 	%f664, %f661, %f663;
	sub.f32 	%f665, %f663, %f664;
	fma.rn.f32 	%f666, %f665, %f661, %f664;
	sub.f32 	%f667, %f663, %f666;
	fma.rz.f32 	%f668, %f667, %f661, %f666;
	cvt.rzi.f32.f32 	%f669, %f668;
	sub.f32 	%f828, %f663, %f669;
	sub.s32 	%r2567, %r2567, %r345;
	mov.b32 	%r2566, %f828;
	setp.ne.s32 	%p147, %r2567, 0;
	setp.ne.s32 	%p148, %r2566, 0;
	and.pred  	%p149, %p147, %p148;
	@%p149 bra 	$L__BB0_59;
$L__BB0_60:                             // %__internal_fmodf_slowpath_mod.exit.i.i589
	setp.gt.u32 	%p150, %r32, 2139095039;
	selp.f32 	%f670, 0f7FFFFFFF, 0f4B800000, %p150;
	mul.f32 	%f671, %f828, 0f34000000;
	mul.f32 	%f829, %f670, %f671;
	bra.uni 	$L__BB0_61;
$L__BB0_51:                             // %__nv_fast_fdividef.exit.i.i.i566
	div.approx.f32 	%f654, %f829, %f148;
	cvt.rzi.f32.f32 	%f827, %f654;
	fma.rn.f32 	%f55, %f827, 0fC0000000, %f829;
	mov.b32 	%r31, %f55;
	setp.lt.u32 	%p141, %r31, 1073741824;
	@%p141 bra 	$L__BB0_56;
// %bb.52:
	setp.lt.u32 	%p142, %r31, -2147483647;
	@%p142 bra 	$L__BB0_54;
// %bb.53:
	add.f32 	%f659, %f827, 0fBF800000;
	setp.lt.f32 	%p145, %f55, 0fC0000000;
	add.f32 	%f660, %f659, 0fBF800000;
	selp.f32 	%f827, %f660, %f659, %p145;
	bra.uni 	$L__BB0_56;
$L__BB0_54:
	add.f32 	%f827, %f827, 0f3F800000;
	setp.ltu.f32 	%p143, %f55, 0f40800000;
	@%p143 bra 	$L__BB0_56;
// %bb.55:                              // %__nv_fmaf_rn.exit.i.i.i570
	add.f32 	%f655, %f827, 0f3F800000;
	fma.rn.f32 	%f657, %f148, 0fC0400000, %f55;
	setp.ge.f32 	%p144, %f657, 0f00000000;
	add.f32 	%f658, %f655, 0f3F800000;
	selp.f32 	%f827, %f658, %f655, %p144;
$L__BB0_56:                             // %__internal_fmodf_fastpath_quot.exit.i.i573
	fma.rn.f32 	%f829, %f827, 0fC0000000, %f829;
$L__BB0_61:                             // %__internal_fmodf_kernel.exit.i592
	abs.f32 	%f672, %f829;
	setp.gtu.f32 	%p151, %f672, 0f7F800000;
	@%p151 bra 	$L__BB0_63;
// %bb.62:
	mov.b32 	%r347, %f125;
	and.b32  	%r348, %r347, -2147483648;
	mov.b32 	%r349, %f829;
	or.b32  	%r350, %r348, %r349;
	mov.b32 	%f829, %r350;
$L__BB0_63:                             // %__nv_fmodf.exit593
	mul.lo.s32 	%r42, %r29, %r15;
	cvt.rn.f32.s32 	%f705, %r42;
	mov.f32 	%f706, 0f40800000;
	div.approx.f32 	%f69, %f705, %f706;
	abs.f32 	%f845, %f69;
	setp.lt.f32 	%p159, %f845, 0f40000000;
	@%p159 bra 	$L__BB0_114;
// %bb.64:
	setp.gtu.f32 	%p160, %f845, 0f4B800000;
	@%p160 bra 	$L__BB0_110;
	bra.uni 	$L__BB0_65;
$L__BB0_110:
	mov.b32 	%r122, %f845;
	and.b32  	%r365, %r122, 8388607;
	or.b32  	%r2589, %r365, 1065353216;
	mov.b32 	%f844, %r2589;
	add.s32 	%r366, %r122, -1073741824;
	and.b32  	%r2590, %r366, -8388608;
	setp.eq.s32 	%p166, %r2590, 0;
	@%p166 bra 	$L__BB0_113;
// %bb.111:                             // %__nv_fmaf_rn.exit4.i.i.i711.preheader
	mov.f32 	%f716, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f715,%f716;
	// end inline asm
$L__BB0_112:                            // %__nv_fmaf_rn.exit4.i.i.i711
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r367, %r2590, 192937984;
	add.s32 	%r368, %r2589, %r367;
	mov.b32 	%f717, %r368;
	mul.f32 	%f718, %f715, %f717;
	sub.f32 	%f719, %f717, %f718;
	fma.rn.f32 	%f720, %f719, %f715, %f718;
	sub.f32 	%f721, %f717, %f720;
	fma.rz.f32 	%f722, %f721, %f715, %f720;
	cvt.rzi.f32.f32 	%f723, %f722;
	sub.f32 	%f844, %f717, %f723;
	sub.s32 	%r2590, %r2590, %r367;
	mov.b32 	%r2589, %f844;
	setp.ne.s32 	%p167, %r2590, 0;
	setp.ne.s32 	%p168, %r2589, 0;
	and.pred  	%p169, %p167, %p168;
	@%p169 bra 	$L__BB0_112;
$L__BB0_113:                            // %__internal_fmodf_slowpath_mod.exit.i.i713
	setp.gt.u32 	%p170, %r122, 2139095039;
	selp.f32 	%f724, 0f7FFFFFFF, 0f4B800000, %p170;
	mul.f32 	%f725, %f844, 0f34000000;
	mul.f32 	%f845, %f724, %f725;
	bra.uni 	$L__BB0_114;
$L__BB0_65:                             // %__nv_fast_fdividef.exit.i.i.i690
	div.approx.f32 	%f708, %f845, %f148;
	cvt.rzi.f32.f32 	%f843, %f708;
	fma.rn.f32 	%f128, %f843, 0fC0000000, %f845;
	mov.b32 	%r121, %f128;
	setp.lt.u32 	%p161, %r121, 1073741824;
	@%p161 bra 	$L__BB0_109;
// %bb.66:
	setp.lt.u32 	%p162, %r121, -2147483647;
	@%p162 bra 	$L__BB0_107;
// %bb.67:
	add.f32 	%f713, %f843, 0fBF800000;
	setp.lt.f32 	%p165, %f128, 0fC0000000;
	add.f32 	%f714, %f713, 0fBF800000;
	selp.f32 	%f843, %f714, %f713, %p165;
	bra.uni 	$L__BB0_109;
$L__BB0_107:
	add.f32 	%f843, %f843, 0f3F800000;
	setp.ltu.f32 	%p163, %f128, 0f40800000;
	@%p163 bra 	$L__BB0_109;
// %bb.108:                             // %__nv_fmaf_rn.exit.i.i.i694
	add.f32 	%f709, %f843, 0f3F800000;
	fma.rn.f32 	%f711, %f148, 0fC0400000, %f128;
	setp.ge.f32 	%p164, %f711, 0f00000000;
	add.f32 	%f712, %f709, 0f3F800000;
	selp.f32 	%f843, %f712, %f709, %p164;
$L__BB0_109:                            // %__internal_fmodf_fastpath_quot.exit.i.i697
	fma.rn.f32 	%f845, %f843, 0fC0000000, %f845;
$L__BB0_114:                            // %__internal_fmodf_kernel.exit.i716
	abs.f32 	%f726, %f845;
	setp.gtu.f32 	%p171, %f726, 0f7F800000;
	@%p171 bra 	$L__BB0_116;
// %bb.115:
	mov.b32 	%r369, %f69;
	and.b32  	%r370, %r369, -2147483648;
	mov.b32 	%r371, %f845;
	or.b32  	%r372, %r370, %r371;
	mov.b32 	%f845, %r372;
$L__BB0_116:                            // %__nv_fmodf.exit717
	shl.b32 	%r381, %r15, 2;
	sub.s32 	%r382, %r42, %r381;
	cvt.rn.f32.s32 	%f759, %r382;
	div.approx.f32 	%f145, %f759, %f706;
	abs.f32 	%f833, %f145;
	setp.lt.f32 	%p180, %f833, 0f40000000;
	@%p180 bra 	$L__BB0_79;
// %bb.68:
	setp.gtu.f32 	%p181, %f833, 0f4B800000;
	@%p181 bra 	$L__BB0_75;
	bra.uni 	$L__BB0_69;
$L__BB0_75:
	mov.b32 	%r44, %f833;
	and.b32  	%r383, %r44, 8388607;
	or.b32  	%r2568, %r383, 1065353216;
	mov.b32 	%f832, %r2568;
	add.s32 	%r384, %r44, -1073741824;
	and.b32  	%r2569, %r384, -8388608;
	setp.eq.s32 	%p187, %r2569, 0;
	@%p187 bra 	$L__BB0_78;
// %bb.76:                              // %__nv_fmaf_rn.exit4.i.i.i618.preheader
	mov.f32 	%f770, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f769,%f770;
	// end inline asm
$L__BB0_77:                             // %__nv_fmaf_rn.exit4.i.i.i618
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r385, %r2569, 192937984;
	add.s32 	%r386, %r2568, %r385;
	mov.b32 	%f771, %r386;
	mul.f32 	%f772, %f769, %f771;
	sub.f32 	%f773, %f771, %f772;
	fma.rn.f32 	%f774, %f773, %f769, %f772;
	sub.f32 	%f775, %f771, %f774;
	fma.rz.f32 	%f776, %f775, %f769, %f774;
	cvt.rzi.f32.f32 	%f777, %f776;
	sub.f32 	%f832, %f771, %f777;
	sub.s32 	%r2569, %r2569, %r385;
	mov.b32 	%r2568, %f832;
	setp.ne.s32 	%p188, %r2569, 0;
	setp.ne.s32 	%p189, %r2568, 0;
	and.pred  	%p190, %p188, %p189;
	@%p190 bra 	$L__BB0_77;
$L__BB0_78:                             // %__internal_fmodf_slowpath_mod.exit.i.i620
	setp.gt.u32 	%p191, %r44, 2139095039;
	selp.f32 	%f778, 0f7FFFFFFF, 0f4B800000, %p191;
	mul.f32 	%f779, %f832, 0f34000000;
	mul.f32 	%f833, %f778, %f779;
	bra.uni 	$L__BB0_79;
$L__BB0_69:                             // %__nv_fast_fdividef.exit.i.i.i597
	div.approx.f32 	%f762, %f833, %f148;
	cvt.rzi.f32.f32 	%f831, %f762;
	fma.rn.f32 	%f72, %f831, 0fC0000000, %f833;
	mov.b32 	%r43, %f72;
	setp.lt.u32 	%p182, %r43, 1073741824;
	@%p182 bra 	$L__BB0_74;
// %bb.70:
	setp.lt.u32 	%p183, %r43, -2147483647;
	@%p183 bra 	$L__BB0_72;
// %bb.71:
	add.f32 	%f767, %f831, 0fBF800000;
	setp.lt.f32 	%p186, %f72, 0fC0000000;
	add.f32 	%f768, %f767, 0fBF800000;
	selp.f32 	%f831, %f768, %f767, %p186;
	bra.uni 	$L__BB0_74;
$L__BB0_72:
	add.f32 	%f831, %f831, 0f3F800000;
	setp.ltu.f32 	%p184, %f72, 0f40800000;
	@%p184 bra 	$L__BB0_74;
// %bb.73:                              // %__nv_fmaf_rn.exit.i.i.i601
	add.f32 	%f763, %f831, 0f3F800000;
	fma.rn.f32 	%f765, %f148, 0fC0400000, %f72;
	setp.ge.f32 	%p185, %f765, 0f00000000;
	add.f32 	%f766, %f763, 0f3F800000;
	selp.f32 	%f831, %f766, %f763, %p185;
$L__BB0_74:                             // %__internal_fmodf_fastpath_quot.exit.i.i604
	fma.rn.f32 	%f833, %f831, 0fC0000000, %f833;
$L__BB0_79:                             // %__internal_fmodf_kernel.exit.i623
	abs.f32 	%f780, %f833;
	setp.gtu.f32 	%p192, %f780, 0f7F800000;
	@%p192 bra 	$L__BB0_81;
// %bb.80:
	mov.b32 	%r387, %f145;
	and.b32  	%r388, %r387, -2147483648;
	mov.b32 	%r389, %f833;
	or.b32  	%r390, %r388, %r389;
	mov.b32 	%f833, %r390;
$L__BB0_81:                             // %__nv_fmodf.exit624
	setp.le.s32 	%p200, %r149, %r148;
	mov.u32 	%r2562, 0;
	@%p200 bra 	$L__BB0_119;
// %bb.82:                              // %L1415.lr.ph
	mov.f32 	%f152, 0f43010000;
	mul.lo.s32 	%r250, %r103, 31;
	div.approx.f32 	%f153, %f151, %f152;
	div.approx.f32 	%f187, %f185, %f152;
	div.approx.f32 	%f222, %f220, %f152;
	div.approx.f32 	%f256, %f254, %f152;
	div.approx.f32 	%f291, %f289, %f152;
	div.approx.f32 	%f325, %f323, %f152;
	div.approx.f32 	%f360, %f358, %f152;
	div.approx.f32 	%f394, %f392, %f152;
	add.s32 	%r260, %r250, 48;
	abs.f32 	%f154, %f153;
	abs.f32 	%f188, %f187;
	abs.f32 	%f223, %f222;
	abs.f32 	%f257, %f256;
	abs.f32 	%f292, %f291;
	abs.f32 	%f326, %f325;
	abs.f32 	%f361, %f360;
	abs.f32 	%f395, %f394;
	and.b32  	%r251, %r250, 63;
	and.b32  	%r261, %r260, 63;
	setp.gt.f32 	%p17, %f154, 0f4B800000;
	mul.f32 	%f155, %f153, 0f00000000;
	setp.gt.f32 	%p23, %f188, 0f4B800000;
	mul.f32 	%f189, %f187, 0f00000000;
	setp.gt.f32 	%p29, %f223, 0f4B800000;
	mul.f32 	%f224, %f222, 0f00000000;
	setp.gt.f32 	%p35, %f257, 0f4B800000;
	mul.f32 	%f258, %f256, 0f00000000;
	setp.gt.f32 	%p41, %f292, 0f4B800000;
	mul.f32 	%f293, %f291, 0f00000000;
	setp.gt.f32 	%p47, %f326, 0f4B800000;
	mul.f32 	%f327, %f325, 0f00000000;
	setp.gt.f32 	%p53, %f361, 0f4B800000;
	mul.f32 	%f362, %f360, 0f00000000;
	setp.gt.f32 	%p59, %f395, 0f4B800000;
	mul.f32 	%f396, %f394, 0f00000000;
	cvt.rn.f32.s32 	%f425, %r251;
	cvt.rn.f32.s32 	%f460, %r261;
	selp.f32 	%f156, %f155, %f153, %p17;
	selp.f32 	%f190, %f189, %f187, %p23;
	selp.f32 	%f225, %f224, %f222, %p29;
	selp.f32 	%f259, %f258, %f256, %p35;
	selp.f32 	%f294, %f293, %f291, %p41;
	selp.f32 	%f328, %f327, %f325, %p47;
	selp.f32 	%f363, %f362, %f360, %p53;
	selp.f32 	%f397, %f396, %f394, %p59;
	div.approx.f32 	%f427, %f425, %f180;
	div.approx.f32 	%f461, %f460, %f180;
	add.f32 	%f157, %f156, %f156;
	add.f32 	%f191, %f190, %f190;
	add.f32 	%f226, %f225, %f225;
	add.f32 	%f260, %f259, %f259;
	add.f32 	%f295, %f294, %f294;
	add.f32 	%f329, %f328, %f328;
	add.f32 	%f364, %f363, %f363;
	add.f32 	%f398, %f397, %f397;
	add.f32 	%f428, %f427, %f427;
	add.f32 	%f462, %f461, %f461;
	add.f32 	%f515, %f837, %f837;
	add.f32 	%f567, %f825, %f825;
	mov.b32 	%r173, %f157;
	mov.b32 	%r180, %f191;
	mov.b32 	%r191, %f226;
	mov.b32 	%r198, %f260;
	mov.b32 	%r209, %f295;
	mov.b32 	%r216, %f329;
	mov.b32 	%r227, %f364;
	mov.b32 	%r234, %f398;
	mov.b32 	%r252, %f428;
	mov.b32 	%r262, %f462;
	mov.b32 	%r284, %f515;
	mov.b32 	%r316, %f567;
	and.b32  	%r174, %r173, -2147483648;
	and.b32  	%r181, %r180, -2147483648;
	and.b32  	%r192, %r191, -2147483648;
	and.b32  	%r199, %r198, -2147483648;
	and.b32  	%r210, %r209, -2147483648;
	and.b32  	%r217, %r216, -2147483648;
	and.b32  	%r228, %r227, -2147483648;
	and.b32  	%r235, %r234, -2147483648;
	and.b32  	%r253, %r252, -2147483648;
	and.b32  	%r263, %r262, -2147483648;
	and.b32  	%r285, %r284, -2147483648;
	and.b32  	%r317, %r316, -2147483648;
	add.f32 	%f621, %f841, %f841;
	add.f32 	%f673, %f829, %f829;
	or.b32  	%r175, %r174, 1056964608;
	or.b32  	%r182, %r181, 1056964608;
	or.b32  	%r193, %r192, 1056964608;
	or.b32  	%r200, %r199, 1056964608;
	or.b32  	%r211, %r210, 1056964608;
	or.b32  	%r218, %r217, 1056964608;
	or.b32  	%r229, %r228, 1056964608;
	or.b32  	%r236, %r235, 1056964608;
	or.b32  	%r254, %r253, 1056964608;
	or.b32  	%r264, %r263, 1056964608;
	or.b32  	%r286, %r285, 1056964608;
	or.b32  	%r318, %r317, 1056964608;
	mov.b32 	%r333, %f621;
	mov.b32 	%r357, %f673;
	add.f32 	%f727, %f845, %f845;
	mov.b32 	%f158, %r175;
	mov.b32 	%f192, %r182;
	mov.b32 	%f227, %r193;
	mov.b32 	%f261, %r200;
	mov.b32 	%f296, %r211;
	mov.b32 	%f330, %r218;
	mov.b32 	%f365, %r229;
	mov.b32 	%f399, %r236;
	mov.b32 	%f429, %r254;
	mov.b32 	%f463, %r264;
	mov.b32 	%f516, %r286;
	mov.b32 	%f568, %r318;
	and.b32  	%r334, %r333, -2147483648;
	and.b32  	%r358, %r357, -2147483648;
	mov.b32 	%r373, %f727;
	add.f32 	%f159, %f157, %f158;
	abs.f32 	%f161, %f157;
	add.f32 	%f193, %f191, %f192;
	abs.f32 	%f195, %f191;
	add.f32 	%f228, %f226, %f227;
	abs.f32 	%f230, %f226;
	add.f32 	%f262, %f260, %f261;
	abs.f32 	%f264, %f260;
	add.f32 	%f297, %f295, %f296;
	abs.f32 	%f299, %f295;
	add.f32 	%f331, %f329, %f330;
	abs.f32 	%f333, %f329;
	add.f32 	%f366, %f364, %f365;
	abs.f32 	%f368, %f364;
	add.f32 	%f400, %f398, %f399;
	abs.f32 	%f402, %f398;
	add.f32 	%f430, %f428, %f429;
	abs.f32 	%f432, %f428;
	add.f32 	%f464, %f462, %f463;
	abs.f32 	%f466, %f462;
	add.f32 	%f517, %f515, %f516;
	abs.f32 	%f519, %f515;
	add.f32 	%f569, %f567, %f568;
	abs.f32 	%f571, %f567;
	or.b32  	%r335, %r334, 1056964608;
	or.b32  	%r359, %r358, 1056964608;
	and.b32  	%r374, %r373, -2147483648;
	cvt.rzi.f32.f32 	%f160, %f159;
	setp.gt.f32 	%p18, %f161, 0f4B000000;
	cvt.rzi.f32.f32 	%f194, %f193;
	setp.gt.f32 	%p24, %f195, 0f4B000000;
	cvt.rzi.f32.f32 	%f229, %f228;
	setp.gt.f32 	%p30, %f230, 0f4B000000;
	cvt.rzi.f32.f32 	%f263, %f262;
	setp.gt.f32 	%p36, %f264, 0f4B000000;
	cvt.rzi.f32.f32 	%f298, %f297;
	setp.gt.f32 	%p42, %f299, 0f4B000000;
	cvt.rzi.f32.f32 	%f332, %f331;
	setp.gt.f32 	%p48, %f333, 0f4B000000;
	cvt.rzi.f32.f32 	%f367, %f366;
	setp.gt.f32 	%p54, %f368, 0f4B000000;
	cvt.rzi.f32.f32 	%f401, %f400;
	setp.gt.f32 	%p60, %f402, 0f4B000000;
	cvt.rzi.f32.f32 	%f431, %f430;
	setp.gt.f32 	%p65, %f432, 0f4B000000;
	cvt.rzi.f32.f32 	%f465, %f464;
	setp.gt.f32 	%p72, %f466, 0f4B000000;
	cvt.rzi.f32.f32 	%f518, %f517;
	setp.gt.f32 	%p92, %f519, 0f4B000000;
	cvt.rzi.f32.f32 	%f570, %f569;
	setp.gt.f32 	%p112, %f571, 0f4B000000;
	mov.b32 	%f622, %r335;
	mov.b32 	%f674, %r359;
	or.b32  	%r375, %r374, 1056964608;
	selp.f32 	%f162, %f157, %f160, %p18;
	cvt.rzi.f32.f32 	%f163, %f157;
	setp.lt.f32 	%p19, %f161, 0f3F000000;
	selp.f32 	%f196, %f191, %f194, %p24;
	cvt.rzi.f32.f32 	%f197, %f191;
	setp.lt.f32 	%p25, %f195, 0f3F000000;
	selp.f32 	%f231, %f226, %f229, %p30;
	cvt.rzi.f32.f32 	%f232, %f226;
	setp.lt.f32 	%p31, %f230, 0f3F000000;
	selp.f32 	%f265, %f260, %f263, %p36;
	cvt.rzi.f32.f32 	%f266, %f260;
	setp.lt.f32 	%p37, %f264, 0f3F000000;
	selp.f32 	%f300, %f295, %f298, %p42;
	cvt.rzi.f32.f32 	%f301, %f295;
	setp.lt.f32 	%p43, %f299, 0f3F000000;
	selp.f32 	%f334, %f329, %f332, %p48;
	cvt.rzi.f32.f32 	%f335, %f329;
	setp.lt.f32 	%p49, %f333, 0f3F000000;
	selp.f32 	%f369, %f364, %f367, %p54;
	cvt.rzi.f32.f32 	%f370, %f364;
	setp.lt.f32 	%p55, %f368, 0f3F000000;
	selp.f32 	%f403, %f398, %f401, %p60;
	cvt.rzi.f32.f32 	%f404, %f398;
	setp.lt.f32 	%p61, %f402, 0f3F000000;
	selp.f32 	%f433, %f428, %f431, %p65;
	cvt.rzi.f32.f32 	%f434, %f428;
	setp.lt.f32 	%p66, %f432, 0f3F000000;
	selp.f32 	%f467, %f462, %f465, %p72;
	cvt.rzi.f32.f32 	%f468, %f462;
	setp.lt.f32 	%p73, %f466, 0f3F000000;
	selp.f32 	%f520, %f515, %f518, %p92;
	cvt.rzi.f32.f32 	%f521, %f515;
	setp.lt.f32 	%p93, %f519, 0f3F000000;
	selp.f32 	%f572, %f567, %f570, %p112;
	cvt.rzi.f32.f32 	%f573, %f567;
	setp.lt.f32 	%p113, %f571, 0f3F000000;
	add.f32 	%f623, %f621, %f622;
	abs.f32 	%f625, %f621;
	add.f32 	%f675, %f673, %f674;
	abs.f32 	%f677, %f673;
	mov.b32 	%f728, %r375;
	selp.f32 	%f164, %f163, %f162, %p19;
	selp.f32 	%f198, %f197, %f196, %p25;
	selp.f32 	%f233, %f232, %f231, %p31;
	selp.f32 	%f267, %f266, %f265, %p37;
	selp.f32 	%f302, %f301, %f300, %p43;
	selp.f32 	%f336, %f335, %f334, %p49;
	selp.f32 	%f371, %f370, %f369, %p55;
	selp.f32 	%f405, %f404, %f403, %p61;
	selp.f32 	%f435, %f434, %f433, %p66;
	selp.f32 	%f469, %f468, %f467, %p73;
	selp.f32 	%f522, %f521, %f520, %p93;
	selp.f32 	%f574, %f573, %f572, %p113;
	cvt.rzi.f32.f32 	%f624, %f623;
	setp.gt.f32 	%p132, %f625, 0f4B000000;
	cvt.rzi.f32.f32 	%f676, %f675;
	setp.gt.f32 	%p152, %f677, 0f4B000000;
	add.f32 	%f729, %f727, %f728;
	abs.f32 	%f731, %f727;
	fma.rn.f32 	%f165, %f164, 0fBF000000, %f156;
	fma.rn.f32 	%f199, %f198, 0fBF000000, %f190;
	fma.rn.f32 	%f234, %f233, 0fBF000000, %f225;
	fma.rn.f32 	%f268, %f267, 0fBF000000, %f259;
	fma.rn.f32 	%f303, %f302, 0fBF000000, %f294;
	fma.rn.f32 	%f337, %f336, 0fBF000000, %f328;
	fma.rn.f32 	%f372, %f371, 0fBF000000, %f363;
	fma.rn.f32 	%f406, %f405, 0fBF000000, %f397;
	fma.rn.f32 	%f436, %f435, 0fBF000000, %f427;
	fma.rn.f32 	%f470, %f469, 0fBF000000, %f461;
	fma.rn.f32 	%f523, %f522, 0fBF000000, %f837;
	fma.rn.f32 	%f575, %f574, 0fBF000000, %f825;
	selp.f32 	%f626, %f621, %f624, %p132;
	cvt.rzi.f32.f32 	%f627, %f621;
	setp.lt.f32 	%p133, %f625, 0f3F000000;
	selp.f32 	%f678, %f673, %f676, %p152;
	cvt.rzi.f32.f32 	%f679, %f673;
	setp.lt.f32 	%p153, %f677, 0f3F000000;
	cvt.rzi.f32.f32 	%f730, %f729;
	setp.gt.f32 	%p173, %f731, 0f4B000000;
	mul.f32 	%f166, %f165, %f165;
	mul.f32 	%f200, %f199, %f199;
	mul.f32 	%f235, %f234, %f234;
	mul.f32 	%f269, %f268, %f268;
	mul.f32 	%f304, %f303, %f303;
	mul.f32 	%f338, %f337, %f337;
	mul.f32 	%f373, %f372, %f372;
	mul.f32 	%f407, %f406, %f406;
	mul.f32 	%f437, %f436, %f436;
	mul.f32 	%f471, %f470, %f470;
	mul.f32 	%f524, %f523, %f523;
	mul.f32 	%f576, %f575, %f575;
	selp.f32 	%f628, %f627, %f626, %p133;
	selp.f32 	%f680, %f679, %f678, %p153;
	selp.f32 	%f732, %f727, %f730, %p173;
	cvt.rzi.f32.f32 	%f733, %f727;
	setp.lt.f32 	%p174, %f731, 0f3F000000;
	cvt.rzi.s32.f32 	%r176, %f164;
	fma.rn.f32 	%f167, %f166, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f168, %f166, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r183, %f198;
	fma.rn.f32 	%f201, %f200, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f202, %f200, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r194, %f233;
	fma.rn.f32 	%f236, %f235, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f237, %f235, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r201, %f267;
	fma.rn.f32 	%f270, %f269, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f271, %f269, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r212, %f302;
	fma.rn.f32 	%f305, %f304, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f306, %f304, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r219, %f336;
	fma.rn.f32 	%f339, %f338, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f340, %f338, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r230, %f371;
	fma.rn.f32 	%f374, %f373, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f375, %f373, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r237, %f405;
	fma.rn.f32 	%f408, %f407, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f409, %f407, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f438, %f437, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f439, %f437, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f472, %f471, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f473, %f471, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f525, %f524, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f526, %f524, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f577, %f576, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f578, %f576, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f629, %f628, 0fBF000000, %f841;
	fma.rn.f32 	%f681, %f680, 0fBF000000, %f829;
	selp.f32 	%f734, %f733, %f732, %p174;
	add.s32 	%r177, %r176, 1;
	fma.rn.f32 	%f169, %f167, %f166, 0fC0A55DF6;
	fma.rn.f32 	%f170, %f168, %f166, 0f4081E0CF;
	fma.rn.f32 	%f171, %f166, %f165, 0f00000000;
	add.s32 	%r184, %r183, 1;
	fma.rn.f32 	%f203, %f201, %f200, 0fC0A55DF6;
	fma.rn.f32 	%f204, %f202, %f200, 0f4081E0CF;
	fma.rn.f32 	%f205, %f200, %f199, 0f00000000;
	add.s32 	%r195, %r194, 1;
	fma.rn.f32 	%f238, %f236, %f235, 0fC0A55DF6;
	fma.rn.f32 	%f239, %f237, %f235, 0f4081E0CF;
	fma.rn.f32 	%f240, %f235, %f234, 0f00000000;
	add.s32 	%r202, %r201, 1;
	fma.rn.f32 	%f272, %f270, %f269, 0fC0A55DF6;
	fma.rn.f32 	%f273, %f271, %f269, 0f4081E0CF;
	fma.rn.f32 	%f274, %f269, %f268, 0f00000000;
	add.s32 	%r213, %r212, 1;
	fma.rn.f32 	%f307, %f305, %f304, 0fC0A55DF6;
	fma.rn.f32 	%f308, %f306, %f304, 0f4081E0CF;
	fma.rn.f32 	%f309, %f304, %f303, 0f00000000;
	add.s32 	%r220, %r219, 1;
	fma.rn.f32 	%f341, %f339, %f338, 0fC0A55DF6;
	fma.rn.f32 	%f342, %f340, %f338, 0f4081E0CF;
	fma.rn.f32 	%f343, %f338, %f337, 0f00000000;
	add.s32 	%r231, %r230, 1;
	fma.rn.f32 	%f376, %f374, %f373, 0fC0A55DF6;
	fma.rn.f32 	%f377, %f375, %f373, 0f4081E0CF;
	fma.rn.f32 	%f378, %f373, %f372, 0f00000000;
	add.s32 	%r238, %r237, 1;
	fma.rn.f32 	%f410, %f408, %f407, 0fC0A55DF6;
	fma.rn.f32 	%f411, %f409, %f407, 0f4081E0CF;
	fma.rn.f32 	%f412, %f407, %f406, 0f00000000;
	cvt.rzi.s32.f32 	%r255, %f435;
	fma.rn.f32 	%f440, %f438, %f437, 0fC0A55DF6;
	fma.rn.f32 	%f441, %f439, %f437, 0f4081E0CF;
	fma.rn.f32 	%f442, %f437, %f436, 0f00000000;
	cvt.rzi.s32.f32 	%r265, %f469;
	fma.rn.f32 	%f474, %f472, %f471, 0fC0A55DF6;
	fma.rn.f32 	%f475, %f473, %f471, 0f4081E0CF;
	fma.rn.f32 	%f476, %f471, %f470, 0f00000000;
	cvt.rzi.s32.f32 	%r287, %f522;
	fma.rn.f32 	%f527, %f525, %f524, 0fC0A55DF6;
	fma.rn.f32 	%f528, %f526, %f524, 0f4081E0CF;
	fma.rn.f32 	%f529, %f524, %f523, 0f00000000;
	cvt.rzi.s32.f32 	%r319, %f574;
	fma.rn.f32 	%f579, %f577, %f576, 0fC0A55DF6;
	fma.rn.f32 	%f580, %f578, %f576, 0f4081E0CF;
	fma.rn.f32 	%f581, %f576, %f575, 0f00000000;
	mul.f32 	%f630, %f629, %f629;
	mul.f32 	%f682, %f681, %f681;
	fma.rn.f32 	%f735, %f734, 0fBF000000, %f845;
	fma.rn.f32 	%f172, %f170, %f166, 0fC09DE9E6;
	fma.rn.f32 	%f173, %f169, %f171, 0f00000000;
	and.b32  	%r178, %r177, 1;
	fma.rn.f32 	%f206, %f204, %f200, 0fC09DE9E6;
	fma.rn.f32 	%f207, %f203, %f205, 0f00000000;
	and.b32  	%r185, %r184, 1;
	fma.rn.f32 	%f241, %f239, %f235, 0fC09DE9E6;
	fma.rn.f32 	%f242, %f238, %f240, 0f00000000;
	and.b32  	%r196, %r195, 1;
	fma.rn.f32 	%f275, %f273, %f269, 0fC09DE9E6;
	fma.rn.f32 	%f276, %f272, %f274, 0f00000000;
	and.b32  	%r203, %r202, 1;
	fma.rn.f32 	%f310, %f308, %f304, 0fC09DE9E6;
	fma.rn.f32 	%f311, %f307, %f309, 0f00000000;
	and.b32  	%r214, %r213, 1;
	fma.rn.f32 	%f344, %f342, %f338, 0fC09DE9E6;
	fma.rn.f32 	%f345, %f341, %f343, 0f00000000;
	and.b32  	%r221, %r220, 1;
	fma.rn.f32 	%f379, %f377, %f373, 0fC09DE9E6;
	fma.rn.f32 	%f380, %f376, %f378, 0f00000000;
	and.b32  	%r232, %r231, 1;
	fma.rn.f32 	%f413, %f411, %f407, 0fC09DE9E6;
	fma.rn.f32 	%f414, %f410, %f412, 0f00000000;
	and.b32  	%r239, %r238, 1;
	fma.rn.f32 	%f443, %f441, %f437, 0fC09DE9E6;
	fma.rn.f32 	%f444, %f440, %f442, 0f00000000;
	and.b32  	%r256, %r255, 1;
	fma.rn.f32 	%f477, %f475, %f471, 0fC09DE9E6;
	fma.rn.f32 	%f478, %f474, %f476, 0f00000000;
	and.b32  	%r266, %r265, 1;
	fma.rn.f32 	%f530, %f528, %f524, 0fC09DE9E6;
	fma.rn.f32 	%f531, %f527, %f529, 0f00000000;
	and.b32  	%r288, %r287, 1;
	fma.rn.f32 	%f582, %f580, %f576, 0fC09DE9E6;
	fma.rn.f32 	%f583, %f579, %f581, 0f00000000;
	and.b32  	%r320, %r319, 1;
	fma.rn.f32 	%f631, %f630, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f632, %f630, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f683, %f682, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f684, %f682, 0f3E684E12, 0fBFAAD2E0;
	mul.f32 	%f736, %f735, %f735;
	shl.b32 	%r91, %r1, 2;
	shl.b32 	%r95, %r4, 5;
	and.b32  	%r96, %r1, 18;
	fma.rn.f32 	%f174, %f172, %f166, 0f3F800000;
	fma.rn.f32 	%f175, %f165, 0f40490FDB, %f173;
	setp.eq.b32 	%p20, %r178, 1;
	fma.rn.f32 	%f208, %f206, %f200, 0f3F800000;
	fma.rn.f32 	%f209, %f199, 0f40490FDB, %f207;
	setp.eq.b32 	%p26, %r185, 1;
	fma.rn.f32 	%f243, %f241, %f235, 0f3F800000;
	fma.rn.f32 	%f244, %f234, 0f40490FDB, %f242;
	setp.eq.b32 	%p32, %r196, 1;
	fma.rn.f32 	%f277, %f275, %f269, 0f3F800000;
	fma.rn.f32 	%f278, %f268, 0f40490FDB, %f276;
	setp.eq.b32 	%p38, %r203, 1;
	fma.rn.f32 	%f312, %f310, %f304, 0f3F800000;
	fma.rn.f32 	%f313, %f303, 0f40490FDB, %f311;
	setp.eq.b32 	%p44, %r214, 1;
	fma.rn.f32 	%f346, %f344, %f338, 0f3F800000;
	fma.rn.f32 	%f347, %f337, 0f40490FDB, %f345;
	setp.eq.b32 	%p50, %r221, 1;
	fma.rn.f32 	%f381, %f379, %f373, 0f3F800000;
	fma.rn.f32 	%f382, %f372, 0f40490FDB, %f380;
	setp.eq.b32 	%p56, %r232, 1;
	fma.rn.f32 	%f415, %f413, %f407, 0f3F800000;
	fma.rn.f32 	%f416, %f406, 0f40490FDB, %f414;
	setp.eq.b32 	%p62, %r239, 1;
	fma.rn.f32 	%f445, %f443, %f437, 0f3F800000;
	fma.rn.f32 	%f446, %f436, 0f40490FDB, %f444;
	setp.eq.b32 	%p67, %r256, 1;
	fma.rn.f32 	%f479, %f477, %f471, 0f3F800000;
	fma.rn.f32 	%f480, %f470, 0f40490FDB, %f478;
	setp.eq.b32 	%p74, %r266, 1;
	fma.rn.f32 	%f532, %f530, %f524, 0f3F800000;
	fma.rn.f32 	%f533, %f523, 0f40490FDB, %f531;
	setp.eq.b32 	%p94, %r288, 1;
	fma.rn.f32 	%f584, %f582, %f576, 0f3F800000;
	fma.rn.f32 	%f585, %f575, 0f40490FDB, %f583;
	setp.eq.b32 	%p114, %r320, 1;
	cvt.rzi.s32.f32 	%r336, %f628;
	fma.rn.f32 	%f633, %f631, %f630, 0fC0A55DF6;
	fma.rn.f32 	%f634, %f632, %f630, 0f4081E0CF;
	fma.rn.f32 	%f635, %f630, %f629, 0f00000000;
	cvt.rzi.s32.f32 	%r360, %f680;
	fma.rn.f32 	%f685, %f683, %f682, 0fC0A55DF6;
	fma.rn.f32 	%f686, %f684, %f682, 0f4081E0CF;
	fma.rn.f32 	%f687, %f682, %f681, 0f00000000;
	fma.rn.f32 	%f737, %f736, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f738, %f736, 0f3E684E12, 0fBFAAD2E0;
	and.b32  	%r92, %r91, 4;
	or.b32  	%r164, %r96, %r95;
	selp.f32 	%f176, %f174, %f175, %p20;
	and.b32  	%r179, %r177, 2;
	mov.f32 	%f177, 0f00000000;
	selp.f32 	%f210, %f208, %f209, %p26;
	and.b32  	%r186, %r184, 2;
	selp.f32 	%f245, %f243, %f244, %p32;
	and.b32  	%r197, %r195, 2;
	selp.f32 	%f279, %f277, %f278, %p38;
	and.b32  	%r204, %r202, 2;
	selp.f32 	%f314, %f312, %f313, %p44;
	and.b32  	%r215, %r213, 2;
	selp.f32 	%f348, %f346, %f347, %p50;
	and.b32  	%r222, %r220, 2;
	selp.f32 	%f383, %f381, %f382, %p56;
	and.b32  	%r233, %r231, 2;
	selp.f32 	%f417, %f415, %f416, %p62;
	and.b32  	%r240, %r238, 2;
	selp.f32 	%f447, %f445, %f446, %p67;
	and.b32  	%r257, %r255, 2;
	selp.f32 	%f481, %f479, %f480, %p74;
	and.b32  	%r267, %r265, 2;
	selp.f32 	%f534, %f532, %f533, %p94;
	and.b32  	%r289, %r287, 2;
	selp.f32 	%f586, %f584, %f585, %p114;
	and.b32  	%r321, %r319, 2;
	fma.rn.f32 	%f636, %f634, %f630, 0fC09DE9E6;
	fma.rn.f32 	%f637, %f633, %f635, 0f00000000;
	and.b32  	%r337, %r336, 1;
	fma.rn.f32 	%f688, %f686, %f682, 0fC09DE9E6;
	fma.rn.f32 	%f689, %f685, %f687, 0f00000000;
	and.b32  	%r361, %r360, 1;
	cvt.rzi.s32.f32 	%r376, %f734;
	fma.rn.f32 	%f739, %f737, %f736, 0fC0A55DF6;
	fma.rn.f32 	%f740, %f738, %f736, 0f4081E0CF;
	fma.rn.f32 	%f741, %f736, %f735, 0f00000000;
	and.b32  	%r94, %r93, 8;
	or.b32  	%r165, %r164, %r92;
	setp.eq.s32 	%p21, %r179, 0;
	sub.f32 	%f178, %f177, %f176;
	setp.eq.s32 	%p27, %r186, 0;
	sub.f32 	%f212, %f177, %f210;
	setp.eq.s32 	%p33, %r197, 0;
	sub.f32 	%f247, %f177, %f245;
	setp.eq.s32 	%p39, %r204, 0;
	sub.f32 	%f281, %f177, %f279;
	setp.eq.s32 	%p45, %r215, 0;
	sub.f32 	%f316, %f177, %f314;
	setp.eq.s32 	%p51, %r222, 0;
	sub.f32 	%f350, %f177, %f348;
	setp.eq.s32 	%p57, %r233, 0;
	sub.f32 	%f385, %f177, %f383;
	setp.eq.s32 	%p63, %r240, 0;
	sub.f32 	%f419, %f177, %f417;
	setp.eq.s32 	%p68, %r257, 0;
	neg.f32 	%f449, %f447;
	add.s32 	%r258, %r255, 1;
	cvt.rzi.f32.f32 	%f454, %f427;
	setp.eq.s32 	%p75, %r267, 0;
	neg.f32 	%f483, %f481;
	add.s32 	%r268, %r265, 1;
	cvt.rzi.f32.f32 	%f487, %f461;
	setp.eq.s32 	%p95, %r289, 0;
	neg.f32 	%f536, %f534;
	add.s32 	%r290, %r287, 1;
	cvt.rzi.f32.f32 	%f541, %f837;
	setp.eq.s32 	%p115, %r321, 0;
	neg.f32 	%f588, %f586;
	add.s32 	%r322, %r319, 1;
	cvt.rzi.f32.f32 	%f593, %f825;
	fma.rn.f32 	%f638, %f636, %f630, 0f3F800000;
	fma.rn.f32 	%f639, %f629, 0f40490FDB, %f637;
	setp.eq.b32 	%p134, %r337, 1;
	fma.rn.f32 	%f690, %f688, %f682, 0f3F800000;
	fma.rn.f32 	%f691, %f681, 0f40490FDB, %f689;
	setp.eq.b32 	%p154, %r361, 1;
	fma.rn.f32 	%f742, %f740, %f736, 0fC09DE9E6;
	fma.rn.f32 	%f743, %f739, %f741, 0f00000000;
	and.b32  	%r377, %r376, 1;
	or.b32  	%r166, %r165, %r94;
	selp.f32 	%f179, %f176, %f178, %p21;
	selp.f32 	%f213, %f210, %f212, %p27;
	selp.f32 	%f248, %f245, %f247, %p33;
	selp.f32 	%f282, %f279, %f281, %p39;
	selp.f32 	%f317, %f314, %f316, %p45;
	selp.f32 	%f351, %f348, %f350, %p51;
	selp.f32 	%f386, %f383, %f385, %p57;
	selp.f32 	%f420, %f417, %f419, %p63;
	selp.f32 	%f448, %f446, %f445, %p67;
	selp.f32 	%f450, %f447, %f449, %p68;
	and.b32  	%r259, %r258, 2;
	setp.eq.f32 	%p70, %f454, %f427;
	mul.f32 	%f455, %f427, 0f00000000;
	selp.f32 	%f482, %f480, %f479, %p74;
	selp.f32 	%f484, %f481, %f483, %p75;
	and.b32  	%r269, %r268, 2;
	setp.eq.f32 	%p77, %f487, %f461;
	mul.f32 	%f488, %f461, 0f00000000;
	selp.f32 	%f535, %f533, %f532, %p94;
	selp.f32 	%f537, %f534, %f536, %p95;
	and.b32  	%r291, %r290, 2;
	setp.eq.f32 	%p97, %f541, %f837;
	mul.f32 	%f542, %f837, 0f00000000;
	selp.f32 	%f587, %f585, %f584, %p114;
	selp.f32 	%f589, %f586, %f588, %p115;
	and.b32  	%r323, %r322, 2;
	setp.eq.f32 	%p117, %f593, %f825;
	mul.f32 	%f594, %f825, 0f00000000;
	selp.f32 	%f640, %f638, %f639, %p134;
	and.b32  	%r338, %r336, 2;
	selp.f32 	%f692, %f690, %f691, %p154;
	and.b32  	%r362, %r360, 2;
	fma.rn.f32 	%f744, %f742, %f736, 0f3F800000;
	fma.rn.f32 	%f745, %f735, 0f40490FDB, %f743;
	setp.eq.b32 	%p175, %r377, 1;
	bfe.u32 	%r167, %r166, 1, 10;
	mul.f32 	%f87, %f179, %f179;
	mul.f32 	%f4, %f213, %f213;
	mul.f32 	%f8, %f248, %f248;
	mul.f32 	%f13, %f282, %f282;
	mul.f32 	%f17, %f317, %f317;
	mul.f32 	%f22, %f351, %f351;
	mul.f32 	%f26, %f386, %f386;
	mul.f32 	%f31, %f420, %f420;
	setp.eq.s32 	%p69, %r259, 0;
	sub.f32 	%f452, %f177, %f448;
	selp.f32 	%f456, %f455, %f450, %p70;
	abs.f32 	%f457, %f427;
	setp.eq.s32 	%p76, %r269, 0;
	sub.f32 	%f485, %f177, %f482;
	selp.f32 	%f489, %f488, %f484, %p77;
	abs.f32 	%f490, %f461;
	setp.eq.s32 	%p96, %r291, 0;
	sub.f32 	%f539, %f177, %f535;
	selp.f32 	%f104, %f542, %f537, %p97;
	abs.f32 	%f543, %f837;
	setp.eq.s32 	%p116, %r323, 0;
	sub.f32 	%f591, %f177, %f587;
	selp.f32 	%f595, %f594, %f589, %p117;
	abs.f32 	%f596, %f825;
	setp.eq.s32 	%p135, %r338, 0;
	neg.f32 	%f642, %f640;
	add.s32 	%r339, %r336, 1;
	cvt.rzi.f32.f32 	%f647, %f841;
	setp.eq.s32 	%p155, %r362, 0;
	neg.f32 	%f694, %f692;
	add.s32 	%r363, %r360, 1;
	cvt.rzi.f32.f32 	%f699, %f829;
	selp.f32 	%f746, %f744, %f745, %p175;
	and.b32  	%r378, %r376, 2;
	ld.param.u64 	%rd1, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_7];
	mul.wide.u32 	%rd46, %r167, 4;
	mul.f32 	%f183, %f87, 0f3C8A83B8;
	mul.f32 	%f217, %f4, 0f3C8A83B8;
	mul.f32 	%f252, %f8, 0f3C8A83B8;
	mul.f32 	%f286, %f13, 0f3C8A83B8;
	mul.f32 	%f321, %f17, 0f3C8A83B8;
	mul.f32 	%f355, %f22, 0f3C8A83B8;
	mul.f32 	%f390, %f26, 0f3C8A83B8;
	mul.f32 	%f423, %f31, 0f3C8A83B8;
	selp.f32 	%f453, %f448, %f452, %p69;
	setp.gt.f32 	%p71, %f457, 0f4B800000;
	add.f32 	%f458, %f456, 0f3F800000;
	selp.f32 	%f486, %f482, %f485, %p76;
	setp.gt.f32 	%p78, %f490, 0f4B800000;
	add.f32 	%f491, %f489, 0f3F800000;
	selp.f32 	%f540, %f535, %f539, %p96;
	setp.gt.f32 	%p98, %f543, 0f4B800000;
	add.f32 	%f544, %f104, 0f3F800000;
	selp.f32 	%f592, %f587, %f591, %p116;
	setp.gt.f32 	%p118, %f596, 0f4B800000;
	add.f32 	%f597, %f595, 0f3F800000;
	selp.f32 	%f641, %f639, %f638, %p134;
	selp.f32 	%f643, %f640, %f642, %p135;
	and.b32  	%r340, %r339, 2;
	setp.eq.f32 	%p137, %f647, %f841;
	mul.f32 	%f648, %f841, 0f00000000;
	selp.f32 	%f693, %f691, %f690, %p154;
	selp.f32 	%f695, %f692, %f694, %p155;
	and.b32  	%r364, %r363, 2;
	setp.eq.f32 	%p157, %f699, %f829;
	mul.f32 	%f700, %f829, 0f00000000;
	setp.eq.s32 	%p176, %r378, 0;
	neg.f32 	%f748, %f746;
	add.s32 	%r379, %r376, 1;
	cvt.rzi.f32.f32 	%f753, %f845;
	add.s64 	%rd47, %rd1, %rd46;
	mul.f32 	%f3, %f183, %f815;
	mul.f32 	%f218, %f217, %f816;
	mul.f32 	%f12, %f252, %f817;
	mul.f32 	%f287, %f286, %f818;
	mul.f32 	%f21, %f321, %f819;
	mul.f32 	%f356, %f355, %f820;
	mul.f32 	%f30, %f390, %f821;
	mul.f32 	%f424, %f423, %f822;
	selp.f32 	%f459, %f458, %f453, %p71;
	selp.f32 	%f492, %f491, %f486, %p78;
	selp.f32 	%f105, %f544, %f540, %p98;
	selp.f32 	%f598, %f597, %f592, %p118;
	setp.eq.s32 	%p136, %r340, 0;
	sub.f32 	%f645, %f177, %f641;
	selp.f32 	%f123, %f648, %f643, %p137;
	abs.f32 	%f649, %f841;
	setp.eq.s32 	%p156, %r364, 0;
	sub.f32 	%f697, %f177, %f693;
	selp.f32 	%f701, %f700, %f695, %p157;
	abs.f32 	%f702, %f829;
	selp.f32 	%f747, %f745, %f744, %p175;
	selp.f32 	%f749, %f746, %f748, %p176;
	and.b32  	%r380, %r379, 2;
	setp.eq.f32 	%p178, %f753, %f845;
	mul.f32 	%f754, %f845, 0f00000000;
	ld.param.u64 	%rd2, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_8];
	ld.param.u64 	%rd3, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_9];
	ld.global.u32 	%r97, [%rd47];
	mov.b32 	%r189, %f218;
	mov.b32 	%r188, %f3;
	mov.b32 	%r207, %f287;
	mov.b32 	%r206, %f12;
	mov.b32 	%r225, %f356;
	mov.b32 	%r224, %f21;
	mov.b32 	%r243, %f424;
	mov.b32 	%r242, %f30;
	mov.b32 	%r245, %f459;
	mov.b32 	%r246, %f492;
	mov.b32 	%r248, %f456;
	mov.b32 	%r249, %f489;
	mov.b32 	%r306, %f598;
	mov.b32 	%r305, %f105;
	mov.b32 	%r312, %f595;
	mov.b32 	%r311, %f104;
	selp.f32 	%f646, %f641, %f645, %p136;
	setp.gt.f32 	%p138, %f649, 0f4B800000;
	add.f32 	%f650, %f123, 0f3F800000;
	selp.f32 	%f698, %f693, %f697, %p156;
	setp.gt.f32 	%p158, %f702, 0f4B800000;
	add.f32 	%f703, %f701, 0f3F800000;
	and.b32  	%r41, %r14, 1;
	setp.eq.s32 	%p177, %r380, 0;
	sub.f32 	%f751, %f177, %f747;
	selp.f32 	%f755, %f754, %f749, %p178;
	abs.f32 	%f756, %f845;
	// begin inline asm
	cvt.rn.f16x2.f32 %r187, %r189, %r188;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r205, %r207, %r206;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r223, %r225, %r224;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r241, %r243, %r242;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r244, %r246, %r245;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r247, %r249, %r248;
	// end inline asm
	xor.b32  	%r309, %r312, -2147483648;
	xor.b32  	%r308, %r311, -2147483648;
	selp.f32 	%f124, %f650, %f646, %p138;
	selp.f32 	%f704, %f703, %f698, %p158;
	setp.eq.s32 	%p172, %r41, %r100;
	selp.f32 	%f752, %f747, %f751, %p177;
	setp.gt.f32 	%p179, %f756, 0f4B800000;
	add.f32 	%f757, %f755, 0f3F800000;
	// begin inline asm
	cvt.rn.f16x2.f32 %r304, %r306, %r305;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r307, %r309, %r308;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r310, %r312, %r311;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r313, %r306, %r305;
	// end inline asm
	mov.b32 	%r353, %f704;
	mov.b32 	%r352, %f124;
	mov.b32 	%r356, %f701;
	mov.b32 	%r355, %f123;
	selp.f32 	%f758, %f757, %f752, %p179;
	selp.f32 	%f142, 0f3F800000, 0f00000000, %p172;
	// begin inline asm
	cvt.rn.f16x2.f32 %r351, %r353, %r352;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r354, %r356, %r355;
	// end inline asm
	mul.f32 	%f143, %f758, %f142;
	mul.f32 	%f144, %f755, %f142;
	add.f32 	%f781, %f833, %f833;
	mov.b32 	%r403, %f781;
	and.b32  	%r404, %r403, -2147483648;
	or.b32  	%r405, %r404, 1056964608;
	mov.b32 	%f782, %r405;
	add.f32 	%f783, %f781, %f782;
	cvt.rzi.f32.f32 	%f784, %f783;
	abs.f32 	%f785, %f781;
	setp.gt.f32 	%p193, %f785, 0f4B000000;
	selp.f32 	%f786, %f781, %f784, %p193;
	cvt.rzi.f32.f32 	%f787, %f781;
	setp.lt.f32 	%p194, %f785, 0f3F000000;
	selp.f32 	%f788, %f787, %f786, %p194;
	cvt.rzi.s32.f32 	%r406, %f788;
	fma.rn.f32 	%f789, %f788, 0fBF000000, %f833;
	mul.f32 	%f790, %f789, %f789;
	fma.rn.f32 	%f791, %f790, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f792, %f790, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f793, %f791, %f790, 0fC0A55DF6;
	fma.rn.f32 	%f794, %f792, %f790, 0f4081E0CF;
	fma.rn.f32 	%f795, %f790, %f789, 0f00000000;
	fma.rn.f32 	%f796, %f794, %f790, 0fC09DE9E6;
	fma.rn.f32 	%f797, %f793, %f795, 0f00000000;
	fma.rn.f32 	%f798, %f796, %f790, 0f3F800000;
	fma.rn.f32 	%f799, %f789, 0f40490FDB, %f797;
	and.b32  	%r407, %r406, 1;
	setp.eq.b32 	%p195, %r407, 1;
	selp.f32 	%f800, %f798, %f799, %p195;
	selp.f32 	%f801, %f799, %f798, %p195;
	and.b32  	%r408, %r406, 2;
	setp.eq.s32 	%p196, %r408, 0;
	neg.f32 	%f802, %f800;
	selp.f32 	%f803, %f800, %f802, %p196;
	add.s32 	%r409, %r406, 1;
	and.b32  	%r410, %r409, 2;
	setp.eq.s32 	%p197, %r410, 0;
	sub.f32 	%f805, %f177, %f801;
	selp.f32 	%f806, %f801, %f805, %p197;
	cvt.rzi.f32.f32 	%f807, %f833;
	setp.eq.f32 	%p198, %f807, %f833;
	mul.f32 	%f808, %f833, 0f00000000;
	selp.f32 	%f809, %f808, %f803, %p198;
	abs.f32 	%f810, %f833;
	setp.gt.f32 	%p199, %f810, 0f4B800000;
	add.f32 	%f811, %f809, 0f3F800000;
	selp.f32 	%f812, %f811, %f806, %p199;
	mul.f32 	%f813, %f812, %f142;
	mul.f32 	%f814, %f809, %f142;
	mov.b32 	%r393, %f813;
	mov.b32 	%r392, %f143;
	// begin inline asm
	cvt.rn.f16x2.f32 %r391, %r393, %r392;
	// end inline asm
	mov.b32 	%r399, %f814;
	xor.b32  	%r396, %r399, -2147483648;
	mov.b32 	%r398, %f144;
	xor.b32  	%r395, %r398, -2147483648;
	// begin inline asm
	cvt.rn.f16x2.f32 %r394, %r396, %r395;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r397, %r399, %r398;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r400, %r393, %r392;
	// end inline asm
	shl.b32 	%r412, %r152, 5;
	cvt.u16.u32 	%rs1, %r95;
	mul.hi.u16 	%rs2, %rs1, -21845;
	shr.u16 	%rs3, %rs2, 8;
	mul.lo.s16 	%rs4, %rs3, 384;
	sub.s16 	%rs5, %rs1, %rs4;
	shl.b16 	%rs6, %rs5, 5;
	cvt.u32.u16 	%r413, %rs6;
	and.b32  	%r55, %r91, 16;
	and.b32  	%r56, %r93, 16;
	shl.b32 	%r414, %r2, 2;
	and.b32  	%r57, %r414, 32;
	and.b32  	%r58, %r2, 7;
	and.b32  	%r59, %r98, 8;
	and.b32  	%r60, %r91, 12;
	and.b32  	%r415, %r91, 28;
	or.b32  	%r416, %r415, %r413;
	add.s32 	%r61, %r416, %r412;
	and.b32  	%r62, %r1, 8;
	shl.b32 	%r417, %r1, 4;
	or.b32  	%r418, %r62, %r417;
	shr.u32 	%r419, %r418, 2;
	and.b32  	%r420, %r419, 14;
	or.b32  	%r421, %r420, %r55;
	and.b32  	%r422, %r98, 2;
	or.b32  	%r63, %r60, %r422;
	shr.u32 	%r423, %r2, 1;
	and.b32  	%r424, %r3, 32;
	or.b32  	%r425, %r424, %r423;
	or.b32  	%r64, %r425, %r56;
	or.b32  	%r65, %r64, 8;
	or.b32  	%r426, %r96, %r94;
	or.b32  	%r427, %r426, %r92;
	shr.u32 	%r428, %r427, 1;
	mul.lo.s32 	%r429, %r428, 65;
	add.s32 	%r430, %r64, %r429;
	add.s32 	%r431, %r65, %r429;
	shl.b32 	%r432, %r2, 1;
	and.b32  	%r433, %r432, 14;
	shl.b32 	%r434, %r150, 16;
	add.s32 	%r435, %r434, -196608;
	and.b32  	%r436, %r414, 28;
	and.b32  	%r437, %r95, 2016;
	or.b32  	%r438, %r437, %r14;
	or.b32  	%r439, %r438, %r436;
	shl.b32 	%r66, %r439, 5;
	cvt.s64.s32 	%rd5, %r435;
	shr.u32 	%r440, %r2, 3;
	or.b32  	%r441, %r440, 2;
	or.b32  	%r442, %r440, 4;
	or.b32  	%r443, %r440, 6;
	bfe.s32 	%r444, %r2, 2, 1;
	and.b32  	%r445, %r444, 130;
	and.b32  	%r446, %r2, 1;
	neg.s32 	%r447, %r446;
	and.b32  	%r448, %r447, 520;
	bfe.s32 	%r449, %r2, 1, 1;
	and.b32  	%r450, %r449, 260;
	mul.lo.s32 	%r451, %r440, 1057;
	mul.lo.s32 	%r452, %r102, 65;
	add.s32 	%r453, %r421, %r448;
	add.s32 	%r454, %r453, %r445;
	add.s32 	%r455, %r454, %r450;
	add.s32 	%r456, %r455, %r451;
	add.s32 	%r457, %r456, %r452;
	mul.wide.u32 	%rd48, %r457, 4;
	mov.u64 	%rd49, shmem;
	add.s64 	%rd6, %rd49, %rd48;
	add.s32 	%r458, %r455, 32;
	add.s32 	%r459, %r458, %r451;
	add.s32 	%r460, %r459, %r452;
	mul.wide.u32 	%rd50, %r460, 4;
	add.s64 	%rd7, %rd49, %rd50;
	or.b32  	%r461, %r455, 1;
	add.s32 	%r462, %r461, %r451;
	add.s32 	%r463, %r462, %r452;
	mul.wide.u32 	%rd51, %r463, 4;
	add.s64 	%rd8, %rd49, %rd51;
	add.s32 	%r464, %r455, 33;
	add.s32 	%r465, %r464, %r451;
	add.s32 	%r466, %r465, %r452;
	mul.wide.u32 	%rd52, %r466, 4;
	add.s64 	%rd9, %rd49, %rd52;
	mul.lo.s32 	%r467, %r441, 1057;
	add.s32 	%r468, %r455, %r467;
	add.s32 	%r469, %r468, %r452;
	mul.wide.u32 	%rd53, %r469, 4;
	add.s64 	%rd10, %rd49, %rd53;
	add.s32 	%r470, %r458, %r467;
	add.s32 	%r471, %r470, %r452;
	mul.wide.u32 	%rd54, %r471, 4;
	add.s64 	%rd11, %rd49, %rd54;
	add.s32 	%r472, %r461, %r467;
	add.s32 	%r473, %r472, %r452;
	mul.wide.u32 	%rd55, %r473, 4;
	add.s64 	%rd12, %rd49, %rd55;
	add.s32 	%r474, %r464, %r467;
	add.s32 	%r475, %r474, %r452;
	mul.wide.u32 	%rd56, %r475, 4;
	add.s64 	%rd13, %rd49, %rd56;
	mul.lo.s32 	%r476, %r442, 1057;
	add.s32 	%r477, %r455, %r476;
	add.s32 	%r478, %r477, %r452;
	mul.wide.u32 	%rd57, %r478, 4;
	add.s64 	%rd14, %rd49, %rd57;
	add.s32 	%r479, %r458, %r476;
	add.s32 	%r480, %r479, %r452;
	mul.wide.u32 	%rd58, %r480, 4;
	add.s64 	%rd15, %rd49, %rd58;
	add.s32 	%r481, %r461, %r476;
	add.s32 	%r482, %r481, %r452;
	mul.wide.u32 	%rd59, %r482, 4;
	add.s64 	%rd16, %rd49, %rd59;
	add.s32 	%r483, %r464, %r476;
	add.s32 	%r484, %r483, %r452;
	mul.wide.u32 	%rd60, %r484, 4;
	add.s64 	%rd17, %rd49, %rd60;
	mul.lo.s32 	%r485, %r443, 1057;
	add.s32 	%r486, %r455, %r485;
	add.s32 	%r487, %r486, %r452;
	mul.wide.u32 	%rd61, %r487, 4;
	add.s64 	%rd18, %rd49, %rd61;
	add.s32 	%r488, %r458, %r485;
	add.s32 	%r489, %r488, %r452;
	mul.wide.u32 	%rd62, %r489, 4;
	add.s64 	%rd19, %rd49, %rd62;
	add.s32 	%r490, %r461, %r485;
	add.s32 	%r491, %r490, %r452;
	mul.wide.u32 	%rd63, %r491, 4;
	add.s64 	%rd20, %rd49, %rd63;
	add.s32 	%r492, %r464, %r485;
	add.s32 	%r493, %r492, %r452;
	mul.wide.u32 	%rd64, %r493, 4;
	add.s64 	%rd21, %rd49, %rd64;
	or.b32  	%r494, %r433, %r102;
	mul.lo.s32 	%r495, %r494, 65;
	add.s32 	%r496, %r421, %r495;
	add.s32 	%r497, %r496, %r451;
	mul.wide.u32 	%rd65, %r497, 4;
	add.s64 	%rd22, %rd49, %rd65;
	cvt.u64.u32 	%rd66, %r451;
	cvt.u64.u32 	%rd67, %r495;
	cvt.u64.u32 	%rd68, %r421;
	add.s64 	%rd69, %rd68, %rd67;
	add.s64 	%rd70, %rd69, %rd66;
	shl.b64 	%rd71, %rd70, 2;
	add.s64 	%rd23, %rd49, %rd71;
	add.s32 	%r498, %r496, %r467;
	mul.wide.u32 	%rd72, %r498, 4;
	add.s64 	%rd24, %rd49, %rd72;
	cvt.u64.u32 	%rd73, %r467;
	add.s64 	%rd74, %rd69, %rd73;
	shl.b64 	%rd75, %rd74, 2;
	add.s64 	%rd25, %rd49, %rd75;
	add.s32 	%r499, %r496, %r476;
	mul.wide.u32 	%rd76, %r499, 4;
	add.s64 	%rd26, %rd49, %rd76;
	cvt.u64.u32 	%rd77, %r476;
	add.s64 	%rd78, %rd69, %rd77;
	shl.b64 	%rd79, %rd78, 2;
	add.s64 	%rd27, %rd49, %rd79;
	add.s32 	%r500, %r496, %r485;
	mul.wide.u32 	%rd80, %r500, 4;
	add.s64 	%rd28, %rd49, %rd80;
	cvt.u64.u32 	%rd81, %r485;
	add.s64 	%rd82, %rd69, %rd81;
	shl.b64 	%rd83, %rd82, 2;
	add.s64 	%rd29, %rd49, %rd83;
	mul.wide.u32 	%rd84, %r431, 4;
	add.s64 	%rd30, %rd49, %rd84;
	mul.wide.u32 	%rd85, %r430, 4;
	add.s64 	%rd31, %rd49, %rd85;
	setp.eq.s32 	%p201, %r62, 0;
	mov.u16 	%rs294, 25600;
	mov.u16 	%rs242, 21504;
	mov.u16 	%rs302, 18432;
	setp.gt.u32 	%p215, %r2, 7;
	mov.u32 	%r2570, %r2562;
	mov.u32 	%r2571, %r2562;
	mov.u32 	%r2572, %r2562;
	mov.u32 	%r2573, %r2562;
	mov.u32 	%r2582, %r2562;
	mov.u32 	%r2583, %r2562;
	mov.u32 	%r73, %r2562;
	bra.uni 	$L__BB0_83;
$L__BB0_117:                            // %pass9776
                                        //   in Loop: Header=BB0_83 Depth=1
	selp.b32 	%r2545, %r137, %r2495, %p201;
	selp.b32 	%r2546, %r2491, %r137, %p201;
	selp.b32 	%r2547, %r136, %r2487, %p201;
	selp.b32 	%r2548, %r2483, %r136, %p201;
	or.b32  	%r2550, %r2563, %r55;
	or.b32  	%r2551, %r2550, %r60;
	or.b32  	%r2591, %r2551, %r66;
	or.b32  	%r2552, %r2591, 131072;
	cvt.s64.s32 	%rd99, %r2552;
	add.s64 	%rd100, %rd99, %rd5;
	shr.u64 	%rd101, %rd100, 38;
	add.s64 	%rd102, %rd100, %rd101;
	shr.s64 	%rd103, %rd102, 26;
	setp.lt.s64 	%p218, %rd100, 0;
	and.b64  	%rd104, %rd102, -67108864;
	setp.ne.s64 	%p219, %rd104, %rd100;
	and.pred  	%p220, %p218, %p219;
	selp.u64 	%rd105, 1, 0, %p220;
	sub.s64 	%rd106, %rd105, %rd103;
	shl.b64 	%rd107, %rd106, 26;
	add.s64 	%rd108, %rd107, %rd100;
	shl.b64 	%rd109, %rd108, 2;
	add.s64 	%rd110, %rd3, %rd109;
	st.global.v4.u32 	[%rd110], {%r2548, %r2546, %r2547, %r2545};
$L__BB0_118:                            // %pass9877
                                        //   in Loop: Header=BB0_83 Depth=1
	or.b32  	%r2556, %r2591, 262144;
	cvt.s64.s32 	%rd111, %r2556;
	add.s64 	%rd112, %rd111, %rd5;
	shr.u64 	%rd113, %rd112, 38;
	add.s64 	%rd114, %rd112, %rd113;
	shr.s64 	%rd115, %rd114, 26;
	setp.lt.s64 	%p221, %rd112, 0;
	and.b64  	%rd116, %rd114, -67108864;
	setp.ne.s64 	%p222, %rd116, %rd112;
	and.pred  	%p223, %p221, %p222;
	selp.u64 	%rd117, 1, 0, %p223;
	sub.s64 	%rd118, %rd117, %rd115;
	shl.b64 	%rd119, %rd118, 26;
	add.s64 	%rd120, %rd119, %rd112;
	shl.b64 	%rd121, %rd120, 2;
	add.s64 	%rd122, %rd3, %rd121;
	st.global.v4.u32 	[%rd122], {%r138, %r140, %r139, %r141};
	or.b32  	%r2557, %r2591, 393216;
	cvt.s64.s32 	%rd123, %r2557;
	add.s64 	%rd124, %rd123, %rd5;
	shr.u64 	%rd125, %rd124, 38;
	add.s64 	%rd126, %rd124, %rd125;
	shr.s64 	%rd127, %rd126, 26;
	setp.lt.s64 	%p224, %rd124, 0;
	and.b64  	%rd128, %rd126, -67108864;
	setp.ne.s64 	%p225, %rd128, %rd124;
	and.pred  	%p226, %p224, %p225;
	selp.u64 	%rd129, 1, 0, %p226;
	sub.s64 	%rd130, %rd129, %rd127;
	shl.b64 	%rd131, %rd130, 26;
	add.s64 	%rd132, %rd131, %rd124;
	shl.b64 	%rd133, %rd132, 2;
	add.s64 	%rd134, %rd3, %rd133;
	st.global.v4.u32 	[%rd134], {%r142, %r144, %r143, %r145};
	setp.ne.s32 	%p227, %r73, 32512;
	add.s32 	%r73, %r73, 256;
	add.s32 	%r2558, %r73, %r148;
	setp.lt.s32 	%p228, %r2558, %r149;
	and.pred  	%p229, %p227, %p228;
	@%p229 bra 	$L__BB0_83;
	bra.uni 	$L__BB0_119;
$L__BB0_83:                             // %L1415
                                        // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_84 Depth 2
	or.b32  	%r74, %r73, %r57;
	or.b32  	%r566, %r74, %r56;
	or.b32  	%r567, %r566, %r58;
	or.b32  	%r568, %r567, %r59;
	add.s32 	%r569, %r568, %r148;
	mad.lo.s32 	%r570, %r569, 12288, %r61;
	mul.hi.s32 	%r571, %r570, 715827883;
	shr.u32 	%r572, %r571, 31;
	shr.s32 	%r573, %r571, 26;
	add.s32 	%r574, %r573, %r572;
	setp.lt.s32 	%p202, %r570, 0;
	mul.lo.s32 	%r575, %r574, 402653184;
	setp.ne.s32 	%p203, %r575, %r570;
	and.pred  	%p204, %p202, %p203;
	selp.s32 	%r576, -1, 0, %p204;
	add.s32 	%r577, %r574, %r576;
	mad.lo.s32 	%r578, %r577, -402653184, %r570;
	mul.wide.s32 	%rd86, %r578, 4;
	add.s64 	%rd87, %rd2, %rd86;
	ld.global.v4.u32 	{%r579, %r580, %r581, %r582}, [%rd87];
	or.b32  	%r583, %r568, 64;
	add.s32 	%r584, %r583, %r148;
	mad.lo.s32 	%r585, %r584, 12288, %r61;
	mul.hi.s32 	%r586, %r585, 715827883;
	shr.u32 	%r587, %r586, 31;
	shr.s32 	%r588, %r586, 26;
	add.s32 	%r589, %r588, %r587;
	setp.lt.s32 	%p205, %r585, 0;
	mul.lo.s32 	%r590, %r589, 402653184;
	setp.ne.s32 	%p206, %r590, %r585;
	and.pred  	%p207, %p205, %p206;
	selp.s32 	%r591, -1, 0, %p207;
	add.s32 	%r592, %r589, %r591;
	mad.lo.s32 	%r593, %r592, -402653184, %r585;
	mul.wide.s32 	%rd88, %r593, 4;
	add.s64 	%rd89, %rd2, %rd88;
	ld.global.v4.u32 	{%r594, %r595, %r596, %r597}, [%rd89];
	or.b32  	%r598, %r568, 128;
	add.s32 	%r599, %r598, %r148;
	mad.lo.s32 	%r600, %r599, 12288, %r61;
	mul.hi.s32 	%r601, %r600, 715827883;
	shr.u32 	%r602, %r601, 31;
	shr.s32 	%r603, %r601, 26;
	add.s32 	%r604, %r603, %r602;
	setp.lt.s32 	%p208, %r600, 0;
	mul.lo.s32 	%r605, %r604, 402653184;
	setp.ne.s32 	%p209, %r605, %r600;
	and.pred  	%p210, %p208, %p209;
	selp.s32 	%r606, -1, 0, %p210;
	add.s32 	%r607, %r604, %r606;
	mad.lo.s32 	%r608, %r607, -402653184, %r600;
	mul.wide.s32 	%rd90, %r608, 4;
	add.s64 	%rd91, %rd2, %rd90;
	ld.global.v4.u32 	{%r609, %r610, %r611, %r612}, [%rd91];
	or.b32  	%r613, %r568, 192;
	add.s32 	%r614, %r613, %r148;
	mad.lo.s32 	%r615, %r614, 12288, %r61;
	mul.hi.s32 	%r616, %r615, 715827883;
	shr.u32 	%r617, %r616, 31;
	shr.s32 	%r618, %r616, 26;
	add.s32 	%r619, %r618, %r617;
	setp.lt.s32 	%p211, %r615, 0;
	mul.lo.s32 	%r620, %r619, 402653184;
	setp.ne.s32 	%p212, %r620, %r615;
	and.pred  	%p213, %p211, %p212;
	selp.s32 	%r621, -1, 0, %p213;
	add.s32 	%r622, %r619, %r621;
	mad.lo.s32 	%r623, %r622, -402653184, %r615;
	mul.wide.s32 	%rd92, %r623, 4;
	add.s64 	%rd93, %rd2, %rd92;
	ld.global.v4.u32 	{%r624, %r625, %r626, %r627}, [%rd93];
	selp.b32 	%r628, %r581, %r579, %p201;
	shfl.sync.bfly.b32	%r629, %r628, 8, 31, -1;
	selp.b32 	%r502, %r579, %r629, %p201;
	selp.b32 	%r503, %r629, %r581, %p201;
	selp.b32 	%r630, %r582, %r580, %p201;
	shfl.sync.bfly.b32	%r631, %r630, 8, 31, -1;
	selp.b32 	%r510, %r580, %r631, %p201;
	selp.b32 	%r511, %r631, %r582, %p201;
	selp.b32 	%r632, %r596, %r594, %p201;
	shfl.sync.bfly.b32	%r633, %r632, 8, 31, -1;
	selp.b32 	%r518, %r594, %r633, %p201;
	selp.b32 	%r519, %r633, %r596, %p201;
	selp.b32 	%r634, %r597, %r595, %p201;
	shfl.sync.bfly.b32	%r635, %r634, 8, 31, -1;
	selp.b32 	%r526, %r595, %r635, %p201;
	selp.b32 	%r527, %r635, %r597, %p201;
	selp.b32 	%r636, %r611, %r609, %p201;
	shfl.sync.bfly.b32	%r637, %r636, 8, 31, -1;
	selp.b32 	%r534, %r609, %r637, %p201;
	selp.b32 	%r535, %r637, %r611, %p201;
	selp.b32 	%r638, %r612, %r610, %p201;
	shfl.sync.bfly.b32	%r639, %r638, 8, 31, -1;
	selp.b32 	%r542, %r610, %r639, %p201;
	selp.b32 	%r543, %r639, %r612, %p201;
	selp.b32 	%r640, %r626, %r624, %p201;
	shfl.sync.bfly.b32	%r641, %r640, 8, 31, -1;
	selp.b32 	%r550, %r624, %r641, %p201;
	selp.b32 	%r551, %r641, %r626, %p201;
	selp.b32 	%r642, %r627, %r625, %p201;
	shfl.sync.bfly.b32	%r643, %r642, 8, 31, -1;
	selp.b32 	%r558, %r625, %r643, %p201;
	selp.b32 	%r559, %r643, %r627, %p201;
	mov.u32 	%r560, 21520;
	// begin inline asm
	prmt.b32 %r501, %r502, %r503, %r560;
	// end inline asm
	mov.u32 	%r564, 30258;
	// begin inline asm
	prmt.b32 %r505, %r502, %r503, %r564;
	// end inline asm
	// begin inline asm
	prmt.b32 %r509, %r510, %r511, %r560;
	// end inline asm
	// begin inline asm
	prmt.b32 %r513, %r510, %r511, %r564;
	// end inline asm
	// begin inline asm
	prmt.b32 %r517, %r518, %r519, %r560;
	// end inline asm
	// begin inline asm
	prmt.b32 %r521, %r518, %r519, %r564;
	// end inline asm
	// begin inline asm
	prmt.b32 %r525, %r526, %r527, %r560;
	// end inline asm
	// begin inline asm
	prmt.b32 %r529, %r526, %r527, %r564;
	// end inline asm
	// begin inline asm
	prmt.b32 %r533, %r534, %r535, %r560;
	// end inline asm
	// begin inline asm
	prmt.b32 %r537, %r534, %r535, %r564;
	// end inline asm
	// begin inline asm
	prmt.b32 %r541, %r542, %r543, %r560;
	// end inline asm
	// begin inline asm
	prmt.b32 %r545, %r542, %r543, %r564;
	// end inline asm
	// begin inline asm
	prmt.b32 %r549, %r550, %r551, %r560;
	// end inline asm
	// begin inline asm
	prmt.b32 %r553, %r550, %r551, %r564;
	// end inline asm
	// begin inline asm
	prmt.b32 %r557, %r558, %r559, %r560;
	// end inline asm
	// begin inline asm
	prmt.b32 %r561, %r558, %r559, %r564;
	// end inline asm
	st.shared.u32 	[%rd6], %r501;
	st.shared.u32 	[%rd7], %r505;
	st.shared.u32 	[%rd8], %r509;
	st.shared.u32 	[%rd9], %r513;
	st.shared.u32 	[%rd10], %r517;
	st.shared.u32 	[%rd11], %r521;
	st.shared.u32 	[%rd12], %r525;
	st.shared.u32 	[%rd13], %r529;
	st.shared.u32 	[%rd14], %r533;
	st.shared.u32 	[%rd15], %r537;
	st.shared.u32 	[%rd16], %r541;
	st.shared.u32 	[%rd17], %r545;
	st.shared.u32 	[%rd18], %r549;
	st.shared.u32 	[%rd19], %r553;
	st.shared.u32 	[%rd20], %r557;
	st.shared.u32 	[%rd21], %r561;
	bar.sync 	0;
	or.b32  	%r644, %r73, %r102;
	or.b32  	%r75, %r63, %r644;
	shr.u32 	%r2577, %r75, 5;
	mov.u64 	%rd139, %rd31;
	mov.u64 	%rd140, %rd30;
	mov.u32 	%r2578, %r2570;
	mov.u32 	%r2579, %r2571;
	mov.u32 	%r2580, %r2572;
	mov.u32 	%r2581, %r2573;
	mov.u32 	%r2584, %r2562;
$L__BB0_84:                             // %L12103
                                        //   Parent Loop BB0_83 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	mov.u32 	%r2571, %r2583;
	mov.u32 	%r2570, %r2582;
	add.s32 	%r2441, %r75, %r2584;
	bfe.s32 	%r2442, %r2441, 2, 1;
	and.b32  	%r2443, %r2442, 130;
	and.b32  	%r2444, %r2441, 1;
	neg.s32 	%r2445, %r2444;
	and.b32  	%r2446, %r2445, 520;
	bfe.s32 	%r2447, %r2441, 1, 1;
	and.b32  	%r2448, %r2447, 260;
	and.b32  	%r2449, %r2577, 7;
	mul.lo.s32 	%r2450, %r2449, 1057;
	bfe.s32 	%r2451, %r2441, 3, 1;
	and.b32  	%r2452, %r2451, 65;
	or.b32  	%r2453, %r64, %r2446;
	add.s32 	%r2454, %r2453, %r2443;
	add.s32 	%r2455, %r2454, %r2448;
	add.s32 	%r2456, %r2455, %r2450;
	add.s32 	%r2457, %r2456, %r2452;
	mul.wide.u32 	%rd94, %r2457, 4;
	add.s64 	%rd96, %rd49, %rd94;
	ld.shared.u32 	%r2572, [%rd96];
	add.s32 	%r2458, %r65, %r2446;
	add.s32 	%r2459, %r2458, %r2443;
	add.s32 	%r2460, %r2459, %r2448;
	add.s32 	%r2461, %r2460, %r2450;
	add.s32 	%r2462, %r2461, %r2452;
	mul.wide.u32 	%rd97, %r2462, 4;
	add.s64 	%rd98, %rd49, %rd97;
	ld.shared.u32 	%r2573, [%rd98];
	// begin inline asm
	mov.b32 %r650, {%rs294, %rs294};
	// end inline asm
	// begin inline asm
	mov.b32 %r661, {%rs242, %rs242};
	// end inline asm
	xor.b32  	%r649, %r2572, -2004318072;
	mov.u32 	%r648, 983055;
	// begin inline asm
	lop3.b32 %r647, %r648, %r649, %r650, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r651, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r652, %r650, %r651;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r655, %r647, %r652;
	// end inline asm
	mov.u32 	%r659, 15728880;
	// begin inline asm
	lop3.b32 %r658, %r659, %r649, %r661, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r662, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r663, %r661, %r662;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r666, %r658, %r663;
	// end inline asm
	shr.u32 	%r671, %r649, 8;
	// begin inline asm
	lop3.b32 %r669, %r648, %r671, %r650, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r673, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r674, %r650, %r673;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r677, %r669, %r674;
	// end inline asm
	// begin inline asm
	lop3.b32 %r680, %r659, %r671, %r661, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r684, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r685, %r661, %r684;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r688, %r680, %r685;
	// end inline asm
	// begin inline asm
	mov.b32 %r696, {%rs294, %rs294};
	// end inline asm
	// begin inline asm
	mov.b32 %r707, {%rs242, %rs242};
	// end inline asm
	xor.b32  	%r695, %r2573, -2004318072;
	// begin inline asm
	lop3.b32 %r693, %r648, %r695, %r696, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r697, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r698, %r696, %r697;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r701, %r693, %r698;
	// end inline asm
	// begin inline asm
	lop3.b32 %r704, %r659, %r695, %r707, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r708, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r709, %r707, %r708;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r712, %r704, %r709;
	// end inline asm
	shr.u32 	%r717, %r695, 8;
	// begin inline asm
	lop3.b32 %r715, %r648, %r717, %r696, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r719, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r720, %r696, %r719;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r723, %r715, %r720;
	// end inline asm
	// begin inline asm
	lop3.b32 %r726, %r659, %r717, %r707, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r730, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r731, %r707, %r730;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r734, %r726, %r731;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r737, %r241;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r739, %r737, %r655;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r742, %r241;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r744, %r742, %r666;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r747, %r241;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r749, %r747, %r677;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r752, %r241;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r754, %r752, %r688;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r757, %r241;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r759, %r757, %r701;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r762, %r241;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r764, %r762, %r712;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r767, %r241;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r769, %r767, %r723;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r772, %r241;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r774, %r772, %r734;
	// end inline asm
	// begin inline asm
	mov.b32 %r782, {%rs294, %rs294};
	// end inline asm
	// begin inline asm
	mov.b32 %r793, {%rs242, %rs242};
	// end inline asm
	xor.b32  	%r781, %r2578, -2004318072;
	// begin inline asm
	lop3.b32 %r779, %r648, %r781, %r782, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r783, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r784, %r782, %r783;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r787, %r779, %r784;
	// end inline asm
	// begin inline asm
	lop3.b32 %r790, %r659, %r781, %r793, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r794, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r795, %r793, %r794;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r798, %r790, %r795;
	// end inline asm
	shr.u32 	%r803, %r781, 8;
	// begin inline asm
	lop3.b32 %r801, %r648, %r803, %r782, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r805, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r806, %r782, %r805;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r809, %r801, %r806;
	// end inline asm
	// begin inline asm
	lop3.b32 %r812, %r659, %r803, %r793, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r816, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r817, %r793, %r816;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r820, %r812, %r817;
	// end inline asm
	// begin inline asm
	mov.b32 %r828, {%rs294, %rs294};
	// end inline asm
	// begin inline asm
	mov.b32 %r839, {%rs242, %rs242};
	// end inline asm
	xor.b32  	%r827, %r2579, -2004318072;
	// begin inline asm
	lop3.b32 %r825, %r648, %r827, %r828, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r829, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r830, %r828, %r829;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r833, %r825, %r830;
	// end inline asm
	// begin inline asm
	lop3.b32 %r836, %r659, %r827, %r839, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r840, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r841, %r839, %r840;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r844, %r836, %r841;
	// end inline asm
	shr.u32 	%r849, %r827, 8;
	// begin inline asm
	lop3.b32 %r847, %r648, %r849, %r828, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r851, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r852, %r828, %r851;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r855, %r847, %r852;
	// end inline asm
	// begin inline asm
	lop3.b32 %r858, %r659, %r849, %r839, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r862, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r863, %r839, %r862;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r866, %r858, %r863;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r869, %r187, %r787, %r739;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r873, %r187, %r798, %r744;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r877, %r187, %r809, %r749;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r881, %r187, %r820, %r754;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r885, %r187, %r833, %r759;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r889, %r187, %r844, %r764;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r893, %r187, %r855, %r769;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r897, %r187, %r866, %r774;
	// end inline asm
	// begin inline asm
	mov.b32 %r906, {%rs294, %rs294};
	// end inline asm
	// begin inline asm
	mov.b32 %r917, {%rs242, %rs242};
	// end inline asm
	xor.b32  	%r905, %r2580, -2004318072;
	// begin inline asm
	lop3.b32 %r903, %r648, %r905, %r906, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r907, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r908, %r906, %r907;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r911, %r903, %r908;
	// end inline asm
	// begin inline asm
	lop3.b32 %r914, %r659, %r905, %r917, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r918, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r919, %r917, %r918;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r922, %r914, %r919;
	// end inline asm
	shr.u32 	%r927, %r905, 8;
	// begin inline asm
	lop3.b32 %r925, %r648, %r927, %r906, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r929, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r930, %r906, %r929;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r933, %r925, %r930;
	// end inline asm
	// begin inline asm
	lop3.b32 %r936, %r659, %r927, %r917, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r940, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r941, %r917, %r940;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r944, %r936, %r941;
	// end inline asm
	// begin inline asm
	mov.b32 %r952, {%rs294, %rs294};
	// end inline asm
	// begin inline asm
	mov.b32 %r963, {%rs242, %rs242};
	// end inline asm
	xor.b32  	%r951, %r2581, -2004318072;
	// begin inline asm
	lop3.b32 %r949, %r648, %r951, %r952, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r953, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r954, %r952, %r953;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r957, %r949, %r954;
	// end inline asm
	// begin inline asm
	lop3.b32 %r960, %r659, %r951, %r963, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r964, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r965, %r963, %r964;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r968, %r960, %r965;
	// end inline asm
	shr.u32 	%r973, %r951, 8;
	// begin inline asm
	lop3.b32 %r971, %r648, %r973, %r952, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r975, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r976, %r952, %r975;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r979, %r971, %r976;
	// end inline asm
	// begin inline asm
	lop3.b32 %r982, %r659, %r973, %r963, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r986, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r987, %r963, %r986;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r990, %r982, %r987;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r993, %r205;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r995, %r993, %r911, %r869;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r999, %r205;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1001, %r999, %r922, %r873;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1005, %r205;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1007, %r1005, %r933, %r877;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1011, %r205;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1013, %r1011, %r944, %r881;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1017, %r205;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1019, %r1017, %r957, %r885;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1023, %r205;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1025, %r1023, %r968, %r889;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1029, %r205;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1031, %r1029, %r979, %r893;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1035, %r205;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1037, %r1035, %r990, %r897;
	// end inline asm
	// begin inline asm
	mov.b32 %r1046, {%rs294, %rs294};
	// end inline asm
	// begin inline asm
	mov.b32 %r1057, {%rs242, %rs242};
	// end inline asm
	xor.b32  	%r1045, %r2570, -2004318072;
	// begin inline asm
	lop3.b32 %r1043, %r648, %r1045, %r1046, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1047, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1048, %r1046, %r1047;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1051, %r1043, %r1048;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1054, %r659, %r1045, %r1057, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1058, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1059, %r1057, %r1058;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1062, %r1054, %r1059;
	// end inline asm
	shr.u32 	%r1067, %r1045, 8;
	// begin inline asm
	lop3.b32 %r1065, %r648, %r1067, %r1046, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1069, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1070, %r1046, %r1069;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1073, %r1065, %r1070;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1076, %r659, %r1067, %r1057, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1080, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1081, %r1057, %r1080;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1084, %r1076, %r1081;
	// end inline asm
	// begin inline asm
	mov.b32 %r1092, {%rs294, %rs294};
	// end inline asm
	// begin inline asm
	mov.b32 %r1103, {%rs242, %rs242};
	// end inline asm
	xor.b32  	%r1091, %r2571, -2004318072;
	// begin inline asm
	lop3.b32 %r1089, %r648, %r1091, %r1092, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1093, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1094, %r1092, %r1093;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1097, %r1089, %r1094;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1100, %r659, %r1091, %r1103, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1104, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1105, %r1103, %r1104;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1108, %r1100, %r1105;
	// end inline asm
	shr.u32 	%r1113, %r1091, 8;
	// begin inline asm
	lop3.b32 %r1111, %r648, %r1113, %r1092, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1115, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1116, %r1092, %r1115;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1119, %r1111, %r1116;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1122, %r659, %r1113, %r1103, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1126, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1127, %r1103, %r1126;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1130, %r1122, %r1127;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1172, %r223, %r1051, %r995;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1169, %r223, %r1062, %r1001;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1181, %r223, %r1073, %r1007;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1178, %r223, %r1084, %r1013;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1190, %r223, %r1097, %r1019;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1187, %r223, %r1108, %r1025;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1199, %r223, %r1119, %r1031;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1196, %r223, %r1130, %r1037;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1165, %r247;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1167, %r1165, %r1169;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1170, %r244, %r1172, %r1167;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1174, %r247;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1176, %r1174, %r1178;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1179, %r244, %r1181, %r1176;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1183, %r247;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1185, %r1183, %r1187;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1188, %r244, %r1190, %r1185;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1192, %r247;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1194, %r1192, %r1196;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1197, %r244, %r1199, %r1194;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1201, %r247, %r1172;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1204, %r244, %r1169, %r1201;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1208, %r247, %r1181;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1211, %r244, %r1178, %r1208;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1215, %r247, %r1190;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1218, %r244, %r1187, %r1215;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1222, %r247, %r1199;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1225, %r244, %r1196, %r1222;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1276, %r1273}, {%r304, %r310, %r307, %r313}, {%r1170, %r1204}, {%r2562, %r2562};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1285, %r1282}, {%r304, %r310, %r307, %r313}, {%r1179, %r1211}, {%r2562, %r2562};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1294, %r1291}, {%r304, %r310, %r307, %r313}, {%r1188, %r1218}, {%r2562, %r2562};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1303, %r1300}, {%r304, %r310, %r307, %r313}, {%r1197, %r1225}, {%r2562, %r2562};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1269, %r354;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1271, %r1269, %r1273;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1274, %r351, %r1276, %r1271;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1278, %r354;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1280, %r1278, %r1282;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1283, %r351, %r1285, %r1280;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1287, %r354;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1289, %r1287, %r1291;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1292, %r351, %r1294, %r1289;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1296, %r354;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1298, %r1296, %r1300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1301, %r351, %r1303, %r1298;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1305, %r354, %r1276;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1308, %r351, %r1273, %r1305;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1312, %r354, %r1285;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1315, %r351, %r1282, %r1312;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1319, %r354, %r1294;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1322, %r351, %r1291, %r1319;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1326, %r354, %r1303;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1329, %r351, %r1300, %r1326;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1333, %r1334}, {%r391, %r397, %r394, %r400}, {%r1274, %r1308}, {%r2562, %r2562};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1343, %r1344}, {%r391, %r397, %r394, %r400}, {%r1283, %r1315}, {%r2562, %r2562};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1353, %r1354}, {%r391, %r397, %r394, %r400}, {%r1292, %r1322}, {%r2562, %r2562};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1363, %r1364}, {%r391, %r397, %r394, %r400}, {%r1301, %r1329}, {%r2562, %r2562};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1373, %r97, %r1333;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1376, %r97, %r1334;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1379, %r97, %r1343;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1382, %r97, %r1344;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1385, %r97, %r1353;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1388, %r97, %r1354;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1391, %r97, %r1363;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1394, %r97, %r1364;
	// end inline asm
	mov.u16 	%rs103, -14592;
	// begin inline asm
	mov.b32 %r1397, {%rs103, %rs103};
	// end inline asm
	mov.u16 	%rs105, 18176;
	// begin inline asm
	mov.b32 %r1398, {%rs105, %rs105};
	// end inline asm
	// begin inline asm
	max.f16x2 %r1399, %r1373, %r1397;
	// end inline asm
	// begin inline asm
	min.f16x2 %r1402, %r1399, %r1398;
	// end inline asm
	// begin inline asm
	mov.b32 %r1405, {%rs103, %rs103};
	// end inline asm
	// begin inline asm
	mov.b32 %r1406, {%rs105, %rs105};
	// end inline asm
	// begin inline asm
	max.f16x2 %r1407, %r1376, %r1405;
	// end inline asm
	// begin inline asm
	min.f16x2 %r1410, %r1407, %r1406;
	// end inline asm
	// begin inline asm
	mov.b32 %r1413, {%rs103, %rs103};
	// end inline asm
	// begin inline asm
	mov.b32 %r1414, {%rs105, %rs105};
	// end inline asm
	// begin inline asm
	max.f16x2 %r1415, %r1379, %r1413;
	// end inline asm
	// begin inline asm
	min.f16x2 %r1418, %r1415, %r1414;
	// end inline asm
	// begin inline asm
	mov.b32 %r1421, {%rs103, %rs103};
	// end inline asm
	// begin inline asm
	mov.b32 %r1422, {%rs105, %rs105};
	// end inline asm
	// begin inline asm
	max.f16x2 %r1423, %r1382, %r1421;
	// end inline asm
	// begin inline asm
	min.f16x2 %r1426, %r1423, %r1422;
	// end inline asm
	// begin inline asm
	mov.b32 %r1429, {%rs103, %rs103};
	// end inline asm
	// begin inline asm
	mov.b32 %r1430, {%rs105, %rs105};
	// end inline asm
	// begin inline asm
	max.f16x2 %r1431, %r1385, %r1429;
	// end inline asm
	// begin inline asm
	min.f16x2 %r1434, %r1431, %r1430;
	// end inline asm
	// begin inline asm
	mov.b32 %r1437, {%rs103, %rs103};
	// end inline asm
	// begin inline asm
	mov.b32 %r1438, {%rs105, %rs105};
	// end inline asm
	// begin inline asm
	max.f16x2 %r1439, %r1388, %r1437;
	// end inline asm
	// begin inline asm
	min.f16x2 %r1442, %r1439, %r1438;
	// end inline asm
	// begin inline asm
	mov.b32 %r1445, {%rs103, %rs103};
	// end inline asm
	// begin inline asm
	mov.b32 %r1446, {%rs105, %rs105};
	// end inline asm
	// begin inline asm
	max.f16x2 %r1447, %r1391, %r1445;
	// end inline asm
	// begin inline asm
	min.f16x2 %r1450, %r1447, %r1446;
	// end inline asm
	// begin inline asm
	mov.b32 %r1453, {%rs103, %rs103};
	// end inline asm
	// begin inline asm
	mov.b32 %r1454, {%rs105, %rs105};
	// end inline asm
	// begin inline asm
	max.f16x2 %r1455, %r1394, %r1453;
	// end inline asm
	// begin inline asm
	min.f16x2 %r1458, %r1455, %r1454;
	// end inline asm
	// begin inline asm
	mov.b32 %r1464, {%rs294, %rs294};
	// end inline asm
	// begin inline asm
	mov.b32 %r1462, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1463, %r1464, %r1462;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1466, %r1402, %r1463;
	// end inline asm
	// begin inline asm
	mov.b32 %r1469, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1470, %r1464, %r1469;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1473, %r1410, %r1470;
	// end inline asm
	// begin inline asm
	mov.b32 %r1476, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1477, %r1464, %r1476;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1480, %r1418, %r1477;
	// end inline asm
	// begin inline asm
	mov.b32 %r1483, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1484, %r1464, %r1483;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1487, %r1426, %r1484;
	// end inline asm
	mov.u32 	%r1493, 25152;
	// begin inline asm
	prmt.b32 %r1490, %r1466, %r1480, %r1493;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1494, %r1473, %r1487, %r1493;
	// end inline asm
	shl.b32 	%r1501, %r1494, 4;
	mov.u32 	%r1499, 252645135;
	// begin inline asm
	lop3.b32 %r1498, %r1499, %r1490, %r1501, 202;
	// end inline asm
	xor.b32  	%r2463, %r1498, -2004318072;
	// begin inline asm
	mov.b32 %r1505, {%rs294, %rs294};
	// end inline asm
	// begin inline asm
	mov.b32 %r1503, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1504, %r1505, %r1503;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1507, %r1434, %r1504;
	// end inline asm
	// begin inline asm
	mov.b32 %r1510, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1511, %r1505, %r1510;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1514, %r1442, %r1511;
	// end inline asm
	// begin inline asm
	mov.b32 %r1517, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1518, %r1505, %r1517;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1521, %r1450, %r1518;
	// end inline asm
	// begin inline asm
	mov.b32 %r1524, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1525, %r1505, %r1524;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1528, %r1458, %r1525;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1531, %r1507, %r1521, %r1493;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1535, %r1514, %r1528, %r1493;
	// end inline asm
	shl.b32 	%r1542, %r1535, 4;
	// begin inline asm
	lop3.b32 %r1539, %r1499, %r1531, %r1542, 202;
	// end inline asm
	xor.b32  	%r2464, %r1539, -2004318072;
	st.shared.u32 	[%rd139], %r2463;
	st.shared.u32 	[%rd140], %r2464;
	ld.shared.u32 	%r2582, [%rd96];
	ld.shared.u32 	%r2583, [%rd98];
	// begin inline asm
	mov.b32 %r1548, {%rs294, %rs294};
	// end inline asm
	// begin inline asm
	mov.b32 %r1559, {%rs242, %rs242};
	// end inline asm
	xor.b32  	%r1547, %r2582, -2004318072;
	// begin inline asm
	lop3.b32 %r1545, %r648, %r1547, %r1548, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1549, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1550, %r1548, %r1549;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1553, %r1545, %r1550;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1556, %r659, %r1547, %r1559, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1560, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1561, %r1559, %r1560;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1564, %r1556, %r1561;
	// end inline asm
	shr.u32 	%r1569, %r1547, 8;
	// begin inline asm
	lop3.b32 %r1567, %r648, %r1569, %r1548, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1571, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1572, %r1548, %r1571;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1575, %r1567, %r1572;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1578, %r659, %r1569, %r1559, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1582, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1583, %r1559, %r1582;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1586, %r1578, %r1583;
	// end inline asm
	// begin inline asm
	mov.b32 %r1594, {%rs294, %rs294};
	// end inline asm
	// begin inline asm
	mov.b32 %r1605, {%rs242, %rs242};
	// end inline asm
	xor.b32  	%r1593, %r2583, -2004318072;
	// begin inline asm
	lop3.b32 %r1591, %r648, %r1593, %r1594, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1595, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1596, %r1594, %r1595;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1599, %r1591, %r1596;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1602, %r659, %r1593, %r1605, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1606, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1607, %r1605, %r1606;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1610, %r1602, %r1607;
	// end inline asm
	shr.u32 	%r1615, %r1593, 8;
	// begin inline asm
	lop3.b32 %r1613, %r648, %r1615, %r1594, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1617, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1618, %r1594, %r1617;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1621, %r1613, %r1618;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1624, %r659, %r1615, %r1605, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1628, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1629, %r1605, %r1628;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1632, %r1624, %r1629;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1635, %r241;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1637, %r1635, %r1553;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1640, %r241;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1642, %r1640, %r1564;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1645, %r241;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1647, %r1645, %r1575;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1650, %r241;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1652, %r1650, %r1586;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1655, %r241;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1657, %r1655, %r1599;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1660, %r241;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1662, %r1660, %r1610;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1665, %r241;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1667, %r1665, %r1621;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1670, %r241;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1672, %r1670, %r1632;
	// end inline asm
	// begin inline asm
	mov.b32 %r1680, {%rs294, %rs294};
	// end inline asm
	// begin inline asm
	mov.b32 %r1691, {%rs242, %rs242};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1677, %r648, %r905, %r1680, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1681, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1682, %r1680, %r1681;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1685, %r1677, %r1682;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1688, %r659, %r905, %r1691, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1692, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1693, %r1691, %r1692;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1696, %r1688, %r1693;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1699, %r648, %r927, %r1680, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1703, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1704, %r1680, %r1703;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1707, %r1699, %r1704;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1710, %r659, %r927, %r1691, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1714, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1715, %r1691, %r1714;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1718, %r1710, %r1715;
	// end inline asm
	// begin inline asm
	mov.b32 %r1726, {%rs294, %rs294};
	// end inline asm
	// begin inline asm
	mov.b32 %r1737, {%rs242, %rs242};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1723, %r648, %r951, %r1726, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1727, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1728, %r1726, %r1727;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1731, %r1723, %r1728;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1734, %r659, %r951, %r1737, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1738, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1739, %r1737, %r1738;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1742, %r1734, %r1739;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1745, %r648, %r973, %r1726, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1749, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1750, %r1726, %r1749;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1753, %r1745, %r1750;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1756, %r659, %r973, %r1737, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1760, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1761, %r1737, %r1760;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1764, %r1756, %r1761;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1767, %r187, %r1685, %r1637;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1771, %r187, %r1696, %r1642;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1775, %r187, %r1707, %r1647;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1779, %r187, %r1718, %r1652;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1783, %r187, %r1731, %r1657;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1787, %r187, %r1742, %r1662;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1791, %r187, %r1753, %r1667;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1795, %r187, %r1764, %r1672;
	// end inline asm
	// begin inline asm
	mov.b32 %r1804, {%rs294, %rs294};
	// end inline asm
	// begin inline asm
	mov.b32 %r1815, {%rs242, %rs242};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1801, %r648, %r1045, %r1804, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1805, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1806, %r1804, %r1805;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1809, %r1801, %r1806;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1812, %r659, %r1045, %r1815, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1816, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1817, %r1815, %r1816;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1820, %r1812, %r1817;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1823, %r648, %r1067, %r1804, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1827, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1828, %r1804, %r1827;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1831, %r1823, %r1828;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1834, %r659, %r1067, %r1815, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1838, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1839, %r1815, %r1838;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1842, %r1834, %r1839;
	// end inline asm
	// begin inline asm
	mov.b32 %r1850, {%rs294, %rs294};
	// end inline asm
	// begin inline asm
	mov.b32 %r1861, {%rs242, %rs242};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1847, %r648, %r1091, %r1850, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1851, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1852, %r1850, %r1851;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1855, %r1847, %r1852;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1858, %r659, %r1091, %r1861, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1862, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1863, %r1861, %r1862;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1866, %r1858, %r1863;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1869, %r648, %r1113, %r1850, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1873, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1874, %r1850, %r1873;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1877, %r1869, %r1874;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1880, %r659, %r1113, %r1861, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1884, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1885, %r1861, %r1884;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1888, %r1880, %r1885;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1891, %r205;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1893, %r1891, %r1809, %r1767;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1897, %r205;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1899, %r1897, %r1820, %r1771;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1903, %r205;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1905, %r1903, %r1831, %r1775;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1909, %r205;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1911, %r1909, %r1842, %r1779;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1915, %r205;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1917, %r1915, %r1855, %r1783;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1921, %r205;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1923, %r1921, %r1866, %r1787;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1927, %r205;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1929, %r1927, %r1877, %r1791;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1933, %r205;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1935, %r1933, %r1888, %r1795;
	// end inline asm
	// begin inline asm
	mov.b32 %r1944, {%rs294, %rs294};
	// end inline asm
	// begin inline asm
	mov.b32 %r1955, {%rs242, %rs242};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1941, %r648, %r649, %r1944, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1945, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1946, %r1944, %r1945;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1949, %r1941, %r1946;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1952, %r659, %r649, %r1955, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1956, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1957, %r1955, %r1956;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1960, %r1952, %r1957;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1963, %r648, %r671, %r1944, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1967, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1968, %r1944, %r1967;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1971, %r1963, %r1968;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1974, %r659, %r671, %r1955, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1978, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1979, %r1955, %r1978;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1982, %r1974, %r1979;
	// end inline asm
	// begin inline asm
	mov.b32 %r1990, {%rs294, %rs294};
	// end inline asm
	// begin inline asm
	mov.b32 %r2001, {%rs242, %rs242};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1987, %r648, %r695, %r1990, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1991, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1992, %r1990, %r1991;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1995, %r1987, %r1992;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1998, %r659, %r695, %r2001, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2002, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2003, %r2001, %r2002;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2006, %r1998, %r2003;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2009, %r648, %r717, %r1990, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2013, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2014, %r1990, %r2013;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2017, %r2009, %r2014;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2020, %r659, %r717, %r2001, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2024, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2025, %r2001, %r2024;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2028, %r2020, %r2025;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2070, %r223, %r1949, %r1893;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2067, %r223, %r1960, %r1899;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2079, %r223, %r1971, %r1905;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2076, %r223, %r1982, %r1911;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2088, %r223, %r1995, %r1917;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2085, %r223, %r2006, %r1923;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2097, %r223, %r2017, %r1929;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2094, %r223, %r2028, %r1935;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2063, %r247;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2065, %r2063, %r2067;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2068, %r244, %r2070, %r2065;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2072, %r247;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2074, %r2072, %r2076;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2077, %r244, %r2079, %r2074;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2081, %r247;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2083, %r2081, %r2085;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2086, %r244, %r2088, %r2083;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2090, %r247;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2092, %r2090, %r2094;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2095, %r244, %r2097, %r2092;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2099, %r247, %r2070;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2102, %r244, %r2067, %r2099;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2106, %r247, %r2079;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2109, %r244, %r2076, %r2106;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2113, %r247, %r2088;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2116, %r244, %r2085, %r2113;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2120, %r247, %r2097;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2123, %r244, %r2094, %r2120;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2174, %r2171}, {%r304, %r310, %r307, %r313}, {%r2068, %r2102}, {%r2562, %r2562};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2183, %r2180}, {%r304, %r310, %r307, %r313}, {%r2077, %r2109}, {%r2562, %r2562};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2192, %r2189}, {%r304, %r310, %r307, %r313}, {%r2086, %r2116}, {%r2562, %r2562};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2201, %r2198}, {%r304, %r310, %r307, %r313}, {%r2095, %r2123}, {%r2562, %r2562};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2167, %r354;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2169, %r2167, %r2171;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2172, %r351, %r2174, %r2169;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2176, %r354;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2178, %r2176, %r2180;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2181, %r351, %r2183, %r2178;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2185, %r354;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2187, %r2185, %r2189;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2190, %r351, %r2192, %r2187;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2194, %r354;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2196, %r2194, %r2198;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2199, %r351, %r2201, %r2196;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2203, %r354, %r2174;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2206, %r351, %r2171, %r2203;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2210, %r354, %r2183;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2213, %r351, %r2180, %r2210;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2217, %r354, %r2192;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2220, %r351, %r2189, %r2217;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2224, %r354, %r2201;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2227, %r351, %r2198, %r2224;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2231, %r2232}, {%r391, %r397, %r394, %r400}, {%r2172, %r2206}, {%r2562, %r2562};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2241, %r2242}, {%r391, %r397, %r394, %r400}, {%r2181, %r2213}, {%r2562, %r2562};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2251, %r2252}, {%r391, %r397, %r394, %r400}, {%r2190, %r2220}, {%r2562, %r2562};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2261, %r2262}, {%r391, %r397, %r394, %r400}, {%r2199, %r2227}, {%r2562, %r2562};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2271, %r97, %r2231;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2274, %r97, %r2232;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2277, %r97, %r2241;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2280, %r97, %r2242;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2283, %r97, %r2251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2286, %r97, %r2252;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2289, %r97, %r2261;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2292, %r97, %r2262;
	// end inline asm
	// begin inline asm
	mov.b32 %r2295, {%rs103, %rs103};
	// end inline asm
	// begin inline asm
	mov.b32 %r2296, {%rs105, %rs105};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2297, %r2271, %r2295;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2300, %r2297, %r2296;
	// end inline asm
	// begin inline asm
	mov.b32 %r2303, {%rs103, %rs103};
	// end inline asm
	// begin inline asm
	mov.b32 %r2304, {%rs105, %rs105};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2305, %r2274, %r2303;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2308, %r2305, %r2304;
	// end inline asm
	// begin inline asm
	mov.b32 %r2311, {%rs103, %rs103};
	// end inline asm
	// begin inline asm
	mov.b32 %r2312, {%rs105, %rs105};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2313, %r2277, %r2311;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2316, %r2313, %r2312;
	// end inline asm
	// begin inline asm
	mov.b32 %r2319, {%rs103, %rs103};
	// end inline asm
	// begin inline asm
	mov.b32 %r2320, {%rs105, %rs105};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2321, %r2280, %r2319;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2324, %r2321, %r2320;
	// end inline asm
	// begin inline asm
	mov.b32 %r2327, {%rs103, %rs103};
	// end inline asm
	// begin inline asm
	mov.b32 %r2328, {%rs105, %rs105};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2329, %r2283, %r2327;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2332, %r2329, %r2328;
	// end inline asm
	// begin inline asm
	mov.b32 %r2335, {%rs103, %rs103};
	// end inline asm
	// begin inline asm
	mov.b32 %r2336, {%rs105, %rs105};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2337, %r2286, %r2335;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2340, %r2337, %r2336;
	// end inline asm
	// begin inline asm
	mov.b32 %r2343, {%rs103, %rs103};
	// end inline asm
	// begin inline asm
	mov.b32 %r2344, {%rs105, %rs105};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2345, %r2289, %r2343;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2348, %r2345, %r2344;
	// end inline asm
	// begin inline asm
	mov.b32 %r2351, {%rs103, %rs103};
	// end inline asm
	// begin inline asm
	mov.b32 %r2352, {%rs105, %rs105};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2353, %r2292, %r2351;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2356, %r2353, %r2352;
	// end inline asm
	// begin inline asm
	mov.b32 %r2362, {%rs294, %rs294};
	// end inline asm
	// begin inline asm
	mov.b32 %r2360, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2361, %r2362, %r2360;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2364, %r2300, %r2361;
	// end inline asm
	// begin inline asm
	mov.b32 %r2367, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2368, %r2362, %r2367;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2371, %r2308, %r2368;
	// end inline asm
	// begin inline asm
	mov.b32 %r2374, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2375, %r2362, %r2374;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2378, %r2316, %r2375;
	// end inline asm
	// begin inline asm
	mov.b32 %r2381, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2382, %r2362, %r2381;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2385, %r2324, %r2382;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2388, %r2364, %r2378, %r1493;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2392, %r2371, %r2385, %r1493;
	// end inline asm
	shl.b32 	%r2399, %r2392, 4;
	// begin inline asm
	lop3.b32 %r2396, %r1499, %r2388, %r2399, 202;
	// end inline asm
	xor.b32  	%r2465, %r2396, -2004318072;
	// begin inline asm
	mov.b32 %r2403, {%rs294, %rs294};
	// end inline asm
	// begin inline asm
	mov.b32 %r2401, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2402, %r2403, %r2401;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2405, %r2332, %r2402;
	// end inline asm
	// begin inline asm
	mov.b32 %r2408, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2409, %r2403, %r2408;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2412, %r2340, %r2409;
	// end inline asm
	// begin inline asm
	mov.b32 %r2415, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2416, %r2403, %r2415;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2419, %r2348, %r2416;
	// end inline asm
	// begin inline asm
	mov.b32 %r2422, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2423, %r2403, %r2422;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2426, %r2356, %r2423;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2429, %r2405, %r2419, %r1493;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2433, %r2412, %r2426, %r1493;
	// end inline asm
	shl.b32 	%r2440, %r2433, 4;
	// begin inline asm
	lop3.b32 %r2437, %r1499, %r2429, %r2440, 202;
	// end inline asm
	xor.b32  	%r2466, %r2437, -2004318072;
	st.shared.u32 	[%rd139], %r2465;
	st.shared.u32 	[%rd140], %r2466;
	add.s32 	%r2584, %r2584, 32;
	add.s64 	%rd140, %rd140, 4228;
	add.s64 	%rd139, %rd139, 4228;
	add.s32 	%r2577, %r2577, 1;
	setp.eq.s32 	%p214, %r2584, 256;
	mov.u32 	%r2578, %r2570;
	mov.u32 	%r2579, %r2571;
	mov.u32 	%r2580, %r2572;
	mov.u32 	%r2581, %r2573;
	@%p214 bra 	$L__BB0_85;
	bra.uni 	$L__BB0_84;
$L__BB0_85:                             // %guard_exit10292
                                        //   in Loop: Header=BB0_83 Depth=1
	bar.sync 	0;
	ld.shared.u32 	%r2472, [%rd22];
	ld.shared.u32 	%r2473, [%rd23+128];
	ld.shared.u32 	%r2480, [%rd23+4];
	ld.shared.u32 	%r2481, [%rd23+132];
	ld.shared.u32 	%r2488, [%rd24];
	ld.shared.u32 	%r2489, [%rd25+128];
	ld.shared.u32 	%r2496, [%rd25+4];
	ld.shared.u32 	%r2497, [%rd25+132];
	ld.shared.u32 	%r2504, [%rd26];
	ld.shared.u32 	%r2505, [%rd27+128];
	ld.shared.u32 	%r2512, [%rd27+4];
	ld.shared.u32 	%r2513, [%rd27+132];
	ld.shared.u32 	%r2520, [%rd28];
	ld.shared.u32 	%r2521, [%rd29+128];
	ld.shared.u32 	%r2528, [%rd29+4];
	ld.shared.u32 	%r2529, [%rd29+132];
	// begin inline asm
	prmt.b32 %r2467, %r2472, %r2473, %r560;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2471, %r2472, %r2473, %r564;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2475, %r2480, %r2481, %r560;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2479, %r2480, %r2481, %r564;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2483, %r2488, %r2489, %r560;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2487, %r2488, %r2489, %r564;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2491, %r2496, %r2497, %r560;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2495, %r2496, %r2497, %r564;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2499, %r2504, %r2505, %r560;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2503, %r2504, %r2505, %r564;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2507, %r2512, %r2513, %r560;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2511, %r2512, %r2513, %r564;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2515, %r2520, %r2521, %r560;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2519, %r2520, %r2521, %r564;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2523, %r2528, %r2529, %r560;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2527, %r2528, %r2529, %r564;
	// end inline asm
	selp.b32 	%r2531, %r2471, %r2467, %p201;
	shfl.sync.bfly.b32	%r2532, %r2531, 8, 31, -1;
	selp.b32 	%r2533, %r2479, %r2475, %p201;
	shfl.sync.bfly.b32	%r2534, %r2533, 8, 31, -1;
	selp.b32 	%r2535, %r2487, %r2483, %p201;
	shfl.sync.bfly.b32	%r136, %r2535, 8, 31, -1;
	selp.b32 	%r2536, %r2495, %r2491, %p201;
	shfl.sync.bfly.b32	%r137, %r2536, 8, 31, -1;
	selp.b32 	%r2537, %r2503, %r2499, %p201;
	shfl.sync.bfly.b32	%r2538, %r2537, 8, 31, -1;
	selp.b32 	%r138, %r2499, %r2538, %p201;
	selp.b32 	%r139, %r2538, %r2503, %p201;
	selp.b32 	%r2539, %r2511, %r2507, %p201;
	shfl.sync.bfly.b32	%r2540, %r2539, 8, 31, -1;
	selp.b32 	%r140, %r2507, %r2540, %p201;
	selp.b32 	%r141, %r2540, %r2511, %p201;
	selp.b32 	%r2541, %r2519, %r2515, %p201;
	shfl.sync.bfly.b32	%r2542, %r2541, 8, 31, -1;
	selp.b32 	%r142, %r2515, %r2542, %p201;
	selp.b32 	%r143, %r2542, %r2519, %p201;
	selp.b32 	%r2543, %r2527, %r2523, %p201;
	shfl.sync.bfly.b32	%r2544, %r2543, 8, 31, -1;
	selp.b32 	%r144, %r2523, %r2544, %p201;
	selp.b32 	%r145, %r2544, %r2527, %p201;
	shl.b32 	%r2563, %r74, 11;
	@%p215 bra 	$L__BB0_117;
// %bb.86:                              // %guard_exit10292.pass9877_crit_edge
                                        //   in Loop: Header=BB0_83 Depth=1
	or.b32  	%r2554, %r2563, %r55;
	or.b32  	%r2555, %r2554, %r60;
	or.b32  	%r2591, %r2555, %r66;
	bra.uni 	$L__BB0_118;
$L__BB0_119:                            // %L22482
	st.global.u32 	[%rd4], %r2562;
	ret;
$L__BB0_7:                              // %L166
	mov.u32 	%r2561, 2;
	st.global.u32 	[%rd4], %r2561;
	mov.u64 	%rd137, exception2057;
	cvta.global.u64 	%rd138, %rd137;
	{ // callseq 4, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd138;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 4
	{ // callseq 5, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd38;
	st.param.b32 	[param0+8], %r147;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 5
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
$L__BB0_10:                             // %L275
	mov.u32 	%r2560, 3;
	st.global.u32 	[%rd4], %r2560;
	mov.u64 	%rd135, exception2057;
	cvta.global.u64 	%rd136, %rd135;
	{ // callseq 2, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd136;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 2
	{ // callseq 3, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd38;
	st.param.b32 	[param0+8], %r147;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 3
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
$L__BB0_1:                              // %L8
	mov.u64 	%rd43, exception12077;
	cvta.global.u64 	%rd44, %rd43;
	{ // callseq 0, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd44;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 0
	{ // callseq 1, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd38;
	st.param.b32 	[param0+8], %r147;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 1
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
                                        // -- End function
}
