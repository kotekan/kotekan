// PTX kernel code for the CUDA upchannelizer
// This file has been generated automatically by `upchan.jl`.
// Do not modify this file, your changes will be lost.

// PTX CompilerJob of MethodInstance for upchan(::Int32, ::Int32, ::Int32, ::Int32, ::CuDeviceVector{Float16x2, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int32, 1}) for sm_86, minthreads=512, blocks_per_sm=2

//
// Generated by LLVM NVPTX Back-End
//

.version 8.2
.target sm_86
.address_size 64

	// .globl	_Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE // -- Begin function _Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE
.func gpu_report_exception
(
	.param .b64 gpu_report_exception_param_0
)
.noreturn
{
	trap;
}
.func gpu_signal_exception
(
	.param .align 8 .b8 gpu_signal_exception_param_0[16]
)
.noreturn
{
	trap;
}
.extern .shared .align 32 .b8 shmem[];
.global .align 1 .b8 exception2053[6] = {101, 114, 114, 111, 114, 0};
.global .align 1 .b8 exception12074[10] = {101, 120, 99, 101, 112, 116, 105, 111, 110, 0};
                                        // @_Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE
.visible .entry _Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE(
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_0[16],
	.param .u32 _Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_1,
	.param .u32 _Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_2,
	.param .u32 _Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_3,
	.param .u32 _Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_4,
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_5[32],
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_6[32],
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_7[32],
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_8[32]
)
.reqntid 512, 1, 1
.minnctapersm 2
{
	.reg .pred 	%p<226>;
	.reg .b16 	%rs<313>;
	.reg .b32 	%r<2604>;
	.reg .f32 	%f<847>;
	.reg .b64 	%rd<157>;

// %bb.0:                               // %conversion
	ld.param.u32 	%r141, [_Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_0+8];
	ld.param.u64 	%rd42, [_Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_0];
	// begin inline asm
	mov.u32 %r146, %dynamic_smem_size;
	// end inline asm
	setp.gt.u32 	%p1, %r146, 67839;
	@%p1 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:                              // %L16
	ld.param.u64 	%rd43, [_Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_8];
	ld.param.u32 	%r142, [_Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_1];
	mov.u32 	%r1, %tid.x;
	mov.u32 	%r2, %ctaid.x;
	shl.b32 	%r147, %r2, 9;
	mov.u32 	%r3, %tid.y;
	shl.b32 	%r4, %r3, 5;
	or.b32  	%r148, %r147, %r1;
	or.b32  	%r149, %r148, %r4;
	mul.wide.u32 	%rd49, %r149, 4;
	add.s64 	%rd4, %rd43, %rd49;
	mov.u32 	%r150, 1;
	st.global.u32 	[%rd4], %r150;
	setp.lt.s32 	%p2, %r142, 0;
	@%p2 bra 	$L__BB0_7;
// %bb.3:                               // %L115
	ld.param.u32 	%r143, [_Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_2];
	setp.lt.s32 	%p3, %r143, %r142;
	setp.gt.s32 	%p4, %r143, 65536;
	or.pred  	%p5, %p3, %p4;
	@%p5 bra 	$L__BB0_7;
// %bb.4:                               // %L125
	ld.param.u32 	%r144, [_Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_3];
	sub.s32 	%r151, %r143, %r142;
	and.b32  	%r152, %r151, 255;
	setp.ne.s32 	%p6, %r152, 0;
	setp.lt.s32 	%p7, %r144, 0;
	or.pred  	%p8, %p6, %p7;
	@%p8 bra 	$L__BB0_7;
// %bb.5:                               // %L131
	ld.param.u32 	%r145, [_Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_4];
	setp.lt.s32 	%p9, %r145, %r144;
	setp.gt.s32 	%p10, %r145, 2048;
	or.pred  	%p11, %p9, %p10;
	@%p11 bra 	$L__BB0_7;
// %bb.6:                               // %L141
	sub.s32 	%r153, %r145, %r144;
	add.s32 	%r154, %r153, 3;
	and.b32  	%r155, %r154, 7;
	setp.eq.s32 	%p12, %r155, 0;
	@%p12 bra 	$L__BB0_8;
	bra.uni 	$L__BB0_7;
$L__BB0_8:                              // %pass133
	bfe.u32 	%r90, %r1, 1, 1;
	and.b32  	%r91, %r1, 1;
	bfe.u32 	%r92, %r1, 2, 1;
	shl.b32 	%r162, %r92, 1;
	shl.b32 	%r163, %r91, 2;
	shl.b32 	%r164, %r90, 3;
	or.b32  	%r165, %r163, %r164;
	or.b32  	%r166, %r162, %r165;
	shr.u32 	%r93, %r1, 4;
	or.b32  	%r94, %r93, %r166;
	or.b32  	%r95, %r94, 16;
	mov.f32 	%f148, 0f40000000;
	mov.f32 	%f149, 0f42FE0000;
	div.approx.f32 	%f105, %f149, %f148;
	cvt.rn.f32.s32 	%f150, %r94;
	sub.f32 	%f151, %f150, %f105;
	mov.f32 	%f180, 0f42000000;
	div.approx.f32 	%f107, %f151, %f180;
	setp.ne.f32 	%p18, %f107, 0f00000000;
	mov.f32 	%f822, 0f3F800000;
	mov.f32 	%f815, %f822;
	@%p18 bra 	$L__BB0_9;
	bra.uni 	$L__BB0_10;
$L__BB0_9:                              // %L460
	sin.approx.f32 	%f181, %f107;
	div.approx.f32 	%f815, %f181, %f107;
$L__BB0_10:                             // %L463
	cvt.rn.f32.s32 	%f184, %r95;
	sub.f32 	%f185, %f184, %f105;
	div.approx.f32 	%f5, %f185, %f180;
	setp.eq.f32 	%p24, %f5, 0f00000000;
	mov.f32 	%f816, %f822;
	@%p24 bra 	$L__BB0_12;
// %bb.11:                              // %L480
	sin.approx.f32 	%f215, %f5;
	div.approx.f32 	%f816, %f215, %f5;
$L__BB0_12:                             // %L483
	or.b32  	%r184, %r94, 32;
	or.b32  	%r6, %r94, 48;
	cvt.rn.f32.s32 	%f219, %r184;
	sub.f32 	%f220, %f219, %f105;
	div.approx.f32 	%f9, %f220, %f180;
	setp.eq.f32 	%p30, %f9, 0f00000000;
	mov.f32 	%f817, %f822;
	@%p30 bra 	$L__BB0_14;
// %bb.13:                              // %L562
	sin.approx.f32 	%f250, %f9;
	div.approx.f32 	%f817, %f250, %f9;
$L__BB0_14:                             // %L565
	cvt.rn.f32.s32 	%f253, %r6;
	sub.f32 	%f254, %f253, %f105;
	div.approx.f32 	%f14, %f254, %f180;
	setp.eq.f32 	%p36, %f14, 0f00000000;
	mov.f32 	%f818, %f822;
	@%p36 bra 	$L__BB0_16;
// %bb.15:                              // %L582
	sin.approx.f32 	%f284, %f14;
	div.approx.f32 	%f818, %f284, %f14;
$L__BB0_16:                             // %L585
	or.b32  	%r202, %r94, 64;
	or.b32  	%r8, %r94, 80;
	cvt.rn.f32.s32 	%f288, %r202;
	sub.f32 	%f289, %f288, %f105;
	div.approx.f32 	%f18, %f289, %f180;
	setp.eq.f32 	%p42, %f18, 0f00000000;
	mov.f32 	%f819, %f822;
	@%p42 bra 	$L__BB0_18;
// %bb.17:                              // %L664
	sin.approx.f32 	%f319, %f18;
	div.approx.f32 	%f819, %f319, %f18;
$L__BB0_18:                             // %L667
	cvt.rn.f32.s32 	%f322, %r8;
	sub.f32 	%f323, %f322, %f105;
	div.approx.f32 	%f23, %f323, %f180;
	setp.eq.f32 	%p48, %f23, 0f00000000;
	mov.f32 	%f820, %f822;
	@%p48 bra 	$L__BB0_20;
// %bb.19:                              // %L684
	sin.approx.f32 	%f353, %f23;
	div.approx.f32 	%f820, %f353, %f23;
$L__BB0_20:                             // %L687
	or.b32  	%r220, %r94, 96;
	or.b32  	%r10, %r94, 112;
	cvt.rn.f32.s32 	%f357, %r220;
	sub.f32 	%f358, %f357, %f105;
	div.approx.f32 	%f27, %f358, %f180;
	setp.eq.f32 	%p54, %f27, 0f00000000;
	mov.f32 	%f821, %f822;
	@%p54 bra 	$L__BB0_22;
// %bb.21:                              // %L766
	sin.approx.f32 	%f388, %f27;
	div.approx.f32 	%f821, %f388, %f27;
$L__BB0_22:                             // %L769
	shr.u32 	%r89, %r1, 1;
	cvt.rn.f32.s32 	%f391, %r10;
	sub.f32 	%f392, %f391, %f105;
	div.approx.f32 	%f32, %f392, %f180;
	setp.eq.f32 	%p60, %f32, 0f00000000;
	@%p60 bra 	$L__BB0_24;
// %bb.23:                              // %L786
	sin.approx.f32 	%f422, %f32;
	div.approx.f32 	%f822, %f422, %f32;
$L__BB0_24:                             // %L789
	shr.u32 	%r14, %r1, 3;
	and.b32  	%r264, %r14, 2;
	and.b32  	%r265, %r89, 4;
	or.b32  	%r15, %r92, %r264;
	or.b32  	%r16, %r15, %r265;
	and.b32  	%r266, %r1, 3;
	mul.lo.s32 	%r267, %r266, %r16;
	shl.b32 	%r268, %r267, 1;
	neg.s32 	%r269, %r268;
	cvt.rn.f32.s32 	%f493, %r269;
	mov.f32 	%f494, 0f41000000;
	div.approx.f32 	%f35, %f493, %f494;
	abs.f32 	%f841, %f35;
	setp.lt.f32 	%p75, %f841, 0f40000000;
	@%p75 bra 	$L__BB0_103;
// %bb.25:
	setp.gtu.f32 	%p76, %f841, 0f4B800000;
	@%p76 bra 	$L__BB0_99;
	bra.uni 	$L__BB0_26;
$L__BB0_99:
	mov.b32 	%r97, %f841;
	and.b32  	%r270, %r97, 8388607;
	or.b32  	%r2593, %r270, 1065353216;
	mov.b32 	%f840, %r2593;
	add.s32 	%r271, %r97, -1073741824;
	and.b32  	%r2594, %r271, -8388608;
	setp.eq.s32 	%p82, %r2594, 0;
	@%p82 bra 	$L__BB0_102;
// %bb.100:                             // %__nv_fmaf_rn.exit4.i.i.i680.preheader
	mov.f32 	%f504, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f503,%f504;
	// end inline asm
$L__BB0_101:                            // %__nv_fmaf_rn.exit4.i.i.i680
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r272, %r2594, 192937984;
	add.s32 	%r273, %r2593, %r272;
	mov.b32 	%f505, %r273;
	mul.f32 	%f506, %f503, %f505;
	sub.f32 	%f507, %f505, %f506;
	fma.rn.f32 	%f508, %f507, %f503, %f506;
	sub.f32 	%f509, %f505, %f508;
	fma.rz.f32 	%f510, %f509, %f503, %f508;
	cvt.rzi.f32.f32 	%f511, %f510;
	sub.f32 	%f840, %f505, %f511;
	sub.s32 	%r2594, %r2594, %r272;
	mov.b32 	%r2593, %f840;
	setp.ne.s32 	%p83, %r2594, 0;
	setp.ne.s32 	%p84, %r2593, 0;
	and.pred  	%p85, %p83, %p84;
	@%p85 bra 	$L__BB0_101;
$L__BB0_102:                            // %__internal_fmodf_slowpath_mod.exit.i.i682
	setp.gt.u32 	%p86, %r97, 2139095039;
	selp.f32 	%f512, 0f7FFFFFFF, 0f4B800000, %p86;
	mul.f32 	%f513, %f840, 0f34000000;
	mul.f32 	%f841, %f512, %f513;
	bra.uni 	$L__BB0_103;
$L__BB0_26:                             // %__nv_fast_fdividef.exit.i.i.i659
	div.approx.f32 	%f496, %f841, %f148;
	cvt.rzi.f32.f32 	%f839, %f496;
	fma.rn.f32 	%f109, %f839, 0fC0000000, %f841;
	mov.b32 	%r96, %f109;
	setp.lt.u32 	%p77, %r96, 1073741824;
	@%p77 bra 	$L__BB0_98;
// %bb.27:
	setp.lt.u32 	%p78, %r96, -2147483647;
	@%p78 bra 	$L__BB0_96;
// %bb.28:
	add.f32 	%f501, %f839, 0fBF800000;
	setp.lt.f32 	%p81, %f109, 0fC0000000;
	add.f32 	%f502, %f501, 0fBF800000;
	selp.f32 	%f839, %f502, %f501, %p81;
	bra.uni 	$L__BB0_98;
$L__BB0_96:
	add.f32 	%f839, %f839, 0f3F800000;
	setp.ltu.f32 	%p79, %f109, 0f40800000;
	@%p79 bra 	$L__BB0_98;
// %bb.97:                              // %__nv_fmaf_rn.exit.i.i.i663
	add.f32 	%f497, %f839, 0f3F800000;
	fma.rn.f32 	%f499, %f148, 0fC0400000, %f109;
	setp.ge.f32 	%p80, %f499, 0f00000000;
	add.f32 	%f500, %f497, 0f3F800000;
	selp.f32 	%f839, %f500, %f497, %p80;
$L__BB0_98:                             // %__internal_fmodf_fastpath_quot.exit.i.i666
	fma.rn.f32 	%f841, %f839, 0fC0000000, %f841;
$L__BB0_103:                            // %__internal_fmodf_kernel.exit.i685
	shl.b32 	%r84, %r1, 1;
	abs.f32 	%f514, %f841;
	setp.gtu.f32 	%p87, %f514, 0f7F800000;
	@%p87 bra 	$L__BB0_105;
// %bb.104:
	mov.b32 	%r274, %f35;
	and.b32  	%r275, %r274, -2147483648;
	mov.b32 	%r276, %f841;
	or.b32  	%r277, %r275, %r276;
	mov.b32 	%f841, %r277;
$L__BB0_105:                            // %__nv_fmodf.exit686
	and.b32  	%r286, %r84, 6;
	mov.u32 	%r287, -8;
	sub.s32 	%r288, %r287, %r286;
	mul.lo.s32 	%r289, %r16, %r288;
	cvt.rn.f32.s32 	%f545, %r289;
	div.approx.f32 	%f125, %f545, %f494;
	abs.f32 	%f825, %f125;
	setp.lt.f32 	%p95, %f825, 0f40000000;
	@%p95 bra 	$L__BB0_40;
// %bb.29:
	setp.gtu.f32 	%p96, %f825, 0f4B800000;
	@%p96 bra 	$L__BB0_36;
	bra.uni 	$L__BB0_30;
$L__BB0_36:
	mov.b32 	%r18, %f825;
	and.b32  	%r290, %r18, 8388607;
	or.b32  	%r2578, %r290, 1065353216;
	mov.b32 	%f824, %r2578;
	add.s32 	%r291, %r18, -1073741824;
	and.b32  	%r2579, %r291, -8388608;
	setp.eq.s32 	%p102, %r2579, 0;
	@%p102 bra 	$L__BB0_39;
// %bb.37:                              // %__nv_fmaf_rn.exit4.i.i.i.preheader
	mov.f32 	%f556, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f555,%f556;
	// end inline asm
$L__BB0_38:                             // %__nv_fmaf_rn.exit4.i.i.i
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r292, %r2579, 192937984;
	add.s32 	%r293, %r2578, %r292;
	mov.b32 	%f557, %r293;
	mul.f32 	%f558, %f555, %f557;
	sub.f32 	%f559, %f557, %f558;
	fma.rn.f32 	%f560, %f559, %f555, %f558;
	sub.f32 	%f561, %f557, %f560;
	fma.rz.f32 	%f562, %f561, %f555, %f560;
	cvt.rzi.f32.f32 	%f563, %f562;
	sub.f32 	%f824, %f557, %f563;
	sub.s32 	%r2579, %r2579, %r292;
	mov.b32 	%r2578, %f824;
	setp.ne.s32 	%p103, %r2579, 0;
	setp.ne.s32 	%p104, %r2578, 0;
	and.pred  	%p105, %p103, %p104;
	@%p105 bra 	$L__BB0_38;
$L__BB0_39:                             // %__internal_fmodf_slowpath_mod.exit.i.i
	setp.gt.u32 	%p106, %r18, 2139095039;
	selp.f32 	%f564, 0f7FFFFFFF, 0f4B800000, %p106;
	mul.f32 	%f565, %f824, 0f34000000;
	mul.f32 	%f825, %f564, %f565;
	bra.uni 	$L__BB0_40;
$L__BB0_30:                             // %__nv_fast_fdividef.exit.i.i.i
	div.approx.f32 	%f548, %f825, %f148;
	cvt.rzi.f32.f32 	%f823, %f548;
	fma.rn.f32 	%f38, %f823, 0fC0000000, %f825;
	mov.b32 	%r17, %f38;
	setp.lt.u32 	%p97, %r17, 1073741824;
	@%p97 bra 	$L__BB0_35;
// %bb.31:
	setp.lt.u32 	%p98, %r17, -2147483647;
	@%p98 bra 	$L__BB0_33;
// %bb.32:
	add.f32 	%f553, %f823, 0fBF800000;
	setp.lt.f32 	%p101, %f38, 0fC0000000;
	add.f32 	%f554, %f553, 0fBF800000;
	selp.f32 	%f823, %f554, %f553, %p101;
	bra.uni 	$L__BB0_35;
$L__BB0_33:
	add.f32 	%f823, %f823, 0f3F800000;
	setp.ltu.f32 	%p99, %f38, 0f40800000;
	@%p99 bra 	$L__BB0_35;
// %bb.34:                              // %__nv_fmaf_rn.exit.i.i.i
	add.f32 	%f549, %f823, 0f3F800000;
	fma.rn.f32 	%f551, %f148, 0fC0400000, %f38;
	setp.ge.f32 	%p100, %f551, 0f00000000;
	add.f32 	%f552, %f549, 0f3F800000;
	selp.f32 	%f823, %f552, %f549, %p100;
$L__BB0_35:                             // %__internal_fmodf_fastpath_quot.exit.i.i
	fma.rn.f32 	%f825, %f823, 0fC0000000, %f825;
$L__BB0_40:                             // %__internal_fmodf_kernel.exit.i
	abs.f32 	%f566, %f825;
	setp.gtu.f32 	%p107, %f566, 0f7F800000;
	@%p107 bra 	$L__BB0_42;
// %bb.41:
	mov.b32 	%r294, %f125;
	and.b32  	%r295, %r294, -2147483648;
	mov.b32 	%r296, %f825;
	or.b32  	%r297, %r295, %r296;
	mov.b32 	%f825, %r297;
$L__BB0_42:                             // %__nv_fmodf.exit
	shl.b32 	%r318, %r90, 1;
	neg.s32 	%r29, %r318;
	mul.lo.s32 	%r30, %r29, %r16;
	cvt.rn.f32.s32 	%f599, %r30;
	div.approx.f32 	%f52, %f599, %f180;
	abs.f32 	%f829, %f52;
	setp.lt.f32 	%p115, %f829, 0f40000000;
	@%p115 bra 	$L__BB0_54;
// %bb.43:
	setp.gtu.f32 	%p116, %f829, 0f4B800000;
	@%p116 bra 	$L__BB0_50;
	bra.uni 	$L__BB0_44;
$L__BB0_50:
	mov.b32 	%r32, %f829;
	and.b32  	%r319, %r32, 8388607;
	or.b32  	%r2580, %r319, 1065353216;
	mov.b32 	%f828, %r2580;
	add.s32 	%r320, %r32, -1073741824;
	and.b32  	%r2581, %r320, -8388608;
	setp.eq.s32 	%p122, %r2581, 0;
	@%p122 bra 	$L__BB0_53;
// %bb.51:                              // %__nv_fmaf_rn.exit4.i.i.i587.preheader
	mov.f32 	%f610, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f609,%f610;
	// end inline asm
$L__BB0_52:                             // %__nv_fmaf_rn.exit4.i.i.i587
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r321, %r2581, 192937984;
	add.s32 	%r322, %r2580, %r321;
	mov.b32 	%f611, %r322;
	mul.f32 	%f612, %f609, %f611;
	sub.f32 	%f613, %f611, %f612;
	fma.rn.f32 	%f614, %f613, %f609, %f612;
	sub.f32 	%f615, %f611, %f614;
	fma.rz.f32 	%f616, %f615, %f609, %f614;
	cvt.rzi.f32.f32 	%f617, %f616;
	sub.f32 	%f828, %f611, %f617;
	sub.s32 	%r2581, %r2581, %r321;
	mov.b32 	%r2580, %f828;
	setp.ne.s32 	%p123, %r2581, 0;
	setp.ne.s32 	%p124, %r2580, 0;
	and.pred  	%p125, %p123, %p124;
	@%p125 bra 	$L__BB0_52;
$L__BB0_53:                             // %__internal_fmodf_slowpath_mod.exit.i.i589
	setp.gt.u32 	%p126, %r32, 2139095039;
	selp.f32 	%f618, 0f7FFFFFFF, 0f4B800000, %p126;
	mul.f32 	%f619, %f828, 0f34000000;
	mul.f32 	%f829, %f618, %f619;
	bra.uni 	$L__BB0_54;
$L__BB0_44:                             // %__nv_fast_fdividef.exit.i.i.i566
	div.approx.f32 	%f602, %f829, %f148;
	cvt.rzi.f32.f32 	%f827, %f602;
	fma.rn.f32 	%f55, %f827, 0fC0000000, %f829;
	mov.b32 	%r31, %f55;
	setp.lt.u32 	%p117, %r31, 1073741824;
	@%p117 bra 	$L__BB0_49;
// %bb.45:
	setp.lt.u32 	%p118, %r31, -2147483647;
	@%p118 bra 	$L__BB0_47;
// %bb.46:
	add.f32 	%f607, %f827, 0fBF800000;
	setp.lt.f32 	%p121, %f55, 0fC0000000;
	add.f32 	%f608, %f607, 0fBF800000;
	selp.f32 	%f827, %f608, %f607, %p121;
	bra.uni 	$L__BB0_49;
$L__BB0_47:
	add.f32 	%f827, %f827, 0f3F800000;
	setp.ltu.f32 	%p119, %f55, 0f40800000;
	@%p119 bra 	$L__BB0_49;
// %bb.48:                              // %__nv_fmaf_rn.exit.i.i.i570
	add.f32 	%f603, %f827, 0f3F800000;
	fma.rn.f32 	%f605, %f148, 0fC0400000, %f55;
	setp.ge.f32 	%p120, %f605, 0f00000000;
	add.f32 	%f606, %f603, 0f3F800000;
	selp.f32 	%f827, %f606, %f603, %p120;
$L__BB0_49:                             // %__internal_fmodf_fastpath_quot.exit.i.i573
	fma.rn.f32 	%f829, %f827, 0fC0000000, %f829;
$L__BB0_54:                             // %__internal_fmodf_kernel.exit.i592
	abs.f32 	%f620, %f829;
	setp.gtu.f32 	%p127, %f620, 0f7F800000;
	@%p127 bra 	$L__BB0_56;
// %bb.55:
	mov.b32 	%r323, %f52;
	and.b32  	%r324, %r323, -2147483648;
	mov.b32 	%r325, %f829;
	or.b32  	%r326, %r324, %r325;
	mov.b32 	%f829, %r326;
$L__BB0_56:                             // %__nv_fmodf.exit593
	shl.b32 	%r335, %r16, 2;
	sub.s32 	%r336, %r30, %r335;
	cvt.rn.f32.s32 	%f651, %r336;
	div.approx.f32 	%f71, %f651, %f180;
	abs.f32 	%f833, %f71;
	setp.lt.f32 	%p135, %f833, 0f40000000;
	@%p135 bra 	$L__BB0_68;
// %bb.57:
	setp.gtu.f32 	%p136, %f833, 0f4B800000;
	@%p136 bra 	$L__BB0_64;
	bra.uni 	$L__BB0_58;
$L__BB0_64:
	mov.b32 	%r40, %f833;
	and.b32  	%r337, %r40, 8388607;
	or.b32  	%r2582, %r337, 1065353216;
	mov.b32 	%f832, %r2582;
	add.s32 	%r338, %r40, -1073741824;
	and.b32  	%r2583, %r338, -8388608;
	setp.eq.s32 	%p142, %r2583, 0;
	@%p142 bra 	$L__BB0_67;
// %bb.65:                              // %__nv_fmaf_rn.exit4.i.i.i618.preheader
	mov.f32 	%f662, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f661,%f662;
	// end inline asm
$L__BB0_66:                             // %__nv_fmaf_rn.exit4.i.i.i618
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r339, %r2583, 192937984;
	add.s32 	%r340, %r2582, %r339;
	mov.b32 	%f663, %r340;
	mul.f32 	%f664, %f661, %f663;
	sub.f32 	%f665, %f663, %f664;
	fma.rn.f32 	%f666, %f665, %f661, %f664;
	sub.f32 	%f667, %f663, %f666;
	fma.rz.f32 	%f668, %f667, %f661, %f666;
	cvt.rzi.f32.f32 	%f669, %f668;
	sub.f32 	%f832, %f663, %f669;
	sub.s32 	%r2583, %r2583, %r339;
	mov.b32 	%r2582, %f832;
	setp.ne.s32 	%p143, %r2583, 0;
	setp.ne.s32 	%p144, %r2582, 0;
	and.pred  	%p145, %p143, %p144;
	@%p145 bra 	$L__BB0_66;
$L__BB0_67:                             // %__internal_fmodf_slowpath_mod.exit.i.i620
	setp.gt.u32 	%p146, %r40, 2139095039;
	selp.f32 	%f670, 0f7FFFFFFF, 0f4B800000, %p146;
	mul.f32 	%f671, %f832, 0f34000000;
	mul.f32 	%f833, %f670, %f671;
	bra.uni 	$L__BB0_68;
$L__BB0_58:                             // %__nv_fast_fdividef.exit.i.i.i597
	div.approx.f32 	%f654, %f833, %f148;
	cvt.rzi.f32.f32 	%f831, %f654;
	fma.rn.f32 	%f74, %f831, 0fC0000000, %f833;
	mov.b32 	%r39, %f74;
	setp.lt.u32 	%p137, %r39, 1073741824;
	@%p137 bra 	$L__BB0_63;
// %bb.59:
	setp.lt.u32 	%p138, %r39, -2147483647;
	@%p138 bra 	$L__BB0_61;
// %bb.60:
	add.f32 	%f659, %f831, 0fBF800000;
	setp.lt.f32 	%p141, %f74, 0fC0000000;
	add.f32 	%f660, %f659, 0fBF800000;
	selp.f32 	%f831, %f660, %f659, %p141;
	bra.uni 	$L__BB0_63;
$L__BB0_61:
	add.f32 	%f831, %f831, 0f3F800000;
	setp.ltu.f32 	%p139, %f74, 0f40800000;
	@%p139 bra 	$L__BB0_63;
// %bb.62:                              // %__nv_fmaf_rn.exit.i.i.i601
	add.f32 	%f655, %f831, 0f3F800000;
	fma.rn.f32 	%f657, %f148, 0fC0400000, %f74;
	setp.ge.f32 	%p140, %f657, 0f00000000;
	add.f32 	%f658, %f655, 0f3F800000;
	selp.f32 	%f831, %f658, %f655, %p140;
$L__BB0_63:                             // %__internal_fmodf_fastpath_quot.exit.i.i604
	fma.rn.f32 	%f833, %f831, 0fC0000000, %f833;
$L__BB0_68:                             // %__internal_fmodf_kernel.exit.i623
	abs.f32 	%f672, %f833;
	setp.gtu.f32 	%p147, %f672, 0f7F800000;
	@%p147 bra 	$L__BB0_70;
// %bb.69:
	mov.b32 	%r341, %f71;
	and.b32  	%r342, %r341, -2147483648;
	mov.b32 	%r343, %f833;
	or.b32  	%r344, %r342, %r343;
	mov.b32 	%f833, %r344;
$L__BB0_70:                             // %__nv_fmodf.exit624
	mul.lo.s32 	%r50, %r29, %r15;
	cvt.rn.f32.s32 	%f705, %r50;
	mov.f32 	%f706, 0f40800000;
	div.approx.f32 	%f88, %f705, %f706;
	abs.f32 	%f845, %f88;
	setp.lt.f32 	%p155, %f845, 0f40000000;
	@%p155 bra 	$L__BB0_113;
// %bb.71:
	setp.gtu.f32 	%p156, %f845, 0f4B800000;
	@%p156 bra 	$L__BB0_109;
	bra.uni 	$L__BB0_72;
$L__BB0_109:
	mov.b32 	%r105, %f845;
	and.b32  	%r359, %r105, 8388607;
	or.b32  	%r2595, %r359, 1065353216;
	mov.b32 	%f844, %r2595;
	add.s32 	%r360, %r105, -1073741824;
	and.b32  	%r2596, %r360, -8388608;
	setp.eq.s32 	%p162, %r2596, 0;
	@%p162 bra 	$L__BB0_112;
// %bb.110:                             // %__nv_fmaf_rn.exit4.i.i.i711.preheader
	mov.f32 	%f716, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f715,%f716;
	// end inline asm
$L__BB0_111:                            // %__nv_fmaf_rn.exit4.i.i.i711
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r361, %r2596, 192937984;
	add.s32 	%r362, %r2595, %r361;
	mov.b32 	%f717, %r362;
	mul.f32 	%f718, %f715, %f717;
	sub.f32 	%f719, %f717, %f718;
	fma.rn.f32 	%f720, %f719, %f715, %f718;
	sub.f32 	%f721, %f717, %f720;
	fma.rz.f32 	%f722, %f721, %f715, %f720;
	cvt.rzi.f32.f32 	%f723, %f722;
	sub.f32 	%f844, %f717, %f723;
	sub.s32 	%r2596, %r2596, %r361;
	mov.b32 	%r2595, %f844;
	setp.ne.s32 	%p163, %r2596, 0;
	setp.ne.s32 	%p164, %r2595, 0;
	and.pred  	%p165, %p163, %p164;
	@%p165 bra 	$L__BB0_111;
$L__BB0_112:                            // %__internal_fmodf_slowpath_mod.exit.i.i713
	setp.gt.u32 	%p166, %r105, 2139095039;
	selp.f32 	%f724, 0f7FFFFFFF, 0f4B800000, %p166;
	mul.f32 	%f725, %f844, 0f34000000;
	mul.f32 	%f845, %f724, %f725;
	bra.uni 	$L__BB0_113;
$L__BB0_72:                             // %__nv_fast_fdividef.exit.i.i.i690
	div.approx.f32 	%f708, %f845, %f148;
	cvt.rzi.f32.f32 	%f843, %f708;
	fma.rn.f32 	%f128, %f843, 0fC0000000, %f845;
	mov.b32 	%r104, %f128;
	setp.lt.u32 	%p157, %r104, 1073741824;
	@%p157 bra 	$L__BB0_108;
// %bb.73:
	setp.lt.u32 	%p158, %r104, -2147483647;
	@%p158 bra 	$L__BB0_106;
// %bb.74:
	add.f32 	%f713, %f843, 0fBF800000;
	setp.lt.f32 	%p161, %f128, 0fC0000000;
	add.f32 	%f714, %f713, 0fBF800000;
	selp.f32 	%f843, %f714, %f713, %p161;
	bra.uni 	$L__BB0_108;
$L__BB0_106:
	add.f32 	%f843, %f843, 0f3F800000;
	setp.ltu.f32 	%p159, %f128, 0f40800000;
	@%p159 bra 	$L__BB0_108;
// %bb.107:                             // %__nv_fmaf_rn.exit.i.i.i694
	add.f32 	%f709, %f843, 0f3F800000;
	fma.rn.f32 	%f711, %f148, 0fC0400000, %f128;
	setp.ge.f32 	%p160, %f711, 0f00000000;
	add.f32 	%f712, %f709, 0f3F800000;
	selp.f32 	%f843, %f712, %f709, %p160;
$L__BB0_108:                            // %__internal_fmodf_fastpath_quot.exit.i.i697
	fma.rn.f32 	%f845, %f843, 0fC0000000, %f845;
$L__BB0_113:                            // %__internal_fmodf_kernel.exit.i716
	abs.f32 	%f726, %f845;
	setp.gtu.f32 	%p167, %f726, 0f7F800000;
	@%p167 bra 	$L__BB0_115;
// %bb.114:
	mov.b32 	%r363, %f88;
	and.b32  	%r364, %r363, -2147483648;
	mov.b32 	%r365, %f845;
	or.b32  	%r366, %r364, %r365;
	mov.b32 	%f845, %r366;
$L__BB0_115:                            // %__nv_fmodf.exit717
	shl.b32 	%r375, %r15, 2;
	sub.s32 	%r376, %r50, %r375;
	cvt.rn.f32.s32 	%f759, %r376;
	div.approx.f32 	%f145, %f759, %f706;
	abs.f32 	%f837, %f145;
	setp.lt.f32 	%p176, %f837, 0f40000000;
	@%p176 bra 	$L__BB0_86;
// %bb.75:
	setp.gtu.f32 	%p177, %f837, 0f4B800000;
	@%p177 bra 	$L__BB0_82;
	bra.uni 	$L__BB0_76;
$L__BB0_82:
	mov.b32 	%r52, %f837;
	and.b32  	%r377, %r52, 8388607;
	or.b32  	%r2584, %r377, 1065353216;
	mov.b32 	%f836, %r2584;
	add.s32 	%r378, %r52, -1073741824;
	and.b32  	%r2585, %r378, -8388608;
	setp.eq.s32 	%p183, %r2585, 0;
	@%p183 bra 	$L__BB0_85;
// %bb.83:                              // %__nv_fmaf_rn.exit4.i.i.i649.preheader
	mov.f32 	%f770, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f769,%f770;
	// end inline asm
$L__BB0_84:                             // %__nv_fmaf_rn.exit4.i.i.i649
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r379, %r2585, 192937984;
	add.s32 	%r380, %r2584, %r379;
	mov.b32 	%f771, %r380;
	mul.f32 	%f772, %f769, %f771;
	sub.f32 	%f773, %f771, %f772;
	fma.rn.f32 	%f774, %f773, %f769, %f772;
	sub.f32 	%f775, %f771, %f774;
	fma.rz.f32 	%f776, %f775, %f769, %f774;
	cvt.rzi.f32.f32 	%f777, %f776;
	sub.f32 	%f836, %f771, %f777;
	sub.s32 	%r2585, %r2585, %r379;
	mov.b32 	%r2584, %f836;
	setp.ne.s32 	%p184, %r2585, 0;
	setp.ne.s32 	%p185, %r2584, 0;
	and.pred  	%p186, %p184, %p185;
	@%p186 bra 	$L__BB0_84;
$L__BB0_85:                             // %__internal_fmodf_slowpath_mod.exit.i.i651
	setp.gt.u32 	%p187, %r52, 2139095039;
	selp.f32 	%f778, 0f7FFFFFFF, 0f4B800000, %p187;
	mul.f32 	%f779, %f836, 0f34000000;
	mul.f32 	%f837, %f778, %f779;
	bra.uni 	$L__BB0_86;
$L__BB0_76:                             // %__nv_fast_fdividef.exit.i.i.i628
	div.approx.f32 	%f762, %f837, %f148;
	cvt.rzi.f32.f32 	%f835, %f762;
	fma.rn.f32 	%f91, %f835, 0fC0000000, %f837;
	mov.b32 	%r51, %f91;
	setp.lt.u32 	%p178, %r51, 1073741824;
	@%p178 bra 	$L__BB0_81;
// %bb.77:
	setp.lt.u32 	%p179, %r51, -2147483647;
	@%p179 bra 	$L__BB0_79;
// %bb.78:
	add.f32 	%f767, %f835, 0fBF800000;
	setp.lt.f32 	%p182, %f91, 0fC0000000;
	add.f32 	%f768, %f767, 0fBF800000;
	selp.f32 	%f835, %f768, %f767, %p182;
	bra.uni 	$L__BB0_81;
$L__BB0_79:
	add.f32 	%f835, %f835, 0f3F800000;
	setp.ltu.f32 	%p180, %f91, 0f40800000;
	@%p180 bra 	$L__BB0_81;
// %bb.80:                              // %__nv_fmaf_rn.exit.i.i.i632
	add.f32 	%f763, %f835, 0f3F800000;
	fma.rn.f32 	%f765, %f148, 0fC0400000, %f91;
	setp.ge.f32 	%p181, %f765, 0f00000000;
	add.f32 	%f766, %f763, 0f3F800000;
	selp.f32 	%f835, %f766, %f763, %p181;
$L__BB0_81:                             // %__internal_fmodf_fastpath_quot.exit.i.i635
	fma.rn.f32 	%f837, %f835, 0fC0000000, %f837;
$L__BB0_86:                             // %__internal_fmodf_kernel.exit.i654
	abs.f32 	%f780, %f837;
	setp.gtu.f32 	%p188, %f780, 0f7F800000;
	@%p188 bra 	$L__BB0_88;
// %bb.87:
	mov.b32 	%r381, %f145;
	and.b32  	%r382, %r381, -2147483648;
	mov.b32 	%r383, %f837;
	or.b32  	%r384, %r382, %r383;
	mov.b32 	%f837, %r384;
$L__BB0_88:                             // %__nv_fmodf.exit655
	setp.le.s32 	%p196, %r143, %r142;
	mov.u32 	%r2577, 0;
	@%p196 bra 	$L__BB0_95;
// %bb.89:                              // %L1351.lr.ph
	mov.f32 	%f152, 0f43010000;
	mul.lo.s32 	%r244, %r94, 31;
	div.approx.f32 	%f153, %f151, %f152;
	div.approx.f32 	%f187, %f185, %f152;
	div.approx.f32 	%f222, %f220, %f152;
	div.approx.f32 	%f256, %f254, %f152;
	div.approx.f32 	%f291, %f289, %f152;
	div.approx.f32 	%f325, %f323, %f152;
	div.approx.f32 	%f360, %f358, %f152;
	div.approx.f32 	%f394, %f392, %f152;
	add.s32 	%r254, %r244, 48;
	abs.f32 	%f154, %f153;
	abs.f32 	%f188, %f187;
	abs.f32 	%f223, %f222;
	abs.f32 	%f257, %f256;
	abs.f32 	%f292, %f291;
	abs.f32 	%f326, %f325;
	abs.f32 	%f361, %f360;
	abs.f32 	%f395, %f394;
	and.b32  	%r245, %r244, 63;
	and.b32  	%r255, %r254, 63;
	setp.gt.f32 	%p13, %f154, 0f4B800000;
	mul.f32 	%f155, %f153, 0f00000000;
	setp.gt.f32 	%p19, %f188, 0f4B800000;
	mul.f32 	%f189, %f187, 0f00000000;
	setp.gt.f32 	%p25, %f223, 0f4B800000;
	mul.f32 	%f224, %f222, 0f00000000;
	setp.gt.f32 	%p31, %f257, 0f4B800000;
	mul.f32 	%f258, %f256, 0f00000000;
	setp.gt.f32 	%p37, %f292, 0f4B800000;
	mul.f32 	%f293, %f291, 0f00000000;
	setp.gt.f32 	%p43, %f326, 0f4B800000;
	mul.f32 	%f327, %f325, 0f00000000;
	setp.gt.f32 	%p49, %f361, 0f4B800000;
	mul.f32 	%f362, %f360, 0f00000000;
	setp.gt.f32 	%p55, %f395, 0f4B800000;
	mul.f32 	%f396, %f394, 0f00000000;
	cvt.rn.f32.s32 	%f425, %r245;
	cvt.rn.f32.s32 	%f460, %r255;
	selp.f32 	%f156, %f155, %f153, %p13;
	selp.f32 	%f190, %f189, %f187, %p19;
	selp.f32 	%f225, %f224, %f222, %p25;
	selp.f32 	%f259, %f258, %f256, %p31;
	selp.f32 	%f294, %f293, %f291, %p37;
	selp.f32 	%f328, %f327, %f325, %p43;
	selp.f32 	%f363, %f362, %f360, %p49;
	selp.f32 	%f397, %f396, %f394, %p55;
	div.approx.f32 	%f427, %f425, %f180;
	div.approx.f32 	%f461, %f460, %f180;
	add.f32 	%f157, %f156, %f156;
	add.f32 	%f191, %f190, %f190;
	add.f32 	%f226, %f225, %f225;
	add.f32 	%f260, %f259, %f259;
	add.f32 	%f295, %f294, %f294;
	add.f32 	%f329, %f328, %f328;
	add.f32 	%f364, %f363, %f363;
	add.f32 	%f398, %f397, %f397;
	add.f32 	%f428, %f427, %f427;
	add.f32 	%f462, %f461, %f461;
	add.f32 	%f515, %f841, %f841;
	add.f32 	%f567, %f825, %f825;
	mov.b32 	%r167, %f157;
	mov.b32 	%r174, %f191;
	mov.b32 	%r185, %f226;
	mov.b32 	%r192, %f260;
	mov.b32 	%r203, %f295;
	mov.b32 	%r210, %f329;
	mov.b32 	%r221, %f364;
	mov.b32 	%r228, %f398;
	mov.b32 	%r246, %f428;
	mov.b32 	%r256, %f462;
	mov.b32 	%r278, %f515;
	mov.b32 	%r310, %f567;
	add.f32 	%f621, %f829, %f829;
	add.f32 	%f673, %f833, %f833;
	and.b32  	%r168, %r167, -2147483648;
	and.b32  	%r175, %r174, -2147483648;
	and.b32  	%r186, %r185, -2147483648;
	and.b32  	%r193, %r192, -2147483648;
	and.b32  	%r204, %r203, -2147483648;
	and.b32  	%r211, %r210, -2147483648;
	and.b32  	%r222, %r221, -2147483648;
	and.b32  	%r229, %r228, -2147483648;
	and.b32  	%r247, %r246, -2147483648;
	and.b32  	%r257, %r256, -2147483648;
	and.b32  	%r279, %r278, -2147483648;
	and.b32  	%r311, %r310, -2147483648;
	mov.b32 	%r327, %f621;
	mov.b32 	%r351, %f673;
	add.f32 	%f727, %f845, %f845;
	or.b32  	%r169, %r168, 1056964608;
	or.b32  	%r176, %r175, 1056964608;
	or.b32  	%r187, %r186, 1056964608;
	or.b32  	%r194, %r193, 1056964608;
	or.b32  	%r205, %r204, 1056964608;
	or.b32  	%r212, %r211, 1056964608;
	or.b32  	%r223, %r222, 1056964608;
	or.b32  	%r230, %r229, 1056964608;
	or.b32  	%r248, %r247, 1056964608;
	or.b32  	%r258, %r257, 1056964608;
	or.b32  	%r280, %r279, 1056964608;
	or.b32  	%r312, %r311, 1056964608;
	and.b32  	%r328, %r327, -2147483648;
	and.b32  	%r352, %r351, -2147483648;
	mov.b32 	%r367, %f727;
	mov.b32 	%f158, %r169;
	mov.b32 	%f192, %r176;
	mov.b32 	%f227, %r187;
	mov.b32 	%f261, %r194;
	mov.b32 	%f296, %r205;
	mov.b32 	%f330, %r212;
	mov.b32 	%f365, %r223;
	mov.b32 	%f399, %r230;
	mov.b32 	%f429, %r248;
	mov.b32 	%f463, %r258;
	mov.b32 	%f516, %r280;
	mov.b32 	%f568, %r312;
	or.b32  	%r329, %r328, 1056964608;
	or.b32  	%r353, %r352, 1056964608;
	and.b32  	%r368, %r367, -2147483648;
	add.f32 	%f159, %f157, %f158;
	abs.f32 	%f161, %f157;
	add.f32 	%f193, %f191, %f192;
	abs.f32 	%f195, %f191;
	add.f32 	%f228, %f226, %f227;
	abs.f32 	%f230, %f226;
	add.f32 	%f262, %f260, %f261;
	abs.f32 	%f264, %f260;
	add.f32 	%f297, %f295, %f296;
	abs.f32 	%f299, %f295;
	add.f32 	%f331, %f329, %f330;
	abs.f32 	%f333, %f329;
	add.f32 	%f366, %f364, %f365;
	abs.f32 	%f368, %f364;
	add.f32 	%f400, %f398, %f399;
	abs.f32 	%f402, %f398;
	add.f32 	%f430, %f428, %f429;
	abs.f32 	%f432, %f428;
	add.f32 	%f464, %f462, %f463;
	abs.f32 	%f466, %f462;
	add.f32 	%f517, %f515, %f516;
	abs.f32 	%f519, %f515;
	add.f32 	%f569, %f567, %f568;
	abs.f32 	%f571, %f567;
	mov.b32 	%f622, %r329;
	mov.b32 	%f674, %r353;
	or.b32  	%r369, %r368, 1056964608;
	cvt.rzi.f32.f32 	%f160, %f159;
	setp.gt.f32 	%p14, %f161, 0f4B000000;
	cvt.rzi.f32.f32 	%f194, %f193;
	setp.gt.f32 	%p20, %f195, 0f4B000000;
	cvt.rzi.f32.f32 	%f229, %f228;
	setp.gt.f32 	%p26, %f230, 0f4B000000;
	cvt.rzi.f32.f32 	%f263, %f262;
	setp.gt.f32 	%p32, %f264, 0f4B000000;
	cvt.rzi.f32.f32 	%f298, %f297;
	setp.gt.f32 	%p38, %f299, 0f4B000000;
	cvt.rzi.f32.f32 	%f332, %f331;
	setp.gt.f32 	%p44, %f333, 0f4B000000;
	cvt.rzi.f32.f32 	%f367, %f366;
	setp.gt.f32 	%p50, %f368, 0f4B000000;
	cvt.rzi.f32.f32 	%f401, %f400;
	setp.gt.f32 	%p56, %f402, 0f4B000000;
	cvt.rzi.f32.f32 	%f431, %f430;
	setp.gt.f32 	%p61, %f432, 0f4B000000;
	cvt.rzi.f32.f32 	%f465, %f464;
	setp.gt.f32 	%p68, %f466, 0f4B000000;
	cvt.rzi.f32.f32 	%f518, %f517;
	setp.gt.f32 	%p88, %f519, 0f4B000000;
	cvt.rzi.f32.f32 	%f570, %f569;
	setp.gt.f32 	%p108, %f571, 0f4B000000;
	add.f32 	%f623, %f621, %f622;
	abs.f32 	%f625, %f621;
	add.f32 	%f675, %f673, %f674;
	abs.f32 	%f677, %f673;
	mov.b32 	%f728, %r369;
	selp.f32 	%f162, %f157, %f160, %p14;
	cvt.rzi.f32.f32 	%f163, %f157;
	setp.lt.f32 	%p15, %f161, 0f3F000000;
	selp.f32 	%f196, %f191, %f194, %p20;
	cvt.rzi.f32.f32 	%f197, %f191;
	setp.lt.f32 	%p21, %f195, 0f3F000000;
	selp.f32 	%f231, %f226, %f229, %p26;
	cvt.rzi.f32.f32 	%f232, %f226;
	setp.lt.f32 	%p27, %f230, 0f3F000000;
	selp.f32 	%f265, %f260, %f263, %p32;
	cvt.rzi.f32.f32 	%f266, %f260;
	setp.lt.f32 	%p33, %f264, 0f3F000000;
	selp.f32 	%f300, %f295, %f298, %p38;
	cvt.rzi.f32.f32 	%f301, %f295;
	setp.lt.f32 	%p39, %f299, 0f3F000000;
	selp.f32 	%f334, %f329, %f332, %p44;
	cvt.rzi.f32.f32 	%f335, %f329;
	setp.lt.f32 	%p45, %f333, 0f3F000000;
	selp.f32 	%f369, %f364, %f367, %p50;
	cvt.rzi.f32.f32 	%f370, %f364;
	setp.lt.f32 	%p51, %f368, 0f3F000000;
	selp.f32 	%f403, %f398, %f401, %p56;
	cvt.rzi.f32.f32 	%f404, %f398;
	setp.lt.f32 	%p57, %f402, 0f3F000000;
	selp.f32 	%f433, %f428, %f431, %p61;
	cvt.rzi.f32.f32 	%f434, %f428;
	setp.lt.f32 	%p62, %f432, 0f3F000000;
	selp.f32 	%f467, %f462, %f465, %p68;
	cvt.rzi.f32.f32 	%f468, %f462;
	setp.lt.f32 	%p69, %f466, 0f3F000000;
	selp.f32 	%f520, %f515, %f518, %p88;
	cvt.rzi.f32.f32 	%f521, %f515;
	setp.lt.f32 	%p89, %f519, 0f3F000000;
	selp.f32 	%f572, %f567, %f570, %p108;
	cvt.rzi.f32.f32 	%f573, %f567;
	setp.lt.f32 	%p109, %f571, 0f3F000000;
	cvt.rzi.f32.f32 	%f624, %f623;
	setp.gt.f32 	%p128, %f625, 0f4B000000;
	cvt.rzi.f32.f32 	%f676, %f675;
	setp.gt.f32 	%p148, %f677, 0f4B000000;
	add.f32 	%f729, %f727, %f728;
	abs.f32 	%f731, %f727;
	shl.b32 	%r81, %r1, 2;
	shl.b32 	%r87, %r2, 5;
	and.b32  	%r156, %r1, 18;
	selp.f32 	%f164, %f163, %f162, %p15;
	selp.f32 	%f198, %f197, %f196, %p21;
	selp.f32 	%f233, %f232, %f231, %p27;
	selp.f32 	%f267, %f266, %f265, %p33;
	selp.f32 	%f302, %f301, %f300, %p39;
	selp.f32 	%f336, %f335, %f334, %p45;
	selp.f32 	%f371, %f370, %f369, %p51;
	selp.f32 	%f405, %f404, %f403, %p57;
	selp.f32 	%f435, %f434, %f433, %p62;
	selp.f32 	%f469, %f468, %f467, %p69;
	selp.f32 	%f522, %f521, %f520, %p89;
	selp.f32 	%f574, %f573, %f572, %p109;
	selp.f32 	%f626, %f621, %f624, %p128;
	cvt.rzi.f32.f32 	%f627, %f621;
	setp.lt.f32 	%p129, %f625, 0f3F000000;
	selp.f32 	%f678, %f673, %f676, %p148;
	cvt.rzi.f32.f32 	%f679, %f673;
	setp.lt.f32 	%p149, %f677, 0f3F000000;
	cvt.rzi.f32.f32 	%f730, %f729;
	setp.gt.f32 	%p169, %f731, 0f4B000000;
	and.b32  	%r82, %r81, 4;
	or.b32  	%r157, %r156, %r87;
	fma.rn.f32 	%f165, %f164, 0fBF000000, %f156;
	fma.rn.f32 	%f199, %f198, 0fBF000000, %f190;
	fma.rn.f32 	%f234, %f233, 0fBF000000, %f225;
	fma.rn.f32 	%f268, %f267, 0fBF000000, %f259;
	fma.rn.f32 	%f303, %f302, 0fBF000000, %f294;
	fma.rn.f32 	%f337, %f336, 0fBF000000, %f328;
	fma.rn.f32 	%f372, %f371, 0fBF000000, %f363;
	fma.rn.f32 	%f406, %f405, 0fBF000000, %f397;
	fma.rn.f32 	%f436, %f435, 0fBF000000, %f427;
	fma.rn.f32 	%f470, %f469, 0fBF000000, %f461;
	fma.rn.f32 	%f523, %f522, 0fBF000000, %f841;
	fma.rn.f32 	%f575, %f574, 0fBF000000, %f825;
	selp.f32 	%f628, %f627, %f626, %p129;
	selp.f32 	%f680, %f679, %f678, %p149;
	selp.f32 	%f732, %f727, %f730, %p169;
	cvt.rzi.f32.f32 	%f733, %f727;
	setp.lt.f32 	%p170, %f731, 0f3F000000;
	and.b32  	%r85, %r84, 8;
	or.b32  	%r158, %r157, %r82;
	mul.f32 	%f166, %f165, %f165;
	mul.f32 	%f200, %f199, %f199;
	mul.f32 	%f235, %f234, %f234;
	mul.f32 	%f269, %f268, %f268;
	mul.f32 	%f304, %f303, %f303;
	mul.f32 	%f338, %f337, %f337;
	mul.f32 	%f373, %f372, %f372;
	mul.f32 	%f407, %f406, %f406;
	mul.f32 	%f437, %f436, %f436;
	mul.f32 	%f471, %f470, %f470;
	mul.f32 	%f524, %f523, %f523;
	mul.f32 	%f576, %f575, %f575;
	fma.rn.f32 	%f629, %f628, 0fBF000000, %f829;
	fma.rn.f32 	%f681, %f680, 0fBF000000, %f833;
	selp.f32 	%f734, %f733, %f732, %p170;
	or.b32  	%r159, %r158, %r85;
	cvt.rzi.s32.f32 	%r170, %f164;
	fma.rn.f32 	%f167, %f166, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f168, %f166, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r177, %f198;
	fma.rn.f32 	%f201, %f200, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f202, %f200, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r188, %f233;
	fma.rn.f32 	%f236, %f235, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f237, %f235, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r195, %f267;
	fma.rn.f32 	%f270, %f269, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f271, %f269, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r206, %f302;
	fma.rn.f32 	%f305, %f304, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f306, %f304, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r213, %f336;
	fma.rn.f32 	%f339, %f338, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f340, %f338, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r224, %f371;
	fma.rn.f32 	%f374, %f373, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f375, %f373, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r231, %f405;
	fma.rn.f32 	%f408, %f407, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f409, %f407, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f438, %f437, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f439, %f437, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f472, %f471, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f473, %f471, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f525, %f524, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f526, %f524, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f577, %f576, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f578, %f576, 0f3E684E12, 0fBFAAD2E0;
	mul.f32 	%f630, %f629, %f629;
	mul.f32 	%f682, %f681, %f681;
	fma.rn.f32 	%f735, %f734, 0fBF000000, %f845;
	shr.u32 	%r160, %r159, 1;
	add.s32 	%r171, %r170, 1;
	fma.rn.f32 	%f169, %f167, %f166, 0fC0A55DF6;
	fma.rn.f32 	%f170, %f168, %f166, 0f4081E0CF;
	fma.rn.f32 	%f171, %f166, %f165, 0f00000000;
	add.s32 	%r178, %r177, 1;
	fma.rn.f32 	%f203, %f201, %f200, 0fC0A55DF6;
	fma.rn.f32 	%f204, %f202, %f200, 0f4081E0CF;
	fma.rn.f32 	%f205, %f200, %f199, 0f00000000;
	add.s32 	%r189, %r188, 1;
	fma.rn.f32 	%f238, %f236, %f235, 0fC0A55DF6;
	fma.rn.f32 	%f239, %f237, %f235, 0f4081E0CF;
	fma.rn.f32 	%f240, %f235, %f234, 0f00000000;
	add.s32 	%r196, %r195, 1;
	fma.rn.f32 	%f272, %f270, %f269, 0fC0A55DF6;
	fma.rn.f32 	%f273, %f271, %f269, 0f4081E0CF;
	fma.rn.f32 	%f274, %f269, %f268, 0f00000000;
	add.s32 	%r207, %r206, 1;
	fma.rn.f32 	%f307, %f305, %f304, 0fC0A55DF6;
	fma.rn.f32 	%f308, %f306, %f304, 0f4081E0CF;
	fma.rn.f32 	%f309, %f304, %f303, 0f00000000;
	add.s32 	%r214, %r213, 1;
	fma.rn.f32 	%f341, %f339, %f338, 0fC0A55DF6;
	fma.rn.f32 	%f342, %f340, %f338, 0f4081E0CF;
	fma.rn.f32 	%f343, %f338, %f337, 0f00000000;
	add.s32 	%r225, %r224, 1;
	fma.rn.f32 	%f376, %f374, %f373, 0fC0A55DF6;
	fma.rn.f32 	%f377, %f375, %f373, 0f4081E0CF;
	fma.rn.f32 	%f378, %f373, %f372, 0f00000000;
	add.s32 	%r232, %r231, 1;
	fma.rn.f32 	%f410, %f408, %f407, 0fC0A55DF6;
	fma.rn.f32 	%f411, %f409, %f407, 0f4081E0CF;
	fma.rn.f32 	%f412, %f407, %f406, 0f00000000;
	cvt.rzi.s32.f32 	%r249, %f435;
	fma.rn.f32 	%f440, %f438, %f437, 0fC0A55DF6;
	fma.rn.f32 	%f441, %f439, %f437, 0f4081E0CF;
	fma.rn.f32 	%f442, %f437, %f436, 0f00000000;
	cvt.rzi.s32.f32 	%r259, %f469;
	fma.rn.f32 	%f474, %f472, %f471, 0fC0A55DF6;
	fma.rn.f32 	%f475, %f473, %f471, 0f4081E0CF;
	fma.rn.f32 	%f476, %f471, %f470, 0f00000000;
	cvt.rzi.s32.f32 	%r281, %f522;
	fma.rn.f32 	%f527, %f525, %f524, 0fC0A55DF6;
	fma.rn.f32 	%f528, %f526, %f524, 0f4081E0CF;
	fma.rn.f32 	%f529, %f524, %f523, 0f00000000;
	cvt.rzi.s32.f32 	%r313, %f574;
	fma.rn.f32 	%f579, %f577, %f576, 0fC0A55DF6;
	fma.rn.f32 	%f580, %f578, %f576, 0f4081E0CF;
	fma.rn.f32 	%f581, %f576, %f575, 0f00000000;
	fma.rn.f32 	%f631, %f630, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f632, %f630, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f683, %f682, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f684, %f682, 0f3E684E12, 0fBFAAD2E0;
	mul.f32 	%f736, %f735, %f735;
	cvt.u16.u32 	%rs1, %r160;
	fma.rn.f32 	%f172, %f170, %f166, 0fC09DE9E6;
	fma.rn.f32 	%f173, %f169, %f171, 0f00000000;
	and.b32  	%r172, %r171, 1;
	fma.rn.f32 	%f206, %f204, %f200, 0fC09DE9E6;
	fma.rn.f32 	%f207, %f203, %f205, 0f00000000;
	and.b32  	%r179, %r178, 1;
	fma.rn.f32 	%f241, %f239, %f235, 0fC09DE9E6;
	fma.rn.f32 	%f242, %f238, %f240, 0f00000000;
	and.b32  	%r190, %r189, 1;
	fma.rn.f32 	%f275, %f273, %f269, 0fC09DE9E6;
	fma.rn.f32 	%f276, %f272, %f274, 0f00000000;
	and.b32  	%r197, %r196, 1;
	fma.rn.f32 	%f310, %f308, %f304, 0fC09DE9E6;
	fma.rn.f32 	%f311, %f307, %f309, 0f00000000;
	and.b32  	%r208, %r207, 1;
	fma.rn.f32 	%f344, %f342, %f338, 0fC09DE9E6;
	fma.rn.f32 	%f345, %f341, %f343, 0f00000000;
	and.b32  	%r215, %r214, 1;
	fma.rn.f32 	%f379, %f377, %f373, 0fC09DE9E6;
	fma.rn.f32 	%f380, %f376, %f378, 0f00000000;
	and.b32  	%r226, %r225, 1;
	fma.rn.f32 	%f413, %f411, %f407, 0fC09DE9E6;
	fma.rn.f32 	%f414, %f410, %f412, 0f00000000;
	and.b32  	%r233, %r232, 1;
	fma.rn.f32 	%f443, %f441, %f437, 0fC09DE9E6;
	fma.rn.f32 	%f444, %f440, %f442, 0f00000000;
	and.b32  	%r250, %r249, 1;
	fma.rn.f32 	%f477, %f475, %f471, 0fC09DE9E6;
	fma.rn.f32 	%f478, %f474, %f476, 0f00000000;
	and.b32  	%r260, %r259, 1;
	fma.rn.f32 	%f530, %f528, %f524, 0fC09DE9E6;
	fma.rn.f32 	%f531, %f527, %f529, 0f00000000;
	and.b32  	%r282, %r281, 1;
	fma.rn.f32 	%f582, %f580, %f576, 0fC09DE9E6;
	fma.rn.f32 	%f583, %f579, %f581, 0f00000000;
	and.b32  	%r314, %r313, 1;
	cvt.rzi.s32.f32 	%r330, %f628;
	fma.rn.f32 	%f633, %f631, %f630, 0fC0A55DF6;
	fma.rn.f32 	%f634, %f632, %f630, 0f4081E0CF;
	fma.rn.f32 	%f635, %f630, %f629, 0f00000000;
	cvt.rzi.s32.f32 	%r354, %f680;
	fma.rn.f32 	%f685, %f683, %f682, 0fC0A55DF6;
	fma.rn.f32 	%f686, %f684, %f682, 0f4081E0CF;
	fma.rn.f32 	%f687, %f682, %f681, 0f00000000;
	fma.rn.f32 	%f737, %f736, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f738, %f736, 0f3E684E12, 0fBFAAD2E0;
	mul.hi.u16 	%rs2, %rs1, -21845;
	fma.rn.f32 	%f174, %f172, %f166, 0f3F800000;
	fma.rn.f32 	%f175, %f165, 0f40490FDB, %f173;
	setp.eq.b32 	%p16, %r172, 1;
	fma.rn.f32 	%f208, %f206, %f200, 0f3F800000;
	fma.rn.f32 	%f209, %f199, 0f40490FDB, %f207;
	setp.eq.b32 	%p22, %r179, 1;
	fma.rn.f32 	%f243, %f241, %f235, 0f3F800000;
	fma.rn.f32 	%f244, %f234, 0f40490FDB, %f242;
	setp.eq.b32 	%p28, %r190, 1;
	fma.rn.f32 	%f277, %f275, %f269, 0f3F800000;
	fma.rn.f32 	%f278, %f268, 0f40490FDB, %f276;
	setp.eq.b32 	%p34, %r197, 1;
	fma.rn.f32 	%f312, %f310, %f304, 0f3F800000;
	fma.rn.f32 	%f313, %f303, 0f40490FDB, %f311;
	setp.eq.b32 	%p40, %r208, 1;
	fma.rn.f32 	%f346, %f344, %f338, 0f3F800000;
	fma.rn.f32 	%f347, %f337, 0f40490FDB, %f345;
	setp.eq.b32 	%p46, %r215, 1;
	fma.rn.f32 	%f381, %f379, %f373, 0f3F800000;
	fma.rn.f32 	%f382, %f372, 0f40490FDB, %f380;
	setp.eq.b32 	%p52, %r226, 1;
	fma.rn.f32 	%f415, %f413, %f407, 0f3F800000;
	fma.rn.f32 	%f416, %f406, 0f40490FDB, %f414;
	setp.eq.b32 	%p58, %r233, 1;
	fma.rn.f32 	%f445, %f443, %f437, 0f3F800000;
	fma.rn.f32 	%f446, %f436, 0f40490FDB, %f444;
	setp.eq.b32 	%p63, %r250, 1;
	fma.rn.f32 	%f479, %f477, %f471, 0f3F800000;
	fma.rn.f32 	%f480, %f470, 0f40490FDB, %f478;
	setp.eq.b32 	%p70, %r260, 1;
	fma.rn.f32 	%f532, %f530, %f524, 0f3F800000;
	fma.rn.f32 	%f533, %f523, 0f40490FDB, %f531;
	setp.eq.b32 	%p90, %r282, 1;
	fma.rn.f32 	%f584, %f582, %f576, 0f3F800000;
	fma.rn.f32 	%f585, %f575, 0f40490FDB, %f583;
	setp.eq.b32 	%p110, %r314, 1;
	fma.rn.f32 	%f636, %f634, %f630, 0fC09DE9E6;
	fma.rn.f32 	%f637, %f633, %f635, 0f00000000;
	and.b32  	%r331, %r330, 1;
	fma.rn.f32 	%f688, %f686, %f682, 0fC09DE9E6;
	fma.rn.f32 	%f689, %f685, %f687, 0f00000000;
	and.b32  	%r355, %r354, 1;
	cvt.rzi.s32.f32 	%r370, %f734;
	fma.rn.f32 	%f739, %f737, %f736, 0fC0A55DF6;
	fma.rn.f32 	%f740, %f738, %f736, 0f4081E0CF;
	fma.rn.f32 	%f741, %f736, %f735, 0f00000000;
	shr.u16 	%rs3, %rs2, 12;
	selp.f32 	%f176, %f174, %f175, %p16;
	and.b32  	%r173, %r171, 2;
	mov.f32 	%f177, 0f00000000;
	selp.f32 	%f210, %f208, %f209, %p22;
	and.b32  	%r180, %r178, 2;
	selp.f32 	%f245, %f243, %f244, %p28;
	and.b32  	%r191, %r189, 2;
	selp.f32 	%f279, %f277, %f278, %p34;
	and.b32  	%r198, %r196, 2;
	selp.f32 	%f314, %f312, %f313, %p40;
	and.b32  	%r209, %r207, 2;
	selp.f32 	%f348, %f346, %f347, %p46;
	and.b32  	%r216, %r214, 2;
	selp.f32 	%f383, %f381, %f382, %p52;
	and.b32  	%r227, %r225, 2;
	selp.f32 	%f417, %f415, %f416, %p58;
	and.b32  	%r234, %r232, 2;
	selp.f32 	%f447, %f445, %f446, %p63;
	and.b32  	%r251, %r249, 2;
	selp.f32 	%f481, %f479, %f480, %p70;
	and.b32  	%r261, %r259, 2;
	selp.f32 	%f534, %f532, %f533, %p90;
	and.b32  	%r283, %r281, 2;
	selp.f32 	%f586, %f584, %f585, %p110;
	and.b32  	%r315, %r313, 2;
	fma.rn.f32 	%f638, %f636, %f630, 0f3F800000;
	fma.rn.f32 	%f639, %f629, 0f40490FDB, %f637;
	setp.eq.b32 	%p130, %r331, 1;
	fma.rn.f32 	%f690, %f688, %f682, 0f3F800000;
	fma.rn.f32 	%f691, %f681, 0f40490FDB, %f689;
	setp.eq.b32 	%p150, %r355, 1;
	fma.rn.f32 	%f742, %f740, %f736, 0fC09DE9E6;
	fma.rn.f32 	%f743, %f739, %f741, 0f00000000;
	and.b32  	%r371, %r370, 1;
	mul.lo.s16 	%rs4, %rs3, 6144;
	setp.eq.s32 	%p17, %r173, 0;
	sub.f32 	%f178, %f177, %f176;
	setp.eq.s32 	%p23, %r180, 0;
	sub.f32 	%f212, %f177, %f210;
	setp.eq.s32 	%p29, %r191, 0;
	sub.f32 	%f247, %f177, %f245;
	setp.eq.s32 	%p35, %r198, 0;
	sub.f32 	%f281, %f177, %f279;
	setp.eq.s32 	%p41, %r209, 0;
	sub.f32 	%f316, %f177, %f314;
	setp.eq.s32 	%p47, %r216, 0;
	sub.f32 	%f350, %f177, %f348;
	setp.eq.s32 	%p53, %r227, 0;
	sub.f32 	%f385, %f177, %f383;
	setp.eq.s32 	%p59, %r234, 0;
	sub.f32 	%f419, %f177, %f417;
	setp.eq.s32 	%p64, %r251, 0;
	neg.f32 	%f449, %f447;
	add.s32 	%r252, %r249, 1;
	cvt.rzi.f32.f32 	%f454, %f427;
	setp.eq.s32 	%p71, %r261, 0;
	neg.f32 	%f483, %f481;
	add.s32 	%r262, %r259, 1;
	cvt.rzi.f32.f32 	%f487, %f461;
	setp.eq.s32 	%p91, %r283, 0;
	neg.f32 	%f536, %f534;
	add.s32 	%r284, %r281, 1;
	cvt.rzi.f32.f32 	%f541, %f841;
	setp.eq.s32 	%p111, %r315, 0;
	neg.f32 	%f588, %f586;
	add.s32 	%r316, %r313, 1;
	cvt.rzi.f32.f32 	%f593, %f825;
	selp.f32 	%f640, %f638, %f639, %p130;
	and.b32  	%r332, %r330, 2;
	selp.f32 	%f692, %f690, %f691, %p150;
	and.b32  	%r356, %r354, 2;
	fma.rn.f32 	%f744, %f742, %f736, 0f3F800000;
	fma.rn.f32 	%f745, %f735, 0f40490FDB, %f743;
	setp.eq.b32 	%p171, %r371, 1;
	sub.s16 	%rs5, %rs1, %rs4;
	selp.f32 	%f179, %f176, %f178, %p17;
	selp.f32 	%f213, %f210, %f212, %p23;
	selp.f32 	%f248, %f245, %f247, %p29;
	selp.f32 	%f282, %f279, %f281, %p35;
	selp.f32 	%f317, %f314, %f316, %p41;
	selp.f32 	%f351, %f348, %f350, %p47;
	selp.f32 	%f386, %f383, %f385, %p53;
	selp.f32 	%f420, %f417, %f419, %p59;
	selp.f32 	%f448, %f446, %f445, %p63;
	selp.f32 	%f450, %f447, %f449, %p64;
	and.b32  	%r253, %r252, 2;
	setp.eq.f32 	%p66, %f454, %f427;
	mul.f32 	%f455, %f427, 0f00000000;
	selp.f32 	%f482, %f480, %f479, %p70;
	selp.f32 	%f484, %f481, %f483, %p71;
	and.b32  	%r263, %r262, 2;
	setp.eq.f32 	%p73, %f487, %f461;
	mul.f32 	%f488, %f461, 0f00000000;
	selp.f32 	%f535, %f533, %f532, %p90;
	selp.f32 	%f537, %f534, %f536, %p91;
	and.b32  	%r285, %r284, 2;
	setp.eq.f32 	%p93, %f541, %f841;
	mul.f32 	%f542, %f841, 0f00000000;
	selp.f32 	%f587, %f585, %f584, %p110;
	selp.f32 	%f589, %f586, %f588, %p111;
	and.b32  	%r317, %r316, 2;
	setp.eq.f32 	%p113, %f593, %f825;
	mul.f32 	%f594, %f825, 0f00000000;
	setp.eq.s32 	%p131, %r332, 0;
	neg.f32 	%f642, %f640;
	add.s32 	%r333, %r330, 1;
	cvt.rzi.f32.f32 	%f647, %f829;
	setp.eq.s32 	%p151, %r356, 0;
	neg.f32 	%f694, %f692;
	add.s32 	%r357, %r354, 1;
	cvt.rzi.f32.f32 	%f699, %f833;
	selp.f32 	%f746, %f744, %f745, %p171;
	and.b32  	%r372, %r370, 2;
	cvt.u32.u16 	%r161, %rs5;
	mul.f32 	%f106, %f179, %f179;
	mul.f32 	%f4, %f213, %f213;
	mul.f32 	%f8, %f248, %f248;
	mul.f32 	%f13, %f282, %f282;
	mul.f32 	%f17, %f317, %f317;
	mul.f32 	%f22, %f351, %f351;
	mul.f32 	%f26, %f386, %f386;
	mul.f32 	%f31, %f420, %f420;
	setp.eq.s32 	%p65, %r253, 0;
	sub.f32 	%f452, %f177, %f448;
	selp.f32 	%f456, %f455, %f450, %p66;
	abs.f32 	%f457, %f427;
	setp.eq.s32 	%p72, %r263, 0;
	sub.f32 	%f485, %f177, %f482;
	selp.f32 	%f489, %f488, %f484, %p73;
	abs.f32 	%f490, %f461;
	setp.eq.s32 	%p92, %r285, 0;
	sub.f32 	%f539, %f177, %f535;
	selp.f32 	%f123, %f542, %f537, %p93;
	abs.f32 	%f543, %f841;
	setp.eq.s32 	%p112, %r317, 0;
	sub.f32 	%f591, %f177, %f587;
	selp.f32 	%f595, %f594, %f589, %p113;
	abs.f32 	%f596, %f825;
	selp.f32 	%f641, %f639, %f638, %p130;
	selp.f32 	%f643, %f640, %f642, %p131;
	and.b32  	%r334, %r333, 2;
	setp.eq.f32 	%p133, %f647, %f829;
	mul.f32 	%f648, %f829, 0f00000000;
	selp.f32 	%f693, %f691, %f690, %p150;
	selp.f32 	%f695, %f692, %f694, %p151;
	and.b32  	%r358, %r357, 2;
	setp.eq.f32 	%p153, %f699, %f833;
	mul.f32 	%f700, %f833, 0f00000000;
	setp.eq.s32 	%p172, %r372, 0;
	neg.f32 	%f748, %f746;
	add.s32 	%r373, %r370, 1;
	cvt.rzi.f32.f32 	%f753, %f845;
	ld.param.u64 	%rd1, [_Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_5];
	mul.wide.u32 	%rd50, %r161, 4;
	mul.f32 	%f183, %f106, 0f3C8A83B8;
	mul.f32 	%f217, %f4, 0f3C8A83B8;
	mul.f32 	%f252, %f8, 0f3C8A83B8;
	mul.f32 	%f286, %f13, 0f3C8A83B8;
	mul.f32 	%f321, %f17, 0f3C8A83B8;
	mul.f32 	%f355, %f22, 0f3C8A83B8;
	mul.f32 	%f390, %f26, 0f3C8A83B8;
	mul.f32 	%f423, %f31, 0f3C8A83B8;
	selp.f32 	%f453, %f448, %f452, %p65;
	setp.gt.f32 	%p67, %f457, 0f4B800000;
	add.f32 	%f458, %f456, 0f3F800000;
	selp.f32 	%f486, %f482, %f485, %p72;
	setp.gt.f32 	%p74, %f490, 0f4B800000;
	add.f32 	%f491, %f489, 0f3F800000;
	selp.f32 	%f540, %f535, %f539, %p92;
	setp.gt.f32 	%p94, %f543, 0f4B800000;
	add.f32 	%f544, %f123, 0f3F800000;
	selp.f32 	%f592, %f587, %f591, %p112;
	setp.gt.f32 	%p114, %f596, 0f4B800000;
	add.f32 	%f597, %f595, 0f3F800000;
	setp.eq.s32 	%p132, %r334, 0;
	sub.f32 	%f645, %f177, %f641;
	selp.f32 	%f69, %f648, %f643, %p133;
	abs.f32 	%f649, %f829;
	setp.eq.s32 	%p152, %r358, 0;
	sub.f32 	%f697, %f177, %f693;
	selp.f32 	%f701, %f700, %f695, %p153;
	abs.f32 	%f702, %f833;
	selp.f32 	%f747, %f745, %f744, %p171;
	selp.f32 	%f749, %f746, %f748, %p172;
	and.b32  	%r374, %r373, 2;
	setp.eq.f32 	%p174, %f753, %f845;
	mul.f32 	%f754, %f845, 0f00000000;
	add.s64 	%rd51, %rd1, %rd50;
	mul.f32 	%f3, %f183, %f815;
	mul.f32 	%f218, %f217, %f816;
	mul.f32 	%f12, %f252, %f817;
	mul.f32 	%f287, %f286, %f818;
	mul.f32 	%f21, %f321, %f819;
	mul.f32 	%f356, %f355, %f820;
	mul.f32 	%f30, %f390, %f821;
	mul.f32 	%f424, %f423, %f822;
	selp.f32 	%f459, %f458, %f453, %p67;
	selp.f32 	%f492, %f491, %f486, %p74;
	selp.f32 	%f124, %f544, %f540, %p94;
	selp.f32 	%f598, %f597, %f592, %p114;
	selp.f32 	%f646, %f641, %f645, %p132;
	setp.gt.f32 	%p134, %f649, 0f4B800000;
	add.f32 	%f650, %f69, 0f3F800000;
	selp.f32 	%f698, %f693, %f697, %p152;
	setp.gt.f32 	%p154, %f702, 0f4B800000;
	add.f32 	%f703, %f701, 0f3F800000;
	and.b32  	%r49, %r14, 1;
	setp.eq.s32 	%p173, %r374, 0;
	sub.f32 	%f751, %f177, %f747;
	selp.f32 	%f755, %f754, %f749, %p174;
	abs.f32 	%f756, %f845;
	ld.param.u64 	%rd2, [_Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_6];
	ld.param.u64 	%rd3, [_Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_7];
	and.b32  	%r83, %r1, 2;
	and.b32  	%r86, %r1, 16;
	ld.global.u32 	%r88, [%rd51];
	mov.b32 	%r183, %f218;
	mov.b32 	%r182, %f3;
	mov.b32 	%r201, %f287;
	mov.b32 	%r200, %f12;
	mov.b32 	%r219, %f356;
	mov.b32 	%r218, %f21;
	mov.b32 	%r237, %f424;
	mov.b32 	%r236, %f30;
	mov.b32 	%r239, %f459;
	mov.b32 	%r240, %f492;
	mov.b32 	%r242, %f456;
	mov.b32 	%r243, %f489;
	mov.b32 	%r300, %f598;
	mov.b32 	%r299, %f124;
	mov.b32 	%r306, %f595;
	mov.b32 	%r305, %f123;
	selp.f32 	%f70, %f650, %f646, %p134;
	selp.f32 	%f704, %f703, %f698, %p154;
	setp.eq.s32 	%p168, %r49, %r91;
	selp.f32 	%f752, %f747, %f751, %p173;
	setp.gt.f32 	%p175, %f756, 0f4B800000;
	add.f32 	%f757, %f755, 0f3F800000;
	// begin inline asm
	cvt.rn.f16x2.f32 %r181, %r183, %r182;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r199, %r201, %r200;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r217, %r219, %r218;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r235, %r237, %r236;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r238, %r240, %r239;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r241, %r243, %r242;
	// end inline asm
	xor.b32  	%r303, %r306, -2147483648;
	xor.b32  	%r302, %r305, -2147483648;
	mov.b32 	%r347, %f704;
	mov.b32 	%r346, %f70;
	mov.b32 	%r350, %f701;
	mov.b32 	%r349, %f69;
	selp.f32 	%f758, %f757, %f752, %p175;
	selp.f32 	%f142, 0f3F800000, 0f00000000, %p168;
	// begin inline asm
	cvt.rn.f16x2.f32 %r298, %r300, %r299;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r301, %r303, %r302;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r304, %r306, %r305;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r307, %r300, %r299;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r345, %r347, %r346;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r348, %r350, %r349;
	// end inline asm
	mul.f32 	%f143, %f758, %f142;
	mul.f32 	%f144, %f755, %f142;
	add.f32 	%f781, %f837, %f837;
	mov.b32 	%r397, %f781;
	and.b32  	%r398, %r397, -2147483648;
	or.b32  	%r399, %r398, 1056964608;
	mov.b32 	%f782, %r399;
	add.f32 	%f783, %f781, %f782;
	cvt.rzi.f32.f32 	%f784, %f783;
	abs.f32 	%f785, %f781;
	setp.gt.f32 	%p189, %f785, 0f4B000000;
	selp.f32 	%f786, %f781, %f784, %p189;
	cvt.rzi.f32.f32 	%f787, %f781;
	setp.lt.f32 	%p190, %f785, 0f3F000000;
	selp.f32 	%f788, %f787, %f786, %p190;
	cvt.rzi.s32.f32 	%r400, %f788;
	fma.rn.f32 	%f789, %f788, 0fBF000000, %f837;
	mul.f32 	%f790, %f789, %f789;
	fma.rn.f32 	%f791, %f790, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f792, %f790, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f793, %f791, %f790, 0fC0A55DF6;
	fma.rn.f32 	%f794, %f792, %f790, 0f4081E0CF;
	fma.rn.f32 	%f795, %f790, %f789, 0f00000000;
	fma.rn.f32 	%f796, %f794, %f790, 0fC09DE9E6;
	fma.rn.f32 	%f797, %f793, %f795, 0f00000000;
	fma.rn.f32 	%f798, %f796, %f790, 0f3F800000;
	fma.rn.f32 	%f799, %f789, 0f40490FDB, %f797;
	and.b32  	%r401, %r400, 1;
	setp.eq.b32 	%p191, %r401, 1;
	selp.f32 	%f800, %f798, %f799, %p191;
	selp.f32 	%f801, %f799, %f798, %p191;
	and.b32  	%r402, %r400, 2;
	setp.eq.s32 	%p192, %r402, 0;
	neg.f32 	%f802, %f800;
	selp.f32 	%f803, %f800, %f802, %p192;
	add.s32 	%r403, %r400, 1;
	and.b32  	%r404, %r403, 2;
	setp.eq.s32 	%p193, %r404, 0;
	sub.f32 	%f805, %f177, %f801;
	selp.f32 	%f806, %f801, %f805, %p193;
	cvt.rzi.f32.f32 	%f807, %f837;
	setp.eq.f32 	%p194, %f807, %f837;
	mul.f32 	%f808, %f837, 0f00000000;
	selp.f32 	%f809, %f808, %f803, %p194;
	abs.f32 	%f810, %f837;
	setp.gt.f32 	%p195, %f810, 0f4B800000;
	add.f32 	%f811, %f809, 0f3F800000;
	selp.f32 	%f812, %f811, %f806, %p195;
	mul.f32 	%f813, %f812, %f142;
	mul.f32 	%f814, %f809, %f142;
	mov.b32 	%r387, %f813;
	mov.b32 	%r386, %f143;
	// begin inline asm
	cvt.rn.f16x2.f32 %r385, %r387, %r386;
	// end inline asm
	mov.b32 	%r393, %f814;
	xor.b32  	%r390, %r393, -2147483648;
	mov.b32 	%r392, %f144;
	xor.b32  	%r389, %r392, -2147483648;
	// begin inline asm
	cvt.rn.f16x2.f32 %r388, %r390, %r389;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r391, %r393, %r392;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r394, %r387, %r386;
	// end inline asm
	and.b32  	%r406, %r89, 8;
	and.b32  	%r407, %r84, 16;
	or.b32  	%r408, %r406, %r407;
	shl.b32 	%r409, %r3, 2;
	and.b32  	%r63, %r409, 32;
	or.b32  	%r64, %r63, %r408;
	and.b32  	%r65, %r3, 7;
	cvt.u16.u32 	%rs6, %r87;
	mul.hi.u16 	%rs7, %rs6, -21845;
	shr.u16 	%rs8, %rs7, 8;
	mul.lo.s16 	%rs9, %rs8, 384;
	sub.s16 	%rs10, %rs6, %rs9;
	shl.b16 	%rs11, %rs10, 5;
	cvt.u32.u16 	%r410, %rs11;
	and.b32  	%r66, %r81, 12;
	and.b32  	%r67, %r81, 16;
	and.b32  	%r411, %r81, 28;
	or.b32  	%r68, %r411, %r410;
	and.b32  	%r69, %r1, 8;
	shl.b32 	%r412, %r1, 4;
	or.b32  	%r413, %r412, %r69;
	shr.u32 	%r414, %r413, 2;
	and.b32  	%r415, %r414, 14;
	or.b32  	%r416, %r415, %r67;
	and.b32  	%r417, %r89, 2;
	or.b32  	%r70, %r417, %r93;
	and.b32  	%r418, %r4, 32;
	shr.u32 	%r419, %r3, 1;
	or.b32  	%r420, %r418, %r419;
	or.b32  	%r71, %r420, %r407;
	or.b32  	%r421, %r419, 8;
	or.b32  	%r422, %r407, %r418;
	or.b32  	%r72, %r422, %r421;
	or.b32  	%r423, %r82, %r87;
	or.b32  	%r424, %r423, %r83;
	or.b32  	%r425, %r424, %r85;
	or.b32  	%r426, %r425, %r86;
	bfe.u32 	%r427, %r426, 1, 4;
	mul.lo.s32 	%r428, %r427, 65;
	or.b32  	%r429, %r422, %r419;
	add.s32 	%r430, %r428, %r429;
	or.b32  	%r431, %r421, %r407;
	or.b32  	%r432, %r431, %r418;
	add.s32 	%r433, %r428, %r432;
	shl.b32 	%r434, %r3, 1;
	and.b32  	%r435, %r434, 14;
	mad.lo.s32 	%r436, %r144, 393216, -1179648;
	or.b32  	%r437, %r87, %r14;
	and.b32  	%r438, %r409, 28;
	or.b32  	%r439, %r437, %r438;
	cvt.u16.u32 	%rs12, %r439;
	mul.hi.u16 	%rs13, %rs12, -21845;
	shr.u16 	%rs14, %rs13, 13;
	mul.lo.s16 	%rs15, %rs14, 12288;
	sub.s16 	%rs16, %rs12, %rs15;
	mul.wide.u16 	%r73, %rs16, 32;
	cvt.s64.s32 	%rd5, %r436;
	shr.u32 	%r440, %r3, 3;
	or.b32  	%r441, %r440, 2;
	or.b32  	%r442, %r440, 4;
	or.b32  	%r443, %r440, 6;
	mul.lo.s32 	%r444, %r93, 65;
	bfe.s32 	%r445, %r3, 1, 1;
	and.b32  	%r446, %r445, 260;
	and.b32  	%r447, %r3, 1;
	neg.s32 	%r448, %r447;
	and.b32  	%r449, %r448, 520;
	mul.lo.s32 	%r450, %r440, 1057;
	bfe.s32 	%r451, %r3, 2, 1;
	and.b32  	%r452, %r451, 130;
	add.s32 	%r453, %r416, %r449;
	add.s32 	%r454, %r453, %r446;
	add.s32 	%r455, %r454, %r444;
	add.s32 	%r456, %r455, %r450;
	add.s32 	%r457, %r456, %r452;
	mul.wide.u32 	%rd52, %r457, 4;
	mov.u64 	%rd53, shmem;
	add.s64 	%rd6, %rd53, %rd52;
	add.s32 	%r458, %r453, 32;
	add.s32 	%r459, %r458, %r444;
	add.s32 	%r460, %r459, %r446;
	add.s32 	%r461, %r460, %r450;
	add.s32 	%r462, %r461, %r452;
	mul.wide.u32 	%rd54, %r462, 4;
	add.s64 	%rd7, %rd53, %rd54;
	or.b32  	%r463, %r454, 1;
	add.s32 	%r464, %r463, %r444;
	add.s32 	%r465, %r464, %r450;
	add.s32 	%r466, %r465, %r452;
	mul.wide.u32 	%rd55, %r466, 4;
	add.s64 	%rd8, %rd53, %rd55;
	add.s32 	%r467, %r453, 33;
	add.s32 	%r468, %r467, %r444;
	add.s32 	%r469, %r468, %r446;
	add.s32 	%r470, %r469, %r450;
	add.s32 	%r471, %r470, %r452;
	mul.wide.u32 	%rd56, %r471, 4;
	add.s64 	%rd9, %rd53, %rd56;
	bfe.u32 	%r472, %r89, 3, 1;
	mul.lo.s32 	%r473, %r472, 65;
	mul.lo.s32 	%r474, %r441, 1057;
	add.s32 	%r475, %r454, %r473;
	add.s32 	%r476, %r475, %r474;
	add.s32 	%r477, %r476, %r452;
	mul.wide.u32 	%rd57, %r477, 4;
	add.s64 	%rd10, %rd53, %rd57;
	add.s32 	%r478, %r458, %r473;
	add.s32 	%r479, %r478, %r446;
	add.s32 	%r480, %r479, %r474;
	add.s32 	%r481, %r480, %r452;
	mul.wide.u32 	%rd58, %r481, 4;
	add.s64 	%rd11, %rd53, %rd58;
	add.s32 	%r482, %r463, %r473;
	add.s32 	%r483, %r482, %r474;
	add.s32 	%r484, %r483, %r452;
	mul.wide.u32 	%rd59, %r484, 4;
	add.s64 	%rd12, %rd53, %rd59;
	add.s32 	%r485, %r467, %r473;
	add.s32 	%r486, %r485, %r446;
	add.s32 	%r487, %r486, %r474;
	add.s32 	%r488, %r487, %r452;
	mul.wide.u32 	%rd60, %r488, 4;
	add.s64 	%rd13, %rd53, %rd60;
	mul.lo.s32 	%r489, %r442, 1057;
	add.s32 	%r490, %r475, %r489;
	add.s32 	%r491, %r490, %r452;
	mul.wide.u32 	%rd61, %r491, 4;
	add.s64 	%rd14, %rd53, %rd61;
	add.s32 	%r492, %r479, %r489;
	add.s32 	%r493, %r492, %r452;
	mul.wide.u32 	%rd62, %r493, 4;
	add.s64 	%rd15, %rd53, %rd62;
	add.s32 	%r494, %r482, %r489;
	add.s32 	%r495, %r494, %r452;
	mul.wide.u32 	%rd63, %r495, 4;
	add.s64 	%rd16, %rd53, %rd63;
	add.s32 	%r496, %r486, %r489;
	add.s32 	%r497, %r496, %r452;
	mul.wide.u32 	%rd64, %r497, 4;
	add.s64 	%rd17, %rd53, %rd64;
	mul.lo.s32 	%r498, %r443, 1057;
	add.s32 	%r499, %r475, %r498;
	add.s32 	%r500, %r499, %r452;
	mul.wide.u32 	%rd65, %r500, 4;
	add.s64 	%rd18, %rd53, %rd65;
	add.s32 	%r501, %r479, %r498;
	add.s32 	%r502, %r501, %r452;
	mul.wide.u32 	%rd66, %r502, 4;
	add.s64 	%rd19, %rd53, %rd66;
	add.s32 	%r503, %r482, %r498;
	add.s32 	%r504, %r503, %r452;
	mul.wide.u32 	%rd67, %r504, 4;
	add.s64 	%rd20, %rd53, %rd67;
	add.s32 	%r505, %r486, %r498;
	add.s32 	%r506, %r505, %r452;
	mul.wide.u32 	%rd68, %r506, 4;
	add.s64 	%rd21, %rd53, %rd68;
	or.b32  	%r507, %r435, %r93;
	mul.lo.s32 	%r508, %r507, 65;
	add.s32 	%r509, %r416, %r508;
	add.s32 	%r510, %r509, %r450;
	mul.wide.u32 	%rd69, %r510, 4;
	add.s64 	%rd22, %rd53, %rd69;
	cvt.u64.u32 	%rd70, %r450;
	cvt.u64.u32 	%rd71, %r416;
	cvt.u64.u32 	%rd72, %r508;
	add.s64 	%rd73, %rd72, %rd71;
	add.s64 	%rd74, %rd73, %rd70;
	shl.b64 	%rd75, %rd74, 2;
	add.s64 	%rd23, %rd53, %rd75;
	add.s32 	%r511, %r508, %r67;
	cvt.u64.u32 	%rd76, %r511;
	cvt.u64.u32 	%rd77, %r415;
	add.s64 	%rd78, %rd76, %rd77;
	add.s64 	%rd79, %rd78, %rd70;
	shl.b64 	%rd80, %rd79, 2;
	add.s64 	%rd24, %rd53, %rd80;
	add.s32 	%r512, %r509, %r474;
	mul.wide.u32 	%rd81, %r512, 4;
	add.s64 	%rd25, %rd53, %rd81;
	cvt.u64.u32 	%rd82, %r474;
	add.s64 	%rd83, %rd73, %rd82;
	shl.b64 	%rd84, %rd83, 2;
	add.s64 	%rd26, %rd53, %rd84;
	add.s64 	%rd85, %rd78, %rd82;
	shl.b64 	%rd86, %rd85, 2;
	add.s64 	%rd27, %rd53, %rd86;
	add.s32 	%r513, %r509, %r489;
	mul.wide.u32 	%rd87, %r513, 4;
	add.s64 	%rd28, %rd53, %rd87;
	cvt.u64.u32 	%rd88, %r489;
	add.s64 	%rd89, %rd73, %rd88;
	shl.b64 	%rd90, %rd89, 2;
	add.s64 	%rd29, %rd53, %rd90;
	add.s64 	%rd91, %rd78, %rd88;
	shl.b64 	%rd92, %rd91, 2;
	add.s64 	%rd30, %rd53, %rd92;
	add.s32 	%r514, %r509, %r498;
	mul.wide.u32 	%rd93, %r514, 4;
	add.s64 	%rd31, %rd53, %rd93;
	cvt.u64.u32 	%rd94, %r498;
	add.s64 	%rd95, %rd73, %rd94;
	shl.b64 	%rd96, %rd95, 2;
	add.s64 	%rd32, %rd53, %rd96;
	add.s64 	%rd97, %rd78, %rd94;
	shl.b64 	%rd98, %rd97, 2;
	add.s64 	%rd33, %rd53, %rd98;
	mul.wide.u32 	%rd99, %r433, 4;
	add.s64 	%rd34, %rd53, %rd99;
	mul.wide.u32 	%rd100, %r430, 4;
	add.s64 	%rd35, %rd53, %rd100;
	setp.eq.s32 	%p197, %r69, 0;
	mov.u16 	%rs304, 25600;
	mov.u16 	%rs252, 21504;
	setp.lt.u32 	%p211, %r3, 8;
	mov.u32 	%r2586, %r2577;
	mov.u32 	%r2587, %r2577;
	mov.u32 	%r2588, %r2577;
	mov.u32 	%r2589, %r2577;
	mov.u32 	%r2597, %r2577;
	mov.u32 	%r2598, %r2577;
	mov.u32 	%r80, %r2577;
	bra.uni 	$L__BB0_90;
$L__BB0_94:                             // %pass9897
                                        //   in Loop: Header=BB0_90 Depth=1
	mad.lo.s32 	%r2568, %r126, 393216, %r73;
	or.b32  	%r2569, %r2568, %r66;
	or.b32  	%r2570, %r2569, %r67;
	cvt.u64.u32 	%rd127, %r2570;
	add.s64 	%rd128, %rd127, %rd5;
	mul.hi.s64 	%rd129, %rd128, 3074457345618258603;
	shr.u64 	%rd130, %rd129, 63;
	shr.s64 	%rd131, %rd129, 26;
	add.s64 	%rd132, %rd131, %rd130;
	setp.lt.s64 	%p217, %rd128, 0;
	mul.lo.s64 	%rd133, %rd132, 402653184;
	setp.ne.s64 	%p218, %rd133, %rd128;
	and.pred  	%p219, %p217, %p218;
	selp.s64 	%rd134, -1, 0, %p219;
	add.s64 	%rd135, %rd132, %rd134;
	mul.lo.s64 	%rd136, %rd135, 4611686018024734720;
	add.s64 	%rd137, %rd136, %rd128;
	shl.b64 	%rd138, %rd137, 2;
	add.s64 	%rd139, %rd3, %rd138;
	st.global.v4.u32 	[%rd139], {%r133, %r135, %r134, %r136};
	add.s32 	%r2571, %r2568, 786432;
	or.b32  	%r2572, %r2571, %r66;
	or.b32  	%r2573, %r2572, %r67;
	cvt.u64.u32 	%rd140, %r2573;
	add.s64 	%rd141, %rd140, %rd5;
	mul.hi.s64 	%rd142, %rd141, 3074457345618258603;
	shr.u64 	%rd143, %rd142, 63;
	shr.s64 	%rd144, %rd142, 26;
	add.s64 	%rd145, %rd144, %rd143;
	setp.lt.s64 	%p220, %rd141, 0;
	mul.lo.s64 	%rd146, %rd145, 402653184;
	setp.ne.s64 	%p221, %rd146, %rd141;
	and.pred  	%p222, %p220, %p221;
	selp.s64 	%rd147, -1, 0, %p222;
	add.s64 	%rd148, %rd145, %rd147;
	mul.lo.s64 	%rd149, %rd148, 4611686018024734720;
	add.s64 	%rd150, %rd149, %rd141;
	shl.b64 	%rd151, %rd150, 2;
	add.s64 	%rd152, %rd3, %rd151;
	st.global.v4.u32 	[%rd152], {%r137, %r139, %r138, %r140};
	setp.ne.s32 	%p223, %r80, 32512;
	add.s32 	%r80, %r80, 256;
	add.s32 	%r2574, %r80, %r142;
	setp.lt.s32 	%p224, %r2574, %r143;
	and.pred  	%p225, %p223, %p224;
	@%p225 bra 	$L__BB0_90;
	bra.uni 	$L__BB0_95;
$L__BB0_90:                             // %L1351
                                        // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_91 Depth 2
	or.b32  	%r580, %r80, %r64;
	or.b32  	%r581, %r580, %r65;
	add.s32 	%r582, %r581, %r142;
	mad.lo.s32 	%r583, %r582, 12288, %r68;
	mul.hi.s32 	%r584, %r583, 715827883;
	shr.u32 	%r585, %r584, 31;
	shr.s32 	%r586, %r584, 26;
	add.s32 	%r587, %r586, %r585;
	setp.lt.s32 	%p198, %r583, 0;
	mul.lo.s32 	%r588, %r587, 402653184;
	setp.ne.s32 	%p199, %r588, %r583;
	and.pred  	%p200, %p198, %p199;
	selp.s32 	%r589, -1, 0, %p200;
	add.s32 	%r590, %r587, %r589;
	mad.lo.s32 	%r591, %r590, -402653184, %r583;
	mul.wide.s32 	%rd101, %r591, 4;
	add.s64 	%rd102, %rd2, %rd101;
	ld.global.v4.u32 	{%r592, %r593, %r594, %r595}, [%rd102];
	or.b32  	%r596, %r581, 64;
	add.s32 	%r597, %r596, %r142;
	mad.lo.s32 	%r598, %r597, 12288, %r68;
	mul.hi.s32 	%r599, %r598, 715827883;
	shr.u32 	%r600, %r599, 31;
	shr.s32 	%r601, %r599, 26;
	add.s32 	%r602, %r601, %r600;
	setp.lt.s32 	%p201, %r598, 0;
	mul.lo.s32 	%r603, %r602, 402653184;
	setp.ne.s32 	%p202, %r603, %r598;
	and.pred  	%p203, %p201, %p202;
	selp.s32 	%r604, -1, 0, %p203;
	add.s32 	%r605, %r602, %r604;
	mad.lo.s32 	%r606, %r605, -402653184, %r598;
	mul.wide.s32 	%rd103, %r606, 4;
	add.s64 	%rd104, %rd2, %rd103;
	ld.global.v4.u32 	{%r607, %r608, %r609, %r610}, [%rd104];
	or.b32  	%r611, %r581, 128;
	add.s32 	%r612, %r611, %r142;
	mad.lo.s32 	%r613, %r612, 12288, %r68;
	mul.hi.s32 	%r614, %r613, 715827883;
	shr.u32 	%r615, %r614, 31;
	shr.s32 	%r616, %r614, 26;
	add.s32 	%r617, %r616, %r615;
	setp.lt.s32 	%p204, %r613, 0;
	mul.lo.s32 	%r618, %r617, 402653184;
	setp.ne.s32 	%p205, %r618, %r613;
	and.pred  	%p206, %p204, %p205;
	selp.s32 	%r619, -1, 0, %p206;
	add.s32 	%r620, %r617, %r619;
	mad.lo.s32 	%r621, %r620, -402653184, %r613;
	mul.wide.s32 	%rd105, %r621, 4;
	add.s64 	%rd106, %rd2, %rd105;
	ld.global.v4.u32 	{%r622, %r623, %r624, %r625}, [%rd106];
	or.b32  	%r626, %r581, 192;
	add.s32 	%r627, %r626, %r142;
	mad.lo.s32 	%r628, %r627, 12288, %r68;
	mul.hi.s32 	%r629, %r628, 715827883;
	shr.u32 	%r630, %r629, 31;
	shr.s32 	%r631, %r629, 26;
	add.s32 	%r632, %r631, %r630;
	setp.lt.s32 	%p207, %r628, 0;
	mul.lo.s32 	%r633, %r632, 402653184;
	setp.ne.s32 	%p208, %r633, %r628;
	and.pred  	%p209, %p207, %p208;
	selp.s32 	%r634, -1, 0, %p209;
	add.s32 	%r635, %r632, %r634;
	mad.lo.s32 	%r636, %r635, -402653184, %r628;
	mul.wide.s32 	%rd107, %r636, 4;
	add.s64 	%rd108, %rd2, %rd107;
	ld.global.v4.u32 	{%r637, %r638, %r639, %r640}, [%rd108];
	selp.b32 	%r641, %r594, %r592, %p197;
	shfl.sync.bfly.b32	%r642, %r641, 8, 31, -1;
	selp.b32 	%r516, %r592, %r642, %p197;
	selp.b32 	%r517, %r642, %r594, %p197;
	selp.b32 	%r643, %r595, %r593, %p197;
	shfl.sync.bfly.b32	%r644, %r643, 8, 31, -1;
	selp.b32 	%r524, %r593, %r644, %p197;
	selp.b32 	%r525, %r644, %r595, %p197;
	selp.b32 	%r645, %r609, %r607, %p197;
	shfl.sync.bfly.b32	%r646, %r645, 8, 31, -1;
	selp.b32 	%r532, %r607, %r646, %p197;
	selp.b32 	%r533, %r646, %r609, %p197;
	selp.b32 	%r647, %r610, %r608, %p197;
	shfl.sync.bfly.b32	%r648, %r647, 8, 31, -1;
	selp.b32 	%r540, %r608, %r648, %p197;
	selp.b32 	%r541, %r648, %r610, %p197;
	selp.b32 	%r649, %r624, %r622, %p197;
	shfl.sync.bfly.b32	%r650, %r649, 8, 31, -1;
	selp.b32 	%r548, %r622, %r650, %p197;
	selp.b32 	%r549, %r650, %r624, %p197;
	selp.b32 	%r651, %r625, %r623, %p197;
	shfl.sync.bfly.b32	%r652, %r651, 8, 31, -1;
	selp.b32 	%r556, %r623, %r652, %p197;
	selp.b32 	%r557, %r652, %r625, %p197;
	selp.b32 	%r653, %r639, %r637, %p197;
	shfl.sync.bfly.b32	%r654, %r653, 8, 31, -1;
	selp.b32 	%r564, %r637, %r654, %p197;
	selp.b32 	%r565, %r654, %r639, %p197;
	selp.b32 	%r655, %r640, %r638, %p197;
	shfl.sync.bfly.b32	%r656, %r655, 8, 31, -1;
	selp.b32 	%r572, %r638, %r656, %p197;
	selp.b32 	%r573, %r656, %r640, %p197;
	mov.u32 	%r574, 21520;
	// begin inline asm
	prmt.b32 %r515, %r516, %r517, %r574;
	// end inline asm
	mov.u32 	%r578, 30258;
	// begin inline asm
	prmt.b32 %r519, %r516, %r517, %r578;
	// end inline asm
	// begin inline asm
	prmt.b32 %r523, %r524, %r525, %r574;
	// end inline asm
	// begin inline asm
	prmt.b32 %r527, %r524, %r525, %r578;
	// end inline asm
	// begin inline asm
	prmt.b32 %r531, %r532, %r533, %r574;
	// end inline asm
	// begin inline asm
	prmt.b32 %r535, %r532, %r533, %r578;
	// end inline asm
	// begin inline asm
	prmt.b32 %r539, %r540, %r541, %r574;
	// end inline asm
	// begin inline asm
	prmt.b32 %r543, %r540, %r541, %r578;
	// end inline asm
	// begin inline asm
	prmt.b32 %r547, %r548, %r549, %r574;
	// end inline asm
	// begin inline asm
	prmt.b32 %r551, %r548, %r549, %r578;
	// end inline asm
	// begin inline asm
	prmt.b32 %r555, %r556, %r557, %r574;
	// end inline asm
	// begin inline asm
	prmt.b32 %r559, %r556, %r557, %r578;
	// end inline asm
	// begin inline asm
	prmt.b32 %r563, %r564, %r565, %r574;
	// end inline asm
	// begin inline asm
	prmt.b32 %r567, %r564, %r565, %r578;
	// end inline asm
	// begin inline asm
	prmt.b32 %r571, %r572, %r573, %r574;
	// end inline asm
	// begin inline asm
	prmt.b32 %r575, %r572, %r573, %r578;
	// end inline asm
	st.shared.u32 	[%rd6], %r515;
	st.shared.u32 	[%rd7], %r519;
	st.shared.u32 	[%rd8], %r523;
	st.shared.u32 	[%rd9], %r527;
	st.shared.u32 	[%rd10], %r531;
	st.shared.u32 	[%rd11], %r535;
	st.shared.u32 	[%rd12], %r539;
	st.shared.u32 	[%rd13], %r543;
	st.shared.u32 	[%rd14], %r547;
	st.shared.u32 	[%rd15], %r551;
	st.shared.u32 	[%rd16], %r555;
	st.shared.u32 	[%rd17], %r559;
	st.shared.u32 	[%rd18], %r563;
	st.shared.u32 	[%rd19], %r567;
	st.shared.u32 	[%rd20], %r571;
	st.shared.u32 	[%rd21], %r575;
	bar.sync 	0;
	mov.u64 	%rd155, %rd35;
	mov.u64 	%rd156, %rd34;
	mov.u32 	%r2599, %r2577;
	mov.u32 	%r2600, %r2589;
	mov.u32 	%r2601, %r2588;
	mov.u32 	%r2602, %r2587;
	mov.u32 	%r2603, %r2586;
$L__BB0_91:                             // %pass5668
                                        //   Parent Loop BB0_90 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	mov.u32 	%r2587, %r2598;
	mov.u32 	%r2586, %r2597;
	or.b32  	%r2453, %r70, %r2599;
	add.s32 	%r2454, %r2453, %r80;
	or.b32  	%r2455, %r2454, %r66;
	bfe.s32 	%r2456, %r2455, 3, 1;
	and.b32  	%r2457, %r2456, 65;
	bfe.s32 	%r2458, %r2454, 1, 1;
	and.b32  	%r2459, %r2458, 260;
	and.b32  	%r2460, %r2454, 1;
	neg.s32 	%r2461, %r2460;
	and.b32  	%r2462, %r2461, 520;
	bfe.u32 	%r2463, %r2454, 5, 3;
	mul.lo.s32 	%r2464, %r2463, 1057;
	bfe.s32 	%r2465, %r2455, 2, 1;
	and.b32  	%r2466, %r2465, 130;
	or.b32  	%r2467, %r71, %r2462;
	add.s32 	%r2468, %r2467, %r2457;
	add.s32 	%r2469, %r2468, %r2459;
	add.s32 	%r2470, %r2469, %r2464;
	add.s32 	%r2471, %r2470, %r2466;
	mul.wide.u32 	%rd109, %r2471, 4;
	add.s64 	%rd111, %rd53, %rd109;
	ld.shared.u32 	%r2588, [%rd111];
	add.s32 	%r2472, %r72, %r2462;
	add.s32 	%r2473, %r2472, %r2457;
	add.s32 	%r2474, %r2473, %r2459;
	add.s32 	%r2475, %r2474, %r2464;
	add.s32 	%r2476, %r2475, %r2466;
	mul.wide.u32 	%rd112, %r2476, 4;
	add.s64 	%rd113, %rd53, %rd112;
	ld.shared.u32 	%r2589, [%rd113];
	// begin inline asm
	mov.b32 %r662, {%rs304, %rs304};
	// end inline asm
	// begin inline asm
	mov.b32 %r673, {%rs252, %rs252};
	// end inline asm
	xor.b32  	%r661, %r2588, -2004318072;
	mov.u32 	%r660, 983055;
	// begin inline asm
	lop3.b32 %r659, %r660, %r661, %r662, 202;
	// end inline asm
	mov.u16 	%rs21, 18432;
	// begin inline asm
	mov.b32 %r663, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r664, %r662, %r663;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r667, %r659, %r664;
	// end inline asm
	mov.u32 	%r671, 15728880;
	// begin inline asm
	lop3.b32 %r670, %r671, %r661, %r673, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r674, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r675, %r673, %r674;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r678, %r670, %r675;
	// end inline asm
	shr.u32 	%r683, %r661, 8;
	// begin inline asm
	lop3.b32 %r681, %r660, %r683, %r662, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r685, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r686, %r662, %r685;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r689, %r681, %r686;
	// end inline asm
	// begin inline asm
	lop3.b32 %r692, %r671, %r683, %r673, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r696, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r697, %r673, %r696;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r700, %r692, %r697;
	// end inline asm
	// begin inline asm
	mov.b32 %r708, {%rs304, %rs304};
	// end inline asm
	// begin inline asm
	mov.b32 %r719, {%rs252, %rs252};
	// end inline asm
	xor.b32  	%r707, %r2589, -2004318072;
	// begin inline asm
	lop3.b32 %r705, %r660, %r707, %r708, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r709, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r710, %r708, %r709;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r713, %r705, %r710;
	// end inline asm
	// begin inline asm
	lop3.b32 %r716, %r671, %r707, %r719, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r720, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r721, %r719, %r720;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r724, %r716, %r721;
	// end inline asm
	shr.u32 	%r729, %r707, 8;
	// begin inline asm
	lop3.b32 %r727, %r660, %r729, %r708, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r731, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r732, %r708, %r731;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r735, %r727, %r732;
	// end inline asm
	// begin inline asm
	lop3.b32 %r738, %r671, %r729, %r719, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r742, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r743, %r719, %r742;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r746, %r738, %r743;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r749, %r235;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r751, %r749, %r667;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r754, %r235;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r756, %r754, %r678;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r759, %r235;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r761, %r759, %r689;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r764, %r235;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r766, %r764, %r700;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r769, %r235;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r771, %r769, %r713;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r774, %r235;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r776, %r774, %r724;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r779, %r235;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r781, %r779, %r735;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r784, %r235;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r786, %r784, %r746;
	// end inline asm
	// begin inline asm
	mov.b32 %r794, {%rs304, %rs304};
	// end inline asm
	// begin inline asm
	mov.b32 %r805, {%rs252, %rs252};
	// end inline asm
	xor.b32  	%r793, %r2603, -2004318072;
	// begin inline asm
	lop3.b32 %r791, %r660, %r793, %r794, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r795, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r796, %r794, %r795;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r799, %r791, %r796;
	// end inline asm
	// begin inline asm
	lop3.b32 %r802, %r671, %r793, %r805, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r806, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r807, %r805, %r806;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r810, %r802, %r807;
	// end inline asm
	shr.u32 	%r815, %r793, 8;
	// begin inline asm
	lop3.b32 %r813, %r660, %r815, %r794, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r817, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r818, %r794, %r817;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r821, %r813, %r818;
	// end inline asm
	// begin inline asm
	lop3.b32 %r824, %r671, %r815, %r805, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r828, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r829, %r805, %r828;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r832, %r824, %r829;
	// end inline asm
	// begin inline asm
	mov.b32 %r840, {%rs304, %rs304};
	// end inline asm
	// begin inline asm
	mov.b32 %r851, {%rs252, %rs252};
	// end inline asm
	xor.b32  	%r839, %r2602, -2004318072;
	// begin inline asm
	lop3.b32 %r837, %r660, %r839, %r840, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r841, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r842, %r840, %r841;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r845, %r837, %r842;
	// end inline asm
	// begin inline asm
	lop3.b32 %r848, %r671, %r839, %r851, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r852, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r853, %r851, %r852;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r856, %r848, %r853;
	// end inline asm
	shr.u32 	%r861, %r839, 8;
	// begin inline asm
	lop3.b32 %r859, %r660, %r861, %r840, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r863, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r864, %r840, %r863;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r867, %r859, %r864;
	// end inline asm
	// begin inline asm
	lop3.b32 %r870, %r671, %r861, %r851, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r874, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r875, %r851, %r874;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r878, %r870, %r875;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r881, %r181, %r799, %r751;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r885, %r181, %r810, %r756;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r889, %r181, %r821, %r761;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r893, %r181, %r832, %r766;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r897, %r181, %r845, %r771;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r901, %r181, %r856, %r776;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r905, %r181, %r867, %r781;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r909, %r181, %r878, %r786;
	// end inline asm
	// begin inline asm
	mov.b32 %r918, {%rs304, %rs304};
	// end inline asm
	// begin inline asm
	mov.b32 %r929, {%rs252, %rs252};
	// end inline asm
	xor.b32  	%r917, %r2601, -2004318072;
	// begin inline asm
	lop3.b32 %r915, %r660, %r917, %r918, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r919, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r920, %r918, %r919;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r923, %r915, %r920;
	// end inline asm
	// begin inline asm
	lop3.b32 %r926, %r671, %r917, %r929, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r930, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r931, %r929, %r930;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r934, %r926, %r931;
	// end inline asm
	shr.u32 	%r939, %r917, 8;
	// begin inline asm
	lop3.b32 %r937, %r660, %r939, %r918, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r941, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r942, %r918, %r941;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r945, %r937, %r942;
	// end inline asm
	// begin inline asm
	lop3.b32 %r948, %r671, %r939, %r929, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r952, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r953, %r929, %r952;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r956, %r948, %r953;
	// end inline asm
	// begin inline asm
	mov.b32 %r964, {%rs304, %rs304};
	// end inline asm
	// begin inline asm
	mov.b32 %r975, {%rs252, %rs252};
	// end inline asm
	xor.b32  	%r963, %r2600, -2004318072;
	// begin inline asm
	lop3.b32 %r961, %r660, %r963, %r964, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r965, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r966, %r964, %r965;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r969, %r961, %r966;
	// end inline asm
	// begin inline asm
	lop3.b32 %r972, %r671, %r963, %r975, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r976, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r977, %r975, %r976;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r980, %r972, %r977;
	// end inline asm
	shr.u32 	%r985, %r963, 8;
	// begin inline asm
	lop3.b32 %r983, %r660, %r985, %r964, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r987, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r988, %r964, %r987;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r991, %r983, %r988;
	// end inline asm
	// begin inline asm
	lop3.b32 %r994, %r671, %r985, %r975, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r998, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r999, %r975, %r998;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1002, %r994, %r999;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1005, %r199;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1007, %r1005, %r923, %r881;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1011, %r199;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1013, %r1011, %r934, %r885;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1017, %r199;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1019, %r1017, %r945, %r889;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1023, %r199;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1025, %r1023, %r956, %r893;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1029, %r199;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1031, %r1029, %r969, %r897;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1035, %r199;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1037, %r1035, %r980, %r901;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1041, %r199;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1043, %r1041, %r991, %r905;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1047, %r199;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1049, %r1047, %r1002, %r909;
	// end inline asm
	// begin inline asm
	mov.b32 %r1058, {%rs304, %rs304};
	// end inline asm
	// begin inline asm
	mov.b32 %r1069, {%rs252, %rs252};
	// end inline asm
	xor.b32  	%r1057, %r2586, -2004318072;
	// begin inline asm
	lop3.b32 %r1055, %r660, %r1057, %r1058, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1059, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1060, %r1058, %r1059;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1063, %r1055, %r1060;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1066, %r671, %r1057, %r1069, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1070, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1071, %r1069, %r1070;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1074, %r1066, %r1071;
	// end inline asm
	shr.u32 	%r1079, %r1057, 8;
	// begin inline asm
	lop3.b32 %r1077, %r660, %r1079, %r1058, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1081, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1082, %r1058, %r1081;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1085, %r1077, %r1082;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1088, %r671, %r1079, %r1069, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1092, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1093, %r1069, %r1092;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1096, %r1088, %r1093;
	// end inline asm
	// begin inline asm
	mov.b32 %r1104, {%rs304, %rs304};
	// end inline asm
	// begin inline asm
	mov.b32 %r1115, {%rs252, %rs252};
	// end inline asm
	xor.b32  	%r1103, %r2587, -2004318072;
	// begin inline asm
	lop3.b32 %r1101, %r660, %r1103, %r1104, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1105, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1106, %r1104, %r1105;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1109, %r1101, %r1106;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1112, %r671, %r1103, %r1115, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1116, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1117, %r1115, %r1116;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1120, %r1112, %r1117;
	// end inline asm
	shr.u32 	%r1125, %r1103, 8;
	// begin inline asm
	lop3.b32 %r1123, %r660, %r1125, %r1104, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1127, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1128, %r1104, %r1127;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1131, %r1123, %r1128;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1134, %r671, %r1125, %r1115, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1138, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1139, %r1115, %r1138;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1142, %r1134, %r1139;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1184, %r217, %r1063, %r1007;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1181, %r217, %r1074, %r1013;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1193, %r217, %r1085, %r1019;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1190, %r217, %r1096, %r1025;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1202, %r217, %r1109, %r1031;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1199, %r217, %r1120, %r1037;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1211, %r217, %r1131, %r1043;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1208, %r217, %r1142, %r1049;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1177, %r241;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1179, %r1177, %r1181;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1182, %r238, %r1184, %r1179;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1186, %r241;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1188, %r1186, %r1190;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1191, %r238, %r1193, %r1188;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1195, %r241;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1197, %r1195, %r1199;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1200, %r238, %r1202, %r1197;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1204, %r241;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1206, %r1204, %r1208;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1209, %r238, %r1211, %r1206;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1213, %r241, %r1184;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1216, %r238, %r1181, %r1213;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1220, %r241, %r1193;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1223, %r238, %r1190, %r1220;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1227, %r241, %r1202;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1230, %r238, %r1199, %r1227;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1234, %r241, %r1211;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1237, %r238, %r1208, %r1234;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1288, %r1285}, {%r298, %r304, %r301, %r307}, {%r1182, %r1216}, {%r2577, %r2577};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1297, %r1294}, {%r298, %r304, %r301, %r307}, {%r1191, %r1223}, {%r2577, %r2577};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1306, %r1303}, {%r298, %r304, %r301, %r307}, {%r1200, %r1230}, {%r2577, %r2577};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1315, %r1312}, {%r298, %r304, %r301, %r307}, {%r1209, %r1237}, {%r2577, %r2577};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1281, %r348;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1283, %r1281, %r1285;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1286, %r345, %r1288, %r1283;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1290, %r348;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1292, %r1290, %r1294;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1295, %r345, %r1297, %r1292;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1299, %r348;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1301, %r1299, %r1303;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1304, %r345, %r1306, %r1301;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1308, %r348;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1310, %r1308, %r1312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1313, %r345, %r1315, %r1310;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1317, %r348, %r1288;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1320, %r345, %r1285, %r1317;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1324, %r348, %r1297;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1327, %r345, %r1294, %r1324;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1331, %r348, %r1306;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1334, %r345, %r1303, %r1331;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1338, %r348, %r1315;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1341, %r345, %r1312, %r1338;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1345, %r1346}, {%r385, %r391, %r388, %r394}, {%r1286, %r1320}, {%r2577, %r2577};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1355, %r1356}, {%r385, %r391, %r388, %r394}, {%r1295, %r1327}, {%r2577, %r2577};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1365, %r1366}, {%r385, %r391, %r388, %r394}, {%r1304, %r1334}, {%r2577, %r2577};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1375, %r1376}, {%r385, %r391, %r388, %r394}, {%r1313, %r1341}, {%r2577, %r2577};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1385, %r88, %r1345;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1388, %r88, %r1346;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1391, %r88, %r1355;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1394, %r88, %r1356;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1397, %r88, %r1365;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1400, %r88, %r1366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1403, %r88, %r1375;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1406, %r88, %r1376;
	// end inline asm
	mov.u16 	%rs113, -14592;
	// begin inline asm
	mov.b32 %r1409, {%rs113, %rs113};
	// end inline asm
	mov.u16 	%rs115, 18176;
	// begin inline asm
	mov.b32 %r1410, {%rs115, %rs115};
	// end inline asm
	// begin inline asm
	max.f16x2 %r1411, %r1385, %r1409;
	// end inline asm
	// begin inline asm
	min.f16x2 %r1414, %r1411, %r1410;
	// end inline asm
	// begin inline asm
	mov.b32 %r1417, {%rs113, %rs113};
	// end inline asm
	// begin inline asm
	mov.b32 %r1418, {%rs115, %rs115};
	// end inline asm
	// begin inline asm
	max.f16x2 %r1419, %r1388, %r1417;
	// end inline asm
	// begin inline asm
	min.f16x2 %r1422, %r1419, %r1418;
	// end inline asm
	// begin inline asm
	mov.b32 %r1425, {%rs113, %rs113};
	// end inline asm
	// begin inline asm
	mov.b32 %r1426, {%rs115, %rs115};
	// end inline asm
	// begin inline asm
	max.f16x2 %r1427, %r1391, %r1425;
	// end inline asm
	// begin inline asm
	min.f16x2 %r1430, %r1427, %r1426;
	// end inline asm
	// begin inline asm
	mov.b32 %r1433, {%rs113, %rs113};
	// end inline asm
	// begin inline asm
	mov.b32 %r1434, {%rs115, %rs115};
	// end inline asm
	// begin inline asm
	max.f16x2 %r1435, %r1394, %r1433;
	// end inline asm
	// begin inline asm
	min.f16x2 %r1438, %r1435, %r1434;
	// end inline asm
	// begin inline asm
	mov.b32 %r1441, {%rs113, %rs113};
	// end inline asm
	// begin inline asm
	mov.b32 %r1442, {%rs115, %rs115};
	// end inline asm
	// begin inline asm
	max.f16x2 %r1443, %r1397, %r1441;
	// end inline asm
	// begin inline asm
	min.f16x2 %r1446, %r1443, %r1442;
	// end inline asm
	// begin inline asm
	mov.b32 %r1449, {%rs113, %rs113};
	// end inline asm
	// begin inline asm
	mov.b32 %r1450, {%rs115, %rs115};
	// end inline asm
	// begin inline asm
	max.f16x2 %r1451, %r1400, %r1449;
	// end inline asm
	// begin inline asm
	min.f16x2 %r1454, %r1451, %r1450;
	// end inline asm
	// begin inline asm
	mov.b32 %r1457, {%rs113, %rs113};
	// end inline asm
	// begin inline asm
	mov.b32 %r1458, {%rs115, %rs115};
	// end inline asm
	// begin inline asm
	max.f16x2 %r1459, %r1403, %r1457;
	// end inline asm
	// begin inline asm
	min.f16x2 %r1462, %r1459, %r1458;
	// end inline asm
	// begin inline asm
	mov.b32 %r1465, {%rs113, %rs113};
	// end inline asm
	// begin inline asm
	mov.b32 %r1466, {%rs115, %rs115};
	// end inline asm
	// begin inline asm
	max.f16x2 %r1467, %r1406, %r1465;
	// end inline asm
	// begin inline asm
	min.f16x2 %r1470, %r1467, %r1466;
	// end inline asm
	// begin inline asm
	mov.b32 %r1476, {%rs304, %rs304};
	// end inline asm
	// begin inline asm
	mov.b32 %r1474, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1475, %r1476, %r1474;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1478, %r1414, %r1475;
	// end inline asm
	// begin inline asm
	mov.b32 %r1481, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1482, %r1476, %r1481;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1485, %r1422, %r1482;
	// end inline asm
	// begin inline asm
	mov.b32 %r1488, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1489, %r1476, %r1488;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1492, %r1430, %r1489;
	// end inline asm
	// begin inline asm
	mov.b32 %r1495, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1496, %r1476, %r1495;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1499, %r1438, %r1496;
	// end inline asm
	mov.u32 	%r1505, 25152;
	// begin inline asm
	prmt.b32 %r1502, %r1478, %r1492, %r1505;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1506, %r1485, %r1499, %r1505;
	// end inline asm
	shl.b32 	%r1513, %r1506, 4;
	mov.u32 	%r1511, 252645135;
	// begin inline asm
	lop3.b32 %r1510, %r1511, %r1502, %r1513, 202;
	// end inline asm
	xor.b32  	%r2477, %r1510, -2004318072;
	// begin inline asm
	mov.b32 %r1517, {%rs304, %rs304};
	// end inline asm
	// begin inline asm
	mov.b32 %r1515, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1516, %r1517, %r1515;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1519, %r1446, %r1516;
	// end inline asm
	// begin inline asm
	mov.b32 %r1522, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1523, %r1517, %r1522;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1526, %r1454, %r1523;
	// end inline asm
	// begin inline asm
	mov.b32 %r1529, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1530, %r1517, %r1529;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1533, %r1462, %r1530;
	// end inline asm
	// begin inline asm
	mov.b32 %r1536, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1537, %r1517, %r1536;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1540, %r1470, %r1537;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1543, %r1519, %r1533, %r1505;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1547, %r1526, %r1540, %r1505;
	// end inline asm
	shl.b32 	%r1554, %r1547, 4;
	// begin inline asm
	lop3.b32 %r1551, %r1511, %r1543, %r1554, 202;
	// end inline asm
	xor.b32  	%r2478, %r1551, -2004318072;
	st.shared.u32 	[%rd155], %r2477;
	st.shared.u32 	[%rd156], %r2478;
	ld.shared.u32 	%r2597, [%rd111];
	ld.shared.u32 	%r2598, [%rd113];
	// begin inline asm
	mov.b32 %r1560, {%rs304, %rs304};
	// end inline asm
	// begin inline asm
	mov.b32 %r1571, {%rs252, %rs252};
	// end inline asm
	xor.b32  	%r1559, %r2597, -2004318072;
	// begin inline asm
	lop3.b32 %r1557, %r660, %r1559, %r1560, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1561, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1562, %r1560, %r1561;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1565, %r1557, %r1562;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1568, %r671, %r1559, %r1571, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1572, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1573, %r1571, %r1572;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1576, %r1568, %r1573;
	// end inline asm
	shr.u32 	%r1581, %r1559, 8;
	// begin inline asm
	lop3.b32 %r1579, %r660, %r1581, %r1560, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1583, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1584, %r1560, %r1583;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1587, %r1579, %r1584;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1590, %r671, %r1581, %r1571, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1594, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1595, %r1571, %r1594;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1598, %r1590, %r1595;
	// end inline asm
	// begin inline asm
	mov.b32 %r1606, {%rs304, %rs304};
	// end inline asm
	// begin inline asm
	mov.b32 %r1617, {%rs252, %rs252};
	// end inline asm
	xor.b32  	%r1605, %r2598, -2004318072;
	// begin inline asm
	lop3.b32 %r1603, %r660, %r1605, %r1606, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1607, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1608, %r1606, %r1607;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1611, %r1603, %r1608;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1614, %r671, %r1605, %r1617, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1618, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1619, %r1617, %r1618;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1622, %r1614, %r1619;
	// end inline asm
	shr.u32 	%r1627, %r1605, 8;
	// begin inline asm
	lop3.b32 %r1625, %r660, %r1627, %r1606, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1629, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1630, %r1606, %r1629;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1633, %r1625, %r1630;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1636, %r671, %r1627, %r1617, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1640, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1641, %r1617, %r1640;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1644, %r1636, %r1641;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1647, %r235;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1649, %r1647, %r1565;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1652, %r235;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1654, %r1652, %r1576;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1657, %r235;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1659, %r1657, %r1587;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1662, %r235;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1664, %r1662, %r1598;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1667, %r235;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1669, %r1667, %r1611;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1672, %r235;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1674, %r1672, %r1622;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1677, %r235;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1679, %r1677, %r1633;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1682, %r235;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1684, %r1682, %r1644;
	// end inline asm
	// begin inline asm
	mov.b32 %r1692, {%rs304, %rs304};
	// end inline asm
	// begin inline asm
	mov.b32 %r1703, {%rs252, %rs252};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1689, %r660, %r917, %r1692, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1693, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1694, %r1692, %r1693;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1697, %r1689, %r1694;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1700, %r671, %r917, %r1703, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1704, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1705, %r1703, %r1704;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1708, %r1700, %r1705;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1711, %r660, %r939, %r1692, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1715, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1716, %r1692, %r1715;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1719, %r1711, %r1716;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1722, %r671, %r939, %r1703, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1726, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1727, %r1703, %r1726;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1730, %r1722, %r1727;
	// end inline asm
	// begin inline asm
	mov.b32 %r1738, {%rs304, %rs304};
	// end inline asm
	// begin inline asm
	mov.b32 %r1749, {%rs252, %rs252};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1735, %r660, %r963, %r1738, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1739, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1740, %r1738, %r1739;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1743, %r1735, %r1740;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1746, %r671, %r963, %r1749, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1750, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1751, %r1749, %r1750;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1754, %r1746, %r1751;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1757, %r660, %r985, %r1738, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1761, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1762, %r1738, %r1761;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1765, %r1757, %r1762;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1768, %r671, %r985, %r1749, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1772, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1773, %r1749, %r1772;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1776, %r1768, %r1773;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1779, %r181, %r1697, %r1649;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1783, %r181, %r1708, %r1654;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1787, %r181, %r1719, %r1659;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1791, %r181, %r1730, %r1664;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1795, %r181, %r1743, %r1669;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1799, %r181, %r1754, %r1674;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1803, %r181, %r1765, %r1679;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1807, %r181, %r1776, %r1684;
	// end inline asm
	// begin inline asm
	mov.b32 %r1816, {%rs304, %rs304};
	// end inline asm
	// begin inline asm
	mov.b32 %r1827, {%rs252, %rs252};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1813, %r660, %r1057, %r1816, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1817, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1818, %r1816, %r1817;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1821, %r1813, %r1818;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1824, %r671, %r1057, %r1827, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1828, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1829, %r1827, %r1828;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1832, %r1824, %r1829;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1835, %r660, %r1079, %r1816, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1839, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1840, %r1816, %r1839;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1843, %r1835, %r1840;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1846, %r671, %r1079, %r1827, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1850, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1851, %r1827, %r1850;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1854, %r1846, %r1851;
	// end inline asm
	// begin inline asm
	mov.b32 %r1862, {%rs304, %rs304};
	// end inline asm
	// begin inline asm
	mov.b32 %r1873, {%rs252, %rs252};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1859, %r660, %r1103, %r1862, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1863, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1864, %r1862, %r1863;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1867, %r1859, %r1864;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1870, %r671, %r1103, %r1873, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1874, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1875, %r1873, %r1874;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1878, %r1870, %r1875;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1881, %r660, %r1125, %r1862, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1885, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1886, %r1862, %r1885;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1889, %r1881, %r1886;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1892, %r671, %r1125, %r1873, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1896, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1897, %r1873, %r1896;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1900, %r1892, %r1897;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1903, %r199;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1905, %r1903, %r1821, %r1779;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1909, %r199;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1911, %r1909, %r1832, %r1783;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1915, %r199;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1917, %r1915, %r1843, %r1787;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1921, %r199;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1923, %r1921, %r1854, %r1791;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1927, %r199;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1929, %r1927, %r1867, %r1795;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1933, %r199;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1935, %r1933, %r1878, %r1799;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1939, %r199;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1941, %r1939, %r1889, %r1803;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1945, %r199;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1947, %r1945, %r1900, %r1807;
	// end inline asm
	// begin inline asm
	mov.b32 %r1956, {%rs304, %rs304};
	// end inline asm
	// begin inline asm
	mov.b32 %r1967, {%rs252, %rs252};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1953, %r660, %r661, %r1956, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1957, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1958, %r1956, %r1957;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1961, %r1953, %r1958;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1964, %r671, %r661, %r1967, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1968, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1969, %r1967, %r1968;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1972, %r1964, %r1969;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1975, %r660, %r683, %r1956, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1979, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1980, %r1956, %r1979;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1983, %r1975, %r1980;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1986, %r671, %r683, %r1967, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1990, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1991, %r1967, %r1990;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1994, %r1986, %r1991;
	// end inline asm
	// begin inline asm
	mov.b32 %r2002, {%rs304, %rs304};
	// end inline asm
	// begin inline asm
	mov.b32 %r2013, {%rs252, %rs252};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1999, %r660, %r707, %r2002, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2003, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2004, %r2002, %r2003;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2007, %r1999, %r2004;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2010, %r671, %r707, %r2013, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2014, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2015, %r2013, %r2014;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2018, %r2010, %r2015;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2021, %r660, %r729, %r2002, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2025, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2026, %r2002, %r2025;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2029, %r2021, %r2026;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2032, %r671, %r729, %r2013, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2036, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2037, %r2013, %r2036;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2040, %r2032, %r2037;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2082, %r217, %r1961, %r1905;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2079, %r217, %r1972, %r1911;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2091, %r217, %r1983, %r1917;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2088, %r217, %r1994, %r1923;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2100, %r217, %r2007, %r1929;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2097, %r217, %r2018, %r1935;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2109, %r217, %r2029, %r1941;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2106, %r217, %r2040, %r1947;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2075, %r241;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2077, %r2075, %r2079;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2080, %r238, %r2082, %r2077;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2084, %r241;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2086, %r2084, %r2088;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2089, %r238, %r2091, %r2086;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2093, %r241;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2095, %r2093, %r2097;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2098, %r238, %r2100, %r2095;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2102, %r241;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2104, %r2102, %r2106;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2107, %r238, %r2109, %r2104;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2111, %r241, %r2082;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2114, %r238, %r2079, %r2111;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2118, %r241, %r2091;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2121, %r238, %r2088, %r2118;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2125, %r241, %r2100;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2128, %r238, %r2097, %r2125;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2132, %r241, %r2109;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2135, %r238, %r2106, %r2132;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2186, %r2183}, {%r298, %r304, %r301, %r307}, {%r2080, %r2114}, {%r2577, %r2577};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2195, %r2192}, {%r298, %r304, %r301, %r307}, {%r2089, %r2121}, {%r2577, %r2577};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2204, %r2201}, {%r298, %r304, %r301, %r307}, {%r2098, %r2128}, {%r2577, %r2577};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2213, %r2210}, {%r298, %r304, %r301, %r307}, {%r2107, %r2135}, {%r2577, %r2577};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2179, %r348;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2181, %r2179, %r2183;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2184, %r345, %r2186, %r2181;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2188, %r348;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2190, %r2188, %r2192;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2193, %r345, %r2195, %r2190;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2197, %r348;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2199, %r2197, %r2201;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2202, %r345, %r2204, %r2199;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2206, %r348;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2208, %r2206, %r2210;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2211, %r345, %r2213, %r2208;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2215, %r348, %r2186;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2218, %r345, %r2183, %r2215;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2222, %r348, %r2195;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2225, %r345, %r2192, %r2222;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2229, %r348, %r2204;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2232, %r345, %r2201, %r2229;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2236, %r348, %r2213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2239, %r345, %r2210, %r2236;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2243, %r2244}, {%r385, %r391, %r388, %r394}, {%r2184, %r2218}, {%r2577, %r2577};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2253, %r2254}, {%r385, %r391, %r388, %r394}, {%r2193, %r2225}, {%r2577, %r2577};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2263, %r2264}, {%r385, %r391, %r388, %r394}, {%r2202, %r2232}, {%r2577, %r2577};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2273, %r2274}, {%r385, %r391, %r388, %r394}, {%r2211, %r2239}, {%r2577, %r2577};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2283, %r88, %r2243;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2286, %r88, %r2244;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2289, %r88, %r2253;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2292, %r88, %r2254;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2295, %r88, %r2263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2298, %r88, %r2264;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2301, %r88, %r2273;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2304, %r88, %r2274;
	// end inline asm
	// begin inline asm
	mov.b32 %r2307, {%rs113, %rs113};
	// end inline asm
	// begin inline asm
	mov.b32 %r2308, {%rs115, %rs115};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2309, %r2283, %r2307;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2312, %r2309, %r2308;
	// end inline asm
	// begin inline asm
	mov.b32 %r2315, {%rs113, %rs113};
	// end inline asm
	// begin inline asm
	mov.b32 %r2316, {%rs115, %rs115};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2317, %r2286, %r2315;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2320, %r2317, %r2316;
	// end inline asm
	// begin inline asm
	mov.b32 %r2323, {%rs113, %rs113};
	// end inline asm
	// begin inline asm
	mov.b32 %r2324, {%rs115, %rs115};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2325, %r2289, %r2323;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2328, %r2325, %r2324;
	// end inline asm
	// begin inline asm
	mov.b32 %r2331, {%rs113, %rs113};
	// end inline asm
	// begin inline asm
	mov.b32 %r2332, {%rs115, %rs115};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2333, %r2292, %r2331;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2336, %r2333, %r2332;
	// end inline asm
	// begin inline asm
	mov.b32 %r2339, {%rs113, %rs113};
	// end inline asm
	// begin inline asm
	mov.b32 %r2340, {%rs115, %rs115};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2341, %r2295, %r2339;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2344, %r2341, %r2340;
	// end inline asm
	// begin inline asm
	mov.b32 %r2347, {%rs113, %rs113};
	// end inline asm
	// begin inline asm
	mov.b32 %r2348, {%rs115, %rs115};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2349, %r2298, %r2347;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2352, %r2349, %r2348;
	// end inline asm
	// begin inline asm
	mov.b32 %r2355, {%rs113, %rs113};
	// end inline asm
	// begin inline asm
	mov.b32 %r2356, {%rs115, %rs115};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2357, %r2301, %r2355;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2360, %r2357, %r2356;
	// end inline asm
	// begin inline asm
	mov.b32 %r2363, {%rs113, %rs113};
	// end inline asm
	// begin inline asm
	mov.b32 %r2364, {%rs115, %rs115};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2365, %r2304, %r2363;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2368, %r2365, %r2364;
	// end inline asm
	// begin inline asm
	mov.b32 %r2374, {%rs304, %rs304};
	// end inline asm
	// begin inline asm
	mov.b32 %r2372, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2373, %r2374, %r2372;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2376, %r2312, %r2373;
	// end inline asm
	// begin inline asm
	mov.b32 %r2379, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2380, %r2374, %r2379;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2383, %r2320, %r2380;
	// end inline asm
	// begin inline asm
	mov.b32 %r2386, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2387, %r2374, %r2386;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2390, %r2328, %r2387;
	// end inline asm
	// begin inline asm
	mov.b32 %r2393, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2394, %r2374, %r2393;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2397, %r2336, %r2394;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2400, %r2376, %r2390, %r1505;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2404, %r2383, %r2397, %r1505;
	// end inline asm
	shl.b32 	%r2411, %r2404, 4;
	// begin inline asm
	lop3.b32 %r2408, %r1511, %r2400, %r2411, 202;
	// end inline asm
	xor.b32  	%r2479, %r2408, -2004318072;
	// begin inline asm
	mov.b32 %r2415, {%rs304, %rs304};
	// end inline asm
	// begin inline asm
	mov.b32 %r2413, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2414, %r2415, %r2413;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2417, %r2344, %r2414;
	// end inline asm
	// begin inline asm
	mov.b32 %r2420, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2421, %r2415, %r2420;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2424, %r2352, %r2421;
	// end inline asm
	// begin inline asm
	mov.b32 %r2427, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2428, %r2415, %r2427;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2431, %r2360, %r2428;
	// end inline asm
	// begin inline asm
	mov.b32 %r2434, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2435, %r2415, %r2434;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2438, %r2368, %r2435;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2441, %r2417, %r2431, %r1505;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2445, %r2424, %r2438, %r1505;
	// end inline asm
	shl.b32 	%r2452, %r2445, 4;
	// begin inline asm
	lop3.b32 %r2449, %r1511, %r2441, %r2452, 202;
	// end inline asm
	xor.b32  	%r2480, %r2449, -2004318072;
	st.shared.u32 	[%rd155], %r2479;
	st.shared.u32 	[%rd156], %r2480;
	add.s32 	%r2599, %r2599, 32;
	add.s64 	%rd156, %rd156, 4228;
	add.s64 	%rd155, %rd155, 4228;
	setp.eq.s32 	%p210, %r2599, 256;
	mov.u32 	%r2600, %r2589;
	mov.u32 	%r2601, %r2588;
	mov.u32 	%r2602, %r2587;
	mov.u32 	%r2603, %r2586;
	@%p210 bra 	$L__BB0_92;
	bra.uni 	$L__BB0_91;
$L__BB0_92:                             // %guard_exit10312
                                        //   in Loop: Header=BB0_90 Depth=1
	bar.sync 	0;
	or.b32  	%r2545, %r80, %r63;
	ld.shared.u32 	%r2486, [%rd22];
	ld.shared.u32 	%r2487, [%rd23+128];
	ld.shared.u32 	%r2494, [%rd24+4];
	ld.shared.u32 	%r2495, [%rd23+132];
	shr.u32 	%r125, %r2545, 5;
	ld.shared.u32 	%r2502, [%rd25];
	ld.shared.u32 	%r2503, [%rd26+128];
	ld.shared.u32 	%r2510, [%rd27+4];
	ld.shared.u32 	%r2511, [%rd26+132];
	or.b32  	%r126, %r125, 4;
	ld.shared.u32 	%r2518, [%rd28];
	ld.shared.u32 	%r2519, [%rd29+128];
	ld.shared.u32 	%r2526, [%rd30+4];
	ld.shared.u32 	%r2527, [%rd29+132];
	ld.shared.u32 	%r2534, [%rd31];
	ld.shared.u32 	%r2535, [%rd32+128];
	ld.shared.u32 	%r2542, [%rd33+4];
	ld.shared.u32 	%r2543, [%rd32+132];
	// begin inline asm
	prmt.b32 %r2481, %r2486, %r2487, %r574;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2485, %r2486, %r2487, %r578;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2489, %r2494, %r2495, %r574;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2493, %r2494, %r2495, %r578;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2497, %r2502, %r2503, %r574;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2501, %r2502, %r2503, %r578;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2505, %r2510, %r2511, %r574;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2509, %r2510, %r2511, %r578;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2513, %r2518, %r2519, %r574;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2517, %r2518, %r2519, %r578;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2521, %r2526, %r2527, %r574;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2525, %r2526, %r2527, %r578;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2529, %r2534, %r2535, %r574;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2533, %r2534, %r2535, %r578;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2537, %r2542, %r2543, %r574;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2541, %r2542, %r2543, %r578;
	// end inline asm
	selp.b32 	%r2546, %r2485, %r2481, %p197;
	shfl.sync.bfly.b32	%r2547, %r2546, 8, 31, -1;
	selp.b32 	%r2548, %r2493, %r2489, %p197;
	shfl.sync.bfly.b32	%r2549, %r2548, 8, 31, -1;
	selp.b32 	%r2550, %r2501, %r2497, %p197;
	shfl.sync.bfly.b32	%r131, %r2550, 8, 31, -1;
	selp.b32 	%r2551, %r2509, %r2505, %p197;
	shfl.sync.bfly.b32	%r132, %r2551, 8, 31, -1;
	selp.b32 	%r2552, %r2517, %r2513, %p197;
	shfl.sync.bfly.b32	%r2553, %r2552, 8, 31, -1;
	selp.b32 	%r133, %r2513, %r2553, %p197;
	selp.b32 	%r134, %r2553, %r2517, %p197;
	selp.b32 	%r2554, %r2525, %r2521, %p197;
	shfl.sync.bfly.b32	%r2555, %r2554, 8, 31, -1;
	selp.b32 	%r135, %r2521, %r2555, %p197;
	selp.b32 	%r136, %r2555, %r2525, %p197;
	selp.b32 	%r2556, %r2533, %r2529, %p197;
	shfl.sync.bfly.b32	%r2557, %r2556, 8, 31, -1;
	selp.b32 	%r137, %r2529, %r2557, %p197;
	selp.b32 	%r138, %r2557, %r2533, %p197;
	selp.b32 	%r2558, %r2541, %r2537, %p197;
	shfl.sync.bfly.b32	%r2559, %r2558, 8, 31, -1;
	selp.b32 	%r139, %r2537, %r2559, %p197;
	selp.b32 	%r140, %r2559, %r2541, %p197;
	@%p211 bra 	$L__BB0_94;
// %bb.93:                              // %pass9796
                                        //   in Loop: Header=BB0_90 Depth=1
	selp.b32 	%r2560, %r132, %r2509, %p197;
	selp.b32 	%r2561, %r2505, %r132, %p197;
	selp.b32 	%r2562, %r131, %r2501, %p197;
	selp.b32 	%r2563, %r2497, %r131, %p197;
	or.b32  	%r2564, %r125, 2;
	mad.lo.s32 	%r2565, %r2564, 393216, %r73;
	or.b32  	%r2566, %r2565, %r66;
	or.b32  	%r2567, %r2566, %r67;
	cvt.u64.u32 	%rd114, %r2567;
	add.s64 	%rd115, %rd114, %rd5;
	mul.hi.s64 	%rd116, %rd115, 3074457345618258603;
	shr.u64 	%rd117, %rd116, 63;
	shr.s64 	%rd118, %rd116, 26;
	add.s64 	%rd119, %rd118, %rd117;
	setp.lt.s64 	%p214, %rd115, 0;
	mul.lo.s64 	%rd120, %rd119, 402653184;
	setp.ne.s64 	%p215, %rd120, %rd115;
	and.pred  	%p216, %p214, %p215;
	selp.s64 	%rd121, -1, 0, %p216;
	add.s64 	%rd122, %rd119, %rd121;
	mul.lo.s64 	%rd123, %rd122, 4611686018024734720;
	add.s64 	%rd124, %rd123, %rd115;
	shl.b64 	%rd125, %rd124, 2;
	add.s64 	%rd126, %rd3, %rd125;
	st.global.v4.u32 	[%rd126], {%r2563, %r2561, %r2562, %r2560};
	bra.uni 	$L__BB0_94;
$L__BB0_95:                             // %L22370
	st.global.u32 	[%rd4], %r2577;
	ret;
$L__BB0_7:                              // %L157
	mov.u32 	%r2576, 2;
	st.global.u32 	[%rd4], %r2576;
	mov.u64 	%rd153, exception2053;
	cvta.global.u64 	%rd154, %rd153;
	{ // callseq 2, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd154;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 2
	{ // callseq 3, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd42;
	st.param.b32 	[param0+8], %r141;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 3
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
$L__BB0_1:                              // %L8
	mov.u64 	%rd47, exception12074;
	cvta.global.u64 	%rd48, %rd47;
	{ // callseq 0, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd48;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 0
	{ // callseq 1, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd42;
	st.param.b32 	[param0+8], %r141;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 1
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
                                        // -- End function
}
