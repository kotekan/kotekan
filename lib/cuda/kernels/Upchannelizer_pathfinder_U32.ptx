// PTX kernel code for the CUDA upchannelizer
// This file has been generated automatically by `upchan.jl`.
// Do not modify this file, your changes will be lost.

// PTX CompilerJob of MethodInstance for upchan(::Int32, ::Int32, ::Int32, ::Int32, ::Int32, ::Int32, ::CuDeviceVector{Float16x2, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int32, 1}) for sm_86, minthreads=512, blocks_per_sm=2

//
// Generated by LLVM NVPTX Back-End
//

.version 8.2
.target sm_86
.address_size 64

	// .globl	_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE // -- Begin function _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE
.func gpu_report_exception
(
	.param .b64 gpu_report_exception_param_0
)
.noreturn
{
	trap;
}
.func gpu_signal_exception
(
	.param .align 8 .b8 gpu_signal_exception_param_0[16]
)
.noreturn
{
	trap;
}
.extern .shared .align 32 .b8 shmem[];
.global .align 1 .b8 exception2057[6] = {101, 114, 114, 111, 114, 0};
.global .align 1 .b8 exception12077[10] = {101, 120, 99, 101, 112, 116, 105, 111, 110, 0};
                                        // @_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE
.visible .entry _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE(
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_0[16],
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_1,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_2,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_3,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_4,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_5,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_6,
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_7[32],
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_8[32],
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_9[32],
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_10[32]
)
.reqntid 512, 1, 1
.minnctapersm 2
{
	.reg .pred 	%p<230>;
	.reg .b16 	%rs<303>;
	.reg .b32 	%r<2575>;
	.reg .f32 	%f<847>;
	.reg .b64 	%rd<157>;

// %bb.0:                               // %conversion
	ld.param.u32 	%r144, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_0+8];
	ld.param.u64 	%rd42, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_0];
	// begin inline asm
	mov.u32 %r151, %dynamic_smem_size;
	// end inline asm
	setp.gt.u32 	%p1, %r151, 67839;
	@%p1 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:                              // %L19
	ld.param.u64 	%rd43, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_10];
	ld.param.u32 	%r145, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_1];
	mov.u32 	%r1, %ctaid.x;
	shl.b32 	%r152, %r1, 9;
	mov.u32 	%r2, %tid.y;
	shl.b32 	%r3, %r2, 5;
	mov.u32 	%r4, %tid.x;
	or.b32  	%r153, %r3, %r4;
	or.b32  	%r154, %r153, %r152;
	mul.wide.u32 	%rd49, %r154, 4;
	add.s64 	%rd4, %rd43, %rd49;
	mov.u32 	%r155, 1;
	st.global.u32 	[%rd4], %r155;
	setp.gt.u32 	%p2, %r145, 32767;
	@%p2 bra 	$L__BB0_7;
// %bb.3:                               // %L119
	ld.param.u32 	%r146, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_2];
	setp.lt.s32 	%p3, %r146, %r145;
	setp.gt.s32 	%p4, %r146, 65535;
	or.pred  	%p5, %p3, %p4;
	@%p5 bra 	$L__BB0_7;
// %bb.4:                               // %L126
	ld.param.u32 	%r147, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_3];
	sub.s32 	%r156, %r146, %r145;
	and.b32  	%r157, %r156, 255;
	setp.ne.s32 	%p6, %r157, 0;
	setp.gt.u32 	%p7, %r147, 1023;
	or.pred  	%p8, %p6, %p7;
	@%p8 bra 	$L__BB0_7;
// %bb.5:                               // %L137
	ld.param.u32 	%r148, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_4];
	setp.lt.s32 	%p9, %r148, %r147;
	setp.gt.s32 	%p10, %r148, 2047;
	or.pred  	%p11, %p9, %p10;
	@%p11 bra 	$L__BB0_7;
// %bb.6:                               // %L144
	sub.s32 	%r158, %r148, %r147;
	add.s32 	%r159, %r158, 3;
	and.b32  	%r160, %r159, 7;
	setp.eq.s32 	%p12, %r160, 0;
	@%p12 bra 	$L__BB0_8;
	bra.uni 	$L__BB0_7;
$L__BB0_8:                              // %L260
	ld.param.u32 	%r149, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_5];
	setp.lt.s32 	%p13, %r149, 0;
	@%p13 bra 	$L__BB0_10;
// %bb.9:                               // %L262
	ld.param.u32 	%r150, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_6];
	setp.le.s32 	%p14, %r149, %r150;
	setp.lt.s32 	%p15, %r150, 385;
	and.pred  	%p16, %p14, %p15;
	@%p16 bra 	$L__BB0_11;
	bra.uni 	$L__BB0_10;
$L__BB0_11:                             // %pass168
	bfe.u32 	%r81, %r4, 1, 1;
	and.b32  	%r82, %r4, 1;
	bfe.u32 	%r83, %r4, 2, 1;
	shl.b32 	%r167, %r83, 1;
	shl.b32 	%r168, %r82, 2;
	shl.b32 	%r169, %r81, 3;
	or.b32  	%r170, %r168, %r169;
	or.b32  	%r171, %r167, %r170;
	shr.u32 	%r84, %r4, 4;
	or.b32  	%r85, %r84, %r171;
	or.b32  	%r86, %r85, 16;
	mov.f32 	%f148, 0f40000000;
	mov.f32 	%f149, 0f42FE0000;
	div.approx.f32 	%f86, %f149, %f148;
	cvt.rn.f32.s32 	%f150, %r85;
	sub.f32 	%f151, %f150, %f86;
	mov.f32 	%f180, 0f42000000;
	div.approx.f32 	%f88, %f151, %f180;
	setp.ne.f32 	%p22, %f88, 0f00000000;
	mov.f32 	%f822, 0f3F800000;
	mov.f32 	%f815, %f822;
	@%p22 bra 	$L__BB0_12;
	bra.uni 	$L__BB0_13;
$L__BB0_12:                             // %L580
	sin.approx.f32 	%f181, %f88;
	div.approx.f32 	%f815, %f181, %f88;
$L__BB0_13:                             // %L583
	cvt.rn.f32.s32 	%f184, %r86;
	sub.f32 	%f185, %f184, %f86;
	div.approx.f32 	%f5, %f185, %f180;
	setp.eq.f32 	%p28, %f5, 0f00000000;
	mov.f32 	%f816, %f822;
	@%p28 bra 	$L__BB0_15;
// %bb.14:                              // %L600
	sin.approx.f32 	%f215, %f5;
	div.approx.f32 	%f816, %f215, %f5;
$L__BB0_15:                             // %L603
	or.b32  	%r189, %r85, 32;
	or.b32  	%r6, %r85, 48;
	cvt.rn.f32.s32 	%f219, %r189;
	sub.f32 	%f220, %f219, %f86;
	div.approx.f32 	%f9, %f220, %f180;
	setp.eq.f32 	%p34, %f9, 0f00000000;
	mov.f32 	%f817, %f822;
	@%p34 bra 	$L__BB0_17;
// %bb.16:                              // %L682
	sin.approx.f32 	%f250, %f9;
	div.approx.f32 	%f817, %f250, %f9;
$L__BB0_17:                             // %L685
	cvt.rn.f32.s32 	%f253, %r6;
	sub.f32 	%f254, %f253, %f86;
	div.approx.f32 	%f14, %f254, %f180;
	setp.eq.f32 	%p40, %f14, 0f00000000;
	mov.f32 	%f818, %f822;
	@%p40 bra 	$L__BB0_19;
// %bb.18:                              // %L702
	sin.approx.f32 	%f284, %f14;
	div.approx.f32 	%f818, %f284, %f14;
$L__BB0_19:                             // %L705
	or.b32  	%r207, %r85, 64;
	or.b32  	%r8, %r85, 80;
	cvt.rn.f32.s32 	%f288, %r207;
	sub.f32 	%f289, %f288, %f86;
	div.approx.f32 	%f18, %f289, %f180;
	setp.eq.f32 	%p46, %f18, 0f00000000;
	mov.f32 	%f819, %f822;
	@%p46 bra 	$L__BB0_21;
// %bb.20:                              // %L784
	sin.approx.f32 	%f319, %f18;
	div.approx.f32 	%f819, %f319, %f18;
$L__BB0_21:                             // %L787
	cvt.rn.f32.s32 	%f322, %r8;
	sub.f32 	%f323, %f322, %f86;
	div.approx.f32 	%f23, %f323, %f180;
	setp.eq.f32 	%p52, %f23, 0f00000000;
	mov.f32 	%f820, %f822;
	@%p52 bra 	$L__BB0_23;
// %bb.22:                              // %L804
	sin.approx.f32 	%f353, %f23;
	div.approx.f32 	%f820, %f353, %f23;
$L__BB0_23:                             // %L807
	or.b32  	%r225, %r85, 96;
	or.b32  	%r10, %r85, 112;
	cvt.rn.f32.s32 	%f357, %r225;
	sub.f32 	%f358, %f357, %f86;
	div.approx.f32 	%f27, %f358, %f180;
	setp.eq.f32 	%p58, %f27, 0f00000000;
	mov.f32 	%f821, %f822;
	@%p58 bra 	$L__BB0_25;
// %bb.24:                              // %L886
	sin.approx.f32 	%f388, %f27;
	div.approx.f32 	%f821, %f388, %f27;
$L__BB0_25:                             // %L889
	shr.u32 	%r80, %r4, 1;
	cvt.rn.f32.s32 	%f391, %r10;
	sub.f32 	%f392, %f391, %f86;
	div.approx.f32 	%f32, %f392, %f180;
	setp.eq.f32 	%p64, %f32, 0f00000000;
	@%p64 bra 	$L__BB0_27;
// %bb.26:                              // %L906
	sin.approx.f32 	%f422, %f32;
	div.approx.f32 	%f822, %f422, %f32;
$L__BB0_27:                             // %L909
	shr.u32 	%r14, %r4, 3;
	and.b32  	%r269, %r14, 2;
	and.b32  	%r270, %r80, 4;
	or.b32  	%r15, %r83, %r269;
	or.b32  	%r16, %r15, %r270;
	and.b32  	%r271, %r4, 3;
	mul.lo.s32 	%r272, %r271, %r16;
	shl.b32 	%r273, %r272, 1;
	neg.s32 	%r274, %r273;
	cvt.rn.f32.s32 	%f493, %r274;
	mov.f32 	%f494, 0f41000000;
	div.approx.f32 	%f35, %f493, %f494;
	abs.f32 	%f837, %f35;
	setp.lt.f32 	%p79, %f837, 0f40000000;
	@%p79 bra 	$L__BB0_94;
// %bb.28:
	setp.gtu.f32 	%p80, %f837, 0f4B800000;
	@%p80 bra 	$L__BB0_90;
	bra.uni 	$L__BB0_29;
$L__BB0_90:
	mov.b32 	%r88, %f837;
	and.b32  	%r275, %r88, 8388607;
	or.b32  	%r2560, %r275, 1065353216;
	mov.b32 	%f836, %r2560;
	add.s32 	%r276, %r88, -1073741824;
	and.b32  	%r2561, %r276, -8388608;
	setp.eq.s32 	%p86, %r2561, 0;
	@%p86 bra 	$L__BB0_93;
// %bb.91:                              // %__nv_fmaf_rn.exit4.i.i.i649.preheader
	mov.f32 	%f504, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f503,%f504;
	// end inline asm
$L__BB0_92:                             // %__nv_fmaf_rn.exit4.i.i.i649
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r277, %r2561, 192937984;
	add.s32 	%r278, %r2560, %r277;
	mov.b32 	%f505, %r278;
	mul.f32 	%f506, %f503, %f505;
	sub.f32 	%f507, %f505, %f506;
	fma.rn.f32 	%f508, %f507, %f503, %f506;
	sub.f32 	%f509, %f505, %f508;
	fma.rz.f32 	%f510, %f509, %f503, %f508;
	cvt.rzi.f32.f32 	%f511, %f510;
	sub.f32 	%f836, %f505, %f511;
	sub.s32 	%r2561, %r2561, %r277;
	mov.b32 	%r2560, %f836;
	setp.ne.s32 	%p87, %r2561, 0;
	setp.ne.s32 	%p88, %r2560, 0;
	and.pred  	%p89, %p87, %p88;
	@%p89 bra 	$L__BB0_92;
$L__BB0_93:                             // %__internal_fmodf_slowpath_mod.exit.i.i651
	setp.gt.u32 	%p90, %r88, 2139095039;
	selp.f32 	%f512, 0f7FFFFFFF, 0f4B800000, %p90;
	mul.f32 	%f513, %f836, 0f34000000;
	mul.f32 	%f837, %f512, %f513;
	bra.uni 	$L__BB0_94;
$L__BB0_29:                             // %__nv_fast_fdividef.exit.i.i.i628
	div.approx.f32 	%f496, %f837, %f148;
	cvt.rzi.f32.f32 	%f835, %f496;
	fma.rn.f32 	%f90, %f835, 0fC0000000, %f837;
	mov.b32 	%r87, %f90;
	setp.lt.u32 	%p81, %r87, 1073741824;
	@%p81 bra 	$L__BB0_89;
// %bb.30:
	setp.lt.u32 	%p82, %r87, -2147483647;
	@%p82 bra 	$L__BB0_87;
// %bb.31:
	add.f32 	%f501, %f835, 0fBF800000;
	setp.lt.f32 	%p85, %f90, 0fC0000000;
	add.f32 	%f502, %f501, 0fBF800000;
	selp.f32 	%f835, %f502, %f501, %p85;
	bra.uni 	$L__BB0_89;
$L__BB0_87:
	add.f32 	%f835, %f835, 0f3F800000;
	setp.ltu.f32 	%p83, %f90, 0f40800000;
	@%p83 bra 	$L__BB0_89;
// %bb.88:                              // %__nv_fmaf_rn.exit.i.i.i632
	add.f32 	%f497, %f835, 0f3F800000;
	fma.rn.f32 	%f499, %f148, 0fC0400000, %f90;
	setp.ge.f32 	%p84, %f499, 0f00000000;
	add.f32 	%f500, %f497, 0f3F800000;
	selp.f32 	%f835, %f500, %f497, %p84;
$L__BB0_89:                             // %__internal_fmodf_fastpath_quot.exit.i.i635
	fma.rn.f32 	%f837, %f835, 0fC0000000, %f837;
$L__BB0_94:                             // %__internal_fmodf_kernel.exit.i654
	shl.b32 	%r74, %r4, 1;
	abs.f32 	%f514, %f837;
	setp.gtu.f32 	%p91, %f514, 0f7F800000;
	@%p91 bra 	$L__BB0_96;
// %bb.95:
	mov.b32 	%r279, %f35;
	and.b32  	%r280, %r279, -2147483648;
	mov.b32 	%r281, %f837;
	or.b32  	%r282, %r280, %r281;
	mov.b32 	%f837, %r282;
$L__BB0_96:                             // %__nv_fmodf.exit655
	and.b32  	%r291, %r74, 6;
	mov.u32 	%r292, -8;
	sub.s32 	%r293, %r292, %r291;
	mul.lo.s32 	%r294, %r16, %r293;
	cvt.rn.f32.s32 	%f545, %r294;
	div.approx.f32 	%f106, %f545, %f494;
	abs.f32 	%f825, %f106;
	setp.lt.f32 	%p99, %f825, 0f40000000;
	@%p99 bra 	$L__BB0_43;
// %bb.32:
	setp.gtu.f32 	%p100, %f825, 0f4B800000;
	@%p100 bra 	$L__BB0_39;
	bra.uni 	$L__BB0_33;
$L__BB0_39:
	mov.b32 	%r18, %f825;
	and.b32  	%r295, %r18, 8388607;
	or.b32  	%r2547, %r295, 1065353216;
	mov.b32 	%f824, %r2547;
	add.s32 	%r296, %r18, -1073741824;
	and.b32  	%r2548, %r296, -8388608;
	setp.eq.s32 	%p106, %r2548, 0;
	@%p106 bra 	$L__BB0_42;
// %bb.40:                              // %__nv_fmaf_rn.exit4.i.i.i.preheader
	mov.f32 	%f556, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f555,%f556;
	// end inline asm
$L__BB0_41:                             // %__nv_fmaf_rn.exit4.i.i.i
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r297, %r2548, 192937984;
	add.s32 	%r298, %r2547, %r297;
	mov.b32 	%f557, %r298;
	mul.f32 	%f558, %f555, %f557;
	sub.f32 	%f559, %f557, %f558;
	fma.rn.f32 	%f560, %f559, %f555, %f558;
	sub.f32 	%f561, %f557, %f560;
	fma.rz.f32 	%f562, %f561, %f555, %f560;
	cvt.rzi.f32.f32 	%f563, %f562;
	sub.f32 	%f824, %f557, %f563;
	sub.s32 	%r2548, %r2548, %r297;
	mov.b32 	%r2547, %f824;
	setp.ne.s32 	%p107, %r2548, 0;
	setp.ne.s32 	%p108, %r2547, 0;
	and.pred  	%p109, %p107, %p108;
	@%p109 bra 	$L__BB0_41;
$L__BB0_42:                             // %__internal_fmodf_slowpath_mod.exit.i.i
	setp.gt.u32 	%p110, %r18, 2139095039;
	selp.f32 	%f564, 0f7FFFFFFF, 0f4B800000, %p110;
	mul.f32 	%f565, %f824, 0f34000000;
	mul.f32 	%f825, %f564, %f565;
	bra.uni 	$L__BB0_43;
$L__BB0_33:                             // %__nv_fast_fdividef.exit.i.i.i
	div.approx.f32 	%f548, %f825, %f148;
	cvt.rzi.f32.f32 	%f823, %f548;
	fma.rn.f32 	%f38, %f823, 0fC0000000, %f825;
	mov.b32 	%r17, %f38;
	setp.lt.u32 	%p101, %r17, 1073741824;
	@%p101 bra 	$L__BB0_38;
// %bb.34:
	setp.lt.u32 	%p102, %r17, -2147483647;
	@%p102 bra 	$L__BB0_36;
// %bb.35:
	add.f32 	%f553, %f823, 0fBF800000;
	setp.lt.f32 	%p105, %f38, 0fC0000000;
	add.f32 	%f554, %f553, 0fBF800000;
	selp.f32 	%f823, %f554, %f553, %p105;
	bra.uni 	$L__BB0_38;
$L__BB0_36:
	add.f32 	%f823, %f823, 0f3F800000;
	setp.ltu.f32 	%p103, %f38, 0f40800000;
	@%p103 bra 	$L__BB0_38;
// %bb.37:                              // %__nv_fmaf_rn.exit.i.i.i
	add.f32 	%f549, %f823, 0f3F800000;
	fma.rn.f32 	%f551, %f148, 0fC0400000, %f38;
	setp.ge.f32 	%p104, %f551, 0f00000000;
	add.f32 	%f552, %f549, 0f3F800000;
	selp.f32 	%f823, %f552, %f549, %p104;
$L__BB0_38:                             // %__internal_fmodf_fastpath_quot.exit.i.i
	fma.rn.f32 	%f825, %f823, 0fC0000000, %f825;
$L__BB0_43:                             // %__internal_fmodf_kernel.exit.i
	abs.f32 	%f566, %f825;
	setp.gtu.f32 	%p111, %f566, 0f7F800000;
	@%p111 bra 	$L__BB0_45;
// %bb.44:
	mov.b32 	%r299, %f106;
	and.b32  	%r300, %r299, -2147483648;
	mov.b32 	%r301, %f825;
	or.b32  	%r302, %r300, %r301;
	mov.b32 	%f825, %r302;
$L__BB0_45:                             // %__nv_fmodf.exit
	shl.b32 	%r323, %r81, 1;
	neg.s32 	%r29, %r323;
	mul.lo.s32 	%r30, %r29, %r16;
	cvt.rn.f32.s32 	%f599, %r30;
	div.approx.f32 	%f52, %f599, %f180;
	abs.f32 	%f841, %f52;
	setp.lt.f32 	%p119, %f841, 0f40000000;
	@%p119 bra 	$L__BB0_104;
// %bb.46:
	setp.gtu.f32 	%p120, %f841, 0f4B800000;
	@%p120 bra 	$L__BB0_100;
	bra.uni 	$L__BB0_47;
$L__BB0_100:
	mov.b32 	%r96, %f841;
	and.b32  	%r324, %r96, 8388607;
	or.b32  	%r2562, %r324, 1065353216;
	mov.b32 	%f840, %r2562;
	add.s32 	%r325, %r96, -1073741824;
	and.b32  	%r2563, %r325, -8388608;
	setp.eq.s32 	%p126, %r2563, 0;
	@%p126 bra 	$L__BB0_103;
// %bb.101:                             // %__nv_fmaf_rn.exit4.i.i.i680.preheader
	mov.f32 	%f610, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f609,%f610;
	// end inline asm
$L__BB0_102:                            // %__nv_fmaf_rn.exit4.i.i.i680
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r326, %r2563, 192937984;
	add.s32 	%r327, %r2562, %r326;
	mov.b32 	%f611, %r327;
	mul.f32 	%f612, %f609, %f611;
	sub.f32 	%f613, %f611, %f612;
	fma.rn.f32 	%f614, %f613, %f609, %f612;
	sub.f32 	%f615, %f611, %f614;
	fma.rz.f32 	%f616, %f615, %f609, %f614;
	cvt.rzi.f32.f32 	%f617, %f616;
	sub.f32 	%f840, %f611, %f617;
	sub.s32 	%r2563, %r2563, %r326;
	mov.b32 	%r2562, %f840;
	setp.ne.s32 	%p127, %r2563, 0;
	setp.ne.s32 	%p128, %r2562, 0;
	and.pred  	%p129, %p127, %p128;
	@%p129 bra 	$L__BB0_102;
$L__BB0_103:                            // %__internal_fmodf_slowpath_mod.exit.i.i682
	setp.gt.u32 	%p130, %r96, 2139095039;
	selp.f32 	%f618, 0f7FFFFFFF, 0f4B800000, %p130;
	mul.f32 	%f619, %f840, 0f34000000;
	mul.f32 	%f841, %f618, %f619;
	bra.uni 	$L__BB0_104;
$L__BB0_47:                             // %__nv_fast_fdividef.exit.i.i.i659
	div.approx.f32 	%f602, %f841, %f148;
	cvt.rzi.f32.f32 	%f839, %f602;
	fma.rn.f32 	%f109, %f839, 0fC0000000, %f841;
	mov.b32 	%r95, %f109;
	setp.lt.u32 	%p121, %r95, 1073741824;
	@%p121 bra 	$L__BB0_99;
// %bb.48:
	setp.lt.u32 	%p122, %r95, -2147483647;
	@%p122 bra 	$L__BB0_97;
// %bb.49:
	add.f32 	%f607, %f839, 0fBF800000;
	setp.lt.f32 	%p125, %f109, 0fC0000000;
	add.f32 	%f608, %f607, 0fBF800000;
	selp.f32 	%f839, %f608, %f607, %p125;
	bra.uni 	$L__BB0_99;
$L__BB0_97:
	add.f32 	%f839, %f839, 0f3F800000;
	setp.ltu.f32 	%p123, %f109, 0f40800000;
	@%p123 bra 	$L__BB0_99;
// %bb.98:                              // %__nv_fmaf_rn.exit.i.i.i663
	add.f32 	%f603, %f839, 0f3F800000;
	fma.rn.f32 	%f605, %f148, 0fC0400000, %f109;
	setp.ge.f32 	%p124, %f605, 0f00000000;
	add.f32 	%f606, %f603, 0f3F800000;
	selp.f32 	%f839, %f606, %f603, %p124;
$L__BB0_99:                             // %__internal_fmodf_fastpath_quot.exit.i.i666
	fma.rn.f32 	%f841, %f839, 0fC0000000, %f841;
$L__BB0_104:                            // %__internal_fmodf_kernel.exit.i685
	abs.f32 	%f620, %f841;
	setp.gtu.f32 	%p131, %f620, 0f7F800000;
	@%p131 bra 	$L__BB0_106;
// %bb.105:
	mov.b32 	%r328, %f52;
	and.b32  	%r329, %r328, -2147483648;
	mov.b32 	%r330, %f841;
	or.b32  	%r331, %r329, %r330;
	mov.b32 	%f841, %r331;
$L__BB0_106:                            // %__nv_fmodf.exit686
	shl.b32 	%r340, %r16, 2;
	sub.s32 	%r341, %r30, %r340;
	cvt.rn.f32.s32 	%f651, %r341;
	div.approx.f32 	%f125, %f651, %f180;
	abs.f32 	%f829, %f125;
	setp.lt.f32 	%p139, %f829, 0f40000000;
	@%p139 bra 	$L__BB0_61;
// %bb.50:
	setp.gtu.f32 	%p140, %f829, 0f4B800000;
	@%p140 bra 	$L__BB0_57;
	bra.uni 	$L__BB0_51;
$L__BB0_57:
	mov.b32 	%r32, %f829;
	and.b32  	%r342, %r32, 8388607;
	or.b32  	%r2549, %r342, 1065353216;
	mov.b32 	%f828, %r2549;
	add.s32 	%r343, %r32, -1073741824;
	and.b32  	%r2550, %r343, -8388608;
	setp.eq.s32 	%p146, %r2550, 0;
	@%p146 bra 	$L__BB0_60;
// %bb.58:                              // %__nv_fmaf_rn.exit4.i.i.i587.preheader
	mov.f32 	%f662, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f661,%f662;
	// end inline asm
$L__BB0_59:                             // %__nv_fmaf_rn.exit4.i.i.i587
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r344, %r2550, 192937984;
	add.s32 	%r345, %r2549, %r344;
	mov.b32 	%f663, %r345;
	mul.f32 	%f664, %f661, %f663;
	sub.f32 	%f665, %f663, %f664;
	fma.rn.f32 	%f666, %f665, %f661, %f664;
	sub.f32 	%f667, %f663, %f666;
	fma.rz.f32 	%f668, %f667, %f661, %f666;
	cvt.rzi.f32.f32 	%f669, %f668;
	sub.f32 	%f828, %f663, %f669;
	sub.s32 	%r2550, %r2550, %r344;
	mov.b32 	%r2549, %f828;
	setp.ne.s32 	%p147, %r2550, 0;
	setp.ne.s32 	%p148, %r2549, 0;
	and.pred  	%p149, %p147, %p148;
	@%p149 bra 	$L__BB0_59;
$L__BB0_60:                             // %__internal_fmodf_slowpath_mod.exit.i.i589
	setp.gt.u32 	%p150, %r32, 2139095039;
	selp.f32 	%f670, 0f7FFFFFFF, 0f4B800000, %p150;
	mul.f32 	%f671, %f828, 0f34000000;
	mul.f32 	%f829, %f670, %f671;
	bra.uni 	$L__BB0_61;
$L__BB0_51:                             // %__nv_fast_fdividef.exit.i.i.i566
	div.approx.f32 	%f654, %f829, %f148;
	cvt.rzi.f32.f32 	%f827, %f654;
	fma.rn.f32 	%f55, %f827, 0fC0000000, %f829;
	mov.b32 	%r31, %f55;
	setp.lt.u32 	%p141, %r31, 1073741824;
	@%p141 bra 	$L__BB0_56;
// %bb.52:
	setp.lt.u32 	%p142, %r31, -2147483647;
	@%p142 bra 	$L__BB0_54;
// %bb.53:
	add.f32 	%f659, %f827, 0fBF800000;
	setp.lt.f32 	%p145, %f55, 0fC0000000;
	add.f32 	%f660, %f659, 0fBF800000;
	selp.f32 	%f827, %f660, %f659, %p145;
	bra.uni 	$L__BB0_56;
$L__BB0_54:
	add.f32 	%f827, %f827, 0f3F800000;
	setp.ltu.f32 	%p143, %f55, 0f40800000;
	@%p143 bra 	$L__BB0_56;
// %bb.55:                              // %__nv_fmaf_rn.exit.i.i.i570
	add.f32 	%f655, %f827, 0f3F800000;
	fma.rn.f32 	%f657, %f148, 0fC0400000, %f55;
	setp.ge.f32 	%p144, %f657, 0f00000000;
	add.f32 	%f658, %f655, 0f3F800000;
	selp.f32 	%f827, %f658, %f655, %p144;
$L__BB0_56:                             // %__internal_fmodf_fastpath_quot.exit.i.i573
	fma.rn.f32 	%f829, %f827, 0fC0000000, %f829;
$L__BB0_61:                             // %__internal_fmodf_kernel.exit.i592
	abs.f32 	%f672, %f829;
	setp.gtu.f32 	%p151, %f672, 0f7F800000;
	@%p151 bra 	$L__BB0_63;
// %bb.62:
	mov.b32 	%r346, %f125;
	and.b32  	%r347, %r346, -2147483648;
	mov.b32 	%r348, %f829;
	or.b32  	%r349, %r347, %r348;
	mov.b32 	%f829, %r349;
$L__BB0_63:                             // %__nv_fmodf.exit593
	mul.lo.s32 	%r42, %r29, %r15;
	cvt.rn.f32.s32 	%f705, %r42;
	mov.f32 	%f706, 0f40800000;
	div.approx.f32 	%f69, %f705, %f706;
	abs.f32 	%f845, %f69;
	setp.lt.f32 	%p159, %f845, 0f40000000;
	@%p159 bra 	$L__BB0_114;
// %bb.64:
	setp.gtu.f32 	%p160, %f845, 0f4B800000;
	@%p160 bra 	$L__BB0_110;
	bra.uni 	$L__BB0_65;
$L__BB0_110:
	mov.b32 	%r104, %f845;
	and.b32  	%r364, %r104, 8388607;
	or.b32  	%r2564, %r364, 1065353216;
	mov.b32 	%f844, %r2564;
	add.s32 	%r365, %r104, -1073741824;
	and.b32  	%r2565, %r365, -8388608;
	setp.eq.s32 	%p166, %r2565, 0;
	@%p166 bra 	$L__BB0_113;
// %bb.111:                             // %__nv_fmaf_rn.exit4.i.i.i711.preheader
	mov.f32 	%f716, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f715,%f716;
	// end inline asm
$L__BB0_112:                            // %__nv_fmaf_rn.exit4.i.i.i711
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r366, %r2565, 192937984;
	add.s32 	%r367, %r2564, %r366;
	mov.b32 	%f717, %r367;
	mul.f32 	%f718, %f715, %f717;
	sub.f32 	%f719, %f717, %f718;
	fma.rn.f32 	%f720, %f719, %f715, %f718;
	sub.f32 	%f721, %f717, %f720;
	fma.rz.f32 	%f722, %f721, %f715, %f720;
	cvt.rzi.f32.f32 	%f723, %f722;
	sub.f32 	%f844, %f717, %f723;
	sub.s32 	%r2565, %r2565, %r366;
	mov.b32 	%r2564, %f844;
	setp.ne.s32 	%p167, %r2565, 0;
	setp.ne.s32 	%p168, %r2564, 0;
	and.pred  	%p169, %p167, %p168;
	@%p169 bra 	$L__BB0_112;
$L__BB0_113:                            // %__internal_fmodf_slowpath_mod.exit.i.i713
	setp.gt.u32 	%p170, %r104, 2139095039;
	selp.f32 	%f724, 0f7FFFFFFF, 0f4B800000, %p170;
	mul.f32 	%f725, %f844, 0f34000000;
	mul.f32 	%f845, %f724, %f725;
	bra.uni 	$L__BB0_114;
$L__BB0_65:                             // %__nv_fast_fdividef.exit.i.i.i690
	div.approx.f32 	%f708, %f845, %f148;
	cvt.rzi.f32.f32 	%f843, %f708;
	fma.rn.f32 	%f128, %f843, 0fC0000000, %f845;
	mov.b32 	%r103, %f128;
	setp.lt.u32 	%p161, %r103, 1073741824;
	@%p161 bra 	$L__BB0_109;
// %bb.66:
	setp.lt.u32 	%p162, %r103, -2147483647;
	@%p162 bra 	$L__BB0_107;
// %bb.67:
	add.f32 	%f713, %f843, 0fBF800000;
	setp.lt.f32 	%p165, %f128, 0fC0000000;
	add.f32 	%f714, %f713, 0fBF800000;
	selp.f32 	%f843, %f714, %f713, %p165;
	bra.uni 	$L__BB0_109;
$L__BB0_107:
	add.f32 	%f843, %f843, 0f3F800000;
	setp.ltu.f32 	%p163, %f128, 0f40800000;
	@%p163 bra 	$L__BB0_109;
// %bb.108:                             // %__nv_fmaf_rn.exit.i.i.i694
	add.f32 	%f709, %f843, 0f3F800000;
	fma.rn.f32 	%f711, %f148, 0fC0400000, %f128;
	setp.ge.f32 	%p164, %f711, 0f00000000;
	add.f32 	%f712, %f709, 0f3F800000;
	selp.f32 	%f843, %f712, %f709, %p164;
$L__BB0_109:                            // %__internal_fmodf_fastpath_quot.exit.i.i697
	fma.rn.f32 	%f845, %f843, 0fC0000000, %f845;
$L__BB0_114:                            // %__internal_fmodf_kernel.exit.i716
	abs.f32 	%f726, %f845;
	setp.gtu.f32 	%p171, %f726, 0f7F800000;
	@%p171 bra 	$L__BB0_116;
// %bb.115:
	mov.b32 	%r368, %f69;
	and.b32  	%r369, %r368, -2147483648;
	mov.b32 	%r370, %f845;
	or.b32  	%r371, %r369, %r370;
	mov.b32 	%f845, %r371;
$L__BB0_116:                            // %__nv_fmodf.exit717
	shl.b32 	%r380, %r15, 2;
	sub.s32 	%r381, %r42, %r380;
	cvt.rn.f32.s32 	%f759, %r381;
	div.approx.f32 	%f145, %f759, %f706;
	abs.f32 	%f833, %f145;
	setp.lt.f32 	%p180, %f833, 0f40000000;
	@%p180 bra 	$L__BB0_79;
// %bb.68:
	setp.gtu.f32 	%p181, %f833, 0f4B800000;
	@%p181 bra 	$L__BB0_75;
	bra.uni 	$L__BB0_69;
$L__BB0_75:
	mov.b32 	%r44, %f833;
	and.b32  	%r382, %r44, 8388607;
	or.b32  	%r2551, %r382, 1065353216;
	mov.b32 	%f832, %r2551;
	add.s32 	%r383, %r44, -1073741824;
	and.b32  	%r2552, %r383, -8388608;
	setp.eq.s32 	%p187, %r2552, 0;
	@%p187 bra 	$L__BB0_78;
// %bb.76:                              // %__nv_fmaf_rn.exit4.i.i.i618.preheader
	mov.f32 	%f770, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f769,%f770;
	// end inline asm
$L__BB0_77:                             // %__nv_fmaf_rn.exit4.i.i.i618
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r384, %r2552, 192937984;
	add.s32 	%r385, %r2551, %r384;
	mov.b32 	%f771, %r385;
	mul.f32 	%f772, %f769, %f771;
	sub.f32 	%f773, %f771, %f772;
	fma.rn.f32 	%f774, %f773, %f769, %f772;
	sub.f32 	%f775, %f771, %f774;
	fma.rz.f32 	%f776, %f775, %f769, %f774;
	cvt.rzi.f32.f32 	%f777, %f776;
	sub.f32 	%f832, %f771, %f777;
	sub.s32 	%r2552, %r2552, %r384;
	mov.b32 	%r2551, %f832;
	setp.ne.s32 	%p188, %r2552, 0;
	setp.ne.s32 	%p189, %r2551, 0;
	and.pred  	%p190, %p188, %p189;
	@%p190 bra 	$L__BB0_77;
$L__BB0_78:                             // %__internal_fmodf_slowpath_mod.exit.i.i620
	setp.gt.u32 	%p191, %r44, 2139095039;
	selp.f32 	%f778, 0f7FFFFFFF, 0f4B800000, %p191;
	mul.f32 	%f779, %f832, 0f34000000;
	mul.f32 	%f833, %f778, %f779;
	bra.uni 	$L__BB0_79;
$L__BB0_69:                             // %__nv_fast_fdividef.exit.i.i.i597
	div.approx.f32 	%f762, %f833, %f148;
	cvt.rzi.f32.f32 	%f831, %f762;
	fma.rn.f32 	%f72, %f831, 0fC0000000, %f833;
	mov.b32 	%r43, %f72;
	setp.lt.u32 	%p182, %r43, 1073741824;
	@%p182 bra 	$L__BB0_74;
// %bb.70:
	setp.lt.u32 	%p183, %r43, -2147483647;
	@%p183 bra 	$L__BB0_72;
// %bb.71:
	add.f32 	%f767, %f831, 0fBF800000;
	setp.lt.f32 	%p186, %f72, 0fC0000000;
	add.f32 	%f768, %f767, 0fBF800000;
	selp.f32 	%f831, %f768, %f767, %p186;
	bra.uni 	$L__BB0_74;
$L__BB0_72:
	add.f32 	%f831, %f831, 0f3F800000;
	setp.ltu.f32 	%p184, %f72, 0f40800000;
	@%p184 bra 	$L__BB0_74;
// %bb.73:                              // %__nv_fmaf_rn.exit.i.i.i601
	add.f32 	%f763, %f831, 0f3F800000;
	fma.rn.f32 	%f765, %f148, 0fC0400000, %f72;
	setp.ge.f32 	%p185, %f765, 0f00000000;
	add.f32 	%f766, %f763, 0f3F800000;
	selp.f32 	%f831, %f766, %f763, %p185;
$L__BB0_74:                             // %__internal_fmodf_fastpath_quot.exit.i.i604
	fma.rn.f32 	%f833, %f831, 0fC0000000, %f833;
$L__BB0_79:                             // %__internal_fmodf_kernel.exit.i623
	abs.f32 	%f780, %f833;
	setp.gtu.f32 	%p192, %f780, 0f7F800000;
	@%p192 bra 	$L__BB0_81;
// %bb.80:
	mov.b32 	%r386, %f145;
	and.b32  	%r387, %r386, -2147483648;
	mov.b32 	%r388, %f833;
	or.b32  	%r389, %r387, %r388;
	mov.b32 	%f833, %r389;
$L__BB0_81:                             // %__nv_fmodf.exit624
	setp.le.s32 	%p200, %r146, %r145;
	mov.u32 	%r2545, 0;
	@%p200 bra 	$L__BB0_119;
// %bb.82:                              // %L1415.lr.ph
	mov.f32 	%f152, 0f43010000;
	mul.lo.s32 	%r249, %r85, 31;
	div.approx.f32 	%f153, %f151, %f152;
	div.approx.f32 	%f187, %f185, %f152;
	div.approx.f32 	%f222, %f220, %f152;
	div.approx.f32 	%f256, %f254, %f152;
	div.approx.f32 	%f291, %f289, %f152;
	div.approx.f32 	%f325, %f323, %f152;
	div.approx.f32 	%f360, %f358, %f152;
	div.approx.f32 	%f394, %f392, %f152;
	add.s32 	%r259, %r249, 48;
	abs.f32 	%f154, %f153;
	abs.f32 	%f188, %f187;
	abs.f32 	%f223, %f222;
	abs.f32 	%f257, %f256;
	abs.f32 	%f292, %f291;
	abs.f32 	%f326, %f325;
	abs.f32 	%f361, %f360;
	abs.f32 	%f395, %f394;
	and.b32  	%r250, %r249, 63;
	and.b32  	%r260, %r259, 63;
	setp.gt.f32 	%p17, %f154, 0f4B800000;
	mul.f32 	%f155, %f153, 0f00000000;
	setp.gt.f32 	%p23, %f188, 0f4B800000;
	mul.f32 	%f189, %f187, 0f00000000;
	setp.gt.f32 	%p29, %f223, 0f4B800000;
	mul.f32 	%f224, %f222, 0f00000000;
	setp.gt.f32 	%p35, %f257, 0f4B800000;
	mul.f32 	%f258, %f256, 0f00000000;
	setp.gt.f32 	%p41, %f292, 0f4B800000;
	mul.f32 	%f293, %f291, 0f00000000;
	setp.gt.f32 	%p47, %f326, 0f4B800000;
	mul.f32 	%f327, %f325, 0f00000000;
	setp.gt.f32 	%p53, %f361, 0f4B800000;
	mul.f32 	%f362, %f360, 0f00000000;
	setp.gt.f32 	%p59, %f395, 0f4B800000;
	mul.f32 	%f396, %f394, 0f00000000;
	cvt.rn.f32.s32 	%f425, %r250;
	cvt.rn.f32.s32 	%f460, %r260;
	selp.f32 	%f156, %f155, %f153, %p17;
	selp.f32 	%f190, %f189, %f187, %p23;
	selp.f32 	%f225, %f224, %f222, %p29;
	selp.f32 	%f259, %f258, %f256, %p35;
	selp.f32 	%f294, %f293, %f291, %p41;
	selp.f32 	%f328, %f327, %f325, %p47;
	selp.f32 	%f363, %f362, %f360, %p53;
	selp.f32 	%f397, %f396, %f394, %p59;
	div.approx.f32 	%f427, %f425, %f180;
	div.approx.f32 	%f461, %f460, %f180;
	add.f32 	%f157, %f156, %f156;
	add.f32 	%f191, %f190, %f190;
	add.f32 	%f226, %f225, %f225;
	add.f32 	%f260, %f259, %f259;
	add.f32 	%f295, %f294, %f294;
	add.f32 	%f329, %f328, %f328;
	add.f32 	%f364, %f363, %f363;
	add.f32 	%f398, %f397, %f397;
	add.f32 	%f428, %f427, %f427;
	add.f32 	%f462, %f461, %f461;
	add.f32 	%f515, %f837, %f837;
	add.f32 	%f567, %f825, %f825;
	mov.b32 	%r172, %f157;
	mov.b32 	%r179, %f191;
	mov.b32 	%r190, %f226;
	mov.b32 	%r197, %f260;
	mov.b32 	%r208, %f295;
	mov.b32 	%r215, %f329;
	mov.b32 	%r226, %f364;
	mov.b32 	%r233, %f398;
	mov.b32 	%r251, %f428;
	mov.b32 	%r261, %f462;
	mov.b32 	%r283, %f515;
	mov.b32 	%r315, %f567;
	and.b32  	%r173, %r172, -2147483648;
	and.b32  	%r180, %r179, -2147483648;
	and.b32  	%r191, %r190, -2147483648;
	and.b32  	%r198, %r197, -2147483648;
	and.b32  	%r209, %r208, -2147483648;
	and.b32  	%r216, %r215, -2147483648;
	and.b32  	%r227, %r226, -2147483648;
	and.b32  	%r234, %r233, -2147483648;
	and.b32  	%r252, %r251, -2147483648;
	and.b32  	%r262, %r261, -2147483648;
	and.b32  	%r284, %r283, -2147483648;
	and.b32  	%r316, %r315, -2147483648;
	add.f32 	%f621, %f841, %f841;
	add.f32 	%f673, %f829, %f829;
	or.b32  	%r174, %r173, 1056964608;
	or.b32  	%r181, %r180, 1056964608;
	or.b32  	%r192, %r191, 1056964608;
	or.b32  	%r199, %r198, 1056964608;
	or.b32  	%r210, %r209, 1056964608;
	or.b32  	%r217, %r216, 1056964608;
	or.b32  	%r228, %r227, 1056964608;
	or.b32  	%r235, %r234, 1056964608;
	or.b32  	%r253, %r252, 1056964608;
	or.b32  	%r263, %r262, 1056964608;
	or.b32  	%r285, %r284, 1056964608;
	or.b32  	%r317, %r316, 1056964608;
	mov.b32 	%r332, %f621;
	mov.b32 	%r356, %f673;
	add.f32 	%f727, %f845, %f845;
	mov.b32 	%f158, %r174;
	mov.b32 	%f192, %r181;
	mov.b32 	%f227, %r192;
	mov.b32 	%f261, %r199;
	mov.b32 	%f296, %r210;
	mov.b32 	%f330, %r217;
	mov.b32 	%f365, %r228;
	mov.b32 	%f399, %r235;
	mov.b32 	%f429, %r253;
	mov.b32 	%f463, %r263;
	mov.b32 	%f516, %r285;
	mov.b32 	%f568, %r317;
	and.b32  	%r333, %r332, -2147483648;
	and.b32  	%r357, %r356, -2147483648;
	mov.b32 	%r372, %f727;
	add.f32 	%f159, %f157, %f158;
	abs.f32 	%f161, %f157;
	add.f32 	%f193, %f191, %f192;
	abs.f32 	%f195, %f191;
	add.f32 	%f228, %f226, %f227;
	abs.f32 	%f230, %f226;
	add.f32 	%f262, %f260, %f261;
	abs.f32 	%f264, %f260;
	add.f32 	%f297, %f295, %f296;
	abs.f32 	%f299, %f295;
	add.f32 	%f331, %f329, %f330;
	abs.f32 	%f333, %f329;
	add.f32 	%f366, %f364, %f365;
	abs.f32 	%f368, %f364;
	add.f32 	%f400, %f398, %f399;
	abs.f32 	%f402, %f398;
	add.f32 	%f430, %f428, %f429;
	abs.f32 	%f432, %f428;
	add.f32 	%f464, %f462, %f463;
	abs.f32 	%f466, %f462;
	add.f32 	%f517, %f515, %f516;
	abs.f32 	%f519, %f515;
	add.f32 	%f569, %f567, %f568;
	abs.f32 	%f571, %f567;
	or.b32  	%r334, %r333, 1056964608;
	or.b32  	%r358, %r357, 1056964608;
	and.b32  	%r373, %r372, -2147483648;
	cvt.rzi.f32.f32 	%f160, %f159;
	setp.gt.f32 	%p18, %f161, 0f4B000000;
	cvt.rzi.f32.f32 	%f194, %f193;
	setp.gt.f32 	%p24, %f195, 0f4B000000;
	cvt.rzi.f32.f32 	%f229, %f228;
	setp.gt.f32 	%p30, %f230, 0f4B000000;
	cvt.rzi.f32.f32 	%f263, %f262;
	setp.gt.f32 	%p36, %f264, 0f4B000000;
	cvt.rzi.f32.f32 	%f298, %f297;
	setp.gt.f32 	%p42, %f299, 0f4B000000;
	cvt.rzi.f32.f32 	%f332, %f331;
	setp.gt.f32 	%p48, %f333, 0f4B000000;
	cvt.rzi.f32.f32 	%f367, %f366;
	setp.gt.f32 	%p54, %f368, 0f4B000000;
	cvt.rzi.f32.f32 	%f401, %f400;
	setp.gt.f32 	%p60, %f402, 0f4B000000;
	cvt.rzi.f32.f32 	%f431, %f430;
	setp.gt.f32 	%p65, %f432, 0f4B000000;
	cvt.rzi.f32.f32 	%f465, %f464;
	setp.gt.f32 	%p72, %f466, 0f4B000000;
	cvt.rzi.f32.f32 	%f518, %f517;
	setp.gt.f32 	%p92, %f519, 0f4B000000;
	cvt.rzi.f32.f32 	%f570, %f569;
	setp.gt.f32 	%p112, %f571, 0f4B000000;
	mov.b32 	%f622, %r334;
	mov.b32 	%f674, %r358;
	or.b32  	%r374, %r373, 1056964608;
	selp.f32 	%f162, %f157, %f160, %p18;
	cvt.rzi.f32.f32 	%f163, %f157;
	setp.lt.f32 	%p19, %f161, 0f3F000000;
	selp.f32 	%f196, %f191, %f194, %p24;
	cvt.rzi.f32.f32 	%f197, %f191;
	setp.lt.f32 	%p25, %f195, 0f3F000000;
	selp.f32 	%f231, %f226, %f229, %p30;
	cvt.rzi.f32.f32 	%f232, %f226;
	setp.lt.f32 	%p31, %f230, 0f3F000000;
	selp.f32 	%f265, %f260, %f263, %p36;
	cvt.rzi.f32.f32 	%f266, %f260;
	setp.lt.f32 	%p37, %f264, 0f3F000000;
	selp.f32 	%f300, %f295, %f298, %p42;
	cvt.rzi.f32.f32 	%f301, %f295;
	setp.lt.f32 	%p43, %f299, 0f3F000000;
	selp.f32 	%f334, %f329, %f332, %p48;
	cvt.rzi.f32.f32 	%f335, %f329;
	setp.lt.f32 	%p49, %f333, 0f3F000000;
	selp.f32 	%f369, %f364, %f367, %p54;
	cvt.rzi.f32.f32 	%f370, %f364;
	setp.lt.f32 	%p55, %f368, 0f3F000000;
	selp.f32 	%f403, %f398, %f401, %p60;
	cvt.rzi.f32.f32 	%f404, %f398;
	setp.lt.f32 	%p61, %f402, 0f3F000000;
	selp.f32 	%f433, %f428, %f431, %p65;
	cvt.rzi.f32.f32 	%f434, %f428;
	setp.lt.f32 	%p66, %f432, 0f3F000000;
	selp.f32 	%f467, %f462, %f465, %p72;
	cvt.rzi.f32.f32 	%f468, %f462;
	setp.lt.f32 	%p73, %f466, 0f3F000000;
	selp.f32 	%f520, %f515, %f518, %p92;
	cvt.rzi.f32.f32 	%f521, %f515;
	setp.lt.f32 	%p93, %f519, 0f3F000000;
	selp.f32 	%f572, %f567, %f570, %p112;
	cvt.rzi.f32.f32 	%f573, %f567;
	setp.lt.f32 	%p113, %f571, 0f3F000000;
	add.f32 	%f623, %f621, %f622;
	abs.f32 	%f625, %f621;
	add.f32 	%f675, %f673, %f674;
	abs.f32 	%f677, %f673;
	mov.b32 	%f728, %r374;
	selp.f32 	%f164, %f163, %f162, %p19;
	selp.f32 	%f198, %f197, %f196, %p25;
	selp.f32 	%f233, %f232, %f231, %p31;
	selp.f32 	%f267, %f266, %f265, %p37;
	selp.f32 	%f302, %f301, %f300, %p43;
	selp.f32 	%f336, %f335, %f334, %p49;
	selp.f32 	%f371, %f370, %f369, %p55;
	selp.f32 	%f405, %f404, %f403, %p61;
	selp.f32 	%f435, %f434, %f433, %p66;
	selp.f32 	%f469, %f468, %f467, %p73;
	selp.f32 	%f522, %f521, %f520, %p93;
	selp.f32 	%f574, %f573, %f572, %p113;
	cvt.rzi.f32.f32 	%f624, %f623;
	setp.gt.f32 	%p132, %f625, 0f4B000000;
	cvt.rzi.f32.f32 	%f676, %f675;
	setp.gt.f32 	%p152, %f677, 0f4B000000;
	add.f32 	%f729, %f727, %f728;
	abs.f32 	%f731, %f727;
	fma.rn.f32 	%f165, %f164, 0fBF000000, %f156;
	fma.rn.f32 	%f199, %f198, 0fBF000000, %f190;
	fma.rn.f32 	%f234, %f233, 0fBF000000, %f225;
	fma.rn.f32 	%f268, %f267, 0fBF000000, %f259;
	fma.rn.f32 	%f303, %f302, 0fBF000000, %f294;
	fma.rn.f32 	%f337, %f336, 0fBF000000, %f328;
	fma.rn.f32 	%f372, %f371, 0fBF000000, %f363;
	fma.rn.f32 	%f406, %f405, 0fBF000000, %f397;
	fma.rn.f32 	%f436, %f435, 0fBF000000, %f427;
	fma.rn.f32 	%f470, %f469, 0fBF000000, %f461;
	fma.rn.f32 	%f523, %f522, 0fBF000000, %f837;
	fma.rn.f32 	%f575, %f574, 0fBF000000, %f825;
	selp.f32 	%f626, %f621, %f624, %p132;
	cvt.rzi.f32.f32 	%f627, %f621;
	setp.lt.f32 	%p133, %f625, 0f3F000000;
	selp.f32 	%f678, %f673, %f676, %p152;
	cvt.rzi.f32.f32 	%f679, %f673;
	setp.lt.f32 	%p153, %f677, 0f3F000000;
	cvt.rzi.f32.f32 	%f730, %f729;
	setp.gt.f32 	%p173, %f731, 0f4B000000;
	mul.f32 	%f166, %f165, %f165;
	mul.f32 	%f200, %f199, %f199;
	mul.f32 	%f235, %f234, %f234;
	mul.f32 	%f269, %f268, %f268;
	mul.f32 	%f304, %f303, %f303;
	mul.f32 	%f338, %f337, %f337;
	mul.f32 	%f373, %f372, %f372;
	mul.f32 	%f407, %f406, %f406;
	mul.f32 	%f437, %f436, %f436;
	mul.f32 	%f471, %f470, %f470;
	mul.f32 	%f524, %f523, %f523;
	mul.f32 	%f576, %f575, %f575;
	selp.f32 	%f628, %f627, %f626, %p133;
	selp.f32 	%f680, %f679, %f678, %p153;
	selp.f32 	%f732, %f727, %f730, %p173;
	cvt.rzi.f32.f32 	%f733, %f727;
	setp.lt.f32 	%p174, %f731, 0f3F000000;
	cvt.rzi.s32.f32 	%r175, %f164;
	fma.rn.f32 	%f167, %f166, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f168, %f166, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r182, %f198;
	fma.rn.f32 	%f201, %f200, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f202, %f200, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r193, %f233;
	fma.rn.f32 	%f236, %f235, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f237, %f235, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r200, %f267;
	fma.rn.f32 	%f270, %f269, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f271, %f269, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r211, %f302;
	fma.rn.f32 	%f305, %f304, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f306, %f304, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r218, %f336;
	fma.rn.f32 	%f339, %f338, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f340, %f338, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r229, %f371;
	fma.rn.f32 	%f374, %f373, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f375, %f373, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r236, %f405;
	fma.rn.f32 	%f408, %f407, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f409, %f407, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f438, %f437, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f439, %f437, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f472, %f471, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f473, %f471, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f525, %f524, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f526, %f524, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f577, %f576, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f578, %f576, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f629, %f628, 0fBF000000, %f841;
	fma.rn.f32 	%f681, %f680, 0fBF000000, %f829;
	selp.f32 	%f734, %f733, %f732, %p174;
	add.s32 	%r176, %r175, 1;
	fma.rn.f32 	%f169, %f167, %f166, 0fC0A55DF6;
	fma.rn.f32 	%f170, %f168, %f166, 0f4081E0CF;
	fma.rn.f32 	%f171, %f166, %f165, 0f00000000;
	add.s32 	%r183, %r182, 1;
	fma.rn.f32 	%f203, %f201, %f200, 0fC0A55DF6;
	fma.rn.f32 	%f204, %f202, %f200, 0f4081E0CF;
	fma.rn.f32 	%f205, %f200, %f199, 0f00000000;
	add.s32 	%r194, %r193, 1;
	fma.rn.f32 	%f238, %f236, %f235, 0fC0A55DF6;
	fma.rn.f32 	%f239, %f237, %f235, 0f4081E0CF;
	fma.rn.f32 	%f240, %f235, %f234, 0f00000000;
	add.s32 	%r201, %r200, 1;
	fma.rn.f32 	%f272, %f270, %f269, 0fC0A55DF6;
	fma.rn.f32 	%f273, %f271, %f269, 0f4081E0CF;
	fma.rn.f32 	%f274, %f269, %f268, 0f00000000;
	add.s32 	%r212, %r211, 1;
	fma.rn.f32 	%f307, %f305, %f304, 0fC0A55DF6;
	fma.rn.f32 	%f308, %f306, %f304, 0f4081E0CF;
	fma.rn.f32 	%f309, %f304, %f303, 0f00000000;
	add.s32 	%r219, %r218, 1;
	fma.rn.f32 	%f341, %f339, %f338, 0fC0A55DF6;
	fma.rn.f32 	%f342, %f340, %f338, 0f4081E0CF;
	fma.rn.f32 	%f343, %f338, %f337, 0f00000000;
	add.s32 	%r230, %r229, 1;
	fma.rn.f32 	%f376, %f374, %f373, 0fC0A55DF6;
	fma.rn.f32 	%f377, %f375, %f373, 0f4081E0CF;
	fma.rn.f32 	%f378, %f373, %f372, 0f00000000;
	add.s32 	%r237, %r236, 1;
	fma.rn.f32 	%f410, %f408, %f407, 0fC0A55DF6;
	fma.rn.f32 	%f411, %f409, %f407, 0f4081E0CF;
	fma.rn.f32 	%f412, %f407, %f406, 0f00000000;
	cvt.rzi.s32.f32 	%r254, %f435;
	fma.rn.f32 	%f440, %f438, %f437, 0fC0A55DF6;
	fma.rn.f32 	%f441, %f439, %f437, 0f4081E0CF;
	fma.rn.f32 	%f442, %f437, %f436, 0f00000000;
	cvt.rzi.s32.f32 	%r264, %f469;
	fma.rn.f32 	%f474, %f472, %f471, 0fC0A55DF6;
	fma.rn.f32 	%f475, %f473, %f471, 0f4081E0CF;
	fma.rn.f32 	%f476, %f471, %f470, 0f00000000;
	cvt.rzi.s32.f32 	%r286, %f522;
	fma.rn.f32 	%f527, %f525, %f524, 0fC0A55DF6;
	fma.rn.f32 	%f528, %f526, %f524, 0f4081E0CF;
	fma.rn.f32 	%f529, %f524, %f523, 0f00000000;
	cvt.rzi.s32.f32 	%r318, %f574;
	fma.rn.f32 	%f579, %f577, %f576, 0fC0A55DF6;
	fma.rn.f32 	%f580, %f578, %f576, 0f4081E0CF;
	fma.rn.f32 	%f581, %f576, %f575, 0f00000000;
	mul.f32 	%f630, %f629, %f629;
	mul.f32 	%f682, %f681, %f681;
	fma.rn.f32 	%f735, %f734, 0fBF000000, %f845;
	shl.b32 	%r73, %r1, 5;
	and.b32  	%r161, %r74, 8;
	fma.rn.f32 	%f172, %f170, %f166, 0fC09DE9E6;
	fma.rn.f32 	%f173, %f169, %f171, 0f00000000;
	and.b32  	%r177, %r176, 1;
	fma.rn.f32 	%f206, %f204, %f200, 0fC09DE9E6;
	fma.rn.f32 	%f207, %f203, %f205, 0f00000000;
	and.b32  	%r184, %r183, 1;
	fma.rn.f32 	%f241, %f239, %f235, 0fC09DE9E6;
	fma.rn.f32 	%f242, %f238, %f240, 0f00000000;
	and.b32  	%r195, %r194, 1;
	fma.rn.f32 	%f275, %f273, %f269, 0fC09DE9E6;
	fma.rn.f32 	%f276, %f272, %f274, 0f00000000;
	and.b32  	%r202, %r201, 1;
	fma.rn.f32 	%f310, %f308, %f304, 0fC09DE9E6;
	fma.rn.f32 	%f311, %f307, %f309, 0f00000000;
	and.b32  	%r213, %r212, 1;
	fma.rn.f32 	%f344, %f342, %f338, 0fC09DE9E6;
	fma.rn.f32 	%f345, %f341, %f343, 0f00000000;
	and.b32  	%r220, %r219, 1;
	fma.rn.f32 	%f379, %f377, %f373, 0fC09DE9E6;
	fma.rn.f32 	%f380, %f376, %f378, 0f00000000;
	and.b32  	%r231, %r230, 1;
	fma.rn.f32 	%f413, %f411, %f407, 0fC09DE9E6;
	fma.rn.f32 	%f414, %f410, %f412, 0f00000000;
	and.b32  	%r238, %r237, 1;
	fma.rn.f32 	%f443, %f441, %f437, 0fC09DE9E6;
	fma.rn.f32 	%f444, %f440, %f442, 0f00000000;
	and.b32  	%r255, %r254, 1;
	fma.rn.f32 	%f477, %f475, %f471, 0fC09DE9E6;
	fma.rn.f32 	%f478, %f474, %f476, 0f00000000;
	and.b32  	%r265, %r264, 1;
	fma.rn.f32 	%f530, %f528, %f524, 0fC09DE9E6;
	fma.rn.f32 	%f531, %f527, %f529, 0f00000000;
	and.b32  	%r287, %r286, 1;
	fma.rn.f32 	%f582, %f580, %f576, 0fC09DE9E6;
	fma.rn.f32 	%f583, %f579, %f581, 0f00000000;
	and.b32  	%r319, %r318, 1;
	fma.rn.f32 	%f631, %f630, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f632, %f630, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f683, %f682, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f684, %f682, 0f3E684E12, 0fBFAAD2E0;
	mul.f32 	%f736, %f735, %f735;
	or.b32  	%r162, %r161, %r73;
	and.b32  	%r163, %r4, 16;
	shl.b32 	%r76, %r4, 2;
	fma.rn.f32 	%f174, %f172, %f166, 0f3F800000;
	fma.rn.f32 	%f175, %f165, 0f40490FDB, %f173;
	setp.eq.b32 	%p20, %r177, 1;
	fma.rn.f32 	%f208, %f206, %f200, 0f3F800000;
	fma.rn.f32 	%f209, %f199, 0f40490FDB, %f207;
	setp.eq.b32 	%p26, %r184, 1;
	fma.rn.f32 	%f243, %f241, %f235, 0f3F800000;
	fma.rn.f32 	%f244, %f234, 0f40490FDB, %f242;
	setp.eq.b32 	%p32, %r195, 1;
	fma.rn.f32 	%f277, %f275, %f269, 0f3F800000;
	fma.rn.f32 	%f278, %f268, 0f40490FDB, %f276;
	setp.eq.b32 	%p38, %r202, 1;
	fma.rn.f32 	%f312, %f310, %f304, 0f3F800000;
	fma.rn.f32 	%f313, %f303, 0f40490FDB, %f311;
	setp.eq.b32 	%p44, %r213, 1;
	fma.rn.f32 	%f346, %f344, %f338, 0f3F800000;
	fma.rn.f32 	%f347, %f337, 0f40490FDB, %f345;
	setp.eq.b32 	%p50, %r220, 1;
	fma.rn.f32 	%f381, %f379, %f373, 0f3F800000;
	fma.rn.f32 	%f382, %f372, 0f40490FDB, %f380;
	setp.eq.b32 	%p56, %r231, 1;
	fma.rn.f32 	%f415, %f413, %f407, 0f3F800000;
	fma.rn.f32 	%f416, %f406, 0f40490FDB, %f414;
	setp.eq.b32 	%p62, %r238, 1;
	fma.rn.f32 	%f445, %f443, %f437, 0f3F800000;
	fma.rn.f32 	%f446, %f436, 0f40490FDB, %f444;
	setp.eq.b32 	%p67, %r255, 1;
	fma.rn.f32 	%f479, %f477, %f471, 0f3F800000;
	fma.rn.f32 	%f480, %f470, 0f40490FDB, %f478;
	setp.eq.b32 	%p74, %r265, 1;
	fma.rn.f32 	%f532, %f530, %f524, 0f3F800000;
	fma.rn.f32 	%f533, %f523, 0f40490FDB, %f531;
	setp.eq.b32 	%p94, %r287, 1;
	fma.rn.f32 	%f584, %f582, %f576, 0f3F800000;
	fma.rn.f32 	%f585, %f575, 0f40490FDB, %f583;
	setp.eq.b32 	%p114, %r319, 1;
	cvt.rzi.s32.f32 	%r335, %f628;
	fma.rn.f32 	%f633, %f631, %f630, 0fC0A55DF6;
	fma.rn.f32 	%f634, %f632, %f630, 0f4081E0CF;
	fma.rn.f32 	%f635, %f630, %f629, 0f00000000;
	cvt.rzi.s32.f32 	%r359, %f680;
	fma.rn.f32 	%f685, %f683, %f682, 0fC0A55DF6;
	fma.rn.f32 	%f686, %f684, %f682, 0f4081E0CF;
	fma.rn.f32 	%f687, %f682, %f681, 0f00000000;
	fma.rn.f32 	%f737, %f736, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f738, %f736, 0f3E684E12, 0fBFAAD2E0;
	or.b32  	%r75, %r162, %r163;
	and.b32  	%r77, %r76, 4;
	selp.f32 	%f176, %f174, %f175, %p20;
	and.b32  	%r178, %r176, 2;
	mov.f32 	%f177, 0f00000000;
	selp.f32 	%f210, %f208, %f209, %p26;
	and.b32  	%r185, %r183, 2;
	selp.f32 	%f245, %f243, %f244, %p32;
	and.b32  	%r196, %r194, 2;
	selp.f32 	%f279, %f277, %f278, %p38;
	and.b32  	%r203, %r201, 2;
	selp.f32 	%f314, %f312, %f313, %p44;
	and.b32  	%r214, %r212, 2;
	selp.f32 	%f348, %f346, %f347, %p50;
	and.b32  	%r221, %r219, 2;
	selp.f32 	%f383, %f381, %f382, %p56;
	and.b32  	%r232, %r230, 2;
	selp.f32 	%f417, %f415, %f416, %p62;
	and.b32  	%r239, %r237, 2;
	selp.f32 	%f447, %f445, %f446, %p67;
	and.b32  	%r256, %r254, 2;
	selp.f32 	%f481, %f479, %f480, %p74;
	and.b32  	%r266, %r264, 2;
	selp.f32 	%f534, %f532, %f533, %p94;
	and.b32  	%r288, %r286, 2;
	selp.f32 	%f586, %f584, %f585, %p114;
	and.b32  	%r320, %r318, 2;
	fma.rn.f32 	%f636, %f634, %f630, 0fC09DE9E6;
	fma.rn.f32 	%f637, %f633, %f635, 0f00000000;
	and.b32  	%r336, %r335, 1;
	fma.rn.f32 	%f688, %f686, %f682, 0fC09DE9E6;
	fma.rn.f32 	%f689, %f685, %f687, 0f00000000;
	and.b32  	%r360, %r359, 1;
	cvt.rzi.s32.f32 	%r375, %f734;
	fma.rn.f32 	%f739, %f737, %f736, 0fC0A55DF6;
	fma.rn.f32 	%f740, %f738, %f736, 0f4081E0CF;
	fma.rn.f32 	%f741, %f736, %f735, 0f00000000;
	or.b32  	%r164, %r75, %r77;
	and.b32  	%r78, %r4, 2;
	setp.eq.s32 	%p21, %r178, 0;
	sub.f32 	%f178, %f177, %f176;
	setp.eq.s32 	%p27, %r185, 0;
	sub.f32 	%f212, %f177, %f210;
	setp.eq.s32 	%p33, %r196, 0;
	sub.f32 	%f247, %f177, %f245;
	setp.eq.s32 	%p39, %r203, 0;
	sub.f32 	%f281, %f177, %f279;
	setp.eq.s32 	%p45, %r214, 0;
	sub.f32 	%f316, %f177, %f314;
	setp.eq.s32 	%p51, %r221, 0;
	sub.f32 	%f350, %f177, %f348;
	setp.eq.s32 	%p57, %r232, 0;
	sub.f32 	%f385, %f177, %f383;
	setp.eq.s32 	%p63, %r239, 0;
	sub.f32 	%f419, %f177, %f417;
	setp.eq.s32 	%p68, %r256, 0;
	neg.f32 	%f449, %f447;
	add.s32 	%r257, %r254, 1;
	cvt.rzi.f32.f32 	%f454, %f427;
	setp.eq.s32 	%p75, %r266, 0;
	neg.f32 	%f483, %f481;
	add.s32 	%r267, %r264, 1;
	cvt.rzi.f32.f32 	%f487, %f461;
	setp.eq.s32 	%p95, %r288, 0;
	neg.f32 	%f536, %f534;
	add.s32 	%r289, %r286, 1;
	cvt.rzi.f32.f32 	%f541, %f837;
	setp.eq.s32 	%p115, %r320, 0;
	neg.f32 	%f588, %f586;
	add.s32 	%r321, %r318, 1;
	cvt.rzi.f32.f32 	%f593, %f825;
	fma.rn.f32 	%f638, %f636, %f630, 0f3F800000;
	fma.rn.f32 	%f639, %f629, 0f40490FDB, %f637;
	setp.eq.b32 	%p134, %r336, 1;
	fma.rn.f32 	%f690, %f688, %f682, 0f3F800000;
	fma.rn.f32 	%f691, %f681, 0f40490FDB, %f689;
	setp.eq.b32 	%p154, %r360, 1;
	fma.rn.f32 	%f742, %f740, %f736, 0fC09DE9E6;
	fma.rn.f32 	%f743, %f739, %f741, 0f00000000;
	and.b32  	%r376, %r375, 1;
	or.b32  	%r165, %r164, %r78;
	selp.f32 	%f179, %f176, %f178, %p21;
	selp.f32 	%f213, %f210, %f212, %p27;
	selp.f32 	%f248, %f245, %f247, %p33;
	selp.f32 	%f282, %f279, %f281, %p39;
	selp.f32 	%f317, %f314, %f316, %p45;
	selp.f32 	%f351, %f348, %f350, %p51;
	selp.f32 	%f386, %f383, %f385, %p57;
	selp.f32 	%f420, %f417, %f419, %p63;
	selp.f32 	%f448, %f446, %f445, %p67;
	selp.f32 	%f450, %f447, %f449, %p68;
	and.b32  	%r258, %r257, 2;
	setp.eq.f32 	%p70, %f454, %f427;
	mul.f32 	%f455, %f427, 0f00000000;
	selp.f32 	%f482, %f480, %f479, %p74;
	selp.f32 	%f484, %f481, %f483, %p75;
	and.b32  	%r268, %r267, 2;
	setp.eq.f32 	%p77, %f487, %f461;
	mul.f32 	%f488, %f461, 0f00000000;
	selp.f32 	%f535, %f533, %f532, %p94;
	selp.f32 	%f537, %f534, %f536, %p95;
	and.b32  	%r290, %r289, 2;
	setp.eq.f32 	%p97, %f541, %f837;
	mul.f32 	%f542, %f837, 0f00000000;
	selp.f32 	%f587, %f585, %f584, %p114;
	selp.f32 	%f589, %f586, %f588, %p115;
	and.b32  	%r322, %r321, 2;
	setp.eq.f32 	%p117, %f593, %f825;
	mul.f32 	%f594, %f825, 0f00000000;
	selp.f32 	%f640, %f638, %f639, %p134;
	and.b32  	%r337, %r335, 2;
	selp.f32 	%f692, %f690, %f691, %p154;
	and.b32  	%r361, %r359, 2;
	fma.rn.f32 	%f744, %f742, %f736, 0f3F800000;
	fma.rn.f32 	%f745, %f735, 0f40490FDB, %f743;
	setp.eq.b32 	%p175, %r376, 1;
	bfe.u32 	%r166, %r165, 1, 10;
	mul.f32 	%f87, %f179, %f179;
	mul.f32 	%f4, %f213, %f213;
	mul.f32 	%f8, %f248, %f248;
	mul.f32 	%f13, %f282, %f282;
	mul.f32 	%f17, %f317, %f317;
	mul.f32 	%f22, %f351, %f351;
	mul.f32 	%f26, %f386, %f386;
	mul.f32 	%f31, %f420, %f420;
	setp.eq.s32 	%p69, %r258, 0;
	sub.f32 	%f452, %f177, %f448;
	selp.f32 	%f456, %f455, %f450, %p70;
	abs.f32 	%f457, %f427;
	setp.eq.s32 	%p76, %r268, 0;
	sub.f32 	%f485, %f177, %f482;
	selp.f32 	%f489, %f488, %f484, %p77;
	abs.f32 	%f490, %f461;
	setp.eq.s32 	%p96, %r290, 0;
	sub.f32 	%f539, %f177, %f535;
	selp.f32 	%f104, %f542, %f537, %p97;
	abs.f32 	%f543, %f837;
	setp.eq.s32 	%p116, %r322, 0;
	sub.f32 	%f591, %f177, %f587;
	selp.f32 	%f595, %f594, %f589, %p117;
	abs.f32 	%f596, %f825;
	setp.eq.s32 	%p135, %r337, 0;
	neg.f32 	%f642, %f640;
	add.s32 	%r338, %r335, 1;
	cvt.rzi.f32.f32 	%f647, %f841;
	setp.eq.s32 	%p155, %r361, 0;
	neg.f32 	%f694, %f692;
	add.s32 	%r362, %r359, 1;
	cvt.rzi.f32.f32 	%f699, %f829;
	selp.f32 	%f746, %f744, %f745, %p175;
	and.b32  	%r377, %r375, 2;
	ld.param.u64 	%rd1, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_7];
	mul.wide.u32 	%rd50, %r166, 4;
	mul.f32 	%f183, %f87, 0f3C8A83B8;
	mul.f32 	%f217, %f4, 0f3C8A83B8;
	mul.f32 	%f252, %f8, 0f3C8A83B8;
	mul.f32 	%f286, %f13, 0f3C8A83B8;
	mul.f32 	%f321, %f17, 0f3C8A83B8;
	mul.f32 	%f355, %f22, 0f3C8A83B8;
	mul.f32 	%f390, %f26, 0f3C8A83B8;
	mul.f32 	%f423, %f31, 0f3C8A83B8;
	selp.f32 	%f453, %f448, %f452, %p69;
	setp.gt.f32 	%p71, %f457, 0f4B800000;
	add.f32 	%f458, %f456, 0f3F800000;
	selp.f32 	%f486, %f482, %f485, %p76;
	setp.gt.f32 	%p78, %f490, 0f4B800000;
	add.f32 	%f491, %f489, 0f3F800000;
	selp.f32 	%f540, %f535, %f539, %p96;
	setp.gt.f32 	%p98, %f543, 0f4B800000;
	add.f32 	%f544, %f104, 0f3F800000;
	selp.f32 	%f592, %f587, %f591, %p116;
	setp.gt.f32 	%p118, %f596, 0f4B800000;
	add.f32 	%f597, %f595, 0f3F800000;
	selp.f32 	%f641, %f639, %f638, %p134;
	selp.f32 	%f643, %f640, %f642, %p135;
	and.b32  	%r339, %r338, 2;
	setp.eq.f32 	%p137, %f647, %f841;
	mul.f32 	%f648, %f841, 0f00000000;
	selp.f32 	%f693, %f691, %f690, %p154;
	selp.f32 	%f695, %f692, %f694, %p155;
	and.b32  	%r363, %r362, 2;
	setp.eq.f32 	%p157, %f699, %f829;
	mul.f32 	%f700, %f829, 0f00000000;
	setp.eq.s32 	%p176, %r377, 0;
	neg.f32 	%f748, %f746;
	add.s32 	%r378, %r375, 1;
	cvt.rzi.f32.f32 	%f753, %f845;
	add.s64 	%rd51, %rd1, %rd50;
	mul.f32 	%f3, %f183, %f815;
	mul.f32 	%f218, %f217, %f816;
	mul.f32 	%f12, %f252, %f817;
	mul.f32 	%f287, %f286, %f818;
	mul.f32 	%f21, %f321, %f819;
	mul.f32 	%f356, %f355, %f820;
	mul.f32 	%f30, %f390, %f821;
	mul.f32 	%f424, %f423, %f822;
	selp.f32 	%f459, %f458, %f453, %p71;
	selp.f32 	%f492, %f491, %f486, %p78;
	selp.f32 	%f105, %f544, %f540, %p98;
	selp.f32 	%f598, %f597, %f592, %p118;
	setp.eq.s32 	%p136, %r339, 0;
	sub.f32 	%f645, %f177, %f641;
	selp.f32 	%f123, %f648, %f643, %p137;
	abs.f32 	%f649, %f841;
	setp.eq.s32 	%p156, %r363, 0;
	sub.f32 	%f697, %f177, %f693;
	selp.f32 	%f701, %f700, %f695, %p157;
	abs.f32 	%f702, %f829;
	selp.f32 	%f747, %f745, %f744, %p175;
	selp.f32 	%f749, %f746, %f748, %p176;
	and.b32  	%r379, %r378, 2;
	setp.eq.f32 	%p178, %f753, %f845;
	mul.f32 	%f754, %f845, 0f00000000;
	ld.param.u64 	%rd2, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_8];
	ld.param.u64 	%rd3, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_9];
	ld.global.u32 	%r79, [%rd51];
	mov.b32 	%r188, %f218;
	mov.b32 	%r187, %f3;
	mov.b32 	%r206, %f287;
	mov.b32 	%r205, %f12;
	mov.b32 	%r224, %f356;
	mov.b32 	%r223, %f21;
	mov.b32 	%r242, %f424;
	mov.b32 	%r241, %f30;
	mov.b32 	%r244, %f459;
	mov.b32 	%r245, %f492;
	mov.b32 	%r247, %f456;
	mov.b32 	%r248, %f489;
	mov.b32 	%r305, %f598;
	mov.b32 	%r304, %f105;
	mov.b32 	%r311, %f595;
	mov.b32 	%r310, %f104;
	selp.f32 	%f646, %f641, %f645, %p136;
	setp.gt.f32 	%p138, %f649, 0f4B800000;
	add.f32 	%f650, %f123, 0f3F800000;
	selp.f32 	%f698, %f693, %f697, %p156;
	setp.gt.f32 	%p158, %f702, 0f4B800000;
	add.f32 	%f703, %f701, 0f3F800000;
	and.b32  	%r41, %r14, 1;
	setp.eq.s32 	%p177, %r379, 0;
	sub.f32 	%f751, %f177, %f747;
	selp.f32 	%f755, %f754, %f749, %p178;
	abs.f32 	%f756, %f845;
	// begin inline asm
	cvt.rn.f16x2.f32 %r186, %r188, %r187;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r204, %r206, %r205;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r222, %r224, %r223;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r240, %r242, %r241;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r243, %r245, %r244;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r246, %r248, %r247;
	// end inline asm
	xor.b32  	%r308, %r311, -2147483648;
	xor.b32  	%r307, %r310, -2147483648;
	selp.f32 	%f124, %f650, %f646, %p138;
	selp.f32 	%f704, %f703, %f698, %p158;
	setp.eq.s32 	%p172, %r41, %r82;
	selp.f32 	%f752, %f747, %f751, %p177;
	setp.gt.f32 	%p179, %f756, 0f4B800000;
	add.f32 	%f757, %f755, 0f3F800000;
	// begin inline asm
	cvt.rn.f16x2.f32 %r303, %r305, %r304;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r306, %r308, %r307;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r309, %r311, %r310;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r312, %r305, %r304;
	// end inline asm
	mov.b32 	%r352, %f704;
	mov.b32 	%r351, %f124;
	mov.b32 	%r355, %f701;
	mov.b32 	%r354, %f123;
	selp.f32 	%f758, %f757, %f752, %p179;
	selp.f32 	%f142, 0f3F800000, 0f00000000, %p172;
	// begin inline asm
	cvt.rn.f16x2.f32 %r350, %r352, %r351;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r353, %r355, %r354;
	// end inline asm
	mul.f32 	%f143, %f758, %f142;
	mul.f32 	%f144, %f755, %f142;
	add.f32 	%f781, %f833, %f833;
	mov.b32 	%r402, %f781;
	and.b32  	%r403, %r402, -2147483648;
	or.b32  	%r404, %r403, 1056964608;
	mov.b32 	%f782, %r404;
	add.f32 	%f783, %f781, %f782;
	cvt.rzi.f32.f32 	%f784, %f783;
	abs.f32 	%f785, %f781;
	setp.gt.f32 	%p193, %f785, 0f4B000000;
	selp.f32 	%f786, %f781, %f784, %p193;
	cvt.rzi.f32.f32 	%f787, %f781;
	setp.lt.f32 	%p194, %f785, 0f3F000000;
	selp.f32 	%f788, %f787, %f786, %p194;
	cvt.rzi.s32.f32 	%r405, %f788;
	fma.rn.f32 	%f789, %f788, 0fBF000000, %f833;
	mul.f32 	%f790, %f789, %f789;
	fma.rn.f32 	%f791, %f790, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f792, %f790, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f793, %f791, %f790, 0fC0A55DF6;
	fma.rn.f32 	%f794, %f792, %f790, 0f4081E0CF;
	fma.rn.f32 	%f795, %f790, %f789, 0f00000000;
	fma.rn.f32 	%f796, %f794, %f790, 0fC09DE9E6;
	fma.rn.f32 	%f797, %f793, %f795, 0f00000000;
	fma.rn.f32 	%f798, %f796, %f790, 0f3F800000;
	fma.rn.f32 	%f799, %f789, 0f40490FDB, %f797;
	and.b32  	%r406, %r405, 1;
	setp.eq.b32 	%p195, %r406, 1;
	selp.f32 	%f800, %f798, %f799, %p195;
	selp.f32 	%f801, %f799, %f798, %p195;
	and.b32  	%r407, %r405, 2;
	setp.eq.s32 	%p196, %r407, 0;
	neg.f32 	%f802, %f800;
	selp.f32 	%f803, %f800, %f802, %p196;
	add.s32 	%r408, %r405, 1;
	and.b32  	%r409, %r408, 2;
	setp.eq.s32 	%p197, %r409, 0;
	sub.f32 	%f805, %f177, %f801;
	selp.f32 	%f806, %f801, %f805, %p197;
	cvt.rzi.f32.f32 	%f807, %f833;
	setp.eq.f32 	%p198, %f807, %f833;
	mul.f32 	%f808, %f833, 0f00000000;
	selp.f32 	%f809, %f808, %f803, %p198;
	abs.f32 	%f810, %f833;
	setp.gt.f32 	%p199, %f810, 0f4B800000;
	add.f32 	%f811, %f809, 0f3F800000;
	selp.f32 	%f812, %f811, %f806, %p199;
	mul.f32 	%f813, %f812, %f142;
	mul.f32 	%f814, %f809, %f142;
	mov.b32 	%r392, %f813;
	mov.b32 	%r391, %f143;
	// begin inline asm
	cvt.rn.f16x2.f32 %r390, %r392, %r391;
	// end inline asm
	mov.b32 	%r398, %f814;
	xor.b32  	%r395, %r398, -2147483648;
	mov.b32 	%r397, %f144;
	xor.b32  	%r394, %r397, -2147483648;
	// begin inline asm
	cvt.rn.f16x2.f32 %r393, %r395, %r394;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r396, %r398, %r397;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r399, %r392, %r391;
	// end inline asm
	shl.b32 	%r411, %r149, 5;
	and.b32  	%r412, %r76, 12;
	cvt.u16.u32 	%rs1, %r73;
	mul.hi.u16 	%rs2, %rs1, -21845;
	shr.u16 	%rs3, %rs2, 8;
	mul.lo.s16 	%rs4, %rs3, 384;
	sub.s16 	%rs5, %rs1, %rs4;
	shl.b16 	%rs6, %rs5, 5;
	cvt.u32.u16 	%r413, %rs6;
	and.b32  	%r414, %r76, 16;
	and.b32  	%r415, %r80, 8;
	and.b32  	%r416, %r74, 16;
	or.b32  	%r55, %r415, %r416;
	shl.b32 	%r417, %r2, 2;
	and.b32  	%r56, %r417, 32;
	and.b32  	%r57, %r2, 7;
	and.b32  	%r418, %r76, 28;
	or.b32  	%r419, %r418, %r413;
	add.s32 	%r58, %r419, %r411;
	and.b32  	%r59, %r4, 8;
	shl.b32 	%r420, %r4, 4;
	or.b32  	%r421, %r420, %r59;
	shr.u32 	%r422, %r421, 2;
	and.b32  	%r423, %r422, 14;
	or.b32  	%r424, %r423, %r414;
	and.b32  	%r425, %r80, 2;
	or.b32  	%r60, %r412, %r425;
	shr.u32 	%r426, %r2, 1;
	and.b32  	%r427, %r3, 32;
	or.b32  	%r428, %r416, %r426;
	or.b32  	%r429, %r428, %r427;
	or.b32  	%r430, %r429, 8;
	or.b32  	%r431, %r75, %r78;
	or.b32  	%r432, %r431, %r77;
	bfe.u32 	%r433, %r432, 1, 4;
	mul.lo.s32 	%r434, %r433, 65;
	add.s32 	%r435, %r429, %r434;
	add.s32 	%r436, %r430, %r434;
	shl.b32 	%r437, %r2, 1;
	and.b32  	%r438, %r437, 14;
	shl.b32 	%r439, %r147, 16;
	add.s32 	%r440, %r439, -196608;
	and.b32  	%r441, %r417, 28;
	and.b32  	%r442, %r73, 2016;
	or.b32  	%r443, %r442, %r14;
	or.b32  	%r444, %r443, %r441;
	shl.b32 	%r445, %r444, 5;
	or.b32  	%r61, %r445, %r418;
	cvt.s64.s32 	%rd5, %r440;
	shr.u32 	%r446, %r2, 3;
	or.b32  	%r447, %r446, 2;
	or.b32  	%r448, %r446, 4;
	or.b32  	%r449, %r446, 6;
	bfe.u32 	%r450, %r80, 3, 1;
	bfe.s32 	%r451, %r2, 1, 1;
	and.b32  	%r452, %r451, 260;
	bfe.s32 	%r453, %r2, 2, 1;
	and.b32  	%r454, %r453, 130;
	mul.lo.s32 	%r455, %r446, 1057;
	and.b32  	%r456, %r2, 1;
	neg.s32 	%r457, %r456;
	and.b32  	%r458, %r457, 520;
	add.s32 	%r459, %r458, %r424;
	add.s32 	%r460, %r459, %r452;
	mad.lo.s32 	%r461, %r450, 65, %r460;
	add.s32 	%r462, %r461, %r454;
	add.s32 	%r463, %r462, %r455;
	mul.wide.u32 	%rd52, %r463, 4;
	mov.u64 	%rd53, shmem;
	add.s64 	%rd6, %rd53, %rd52;
	add.s32 	%r464, %r462, 32;
	add.s32 	%r465, %r464, %r455;
	mul.wide.u32 	%rd54, %r465, 4;
	add.s64 	%rd7, %rd53, %rd54;
	add.s32 	%r466, %r462, 1;
	add.s32 	%r467, %r466, %r455;
	mul.wide.u32 	%rd55, %r467, 4;
	add.s64 	%rd8, %rd53, %rd55;
	add.s32 	%r468, %r462, 33;
	add.s32 	%r469, %r468, %r455;
	mul.wide.u32 	%rd56, %r469, 4;
	add.s64 	%rd9, %rd53, %rd56;
	mul.lo.s32 	%r470, %r447, 1057;
	add.s32 	%r471, %r462, %r470;
	mul.wide.u32 	%rd57, %r471, 4;
	add.s64 	%rd10, %rd53, %rd57;
	add.s32 	%r472, %r464, %r470;
	mul.wide.u32 	%rd58, %r472, 4;
	add.s64 	%rd11, %rd53, %rd58;
	add.s32 	%r473, %r466, %r470;
	mul.wide.u32 	%rd59, %r473, 4;
	add.s64 	%rd12, %rd53, %rd59;
	add.s32 	%r474, %r468, %r470;
	mul.wide.u32 	%rd60, %r474, 4;
	add.s64 	%rd13, %rd53, %rd60;
	mul.lo.s32 	%r475, %r448, 1057;
	add.s32 	%r476, %r462, %r475;
	mul.wide.u32 	%rd61, %r476, 4;
	add.s64 	%rd14, %rd53, %rd61;
	add.s32 	%r477, %r464, %r475;
	mul.wide.u32 	%rd62, %r477, 4;
	add.s64 	%rd15, %rd53, %rd62;
	add.s32 	%r478, %r466, %r475;
	mul.wide.u32 	%rd63, %r478, 4;
	add.s64 	%rd16, %rd53, %rd63;
	add.s32 	%r479, %r468, %r475;
	mul.wide.u32 	%rd64, %r479, 4;
	add.s64 	%rd17, %rd53, %rd64;
	mul.lo.s32 	%r480, %r449, 1057;
	add.s32 	%r481, %r462, %r480;
	mul.wide.u32 	%rd65, %r481, 4;
	add.s64 	%rd18, %rd53, %rd65;
	add.s32 	%r482, %r464, %r480;
	mul.wide.u32 	%rd66, %r482, 4;
	add.s64 	%rd19, %rd53, %rd66;
	add.s32 	%r483, %r466, %r480;
	mul.wide.u32 	%rd67, %r483, 4;
	add.s64 	%rd20, %rd53, %rd67;
	add.s32 	%r484, %r468, %r480;
	mul.wide.u32 	%rd68, %r484, 4;
	add.s64 	%rd21, %rd53, %rd68;
	mul.lo.s32 	%r485, %r84, 520;
	add.s32 	%r62, %r429, %r485;
	add.s32 	%r63, %r430, %r485;
	or.b32  	%r486, %r438, %r84;
	mul.lo.s32 	%r487, %r486, 65;
	add.s32 	%r488, %r487, %r414;
	add.s32 	%r489, %r488, %r423;
	add.s32 	%r490, %r489, %r455;
	mul.wide.u32 	%rd69, %r490, 4;
	add.s64 	%rd22, %rd53, %rd69;
	cvt.u64.u32 	%rd70, %r455;
	cvt.u64.u32 	%rd71, %r423;
	cvt.u64.u32 	%rd72, %r487;
	cvt.u64.u32 	%rd73, %r414;
	add.s64 	%rd74, %rd73, %rd72;
	add.s64 	%rd75, %rd74, %rd71;
	add.s64 	%rd76, %rd75, %rd70;
	shl.b64 	%rd77, %rd76, 2;
	add.s64 	%rd23, %rd53, %rd77;
	cvt.u64.u32 	%rd78, %r424;
	add.s64 	%rd79, %rd78, %rd72;
	add.s64 	%rd80, %rd79, %rd70;
	shl.b64 	%rd81, %rd80, 2;
	add.s64 	%rd24, %rd53, %rd81;
	add.s32 	%r491, %r489, %r470;
	mul.wide.u32 	%rd82, %r491, 4;
	add.s64 	%rd25, %rd53, %rd82;
	cvt.u64.u32 	%rd83, %r470;
	add.s64 	%rd84, %rd75, %rd83;
	shl.b64 	%rd85, %rd84, 2;
	add.s64 	%rd26, %rd53, %rd85;
	add.s64 	%rd86, %rd79, %rd83;
	shl.b64 	%rd87, %rd86, 2;
	add.s64 	%rd27, %rd53, %rd87;
	add.s32 	%r492, %r489, %r475;
	mul.wide.u32 	%rd88, %r492, 4;
	add.s64 	%rd28, %rd53, %rd88;
	cvt.u64.u32 	%rd89, %r475;
	add.s64 	%rd90, %rd75, %rd89;
	shl.b64 	%rd91, %rd90, 2;
	add.s64 	%rd29, %rd53, %rd91;
	add.s64 	%rd92, %rd79, %rd89;
	shl.b64 	%rd93, %rd92, 2;
	add.s64 	%rd30, %rd53, %rd93;
	add.s32 	%r493, %r489, %r480;
	mul.wide.u32 	%rd94, %r493, 4;
	add.s64 	%rd31, %rd53, %rd94;
	cvt.u64.u32 	%rd95, %r480;
	add.s64 	%rd96, %rd75, %rd95;
	shl.b64 	%rd97, %rd96, 2;
	add.s64 	%rd32, %rd53, %rd97;
	add.s64 	%rd98, %rd79, %rd95;
	shl.b64 	%rd99, %rd98, 2;
	add.s64 	%rd33, %rd53, %rd99;
	mul.wide.u32 	%rd100, %r436, 4;
	add.s64 	%rd34, %rd53, %rd100;
	mul.wide.u32 	%rd101, %r435, 4;
	add.s64 	%rd35, %rd53, %rd101;
	setp.eq.s32 	%p201, %r59, 0;
	mov.u16 	%rs294, 25600;
	mov.u16 	%rs242, 21504;
	mov.u16 	%rs302, 18432;
	setp.gt.u32 	%p215, %r2, 7;
	mov.u32 	%r2553, %r2545;
	mov.u32 	%r2554, %r2545;
	mov.u32 	%r2555, %r2545;
	mov.u32 	%r2556, %r2545;
	mov.u32 	%r2567, %r2545;
	mov.u32 	%r2568, %r2545;
	mov.u32 	%r70, %r2545;
	bra.uni 	$L__BB0_83;
$L__BB0_117:                            // %pass9838
                                        //   in Loop: Header=BB0_83 Depth=1
	selp.b32 	%r2532, %r134, %r2482, %p201;
	selp.b32 	%r2533, %r2478, %r134, %p201;
	selp.b32 	%r2534, %r133, %r2474, %p201;
	selp.b32 	%r2535, %r2470, %r133, %p201;
	or.b32  	%r2574, %r2546, %r61;
	or.b32  	%r2537, %r2574, 131072;
	cvt.s64.s32 	%rd115, %r2537;
	add.s64 	%rd116, %rd115, %rd5;
	shr.u64 	%rd117, %rd116, 38;
	add.s64 	%rd118, %rd116, %rd117;
	shr.s64 	%rd119, %rd118, 26;
	setp.lt.s64 	%p218, %rd116, 0;
	and.b64  	%rd120, %rd118, -67108864;
	setp.ne.s64 	%p219, %rd120, %rd116;
	and.pred  	%p220, %p218, %p219;
	selp.u64 	%rd121, 1, 0, %p220;
	sub.s64 	%rd122, %rd121, %rd119;
	shl.b64 	%rd123, %rd122, 26;
	add.s64 	%rd124, %rd123, %rd116;
	shl.b64 	%rd125, %rd124, 2;
	add.s64 	%rd126, %rd3, %rd125;
	st.global.v4.u32 	[%rd126], {%r2535, %r2533, %r2534, %r2532};
$L__BB0_118:                            // %pass9939
                                        //   in Loop: Header=BB0_83 Depth=1
	or.b32  	%r2539, %r2574, 262144;
	cvt.s64.s32 	%rd127, %r2539;
	add.s64 	%rd128, %rd127, %rd5;
	shr.u64 	%rd129, %rd128, 38;
	add.s64 	%rd130, %rd128, %rd129;
	shr.s64 	%rd131, %rd130, 26;
	setp.lt.s64 	%p221, %rd128, 0;
	and.b64  	%rd132, %rd130, -67108864;
	setp.ne.s64 	%p222, %rd132, %rd128;
	and.pred  	%p223, %p221, %p222;
	selp.u64 	%rd133, 1, 0, %p223;
	sub.s64 	%rd134, %rd133, %rd131;
	shl.b64 	%rd135, %rd134, 26;
	add.s64 	%rd136, %rd135, %rd128;
	shl.b64 	%rd137, %rd136, 2;
	add.s64 	%rd138, %rd3, %rd137;
	st.global.v4.u32 	[%rd138], {%r135, %r137, %r136, %r138};
	or.b32  	%r2540, %r2574, 393216;
	cvt.s64.s32 	%rd139, %r2540;
	add.s64 	%rd140, %rd139, %rd5;
	shr.u64 	%rd141, %rd140, 38;
	add.s64 	%rd142, %rd140, %rd141;
	shr.s64 	%rd143, %rd142, 26;
	setp.lt.s64 	%p224, %rd140, 0;
	and.b64  	%rd144, %rd142, -67108864;
	setp.ne.s64 	%p225, %rd144, %rd140;
	and.pred  	%p226, %p224, %p225;
	selp.u64 	%rd145, 1, 0, %p226;
	sub.s64 	%rd146, %rd145, %rd143;
	shl.b64 	%rd147, %rd146, 26;
	add.s64 	%rd148, %rd147, %rd140;
	shl.b64 	%rd149, %rd148, 2;
	add.s64 	%rd150, %rd3, %rd149;
	st.global.v4.u32 	[%rd150], {%r139, %r141, %r140, %r142};
	setp.ne.s32 	%p227, %r70, 32512;
	add.s32 	%r70, %r70, 256;
	add.s32 	%r2541, %r70, %r145;
	setp.lt.s32 	%p228, %r2541, %r146;
	and.pred  	%p229, %p227, %p228;
	@%p229 bra 	$L__BB0_83;
	bra.uni 	$L__BB0_119;
$L__BB0_83:                             // %L1415
                                        // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_84 Depth 2
	or.b32  	%r559, %r70, %r55;
	or.b32  	%r560, %r559, %r56;
	or.b32  	%r561, %r560, %r57;
	add.s32 	%r562, %r561, %r145;
	mad.lo.s32 	%r563, %r562, 12288, %r58;
	mul.hi.s32 	%r564, %r563, 715827883;
	shr.u32 	%r565, %r564, 31;
	shr.s32 	%r566, %r564, 26;
	add.s32 	%r567, %r566, %r565;
	setp.lt.s32 	%p202, %r563, 0;
	mul.lo.s32 	%r568, %r567, 402653184;
	setp.ne.s32 	%p203, %r568, %r563;
	and.pred  	%p204, %p202, %p203;
	selp.s32 	%r569, -1, 0, %p204;
	add.s32 	%r570, %r567, %r569;
	mad.lo.s32 	%r571, %r570, -402653184, %r563;
	mul.wide.s32 	%rd102, %r571, 4;
	add.s64 	%rd103, %rd2, %rd102;
	ld.global.v4.u32 	{%r572, %r573, %r574, %r575}, [%rd103];
	or.b32  	%r576, %r561, 64;
	add.s32 	%r577, %r576, %r145;
	mad.lo.s32 	%r578, %r577, 12288, %r58;
	mul.hi.s32 	%r579, %r578, 715827883;
	shr.u32 	%r580, %r579, 31;
	shr.s32 	%r581, %r579, 26;
	add.s32 	%r582, %r581, %r580;
	setp.lt.s32 	%p205, %r578, 0;
	mul.lo.s32 	%r583, %r582, 402653184;
	setp.ne.s32 	%p206, %r583, %r578;
	and.pred  	%p207, %p205, %p206;
	selp.s32 	%r584, -1, 0, %p207;
	add.s32 	%r585, %r582, %r584;
	mad.lo.s32 	%r586, %r585, -402653184, %r578;
	mul.wide.s32 	%rd104, %r586, 4;
	add.s64 	%rd105, %rd2, %rd104;
	ld.global.v4.u32 	{%r587, %r588, %r589, %r590}, [%rd105];
	or.b32  	%r591, %r561, 128;
	add.s32 	%r592, %r591, %r145;
	mad.lo.s32 	%r593, %r592, 12288, %r58;
	mul.hi.s32 	%r594, %r593, 715827883;
	shr.u32 	%r595, %r594, 31;
	shr.s32 	%r596, %r594, 26;
	add.s32 	%r597, %r596, %r595;
	setp.lt.s32 	%p208, %r593, 0;
	mul.lo.s32 	%r598, %r597, 402653184;
	setp.ne.s32 	%p209, %r598, %r593;
	and.pred  	%p210, %p208, %p209;
	selp.s32 	%r599, -1, 0, %p210;
	add.s32 	%r600, %r597, %r599;
	mad.lo.s32 	%r601, %r600, -402653184, %r593;
	mul.wide.s32 	%rd106, %r601, 4;
	add.s64 	%rd107, %rd2, %rd106;
	ld.global.v4.u32 	{%r602, %r603, %r604, %r605}, [%rd107];
	or.b32  	%r606, %r561, 192;
	add.s32 	%r607, %r606, %r145;
	mad.lo.s32 	%r608, %r607, 12288, %r58;
	mul.hi.s32 	%r609, %r608, 715827883;
	shr.u32 	%r610, %r609, 31;
	shr.s32 	%r611, %r609, 26;
	add.s32 	%r612, %r611, %r610;
	setp.lt.s32 	%p211, %r608, 0;
	mul.lo.s32 	%r613, %r612, 402653184;
	setp.ne.s32 	%p212, %r613, %r608;
	and.pred  	%p213, %p211, %p212;
	selp.s32 	%r614, -1, 0, %p213;
	add.s32 	%r615, %r612, %r614;
	mad.lo.s32 	%r616, %r615, -402653184, %r608;
	mul.wide.s32 	%rd108, %r616, 4;
	add.s64 	%rd109, %rd2, %rd108;
	ld.global.v4.u32 	{%r617, %r618, %r619, %r620}, [%rd109];
	selp.b32 	%r621, %r574, %r572, %p201;
	shfl.sync.bfly.b32	%r622, %r621, 8, 31, -1;
	selp.b32 	%r495, %r572, %r622, %p201;
	selp.b32 	%r496, %r622, %r574, %p201;
	selp.b32 	%r623, %r575, %r573, %p201;
	shfl.sync.bfly.b32	%r624, %r623, 8, 31, -1;
	selp.b32 	%r503, %r573, %r624, %p201;
	selp.b32 	%r504, %r624, %r575, %p201;
	selp.b32 	%r625, %r589, %r587, %p201;
	shfl.sync.bfly.b32	%r626, %r625, 8, 31, -1;
	selp.b32 	%r511, %r587, %r626, %p201;
	selp.b32 	%r512, %r626, %r589, %p201;
	selp.b32 	%r627, %r590, %r588, %p201;
	shfl.sync.bfly.b32	%r628, %r627, 8, 31, -1;
	selp.b32 	%r519, %r588, %r628, %p201;
	selp.b32 	%r520, %r628, %r590, %p201;
	selp.b32 	%r629, %r604, %r602, %p201;
	shfl.sync.bfly.b32	%r630, %r629, 8, 31, -1;
	selp.b32 	%r527, %r602, %r630, %p201;
	selp.b32 	%r528, %r630, %r604, %p201;
	selp.b32 	%r631, %r605, %r603, %p201;
	shfl.sync.bfly.b32	%r632, %r631, 8, 31, -1;
	selp.b32 	%r535, %r603, %r632, %p201;
	selp.b32 	%r536, %r632, %r605, %p201;
	selp.b32 	%r633, %r619, %r617, %p201;
	shfl.sync.bfly.b32	%r634, %r633, 8, 31, -1;
	selp.b32 	%r543, %r617, %r634, %p201;
	selp.b32 	%r544, %r634, %r619, %p201;
	selp.b32 	%r635, %r620, %r618, %p201;
	shfl.sync.bfly.b32	%r636, %r635, 8, 31, -1;
	selp.b32 	%r551, %r618, %r636, %p201;
	selp.b32 	%r552, %r636, %r620, %p201;
	mov.u32 	%r553, 21520;
	// begin inline asm
	prmt.b32 %r494, %r495, %r496, %r553;
	// end inline asm
	mov.u32 	%r557, 30258;
	// begin inline asm
	prmt.b32 %r498, %r495, %r496, %r557;
	// end inline asm
	// begin inline asm
	prmt.b32 %r502, %r503, %r504, %r553;
	// end inline asm
	// begin inline asm
	prmt.b32 %r506, %r503, %r504, %r557;
	// end inline asm
	// begin inline asm
	prmt.b32 %r510, %r511, %r512, %r553;
	// end inline asm
	// begin inline asm
	prmt.b32 %r514, %r511, %r512, %r557;
	// end inline asm
	// begin inline asm
	prmt.b32 %r518, %r519, %r520, %r553;
	// end inline asm
	// begin inline asm
	prmt.b32 %r522, %r519, %r520, %r557;
	// end inline asm
	// begin inline asm
	prmt.b32 %r526, %r527, %r528, %r553;
	// end inline asm
	// begin inline asm
	prmt.b32 %r530, %r527, %r528, %r557;
	// end inline asm
	// begin inline asm
	prmt.b32 %r534, %r535, %r536, %r553;
	// end inline asm
	// begin inline asm
	prmt.b32 %r538, %r535, %r536, %r557;
	// end inline asm
	// begin inline asm
	prmt.b32 %r542, %r543, %r544, %r553;
	// end inline asm
	// begin inline asm
	prmt.b32 %r546, %r543, %r544, %r557;
	// end inline asm
	// begin inline asm
	prmt.b32 %r550, %r551, %r552, %r553;
	// end inline asm
	// begin inline asm
	prmt.b32 %r554, %r551, %r552, %r557;
	// end inline asm
	st.shared.u32 	[%rd6], %r494;
	st.shared.u32 	[%rd7], %r498;
	st.shared.u32 	[%rd8], %r502;
	st.shared.u32 	[%rd9], %r506;
	st.shared.u32 	[%rd10], %r510;
	st.shared.u32 	[%rd11], %r514;
	st.shared.u32 	[%rd12], %r518;
	st.shared.u32 	[%rd13], %r522;
	st.shared.u32 	[%rd14], %r526;
	st.shared.u32 	[%rd15], %r530;
	st.shared.u32 	[%rd16], %r534;
	st.shared.u32 	[%rd17], %r538;
	st.shared.u32 	[%rd18], %r542;
	st.shared.u32 	[%rd19], %r546;
	st.shared.u32 	[%rd20], %r550;
	st.shared.u32 	[%rd21], %r554;
	bar.sync 	0;
	or.b32  	%r71, %r70, %r60;
	shr.u32 	%r2566, %r71, 5;
	mov.u64 	%rd155, %rd35;
	mov.u64 	%rd156, %rd34;
	mov.u32 	%r2569, %r2545;
	mov.u32 	%r2570, %r2556;
	mov.u32 	%r2571, %r2555;
	mov.u32 	%r2572, %r2554;
	mov.u32 	%r2573, %r2553;
$L__BB0_84:                             // %pass5678
                                        //   Parent Loop BB0_83 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	mov.u32 	%r2554, %r2568;
	mov.u32 	%r2553, %r2567;
	add.s32 	%r2433, %r71, %r2569;
	bfe.s32 	%r2434, %r2433, 3, 1;
	and.b32  	%r2435, %r2434, 65;
	bfe.s32 	%r2436, %r2433, 1, 1;
	and.b32  	%r2437, %r2436, 260;
	bfe.s32 	%r2438, %r2433, 2, 1;
	and.b32  	%r2439, %r2438, 130;
	and.b32  	%r2440, %r2566, 7;
	mul.lo.s32 	%r2441, %r2440, 1057;
	add.s32 	%r2442, %r62, %r2437;
	add.s32 	%r2443, %r2442, %r2435;
	add.s32 	%r2444, %r2443, %r2439;
	add.s32 	%r2445, %r2444, %r2441;
	mul.wide.u32 	%rd110, %r2445, 4;
	add.s64 	%rd112, %rd53, %rd110;
	ld.shared.u32 	%r2555, [%rd112];
	add.s32 	%r2446, %r63, %r2437;
	add.s32 	%r2447, %r2446, %r2435;
	add.s32 	%r2448, %r2447, %r2439;
	add.s32 	%r2449, %r2448, %r2441;
	mul.wide.u32 	%rd113, %r2449, 4;
	add.s64 	%rd114, %rd53, %rd113;
	ld.shared.u32 	%r2556, [%rd114];
	// begin inline asm
	mov.b32 %r642, {%rs294, %rs294};
	// end inline asm
	// begin inline asm
	mov.b32 %r653, {%rs242, %rs242};
	// end inline asm
	xor.b32  	%r641, %r2555, -2004318072;
	mov.u32 	%r640, 983055;
	// begin inline asm
	lop3.b32 %r639, %r640, %r641, %r642, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r643, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r644, %r642, %r643;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r647, %r639, %r644;
	// end inline asm
	mov.u32 	%r651, 15728880;
	// begin inline asm
	lop3.b32 %r650, %r651, %r641, %r653, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r654, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r655, %r653, %r654;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r658, %r650, %r655;
	// end inline asm
	shr.u32 	%r663, %r641, 8;
	// begin inline asm
	lop3.b32 %r661, %r640, %r663, %r642, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r665, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r666, %r642, %r665;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r669, %r661, %r666;
	// end inline asm
	// begin inline asm
	lop3.b32 %r672, %r651, %r663, %r653, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r676, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r677, %r653, %r676;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r680, %r672, %r677;
	// end inline asm
	// begin inline asm
	mov.b32 %r688, {%rs294, %rs294};
	// end inline asm
	// begin inline asm
	mov.b32 %r699, {%rs242, %rs242};
	// end inline asm
	xor.b32  	%r687, %r2556, -2004318072;
	// begin inline asm
	lop3.b32 %r685, %r640, %r687, %r688, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r689, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r690, %r688, %r689;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r693, %r685, %r690;
	// end inline asm
	// begin inline asm
	lop3.b32 %r696, %r651, %r687, %r699, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r700, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r701, %r699, %r700;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r704, %r696, %r701;
	// end inline asm
	shr.u32 	%r709, %r687, 8;
	// begin inline asm
	lop3.b32 %r707, %r640, %r709, %r688, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r711, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r712, %r688, %r711;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r715, %r707, %r712;
	// end inline asm
	// begin inline asm
	lop3.b32 %r718, %r651, %r709, %r699, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r722, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r723, %r699, %r722;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r726, %r718, %r723;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r729, %r240;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r731, %r729, %r647;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r734, %r240;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r736, %r734, %r658;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r739, %r240;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r741, %r739, %r669;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r744, %r240;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r746, %r744, %r680;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r749, %r240;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r751, %r749, %r693;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r754, %r240;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r756, %r754, %r704;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r759, %r240;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r761, %r759, %r715;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r764, %r240;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r766, %r764, %r726;
	// end inline asm
	// begin inline asm
	mov.b32 %r774, {%rs294, %rs294};
	// end inline asm
	// begin inline asm
	mov.b32 %r785, {%rs242, %rs242};
	// end inline asm
	xor.b32  	%r773, %r2573, -2004318072;
	// begin inline asm
	lop3.b32 %r771, %r640, %r773, %r774, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r775, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r776, %r774, %r775;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r779, %r771, %r776;
	// end inline asm
	// begin inline asm
	lop3.b32 %r782, %r651, %r773, %r785, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r786, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r787, %r785, %r786;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r790, %r782, %r787;
	// end inline asm
	shr.u32 	%r795, %r773, 8;
	// begin inline asm
	lop3.b32 %r793, %r640, %r795, %r774, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r797, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r798, %r774, %r797;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r801, %r793, %r798;
	// end inline asm
	// begin inline asm
	lop3.b32 %r804, %r651, %r795, %r785, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r808, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r809, %r785, %r808;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r812, %r804, %r809;
	// end inline asm
	// begin inline asm
	mov.b32 %r820, {%rs294, %rs294};
	// end inline asm
	// begin inline asm
	mov.b32 %r831, {%rs242, %rs242};
	// end inline asm
	xor.b32  	%r819, %r2572, -2004318072;
	// begin inline asm
	lop3.b32 %r817, %r640, %r819, %r820, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r821, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r822, %r820, %r821;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r825, %r817, %r822;
	// end inline asm
	// begin inline asm
	lop3.b32 %r828, %r651, %r819, %r831, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r832, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r833, %r831, %r832;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r836, %r828, %r833;
	// end inline asm
	shr.u32 	%r841, %r819, 8;
	// begin inline asm
	lop3.b32 %r839, %r640, %r841, %r820, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r843, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r844, %r820, %r843;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r847, %r839, %r844;
	// end inline asm
	// begin inline asm
	lop3.b32 %r850, %r651, %r841, %r831, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r854, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r855, %r831, %r854;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r858, %r850, %r855;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r861, %r186, %r779, %r731;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r865, %r186, %r790, %r736;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r869, %r186, %r801, %r741;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r873, %r186, %r812, %r746;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r877, %r186, %r825, %r751;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r881, %r186, %r836, %r756;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r885, %r186, %r847, %r761;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r889, %r186, %r858, %r766;
	// end inline asm
	// begin inline asm
	mov.b32 %r898, {%rs294, %rs294};
	// end inline asm
	// begin inline asm
	mov.b32 %r909, {%rs242, %rs242};
	// end inline asm
	xor.b32  	%r897, %r2571, -2004318072;
	// begin inline asm
	lop3.b32 %r895, %r640, %r897, %r898, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r899, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r900, %r898, %r899;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r903, %r895, %r900;
	// end inline asm
	// begin inline asm
	lop3.b32 %r906, %r651, %r897, %r909, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r910, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r911, %r909, %r910;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r914, %r906, %r911;
	// end inline asm
	shr.u32 	%r919, %r897, 8;
	// begin inline asm
	lop3.b32 %r917, %r640, %r919, %r898, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r921, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r922, %r898, %r921;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r925, %r917, %r922;
	// end inline asm
	// begin inline asm
	lop3.b32 %r928, %r651, %r919, %r909, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r932, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r933, %r909, %r932;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r936, %r928, %r933;
	// end inline asm
	// begin inline asm
	mov.b32 %r944, {%rs294, %rs294};
	// end inline asm
	// begin inline asm
	mov.b32 %r955, {%rs242, %rs242};
	// end inline asm
	xor.b32  	%r943, %r2570, -2004318072;
	// begin inline asm
	lop3.b32 %r941, %r640, %r943, %r944, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r945, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r946, %r944, %r945;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r949, %r941, %r946;
	// end inline asm
	// begin inline asm
	lop3.b32 %r952, %r651, %r943, %r955, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r956, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r957, %r955, %r956;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r960, %r952, %r957;
	// end inline asm
	shr.u32 	%r965, %r943, 8;
	// begin inline asm
	lop3.b32 %r963, %r640, %r965, %r944, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r967, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r968, %r944, %r967;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r971, %r963, %r968;
	// end inline asm
	// begin inline asm
	lop3.b32 %r974, %r651, %r965, %r955, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r978, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r979, %r955, %r978;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r982, %r974, %r979;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r985, %r204;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r987, %r985, %r903, %r861;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r991, %r204;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r993, %r991, %r914, %r865;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r997, %r204;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r999, %r997, %r925, %r869;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1003, %r204;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1005, %r1003, %r936, %r873;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1009, %r204;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1011, %r1009, %r949, %r877;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1015, %r204;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1017, %r1015, %r960, %r881;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1021, %r204;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1023, %r1021, %r971, %r885;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1027, %r204;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1029, %r1027, %r982, %r889;
	// end inline asm
	// begin inline asm
	mov.b32 %r1038, {%rs294, %rs294};
	// end inline asm
	// begin inline asm
	mov.b32 %r1049, {%rs242, %rs242};
	// end inline asm
	xor.b32  	%r1037, %r2553, -2004318072;
	// begin inline asm
	lop3.b32 %r1035, %r640, %r1037, %r1038, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1039, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1040, %r1038, %r1039;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1043, %r1035, %r1040;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1046, %r651, %r1037, %r1049, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1050, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1051, %r1049, %r1050;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1054, %r1046, %r1051;
	// end inline asm
	shr.u32 	%r1059, %r1037, 8;
	// begin inline asm
	lop3.b32 %r1057, %r640, %r1059, %r1038, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1061, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1062, %r1038, %r1061;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1065, %r1057, %r1062;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1068, %r651, %r1059, %r1049, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1072, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1073, %r1049, %r1072;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1076, %r1068, %r1073;
	// end inline asm
	// begin inline asm
	mov.b32 %r1084, {%rs294, %rs294};
	// end inline asm
	// begin inline asm
	mov.b32 %r1095, {%rs242, %rs242};
	// end inline asm
	xor.b32  	%r1083, %r2554, -2004318072;
	// begin inline asm
	lop3.b32 %r1081, %r640, %r1083, %r1084, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1085, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1086, %r1084, %r1085;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1089, %r1081, %r1086;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1092, %r651, %r1083, %r1095, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1096, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1097, %r1095, %r1096;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1100, %r1092, %r1097;
	// end inline asm
	shr.u32 	%r1105, %r1083, 8;
	// begin inline asm
	lop3.b32 %r1103, %r640, %r1105, %r1084, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1107, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1108, %r1084, %r1107;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1111, %r1103, %r1108;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1114, %r651, %r1105, %r1095, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1118, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1119, %r1095, %r1118;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1122, %r1114, %r1119;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1164, %r222, %r1043, %r987;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1161, %r222, %r1054, %r993;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1173, %r222, %r1065, %r999;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1170, %r222, %r1076, %r1005;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1182, %r222, %r1089, %r1011;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1179, %r222, %r1100, %r1017;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1191, %r222, %r1111, %r1023;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1188, %r222, %r1122, %r1029;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1157, %r246;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1159, %r1157, %r1161;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1162, %r243, %r1164, %r1159;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1166, %r246;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1168, %r1166, %r1170;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1171, %r243, %r1173, %r1168;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1175, %r246;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1177, %r1175, %r1179;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1180, %r243, %r1182, %r1177;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1184, %r246;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1186, %r1184, %r1188;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1189, %r243, %r1191, %r1186;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1193, %r246, %r1164;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1196, %r243, %r1161, %r1193;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1200, %r246, %r1173;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1203, %r243, %r1170, %r1200;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1207, %r246, %r1182;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1210, %r243, %r1179, %r1207;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1214, %r246, %r1191;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1217, %r243, %r1188, %r1214;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1268, %r1265}, {%r303, %r309, %r306, %r312}, {%r1162, %r1196}, {%r2545, %r2545};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1277, %r1274}, {%r303, %r309, %r306, %r312}, {%r1171, %r1203}, {%r2545, %r2545};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1286, %r1283}, {%r303, %r309, %r306, %r312}, {%r1180, %r1210}, {%r2545, %r2545};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1295, %r1292}, {%r303, %r309, %r306, %r312}, {%r1189, %r1217}, {%r2545, %r2545};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1261, %r353;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1263, %r1261, %r1265;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1266, %r350, %r1268, %r1263;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1270, %r353;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1272, %r1270, %r1274;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1275, %r350, %r1277, %r1272;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1279, %r353;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1281, %r1279, %r1283;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1284, %r350, %r1286, %r1281;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1288, %r353;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1290, %r1288, %r1292;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1293, %r350, %r1295, %r1290;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1297, %r353, %r1268;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1300, %r350, %r1265, %r1297;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1304, %r353, %r1277;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1307, %r350, %r1274, %r1304;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1311, %r353, %r1286;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1314, %r350, %r1283, %r1311;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1318, %r353, %r1295;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1321, %r350, %r1292, %r1318;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1325, %r1326}, {%r390, %r396, %r393, %r399}, {%r1266, %r1300}, {%r2545, %r2545};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1335, %r1336}, {%r390, %r396, %r393, %r399}, {%r1275, %r1307}, {%r2545, %r2545};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1345, %r1346}, {%r390, %r396, %r393, %r399}, {%r1284, %r1314}, {%r2545, %r2545};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1355, %r1356}, {%r390, %r396, %r393, %r399}, {%r1293, %r1321}, {%r2545, %r2545};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1365, %r79, %r1325;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1368, %r79, %r1326;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1371, %r79, %r1335;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1374, %r79, %r1336;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1377, %r79, %r1345;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1380, %r79, %r1346;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1383, %r79, %r1355;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1386, %r79, %r1356;
	// end inline asm
	mov.u16 	%rs103, -14592;
	// begin inline asm
	mov.b32 %r1389, {%rs103, %rs103};
	// end inline asm
	mov.u16 	%rs105, 18176;
	// begin inline asm
	mov.b32 %r1390, {%rs105, %rs105};
	// end inline asm
	// begin inline asm
	max.f16x2 %r1391, %r1365, %r1389;
	// end inline asm
	// begin inline asm
	min.f16x2 %r1394, %r1391, %r1390;
	// end inline asm
	// begin inline asm
	mov.b32 %r1397, {%rs103, %rs103};
	// end inline asm
	// begin inline asm
	mov.b32 %r1398, {%rs105, %rs105};
	// end inline asm
	// begin inline asm
	max.f16x2 %r1399, %r1368, %r1397;
	// end inline asm
	// begin inline asm
	min.f16x2 %r1402, %r1399, %r1398;
	// end inline asm
	// begin inline asm
	mov.b32 %r1405, {%rs103, %rs103};
	// end inline asm
	// begin inline asm
	mov.b32 %r1406, {%rs105, %rs105};
	// end inline asm
	// begin inline asm
	max.f16x2 %r1407, %r1371, %r1405;
	// end inline asm
	// begin inline asm
	min.f16x2 %r1410, %r1407, %r1406;
	// end inline asm
	// begin inline asm
	mov.b32 %r1413, {%rs103, %rs103};
	// end inline asm
	// begin inline asm
	mov.b32 %r1414, {%rs105, %rs105};
	// end inline asm
	// begin inline asm
	max.f16x2 %r1415, %r1374, %r1413;
	// end inline asm
	// begin inline asm
	min.f16x2 %r1418, %r1415, %r1414;
	// end inline asm
	// begin inline asm
	mov.b32 %r1421, {%rs103, %rs103};
	// end inline asm
	// begin inline asm
	mov.b32 %r1422, {%rs105, %rs105};
	// end inline asm
	// begin inline asm
	max.f16x2 %r1423, %r1377, %r1421;
	// end inline asm
	// begin inline asm
	min.f16x2 %r1426, %r1423, %r1422;
	// end inline asm
	// begin inline asm
	mov.b32 %r1429, {%rs103, %rs103};
	// end inline asm
	// begin inline asm
	mov.b32 %r1430, {%rs105, %rs105};
	// end inline asm
	// begin inline asm
	max.f16x2 %r1431, %r1380, %r1429;
	// end inline asm
	// begin inline asm
	min.f16x2 %r1434, %r1431, %r1430;
	// end inline asm
	// begin inline asm
	mov.b32 %r1437, {%rs103, %rs103};
	// end inline asm
	// begin inline asm
	mov.b32 %r1438, {%rs105, %rs105};
	// end inline asm
	// begin inline asm
	max.f16x2 %r1439, %r1383, %r1437;
	// end inline asm
	// begin inline asm
	min.f16x2 %r1442, %r1439, %r1438;
	// end inline asm
	// begin inline asm
	mov.b32 %r1445, {%rs103, %rs103};
	// end inline asm
	// begin inline asm
	mov.b32 %r1446, {%rs105, %rs105};
	// end inline asm
	// begin inline asm
	max.f16x2 %r1447, %r1386, %r1445;
	// end inline asm
	// begin inline asm
	min.f16x2 %r1450, %r1447, %r1446;
	// end inline asm
	// begin inline asm
	mov.b32 %r1456, {%rs294, %rs294};
	// end inline asm
	// begin inline asm
	mov.b32 %r1454, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1455, %r1456, %r1454;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1458, %r1394, %r1455;
	// end inline asm
	// begin inline asm
	mov.b32 %r1461, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1462, %r1456, %r1461;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1465, %r1402, %r1462;
	// end inline asm
	// begin inline asm
	mov.b32 %r1468, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1469, %r1456, %r1468;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1472, %r1410, %r1469;
	// end inline asm
	// begin inline asm
	mov.b32 %r1475, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1476, %r1456, %r1475;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1479, %r1418, %r1476;
	// end inline asm
	mov.u32 	%r1485, 25152;
	// begin inline asm
	prmt.b32 %r1482, %r1458, %r1472, %r1485;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1486, %r1465, %r1479, %r1485;
	// end inline asm
	shl.b32 	%r1493, %r1486, 4;
	mov.u32 	%r1491, 252645135;
	// begin inline asm
	lop3.b32 %r1490, %r1491, %r1482, %r1493, 202;
	// end inline asm
	xor.b32  	%r2450, %r1490, -2004318072;
	// begin inline asm
	mov.b32 %r1497, {%rs294, %rs294};
	// end inline asm
	// begin inline asm
	mov.b32 %r1495, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1496, %r1497, %r1495;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1499, %r1426, %r1496;
	// end inline asm
	// begin inline asm
	mov.b32 %r1502, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1503, %r1497, %r1502;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1506, %r1434, %r1503;
	// end inline asm
	// begin inline asm
	mov.b32 %r1509, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1510, %r1497, %r1509;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1513, %r1442, %r1510;
	// end inline asm
	// begin inline asm
	mov.b32 %r1516, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1517, %r1497, %r1516;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1520, %r1450, %r1517;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1523, %r1499, %r1513, %r1485;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1527, %r1506, %r1520, %r1485;
	// end inline asm
	shl.b32 	%r1534, %r1527, 4;
	// begin inline asm
	lop3.b32 %r1531, %r1491, %r1523, %r1534, 202;
	// end inline asm
	xor.b32  	%r2451, %r1531, -2004318072;
	st.shared.u32 	[%rd155], %r2450;
	st.shared.u32 	[%rd156], %r2451;
	ld.shared.u32 	%r2567, [%rd112];
	ld.shared.u32 	%r2568, [%rd114];
	// begin inline asm
	mov.b32 %r1540, {%rs294, %rs294};
	// end inline asm
	// begin inline asm
	mov.b32 %r1551, {%rs242, %rs242};
	// end inline asm
	xor.b32  	%r1539, %r2567, -2004318072;
	// begin inline asm
	lop3.b32 %r1537, %r640, %r1539, %r1540, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1541, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1542, %r1540, %r1541;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1545, %r1537, %r1542;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1548, %r651, %r1539, %r1551, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1552, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1553, %r1551, %r1552;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1556, %r1548, %r1553;
	// end inline asm
	shr.u32 	%r1561, %r1539, 8;
	// begin inline asm
	lop3.b32 %r1559, %r640, %r1561, %r1540, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1563, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1564, %r1540, %r1563;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1567, %r1559, %r1564;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1570, %r651, %r1561, %r1551, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1574, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1575, %r1551, %r1574;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1578, %r1570, %r1575;
	// end inline asm
	// begin inline asm
	mov.b32 %r1586, {%rs294, %rs294};
	// end inline asm
	// begin inline asm
	mov.b32 %r1597, {%rs242, %rs242};
	// end inline asm
	xor.b32  	%r1585, %r2568, -2004318072;
	// begin inline asm
	lop3.b32 %r1583, %r640, %r1585, %r1586, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1587, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1588, %r1586, %r1587;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1591, %r1583, %r1588;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1594, %r651, %r1585, %r1597, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1598, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1599, %r1597, %r1598;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1602, %r1594, %r1599;
	// end inline asm
	shr.u32 	%r1607, %r1585, 8;
	// begin inline asm
	lop3.b32 %r1605, %r640, %r1607, %r1586, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1609, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1610, %r1586, %r1609;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1613, %r1605, %r1610;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1616, %r651, %r1607, %r1597, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1620, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1621, %r1597, %r1620;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1624, %r1616, %r1621;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1627, %r240;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1629, %r1627, %r1545;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1632, %r240;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1634, %r1632, %r1556;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1637, %r240;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1639, %r1637, %r1567;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1642, %r240;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1644, %r1642, %r1578;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1647, %r240;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1649, %r1647, %r1591;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1652, %r240;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1654, %r1652, %r1602;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1657, %r240;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1659, %r1657, %r1613;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1662, %r240;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1664, %r1662, %r1624;
	// end inline asm
	// begin inline asm
	mov.b32 %r1672, {%rs294, %rs294};
	// end inline asm
	// begin inline asm
	mov.b32 %r1683, {%rs242, %rs242};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1669, %r640, %r897, %r1672, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1673, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1674, %r1672, %r1673;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1677, %r1669, %r1674;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1680, %r651, %r897, %r1683, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1684, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1685, %r1683, %r1684;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1688, %r1680, %r1685;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1691, %r640, %r919, %r1672, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1695, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1696, %r1672, %r1695;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1699, %r1691, %r1696;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1702, %r651, %r919, %r1683, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1706, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1707, %r1683, %r1706;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1710, %r1702, %r1707;
	// end inline asm
	// begin inline asm
	mov.b32 %r1718, {%rs294, %rs294};
	// end inline asm
	// begin inline asm
	mov.b32 %r1729, {%rs242, %rs242};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1715, %r640, %r943, %r1718, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1719, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1720, %r1718, %r1719;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1723, %r1715, %r1720;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1726, %r651, %r943, %r1729, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1730, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1731, %r1729, %r1730;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1734, %r1726, %r1731;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1737, %r640, %r965, %r1718, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1741, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1742, %r1718, %r1741;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1745, %r1737, %r1742;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1748, %r651, %r965, %r1729, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1752, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1753, %r1729, %r1752;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1756, %r1748, %r1753;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1759, %r186, %r1677, %r1629;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1763, %r186, %r1688, %r1634;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1767, %r186, %r1699, %r1639;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1771, %r186, %r1710, %r1644;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1775, %r186, %r1723, %r1649;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1779, %r186, %r1734, %r1654;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1783, %r186, %r1745, %r1659;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1787, %r186, %r1756, %r1664;
	// end inline asm
	// begin inline asm
	mov.b32 %r1796, {%rs294, %rs294};
	// end inline asm
	// begin inline asm
	mov.b32 %r1807, {%rs242, %rs242};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1793, %r640, %r1037, %r1796, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1797, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1798, %r1796, %r1797;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1801, %r1793, %r1798;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1804, %r651, %r1037, %r1807, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1808, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1809, %r1807, %r1808;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1812, %r1804, %r1809;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1815, %r640, %r1059, %r1796, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1819, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1820, %r1796, %r1819;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1823, %r1815, %r1820;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1826, %r651, %r1059, %r1807, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1830, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1831, %r1807, %r1830;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1834, %r1826, %r1831;
	// end inline asm
	// begin inline asm
	mov.b32 %r1842, {%rs294, %rs294};
	// end inline asm
	// begin inline asm
	mov.b32 %r1853, {%rs242, %rs242};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1839, %r640, %r1083, %r1842, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1843, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1844, %r1842, %r1843;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1847, %r1839, %r1844;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1850, %r651, %r1083, %r1853, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1854, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1855, %r1853, %r1854;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1858, %r1850, %r1855;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1861, %r640, %r1105, %r1842, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1865, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1866, %r1842, %r1865;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1869, %r1861, %r1866;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1872, %r651, %r1105, %r1853, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1876, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1877, %r1853, %r1876;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1880, %r1872, %r1877;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1883, %r204;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1885, %r1883, %r1801, %r1759;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1889, %r204;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1891, %r1889, %r1812, %r1763;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1895, %r204;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1897, %r1895, %r1823, %r1767;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1901, %r204;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1903, %r1901, %r1834, %r1771;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1907, %r204;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1909, %r1907, %r1847, %r1775;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1913, %r204;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1915, %r1913, %r1858, %r1779;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1919, %r204;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1921, %r1919, %r1869, %r1783;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1925, %r204;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1927, %r1925, %r1880, %r1787;
	// end inline asm
	// begin inline asm
	mov.b32 %r1936, {%rs294, %rs294};
	// end inline asm
	// begin inline asm
	mov.b32 %r1947, {%rs242, %rs242};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1933, %r640, %r641, %r1936, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1937, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1938, %r1936, %r1937;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1941, %r1933, %r1938;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1944, %r651, %r641, %r1947, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1948, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1949, %r1947, %r1948;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1952, %r1944, %r1949;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1955, %r640, %r663, %r1936, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1959, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1960, %r1936, %r1959;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1963, %r1955, %r1960;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1966, %r651, %r663, %r1947, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1970, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1971, %r1947, %r1970;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1974, %r1966, %r1971;
	// end inline asm
	// begin inline asm
	mov.b32 %r1982, {%rs294, %rs294};
	// end inline asm
	// begin inline asm
	mov.b32 %r1993, {%rs242, %rs242};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1979, %r640, %r687, %r1982, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1983, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1984, %r1982, %r1983;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1987, %r1979, %r1984;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1990, %r651, %r687, %r1993, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1994, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1995, %r1993, %r1994;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1998, %r1990, %r1995;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2001, %r640, %r709, %r1982, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2005, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2006, %r1982, %r2005;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2009, %r2001, %r2006;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2012, %r651, %r709, %r1993, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2016, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2017, %r1993, %r2016;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2020, %r2012, %r2017;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2062, %r222, %r1941, %r1885;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2059, %r222, %r1952, %r1891;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2071, %r222, %r1963, %r1897;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2068, %r222, %r1974, %r1903;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2080, %r222, %r1987, %r1909;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2077, %r222, %r1998, %r1915;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2089, %r222, %r2009, %r1921;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2086, %r222, %r2020, %r1927;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2055, %r246;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2057, %r2055, %r2059;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2060, %r243, %r2062, %r2057;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2064, %r246;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2066, %r2064, %r2068;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2069, %r243, %r2071, %r2066;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2073, %r246;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2075, %r2073, %r2077;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2078, %r243, %r2080, %r2075;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2082, %r246;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2084, %r2082, %r2086;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2087, %r243, %r2089, %r2084;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2091, %r246, %r2062;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2094, %r243, %r2059, %r2091;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2098, %r246, %r2071;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2101, %r243, %r2068, %r2098;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2105, %r246, %r2080;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2108, %r243, %r2077, %r2105;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2112, %r246, %r2089;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2115, %r243, %r2086, %r2112;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2166, %r2163}, {%r303, %r309, %r306, %r312}, {%r2060, %r2094}, {%r2545, %r2545};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2175, %r2172}, {%r303, %r309, %r306, %r312}, {%r2069, %r2101}, {%r2545, %r2545};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2184, %r2181}, {%r303, %r309, %r306, %r312}, {%r2078, %r2108}, {%r2545, %r2545};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2193, %r2190}, {%r303, %r309, %r306, %r312}, {%r2087, %r2115}, {%r2545, %r2545};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2159, %r353;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2161, %r2159, %r2163;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2164, %r350, %r2166, %r2161;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2168, %r353;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2170, %r2168, %r2172;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2173, %r350, %r2175, %r2170;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2177, %r353;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2179, %r2177, %r2181;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2182, %r350, %r2184, %r2179;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2186, %r353;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2188, %r2186, %r2190;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2191, %r350, %r2193, %r2188;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2195, %r353, %r2166;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2198, %r350, %r2163, %r2195;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2202, %r353, %r2175;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2205, %r350, %r2172, %r2202;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2209, %r353, %r2184;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2212, %r350, %r2181, %r2209;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2216, %r353, %r2193;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2219, %r350, %r2190, %r2216;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2223, %r2224}, {%r390, %r396, %r393, %r399}, {%r2164, %r2198}, {%r2545, %r2545};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2233, %r2234}, {%r390, %r396, %r393, %r399}, {%r2173, %r2205}, {%r2545, %r2545};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2243, %r2244}, {%r390, %r396, %r393, %r399}, {%r2182, %r2212}, {%r2545, %r2545};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2253, %r2254}, {%r390, %r396, %r393, %r399}, {%r2191, %r2219}, {%r2545, %r2545};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2263, %r79, %r2223;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2266, %r79, %r2224;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2269, %r79, %r2233;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2272, %r79, %r2234;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2275, %r79, %r2243;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2278, %r79, %r2244;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2281, %r79, %r2253;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2284, %r79, %r2254;
	// end inline asm
	// begin inline asm
	mov.b32 %r2287, {%rs103, %rs103};
	// end inline asm
	// begin inline asm
	mov.b32 %r2288, {%rs105, %rs105};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2289, %r2263, %r2287;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2292, %r2289, %r2288;
	// end inline asm
	// begin inline asm
	mov.b32 %r2295, {%rs103, %rs103};
	// end inline asm
	// begin inline asm
	mov.b32 %r2296, {%rs105, %rs105};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2297, %r2266, %r2295;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2300, %r2297, %r2296;
	// end inline asm
	// begin inline asm
	mov.b32 %r2303, {%rs103, %rs103};
	// end inline asm
	// begin inline asm
	mov.b32 %r2304, {%rs105, %rs105};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2305, %r2269, %r2303;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2308, %r2305, %r2304;
	// end inline asm
	// begin inline asm
	mov.b32 %r2311, {%rs103, %rs103};
	// end inline asm
	// begin inline asm
	mov.b32 %r2312, {%rs105, %rs105};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2313, %r2272, %r2311;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2316, %r2313, %r2312;
	// end inline asm
	// begin inline asm
	mov.b32 %r2319, {%rs103, %rs103};
	// end inline asm
	// begin inline asm
	mov.b32 %r2320, {%rs105, %rs105};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2321, %r2275, %r2319;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2324, %r2321, %r2320;
	// end inline asm
	// begin inline asm
	mov.b32 %r2327, {%rs103, %rs103};
	// end inline asm
	// begin inline asm
	mov.b32 %r2328, {%rs105, %rs105};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2329, %r2278, %r2327;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2332, %r2329, %r2328;
	// end inline asm
	// begin inline asm
	mov.b32 %r2335, {%rs103, %rs103};
	// end inline asm
	// begin inline asm
	mov.b32 %r2336, {%rs105, %rs105};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2337, %r2281, %r2335;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2340, %r2337, %r2336;
	// end inline asm
	// begin inline asm
	mov.b32 %r2343, {%rs103, %rs103};
	// end inline asm
	// begin inline asm
	mov.b32 %r2344, {%rs105, %rs105};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2345, %r2284, %r2343;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2348, %r2345, %r2344;
	// end inline asm
	// begin inline asm
	mov.b32 %r2354, {%rs294, %rs294};
	// end inline asm
	// begin inline asm
	mov.b32 %r2352, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2353, %r2354, %r2352;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2356, %r2292, %r2353;
	// end inline asm
	// begin inline asm
	mov.b32 %r2359, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2360, %r2354, %r2359;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2363, %r2300, %r2360;
	// end inline asm
	// begin inline asm
	mov.b32 %r2366, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2367, %r2354, %r2366;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2370, %r2308, %r2367;
	// end inline asm
	// begin inline asm
	mov.b32 %r2373, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2374, %r2354, %r2373;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2377, %r2316, %r2374;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2380, %r2356, %r2370, %r1485;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2384, %r2363, %r2377, %r1485;
	// end inline asm
	shl.b32 	%r2391, %r2384, 4;
	// begin inline asm
	lop3.b32 %r2388, %r1491, %r2380, %r2391, 202;
	// end inline asm
	xor.b32  	%r2452, %r2388, -2004318072;
	// begin inline asm
	mov.b32 %r2395, {%rs294, %rs294};
	// end inline asm
	// begin inline asm
	mov.b32 %r2393, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2394, %r2395, %r2393;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2397, %r2324, %r2394;
	// end inline asm
	// begin inline asm
	mov.b32 %r2400, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2401, %r2395, %r2400;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2404, %r2332, %r2401;
	// end inline asm
	// begin inline asm
	mov.b32 %r2407, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2408, %r2395, %r2407;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2411, %r2340, %r2408;
	// end inline asm
	// begin inline asm
	mov.b32 %r2414, {%rs302, %rs302};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2415, %r2395, %r2414;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2418, %r2348, %r2415;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2421, %r2397, %r2411, %r1485;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2425, %r2404, %r2418, %r1485;
	// end inline asm
	shl.b32 	%r2432, %r2425, 4;
	// begin inline asm
	lop3.b32 %r2429, %r1491, %r2421, %r2432, 202;
	// end inline asm
	xor.b32  	%r2453, %r2429, -2004318072;
	st.shared.u32 	[%rd155], %r2452;
	st.shared.u32 	[%rd156], %r2453;
	add.s32 	%r2569, %r2569, 32;
	add.s64 	%rd156, %rd156, 4228;
	add.s64 	%rd155, %rd155, 4228;
	add.s32 	%r2566, %r2566, 1;
	setp.eq.s32 	%p214, %r2569, 256;
	mov.u32 	%r2570, %r2556;
	mov.u32 	%r2571, %r2555;
	mov.u32 	%r2572, %r2554;
	mov.u32 	%r2573, %r2553;
	@%p214 bra 	$L__BB0_85;
	bra.uni 	$L__BB0_84;
$L__BB0_85:                             // %guard_exit10292
                                        //   in Loop: Header=BB0_83 Depth=1
	bar.sync 	0;
	or.b32  	%r128, %r70, %r56;
	ld.shared.u32 	%r2459, [%rd22];
	ld.shared.u32 	%r2460, [%rd23+128];
	ld.shared.u32 	%r2467, [%rd24+4];
	ld.shared.u32 	%r2468, [%rd24+132];
	ld.shared.u32 	%r2475, [%rd25];
	ld.shared.u32 	%r2476, [%rd26+128];
	ld.shared.u32 	%r2483, [%rd27+4];
	ld.shared.u32 	%r2484, [%rd27+132];
	ld.shared.u32 	%r2491, [%rd28];
	ld.shared.u32 	%r2492, [%rd29+128];
	ld.shared.u32 	%r2499, [%rd30+4];
	ld.shared.u32 	%r2500, [%rd30+132];
	ld.shared.u32 	%r2507, [%rd31];
	ld.shared.u32 	%r2508, [%rd32+128];
	ld.shared.u32 	%r2515, [%rd33+4];
	ld.shared.u32 	%r2516, [%rd33+132];
	// begin inline asm
	prmt.b32 %r2454, %r2459, %r2460, %r553;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2458, %r2459, %r2460, %r557;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2462, %r2467, %r2468, %r553;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2466, %r2467, %r2468, %r557;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2470, %r2475, %r2476, %r553;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2474, %r2475, %r2476, %r557;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2478, %r2483, %r2484, %r553;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2482, %r2483, %r2484, %r557;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2486, %r2491, %r2492, %r553;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2490, %r2491, %r2492, %r557;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2494, %r2499, %r2500, %r553;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2498, %r2499, %r2500, %r557;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2502, %r2507, %r2508, %r553;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2506, %r2507, %r2508, %r557;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2510, %r2515, %r2516, %r553;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2514, %r2515, %r2516, %r557;
	// end inline asm
	selp.b32 	%r2518, %r2458, %r2454, %p201;
	shfl.sync.bfly.b32	%r2519, %r2518, 8, 31, -1;
	selp.b32 	%r2520, %r2466, %r2462, %p201;
	shfl.sync.bfly.b32	%r2521, %r2520, 8, 31, -1;
	selp.b32 	%r2522, %r2474, %r2470, %p201;
	shfl.sync.bfly.b32	%r133, %r2522, 8, 31, -1;
	selp.b32 	%r2523, %r2482, %r2478, %p201;
	shfl.sync.bfly.b32	%r134, %r2523, 8, 31, -1;
	selp.b32 	%r2524, %r2490, %r2486, %p201;
	shfl.sync.bfly.b32	%r2525, %r2524, 8, 31, -1;
	selp.b32 	%r135, %r2486, %r2525, %p201;
	selp.b32 	%r136, %r2525, %r2490, %p201;
	selp.b32 	%r2526, %r2498, %r2494, %p201;
	shfl.sync.bfly.b32	%r2527, %r2526, 8, 31, -1;
	selp.b32 	%r137, %r2494, %r2527, %p201;
	selp.b32 	%r138, %r2527, %r2498, %p201;
	selp.b32 	%r2528, %r2506, %r2502, %p201;
	shfl.sync.bfly.b32	%r2529, %r2528, 8, 31, -1;
	selp.b32 	%r139, %r2502, %r2529, %p201;
	selp.b32 	%r140, %r2529, %r2506, %p201;
	selp.b32 	%r2530, %r2514, %r2510, %p201;
	shfl.sync.bfly.b32	%r2531, %r2530, 8, 31, -1;
	selp.b32 	%r141, %r2510, %r2531, %p201;
	selp.b32 	%r142, %r2531, %r2514, %p201;
	shl.b32 	%r2546, %r128, 11;
	@%p215 bra 	$L__BB0_117;
// %bb.86:                              // %guard_exit10292.pass9939_crit_edge
                                        //   in Loop: Header=BB0_83 Depth=1
	or.b32  	%r2574, %r2546, %r61;
	bra.uni 	$L__BB0_118;
$L__BB0_119:                            // %L22482
	st.global.u32 	[%rd4], %r2545;
	ret;
$L__BB0_7:                              // %L166
	mov.u32 	%r2544, 2;
	st.global.u32 	[%rd4], %r2544;
	mov.u64 	%rd153, exception2057;
	cvta.global.u64 	%rd154, %rd153;
	{ // callseq 4, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd154;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 4
	{ // callseq 5, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd42;
	st.param.b32 	[param0+8], %r144;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 5
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
$L__BB0_10:                             // %L275
	mov.u32 	%r2543, 3;
	st.global.u32 	[%rd4], %r2543;
	mov.u64 	%rd151, exception2057;
	cvta.global.u64 	%rd152, %rd151;
	{ // callseq 2, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd152;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 2
	{ // callseq 3, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd42;
	st.param.b32 	[param0+8], %r144;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 3
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
$L__BB0_1:                              // %L8
	mov.u64 	%rd47, exception12077;
	cvta.global.u64 	%rd48, %rd47;
	{ // callseq 0, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd48;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 0
	{ // callseq 1, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd42;
	st.param.b32 	[param0+8], %r144;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 1
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
                                        // -- End function
}
