// PTX kernel code for the CUDA upchannelizer
// This file has been generated automatically by `upchan.jl`.
// Do not modify this file, your changes will be lost.

// PTX CompilerJob of MethodInstance for upchan64(::Int32, ::Int32, ::Int32, ::Int32, ::Int32, ::Int32, ::CuDeviceVector{Float16x2, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int32, 1}) for sm_86, minthreads=512, blocks_per_sm=2

//
// Generated by LLVM NVPTX Back-End
//

.version 8.2
.target sm_86
.address_size 64

	// .globl	_Z8upchan645Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE // -- Begin function _Z8upchan645Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE
.func gpu_report_exception
(
	.param .b64 gpu_report_exception_param_0
)
.noreturn
{
	trap;
}
.func gpu_signal_exception
(
	.param .align 8 .b8 gpu_signal_exception_param_0[16]
)
.noreturn
{
	trap;
}
.extern .shared .align 32 .b8 shmem[];
.global .align 1 .b8 exception2065[6] = {101, 114, 114, 111, 114, 0};
.global .align 1 .b8 exception1[10] = {101, 120, 99, 101, 112, 116, 105, 111, 110, 0};
                                        // @_Z8upchan645Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE
.visible .entry _Z8upchan645Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE(
	.param .align 8 .b8 _Z8upchan645Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_0[16],
	.param .u32 _Z8upchan645Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_1,
	.param .u32 _Z8upchan645Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_2,
	.param .u32 _Z8upchan645Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_3,
	.param .u32 _Z8upchan645Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_4,
	.param .u32 _Z8upchan645Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_5,
	.param .u32 _Z8upchan645Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_6,
	.param .align 8 .b8 _Z8upchan645Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_7[32],
	.param .align 8 .b8 _Z8upchan645Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_8[32],
	.param .align 8 .b8 _Z8upchan645Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_9[32],
	.param .align 8 .b8 _Z8upchan645Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_10[32]
)
.reqntid 512, 1, 1
.minnctapersm 2
{
	.reg .pred 	%p<187>;
	.reg .b16 	%rs<265>;
	.reg .b32 	%r<2626>;
	.reg .f32 	%f<721>;
	.reg .b64 	%rd<152>;

// %bb.0:                               // %conversion
	ld.param.u32 	%r103, [_Z8upchan645Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_0+8];
	ld.param.u64 	%rd37, [_Z8upchan645Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_0];
	// begin inline asm
	mov.u32 %r110, %dynamic_smem_size;
	// end inline asm
	setp.gt.u32 	%p1, %r110, 33407;
	@%p1 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:                              // %L10
	// begin inline asm
	mov.u32 %r111, %dynamic_smem_size;
	// end inline asm
	setp.gt.u32 	%p2, %r111, 33407;
	@%p2 bra 	$L__BB0_4;
	bra.uni 	$L__BB0_3;
$L__BB0_4:                              // %L26
	ld.param.u32 	%r104, [_Z8upchan645Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_1];
	ld.param.u64 	%rd4, [_Z8upchan645Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_10];
	mov.u32 	%r1, %tid.y;
	shl.b32 	%r2, %r1, 5;
	mov.u32 	%r3, %ctaid.x;
	shl.b32 	%r112, %r3, 9;
	mov.u32 	%r4, %tid.x;
	or.b32  	%r113, %r112, %r4;
	or.b32  	%r114, %r113, %r2;
	mul.wide.u32 	%rd42, %r114, 4;
	add.s64 	%rd5, %rd4, %rd42;
	mov.u32 	%r115, 1;
	st.global.u32 	[%rd5], %r115;
	setp.gt.u32 	%p3, %r104, 65535;
	@%p3 bra 	$L__BB0_9;
// %bb.5:                               // %L131
	ld.param.u32 	%r105, [_Z8upchan645Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_2];
	setp.lt.s32 	%p4, %r105, %r104;
	setp.gt.s32 	%p5, %r105, 131071;
	or.pred  	%p6, %p4, %p5;
	@%p6 bra 	$L__BB0_9;
// %bb.6:                               // %L138
	ld.param.u32 	%r106, [_Z8upchan645Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_3];
	sub.s32 	%r116, %r105, %r104;
	and.b32  	%r117, %r116, 255;
	setp.ne.s32 	%p7, %r117, 0;
	setp.gt.u32 	%p8, %r106, 1023;
	or.pred  	%p9, %p7, %p8;
	@%p9 bra 	$L__BB0_9;
// %bb.7:                               // %L149
	ld.param.u32 	%r107, [_Z8upchan645Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_4];
	setp.lt.s32 	%p10, %r107, %r106;
	setp.gt.s32 	%p11, %r107, 2047;
	or.pred  	%p12, %p10, %p11;
	@%p12 bra 	$L__BB0_9;
// %bb.8:                               // %L156
	not.b32 	%r118, %r106;
	add.s32 	%r119, %r118, %r107;
	and.b32  	%r120, %r119, 3;
	setp.eq.s32 	%p13, %r120, 0;
	@%p13 bra 	$L__BB0_10;
	bra.uni 	$L__BB0_9;
$L__BB0_10:                             // %L269
	ld.param.u32 	%r108, [_Z8upchan645Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_5];
	setp.lt.s32 	%p14, %r108, 0;
	@%p14 bra 	$L__BB0_12;
// %bb.11:                              // %L271
	ld.param.u32 	%r109, [_Z8upchan645Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_6];
	setp.le.s32 	%p15, %r108, %r109;
	setp.lt.s32 	%p16, %r109, 17;
	and.pred  	%p17, %p15, %p16;
	@%p17 bra 	$L__BB0_13;
	bra.uni 	$L__BB0_12;
$L__BB0_13:                             // %pass141
	bfe.u32 	%r76, %r4, 2, 1;
	shr.u32 	%r77, %r4, 4;
	shl.b32 	%r128, %r77, 1;
	shl.b32 	%r129, %r76, 2;
	shl.b32 	%r78, %r4, 3;
	and.b32  	%r130, %r78, 24;
	or.b32  	%r131, %r129, %r130;
	or.b32  	%r132, %r128, %r131;
	bfe.u32 	%r133, %r4, 3, 1;
	or.b32  	%r80, %r133, %r132;
	shl.b32 	%r81, %r80, 1;
	or.b32  	%r134, %r81, -255;
	cvt.rn.f32.s32 	%f46, %r134;
	mov.f32 	%f47, 0f44008000;
	div.approx.f32 	%f42, %f46, %f47;
	mov.f32 	%f71, 0f00000000;
	mul.f32 	%f44, %f42, 0f40800000;
	setp.neu.f32 	%p23, %f44, 0f00000000;
	mov.f32 	%f720, 0f3F800000;
	mov.f32 	%f713, %f720;
	@%p23 bra 	$L__BB0_14;
	bra.uni 	$L__BB0_15;
$L__BB0_14:                             // %L606
	add.f32 	%f74, %f44, %f44;
	mov.b32 	%r142, %f74;
	and.b32  	%r143, %r142, -2147483648;
	or.b32  	%r144, %r143, 1056964608;
	mov.b32 	%f75, %r144;
	add.f32 	%f76, %f74, %f75;
	cvt.rzi.f32.f32 	%f77, %f76;
	abs.f32 	%f78, %f74;
	setp.gt.f32 	%p24, %f78, 0f4B000000;
	selp.f32 	%f79, %f74, %f77, %p24;
	cvt.rzi.f32.f32 	%f80, %f74;
	setp.lt.f32 	%p25, %f78, 0f3F000000;
	selp.f32 	%f81, %f80, %f79, %p25;
	cvt.rzi.s32.f32 	%r145, %f81;
	fma.rn.f32 	%f82, %f81, 0fBF000000, %f44;
	mul.f32 	%f83, %f82, %f82;
	fma.rn.f32 	%f84, %f83, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f85, %f83, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f86, %f84, %f83, 0fC0A55DF6;
	fma.rn.f32 	%f87, %f85, %f83, 0f4081E0CF;
	fma.rn.f32 	%f88, %f83, %f82, 0f00000000;
	fma.rn.f32 	%f89, %f87, %f83, 0fC09DE9E6;
	fma.rn.f32 	%f90, %f86, %f88, 0f00000000;
	fma.rn.f32 	%f91, %f89, %f83, 0f3F800000;
	fma.rn.f32 	%f92, %f82, 0f40490FDB, %f90;
	and.b32  	%r146, %r145, 1;
	setp.eq.b32 	%p26, %r146, 1;
	selp.f32 	%f93, %f91, %f92, %p26;
	and.b32  	%r147, %r145, 2;
	setp.eq.s32 	%p27, %r147, 0;
	sub.f32 	%f95, %f71, %f93;
	selp.f32 	%f96, %f93, %f95, %p27;
	cvt.rzi.f32.f32 	%f97, %f44;
	setp.eq.f32 	%p28, %f44, %f97;
	mul.f32 	%f98, %f44, 0f00000000;
	selp.f32 	%f99, %f98, %f96, %p28;
	mul.f32 	%f100, %f42, 0f41490FDB;
	div.approx.f32 	%f713, %f99, %f100;
$L__BB0_15:                             // %L610
	or.b32  	%r148, %r81, -191;
	cvt.rn.f32.s32 	%f104, %r148;
	div.approx.f32 	%f4, %f104, %f47;
	mul.f32 	%f6, %f4, 0f40800000;
	setp.eq.f32 	%p34, %f6, 0f00000000;
	mov.f32 	%f714, %f720;
	@%p34 bra 	$L__BB0_17;
// %bb.16:                              // %L624
	add.f32 	%f132, %f6, %f6;
	mov.b32 	%r156, %f132;
	and.b32  	%r157, %r156, -2147483648;
	or.b32  	%r158, %r157, 1056964608;
	mov.b32 	%f133, %r158;
	add.f32 	%f134, %f132, %f133;
	cvt.rzi.f32.f32 	%f135, %f134;
	abs.f32 	%f136, %f132;
	setp.gt.f32 	%p35, %f136, 0f4B000000;
	selp.f32 	%f137, %f132, %f135, %p35;
	cvt.rzi.f32.f32 	%f138, %f132;
	setp.lt.f32 	%p36, %f136, 0f3F000000;
	selp.f32 	%f139, %f138, %f137, %p36;
	cvt.rzi.s32.f32 	%r159, %f139;
	fma.rn.f32 	%f140, %f139, 0fBF000000, %f6;
	mul.f32 	%f141, %f140, %f140;
	fma.rn.f32 	%f142, %f141, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f143, %f141, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f144, %f142, %f141, 0fC0A55DF6;
	fma.rn.f32 	%f145, %f143, %f141, 0f4081E0CF;
	fma.rn.f32 	%f146, %f141, %f140, 0f00000000;
	fma.rn.f32 	%f147, %f145, %f141, 0fC09DE9E6;
	fma.rn.f32 	%f148, %f144, %f146, 0f00000000;
	fma.rn.f32 	%f149, %f147, %f141, 0f3F800000;
	fma.rn.f32 	%f150, %f140, 0f40490FDB, %f148;
	and.b32  	%r160, %r159, 1;
	setp.eq.b32 	%p37, %r160, 1;
	selp.f32 	%f151, %f149, %f150, %p37;
	and.b32  	%r161, %r159, 2;
	setp.eq.s32 	%p38, %r161, 0;
	sub.f32 	%f153, %f71, %f151;
	selp.f32 	%f154, %f151, %f153, %p38;
	cvt.rzi.f32.f32 	%f155, %f6;
	setp.eq.f32 	%p39, %f6, %f155;
	mul.f32 	%f156, %f6, 0f00000000;
	selp.f32 	%f157, %f156, %f154, %p39;
	mul.f32 	%f158, %f4, 0f41490FDB;
	div.approx.f32 	%f714, %f157, %f158;
$L__BB0_17:                             // %L628
	or.b32  	%r165, %r81, -127;
	cvt.rn.f32.s32 	%f163, %r165;
	div.approx.f32 	%f9, %f163, %f47;
	mul.f32 	%f11, %f9, 0f40800000;
	setp.eq.f32 	%p45, %f11, 0f00000000;
	mov.f32 	%f715, %f720;
	@%p45 bra 	$L__BB0_19;
// %bb.18:                              // %L704
	add.f32 	%f191, %f11, %f11;
	mov.b32 	%r173, %f191;
	and.b32  	%r174, %r173, -2147483648;
	or.b32  	%r175, %r174, 1056964608;
	mov.b32 	%f192, %r175;
	add.f32 	%f193, %f191, %f192;
	cvt.rzi.f32.f32 	%f194, %f193;
	abs.f32 	%f195, %f191;
	setp.gt.f32 	%p46, %f195, 0f4B000000;
	selp.f32 	%f196, %f191, %f194, %p46;
	cvt.rzi.f32.f32 	%f197, %f191;
	setp.lt.f32 	%p47, %f195, 0f3F000000;
	selp.f32 	%f198, %f197, %f196, %p47;
	cvt.rzi.s32.f32 	%r176, %f198;
	fma.rn.f32 	%f199, %f198, 0fBF000000, %f11;
	mul.f32 	%f200, %f199, %f199;
	fma.rn.f32 	%f201, %f200, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f202, %f200, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f203, %f201, %f200, 0fC0A55DF6;
	fma.rn.f32 	%f204, %f202, %f200, 0f4081E0CF;
	fma.rn.f32 	%f205, %f200, %f199, 0f00000000;
	fma.rn.f32 	%f206, %f204, %f200, 0fC09DE9E6;
	fma.rn.f32 	%f207, %f203, %f205, 0f00000000;
	fma.rn.f32 	%f208, %f206, %f200, 0f3F800000;
	fma.rn.f32 	%f209, %f199, 0f40490FDB, %f207;
	and.b32  	%r177, %r176, 1;
	setp.eq.b32 	%p48, %r177, 1;
	selp.f32 	%f210, %f208, %f209, %p48;
	and.b32  	%r178, %r176, 2;
	setp.eq.s32 	%p49, %r178, 0;
	sub.f32 	%f212, %f71, %f210;
	selp.f32 	%f213, %f210, %f212, %p49;
	cvt.rzi.f32.f32 	%f214, %f11;
	setp.eq.f32 	%p50, %f11, %f214;
	mul.f32 	%f215, %f11, 0f00000000;
	selp.f32 	%f216, %f215, %f213, %p50;
	mul.f32 	%f217, %f9, 0f41490FDB;
	div.approx.f32 	%f715, %f216, %f217;
$L__BB0_19:                             // %L708
	or.b32  	%r179, %r81, -63;
	cvt.rn.f32.s32 	%f221, %r179;
	div.approx.f32 	%f15, %f221, %f47;
	mul.f32 	%f17, %f15, 0f40800000;
	setp.eq.f32 	%p56, %f17, 0f00000000;
	mov.f32 	%f716, %f720;
	@%p56 bra 	$L__BB0_21;
// %bb.20:                              // %L722
	add.f32 	%f249, %f17, %f17;
	mov.b32 	%r187, %f249;
	and.b32  	%r188, %r187, -2147483648;
	or.b32  	%r189, %r188, 1056964608;
	mov.b32 	%f250, %r189;
	add.f32 	%f251, %f249, %f250;
	cvt.rzi.f32.f32 	%f252, %f251;
	abs.f32 	%f253, %f249;
	setp.gt.f32 	%p57, %f253, 0f4B000000;
	selp.f32 	%f254, %f249, %f252, %p57;
	cvt.rzi.f32.f32 	%f255, %f249;
	setp.lt.f32 	%p58, %f253, 0f3F000000;
	selp.f32 	%f256, %f255, %f254, %p58;
	cvt.rzi.s32.f32 	%r190, %f256;
	fma.rn.f32 	%f257, %f256, 0fBF000000, %f17;
	mul.f32 	%f258, %f257, %f257;
	fma.rn.f32 	%f259, %f258, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f260, %f258, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f261, %f259, %f258, 0fC0A55DF6;
	fma.rn.f32 	%f262, %f260, %f258, 0f4081E0CF;
	fma.rn.f32 	%f263, %f258, %f257, 0f00000000;
	fma.rn.f32 	%f264, %f262, %f258, 0fC09DE9E6;
	fma.rn.f32 	%f265, %f261, %f263, 0f00000000;
	fma.rn.f32 	%f266, %f264, %f258, 0f3F800000;
	fma.rn.f32 	%f267, %f257, 0f40490FDB, %f265;
	and.b32  	%r191, %r190, 1;
	setp.eq.b32 	%p59, %r191, 1;
	selp.f32 	%f268, %f266, %f267, %p59;
	and.b32  	%r192, %r190, 2;
	setp.eq.s32 	%p60, %r192, 0;
	sub.f32 	%f270, %f71, %f268;
	selp.f32 	%f271, %f268, %f270, %p60;
	cvt.rzi.f32.f32 	%f272, %f17;
	setp.eq.f32 	%p61, %f17, %f272;
	mul.f32 	%f273, %f17, 0f00000000;
	selp.f32 	%f274, %f273, %f271, %p61;
	mul.f32 	%f275, %f15, 0f41490FDB;
	div.approx.f32 	%f716, %f274, %f275;
$L__BB0_21:                             // %L726
	or.b32  	%r196, %r81, 1;
	cvt.rn.f32.s32 	%f280, %r196;
	div.approx.f32 	%f20, %f280, %f47;
	mul.f32 	%f22, %f20, 0f40800000;
	setp.eq.f32 	%p67, %f22, 0f00000000;
	mov.f32 	%f717, %f720;
	@%p67 bra 	$L__BB0_23;
// %bb.22:                              // %L802
	add.f32 	%f308, %f22, %f22;
	mov.b32 	%r204, %f308;
	and.b32  	%r205, %r204, -2147483648;
	or.b32  	%r206, %r205, 1056964608;
	mov.b32 	%f309, %r206;
	add.f32 	%f310, %f308, %f309;
	cvt.rzi.f32.f32 	%f311, %f310;
	abs.f32 	%f312, %f308;
	setp.gt.f32 	%p68, %f312, 0f4B000000;
	selp.f32 	%f313, %f308, %f311, %p68;
	cvt.rzi.f32.f32 	%f314, %f308;
	setp.lt.f32 	%p69, %f312, 0f3F000000;
	selp.f32 	%f315, %f314, %f313, %p69;
	cvt.rzi.s32.f32 	%r207, %f315;
	fma.rn.f32 	%f316, %f315, 0fBF000000, %f22;
	mul.f32 	%f317, %f316, %f316;
	fma.rn.f32 	%f318, %f317, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f319, %f317, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f320, %f318, %f317, 0fC0A55DF6;
	fma.rn.f32 	%f321, %f319, %f317, 0f4081E0CF;
	fma.rn.f32 	%f322, %f317, %f316, 0f00000000;
	fma.rn.f32 	%f323, %f321, %f317, 0fC09DE9E6;
	fma.rn.f32 	%f324, %f320, %f322, 0f00000000;
	fma.rn.f32 	%f325, %f323, %f317, 0f3F800000;
	fma.rn.f32 	%f326, %f316, 0f40490FDB, %f324;
	and.b32  	%r208, %r207, 1;
	setp.eq.b32 	%p70, %r208, 1;
	selp.f32 	%f327, %f325, %f326, %p70;
	and.b32  	%r209, %r207, 2;
	setp.eq.s32 	%p71, %r209, 0;
	sub.f32 	%f329, %f71, %f327;
	selp.f32 	%f330, %f327, %f329, %p71;
	cvt.rzi.f32.f32 	%f331, %f22;
	setp.eq.f32 	%p72, %f22, %f331;
	mul.f32 	%f332, %f22, 0f00000000;
	selp.f32 	%f333, %f332, %f330, %p72;
	mul.f32 	%f334, %f20, 0f41490FDB;
	div.approx.f32 	%f717, %f333, %f334;
$L__BB0_23:                             // %L806
	or.b32  	%r210, %r81, 65;
	cvt.rn.f32.s32 	%f338, %r210;
	div.approx.f32 	%f26, %f338, %f47;
	mul.f32 	%f28, %f26, 0f40800000;
	setp.eq.f32 	%p78, %f28, 0f00000000;
	mov.f32 	%f718, %f720;
	@%p78 bra 	$L__BB0_25;
// %bb.24:                              // %L820
	add.f32 	%f366, %f28, %f28;
	mov.b32 	%r218, %f366;
	and.b32  	%r219, %r218, -2147483648;
	or.b32  	%r220, %r219, 1056964608;
	mov.b32 	%f367, %r220;
	add.f32 	%f368, %f366, %f367;
	cvt.rzi.f32.f32 	%f369, %f368;
	abs.f32 	%f370, %f366;
	setp.gt.f32 	%p79, %f370, 0f4B000000;
	selp.f32 	%f371, %f366, %f369, %p79;
	cvt.rzi.f32.f32 	%f372, %f366;
	setp.lt.f32 	%p80, %f370, 0f3F000000;
	selp.f32 	%f373, %f372, %f371, %p80;
	cvt.rzi.s32.f32 	%r221, %f373;
	fma.rn.f32 	%f374, %f373, 0fBF000000, %f28;
	mul.f32 	%f375, %f374, %f374;
	fma.rn.f32 	%f376, %f375, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f377, %f375, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f378, %f376, %f375, 0fC0A55DF6;
	fma.rn.f32 	%f379, %f377, %f375, 0f4081E0CF;
	fma.rn.f32 	%f380, %f375, %f374, 0f00000000;
	fma.rn.f32 	%f381, %f379, %f375, 0fC09DE9E6;
	fma.rn.f32 	%f382, %f378, %f380, 0f00000000;
	fma.rn.f32 	%f383, %f381, %f375, 0f3F800000;
	fma.rn.f32 	%f384, %f374, 0f40490FDB, %f382;
	and.b32  	%r222, %r221, 1;
	setp.eq.b32 	%p81, %r222, 1;
	selp.f32 	%f385, %f383, %f384, %p81;
	and.b32  	%r223, %r221, 2;
	setp.eq.s32 	%p82, %r223, 0;
	sub.f32 	%f387, %f71, %f385;
	selp.f32 	%f388, %f385, %f387, %p82;
	cvt.rzi.f32.f32 	%f389, %f28;
	setp.eq.f32 	%p83, %f28, %f389;
	mul.f32 	%f390, %f28, 0f00000000;
	selp.f32 	%f391, %f390, %f388, %p83;
	mul.f32 	%f392, %f26, 0f41490FDB;
	div.approx.f32 	%f718, %f391, %f392;
$L__BB0_25:                             // %L824
	or.b32  	%r227, %r81, 129;
	cvt.rn.f32.s32 	%f397, %r227;
	div.approx.f32 	%f31, %f397, %f47;
	mul.f32 	%f33, %f31, 0f40800000;
	setp.eq.f32 	%p89, %f33, 0f00000000;
	mov.f32 	%f719, %f720;
	@%p89 bra 	$L__BB0_27;
// %bb.26:                              // %L900
	add.f32 	%f425, %f33, %f33;
	mov.b32 	%r235, %f425;
	and.b32  	%r236, %r235, -2147483648;
	or.b32  	%r237, %r236, 1056964608;
	mov.b32 	%f426, %r237;
	add.f32 	%f427, %f425, %f426;
	cvt.rzi.f32.f32 	%f428, %f427;
	abs.f32 	%f429, %f425;
	setp.gt.f32 	%p90, %f429, 0f4B000000;
	selp.f32 	%f430, %f425, %f428, %p90;
	cvt.rzi.f32.f32 	%f431, %f425;
	setp.lt.f32 	%p91, %f429, 0f3F000000;
	selp.f32 	%f432, %f431, %f430, %p91;
	cvt.rzi.s32.f32 	%r238, %f432;
	fma.rn.f32 	%f433, %f432, 0fBF000000, %f33;
	mul.f32 	%f434, %f433, %f433;
	fma.rn.f32 	%f435, %f434, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f436, %f434, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f437, %f435, %f434, 0fC0A55DF6;
	fma.rn.f32 	%f438, %f436, %f434, 0f4081E0CF;
	fma.rn.f32 	%f439, %f434, %f433, 0f00000000;
	fma.rn.f32 	%f440, %f438, %f434, 0fC09DE9E6;
	fma.rn.f32 	%f441, %f437, %f439, 0f00000000;
	fma.rn.f32 	%f442, %f440, %f434, 0f3F800000;
	fma.rn.f32 	%f443, %f433, 0f40490FDB, %f441;
	and.b32  	%r239, %r238, 1;
	setp.eq.b32 	%p92, %r239, 1;
	selp.f32 	%f444, %f442, %f443, %p92;
	and.b32  	%r240, %r238, 2;
	setp.eq.s32 	%p93, %r240, 0;
	sub.f32 	%f446, %f71, %f444;
	selp.f32 	%f447, %f444, %f446, %p93;
	cvt.rzi.f32.f32 	%f448, %f33;
	setp.eq.f32 	%p94, %f33, %f448;
	mul.f32 	%f449, %f33, 0f00000000;
	selp.f32 	%f450, %f449, %f447, %p94;
	mul.f32 	%f451, %f31, 0f41490FDB;
	div.approx.f32 	%f719, %f450, %f451;
$L__BB0_27:                             // %L904
	or.b32  	%r241, %r81, 193;
	cvt.rn.f32.s32 	%f455, %r241;
	div.approx.f32 	%f37, %f455, %f47;
	mul.f32 	%f39, %f37, 0f40800000;
	setp.eq.f32 	%p100, %f39, 0f00000000;
	@%p100 bra 	$L__BB0_29;
// %bb.28:                              // %L918
	add.f32 	%f483, %f39, %f39;
	mov.b32 	%r249, %f483;
	and.b32  	%r250, %r249, -2147483648;
	or.b32  	%r251, %r250, 1056964608;
	mov.b32 	%f484, %r251;
	add.f32 	%f485, %f483, %f484;
	cvt.rzi.f32.f32 	%f486, %f485;
	abs.f32 	%f487, %f483;
	setp.gt.f32 	%p101, %f487, 0f4B000000;
	selp.f32 	%f488, %f483, %f486, %p101;
	cvt.rzi.f32.f32 	%f489, %f483;
	setp.lt.f32 	%p102, %f487, 0f3F000000;
	selp.f32 	%f490, %f489, %f488, %p102;
	cvt.rzi.s32.f32 	%r252, %f490;
	fma.rn.f32 	%f491, %f490, 0fBF000000, %f39;
	mul.f32 	%f492, %f491, %f491;
	fma.rn.f32 	%f493, %f492, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f494, %f492, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f495, %f493, %f492, 0fC0A55DF6;
	fma.rn.f32 	%f496, %f494, %f492, 0f4081E0CF;
	fma.rn.f32 	%f497, %f492, %f491, 0f00000000;
	fma.rn.f32 	%f498, %f496, %f492, 0fC09DE9E6;
	fma.rn.f32 	%f499, %f495, %f497, 0f00000000;
	fma.rn.f32 	%f500, %f498, %f492, 0f3F800000;
	fma.rn.f32 	%f501, %f491, 0f40490FDB, %f499;
	and.b32  	%r253, %r252, 1;
	setp.eq.b32 	%p103, %r253, 1;
	selp.f32 	%f502, %f500, %f501, %p103;
	and.b32  	%r254, %r252, 2;
	setp.eq.s32 	%p104, %r254, 0;
	sub.f32 	%f504, %f71, %f502;
	selp.f32 	%f505, %f502, %f504, %p104;
	cvt.rzi.f32.f32 	%f506, %f39;
	setp.eq.f32 	%p105, %f39, %f506;
	mul.f32 	%f507, %f39, 0f00000000;
	selp.f32 	%f508, %f507, %f505, %p105;
	mul.f32 	%f509, %f37, 0f41490FDB;
	div.approx.f32 	%f720, %f508, %f509;
$L__BB0_29:                             // %L922
	setp.le.s32 	%p148, %r105, %r104;
	mov.u32 	%r2597, 0;
	@%p148 bra 	$L__BB0_40;
// %bb.30:                              // %L1517.lr.ph
	abs.f32 	%f48, %f42;
	abs.f32 	%f106, %f4;
	abs.f32 	%f165, %f9;
	abs.f32 	%f223, %f15;
	abs.f32 	%f282, %f20;
	abs.f32 	%f340, %f26;
	setp.gt.f32 	%p18, %f48, 0f4B800000;
	mul.f32 	%f49, %f42, 0f00000000;
	setp.gt.f32 	%p29, %f106, 0f4B800000;
	mul.f32 	%f107, %f4, 0f00000000;
	setp.gt.f32 	%p40, %f165, 0f4B800000;
	mul.f32 	%f166, %f9, 0f00000000;
	setp.gt.f32 	%p51, %f223, 0f4B800000;
	mul.f32 	%f224, %f15, 0f00000000;
	setp.gt.f32 	%p62, %f282, 0f4B800000;
	mul.f32 	%f283, %f20, 0f00000000;
	setp.gt.f32 	%p73, %f340, 0f4B800000;
	mul.f32 	%f341, %f26, 0f00000000;
	abs.f32 	%f399, %f31;
	selp.f32 	%f50, %f49, %f42, %p18;
	selp.f32 	%f108, %f107, %f4, %p29;
	selp.f32 	%f167, %f166, %f9, %p40;
	selp.f32 	%f225, %f224, %f15, %p51;
	selp.f32 	%f284, %f283, %f20, %p62;
	selp.f32 	%f342, %f341, %f26, %p73;
	setp.gt.f32 	%p84, %f399, 0f4B800000;
	mul.f32 	%f400, %f31, 0f00000000;
	add.f32 	%f51, %f50, %f50;
	add.f32 	%f109, %f108, %f108;
	add.f32 	%f168, %f167, %f167;
	add.f32 	%f226, %f225, %f225;
	add.f32 	%f285, %f284, %f284;
	add.f32 	%f343, %f342, %f342;
	selp.f32 	%f401, %f400, %f31, %p84;
	abs.f32 	%f457, %f37;
	mov.b32 	%r135, %f51;
	mov.b32 	%r149, %f109;
	mov.b32 	%r166, %f168;
	mov.b32 	%r180, %f226;
	mov.b32 	%r197, %f285;
	mov.b32 	%r211, %f343;
	add.f32 	%f402, %f401, %f401;
	setp.gt.f32 	%p95, %f457, 0f4B800000;
	mul.f32 	%f458, %f37, 0f00000000;
	and.b32  	%r136, %r135, -2147483648;
	and.b32  	%r150, %r149, -2147483648;
	and.b32  	%r167, %r166, -2147483648;
	and.b32  	%r181, %r180, -2147483648;
	and.b32  	%r198, %r197, -2147483648;
	and.b32  	%r212, %r211, -2147483648;
	mov.b32 	%r228, %f402;
	selp.f32 	%f459, %f458, %f37, %p95;
	or.b32  	%r137, %r136, 1056964608;
	or.b32  	%r151, %r150, 1056964608;
	or.b32  	%r168, %r167, 1056964608;
	or.b32  	%r182, %r181, 1056964608;
	or.b32  	%r199, %r198, 1056964608;
	or.b32  	%r213, %r212, 1056964608;
	and.b32  	%r229, %r228, -2147483648;
	add.f32 	%f460, %f459, %f459;
	mov.b32 	%f52, %r137;
	mov.b32 	%f110, %r151;
	mov.b32 	%f169, %r168;
	mov.b32 	%f227, %r182;
	mov.b32 	%f286, %r199;
	mov.b32 	%f344, %r213;
	or.b32  	%r230, %r229, 1056964608;
	mov.b32 	%r242, %f460;
	add.f32 	%f53, %f51, %f52;
	abs.f32 	%f55, %f51;
	add.f32 	%f111, %f109, %f110;
	abs.f32 	%f113, %f109;
	add.f32 	%f170, %f168, %f169;
	abs.f32 	%f172, %f168;
	add.f32 	%f228, %f226, %f227;
	abs.f32 	%f230, %f226;
	add.f32 	%f287, %f285, %f286;
	abs.f32 	%f289, %f285;
	add.f32 	%f345, %f343, %f344;
	abs.f32 	%f347, %f343;
	mov.b32 	%f403, %r230;
	and.b32  	%r243, %r242, -2147483648;
	cvt.rzi.f32.f32 	%f54, %f53;
	setp.gt.f32 	%p19, %f55, 0f4B000000;
	cvt.rzi.f32.f32 	%f112, %f111;
	setp.gt.f32 	%p30, %f113, 0f4B000000;
	cvt.rzi.f32.f32 	%f171, %f170;
	setp.gt.f32 	%p41, %f172, 0f4B000000;
	cvt.rzi.f32.f32 	%f229, %f228;
	setp.gt.f32 	%p52, %f230, 0f4B000000;
	cvt.rzi.f32.f32 	%f288, %f287;
	setp.gt.f32 	%p63, %f289, 0f4B000000;
	cvt.rzi.f32.f32 	%f346, %f345;
	setp.gt.f32 	%p74, %f347, 0f4B000000;
	add.f32 	%f404, %f402, %f403;
	abs.f32 	%f406, %f402;
	or.b32  	%r244, %r243, 1056964608;
	selp.f32 	%f56, %f51, %f54, %p19;
	cvt.rzi.f32.f32 	%f57, %f51;
	setp.lt.f32 	%p20, %f55, 0f3F000000;
	selp.f32 	%f114, %f109, %f112, %p30;
	cvt.rzi.f32.f32 	%f115, %f109;
	setp.lt.f32 	%p31, %f113, 0f3F000000;
	selp.f32 	%f173, %f168, %f171, %p41;
	cvt.rzi.f32.f32 	%f174, %f168;
	setp.lt.f32 	%p42, %f172, 0f3F000000;
	selp.f32 	%f231, %f226, %f229, %p52;
	cvt.rzi.f32.f32 	%f232, %f226;
	setp.lt.f32 	%p53, %f230, 0f3F000000;
	selp.f32 	%f290, %f285, %f288, %p63;
	cvt.rzi.f32.f32 	%f291, %f285;
	setp.lt.f32 	%p64, %f289, 0f3F000000;
	selp.f32 	%f348, %f343, %f346, %p74;
	cvt.rzi.f32.f32 	%f349, %f343;
	setp.lt.f32 	%p75, %f347, 0f3F000000;
	cvt.rzi.f32.f32 	%f405, %f404;
	setp.gt.f32 	%p85, %f406, 0f4B000000;
	mov.b32 	%f461, %r244;
	selp.f32 	%f58, %f57, %f56, %p20;
	selp.f32 	%f116, %f115, %f114, %p31;
	selp.f32 	%f175, %f174, %f173, %p42;
	selp.f32 	%f233, %f232, %f231, %p53;
	selp.f32 	%f292, %f291, %f290, %p64;
	selp.f32 	%f350, %f349, %f348, %p75;
	selp.f32 	%f407, %f402, %f405, %p85;
	cvt.rzi.f32.f32 	%f408, %f402;
	setp.lt.f32 	%p86, %f406, 0f3F000000;
	add.f32 	%f462, %f460, %f461;
	abs.f32 	%f464, %f460;
	fma.rn.f32 	%f59, %f58, 0fBF000000, %f50;
	fma.rn.f32 	%f117, %f116, 0fBF000000, %f108;
	fma.rn.f32 	%f176, %f175, 0fBF000000, %f167;
	fma.rn.f32 	%f234, %f233, 0fBF000000, %f225;
	fma.rn.f32 	%f293, %f292, 0fBF000000, %f284;
	fma.rn.f32 	%f351, %f350, 0fBF000000, %f342;
	selp.f32 	%f409, %f408, %f407, %p86;
	cvt.rzi.f32.f32 	%f463, %f462;
	setp.gt.f32 	%p96, %f464, 0f4B000000;
	mul.f32 	%f60, %f59, %f59;
	mul.f32 	%f118, %f117, %f117;
	mul.f32 	%f177, %f176, %f176;
	mul.f32 	%f235, %f234, %f234;
	mul.f32 	%f294, %f293, %f293;
	mul.f32 	%f352, %f351, %f351;
	fma.rn.f32 	%f410, %f409, 0fBF000000, %f401;
	selp.f32 	%f465, %f460, %f463, %p96;
	cvt.rzi.f32.f32 	%f466, %f460;
	setp.lt.f32 	%p97, %f464, 0f3F000000;
	cvt.rzi.s32.f32 	%r138, %f58;
	fma.rn.f32 	%f61, %f60, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f62, %f60, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r152, %f116;
	fma.rn.f32 	%f119, %f118, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f120, %f118, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r169, %f175;
	fma.rn.f32 	%f178, %f177, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f179, %f177, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r183, %f233;
	fma.rn.f32 	%f236, %f235, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f237, %f235, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r200, %f292;
	fma.rn.f32 	%f295, %f294, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f296, %f294, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r214, %f350;
	fma.rn.f32 	%f353, %f352, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f354, %f352, 0f3E684E12, 0fBFAAD2E0;
	mul.f32 	%f411, %f410, %f410;
	selp.f32 	%f467, %f466, %f465, %p97;
	shl.b32 	%r121, %r3, 2;
	add.s32 	%r139, %r138, 1;
	fma.rn.f32 	%f63, %f61, %f60, 0fC0A55DF6;
	fma.rn.f32 	%f64, %f62, %f60, 0f4081E0CF;
	fma.rn.f32 	%f65, %f60, %f59, 0f00000000;
	add.s32 	%r153, %r152, 1;
	fma.rn.f32 	%f121, %f119, %f118, 0fC0A55DF6;
	fma.rn.f32 	%f122, %f120, %f118, 0f4081E0CF;
	fma.rn.f32 	%f123, %f118, %f117, 0f00000000;
	add.s32 	%r170, %r169, 1;
	fma.rn.f32 	%f180, %f178, %f177, 0fC0A55DF6;
	fma.rn.f32 	%f181, %f179, %f177, 0f4081E0CF;
	fma.rn.f32 	%f182, %f177, %f176, 0f00000000;
	add.s32 	%r184, %r183, 1;
	fma.rn.f32 	%f238, %f236, %f235, 0fC0A55DF6;
	fma.rn.f32 	%f239, %f237, %f235, 0f4081E0CF;
	fma.rn.f32 	%f240, %f235, %f234, 0f00000000;
	add.s32 	%r201, %r200, 1;
	fma.rn.f32 	%f297, %f295, %f294, 0fC0A55DF6;
	fma.rn.f32 	%f298, %f296, %f294, 0f4081E0CF;
	fma.rn.f32 	%f299, %f294, %f293, 0f00000000;
	add.s32 	%r215, %r214, 1;
	fma.rn.f32 	%f355, %f353, %f352, 0fC0A55DF6;
	fma.rn.f32 	%f356, %f354, %f352, 0f4081E0CF;
	fma.rn.f32 	%f357, %f352, %f351, 0f00000000;
	cvt.rzi.s32.f32 	%r231, %f409;
	fma.rn.f32 	%f412, %f411, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f413, %f411, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f468, %f467, 0fBF000000, %f459;
	shl.b32 	%r68, %r4, 1;
	and.b32  	%r122, %r121, 960;
	and.b32  	%r73, %r4, 18;
	fma.rn.f32 	%f66, %f64, %f60, 0fC09DE9E6;
	fma.rn.f32 	%f67, %f63, %f65, 0f00000000;
	and.b32  	%r140, %r139, 1;
	fma.rn.f32 	%f124, %f122, %f118, 0fC09DE9E6;
	fma.rn.f32 	%f125, %f121, %f123, 0f00000000;
	and.b32  	%r154, %r153, 1;
	fma.rn.f32 	%f183, %f181, %f177, 0fC09DE9E6;
	fma.rn.f32 	%f184, %f180, %f182, 0f00000000;
	and.b32  	%r171, %r170, 1;
	fma.rn.f32 	%f241, %f239, %f235, 0fC09DE9E6;
	fma.rn.f32 	%f242, %f238, %f240, 0f00000000;
	and.b32  	%r185, %r184, 1;
	fma.rn.f32 	%f300, %f298, %f294, 0fC09DE9E6;
	fma.rn.f32 	%f301, %f297, %f299, 0f00000000;
	and.b32  	%r202, %r201, 1;
	fma.rn.f32 	%f358, %f356, %f352, 0fC09DE9E6;
	fma.rn.f32 	%f359, %f355, %f357, 0f00000000;
	and.b32  	%r216, %r215, 1;
	add.s32 	%r232, %r231, 1;
	fma.rn.f32 	%f414, %f412, %f411, 0fC0A55DF6;
	fma.rn.f32 	%f415, %f413, %f411, 0f4081E0CF;
	fma.rn.f32 	%f416, %f411, %f410, 0f00000000;
	mul.f32 	%f469, %f468, %f468;
	and.b32  	%r69, %r68, 8;
	shl.b32 	%r70, %r4, 2;
	or.b32  	%r123, %r73, %r122;
	fma.rn.f32 	%f68, %f66, %f60, 0f3F800000;
	fma.rn.f32 	%f69, %f59, 0f40490FDB, %f67;
	setp.eq.b32 	%p21, %r140, 1;
	fma.rn.f32 	%f126, %f124, %f118, 0f3F800000;
	fma.rn.f32 	%f127, %f117, 0f40490FDB, %f125;
	setp.eq.b32 	%p32, %r154, 1;
	fma.rn.f32 	%f185, %f183, %f177, 0f3F800000;
	fma.rn.f32 	%f186, %f176, 0f40490FDB, %f184;
	setp.eq.b32 	%p43, %r171, 1;
	fma.rn.f32 	%f243, %f241, %f235, 0f3F800000;
	fma.rn.f32 	%f244, %f234, 0f40490FDB, %f242;
	setp.eq.b32 	%p54, %r185, 1;
	fma.rn.f32 	%f302, %f300, %f294, 0f3F800000;
	fma.rn.f32 	%f303, %f293, 0f40490FDB, %f301;
	setp.eq.b32 	%p65, %r202, 1;
	fma.rn.f32 	%f360, %f358, %f352, 0f3F800000;
	fma.rn.f32 	%f361, %f351, 0f40490FDB, %f359;
	setp.eq.b32 	%p76, %r216, 1;
	fma.rn.f32 	%f417, %f415, %f411, 0fC09DE9E6;
	fma.rn.f32 	%f418, %f414, %f416, 0f00000000;
	and.b32  	%r233, %r232, 1;
	cvt.rzi.s32.f32 	%r245, %f467;
	fma.rn.f32 	%f470, %f469, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f471, %f469, 0f3E684E12, 0fBFAAD2E0;
	and.b32  	%r71, %r70, 32;
	or.b32  	%r124, %r123, %r69;
	selp.f32 	%f70, %f68, %f69, %p21;
	and.b32  	%r141, %r139, 2;
	selp.f32 	%f128, %f126, %f127, %p32;
	and.b32  	%r155, %r153, 2;
	selp.f32 	%f187, %f185, %f186, %p43;
	and.b32  	%r172, %r170, 2;
	selp.f32 	%f245, %f243, %f244, %p54;
	and.b32  	%r186, %r184, 2;
	selp.f32 	%f304, %f302, %f303, %p65;
	and.b32  	%r203, %r201, 2;
	selp.f32 	%f362, %f360, %f361, %p76;
	and.b32  	%r217, %r215, 2;
	fma.rn.f32 	%f419, %f417, %f411, 0f3F800000;
	fma.rn.f32 	%f420, %f410, 0f40490FDB, %f418;
	setp.eq.b32 	%p87, %r233, 1;
	add.s32 	%r246, %r245, 1;
	fma.rn.f32 	%f472, %f470, %f469, 0fC0A55DF6;
	fma.rn.f32 	%f473, %f471, %f469, 0f4081E0CF;
	fma.rn.f32 	%f474, %f469, %f468, 0f00000000;
	and.b32  	%r72, %r70, 4;
	or.b32  	%r125, %r124, %r71;
	setp.eq.s32 	%p22, %r141, 0;
	sub.f32 	%f72, %f71, %f70;
	setp.eq.s32 	%p33, %r155, 0;
	sub.f32 	%f130, %f71, %f128;
	setp.eq.s32 	%p44, %r172, 0;
	sub.f32 	%f189, %f71, %f187;
	setp.eq.s32 	%p55, %r186, 0;
	sub.f32 	%f247, %f71, %f245;
	setp.eq.s32 	%p66, %r203, 0;
	sub.f32 	%f306, %f71, %f304;
	setp.eq.s32 	%p77, %r217, 0;
	sub.f32 	%f364, %f71, %f362;
	selp.f32 	%f421, %f419, %f420, %p87;
	and.b32  	%r234, %r232, 2;
	fma.rn.f32 	%f475, %f473, %f469, 0fC09DE9E6;
	fma.rn.f32 	%f476, %f472, %f474, 0f00000000;
	and.b32  	%r247, %r246, 1;
	or.b32  	%r126, %r125, %r72;
	selp.f32 	%f73, %f70, %f72, %p22;
	selp.f32 	%f131, %f128, %f130, %p33;
	selp.f32 	%f190, %f187, %f189, %p44;
	selp.f32 	%f248, %f245, %f247, %p55;
	selp.f32 	%f307, %f304, %f306, %p66;
	selp.f32 	%f365, %f362, %f364, %p77;
	setp.eq.s32 	%p88, %r234, 0;
	sub.f32 	%f423, %f71, %f421;
	fma.rn.f32 	%f477, %f475, %f469, 0f3F800000;
	fma.rn.f32 	%f478, %f468, 0f40490FDB, %f476;
	setp.eq.b32 	%p98, %r247, 1;
	bfe.u32 	%r127, %r126, 1, 5;
	mul.f32 	%f43, %f73, %f73;
	mul.f32 	%f5, %f131, %f131;
	mul.f32 	%f10, %f190, %f190;
	mul.f32 	%f16, %f248, %f248;
	mul.f32 	%f21, %f307, %f307;
	mul.f32 	%f27, %f365, %f365;
	selp.f32 	%f424, %f421, %f423, %p88;
	selp.f32 	%f479, %f477, %f478, %p98;
	and.b32  	%r248, %r246, 2;
	ld.param.u64 	%rd1, [_Z8upchan645Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_7];
	mul.wide.u32 	%rd43, %r127, 4;
	mul.f32 	%f102, %f713, %f43;
	mov.f32 	%f103, 0f42800000;
	mul.f32 	%f160, %f714, %f5;
	mul.f32 	%f219, %f715, %f10;
	mul.f32 	%f277, %f716, %f16;
	mul.f32 	%f336, %f717, %f21;
	mul.f32 	%f394, %f718, %f27;
	mul.f32 	%f32, %f424, %f424;
	setp.eq.s32 	%p99, %r248, 0;
	sub.f32 	%f481, %f71, %f479;
	add.s64 	%rd44, %rd1, %rd43;
	div.approx.f32 	%f3, %f102, %f103;
	div.approx.f32 	%f162, %f160, %f103;
	div.approx.f32 	%f14, %f219, %f103;
	div.approx.f32 	%f279, %f277, %f103;
	div.approx.f32 	%f25, %f336, %f103;
	div.approx.f32 	%f396, %f394, %f103;
	mul.f32 	%f453, %f719, %f32;
	selp.f32 	%f482, %f479, %f481, %p99;
	ld.param.u64 	%rd2, [_Z8upchan645Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_8];
	ld.param.u64 	%rd3, [_Z8upchan645Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_9];
	ld.global.u32 	%r74, [%rd44];
	shr.u32 	%r75, %r4, 1;
	shr.u32 	%r79, %r4, 3;
	mov.b32 	%r164, %f162;
	mov.b32 	%r163, %f3;
	mov.b32 	%r195, %f279;
	mov.b32 	%r194, %f14;
	mov.b32 	%r226, %f396;
	mov.b32 	%r225, %f25;
	div.approx.f32 	%f36, %f453, %f103;
	mul.f32 	%f38, %f482, %f482;
	// begin inline asm
	cvt.rn.f16x2.f32 %r162, %r164, %r163;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r193, %r195, %r194;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r224, %r226, %r225;
	// end inline asm
	mul.f32 	%f510, %f720, %f38;
	div.approx.f32 	%f512, %f510, %f103;
	mov.b32 	%r257, %f512;
	mov.b32 	%r256, %f36;
	// begin inline asm
	cvt.rn.f16x2.f32 %r255, %r257, %r256;
	// end inline asm
	mul.lo.s32 	%r294, %r80, 63;
	and.b32  	%r295, %r294, 127;
	cvt.rn.f32.s32 	%f513, %r295;
	div.approx.f32 	%f514, %f513, %f103;
	add.f32 	%f515, %f514, %f514;
	mov.b32 	%r296, %f515;
	and.b32  	%r297, %r296, -2147483648;
	or.b32  	%r298, %r297, 1056964608;
	mov.b32 	%f516, %r298;
	add.f32 	%f517, %f515, %f516;
	cvt.rzi.f32.f32 	%f518, %f517;
	abs.f32 	%f519, %f515;
	setp.gt.f32 	%p106, %f519, 0f4B000000;
	selp.f32 	%f520, %f515, %f518, %p106;
	cvt.rzi.f32.f32 	%f521, %f515;
	setp.lt.f32 	%p107, %f519, 0f3F000000;
	selp.f32 	%f522, %f521, %f520, %p107;
	cvt.rzi.s32.f32 	%r299, %f522;
	fma.rn.f32 	%f523, %f522, 0fBF000000, %f514;
	mul.f32 	%f524, %f523, %f523;
	fma.rn.f32 	%f525, %f524, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f526, %f524, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f527, %f525, %f524, 0fC0A55DF6;
	fma.rn.f32 	%f528, %f526, %f524, 0f4081E0CF;
	fma.rn.f32 	%f529, %f524, %f523, 0f00000000;
	fma.rn.f32 	%f530, %f528, %f524, 0fC09DE9E6;
	fma.rn.f32 	%f531, %f527, %f529, 0f00000000;
	fma.rn.f32 	%f532, %f530, %f524, 0f3F800000;
	fma.rn.f32 	%f533, %f523, 0f40490FDB, %f531;
	and.b32  	%r300, %r299, 1;
	setp.eq.b32 	%p108, %r300, 1;
	selp.f32 	%f534, %f532, %f533, %p108;
	selp.f32 	%f535, %f533, %f532, %p108;
	and.b32  	%r301, %r299, 2;
	setp.eq.s32 	%p109, %r301, 0;
	neg.f32 	%f536, %f534;
	selp.f32 	%f537, %f534, %f536, %p109;
	add.s32 	%r302, %r299, 1;
	and.b32  	%r303, %r302, 2;
	setp.eq.s32 	%p110, %r303, 0;
	sub.f32 	%f539, %f71, %f535;
	selp.f32 	%f540, %f535, %f539, %p110;
	cvt.rzi.f32.f32 	%f541, %f514;
	setp.eq.f32 	%p111, %f541, %f514;
	mul.f32 	%f542, %f514, 0f00000000;
	selp.f32 	%f543, %f542, %f537, %p111;
	abs.f32 	%f544, %f514;
	setp.gt.f32 	%p112, %f544, 0f4B800000;
	add.f32 	%f545, %f543, 0f3F800000;
	selp.f32 	%f546, %f545, %f540, %p112;
	add.s32 	%r304, %r294, 96;
	and.b32  	%r305, %r304, 127;
	cvt.rn.f32.s32 	%f547, %r305;
	div.approx.f32 	%f548, %f547, %f103;
	add.f32 	%f549, %f548, %f548;
	mov.b32 	%r306, %f549;
	and.b32  	%r307, %r306, -2147483648;
	or.b32  	%r308, %r307, 1056964608;
	mov.b32 	%f550, %r308;
	add.f32 	%f551, %f549, %f550;
	cvt.rzi.f32.f32 	%f552, %f551;
	abs.f32 	%f553, %f549;
	setp.gt.f32 	%p113, %f553, 0f4B000000;
	selp.f32 	%f554, %f549, %f552, %p113;
	cvt.rzi.f32.f32 	%f555, %f549;
	setp.lt.f32 	%p114, %f553, 0f3F000000;
	selp.f32 	%f556, %f555, %f554, %p114;
	cvt.rzi.s32.f32 	%r309, %f556;
	fma.rn.f32 	%f557, %f556, 0fBF000000, %f548;
	mul.f32 	%f558, %f557, %f557;
	fma.rn.f32 	%f559, %f558, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f560, %f558, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f561, %f559, %f558, 0fC0A55DF6;
	fma.rn.f32 	%f562, %f560, %f558, 0f4081E0CF;
	fma.rn.f32 	%f563, %f558, %f557, 0f00000000;
	fma.rn.f32 	%f564, %f562, %f558, 0fC09DE9E6;
	fma.rn.f32 	%f565, %f561, %f563, 0f00000000;
	fma.rn.f32 	%f566, %f564, %f558, 0f3F800000;
	fma.rn.f32 	%f567, %f557, 0f40490FDB, %f565;
	and.b32  	%r310, %r309, 1;
	setp.eq.b32 	%p115, %r310, 1;
	selp.f32 	%f568, %f566, %f567, %p115;
	selp.f32 	%f569, %f567, %f566, %p115;
	and.b32  	%r311, %r309, 2;
	setp.eq.s32 	%p116, %r311, 0;
	neg.f32 	%f570, %f568;
	selp.f32 	%f571, %f568, %f570, %p116;
	add.s32 	%r312, %r309, 1;
	and.b32  	%r313, %r312, 2;
	setp.eq.s32 	%p117, %r313, 0;
	sub.f32 	%f572, %f71, %f569;
	selp.f32 	%f573, %f569, %f572, %p117;
	cvt.rzi.f32.f32 	%f574, %f548;
	setp.eq.f32 	%p118, %f574, %f548;
	mul.f32 	%f575, %f548, 0f00000000;
	selp.f32 	%f576, %f575, %f571, %p118;
	abs.f32 	%f577, %f548;
	setp.gt.f32 	%p119, %f577, 0f4B800000;
	add.f32 	%f578, %f576, 0f3F800000;
	selp.f32 	%f579, %f578, %f573, %p119;
	mov.b32 	%r259, %f546;
	mov.b32 	%r260, %f579;
	// begin inline asm
	cvt.rn.f16x2.f32 %r258, %r260, %r259;
	// end inline asm
	mov.b32 	%r262, %f543;
	mov.b32 	%r263, %f576;
	// begin inline asm
	cvt.rn.f16x2.f32 %r261, %r263, %r262;
	// end inline asm
	and.b32  	%r314, %r79, 2;
	and.b32  	%r315, %r75, 4;
	or.b32  	%r316, %r76, %r314;
	or.b32  	%r317, %r316, %r315;
	and.b32  	%r318, %r68, 6;
	mul.lo.s32 	%r319, %r317, %r318;
	and.b32  	%r320, %r319, 14;
	cvt.rn.f32.s32 	%f580, %r320;
	mov.f32 	%f581, 0f41000000;
	div.approx.f32 	%f582, %f580, %f581;
	add.f32 	%f583, %f582, %f582;
	mov.b32 	%r321, %f583;
	and.b32  	%r322, %r321, -2147483648;
	or.b32  	%r323, %r322, 1056964608;
	mov.b32 	%f584, %r323;
	add.f32 	%f585, %f583, %f584;
	cvt.rzi.f32.f32 	%f586, %f585;
	abs.f32 	%f587, %f583;
	setp.gt.f32 	%p120, %f587, 0f4B000000;
	selp.f32 	%f588, %f583, %f586, %p120;
	cvt.rzi.f32.f32 	%f589, %f583;
	setp.lt.f32 	%p121, %f587, 0f3F000000;
	selp.f32 	%f590, %f589, %f588, %p121;
	cvt.rzi.s32.f32 	%r324, %f590;
	fma.rn.f32 	%f591, %f590, 0fBF000000, %f582;
	mul.f32 	%f592, %f591, %f591;
	fma.rn.f32 	%f593, %f592, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f594, %f592, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f595, %f593, %f592, 0fC0A55DF6;
	fma.rn.f32 	%f596, %f594, %f592, 0f4081E0CF;
	fma.rn.f32 	%f597, %f592, %f591, 0f00000000;
	fma.rn.f32 	%f598, %f596, %f592, 0fC09DE9E6;
	fma.rn.f32 	%f599, %f595, %f597, 0f00000000;
	fma.rn.f32 	%f600, %f598, %f592, 0f3F800000;
	fma.rn.f32 	%f601, %f591, 0f40490FDB, %f599;
	and.b32  	%r325, %r324, 1;
	setp.eq.b32 	%p122, %r325, 1;
	selp.f32 	%f602, %f600, %f601, %p122;
	selp.f32 	%f603, %f601, %f600, %p122;
	and.b32  	%r326, %r324, 2;
	setp.eq.s32 	%p123, %r326, 0;
	neg.f32 	%f604, %f602;
	selp.f32 	%f605, %f602, %f604, %p123;
	add.s32 	%r327, %r324, 1;
	and.b32  	%r328, %r327, 2;
	setp.eq.s32 	%p124, %r328, 0;
	sub.f32 	%f606, %f71, %f603;
	selp.f32 	%f607, %f603, %f606, %p124;
	cvt.rzi.f32.f32 	%f608, %f582;
	setp.eq.f32 	%p125, %f608, %f582;
	mul.f32 	%f609, %f582, 0f00000000;
	selp.f32 	%f610, %f609, %f605, %p125;
	abs.f32 	%f611, %f582;
	setp.gt.f32 	%p126, %f611, 0f4B800000;
	add.f32 	%f612, %f610, 0f3F800000;
	selp.f32 	%f613, %f612, %f607, %p126;
	or.b32  	%r329, %r68, 8;
	mul.lo.s32 	%r330, %r317, %r329;
	and.b32  	%r331, %r330, 14;
	cvt.rn.f32.s32 	%f614, %r331;
	div.approx.f32 	%f615, %f614, %f581;
	add.f32 	%f616, %f615, %f615;
	mov.b32 	%r332, %f616;
	and.b32  	%r333, %r332, -2147483648;
	or.b32  	%r334, %r333, 1056964608;
	mov.b32 	%f617, %r334;
	add.f32 	%f618, %f616, %f617;
	cvt.rzi.f32.f32 	%f619, %f618;
	abs.f32 	%f620, %f616;
	setp.gt.f32 	%p127, %f620, 0f4B000000;
	selp.f32 	%f621, %f616, %f619, %p127;
	cvt.rzi.f32.f32 	%f622, %f616;
	setp.lt.f32 	%p128, %f620, 0f3F000000;
	selp.f32 	%f623, %f622, %f621, %p128;
	cvt.rzi.s32.f32 	%r335, %f623;
	fma.rn.f32 	%f624, %f623, 0fBF000000, %f615;
	mul.f32 	%f625, %f624, %f624;
	fma.rn.f32 	%f626, %f625, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f627, %f625, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f628, %f626, %f625, 0fC0A55DF6;
	fma.rn.f32 	%f629, %f627, %f625, 0f4081E0CF;
	fma.rn.f32 	%f630, %f625, %f624, 0f00000000;
	fma.rn.f32 	%f631, %f629, %f625, 0fC09DE9E6;
	fma.rn.f32 	%f632, %f628, %f630, 0f00000000;
	fma.rn.f32 	%f633, %f631, %f625, 0f3F800000;
	fma.rn.f32 	%f634, %f624, 0f40490FDB, %f632;
	and.b32  	%r336, %r335, 1;
	setp.eq.b32 	%p129, %r336, 1;
	selp.f32 	%f635, %f633, %f634, %p129;
	selp.f32 	%f636, %f634, %f633, %p129;
	and.b32  	%r337, %r335, 2;
	setp.eq.s32 	%p130, %r337, 0;
	neg.f32 	%f637, %f635;
	selp.f32 	%f638, %f635, %f637, %p130;
	add.s32 	%r338, %r335, 1;
	and.b32  	%r339, %r338, 2;
	setp.eq.s32 	%p131, %r339, 0;
	sub.f32 	%f639, %f71, %f636;
	selp.f32 	%f640, %f636, %f639, %p131;
	cvt.rzi.f32.f32 	%f641, %f615;
	setp.eq.f32 	%p132, %f641, %f615;
	mul.f32 	%f642, %f615, 0f00000000;
	selp.f32 	%f643, %f642, %f638, %p132;
	abs.f32 	%f644, %f615;
	setp.gt.f32 	%p133, %f644, 0f4B800000;
	add.f32 	%f645, %f643, 0f3F800000;
	selp.f32 	%f646, %f645, %f640, %p133;
	mov.b32 	%r265, %f613;
	mov.b32 	%r266, %f646;
	// begin inline asm
	cvt.rn.f16x2.f32 %r264, %r266, %r265;
	// end inline asm
	mov.b32 	%r268, %f610;
	mov.b32 	%r269, %f643;
	// begin inline asm
	cvt.rn.f16x2.f32 %r267, %r269, %r268;
	// end inline asm
	xor.b32  	%r289, %r268, -2147483648;
	xor.b32  	%r290, %r269, -2147483648;
	// begin inline asm
	cvt.rn.f16x2.f32 %r270, %r290, %r289;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r273, %r266, %r265;
	// end inline asm
	cvt.rn.f32.s32 	%f647, %r319;
	div.approx.f32 	%f648, %f647, %f103;
	add.f32 	%f649, %f648, %f648;
	mov.b32 	%r340, %f649;
	and.b32  	%r341, %r340, -2147483648;
	or.b32  	%r342, %r341, 1056964608;
	mov.b32 	%f650, %r342;
	add.f32 	%f651, %f649, %f650;
	cvt.rzi.f32.f32 	%f652, %f651;
	abs.f32 	%f653, %f649;
	setp.gt.f32 	%p134, %f653, 0f4B000000;
	selp.f32 	%f654, %f649, %f652, %p134;
	cvt.rzi.f32.f32 	%f655, %f649;
	setp.lt.f32 	%p135, %f653, 0f3F000000;
	selp.f32 	%f656, %f655, %f654, %p135;
	cvt.rzi.s32.f32 	%r343, %f656;
	fma.rn.f32 	%f657, %f656, 0fBF000000, %f648;
	mul.f32 	%f658, %f657, %f657;
	fma.rn.f32 	%f659, %f658, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f660, %f658, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f661, %f659, %f658, 0fC0A55DF6;
	fma.rn.f32 	%f662, %f660, %f658, 0f4081E0CF;
	fma.rn.f32 	%f663, %f658, %f657, 0f00000000;
	fma.rn.f32 	%f664, %f662, %f658, 0fC09DE9E6;
	fma.rn.f32 	%f665, %f661, %f663, 0f00000000;
	fma.rn.f32 	%f666, %f664, %f658, 0f3F800000;
	fma.rn.f32 	%f667, %f657, 0f40490FDB, %f665;
	and.b32  	%r344, %r343, 1;
	setp.eq.b32 	%p136, %r344, 1;
	selp.f32 	%f668, %f666, %f667, %p136;
	selp.f32 	%f669, %f667, %f666, %p136;
	and.b32  	%r345, %r343, 2;
	setp.eq.s32 	%p137, %r345, 0;
	neg.f32 	%f670, %f668;
	selp.f32 	%f671, %f668, %f670, %p137;
	add.s32 	%r346, %r343, 1;
	and.b32  	%r347, %r346, 2;
	setp.eq.s32 	%p138, %r347, 0;
	sub.f32 	%f672, %f71, %f669;
	selp.f32 	%f673, %f669, %f672, %p138;
	cvt.rzi.f32.f32 	%f674, %f648;
	setp.eq.f32 	%p139, %f674, %f648;
	mul.f32 	%f675, %f648, 0f00000000;
	selp.f32 	%f676, %f675, %f671, %p139;
	mov.b32 	%r348, %f676;
	abs.f32 	%f677, %f648;
	setp.gt.f32 	%p140, %f677, 0f4B800000;
	add.f32 	%f678, %f676, 0f3F800000;
	selp.f32 	%f679, %f678, %f673, %p140;
	shl.b32 	%r349, %r317, 3;
	add.s32 	%r350, %r319, %r349;
	cvt.rn.f32.s32 	%f680, %r350;
	div.approx.f32 	%f681, %f680, %f103;
	add.f32 	%f682, %f681, %f681;
	mov.b32 	%r351, %f682;
	and.b32  	%r352, %r351, -2147483648;
	or.b32  	%r353, %r352, 1056964608;
	mov.b32 	%f683, %r353;
	add.f32 	%f684, %f682, %f683;
	cvt.rzi.f32.f32 	%f685, %f684;
	abs.f32 	%f686, %f682;
	setp.gt.f32 	%p141, %f686, 0f4B000000;
	selp.f32 	%f687, %f682, %f685, %p141;
	cvt.rzi.f32.f32 	%f688, %f682;
	setp.lt.f32 	%p142, %f686, 0f3F000000;
	selp.f32 	%f689, %f688, %f687, %p142;
	cvt.rzi.s32.f32 	%r354, %f689;
	fma.rn.f32 	%f690, %f689, 0fBF000000, %f681;
	mul.f32 	%f691, %f690, %f690;
	fma.rn.f32 	%f692, %f691, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f693, %f691, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f694, %f692, %f691, 0fC0A55DF6;
	fma.rn.f32 	%f695, %f693, %f691, 0f4081E0CF;
	fma.rn.f32 	%f696, %f691, %f690, 0f00000000;
	fma.rn.f32 	%f697, %f695, %f691, 0fC09DE9E6;
	fma.rn.f32 	%f698, %f694, %f696, 0f00000000;
	fma.rn.f32 	%f699, %f697, %f691, 0f3F800000;
	fma.rn.f32 	%f700, %f690, 0f40490FDB, %f698;
	and.b32  	%r355, %r354, 1;
	setp.eq.b32 	%p143, %r355, 1;
	selp.f32 	%f701, %f699, %f700, %p143;
	selp.f32 	%f702, %f700, %f699, %p143;
	and.b32  	%r356, %r354, 2;
	setp.eq.s32 	%p144, %r356, 0;
	neg.f32 	%f703, %f701;
	selp.f32 	%f704, %f701, %f703, %p144;
	add.s32 	%r357, %r354, 1;
	and.b32  	%r358, %r357, 2;
	setp.eq.s32 	%p145, %r358, 0;
	sub.f32 	%f705, %f71, %f702;
	selp.f32 	%f706, %f702, %f705, %p145;
	cvt.rzi.f32.f32 	%f707, %f681;
	setp.eq.f32 	%p146, %f707, %f681;
	mul.f32 	%f708, %f681, 0f00000000;
	selp.f32 	%f709, %f708, %f704, %p146;
	mov.b32 	%r359, %f709;
	abs.f32 	%f710, %f681;
	setp.gt.f32 	%p147, %f710, 0f4B800000;
	add.f32 	%f711, %f709, 0f3F800000;
	selp.f32 	%f712, %f711, %f706, %p147;
	mov.b32 	%r278, %f712;
	mov.b32 	%r277, %f679;
	// begin inline asm
	cvt.rn.f16x2.f32 %r276, %r278, %r277;
	// end inline asm
	xor.b32  	%r281, %r359, -2147483648;
	xor.b32  	%r280, %r348, -2147483648;
	// begin inline asm
	cvt.rn.f16x2.f32 %r279, %r281, %r280;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r282, %r266, %r265;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r285, %r269, %r268;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r288, %r290, %r289;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r291, %r266, %r265;
	// end inline asm
	shl.b32 	%r361, %r104, 13;
	shl.b32 	%r362, %r108, 9;
	shl.b32 	%r363, %r3, 5;
	and.b32  	%r21, %r363, 256;
	and.b32  	%r364, %r70, 28;
	and.b32  	%r365, %r363, 224;
	or.b32  	%r22, %r364, %r365;
	or.b32  	%r23, %r71, %r1;
	or.b32  	%r366, %r21, %r22;
	and.b32  	%r367, %r363, 7680;
	or.b32  	%r368, %r361, %r367;
	or.b32  	%r369, %r368, %r366;
	add.s32 	%r24, %r369, %r362;
	bfe.s32 	%r370, %r4, 3, 1;
	and.b32  	%r25, %r4, 8;
	shl.b32 	%r371, %r4, 4;
	or.b32  	%r372, %r371, %r25;
	shr.u32 	%r373, %r372, 2;
	and.b32  	%r374, %r373, 30;
	and.b32  	%r376, %r4, 4;
	or.b32  	%r26, %r130, %r376;
	shr.u32 	%r377, %r1, 1;
	and.b32  	%r378, %r2, 32;
	or.b32  	%r379, %r378, %r377;
	or.b32  	%r380, %r73, %r71;
	or.b32  	%r381, %r380, %r72;
	or.b32  	%r382, %r381, %r69;
	shr.u32 	%r383, %r382, 1;
	mul.lo.s32 	%r384, %r383, 65;
	add.s32 	%r385, %r379, %r384;
	or.b32  	%r386, %r379, 8;
	add.s32 	%r387, %r386, %r384;
	or.b32  	%r388, %r379, 16;
	add.s32 	%r389, %r388, %r384;
	or.b32  	%r390, %r379, 24;
	add.s32 	%r391, %r390, %r384;
	shl.b32 	%r392, %r1, 1;
	or.b32  	%r393, %r392, %r77;
	mul.lo.s32 	%r394, %r393, 65;
	add.s32 	%r395, %r374, %r394;
	mul.wide.u32 	%rd45, %r395, 4;
	mov.u64 	%rd46, shmem;
	add.s64 	%rd6, %rd46, %rd45;
	cvt.u64.u32 	%rd47, %r374;
	cvt.u64.u32 	%rd48, %r394;
	add.s64 	%rd49, %rd48, %rd47;
	shl.b64 	%rd50, %rd49, 2;
	add.s64 	%rd7, %rd46, %rd50;
	shl.b32 	%r396, %r106, 15;
	add.s32 	%r397, %r396, -98304;
	shl.b32 	%r398, %r1, 11;
	shl.b32 	%r399, %r4, 6;
	and.b32  	%r400, %r399, 1536;
	or.b32  	%r27, %r400, %r398;
	cvt.s64.s32 	%rd8, %r397;
	mul.lo.s32 	%r401, %r77, 65;
	shr.u32 	%r402, %r1, 3;
	mul.lo.s32 	%r403, %r402, 130;
	bfe.s32 	%r404, %r1, 2, 1;
	and.b32  	%r405, %r1, 4;
	setp.eq.s32 	%p149, %r405, 0;
	and.b32  	%r406, %r404, 260;
	bfe.s32 	%r407, %r1, 1, 1;
	and.b32  	%r408, %r1, 2;
	setp.eq.s32 	%p150, %r408, 0;
	and.b32  	%r409, %r407, 520;
	and.b32  	%r410, %r1, 1;
	neg.s32 	%r411, %r410;
	setp.eq.b32 	%p151, %r410, 1;
	and.b32  	%r412, %r411, 1040;
	add.s32 	%r413, %r412, %r374;
	add.s32 	%r414, %r413, %r401;
	add.s32 	%r415, %r414, %r403;
	add.s32 	%r416, %r415, %r406;
	add.s32 	%r417, %r416, %r409;
	mul.wide.u32 	%rd51, %r417, 4;
	add.s64 	%rd9, %rd46, %rd51;
	selp.b64 	%rd52, 0, 520, %p150;
	selp.b64 	%rd53, 0, 260, %p149;
	cvt.u64.u32 	%rd54, %r403;
	cvt.u64.u32 	%rd55, %r401;
	selp.b64 	%rd56, 1040, 0, %p151;
	add.s64 	%rd57, %rd47, %rd56;
	add.s64 	%rd58, %rd57, %rd55;
	add.s64 	%rd59, %rd58, %rd54;
	add.s64 	%rd60, %rd59, %rd53;
	add.s64 	%rd61, %rd60, %rd52;
	shl.b64 	%rd62, %rd61, 2;
	add.s64 	%rd10, %rd46, %rd62;
	cvt.u64.u32 	%rd63, %r416;
	add.s64 	%rd64, %rd63, %rd52;
	shl.b64 	%rd65, %rd64, 2;
	add.s64 	%rd11, %rd46, %rd65;
	add.s32 	%r418, %r417, 2113;
	mul.wide.u32 	%rd66, %r418, 4;
	add.s64 	%rd12, %rd46, %rd66;
	add.s32 	%r419, %r417, 2082;
	mul.wide.u32 	%rd67, %r419, 4;
	add.s64 	%rd13, %rd46, %rd67;
	add.s32 	%r420, %r417, 2114;
	mul.wide.u32 	%rd68, %r420, 4;
	add.s64 	%rd14, %rd46, %rd68;
	add.s32 	%r421, %r417, 4194;
	mul.wide.u32 	%rd69, %r421, 4;
	add.s64 	%rd15, %rd46, %rd69;
	add.s32 	%r422, %r417, 4163;
	mul.wide.u32 	%rd70, %r422, 4;
	add.s64 	%rd16, %rd46, %rd70;
	add.s32 	%r423, %r417, 4195;
	mul.wide.u32 	%rd71, %r423, 4;
	add.s64 	%rd17, %rd46, %rd71;
	add.s32 	%r424, %r417, 6275;
	mul.wide.u32 	%rd72, %r424, 4;
	add.s64 	%rd18, %rd46, %rd72;
	add.s32 	%r425, %r417, 6244;
	mul.wide.u32 	%rd73, %r425, 4;
	add.s64 	%rd19, %rd46, %rd73;
	add.s32 	%r426, %r417, 6276;
	mul.wide.u32 	%rd74, %r426, 4;
	add.s64 	%rd20, %rd46, %rd74;
	setp.lt.u32 	%p152, %r4, 16;
	selp.b32 	%r28, 0, 520, %p152;
	and.b32  	%r427, %r370, 1040;
	or.b32  	%r29, %r379, %r427;
	or.b32  	%r30, %r386, %r427;
	add.s32 	%r31, %r388, %r427;
	add.s32 	%r32, %r390, %r427;
	mul.wide.u32 	%rd75, %r391, 4;
	add.s64 	%rd21, %rd46, %rd75;
	mul.wide.u32 	%rd76, %r389, 4;
	add.s64 	%rd22, %rd46, %rd76;
	mul.wide.u32 	%rd77, %r387, 4;
	add.s64 	%rd23, %rd46, %rd77;
	mul.wide.u32 	%rd78, %r385, 4;
	add.s64 	%rd24, %rd46, %rd78;
	mov.u16 	%rs236, 25600;
	mov.u16 	%rs238, 21504;
	mov.u16 	%rs246, 18432;
	mov.u16 	%rs260, -14592;
	mov.u32 	%r2599, %r2597;
	mov.u32 	%r2600, %r2597;
	mov.u32 	%r2601, %r2597;
	mov.u32 	%r2602, %r2597;
	mov.u32 	%r2603, %r2597;
	mov.u32 	%r2604, %r2597;
	mov.u32 	%r2605, %r2597;
	mov.u32 	%r2606, %r2597;
	mov.u32 	%r2621, %r2597;
	mov.u32 	%r2622, %r2597;
	mov.u32 	%r2623, %r2597;
	mov.u32 	%r2624, %r2597;
	mov.u32 	%r45, %r2597;
	bra.uni 	$L__BB0_31;
$L__BB0_39:                             // %pass10398
                                        //   in Loop: Header=BB0_31 Depth=1
	or.b32  	%r2589, %r2598, %r21;
	or.b32  	%r2590, %r2589, %r22;
	or.b32  	%r2591, %r2590, %r27;
	or.b32  	%r2592, %r2591, 98304;
	cvt.s64.s32 	%rd132, %r2592;
	add.s64 	%rd133, %rd132, %rd8;
	shr.u64 	%rd134, %rd133, 39;
	add.s64 	%rd135, %rd133, %rd134;
	shr.s64 	%rd136, %rd135, 25;
	setp.lt.s64 	%p181, %rd133, 0;
	and.b64  	%rd137, %rd135, -33554432;
	setp.ne.s64 	%p182, %rd137, %rd133;
	and.pred  	%p183, %p181, %p182;
	selp.u64 	%rd138, 1, 0, %p183;
	sub.s64 	%rd139, %rd138, %rd136;
	shl.b64 	%rd140, %rd139, 25;
	add.s64 	%rd141, %rd140, %rd133;
	shl.b64 	%rd142, %rd141, 2;
	add.s64 	%rd143, %rd3, %rd142;
	st.global.v4.u32 	[%rd143], {%r99, %r101, %r100, %r102};
	setp.ne.s32 	%p184, %r45, 65280;
	add.s32 	%r45, %r45, 256;
	add.s32 	%r2593, %r45, %r104;
	setp.lt.s32 	%p185, %r2593, %r105;
	and.pred  	%p186, %p184, %p185;
	@%p186 bra 	$L__BB0_31;
	bra.uni 	$L__BB0_40;
$L__BB0_31:                             // %L1517
                                        // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_32 Depth 2
	setp.eq.s32 	%p153, %r25, 0;
	or.b32  	%r493, %r45, %r4;
	and.b32  	%r494, %r493, 65296;
	or.b32  	%r495, %r23, %r494;
	shl.b32 	%r496, %r495, 13;
	add.s32 	%r497, %r24, %r496;
	shr.s32 	%r498, %r497, 31;
	shr.u32 	%r499, %r498, 3;
	add.s32 	%r500, %r497, %r499;
	shr.s32 	%r501, %r500, 29;
	setp.lt.s32 	%p154, %r497, 0;
	and.b32  	%r502, %r500, -536870912;
	setp.ne.s32 	%p155, %r502, %r497;
	and.pred  	%p156, %p154, %p155;
	selp.u32 	%r503, 1, 0, %p156;
	sub.s32 	%r504, %r503, %r501;
	shl.b32 	%r505, %r504, 29;
	or.b32  	%r506, %r497, 1;
	add.s32 	%r507, %r506, %r505;
	mul.wide.s32 	%rd79, %r507, 4;
	add.s64 	%rd80, %rd2, %rd79;
	ld.global.v4.u32 	{%r508, %r509, %r510, %r511}, [%rd80+-4];
	or.b32  	%r512, %r496, 524288;
	add.s32 	%r513, %r24, %r512;
	shr.s32 	%r514, %r513, 31;
	shr.u32 	%r515, %r514, 3;
	add.s32 	%r516, %r513, %r515;
	shr.s32 	%r517, %r516, 29;
	setp.lt.s32 	%p157, %r513, 0;
	and.b32  	%r518, %r516, -536870912;
	setp.ne.s32 	%p158, %r518, %r513;
	and.pred  	%p159, %p157, %p158;
	selp.u32 	%r519, 1, 0, %p159;
	sub.s32 	%r520, %r519, %r517;
	shl.b32 	%r521, %r520, 29;
	or.b32  	%r522, %r513, 1;
	add.s32 	%r523, %r522, %r521;
	mul.wide.s32 	%rd81, %r523, 4;
	add.s64 	%rd82, %rd2, %rd81;
	ld.global.v4.u32 	{%r524, %r525, %r526, %r527}, [%rd82+-4];
	or.b32  	%r528, %r496, 1048576;
	add.s32 	%r529, %r24, %r528;
	shr.s32 	%r530, %r529, 31;
	shr.u32 	%r531, %r530, 3;
	add.s32 	%r532, %r529, %r531;
	shr.s32 	%r533, %r532, 29;
	setp.lt.s32 	%p160, %r529, 0;
	and.b32  	%r534, %r532, -536870912;
	setp.ne.s32 	%p161, %r534, %r529;
	and.pred  	%p162, %p160, %p161;
	selp.u32 	%r535, 1, 0, %p162;
	sub.s32 	%r536, %r535, %r533;
	shl.b32 	%r537, %r536, 29;
	or.b32  	%r538, %r529, 1;
	add.s32 	%r539, %r538, %r537;
	mul.wide.s32 	%rd83, %r539, 4;
	add.s64 	%rd84, %rd2, %rd83;
	ld.global.v4.u32 	{%r540, %r541, %r542, %r543}, [%rd84+-4];
	or.b32  	%r544, %r496, 1572864;
	add.s32 	%r545, %r24, %r544;
	shr.s32 	%r546, %r545, 31;
	shr.u32 	%r547, %r546, 3;
	add.s32 	%r548, %r545, %r547;
	shr.s32 	%r549, %r548, 29;
	setp.lt.s32 	%p163, %r545, 0;
	and.b32  	%r550, %r548, -536870912;
	setp.ne.s32 	%p164, %r550, %r545;
	and.pred  	%p165, %p163, %p164;
	selp.u32 	%r551, 1, 0, %p165;
	sub.s32 	%r552, %r551, %r549;
	shl.b32 	%r553, %r552, 29;
	or.b32  	%r554, %r545, 1;
	add.s32 	%r555, %r554, %r553;
	mul.wide.s32 	%rd85, %r555, 4;
	add.s64 	%rd86, %rd2, %rd85;
	ld.global.v4.u32 	{%r556, %r557, %r558, %r559}, [%rd86+-4];
	selp.b32 	%r560, %r510, %r508, %p153;
	shfl.sync.bfly.b32	%r561, %r560, 8, 31, -1;
	selp.b32 	%r429, %r508, %r561, %p153;
	selp.b32 	%r430, %r561, %r510, %p153;
	selp.b32 	%r562, %r511, %r509, %p153;
	shfl.sync.bfly.b32	%r563, %r562, 8, 31, -1;
	selp.b32 	%r437, %r509, %r563, %p153;
	selp.b32 	%r438, %r563, %r511, %p153;
	selp.b32 	%r564, %r526, %r524, %p153;
	shfl.sync.bfly.b32	%r565, %r564, 8, 31, -1;
	selp.b32 	%r445, %r524, %r565, %p153;
	selp.b32 	%r446, %r565, %r526, %p153;
	selp.b32 	%r566, %r527, %r525, %p153;
	shfl.sync.bfly.b32	%r567, %r566, 8, 31, -1;
	selp.b32 	%r453, %r525, %r567, %p153;
	selp.b32 	%r454, %r567, %r527, %p153;
	selp.b32 	%r568, %r542, %r540, %p153;
	shfl.sync.bfly.b32	%r569, %r568, 8, 31, -1;
	selp.b32 	%r461, %r540, %r569, %p153;
	selp.b32 	%r462, %r569, %r542, %p153;
	selp.b32 	%r570, %r543, %r541, %p153;
	shfl.sync.bfly.b32	%r571, %r570, 8, 31, -1;
	selp.b32 	%r469, %r541, %r571, %p153;
	selp.b32 	%r470, %r571, %r543, %p153;
	selp.b32 	%r572, %r558, %r556, %p153;
	shfl.sync.bfly.b32	%r573, %r572, 8, 31, -1;
	selp.b32 	%r477, %r556, %r573, %p153;
	selp.b32 	%r478, %r573, %r558, %p153;
	selp.b32 	%r574, %r559, %r557, %p153;
	shfl.sync.bfly.b32	%r575, %r574, 8, 31, -1;
	selp.b32 	%r485, %r557, %r575, %p153;
	selp.b32 	%r486, %r575, %r559, %p153;
	mov.u32 	%r487, 21520;
	// begin inline asm
	prmt.b32 %r428, %r429, %r430, %r487;
	// end inline asm
	mov.u32 	%r491, 30258;
	// begin inline asm
	prmt.b32 %r432, %r429, %r430, %r491;
	// end inline asm
	// begin inline asm
	prmt.b32 %r436, %r437, %r438, %r487;
	// end inline asm
	// begin inline asm
	prmt.b32 %r440, %r437, %r438, %r491;
	// end inline asm
	// begin inline asm
	prmt.b32 %r444, %r445, %r446, %r487;
	// end inline asm
	// begin inline asm
	prmt.b32 %r448, %r445, %r446, %r491;
	// end inline asm
	// begin inline asm
	prmt.b32 %r452, %r453, %r454, %r487;
	// end inline asm
	// begin inline asm
	prmt.b32 %r456, %r453, %r454, %r491;
	// end inline asm
	// begin inline asm
	prmt.b32 %r460, %r461, %r462, %r487;
	// end inline asm
	// begin inline asm
	prmt.b32 %r464, %r461, %r462, %r491;
	// end inline asm
	// begin inline asm
	prmt.b32 %r468, %r469, %r470, %r487;
	// end inline asm
	// begin inline asm
	prmt.b32 %r472, %r469, %r470, %r491;
	// end inline asm
	// begin inline asm
	prmt.b32 %r476, %r477, %r478, %r487;
	// end inline asm
	// begin inline asm
	prmt.b32 %r480, %r477, %r478, %r491;
	// end inline asm
	// begin inline asm
	prmt.b32 %r484, %r485, %r486, %r487;
	// end inline asm
	// begin inline asm
	prmt.b32 %r488, %r485, %r486, %r491;
	// end inline asm
	st.shared.u32 	[%rd9], %r428;
	st.shared.u32 	[%rd10+128], %r432;
	st.shared.u32 	[%rd10+4], %r436;
	st.shared.u32 	[%rd10+132], %r440;
	st.shared.u32 	[%rd11+8324], %r444;
	st.shared.u32 	[%rd12], %r448;
	st.shared.u32 	[%rd13], %r452;
	st.shared.u32 	[%rd14], %r456;
	st.shared.u32 	[%rd11+16648], %r460;
	st.shared.u32 	[%rd15], %r464;
	st.shared.u32 	[%rd16], %r468;
	st.shared.u32 	[%rd17], %r472;
	st.shared.u32 	[%rd11+24972], %r476;
	st.shared.u32 	[%rd18], %r480;
	st.shared.u32 	[%rd19], %r484;
	st.shared.u32 	[%rd20], %r488;
	bar.sync 	0;
	or.b32  	%r46, %r26, %r45;
	shr.u32 	%r2612, %r46, 6;
	mov.u64 	%rd148, %rd24;
	mov.u64 	%rd149, %rd23;
	mov.u64 	%rd150, %rd22;
	mov.u64 	%rd151, %rd21;
	mov.u32 	%r2613, %r2599;
	mov.u32 	%r2614, %r2600;
	mov.u32 	%r2615, %r2601;
	mov.u32 	%r2616, %r2602;
	mov.u32 	%r2617, %r2603;
	mov.u32 	%r2618, %r2604;
	mov.u32 	%r2619, %r2605;
	mov.u32 	%r2620, %r2606;
	mov.u32 	%r2625, %r2597;
$L__BB0_32:                             // %L11794
                                        //   Parent Loop BB0_31 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	mov.u32 	%r2606, %r2624;
	mov.u32 	%r2605, %r2623;
	mov.u32 	%r2604, %r2622;
	mov.u32 	%r2603, %r2621;
	mov.u32 	%r2602, %r2620;
	mov.u32 	%r2601, %r2619;
	mov.u32 	%r2600, %r2618;
	mov.u32 	%r2599, %r2617;
	add.s32 	%r2460, %r46, %r2625;
	bfe.s32 	%r2461, %r2460, 4, 1;
	and.b32  	%r2462, %r2461, 65;
	bfe.s32 	%r2463, %r2460, 3, 1;
	and.b32  	%r2464, %r2463, 130;
	bfe.s32 	%r2465, %r2460, 2, 1;
	and.b32  	%r2466, %r2465, 260;
	and.b32  	%r2467, %r2612, 3;
	mul.lo.s32 	%r2468, %r2467, 2081;
	add.s32 	%r2469, %r29, %r2462;
	add.s32 	%r2470, %r2469, %r2464;
	add.s32 	%r2471, %r2470, %r2466;
	add.s32 	%r2472, %r2471, %r2468;
	add.s32 	%r2473, %r2472, %r28;
	mul.wide.u32 	%rd87, %r2473, 4;
	add.s64 	%rd89, %rd46, %rd87;
	ld.shared.u32 	%r2621, [%rd89];
	// begin inline asm
	mov.b32 %r581, {%rs236, %rs236};
	// end inline asm
	// begin inline asm
	mov.b32 %r592, {%rs238, %rs238};
	// end inline asm
	mov.u32 	%r579, 983055;
	// begin inline asm
	lop3.b32 %r578, %r579, %r2621, %r581, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r582, {%rs246, %rs246};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r583, %r581, %r582;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r586, %r578, %r583;
	// end inline asm
	mov.u32 	%r590, 15728880;
	// begin inline asm
	lop3.b32 %r589, %r590, %r2621, %r592, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r593, {%rs246, %rs246};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r594, %r592, %r593;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r597, %r589, %r594;
	// end inline asm
	shr.u32 	%r602, %r2621, 8;
	// begin inline asm
	lop3.b32 %r600, %r579, %r602, %r581, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r604, {%rs246, %rs246};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r605, %r581, %r604;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r608, %r600, %r605;
	// end inline asm
	// begin inline asm
	lop3.b32 %r611, %r590, %r602, %r592, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r615, {%rs246, %rs246};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r616, %r592, %r615;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r619, %r611, %r616;
	// end inline asm
	// begin inline asm
	mov.b32 %r627, {%rs236, %rs236};
	// end inline asm
	// begin inline asm
	mov.b32 %r638, {%rs238, %rs238};
	// end inline asm
	// begin inline asm
	lop3.b32 %r624, %r579, %r2613, %r627, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r628, {%rs246, %rs246};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r629, %r627, %r628;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r632, %r624, %r629;
	// end inline asm
	// begin inline asm
	lop3.b32 %r635, %r590, %r2613, %r638, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r639, {%rs246, %rs246};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r640, %r638, %r639;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r643, %r635, %r640;
	// end inline asm
	shr.u32 	%r648, %r2613, 8;
	// begin inline asm
	lop3.b32 %r646, %r579, %r648, %r627, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r650, {%rs246, %rs246};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r651, %r627, %r650;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r654, %r646, %r651;
	// end inline asm
	// begin inline asm
	lop3.b32 %r657, %r590, %r648, %r638, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r661, {%rs246, %rs246};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r662, %r638, %r661;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r665, %r657, %r662;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r670, %r162, %r643, %r2597;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r676, %r162, %r632, %r2597;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r682, %r162, %r665, %r2597;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r688, %r162, %r654, %r2597;
	// end inline asm
	// begin inline asm
	mov.b32 %r697, {%rs236, %rs236};
	// end inline asm
	// begin inline asm
	mov.b32 %r708, {%rs238, %rs238};
	// end inline asm
	// begin inline asm
	lop3.b32 %r694, %r579, %r2599, %r697, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r698, {%rs246, %rs246};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r699, %r697, %r698;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r702, %r694, %r699;
	// end inline asm
	// begin inline asm
	lop3.b32 %r705, %r590, %r2599, %r708, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r709, {%rs246, %rs246};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r710, %r708, %r709;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r713, %r705, %r710;
	// end inline asm
	shr.u32 	%r718, %r2599, 8;
	// begin inline asm
	lop3.b32 %r716, %r579, %r718, %r697, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r720, {%rs246, %rs246};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r721, %r697, %r720;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r724, %r716, %r721;
	// end inline asm
	// begin inline asm
	lop3.b32 %r727, %r590, %r718, %r708, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r731, {%rs246, %rs246};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r732, %r708, %r731;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r735, %r727, %r732;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r738, %r193;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r740, %r738, %r713, %r670;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r744, %r193;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r746, %r744, %r702, %r676;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r750, %r193;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r752, %r750, %r735, %r682;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r756, %r193;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r758, %r756, %r724, %r688;
	// end inline asm
	// begin inline asm
	mov.b32 %r767, {%rs236, %rs236};
	// end inline asm
	// begin inline asm
	mov.b32 %r778, {%rs238, %rs238};
	// end inline asm
	// begin inline asm
	lop3.b32 %r764, %r579, %r2603, %r767, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r768, {%rs246, %rs246};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r769, %r767, %r768;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r772, %r764, %r769;
	// end inline asm
	// begin inline asm
	lop3.b32 %r775, %r590, %r2603, %r778, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r779, {%rs246, %rs246};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r780, %r778, %r779;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r783, %r775, %r780;
	// end inline asm
	shr.u32 	%r788, %r2603, 8;
	// begin inline asm
	lop3.b32 %r786, %r579, %r788, %r767, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r790, {%rs246, %rs246};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r791, %r767, %r790;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r794, %r786, %r791;
	// end inline asm
	// begin inline asm
	lop3.b32 %r797, %r590, %r788, %r778, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r801, {%rs246, %rs246};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r802, %r778, %r801;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r805, %r797, %r802;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r810, %r224, %r783, %r740;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r816, %r224, %r772, %r746;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r822, %r224, %r805, %r752;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r828, %r224, %r794, %r758;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r832, %r255;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r863, %r832, %r597, %r810;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r838, %r255;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r860, %r838, %r586, %r816;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r844, %r255;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r872, %r844, %r619, %r822;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r850, %r255;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r869, %r850, %r608, %r828;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r856, %r261;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r858, %r856, %r860;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r861, %r258, %r863, %r858;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r865, %r261;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r867, %r865, %r869;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r870, %r258, %r872, %r867;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r874, %r261, %r863;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r877, %r258, %r860, %r874;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r881, %r261, %r872;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r884, %r258, %r869, %r881;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r915, %r912}, {%r264, %r270, %r267, %r273}, {%r861, %r877}, {%r2597, %r2597};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r924, %r921}, {%r264, %r270, %r267, %r273}, {%r870, %r884}, {%r2597, %r2597};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r908, %r279;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r910, %r908, %r912;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r913, %r276, %r915, %r910;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r917, %r279;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r919, %r917, %r921;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r922, %r276, %r924, %r919;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r926, %r279, %r915;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r929, %r276, %r912, %r926;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r933, %r279, %r924;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r936, %r276, %r921, %r933;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r940, %r941}, {%r282, %r288, %r285, %r291}, {%r913, %r929}, {%r2597, %r2597};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r950, %r951}, {%r282, %r288, %r285, %r291}, {%r922, %r936}, {%r2597, %r2597};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r960, %r74, %r940;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r963, %r74, %r941;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r966, %r74, %r950;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r969, %r74, %r951;
	// end inline asm
	// begin inline asm
	mov.b32 %r972, {%rs260, %rs260};
	// end inline asm
	mov.u16 	%rs51, 18176;
	// begin inline asm
	mov.b32 %r973, {%rs51, %rs51};
	// end inline asm
	// begin inline asm
	max.f16x2 %r974, %r960, %r972;
	// end inline asm
	// begin inline asm
	min.f16x2 %r977, %r974, %r973;
	// end inline asm
	// begin inline asm
	mov.b32 %r980, {%rs260, %rs260};
	// end inline asm
	// begin inline asm
	mov.b32 %r981, {%rs51, %rs51};
	// end inline asm
	// begin inline asm
	max.f16x2 %r982, %r963, %r980;
	// end inline asm
	// begin inline asm
	min.f16x2 %r985, %r982, %r981;
	// end inline asm
	// begin inline asm
	mov.b32 %r988, {%rs260, %rs260};
	// end inline asm
	// begin inline asm
	mov.b32 %r989, {%rs51, %rs51};
	// end inline asm
	// begin inline asm
	max.f16x2 %r990, %r966, %r988;
	// end inline asm
	// begin inline asm
	min.f16x2 %r993, %r990, %r989;
	// end inline asm
	// begin inline asm
	mov.b32 %r996, {%rs260, %rs260};
	// end inline asm
	// begin inline asm
	mov.b32 %r997, {%rs51, %rs51};
	// end inline asm
	// begin inline asm
	max.f16x2 %r998, %r969, %r996;
	// end inline asm
	// begin inline asm
	min.f16x2 %r1001, %r998, %r997;
	// end inline asm
	mov.u16 	%rs65, 26112;
	// begin inline asm
	mov.b32 %r1007, {%rs65, %rs65};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1005, %r977, %r1007;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1008, %r985, %r1007;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1011, %r993, %r1007;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1014, %r1001, %r1007;
	// end inline asm
	mov.u32 	%r1020, 25152;
	// begin inline asm
	prmt.b32 %r1017, %r1005, %r1011, %r1020;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1021, %r1008, %r1014, %r1020;
	// end inline asm
	shl.b32 	%r1028, %r1017, 4;
	mov.u32 	%r1026, 252645135;
	// begin inline asm
	lop3.b32 %r1025, %r1026, %r1021, %r1028, 202;
	// end inline asm
	mov.u32 	%r1030, 8;
	// begin inline asm
	cvt.pack.sat.s8.s32.b32 %r1029, %r1030, %r1030, 0;
	// end inline asm
	// begin inline asm
	cvt.pack.sat.s8.s32.b32 %r1032, %r1030, %r1030, %r1029;
	// end inline asm
	// begin inline asm
	cvt.pack.sat.s8.s32.b32 %r1036, %r1030, %r1030, 0;
	// end inline asm
	// begin inline asm
	cvt.pack.sat.s8.s32.b32 %r1039, %r1030, %r1030, %r1036;
	// end inline asm
	shl.b32 	%r1046, %r1039, 4;
	// begin inline asm
	lop3.b32 %r1043, %r1026, %r1032, %r1046, 202;
	// end inline asm
	xor.b32  	%r2474, %r1043, %r1025;
	st.shared.u32 	[%rd148], %r2474;
	add.s32 	%r2475, %r30, %r2462;
	add.s32 	%r2476, %r2475, %r2464;
	add.s32 	%r2477, %r2476, %r2466;
	add.s32 	%r2478, %r2477, %r2468;
	add.s32 	%r2479, %r2478, %r28;
	mul.wide.u32 	%rd90, %r2479, 4;
	add.s64 	%rd91, %rd46, %rd90;
	ld.shared.u32 	%r2622, [%rd91];
	// begin inline asm
	mov.b32 %r1052, {%rs236, %rs236};
	// end inline asm
	// begin inline asm
	mov.b32 %r1063, {%rs238, %rs238};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1049, %r579, %r2622, %r1052, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1053, {%rs246, %rs246};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1054, %r1052, %r1053;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1057, %r1049, %r1054;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1060, %r590, %r2622, %r1063, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1064, {%rs246, %rs246};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1065, %r1063, %r1064;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1068, %r1060, %r1065;
	// end inline asm
	shr.u32 	%r1073, %r2622, 8;
	// begin inline asm
	lop3.b32 %r1071, %r579, %r1073, %r1052, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1075, {%rs246, %rs246};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1076, %r1052, %r1075;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1079, %r1071, %r1076;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1082, %r590, %r1073, %r1063, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1086, {%rs246, %rs246};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1087, %r1063, %r1086;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1090, %r1082, %r1087;
	// end inline asm
	// begin inline asm
	mov.b32 %r1098, {%rs236, %rs236};
	// end inline asm
	// begin inline asm
	mov.b32 %r1109, {%rs238, %rs238};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1095, %r579, %r2614, %r1098, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1099, {%rs246, %rs246};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1100, %r1098, %r1099;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1103, %r1095, %r1100;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1106, %r590, %r2614, %r1109, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1110, {%rs246, %rs246};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1111, %r1109, %r1110;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1114, %r1106, %r1111;
	// end inline asm
	shr.u32 	%r1119, %r2614, 8;
	// begin inline asm
	lop3.b32 %r1117, %r579, %r1119, %r1098, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1121, {%rs246, %rs246};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1122, %r1098, %r1121;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1125, %r1117, %r1122;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1128, %r590, %r1119, %r1109, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1132, {%rs246, %rs246};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1133, %r1109, %r1132;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1136, %r1128, %r1133;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1141, %r162, %r1114, %r2597;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1147, %r162, %r1103, %r2597;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1153, %r162, %r1136, %r2597;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1159, %r162, %r1125, %r2597;
	// end inline asm
	// begin inline asm
	mov.b32 %r1168, {%rs236, %rs236};
	// end inline asm
	// begin inline asm
	mov.b32 %r1179, {%rs238, %rs238};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1165, %r579, %r2600, %r1168, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1169, {%rs246, %rs246};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1170, %r1168, %r1169;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1173, %r1165, %r1170;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1176, %r590, %r2600, %r1179, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1180, {%rs246, %rs246};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1181, %r1179, %r1180;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1184, %r1176, %r1181;
	// end inline asm
	shr.u32 	%r1189, %r2600, 8;
	// begin inline asm
	lop3.b32 %r1187, %r579, %r1189, %r1168, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1191, {%rs246, %rs246};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1192, %r1168, %r1191;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1195, %r1187, %r1192;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1198, %r590, %r1189, %r1179, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1202, {%rs246, %rs246};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1203, %r1179, %r1202;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1206, %r1198, %r1203;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1209, %r193;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1211, %r1209, %r1184, %r1141;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1215, %r193;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1217, %r1215, %r1173, %r1147;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1221, %r193;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1223, %r1221, %r1206, %r1153;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1227, %r193;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1229, %r1227, %r1195, %r1159;
	// end inline asm
	// begin inline asm
	mov.b32 %r1238, {%rs236, %rs236};
	// end inline asm
	// begin inline asm
	mov.b32 %r1249, {%rs238, %rs238};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1235, %r579, %r2604, %r1238, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1239, {%rs246, %rs246};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1240, %r1238, %r1239;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1243, %r1235, %r1240;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1246, %r590, %r2604, %r1249, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1250, {%rs246, %rs246};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1251, %r1249, %r1250;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1254, %r1246, %r1251;
	// end inline asm
	shr.u32 	%r1259, %r2604, 8;
	// begin inline asm
	lop3.b32 %r1257, %r579, %r1259, %r1238, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1261, {%rs246, %rs246};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1262, %r1238, %r1261;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1265, %r1257, %r1262;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1268, %r590, %r1259, %r1249, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1272, {%rs246, %rs246};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1273, %r1249, %r1272;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1276, %r1268, %r1273;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1281, %r224, %r1254, %r1211;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1287, %r224, %r1243, %r1217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1293, %r224, %r1276, %r1223;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1299, %r224, %r1265, %r1229;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1303, %r255;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1334, %r1303, %r1068, %r1281;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1309, %r255;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1331, %r1309, %r1057, %r1287;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1315, %r255;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1343, %r1315, %r1090, %r1293;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1321, %r255;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1340, %r1321, %r1079, %r1299;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1327, %r261;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1329, %r1327, %r1331;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1332, %r258, %r1334, %r1329;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1336, %r261;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1338, %r1336, %r1340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1341, %r258, %r1343, %r1338;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1345, %r261, %r1334;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1348, %r258, %r1331, %r1345;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1352, %r261, %r1343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1355, %r258, %r1340, %r1352;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1386, %r1383}, {%r264, %r270, %r267, %r273}, {%r1332, %r1348}, {%r2597, %r2597};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1395, %r1392}, {%r264, %r270, %r267, %r273}, {%r1341, %r1355}, {%r2597, %r2597};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1379, %r279;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1381, %r1379, %r1383;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1384, %r276, %r1386, %r1381;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1388, %r279;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1390, %r1388, %r1392;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1393, %r276, %r1395, %r1390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1397, %r279, %r1386;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1400, %r276, %r1383, %r1397;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1404, %r279, %r1395;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1407, %r276, %r1392, %r1404;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1411, %r1412}, {%r282, %r288, %r285, %r291}, {%r1384, %r1400}, {%r2597, %r2597};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1421, %r1422}, {%r282, %r288, %r285, %r291}, {%r1393, %r1407}, {%r2597, %r2597};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1431, %r74, %r1411;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1434, %r74, %r1412;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1437, %r74, %r1421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1440, %r74, %r1422;
	// end inline asm
	// begin inline asm
	mov.b32 %r1443, {%rs260, %rs260};
	// end inline asm
	// begin inline asm
	mov.b32 %r1444, {%rs51, %rs51};
	// end inline asm
	// begin inline asm
	max.f16x2 %r1445, %r1431, %r1443;
	// end inline asm
	// begin inline asm
	min.f16x2 %r1448, %r1445, %r1444;
	// end inline asm
	// begin inline asm
	mov.b32 %r1451, {%rs260, %rs260};
	// end inline asm
	// begin inline asm
	mov.b32 %r1452, {%rs51, %rs51};
	// end inline asm
	// begin inline asm
	max.f16x2 %r1453, %r1434, %r1451;
	// end inline asm
	// begin inline asm
	min.f16x2 %r1456, %r1453, %r1452;
	// end inline asm
	// begin inline asm
	mov.b32 %r1459, {%rs260, %rs260};
	// end inline asm
	// begin inline asm
	mov.b32 %r1460, {%rs51, %rs51};
	// end inline asm
	// begin inline asm
	max.f16x2 %r1461, %r1437, %r1459;
	// end inline asm
	// begin inline asm
	min.f16x2 %r1464, %r1461, %r1460;
	// end inline asm
	// begin inline asm
	mov.b32 %r1467, {%rs260, %rs260};
	// end inline asm
	// begin inline asm
	mov.b32 %r1468, {%rs51, %rs51};
	// end inline asm
	// begin inline asm
	max.f16x2 %r1469, %r1440, %r1467;
	// end inline asm
	// begin inline asm
	min.f16x2 %r1472, %r1469, %r1468;
	// end inline asm
	// begin inline asm
	mov.b32 %r1478, {%rs65, %rs65};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1476, %r1448, %r1478;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1479, %r1456, %r1478;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1482, %r1464, %r1478;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1485, %r1472, %r1478;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1488, %r1476, %r1482, %r1020;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1492, %r1479, %r1485, %r1020;
	// end inline asm
	shl.b32 	%r1499, %r1488, 4;
	// begin inline asm
	lop3.b32 %r1496, %r1026, %r1492, %r1499, 202;
	// end inline asm
	// begin inline asm
	cvt.pack.sat.s8.s32.b32 %r1500, %r1030, %r1030, 0;
	// end inline asm
	// begin inline asm
	cvt.pack.sat.s8.s32.b32 %r1503, %r1030, %r1030, %r1500;
	// end inline asm
	// begin inline asm
	cvt.pack.sat.s8.s32.b32 %r1507, %r1030, %r1030, 0;
	// end inline asm
	// begin inline asm
	cvt.pack.sat.s8.s32.b32 %r1510, %r1030, %r1030, %r1507;
	// end inline asm
	shl.b32 	%r1517, %r1510, 4;
	// begin inline asm
	lop3.b32 %r1514, %r1026, %r1503, %r1517, 202;
	// end inline asm
	xor.b32  	%r2480, %r1514, %r1496;
	st.shared.u32 	[%rd149], %r2480;
	add.s32 	%r2481, %r31, %r2462;
	add.s32 	%r2482, %r2481, %r2464;
	add.s32 	%r2483, %r2482, %r2466;
	add.s32 	%r2484, %r2483, %r2468;
	add.s32 	%r2485, %r2484, %r28;
	mul.wide.u32 	%rd92, %r2485, 4;
	add.s64 	%rd93, %rd46, %rd92;
	ld.shared.u32 	%r2623, [%rd93];
	// begin inline asm
	mov.b32 %r1523, {%rs236, %rs236};
	// end inline asm
	// begin inline asm
	mov.b32 %r1534, {%rs238, %rs238};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1520, %r579, %r2623, %r1523, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1524, {%rs246, %rs246};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1525, %r1523, %r1524;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1528, %r1520, %r1525;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1531, %r590, %r2623, %r1534, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1535, {%rs246, %rs246};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1536, %r1534, %r1535;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1539, %r1531, %r1536;
	// end inline asm
	shr.u32 	%r1544, %r2623, 8;
	// begin inline asm
	lop3.b32 %r1542, %r579, %r1544, %r1523, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1546, {%rs246, %rs246};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1547, %r1523, %r1546;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1550, %r1542, %r1547;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1553, %r590, %r1544, %r1534, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1557, {%rs246, %rs246};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1558, %r1534, %r1557;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1561, %r1553, %r1558;
	// end inline asm
	// begin inline asm
	mov.b32 %r1569, {%rs236, %rs236};
	// end inline asm
	// begin inline asm
	mov.b32 %r1580, {%rs238, %rs238};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1566, %r579, %r2615, %r1569, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1570, {%rs246, %rs246};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1571, %r1569, %r1570;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1574, %r1566, %r1571;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1577, %r590, %r2615, %r1580, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1581, {%rs246, %rs246};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1582, %r1580, %r1581;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1585, %r1577, %r1582;
	// end inline asm
	shr.u32 	%r1590, %r2615, 8;
	// begin inline asm
	lop3.b32 %r1588, %r579, %r1590, %r1569, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1592, {%rs246, %rs246};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1593, %r1569, %r1592;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1596, %r1588, %r1593;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1599, %r590, %r1590, %r1580, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1603, {%rs246, %rs246};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1604, %r1580, %r1603;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1607, %r1599, %r1604;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1612, %r162, %r1585, %r2597;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1618, %r162, %r1574, %r2597;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1624, %r162, %r1607, %r2597;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1630, %r162, %r1596, %r2597;
	// end inline asm
	// begin inline asm
	mov.b32 %r1639, {%rs236, %rs236};
	// end inline asm
	// begin inline asm
	mov.b32 %r1650, {%rs238, %rs238};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1636, %r579, %r2601, %r1639, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1640, {%rs246, %rs246};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1641, %r1639, %r1640;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1644, %r1636, %r1641;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1647, %r590, %r2601, %r1650, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1651, {%rs246, %rs246};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1652, %r1650, %r1651;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1655, %r1647, %r1652;
	// end inline asm
	shr.u32 	%r1660, %r2601, 8;
	// begin inline asm
	lop3.b32 %r1658, %r579, %r1660, %r1639, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1662, {%rs246, %rs246};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1663, %r1639, %r1662;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1666, %r1658, %r1663;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1669, %r590, %r1660, %r1650, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1673, {%rs246, %rs246};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1674, %r1650, %r1673;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1677, %r1669, %r1674;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1680, %r193;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1682, %r1680, %r1655, %r1612;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1686, %r193;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1688, %r1686, %r1644, %r1618;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1692, %r193;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1694, %r1692, %r1677, %r1624;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1698, %r193;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1700, %r1698, %r1666, %r1630;
	// end inline asm
	// begin inline asm
	mov.b32 %r1709, {%rs236, %rs236};
	// end inline asm
	// begin inline asm
	mov.b32 %r1720, {%rs238, %rs238};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1706, %r579, %r2605, %r1709, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1710, {%rs246, %rs246};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1711, %r1709, %r1710;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1714, %r1706, %r1711;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1717, %r590, %r2605, %r1720, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1721, {%rs246, %rs246};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1722, %r1720, %r1721;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1725, %r1717, %r1722;
	// end inline asm
	shr.u32 	%r1730, %r2605, 8;
	// begin inline asm
	lop3.b32 %r1728, %r579, %r1730, %r1709, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1732, {%rs246, %rs246};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1733, %r1709, %r1732;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1736, %r1728, %r1733;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1739, %r590, %r1730, %r1720, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1743, {%rs246, %rs246};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1744, %r1720, %r1743;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1747, %r1739, %r1744;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1752, %r224, %r1725, %r1682;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1758, %r224, %r1714, %r1688;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1764, %r224, %r1747, %r1694;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1770, %r224, %r1736, %r1700;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1774, %r255;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1805, %r1774, %r1539, %r1752;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1780, %r255;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1802, %r1780, %r1528, %r1758;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1786, %r255;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1814, %r1786, %r1561, %r1764;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1792, %r255;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1811, %r1792, %r1550, %r1770;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1798, %r261;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1800, %r1798, %r1802;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1803, %r258, %r1805, %r1800;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1807, %r261;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1809, %r1807, %r1811;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1812, %r258, %r1814, %r1809;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1816, %r261, %r1805;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1819, %r258, %r1802, %r1816;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1823, %r261, %r1814;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1826, %r258, %r1811, %r1823;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1857, %r1854}, {%r264, %r270, %r267, %r273}, {%r1803, %r1819}, {%r2597, %r2597};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1866, %r1863}, {%r264, %r270, %r267, %r273}, {%r1812, %r1826}, {%r2597, %r2597};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1850, %r279;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1852, %r1850, %r1854;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1855, %r276, %r1857, %r1852;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1859, %r279;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1861, %r1859, %r1863;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1864, %r276, %r1866, %r1861;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1868, %r279, %r1857;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1871, %r276, %r1854, %r1868;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1875, %r279, %r1866;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1878, %r276, %r1863, %r1875;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1882, %r1883}, {%r282, %r288, %r285, %r291}, {%r1855, %r1871}, {%r2597, %r2597};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1892, %r1893}, {%r282, %r288, %r285, %r291}, {%r1864, %r1878}, {%r2597, %r2597};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1902, %r74, %r1882;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1905, %r74, %r1883;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1908, %r74, %r1892;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1911, %r74, %r1893;
	// end inline asm
	// begin inline asm
	mov.b32 %r1914, {%rs260, %rs260};
	// end inline asm
	// begin inline asm
	mov.b32 %r1915, {%rs51, %rs51};
	// end inline asm
	// begin inline asm
	max.f16x2 %r1916, %r1902, %r1914;
	// end inline asm
	// begin inline asm
	min.f16x2 %r1919, %r1916, %r1915;
	// end inline asm
	// begin inline asm
	mov.b32 %r1922, {%rs260, %rs260};
	// end inline asm
	// begin inline asm
	mov.b32 %r1923, {%rs51, %rs51};
	// end inline asm
	// begin inline asm
	max.f16x2 %r1924, %r1905, %r1922;
	// end inline asm
	// begin inline asm
	min.f16x2 %r1927, %r1924, %r1923;
	// end inline asm
	// begin inline asm
	mov.b32 %r1930, {%rs260, %rs260};
	// end inline asm
	// begin inline asm
	mov.b32 %r1931, {%rs51, %rs51};
	// end inline asm
	// begin inline asm
	max.f16x2 %r1932, %r1908, %r1930;
	// end inline asm
	// begin inline asm
	min.f16x2 %r1935, %r1932, %r1931;
	// end inline asm
	// begin inline asm
	mov.b32 %r1938, {%rs260, %rs260};
	// end inline asm
	// begin inline asm
	mov.b32 %r1939, {%rs51, %rs51};
	// end inline asm
	// begin inline asm
	max.f16x2 %r1940, %r1911, %r1938;
	// end inline asm
	// begin inline asm
	min.f16x2 %r1943, %r1940, %r1939;
	// end inline asm
	// begin inline asm
	mov.b32 %r1949, {%rs65, %rs65};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1947, %r1919, %r1949;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1950, %r1927, %r1949;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1953, %r1935, %r1949;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1956, %r1943, %r1949;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1959, %r1947, %r1953, %r1020;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1963, %r1950, %r1956, %r1020;
	// end inline asm
	shl.b32 	%r1970, %r1959, 4;
	// begin inline asm
	lop3.b32 %r1967, %r1026, %r1963, %r1970, 202;
	// end inline asm
	// begin inline asm
	cvt.pack.sat.s8.s32.b32 %r1971, %r1030, %r1030, 0;
	// end inline asm
	// begin inline asm
	cvt.pack.sat.s8.s32.b32 %r1974, %r1030, %r1030, %r1971;
	// end inline asm
	// begin inline asm
	cvt.pack.sat.s8.s32.b32 %r1978, %r1030, %r1030, 0;
	// end inline asm
	// begin inline asm
	cvt.pack.sat.s8.s32.b32 %r1981, %r1030, %r1030, %r1978;
	// end inline asm
	shl.b32 	%r1988, %r1981, 4;
	// begin inline asm
	lop3.b32 %r1985, %r1026, %r1974, %r1988, 202;
	// end inline asm
	xor.b32  	%r2486, %r1985, %r1967;
	st.shared.u32 	[%rd150], %r2486;
	add.s32 	%r2487, %r32, %r2462;
	add.s32 	%r2488, %r2487, %r2464;
	add.s32 	%r2489, %r2488, %r2466;
	add.s32 	%r2490, %r2489, %r2468;
	add.s32 	%r2491, %r2490, %r28;
	mul.wide.u32 	%rd94, %r2491, 4;
	add.s64 	%rd95, %rd46, %rd94;
	ld.shared.u32 	%r2624, [%rd95];
	// begin inline asm
	mov.b32 %r1994, {%rs236, %rs236};
	// end inline asm
	// begin inline asm
	mov.b32 %r2005, {%rs238, %rs238};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1991, %r579, %r2624, %r1994, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1995, {%rs246, %rs246};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1996, %r1994, %r1995;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1999, %r1991, %r1996;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2002, %r590, %r2624, %r2005, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2006, {%rs246, %rs246};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2007, %r2005, %r2006;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2010, %r2002, %r2007;
	// end inline asm
	shr.u32 	%r2015, %r2624, 8;
	// begin inline asm
	lop3.b32 %r2013, %r579, %r2015, %r1994, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2017, {%rs246, %rs246};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2018, %r1994, %r2017;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2021, %r2013, %r2018;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2024, %r590, %r2015, %r2005, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2028, {%rs246, %rs246};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2029, %r2005, %r2028;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2032, %r2024, %r2029;
	// end inline asm
	// begin inline asm
	mov.b32 %r2040, {%rs236, %rs236};
	// end inline asm
	// begin inline asm
	mov.b32 %r2051, {%rs238, %rs238};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2037, %r579, %r2616, %r2040, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2041, {%rs246, %rs246};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2042, %r2040, %r2041;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2045, %r2037, %r2042;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2048, %r590, %r2616, %r2051, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2052, {%rs246, %rs246};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2053, %r2051, %r2052;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2056, %r2048, %r2053;
	// end inline asm
	shr.u32 	%r2061, %r2616, 8;
	// begin inline asm
	lop3.b32 %r2059, %r579, %r2061, %r2040, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2063, {%rs246, %rs246};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2064, %r2040, %r2063;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2067, %r2059, %r2064;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2070, %r590, %r2061, %r2051, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2074, {%rs246, %rs246};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2075, %r2051, %r2074;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2078, %r2070, %r2075;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2083, %r162, %r2056, %r2597;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2089, %r162, %r2045, %r2597;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2095, %r162, %r2078, %r2597;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2101, %r162, %r2067, %r2597;
	// end inline asm
	// begin inline asm
	mov.b32 %r2110, {%rs236, %rs236};
	// end inline asm
	// begin inline asm
	mov.b32 %r2121, {%rs238, %rs238};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2107, %r579, %r2602, %r2110, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2111, {%rs246, %rs246};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2112, %r2110, %r2111;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2115, %r2107, %r2112;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2118, %r590, %r2602, %r2121, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2122, {%rs246, %rs246};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2123, %r2121, %r2122;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2126, %r2118, %r2123;
	// end inline asm
	shr.u32 	%r2131, %r2602, 8;
	// begin inline asm
	lop3.b32 %r2129, %r579, %r2131, %r2110, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2133, {%rs246, %rs246};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2134, %r2110, %r2133;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2137, %r2129, %r2134;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2140, %r590, %r2131, %r2121, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2144, {%rs246, %rs246};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2145, %r2121, %r2144;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2148, %r2140, %r2145;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2151, %r193;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2153, %r2151, %r2126, %r2083;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2157, %r193;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2159, %r2157, %r2115, %r2089;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2163, %r193;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2165, %r2163, %r2148, %r2095;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2169, %r193;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2171, %r2169, %r2137, %r2101;
	// end inline asm
	// begin inline asm
	mov.b32 %r2180, {%rs236, %rs236};
	// end inline asm
	// begin inline asm
	mov.b32 %r2191, {%rs238, %rs238};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2177, %r579, %r2606, %r2180, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2181, {%rs246, %rs246};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2182, %r2180, %r2181;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2185, %r2177, %r2182;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2188, %r590, %r2606, %r2191, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2192, {%rs246, %rs246};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2193, %r2191, %r2192;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2196, %r2188, %r2193;
	// end inline asm
	shr.u32 	%r2201, %r2606, 8;
	// begin inline asm
	lop3.b32 %r2199, %r579, %r2201, %r2180, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2203, {%rs246, %rs246};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2204, %r2180, %r2203;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2207, %r2199, %r2204;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2210, %r590, %r2201, %r2191, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2214, {%rs246, %rs246};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2215, %r2191, %r2214;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2218, %r2210, %r2215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2223, %r224, %r2196, %r2153;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2229, %r224, %r2185, %r2159;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2235, %r224, %r2218, %r2165;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2241, %r224, %r2207, %r2171;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2245, %r255;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2276, %r2245, %r2010, %r2223;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2251, %r255;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2273, %r2251, %r1999, %r2229;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2257, %r255;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2285, %r2257, %r2032, %r2235;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2263, %r255;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2282, %r2263, %r2021, %r2241;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2269, %r261;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2271, %r2269, %r2273;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2274, %r258, %r2276, %r2271;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2278, %r261;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2280, %r2278, %r2282;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2283, %r258, %r2285, %r2280;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2287, %r261, %r2276;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2290, %r258, %r2273, %r2287;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2294, %r261, %r2285;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2297, %r258, %r2282, %r2294;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2328, %r2325}, {%r264, %r270, %r267, %r273}, {%r2274, %r2290}, {%r2597, %r2597};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2337, %r2334}, {%r264, %r270, %r267, %r273}, {%r2283, %r2297}, {%r2597, %r2597};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2321, %r279;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2323, %r2321, %r2325;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2326, %r276, %r2328, %r2323;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2330, %r279;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2332, %r2330, %r2334;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2335, %r276, %r2337, %r2332;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2339, %r279, %r2328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2342, %r276, %r2325, %r2339;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2346, %r279, %r2337;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2349, %r276, %r2334, %r2346;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2353, %r2354}, {%r282, %r288, %r285, %r291}, {%r2326, %r2342}, {%r2597, %r2597};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2363, %r2364}, {%r282, %r288, %r285, %r291}, {%r2335, %r2349}, {%r2597, %r2597};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2373, %r74, %r2353;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2376, %r74, %r2354;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2379, %r74, %r2363;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2382, %r74, %r2364;
	// end inline asm
	// begin inline asm
	mov.b32 %r2385, {%rs260, %rs260};
	// end inline asm
	// begin inline asm
	mov.b32 %r2386, {%rs51, %rs51};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2387, %r2373, %r2385;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2390, %r2387, %r2386;
	// end inline asm
	// begin inline asm
	mov.b32 %r2393, {%rs260, %rs260};
	// end inline asm
	// begin inline asm
	mov.b32 %r2394, {%rs51, %rs51};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2395, %r2376, %r2393;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2398, %r2395, %r2394;
	// end inline asm
	// begin inline asm
	mov.b32 %r2401, {%rs260, %rs260};
	// end inline asm
	// begin inline asm
	mov.b32 %r2402, {%rs51, %rs51};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2403, %r2379, %r2401;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2406, %r2403, %r2402;
	// end inline asm
	// begin inline asm
	mov.b32 %r2409, {%rs260, %rs260};
	// end inline asm
	// begin inline asm
	mov.b32 %r2410, {%rs51, %rs51};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2411, %r2382, %r2409;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2414, %r2411, %r2410;
	// end inline asm
	// begin inline asm
	mov.b32 %r2420, {%rs65, %rs65};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2418, %r2390, %r2420;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2421, %r2398, %r2420;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2424, %r2406, %r2420;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2427, %r2414, %r2420;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2430, %r2418, %r2424, %r1020;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2434, %r2421, %r2427, %r1020;
	// end inline asm
	shl.b32 	%r2441, %r2430, 4;
	// begin inline asm
	lop3.b32 %r2438, %r1026, %r2434, %r2441, 202;
	// end inline asm
	// begin inline asm
	cvt.pack.sat.s8.s32.b32 %r2442, %r1030, %r1030, 0;
	// end inline asm
	// begin inline asm
	cvt.pack.sat.s8.s32.b32 %r2445, %r1030, %r1030, %r2442;
	// end inline asm
	// begin inline asm
	cvt.pack.sat.s8.s32.b32 %r2449, %r1030, %r1030, 0;
	// end inline asm
	// begin inline asm
	cvt.pack.sat.s8.s32.b32 %r2452, %r1030, %r1030, %r2449;
	// end inline asm
	shl.b32 	%r2459, %r2452, 4;
	// begin inline asm
	lop3.b32 %r2456, %r1026, %r2445, %r2459, 202;
	// end inline asm
	xor.b32  	%r2492, %r2456, %r2438;
	st.shared.u32 	[%rd151], %r2492;
	add.s32 	%r2625, %r2625, 64;
	add.s64 	%rd151, %rd151, 8324;
	add.s64 	%rd150, %rd150, 8324;
	add.s64 	%rd149, %rd149, 8324;
	add.s64 	%rd148, %rd148, 8324;
	add.s32 	%r2612, %r2612, 1;
	setp.eq.s32 	%p166, %r2625, 256;
	mov.u32 	%r2613, %r2599;
	mov.u32 	%r2614, %r2600;
	mov.u32 	%r2615, %r2601;
	mov.u32 	%r2616, %r2602;
	mov.u32 	%r2617, %r2603;
	mov.u32 	%r2618, %r2604;
	mov.u32 	%r2619, %r2605;
	mov.u32 	%r2620, %r2606;
	@%p166 bra 	$L__BB0_33;
	bra.uni 	$L__BB0_32;
$L__BB0_33:                             // %guard_exit10973
                                        //   in Loop: Header=BB0_31 Depth=1
	bar.sync 	0;
	ld.shared.u32 	%r2498, [%rd6];
	ld.shared.u32 	%r2499, [%rd7+128];
	ld.shared.u32 	%r2506, [%rd7+4];
	ld.shared.u32 	%r2507, [%rd7+132];
	ld.shared.u32 	%r2514, [%rd6+8324];
	ld.shared.u32 	%r2515, [%rd7+8452];
	ld.shared.u32 	%r2522, [%rd7+8328];
	ld.shared.u32 	%r2523, [%rd7+8456];
	ld.shared.u32 	%r2530, [%rd6+16648];
	ld.shared.u32 	%r2531, [%rd7+16776];
	ld.shared.u32 	%r2538, [%rd7+16652];
	ld.shared.u32 	%r2539, [%rd7+16780];
	ld.shared.u32 	%r2546, [%rd6+24972];
	ld.shared.u32 	%r2547, [%rd7+25100];
	ld.shared.u32 	%r2554, [%rd7+24976];
	ld.shared.u32 	%r2555, [%rd7+25104];
	// begin inline asm
	prmt.b32 %r2493, %r2498, %r2499, %r487;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2497, %r2498, %r2499, %r491;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2501, %r2506, %r2507, %r487;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2505, %r2506, %r2507, %r491;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2509, %r2514, %r2515, %r487;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2513, %r2514, %r2515, %r491;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2517, %r2522, %r2523, %r487;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2521, %r2522, %r2523, %r491;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2525, %r2530, %r2531, %r487;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2529, %r2530, %r2531, %r491;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2533, %r2538, %r2539, %r487;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2537, %r2538, %r2539, %r491;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2541, %r2546, %r2547, %r487;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2545, %r2546, %r2547, %r491;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2549, %r2554, %r2555, %r487;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2553, %r2554, %r2555, %r491;
	// end inline asm
	selp.b32 	%r2557, %r2497, %r2493, %p153;
	shfl.sync.bfly.b32	%r89, %r2557, 8, 31, -1;
	selp.b32 	%r2558, %r2505, %r2501, %p153;
	shfl.sync.bfly.b32	%r90, %r2558, 8, 31, -1;
	selp.b32 	%r2559, %r2513, %r2509, %p153;
	shfl.sync.bfly.b32	%r2560, %r2559, 8, 31, -1;
	selp.b32 	%r2561, %r2521, %r2517, %p153;
	shfl.sync.bfly.b32	%r2562, %r2561, 8, 31, -1;
	selp.b32 	%r2563, %r2529, %r2525, %p153;
	shfl.sync.bfly.b32	%r2564, %r2563, 8, 31, -1;
	selp.b32 	%r2565, %r2537, %r2533, %p153;
	shfl.sync.bfly.b32	%r2566, %r2565, 8, 31, -1;
	selp.b32 	%r2567, %r2545, %r2541, %p153;
	shfl.sync.bfly.b32	%r2568, %r2567, 8, 31, -1;
	selp.b32 	%r2569, %r2553, %r2549, %p153;
	shfl.sync.bfly.b32	%r2570, %r2569, 8, 31, -1;
	and.b32  	%r2571, %r45, 65280;
	setp.eq.s32 	%p168, %r2571, 0;
	shl.b32 	%r2598, %r45, 9;
	@%p168 bra 	$L__BB0_35;
// %bb.34:                              // %pass10077
                                        //   in Loop: Header=BB0_31 Depth=1
	selp.b32 	%r2572, %r90, %r2505, %p153;
	selp.b32 	%r2573, %r2501, %r90, %p153;
	selp.b32 	%r2574, %r89, %r2497, %p153;
	selp.b32 	%r2575, %r2493, %r89, %p153;
	or.b32  	%r2577, %r2598, %r21;
	or.b32  	%r2578, %r2577, %r22;
	or.b32  	%r2579, %r2578, %r27;
	cvt.u64.u32 	%rd96, %r2579;
	add.s64 	%rd97, %rd96, %rd8;
	shr.u64 	%rd98, %rd97, 39;
	add.s64 	%rd99, %rd97, %rd98;
	shr.s64 	%rd100, %rd99, 25;
	setp.lt.s64 	%p170, %rd97, 0;
	and.b64  	%rd101, %rd99, -33554432;
	setp.ne.s64 	%p171, %rd101, %rd97;
	and.pred  	%p172, %p170, %p171;
	selp.u64 	%rd102, 1, 0, %p172;
	sub.s64 	%rd103, %rd102, %rd100;
	shl.b64 	%rd104, %rd103, 25;
	add.s64 	%rd105, %rd104, %rd97;
	shl.b64 	%rd106, %rd105, 2;
	add.s64 	%rd107, %rd3, %rd106;
	st.global.v4.u32 	[%rd107], {%r2575, %r2573, %r2574, %r2572};
$L__BB0_35:                             // %pass10161
                                        //   in Loop: Header=BB0_31 Depth=1
	or.b32  	%r83, %r45, 64;
	setp.lt.u32 	%p173, %r83, 192;
	@%p173 bra 	$L__BB0_37;
// %bb.36:                              // %pass10184
                                        //   in Loop: Header=BB0_31 Depth=1
	selp.b32 	%r91, %r2509, %r2560, %p153;
	selp.b32 	%r92, %r2560, %r2513, %p153;
	selp.b32 	%r93, %r2517, %r2562, %p153;
	selp.b32 	%r94, %r2562, %r2521, %p153;
	shl.b32 	%r2580, %r83, 9;
	or.b32  	%r2581, %r2580, %r21;
	or.b32  	%r2582, %r2581, %r22;
	or.b32  	%r2583, %r2582, %r27;
	cvt.u64.u32 	%rd108, %r2583;
	add.s64 	%rd109, %rd108, %rd8;
	shr.u64 	%rd110, %rd109, 39;
	add.s64 	%rd111, %rd109, %rd110;
	shr.s64 	%rd112, %rd111, 25;
	setp.lt.s64 	%p174, %rd109, 0;
	and.b64  	%rd113, %rd111, -33554432;
	setp.ne.s64 	%p175, %rd113, %rd109;
	and.pred  	%p176, %p174, %p175;
	selp.u64 	%rd114, 1, 0, %p176;
	sub.s64 	%rd115, %rd114, %rd112;
	shl.b64 	%rd116, %rd115, 25;
	add.s64 	%rd117, %rd116, %rd109;
	shl.b64 	%rd118, %rd117, 2;
	add.s64 	%rd119, %rd3, %rd118;
	st.global.v4.u32 	[%rd119], {%r91, %r93, %r92, %r94};
$L__BB0_37:                             // %pass10268
                                        //   in Loop: Header=BB0_31 Depth=1
	or.b32  	%r84, %r45, 128;
	selp.b32 	%r99, %r2541, %r2568, %p153;
	selp.b32 	%r100, %r2568, %r2545, %p153;
	selp.b32 	%r101, %r2549, %r2570, %p153;
	selp.b32 	%r102, %r2570, %r2553, %p153;
	setp.lt.u32 	%p177, %r84, 192;
	@%p177 bra 	$L__BB0_39;
// %bb.38:                              // %pass10291
                                        //   in Loop: Header=BB0_31 Depth=1
	selp.b32 	%r95, %r2525, %r2564, %p153;
	selp.b32 	%r96, %r2564, %r2529, %p153;
	selp.b32 	%r97, %r2533, %r2566, %p153;
	selp.b32 	%r98, %r2566, %r2537, %p153;
	shl.b32 	%r2584, %r84, 9;
	or.b32  	%r2585, %r2584, %r21;
	or.b32  	%r2586, %r2585, %r22;
	or.b32  	%r2587, %r2586, %r27;
	cvt.u64.u32 	%rd120, %r2587;
	add.s64 	%rd121, %rd120, %rd8;
	shr.u64 	%rd122, %rd121, 39;
	add.s64 	%rd123, %rd121, %rd122;
	shr.s64 	%rd124, %rd123, 25;
	setp.lt.s64 	%p178, %rd121, 0;
	and.b64  	%rd125, %rd123, -33554432;
	setp.ne.s64 	%p179, %rd125, %rd121;
	and.pred  	%p180, %p178, %p179;
	selp.u64 	%rd126, 1, 0, %p180;
	sub.s64 	%rd127, %rd126, %rd124;
	shl.b64 	%rd128, %rd127, 25;
	add.s64 	%rd129, %rd128, %rd121;
	shl.b64 	%rd130, %rd129, 2;
	add.s64 	%rd131, %rd3, %rd130;
	st.global.v4.u32 	[%rd131], {%r95, %r97, %r96, %r98};
	bra.uni 	$L__BB0_39;
$L__BB0_40:                             // %L23170
	st.global.u32 	[%rd5], %r2597;
	ret;
$L__BB0_9:                              // %L177
	mov.u32 	%r2596, 2;
	st.global.u32 	[%rd5], %r2596;
	mov.u64 	%rd146, exception2065;
	cvta.global.u64 	%rd147, %rd146;
	{ // callseq 6, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd147;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 6
	{ // callseq 7, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd37;
	st.param.b32 	[param0+8], %r103;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 7
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
$L__BB0_12:                             // %L283
	mov.u32 	%r2595, 3;
	st.global.u32 	[%rd5], %r2595;
	mov.u64 	%rd144, exception2065;
	cvta.global.u64 	%rd145, %rd144;
	{ // callseq 4, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd145;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 4
	{ // callseq 5, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd37;
	st.param.b32 	[param0+8], %r103;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 5
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
$L__BB0_1:                              // %L8
	mov.u64 	%rd38, exception1;
	cvta.global.u64 	%rd39, %rd38;
	{ // callseq 0, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd39;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 0
	{ // callseq 1, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd37;
	st.param.b32 	[param0+8], %r103;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 1
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
$L__BB0_3:                              // %L24
	mov.u64 	%rd40, exception1;
	cvta.global.u64 	%rd41, %rd40;
	{ // callseq 2, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd41;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 2
	{ // callseq 3, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd37;
	st.param.b32 	[param0+8], %r103;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 3
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
                                        // -- End function
}
