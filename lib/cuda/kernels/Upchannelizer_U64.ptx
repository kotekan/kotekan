// PTX CompilerJob of MethodInstance for upchan(::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Float16x2, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int32, 1}) for sm_86, minthreads=512, blocks_per_sm=2

//
// Generated by LLVM NVPTX Back-End
//

.version 8.1
.target sm_86
.address_size 64

	// .globl	_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE // -- Begin function _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE
.func julia_AssertionError_9575
()
.noreturn
{
	trap;
}
.func gpu_report_exception
(
	.param .b64 gpu_report_exception_param_0
)
.noreturn
{
	trap;
}
.func  (.param .b64 func_retval0) julia_power_by_squaring_9586
(
	.param .align 8 .b8 julia_power_by_squaring_9586_param_0[16],
	.param .b64 julia_power_by_squaring_9586_param_1,
	.param .b64 julia_power_by_squaring_9586_param_2
)
.noreturn
{
	trap;
}
.func gpu_signal_exception
(
	.param .align 8 .b8 gpu_signal_exception_param_0[16]
)
.noreturn
{
	trap;
}
.extern .shared .align 32 .b8 shmem[];
.global .align 1 .b8 exception2327[6] = {101, 114, 114, 111, 114, 0};
.global .align 1 .b8 exception1[10] = {101, 120, 99, 101, 112, 116, 105, 111, 110, 0};
                                        // @_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE
.visible .entry _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE(
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_0[16],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_1[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_2[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_3[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_4[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_5[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_6[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_7[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_8[32]
)
.reqntid 512, 1, 1
.minnctapersm 2
{
	.reg .pred 	%p<251>;
	.reg .b16 	%rs<1185>;
	.reg .b32 	%r<7853>;
	.reg .f32 	%f<922>;
	.reg .b64 	%rd<131>;
	.reg .f64 	%fd<23>;

// %bb.0:                               // %conversion
	ld.param.u32 	%r165, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_0+8];
	ld.param.u64 	%rd33, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_0];
	// begin inline asm
	mov.u32 %r166, %dynamic_smem_size;
	// end inline asm
	setp.gt.u32 	%p3, %r166, 66815;
	@%p3 bra 	LBB0_2;
	bra.uni 	LBB0_1;
LBB0_2:                                 // %L10
	ld.param.u64 	%rd50, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_8];
	ld.param.u64 	%rd34, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_1];
	mov.u32 	%r1, %tid.x;
	mov.u32 	%r2, %tid.y;
	shl.b32 	%r3, %r2, 5;
	mov.u32 	%r4, %ctaid.x;
	shl.b32 	%r167, %r4, 9;
	or.b32  	%r168, %r3, %r1;
	or.b32  	%r169, %r168, %r167;
	mul.wide.u32 	%rd56, %r169, 4;
	add.s64 	%rd4, %rd50, %rd56;
	mov.u32 	%r170, 1;
	st.global.u32 	[%rd4], %r170;
	ld.global.u32 	%r5, [%rd34];
	setp.lt.s32 	%p4, %r5, 0;
	@%p4 bra 	LBB0_7;
// %bb.3:                               // %L203
	ld.param.u64 	%rd38, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_2];
	ld.global.u32 	%r6, [%rd38];
	setp.lt.s32 	%p5, %r6, %r5;
	setp.gt.s32 	%p6, %r6, 262144;
	or.pred  	%p7, %p5, %p6;
	@%p7 bra 	LBB0_7;
// %bb.4:                               // %L213
	ld.param.u64 	%rd42, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_3];
	ld.global.u32 	%r7, [%rd42];
	sub.s32 	%r171, %r6, %r5;
	and.b32  	%r172, %r171, 255;
	setp.ne.s32 	%p8, %r172, 0;
	setp.lt.s32 	%p9, %r7, 0;
	or.pred  	%p10, %p8, %p9;
	@%p10 bra 	LBB0_7;
// %bb.5:                               // %L219
	ld.param.u64 	%rd46, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_4];
	ld.global.u32 	%r8, [%rd46];
	setp.lt.s32 	%p11, %r8, %r7;
	setp.gt.s32 	%p12, %r8, 4096;
	or.pred  	%p13, %p11, %p12;
	@%p13 bra 	LBB0_7;
// %bb.6:                               // %L229
	not.b32 	%r173, %r7;
	add.s32 	%r174, %r173, %r8;
	and.b32  	%r175, %r174, 3;
	setp.eq.s32 	%p14, %r175, 0;
	@%p14 bra 	LBB0_8;
	bra.uni 	LBB0_7;
LBB0_8:                                 // %pass81
	bfe.u32 	%r118, %r1, 1, 1;
	and.b32  	%r119, %r1, 1;
	bfe.u32 	%r121, %r1, 2, 1;
	shr.u32 	%r122, %r1, 4;
	shl.b32 	%r181, %r122, 1;
	shl.b32 	%r182, %r121, 2;
	shl.b32 	%r183, %r119, 3;
	shl.b32 	%r184, %r118, 4;
	or.b32  	%r185, %r183, %r184;
	or.b32  	%r186, %r182, %r185;
	or.b32  	%r187, %r181, %r186;
	bfe.u32 	%r124, %r1, 3, 1;
	or.b32  	%r125, %r124, %r187;
	or.b32  	%r126, %r125, 32;
	mov.f32 	%f185, 0f40000000;
	mov.f32 	%f186, 0f437F0000;
	div.approx.f32 	%f147, %f186, %f185;
	cvt.rn.f32.s32 	%f187, %r125;
	sub.f32 	%f188, %f187, %f147;
	mov.f32 	%f217, 0f42800000;
	div.approx.f32 	%f149, %f188, %f217;
	setp.ne.f32 	%p20, %f149, 0f00000000;
	mov.f32 	%f889, 0f3F800000;
	mov.f32 	%f882, %f889;
	@%p20 bra 	LBB0_9;
	bra.uni 	LBB0_10;
LBB0_9:                                 // %L547
	sin.approx.f32 	%f218, %f149;
	div.approx.f32 	%f882, %f218, %f149;
LBB0_10:                                // %L550
	cvt.rn.f32.s32 	%f221, %r126;
	sub.f32 	%f222, %f221, %f147;
	div.approx.f32 	%f5, %f222, %f217;
	setp.eq.f32 	%p26, %f5, 0f00000000;
	mov.f32 	%f883, %f889;
	@%p26 bra 	LBB0_12;
// %bb.11:                              // %L567
	sin.approx.f32 	%f252, %f5;
	div.approx.f32 	%f883, %f252, %f5;
LBB0_12:                                // %L570
	or.b32  	%r205, %r125, 64;
	or.b32  	%r10, %r125, 96;
	cvt.rn.f32.s32 	%f256, %r205;
	sub.f32 	%f257, %f256, %f147;
	div.approx.f32 	%f9, %f257, %f217;
	setp.eq.f32 	%p32, %f9, 0f00000000;
	mov.f32 	%f884, %f889;
	@%p32 bra 	LBB0_14;
// %bb.13:                              // %L648
	sin.approx.f32 	%f287, %f9;
	div.approx.f32 	%f884, %f287, %f9;
LBB0_14:                                // %L651
	cvt.rn.f32.s32 	%f290, %r10;
	sub.f32 	%f291, %f290, %f147;
	div.approx.f32 	%f14, %f291, %f217;
	setp.eq.f32 	%p38, %f14, 0f00000000;
	mov.f32 	%f885, %f889;
	@%p38 bra 	LBB0_16;
// %bb.15:                              // %L668
	sin.approx.f32 	%f321, %f14;
	div.approx.f32 	%f885, %f321, %f14;
LBB0_16:                                // %L671
	shl.b32 	%r176, %r1, 1;
	or.b32  	%r223, %r125, 128;
	or.b32  	%r12, %r125, 160;
	cvt.rn.f32.s32 	%f325, %r223;
	sub.f32 	%f326, %f325, %f147;
	div.approx.f32 	%f18, %f326, %f217;
	setp.eq.f32 	%p44, %f18, 0f00000000;
	mov.f32 	%f886, %f889;
	@%p44 bra 	LBB0_18;
// %bb.17:                              // %L749
	sin.approx.f32 	%f356, %f18;
	div.approx.f32 	%f886, %f356, %f18;
LBB0_18:                                // %L752
	and.b32  	%r110, %r176, 8;
	shl.b32 	%r111, %r1, 2;
	and.b32  	%r115, %r1, 18;
	cvt.rn.f32.s32 	%f359, %r12;
	sub.f32 	%f360, %f359, %f147;
	div.approx.f32 	%f23, %f360, %f217;
	setp.eq.f32 	%p50, %f23, 0f00000000;
	mov.f32 	%f887, %f889;
	@%p50 bra 	LBB0_20;
// %bb.19:                              // %L769
	sin.approx.f32 	%f390, %f23;
	div.approx.f32 	%f887, %f390, %f23;
LBB0_20:                                // %L772
	and.b32  	%r112, %r111, 32;
	or.b32  	%r177, %r115, %r110;
	or.b32  	%r241, %r125, 192;
	or.b32  	%r14, %r125, 224;
	cvt.rn.f32.s32 	%f394, %r241;
	sub.f32 	%f395, %f394, %f147;
	div.approx.f32 	%f27, %f395, %f217;
	setp.eq.f32 	%p56, %f27, 0f00000000;
	mov.f32 	%f888, %f889;
	@%p56 bra 	LBB0_22;
// %bb.21:                              // %L850
	sin.approx.f32 	%f425, %f27;
	div.approx.f32 	%f888, %f425, %f27;
LBB0_22:                                // %L853
	and.b32  	%r113, %r111, 4;
	or.b32  	%r178, %r177, %r112;
	cvt.rn.f32.s32 	%f428, %r14;
	sub.f32 	%f429, %f428, %f147;
	div.approx.f32 	%f32, %f429, %f217;
	setp.eq.f32 	%p62, %f32, 0f00000000;
	@%p62 bra 	LBB0_24;
// %bb.23:                              // %L870
	sin.approx.f32 	%f459, %f32;
	div.approx.f32 	%f889, %f459, %f32;
LBB0_24:                                // %L873
	or.b32  	%r179, %r178, %r113;
	mul.lo.s32 	%r16, %r125, 63;
	cvt.rn.f32.s32 	%f462, %r16;
	div.approx.f32 	%f35, %f462, %f217;
	abs.f32 	%f892, %f35;
	setp.lt.f32 	%p63, %f892, 0f40000000;
	@%p63 bra 	LBB0_36;
// %bb.25:
	setp.gtu.f32 	%p64, %f892, 0f4B800000;
	@%p64 bra 	LBB0_32;
	bra.uni 	LBB0_26;
LBB0_32:
	mov.b32 	%r18, %f892;
	and.b32  	%r259, %r18, 8388607;
	or.b32  	%r7810, %r259, 1065353216;
	mov.b32 	%f891, %r7810;
	add.s32 	%r260, %r18, -1073741824;
	and.b32  	%r7811, %r260, -8388608;
	setp.eq.s32 	%p70, %r7811, 0;
	@%p70 bra 	LBB0_35;
// %bb.33:                              // %__nv_fmaf_rn.exit4.i.i.i.preheader
	mov.f32 	%f473, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f472,%f473;
	// end inline asm
LBB0_34:                                // %__nv_fmaf_rn.exit4.i.i.i
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r261, %r7811, 192937984;
	add.s32 	%r262, %r261, %r7810;
	mov.b32 	%f474, %r262;
	mul.f32 	%f475, %f472, %f474;
	sub.f32 	%f476, %f474, %f475;
	fma.rn.f32 	%f477, %f476, %f472, %f475;
	sub.f32 	%f478, %f474, %f477;
	fma.rz.f32 	%f479, %f478, %f472, %f477;
	cvt.rzi.f32.f32 	%f480, %f479;
	sub.f32 	%f891, %f474, %f480;
	sub.s32 	%r7811, %r7811, %r261;
	mov.b32 	%r7810, %f891;
	setp.ne.s32 	%p71, %r7811, 0;
	setp.ne.s32 	%p72, %r7810, 0;
	and.pred  	%p73, %p71, %p72;
	@%p73 bra 	LBB0_34;
LBB0_35:                                // %__internal_fmodf_slowpath_mod.exit.i.i
	setp.gt.u32 	%p74, %r18, 2139095039;
	selp.f32 	%f481, 0f7FFFFFFF, 0f4B800000, %p74;
	mul.f32 	%f482, %f891, 0f34000000;
	mul.f32 	%f892, %f481, %f482;
	bra.uni 	LBB0_36;
LBB0_26:                                // %__nv_fast_fdividef.exit.i.i.i
	div.approx.f32 	%f465, %f892, %f185;
	cvt.rzi.f32.f32 	%f890, %f465;
	fma.rn.f32 	%f38, %f890, 0fC0000000, %f892;
	mov.b32 	%r17, %f38;
	setp.lt.u32 	%p65, %r17, 1073741824;
	@%p65 bra 	LBB0_31;
// %bb.27:
	setp.lt.u32 	%p66, %r17, -2147483647;
	@%p66 bra 	LBB0_29;
// %bb.28:
	add.f32 	%f470, %f890, 0fBF800000;
	setp.lt.f32 	%p69, %f38, 0fC0000000;
	add.f32 	%f471, %f470, 0fBF800000;
	selp.f32 	%f890, %f471, %f470, %p69;
	bra.uni 	LBB0_31;
LBB0_29:
	add.f32 	%f890, %f890, 0f3F800000;
	setp.ltu.f32 	%p67, %f38, 0f40800000;
	@%p67 bra 	LBB0_31;
// %bb.30:                              // %__nv_fmaf_rn.exit.i.i.i
	add.f32 	%f466, %f890, 0f3F800000;
	fma.rn.f32 	%f468, %f185, 0fC0400000, %f38;
	setp.ge.f32 	%p68, %f468, 0f00000000;
	add.f32 	%f469, %f466, 0f3F800000;
	selp.f32 	%f890, %f469, %f466, %p68;
LBB0_31:                                // %__internal_fmodf_fastpath_quot.exit.i.i
	fma.rn.f32 	%f892, %f890, 0fC0000000, %f892;
LBB0_36:                                // %__internal_fmodf_kernel.exit.i
	shr.u32 	%r180, %r179, 1;
	abs.f32 	%f483, %f892;
	setp.gtu.f32 	%p75, %f483, 0f7F800000;
	@%p75 bra 	LBB0_38;
// %bb.37:
	mov.b32 	%r263, %f35;
	and.b32  	%r264, %r263, -2147483648;
	mov.b32 	%r265, %f892;
	or.b32  	%r266, %r264, %r265;
	mov.b32 	%f892, %r266;
LBB0_38:                                // %__nv_fmodf.exit
	ld.param.u64 	%rd1, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_5];
	mul.wide.u32 	%rd57, %r180, 4;
	add.s32 	%r275, %r16, 2016;
	cvt.rn.f32.s32 	%f514, %r275;
	div.approx.f32 	%f54, %f514, %f217;
	abs.f32 	%f896, %f54;
	setp.lt.f32 	%p83, %f896, 0f40000000;
	@%p83 bra 	LBB0_50;
// %bb.39:
	setp.gtu.f32 	%p84, %f896, 0f4B800000;
	@%p84 bra 	LBB0_46;
	bra.uni 	LBB0_40;
LBB0_46:
	mov.b32 	%r26, %f896;
	and.b32  	%r276, %r26, 8388607;
	or.b32  	%r7812, %r276, 1065353216;
	mov.b32 	%f895, %r7812;
	add.s32 	%r277, %r26, -1073741824;
	and.b32  	%r7813, %r277, -8388608;
	setp.eq.s32 	%p90, %r7813, 0;
	@%p90 bra 	LBB0_49;
// %bb.47:                              // %__nv_fmaf_rn.exit4.i.i.i1163.preheader
	mov.f32 	%f525, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f524,%f525;
	// end inline asm
LBB0_48:                                // %__nv_fmaf_rn.exit4.i.i.i1163
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r278, %r7813, 192937984;
	add.s32 	%r279, %r278, %r7812;
	mov.b32 	%f526, %r279;
	mul.f32 	%f527, %f524, %f526;
	sub.f32 	%f528, %f526, %f527;
	fma.rn.f32 	%f529, %f528, %f524, %f527;
	sub.f32 	%f530, %f526, %f529;
	fma.rz.f32 	%f531, %f530, %f524, %f529;
	cvt.rzi.f32.f32 	%f532, %f531;
	sub.f32 	%f895, %f526, %f532;
	sub.s32 	%r7813, %r7813, %r278;
	mov.b32 	%r7812, %f895;
	setp.ne.s32 	%p91, %r7813, 0;
	setp.ne.s32 	%p92, %r7812, 0;
	and.pred  	%p93, %p91, %p92;
	@%p93 bra 	LBB0_48;
LBB0_49:                                // %__internal_fmodf_slowpath_mod.exit.i.i1165
	setp.gt.u32 	%p94, %r26, 2139095039;
	selp.f32 	%f533, 0f7FFFFFFF, 0f4B800000, %p94;
	mul.f32 	%f534, %f895, 0f34000000;
	mul.f32 	%f896, %f533, %f534;
	bra.uni 	LBB0_50;
LBB0_40:                                // %__nv_fast_fdividef.exit.i.i.i1135
	div.approx.f32 	%f517, %f896, %f185;
	cvt.rzi.f32.f32 	%f894, %f517;
	fma.rn.f32 	%f57, %f894, 0fC0000000, %f896;
	mov.b32 	%r25, %f57;
	setp.lt.u32 	%p85, %r25, 1073741824;
	@%p85 bra 	LBB0_45;
// %bb.41:
	setp.lt.u32 	%p86, %r25, -2147483647;
	@%p86 bra 	LBB0_43;
// %bb.42:
	add.f32 	%f522, %f894, 0fBF800000;
	setp.lt.f32 	%p89, %f57, 0fC0000000;
	add.f32 	%f523, %f522, 0fBF800000;
	selp.f32 	%f894, %f523, %f522, %p89;
	bra.uni 	LBB0_45;
LBB0_43:
	add.f32 	%f894, %f894, 0f3F800000;
	setp.ltu.f32 	%p87, %f57, 0f40800000;
	@%p87 bra 	LBB0_45;
// %bb.44:                              // %__nv_fmaf_rn.exit.i.i.i1140
	add.f32 	%f518, %f894, 0f3F800000;
	fma.rn.f32 	%f520, %f185, 0fC0400000, %f57;
	setp.ge.f32 	%p88, %f520, 0f00000000;
	add.f32 	%f521, %f518, 0f3F800000;
	selp.f32 	%f894, %f521, %f518, %p88;
LBB0_45:                                // %__internal_fmodf_fastpath_quot.exit.i.i1144
	fma.rn.f32 	%f896, %f894, 0fC0000000, %f896;
LBB0_50:                                // %__internal_fmodf_kernel.exit.i1169
	add.s64 	%rd58, %rd1, %rd57;
	abs.f32 	%f535, %f896;
	setp.gtu.f32 	%p95, %f535, 0f7F800000;
	@%p95 bra 	LBB0_52;
// %bb.51:
	mov.b32 	%r280, %f54;
	and.b32  	%r281, %r280, -2147483648;
	mov.b32 	%r282, %f896;
	or.b32  	%r283, %r281, %r282;
	mov.b32 	%f896, %r283;
LBB0_52:                                // %__nv_fmodf.exit1170
	ld.global.u32 	%r116, [%rd58];
	mov.u64 	%rd59, 2;
	mov.u64 	%rd60, 6;
	{ // callseq 2, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd33;
	st.param.b32 	[param0+8], %r165;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd59;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd60;
	.param .b64 retval0;
	call.uni (retval0), 
	julia_power_by_squaring_9586, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64 	%rd61, [retval0+0];
	} // callseq 2
	setp.ne.s64 	%p103, %rd61, 64;
	@%p103 bra 	LBB0_128;
// %bb.53:                              // %L970
	shr.u32 	%r120, %r1, 2;
	and.b32  	%r298, %r1, 3;
	shl.b32 	%r299, %r298, 1;
	neg.s32 	%r35, %r299;
	mul.lo.s32 	%r36, %r35, %r120;
	cvt.rn.f32.s32 	%f71, %r36;
	mov.f32 	%f568, 0f41000000;
	div.approx.f32 	%f72, %f71, %f568;
	abs.f32 	%f900, %f72;
	setp.lt.f32 	%p104, %f900, 0f40000000;
	@%p104 bra 	LBB0_65;
// %bb.54:
	setp.gtu.f32 	%p105, %f900, 0f4B800000;
	@%p105 bra 	LBB0_61;
	bra.uni 	LBB0_55;
LBB0_61:
	mov.b32 	%r38, %f900;
	and.b32  	%r300, %r38, 8388607;
	or.b32  	%r7814, %r300, 1065353216;
	mov.b32 	%f899, %r7814;
	add.s32 	%r301, %r38, -1073741824;
	and.b32  	%r7815, %r301, -8388608;
	setp.eq.s32 	%p111, %r7815, 0;
	@%p111 bra 	LBB0_64;
// %bb.62:                              // %__nv_fmaf_rn.exit4.i.i.i1209.preheader
	mov.f32 	%f578, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f577,%f578;
	// end inline asm
LBB0_63:                                // %__nv_fmaf_rn.exit4.i.i.i1209
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r302, %r7815, 192937984;
	add.s32 	%r303, %r302, %r7814;
	mov.b32 	%f579, %r303;
	mul.f32 	%f580, %f577, %f579;
	sub.f32 	%f581, %f579, %f580;
	fma.rn.f32 	%f582, %f581, %f577, %f580;
	sub.f32 	%f583, %f579, %f582;
	fma.rz.f32 	%f584, %f583, %f577, %f582;
	cvt.rzi.f32.f32 	%f585, %f584;
	sub.f32 	%f899, %f579, %f585;
	sub.s32 	%r7815, %r7815, %r302;
	mov.b32 	%r7814, %f899;
	setp.ne.s32 	%p112, %r7815, 0;
	setp.ne.s32 	%p113, %r7814, 0;
	and.pred  	%p114, %p112, %p113;
	@%p114 bra 	LBB0_63;
LBB0_64:                                // %__internal_fmodf_slowpath_mod.exit.i.i1211
	setp.gt.u32 	%p115, %r38, 2139095039;
	selp.f32 	%f586, 0f7FFFFFFF, 0f4B800000, %p115;
	mul.f32 	%f587, %f899, 0f34000000;
	mul.f32 	%f900, %f586, %f587;
	bra.uni 	LBB0_65;
LBB0_55:                                // %__nv_fast_fdividef.exit.i.i.i1181
	div.approx.f32 	%f570, %f900, %f185;
	cvt.rzi.f32.f32 	%f898, %f570;
	fma.rn.f32 	%f75, %f898, 0fC0000000, %f900;
	mov.b32 	%r37, %f75;
	setp.lt.u32 	%p106, %r37, 1073741824;
	@%p106 bra 	LBB0_60;
// %bb.56:
	setp.lt.u32 	%p107, %r37, -2147483647;
	@%p107 bra 	LBB0_58;
// %bb.57:
	add.f32 	%f575, %f898, 0fBF800000;
	setp.lt.f32 	%p110, %f75, 0fC0000000;
	add.f32 	%f576, %f575, 0fBF800000;
	selp.f32 	%f898, %f576, %f575, %p110;
	bra.uni 	LBB0_60;
LBB0_58:
	add.f32 	%f898, %f898, 0f3F800000;
	setp.ltu.f32 	%p108, %f75, 0f40800000;
	@%p108 bra 	LBB0_60;
// %bb.59:                              // %__nv_fmaf_rn.exit.i.i.i1186
	add.f32 	%f571, %f898, 0f3F800000;
	fma.rn.f32 	%f573, %f185, 0fC0400000, %f75;
	setp.ge.f32 	%p109, %f573, 0f00000000;
	add.f32 	%f574, %f571, 0f3F800000;
	selp.f32 	%f898, %f574, %f571, %p109;
LBB0_60:                                // %__internal_fmodf_fastpath_quot.exit.i.i1190
	fma.rn.f32 	%f900, %f898, 0fC0000000, %f900;
LBB0_65:                                // %__internal_fmodf_kernel.exit.i1215
	abs.f32 	%f588, %f900;
	setp.gtu.f32 	%p116, %f588, 0f7F800000;
	@%p116 bra 	LBB0_67;
// %bb.66:
	mov.b32 	%r304, %f72;
	and.b32  	%r305, %r304, -2147483648;
	mov.b32 	%r306, %f900;
	or.b32  	%r307, %r305, %r306;
	mov.b32 	%f900, %r307;
LBB0_67:                                // %__nv_fmodf.exit1216
	shl.b32 	%r316, %r120, 3;
	sub.s32 	%r317, %r36, %r316;
	cvt.rn.f32.s32 	%f91, %r317;
	div.approx.f32 	%f92, %f91, %f568;
	abs.f32 	%f904, %f92;
	setp.lt.f32 	%p124, %f904, 0f40000000;
	@%p124 bra 	LBB0_79;
// %bb.68:
	setp.gtu.f32 	%p125, %f904, 0f4B800000;
	@%p125 bra 	LBB0_75;
	bra.uni 	LBB0_69;
LBB0_75:
	mov.b32 	%r46, %f904;
	and.b32  	%r318, %r46, 8388607;
	or.b32  	%r7816, %r318, 1065353216;
	mov.b32 	%f903, %r7816;
	add.s32 	%r319, %r46, -1073741824;
	and.b32  	%r7817, %r319, -8388608;
	setp.eq.s32 	%p131, %r7817, 0;
	@%p131 bra 	LBB0_78;
// %bb.76:                              // %__nv_fmaf_rn.exit4.i.i.i1255.preheader
	mov.f32 	%f629, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f628,%f629;
	// end inline asm
LBB0_77:                                // %__nv_fmaf_rn.exit4.i.i.i1255
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r320, %r7817, 192937984;
	add.s32 	%r321, %r320, %r7816;
	mov.b32 	%f630, %r321;
	mul.f32 	%f631, %f628, %f630;
	sub.f32 	%f632, %f630, %f631;
	fma.rn.f32 	%f633, %f632, %f628, %f631;
	sub.f32 	%f634, %f630, %f633;
	fma.rz.f32 	%f635, %f634, %f628, %f633;
	cvt.rzi.f32.f32 	%f636, %f635;
	sub.f32 	%f903, %f630, %f636;
	sub.s32 	%r7817, %r7817, %r320;
	mov.b32 	%r7816, %f903;
	setp.ne.s32 	%p132, %r7817, 0;
	setp.ne.s32 	%p133, %r7816, 0;
	and.pred  	%p134, %p132, %p133;
	@%p134 bra 	LBB0_77;
LBB0_78:                                // %__internal_fmodf_slowpath_mod.exit.i.i1257
	setp.gt.u32 	%p135, %r46, 2139095039;
	selp.f32 	%f637, 0f7FFFFFFF, 0f4B800000, %p135;
	mul.f32 	%f638, %f903, 0f34000000;
	mul.f32 	%f904, %f637, %f638;
	bra.uni 	LBB0_79;
LBB0_69:                                // %__nv_fast_fdividef.exit.i.i.i1227
	div.approx.f32 	%f621, %f904, %f185;
	cvt.rzi.f32.f32 	%f902, %f621;
	fma.rn.f32 	%f95, %f902, 0fC0000000, %f904;
	mov.b32 	%r45, %f95;
	setp.lt.u32 	%p126, %r45, 1073741824;
	@%p126 bra 	LBB0_74;
// %bb.70:
	setp.lt.u32 	%p127, %r45, -2147483647;
	@%p127 bra 	LBB0_72;
// %bb.71:
	add.f32 	%f626, %f902, 0fBF800000;
	setp.lt.f32 	%p130, %f95, 0fC0000000;
	add.f32 	%f627, %f626, 0fBF800000;
	selp.f32 	%f902, %f627, %f626, %p130;
	bra.uni 	LBB0_74;
LBB0_72:
	add.f32 	%f902, %f902, 0f3F800000;
	setp.ltu.f32 	%p128, %f95, 0f40800000;
	@%p128 bra 	LBB0_74;
// %bb.73:                              // %__nv_fmaf_rn.exit.i.i.i1232
	add.f32 	%f622, %f902, 0f3F800000;
	fma.rn.f32 	%f624, %f185, 0fC0400000, %f95;
	setp.ge.f32 	%p129, %f624, 0f00000000;
	add.f32 	%f625, %f622, 0f3F800000;
	selp.f32 	%f902, %f625, %f622, %p129;
LBB0_74:                                // %__internal_fmodf_fastpath_quot.exit.i.i1236
	fma.rn.f32 	%f904, %f902, 0fC0000000, %f904;
LBB0_79:                                // %__internal_fmodf_kernel.exit.i1261
	abs.f32 	%f639, %f904;
	setp.gtu.f32 	%p136, %f639, 0f7F800000;
	@%p136 bra 	LBB0_81;
// %bb.80:
	mov.b32 	%r322, %f92;
	and.b32  	%r323, %r322, -2147483648;
	mov.b32 	%r324, %f904;
	or.b32  	%r325, %r323, %r324;
	mov.b32 	%f904, %r325;
LBB0_81:                                // %__nv_fmodf.exit1262
	{ // callseq 6, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd33;
	st.param.b32 	[param0+8], %r165;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd59;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd60;
	.param .b64 retval0;
	call.uni (retval0), 
	julia_power_by_squaring_9586, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64 	%rd67, [retval0+0];
	} // callseq 6
	setp.ne.s64 	%p144, %rd67, 64;
	@%p144 bra 	LBB0_127;
// %bb.82:                              // %L1108
	{ // callseq 10, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd33;
	st.param.b32 	[param0+8], %r165;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd59;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd60;
	.param .b64 retval0;
	call.uni (retval0), 
	julia_power_by_squaring_9586, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64 	%rd73, [retval0+0];
	} // callseq 10
	cvt.rn.f32.s64 	%f672, %rd73;
	div.approx.f32 	%f109, %f71, %f672;
	abs.f32 	%f916, %f109;
	setp.lt.f32 	%p145, %f916, 0f40000000;
	@%p145 bra 	LBB0_136;
// %bb.83:
	setp.gtu.f32 	%p146, %f916, 0f4B800000;
	@%p146 bra 	LBB0_132;
	bra.uni 	LBB0_84;
LBB0_132:
	mov.b32 	%r128, %f916;
	and.b32  	%r346, %r128, 8388607;
	or.b32  	%r7835, %r346, 1065353216;
	mov.b32 	%f915, %r7835;
	add.s32 	%r347, %r128, -1073741824;
	and.b32  	%r7836, %r347, -8388608;
	setp.eq.s32 	%p152, %r7836, 0;
	@%p152 bra 	LBB0_135;
// %bb.133:                             // %__nv_fmaf_rn.exit4.i.i.i1393.preheader
	mov.f32 	%f682, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f681,%f682;
	// end inline asm
LBB0_134:                               // %__nv_fmaf_rn.exit4.i.i.i1393
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r348, %r7836, 192937984;
	add.s32 	%r349, %r348, %r7835;
	mov.b32 	%f683, %r349;
	mul.f32 	%f684, %f681, %f683;
	sub.f32 	%f685, %f683, %f684;
	fma.rn.f32 	%f686, %f685, %f681, %f684;
	sub.f32 	%f687, %f683, %f686;
	fma.rz.f32 	%f688, %f687, %f681, %f686;
	cvt.rzi.f32.f32 	%f689, %f688;
	sub.f32 	%f915, %f683, %f689;
	sub.s32 	%r7836, %r7836, %r348;
	mov.b32 	%r7835, %f915;
	setp.ne.s32 	%p153, %r7836, 0;
	setp.ne.s32 	%p154, %r7835, 0;
	and.pred  	%p155, %p153, %p154;
	@%p155 bra 	LBB0_134;
LBB0_135:                               // %__internal_fmodf_slowpath_mod.exit.i.i1395
	setp.gt.u32 	%p156, %r128, 2139095039;
	selp.f32 	%f690, 0f7FFFFFFF, 0f4B800000, %p156;
	mul.f32 	%f691, %f915, 0f34000000;
	mul.f32 	%f916, %f690, %f691;
	bra.uni 	LBB0_136;
LBB0_84:                                // %__nv_fast_fdividef.exit.i.i.i1365
	div.approx.f32 	%f674, %f916, %f185;
	cvt.rzi.f32.f32 	%f914, %f674;
	fma.rn.f32 	%f151, %f914, 0fC0000000, %f916;
	mov.b32 	%r127, %f151;
	setp.lt.u32 	%p147, %r127, 1073741824;
	@%p147 bra 	LBB0_131;
// %bb.85:
	setp.lt.u32 	%p148, %r127, -2147483647;
	@%p148 bra 	LBB0_129;
// %bb.86:
	add.f32 	%f679, %f914, 0fBF800000;
	setp.lt.f32 	%p151, %f151, 0fC0000000;
	add.f32 	%f680, %f679, 0fBF800000;
	selp.f32 	%f914, %f680, %f679, %p151;
	bra.uni 	LBB0_131;
LBB0_129:
	add.f32 	%f914, %f914, 0f3F800000;
	setp.ltu.f32 	%p149, %f151, 0f40800000;
	@%p149 bra 	LBB0_131;
// %bb.130:                             // %__nv_fmaf_rn.exit.i.i.i1370
	add.f32 	%f675, %f914, 0f3F800000;
	fma.rn.f32 	%f677, %f185, 0fC0400000, %f151;
	setp.ge.f32 	%p150, %f677, 0f00000000;
	add.f32 	%f678, %f675, 0f3F800000;
	selp.f32 	%f914, %f678, %f675, %p150;
LBB0_131:                               // %__internal_fmodf_fastpath_quot.exit.i.i1374
	fma.rn.f32 	%f916, %f914, 0fC0000000, %f916;
LBB0_136:                               // %__internal_fmodf_kernel.exit.i1399
	abs.f32 	%f692, %f916;
	setp.gtu.f32 	%p157, %f692, 0f7F800000;
	@%p157 bra 	LBB0_138;
// %bb.137:
	mov.b32 	%r350, %f109;
	and.b32  	%r351, %r350, -2147483648;
	mov.b32 	%r352, %f916;
	or.b32  	%r353, %r351, %r352;
	mov.b32 	%f916, %r353;
LBB0_138:                               // %__nv_fmodf.exit1400
	{ // callseq 11, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd33;
	st.param.b32 	[param0+8], %r165;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd59;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd60;
	.param .b64 retval0;
	call.uni (retval0), 
	julia_power_by_squaring_9586, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64 	%rd77, [retval0+0];
	} // callseq 11
	cvt.rn.f32.s64 	%f723, %rd77;
	div.approx.f32 	%f167, %f91, %f723;
	abs.f32 	%f920, %f167;
	setp.lt.f32 	%p165, %f920, 0f40000000;
	@%p165 bra 	LBB0_150;
// %bb.139:
	setp.gtu.f32 	%p166, %f920, 0f4B800000;
	@%p166 bra 	LBB0_146;
	bra.uni 	LBB0_140;
LBB0_146:
	mov.b32 	%r136, %f920;
	and.b32  	%r362, %r136, 8388607;
	or.b32  	%r7837, %r362, 1065353216;
	mov.b32 	%f919, %r7837;
	add.s32 	%r363, %r136, -1073741824;
	and.b32  	%r7838, %r363, -8388608;
	setp.eq.s32 	%p172, %r7838, 0;
	@%p172 bra 	LBB0_149;
// %bb.147:                             // %__nv_fmaf_rn.exit4.i.i.i1439.preheader
	mov.f32 	%f733, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f732,%f733;
	// end inline asm
LBB0_148:                               // %__nv_fmaf_rn.exit4.i.i.i1439
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r364, %r7838, 192937984;
	add.s32 	%r365, %r364, %r7837;
	mov.b32 	%f734, %r365;
	mul.f32 	%f735, %f732, %f734;
	sub.f32 	%f736, %f734, %f735;
	fma.rn.f32 	%f737, %f736, %f732, %f735;
	sub.f32 	%f738, %f734, %f737;
	fma.rz.f32 	%f739, %f738, %f732, %f737;
	cvt.rzi.f32.f32 	%f740, %f739;
	sub.f32 	%f919, %f734, %f740;
	sub.s32 	%r7838, %r7838, %r364;
	mov.b32 	%r7837, %f919;
	setp.ne.s32 	%p173, %r7838, 0;
	setp.ne.s32 	%p174, %r7837, 0;
	and.pred  	%p175, %p173, %p174;
	@%p175 bra 	LBB0_148;
LBB0_149:                               // %__internal_fmodf_slowpath_mod.exit.i.i1441
	setp.gt.u32 	%p176, %r136, 2139095039;
	selp.f32 	%f741, 0f7FFFFFFF, 0f4B800000, %p176;
	mul.f32 	%f742, %f919, 0f34000000;
	mul.f32 	%f920, %f741, %f742;
	bra.uni 	LBB0_150;
LBB0_140:                               // %__nv_fast_fdividef.exit.i.i.i1411
	div.approx.f32 	%f725, %f920, %f185;
	cvt.rzi.f32.f32 	%f918, %f725;
	fma.rn.f32 	%f170, %f918, 0fC0000000, %f920;
	mov.b32 	%r135, %f170;
	setp.lt.u32 	%p167, %r135, 1073741824;
	@%p167 bra 	LBB0_145;
// %bb.141:
	setp.lt.u32 	%p168, %r135, -2147483647;
	@%p168 bra 	LBB0_143;
// %bb.142:
	add.f32 	%f730, %f918, 0fBF800000;
	setp.lt.f32 	%p171, %f170, 0fC0000000;
	add.f32 	%f731, %f730, 0fBF800000;
	selp.f32 	%f918, %f731, %f730, %p171;
	bra.uni 	LBB0_145;
LBB0_143:
	add.f32 	%f918, %f918, 0f3F800000;
	setp.ltu.f32 	%p169, %f170, 0f40800000;
	@%p169 bra 	LBB0_145;
// %bb.144:                             // %__nv_fmaf_rn.exit.i.i.i1416
	add.f32 	%f726, %f918, 0f3F800000;
	fma.rn.f32 	%f728, %f185, 0fC0400000, %f170;
	setp.ge.f32 	%p170, %f728, 0f00000000;
	add.f32 	%f729, %f726, 0f3F800000;
	selp.f32 	%f918, %f729, %f726, %p170;
LBB0_145:                               // %__internal_fmodf_fastpath_quot.exit.i.i1420
	fma.rn.f32 	%f920, %f918, 0fC0000000, %f920;
LBB0_150:                               // %__internal_fmodf_kernel.exit.i1445
	abs.f32 	%f743, %f920;
	setp.gtu.f32 	%p177, %f743, 0f7F800000;
	@%p177 bra 	LBB0_152;
// %bb.151:
	mov.b32 	%r366, %f167;
	and.b32  	%r367, %r366, -2147483648;
	mov.b32 	%r368, %f920;
	or.b32  	%r369, %r367, %r368;
	mov.b32 	%f920, %r369;
LBB0_152:                               // %__nv_fmodf.exit1446
	{ // callseq 12, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd33;
	st.param.b32 	[param0+8], %r165;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd59;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd60;
	.param .b64 retval0;
	call.uni (retval0), 
	julia_power_by_squaring_9586, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64 	%rd81, [retval0+0];
	} // callseq 12
	setp.eq.s64 	%p185, %rd81, 64;
	@%p185 bra 	LBB0_87;
	bra.uni 	LBB0_153;
LBB0_87:                                // %L1191
	shr.u32 	%r117, %r1, 1;
	shr.u32 	%r123, %r1, 3;
	and.b32  	%r384, %r123, 2;
	and.b32  	%r385, %r117, 4;
	or.b32  	%r386, %r121, %r384;
	or.b32  	%r57, %r386, %r385;
	mul.lo.s32 	%r58, %r35, %r57;
	cvt.rn.f32.s32 	%f776, %r58;
	div.approx.f32 	%f111, %f776, %f568;
	abs.f32 	%f908, %f111;
	setp.lt.f32 	%p186, %f908, 0f40000000;
	@%p186 bra 	LBB0_99;
// %bb.88:
	setp.gtu.f32 	%p187, %f908, 0f4B800000;
	@%p187 bra 	LBB0_95;
	bra.uni 	LBB0_89;
LBB0_95:
	mov.b32 	%r60, %f908;
	and.b32  	%r387, %r60, 8388607;
	or.b32  	%r7818, %r387, 1065353216;
	mov.b32 	%f907, %r7818;
	add.s32 	%r388, %r60, -1073741824;
	and.b32  	%r7819, %r388, -8388608;
	setp.eq.s32 	%p193, %r7819, 0;
	@%p193 bra 	LBB0_98;
// %bb.96:                              // %__nv_fmaf_rn.exit4.i.i.i1301.preheader
	mov.f32 	%f787, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f786,%f787;
	// end inline asm
LBB0_97:                                // %__nv_fmaf_rn.exit4.i.i.i1301
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r389, %r7819, 192937984;
	add.s32 	%r390, %r389, %r7818;
	mov.b32 	%f788, %r390;
	mul.f32 	%f789, %f786, %f788;
	sub.f32 	%f790, %f788, %f789;
	fma.rn.f32 	%f791, %f790, %f786, %f789;
	sub.f32 	%f792, %f788, %f791;
	fma.rz.f32 	%f793, %f792, %f786, %f791;
	cvt.rzi.f32.f32 	%f794, %f793;
	sub.f32 	%f907, %f788, %f794;
	sub.s32 	%r7819, %r7819, %r389;
	mov.b32 	%r7818, %f907;
	setp.ne.s32 	%p194, %r7819, 0;
	setp.ne.s32 	%p195, %r7818, 0;
	and.pred  	%p196, %p194, %p195;
	@%p196 bra 	LBB0_97;
LBB0_98:                                // %__internal_fmodf_slowpath_mod.exit.i.i1303
	setp.gt.u32 	%p197, %r60, 2139095039;
	selp.f32 	%f795, 0f7FFFFFFF, 0f4B800000, %p197;
	mul.f32 	%f796, %f907, 0f34000000;
	mul.f32 	%f908, %f795, %f796;
	bra.uni 	LBB0_99;
LBB0_89:                                // %__nv_fast_fdividef.exit.i.i.i1273
	div.approx.f32 	%f779, %f908, %f185;
	cvt.rzi.f32.f32 	%f906, %f779;
	fma.rn.f32 	%f114, %f906, 0fC0000000, %f908;
	mov.b32 	%r59, %f114;
	setp.lt.u32 	%p188, %r59, 1073741824;
	@%p188 bra 	LBB0_94;
// %bb.90:
	setp.lt.u32 	%p189, %r59, -2147483647;
	@%p189 bra 	LBB0_92;
// %bb.91:
	add.f32 	%f784, %f906, 0fBF800000;
	setp.lt.f32 	%p192, %f114, 0fC0000000;
	add.f32 	%f785, %f784, 0fBF800000;
	selp.f32 	%f906, %f785, %f784, %p192;
	bra.uni 	LBB0_94;
LBB0_92:
	add.f32 	%f906, %f906, 0f3F800000;
	setp.ltu.f32 	%p190, %f114, 0f40800000;
	@%p190 bra 	LBB0_94;
// %bb.93:                              // %__nv_fmaf_rn.exit.i.i.i1278
	add.f32 	%f780, %f906, 0f3F800000;
	fma.rn.f32 	%f782, %f185, 0fC0400000, %f114;
	setp.ge.f32 	%p191, %f782, 0f00000000;
	add.f32 	%f783, %f780, 0f3F800000;
	selp.f32 	%f906, %f783, %f780, %p191;
LBB0_94:                                // %__internal_fmodf_fastpath_quot.exit.i.i1282
	fma.rn.f32 	%f908, %f906, 0fC0000000, %f908;
LBB0_99:                                // %__internal_fmodf_kernel.exit.i1307
	abs.f32 	%f797, %f908;
	setp.gtu.f32 	%p198, %f797, 0f7F800000;
	@%p198 bra 	LBB0_101;
// %bb.100:
	mov.b32 	%r391, %f111;
	and.b32  	%r392, %r391, -2147483648;
	mov.b32 	%r393, %f908;
	or.b32  	%r394, %r392, %r393;
	mov.b32 	%f908, %r394;
LBB0_101:                               // %__nv_fmodf.exit1308
	shl.b32 	%r403, %r57, 3;
	sub.s32 	%r404, %r58, %r403;
	cvt.rn.f32.s32 	%f828, %r404;
	div.approx.f32 	%f130, %f828, %f568;
	abs.f32 	%f912, %f130;
	setp.lt.f32 	%p206, %f912, 0f40000000;
	@%p206 bra 	LBB0_113;
// %bb.102:
	setp.gtu.f32 	%p207, %f912, 0f4B800000;
	@%p207 bra 	LBB0_109;
	bra.uni 	LBB0_103;
LBB0_109:
	mov.b32 	%r68, %f912;
	and.b32  	%r405, %r68, 8388607;
	or.b32  	%r7820, %r405, 1065353216;
	mov.b32 	%f911, %r7820;
	add.s32 	%r406, %r68, -1073741824;
	and.b32  	%r7821, %r406, -8388608;
	setp.eq.s32 	%p213, %r7821, 0;
	@%p213 bra 	LBB0_112;
// %bb.110:                             // %__nv_fmaf_rn.exit4.i.i.i1347.preheader
	mov.f32 	%f839, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f838,%f839;
	// end inline asm
LBB0_111:                               // %__nv_fmaf_rn.exit4.i.i.i1347
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r407, %r7821, 192937984;
	add.s32 	%r408, %r407, %r7820;
	mov.b32 	%f840, %r408;
	mul.f32 	%f841, %f838, %f840;
	sub.f32 	%f842, %f840, %f841;
	fma.rn.f32 	%f843, %f842, %f838, %f841;
	sub.f32 	%f844, %f840, %f843;
	fma.rz.f32 	%f845, %f844, %f838, %f843;
	cvt.rzi.f32.f32 	%f846, %f845;
	sub.f32 	%f911, %f840, %f846;
	sub.s32 	%r7821, %r7821, %r407;
	mov.b32 	%r7820, %f911;
	setp.ne.s32 	%p214, %r7821, 0;
	setp.ne.s32 	%p215, %r7820, 0;
	and.pred  	%p216, %p214, %p215;
	@%p216 bra 	LBB0_111;
LBB0_112:                               // %__internal_fmodf_slowpath_mod.exit.i.i1349
	setp.gt.u32 	%p217, %r68, 2139095039;
	selp.f32 	%f847, 0f7FFFFFFF, 0f4B800000, %p217;
	mul.f32 	%f848, %f911, 0f34000000;
	mul.f32 	%f912, %f847, %f848;
	bra.uni 	LBB0_113;
LBB0_103:                               // %__nv_fast_fdividef.exit.i.i.i1319
	div.approx.f32 	%f831, %f912, %f185;
	cvt.rzi.f32.f32 	%f910, %f831;
	fma.rn.f32 	%f133, %f910, 0fC0000000, %f912;
	mov.b32 	%r67, %f133;
	setp.lt.u32 	%p208, %r67, 1073741824;
	@%p208 bra 	LBB0_108;
// %bb.104:
	setp.lt.u32 	%p209, %r67, -2147483647;
	@%p209 bra 	LBB0_106;
// %bb.105:
	add.f32 	%f836, %f910, 0fBF800000;
	setp.lt.f32 	%p212, %f133, 0fC0000000;
	add.f32 	%f837, %f836, 0fBF800000;
	selp.f32 	%f910, %f837, %f836, %p212;
	bra.uni 	LBB0_108;
LBB0_106:
	add.f32 	%f910, %f910, 0f3F800000;
	setp.ltu.f32 	%p210, %f133, 0f40800000;
	@%p210 bra 	LBB0_108;
// %bb.107:                             // %__nv_fmaf_rn.exit.i.i.i1324
	add.f32 	%f832, %f910, 0f3F800000;
	fma.rn.f32 	%f834, %f185, 0fC0400000, %f133;
	setp.ge.f32 	%p211, %f834, 0f00000000;
	add.f32 	%f835, %f832, 0f3F800000;
	selp.f32 	%f910, %f835, %f832, %p211;
LBB0_108:                               // %__internal_fmodf_fastpath_quot.exit.i.i1328
	fma.rn.f32 	%f912, %f910, 0fC0000000, %f912;
LBB0_113:                               // %__internal_fmodf_kernel.exit.i1353
	abs.f32 	%f849, %f912;
	setp.gtu.f32 	%p218, %f849, 0f7F800000;
	@%p218 bra 	LBB0_115;
// %bb.114:
	mov.b32 	%r409, %f130;
	and.b32  	%r410, %r409, -2147483648;
	mov.b32 	%r411, %f912;
	or.b32  	%r412, %r410, %r411;
	mov.b32 	%f912, %r412;
LBB0_115:                               // %__nv_fmodf.exit1354
	setp.le.s32 	%p226, %r6, %r5;
	mov.u32 	%r7809, 0;
	@%p226 bra 	LBB0_126;
// %bb.116:                             // %oksrem365.lr.ph
	mov.f32 	%f189, 0f43808000;
	div.approx.f32 	%f190, %f188, %f189;
	div.approx.f32 	%f224, %f222, %f189;
	div.approx.f32 	%f259, %f257, %f189;
	div.approx.f32 	%f293, %f291, %f189;
	div.approx.f32 	%f328, %f326, %f189;
	div.approx.f32 	%f362, %f360, %f189;
	div.approx.f32 	%f397, %f395, %f189;
	div.approx.f32 	%f431, %f429, %f189;
	abs.f32 	%f191, %f190;
	abs.f32 	%f225, %f224;
	abs.f32 	%f260, %f259;
	abs.f32 	%f294, %f293;
	abs.f32 	%f329, %f328;
	abs.f32 	%f363, %f362;
	abs.f32 	%f398, %f397;
	abs.f32 	%f432, %f431;
	setp.gt.f32 	%p15, %f191, 0f4B800000;
	mul.f32 	%f192, %f190, 0f00000000;
	setp.gt.f32 	%p21, %f225, 0f4B800000;
	mul.f32 	%f226, %f224, 0f00000000;
	setp.gt.f32 	%p27, %f260, 0f4B800000;
	mul.f32 	%f261, %f259, 0f00000000;
	setp.gt.f32 	%p33, %f294, 0f4B800000;
	mul.f32 	%f295, %f293, 0f00000000;
	setp.gt.f32 	%p39, %f329, 0f4B800000;
	mul.f32 	%f330, %f328, 0f00000000;
	setp.gt.f32 	%p45, %f363, 0f4B800000;
	mul.f32 	%f364, %f362, 0f00000000;
	setp.gt.f32 	%p51, %f398, 0f4B800000;
	mul.f32 	%f399, %f397, 0f00000000;
	setp.gt.f32 	%p57, %f432, 0f4B800000;
	mul.f32 	%f433, %f431, 0f00000000;
	selp.f32 	%f193, %f192, %f190, %p15;
	selp.f32 	%f227, %f226, %f224, %p21;
	selp.f32 	%f262, %f261, %f259, %p27;
	selp.f32 	%f296, %f295, %f293, %p33;
	selp.f32 	%f331, %f330, %f328, %p39;
	selp.f32 	%f365, %f364, %f362, %p45;
	selp.f32 	%f400, %f399, %f397, %p51;
	selp.f32 	%f434, %f433, %f431, %p57;
	add.f32 	%f589, %f900, %f900;
	add.f32 	%f640, %f904, %f904;
	add.f32 	%f194, %f193, %f193;
	add.f32 	%f228, %f227, %f227;
	add.f32 	%f263, %f262, %f262;
	add.f32 	%f297, %f296, %f296;
	add.f32 	%f332, %f331, %f331;
	add.f32 	%f366, %f365, %f365;
	add.f32 	%f401, %f400, %f400;
	add.f32 	%f435, %f434, %f434;
	add.f32 	%f484, %f892, %f892;
	add.f32 	%f536, %f896, %f896;
	mov.b32 	%r308, %f589;
	mov.b32 	%r338, %f640;
	add.f32 	%f693, %f916, %f916;
	add.f32 	%f744, %f920, %f920;
	mov.b32 	%r188, %f194;
	mov.b32 	%r195, %f228;
	mov.b32 	%r206, %f263;
	mov.b32 	%r213, %f297;
	mov.b32 	%r224, %f332;
	mov.b32 	%r231, %f366;
	mov.b32 	%r242, %f401;
	mov.b32 	%r249, %f435;
	mov.b32 	%r267, %f484;
	mov.b32 	%r290, %f536;
	and.b32  	%r309, %r308, -2147483648;
	and.b32  	%r339, %r338, -2147483648;
	mov.b32 	%r354, %f693;
	mov.b32 	%r376, %f744;
	and.b32  	%r189, %r188, -2147483648;
	and.b32  	%r196, %r195, -2147483648;
	and.b32  	%r207, %r206, -2147483648;
	and.b32  	%r214, %r213, -2147483648;
	and.b32  	%r225, %r224, -2147483648;
	and.b32  	%r232, %r231, -2147483648;
	and.b32  	%r243, %r242, -2147483648;
	and.b32  	%r250, %r249, -2147483648;
	and.b32  	%r268, %r267, -2147483648;
	and.b32  	%r291, %r290, -2147483648;
	or.b32  	%r310, %r309, 1056964608;
	or.b32  	%r340, %r339, 1056964608;
	and.b32  	%r355, %r354, -2147483648;
	and.b32  	%r377, %r376, -2147483648;
	add.f32 	%f798, %f908, %f908;
	or.b32  	%r190, %r189, 1056964608;
	or.b32  	%r197, %r196, 1056964608;
	or.b32  	%r208, %r207, 1056964608;
	or.b32  	%r215, %r214, 1056964608;
	or.b32  	%r226, %r225, 1056964608;
	or.b32  	%r233, %r232, 1056964608;
	or.b32  	%r244, %r243, 1056964608;
	or.b32  	%r251, %r250, 1056964608;
	or.b32  	%r269, %r268, 1056964608;
	or.b32  	%r292, %r291, 1056964608;
	mov.b32 	%f590, %r310;
	mov.b32 	%f641, %r340;
	or.b32  	%r356, %r355, 1056964608;
	or.b32  	%r378, %r377, 1056964608;
	mov.b32 	%r395, %f798;
	mov.b32 	%f195, %r190;
	mov.b32 	%f229, %r197;
	mov.b32 	%f264, %r208;
	mov.b32 	%f298, %r215;
	mov.b32 	%f333, %r226;
	mov.b32 	%f367, %r233;
	mov.b32 	%f402, %r244;
	mov.b32 	%f436, %r251;
	mov.b32 	%f485, %r269;
	mov.b32 	%f537, %r292;
	add.f32 	%f591, %f589, %f590;
	abs.f32 	%f593, %f589;
	add.f32 	%f642, %f640, %f641;
	abs.f32 	%f644, %f640;
	mov.b32 	%f694, %r356;
	mov.b32 	%f745, %r378;
	and.b32  	%r396, %r395, -2147483648;
	add.f32 	%f196, %f194, %f195;
	abs.f32 	%f198, %f194;
	add.f32 	%f230, %f228, %f229;
	abs.f32 	%f232, %f228;
	add.f32 	%f265, %f263, %f264;
	abs.f32 	%f267, %f263;
	add.f32 	%f299, %f297, %f298;
	abs.f32 	%f301, %f297;
	add.f32 	%f334, %f332, %f333;
	abs.f32 	%f336, %f332;
	add.f32 	%f368, %f366, %f367;
	abs.f32 	%f370, %f366;
	add.f32 	%f403, %f401, %f402;
	abs.f32 	%f405, %f401;
	add.f32 	%f437, %f435, %f436;
	abs.f32 	%f439, %f435;
	add.f32 	%f486, %f484, %f485;
	abs.f32 	%f488, %f484;
	add.f32 	%f538, %f536, %f537;
	abs.f32 	%f540, %f536;
	cvt.rzi.f32.f32 	%f592, %f591;
	setp.gt.f32 	%p117, %f593, 0f4B000000;
	cvt.rzi.f32.f32 	%f643, %f642;
	setp.gt.f32 	%p137, %f644, 0f4B000000;
	add.f32 	%f695, %f693, %f694;
	abs.f32 	%f697, %f693;
	add.f32 	%f746, %f744, %f745;
	abs.f32 	%f748, %f744;
	or.b32  	%r397, %r396, 1056964608;
	cvt.rzi.f32.f32 	%f197, %f196;
	setp.gt.f32 	%p16, %f198, 0f4B000000;
	cvt.rzi.f32.f32 	%f231, %f230;
	setp.gt.f32 	%p22, %f232, 0f4B000000;
	cvt.rzi.f32.f32 	%f266, %f265;
	setp.gt.f32 	%p28, %f267, 0f4B000000;
	cvt.rzi.f32.f32 	%f300, %f299;
	setp.gt.f32 	%p34, %f301, 0f4B000000;
	cvt.rzi.f32.f32 	%f335, %f334;
	setp.gt.f32 	%p40, %f336, 0f4B000000;
	cvt.rzi.f32.f32 	%f369, %f368;
	setp.gt.f32 	%p46, %f370, 0f4B000000;
	cvt.rzi.f32.f32 	%f404, %f403;
	setp.gt.f32 	%p52, %f405, 0f4B000000;
	cvt.rzi.f32.f32 	%f438, %f437;
	setp.gt.f32 	%p58, %f439, 0f4B000000;
	cvt.rzi.f32.f32 	%f487, %f486;
	setp.gt.f32 	%p76, %f488, 0f4B000000;
	cvt.rzi.f32.f32 	%f539, %f538;
	setp.gt.f32 	%p96, %f540, 0f4B000000;
	selp.f32 	%f594, %f589, %f592, %p117;
	cvt.rzi.f32.f32 	%f595, %f589;
	setp.lt.f32 	%p118, %f593, 0f3F000000;
	selp.f32 	%f645, %f640, %f643, %p137;
	cvt.rzi.f32.f32 	%f646, %f640;
	setp.lt.f32 	%p138, %f644, 0f3F000000;
	cvt.rzi.f32.f32 	%f696, %f695;
	setp.gt.f32 	%p158, %f697, 0f4B000000;
	cvt.rzi.f32.f32 	%f747, %f746;
	setp.gt.f32 	%p178, %f748, 0f4B000000;
	mov.b32 	%f799, %r397;
	selp.f32 	%f199, %f194, %f197, %p16;
	cvt.rzi.f32.f32 	%f200, %f194;
	setp.lt.f32 	%p17, %f198, 0f3F000000;
	selp.f32 	%f233, %f228, %f231, %p22;
	cvt.rzi.f32.f32 	%f234, %f228;
	setp.lt.f32 	%p23, %f232, 0f3F000000;
	selp.f32 	%f268, %f263, %f266, %p28;
	cvt.rzi.f32.f32 	%f269, %f263;
	setp.lt.f32 	%p29, %f267, 0f3F000000;
	selp.f32 	%f302, %f297, %f300, %p34;
	cvt.rzi.f32.f32 	%f303, %f297;
	setp.lt.f32 	%p35, %f301, 0f3F000000;
	selp.f32 	%f337, %f332, %f335, %p40;
	cvt.rzi.f32.f32 	%f338, %f332;
	setp.lt.f32 	%p41, %f336, 0f3F000000;
	selp.f32 	%f371, %f366, %f369, %p46;
	cvt.rzi.f32.f32 	%f372, %f366;
	setp.lt.f32 	%p47, %f370, 0f3F000000;
	selp.f32 	%f406, %f401, %f404, %p52;
	cvt.rzi.f32.f32 	%f407, %f401;
	setp.lt.f32 	%p53, %f405, 0f3F000000;
	selp.f32 	%f440, %f435, %f438, %p58;
	cvt.rzi.f32.f32 	%f441, %f435;
	setp.lt.f32 	%p59, %f439, 0f3F000000;
	selp.f32 	%f489, %f484, %f487, %p76;
	cvt.rzi.f32.f32 	%f490, %f484;
	setp.lt.f32 	%p77, %f488, 0f3F000000;
	selp.f32 	%f541, %f536, %f539, %p96;
	cvt.rzi.f32.f32 	%f542, %f536;
	setp.lt.f32 	%p97, %f540, 0f3F000000;
	selp.f32 	%f596, %f595, %f594, %p118;
	selp.f32 	%f647, %f646, %f645, %p138;
	selp.f32 	%f698, %f693, %f696, %p158;
	cvt.rzi.f32.f32 	%f699, %f693;
	setp.lt.f32 	%p159, %f697, 0f3F000000;
	selp.f32 	%f749, %f744, %f747, %p178;
	cvt.rzi.f32.f32 	%f750, %f744;
	setp.lt.f32 	%p179, %f748, 0f3F000000;
	add.f32 	%f800, %f798, %f799;
	abs.f32 	%f802, %f798;
	selp.f32 	%f201, %f200, %f199, %p17;
	selp.f32 	%f235, %f234, %f233, %p23;
	selp.f32 	%f270, %f269, %f268, %p29;
	selp.f32 	%f304, %f303, %f302, %p35;
	selp.f32 	%f339, %f338, %f337, %p41;
	selp.f32 	%f373, %f372, %f371, %p47;
	selp.f32 	%f408, %f407, %f406, %p53;
	selp.f32 	%f442, %f441, %f440, %p59;
	selp.f32 	%f491, %f490, %f489, %p77;
	selp.f32 	%f543, %f542, %f541, %p97;
	fma.rn.f32 	%f597, %f596, 0fBF000000, %f900;
	fma.rn.f32 	%f648, %f647, 0fBF000000, %f904;
	selp.f32 	%f700, %f699, %f698, %p159;
	selp.f32 	%f751, %f750, %f749, %p179;
	cvt.rzi.f32.f32 	%f801, %f800;
	setp.gt.f32 	%p199, %f802, 0f4B000000;
	fma.rn.f32 	%f202, %f201, 0fBF000000, %f193;
	fma.rn.f32 	%f236, %f235, 0fBF000000, %f227;
	fma.rn.f32 	%f271, %f270, 0fBF000000, %f262;
	fma.rn.f32 	%f305, %f304, 0fBF000000, %f296;
	fma.rn.f32 	%f340, %f339, 0fBF000000, %f331;
	fma.rn.f32 	%f374, %f373, 0fBF000000, %f365;
	fma.rn.f32 	%f409, %f408, 0fBF000000, %f400;
	fma.rn.f32 	%f443, %f442, 0fBF000000, %f434;
	fma.rn.f32 	%f492, %f491, 0fBF000000, %f892;
	fma.rn.f32 	%f544, %f543, 0fBF000000, %f896;
	mul.f32 	%f598, %f597, %f597;
	mul.f32 	%f649, %f648, %f648;
	fma.rn.f32 	%f701, %f700, 0fBF000000, %f916;
	fma.rn.f32 	%f752, %f751, 0fBF000000, %f920;
	selp.f32 	%f803, %f798, %f801, %p199;
	cvt.rzi.f32.f32 	%f804, %f798;
	setp.lt.f32 	%p200, %f802, 0f3F000000;
	mul.f32 	%f203, %f202, %f202;
	mul.f32 	%f237, %f236, %f236;
	mul.f32 	%f272, %f271, %f271;
	mul.f32 	%f306, %f305, %f305;
	mul.f32 	%f341, %f340, %f340;
	mul.f32 	%f375, %f374, %f374;
	mul.f32 	%f410, %f409, %f409;
	mul.f32 	%f444, %f443, %f443;
	mul.f32 	%f493, %f492, %f492;
	mul.f32 	%f545, %f544, %f544;
	fma.rn.f32 	%f599, %f598, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f600, %f598, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f650, %f649, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f651, %f649, 0f3E684E12, 0fBFAAD2E0;
	mul.f32 	%f702, %f701, %f701;
	mul.f32 	%f753, %f752, %f752;
	selp.f32 	%f805, %f804, %f803, %p200;
	cvt.rzi.s32.f32 	%r191, %f201;
	fma.rn.f32 	%f204, %f203, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f205, %f203, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r198, %f235;
	fma.rn.f32 	%f238, %f237, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f239, %f237, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r209, %f270;
	fma.rn.f32 	%f273, %f272, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f274, %f272, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r216, %f304;
	fma.rn.f32 	%f307, %f306, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f308, %f306, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r227, %f339;
	fma.rn.f32 	%f342, %f341, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f343, %f341, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r234, %f373;
	fma.rn.f32 	%f376, %f375, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f377, %f375, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r245, %f408;
	fma.rn.f32 	%f411, %f410, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f412, %f410, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r252, %f442;
	fma.rn.f32 	%f445, %f444, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f446, %f444, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f494, %f493, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f495, %f493, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f546, %f545, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f547, %f545, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r311, %f596;
	fma.rn.f32 	%f601, %f599, %f598, 0fC0A55DF6;
	fma.rn.f32 	%f602, %f600, %f598, 0f4081E0CF;
	fma.rn.f32 	%f603, %f598, %f597, 0f00000000;
	cvt.rzi.s32.f32 	%r341, %f647;
	fma.rn.f32 	%f652, %f650, %f649, 0fC0A55DF6;
	fma.rn.f32 	%f653, %f651, %f649, 0f4081E0CF;
	fma.rn.f32 	%f654, %f649, %f648, 0f00000000;
	fma.rn.f32 	%f703, %f702, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f704, %f702, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f754, %f753, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f755, %f753, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f806, %f805, 0fBF000000, %f908;
	add.s32 	%r192, %r191, 1;
	fma.rn.f32 	%f206, %f204, %f203, 0fC0A55DF6;
	fma.rn.f32 	%f207, %f205, %f203, 0f4081E0CF;
	fma.rn.f32 	%f208, %f203, %f202, 0f00000000;
	add.s32 	%r199, %r198, 1;
	fma.rn.f32 	%f240, %f238, %f237, 0fC0A55DF6;
	fma.rn.f32 	%f241, %f239, %f237, 0f4081E0CF;
	fma.rn.f32 	%f242, %f237, %f236, 0f00000000;
	add.s32 	%r210, %r209, 1;
	fma.rn.f32 	%f275, %f273, %f272, 0fC0A55DF6;
	fma.rn.f32 	%f276, %f274, %f272, 0f4081E0CF;
	fma.rn.f32 	%f277, %f272, %f271, 0f00000000;
	add.s32 	%r217, %r216, 1;
	fma.rn.f32 	%f309, %f307, %f306, 0fC0A55DF6;
	fma.rn.f32 	%f310, %f308, %f306, 0f4081E0CF;
	fma.rn.f32 	%f311, %f306, %f305, 0f00000000;
	add.s32 	%r228, %r227, 1;
	fma.rn.f32 	%f344, %f342, %f341, 0fC0A55DF6;
	fma.rn.f32 	%f345, %f343, %f341, 0f4081E0CF;
	fma.rn.f32 	%f346, %f341, %f340, 0f00000000;
	add.s32 	%r235, %r234, 1;
	fma.rn.f32 	%f378, %f376, %f375, 0fC0A55DF6;
	fma.rn.f32 	%f379, %f377, %f375, 0f4081E0CF;
	fma.rn.f32 	%f380, %f375, %f374, 0f00000000;
	add.s32 	%r246, %r245, 1;
	fma.rn.f32 	%f413, %f411, %f410, 0fC0A55DF6;
	fma.rn.f32 	%f414, %f412, %f410, 0f4081E0CF;
	fma.rn.f32 	%f415, %f410, %f409, 0f00000000;
	add.s32 	%r253, %r252, 1;
	fma.rn.f32 	%f447, %f445, %f444, 0fC0A55DF6;
	fma.rn.f32 	%f448, %f446, %f444, 0f4081E0CF;
	fma.rn.f32 	%f449, %f444, %f443, 0f00000000;
	cvt.rzi.s32.f32 	%r270, %f491;
	fma.rn.f32 	%f496, %f494, %f493, 0fC0A55DF6;
	fma.rn.f32 	%f497, %f495, %f493, 0f4081E0CF;
	fma.rn.f32 	%f498, %f493, %f492, 0f00000000;
	cvt.rzi.s32.f32 	%r293, %f543;
	fma.rn.f32 	%f548, %f546, %f545, 0fC0A55DF6;
	fma.rn.f32 	%f549, %f547, %f545, 0f4081E0CF;
	fma.rn.f32 	%f550, %f545, %f544, 0f00000000;
	fma.rn.f32 	%f604, %f602, %f598, 0fC09DE9E6;
	fma.rn.f32 	%f605, %f601, %f603, 0f00000000;
	and.b32  	%r312, %r311, 1;
	fma.rn.f32 	%f655, %f653, %f649, 0fC09DE9E6;
	fma.rn.f32 	%f656, %f652, %f654, 0f00000000;
	and.b32  	%r342, %r341, 1;
	cvt.rzi.s32.f32 	%r357, %f700;
	fma.rn.f32 	%f705, %f703, %f702, 0fC0A55DF6;
	fma.rn.f32 	%f706, %f704, %f702, 0f4081E0CF;
	fma.rn.f32 	%f707, %f702, %f701, 0f00000000;
	cvt.rzi.s32.f32 	%r379, %f751;
	fma.rn.f32 	%f756, %f754, %f753, 0fC0A55DF6;
	fma.rn.f32 	%f757, %f755, %f753, 0f4081E0CF;
	fma.rn.f32 	%f758, %f753, %f752, 0f00000000;
	mul.f32 	%f807, %f806, %f806;
	fma.rn.f32 	%f209, %f207, %f203, 0fC09DE9E6;
	fma.rn.f32 	%f210, %f206, %f208, 0f00000000;
	and.b32  	%r193, %r192, 1;
	fma.rn.f32 	%f243, %f241, %f237, 0fC09DE9E6;
	fma.rn.f32 	%f244, %f240, %f242, 0f00000000;
	and.b32  	%r200, %r199, 1;
	fma.rn.f32 	%f278, %f276, %f272, 0fC09DE9E6;
	fma.rn.f32 	%f279, %f275, %f277, 0f00000000;
	and.b32  	%r211, %r210, 1;
	fma.rn.f32 	%f312, %f310, %f306, 0fC09DE9E6;
	fma.rn.f32 	%f313, %f309, %f311, 0f00000000;
	and.b32  	%r218, %r217, 1;
	fma.rn.f32 	%f347, %f345, %f341, 0fC09DE9E6;
	fma.rn.f32 	%f348, %f344, %f346, 0f00000000;
	and.b32  	%r229, %r228, 1;
	fma.rn.f32 	%f381, %f379, %f375, 0fC09DE9E6;
	fma.rn.f32 	%f382, %f378, %f380, 0f00000000;
	and.b32  	%r236, %r235, 1;
	fma.rn.f32 	%f416, %f414, %f410, 0fC09DE9E6;
	fma.rn.f32 	%f417, %f413, %f415, 0f00000000;
	and.b32  	%r247, %r246, 1;
	fma.rn.f32 	%f450, %f448, %f444, 0fC09DE9E6;
	fma.rn.f32 	%f451, %f447, %f449, 0f00000000;
	and.b32  	%r254, %r253, 1;
	fma.rn.f32 	%f499, %f497, %f493, 0fC09DE9E6;
	fma.rn.f32 	%f500, %f496, %f498, 0f00000000;
	and.b32  	%r271, %r270, 1;
	fma.rn.f32 	%f551, %f549, %f545, 0fC09DE9E6;
	fma.rn.f32 	%f552, %f548, %f550, 0f00000000;
	and.b32  	%r294, %r293, 1;
	fma.rn.f32 	%f606, %f604, %f598, 0f3F800000;
	fma.rn.f32 	%f607, %f597, 0f40490FDB, %f605;
	setp.eq.b32 	%p119, %r312, 1;
	fma.rn.f32 	%f657, %f655, %f649, 0f3F800000;
	fma.rn.f32 	%f658, %f648, 0f40490FDB, %f656;
	setp.eq.b32 	%p139, %r342, 1;
	fma.rn.f32 	%f708, %f706, %f702, 0fC09DE9E6;
	fma.rn.f32 	%f709, %f705, %f707, 0f00000000;
	and.b32  	%r358, %r357, 1;
	fma.rn.f32 	%f759, %f757, %f753, 0fC09DE9E6;
	fma.rn.f32 	%f760, %f756, %f758, 0f00000000;
	and.b32  	%r380, %r379, 1;
	fma.rn.f32 	%f808, %f807, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f809, %f807, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f211, %f209, %f203, 0f3F800000;
	fma.rn.f32 	%f212, %f202, 0f40490FDB, %f210;
	setp.eq.b32 	%p18, %r193, 1;
	fma.rn.f32 	%f245, %f243, %f237, 0f3F800000;
	fma.rn.f32 	%f246, %f236, 0f40490FDB, %f244;
	setp.eq.b32 	%p24, %r200, 1;
	fma.rn.f32 	%f280, %f278, %f272, 0f3F800000;
	fma.rn.f32 	%f281, %f271, 0f40490FDB, %f279;
	setp.eq.b32 	%p30, %r211, 1;
	fma.rn.f32 	%f314, %f312, %f306, 0f3F800000;
	fma.rn.f32 	%f315, %f305, 0f40490FDB, %f313;
	setp.eq.b32 	%p36, %r218, 1;
	fma.rn.f32 	%f349, %f347, %f341, 0f3F800000;
	fma.rn.f32 	%f350, %f340, 0f40490FDB, %f348;
	setp.eq.b32 	%p42, %r229, 1;
	fma.rn.f32 	%f383, %f381, %f375, 0f3F800000;
	fma.rn.f32 	%f384, %f374, 0f40490FDB, %f382;
	setp.eq.b32 	%p48, %r236, 1;
	fma.rn.f32 	%f418, %f416, %f410, 0f3F800000;
	fma.rn.f32 	%f419, %f409, 0f40490FDB, %f417;
	setp.eq.b32 	%p54, %r247, 1;
	fma.rn.f32 	%f452, %f450, %f444, 0f3F800000;
	fma.rn.f32 	%f453, %f443, 0f40490FDB, %f451;
	setp.eq.b32 	%p60, %r254, 1;
	fma.rn.f32 	%f501, %f499, %f493, 0f3F800000;
	fma.rn.f32 	%f502, %f492, 0f40490FDB, %f500;
	setp.eq.b32 	%p78, %r271, 1;
	fma.rn.f32 	%f553, %f551, %f545, 0f3F800000;
	fma.rn.f32 	%f554, %f544, 0f40490FDB, %f552;
	setp.eq.b32 	%p98, %r294, 1;
	selp.f32 	%f608, %f606, %f607, %p119;
	and.b32  	%r313, %r311, 2;
	selp.f32 	%f659, %f657, %f658, %p139;
	and.b32  	%r343, %r341, 2;
	fma.rn.f32 	%f710, %f708, %f702, 0f3F800000;
	fma.rn.f32 	%f711, %f701, 0f40490FDB, %f709;
	setp.eq.b32 	%p160, %r358, 1;
	fma.rn.f32 	%f761, %f759, %f753, 0f3F800000;
	fma.rn.f32 	%f762, %f752, 0f40490FDB, %f760;
	setp.eq.b32 	%p180, %r380, 1;
	cvt.rzi.s32.f32 	%r398, %f805;
	fma.rn.f32 	%f810, %f808, %f807, 0fC0A55DF6;
	fma.rn.f32 	%f811, %f809, %f807, 0f4081E0CF;
	fma.rn.f32 	%f812, %f807, %f806, 0f00000000;
	selp.f32 	%f213, %f211, %f212, %p18;
	and.b32  	%r194, %r192, 2;
	mov.f32 	%f214, 0f00000000;
	selp.f32 	%f247, %f245, %f246, %p24;
	and.b32  	%r201, %r199, 2;
	selp.f32 	%f282, %f280, %f281, %p30;
	and.b32  	%r212, %r210, 2;
	selp.f32 	%f316, %f314, %f315, %p36;
	and.b32  	%r219, %r217, 2;
	selp.f32 	%f351, %f349, %f350, %p42;
	and.b32  	%r230, %r228, 2;
	selp.f32 	%f385, %f383, %f384, %p48;
	and.b32  	%r237, %r235, 2;
	selp.f32 	%f420, %f418, %f419, %p54;
	and.b32  	%r248, %r246, 2;
	selp.f32 	%f454, %f452, %f453, %p60;
	and.b32  	%r255, %r253, 2;
	selp.f32 	%f503, %f501, %f502, %p78;
	and.b32  	%r272, %r270, 2;
	selp.f32 	%f555, %f553, %f554, %p98;
	and.b32  	%r295, %r293, 2;
	setp.eq.s32 	%p120, %r313, 0;
	neg.f32 	%f610, %f608;
	add.s32 	%r314, %r311, 1;
	cvt.rzi.f32.f32 	%f615, %f900;
	setp.eq.s32 	%p140, %r343, 0;
	neg.f32 	%f661, %f659;
	add.s32 	%r344, %r341, 1;
	cvt.rzi.f32.f32 	%f666, %f904;
	selp.f32 	%f712, %f710, %f711, %p160;
	and.b32  	%r359, %r357, 2;
	selp.f32 	%f763, %f761, %f762, %p180;
	and.b32  	%r381, %r379, 2;
	fma.rn.f32 	%f813, %f811, %f807, 0fC09DE9E6;
	fma.rn.f32 	%f814, %f810, %f812, 0f00000000;
	and.b32  	%r399, %r398, 1;
	setp.eq.s32 	%p19, %r194, 0;
	sub.f32 	%f215, %f214, %f213;
	setp.eq.s32 	%p25, %r201, 0;
	sub.f32 	%f249, %f214, %f247;
	setp.eq.s32 	%p31, %r212, 0;
	sub.f32 	%f284, %f214, %f282;
	setp.eq.s32 	%p37, %r219, 0;
	sub.f32 	%f318, %f214, %f316;
	setp.eq.s32 	%p43, %r230, 0;
	sub.f32 	%f353, %f214, %f351;
	setp.eq.s32 	%p49, %r237, 0;
	sub.f32 	%f387, %f214, %f385;
	setp.eq.s32 	%p55, %r248, 0;
	sub.f32 	%f422, %f214, %f420;
	setp.eq.s32 	%p61, %r255, 0;
	sub.f32 	%f456, %f214, %f454;
	setp.eq.s32 	%p79, %r272, 0;
	neg.f32 	%f505, %f503;
	add.s32 	%r273, %r270, 1;
	cvt.rzi.f32.f32 	%f510, %f892;
	setp.eq.s32 	%p99, %r295, 0;
	neg.f32 	%f557, %f555;
	add.s32 	%r296, %r293, 1;
	cvt.rzi.f32.f32 	%f562, %f896;
	selp.f32 	%f609, %f607, %f606, %p119;
	selp.f32 	%f611, %f608, %f610, %p120;
	and.b32  	%r315, %r314, 2;
	setp.eq.f32 	%p122, %f615, %f900;
	mul.f32 	%f616, %f900, 0f00000000;
	selp.f32 	%f660, %f658, %f657, %p139;
	selp.f32 	%f662, %f659, %f661, %p140;
	and.b32  	%r345, %r344, 2;
	setp.eq.f32 	%p142, %f666, %f904;
	mul.f32 	%f667, %f904, 0f00000000;
	setp.eq.s32 	%p161, %r359, 0;
	neg.f32 	%f714, %f712;
	add.s32 	%r360, %r357, 1;
	cvt.rzi.f32.f32 	%f719, %f916;
	setp.eq.s32 	%p181, %r381, 0;
	neg.f32 	%f765, %f763;
	add.s32 	%r382, %r379, 1;
	cvt.rzi.f32.f32 	%f770, %f920;
	fma.rn.f32 	%f815, %f813, %f807, 0f3F800000;
	fma.rn.f32 	%f816, %f806, 0f40490FDB, %f814;
	setp.eq.b32 	%p201, %r399, 1;
	selp.f32 	%f216, %f213, %f215, %p19;
	selp.f32 	%f250, %f247, %f249, %p25;
	selp.f32 	%f285, %f282, %f284, %p31;
	selp.f32 	%f319, %f316, %f318, %p37;
	selp.f32 	%f354, %f351, %f353, %p43;
	selp.f32 	%f388, %f385, %f387, %p49;
	selp.f32 	%f423, %f420, %f422, %p55;
	selp.f32 	%f457, %f454, %f456, %p61;
	selp.f32 	%f504, %f502, %f501, %p78;
	selp.f32 	%f506, %f503, %f505, %p79;
	and.b32  	%r274, %r273, 2;
	setp.eq.f32 	%p81, %f510, %f892;
	mul.f32 	%f511, %f892, 0f00000000;
	selp.f32 	%f556, %f554, %f553, %p98;
	selp.f32 	%f558, %f555, %f557, %p99;
	and.b32  	%r297, %r296, 2;
	setp.eq.f32 	%p101, %f562, %f896;
	mul.f32 	%f563, %f896, 0f00000000;
	setp.eq.s32 	%p121, %r315, 0;
	sub.f32 	%f613, %f214, %f609;
	selp.f32 	%f89, %f616, %f611, %p122;
	abs.f32 	%f617, %f900;
	setp.eq.s32 	%p141, %r345, 0;
	sub.f32 	%f664, %f214, %f660;
	selp.f32 	%f668, %f667, %f662, %p142;
	abs.f32 	%f669, %f904;
	selp.f32 	%f713, %f711, %f710, %p160;
	selp.f32 	%f715, %f712, %f714, %p161;
	and.b32  	%r361, %r360, 2;
	setp.eq.f32 	%p163, %f719, %f916;
	mul.f32 	%f720, %f916, 0f00000000;
	selp.f32 	%f764, %f762, %f761, %p180;
	selp.f32 	%f766, %f763, %f765, %p181;
	and.b32  	%r383, %r382, 2;
	setp.eq.f32 	%p183, %f770, %f920;
	mul.f32 	%f771, %f920, 0f00000000;
	selp.f32 	%f817, %f815, %f816, %p201;
	and.b32  	%r400, %r398, 2;
	mul.f32 	%f148, %f216, %f216;
	mul.f32 	%f4, %f250, %f250;
	mul.f32 	%f8, %f285, %f285;
	mul.f32 	%f13, %f319, %f319;
	mul.f32 	%f17, %f354, %f354;
	mul.f32 	%f22, %f388, %f388;
	mul.f32 	%f26, %f423, %f423;
	mul.f32 	%f31, %f457, %f457;
	setp.eq.s32 	%p80, %r274, 0;
	sub.f32 	%f508, %f214, %f504;
	selp.f32 	%f52, %f511, %f506, %p81;
	abs.f32 	%f512, %f892;
	setp.eq.s32 	%p100, %r297, 0;
	sub.f32 	%f560, %f214, %f556;
	selp.f32 	%f564, %f563, %f558, %p101;
	abs.f32 	%f565, %f896;
	selp.f32 	%f614, %f609, %f613, %p121;
	setp.gt.f32 	%p123, %f617, 0f4B800000;
	add.f32 	%f618, %f89, 0f3F800000;
	selp.f32 	%f665, %f660, %f664, %p141;
	setp.gt.f32 	%p143, %f669, 0f4B800000;
	add.f32 	%f670, %f668, 0f3F800000;
	setp.eq.s32 	%p162, %r361, 0;
	sub.f32 	%f717, %f214, %f713;
	selp.f32 	%f165, %f720, %f715, %p163;
	abs.f32 	%f721, %f916;
	setp.eq.s32 	%p182, %r383, 0;
	sub.f32 	%f768, %f214, %f764;
	selp.f32 	%f772, %f771, %f766, %p183;
	abs.f32 	%f773, %f920;
	setp.eq.s32 	%p202, %r400, 0;
	neg.f32 	%f819, %f817;
	add.s32 	%r401, %r398, 1;
	cvt.rzi.f32.f32 	%f824, %f908;
	mul.f32 	%f220, %f148, 0f3C0AF64E;
	mul.f32 	%f254, %f4, 0f3C0AF64E;
	mul.f32 	%f289, %f8, 0f3C0AF64E;
	mul.f32 	%f323, %f13, 0f3C0AF64E;
	mul.f32 	%f358, %f17, 0f3C0AF64E;
	mul.f32 	%f392, %f22, 0f3C0AF64E;
	mul.f32 	%f427, %f26, 0f3C0AF64E;
	mul.f32 	%f460, %f31, 0f3C0AF64E;
	selp.f32 	%f509, %f504, %f508, %p80;
	setp.gt.f32 	%p82, %f512, 0f4B800000;
	add.f32 	%f513, %f52, 0f3F800000;
	selp.f32 	%f561, %f556, %f560, %p100;
	setp.gt.f32 	%p102, %f565, 0f4B800000;
	add.f32 	%f566, %f564, 0f3F800000;
	selp.f32 	%f90, %f618, %f614, %p123;
	selp.f32 	%f671, %f670, %f665, %p143;
	selp.f32 	%f718, %f713, %f717, %p162;
	setp.gt.f32 	%p164, %f721, 0f4B800000;
	add.f32 	%f722, %f165, 0f3F800000;
	selp.f32 	%f769, %f764, %f768, %p182;
	setp.gt.f32 	%p184, %f773, 0f4B800000;
	add.f32 	%f774, %f772, 0f3F800000;
	selp.f32 	%f818, %f816, %f815, %p201;
	selp.f32 	%f820, %f817, %f819, %p202;
	and.b32  	%r402, %r401, 2;
	setp.eq.f32 	%p204, %f824, %f908;
	mul.f32 	%f825, %f908, 0f00000000;
	mul.f32 	%f3, %f220, %f882;
	mul.f32 	%f255, %f254, %f883;
	mul.f32 	%f12, %f289, %f884;
	mul.f32 	%f324, %f323, %f885;
	mul.f32 	%f21, %f358, %f886;
	mul.f32 	%f393, %f392, %f887;
	mul.f32 	%f30, %f427, %f888;
	mul.f32 	%f461, %f460, %f889;
	selp.f32 	%f53, %f513, %f509, %p82;
	selp.f32 	%f567, %f566, %f561, %p102;
	mov.b32 	%r328, %f671;
	mov.b32 	%r327, %f90;
	mov.b32 	%r334, %f668;
	mov.b32 	%r333, %f89;
	selp.f32 	%f166, %f722, %f718, %p164;
	selp.f32 	%f775, %f774, %f769, %p184;
	setp.eq.s32 	%p203, %r402, 0;
	sub.f32 	%f822, %f214, %f818;
	selp.f32 	%f128, %f825, %f820, %p204;
	abs.f32 	%f826, %f908;
	ld.param.u64 	%rd2, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_6];
	ld.param.u64 	%rd3, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_7];
	and.b32  	%r114, %r1, 16;
	mov.b32 	%r204, %f255;
	mov.b32 	%r203, %f3;
	mov.b32 	%r222, %f324;
	mov.b32 	%r221, %f12;
	mov.b32 	%r240, %f393;
	mov.b32 	%r239, %f21;
	mov.b32 	%r258, %f461;
	mov.b32 	%r257, %f30;
	mov.b32 	%r286, %f567;
	mov.b32 	%r285, %f53;
	mov.b32 	%r289, %f564;
	mov.b32 	%r288, %f52;
	xor.b32  	%r331, %r334, -2147483648;
	xor.b32  	%r330, %r333, -2147483648;
	mov.b32 	%r372, %f775;
	mov.b32 	%r371, %f166;
	mov.b32 	%r375, %f772;
	mov.b32 	%r374, %f165;
	selp.f32 	%f823, %f818, %f822, %p203;
	setp.gt.f32 	%p205, %f826, 0f4B800000;
	add.f32 	%f827, %f128, 0f3F800000;
	// begin inline asm
	cvt.rn.f16x2.f32 %r202, %r204, %r203;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r220, %r222, %r221;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r238, %r240, %r239;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r256, %r258, %r257;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r284, %r286, %r285;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r287, %r289, %r288;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r326, %r328, %r327;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r329, %r331, %r330;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r332, %r334, %r333;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r335, %r328, %r327;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r370, %r372, %r371;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r373, %r375, %r374;
	// end inline asm
	selp.f32 	%f129, %f827, %f823, %p205;
	add.f32 	%f850, %f912, %f912;
	mov.b32 	%r425, %f850;
	and.b32  	%r426, %r425, -2147483648;
	or.b32  	%r427, %r426, 1056964608;
	mov.b32 	%f851, %r427;
	add.f32 	%f852, %f850, %f851;
	cvt.rzi.f32.f32 	%f853, %f852;
	abs.f32 	%f854, %f850;
	setp.gt.f32 	%p219, %f854, 0f4B000000;
	selp.f32 	%f855, %f850, %f853, %p219;
	cvt.rzi.f32.f32 	%f856, %f850;
	setp.lt.f32 	%p220, %f854, 0f3F000000;
	selp.f32 	%f857, %f856, %f855, %p220;
	cvt.rzi.s32.f32 	%r428, %f857;
	fma.rn.f32 	%f858, %f857, 0fBF000000, %f912;
	mul.f32 	%f859, %f858, %f858;
	fma.rn.f32 	%f860, %f859, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f861, %f859, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f862, %f860, %f859, 0fC0A55DF6;
	fma.rn.f32 	%f863, %f861, %f859, 0f4081E0CF;
	fma.rn.f32 	%f864, %f859, %f858, 0f00000000;
	fma.rn.f32 	%f865, %f863, %f859, 0fC09DE9E6;
	fma.rn.f32 	%f866, %f862, %f864, 0f00000000;
	fma.rn.f32 	%f867, %f865, %f859, 0f3F800000;
	fma.rn.f32 	%f868, %f858, 0f40490FDB, %f866;
	and.b32  	%r429, %r428, 1;
	setp.eq.b32 	%p221, %r429, 1;
	selp.f32 	%f869, %f867, %f868, %p221;
	selp.f32 	%f870, %f868, %f867, %p221;
	and.b32  	%r430, %r428, 2;
	setp.eq.s32 	%p222, %r430, 0;
	neg.f32 	%f871, %f869;
	selp.f32 	%f872, %f869, %f871, %p222;
	add.s32 	%r431, %r428, 1;
	and.b32  	%r432, %r431, 2;
	setp.eq.s32 	%p223, %r432, 0;
	sub.f32 	%f874, %f214, %f870;
	selp.f32 	%f875, %f870, %f874, %p223;
	cvt.rzi.f32.f32 	%f876, %f912;
	setp.eq.f32 	%p224, %f876, %f912;
	mul.f32 	%f877, %f912, 0f00000000;
	selp.f32 	%f878, %f877, %f872, %p224;
	abs.f32 	%f879, %f912;
	setp.gt.f32 	%p225, %f879, 0f4B800000;
	add.f32 	%f880, %f878, 0f3F800000;
	selp.f32 	%f881, %f880, %f875, %p225;
	mov.b32 	%r415, %f881;
	mov.b32 	%r414, %f129;
	// begin inline asm
	cvt.rn.f16x2.f32 %r413, %r415, %r414;
	// end inline asm
	mov.b32 	%r421, %f878;
	xor.b32  	%r418, %r421, -2147483648;
	mov.b32 	%r420, %f128;
	xor.b32  	%r417, %r420, -2147483648;
	// begin inline asm
	cvt.rn.f16x2.f32 %r416, %r418, %r417;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r419, %r421, %r420;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r422, %r415, %r414;
	// end inline asm
	shl.b32 	%r434, %r4, 7;
	shl.b32 	%r435, %r1, 4;
	and.b32  	%r436, %r435, 112;
	and.b32  	%r437, %r434, 384;
	and.b32  	%r438, %r434, 512;
	or.b32  	%r439, %r114, %r2;
	or.b32  	%r440, %r439, %r112;
	shl.b32 	%r441, %r440, 14;
	or.b32  	%r442, %r436, %r437;
	or.b32  	%r443, %r442, %r438;
	or.b32  	%r444, %r443, %r441;
	cvt.u64.u32 	%rd85, %r444;
	add.s64 	%rd86, %rd85, %rd2;
	add.s64 	%rd5, %rd86, -4;
	and.b32  	%r79, %r1, 8;
	shr.u32 	%r445, %r2, 3;
	mul.lo.s32 	%r446, %r122, 65;
	bfe.u32 	%r447, %r2, 2, 1;
	or.b32  	%r448, %r435, %r79;
	shr.u32 	%r449, %r448, 2;
	and.b32  	%r450, %r449, 30;
	shr.u32 	%r451, %r2, 1;
	bfe.u32 	%r452, %r2, 1, 1;
	and.b32  	%r453, %r2, 1;
	mad.lo.s32 	%r454, %r445, 130, %r446;
	mad.lo.s32 	%r455, %r453, 1040, %r454;
	mad.lo.s32 	%r456, %r447, 260, %r455;
	mad.lo.s32 	%r457, %r452, 520, %r456;
	add.s32 	%r458, %r457, %r450;
	mul.wide.u32 	%rd87, %r458, 4;
	mov.u64 	%rd88, shmem;
	add.s64 	%rd6, %rd88, %rd87;
	add.s32 	%r459, %r458, 32;
	mul.wide.u32 	%rd89, %r459, 4;
	add.s64 	%rd7, %rd88, %rd89;
	add.s32 	%r460, %r458, 1;
	mul.wide.u32 	%rd90, %r460, 4;
	add.s64 	%rd8, %rd88, %rd90;
	add.s32 	%r461, %r458, 33;
	mul.wide.u32 	%rd91, %r461, 4;
	add.s64 	%rd9, %rd88, %rd91;
	mul.lo.s32 	%r462, %r119, 130;
	and.b32  	%r463, %r3, 32;
	mul.lo.s32 	%r464, %r118, 65;
	mul.lo.s32 	%r465, %r121, 260;
	mul.lo.s32 	%r466, %r122, 520;
	mul.lo.s32 	%r467, %r124, 1040;
	add.s32 	%r468, %r462, %r451;
	add.s32 	%r469, %r468, %r463;
	add.s32 	%r470, %r469, %r466;
	add.s32 	%r471, %r470, %r464;
	add.s32 	%r472, %r471, %r465;
	add.s32 	%r473, %r472, %r467;
	or.b32  	%r474, %r451, 8;
	add.s32 	%r475, %r463, %r462;
	add.s32 	%r476, %r475, %r474;
	add.s32 	%r477, %r476, %r466;
	add.s32 	%r478, %r477, %r464;
	add.s32 	%r479, %r478, %r465;
	add.s32 	%r480, %r479, %r467;
	or.b32  	%r481, %r451, 16;
	add.s32 	%r482, %r475, %r481;
	add.s32 	%r483, %r482, %r466;
	add.s32 	%r484, %r483, %r464;
	add.s32 	%r485, %r484, %r465;
	add.s32 	%r486, %r485, %r467;
	or.b32  	%r487, %r451, 24;
	add.s32 	%r488, %r475, %r487;
	add.s32 	%r489, %r488, %r466;
	add.s32 	%r490, %r489, %r464;
	add.s32 	%r491, %r490, %r465;
	add.s32 	%r492, %r491, %r467;
	or.b32  	%r493, %r115, %r112;
	or.b32  	%r494, %r493, %r110;
	or.b32  	%r495, %r494, %r113;
	shr.u32 	%r496, %r495, 1;
	mul.lo.s32 	%r497, %r496, 65;
	or.b32  	%r498, %r463, %r451;
	add.s32 	%r499, %r498, %r497;
	or.b32  	%r500, %r474, %r463;
	add.s32 	%r501, %r500, %r497;
	or.b32  	%r502, %r481, %r463;
	add.s32 	%r503, %r502, %r497;
	or.b32  	%r504, %r487, %r463;
	add.s32 	%r505, %r504, %r497;
	shl.b32 	%r506, %r2, 1;
	or.b32  	%r507, %r122, %r506;
	mul.lo.s32 	%r508, %r507, 65;
	add.s32 	%r509, %r450, %r508;
	mul.wide.u32 	%rd92, %r509, 4;
	add.s64 	%rd10, %rd88, %rd92;
	cvt.u64.u32 	%rd93, %r450;
	cvt.u64.u32 	%rd94, %r508;
	add.s64 	%rd95, %rd94, %rd93;
	shl.b64 	%rd96, %rd95, 2;
	add.s64 	%rd11, %rd88, %rd96;
	shl.b32 	%r510, %r2, 4;
	cvt.rn.f64.s32 	%fd6, %r510;
	mul.f64 	%fd7, %fd6, 0d3FD0000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r511}, %fd7;
	}
	and.b32  	%r512, %r511, 2147483647;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r513, %temp}, %fd7;
	}
	mov.f64 	%fd8, 0d4010000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r514}, %fd8;
	}
	and.b32  	%r515, %r514, 2147483647;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r516, %temp}, %fd8;
	}
	mov.b64 	%fd9, {%r513, %r512};
	mov.b64 	%fd10, {%r516, %r515};
	setp.gt.u32 	%p227, %r512, 2146435071;
	setp.gt.u32 	%p228, %r515, 2146435071;
	or.pred  	%p1, %p227, %p228;
	setp.eq.f64 	%p229, %fd10, 0d0000000000000000;
	setp.ltu.f64 	%p230, %fd9, %fd10;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r517}, %fd9;
	}
	shr.u32 	%r518, %r517, 20;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r519}, %fd10;
	}
	shr.u32 	%r520, %r519, 20;
	setp.lt.u32 	%p231, %r517, 1048576;
	mul.f64 	%fd11, %fd9, 0d4350000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r521}, %fd11;
	}
	shr.u32 	%r522, %r521, 20;
	add.s32 	%r523, %r518, %r522;
	add.s32 	%r524, %r523, -54;
	setp.lt.u32 	%p232, %r519, 1048576;
	mul.f64 	%fd12, %fd10, 0d4350000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r525}, %fd12;
	}
	shr.u32 	%r526, %r525, 20;
	add.s32 	%r527, %r520, %r526;
	add.s32 	%r528, %r527, -54;
	and.b32  	%r80, %r511, -2147483648;
	setp.le.f64 	%p233, %fd9, 0d7FF0000000000000;
	setp.le.f64 	%p234, %fd10, 0d7FF0000000000000;
	add.f64 	%fd13, %fd7, 0d4010000000000000;
	setp.eq.f64 	%p235, %fd9, 0d7FF0000000000000;
	selp.f64 	%fd14, 0dFFF8000000000000, %fd7, %p235;
	shl.b32 	%r529, %r7, 18;
	add.s32 	%r530, %r529, -786432;
	shl.b32 	%r531, %r4, 5;
	and.b32  	%r532, %r111, 28;
	and.b32  	%r533, %r531, 96;
	or.b32  	%r534, %r533, %r532;
	and.b32  	%r535, %r531, 128;
	shl.b32 	%r536, %r2, 2;
	or.b32  	%r537, %r536, %r123;
	shl.b32 	%r538, %r4, 3;
	and.b32  	%r539, %r538, 960;
	or.b32  	%r540, %r537, %r539;
	shl.b32 	%r541, %r540, 8;
	or.b32  	%r542, %r534, %r535;
	or.b32  	%r543, %r542, %r541;
	cvt.u64.u32 	%rd97, %r543;
	cvt.s64.s32 	%rd98, %r530;
	add.s64 	%rd99, %rd98, %rd97;
	shr.u64 	%rd100, %rd99, 35;
	add.s64 	%rd101, %rd99, %rd100;
	shr.s64 	%rd102, %rd101, 29;
	setp.lt.s64 	%p236, %rd99, 0;
	and.b64  	%rd103, %rd101, -536870912;
	setp.ne.s64 	%p237, %rd103, %rd99;
	and.pred  	%p238, %p236, %p237;
	selp.u64 	%rd104, 1, 0, %p238;
	sub.s64 	%rd105, %rd104, %rd102;
	shl.b64 	%rd106, %rd105, 29;
	add.s64 	%rd107, %rd106, %rd99;
	shl.b64 	%rd108, %rd107, 2;
	add.s64 	%rd12, %rd3, %rd108;
	or.pred  	%p2, %p229, %p230;
	selp.f64 	%fd1, 0dFFF8000000000000, %fd7, %p229;
	selp.f64 	%fd15, %fd11, %fd9, %p231;
	selp.b32 	%r544, %r524, %r518, %p231;
	selp.f64 	%fd16, %fd12, %fd10, %p232;
	selp.b32 	%r81, %r528, %r520, %p232;
	mov.b64 	%rd109, %fd15;
	mov.b64 	%rd110, %fd16;
	and.b64  	%rd111, %rd109, 4503599627370495;
	or.b64  	%rd13, %rd111, 4503599627370496;
	and.b64  	%rd112, %rd110, 4503599627370495;
	or.b64  	%rd14, %rd112, 4503599627370496;
	selp.f64 	%fd17, %fd14, %fd13, %p234;
	selp.f64 	%fd2, %fd17, %fd13, %p233;
	mul.wide.u32 	%rd15, %r505, 4;
	mul.wide.u32 	%rd16, %r503, 4;
	mul.wide.u32 	%rd17, %r501, 4;
	mul.wide.u32 	%rd18, %r499, 4;
	mul.wide.u32 	%rd19, %r492, 4;
	mul.wide.u32 	%rd20, %r486, 4;
	mul.wide.u32 	%rd21, %r480, 4;
	mul.wide.u32 	%rd22, %r473, 4;
	sub.s32 	%r545, %r544, %r81;
	add.s32 	%r82, %r545, 1;
	mov.u16 	%rs1176, 25600;
	mov.u16 	%rs1072, 21504;
	mov.u16 	%rs1184, 18432;
	mov.u16 	%rs1142, -14592;
	or.pred  	%p242, %p1, %p2;
	selp.f64 	%fd5, %fd2, %fd1, %p1;
	mov.u32 	%r7839, %r7809;
	mov.u32 	%r7834, %r7809;
	mov.u32 	%r7833, %r7809;
	mov.u32 	%r7832, %r7809;
	mov.u32 	%r7831, %r7809;
	mov.u32 	%r7830, %r7809;
	mov.u32 	%r7829, %r7809;
	mov.u32 	%r7828, %r7809;
	mov.u32 	%r7827, %r7809;
	mov.u32 	%r7826, %r7809;
	mov.u32 	%r7825, %r7809;
	mov.u32 	%r7824, %r7809;
	mov.u32 	%r7823, %r7809;
	bra.uni 	LBB0_117;
LBB0_125:                               // %L29464
                                        //   in Loop: Header=BB0_117 Depth=1
	setp.ne.s32 	%p248, %r7839, 130816;
	add.s32 	%r7839, %r7839, 256;
	add.s32 	%r7806, %r7839, %r5;
	setp.gt.s32 	%p249, %r6, %r7806;
	and.pred  	%p250, %p248, %p249;
	@%p250 bra 	LBB0_117;
	bra.uni 	LBB0_126;
LBB0_117:                               // %oksrem365
                                        // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_118 Depth 2
                                        //     Child Loop BB0_120 Depth 2
	setp.eq.s32 	%p239, %r79, 0;
	ld.global.v4.u32 	{%r563, %r564, %r565, %r566}, [%rd5+4];
	selp.b32 	%r567, %r565, %r563, %p239;
	shfl.sync.bfly.b32	%r568, %r567, 8, 31, -1;
	selp.b32 	%r547, %r563, %r568, %p239;
	selp.b32 	%r548, %r568, %r565, %p239;
	selp.b32 	%r569, %r566, %r564, %p239;
	shfl.sync.bfly.b32	%r570, %r569, 8, 31, -1;
	selp.b32 	%r555, %r564, %r570, %p239;
	selp.b32 	%r556, %r570, %r566, %p239;
	mov.u32 	%r557, 21520;
	// begin inline asm
	prmt.b32 %r546, %r547, %r548, %r557;
	// end inline asm
	mov.u32 	%r561, 30258;
	// begin inline asm
	prmt.b32 %r550, %r547, %r548, %r561;
	// end inline asm
	// begin inline asm
	prmt.b32 %r554, %r555, %r556, %r557;
	// end inline asm
	// begin inline asm
	prmt.b32 %r558, %r555, %r556, %r561;
	// end inline asm
	st.shared.u32 	[%rd6], %r546;
	st.shared.u32 	[%rd7], %r550;
	st.shared.u32 	[%rd8], %r554;
	st.shared.u32 	[%rd9], %r558;
	bar.sync 	0;
	mov.u32 	%r7822, 256;
	mov.u64 	%rd128, %rd88;
LBB0_118:                               // %L4470
                                        //   Parent Loop BB0_117 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	add.s64 	%rd114, %rd128, %rd22;
	ld.shared.u32 	%r7755, [%rd114];
	add.s64 	%rd115, %rd128, %rd21;
	ld.shared.u32 	%r7756, [%rd115];
	add.s64 	%rd116, %rd128, %rd20;
	ld.shared.u32 	%r7757, [%rd116];
	add.s64 	%rd117, %rd128, %rd19;
	ld.shared.u32 	%r7758, [%rd117];
	// begin inline asm
	mov.b32 %r576, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r587, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r575, %r7755, -2004318072;
	mov.u32 	%r574, 983055;
	// begin inline asm
	lop3.b32 %r573, %r574, %r575, %r576, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r577, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r578, %r576, %r577;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r581, %r573, %r578;
	// end inline asm
	mov.u32 	%r585, 15728880;
	// begin inline asm
	lop3.b32 %r584, %r585, %r575, %r587, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r588, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r589, %r587, %r588;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r592, %r584, %r589;
	// end inline asm
	shr.u32 	%r597, %r575, 8;
	// begin inline asm
	lop3.b32 %r595, %r574, %r597, %r576, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r599, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r600, %r576, %r599;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r603, %r595, %r600;
	// end inline asm
	// begin inline asm
	lop3.b32 %r606, %r585, %r597, %r587, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r610, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r611, %r587, %r610;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r614, %r606, %r611;
	// end inline asm
	// begin inline asm
	mov.b32 %r622, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r633, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r621, %r7756, -2004318072;
	// begin inline asm
	lop3.b32 %r619, %r574, %r621, %r622, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r623, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r624, %r622, %r623;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r627, %r619, %r624;
	// end inline asm
	// begin inline asm
	lop3.b32 %r630, %r585, %r621, %r633, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r634, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r635, %r633, %r634;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r638, %r630, %r635;
	// end inline asm
	shr.u32 	%r643, %r621, 8;
	// begin inline asm
	lop3.b32 %r641, %r574, %r643, %r622, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r645, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r646, %r622, %r645;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r649, %r641, %r646;
	// end inline asm
	// begin inline asm
	lop3.b32 %r652, %r585, %r643, %r633, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r656, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r657, %r633, %r656;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r660, %r652, %r657;
	// end inline asm
	// begin inline asm
	mov.b32 %r668, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r679, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r667, %r7757, -2004318072;
	// begin inline asm
	lop3.b32 %r665, %r574, %r667, %r668, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r669, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r670, %r668, %r669;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r673, %r665, %r670;
	// end inline asm
	// begin inline asm
	lop3.b32 %r676, %r585, %r667, %r679, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r680, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r681, %r679, %r680;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r684, %r676, %r681;
	// end inline asm
	shr.u32 	%r689, %r667, 8;
	// begin inline asm
	lop3.b32 %r687, %r574, %r689, %r668, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r691, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r692, %r668, %r691;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r695, %r687, %r692;
	// end inline asm
	// begin inline asm
	lop3.b32 %r698, %r585, %r689, %r679, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r702, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r703, %r679, %r702;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r706, %r698, %r703;
	// end inline asm
	// begin inline asm
	mov.b32 %r714, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r725, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r713, %r7758, -2004318072;
	// begin inline asm
	lop3.b32 %r711, %r574, %r713, %r714, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r715, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r716, %r714, %r715;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r719, %r711, %r716;
	// end inline asm
	// begin inline asm
	lop3.b32 %r722, %r585, %r713, %r725, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r726, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r727, %r725, %r726;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r730, %r722, %r727;
	// end inline asm
	shr.u32 	%r735, %r713, 8;
	// begin inline asm
	lop3.b32 %r733, %r574, %r735, %r714, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r737, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r738, %r714, %r737;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r741, %r733, %r738;
	// end inline asm
	// begin inline asm
	lop3.b32 %r744, %r585, %r735, %r725, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r748, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r749, %r725, %r748;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r752, %r744, %r749;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r755, %r256;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r757, %r755, %r581;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r760, %r256;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r762, %r760, %r592;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r765, %r256;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r767, %r765, %r603;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r770, %r256;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r772, %r770, %r614;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r775, %r256;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r777, %r775, %r627;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r780, %r256;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r782, %r780, %r638;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r785, %r256;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r787, %r785, %r649;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r790, %r256;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r792, %r790, %r660;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r795, %r256;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r797, %r795, %r673;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r800, %r256;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r802, %r800, %r684;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r805, %r256;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r807, %r805, %r695;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r810, %r256;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r812, %r810, %r706;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r815, %r256;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r817, %r815, %r719;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r820, %r256;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r822, %r820, %r730;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r825, %r256;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r827, %r825, %r741;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r830, %r256;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r832, %r830, %r752;
	// end inline asm
	// begin inline asm
	mov.b32 %r840, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r851, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r839, %r7823, -2004318072;
	// begin inline asm
	lop3.b32 %r837, %r574, %r839, %r840, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r841, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r842, %r840, %r841;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r845, %r837, %r842;
	// end inline asm
	// begin inline asm
	lop3.b32 %r848, %r585, %r839, %r851, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r852, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r853, %r851, %r852;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r856, %r848, %r853;
	// end inline asm
	shr.u32 	%r861, %r839, 8;
	// begin inline asm
	lop3.b32 %r859, %r574, %r861, %r840, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r863, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r864, %r840, %r863;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r867, %r859, %r864;
	// end inline asm
	// begin inline asm
	lop3.b32 %r870, %r585, %r861, %r851, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r874, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r875, %r851, %r874;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r878, %r870, %r875;
	// end inline asm
	// begin inline asm
	mov.b32 %r886, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r897, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r885, %r7824, -2004318072;
	// begin inline asm
	lop3.b32 %r883, %r574, %r885, %r886, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r887, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r888, %r886, %r887;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r891, %r883, %r888;
	// end inline asm
	// begin inline asm
	lop3.b32 %r894, %r585, %r885, %r897, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r898, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r899, %r897, %r898;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r902, %r894, %r899;
	// end inline asm
	shr.u32 	%r907, %r885, 8;
	// begin inline asm
	lop3.b32 %r905, %r574, %r907, %r886, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r909, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r910, %r886, %r909;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r913, %r905, %r910;
	// end inline asm
	// begin inline asm
	lop3.b32 %r916, %r585, %r907, %r897, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r920, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r921, %r897, %r920;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r924, %r916, %r921;
	// end inline asm
	// begin inline asm
	mov.b32 %r932, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r943, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r931, %r7825, -2004318072;
	// begin inline asm
	lop3.b32 %r929, %r574, %r931, %r932, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r933, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r934, %r932, %r933;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r937, %r929, %r934;
	// end inline asm
	// begin inline asm
	lop3.b32 %r940, %r585, %r931, %r943, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r944, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r945, %r943, %r944;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r948, %r940, %r945;
	// end inline asm
	shr.u32 	%r953, %r931, 8;
	// begin inline asm
	lop3.b32 %r951, %r574, %r953, %r932, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r955, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r956, %r932, %r955;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r959, %r951, %r956;
	// end inline asm
	// begin inline asm
	lop3.b32 %r962, %r585, %r953, %r943, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r966, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r967, %r943, %r966;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r970, %r962, %r967;
	// end inline asm
	// begin inline asm
	mov.b32 %r978, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r989, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r977, %r7826, -2004318072;
	// begin inline asm
	lop3.b32 %r975, %r574, %r977, %r978, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r979, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r980, %r978, %r979;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r983, %r975, %r980;
	// end inline asm
	// begin inline asm
	lop3.b32 %r986, %r585, %r977, %r989, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r990, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r991, %r989, %r990;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r994, %r986, %r991;
	// end inline asm
	shr.u32 	%r999, %r977, 8;
	// begin inline asm
	lop3.b32 %r997, %r574, %r999, %r978, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1001, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1002, %r978, %r1001;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1005, %r997, %r1002;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1008, %r585, %r999, %r989, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1012, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1013, %r989, %r1012;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1016, %r1008, %r1013;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1019, %r202, %r845, %r757;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1023, %r202, %r856, %r762;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1027, %r202, %r867, %r767;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1031, %r202, %r878, %r772;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1035, %r202, %r891, %r777;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1039, %r202, %r902, %r782;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1043, %r202, %r913, %r787;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1047, %r202, %r924, %r792;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1051, %r202, %r937, %r797;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1055, %r202, %r948, %r802;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1059, %r202, %r959, %r807;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1063, %r202, %r970, %r812;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1067, %r202, %r983, %r817;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1071, %r202, %r994, %r822;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1075, %r202, %r1005, %r827;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1079, %r202, %r1016, %r832;
	// end inline asm
	// begin inline asm
	mov.b32 %r1088, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1099, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1087, %r7827, -2004318072;
	// begin inline asm
	lop3.b32 %r1085, %r574, %r1087, %r1088, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1089, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1090, %r1088, %r1089;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1093, %r1085, %r1090;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1096, %r585, %r1087, %r1099, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1100, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1101, %r1099, %r1100;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1104, %r1096, %r1101;
	// end inline asm
	shr.u32 	%r1109, %r1087, 8;
	// begin inline asm
	lop3.b32 %r1107, %r574, %r1109, %r1088, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1111, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1112, %r1088, %r1111;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1115, %r1107, %r1112;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1118, %r585, %r1109, %r1099, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1122, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1123, %r1099, %r1122;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1126, %r1118, %r1123;
	// end inline asm
	// begin inline asm
	mov.b32 %r1134, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1145, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1133, %r7828, -2004318072;
	// begin inline asm
	lop3.b32 %r1131, %r574, %r1133, %r1134, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1135, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1136, %r1134, %r1135;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1139, %r1131, %r1136;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1142, %r585, %r1133, %r1145, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1146, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1147, %r1145, %r1146;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1150, %r1142, %r1147;
	// end inline asm
	shr.u32 	%r1155, %r1133, 8;
	// begin inline asm
	lop3.b32 %r1153, %r574, %r1155, %r1134, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1157, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1158, %r1134, %r1157;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1161, %r1153, %r1158;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1164, %r585, %r1155, %r1145, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1168, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1169, %r1145, %r1168;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1172, %r1164, %r1169;
	// end inline asm
	// begin inline asm
	mov.b32 %r1180, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1191, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1179, %r7829, -2004318072;
	// begin inline asm
	lop3.b32 %r1177, %r574, %r1179, %r1180, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1181, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1182, %r1180, %r1181;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1185, %r1177, %r1182;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1188, %r585, %r1179, %r1191, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1192, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1193, %r1191, %r1192;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1196, %r1188, %r1193;
	// end inline asm
	shr.u32 	%r1201, %r1179, 8;
	// begin inline asm
	lop3.b32 %r1199, %r574, %r1201, %r1180, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1203, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1204, %r1180, %r1203;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1207, %r1199, %r1204;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1210, %r585, %r1201, %r1191, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1214, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1215, %r1191, %r1214;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1218, %r1210, %r1215;
	// end inline asm
	// begin inline asm
	mov.b32 %r1226, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1237, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1225, %r7830, -2004318072;
	// begin inline asm
	lop3.b32 %r1223, %r574, %r1225, %r1226, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1227, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1228, %r1226, %r1227;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1231, %r1223, %r1228;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1234, %r585, %r1225, %r1237, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1238, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1239, %r1237, %r1238;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1242, %r1234, %r1239;
	// end inline asm
	shr.u32 	%r1247, %r1225, 8;
	// begin inline asm
	lop3.b32 %r1245, %r574, %r1247, %r1226, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1249, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1250, %r1226, %r1249;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1253, %r1245, %r1250;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1256, %r585, %r1247, %r1237, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1260, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1261, %r1237, %r1260;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1264, %r1256, %r1261;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1267, %r220;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1269, %r1267, %r1093, %r1019;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1273, %r220;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1275, %r1273, %r1104, %r1023;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1279, %r220;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1281, %r1279, %r1115, %r1027;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1285, %r220;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1287, %r1285, %r1126, %r1031;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1291, %r220;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1293, %r1291, %r1139, %r1035;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1297, %r220;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1299, %r1297, %r1150, %r1039;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1303, %r220;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1305, %r1303, %r1161, %r1043;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1309, %r220;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1311, %r1309, %r1172, %r1047;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1315, %r220;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1317, %r1315, %r1185, %r1051;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1321, %r220;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1323, %r1321, %r1196, %r1055;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1327, %r220;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1329, %r1327, %r1207, %r1059;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1333, %r220;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1335, %r1333, %r1218, %r1063;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1339, %r220;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1341, %r1339, %r1231, %r1067;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1345, %r220;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1347, %r1345, %r1242, %r1071;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1351, %r220;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1353, %r1351, %r1253, %r1075;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1357, %r220;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1359, %r1357, %r1264, %r1079;
	// end inline asm
	// begin inline asm
	mov.b32 %r1368, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1379, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1367, %r7831, -2004318072;
	// begin inline asm
	lop3.b32 %r1365, %r574, %r1367, %r1368, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1369, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1370, %r1368, %r1369;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1373, %r1365, %r1370;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1376, %r585, %r1367, %r1379, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1380, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1381, %r1379, %r1380;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1384, %r1376, %r1381;
	// end inline asm
	shr.u32 	%r1389, %r1367, 8;
	// begin inline asm
	lop3.b32 %r1387, %r574, %r1389, %r1368, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1391, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1392, %r1368, %r1391;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1395, %r1387, %r1392;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1398, %r585, %r1389, %r1379, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1402, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1403, %r1379, %r1402;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1406, %r1398, %r1403;
	// end inline asm
	// begin inline asm
	mov.b32 %r1414, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1425, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1413, %r7832, -2004318072;
	// begin inline asm
	lop3.b32 %r1411, %r574, %r1413, %r1414, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1415, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1416, %r1414, %r1415;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1419, %r1411, %r1416;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1422, %r585, %r1413, %r1425, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1426, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1427, %r1425, %r1426;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1430, %r1422, %r1427;
	// end inline asm
	shr.u32 	%r1435, %r1413, 8;
	// begin inline asm
	lop3.b32 %r1433, %r574, %r1435, %r1414, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1437, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1438, %r1414, %r1437;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1441, %r1433, %r1438;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1444, %r585, %r1435, %r1425, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1448, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1449, %r1425, %r1448;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1452, %r1444, %r1449;
	// end inline asm
	// begin inline asm
	mov.b32 %r1460, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1471, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1459, %r7833, -2004318072;
	// begin inline asm
	lop3.b32 %r1457, %r574, %r1459, %r1460, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1461, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1462, %r1460, %r1461;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1465, %r1457, %r1462;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1468, %r585, %r1459, %r1471, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1472, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1473, %r1471, %r1472;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1476, %r1468, %r1473;
	// end inline asm
	shr.u32 	%r1481, %r1459, 8;
	// begin inline asm
	lop3.b32 %r1479, %r574, %r1481, %r1460, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1483, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1484, %r1460, %r1483;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1487, %r1479, %r1484;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1490, %r585, %r1481, %r1471, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1494, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1495, %r1471, %r1494;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1498, %r1490, %r1495;
	// end inline asm
	// begin inline asm
	mov.b32 %r1506, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1517, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1505, %r7834, -2004318072;
	// begin inline asm
	lop3.b32 %r1503, %r574, %r1505, %r1506, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1507, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1508, %r1506, %r1507;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1511, %r1503, %r1508;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1514, %r585, %r1505, %r1517, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1518, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1519, %r1517, %r1518;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1522, %r1514, %r1519;
	// end inline asm
	shr.u32 	%r1527, %r1505, 8;
	// begin inline asm
	lop3.b32 %r1525, %r574, %r1527, %r1506, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1529, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1530, %r1506, %r1529;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1533, %r1525, %r1530;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1536, %r585, %r1527, %r1517, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1540, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1541, %r1517, %r1540;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1544, %r1536, %r1541;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1618, %r238, %r1373, %r1269;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1615, %r238, %r1384, %r1275;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1627, %r238, %r1395, %r1281;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1624, %r238, %r1406, %r1287;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1636, %r238, %r1419, %r1293;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1633, %r238, %r1430, %r1299;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1645, %r238, %r1441, %r1305;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1642, %r238, %r1452, %r1311;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1654, %r238, %r1465, %r1317;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1651, %r238, %r1476, %r1323;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1663, %r238, %r1487, %r1329;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1660, %r238, %r1498, %r1335;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1672, %r238, %r1511, %r1341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1669, %r238, %r1522, %r1347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1681, %r238, %r1533, %r1353;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1678, %r238, %r1544, %r1359;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1611, %r287;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1613, %r1611, %r1615;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1616, %r284, %r1618, %r1613;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1620, %r287;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1622, %r1620, %r1624;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1625, %r284, %r1627, %r1622;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1629, %r287;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1631, %r1629, %r1633;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1634, %r284, %r1636, %r1631;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1638, %r287;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1640, %r1638, %r1642;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1643, %r284, %r1645, %r1640;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1647, %r287;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1649, %r1647, %r1651;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1652, %r284, %r1654, %r1649;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1656, %r287;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1658, %r1656, %r1660;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1661, %r284, %r1663, %r1658;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1665, %r287;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1667, %r1665, %r1669;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1670, %r284, %r1672, %r1667;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1674, %r287;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1676, %r1674, %r1678;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1679, %r284, %r1681, %r1676;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1683, %r287, %r1618;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1686, %r284, %r1615, %r1683;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1690, %r287, %r1627;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1693, %r284, %r1624, %r1690;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1697, %r287, %r1636;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1700, %r284, %r1633, %r1697;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1704, %r287, %r1645;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1707, %r284, %r1642, %r1704;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1711, %r287, %r1654;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1714, %r284, %r1651, %r1711;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1718, %r287, %r1663;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1721, %r284, %r1660, %r1718;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1725, %r287, %r1672;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1728, %r284, %r1669, %r1725;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1732, %r287, %r1681;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1735, %r284, %r1678, %r1732;
	// end inline asm
	mov.u32 	%r1747, 0;
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1826, %r1823}, {%r326, %r332, %r329, %r335}, {%r1616, %r1686}, {%r1747, %r1747};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1835, %r1832}, {%r326, %r332, %r329, %r335}, {%r1625, %r1693}, {%r1747, %r1747};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1844, %r1841}, {%r326, %r332, %r329, %r335}, {%r1634, %r1700}, {%r1747, %r1747};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1853, %r1850}, {%r326, %r332, %r329, %r335}, {%r1643, %r1707}, {%r1747, %r1747};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1862, %r1859}, {%r326, %r332, %r329, %r335}, {%r1652, %r1714}, {%r1747, %r1747};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1871, %r1868}, {%r326, %r332, %r329, %r335}, {%r1661, %r1721}, {%r1747, %r1747};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1880, %r1877}, {%r326, %r332, %r329, %r335}, {%r1670, %r1728}, {%r1747, %r1747};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1889, %r1886}, {%r326, %r332, %r329, %r335}, {%r1679, %r1735}, {%r1747, %r1747};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1819, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1821, %r1819, %r1823;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1824, %r370, %r1826, %r1821;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1828, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1830, %r1828, %r1832;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1833, %r370, %r1835, %r1830;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1837, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1839, %r1837, %r1841;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1842, %r370, %r1844, %r1839;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1846, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1848, %r1846, %r1850;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1851, %r370, %r1853, %r1848;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1855, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1857, %r1855, %r1859;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1860, %r370, %r1862, %r1857;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1864, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1866, %r1864, %r1868;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1869, %r370, %r1871, %r1866;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1873, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1875, %r1873, %r1877;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1878, %r370, %r1880, %r1875;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1882, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1884, %r1882, %r1886;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1887, %r370, %r1889, %r1884;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1891, %r373, %r1826;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1894, %r370, %r1823, %r1891;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1898, %r373, %r1835;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1901, %r370, %r1832, %r1898;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1905, %r373, %r1844;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1908, %r370, %r1841, %r1905;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1912, %r373, %r1853;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1915, %r370, %r1850, %r1912;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1919, %r373, %r1862;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1922, %r370, %r1859, %r1919;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1926, %r373, %r1871;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1929, %r370, %r1868, %r1926;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1933, %r373, %r1880;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1936, %r370, %r1877, %r1933;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1940, %r373, %r1889;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1943, %r370, %r1886, %r1940;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1947, %r1948}, {%r413, %r419, %r416, %r422}, {%r1824, %r1894}, {%r1747, %r1747};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1957, %r1958}, {%r413, %r419, %r416, %r422}, {%r1833, %r1901}, {%r1747, %r1747};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1967, %r1968}, {%r413, %r419, %r416, %r422}, {%r1842, %r1908}, {%r1747, %r1747};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1977, %r1978}, {%r413, %r419, %r416, %r422}, {%r1851, %r1915}, {%r1747, %r1747};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1987, %r1988}, {%r413, %r419, %r416, %r422}, {%r1860, %r1922}, {%r1747, %r1747};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1997, %r1998}, {%r413, %r419, %r416, %r422}, {%r1869, %r1929}, {%r1747, %r1747};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2007, %r2008}, {%r413, %r419, %r416, %r422}, {%r1878, %r1936}, {%r1747, %r1747};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2017, %r2018}, {%r413, %r419, %r416, %r422}, {%r1887, %r1943}, {%r1747, %r1747};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2027, %r116, %r1947;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2030, %r116, %r1948;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2033, %r116, %r1957;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2036, %r116, %r1958;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2039, %r116, %r1967;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2042, %r116, %r1968;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2045, %r116, %r1977;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2048, %r116, %r1978;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2051, %r116, %r1987;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2054, %r116, %r1988;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2057, %r116, %r1997;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2060, %r116, %r1998;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2063, %r116, %r2007;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2066, %r116, %r2008;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2069, %r116, %r2017;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2072, %r116, %r2018;
	// end inline asm
	// begin inline asm
	mov.b32 %r2075, {%rs1142, %rs1142};
	// end inline asm
	mov.u16 	%rs195, 18176;
	// begin inline asm
	mov.b32 %r2076, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2077, %r2027, %r2075;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2080, %r2077, %r2076;
	// end inline asm
	// begin inline asm
	mov.b32 %r2083, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2084, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2085, %r2030, %r2083;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2088, %r2085, %r2084;
	// end inline asm
	// begin inline asm
	mov.b32 %r2091, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2092, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2093, %r2033, %r2091;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2096, %r2093, %r2092;
	// end inline asm
	// begin inline asm
	mov.b32 %r2099, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2100, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2101, %r2036, %r2099;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2104, %r2101, %r2100;
	// end inline asm
	// begin inline asm
	mov.b32 %r2107, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2108, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2109, %r2039, %r2107;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2112, %r2109, %r2108;
	// end inline asm
	// begin inline asm
	mov.b32 %r2115, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2116, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2117, %r2042, %r2115;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2120, %r2117, %r2116;
	// end inline asm
	// begin inline asm
	mov.b32 %r2123, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2124, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2125, %r2045, %r2123;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2128, %r2125, %r2124;
	// end inline asm
	// begin inline asm
	mov.b32 %r2131, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2132, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2133, %r2048, %r2131;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2136, %r2133, %r2132;
	// end inline asm
	// begin inline asm
	mov.b32 %r2139, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2140, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2141, %r2051, %r2139;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2144, %r2141, %r2140;
	// end inline asm
	// begin inline asm
	mov.b32 %r2147, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2148, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2149, %r2054, %r2147;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2152, %r2149, %r2148;
	// end inline asm
	// begin inline asm
	mov.b32 %r2155, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2156, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2157, %r2057, %r2155;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2160, %r2157, %r2156;
	// end inline asm
	// begin inline asm
	mov.b32 %r2163, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2164, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2165, %r2060, %r2163;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2168, %r2165, %r2164;
	// end inline asm
	// begin inline asm
	mov.b32 %r2171, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2172, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2173, %r2063, %r2171;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2176, %r2173, %r2172;
	// end inline asm
	// begin inline asm
	mov.b32 %r2179, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2180, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2181, %r2066, %r2179;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2184, %r2181, %r2180;
	// end inline asm
	// begin inline asm
	mov.b32 %r2187, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2188, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2189, %r2069, %r2187;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2192, %r2189, %r2188;
	// end inline asm
	// begin inline asm
	mov.b32 %r2195, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2196, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2197, %r2072, %r2195;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2200, %r2197, %r2196;
	// end inline asm
	// begin inline asm
	mov.b32 %r2206, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2204, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2205, %r2206, %r2204;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2208, %r2080, %r2205;
	// end inline asm
	// begin inline asm
	mov.b32 %r2211, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2212, %r2206, %r2211;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2215, %r2088, %r2212;
	// end inline asm
	// begin inline asm
	mov.b32 %r2218, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2219, %r2206, %r2218;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2222, %r2096, %r2219;
	// end inline asm
	// begin inline asm
	mov.b32 %r2225, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2226, %r2206, %r2225;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2229, %r2104, %r2226;
	// end inline asm
	mov.u32 	%r2235, 25152;
	// begin inline asm
	prmt.b32 %r2232, %r2208, %r2222, %r2235;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2236, %r2215, %r2229, %r2235;
	// end inline asm
	shl.b32 	%r2243, %r2236, 4;
	mov.u32 	%r2241, 252645135;
	// begin inline asm
	lop3.b32 %r2240, %r2241, %r2232, %r2243, 202;
	// end inline asm
	xor.b32  	%r7759, %r2240, -2004318072;
	// begin inline asm
	mov.b32 %r2247, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2245, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2246, %r2247, %r2245;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2249, %r2112, %r2246;
	// end inline asm
	// begin inline asm
	mov.b32 %r2252, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2253, %r2247, %r2252;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2256, %r2120, %r2253;
	// end inline asm
	// begin inline asm
	mov.b32 %r2259, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2260, %r2247, %r2259;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2263, %r2128, %r2260;
	// end inline asm
	// begin inline asm
	mov.b32 %r2266, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2267, %r2247, %r2266;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2270, %r2136, %r2267;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2273, %r2249, %r2263, %r2235;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2277, %r2256, %r2270, %r2235;
	// end inline asm
	shl.b32 	%r2284, %r2277, 4;
	// begin inline asm
	lop3.b32 %r2281, %r2241, %r2273, %r2284, 202;
	// end inline asm
	xor.b32  	%r7760, %r2281, -2004318072;
	// begin inline asm
	mov.b32 %r2288, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2286, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2287, %r2288, %r2286;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2290, %r2144, %r2287;
	// end inline asm
	// begin inline asm
	mov.b32 %r2293, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2294, %r2288, %r2293;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2297, %r2152, %r2294;
	// end inline asm
	// begin inline asm
	mov.b32 %r2300, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2301, %r2288, %r2300;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2304, %r2160, %r2301;
	// end inline asm
	// begin inline asm
	mov.b32 %r2307, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2308, %r2288, %r2307;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2311, %r2168, %r2308;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2314, %r2290, %r2304, %r2235;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2318, %r2297, %r2311, %r2235;
	// end inline asm
	shl.b32 	%r2325, %r2318, 4;
	// begin inline asm
	lop3.b32 %r2322, %r2241, %r2314, %r2325, 202;
	// end inline asm
	xor.b32  	%r7761, %r2322, -2004318072;
	// begin inline asm
	mov.b32 %r2329, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2327, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2328, %r2329, %r2327;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2331, %r2176, %r2328;
	// end inline asm
	// begin inline asm
	mov.b32 %r2334, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2335, %r2329, %r2334;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2338, %r2184, %r2335;
	// end inline asm
	// begin inline asm
	mov.b32 %r2341, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2342, %r2329, %r2341;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2345, %r2192, %r2342;
	// end inline asm
	// begin inline asm
	mov.b32 %r2348, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2349, %r2329, %r2348;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2352, %r2200, %r2349;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2355, %r2331, %r2345, %r2235;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2359, %r2338, %r2352, %r2235;
	// end inline asm
	shl.b32 	%r2366, %r2359, 4;
	// begin inline asm
	lop3.b32 %r2363, %r2241, %r2355, %r2366, 202;
	// end inline asm
	xor.b32  	%r7762, %r2363, -2004318072;
	add.s64 	%rd118, %rd128, %rd18;
	st.shared.u32 	[%rd118], %r7759;
	add.s64 	%rd119, %rd128, %rd17;
	st.shared.u32 	[%rd119], %r7760;
	add.s64 	%rd120, %rd128, %rd16;
	st.shared.u32 	[%rd120], %r7761;
	add.s64 	%rd121, %rd128, %rd15;
	st.shared.u32 	[%rd121], %r7762;
	ld.shared.u32 	%r7823, [%rd114];
	ld.shared.u32 	%r7824, [%rd115];
	ld.shared.u32 	%r7825, [%rd116];
	ld.shared.u32 	%r7826, [%rd117];
	// begin inline asm
	mov.b32 %r2372, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2383, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r2371, %r7823, -2004318072;
	// begin inline asm
	lop3.b32 %r2369, %r574, %r2371, %r2372, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2373, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2374, %r2372, %r2373;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2377, %r2369, %r2374;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2380, %r585, %r2371, %r2383, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2384, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2385, %r2383, %r2384;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2388, %r2380, %r2385;
	// end inline asm
	shr.u32 	%r2393, %r2371, 8;
	// begin inline asm
	lop3.b32 %r2391, %r574, %r2393, %r2372, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2395, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2396, %r2372, %r2395;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2399, %r2391, %r2396;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2402, %r585, %r2393, %r2383, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2406, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2407, %r2383, %r2406;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2410, %r2402, %r2407;
	// end inline asm
	// begin inline asm
	mov.b32 %r2418, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2429, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r2417, %r7824, -2004318072;
	// begin inline asm
	lop3.b32 %r2415, %r574, %r2417, %r2418, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2419, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2420, %r2418, %r2419;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2423, %r2415, %r2420;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2426, %r585, %r2417, %r2429, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2430, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2431, %r2429, %r2430;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2434, %r2426, %r2431;
	// end inline asm
	shr.u32 	%r2439, %r2417, 8;
	// begin inline asm
	lop3.b32 %r2437, %r574, %r2439, %r2418, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2441, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2442, %r2418, %r2441;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2445, %r2437, %r2442;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2448, %r585, %r2439, %r2429, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2452, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2453, %r2429, %r2452;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2456, %r2448, %r2453;
	// end inline asm
	// begin inline asm
	mov.b32 %r2464, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2475, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r2463, %r7825, -2004318072;
	// begin inline asm
	lop3.b32 %r2461, %r574, %r2463, %r2464, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2465, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2466, %r2464, %r2465;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2469, %r2461, %r2466;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2472, %r585, %r2463, %r2475, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2476, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2477, %r2475, %r2476;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2480, %r2472, %r2477;
	// end inline asm
	shr.u32 	%r2485, %r2463, 8;
	// begin inline asm
	lop3.b32 %r2483, %r574, %r2485, %r2464, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2487, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2488, %r2464, %r2487;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2491, %r2483, %r2488;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2494, %r585, %r2485, %r2475, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2498, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2499, %r2475, %r2498;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2502, %r2494, %r2499;
	// end inline asm
	// begin inline asm
	mov.b32 %r2510, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2521, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r2509, %r7826, -2004318072;
	// begin inline asm
	lop3.b32 %r2507, %r574, %r2509, %r2510, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2511, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2512, %r2510, %r2511;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2515, %r2507, %r2512;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2518, %r585, %r2509, %r2521, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2522, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2523, %r2521, %r2522;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2526, %r2518, %r2523;
	// end inline asm
	shr.u32 	%r2531, %r2509, 8;
	// begin inline asm
	lop3.b32 %r2529, %r574, %r2531, %r2510, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2533, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2534, %r2510, %r2533;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2537, %r2529, %r2534;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2540, %r585, %r2531, %r2521, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2544, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2545, %r2521, %r2544;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2548, %r2540, %r2545;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2551, %r256;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2553, %r2551, %r2377;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2556, %r256;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2558, %r2556, %r2388;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2561, %r256;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2563, %r2561, %r2399;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2566, %r256;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2568, %r2566, %r2410;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2571, %r256;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2573, %r2571, %r2423;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2576, %r256;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2578, %r2576, %r2434;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2581, %r256;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2583, %r2581, %r2445;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2586, %r256;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2588, %r2586, %r2456;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2591, %r256;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2593, %r2591, %r2469;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2596, %r256;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2598, %r2596, %r2480;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2601, %r256;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2603, %r2601, %r2491;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2606, %r256;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2608, %r2606, %r2502;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2611, %r256;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2613, %r2611, %r2515;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2616, %r256;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2618, %r2616, %r2526;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2621, %r256;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2623, %r2621, %r2537;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2626, %r256;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2628, %r2626, %r2548;
	// end inline asm
	// begin inline asm
	mov.b32 %r2636, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2647, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2633, %r574, %r1087, %r2636, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2637, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2638, %r2636, %r2637;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2641, %r2633, %r2638;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2644, %r585, %r1087, %r2647, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2648, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2649, %r2647, %r2648;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2652, %r2644, %r2649;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2655, %r574, %r1109, %r2636, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2659, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2660, %r2636, %r2659;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2663, %r2655, %r2660;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2666, %r585, %r1109, %r2647, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2670, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2671, %r2647, %r2670;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2674, %r2666, %r2671;
	// end inline asm
	// begin inline asm
	mov.b32 %r2682, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2693, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2679, %r574, %r1133, %r2682, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2683, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2684, %r2682, %r2683;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2687, %r2679, %r2684;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2690, %r585, %r1133, %r2693, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2694, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2695, %r2693, %r2694;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2698, %r2690, %r2695;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2701, %r574, %r1155, %r2682, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2705, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2706, %r2682, %r2705;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2709, %r2701, %r2706;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2712, %r585, %r1155, %r2693, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2716, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2717, %r2693, %r2716;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2720, %r2712, %r2717;
	// end inline asm
	// begin inline asm
	mov.b32 %r2728, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2739, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2725, %r574, %r1179, %r2728, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2729, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2730, %r2728, %r2729;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2733, %r2725, %r2730;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2736, %r585, %r1179, %r2739, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2740, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2741, %r2739, %r2740;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2744, %r2736, %r2741;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2747, %r574, %r1201, %r2728, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2751, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2752, %r2728, %r2751;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2755, %r2747, %r2752;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2758, %r585, %r1201, %r2739, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2762, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2763, %r2739, %r2762;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2766, %r2758, %r2763;
	// end inline asm
	// begin inline asm
	mov.b32 %r2774, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2785, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2771, %r574, %r1225, %r2774, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2775, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2776, %r2774, %r2775;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2779, %r2771, %r2776;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2782, %r585, %r1225, %r2785, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2786, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2787, %r2785, %r2786;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2790, %r2782, %r2787;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2793, %r574, %r1247, %r2774, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2797, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2798, %r2774, %r2797;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2801, %r2793, %r2798;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2804, %r585, %r1247, %r2785, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2808, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2809, %r2785, %r2808;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2812, %r2804, %r2809;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2815, %r202, %r2641, %r2553;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2819, %r202, %r2652, %r2558;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2823, %r202, %r2663, %r2563;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2827, %r202, %r2674, %r2568;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2831, %r202, %r2687, %r2573;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2835, %r202, %r2698, %r2578;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2839, %r202, %r2709, %r2583;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2843, %r202, %r2720, %r2588;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2847, %r202, %r2733, %r2593;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2851, %r202, %r2744, %r2598;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2855, %r202, %r2755, %r2603;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2859, %r202, %r2766, %r2608;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2863, %r202, %r2779, %r2613;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2867, %r202, %r2790, %r2618;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2871, %r202, %r2801, %r2623;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2875, %r202, %r2812, %r2628;
	// end inline asm
	// begin inline asm
	mov.b32 %r2884, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2895, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2881, %r574, %r1367, %r2884, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2885, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2886, %r2884, %r2885;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2889, %r2881, %r2886;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2892, %r585, %r1367, %r2895, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2896, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2897, %r2895, %r2896;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2900, %r2892, %r2897;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2903, %r574, %r1389, %r2884, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2907, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2908, %r2884, %r2907;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2911, %r2903, %r2908;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2914, %r585, %r1389, %r2895, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2918, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2919, %r2895, %r2918;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2922, %r2914, %r2919;
	// end inline asm
	// begin inline asm
	mov.b32 %r2930, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2941, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2927, %r574, %r1413, %r2930, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2931, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2932, %r2930, %r2931;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2935, %r2927, %r2932;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2938, %r585, %r1413, %r2941, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2942, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2943, %r2941, %r2942;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2946, %r2938, %r2943;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2949, %r574, %r1435, %r2930, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2953, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2954, %r2930, %r2953;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2957, %r2949, %r2954;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2960, %r585, %r1435, %r2941, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2964, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2965, %r2941, %r2964;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2968, %r2960, %r2965;
	// end inline asm
	// begin inline asm
	mov.b32 %r2976, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2987, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2973, %r574, %r1459, %r2976, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2977, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2978, %r2976, %r2977;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2981, %r2973, %r2978;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2984, %r585, %r1459, %r2987, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2988, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2989, %r2987, %r2988;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2992, %r2984, %r2989;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2995, %r574, %r1481, %r2976, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2999, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3000, %r2976, %r2999;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3003, %r2995, %r3000;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3006, %r585, %r1481, %r2987, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3010, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3011, %r2987, %r3010;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3014, %r3006, %r3011;
	// end inline asm
	// begin inline asm
	mov.b32 %r3022, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r3033, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3019, %r574, %r1505, %r3022, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3023, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3024, %r3022, %r3023;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3027, %r3019, %r3024;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3030, %r585, %r1505, %r3033, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3034, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3035, %r3033, %r3034;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3038, %r3030, %r3035;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3041, %r574, %r1527, %r3022, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3045, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3046, %r3022, %r3045;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3049, %r3041, %r3046;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3052, %r585, %r1527, %r3033, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3056, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3057, %r3033, %r3056;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3060, %r3052, %r3057;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3063, %r220;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3065, %r3063, %r2889, %r2815;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3069, %r220;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3071, %r3069, %r2900, %r2819;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3075, %r220;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3077, %r3075, %r2911, %r2823;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3081, %r220;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3083, %r3081, %r2922, %r2827;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3087, %r220;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3089, %r3087, %r2935, %r2831;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3093, %r220;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3095, %r3093, %r2946, %r2835;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3099, %r220;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3101, %r3099, %r2957, %r2839;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3105, %r220;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3107, %r3105, %r2968, %r2843;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3111, %r220;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3113, %r3111, %r2981, %r2847;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3117, %r220;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3119, %r3117, %r2992, %r2851;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3123, %r220;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3125, %r3123, %r3003, %r2855;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3129, %r220;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3131, %r3129, %r3014, %r2859;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3135, %r220;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3137, %r3135, %r3027, %r2863;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3141, %r220;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3143, %r3141, %r3038, %r2867;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3147, %r220;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3149, %r3147, %r3049, %r2871;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3153, %r220;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3155, %r3153, %r3060, %r2875;
	// end inline asm
	// begin inline asm
	mov.b32 %r3164, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r3175, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3161, %r574, %r575, %r3164, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3165, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3166, %r3164, %r3165;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3169, %r3161, %r3166;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3172, %r585, %r575, %r3175, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3176, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3177, %r3175, %r3176;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3180, %r3172, %r3177;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3183, %r574, %r597, %r3164, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3187, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3188, %r3164, %r3187;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3191, %r3183, %r3188;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3194, %r585, %r597, %r3175, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3198, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3199, %r3175, %r3198;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3202, %r3194, %r3199;
	// end inline asm
	// begin inline asm
	mov.b32 %r3210, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r3221, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3207, %r574, %r621, %r3210, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3211, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3212, %r3210, %r3211;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3215, %r3207, %r3212;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3218, %r585, %r621, %r3221, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3222, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3223, %r3221, %r3222;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3226, %r3218, %r3223;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3229, %r574, %r643, %r3210, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3233, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3234, %r3210, %r3233;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3237, %r3229, %r3234;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3240, %r585, %r643, %r3221, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3244, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3245, %r3221, %r3244;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3248, %r3240, %r3245;
	// end inline asm
	// begin inline asm
	mov.b32 %r3256, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r3267, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3253, %r574, %r667, %r3256, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3257, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3258, %r3256, %r3257;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3261, %r3253, %r3258;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3264, %r585, %r667, %r3267, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3268, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3269, %r3267, %r3268;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3272, %r3264, %r3269;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3275, %r574, %r689, %r3256, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3279, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3280, %r3256, %r3279;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3283, %r3275, %r3280;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3286, %r585, %r689, %r3267, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3290, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3291, %r3267, %r3290;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3294, %r3286, %r3291;
	// end inline asm
	// begin inline asm
	mov.b32 %r3302, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r3313, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3299, %r574, %r713, %r3302, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3303, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3304, %r3302, %r3303;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3307, %r3299, %r3304;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3310, %r585, %r713, %r3313, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3314, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3315, %r3313, %r3314;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3318, %r3310, %r3315;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3321, %r574, %r735, %r3302, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3325, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3326, %r3302, %r3325;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3329, %r3321, %r3326;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3332, %r585, %r735, %r3313, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3336, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3337, %r3313, %r3336;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3340, %r3332, %r3337;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3414, %r238, %r3169, %r3065;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3411, %r238, %r3180, %r3071;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3423, %r238, %r3191, %r3077;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3420, %r238, %r3202, %r3083;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3432, %r238, %r3215, %r3089;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3429, %r238, %r3226, %r3095;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3441, %r238, %r3237, %r3101;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3438, %r238, %r3248, %r3107;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3450, %r238, %r3261, %r3113;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3447, %r238, %r3272, %r3119;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3459, %r238, %r3283, %r3125;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3456, %r238, %r3294, %r3131;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3468, %r238, %r3307, %r3137;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3465, %r238, %r3318, %r3143;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3477, %r238, %r3329, %r3149;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3474, %r238, %r3340, %r3155;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3407, %r287;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3409, %r3407, %r3411;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3412, %r284, %r3414, %r3409;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3416, %r287;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3418, %r3416, %r3420;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3421, %r284, %r3423, %r3418;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3425, %r287;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3427, %r3425, %r3429;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3430, %r284, %r3432, %r3427;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3434, %r287;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3436, %r3434, %r3438;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3439, %r284, %r3441, %r3436;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3443, %r287;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3445, %r3443, %r3447;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3448, %r284, %r3450, %r3445;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3452, %r287;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3454, %r3452, %r3456;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3457, %r284, %r3459, %r3454;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3461, %r287;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3463, %r3461, %r3465;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3466, %r284, %r3468, %r3463;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3470, %r287;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3472, %r3470, %r3474;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3475, %r284, %r3477, %r3472;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3479, %r287, %r3414;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3482, %r284, %r3411, %r3479;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3486, %r287, %r3423;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3489, %r284, %r3420, %r3486;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3493, %r287, %r3432;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3496, %r284, %r3429, %r3493;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3500, %r287, %r3441;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3503, %r284, %r3438, %r3500;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3507, %r287, %r3450;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3510, %r284, %r3447, %r3507;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3514, %r287, %r3459;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3517, %r284, %r3456, %r3514;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3521, %r287, %r3468;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3524, %r284, %r3465, %r3521;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3528, %r287, %r3477;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3531, %r284, %r3474, %r3528;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3622, %r3619}, {%r326, %r332, %r329, %r335}, {%r3412, %r3482}, {%r1747, %r1747};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3631, %r3628}, {%r326, %r332, %r329, %r335}, {%r3421, %r3489}, {%r1747, %r1747};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3640, %r3637}, {%r326, %r332, %r329, %r335}, {%r3430, %r3496}, {%r1747, %r1747};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3649, %r3646}, {%r326, %r332, %r329, %r335}, {%r3439, %r3503}, {%r1747, %r1747};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3658, %r3655}, {%r326, %r332, %r329, %r335}, {%r3448, %r3510}, {%r1747, %r1747};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3667, %r3664}, {%r326, %r332, %r329, %r335}, {%r3457, %r3517}, {%r1747, %r1747};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3676, %r3673}, {%r326, %r332, %r329, %r335}, {%r3466, %r3524}, {%r1747, %r1747};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3685, %r3682}, {%r326, %r332, %r329, %r335}, {%r3475, %r3531}, {%r1747, %r1747};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3615, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3617, %r3615, %r3619;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3620, %r370, %r3622, %r3617;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3624, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3626, %r3624, %r3628;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3629, %r370, %r3631, %r3626;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3633, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3635, %r3633, %r3637;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3638, %r370, %r3640, %r3635;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3642, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3644, %r3642, %r3646;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3647, %r370, %r3649, %r3644;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3651, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3653, %r3651, %r3655;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3656, %r370, %r3658, %r3653;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3660, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3662, %r3660, %r3664;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3665, %r370, %r3667, %r3662;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3669, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3671, %r3669, %r3673;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3674, %r370, %r3676, %r3671;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3678, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3680, %r3678, %r3682;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3683, %r370, %r3685, %r3680;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3687, %r373, %r3622;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3690, %r370, %r3619, %r3687;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3694, %r373, %r3631;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3697, %r370, %r3628, %r3694;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3701, %r373, %r3640;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3704, %r370, %r3637, %r3701;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3708, %r373, %r3649;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3711, %r370, %r3646, %r3708;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3715, %r373, %r3658;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3718, %r370, %r3655, %r3715;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3722, %r373, %r3667;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3725, %r370, %r3664, %r3722;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3729, %r373, %r3676;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3732, %r370, %r3673, %r3729;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3736, %r373, %r3685;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3739, %r370, %r3682, %r3736;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3743, %r3744}, {%r413, %r419, %r416, %r422}, {%r3620, %r3690}, {%r1747, %r1747};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3753, %r3754}, {%r413, %r419, %r416, %r422}, {%r3629, %r3697}, {%r1747, %r1747};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3763, %r3764}, {%r413, %r419, %r416, %r422}, {%r3638, %r3704}, {%r1747, %r1747};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3773, %r3774}, {%r413, %r419, %r416, %r422}, {%r3647, %r3711}, {%r1747, %r1747};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3783, %r3784}, {%r413, %r419, %r416, %r422}, {%r3656, %r3718}, {%r1747, %r1747};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3793, %r3794}, {%r413, %r419, %r416, %r422}, {%r3665, %r3725}, {%r1747, %r1747};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3803, %r3804}, {%r413, %r419, %r416, %r422}, {%r3674, %r3732}, {%r1747, %r1747};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3813, %r3814}, {%r413, %r419, %r416, %r422}, {%r3683, %r3739}, {%r1747, %r1747};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3823, %r116, %r3743;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3826, %r116, %r3744;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3829, %r116, %r3753;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3832, %r116, %r3754;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3835, %r116, %r3763;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3838, %r116, %r3764;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3841, %r116, %r3773;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3844, %r116, %r3774;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3847, %r116, %r3783;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3850, %r116, %r3784;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3853, %r116, %r3793;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3856, %r116, %r3794;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3859, %r116, %r3803;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3862, %r116, %r3804;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3865, %r116, %r3813;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3868, %r116, %r3814;
	// end inline asm
	// begin inline asm
	mov.b32 %r3871, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3872, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3873, %r3823, %r3871;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3876, %r3873, %r3872;
	// end inline asm
	// begin inline asm
	mov.b32 %r3879, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3880, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3881, %r3826, %r3879;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3884, %r3881, %r3880;
	// end inline asm
	// begin inline asm
	mov.b32 %r3887, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3888, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3889, %r3829, %r3887;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3892, %r3889, %r3888;
	// end inline asm
	// begin inline asm
	mov.b32 %r3895, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3896, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3897, %r3832, %r3895;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3900, %r3897, %r3896;
	// end inline asm
	// begin inline asm
	mov.b32 %r3903, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3904, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3905, %r3835, %r3903;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3908, %r3905, %r3904;
	// end inline asm
	// begin inline asm
	mov.b32 %r3911, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3912, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3913, %r3838, %r3911;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3916, %r3913, %r3912;
	// end inline asm
	// begin inline asm
	mov.b32 %r3919, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3920, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3921, %r3841, %r3919;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3924, %r3921, %r3920;
	// end inline asm
	// begin inline asm
	mov.b32 %r3927, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3928, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3929, %r3844, %r3927;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3932, %r3929, %r3928;
	// end inline asm
	// begin inline asm
	mov.b32 %r3935, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3936, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3937, %r3847, %r3935;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3940, %r3937, %r3936;
	// end inline asm
	// begin inline asm
	mov.b32 %r3943, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3944, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3945, %r3850, %r3943;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3948, %r3945, %r3944;
	// end inline asm
	// begin inline asm
	mov.b32 %r3951, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3952, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3953, %r3853, %r3951;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3956, %r3953, %r3952;
	// end inline asm
	// begin inline asm
	mov.b32 %r3959, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3960, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3961, %r3856, %r3959;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3964, %r3961, %r3960;
	// end inline asm
	// begin inline asm
	mov.b32 %r3967, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3968, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3969, %r3859, %r3967;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3972, %r3969, %r3968;
	// end inline asm
	// begin inline asm
	mov.b32 %r3975, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3976, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3977, %r3862, %r3975;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3980, %r3977, %r3976;
	// end inline asm
	// begin inline asm
	mov.b32 %r3983, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3984, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3985, %r3865, %r3983;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3988, %r3985, %r3984;
	// end inline asm
	// begin inline asm
	mov.b32 %r3991, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3992, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3993, %r3868, %r3991;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3996, %r3993, %r3992;
	// end inline asm
	// begin inline asm
	mov.b32 %r4002, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4000, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4001, %r4002, %r4000;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4004, %r3876, %r4001;
	// end inline asm
	// begin inline asm
	mov.b32 %r4007, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4008, %r4002, %r4007;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4011, %r3884, %r4008;
	// end inline asm
	// begin inline asm
	mov.b32 %r4014, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4015, %r4002, %r4014;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4018, %r3892, %r4015;
	// end inline asm
	// begin inline asm
	mov.b32 %r4021, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4022, %r4002, %r4021;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4025, %r3900, %r4022;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4028, %r4004, %r4018, %r2235;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4032, %r4011, %r4025, %r2235;
	// end inline asm
	shl.b32 	%r4039, %r4032, 4;
	// begin inline asm
	lop3.b32 %r4036, %r2241, %r4028, %r4039, 202;
	// end inline asm
	xor.b32  	%r7763, %r4036, -2004318072;
	// begin inline asm
	mov.b32 %r4043, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4041, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4042, %r4043, %r4041;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4045, %r3908, %r4042;
	// end inline asm
	// begin inline asm
	mov.b32 %r4048, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4049, %r4043, %r4048;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4052, %r3916, %r4049;
	// end inline asm
	// begin inline asm
	mov.b32 %r4055, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4056, %r4043, %r4055;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4059, %r3924, %r4056;
	// end inline asm
	// begin inline asm
	mov.b32 %r4062, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4063, %r4043, %r4062;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4066, %r3932, %r4063;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4069, %r4045, %r4059, %r2235;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4073, %r4052, %r4066, %r2235;
	// end inline asm
	shl.b32 	%r4080, %r4073, 4;
	// begin inline asm
	lop3.b32 %r4077, %r2241, %r4069, %r4080, 202;
	// end inline asm
	xor.b32  	%r7764, %r4077, -2004318072;
	// begin inline asm
	mov.b32 %r4084, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4082, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4083, %r4084, %r4082;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4086, %r3940, %r4083;
	// end inline asm
	// begin inline asm
	mov.b32 %r4089, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4090, %r4084, %r4089;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4093, %r3948, %r4090;
	// end inline asm
	// begin inline asm
	mov.b32 %r4096, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4097, %r4084, %r4096;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4100, %r3956, %r4097;
	// end inline asm
	// begin inline asm
	mov.b32 %r4103, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4104, %r4084, %r4103;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4107, %r3964, %r4104;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4110, %r4086, %r4100, %r2235;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4114, %r4093, %r4107, %r2235;
	// end inline asm
	shl.b32 	%r4121, %r4114, 4;
	// begin inline asm
	lop3.b32 %r4118, %r2241, %r4110, %r4121, 202;
	// end inline asm
	xor.b32  	%r7765, %r4118, -2004318072;
	// begin inline asm
	mov.b32 %r4125, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4123, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4124, %r4125, %r4123;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4127, %r3972, %r4124;
	// end inline asm
	// begin inline asm
	mov.b32 %r4130, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4131, %r4125, %r4130;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4134, %r3980, %r4131;
	// end inline asm
	// begin inline asm
	mov.b32 %r4137, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4138, %r4125, %r4137;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4141, %r3988, %r4138;
	// end inline asm
	// begin inline asm
	mov.b32 %r4144, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4145, %r4125, %r4144;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4148, %r3996, %r4145;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4151, %r4127, %r4141, %r2235;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4155, %r4134, %r4148, %r2235;
	// end inline asm
	shl.b32 	%r4162, %r4155, 4;
	// begin inline asm
	lop3.b32 %r4159, %r2241, %r4151, %r4162, 202;
	// end inline asm
	xor.b32  	%r7766, %r4159, -2004318072;
	st.shared.u32 	[%rd118], %r7763;
	st.shared.u32 	[%rd119], %r7764;
	st.shared.u32 	[%rd120], %r7765;
	st.shared.u32 	[%rd121], %r7766;
	ld.shared.u32 	%r7827, [%rd114];
	ld.shared.u32 	%r7828, [%rd115];
	ld.shared.u32 	%r7829, [%rd116];
	ld.shared.u32 	%r7830, [%rd117];
	// begin inline asm
	mov.b32 %r4168, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4179, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r4167, %r7827, -2004318072;
	// begin inline asm
	lop3.b32 %r4165, %r574, %r4167, %r4168, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4169, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4170, %r4168, %r4169;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4173, %r4165, %r4170;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4176, %r585, %r4167, %r4179, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4180, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4181, %r4179, %r4180;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4184, %r4176, %r4181;
	// end inline asm
	shr.u32 	%r4189, %r4167, 8;
	// begin inline asm
	lop3.b32 %r4187, %r574, %r4189, %r4168, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4191, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4192, %r4168, %r4191;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4195, %r4187, %r4192;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4198, %r585, %r4189, %r4179, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4202, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4203, %r4179, %r4202;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4206, %r4198, %r4203;
	// end inline asm
	// begin inline asm
	mov.b32 %r4214, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4225, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r4213, %r7828, -2004318072;
	// begin inline asm
	lop3.b32 %r4211, %r574, %r4213, %r4214, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4215, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4216, %r4214, %r4215;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4219, %r4211, %r4216;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4222, %r585, %r4213, %r4225, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4226, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4227, %r4225, %r4226;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4230, %r4222, %r4227;
	// end inline asm
	shr.u32 	%r4235, %r4213, 8;
	// begin inline asm
	lop3.b32 %r4233, %r574, %r4235, %r4214, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4237, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4238, %r4214, %r4237;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4241, %r4233, %r4238;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4244, %r585, %r4235, %r4225, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4248, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4249, %r4225, %r4248;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4252, %r4244, %r4249;
	// end inline asm
	// begin inline asm
	mov.b32 %r4260, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4271, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r4259, %r7829, -2004318072;
	// begin inline asm
	lop3.b32 %r4257, %r574, %r4259, %r4260, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4261, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4262, %r4260, %r4261;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4265, %r4257, %r4262;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4268, %r585, %r4259, %r4271, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4272, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4273, %r4271, %r4272;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4276, %r4268, %r4273;
	// end inline asm
	shr.u32 	%r4281, %r4259, 8;
	// begin inline asm
	lop3.b32 %r4279, %r574, %r4281, %r4260, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4283, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4284, %r4260, %r4283;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4287, %r4279, %r4284;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4290, %r585, %r4281, %r4271, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4294, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4295, %r4271, %r4294;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4298, %r4290, %r4295;
	// end inline asm
	// begin inline asm
	mov.b32 %r4306, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4317, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r4305, %r7830, -2004318072;
	// begin inline asm
	lop3.b32 %r4303, %r574, %r4305, %r4306, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4307, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4308, %r4306, %r4307;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4311, %r4303, %r4308;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4314, %r585, %r4305, %r4317, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4318, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4319, %r4317, %r4318;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4322, %r4314, %r4319;
	// end inline asm
	shr.u32 	%r4327, %r4305, 8;
	// begin inline asm
	lop3.b32 %r4325, %r574, %r4327, %r4306, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4329, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4330, %r4306, %r4329;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4333, %r4325, %r4330;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4336, %r585, %r4327, %r4317, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4340, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4341, %r4317, %r4340;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4344, %r4336, %r4341;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4347, %r256;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4349, %r4347, %r4173;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4352, %r256;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4354, %r4352, %r4184;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4357, %r256;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4359, %r4357, %r4195;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4362, %r256;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4364, %r4362, %r4206;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4367, %r256;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4369, %r4367, %r4219;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4372, %r256;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4374, %r4372, %r4230;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4377, %r256;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4379, %r4377, %r4241;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4382, %r256;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4384, %r4382, %r4252;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4387, %r256;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4389, %r4387, %r4265;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4392, %r256;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4394, %r4392, %r4276;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4397, %r256;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4399, %r4397, %r4287;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4402, %r256;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4404, %r4402, %r4298;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4407, %r256;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4409, %r4407, %r4311;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4412, %r256;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4414, %r4412, %r4322;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4417, %r256;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4419, %r4417, %r4333;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4422, %r256;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4424, %r4422, %r4344;
	// end inline asm
	// begin inline asm
	mov.b32 %r4432, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4443, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4429, %r574, %r1367, %r4432, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4433, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4434, %r4432, %r4433;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4437, %r4429, %r4434;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4440, %r585, %r1367, %r4443, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4444, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4445, %r4443, %r4444;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4448, %r4440, %r4445;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4451, %r574, %r1389, %r4432, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4455, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4456, %r4432, %r4455;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4459, %r4451, %r4456;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4462, %r585, %r1389, %r4443, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4466, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4467, %r4443, %r4466;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4470, %r4462, %r4467;
	// end inline asm
	// begin inline asm
	mov.b32 %r4478, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4489, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4475, %r574, %r1413, %r4478, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4479, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4480, %r4478, %r4479;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4483, %r4475, %r4480;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4486, %r585, %r1413, %r4489, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4490, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4491, %r4489, %r4490;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4494, %r4486, %r4491;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4497, %r574, %r1435, %r4478, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4501, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4502, %r4478, %r4501;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4505, %r4497, %r4502;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4508, %r585, %r1435, %r4489, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4512, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4513, %r4489, %r4512;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4516, %r4508, %r4513;
	// end inline asm
	// begin inline asm
	mov.b32 %r4524, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4535, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4521, %r574, %r1459, %r4524, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4525, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4526, %r4524, %r4525;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4529, %r4521, %r4526;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4532, %r585, %r1459, %r4535, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4536, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4537, %r4535, %r4536;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4540, %r4532, %r4537;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4543, %r574, %r1481, %r4524, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4547, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4548, %r4524, %r4547;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4551, %r4543, %r4548;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4554, %r585, %r1481, %r4535, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4558, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4559, %r4535, %r4558;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4562, %r4554, %r4559;
	// end inline asm
	// begin inline asm
	mov.b32 %r4570, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4581, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4567, %r574, %r1505, %r4570, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4571, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4572, %r4570, %r4571;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4575, %r4567, %r4572;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4578, %r585, %r1505, %r4581, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4582, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4583, %r4581, %r4582;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4586, %r4578, %r4583;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4589, %r574, %r1527, %r4570, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4593, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4594, %r4570, %r4593;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4597, %r4589, %r4594;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4600, %r585, %r1527, %r4581, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4604, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4605, %r4581, %r4604;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4608, %r4600, %r4605;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4611, %r202, %r4437, %r4349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4615, %r202, %r4448, %r4354;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4619, %r202, %r4459, %r4359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4623, %r202, %r4470, %r4364;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4627, %r202, %r4483, %r4369;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4631, %r202, %r4494, %r4374;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4635, %r202, %r4505, %r4379;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4639, %r202, %r4516, %r4384;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4643, %r202, %r4529, %r4389;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4647, %r202, %r4540, %r4394;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4651, %r202, %r4551, %r4399;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4655, %r202, %r4562, %r4404;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4659, %r202, %r4575, %r4409;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4663, %r202, %r4586, %r4414;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4667, %r202, %r4597, %r4419;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4671, %r202, %r4608, %r4424;
	// end inline asm
	// begin inline asm
	mov.b32 %r4680, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4691, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4677, %r574, %r575, %r4680, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4681, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4682, %r4680, %r4681;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4685, %r4677, %r4682;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4688, %r585, %r575, %r4691, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4692, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4693, %r4691, %r4692;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4696, %r4688, %r4693;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4699, %r574, %r597, %r4680, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4703, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4704, %r4680, %r4703;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4707, %r4699, %r4704;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4710, %r585, %r597, %r4691, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4714, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4715, %r4691, %r4714;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4718, %r4710, %r4715;
	// end inline asm
	// begin inline asm
	mov.b32 %r4726, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4737, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4723, %r574, %r621, %r4726, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4727, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4728, %r4726, %r4727;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4731, %r4723, %r4728;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4734, %r585, %r621, %r4737, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4738, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4739, %r4737, %r4738;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4742, %r4734, %r4739;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4745, %r574, %r643, %r4726, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4749, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4750, %r4726, %r4749;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4753, %r4745, %r4750;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4756, %r585, %r643, %r4737, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4760, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4761, %r4737, %r4760;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4764, %r4756, %r4761;
	// end inline asm
	// begin inline asm
	mov.b32 %r4772, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4783, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4769, %r574, %r667, %r4772, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4773, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4774, %r4772, %r4773;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4777, %r4769, %r4774;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4780, %r585, %r667, %r4783, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4784, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4785, %r4783, %r4784;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4788, %r4780, %r4785;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4791, %r574, %r689, %r4772, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4795, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4796, %r4772, %r4795;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4799, %r4791, %r4796;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4802, %r585, %r689, %r4783, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4806, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4807, %r4783, %r4806;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4810, %r4802, %r4807;
	// end inline asm
	// begin inline asm
	mov.b32 %r4818, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4829, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4815, %r574, %r713, %r4818, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4819, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4820, %r4818, %r4819;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4823, %r4815, %r4820;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4826, %r585, %r713, %r4829, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4830, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4831, %r4829, %r4830;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4834, %r4826, %r4831;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4837, %r574, %r735, %r4818, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4841, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4842, %r4818, %r4841;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4845, %r4837, %r4842;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4848, %r585, %r735, %r4829, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4852, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4853, %r4829, %r4852;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4856, %r4848, %r4853;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4859, %r220;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4861, %r4859, %r4685, %r4611;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4865, %r220;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4867, %r4865, %r4696, %r4615;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4871, %r220;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4873, %r4871, %r4707, %r4619;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4877, %r220;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4879, %r4877, %r4718, %r4623;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4883, %r220;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4885, %r4883, %r4731, %r4627;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4889, %r220;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4891, %r4889, %r4742, %r4631;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4895, %r220;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4897, %r4895, %r4753, %r4635;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4901, %r220;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4903, %r4901, %r4764, %r4639;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4907, %r220;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4909, %r4907, %r4777, %r4643;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4913, %r220;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4915, %r4913, %r4788, %r4647;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4919, %r220;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4921, %r4919, %r4799, %r4651;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4925, %r220;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4927, %r4925, %r4810, %r4655;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4931, %r220;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4933, %r4931, %r4823, %r4659;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4937, %r220;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4939, %r4937, %r4834, %r4663;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4943, %r220;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4945, %r4943, %r4845, %r4667;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4949, %r220;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4951, %r4949, %r4856, %r4671;
	// end inline asm
	// begin inline asm
	mov.b32 %r4960, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4971, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4957, %r574, %r2371, %r4960, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4961, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4962, %r4960, %r4961;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4965, %r4957, %r4962;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4968, %r585, %r2371, %r4971, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4972, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4973, %r4971, %r4972;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4976, %r4968, %r4973;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4979, %r574, %r2393, %r4960, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4983, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4984, %r4960, %r4983;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4987, %r4979, %r4984;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4990, %r585, %r2393, %r4971, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4994, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4995, %r4971, %r4994;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4998, %r4990, %r4995;
	// end inline asm
	// begin inline asm
	mov.b32 %r5006, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5017, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5003, %r574, %r2417, %r5006, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5007, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5008, %r5006, %r5007;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5011, %r5003, %r5008;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5014, %r585, %r2417, %r5017, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5018, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5019, %r5017, %r5018;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5022, %r5014, %r5019;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5025, %r574, %r2439, %r5006, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5029, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5030, %r5006, %r5029;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5033, %r5025, %r5030;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5036, %r585, %r2439, %r5017, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5040, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5041, %r5017, %r5040;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5044, %r5036, %r5041;
	// end inline asm
	// begin inline asm
	mov.b32 %r5052, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5063, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5049, %r574, %r2463, %r5052, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5053, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5054, %r5052, %r5053;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5057, %r5049, %r5054;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5060, %r585, %r2463, %r5063, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5064, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5065, %r5063, %r5064;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5068, %r5060, %r5065;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5071, %r574, %r2485, %r5052, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5075, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5076, %r5052, %r5075;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5079, %r5071, %r5076;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5082, %r585, %r2485, %r5063, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5086, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5087, %r5063, %r5086;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5090, %r5082, %r5087;
	// end inline asm
	// begin inline asm
	mov.b32 %r5098, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5109, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5095, %r574, %r2509, %r5098, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5099, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5100, %r5098, %r5099;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5103, %r5095, %r5100;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5106, %r585, %r2509, %r5109, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5110, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5111, %r5109, %r5110;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5114, %r5106, %r5111;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5117, %r574, %r2531, %r5098, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5121, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5122, %r5098, %r5121;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5125, %r5117, %r5122;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5128, %r585, %r2531, %r5109, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5132, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5133, %r5109, %r5132;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5136, %r5128, %r5133;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5210, %r238, %r4965, %r4861;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5207, %r238, %r4976, %r4867;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5219, %r238, %r4987, %r4873;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5216, %r238, %r4998, %r4879;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5228, %r238, %r5011, %r4885;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5225, %r238, %r5022, %r4891;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5237, %r238, %r5033, %r4897;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5234, %r238, %r5044, %r4903;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5246, %r238, %r5057, %r4909;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5243, %r238, %r5068, %r4915;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5255, %r238, %r5079, %r4921;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5252, %r238, %r5090, %r4927;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5264, %r238, %r5103, %r4933;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5261, %r238, %r5114, %r4939;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5273, %r238, %r5125, %r4945;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5270, %r238, %r5136, %r4951;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5203, %r287;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5205, %r5203, %r5207;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5208, %r284, %r5210, %r5205;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5212, %r287;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5214, %r5212, %r5216;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5217, %r284, %r5219, %r5214;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5221, %r287;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5223, %r5221, %r5225;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5226, %r284, %r5228, %r5223;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5230, %r287;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5232, %r5230, %r5234;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5235, %r284, %r5237, %r5232;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5239, %r287;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5241, %r5239, %r5243;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5244, %r284, %r5246, %r5241;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5248, %r287;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5250, %r5248, %r5252;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5253, %r284, %r5255, %r5250;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5257, %r287;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5259, %r5257, %r5261;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5262, %r284, %r5264, %r5259;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5266, %r287;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5268, %r5266, %r5270;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5271, %r284, %r5273, %r5268;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5275, %r287, %r5210;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5278, %r284, %r5207, %r5275;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5282, %r287, %r5219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5285, %r284, %r5216, %r5282;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5289, %r287, %r5228;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5292, %r284, %r5225, %r5289;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5296, %r287, %r5237;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5299, %r284, %r5234, %r5296;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5303, %r287, %r5246;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5306, %r284, %r5243, %r5303;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5310, %r287, %r5255;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5313, %r284, %r5252, %r5310;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5317, %r287, %r5264;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5320, %r284, %r5261, %r5317;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5324, %r287, %r5273;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5327, %r284, %r5270, %r5324;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5418, %r5415}, {%r326, %r332, %r329, %r335}, {%r5208, %r5278}, {%r1747, %r1747};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5427, %r5424}, {%r326, %r332, %r329, %r335}, {%r5217, %r5285}, {%r1747, %r1747};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5436, %r5433}, {%r326, %r332, %r329, %r335}, {%r5226, %r5292}, {%r1747, %r1747};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5445, %r5442}, {%r326, %r332, %r329, %r335}, {%r5235, %r5299}, {%r1747, %r1747};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5454, %r5451}, {%r326, %r332, %r329, %r335}, {%r5244, %r5306}, {%r1747, %r1747};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5463, %r5460}, {%r326, %r332, %r329, %r335}, {%r5253, %r5313}, {%r1747, %r1747};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5472, %r5469}, {%r326, %r332, %r329, %r335}, {%r5262, %r5320}, {%r1747, %r1747};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5481, %r5478}, {%r326, %r332, %r329, %r335}, {%r5271, %r5327}, {%r1747, %r1747};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5411, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5413, %r5411, %r5415;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5416, %r370, %r5418, %r5413;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5420, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5422, %r5420, %r5424;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5425, %r370, %r5427, %r5422;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5429, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5431, %r5429, %r5433;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5434, %r370, %r5436, %r5431;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5438, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5440, %r5438, %r5442;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5443, %r370, %r5445, %r5440;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5447, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5449, %r5447, %r5451;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5452, %r370, %r5454, %r5449;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5456, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5458, %r5456, %r5460;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5461, %r370, %r5463, %r5458;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5465, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5467, %r5465, %r5469;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5470, %r370, %r5472, %r5467;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5474, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5476, %r5474, %r5478;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5479, %r370, %r5481, %r5476;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5483, %r373, %r5418;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5486, %r370, %r5415, %r5483;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5490, %r373, %r5427;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5493, %r370, %r5424, %r5490;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5497, %r373, %r5436;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5500, %r370, %r5433, %r5497;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5504, %r373, %r5445;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5507, %r370, %r5442, %r5504;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5511, %r373, %r5454;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5514, %r370, %r5451, %r5511;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5518, %r373, %r5463;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5521, %r370, %r5460, %r5518;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5525, %r373, %r5472;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5528, %r370, %r5469, %r5525;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5532, %r373, %r5481;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5535, %r370, %r5478, %r5532;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5539, %r5540}, {%r413, %r419, %r416, %r422}, {%r5416, %r5486}, {%r1747, %r1747};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5549, %r5550}, {%r413, %r419, %r416, %r422}, {%r5425, %r5493}, {%r1747, %r1747};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5559, %r5560}, {%r413, %r419, %r416, %r422}, {%r5434, %r5500}, {%r1747, %r1747};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5569, %r5570}, {%r413, %r419, %r416, %r422}, {%r5443, %r5507}, {%r1747, %r1747};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5579, %r5580}, {%r413, %r419, %r416, %r422}, {%r5452, %r5514}, {%r1747, %r1747};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5589, %r5590}, {%r413, %r419, %r416, %r422}, {%r5461, %r5521}, {%r1747, %r1747};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5599, %r5600}, {%r413, %r419, %r416, %r422}, {%r5470, %r5528}, {%r1747, %r1747};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5609, %r5610}, {%r413, %r419, %r416, %r422}, {%r5479, %r5535}, {%r1747, %r1747};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5619, %r116, %r5539;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5622, %r116, %r5540;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5625, %r116, %r5549;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5628, %r116, %r5550;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5631, %r116, %r5559;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5634, %r116, %r5560;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5637, %r116, %r5569;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5640, %r116, %r5570;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5643, %r116, %r5579;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5646, %r116, %r5580;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5649, %r116, %r5589;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5652, %r116, %r5590;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5655, %r116, %r5599;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5658, %r116, %r5600;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5661, %r116, %r5609;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5664, %r116, %r5610;
	// end inline asm
	// begin inline asm
	mov.b32 %r5667, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5668, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5669, %r5619, %r5667;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5672, %r5669, %r5668;
	// end inline asm
	// begin inline asm
	mov.b32 %r5675, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5676, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5677, %r5622, %r5675;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5680, %r5677, %r5676;
	// end inline asm
	// begin inline asm
	mov.b32 %r5683, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5684, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5685, %r5625, %r5683;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5688, %r5685, %r5684;
	// end inline asm
	// begin inline asm
	mov.b32 %r5691, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5692, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5693, %r5628, %r5691;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5696, %r5693, %r5692;
	// end inline asm
	// begin inline asm
	mov.b32 %r5699, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5700, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5701, %r5631, %r5699;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5704, %r5701, %r5700;
	// end inline asm
	// begin inline asm
	mov.b32 %r5707, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5708, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5709, %r5634, %r5707;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5712, %r5709, %r5708;
	// end inline asm
	// begin inline asm
	mov.b32 %r5715, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5716, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5717, %r5637, %r5715;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5720, %r5717, %r5716;
	// end inline asm
	// begin inline asm
	mov.b32 %r5723, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5724, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5725, %r5640, %r5723;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5728, %r5725, %r5724;
	// end inline asm
	// begin inline asm
	mov.b32 %r5731, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5732, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5733, %r5643, %r5731;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5736, %r5733, %r5732;
	// end inline asm
	// begin inline asm
	mov.b32 %r5739, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5740, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5741, %r5646, %r5739;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5744, %r5741, %r5740;
	// end inline asm
	// begin inline asm
	mov.b32 %r5747, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5748, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5749, %r5649, %r5747;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5752, %r5749, %r5748;
	// end inline asm
	// begin inline asm
	mov.b32 %r5755, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5756, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5757, %r5652, %r5755;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5760, %r5757, %r5756;
	// end inline asm
	// begin inline asm
	mov.b32 %r5763, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5764, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5765, %r5655, %r5763;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5768, %r5765, %r5764;
	// end inline asm
	// begin inline asm
	mov.b32 %r5771, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5772, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5773, %r5658, %r5771;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5776, %r5773, %r5772;
	// end inline asm
	// begin inline asm
	mov.b32 %r5779, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5780, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5781, %r5661, %r5779;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5784, %r5781, %r5780;
	// end inline asm
	// begin inline asm
	mov.b32 %r5787, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5788, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5789, %r5664, %r5787;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5792, %r5789, %r5788;
	// end inline asm
	// begin inline asm
	mov.b32 %r5798, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5796, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5797, %r5798, %r5796;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5800, %r5672, %r5797;
	// end inline asm
	// begin inline asm
	mov.b32 %r5803, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5804, %r5798, %r5803;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5807, %r5680, %r5804;
	// end inline asm
	// begin inline asm
	mov.b32 %r5810, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5811, %r5798, %r5810;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5814, %r5688, %r5811;
	// end inline asm
	// begin inline asm
	mov.b32 %r5817, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5818, %r5798, %r5817;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5821, %r5696, %r5818;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5824, %r5800, %r5814, %r2235;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5828, %r5807, %r5821, %r2235;
	// end inline asm
	shl.b32 	%r5835, %r5828, 4;
	// begin inline asm
	lop3.b32 %r5832, %r2241, %r5824, %r5835, 202;
	// end inline asm
	xor.b32  	%r7767, %r5832, -2004318072;
	// begin inline asm
	mov.b32 %r5839, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5837, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5838, %r5839, %r5837;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5841, %r5704, %r5838;
	// end inline asm
	// begin inline asm
	mov.b32 %r5844, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5845, %r5839, %r5844;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5848, %r5712, %r5845;
	// end inline asm
	// begin inline asm
	mov.b32 %r5851, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5852, %r5839, %r5851;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5855, %r5720, %r5852;
	// end inline asm
	// begin inline asm
	mov.b32 %r5858, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5859, %r5839, %r5858;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5862, %r5728, %r5859;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5865, %r5841, %r5855, %r2235;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5869, %r5848, %r5862, %r2235;
	// end inline asm
	shl.b32 	%r5876, %r5869, 4;
	// begin inline asm
	lop3.b32 %r5873, %r2241, %r5865, %r5876, 202;
	// end inline asm
	xor.b32  	%r7768, %r5873, -2004318072;
	// begin inline asm
	mov.b32 %r5880, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5878, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5879, %r5880, %r5878;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5882, %r5736, %r5879;
	// end inline asm
	// begin inline asm
	mov.b32 %r5885, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5886, %r5880, %r5885;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5889, %r5744, %r5886;
	// end inline asm
	// begin inline asm
	mov.b32 %r5892, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5893, %r5880, %r5892;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5896, %r5752, %r5893;
	// end inline asm
	// begin inline asm
	mov.b32 %r5899, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5900, %r5880, %r5899;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5903, %r5760, %r5900;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5906, %r5882, %r5896, %r2235;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5910, %r5889, %r5903, %r2235;
	// end inline asm
	shl.b32 	%r5917, %r5910, 4;
	// begin inline asm
	lop3.b32 %r5914, %r2241, %r5906, %r5917, 202;
	// end inline asm
	xor.b32  	%r7769, %r5914, -2004318072;
	// begin inline asm
	mov.b32 %r5921, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5919, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5920, %r5921, %r5919;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5923, %r5768, %r5920;
	// end inline asm
	// begin inline asm
	mov.b32 %r5926, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5927, %r5921, %r5926;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5930, %r5776, %r5927;
	// end inline asm
	// begin inline asm
	mov.b32 %r5933, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5934, %r5921, %r5933;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5937, %r5784, %r5934;
	// end inline asm
	// begin inline asm
	mov.b32 %r5940, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5941, %r5921, %r5940;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5944, %r5792, %r5941;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5947, %r5923, %r5937, %r2235;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5951, %r5930, %r5944, %r2235;
	// end inline asm
	shl.b32 	%r5958, %r5951, 4;
	// begin inline asm
	lop3.b32 %r5955, %r2241, %r5947, %r5958, 202;
	// end inline asm
	xor.b32  	%r7770, %r5955, -2004318072;
	st.shared.u32 	[%rd118], %r7767;
	st.shared.u32 	[%rd119], %r7768;
	st.shared.u32 	[%rd120], %r7769;
	st.shared.u32 	[%rd121], %r7770;
	ld.shared.u32 	%r7831, [%rd114];
	ld.shared.u32 	%r7832, [%rd115];
	ld.shared.u32 	%r7833, [%rd116];
	ld.shared.u32 	%r7834, [%rd117];
	// begin inline asm
	mov.b32 %r5964, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5975, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r5963, %r7831, -2004318072;
	// begin inline asm
	lop3.b32 %r5961, %r574, %r5963, %r5964, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5965, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5966, %r5964, %r5965;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5969, %r5961, %r5966;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5972, %r585, %r5963, %r5975, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5976, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5977, %r5975, %r5976;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5980, %r5972, %r5977;
	// end inline asm
	shr.u32 	%r5985, %r5963, 8;
	// begin inline asm
	lop3.b32 %r5983, %r574, %r5985, %r5964, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5987, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5988, %r5964, %r5987;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5991, %r5983, %r5988;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5994, %r585, %r5985, %r5975, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5998, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5999, %r5975, %r5998;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6002, %r5994, %r5999;
	// end inline asm
	// begin inline asm
	mov.b32 %r6010, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6021, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r6009, %r7832, -2004318072;
	// begin inline asm
	lop3.b32 %r6007, %r574, %r6009, %r6010, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6011, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6012, %r6010, %r6011;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6015, %r6007, %r6012;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6018, %r585, %r6009, %r6021, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6022, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6023, %r6021, %r6022;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6026, %r6018, %r6023;
	// end inline asm
	shr.u32 	%r6031, %r6009, 8;
	// begin inline asm
	lop3.b32 %r6029, %r574, %r6031, %r6010, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6033, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6034, %r6010, %r6033;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6037, %r6029, %r6034;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6040, %r585, %r6031, %r6021, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6044, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6045, %r6021, %r6044;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6048, %r6040, %r6045;
	// end inline asm
	// begin inline asm
	mov.b32 %r6056, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6067, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r6055, %r7833, -2004318072;
	// begin inline asm
	lop3.b32 %r6053, %r574, %r6055, %r6056, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6057, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6058, %r6056, %r6057;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6061, %r6053, %r6058;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6064, %r585, %r6055, %r6067, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6068, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6069, %r6067, %r6068;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6072, %r6064, %r6069;
	// end inline asm
	shr.u32 	%r6077, %r6055, 8;
	// begin inline asm
	lop3.b32 %r6075, %r574, %r6077, %r6056, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6079, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6080, %r6056, %r6079;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6083, %r6075, %r6080;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6086, %r585, %r6077, %r6067, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6090, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6091, %r6067, %r6090;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6094, %r6086, %r6091;
	// end inline asm
	// begin inline asm
	mov.b32 %r6102, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6113, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r6101, %r7834, -2004318072;
	// begin inline asm
	lop3.b32 %r6099, %r574, %r6101, %r6102, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6103, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6104, %r6102, %r6103;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6107, %r6099, %r6104;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6110, %r585, %r6101, %r6113, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6114, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6115, %r6113, %r6114;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6118, %r6110, %r6115;
	// end inline asm
	shr.u32 	%r6123, %r6101, 8;
	// begin inline asm
	lop3.b32 %r6121, %r574, %r6123, %r6102, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6125, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6126, %r6102, %r6125;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6129, %r6121, %r6126;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6132, %r585, %r6123, %r6113, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6136, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6137, %r6113, %r6136;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6140, %r6132, %r6137;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6143, %r256;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6145, %r6143, %r5969;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6148, %r256;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6150, %r6148, %r5980;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6153, %r256;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6155, %r6153, %r5991;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6158, %r256;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6160, %r6158, %r6002;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6163, %r256;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6165, %r6163, %r6015;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6168, %r256;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6170, %r6168, %r6026;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6173, %r256;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6175, %r6173, %r6037;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6178, %r256;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6180, %r6178, %r6048;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6183, %r256;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6185, %r6183, %r6061;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6188, %r256;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6190, %r6188, %r6072;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6193, %r256;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6195, %r6193, %r6083;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6198, %r256;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6200, %r6198, %r6094;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6203, %r256;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6205, %r6203, %r6107;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6208, %r256;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6210, %r6208, %r6118;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6213, %r256;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6215, %r6213, %r6129;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6218, %r256;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6220, %r6218, %r6140;
	// end inline asm
	// begin inline asm
	mov.b32 %r6228, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6239, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6225, %r574, %r575, %r6228, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6229, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6230, %r6228, %r6229;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6233, %r6225, %r6230;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6236, %r585, %r575, %r6239, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6240, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6241, %r6239, %r6240;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6244, %r6236, %r6241;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6247, %r574, %r597, %r6228, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6251, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6252, %r6228, %r6251;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6255, %r6247, %r6252;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6258, %r585, %r597, %r6239, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6262, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6263, %r6239, %r6262;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6266, %r6258, %r6263;
	// end inline asm
	// begin inline asm
	mov.b32 %r6274, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6285, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6271, %r574, %r621, %r6274, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6275, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6276, %r6274, %r6275;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6279, %r6271, %r6276;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6282, %r585, %r621, %r6285, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6286, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6287, %r6285, %r6286;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6290, %r6282, %r6287;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6293, %r574, %r643, %r6274, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6297, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6298, %r6274, %r6297;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6301, %r6293, %r6298;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6304, %r585, %r643, %r6285, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6308, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6309, %r6285, %r6308;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6312, %r6304, %r6309;
	// end inline asm
	// begin inline asm
	mov.b32 %r6320, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6331, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6317, %r574, %r667, %r6320, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6321, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6322, %r6320, %r6321;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6325, %r6317, %r6322;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6328, %r585, %r667, %r6331, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6332, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6333, %r6331, %r6332;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6336, %r6328, %r6333;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6339, %r574, %r689, %r6320, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6343, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6344, %r6320, %r6343;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6347, %r6339, %r6344;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6350, %r585, %r689, %r6331, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6354, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6355, %r6331, %r6354;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6358, %r6350, %r6355;
	// end inline asm
	// begin inline asm
	mov.b32 %r6366, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6377, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6363, %r574, %r713, %r6366, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6367, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6368, %r6366, %r6367;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6371, %r6363, %r6368;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6374, %r585, %r713, %r6377, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6378, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6379, %r6377, %r6378;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6382, %r6374, %r6379;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6385, %r574, %r735, %r6366, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6389, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6390, %r6366, %r6389;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6393, %r6385, %r6390;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6396, %r585, %r735, %r6377, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6400, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6401, %r6377, %r6400;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6404, %r6396, %r6401;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6407, %r202, %r6233, %r6145;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6411, %r202, %r6244, %r6150;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6415, %r202, %r6255, %r6155;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6419, %r202, %r6266, %r6160;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6423, %r202, %r6279, %r6165;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6427, %r202, %r6290, %r6170;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6431, %r202, %r6301, %r6175;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6435, %r202, %r6312, %r6180;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6439, %r202, %r6325, %r6185;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6443, %r202, %r6336, %r6190;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6447, %r202, %r6347, %r6195;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6451, %r202, %r6358, %r6200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6455, %r202, %r6371, %r6205;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6459, %r202, %r6382, %r6210;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6463, %r202, %r6393, %r6215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6467, %r202, %r6404, %r6220;
	// end inline asm
	// begin inline asm
	mov.b32 %r6476, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6487, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6473, %r574, %r2371, %r6476, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6477, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6478, %r6476, %r6477;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6481, %r6473, %r6478;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6484, %r585, %r2371, %r6487, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6488, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6489, %r6487, %r6488;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6492, %r6484, %r6489;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6495, %r574, %r2393, %r6476, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6499, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6500, %r6476, %r6499;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6503, %r6495, %r6500;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6506, %r585, %r2393, %r6487, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6510, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6511, %r6487, %r6510;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6514, %r6506, %r6511;
	// end inline asm
	// begin inline asm
	mov.b32 %r6522, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6533, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6519, %r574, %r2417, %r6522, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6523, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6524, %r6522, %r6523;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6527, %r6519, %r6524;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6530, %r585, %r2417, %r6533, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6534, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6535, %r6533, %r6534;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6538, %r6530, %r6535;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6541, %r574, %r2439, %r6522, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6545, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6546, %r6522, %r6545;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6549, %r6541, %r6546;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6552, %r585, %r2439, %r6533, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6556, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6557, %r6533, %r6556;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6560, %r6552, %r6557;
	// end inline asm
	// begin inline asm
	mov.b32 %r6568, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6579, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6565, %r574, %r2463, %r6568, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6569, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6570, %r6568, %r6569;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6573, %r6565, %r6570;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6576, %r585, %r2463, %r6579, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6580, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6581, %r6579, %r6580;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6584, %r6576, %r6581;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6587, %r574, %r2485, %r6568, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6591, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6592, %r6568, %r6591;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6595, %r6587, %r6592;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6598, %r585, %r2485, %r6579, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6602, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6603, %r6579, %r6602;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6606, %r6598, %r6603;
	// end inline asm
	// begin inline asm
	mov.b32 %r6614, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6625, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6611, %r574, %r2509, %r6614, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6615, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6616, %r6614, %r6615;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6619, %r6611, %r6616;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6622, %r585, %r2509, %r6625, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6626, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6627, %r6625, %r6626;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6630, %r6622, %r6627;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6633, %r574, %r2531, %r6614, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6637, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6638, %r6614, %r6637;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6641, %r6633, %r6638;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6644, %r585, %r2531, %r6625, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6648, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6649, %r6625, %r6648;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6652, %r6644, %r6649;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6655, %r220;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6657, %r6655, %r6481, %r6407;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6661, %r220;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6663, %r6661, %r6492, %r6411;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6667, %r220;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6669, %r6667, %r6503, %r6415;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6673, %r220;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6675, %r6673, %r6514, %r6419;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6679, %r220;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6681, %r6679, %r6527, %r6423;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6685, %r220;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6687, %r6685, %r6538, %r6427;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6691, %r220;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6693, %r6691, %r6549, %r6431;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6697, %r220;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6699, %r6697, %r6560, %r6435;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6703, %r220;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6705, %r6703, %r6573, %r6439;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6709, %r220;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6711, %r6709, %r6584, %r6443;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6715, %r220;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6717, %r6715, %r6595, %r6447;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6721, %r220;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6723, %r6721, %r6606, %r6451;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6727, %r220;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6729, %r6727, %r6619, %r6455;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6733, %r220;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6735, %r6733, %r6630, %r6459;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6739, %r220;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6741, %r6739, %r6641, %r6463;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6745, %r220;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6747, %r6745, %r6652, %r6467;
	// end inline asm
	// begin inline asm
	mov.b32 %r6756, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6767, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6753, %r574, %r4167, %r6756, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6757, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6758, %r6756, %r6757;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6761, %r6753, %r6758;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6764, %r585, %r4167, %r6767, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6768, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6769, %r6767, %r6768;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6772, %r6764, %r6769;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6775, %r574, %r4189, %r6756, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6779, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6780, %r6756, %r6779;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6783, %r6775, %r6780;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6786, %r585, %r4189, %r6767, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6790, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6791, %r6767, %r6790;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6794, %r6786, %r6791;
	// end inline asm
	// begin inline asm
	mov.b32 %r6802, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6813, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6799, %r574, %r4213, %r6802, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6803, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6804, %r6802, %r6803;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6807, %r6799, %r6804;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6810, %r585, %r4213, %r6813, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6814, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6815, %r6813, %r6814;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6818, %r6810, %r6815;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6821, %r574, %r4235, %r6802, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6825, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6826, %r6802, %r6825;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6829, %r6821, %r6826;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6832, %r585, %r4235, %r6813, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6836, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6837, %r6813, %r6836;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6840, %r6832, %r6837;
	// end inline asm
	// begin inline asm
	mov.b32 %r6848, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6859, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6845, %r574, %r4259, %r6848, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6849, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6850, %r6848, %r6849;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6853, %r6845, %r6850;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6856, %r585, %r4259, %r6859, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6860, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6861, %r6859, %r6860;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6864, %r6856, %r6861;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6867, %r574, %r4281, %r6848, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6871, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6872, %r6848, %r6871;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6875, %r6867, %r6872;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6878, %r585, %r4281, %r6859, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6882, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6883, %r6859, %r6882;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6886, %r6878, %r6883;
	// end inline asm
	// begin inline asm
	mov.b32 %r6894, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6905, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6891, %r574, %r4305, %r6894, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6895, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6896, %r6894, %r6895;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6899, %r6891, %r6896;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6902, %r585, %r4305, %r6905, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6906, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6907, %r6905, %r6906;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6910, %r6902, %r6907;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6913, %r574, %r4327, %r6894, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6917, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6918, %r6894, %r6917;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6921, %r6913, %r6918;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6924, %r585, %r4327, %r6905, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6928, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6929, %r6905, %r6928;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6932, %r6924, %r6929;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7006, %r238, %r6761, %r6657;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7003, %r238, %r6772, %r6663;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7015, %r238, %r6783, %r6669;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7012, %r238, %r6794, %r6675;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7024, %r238, %r6807, %r6681;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7021, %r238, %r6818, %r6687;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7033, %r238, %r6829, %r6693;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7030, %r238, %r6840, %r6699;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7042, %r238, %r6853, %r6705;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7039, %r238, %r6864, %r6711;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7051, %r238, %r6875, %r6717;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7048, %r238, %r6886, %r6723;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7060, %r238, %r6899, %r6729;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7057, %r238, %r6910, %r6735;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7069, %r238, %r6921, %r6741;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7066, %r238, %r6932, %r6747;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6999, %r287;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7001, %r6999, %r7003;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7004, %r284, %r7006, %r7001;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7008, %r287;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7010, %r7008, %r7012;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7013, %r284, %r7015, %r7010;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7017, %r287;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7019, %r7017, %r7021;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7022, %r284, %r7024, %r7019;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7026, %r287;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7028, %r7026, %r7030;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7031, %r284, %r7033, %r7028;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7035, %r287;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7037, %r7035, %r7039;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7040, %r284, %r7042, %r7037;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7044, %r287;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7046, %r7044, %r7048;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7049, %r284, %r7051, %r7046;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7053, %r287;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7055, %r7053, %r7057;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7058, %r284, %r7060, %r7055;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7062, %r287;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7064, %r7062, %r7066;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7067, %r284, %r7069, %r7064;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7071, %r287, %r7006;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7074, %r284, %r7003, %r7071;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7078, %r287, %r7015;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7081, %r284, %r7012, %r7078;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7085, %r287, %r7024;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7088, %r284, %r7021, %r7085;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7092, %r287, %r7033;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7095, %r284, %r7030, %r7092;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7099, %r287, %r7042;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7102, %r284, %r7039, %r7099;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7106, %r287, %r7051;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7109, %r284, %r7048, %r7106;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7113, %r287, %r7060;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7116, %r284, %r7057, %r7113;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7120, %r287, %r7069;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7123, %r284, %r7066, %r7120;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7214, %r7211}, {%r326, %r332, %r329, %r335}, {%r7004, %r7074}, {%r1747, %r1747};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7223, %r7220}, {%r326, %r332, %r329, %r335}, {%r7013, %r7081}, {%r1747, %r1747};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7232, %r7229}, {%r326, %r332, %r329, %r335}, {%r7022, %r7088}, {%r1747, %r1747};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7241, %r7238}, {%r326, %r332, %r329, %r335}, {%r7031, %r7095}, {%r1747, %r1747};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7250, %r7247}, {%r326, %r332, %r329, %r335}, {%r7040, %r7102}, {%r1747, %r1747};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7259, %r7256}, {%r326, %r332, %r329, %r335}, {%r7049, %r7109}, {%r1747, %r1747};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7268, %r7265}, {%r326, %r332, %r329, %r335}, {%r7058, %r7116}, {%r1747, %r1747};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7277, %r7274}, {%r326, %r332, %r329, %r335}, {%r7067, %r7123}, {%r1747, %r1747};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7207, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7209, %r7207, %r7211;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7212, %r370, %r7214, %r7209;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7216, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7218, %r7216, %r7220;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7221, %r370, %r7223, %r7218;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7225, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7227, %r7225, %r7229;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7230, %r370, %r7232, %r7227;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7234, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7236, %r7234, %r7238;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7239, %r370, %r7241, %r7236;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7243, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7245, %r7243, %r7247;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7248, %r370, %r7250, %r7245;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7252, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7254, %r7252, %r7256;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7257, %r370, %r7259, %r7254;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7261, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7263, %r7261, %r7265;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7266, %r370, %r7268, %r7263;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7270, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7272, %r7270, %r7274;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7275, %r370, %r7277, %r7272;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7279, %r373, %r7214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7282, %r370, %r7211, %r7279;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7286, %r373, %r7223;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7289, %r370, %r7220, %r7286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7293, %r373, %r7232;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7296, %r370, %r7229, %r7293;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7300, %r373, %r7241;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7303, %r370, %r7238, %r7300;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7307, %r373, %r7250;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7310, %r370, %r7247, %r7307;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7314, %r373, %r7259;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7317, %r370, %r7256, %r7314;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7321, %r373, %r7268;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7324, %r370, %r7265, %r7321;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7328, %r373, %r7277;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7331, %r370, %r7274, %r7328;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7335, %r7336}, {%r413, %r419, %r416, %r422}, {%r7212, %r7282}, {%r1747, %r1747};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7345, %r7346}, {%r413, %r419, %r416, %r422}, {%r7221, %r7289}, {%r1747, %r1747};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7355, %r7356}, {%r413, %r419, %r416, %r422}, {%r7230, %r7296}, {%r1747, %r1747};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7365, %r7366}, {%r413, %r419, %r416, %r422}, {%r7239, %r7303}, {%r1747, %r1747};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7375, %r7376}, {%r413, %r419, %r416, %r422}, {%r7248, %r7310}, {%r1747, %r1747};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7385, %r7386}, {%r413, %r419, %r416, %r422}, {%r7257, %r7317}, {%r1747, %r1747};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7395, %r7396}, {%r413, %r419, %r416, %r422}, {%r7266, %r7324}, {%r1747, %r1747};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7405, %r7406}, {%r413, %r419, %r416, %r422}, {%r7275, %r7331}, {%r1747, %r1747};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7415, %r116, %r7335;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7418, %r116, %r7336;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7421, %r116, %r7345;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7424, %r116, %r7346;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7427, %r116, %r7355;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7430, %r116, %r7356;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7433, %r116, %r7365;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7436, %r116, %r7366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7439, %r116, %r7375;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7442, %r116, %r7376;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7445, %r116, %r7385;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7448, %r116, %r7386;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7451, %r116, %r7395;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7454, %r116, %r7396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7457, %r116, %r7405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7460, %r116, %r7406;
	// end inline asm
	// begin inline asm
	mov.b32 %r7463, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7464, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7465, %r7415, %r7463;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7468, %r7465, %r7464;
	// end inline asm
	// begin inline asm
	mov.b32 %r7471, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7472, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7473, %r7418, %r7471;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7476, %r7473, %r7472;
	// end inline asm
	// begin inline asm
	mov.b32 %r7479, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7480, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7481, %r7421, %r7479;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7484, %r7481, %r7480;
	// end inline asm
	// begin inline asm
	mov.b32 %r7487, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7488, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7489, %r7424, %r7487;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7492, %r7489, %r7488;
	// end inline asm
	// begin inline asm
	mov.b32 %r7495, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7496, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7497, %r7427, %r7495;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7500, %r7497, %r7496;
	// end inline asm
	// begin inline asm
	mov.b32 %r7503, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7504, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7505, %r7430, %r7503;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7508, %r7505, %r7504;
	// end inline asm
	// begin inline asm
	mov.b32 %r7511, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7512, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7513, %r7433, %r7511;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7516, %r7513, %r7512;
	// end inline asm
	// begin inline asm
	mov.b32 %r7519, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7520, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7521, %r7436, %r7519;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7524, %r7521, %r7520;
	// end inline asm
	// begin inline asm
	mov.b32 %r7527, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7528, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7529, %r7439, %r7527;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7532, %r7529, %r7528;
	// end inline asm
	// begin inline asm
	mov.b32 %r7535, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7536, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7537, %r7442, %r7535;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7540, %r7537, %r7536;
	// end inline asm
	// begin inline asm
	mov.b32 %r7543, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7544, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7545, %r7445, %r7543;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7548, %r7545, %r7544;
	// end inline asm
	// begin inline asm
	mov.b32 %r7551, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7552, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7553, %r7448, %r7551;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7556, %r7553, %r7552;
	// end inline asm
	// begin inline asm
	mov.b32 %r7559, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7560, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7561, %r7451, %r7559;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7564, %r7561, %r7560;
	// end inline asm
	// begin inline asm
	mov.b32 %r7567, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7568, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7569, %r7454, %r7567;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7572, %r7569, %r7568;
	// end inline asm
	// begin inline asm
	mov.b32 %r7575, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7576, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7577, %r7457, %r7575;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7580, %r7577, %r7576;
	// end inline asm
	// begin inline asm
	mov.b32 %r7583, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7584, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7585, %r7460, %r7583;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7588, %r7585, %r7584;
	// end inline asm
	// begin inline asm
	mov.b32 %r7594, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r7592, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7593, %r7594, %r7592;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7596, %r7468, %r7593;
	// end inline asm
	// begin inline asm
	mov.b32 %r7599, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7600, %r7594, %r7599;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7603, %r7476, %r7600;
	// end inline asm
	// begin inline asm
	mov.b32 %r7606, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7607, %r7594, %r7606;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7610, %r7484, %r7607;
	// end inline asm
	// begin inline asm
	mov.b32 %r7613, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7614, %r7594, %r7613;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7617, %r7492, %r7614;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7620, %r7596, %r7610, %r2235;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7624, %r7603, %r7617, %r2235;
	// end inline asm
	shl.b32 	%r7631, %r7624, 4;
	// begin inline asm
	lop3.b32 %r7628, %r2241, %r7620, %r7631, 202;
	// end inline asm
	xor.b32  	%r7771, %r7628, -2004318072;
	// begin inline asm
	mov.b32 %r7635, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r7633, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7634, %r7635, %r7633;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7637, %r7500, %r7634;
	// end inline asm
	// begin inline asm
	mov.b32 %r7640, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7641, %r7635, %r7640;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7644, %r7508, %r7641;
	// end inline asm
	// begin inline asm
	mov.b32 %r7647, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7648, %r7635, %r7647;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7651, %r7516, %r7648;
	// end inline asm
	// begin inline asm
	mov.b32 %r7654, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7655, %r7635, %r7654;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7658, %r7524, %r7655;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7661, %r7637, %r7651, %r2235;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7665, %r7644, %r7658, %r2235;
	// end inline asm
	shl.b32 	%r7672, %r7665, 4;
	// begin inline asm
	lop3.b32 %r7669, %r2241, %r7661, %r7672, 202;
	// end inline asm
	xor.b32  	%r7772, %r7669, -2004318072;
	// begin inline asm
	mov.b32 %r7676, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r7674, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7675, %r7676, %r7674;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7678, %r7532, %r7675;
	// end inline asm
	// begin inline asm
	mov.b32 %r7681, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7682, %r7676, %r7681;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7685, %r7540, %r7682;
	// end inline asm
	// begin inline asm
	mov.b32 %r7688, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7689, %r7676, %r7688;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7692, %r7548, %r7689;
	// end inline asm
	// begin inline asm
	mov.b32 %r7695, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7696, %r7676, %r7695;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7699, %r7556, %r7696;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7702, %r7678, %r7692, %r2235;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7706, %r7685, %r7699, %r2235;
	// end inline asm
	shl.b32 	%r7713, %r7706, 4;
	// begin inline asm
	lop3.b32 %r7710, %r2241, %r7702, %r7713, 202;
	// end inline asm
	xor.b32  	%r7773, %r7710, -2004318072;
	// begin inline asm
	mov.b32 %r7717, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r7715, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7716, %r7717, %r7715;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7719, %r7564, %r7716;
	// end inline asm
	// begin inline asm
	mov.b32 %r7722, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7723, %r7717, %r7722;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7726, %r7572, %r7723;
	// end inline asm
	// begin inline asm
	mov.b32 %r7729, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7730, %r7717, %r7729;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7733, %r7580, %r7730;
	// end inline asm
	// begin inline asm
	mov.b32 %r7736, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7737, %r7717, %r7736;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7740, %r7588, %r7737;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7743, %r7719, %r7733, %r2235;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7747, %r7726, %r7740, %r2235;
	// end inline asm
	shl.b32 	%r7754, %r7747, 4;
	// begin inline asm
	lop3.b32 %r7751, %r2241, %r7743, %r7754, 202;
	// end inline asm
	xor.b32  	%r7774, %r7751, -2004318072;
	st.shared.u32 	[%rd118], %r7771;
	st.shared.u32 	[%rd119], %r7772;
	st.shared.u32 	[%rd120], %r7773;
	st.shared.u32 	[%rd121], %r7774;
	add.s32 	%r7822, %r7822, -64;
	add.s64 	%rd128, %rd128, 8324;
	setp.eq.s32 	%p240, %r7822, 0;
	@%p240 bra 	LBB0_119;
	bra.uni 	LBB0_118;
LBB0_119:                               // %guard_pass10527
                                        //   in Loop: Header=BB0_117 Depth=1
	bar.sync 	0;
	ld.shared.u32 	%r7780, [%rd10];
	ld.shared.u32 	%r7781, [%rd11+128];
	ld.shared.u32 	%r7788, [%rd11+4];
	ld.shared.u32 	%r7789, [%rd11+132];
	// begin inline asm
	prmt.b32 %r7775, %r7780, %r7781, %r557;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7779, %r7780, %r7781, %r561;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7783, %r7788, %r7789, %r557;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7787, %r7788, %r7789, %r561;
	// end inline asm
	selp.b32 	%r7791, %r7779, %r7775, %p239;
	shfl.sync.bfly.b32	%r7792, %r7791, 8, 31, -1;
	selp.b32 	%r7793, %r7787, %r7783, %p239;
	shfl.sync.bfly.b32	%r7794, %r7793, 8, 31, -1;
	mov.u32 	%r7852, %r82;
	mov.u64 	%rd129, %rd13;
	mov.f64 	%fd22, %fd5;
	@%p242 bra 	LBB0_156;
LBB0_120:                               //   Parent Loop BB0_117 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	sub.s64 	%rd122, %rd129, %rd14;
	mov.b64 	%fd18, %rd122;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r7795}, %fd18;
	}
	setp.lt.s32 	%p243, %r7795, 0;
	selp.b64 	%rd26, %rd129, %rd122, %p243;
	shl.b64 	%rd129, %rd26, 1;
	add.s32 	%r7852, %r7852, -1;
	setp.gt.s32 	%p244, %r7852, 0;
	@%p244 bra 	LBB0_120;
// %bb.121:                             //   in Loop: Header=BB0_117 Depth=1
	and.b64  	%rd28, %rd26, 9223372036854775807;
	setp.eq.s64 	%p245, %rd28, 0;
	mov.u64 	%rd130, 0;
	@%p245 bra 	LBB0_155;
// %bb.122:                             //   in Loop: Header=BB0_117 Depth=1
	mov.b64 	%fd19, %rd28;
	mul.f64 	%fd20, %fd19, 0d4350000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r7796}, %fd20;
	}
	shr.u32 	%r7797, %r7796, 20;
	mov.u32 	%r7798, 55;
	sub.s32 	%r7799, %r7798, %r7797;
	sub.s32 	%r160, %r81, %r7799;
	shl.b64 	%rd29, %rd28, %r7799;
	setp.gt.s32 	%p246, %r160, 0;
	@%p246 bra 	LBB0_154;
	bra.uni 	LBB0_123;
LBB0_154:                               //   in Loop: Header=BB0_117 Depth=1
	add.s32 	%r7800, %r160, -1;
	cvt.u64.u32 	%rd124, %r7800;
	shl.b64 	%rd125, %rd124, 52;
	add.s64 	%rd130, %rd125, %rd29;
	bra.uni 	LBB0_155;
LBB0_123:                               //   in Loop: Header=BB0_117 Depth=1
	sub.s32 	%r7802, %r170, %r160;
	shr.u64 	%rd130, %rd29, %r7802;
LBB0_155:                               //   in Loop: Header=BB0_117 Depth=1
	mov.b64 	%fd21, %rd130;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r7803, %temp}, %fd21;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r7804}, %fd21;
	}
	or.b32  	%r7805, %r7804, %r80;
	mov.b64 	%fd22, {%r7803, %r7805};
LBB0_156:                               // %__nv_fmod.exit
                                        //   in Loop: Header=BB0_117 Depth=1
	setp.ltu.f64 	%p247, %fd22, 0d4068000000000000;
	@%p247 bra 	LBB0_125;
// %bb.124:                             // %L29245
                                        //   in Loop: Header=BB0_117 Depth=1
	selp.b32 	%r161, %r7775, %r7792, %p239;
	selp.b32 	%r162, %r7792, %r7779, %p239;
	selp.b32 	%r163, %r7783, %r7794, %p239;
	selp.b32 	%r164, %r7794, %r7787, %p239;
	st.global.v4.u32 	[%rd12], {%r161, %r163, %r162, %r164};
	bra.uni 	LBB0_125;
LBB0_126:                               // %L29475
	st.global.u32 	[%rd4], %r7809;
	ret;
LBB0_7:                                 // %L259
	mov.u32 	%r7808, 2;
	st.global.u32 	[%rd4], %r7808;
	mov.u64 	%rd126, exception2327;
	cvta.global.u64 	%rd127, %rd126;
	{ // callseq 16, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd127;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 16
	{ // callseq 17, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd33;
	st.param.b32 	[param0+8], %r165;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 17
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
LBB0_1:                                 // %L8
	mov.u64 	%rd54, exception1;
	cvta.global.u64 	%rd55, %rd54;
	{ // callseq 0, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd55;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 0
	{ // callseq 1, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd33;
	st.param.b32 	[param0+8], %r165;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 1
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
LBB0_128:                               // %L29574
	{ // callseq 3, 0
	.reg .b32 temp_param_reg;
	call.uni 
	julia_AssertionError_9575, 
	(
	);
	} // callseq 3
	mov.u64 	%rd63, exception1;
	cvta.global.u64 	%rd64, %rd63;
	{ // callseq 4, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd64;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 4
	{ // callseq 5, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd33;
	st.param.b32 	[param0+8], %r165;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 5
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
LBB0_127:                               // %L29571
	{ // callseq 7, 0
	.reg .b32 temp_param_reg;
	call.uni 
	julia_AssertionError_9575, 
	(
	);
	} // callseq 7
	mov.u64 	%rd69, exception1;
	cvta.global.u64 	%rd70, %rd69;
	{ // callseq 8, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd70;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 8
	{ // callseq 9, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd33;
	st.param.b32 	[param0+8], %r165;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 9
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
LBB0_153:                               // %L29568
	{ // callseq 13, 0
	.reg .b32 temp_param_reg;
	call.uni 
	julia_AssertionError_9575, 
	(
	);
	} // callseq 13
	mov.u64 	%rd83, exception1;
	cvta.global.u64 	%rd84, %rd83;
	{ // callseq 14, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd84;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 14
	{ // callseq 15, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd33;
	st.param.b32 	[param0+8], %r165;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 15
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
                                        // -- End function
}
