// PTX CompilerJob of MethodInstance for upchan(::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Float16x2, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int32, 1}) for sm_86, minthreads=512, blocks_per_sm=2

//
// Generated by LLVM NVPTX Back-End
//

.version 7.1
.target sm_86
.address_size 64

	// .globl	_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE // -- Begin function _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE
.func julia_AssertionError_9523
()
.noreturn
{
	trap;
}
.func gpu_report_exception
(
	.param .b64 gpu_report_exception_param_0
)
.noreturn
{
	trap;
}
.func gpu_signal_exception
(
	.param .align 8 .b8 gpu_signal_exception_param_0[8]
)
.noreturn
{
	trap;
}
.func  (.param .b64 func_retval0) julia_power_by_squaring_9534
(
	.param .align 8 .b8 julia_power_by_squaring_9534_param_0[8],
	.param .b64 julia_power_by_squaring_9534_param_1,
	.param .b64 julia_power_by_squaring_9534_param_2
)
.noreturn
{
	trap;
}
.extern .shared .align 32 .b8 shmem[];
.global .align 1 .b8 exception2325[6] = {101, 114, 114, 111, 114, 0};
.global .align 1 .b8 exception1[10] = {101, 120, 99, 101, 112, 116, 105, 111, 110, 0};
                                        // @_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE
.visible .entry _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE(
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_0[8],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_1[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_2[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_3[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_4[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_5[32]
)
.reqntid 512, 1, 1
.minnctapersm 2
{
	.reg .pred 	%p<222>;
	.reg .b16 	%rs<1185>;
	.reg .b32 	%r<7811>;
	.reg .f32 	%f<930>;
	.reg .b64 	%rd<87>;

// %bb.0:                               // %conversion
	ld.param.u64 	%rd21, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_0];
	// begin inline asm
	mov.u32 %r161, %dynamic_smem_size;
	// end inline asm
	setp.gt.u32 	%p1, %r161, 66815;
	@%p1 bra 	LBB0_2;
	bra.uni 	LBB0_1;
LBB0_2:                                 // %L10
	ld.param.u64 	%rd26, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_5];
	ld.param.u64 	%rd22, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_1];
	mov.u32 	%r1, %tid.x;
	mov.u32 	%r2, %ctaid.x;
	shl.b32 	%r162, %r2, 9;
	mov.u32 	%r3, %tid.y;
	shl.b32 	%r4, %r3, 5;
	or.b32  	%r163, %r162, %r1;
	or.b32  	%r164, %r163, %r4;
	mul.wide.u32 	%rd32, %r164, 4;
	add.s64 	%rd4, %rd26, %rd32;
	mov.u32 	%r165, 1;
	st.global.u32 	[%rd4], %r165;
	ld.global.u32 	%r5, [%rd22];
	and.b32  	%r166, %r5, -32513;
	setp.eq.s32 	%p2, %r166, 0;
	@%p2 bra 	LBB0_4;
	bra.uni 	LBB0_3;
LBB0_4:                                 // %pass71
	bfe.u32 	%r128, %r1, 1, 1;
	and.b32  	%r129, %r1, 1;
	bfe.u32 	%r131, %r1, 2, 1;
	shr.u32 	%r132, %r1, 4;
	shl.b32 	%r175, %r132, 1;
	shl.b32 	%r176, %r131, 2;
	shl.b32 	%r177, %r129, 3;
	shl.b32 	%r178, %r128, 4;
	or.b32  	%r179, %r177, %r178;
	or.b32  	%r180, %r176, %r179;
	or.b32  	%r181, %r175, %r180;
	bfe.u32 	%r134, %r1, 3, 1;
	or.b32  	%r135, %r134, %r181;
	or.b32  	%r136, %r135, 32;
	mov.f32 	%f185, 0f40000000;
	mov.f32 	%f186, 0f437F0000;
	div.approx.f32 	%f147, %f186, %f185;
	cvt.rn.f32.s32 	%f187, %r135;
	sub.f32 	%f188, %f187, %f147;
	mov.f32 	%f217, 0f42800000;
	div.approx.f32 	%f149, %f188, %f217;
	setp.ne.f32 	%p8, %f149, 0f00000000;
	mov.f32 	%f897, 0f3F800000;
	mov.f32 	%f890, %f897;
	@%p8 bra 	LBB0_5;
	bra.uni 	LBB0_6;
LBB0_5:                                 // %L466
	sin.approx.f32 	%f218, %f149;
	div.approx.f32 	%f890, %f218, %f149;
LBB0_6:                                 // %L469
	cvt.rn.f32.s32 	%f221, %r136;
	sub.f32 	%f222, %f221, %f147;
	div.approx.f32 	%f5, %f222, %f217;
	setp.eq.f32 	%p14, %f5, 0f00000000;
	mov.f32 	%f891, %f897;
	@%p14 bra 	LBB0_8;
// %bb.7:                               // %L486
	sin.approx.f32 	%f252, %f5;
	div.approx.f32 	%f891, %f252, %f5;
LBB0_8:                                 // %L489
	or.b32  	%r199, %r135, 64;
	or.b32  	%r7, %r135, 96;
	cvt.rn.f32.s32 	%f256, %r199;
	sub.f32 	%f257, %f256, %f147;
	div.approx.f32 	%f9, %f257, %f217;
	setp.eq.f32 	%p20, %f9, 0f00000000;
	mov.f32 	%f892, %f897;
	@%p20 bra 	LBB0_10;
// %bb.9:                               // %L567
	sin.approx.f32 	%f287, %f9;
	div.approx.f32 	%f892, %f287, %f9;
LBB0_10:                                // %L570
	cvt.rn.f32.s32 	%f290, %r7;
	sub.f32 	%f291, %f290, %f147;
	div.approx.f32 	%f14, %f291, %f217;
	setp.eq.f32 	%p26, %f14, 0f00000000;
	mov.f32 	%f893, %f897;
	@%p26 bra 	LBB0_12;
// %bb.11:                              // %L587
	sin.approx.f32 	%f321, %f14;
	div.approx.f32 	%f893, %f321, %f14;
LBB0_12:                                // %L590
	shl.b32 	%r122, %r1, 2;
	or.b32  	%r217, %r135, 128;
	or.b32  	%r9, %r135, 160;
	cvt.rn.f32.s32 	%f325, %r217;
	sub.f32 	%f326, %f325, %f147;
	div.approx.f32 	%f18, %f326, %f217;
	setp.eq.f32 	%p32, %f18, 0f00000000;
	mov.f32 	%f894, %f897;
	@%p32 bra 	LBB0_14;
// %bb.13:                              // %L668
	sin.approx.f32 	%f356, %f18;
	div.approx.f32 	%f894, %f356, %f18;
LBB0_14:                                // %L671
	shl.b32 	%r168, %r1, 1;
	and.b32  	%r123, %r122, 32;
	and.b32  	%r171, %r1, 18;
	cvt.rn.f32.s32 	%f359, %r9;
	sub.f32 	%f360, %f359, %f147;
	div.approx.f32 	%f23, %f360, %f217;
	setp.eq.f32 	%p38, %f23, 0f00000000;
	mov.f32 	%f895, %f897;
	@%p38 bra 	LBB0_16;
// %bb.15:                              // %L688
	sin.approx.f32 	%f390, %f23;
	div.approx.f32 	%f895, %f390, %f23;
LBB0_16:                                // %L691
	and.b32  	%r169, %r168, 8;
	or.b32  	%r172, %r171, %r123;
	or.b32  	%r235, %r135, 192;
	or.b32  	%r11, %r135, 224;
	cvt.rn.f32.s32 	%f394, %r235;
	sub.f32 	%f395, %f394, %f147;
	div.approx.f32 	%f27, %f395, %f217;
	setp.eq.f32 	%p44, %f27, 0f00000000;
	mov.f32 	%f896, %f897;
	@%p44 bra 	LBB0_18;
// %bb.17:                              // %L769
	sin.approx.f32 	%f425, %f27;
	div.approx.f32 	%f896, %f425, %f27;
LBB0_18:                                // %L772
	and.b32  	%r170, %r122, 4;
	or.b32  	%r173, %r172, %r169;
	cvt.rn.f32.s32 	%f428, %r11;
	sub.f32 	%f429, %f428, %f147;
	div.approx.f32 	%f32, %f429, %f217;
	setp.eq.f32 	%p50, %f32, 0f00000000;
	@%p50 bra 	LBB0_20;
// %bb.19:                              // %L789
	sin.approx.f32 	%f459, %f32;
	div.approx.f32 	%f897, %f459, %f32;
LBB0_20:                                // %L792
	or.b32  	%r174, %r173, %r170;
	mul.lo.s32 	%r13, %r135, 63;
	cvt.rn.f32.s32 	%f462, %r13;
	div.approx.f32 	%f35, %f462, %f217;
	abs.f32 	%f900, %f35;
	setp.lt.f32 	%p51, %f900, 0f40000000;
	@%p51 bra 	LBB0_32;
// %bb.21:
	setp.gtu.f32 	%p52, %f900, 0f4B800000;
	@%p52 bra 	LBB0_28;
	bra.uni 	LBB0_22;
LBB0_28:
	mov.b32 	%r15, %f900;
	and.b32  	%r253, %r15, 8388607;
	or.b32  	%r7769, %r253, 1065353216;
	mov.b32 	%f899, %r7769;
	add.s32 	%r254, %r15, -1073741824;
	and.b32  	%r7770, %r254, -8388608;
	setp.eq.s32 	%p58, %r7770, 0;
	@%p58 bra 	LBB0_31;
// %bb.29:                              // %__nv_fmaf_rn.exit4.i.i.i.preheader
	mov.f32 	%f473, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f472,%f473;
	// end inline asm
LBB0_30:                                // %__nv_fmaf_rn.exit4.i.i.i
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r255, %r7770, 192937984;
	add.s32 	%r256, %r255, %r7769;
	mov.b32 	%f474, %r256;
	mul.f32 	%f475, %f472, %f474;
	sub.f32 	%f476, %f474, %f475;
	fma.rn.f32 	%f477, %f476, %f472, %f475;
	sub.f32 	%f478, %f474, %f477;
	fma.rz.f32 	%f479, %f478, %f472, %f477;
	cvt.rzi.f32.f32 	%f480, %f479;
	sub.f32 	%f899, %f474, %f480;
	sub.s32 	%r7770, %r7770, %r255;
	mov.b32 	%r7769, %f899;
	setp.ne.s32 	%p59, %r7770, 0;
	setp.ne.s32 	%p60, %r7769, 0;
	and.pred  	%p61, %p59, %p60;
	@%p61 bra 	LBB0_30;
LBB0_31:                                // %__internal_fmodf_slowpath_mod.exit.i.i
	setp.gt.u32 	%p62, %r15, 2139095039;
	selp.f32 	%f481, 0f7FFFFFFF, 0f4B800000, %p62;
	mul.f32 	%f482, %f899, 0f34000000;
	mul.f32 	%f900, %f481, %f482;
	bra.uni 	LBB0_32;
LBB0_22:                                // %__nv_fast_fdividef.exit.i.i.i
	div.approx.f32 	%f465, %f900, %f185;
	cvt.rzi.f32.f32 	%f898, %f465;
	fma.rn.f32 	%f38, %f898, 0fC0000000, %f900;
	mov.b32 	%r14, %f38;
	setp.lt.u32 	%p53, %r14, 1073741824;
	@%p53 bra 	LBB0_27;
// %bb.23:
	setp.lt.u32 	%p54, %r14, -2147483647;
	@%p54 bra 	LBB0_25;
// %bb.24:
	add.f32 	%f470, %f898, 0fBF800000;
	setp.lt.f32 	%p57, %f38, 0fC0000000;
	add.f32 	%f471, %f470, 0fBF800000;
	selp.f32 	%f898, %f471, %f470, %p57;
	bra.uni 	LBB0_27;
LBB0_25:
	add.f32 	%f898, %f898, 0f3F800000;
	setp.ltu.f32 	%p55, %f38, 0f40800000;
	@%p55 bra 	LBB0_27;
// %bb.26:                              // %__nv_fmaf_rn.exit.i.i.i
	add.f32 	%f466, %f898, 0f3F800000;
	fma.rn.f32 	%f468, %f185, 0fC0400000, %f38;
	setp.ge.f32 	%p56, %f468, 0f00000000;
	add.f32 	%f469, %f466, 0f3F800000;
	selp.f32 	%f898, %f469, %f466, %p56;
LBB0_27:                                // %__internal_fmodf_fastpath_quot.exit.i.i
	fma.rn.f32 	%f900, %f898, 0fC0000000, %f900;
LBB0_32:                                // %__internal_fmodf_kernel.exit.i
	shr.u32 	%r125, %r174, 1;
	abs.f32 	%f483, %f900;
	setp.gtu.f32 	%p63, %f483, 0f7F800000;
	@%p63 bra 	LBB0_34;
// %bb.33:
	mov.b32 	%r257, %f35;
	and.b32  	%r258, %r257, -2147483648;
	mov.b32 	%r259, %f900;
	or.b32  	%r260, %r258, %r259;
	mov.b32 	%f900, %r260;
LBB0_34:                                // %__nv_fmodf.exit
	ld.param.u64 	%rd1, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_2];
	mul.wide.u32 	%rd35, %r125, 4;
	add.s32 	%r269, %r13, 2016;
	cvt.rn.f32.s32 	%f515, %r269;
	div.approx.f32 	%f54, %f515, %f217;
	abs.f32 	%f904, %f54;
	setp.lt.f32 	%p71, %f904, 0f40000000;
	@%p71 bra 	LBB0_46;
// %bb.35:
	setp.gtu.f32 	%p72, %f904, 0f4B800000;
	@%p72 bra 	LBB0_42;
	bra.uni 	LBB0_36;
LBB0_42:
	mov.b32 	%r23, %f904;
	and.b32  	%r270, %r23, 8388607;
	or.b32  	%r7771, %r270, 1065353216;
	mov.b32 	%f903, %r7771;
	add.s32 	%r271, %r23, -1073741824;
	and.b32  	%r7772, %r271, -8388608;
	setp.eq.s32 	%p78, %r7772, 0;
	@%p78 bra 	LBB0_45;
// %bb.43:                              // %__nv_fmaf_rn.exit4.i.i.i1136.preheader
	mov.f32 	%f526, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f525,%f526;
	// end inline asm
LBB0_44:                                // %__nv_fmaf_rn.exit4.i.i.i1136
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r272, %r7772, 192937984;
	add.s32 	%r273, %r272, %r7771;
	mov.b32 	%f527, %r273;
	mul.f32 	%f528, %f525, %f527;
	sub.f32 	%f529, %f527, %f528;
	fma.rn.f32 	%f530, %f529, %f525, %f528;
	sub.f32 	%f531, %f527, %f530;
	fma.rz.f32 	%f532, %f531, %f525, %f530;
	cvt.rzi.f32.f32 	%f533, %f532;
	sub.f32 	%f903, %f527, %f533;
	sub.s32 	%r7772, %r7772, %r272;
	mov.b32 	%r7771, %f903;
	setp.ne.s32 	%p79, %r7772, 0;
	setp.ne.s32 	%p80, %r7771, 0;
	and.pred  	%p81, %p79, %p80;
	@%p81 bra 	LBB0_44;
LBB0_45:                                // %__internal_fmodf_slowpath_mod.exit.i.i1138
	setp.gt.u32 	%p82, %r23, 2139095039;
	selp.f32 	%f534, 0f7FFFFFFF, 0f4B800000, %p82;
	mul.f32 	%f535, %f903, 0f34000000;
	mul.f32 	%f904, %f534, %f535;
	bra.uni 	LBB0_46;
LBB0_36:                                // %__nv_fast_fdividef.exit.i.i.i1108
	div.approx.f32 	%f518, %f904, %f185;
	cvt.rzi.f32.f32 	%f902, %f518;
	fma.rn.f32 	%f57, %f902, 0fC0000000, %f904;
	mov.b32 	%r22, %f57;
	setp.lt.u32 	%p73, %r22, 1073741824;
	@%p73 bra 	LBB0_41;
// %bb.37:
	setp.lt.u32 	%p74, %r22, -2147483647;
	@%p74 bra 	LBB0_39;
// %bb.38:
	add.f32 	%f523, %f902, 0fBF800000;
	setp.lt.f32 	%p77, %f57, 0fC0000000;
	add.f32 	%f524, %f523, 0fBF800000;
	selp.f32 	%f902, %f524, %f523, %p77;
	bra.uni 	LBB0_41;
LBB0_39:
	add.f32 	%f902, %f902, 0f3F800000;
	setp.ltu.f32 	%p75, %f57, 0f40800000;
	@%p75 bra 	LBB0_41;
// %bb.40:                              // %__nv_fmaf_rn.exit.i.i.i1113
	add.f32 	%f519, %f902, 0f3F800000;
	fma.rn.f32 	%f521, %f185, 0fC0400000, %f57;
	setp.ge.f32 	%p76, %f521, 0f00000000;
	add.f32 	%f522, %f519, 0f3F800000;
	selp.f32 	%f902, %f522, %f519, %p76;
LBB0_41:                                // %__internal_fmodf_fastpath_quot.exit.i.i1117
	fma.rn.f32 	%f904, %f902, 0fC0000000, %f904;
LBB0_46:                                // %__internal_fmodf_kernel.exit.i1142
	add.s64 	%rd36, %rd1, %rd35;
	abs.f32 	%f536, %f904;
	setp.gtu.f32 	%p83, %f536, 0f7F800000;
	@%p83 bra 	LBB0_48;
// %bb.47:
	mov.b32 	%r274, %f54;
	and.b32  	%r275, %r274, -2147483648;
	mov.b32 	%r276, %f904;
	or.b32  	%r277, %r275, %r276;
	mov.b32 	%f904, %r277;
LBB0_48:                                // %__nv_fmodf.exit1143
	ld.global.u32 	%r126, [%rd36];
	mov.u64 	%rd37, 2;
	mov.u64 	%rd38, 6;
	{ // callseq 4, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd21;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd37;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd38;
	.param .b64 retval0;
	call.uni (retval0), 
	julia_power_by_squaring_9534, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64 	%rd39, [retval0+0];
	} // callseq 4
	setp.ne.s64 	%p91, %rd39, 64;
	@%p91 bra 	LBB0_119;
// %bb.49:                              // %L889
	shr.u32 	%r130, %r1, 2;
	and.b32  	%r292, %r1, 3;
	shl.b32 	%r293, %r292, 1;
	neg.s32 	%r32, %r293;
	mul.lo.s32 	%r33, %r32, %r130;
	cvt.rn.f32.s32 	%f71, %r33;
	mov.f32 	%f570, 0f41000000;
	div.approx.f32 	%f72, %f71, %f570;
	abs.f32 	%f908, %f72;
	setp.lt.f32 	%p92, %f908, 0f40000000;
	@%p92 bra 	LBB0_61;
// %bb.50:
	setp.gtu.f32 	%p93, %f908, 0f4B800000;
	@%p93 bra 	LBB0_57;
	bra.uni 	LBB0_51;
LBB0_57:
	mov.b32 	%r35, %f908;
	and.b32  	%r294, %r35, 8388607;
	or.b32  	%r7773, %r294, 1065353216;
	mov.b32 	%f907, %r7773;
	add.s32 	%r295, %r35, -1073741824;
	and.b32  	%r7774, %r295, -8388608;
	setp.eq.s32 	%p99, %r7774, 0;
	@%p99 bra 	LBB0_60;
// %bb.58:                              // %__nv_fmaf_rn.exit4.i.i.i1182.preheader
	mov.f32 	%f580, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f579,%f580;
	// end inline asm
LBB0_59:                                // %__nv_fmaf_rn.exit4.i.i.i1182
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r296, %r7774, 192937984;
	add.s32 	%r297, %r296, %r7773;
	mov.b32 	%f581, %r297;
	mul.f32 	%f582, %f579, %f581;
	sub.f32 	%f583, %f581, %f582;
	fma.rn.f32 	%f584, %f583, %f579, %f582;
	sub.f32 	%f585, %f581, %f584;
	fma.rz.f32 	%f586, %f585, %f579, %f584;
	cvt.rzi.f32.f32 	%f587, %f586;
	sub.f32 	%f907, %f581, %f587;
	sub.s32 	%r7774, %r7774, %r296;
	mov.b32 	%r7773, %f907;
	setp.ne.s32 	%p100, %r7774, 0;
	setp.ne.s32 	%p101, %r7773, 0;
	and.pred  	%p102, %p100, %p101;
	@%p102 bra 	LBB0_59;
LBB0_60:                                // %__internal_fmodf_slowpath_mod.exit.i.i1184
	setp.gt.u32 	%p103, %r35, 2139095039;
	selp.f32 	%f588, 0f7FFFFFFF, 0f4B800000, %p103;
	mul.f32 	%f589, %f907, 0f34000000;
	mul.f32 	%f908, %f588, %f589;
	bra.uni 	LBB0_61;
LBB0_51:                                // %__nv_fast_fdividef.exit.i.i.i1154
	div.approx.f32 	%f572, %f908, %f185;
	cvt.rzi.f32.f32 	%f906, %f572;
	fma.rn.f32 	%f75, %f906, 0fC0000000, %f908;
	mov.b32 	%r34, %f75;
	setp.lt.u32 	%p94, %r34, 1073741824;
	@%p94 bra 	LBB0_56;
// %bb.52:
	setp.lt.u32 	%p95, %r34, -2147483647;
	@%p95 bra 	LBB0_54;
// %bb.53:
	add.f32 	%f577, %f906, 0fBF800000;
	setp.lt.f32 	%p98, %f75, 0fC0000000;
	add.f32 	%f578, %f577, 0fBF800000;
	selp.f32 	%f906, %f578, %f577, %p98;
	bra.uni 	LBB0_56;
LBB0_54:
	add.f32 	%f906, %f906, 0f3F800000;
	setp.ltu.f32 	%p96, %f75, 0f40800000;
	@%p96 bra 	LBB0_56;
// %bb.55:                              // %__nv_fmaf_rn.exit.i.i.i1159
	add.f32 	%f573, %f906, 0f3F800000;
	fma.rn.f32 	%f575, %f185, 0fC0400000, %f75;
	setp.ge.f32 	%p97, %f575, 0f00000000;
	add.f32 	%f576, %f573, 0f3F800000;
	selp.f32 	%f906, %f576, %f573, %p97;
LBB0_56:                                // %__internal_fmodf_fastpath_quot.exit.i.i1163
	fma.rn.f32 	%f908, %f906, 0fC0000000, %f908;
LBB0_61:                                // %__internal_fmodf_kernel.exit.i1188
	abs.f32 	%f590, %f908;
	setp.gtu.f32 	%p104, %f590, 0f7F800000;
	@%p104 bra 	LBB0_63;
// %bb.62:
	mov.b32 	%r298, %f72;
	and.b32  	%r299, %r298, -2147483648;
	mov.b32 	%r300, %f908;
	or.b32  	%r301, %r299, %r300;
	mov.b32 	%f908, %r301;
LBB0_63:                                // %__nv_fmodf.exit1189
	shl.b32 	%r310, %r130, 3;
	sub.s32 	%r311, %r33, %r310;
	cvt.rn.f32.s32 	%f91, %r311;
	div.approx.f32 	%f92, %f91, %f570;
	abs.f32 	%f912, %f92;
	setp.lt.f32 	%p112, %f912, 0f40000000;
	@%p112 bra 	LBB0_75;
// %bb.64:
	setp.gtu.f32 	%p113, %f912, 0f4B800000;
	@%p113 bra 	LBB0_71;
	bra.uni 	LBB0_65;
LBB0_71:
	mov.b32 	%r43, %f912;
	and.b32  	%r312, %r43, 8388607;
	or.b32  	%r7775, %r312, 1065353216;
	mov.b32 	%f911, %r7775;
	add.s32 	%r313, %r43, -1073741824;
	and.b32  	%r7776, %r313, -8388608;
	setp.eq.s32 	%p119, %r7776, 0;
	@%p119 bra 	LBB0_74;
// %bb.72:                              // %__nv_fmaf_rn.exit4.i.i.i1228.preheader
	mov.f32 	%f632, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f631,%f632;
	// end inline asm
LBB0_73:                                // %__nv_fmaf_rn.exit4.i.i.i1228
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r314, %r7776, 192937984;
	add.s32 	%r315, %r314, %r7775;
	mov.b32 	%f633, %r315;
	mul.f32 	%f634, %f631, %f633;
	sub.f32 	%f635, %f633, %f634;
	fma.rn.f32 	%f636, %f635, %f631, %f634;
	sub.f32 	%f637, %f633, %f636;
	fma.rz.f32 	%f638, %f637, %f631, %f636;
	cvt.rzi.f32.f32 	%f639, %f638;
	sub.f32 	%f911, %f633, %f639;
	sub.s32 	%r7776, %r7776, %r314;
	mov.b32 	%r7775, %f911;
	setp.ne.s32 	%p120, %r7776, 0;
	setp.ne.s32 	%p121, %r7775, 0;
	and.pred  	%p122, %p120, %p121;
	@%p122 bra 	LBB0_73;
LBB0_74:                                // %__internal_fmodf_slowpath_mod.exit.i.i1230
	setp.gt.u32 	%p123, %r43, 2139095039;
	selp.f32 	%f640, 0f7FFFFFFF, 0f4B800000, %p123;
	mul.f32 	%f641, %f911, 0f34000000;
	mul.f32 	%f912, %f640, %f641;
	bra.uni 	LBB0_75;
LBB0_65:                                // %__nv_fast_fdividef.exit.i.i.i1200
	div.approx.f32 	%f624, %f912, %f185;
	cvt.rzi.f32.f32 	%f910, %f624;
	fma.rn.f32 	%f95, %f910, 0fC0000000, %f912;
	mov.b32 	%r42, %f95;
	setp.lt.u32 	%p114, %r42, 1073741824;
	@%p114 bra 	LBB0_70;
// %bb.66:
	setp.lt.u32 	%p115, %r42, -2147483647;
	@%p115 bra 	LBB0_68;
// %bb.67:
	add.f32 	%f629, %f910, 0fBF800000;
	setp.lt.f32 	%p118, %f95, 0fC0000000;
	add.f32 	%f630, %f629, 0fBF800000;
	selp.f32 	%f910, %f630, %f629, %p118;
	bra.uni 	LBB0_70;
LBB0_68:
	add.f32 	%f910, %f910, 0f3F800000;
	setp.ltu.f32 	%p116, %f95, 0f40800000;
	@%p116 bra 	LBB0_70;
// %bb.69:                              // %__nv_fmaf_rn.exit.i.i.i1205
	add.f32 	%f625, %f910, 0f3F800000;
	fma.rn.f32 	%f627, %f185, 0fC0400000, %f95;
	setp.ge.f32 	%p117, %f627, 0f00000000;
	add.f32 	%f628, %f625, 0f3F800000;
	selp.f32 	%f910, %f628, %f625, %p117;
LBB0_70:                                // %__internal_fmodf_fastpath_quot.exit.i.i1209
	fma.rn.f32 	%f912, %f910, 0fC0000000, %f912;
LBB0_75:                                // %__internal_fmodf_kernel.exit.i1234
	abs.f32 	%f642, %f912;
	setp.gtu.f32 	%p124, %f642, 0f7F800000;
	@%p124 bra 	LBB0_77;
// %bb.76:
	mov.b32 	%r316, %f92;
	and.b32  	%r317, %r316, -2147483648;
	mov.b32 	%r318, %f912;
	or.b32  	%r319, %r317, %r318;
	mov.b32 	%f912, %r319;
LBB0_77:                                // %__nv_fmodf.exit1235
	{ // callseq 8, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd21;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd37;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd38;
	.param .b64 retval0;
	call.uni (retval0), 
	julia_power_by_squaring_9534, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64 	%rd45, [retval0+0];
	} // callseq 8
	setp.ne.s64 	%p132, %rd45, 64;
	@%p132 bra 	LBB0_118;
// %bb.78:                              // %L1027
	{ // callseq 12, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd21;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd37;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd38;
	.param .b64 retval0;
	call.uni (retval0), 
	julia_power_by_squaring_9534, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64 	%rd51, [retval0+0];
	} // callseq 12
	cvt.rn.f32.s64 	%f676, %rd51;
	div.approx.f32 	%f109, %f71, %f676;
	abs.f32 	%f924, %f109;
	setp.lt.f32 	%p133, %f924, 0f40000000;
	@%p133 bra 	LBB0_127;
// %bb.79:
	setp.gtu.f32 	%p134, %f924, 0f4B800000;
	@%p134 bra 	LBB0_123;
	bra.uni 	LBB0_80;
LBB0_123:
	mov.b32 	%r138, %f924;
	and.b32  	%r340, %r138, 8388607;
	or.b32  	%r7807, %r340, 1065353216;
	mov.b32 	%f923, %r7807;
	add.s32 	%r341, %r138, -1073741824;
	and.b32  	%r7808, %r341, -8388608;
	setp.eq.s32 	%p140, %r7808, 0;
	@%p140 bra 	LBB0_126;
// %bb.124:                             // %__nv_fmaf_rn.exit4.i.i.i1366.preheader
	mov.f32 	%f686, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f685,%f686;
	// end inline asm
LBB0_125:                               // %__nv_fmaf_rn.exit4.i.i.i1366
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r342, %r7808, 192937984;
	add.s32 	%r343, %r342, %r7807;
	mov.b32 	%f687, %r343;
	mul.f32 	%f688, %f685, %f687;
	sub.f32 	%f689, %f687, %f688;
	fma.rn.f32 	%f690, %f689, %f685, %f688;
	sub.f32 	%f691, %f687, %f690;
	fma.rz.f32 	%f692, %f691, %f685, %f690;
	cvt.rzi.f32.f32 	%f693, %f692;
	sub.f32 	%f923, %f687, %f693;
	sub.s32 	%r7808, %r7808, %r342;
	mov.b32 	%r7807, %f923;
	setp.ne.s32 	%p141, %r7808, 0;
	setp.ne.s32 	%p142, %r7807, 0;
	and.pred  	%p143, %p141, %p142;
	@%p143 bra 	LBB0_125;
LBB0_126:                               // %__internal_fmodf_slowpath_mod.exit.i.i1368
	setp.gt.u32 	%p144, %r138, 2139095039;
	selp.f32 	%f694, 0f7FFFFFFF, 0f4B800000, %p144;
	mul.f32 	%f695, %f923, 0f34000000;
	mul.f32 	%f924, %f694, %f695;
	bra.uni 	LBB0_127;
LBB0_80:                                // %__nv_fast_fdividef.exit.i.i.i1338
	div.approx.f32 	%f678, %f924, %f185;
	cvt.rzi.f32.f32 	%f922, %f678;
	fma.rn.f32 	%f151, %f922, 0fC0000000, %f924;
	mov.b32 	%r137, %f151;
	setp.lt.u32 	%p135, %r137, 1073741824;
	@%p135 bra 	LBB0_122;
// %bb.81:
	setp.lt.u32 	%p136, %r137, -2147483647;
	@%p136 bra 	LBB0_120;
// %bb.82:
	add.f32 	%f683, %f922, 0fBF800000;
	setp.lt.f32 	%p139, %f151, 0fC0000000;
	add.f32 	%f684, %f683, 0fBF800000;
	selp.f32 	%f922, %f684, %f683, %p139;
	bra.uni 	LBB0_122;
LBB0_120:
	add.f32 	%f922, %f922, 0f3F800000;
	setp.ltu.f32 	%p137, %f151, 0f40800000;
	@%p137 bra 	LBB0_122;
// %bb.121:                             // %__nv_fmaf_rn.exit.i.i.i1343
	add.f32 	%f679, %f922, 0f3F800000;
	fma.rn.f32 	%f681, %f185, 0fC0400000, %f151;
	setp.ge.f32 	%p138, %f681, 0f00000000;
	add.f32 	%f682, %f679, 0f3F800000;
	selp.f32 	%f922, %f682, %f679, %p138;
LBB0_122:                               // %__internal_fmodf_fastpath_quot.exit.i.i1347
	fma.rn.f32 	%f924, %f922, 0fC0000000, %f924;
LBB0_127:                               // %__internal_fmodf_kernel.exit.i1372
	abs.f32 	%f696, %f924;
	setp.gtu.f32 	%p145, %f696, 0f7F800000;
	@%p145 bra 	LBB0_129;
// %bb.128:
	mov.b32 	%r344, %f109;
	and.b32  	%r345, %r344, -2147483648;
	mov.b32 	%r346, %f924;
	or.b32  	%r347, %r345, %r346;
	mov.b32 	%f924, %r347;
LBB0_129:                               // %__nv_fmodf.exit1373
	{ // callseq 13, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd21;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd37;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd38;
	.param .b64 retval0;
	call.uni (retval0), 
	julia_power_by_squaring_9534, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64 	%rd55, [retval0+0];
	} // callseq 13
	cvt.rn.f32.s64 	%f728, %rd55;
	div.approx.f32 	%f167, %f91, %f728;
	abs.f32 	%f928, %f167;
	setp.lt.f32 	%p153, %f928, 0f40000000;
	@%p153 bra 	LBB0_141;
// %bb.130:
	setp.gtu.f32 	%p154, %f928, 0f4B800000;
	@%p154 bra 	LBB0_137;
	bra.uni 	LBB0_131;
LBB0_137:
	mov.b32 	%r146, %f928;
	and.b32  	%r356, %r146, 8388607;
	or.b32  	%r7809, %r356, 1065353216;
	mov.b32 	%f927, %r7809;
	add.s32 	%r357, %r146, -1073741824;
	and.b32  	%r7810, %r357, -8388608;
	setp.eq.s32 	%p160, %r7810, 0;
	@%p160 bra 	LBB0_140;
// %bb.138:                             // %__nv_fmaf_rn.exit4.i.i.i1412.preheader
	mov.f32 	%f738, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f737,%f738;
	// end inline asm
LBB0_139:                               // %__nv_fmaf_rn.exit4.i.i.i1412
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r358, %r7810, 192937984;
	add.s32 	%r359, %r358, %r7809;
	mov.b32 	%f739, %r359;
	mul.f32 	%f740, %f737, %f739;
	sub.f32 	%f741, %f739, %f740;
	fma.rn.f32 	%f742, %f741, %f737, %f740;
	sub.f32 	%f743, %f739, %f742;
	fma.rz.f32 	%f744, %f743, %f737, %f742;
	cvt.rzi.f32.f32 	%f745, %f744;
	sub.f32 	%f927, %f739, %f745;
	sub.s32 	%r7810, %r7810, %r358;
	mov.b32 	%r7809, %f927;
	setp.ne.s32 	%p161, %r7810, 0;
	setp.ne.s32 	%p162, %r7809, 0;
	and.pred  	%p163, %p161, %p162;
	@%p163 bra 	LBB0_139;
LBB0_140:                               // %__internal_fmodf_slowpath_mod.exit.i.i1414
	setp.gt.u32 	%p164, %r146, 2139095039;
	selp.f32 	%f746, 0f7FFFFFFF, 0f4B800000, %p164;
	mul.f32 	%f747, %f927, 0f34000000;
	mul.f32 	%f928, %f746, %f747;
	bra.uni 	LBB0_141;
LBB0_131:                               // %__nv_fast_fdividef.exit.i.i.i1384
	div.approx.f32 	%f730, %f928, %f185;
	cvt.rzi.f32.f32 	%f926, %f730;
	fma.rn.f32 	%f170, %f926, 0fC0000000, %f928;
	mov.b32 	%r145, %f170;
	setp.lt.u32 	%p155, %r145, 1073741824;
	@%p155 bra 	LBB0_136;
// %bb.132:
	setp.lt.u32 	%p156, %r145, -2147483647;
	@%p156 bra 	LBB0_134;
// %bb.133:
	add.f32 	%f735, %f926, 0fBF800000;
	setp.lt.f32 	%p159, %f170, 0fC0000000;
	add.f32 	%f736, %f735, 0fBF800000;
	selp.f32 	%f926, %f736, %f735, %p159;
	bra.uni 	LBB0_136;
LBB0_134:
	add.f32 	%f926, %f926, 0f3F800000;
	setp.ltu.f32 	%p157, %f170, 0f40800000;
	@%p157 bra 	LBB0_136;
// %bb.135:                             // %__nv_fmaf_rn.exit.i.i.i1389
	add.f32 	%f731, %f926, 0f3F800000;
	fma.rn.f32 	%f733, %f185, 0fC0400000, %f170;
	setp.ge.f32 	%p158, %f733, 0f00000000;
	add.f32 	%f734, %f731, 0f3F800000;
	selp.f32 	%f926, %f734, %f731, %p158;
LBB0_136:                               // %__internal_fmodf_fastpath_quot.exit.i.i1393
	fma.rn.f32 	%f928, %f926, 0fC0000000, %f928;
LBB0_141:                               // %__internal_fmodf_kernel.exit.i1418
	abs.f32 	%f748, %f928;
	setp.gtu.f32 	%p165, %f748, 0f7F800000;
	@%p165 bra 	LBB0_143;
// %bb.142:
	mov.b32 	%r360, %f167;
	and.b32  	%r361, %r360, -2147483648;
	mov.b32 	%r362, %f928;
	or.b32  	%r363, %r361, %r362;
	mov.b32 	%f928, %r363;
LBB0_143:                               // %__nv_fmodf.exit1419
	{ // callseq 14, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd21;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd37;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd38;
	.param .b64 retval0;
	call.uni (retval0), 
	julia_power_by_squaring_9534, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64 	%rd59, [retval0+0];
	} // callseq 14
	setp.eq.s64 	%p173, %rd59, 64;
	@%p173 bra 	LBB0_83;
	bra.uni 	LBB0_144;
LBB0_83:                                // %L1110
	mov.f32 	%f189, 0f43808000;
	div.approx.f32 	%f190, %f188, %f189;
	div.approx.f32 	%f224, %f222, %f189;
	div.approx.f32 	%f259, %f257, %f189;
	div.approx.f32 	%f293, %f291, %f189;
	div.approx.f32 	%f328, %f326, %f189;
	div.approx.f32 	%f362, %f360, %f189;
	div.approx.f32 	%f397, %f395, %f189;
	div.approx.f32 	%f431, %f429, %f189;
	abs.f32 	%f191, %f190;
	abs.f32 	%f225, %f224;
	abs.f32 	%f260, %f259;
	abs.f32 	%f294, %f293;
	abs.f32 	%f329, %f328;
	abs.f32 	%f363, %f362;
	abs.f32 	%f398, %f397;
	abs.f32 	%f432, %f431;
	add.f32 	%f591, %f908, %f908;
	add.f32 	%f643, %f912, %f912;
	setp.gt.f32 	%p3, %f191, 0f4B800000;
	mul.f32 	%f192, %f190, 0f00000000;
	setp.gt.f32 	%p9, %f225, 0f4B800000;
	mul.f32 	%f226, %f224, 0f00000000;
	setp.gt.f32 	%p15, %f260, 0f4B800000;
	mul.f32 	%f261, %f259, 0f00000000;
	setp.gt.f32 	%p21, %f294, 0f4B800000;
	mul.f32 	%f295, %f293, 0f00000000;
	setp.gt.f32 	%p27, %f329, 0f4B800000;
	mul.f32 	%f330, %f328, 0f00000000;
	setp.gt.f32 	%p33, %f363, 0f4B800000;
	mul.f32 	%f364, %f362, 0f00000000;
	setp.gt.f32 	%p39, %f398, 0f4B800000;
	mul.f32 	%f399, %f397, 0f00000000;
	setp.gt.f32 	%p45, %f432, 0f4B800000;
	mul.f32 	%f433, %f431, 0f00000000;
	add.f32 	%f484, %f900, %f900;
	add.f32 	%f537, %f904, %f904;
	mov.b32 	%r302, %f591;
	mov.b32 	%r332, %f643;
	selp.f32 	%f193, %f192, %f190, %p3;
	selp.f32 	%f227, %f226, %f224, %p9;
	selp.f32 	%f262, %f261, %f259, %p15;
	selp.f32 	%f296, %f295, %f293, %p21;
	selp.f32 	%f331, %f330, %f328, %p27;
	selp.f32 	%f365, %f364, %f362, %p33;
	selp.f32 	%f400, %f399, %f397, %p39;
	selp.f32 	%f434, %f433, %f431, %p45;
	mov.b32 	%r261, %f484;
	mov.b32 	%r284, %f537;
	and.b32  	%r303, %r302, -2147483648;
	and.b32  	%r333, %r332, -2147483648;
	add.f32 	%f697, %f924, %f924;
	add.f32 	%f194, %f193, %f193;
	add.f32 	%f228, %f227, %f227;
	add.f32 	%f263, %f262, %f262;
	add.f32 	%f297, %f296, %f296;
	add.f32 	%f332, %f331, %f331;
	add.f32 	%f366, %f365, %f365;
	add.f32 	%f401, %f400, %f400;
	add.f32 	%f435, %f434, %f434;
	and.b32  	%r262, %r261, -2147483648;
	and.b32  	%r285, %r284, -2147483648;
	or.b32  	%r304, %r303, 1056964608;
	or.b32  	%r334, %r333, 1056964608;
	mov.b32 	%r348, %f697;
	mov.b32 	%r182, %f194;
	mov.b32 	%r189, %f228;
	mov.b32 	%r200, %f263;
	mov.b32 	%r207, %f297;
	mov.b32 	%r218, %f332;
	mov.b32 	%r225, %f366;
	mov.b32 	%r236, %f401;
	mov.b32 	%r243, %f435;
	or.b32  	%r263, %r262, 1056964608;
	or.b32  	%r286, %r285, 1056964608;
	mov.b32 	%f592, %r304;
	mov.b32 	%f644, %r334;
	and.b32  	%r349, %r348, -2147483648;
	and.b32  	%r183, %r182, -2147483648;
	and.b32  	%r190, %r189, -2147483648;
	and.b32  	%r201, %r200, -2147483648;
	and.b32  	%r208, %r207, -2147483648;
	and.b32  	%r219, %r218, -2147483648;
	and.b32  	%r226, %r225, -2147483648;
	and.b32  	%r237, %r236, -2147483648;
	and.b32  	%r244, %r243, -2147483648;
	mov.b32 	%f485, %r263;
	mov.b32 	%f538, %r286;
	add.f32 	%f593, %f591, %f592;
	abs.f32 	%f595, %f591;
	add.f32 	%f645, %f643, %f644;
	abs.f32 	%f647, %f643;
	or.b32  	%r350, %r349, 1056964608;
	or.b32  	%r184, %r183, 1056964608;
	or.b32  	%r191, %r190, 1056964608;
	or.b32  	%r202, %r201, 1056964608;
	or.b32  	%r209, %r208, 1056964608;
	or.b32  	%r220, %r219, 1056964608;
	or.b32  	%r227, %r226, 1056964608;
	or.b32  	%r238, %r237, 1056964608;
	or.b32  	%r245, %r244, 1056964608;
	add.f32 	%f486, %f484, %f485;
	abs.f32 	%f488, %f484;
	add.f32 	%f539, %f537, %f538;
	abs.f32 	%f541, %f537;
	cvt.rzi.f32.f32 	%f594, %f593;
	setp.gt.f32 	%p105, %f595, 0f4B000000;
	cvt.rzi.f32.f32 	%f646, %f645;
	setp.gt.f32 	%p125, %f647, 0f4B000000;
	mov.b32 	%f698, %r350;
	mov.b32 	%f195, %r184;
	mov.b32 	%f229, %r191;
	mov.b32 	%f264, %r202;
	mov.b32 	%f298, %r209;
	mov.b32 	%f333, %r220;
	mov.b32 	%f367, %r227;
	mov.b32 	%f402, %r238;
	mov.b32 	%f436, %r245;
	cvt.rzi.f32.f32 	%f487, %f486;
	setp.gt.f32 	%p64, %f488, 0f4B000000;
	cvt.rzi.f32.f32 	%f540, %f539;
	setp.gt.f32 	%p84, %f541, 0f4B000000;
	selp.f32 	%f596, %f591, %f594, %p105;
	cvt.rzi.f32.f32 	%f597, %f591;
	setp.lt.f32 	%p106, %f595, 0f3F000000;
	selp.f32 	%f648, %f643, %f646, %p125;
	cvt.rzi.f32.f32 	%f649, %f643;
	setp.lt.f32 	%p126, %f647, 0f3F000000;
	add.f32 	%f699, %f697, %f698;
	abs.f32 	%f701, %f697;
	add.f32 	%f196, %f194, %f195;
	abs.f32 	%f198, %f194;
	add.f32 	%f230, %f228, %f229;
	abs.f32 	%f232, %f228;
	add.f32 	%f265, %f263, %f264;
	abs.f32 	%f267, %f263;
	add.f32 	%f299, %f297, %f298;
	abs.f32 	%f301, %f297;
	add.f32 	%f334, %f332, %f333;
	abs.f32 	%f336, %f332;
	add.f32 	%f368, %f366, %f367;
	abs.f32 	%f370, %f366;
	add.f32 	%f403, %f401, %f402;
	abs.f32 	%f405, %f401;
	add.f32 	%f437, %f435, %f436;
	abs.f32 	%f439, %f435;
	selp.f32 	%f489, %f484, %f487, %p64;
	cvt.rzi.f32.f32 	%f490, %f484;
	setp.lt.f32 	%p65, %f488, 0f3F000000;
	selp.f32 	%f542, %f537, %f540, %p84;
	cvt.rzi.f32.f32 	%f543, %f537;
	setp.lt.f32 	%p85, %f541, 0f3F000000;
	selp.f32 	%f598, %f597, %f596, %p106;
	selp.f32 	%f650, %f649, %f648, %p126;
	cvt.rzi.f32.f32 	%f700, %f699;
	setp.gt.f32 	%p146, %f701, 0f4B000000;
	cvt.rzi.f32.f32 	%f197, %f196;
	setp.gt.f32 	%p4, %f198, 0f4B000000;
	cvt.rzi.f32.f32 	%f231, %f230;
	setp.gt.f32 	%p10, %f232, 0f4B000000;
	cvt.rzi.f32.f32 	%f266, %f265;
	setp.gt.f32 	%p16, %f267, 0f4B000000;
	cvt.rzi.f32.f32 	%f300, %f299;
	setp.gt.f32 	%p22, %f301, 0f4B000000;
	cvt.rzi.f32.f32 	%f335, %f334;
	setp.gt.f32 	%p28, %f336, 0f4B000000;
	cvt.rzi.f32.f32 	%f369, %f368;
	setp.gt.f32 	%p34, %f370, 0f4B000000;
	cvt.rzi.f32.f32 	%f404, %f403;
	setp.gt.f32 	%p40, %f405, 0f4B000000;
	cvt.rzi.f32.f32 	%f438, %f437;
	setp.gt.f32 	%p46, %f439, 0f4B000000;
	selp.f32 	%f491, %f490, %f489, %p65;
	selp.f32 	%f544, %f543, %f542, %p85;
	fma.rn.f32 	%f599, %f598, 0fBF000000, %f908;
	fma.rn.f32 	%f651, %f650, 0fBF000000, %f912;
	selp.f32 	%f702, %f697, %f700, %p146;
	cvt.rzi.f32.f32 	%f703, %f697;
	setp.lt.f32 	%p147, %f701, 0f3F000000;
	selp.f32 	%f199, %f194, %f197, %p4;
	cvt.rzi.f32.f32 	%f200, %f194;
	setp.lt.f32 	%p5, %f198, 0f3F000000;
	selp.f32 	%f233, %f228, %f231, %p10;
	cvt.rzi.f32.f32 	%f234, %f228;
	setp.lt.f32 	%p11, %f232, 0f3F000000;
	selp.f32 	%f268, %f263, %f266, %p16;
	cvt.rzi.f32.f32 	%f269, %f263;
	setp.lt.f32 	%p17, %f267, 0f3F000000;
	selp.f32 	%f302, %f297, %f300, %p22;
	cvt.rzi.f32.f32 	%f303, %f297;
	setp.lt.f32 	%p23, %f301, 0f3F000000;
	selp.f32 	%f337, %f332, %f335, %p28;
	cvt.rzi.f32.f32 	%f338, %f332;
	setp.lt.f32 	%p29, %f336, 0f3F000000;
	selp.f32 	%f371, %f366, %f369, %p34;
	cvt.rzi.f32.f32 	%f372, %f366;
	setp.lt.f32 	%p35, %f370, 0f3F000000;
	selp.f32 	%f406, %f401, %f404, %p40;
	cvt.rzi.f32.f32 	%f407, %f401;
	setp.lt.f32 	%p41, %f405, 0f3F000000;
	selp.f32 	%f440, %f435, %f438, %p46;
	cvt.rzi.f32.f32 	%f441, %f435;
	setp.lt.f32 	%p47, %f439, 0f3F000000;
	fma.rn.f32 	%f492, %f491, 0fBF000000, %f900;
	fma.rn.f32 	%f545, %f544, 0fBF000000, %f904;
	mul.f32 	%f600, %f599, 0f34222169;
	mul.f32 	%f652, %f651, 0f34222169;
	selp.f32 	%f704, %f703, %f702, %p147;
	selp.f32 	%f201, %f200, %f199, %p5;
	selp.f32 	%f235, %f234, %f233, %p11;
	selp.f32 	%f270, %f269, %f268, %p17;
	selp.f32 	%f304, %f303, %f302, %p23;
	selp.f32 	%f339, %f338, %f337, %p29;
	selp.f32 	%f373, %f372, %f371, %p35;
	selp.f32 	%f408, %f407, %f406, %p41;
	selp.f32 	%f442, %f441, %f440, %p47;
	mul.f32 	%f493, %f492, 0f34222169;
	mul.f32 	%f546, %f545, 0f34222169;
	fma.rn.f32 	%f601, %f599, 0f40490FDA, %f600;
	fma.rn.f32 	%f653, %f651, 0f40490FDA, %f652;
	fma.rn.f32 	%f705, %f704, 0fBF000000, %f924;
	fma.rn.f32 	%f202, %f201, 0fBF000000, %f193;
	fma.rn.f32 	%f236, %f235, 0fBF000000, %f227;
	fma.rn.f32 	%f271, %f270, 0fBF000000, %f262;
	fma.rn.f32 	%f305, %f304, 0fBF000000, %f296;
	fma.rn.f32 	%f340, %f339, 0fBF000000, %f331;
	fma.rn.f32 	%f374, %f373, 0fBF000000, %f365;
	fma.rn.f32 	%f409, %f408, 0fBF000000, %f400;
	fma.rn.f32 	%f443, %f442, 0fBF000000, %f434;
	fma.rn.f32 	%f494, %f492, 0f40490FDA, %f493;
	fma.rn.f32 	%f547, %f545, 0f40490FDA, %f546;
	mul.f32 	%f602, %f601, %f601;
	mul.f32 	%f654, %f653, %f653;
	mul.f32 	%f706, %f705, 0f34222169;
	mul.f32 	%f203, %f202, %f202;
	mul.f32 	%f237, %f236, %f236;
	mul.f32 	%f272, %f271, %f271;
	mul.f32 	%f306, %f305, %f305;
	mul.f32 	%f341, %f340, %f340;
	mul.f32 	%f375, %f374, %f374;
	mul.f32 	%f410, %f409, %f409;
	mul.f32 	%f444, %f443, %f443;
	mul.f32 	%f495, %f494, %f494;
	mul.f32 	%f548, %f547, %f547;
	fma.rn.f32 	%f603, %f602, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f655, %f654, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f707, %f705, 0f40490FDA, %f706;
	cvt.rzi.s32.f32 	%r185, %f201;
	fma.rn.f32 	%f204, %f203, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f205, %f203, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r192, %f235;
	fma.rn.f32 	%f238, %f237, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f239, %f237, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r203, %f270;
	fma.rn.f32 	%f273, %f272, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f274, %f272, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r210, %f304;
	fma.rn.f32 	%f307, %f306, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f308, %f306, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r221, %f339;
	fma.rn.f32 	%f342, %f341, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f343, %f341, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r228, %f373;
	fma.rn.f32 	%f376, %f375, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f377, %f375, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r239, %f408;
	fma.rn.f32 	%f411, %f410, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f412, %f410, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r246, %f442;
	fma.rn.f32 	%f445, %f444, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f446, %f444, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f496, %f495, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f549, %f548, 0f37CBAC00, 0fBAB607ED;
	cvt.rzi.s32.f32 	%r305, %f598;
	fma.rn.f32 	%f604, %f603, %f602, 0f3D2AAABB;
	fma.rn.f32 	%f608, %f602, 0fB94D4153, 0f3C0885E4;
	cvt.rzi.s32.f32 	%r335, %f650;
	fma.rn.f32 	%f656, %f655, %f654, 0f3D2AAABB;
	fma.rn.f32 	%f660, %f654, 0fB94D4153, 0f3C0885E4;
	mul.f32 	%f708, %f707, %f707;
	add.s32 	%r186, %r185, 1;
	fma.rn.f32 	%f206, %f204, %f203, 0fC0A55DF6;
	fma.rn.f32 	%f207, %f205, %f203, 0f4081E0CF;
	fma.rn.f32 	%f208, %f203, %f202, 0f00000000;
	add.s32 	%r193, %r192, 1;
	fma.rn.f32 	%f240, %f238, %f237, 0fC0A55DF6;
	fma.rn.f32 	%f241, %f239, %f237, 0f4081E0CF;
	fma.rn.f32 	%f242, %f237, %f236, 0f00000000;
	add.s32 	%r204, %r203, 1;
	fma.rn.f32 	%f275, %f273, %f272, 0fC0A55DF6;
	fma.rn.f32 	%f276, %f274, %f272, 0f4081E0CF;
	fma.rn.f32 	%f277, %f272, %f271, 0f00000000;
	add.s32 	%r211, %r210, 1;
	fma.rn.f32 	%f309, %f307, %f306, 0fC0A55DF6;
	fma.rn.f32 	%f310, %f308, %f306, 0f4081E0CF;
	fma.rn.f32 	%f311, %f306, %f305, 0f00000000;
	add.s32 	%r222, %r221, 1;
	fma.rn.f32 	%f344, %f342, %f341, 0fC0A55DF6;
	fma.rn.f32 	%f345, %f343, %f341, 0f4081E0CF;
	fma.rn.f32 	%f346, %f341, %f340, 0f00000000;
	add.s32 	%r229, %r228, 1;
	fma.rn.f32 	%f378, %f376, %f375, 0fC0A55DF6;
	fma.rn.f32 	%f379, %f377, %f375, 0f4081E0CF;
	fma.rn.f32 	%f380, %f375, %f374, 0f00000000;
	add.s32 	%r240, %r239, 1;
	fma.rn.f32 	%f413, %f411, %f410, 0fC0A55DF6;
	fma.rn.f32 	%f414, %f412, %f410, 0f4081E0CF;
	fma.rn.f32 	%f415, %f410, %f409, 0f00000000;
	add.s32 	%r247, %r246, 1;
	fma.rn.f32 	%f447, %f445, %f444, 0fC0A55DF6;
	fma.rn.f32 	%f448, %f446, %f444, 0f4081E0CF;
	fma.rn.f32 	%f449, %f444, %f443, 0f00000000;
	cvt.rzi.s32.f32 	%r264, %f491;
	fma.rn.f32 	%f497, %f496, %f495, 0f3D2AAABB;
	fma.rn.f32 	%f501, %f495, 0fB94D4153, 0f3C0885E4;
	cvt.rzi.s32.f32 	%r287, %f544;
	fma.rn.f32 	%f550, %f549, %f548, 0f3D2AAABB;
	fma.rn.f32 	%f554, %f548, 0fB94D4153, 0f3C0885E4;
	fma.rn.f32 	%f605, %f604, %f602, 0fBEFFFFFF;
	fma.rn.f32 	%f607, %f602, %f601, 0f00000000;
	fma.rn.f32 	%f609, %f608, %f602, 0fBE2AAAA8;
	and.b32  	%r306, %r305, 1;
	fma.rn.f32 	%f657, %f656, %f654, 0fBEFFFFFF;
	fma.rn.f32 	%f659, %f654, %f653, 0f00000000;
	fma.rn.f32 	%f661, %f660, %f654, 0fBE2AAAA8;
	and.b32  	%r336, %r335, 1;
	fma.rn.f32 	%f709, %f708, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f209, %f207, %f203, 0fC09DE9E6;
	fma.rn.f32 	%f210, %f206, %f208, 0f00000000;
	and.b32  	%r187, %r186, 1;
	fma.rn.f32 	%f243, %f241, %f237, 0fC09DE9E6;
	fma.rn.f32 	%f244, %f240, %f242, 0f00000000;
	and.b32  	%r194, %r193, 1;
	fma.rn.f32 	%f278, %f276, %f272, 0fC09DE9E6;
	fma.rn.f32 	%f279, %f275, %f277, 0f00000000;
	and.b32  	%r205, %r204, 1;
	fma.rn.f32 	%f312, %f310, %f306, 0fC09DE9E6;
	fma.rn.f32 	%f313, %f309, %f311, 0f00000000;
	and.b32  	%r212, %r211, 1;
	fma.rn.f32 	%f347, %f345, %f341, 0fC09DE9E6;
	fma.rn.f32 	%f348, %f344, %f346, 0f00000000;
	and.b32  	%r223, %r222, 1;
	fma.rn.f32 	%f381, %f379, %f375, 0fC09DE9E6;
	fma.rn.f32 	%f382, %f378, %f380, 0f00000000;
	and.b32  	%r230, %r229, 1;
	fma.rn.f32 	%f416, %f414, %f410, 0fC09DE9E6;
	fma.rn.f32 	%f417, %f413, %f415, 0f00000000;
	and.b32  	%r241, %r240, 1;
	fma.rn.f32 	%f450, %f448, %f444, 0fC09DE9E6;
	fma.rn.f32 	%f451, %f447, %f449, 0f00000000;
	and.b32  	%r248, %r247, 1;
	fma.rn.f32 	%f498, %f497, %f495, 0fBEFFFFFF;
	fma.rn.f32 	%f500, %f495, %f494, 0f00000000;
	fma.rn.f32 	%f502, %f501, %f495, 0fBE2AAAA8;
	and.b32  	%r265, %r264, 1;
	fma.rn.f32 	%f551, %f550, %f548, 0fBEFFFFFF;
	fma.rn.f32 	%f553, %f548, %f547, 0f00000000;
	fma.rn.f32 	%f555, %f554, %f548, 0fBE2AAAA8;
	and.b32  	%r288, %r287, 1;
	fma.rn.f32 	%f606, %f605, %f602, 0f3F800000;
	fma.rn.f32 	%f610, %f609, %f607, %f601;
	setp.eq.b32 	%p107, %r306, 1;
	fma.rn.f32 	%f658, %f657, %f654, 0f3F800000;
	fma.rn.f32 	%f662, %f661, %f659, %f653;
	setp.eq.b32 	%p127, %r336, 1;
	cvt.rzi.s32.f32 	%r351, %f704;
	fma.rn.f32 	%f710, %f709, %f708, 0f3D2AAABB;
	fma.rn.f32 	%f714, %f708, 0fB94D4153, 0f3C0885E4;
	fma.rn.f32 	%f211, %f209, %f203, 0f3F800000;
	fma.rn.f32 	%f212, %f202, 0f40490FDB, %f210;
	setp.eq.b32 	%p6, %r187, 1;
	fma.rn.f32 	%f245, %f243, %f237, 0f3F800000;
	fma.rn.f32 	%f246, %f236, 0f40490FDB, %f244;
	setp.eq.b32 	%p12, %r194, 1;
	fma.rn.f32 	%f280, %f278, %f272, 0f3F800000;
	fma.rn.f32 	%f281, %f271, 0f40490FDB, %f279;
	setp.eq.b32 	%p18, %r205, 1;
	fma.rn.f32 	%f314, %f312, %f306, 0f3F800000;
	fma.rn.f32 	%f315, %f305, 0f40490FDB, %f313;
	setp.eq.b32 	%p24, %r212, 1;
	fma.rn.f32 	%f349, %f347, %f341, 0f3F800000;
	fma.rn.f32 	%f350, %f340, 0f40490FDB, %f348;
	setp.eq.b32 	%p30, %r223, 1;
	fma.rn.f32 	%f383, %f381, %f375, 0f3F800000;
	fma.rn.f32 	%f384, %f374, 0f40490FDB, %f382;
	setp.eq.b32 	%p36, %r230, 1;
	fma.rn.f32 	%f418, %f416, %f410, 0f3F800000;
	fma.rn.f32 	%f419, %f409, 0f40490FDB, %f417;
	setp.eq.b32 	%p42, %r241, 1;
	fma.rn.f32 	%f452, %f450, %f444, 0f3F800000;
	fma.rn.f32 	%f453, %f443, 0f40490FDB, %f451;
	setp.eq.b32 	%p48, %r248, 1;
	fma.rn.f32 	%f499, %f498, %f495, 0f3F800000;
	fma.rn.f32 	%f503, %f502, %f500, %f494;
	setp.eq.b32 	%p66, %r265, 1;
	fma.rn.f32 	%f552, %f551, %f548, 0f3F800000;
	fma.rn.f32 	%f556, %f555, %f553, %f547;
	setp.eq.b32 	%p86, %r288, 1;
	selp.f32 	%f611, %f606, %f610, %p107;
	and.b32  	%r307, %r305, 2;
	selp.f32 	%f663, %f658, %f662, %p127;
	and.b32  	%r337, %r335, 2;
	fma.rn.f32 	%f711, %f710, %f708, 0fBEFFFFFF;
	fma.rn.f32 	%f713, %f708, %f707, 0f00000000;
	fma.rn.f32 	%f715, %f714, %f708, 0fBE2AAAA8;
	and.b32  	%r352, %r351, 1;
	selp.f32 	%f213, %f211, %f212, %p6;
	and.b32  	%r188, %r186, 2;
	mov.f32 	%f214, 0f00000000;
	selp.f32 	%f247, %f245, %f246, %p12;
	and.b32  	%r195, %r193, 2;
	selp.f32 	%f282, %f280, %f281, %p18;
	and.b32  	%r206, %r204, 2;
	selp.f32 	%f316, %f314, %f315, %p24;
	and.b32  	%r213, %r211, 2;
	selp.f32 	%f351, %f349, %f350, %p30;
	and.b32  	%r224, %r222, 2;
	selp.f32 	%f385, %f383, %f384, %p36;
	and.b32  	%r231, %r229, 2;
	selp.f32 	%f420, %f418, %f419, %p42;
	and.b32  	%r242, %r240, 2;
	selp.f32 	%f454, %f452, %f453, %p48;
	and.b32  	%r249, %r247, 2;
	selp.f32 	%f504, %f499, %f503, %p66;
	and.b32  	%r266, %r264, 2;
	selp.f32 	%f557, %f552, %f556, %p86;
	and.b32  	%r289, %r287, 2;
	setp.eq.s32 	%p108, %r307, 0;
	neg.f32 	%f613, %f611;
	add.s32 	%r308, %r305, 1;
	cvt.rzi.f32.f32 	%f618, %f908;
	setp.eq.s32 	%p128, %r337, 0;
	neg.f32 	%f665, %f663;
	add.s32 	%r338, %r335, 1;
	cvt.rzi.f32.f32 	%f670, %f912;
	fma.rn.f32 	%f712, %f711, %f708, 0f3F800000;
	fma.rn.f32 	%f716, %f715, %f713, %f707;
	setp.eq.b32 	%p148, %r352, 1;
	setp.eq.s32 	%p7, %r188, 0;
	sub.f32 	%f215, %f214, %f213;
	setp.eq.s32 	%p13, %r195, 0;
	sub.f32 	%f249, %f214, %f247;
	setp.eq.s32 	%p19, %r206, 0;
	sub.f32 	%f284, %f214, %f282;
	setp.eq.s32 	%p25, %r213, 0;
	sub.f32 	%f318, %f214, %f316;
	setp.eq.s32 	%p31, %r224, 0;
	sub.f32 	%f353, %f214, %f351;
	setp.eq.s32 	%p37, %r231, 0;
	sub.f32 	%f387, %f214, %f385;
	setp.eq.s32 	%p43, %r242, 0;
	sub.f32 	%f422, %f214, %f420;
	setp.eq.s32 	%p49, %r249, 0;
	sub.f32 	%f456, %f214, %f454;
	setp.eq.s32 	%p67, %r266, 0;
	neg.f32 	%f506, %f504;
	add.s32 	%r267, %r264, 1;
	cvt.rzi.f32.f32 	%f511, %f900;
	setp.eq.s32 	%p87, %r289, 0;
	neg.f32 	%f559, %f557;
	add.s32 	%r290, %r287, 1;
	cvt.rzi.f32.f32 	%f564, %f904;
	selp.f32 	%f612, %f610, %f606, %p107;
	selp.f32 	%f614, %f611, %f613, %p108;
	and.b32  	%r309, %r308, 2;
	setp.eq.f32 	%p110, %f618, %f908;
	mul.f32 	%f619, %f908, 0f00000000;
	selp.f32 	%f664, %f662, %f658, %p127;
	selp.f32 	%f666, %f663, %f665, %p128;
	and.b32  	%r339, %r338, 2;
	setp.eq.f32 	%p130, %f670, %f912;
	mul.f32 	%f671, %f912, 0f00000000;
	selp.f32 	%f717, %f712, %f716, %p148;
	and.b32  	%r353, %r351, 2;
	selp.f32 	%f216, %f213, %f215, %p7;
	selp.f32 	%f250, %f247, %f249, %p13;
	selp.f32 	%f285, %f282, %f284, %p19;
	selp.f32 	%f319, %f316, %f318, %p25;
	selp.f32 	%f354, %f351, %f353, %p31;
	selp.f32 	%f388, %f385, %f387, %p37;
	selp.f32 	%f423, %f420, %f422, %p43;
	selp.f32 	%f457, %f454, %f456, %p49;
	selp.f32 	%f505, %f503, %f499, %p66;
	selp.f32 	%f507, %f504, %f506, %p67;
	and.b32  	%r268, %r267, 2;
	setp.eq.f32 	%p69, %f511, %f900;
	mul.f32 	%f512, %f900, 0f00000000;
	selp.f32 	%f558, %f556, %f552, %p86;
	selp.f32 	%f560, %f557, %f559, %p87;
	and.b32  	%r291, %r290, 2;
	setp.eq.f32 	%p89, %f564, %f904;
	mul.f32 	%f565, %f904, 0f00000000;
	setp.eq.s32 	%p109, %r309, 0;
	sub.f32 	%f616, %f214, %f612;
	selp.f32 	%f89, %f619, %f614, %p110;
	abs.f32 	%f620, %f908;
	setp.eq.s32 	%p129, %r339, 0;
	sub.f32 	%f668, %f214, %f664;
	selp.f32 	%f672, %f671, %f666, %p130;
	abs.f32 	%f673, %f912;
	setp.eq.s32 	%p149, %r353, 0;
	neg.f32 	%f719, %f717;
	add.s32 	%r354, %r351, 1;
	cvt.rzi.f32.f32 	%f724, %f924;
	mul.f32 	%f148, %f216, %f216;
	mul.f32 	%f4, %f250, %f250;
	mul.f32 	%f8, %f285, %f285;
	mul.f32 	%f13, %f319, %f319;
	mul.f32 	%f17, %f354, %f354;
	mul.f32 	%f22, %f388, %f388;
	mul.f32 	%f26, %f423, %f423;
	mul.f32 	%f31, %f457, %f457;
	setp.eq.s32 	%p68, %r268, 0;
	sub.f32 	%f509, %f214, %f505;
	selp.f32 	%f52, %f512, %f507, %p69;
	abs.f32 	%f513, %f900;
	setp.eq.s32 	%p88, %r291, 0;
	sub.f32 	%f562, %f214, %f558;
	selp.f32 	%f566, %f565, %f560, %p89;
	abs.f32 	%f567, %f904;
	selp.f32 	%f617, %f612, %f616, %p109;
	setp.gt.f32 	%p111, %f620, 0f4B800000;
	add.f32 	%f621, %f89, 0f3F800000;
	selp.f32 	%f669, %f664, %f668, %p129;
	setp.gt.f32 	%p131, %f673, 0f4B800000;
	add.f32 	%f674, %f672, 0f3F800000;
	selp.f32 	%f718, %f716, %f712, %p148;
	selp.f32 	%f720, %f717, %f719, %p149;
	and.b32  	%r355, %r354, 2;
	setp.eq.f32 	%p151, %f724, %f924;
	mul.f32 	%f725, %f924, 0f00000000;
	setp.eq.s32 	%p150, %r355, 0;
	sub.f32 	%f722, %f214, %f718;
	selp.f32 	%f165, %f725, %f720, %p151;
	abs.f32 	%f726, %f924;
	shr.u32 	%r127, %r1, 1;
	shr.u32 	%r133, %r1, 3;
	add.f32 	%f749, %f928, %f928;
	mov.b32 	%r370, %f749;
	and.b32  	%r371, %r370, -2147483648;
	or.b32  	%r372, %r371, 1056964608;
	mov.b32 	%f750, %r372;
	add.f32 	%f751, %f749, %f750;
	cvt.rzi.f32.f32 	%f752, %f751;
	abs.f32 	%f753, %f749;
	setp.gt.f32 	%p166, %f753, 0f4B000000;
	selp.f32 	%f754, %f749, %f752, %p166;
	cvt.rzi.f32.f32 	%f755, %f749;
	setp.lt.f32 	%p167, %f753, 0f3F000000;
	selp.f32 	%f756, %f755, %f754, %p167;
	cvt.rzi.s32.f32 	%r373, %f756;
	fma.rn.f32 	%f757, %f756, 0fBF000000, %f928;
	mul.f32 	%f758, %f757, 0f34222169;
	fma.rn.f32 	%f759, %f757, 0f40490FDA, %f758;
	mul.f32 	%f760, %f759, %f759;
	fma.rn.f32 	%f761, %f760, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f762, %f761, %f760, 0f3D2AAABB;
	fma.rn.f32 	%f763, %f762, %f760, 0fBEFFFFFF;
	fma.rn.f32 	%f764, %f763, %f760, 0f3F800000;
	fma.rn.f32 	%f765, %f760, %f759, 0f00000000;
	fma.rn.f32 	%f766, %f760, 0fB94D4153, 0f3C0885E4;
	fma.rn.f32 	%f767, %f766, %f760, 0fBE2AAAA8;
	fma.rn.f32 	%f768, %f767, %f765, %f759;
	and.b32  	%r374, %r373, 1;
	setp.eq.b32 	%p168, %r374, 1;
	selp.f32 	%f769, %f764, %f768, %p168;
	selp.f32 	%f770, %f768, %f764, %p168;
	and.b32  	%r375, %r373, 2;
	setp.eq.s32 	%p169, %r375, 0;
	neg.f32 	%f771, %f769;
	selp.f32 	%f772, %f769, %f771, %p169;
	add.s32 	%r376, %r373, 1;
	and.b32  	%r377, %r376, 2;
	setp.eq.s32 	%p170, %r377, 0;
	sub.f32 	%f774, %f214, %f770;
	cvt.rzi.f32.f32 	%f776, %f928;
	setp.eq.f32 	%p171, %f776, %f928;
	mul.f32 	%f777, %f928, 0f00000000;
	selp.f32 	%f778, %f777, %f772, %p171;
	abs.f32 	%f779, %f928;
	and.b32  	%r378, %r133, 2;
	and.b32  	%r379, %r127, 4;
	or.b32  	%r380, %r131, %r378;
	or.b32  	%r54, %r380, %r379;
	mul.lo.s32 	%r55, %r32, %r54;
	cvt.rn.f32.s32 	%f782, %r55;
	div.approx.f32 	%f111, %f782, %f570;
	abs.f32 	%f916, %f111;
	setp.lt.f32 	%p174, %f916, 0f40000000;
	@%p174 bra 	LBB0_95;
// %bb.84:
	setp.gtu.f32 	%p175, %f916, 0f4B800000;
	@%p175 bra 	LBB0_91;
	bra.uni 	LBB0_85;
LBB0_91:
	mov.b32 	%r57, %f916;
	and.b32  	%r381, %r57, 8388607;
	or.b32  	%r7777, %r381, 1065353216;
	mov.b32 	%f915, %r7777;
	add.s32 	%r382, %r57, -1073741824;
	and.b32  	%r7778, %r382, -8388608;
	setp.eq.s32 	%p181, %r7778, 0;
	@%p181 bra 	LBB0_94;
// %bb.92:                              // %__nv_fmaf_rn.exit4.i.i.i1274.preheader
	mov.f32 	%f793, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f792,%f793;
	// end inline asm
LBB0_93:                                // %__nv_fmaf_rn.exit4.i.i.i1274
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r383, %r7778, 192937984;
	add.s32 	%r384, %r383, %r7777;
	mov.b32 	%f794, %r384;
	mul.f32 	%f795, %f792, %f794;
	sub.f32 	%f796, %f794, %f795;
	fma.rn.f32 	%f797, %f796, %f792, %f795;
	sub.f32 	%f798, %f794, %f797;
	fma.rz.f32 	%f799, %f798, %f792, %f797;
	cvt.rzi.f32.f32 	%f800, %f799;
	sub.f32 	%f915, %f794, %f800;
	sub.s32 	%r7778, %r7778, %r383;
	mov.b32 	%r7777, %f915;
	setp.ne.s32 	%p182, %r7778, 0;
	setp.ne.s32 	%p183, %r7777, 0;
	and.pred  	%p184, %p182, %p183;
	@%p184 bra 	LBB0_93;
LBB0_94:                                // %__internal_fmodf_slowpath_mod.exit.i.i1276
	setp.gt.u32 	%p185, %r57, 2139095039;
	selp.f32 	%f801, 0f7FFFFFFF, 0f4B800000, %p185;
	mul.f32 	%f802, %f915, 0f34000000;
	mul.f32 	%f916, %f801, %f802;
	bra.uni 	LBB0_95;
LBB0_85:                                // %__nv_fast_fdividef.exit.i.i.i1246
	div.approx.f32 	%f785, %f916, %f185;
	cvt.rzi.f32.f32 	%f914, %f785;
	fma.rn.f32 	%f114, %f914, 0fC0000000, %f916;
	mov.b32 	%r56, %f114;
	setp.lt.u32 	%p176, %r56, 1073741824;
	@%p176 bra 	LBB0_90;
// %bb.86:
	setp.lt.u32 	%p177, %r56, -2147483647;
	@%p177 bra 	LBB0_88;
// %bb.87:
	add.f32 	%f790, %f914, 0fBF800000;
	setp.lt.f32 	%p180, %f114, 0fC0000000;
	add.f32 	%f791, %f790, 0fBF800000;
	selp.f32 	%f914, %f791, %f790, %p180;
	bra.uni 	LBB0_90;
LBB0_88:
	add.f32 	%f914, %f914, 0f3F800000;
	setp.ltu.f32 	%p178, %f114, 0f40800000;
	@%p178 bra 	LBB0_90;
// %bb.89:                              // %__nv_fmaf_rn.exit.i.i.i1251
	add.f32 	%f786, %f914, 0f3F800000;
	fma.rn.f32 	%f788, %f185, 0fC0400000, %f114;
	setp.ge.f32 	%p179, %f788, 0f00000000;
	add.f32 	%f789, %f786, 0f3F800000;
	selp.f32 	%f914, %f789, %f786, %p179;
LBB0_90:                                // %__internal_fmodf_fastpath_quot.exit.i.i1255
	fma.rn.f32 	%f916, %f914, 0fC0000000, %f916;
LBB0_95:                                // %__internal_fmodf_kernel.exit.i1280
	mul.f32 	%f220, %f148, 0f3C0AF64E;
	mul.f32 	%f254, %f4, 0f3C0AF64E;
	mul.f32 	%f289, %f8, 0f3C0AF64E;
	mul.f32 	%f323, %f13, 0f3C0AF64E;
	mul.f32 	%f358, %f17, 0f3C0AF64E;
	mul.f32 	%f392, %f22, 0f3C0AF64E;
	mul.f32 	%f427, %f26, 0f3C0AF64E;
	mul.f32 	%f460, %f31, 0f3C0AF64E;
	selp.f32 	%f510, %f505, %f509, %p68;
	setp.gt.f32 	%p70, %f513, 0f4B800000;
	add.f32 	%f514, %f52, 0f3F800000;
	selp.f32 	%f563, %f558, %f562, %p88;
	setp.gt.f32 	%p90, %f567, 0f4B800000;
	add.f32 	%f568, %f566, 0f3F800000;
	selp.f32 	%f90, %f621, %f617, %p111;
	selp.f32 	%f675, %f674, %f669, %p131;
	selp.f32 	%f723, %f718, %f722, %p150;
	setp.gt.f32 	%p152, %f726, 0f4B800000;
	add.f32 	%f727, %f165, 0f3F800000;
	selp.f32 	%f775, %f770, %f774, %p170;
	setp.gt.f32 	%p172, %f779, 0f4B800000;
	add.f32 	%f780, %f778, 0f3F800000;
	abs.f32 	%f803, %f916;
	setp.gtu.f32 	%p186, %f803, 0f7F800000;
	@%p186 bra 	LBB0_97;
// %bb.96:
	mov.b32 	%r385, %f111;
	and.b32  	%r386, %r385, -2147483648;
	mov.b32 	%r387, %f916;
	or.b32  	%r388, %r386, %r387;
	mov.b32 	%f916, %r388;
LBB0_97:                                // %__nv_fmodf.exit1281
	mul.f32 	%f3, %f220, %f890;
	mul.f32 	%f255, %f254, %f891;
	mul.f32 	%f12, %f289, %f892;
	mul.f32 	%f324, %f323, %f893;
	mul.f32 	%f21, %f358, %f894;
	mul.f32 	%f393, %f392, %f895;
	mul.f32 	%f30, %f427, %f896;
	mul.f32 	%f461, %f460, %f897;
	selp.f32 	%f53, %f514, %f510, %p70;
	selp.f32 	%f569, %f568, %f563, %p90;
	mov.b32 	%r322, %f675;
	mov.b32 	%r321, %f90;
	mov.b32 	%r328, %f672;
	mov.b32 	%r327, %f89;
	selp.f32 	%f166, %f727, %f723, %p152;
	selp.f32 	%f781, %f780, %f775, %p172;
	add.f32 	%f804, %f916, %f916;
	mov.b32 	%r389, %f804;
	and.b32  	%r390, %r389, -2147483648;
	or.b32  	%r391, %r390, 1056964608;
	mov.b32 	%f805, %r391;
	add.f32 	%f806, %f804, %f805;
	cvt.rzi.f32.f32 	%f807, %f806;
	abs.f32 	%f808, %f804;
	setp.gt.f32 	%p187, %f808, 0f4B000000;
	selp.f32 	%f809, %f804, %f807, %p187;
	cvt.rzi.f32.f32 	%f810, %f804;
	setp.lt.f32 	%p188, %f808, 0f3F000000;
	selp.f32 	%f811, %f810, %f809, %p188;
	cvt.rzi.s32.f32 	%r392, %f811;
	fma.rn.f32 	%f812, %f811, 0fBF000000, %f916;
	mul.f32 	%f813, %f812, 0f34222169;
	fma.rn.f32 	%f814, %f812, 0f40490FDA, %f813;
	mul.f32 	%f815, %f814, %f814;
	fma.rn.f32 	%f816, %f815, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f817, %f816, %f815, 0f3D2AAABB;
	fma.rn.f32 	%f818, %f817, %f815, 0fBEFFFFFF;
	fma.rn.f32 	%f819, %f818, %f815, 0f3F800000;
	fma.rn.f32 	%f820, %f815, %f814, 0f00000000;
	fma.rn.f32 	%f821, %f815, 0fB94D4153, 0f3C0885E4;
	fma.rn.f32 	%f822, %f821, %f815, 0fBE2AAAA8;
	fma.rn.f32 	%f823, %f822, %f820, %f814;
	and.b32  	%r393, %r392, 1;
	setp.eq.b32 	%p189, %r393, 1;
	selp.f32 	%f824, %f819, %f823, %p189;
	selp.f32 	%f825, %f823, %f819, %p189;
	and.b32  	%r394, %r392, 2;
	setp.eq.s32 	%p190, %r394, 0;
	neg.f32 	%f826, %f824;
	selp.f32 	%f827, %f824, %f826, %p190;
	add.s32 	%r395, %r392, 1;
	and.b32  	%r396, %r395, 2;
	setp.eq.s32 	%p191, %r396, 0;
	sub.f32 	%f829, %f214, %f825;
	selp.f32 	%f830, %f825, %f829, %p191;
	cvt.rzi.f32.f32 	%f831, %f916;
	setp.eq.f32 	%p192, %f831, %f916;
	mul.f32 	%f832, %f916, 0f00000000;
	selp.f32 	%f128, %f832, %f827, %p192;
	abs.f32 	%f833, %f916;
	setp.gt.f32 	%p193, %f833, 0f4B800000;
	add.f32 	%f834, %f128, 0f3F800000;
	shl.b32 	%r397, %r54, 3;
	sub.s32 	%r398, %r55, %r397;
	cvt.rn.f32.s32 	%f835, %r398;
	div.approx.f32 	%f130, %f835, %f570;
	abs.f32 	%f920, %f130;
	setp.lt.f32 	%p194, %f920, 0f40000000;
	@%p194 bra 	LBB0_109;
// %bb.98:
	setp.gtu.f32 	%p195, %f920, 0f4B800000;
	@%p195 bra 	LBB0_105;
	bra.uni 	LBB0_99;
LBB0_105:
	mov.b32 	%r65, %f920;
	and.b32  	%r399, %r65, 8388607;
	or.b32  	%r7779, %r399, 1065353216;
	mov.b32 	%f919, %r7779;
	add.s32 	%r400, %r65, -1073741824;
	and.b32  	%r7780, %r400, -8388608;
	setp.eq.s32 	%p201, %r7780, 0;
	@%p201 bra 	LBB0_108;
// %bb.106:                             // %__nv_fmaf_rn.exit4.i.i.i1320.preheader
	mov.f32 	%f846, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f845,%f846;
	// end inline asm
LBB0_107:                               // %__nv_fmaf_rn.exit4.i.i.i1320
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r401, %r7780, 192937984;
	add.s32 	%r402, %r401, %r7779;
	mov.b32 	%f847, %r402;
	mul.f32 	%f848, %f845, %f847;
	sub.f32 	%f849, %f847, %f848;
	fma.rn.f32 	%f850, %f849, %f845, %f848;
	sub.f32 	%f851, %f847, %f850;
	fma.rz.f32 	%f852, %f851, %f845, %f850;
	cvt.rzi.f32.f32 	%f853, %f852;
	sub.f32 	%f919, %f847, %f853;
	sub.s32 	%r7780, %r7780, %r401;
	mov.b32 	%r7779, %f919;
	setp.ne.s32 	%p202, %r7780, 0;
	setp.ne.s32 	%p203, %r7779, 0;
	and.pred  	%p204, %p202, %p203;
	@%p204 bra 	LBB0_107;
LBB0_108:                               // %__internal_fmodf_slowpath_mod.exit.i.i1322
	setp.gt.u32 	%p205, %r65, 2139095039;
	selp.f32 	%f854, 0f7FFFFFFF, 0f4B800000, %p205;
	mul.f32 	%f855, %f919, 0f34000000;
	mul.f32 	%f920, %f854, %f855;
	bra.uni 	LBB0_109;
LBB0_99:                                // %__nv_fast_fdividef.exit.i.i.i1292
	div.approx.f32 	%f838, %f920, %f185;
	cvt.rzi.f32.f32 	%f918, %f838;
	fma.rn.f32 	%f133, %f918, 0fC0000000, %f920;
	mov.b32 	%r64, %f133;
	setp.lt.u32 	%p196, %r64, 1073741824;
	@%p196 bra 	LBB0_104;
// %bb.100:
	setp.lt.u32 	%p197, %r64, -2147483647;
	@%p197 bra 	LBB0_102;
// %bb.101:
	add.f32 	%f843, %f918, 0fBF800000;
	setp.lt.f32 	%p200, %f133, 0fC0000000;
	add.f32 	%f844, %f843, 0fBF800000;
	selp.f32 	%f918, %f844, %f843, %p200;
	bra.uni 	LBB0_104;
LBB0_102:
	add.f32 	%f918, %f918, 0f3F800000;
	setp.ltu.f32 	%p198, %f133, 0f40800000;
	@%p198 bra 	LBB0_104;
// %bb.103:                             // %__nv_fmaf_rn.exit.i.i.i1297
	add.f32 	%f839, %f918, 0f3F800000;
	fma.rn.f32 	%f841, %f185, 0fC0400000, %f133;
	setp.ge.f32 	%p199, %f841, 0f00000000;
	add.f32 	%f842, %f839, 0f3F800000;
	selp.f32 	%f918, %f842, %f839, %p199;
LBB0_104:                               // %__internal_fmodf_fastpath_quot.exit.i.i1301
	fma.rn.f32 	%f920, %f918, 0fC0000000, %f920;
LBB0_109:                               // %__internal_fmodf_kernel.exit.i1326
	and.b32  	%r124, %r1, 16;
	mov.b32 	%r198, %f255;
	mov.b32 	%r197, %f3;
	mov.b32 	%r216, %f324;
	mov.b32 	%r215, %f12;
	mov.b32 	%r234, %f393;
	mov.b32 	%r233, %f21;
	mov.b32 	%r252, %f461;
	mov.b32 	%r251, %f30;
	mov.b32 	%r280, %f569;
	mov.b32 	%r279, %f53;
	mov.b32 	%r283, %f566;
	mov.b32 	%r282, %f52;
	xor.b32  	%r325, %r328, -2147483648;
	xor.b32  	%r324, %r327, -2147483648;
	mov.b32 	%r366, %f781;
	mov.b32 	%r365, %f166;
	mov.b32 	%r369, %f778;
	mov.b32 	%r368, %f165;
	selp.f32 	%f129, %f834, %f830, %p193;
	abs.f32 	%f856, %f920;
	setp.gtu.f32 	%p206, %f856, 0f7F800000;
	@%p206 bra 	LBB0_111;
// %bb.110:
	mov.b32 	%r403, %f130;
	and.b32  	%r404, %r403, -2147483648;
	mov.b32 	%r405, %f920;
	or.b32  	%r406, %r404, %r405;
	mov.b32 	%f920, %r406;
LBB0_111:                               // %__nv_fmodf.exit1327
	ld.param.u64 	%rd2, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_3];
	ld.param.u64 	%rd3, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_4];
	// begin inline asm
	cvt.rn.f16x2.f32 %r196, %r198, %r197;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r214, %r216, %r215;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r232, %r234, %r233;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r250, %r252, %r251;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r278, %r280, %r279;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r281, %r283, %r282;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r320, %r322, %r321;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r323, %r325, %r324;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r326, %r328, %r327;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r329, %r322, %r321;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r364, %r366, %r365;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r367, %r369, %r368;
	// end inline asm
	add.f32 	%f857, %f920, %f920;
	mov.b32 	%r420, %f857;
	and.b32  	%r421, %r420, -2147483648;
	or.b32  	%r422, %r421, 1056964608;
	mov.b32 	%f858, %r422;
	add.f32 	%f859, %f857, %f858;
	cvt.rzi.f32.f32 	%f860, %f859;
	abs.f32 	%f861, %f857;
	setp.gt.f32 	%p207, %f861, 0f4B000000;
	selp.f32 	%f862, %f857, %f860, %p207;
	cvt.rzi.f32.f32 	%f863, %f857;
	setp.lt.f32 	%p208, %f861, 0f3F000000;
	selp.f32 	%f864, %f863, %f862, %p208;
	cvt.rzi.s32.f32 	%r423, %f864;
	fma.rn.f32 	%f865, %f864, 0fBF000000, %f920;
	mul.f32 	%f866, %f865, 0f34222169;
	fma.rn.f32 	%f867, %f865, 0f40490FDA, %f866;
	mul.f32 	%f868, %f867, %f867;
	fma.rn.f32 	%f869, %f868, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f870, %f869, %f868, 0f3D2AAABB;
	fma.rn.f32 	%f871, %f870, %f868, 0fBEFFFFFF;
	fma.rn.f32 	%f872, %f871, %f868, 0f3F800000;
	fma.rn.f32 	%f873, %f868, %f867, 0f00000000;
	fma.rn.f32 	%f874, %f868, 0fB94D4153, 0f3C0885E4;
	fma.rn.f32 	%f875, %f874, %f868, 0fBE2AAAA8;
	fma.rn.f32 	%f876, %f875, %f873, %f867;
	and.b32  	%r424, %r423, 1;
	setp.eq.b32 	%p209, %r424, 1;
	selp.f32 	%f877, %f872, %f876, %p209;
	selp.f32 	%f878, %f876, %f872, %p209;
	and.b32  	%r425, %r423, 2;
	setp.eq.s32 	%p210, %r425, 0;
	neg.f32 	%f879, %f877;
	selp.f32 	%f880, %f877, %f879, %p210;
	add.s32 	%r426, %r423, 1;
	and.b32  	%r427, %r426, 2;
	setp.eq.s32 	%p211, %r427, 0;
	sub.f32 	%f882, %f214, %f878;
	selp.f32 	%f883, %f878, %f882, %p211;
	cvt.rzi.f32.f32 	%f884, %f920;
	setp.eq.f32 	%p212, %f884, %f920;
	mul.f32 	%f885, %f920, 0f00000000;
	selp.f32 	%f886, %f885, %f880, %p212;
	abs.f32 	%f887, %f920;
	setp.gt.f32 	%p213, %f887, 0f4B800000;
	add.f32 	%f888, %f886, 0f3F800000;
	selp.f32 	%f889, %f888, %f883, %p213;
	mov.b32 	%r409, %f889;
	mov.b32 	%r408, %f129;
	// begin inline asm
	cvt.rn.f16x2.f32 %r72, %r409, %r408;
	// end inline asm
	mov.b32 	%r415, %f886;
	xor.b32  	%r412, %r415, -2147483648;
	mov.b32 	%r414, %f128;
	xor.b32  	%r411, %r414, -2147483648;
	// begin inline asm
	cvt.rn.f16x2.f32 %r73, %r412, %r411;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r74, %r415, %r414;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r75, %r409, %r408;
	// end inline asm
	shl.b32 	%r428, %r2, 7;
	shl.b32 	%r429, %r1, 4;
	and.b32  	%r430, %r429, 112;
	and.b32  	%r431, %r428, 384;
	or.b32  	%r432, %r431, %r430;
	shl.b32 	%r433, %r2, 6;
	and.b32  	%r434, %r433, 7680;
	shl.b32 	%r435, %r2, 11;
	and.b32  	%r436, %r435, 8192;
	or.b32  	%r437, %r124, %r3;
	or.b32  	%r76, %r437, %r123;
	or.b32  	%r438, %r432, %r434;
	or.b32  	%r77, %r438, %r436;
	and.b32  	%r78, %r1, 8;
	shr.u32 	%r439, %r3, 3;
	mul.lo.s32 	%r440, %r439, 130;
	shr.u32 	%r441, %r3, 1;
	bfe.u32 	%r442, %r3, 1, 1;
	and.b32  	%r443, %r3, 1;
	or.b32  	%r444, %r78, %r429;
	shr.u32 	%r445, %r444, 2;
	and.b32  	%r446, %r445, 30;
	bfe.u32 	%r447, %r3, 2, 1;
	mad.lo.s32 	%r448, %r443, 1040, %r440;
	mad.lo.s32 	%r449, %r132, 65, %r448;
	mad.lo.s32 	%r450, %r442, 520, %r449;
	mad.lo.s32 	%r451, %r447, 260, %r450;
	add.s32 	%r452, %r451, %r446;
	mul.wide.u32 	%rd63, %r452, 4;
	mov.u64 	%rd64, shmem;
	add.s64 	%rd5, %rd64, %rd63;
	add.s32 	%r453, %r452, 32;
	mul.wide.u32 	%rd65, %r453, 4;
	add.s64 	%rd6, %rd64, %rd65;
	add.s32 	%r454, %r452, 1;
	mul.wide.u32 	%rd66, %r454, 4;
	add.s64 	%rd7, %rd64, %rd66;
	add.s32 	%r455, %r452, 33;
	mul.wide.u32 	%rd67, %r455, 4;
	add.s64 	%rd8, %rd64, %rd67;
	mul.lo.s32 	%r456, %r129, 130;
	mul.lo.s32 	%r457, %r132, 520;
	mul.lo.s32 	%r458, %r134, 1040;
	and.b32  	%r459, %r4, 32;
	mul.lo.s32 	%r460, %r131, 260;
	mul.lo.s32 	%r461, %r128, 65;
	add.s32 	%r462, %r456, %r441;
	add.s32 	%r463, %r462, %r457;
	add.s32 	%r464, %r463, %r459;
	add.s32 	%r465, %r464, %r458;
	add.s32 	%r466, %r465, %r460;
	add.s32 	%r467, %r466, %r461;
	or.b32  	%r468, %r441, 8;
	add.s32 	%r469, %r457, %r456;
	add.s32 	%r470, %r469, %r468;
	add.s32 	%r471, %r470, %r459;
	add.s32 	%r472, %r471, %r458;
	add.s32 	%r473, %r472, %r460;
	add.s32 	%r474, %r473, %r461;
	or.b32  	%r475, %r441, 16;
	add.s32 	%r476, %r469, %r475;
	add.s32 	%r477, %r476, %r459;
	add.s32 	%r478, %r477, %r458;
	add.s32 	%r479, %r478, %r460;
	add.s32 	%r480, %r479, %r461;
	or.b32  	%r481, %r441, 24;
	add.s32 	%r482, %r469, %r481;
	add.s32 	%r483, %r482, %r459;
	add.s32 	%r484, %r483, %r458;
	add.s32 	%r485, %r484, %r460;
	add.s32 	%r486, %r485, %r461;
	mul.lo.s32 	%r487, %r125, 65;
	or.b32  	%r488, %r459, %r441;
	add.s32 	%r489, %r488, %r487;
	or.b32  	%r490, %r459, %r468;
	add.s32 	%r491, %r490, %r487;
	or.b32  	%r492, %r459, %r475;
	add.s32 	%r493, %r492, %r487;
	or.b32  	%r494, %r459, %r481;
	add.s32 	%r495, %r494, %r487;
	shl.b32 	%r496, %r3, 1;
	or.b32  	%r497, %r132, %r496;
	mul.lo.s32 	%r498, %r497, 65;
	add.s32 	%r499, %r446, %r498;
	mul.wide.u32 	%rd68, %r499, 4;
	add.s64 	%rd9, %rd64, %rd68;
	cvt.u64.u32 	%rd69, %r446;
	cvt.u64.u32 	%rd70, %r498;
	add.s64 	%rd71, %rd70, %rd69;
	shl.b64 	%rd72, %rd71, 2;
	add.s64 	%rd10, %rd64, %rd72;
	shl.b32 	%r500, %r2, 5;
	and.b32  	%r501, %r122, 28;
	and.b32  	%r502, %r500, 96;
	or.b32  	%r79, %r502, %r501;
	shl.b32 	%r503, %r2, 3;
	and.b32  	%r504, %r503, 960;
	or.b32  	%r505, %r504, %r133;
	shl.b32 	%r506, %r3, 9;
	shl.b32 	%r507, %r505, 7;
	or.b32  	%r80, %r506, %r507;
	shl.b32 	%r508, %r2, 15;
	and.b32  	%r81, %r508, 131072;
	mul.wide.u32 	%rd11, %r495, 4;
	mul.wide.u32 	%rd12, %r493, 4;
	mul.wide.u32 	%rd13, %r491, 4;
	mul.wide.u32 	%rd14, %r489, 4;
	mul.wide.u32 	%rd15, %r486, 4;
	mul.wide.u32 	%rd16, %r480, 4;
	mul.wide.u32 	%rd17, %r474, 4;
	mul.wide.u32 	%rd18, %r467, 4;
	mov.u32 	%r7795, 0;
	setp.eq.s32 	%p214, %r78, 0;
	mov.u16 	%rs1176, 25600;
	mov.u16 	%rs1072, 21504;
	mov.u16 	%rs1184, 18432;
	mov.u16 	%rs1142, -14592;
	mov.u32 	%r7796, %r7795;
	mov.u32 	%r7797, %r7795;
	mov.u32 	%r7798, %r7795;
	mov.u32 	%r7799, %r7795;
	mov.u32 	%r7800, %r7795;
	mov.u32 	%r7801, %r7795;
	mov.u32 	%r7802, %r7795;
	mov.u32 	%r7803, %r7795;
	mov.u32 	%r7804, %r7795;
	mov.u32 	%r7805, %r7795;
	mov.u32 	%r7806, %r7795;
	mov.u32 	%r7793, %r7795;
	bra.uni 	LBB0_112;
LBB0_116:                               // %L29349
                                        //   in Loop: Header=BB0_112 Depth=1
	add.s32 	%r7793, %r94, 256;
	setp.gt.s32 	%p219, %r5, %r7793;
	setp.ne.s32 	%p220, %r94, 32512;
	and.pred  	%p221, %p220, %p219;
	@%p221 bra 	LBB0_112;
	bra.uni 	LBB0_117;
LBB0_112:                               // %L1260
                                        // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_113 Depth 2
	mov.u32 	%r94, %r7793;
	or.b32  	%r526, %r76, %r94;
	shl.b32 	%r527, %r526, 14;
	or.b32  	%r528, %r77, %r527;
	cvt.u64.u32 	%rd74, %r528;
	add.s64 	%rd75, %rd2, %rd74;
	ld.global.v4.u32 	{%r529, %r530, %r531, %r532}, [%rd75];
	selp.b32 	%r533, %r531, %r529, %p214;
	shfl.sync.bfly.b32	%r534, %r533, 8, 31, -1;
	selp.b32 	%r510, %r529, %r534, %p214;
	selp.b32 	%r511, %r534, %r531, %p214;
	selp.b32 	%r535, %r532, %r530, %p214;
	shfl.sync.bfly.b32	%r536, %r535, 8, 31, -1;
	selp.b32 	%r518, %r530, %r536, %p214;
	selp.b32 	%r519, %r536, %r532, %p214;
	mov.u32 	%r520, 21520;
	// begin inline asm
	prmt.b32 %r509, %r510, %r511, %r520;
	// end inline asm
	mov.u32 	%r524, 30258;
	// begin inline asm
	prmt.b32 %r513, %r510, %r511, %r524;
	// end inline asm
	// begin inline asm
	prmt.b32 %r517, %r518, %r519, %r520;
	// end inline asm
	// begin inline asm
	prmt.b32 %r521, %r518, %r519, %r524;
	// end inline asm
	st.shared.u32 	[%rd5], %r509;
	st.shared.u32 	[%rd6], %r513;
	st.shared.u32 	[%rd7], %r517;
	st.shared.u32 	[%rd8], %r521;
	bar.sync 	0;
	mov.u32 	%r7794, 256;
	mov.u64 	%rd86, %rd64;
LBB0_113:                               // %L4385
                                        //   Parent Loop BB0_112 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	add.s64 	%rd76, %rd86, %rd18;
	ld.shared.u32 	%r7721, [%rd76];
	add.s64 	%rd77, %rd86, %rd17;
	ld.shared.u32 	%r7722, [%rd77];
	add.s64 	%rd78, %rd86, %rd16;
	ld.shared.u32 	%r7723, [%rd78];
	add.s64 	%rd79, %rd86, %rd15;
	ld.shared.u32 	%r7724, [%rd79];
	// begin inline asm
	mov.b32 %r542, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r553, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r541, %r7721, -2004318072;
	mov.u32 	%r540, 983055;
	// begin inline asm
	lop3.b32 %r539, %r540, %r541, %r542, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r543, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r544, %r542, %r543;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r547, %r539, %r544;
	// end inline asm
	mov.u32 	%r551, 15728880;
	// begin inline asm
	lop3.b32 %r550, %r551, %r541, %r553, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r554, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r555, %r553, %r554;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r558, %r550, %r555;
	// end inline asm
	shr.u32 	%r563, %r541, 8;
	// begin inline asm
	lop3.b32 %r561, %r540, %r563, %r542, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r565, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r566, %r542, %r565;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r569, %r561, %r566;
	// end inline asm
	// begin inline asm
	lop3.b32 %r572, %r551, %r563, %r553, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r576, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r577, %r553, %r576;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r580, %r572, %r577;
	// end inline asm
	// begin inline asm
	mov.b32 %r588, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r599, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r587, %r7722, -2004318072;
	// begin inline asm
	lop3.b32 %r585, %r540, %r587, %r588, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r589, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r590, %r588, %r589;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r593, %r585, %r590;
	// end inline asm
	// begin inline asm
	lop3.b32 %r596, %r551, %r587, %r599, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r600, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r601, %r599, %r600;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r604, %r596, %r601;
	// end inline asm
	shr.u32 	%r609, %r587, 8;
	// begin inline asm
	lop3.b32 %r607, %r540, %r609, %r588, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r611, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r612, %r588, %r611;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r615, %r607, %r612;
	// end inline asm
	// begin inline asm
	lop3.b32 %r618, %r551, %r609, %r599, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r622, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r623, %r599, %r622;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r626, %r618, %r623;
	// end inline asm
	// begin inline asm
	mov.b32 %r634, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r645, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r633, %r7723, -2004318072;
	// begin inline asm
	lop3.b32 %r631, %r540, %r633, %r634, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r635, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r636, %r634, %r635;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r639, %r631, %r636;
	// end inline asm
	// begin inline asm
	lop3.b32 %r642, %r551, %r633, %r645, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r646, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r647, %r645, %r646;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r650, %r642, %r647;
	// end inline asm
	shr.u32 	%r655, %r633, 8;
	// begin inline asm
	lop3.b32 %r653, %r540, %r655, %r634, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r657, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r658, %r634, %r657;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r661, %r653, %r658;
	// end inline asm
	// begin inline asm
	lop3.b32 %r664, %r551, %r655, %r645, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r668, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r669, %r645, %r668;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r672, %r664, %r669;
	// end inline asm
	// begin inline asm
	mov.b32 %r680, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r691, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r679, %r7724, -2004318072;
	// begin inline asm
	lop3.b32 %r677, %r540, %r679, %r680, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r681, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r682, %r680, %r681;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r685, %r677, %r682;
	// end inline asm
	// begin inline asm
	lop3.b32 %r688, %r551, %r679, %r691, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r692, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r693, %r691, %r692;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r696, %r688, %r693;
	// end inline asm
	shr.u32 	%r701, %r679, 8;
	// begin inline asm
	lop3.b32 %r699, %r540, %r701, %r680, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r703, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r704, %r680, %r703;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r707, %r699, %r704;
	// end inline asm
	// begin inline asm
	lop3.b32 %r710, %r551, %r701, %r691, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r714, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r715, %r691, %r714;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r718, %r710, %r715;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r721, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r723, %r721, %r547;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r726, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r728, %r726, %r558;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r731, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r733, %r731, %r569;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r736, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r738, %r736, %r580;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r741, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r743, %r741, %r593;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r746, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r748, %r746, %r604;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r751, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r753, %r751, %r615;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r756, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r758, %r756, %r626;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r761, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r763, %r761, %r639;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r766, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r768, %r766, %r650;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r771, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r773, %r771, %r661;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r776, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r778, %r776, %r672;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r781, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r783, %r781, %r685;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r786, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r788, %r786, %r696;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r791, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r793, %r791, %r707;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r796, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r798, %r796, %r718;
	// end inline asm
	// begin inline asm
	mov.b32 %r806, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r817, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r805, %r7795, -2004318072;
	// begin inline asm
	lop3.b32 %r803, %r540, %r805, %r806, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r807, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r808, %r806, %r807;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r811, %r803, %r808;
	// end inline asm
	// begin inline asm
	lop3.b32 %r814, %r551, %r805, %r817, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r818, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r819, %r817, %r818;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r822, %r814, %r819;
	// end inline asm
	shr.u32 	%r827, %r805, 8;
	// begin inline asm
	lop3.b32 %r825, %r540, %r827, %r806, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r829, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r830, %r806, %r829;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r833, %r825, %r830;
	// end inline asm
	// begin inline asm
	lop3.b32 %r836, %r551, %r827, %r817, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r840, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r841, %r817, %r840;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r844, %r836, %r841;
	// end inline asm
	// begin inline asm
	mov.b32 %r852, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r863, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r851, %r7796, -2004318072;
	// begin inline asm
	lop3.b32 %r849, %r540, %r851, %r852, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r853, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r854, %r852, %r853;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r857, %r849, %r854;
	// end inline asm
	// begin inline asm
	lop3.b32 %r860, %r551, %r851, %r863, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r864, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r865, %r863, %r864;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r868, %r860, %r865;
	// end inline asm
	shr.u32 	%r873, %r851, 8;
	// begin inline asm
	lop3.b32 %r871, %r540, %r873, %r852, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r875, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r876, %r852, %r875;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r879, %r871, %r876;
	// end inline asm
	// begin inline asm
	lop3.b32 %r882, %r551, %r873, %r863, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r886, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r887, %r863, %r886;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r890, %r882, %r887;
	// end inline asm
	// begin inline asm
	mov.b32 %r898, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r909, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r897, %r7797, -2004318072;
	// begin inline asm
	lop3.b32 %r895, %r540, %r897, %r898, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r899, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r900, %r898, %r899;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r903, %r895, %r900;
	// end inline asm
	// begin inline asm
	lop3.b32 %r906, %r551, %r897, %r909, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r910, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r911, %r909, %r910;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r914, %r906, %r911;
	// end inline asm
	shr.u32 	%r919, %r897, 8;
	// begin inline asm
	lop3.b32 %r917, %r540, %r919, %r898, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r921, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r922, %r898, %r921;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r925, %r917, %r922;
	// end inline asm
	// begin inline asm
	lop3.b32 %r928, %r551, %r919, %r909, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r932, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r933, %r909, %r932;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r936, %r928, %r933;
	// end inline asm
	// begin inline asm
	mov.b32 %r944, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r955, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r943, %r7798, -2004318072;
	// begin inline asm
	lop3.b32 %r941, %r540, %r943, %r944, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r945, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r946, %r944, %r945;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r949, %r941, %r946;
	// end inline asm
	// begin inline asm
	lop3.b32 %r952, %r551, %r943, %r955, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r956, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r957, %r955, %r956;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r960, %r952, %r957;
	// end inline asm
	shr.u32 	%r965, %r943, 8;
	// begin inline asm
	lop3.b32 %r963, %r540, %r965, %r944, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r967, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r968, %r944, %r967;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r971, %r963, %r968;
	// end inline asm
	// begin inline asm
	lop3.b32 %r974, %r551, %r965, %r955, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r978, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r979, %r955, %r978;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r982, %r974, %r979;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r985, %r196, %r811, %r723;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r989, %r196, %r822, %r728;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r993, %r196, %r833, %r733;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r997, %r196, %r844, %r738;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1001, %r196, %r857, %r743;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1005, %r196, %r868, %r748;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1009, %r196, %r879, %r753;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1013, %r196, %r890, %r758;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1017, %r196, %r903, %r763;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1021, %r196, %r914, %r768;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1025, %r196, %r925, %r773;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1029, %r196, %r936, %r778;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1033, %r196, %r949, %r783;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1037, %r196, %r960, %r788;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1041, %r196, %r971, %r793;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1045, %r196, %r982, %r798;
	// end inline asm
	// begin inline asm
	mov.b32 %r1054, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1065, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1053, %r7799, -2004318072;
	// begin inline asm
	lop3.b32 %r1051, %r540, %r1053, %r1054, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1055, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1056, %r1054, %r1055;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1059, %r1051, %r1056;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1062, %r551, %r1053, %r1065, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1066, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1067, %r1065, %r1066;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1070, %r1062, %r1067;
	// end inline asm
	shr.u32 	%r1075, %r1053, 8;
	// begin inline asm
	lop3.b32 %r1073, %r540, %r1075, %r1054, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1077, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1078, %r1054, %r1077;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1081, %r1073, %r1078;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1084, %r551, %r1075, %r1065, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1088, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1089, %r1065, %r1088;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1092, %r1084, %r1089;
	// end inline asm
	// begin inline asm
	mov.b32 %r1100, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1111, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1099, %r7800, -2004318072;
	// begin inline asm
	lop3.b32 %r1097, %r540, %r1099, %r1100, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1101, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1102, %r1100, %r1101;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1105, %r1097, %r1102;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1108, %r551, %r1099, %r1111, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1112, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1113, %r1111, %r1112;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1116, %r1108, %r1113;
	// end inline asm
	shr.u32 	%r1121, %r1099, 8;
	// begin inline asm
	lop3.b32 %r1119, %r540, %r1121, %r1100, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1123, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1124, %r1100, %r1123;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1127, %r1119, %r1124;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1130, %r551, %r1121, %r1111, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1134, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1135, %r1111, %r1134;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1138, %r1130, %r1135;
	// end inline asm
	// begin inline asm
	mov.b32 %r1146, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1157, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1145, %r7801, -2004318072;
	// begin inline asm
	lop3.b32 %r1143, %r540, %r1145, %r1146, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1147, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1148, %r1146, %r1147;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1151, %r1143, %r1148;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1154, %r551, %r1145, %r1157, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1158, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1159, %r1157, %r1158;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1162, %r1154, %r1159;
	// end inline asm
	shr.u32 	%r1167, %r1145, 8;
	// begin inline asm
	lop3.b32 %r1165, %r540, %r1167, %r1146, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1169, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1170, %r1146, %r1169;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1173, %r1165, %r1170;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1176, %r551, %r1167, %r1157, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1180, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1181, %r1157, %r1180;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1184, %r1176, %r1181;
	// end inline asm
	// begin inline asm
	mov.b32 %r1192, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1203, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1191, %r7802, -2004318072;
	// begin inline asm
	lop3.b32 %r1189, %r540, %r1191, %r1192, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1193, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1194, %r1192, %r1193;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1197, %r1189, %r1194;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1200, %r551, %r1191, %r1203, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1204, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1205, %r1203, %r1204;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1208, %r1200, %r1205;
	// end inline asm
	shr.u32 	%r1213, %r1191, 8;
	// begin inline asm
	lop3.b32 %r1211, %r540, %r1213, %r1192, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1215, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1216, %r1192, %r1215;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1219, %r1211, %r1216;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1222, %r551, %r1213, %r1203, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1226, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1227, %r1203, %r1226;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1230, %r1222, %r1227;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1233, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1235, %r1233, %r1059, %r985;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1239, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1241, %r1239, %r1070, %r989;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1245, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1247, %r1245, %r1081, %r993;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1251, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1253, %r1251, %r1092, %r997;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1257, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1259, %r1257, %r1105, %r1001;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1263, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1265, %r1263, %r1116, %r1005;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1269, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1271, %r1269, %r1127, %r1009;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1275, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1277, %r1275, %r1138, %r1013;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1281, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1283, %r1281, %r1151, %r1017;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1287, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1289, %r1287, %r1162, %r1021;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1293, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1295, %r1293, %r1173, %r1025;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1299, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1301, %r1299, %r1184, %r1029;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1305, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1307, %r1305, %r1197, %r1033;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1311, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1313, %r1311, %r1208, %r1037;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1317, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1319, %r1317, %r1219, %r1041;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1323, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1325, %r1323, %r1230, %r1045;
	// end inline asm
	// begin inline asm
	mov.b32 %r1334, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1345, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1333, %r7803, -2004318072;
	// begin inline asm
	lop3.b32 %r1331, %r540, %r1333, %r1334, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1335, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1336, %r1334, %r1335;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1339, %r1331, %r1336;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1342, %r551, %r1333, %r1345, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1346, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1347, %r1345, %r1346;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1350, %r1342, %r1347;
	// end inline asm
	shr.u32 	%r1355, %r1333, 8;
	// begin inline asm
	lop3.b32 %r1353, %r540, %r1355, %r1334, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1357, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1358, %r1334, %r1357;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1361, %r1353, %r1358;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1364, %r551, %r1355, %r1345, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1368, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1369, %r1345, %r1368;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1372, %r1364, %r1369;
	// end inline asm
	// begin inline asm
	mov.b32 %r1380, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1391, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1379, %r7804, -2004318072;
	// begin inline asm
	lop3.b32 %r1377, %r540, %r1379, %r1380, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1381, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1382, %r1380, %r1381;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1385, %r1377, %r1382;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1388, %r551, %r1379, %r1391, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1392, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1393, %r1391, %r1392;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1396, %r1388, %r1393;
	// end inline asm
	shr.u32 	%r1401, %r1379, 8;
	// begin inline asm
	lop3.b32 %r1399, %r540, %r1401, %r1380, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1403, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1404, %r1380, %r1403;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1407, %r1399, %r1404;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1410, %r551, %r1401, %r1391, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1414, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1415, %r1391, %r1414;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1418, %r1410, %r1415;
	// end inline asm
	// begin inline asm
	mov.b32 %r1426, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1437, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1425, %r7805, -2004318072;
	// begin inline asm
	lop3.b32 %r1423, %r540, %r1425, %r1426, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1427, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1428, %r1426, %r1427;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1431, %r1423, %r1428;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1434, %r551, %r1425, %r1437, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1438, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1439, %r1437, %r1438;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1442, %r1434, %r1439;
	// end inline asm
	shr.u32 	%r1447, %r1425, 8;
	// begin inline asm
	lop3.b32 %r1445, %r540, %r1447, %r1426, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1449, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1450, %r1426, %r1449;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1453, %r1445, %r1450;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1456, %r551, %r1447, %r1437, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1460, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1461, %r1437, %r1460;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1464, %r1456, %r1461;
	// end inline asm
	// begin inline asm
	mov.b32 %r1472, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1483, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1471, %r7806, -2004318072;
	// begin inline asm
	lop3.b32 %r1469, %r540, %r1471, %r1472, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1473, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1474, %r1472, %r1473;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1477, %r1469, %r1474;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1480, %r551, %r1471, %r1483, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1484, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1485, %r1483, %r1484;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1488, %r1480, %r1485;
	// end inline asm
	shr.u32 	%r1493, %r1471, 8;
	// begin inline asm
	lop3.b32 %r1491, %r540, %r1493, %r1472, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1495, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1496, %r1472, %r1495;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1499, %r1491, %r1496;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1502, %r551, %r1493, %r1483, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1506, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1507, %r1483, %r1506;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1510, %r1502, %r1507;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1584, %r232, %r1339, %r1235;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1581, %r232, %r1350, %r1241;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1593, %r232, %r1361, %r1247;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1590, %r232, %r1372, %r1253;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1602, %r232, %r1385, %r1259;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1599, %r232, %r1396, %r1265;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1611, %r232, %r1407, %r1271;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1608, %r232, %r1418, %r1277;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1620, %r232, %r1431, %r1283;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1617, %r232, %r1442, %r1289;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1629, %r232, %r1453, %r1295;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1626, %r232, %r1464, %r1301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1638, %r232, %r1477, %r1307;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1635, %r232, %r1488, %r1313;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1647, %r232, %r1499, %r1319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1644, %r232, %r1510, %r1325;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1577, %r281;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1579, %r1577, %r1581;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1582, %r278, %r1584, %r1579;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1586, %r281;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1588, %r1586, %r1590;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1591, %r278, %r1593, %r1588;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1595, %r281;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1597, %r1595, %r1599;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1600, %r278, %r1602, %r1597;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1604, %r281;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1606, %r1604, %r1608;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1609, %r278, %r1611, %r1606;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1613, %r281;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1615, %r1613, %r1617;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1618, %r278, %r1620, %r1615;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1622, %r281;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1624, %r1622, %r1626;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1627, %r278, %r1629, %r1624;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1631, %r281;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1633, %r1631, %r1635;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1636, %r278, %r1638, %r1633;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1640, %r281;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1642, %r1640, %r1644;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1645, %r278, %r1647, %r1642;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1649, %r281, %r1584;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1652, %r278, %r1581, %r1649;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1656, %r281, %r1593;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1659, %r278, %r1590, %r1656;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1663, %r281, %r1602;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1666, %r278, %r1599, %r1663;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1670, %r281, %r1611;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1673, %r278, %r1608, %r1670;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1677, %r281, %r1620;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1680, %r278, %r1617, %r1677;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1684, %r281, %r1629;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1687, %r278, %r1626, %r1684;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1691, %r281, %r1638;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1694, %r278, %r1635, %r1691;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1698, %r281, %r1647;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1701, %r278, %r1644, %r1698;
	// end inline asm
	mov.u32 	%r7380, 0;
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1792, %r1789}, {%r320, %r326, %r323, %r329}, {%r1582, %r1652}, {%r7380, %r7380};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1801, %r1798}, {%r320, %r326, %r323, %r329}, {%r1591, %r1659}, {%r7380, %r7380};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1810, %r1807}, {%r320, %r326, %r323, %r329}, {%r1600, %r1666}, {%r7380, %r7380};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1819, %r1816}, {%r320, %r326, %r323, %r329}, {%r1609, %r1673}, {%r7380, %r7380};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1828, %r1825}, {%r320, %r326, %r323, %r329}, {%r1618, %r1680}, {%r7380, %r7380};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1837, %r1834}, {%r320, %r326, %r323, %r329}, {%r1627, %r1687}, {%r7380, %r7380};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1846, %r1843}, {%r320, %r326, %r323, %r329}, {%r1636, %r1694}, {%r7380, %r7380};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1855, %r1852}, {%r320, %r326, %r323, %r329}, {%r1645, %r1701}, {%r7380, %r7380};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1785, %r367;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1787, %r1785, %r1789;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1790, %r364, %r1792, %r1787;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1794, %r367;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1796, %r1794, %r1798;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1799, %r364, %r1801, %r1796;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1803, %r367;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1805, %r1803, %r1807;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1808, %r364, %r1810, %r1805;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1812, %r367;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1814, %r1812, %r1816;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1817, %r364, %r1819, %r1814;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1821, %r367;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1823, %r1821, %r1825;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1826, %r364, %r1828, %r1823;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1830, %r367;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1832, %r1830, %r1834;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1835, %r364, %r1837, %r1832;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1839, %r367;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1841, %r1839, %r1843;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1844, %r364, %r1846, %r1841;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1848, %r367;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1850, %r1848, %r1852;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1853, %r364, %r1855, %r1850;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1857, %r367, %r1792;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1860, %r364, %r1789, %r1857;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1864, %r367, %r1801;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1867, %r364, %r1798, %r1864;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1871, %r367, %r1810;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1874, %r364, %r1807, %r1871;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1878, %r367, %r1819;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1881, %r364, %r1816, %r1878;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1885, %r367, %r1828;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1888, %r364, %r1825, %r1885;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1892, %r367, %r1837;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1895, %r364, %r1834, %r1892;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1899, %r367, %r1846;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1902, %r364, %r1843, %r1899;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1906, %r367, %r1855;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1909, %r364, %r1852, %r1906;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1913, %r1914}, {%r72, %r74, %r73, %r75}, {%r1790, %r1860}, {%r7380, %r7380};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1923, %r1924}, {%r72, %r74, %r73, %r75}, {%r1799, %r1867}, {%r7380, %r7380};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1933, %r1934}, {%r72, %r74, %r73, %r75}, {%r1808, %r1874}, {%r7380, %r7380};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1943, %r1944}, {%r72, %r74, %r73, %r75}, {%r1817, %r1881}, {%r7380, %r7380};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1953, %r1954}, {%r72, %r74, %r73, %r75}, {%r1826, %r1888}, {%r7380, %r7380};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1963, %r1964}, {%r72, %r74, %r73, %r75}, {%r1835, %r1895}, {%r7380, %r7380};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1973, %r1974}, {%r72, %r74, %r73, %r75}, {%r1844, %r1902}, {%r7380, %r7380};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1983, %r1984}, {%r72, %r74, %r73, %r75}, {%r1853, %r1909}, {%r7380, %r7380};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1993, %r126, %r1913;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1996, %r126, %r1914;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1999, %r126, %r1923;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2002, %r126, %r1924;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2005, %r126, %r1933;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2008, %r126, %r1934;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2011, %r126, %r1943;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2014, %r126, %r1944;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2017, %r126, %r1953;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2020, %r126, %r1954;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2023, %r126, %r1963;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2026, %r126, %r1964;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2029, %r126, %r1973;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2032, %r126, %r1974;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2035, %r126, %r1983;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2038, %r126, %r1984;
	// end inline asm
	// begin inline asm
	mov.b32 %r2041, {%rs1142, %rs1142};
	// end inline asm
	mov.u16 	%rs195, 18176;
	// begin inline asm
	mov.b32 %r2042, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2043, %r1993, %r2041;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2046, %r2043, %r2042;
	// end inline asm
	// begin inline asm
	mov.b32 %r2049, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2050, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2051, %r1996, %r2049;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2054, %r2051, %r2050;
	// end inline asm
	// begin inline asm
	mov.b32 %r2057, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2058, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2059, %r1999, %r2057;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2062, %r2059, %r2058;
	// end inline asm
	// begin inline asm
	mov.b32 %r2065, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2066, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2067, %r2002, %r2065;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2070, %r2067, %r2066;
	// end inline asm
	// begin inline asm
	mov.b32 %r2073, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2074, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2075, %r2005, %r2073;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2078, %r2075, %r2074;
	// end inline asm
	// begin inline asm
	mov.b32 %r2081, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2082, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2083, %r2008, %r2081;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2086, %r2083, %r2082;
	// end inline asm
	// begin inline asm
	mov.b32 %r2089, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2090, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2091, %r2011, %r2089;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2094, %r2091, %r2090;
	// end inline asm
	// begin inline asm
	mov.b32 %r2097, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2098, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2099, %r2014, %r2097;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2102, %r2099, %r2098;
	// end inline asm
	// begin inline asm
	mov.b32 %r2105, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2106, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2107, %r2017, %r2105;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2110, %r2107, %r2106;
	// end inline asm
	// begin inline asm
	mov.b32 %r2113, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2114, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2115, %r2020, %r2113;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2118, %r2115, %r2114;
	// end inline asm
	// begin inline asm
	mov.b32 %r2121, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2122, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2123, %r2023, %r2121;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2126, %r2123, %r2122;
	// end inline asm
	// begin inline asm
	mov.b32 %r2129, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2130, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2131, %r2026, %r2129;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2134, %r2131, %r2130;
	// end inline asm
	// begin inline asm
	mov.b32 %r2137, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2138, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2139, %r2029, %r2137;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2142, %r2139, %r2138;
	// end inline asm
	// begin inline asm
	mov.b32 %r2145, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2146, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2147, %r2032, %r2145;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2150, %r2147, %r2146;
	// end inline asm
	// begin inline asm
	mov.b32 %r2153, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2154, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2155, %r2035, %r2153;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2158, %r2155, %r2154;
	// end inline asm
	// begin inline asm
	mov.b32 %r2161, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2162, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2163, %r2038, %r2161;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2166, %r2163, %r2162;
	// end inline asm
	// begin inline asm
	mov.b32 %r2172, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2170, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2171, %r2172, %r2170;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2174, %r2046, %r2171;
	// end inline asm
	// begin inline asm
	mov.b32 %r2177, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2178, %r2172, %r2177;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2181, %r2054, %r2178;
	// end inline asm
	// begin inline asm
	mov.b32 %r2184, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2185, %r2172, %r2184;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2188, %r2062, %r2185;
	// end inline asm
	// begin inline asm
	mov.b32 %r2191, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2192, %r2172, %r2191;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2195, %r2070, %r2192;
	// end inline asm
	mov.u32 	%r2201, 25152;
	// begin inline asm
	prmt.b32 %r2198, %r2174, %r2188, %r2201;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2202, %r2181, %r2195, %r2201;
	// end inline asm
	shl.b32 	%r2209, %r2202, 4;
	mov.u32 	%r2207, 252645135;
	// begin inline asm
	lop3.b32 %r2206, %r2207, %r2198, %r2209, 202;
	// end inline asm
	xor.b32  	%r7725, %r2206, -2004318072;
	// begin inline asm
	mov.b32 %r2213, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2211, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2212, %r2213, %r2211;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2215, %r2078, %r2212;
	// end inline asm
	// begin inline asm
	mov.b32 %r2218, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2219, %r2213, %r2218;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2222, %r2086, %r2219;
	// end inline asm
	// begin inline asm
	mov.b32 %r2225, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2226, %r2213, %r2225;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2229, %r2094, %r2226;
	// end inline asm
	// begin inline asm
	mov.b32 %r2232, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2233, %r2213, %r2232;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2236, %r2102, %r2233;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2239, %r2215, %r2229, %r2201;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2243, %r2222, %r2236, %r2201;
	// end inline asm
	shl.b32 	%r2250, %r2243, 4;
	// begin inline asm
	lop3.b32 %r2247, %r2207, %r2239, %r2250, 202;
	// end inline asm
	xor.b32  	%r7726, %r2247, -2004318072;
	// begin inline asm
	mov.b32 %r2254, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2252, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2253, %r2254, %r2252;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2256, %r2110, %r2253;
	// end inline asm
	// begin inline asm
	mov.b32 %r2259, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2260, %r2254, %r2259;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2263, %r2118, %r2260;
	// end inline asm
	// begin inline asm
	mov.b32 %r2266, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2267, %r2254, %r2266;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2270, %r2126, %r2267;
	// end inline asm
	// begin inline asm
	mov.b32 %r2273, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2274, %r2254, %r2273;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2277, %r2134, %r2274;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2280, %r2256, %r2270, %r2201;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2284, %r2263, %r2277, %r2201;
	// end inline asm
	shl.b32 	%r2291, %r2284, 4;
	// begin inline asm
	lop3.b32 %r2288, %r2207, %r2280, %r2291, 202;
	// end inline asm
	xor.b32  	%r7727, %r2288, -2004318072;
	// begin inline asm
	mov.b32 %r2295, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2293, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2294, %r2295, %r2293;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2297, %r2142, %r2294;
	// end inline asm
	// begin inline asm
	mov.b32 %r2300, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2301, %r2295, %r2300;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2304, %r2150, %r2301;
	// end inline asm
	// begin inline asm
	mov.b32 %r2307, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2308, %r2295, %r2307;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2311, %r2158, %r2308;
	// end inline asm
	// begin inline asm
	mov.b32 %r2314, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2315, %r2295, %r2314;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2318, %r2166, %r2315;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2321, %r2297, %r2311, %r2201;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2325, %r2304, %r2318, %r2201;
	// end inline asm
	shl.b32 	%r2332, %r2325, 4;
	// begin inline asm
	lop3.b32 %r2329, %r2207, %r2321, %r2332, 202;
	// end inline asm
	xor.b32  	%r7728, %r2329, -2004318072;
	add.s64 	%rd80, %rd86, %rd14;
	st.shared.u32 	[%rd80], %r7725;
	add.s64 	%rd81, %rd86, %rd13;
	st.shared.u32 	[%rd81], %r7726;
	add.s64 	%rd82, %rd86, %rd12;
	st.shared.u32 	[%rd82], %r7727;
	add.s64 	%rd83, %rd86, %rd11;
	st.shared.u32 	[%rd83], %r7728;
	ld.shared.u32 	%r7795, [%rd76];
	ld.shared.u32 	%r7796, [%rd77];
	ld.shared.u32 	%r7797, [%rd78];
	ld.shared.u32 	%r7798, [%rd79];
	// begin inline asm
	mov.b32 %r2338, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2349, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r2337, %r7795, -2004318072;
	// begin inline asm
	lop3.b32 %r2335, %r540, %r2337, %r2338, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2339, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2340, %r2338, %r2339;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2343, %r2335, %r2340;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2346, %r551, %r2337, %r2349, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2350, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2351, %r2349, %r2350;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2354, %r2346, %r2351;
	// end inline asm
	shr.u32 	%r2359, %r2337, 8;
	// begin inline asm
	lop3.b32 %r2357, %r540, %r2359, %r2338, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2361, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2362, %r2338, %r2361;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2365, %r2357, %r2362;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2368, %r551, %r2359, %r2349, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2372, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2373, %r2349, %r2372;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2376, %r2368, %r2373;
	// end inline asm
	// begin inline asm
	mov.b32 %r2384, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2395, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r2383, %r7796, -2004318072;
	// begin inline asm
	lop3.b32 %r2381, %r540, %r2383, %r2384, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2385, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2386, %r2384, %r2385;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2389, %r2381, %r2386;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2392, %r551, %r2383, %r2395, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2396, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2397, %r2395, %r2396;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2400, %r2392, %r2397;
	// end inline asm
	shr.u32 	%r2405, %r2383, 8;
	// begin inline asm
	lop3.b32 %r2403, %r540, %r2405, %r2384, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2407, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2408, %r2384, %r2407;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2411, %r2403, %r2408;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2414, %r551, %r2405, %r2395, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2418, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2419, %r2395, %r2418;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2422, %r2414, %r2419;
	// end inline asm
	// begin inline asm
	mov.b32 %r2430, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2441, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r2429, %r7797, -2004318072;
	// begin inline asm
	lop3.b32 %r2427, %r540, %r2429, %r2430, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2431, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2432, %r2430, %r2431;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2435, %r2427, %r2432;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2438, %r551, %r2429, %r2441, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2442, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2443, %r2441, %r2442;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2446, %r2438, %r2443;
	// end inline asm
	shr.u32 	%r2451, %r2429, 8;
	// begin inline asm
	lop3.b32 %r2449, %r540, %r2451, %r2430, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2453, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2454, %r2430, %r2453;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2457, %r2449, %r2454;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2460, %r551, %r2451, %r2441, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2464, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2465, %r2441, %r2464;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2468, %r2460, %r2465;
	// end inline asm
	// begin inline asm
	mov.b32 %r2476, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2487, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r2475, %r7798, -2004318072;
	// begin inline asm
	lop3.b32 %r2473, %r540, %r2475, %r2476, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2477, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2478, %r2476, %r2477;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2481, %r2473, %r2478;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2484, %r551, %r2475, %r2487, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2488, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2489, %r2487, %r2488;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2492, %r2484, %r2489;
	// end inline asm
	shr.u32 	%r2497, %r2475, 8;
	// begin inline asm
	lop3.b32 %r2495, %r540, %r2497, %r2476, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2499, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2500, %r2476, %r2499;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2503, %r2495, %r2500;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2506, %r551, %r2497, %r2487, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2510, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2511, %r2487, %r2510;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2514, %r2506, %r2511;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2517, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2519, %r2517, %r2343;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2522, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2524, %r2522, %r2354;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2527, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2529, %r2527, %r2365;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2532, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2534, %r2532, %r2376;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2537, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2539, %r2537, %r2389;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2542, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2544, %r2542, %r2400;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2547, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2549, %r2547, %r2411;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2552, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2554, %r2552, %r2422;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2557, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2559, %r2557, %r2435;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2562, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2564, %r2562, %r2446;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2567, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2569, %r2567, %r2457;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2572, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2574, %r2572, %r2468;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2577, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2579, %r2577, %r2481;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2582, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2584, %r2582, %r2492;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2587, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2589, %r2587, %r2503;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2592, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2594, %r2592, %r2514;
	// end inline asm
	// begin inline asm
	mov.b32 %r2602, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2613, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2599, %r540, %r1053, %r2602, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2603, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2604, %r2602, %r2603;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2607, %r2599, %r2604;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2610, %r551, %r1053, %r2613, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2614, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2615, %r2613, %r2614;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2618, %r2610, %r2615;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2621, %r540, %r1075, %r2602, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2625, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2626, %r2602, %r2625;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2629, %r2621, %r2626;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2632, %r551, %r1075, %r2613, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2636, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2637, %r2613, %r2636;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2640, %r2632, %r2637;
	// end inline asm
	// begin inline asm
	mov.b32 %r2648, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2659, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2645, %r540, %r1099, %r2648, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2649, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2650, %r2648, %r2649;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2653, %r2645, %r2650;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2656, %r551, %r1099, %r2659, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2660, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2661, %r2659, %r2660;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2664, %r2656, %r2661;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2667, %r540, %r1121, %r2648, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2671, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2672, %r2648, %r2671;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2675, %r2667, %r2672;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2678, %r551, %r1121, %r2659, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2682, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2683, %r2659, %r2682;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2686, %r2678, %r2683;
	// end inline asm
	// begin inline asm
	mov.b32 %r2694, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2705, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2691, %r540, %r1145, %r2694, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2695, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2696, %r2694, %r2695;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2699, %r2691, %r2696;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2702, %r551, %r1145, %r2705, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2706, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2707, %r2705, %r2706;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2710, %r2702, %r2707;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2713, %r540, %r1167, %r2694, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2717, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2718, %r2694, %r2717;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2721, %r2713, %r2718;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2724, %r551, %r1167, %r2705, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2728, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2729, %r2705, %r2728;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2732, %r2724, %r2729;
	// end inline asm
	// begin inline asm
	mov.b32 %r2740, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2751, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2737, %r540, %r1191, %r2740, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2741, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2742, %r2740, %r2741;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2745, %r2737, %r2742;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2748, %r551, %r1191, %r2751, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2752, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2753, %r2751, %r2752;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2756, %r2748, %r2753;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2759, %r540, %r1213, %r2740, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2763, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2764, %r2740, %r2763;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2767, %r2759, %r2764;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2770, %r551, %r1213, %r2751, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2774, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2775, %r2751, %r2774;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2778, %r2770, %r2775;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2781, %r196, %r2607, %r2519;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2785, %r196, %r2618, %r2524;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2789, %r196, %r2629, %r2529;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2793, %r196, %r2640, %r2534;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2797, %r196, %r2653, %r2539;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2801, %r196, %r2664, %r2544;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2805, %r196, %r2675, %r2549;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2809, %r196, %r2686, %r2554;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2813, %r196, %r2699, %r2559;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2817, %r196, %r2710, %r2564;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2821, %r196, %r2721, %r2569;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2825, %r196, %r2732, %r2574;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2829, %r196, %r2745, %r2579;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2833, %r196, %r2756, %r2584;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2837, %r196, %r2767, %r2589;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2841, %r196, %r2778, %r2594;
	// end inline asm
	// begin inline asm
	mov.b32 %r2850, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2861, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2847, %r540, %r1333, %r2850, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2851, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2852, %r2850, %r2851;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2855, %r2847, %r2852;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2858, %r551, %r1333, %r2861, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2862, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2863, %r2861, %r2862;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2866, %r2858, %r2863;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2869, %r540, %r1355, %r2850, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2873, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2874, %r2850, %r2873;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2877, %r2869, %r2874;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2880, %r551, %r1355, %r2861, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2884, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2885, %r2861, %r2884;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2888, %r2880, %r2885;
	// end inline asm
	// begin inline asm
	mov.b32 %r2896, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2907, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2893, %r540, %r1379, %r2896, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2897, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2898, %r2896, %r2897;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2901, %r2893, %r2898;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2904, %r551, %r1379, %r2907, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2908, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2909, %r2907, %r2908;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2912, %r2904, %r2909;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2915, %r540, %r1401, %r2896, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2919, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2920, %r2896, %r2919;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2923, %r2915, %r2920;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2926, %r551, %r1401, %r2907, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2930, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2931, %r2907, %r2930;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2934, %r2926, %r2931;
	// end inline asm
	// begin inline asm
	mov.b32 %r2942, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2953, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2939, %r540, %r1425, %r2942, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2943, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2944, %r2942, %r2943;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2947, %r2939, %r2944;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2950, %r551, %r1425, %r2953, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2954, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2955, %r2953, %r2954;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2958, %r2950, %r2955;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2961, %r540, %r1447, %r2942, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2965, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2966, %r2942, %r2965;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2969, %r2961, %r2966;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2972, %r551, %r1447, %r2953, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2976, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2977, %r2953, %r2976;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2980, %r2972, %r2977;
	// end inline asm
	// begin inline asm
	mov.b32 %r2988, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2999, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2985, %r540, %r1471, %r2988, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2989, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2990, %r2988, %r2989;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2993, %r2985, %r2990;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2996, %r551, %r1471, %r2999, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3000, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3001, %r2999, %r3000;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3004, %r2996, %r3001;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3007, %r540, %r1493, %r2988, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3011, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3012, %r2988, %r3011;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3015, %r3007, %r3012;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3018, %r551, %r1493, %r2999, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3022, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3023, %r2999, %r3022;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3026, %r3018, %r3023;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3029, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3031, %r3029, %r2855, %r2781;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3035, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3037, %r3035, %r2866, %r2785;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3041, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3043, %r3041, %r2877, %r2789;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3047, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3049, %r3047, %r2888, %r2793;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3053, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3055, %r3053, %r2901, %r2797;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3059, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3061, %r3059, %r2912, %r2801;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3065, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3067, %r3065, %r2923, %r2805;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3071, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3073, %r3071, %r2934, %r2809;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3077, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3079, %r3077, %r2947, %r2813;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3083, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3085, %r3083, %r2958, %r2817;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3089, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3091, %r3089, %r2969, %r2821;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3095, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3097, %r3095, %r2980, %r2825;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3101, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3103, %r3101, %r2993, %r2829;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3107, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3109, %r3107, %r3004, %r2833;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3113, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3115, %r3113, %r3015, %r2837;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3119, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3121, %r3119, %r3026, %r2841;
	// end inline asm
	// begin inline asm
	mov.b32 %r3130, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r3141, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3127, %r540, %r541, %r3130, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3131, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3132, %r3130, %r3131;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3135, %r3127, %r3132;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3138, %r551, %r541, %r3141, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3142, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3143, %r3141, %r3142;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3146, %r3138, %r3143;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3149, %r540, %r563, %r3130, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3153, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3154, %r3130, %r3153;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3157, %r3149, %r3154;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3160, %r551, %r563, %r3141, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3164, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3165, %r3141, %r3164;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3168, %r3160, %r3165;
	// end inline asm
	// begin inline asm
	mov.b32 %r3176, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r3187, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3173, %r540, %r587, %r3176, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3177, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3178, %r3176, %r3177;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3181, %r3173, %r3178;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3184, %r551, %r587, %r3187, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3188, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3189, %r3187, %r3188;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3192, %r3184, %r3189;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3195, %r540, %r609, %r3176, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3199, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3200, %r3176, %r3199;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3203, %r3195, %r3200;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3206, %r551, %r609, %r3187, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3210, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3211, %r3187, %r3210;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3214, %r3206, %r3211;
	// end inline asm
	// begin inline asm
	mov.b32 %r3222, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r3233, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3219, %r540, %r633, %r3222, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3223, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3224, %r3222, %r3223;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3227, %r3219, %r3224;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3230, %r551, %r633, %r3233, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3234, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3235, %r3233, %r3234;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3238, %r3230, %r3235;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3241, %r540, %r655, %r3222, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3245, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3246, %r3222, %r3245;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3249, %r3241, %r3246;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3252, %r551, %r655, %r3233, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3256, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3257, %r3233, %r3256;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3260, %r3252, %r3257;
	// end inline asm
	// begin inline asm
	mov.b32 %r3268, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r3279, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3265, %r540, %r679, %r3268, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3269, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3270, %r3268, %r3269;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3273, %r3265, %r3270;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3276, %r551, %r679, %r3279, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3280, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3281, %r3279, %r3280;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3284, %r3276, %r3281;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3287, %r540, %r701, %r3268, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3291, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3292, %r3268, %r3291;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3295, %r3287, %r3292;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3298, %r551, %r701, %r3279, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3302, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3303, %r3279, %r3302;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3306, %r3298, %r3303;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3380, %r232, %r3135, %r3031;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3377, %r232, %r3146, %r3037;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3389, %r232, %r3157, %r3043;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3386, %r232, %r3168, %r3049;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3398, %r232, %r3181, %r3055;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3395, %r232, %r3192, %r3061;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3407, %r232, %r3203, %r3067;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3404, %r232, %r3214, %r3073;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3416, %r232, %r3227, %r3079;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3413, %r232, %r3238, %r3085;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3425, %r232, %r3249, %r3091;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3422, %r232, %r3260, %r3097;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3434, %r232, %r3273, %r3103;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3431, %r232, %r3284, %r3109;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3443, %r232, %r3295, %r3115;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3440, %r232, %r3306, %r3121;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3373, %r281;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3375, %r3373, %r3377;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3378, %r278, %r3380, %r3375;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3382, %r281;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3384, %r3382, %r3386;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3387, %r278, %r3389, %r3384;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3391, %r281;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3393, %r3391, %r3395;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3396, %r278, %r3398, %r3393;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3400, %r281;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3402, %r3400, %r3404;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3405, %r278, %r3407, %r3402;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3409, %r281;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3411, %r3409, %r3413;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3414, %r278, %r3416, %r3411;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3418, %r281;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3420, %r3418, %r3422;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3423, %r278, %r3425, %r3420;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3427, %r281;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3429, %r3427, %r3431;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3432, %r278, %r3434, %r3429;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3436, %r281;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3438, %r3436, %r3440;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3441, %r278, %r3443, %r3438;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3445, %r281, %r3380;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3448, %r278, %r3377, %r3445;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3452, %r281, %r3389;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3455, %r278, %r3386, %r3452;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3459, %r281, %r3398;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3462, %r278, %r3395, %r3459;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3466, %r281, %r3407;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3469, %r278, %r3404, %r3466;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3473, %r281, %r3416;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3476, %r278, %r3413, %r3473;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3480, %r281, %r3425;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3483, %r278, %r3422, %r3480;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3487, %r281, %r3434;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3490, %r278, %r3431, %r3487;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3494, %r281, %r3443;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3497, %r278, %r3440, %r3494;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3588, %r3585}, {%r320, %r326, %r323, %r329}, {%r3378, %r3448}, {%r7380, %r7380};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3597, %r3594}, {%r320, %r326, %r323, %r329}, {%r3387, %r3455}, {%r7380, %r7380};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3606, %r3603}, {%r320, %r326, %r323, %r329}, {%r3396, %r3462}, {%r7380, %r7380};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3615, %r3612}, {%r320, %r326, %r323, %r329}, {%r3405, %r3469}, {%r7380, %r7380};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3624, %r3621}, {%r320, %r326, %r323, %r329}, {%r3414, %r3476}, {%r7380, %r7380};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3633, %r3630}, {%r320, %r326, %r323, %r329}, {%r3423, %r3483}, {%r7380, %r7380};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3642, %r3639}, {%r320, %r326, %r323, %r329}, {%r3432, %r3490}, {%r7380, %r7380};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3651, %r3648}, {%r320, %r326, %r323, %r329}, {%r3441, %r3497}, {%r7380, %r7380};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3581, %r367;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3583, %r3581, %r3585;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3586, %r364, %r3588, %r3583;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3590, %r367;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3592, %r3590, %r3594;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3595, %r364, %r3597, %r3592;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3599, %r367;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3601, %r3599, %r3603;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3604, %r364, %r3606, %r3601;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3608, %r367;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3610, %r3608, %r3612;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3613, %r364, %r3615, %r3610;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3617, %r367;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3619, %r3617, %r3621;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3622, %r364, %r3624, %r3619;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3626, %r367;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3628, %r3626, %r3630;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3631, %r364, %r3633, %r3628;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3635, %r367;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3637, %r3635, %r3639;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3640, %r364, %r3642, %r3637;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3644, %r367;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3646, %r3644, %r3648;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3649, %r364, %r3651, %r3646;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3653, %r367, %r3588;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3656, %r364, %r3585, %r3653;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3660, %r367, %r3597;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3663, %r364, %r3594, %r3660;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3667, %r367, %r3606;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3670, %r364, %r3603, %r3667;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3674, %r367, %r3615;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3677, %r364, %r3612, %r3674;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3681, %r367, %r3624;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3684, %r364, %r3621, %r3681;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3688, %r367, %r3633;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3691, %r364, %r3630, %r3688;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3695, %r367, %r3642;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3698, %r364, %r3639, %r3695;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3702, %r367, %r3651;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3705, %r364, %r3648, %r3702;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3709, %r3710}, {%r72, %r74, %r73, %r75}, {%r3586, %r3656}, {%r7380, %r7380};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3719, %r3720}, {%r72, %r74, %r73, %r75}, {%r3595, %r3663}, {%r7380, %r7380};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3729, %r3730}, {%r72, %r74, %r73, %r75}, {%r3604, %r3670}, {%r7380, %r7380};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3739, %r3740}, {%r72, %r74, %r73, %r75}, {%r3613, %r3677}, {%r7380, %r7380};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3749, %r3750}, {%r72, %r74, %r73, %r75}, {%r3622, %r3684}, {%r7380, %r7380};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3759, %r3760}, {%r72, %r74, %r73, %r75}, {%r3631, %r3691}, {%r7380, %r7380};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3769, %r3770}, {%r72, %r74, %r73, %r75}, {%r3640, %r3698}, {%r7380, %r7380};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3779, %r3780}, {%r72, %r74, %r73, %r75}, {%r3649, %r3705}, {%r7380, %r7380};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3789, %r126, %r3709;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3792, %r126, %r3710;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3795, %r126, %r3719;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3798, %r126, %r3720;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3801, %r126, %r3729;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3804, %r126, %r3730;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3807, %r126, %r3739;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3810, %r126, %r3740;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3813, %r126, %r3749;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3816, %r126, %r3750;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3819, %r126, %r3759;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3822, %r126, %r3760;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3825, %r126, %r3769;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3828, %r126, %r3770;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3831, %r126, %r3779;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3834, %r126, %r3780;
	// end inline asm
	// begin inline asm
	mov.b32 %r3837, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3838, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3839, %r3789, %r3837;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3842, %r3839, %r3838;
	// end inline asm
	// begin inline asm
	mov.b32 %r3845, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3846, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3847, %r3792, %r3845;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3850, %r3847, %r3846;
	// end inline asm
	// begin inline asm
	mov.b32 %r3853, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3854, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3855, %r3795, %r3853;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3858, %r3855, %r3854;
	// end inline asm
	// begin inline asm
	mov.b32 %r3861, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3862, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3863, %r3798, %r3861;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3866, %r3863, %r3862;
	// end inline asm
	// begin inline asm
	mov.b32 %r3869, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3870, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3871, %r3801, %r3869;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3874, %r3871, %r3870;
	// end inline asm
	// begin inline asm
	mov.b32 %r3877, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3878, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3879, %r3804, %r3877;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3882, %r3879, %r3878;
	// end inline asm
	// begin inline asm
	mov.b32 %r3885, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3886, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3887, %r3807, %r3885;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3890, %r3887, %r3886;
	// end inline asm
	// begin inline asm
	mov.b32 %r3893, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3894, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3895, %r3810, %r3893;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3898, %r3895, %r3894;
	// end inline asm
	// begin inline asm
	mov.b32 %r3901, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3902, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3903, %r3813, %r3901;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3906, %r3903, %r3902;
	// end inline asm
	// begin inline asm
	mov.b32 %r3909, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3910, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3911, %r3816, %r3909;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3914, %r3911, %r3910;
	// end inline asm
	// begin inline asm
	mov.b32 %r3917, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3918, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3919, %r3819, %r3917;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3922, %r3919, %r3918;
	// end inline asm
	// begin inline asm
	mov.b32 %r3925, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3926, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3927, %r3822, %r3925;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3930, %r3927, %r3926;
	// end inline asm
	// begin inline asm
	mov.b32 %r3933, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3934, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3935, %r3825, %r3933;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3938, %r3935, %r3934;
	// end inline asm
	// begin inline asm
	mov.b32 %r3941, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3942, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3943, %r3828, %r3941;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3946, %r3943, %r3942;
	// end inline asm
	// begin inline asm
	mov.b32 %r3949, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3950, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3951, %r3831, %r3949;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3954, %r3951, %r3950;
	// end inline asm
	// begin inline asm
	mov.b32 %r3957, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3958, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3959, %r3834, %r3957;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3962, %r3959, %r3958;
	// end inline asm
	// begin inline asm
	mov.b32 %r3968, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r3966, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3967, %r3968, %r3966;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3970, %r3842, %r3967;
	// end inline asm
	// begin inline asm
	mov.b32 %r3973, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3974, %r3968, %r3973;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3977, %r3850, %r3974;
	// end inline asm
	// begin inline asm
	mov.b32 %r3980, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3981, %r3968, %r3980;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3984, %r3858, %r3981;
	// end inline asm
	// begin inline asm
	mov.b32 %r3987, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3988, %r3968, %r3987;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3991, %r3866, %r3988;
	// end inline asm
	// begin inline asm
	prmt.b32 %r3994, %r3970, %r3984, %r2201;
	// end inline asm
	// begin inline asm
	prmt.b32 %r3998, %r3977, %r3991, %r2201;
	// end inline asm
	shl.b32 	%r4005, %r3998, 4;
	// begin inline asm
	lop3.b32 %r4002, %r2207, %r3994, %r4005, 202;
	// end inline asm
	xor.b32  	%r7729, %r4002, -2004318072;
	// begin inline asm
	mov.b32 %r4009, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4007, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4008, %r4009, %r4007;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4011, %r3874, %r4008;
	// end inline asm
	// begin inline asm
	mov.b32 %r4014, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4015, %r4009, %r4014;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4018, %r3882, %r4015;
	// end inline asm
	// begin inline asm
	mov.b32 %r4021, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4022, %r4009, %r4021;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4025, %r3890, %r4022;
	// end inline asm
	// begin inline asm
	mov.b32 %r4028, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4029, %r4009, %r4028;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4032, %r3898, %r4029;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4035, %r4011, %r4025, %r2201;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4039, %r4018, %r4032, %r2201;
	// end inline asm
	shl.b32 	%r4046, %r4039, 4;
	// begin inline asm
	lop3.b32 %r4043, %r2207, %r4035, %r4046, 202;
	// end inline asm
	xor.b32  	%r7730, %r4043, -2004318072;
	// begin inline asm
	mov.b32 %r4050, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4048, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4049, %r4050, %r4048;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4052, %r3906, %r4049;
	// end inline asm
	// begin inline asm
	mov.b32 %r4055, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4056, %r4050, %r4055;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4059, %r3914, %r4056;
	// end inline asm
	// begin inline asm
	mov.b32 %r4062, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4063, %r4050, %r4062;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4066, %r3922, %r4063;
	// end inline asm
	// begin inline asm
	mov.b32 %r4069, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4070, %r4050, %r4069;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4073, %r3930, %r4070;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4076, %r4052, %r4066, %r2201;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4080, %r4059, %r4073, %r2201;
	// end inline asm
	shl.b32 	%r4087, %r4080, 4;
	// begin inline asm
	lop3.b32 %r4084, %r2207, %r4076, %r4087, 202;
	// end inline asm
	xor.b32  	%r7731, %r4084, -2004318072;
	// begin inline asm
	mov.b32 %r4091, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4089, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4090, %r4091, %r4089;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4093, %r3938, %r4090;
	// end inline asm
	// begin inline asm
	mov.b32 %r4096, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4097, %r4091, %r4096;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4100, %r3946, %r4097;
	// end inline asm
	// begin inline asm
	mov.b32 %r4103, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4104, %r4091, %r4103;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4107, %r3954, %r4104;
	// end inline asm
	// begin inline asm
	mov.b32 %r4110, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4111, %r4091, %r4110;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4114, %r3962, %r4111;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4117, %r4093, %r4107, %r2201;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4121, %r4100, %r4114, %r2201;
	// end inline asm
	shl.b32 	%r4128, %r4121, 4;
	// begin inline asm
	lop3.b32 %r4125, %r2207, %r4117, %r4128, 202;
	// end inline asm
	xor.b32  	%r7732, %r4125, -2004318072;
	st.shared.u32 	[%rd80], %r7729;
	st.shared.u32 	[%rd81], %r7730;
	st.shared.u32 	[%rd82], %r7731;
	st.shared.u32 	[%rd83], %r7732;
	ld.shared.u32 	%r7799, [%rd76];
	ld.shared.u32 	%r7800, [%rd77];
	ld.shared.u32 	%r7801, [%rd78];
	ld.shared.u32 	%r7802, [%rd79];
	// begin inline asm
	mov.b32 %r4134, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4145, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r4133, %r7799, -2004318072;
	// begin inline asm
	lop3.b32 %r4131, %r540, %r4133, %r4134, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4135, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4136, %r4134, %r4135;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4139, %r4131, %r4136;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4142, %r551, %r4133, %r4145, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4146, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4147, %r4145, %r4146;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4150, %r4142, %r4147;
	// end inline asm
	shr.u32 	%r4155, %r4133, 8;
	// begin inline asm
	lop3.b32 %r4153, %r540, %r4155, %r4134, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4157, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4158, %r4134, %r4157;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4161, %r4153, %r4158;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4164, %r551, %r4155, %r4145, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4168, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4169, %r4145, %r4168;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4172, %r4164, %r4169;
	// end inline asm
	// begin inline asm
	mov.b32 %r4180, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4191, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r4179, %r7800, -2004318072;
	// begin inline asm
	lop3.b32 %r4177, %r540, %r4179, %r4180, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4181, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4182, %r4180, %r4181;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4185, %r4177, %r4182;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4188, %r551, %r4179, %r4191, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4192, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4193, %r4191, %r4192;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4196, %r4188, %r4193;
	// end inline asm
	shr.u32 	%r4201, %r4179, 8;
	// begin inline asm
	lop3.b32 %r4199, %r540, %r4201, %r4180, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4203, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4204, %r4180, %r4203;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4207, %r4199, %r4204;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4210, %r551, %r4201, %r4191, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4214, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4215, %r4191, %r4214;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4218, %r4210, %r4215;
	// end inline asm
	// begin inline asm
	mov.b32 %r4226, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4237, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r4225, %r7801, -2004318072;
	// begin inline asm
	lop3.b32 %r4223, %r540, %r4225, %r4226, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4227, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4228, %r4226, %r4227;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4231, %r4223, %r4228;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4234, %r551, %r4225, %r4237, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4238, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4239, %r4237, %r4238;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4242, %r4234, %r4239;
	// end inline asm
	shr.u32 	%r4247, %r4225, 8;
	// begin inline asm
	lop3.b32 %r4245, %r540, %r4247, %r4226, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4249, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4250, %r4226, %r4249;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4253, %r4245, %r4250;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4256, %r551, %r4247, %r4237, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4260, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4261, %r4237, %r4260;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4264, %r4256, %r4261;
	// end inline asm
	// begin inline asm
	mov.b32 %r4272, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4283, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r4271, %r7802, -2004318072;
	// begin inline asm
	lop3.b32 %r4269, %r540, %r4271, %r4272, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4273, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4274, %r4272, %r4273;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4277, %r4269, %r4274;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4280, %r551, %r4271, %r4283, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4284, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4285, %r4283, %r4284;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4288, %r4280, %r4285;
	// end inline asm
	shr.u32 	%r4293, %r4271, 8;
	// begin inline asm
	lop3.b32 %r4291, %r540, %r4293, %r4272, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4295, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4296, %r4272, %r4295;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4299, %r4291, %r4296;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4302, %r551, %r4293, %r4283, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4306, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4307, %r4283, %r4306;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4310, %r4302, %r4307;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4313, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4315, %r4313, %r4139;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4318, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4320, %r4318, %r4150;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4323, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4325, %r4323, %r4161;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4328, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4330, %r4328, %r4172;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4333, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4335, %r4333, %r4185;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4338, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4340, %r4338, %r4196;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4343, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4345, %r4343, %r4207;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4348, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4350, %r4348, %r4218;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4353, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4355, %r4353, %r4231;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4358, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4360, %r4358, %r4242;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4363, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4365, %r4363, %r4253;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4368, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4370, %r4368, %r4264;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4373, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4375, %r4373, %r4277;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4378, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4380, %r4378, %r4288;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4383, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4385, %r4383, %r4299;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4388, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4390, %r4388, %r4310;
	// end inline asm
	// begin inline asm
	mov.b32 %r4398, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4409, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4395, %r540, %r1333, %r4398, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4399, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4400, %r4398, %r4399;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4403, %r4395, %r4400;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4406, %r551, %r1333, %r4409, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4410, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4411, %r4409, %r4410;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4414, %r4406, %r4411;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4417, %r540, %r1355, %r4398, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4421, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4422, %r4398, %r4421;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4425, %r4417, %r4422;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4428, %r551, %r1355, %r4409, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4432, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4433, %r4409, %r4432;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4436, %r4428, %r4433;
	// end inline asm
	// begin inline asm
	mov.b32 %r4444, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4455, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4441, %r540, %r1379, %r4444, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4445, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4446, %r4444, %r4445;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4449, %r4441, %r4446;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4452, %r551, %r1379, %r4455, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4456, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4457, %r4455, %r4456;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4460, %r4452, %r4457;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4463, %r540, %r1401, %r4444, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4467, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4468, %r4444, %r4467;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4471, %r4463, %r4468;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4474, %r551, %r1401, %r4455, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4478, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4479, %r4455, %r4478;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4482, %r4474, %r4479;
	// end inline asm
	// begin inline asm
	mov.b32 %r4490, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4501, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4487, %r540, %r1425, %r4490, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4491, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4492, %r4490, %r4491;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4495, %r4487, %r4492;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4498, %r551, %r1425, %r4501, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4502, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4503, %r4501, %r4502;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4506, %r4498, %r4503;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4509, %r540, %r1447, %r4490, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4513, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4514, %r4490, %r4513;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4517, %r4509, %r4514;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4520, %r551, %r1447, %r4501, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4524, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4525, %r4501, %r4524;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4528, %r4520, %r4525;
	// end inline asm
	// begin inline asm
	mov.b32 %r4536, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4547, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4533, %r540, %r1471, %r4536, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4537, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4538, %r4536, %r4537;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4541, %r4533, %r4538;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4544, %r551, %r1471, %r4547, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4548, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4549, %r4547, %r4548;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4552, %r4544, %r4549;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4555, %r540, %r1493, %r4536, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4559, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4560, %r4536, %r4559;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4563, %r4555, %r4560;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4566, %r551, %r1493, %r4547, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4570, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4571, %r4547, %r4570;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4574, %r4566, %r4571;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4577, %r196, %r4403, %r4315;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4581, %r196, %r4414, %r4320;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4585, %r196, %r4425, %r4325;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4589, %r196, %r4436, %r4330;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4593, %r196, %r4449, %r4335;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4597, %r196, %r4460, %r4340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4601, %r196, %r4471, %r4345;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4605, %r196, %r4482, %r4350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4609, %r196, %r4495, %r4355;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4613, %r196, %r4506, %r4360;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4617, %r196, %r4517, %r4365;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4621, %r196, %r4528, %r4370;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4625, %r196, %r4541, %r4375;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4629, %r196, %r4552, %r4380;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4633, %r196, %r4563, %r4385;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4637, %r196, %r4574, %r4390;
	// end inline asm
	// begin inline asm
	mov.b32 %r4646, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4657, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4643, %r540, %r541, %r4646, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4647, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4648, %r4646, %r4647;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4651, %r4643, %r4648;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4654, %r551, %r541, %r4657, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4658, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4659, %r4657, %r4658;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4662, %r4654, %r4659;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4665, %r540, %r563, %r4646, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4669, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4670, %r4646, %r4669;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4673, %r4665, %r4670;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4676, %r551, %r563, %r4657, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4680, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4681, %r4657, %r4680;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4684, %r4676, %r4681;
	// end inline asm
	// begin inline asm
	mov.b32 %r4692, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4703, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4689, %r540, %r587, %r4692, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4693, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4694, %r4692, %r4693;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4697, %r4689, %r4694;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4700, %r551, %r587, %r4703, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4704, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4705, %r4703, %r4704;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4708, %r4700, %r4705;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4711, %r540, %r609, %r4692, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4715, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4716, %r4692, %r4715;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4719, %r4711, %r4716;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4722, %r551, %r609, %r4703, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4726, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4727, %r4703, %r4726;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4730, %r4722, %r4727;
	// end inline asm
	// begin inline asm
	mov.b32 %r4738, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4749, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4735, %r540, %r633, %r4738, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4739, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4740, %r4738, %r4739;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4743, %r4735, %r4740;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4746, %r551, %r633, %r4749, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4750, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4751, %r4749, %r4750;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4754, %r4746, %r4751;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4757, %r540, %r655, %r4738, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4761, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4762, %r4738, %r4761;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4765, %r4757, %r4762;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4768, %r551, %r655, %r4749, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4772, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4773, %r4749, %r4772;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4776, %r4768, %r4773;
	// end inline asm
	// begin inline asm
	mov.b32 %r4784, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4795, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4781, %r540, %r679, %r4784, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4785, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4786, %r4784, %r4785;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4789, %r4781, %r4786;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4792, %r551, %r679, %r4795, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4796, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4797, %r4795, %r4796;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4800, %r4792, %r4797;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4803, %r540, %r701, %r4784, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4807, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4808, %r4784, %r4807;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4811, %r4803, %r4808;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4814, %r551, %r701, %r4795, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4818, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4819, %r4795, %r4818;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4822, %r4814, %r4819;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4825, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4827, %r4825, %r4651, %r4577;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4831, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4833, %r4831, %r4662, %r4581;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4837, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4839, %r4837, %r4673, %r4585;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4843, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4845, %r4843, %r4684, %r4589;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4849, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4851, %r4849, %r4697, %r4593;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4855, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4857, %r4855, %r4708, %r4597;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4861, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4863, %r4861, %r4719, %r4601;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4867, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4869, %r4867, %r4730, %r4605;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4873, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4875, %r4873, %r4743, %r4609;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4879, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4881, %r4879, %r4754, %r4613;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4885, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4887, %r4885, %r4765, %r4617;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4891, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4893, %r4891, %r4776, %r4621;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4897, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4899, %r4897, %r4789, %r4625;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4903, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4905, %r4903, %r4800, %r4629;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4909, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4911, %r4909, %r4811, %r4633;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4915, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4917, %r4915, %r4822, %r4637;
	// end inline asm
	// begin inline asm
	mov.b32 %r4926, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4937, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4923, %r540, %r2337, %r4926, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4927, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4928, %r4926, %r4927;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4931, %r4923, %r4928;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4934, %r551, %r2337, %r4937, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4938, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4939, %r4937, %r4938;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4942, %r4934, %r4939;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4945, %r540, %r2359, %r4926, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4949, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4950, %r4926, %r4949;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4953, %r4945, %r4950;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4956, %r551, %r2359, %r4937, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4960, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4961, %r4937, %r4960;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4964, %r4956, %r4961;
	// end inline asm
	// begin inline asm
	mov.b32 %r4972, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4983, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4969, %r540, %r2383, %r4972, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4973, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4974, %r4972, %r4973;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4977, %r4969, %r4974;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4980, %r551, %r2383, %r4983, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4984, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4985, %r4983, %r4984;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4988, %r4980, %r4985;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4991, %r540, %r2405, %r4972, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4995, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4996, %r4972, %r4995;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4999, %r4991, %r4996;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5002, %r551, %r2405, %r4983, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5006, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5007, %r4983, %r5006;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5010, %r5002, %r5007;
	// end inline asm
	// begin inline asm
	mov.b32 %r5018, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5029, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5015, %r540, %r2429, %r5018, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5019, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5020, %r5018, %r5019;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5023, %r5015, %r5020;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5026, %r551, %r2429, %r5029, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5030, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5031, %r5029, %r5030;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5034, %r5026, %r5031;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5037, %r540, %r2451, %r5018, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5041, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5042, %r5018, %r5041;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5045, %r5037, %r5042;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5048, %r551, %r2451, %r5029, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5052, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5053, %r5029, %r5052;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5056, %r5048, %r5053;
	// end inline asm
	// begin inline asm
	mov.b32 %r5064, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5075, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5061, %r540, %r2475, %r5064, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5065, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5066, %r5064, %r5065;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5069, %r5061, %r5066;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5072, %r551, %r2475, %r5075, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5076, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5077, %r5075, %r5076;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5080, %r5072, %r5077;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5083, %r540, %r2497, %r5064, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5087, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5088, %r5064, %r5087;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5091, %r5083, %r5088;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5094, %r551, %r2497, %r5075, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5098, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5099, %r5075, %r5098;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5102, %r5094, %r5099;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5176, %r232, %r4931, %r4827;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5173, %r232, %r4942, %r4833;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5185, %r232, %r4953, %r4839;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5182, %r232, %r4964, %r4845;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5194, %r232, %r4977, %r4851;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5191, %r232, %r4988, %r4857;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5203, %r232, %r4999, %r4863;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5200, %r232, %r5010, %r4869;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5212, %r232, %r5023, %r4875;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5209, %r232, %r5034, %r4881;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5221, %r232, %r5045, %r4887;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5218, %r232, %r5056, %r4893;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5230, %r232, %r5069, %r4899;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5227, %r232, %r5080, %r4905;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5239, %r232, %r5091, %r4911;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5236, %r232, %r5102, %r4917;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5169, %r281;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5171, %r5169, %r5173;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5174, %r278, %r5176, %r5171;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5178, %r281;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5180, %r5178, %r5182;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5183, %r278, %r5185, %r5180;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5187, %r281;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5189, %r5187, %r5191;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5192, %r278, %r5194, %r5189;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5196, %r281;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5198, %r5196, %r5200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5201, %r278, %r5203, %r5198;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5205, %r281;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5207, %r5205, %r5209;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5210, %r278, %r5212, %r5207;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5214, %r281;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5216, %r5214, %r5218;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5219, %r278, %r5221, %r5216;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5223, %r281;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5225, %r5223, %r5227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5228, %r278, %r5230, %r5225;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5232, %r281;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5234, %r5232, %r5236;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5237, %r278, %r5239, %r5234;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5241, %r281, %r5176;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5244, %r278, %r5173, %r5241;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5248, %r281, %r5185;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5251, %r278, %r5182, %r5248;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5255, %r281, %r5194;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5258, %r278, %r5191, %r5255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5262, %r281, %r5203;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5265, %r278, %r5200, %r5262;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5269, %r281, %r5212;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5272, %r278, %r5209, %r5269;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5276, %r281, %r5221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5279, %r278, %r5218, %r5276;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5283, %r281, %r5230;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5286, %r278, %r5227, %r5283;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5290, %r281, %r5239;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5293, %r278, %r5236, %r5290;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5384, %r5381}, {%r320, %r326, %r323, %r329}, {%r5174, %r5244}, {%r7380, %r7380};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5393, %r5390}, {%r320, %r326, %r323, %r329}, {%r5183, %r5251}, {%r7380, %r7380};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5402, %r5399}, {%r320, %r326, %r323, %r329}, {%r5192, %r5258}, {%r7380, %r7380};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5411, %r5408}, {%r320, %r326, %r323, %r329}, {%r5201, %r5265}, {%r7380, %r7380};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5420, %r5417}, {%r320, %r326, %r323, %r329}, {%r5210, %r5272}, {%r7380, %r7380};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5429, %r5426}, {%r320, %r326, %r323, %r329}, {%r5219, %r5279}, {%r7380, %r7380};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5438, %r5435}, {%r320, %r326, %r323, %r329}, {%r5228, %r5286}, {%r7380, %r7380};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5447, %r5444}, {%r320, %r326, %r323, %r329}, {%r5237, %r5293}, {%r7380, %r7380};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5377, %r367;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5379, %r5377, %r5381;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5382, %r364, %r5384, %r5379;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5386, %r367;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5388, %r5386, %r5390;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5391, %r364, %r5393, %r5388;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5395, %r367;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5397, %r5395, %r5399;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5400, %r364, %r5402, %r5397;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5404, %r367;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5406, %r5404, %r5408;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5409, %r364, %r5411, %r5406;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5413, %r367;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5415, %r5413, %r5417;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5418, %r364, %r5420, %r5415;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5422, %r367;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5424, %r5422, %r5426;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5427, %r364, %r5429, %r5424;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5431, %r367;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5433, %r5431, %r5435;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5436, %r364, %r5438, %r5433;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5440, %r367;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5442, %r5440, %r5444;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5445, %r364, %r5447, %r5442;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5449, %r367, %r5384;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5452, %r364, %r5381, %r5449;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5456, %r367, %r5393;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5459, %r364, %r5390, %r5456;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5463, %r367, %r5402;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5466, %r364, %r5399, %r5463;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5470, %r367, %r5411;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5473, %r364, %r5408, %r5470;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5477, %r367, %r5420;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5480, %r364, %r5417, %r5477;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5484, %r367, %r5429;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5487, %r364, %r5426, %r5484;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5491, %r367, %r5438;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5494, %r364, %r5435, %r5491;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5498, %r367, %r5447;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5501, %r364, %r5444, %r5498;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5505, %r5506}, {%r72, %r74, %r73, %r75}, {%r5382, %r5452}, {%r7380, %r7380};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5515, %r5516}, {%r72, %r74, %r73, %r75}, {%r5391, %r5459}, {%r7380, %r7380};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5525, %r5526}, {%r72, %r74, %r73, %r75}, {%r5400, %r5466}, {%r7380, %r7380};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5535, %r5536}, {%r72, %r74, %r73, %r75}, {%r5409, %r5473}, {%r7380, %r7380};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5545, %r5546}, {%r72, %r74, %r73, %r75}, {%r5418, %r5480}, {%r7380, %r7380};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5555, %r5556}, {%r72, %r74, %r73, %r75}, {%r5427, %r5487}, {%r7380, %r7380};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5565, %r5566}, {%r72, %r74, %r73, %r75}, {%r5436, %r5494}, {%r7380, %r7380};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5575, %r5576}, {%r72, %r74, %r73, %r75}, {%r5445, %r5501}, {%r7380, %r7380};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5585, %r126, %r5505;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5588, %r126, %r5506;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5591, %r126, %r5515;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5594, %r126, %r5516;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5597, %r126, %r5525;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5600, %r126, %r5526;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5603, %r126, %r5535;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5606, %r126, %r5536;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5609, %r126, %r5545;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5612, %r126, %r5546;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5615, %r126, %r5555;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5618, %r126, %r5556;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5621, %r126, %r5565;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5624, %r126, %r5566;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5627, %r126, %r5575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5630, %r126, %r5576;
	// end inline asm
	// begin inline asm
	mov.b32 %r5633, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5634, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5635, %r5585, %r5633;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5638, %r5635, %r5634;
	// end inline asm
	// begin inline asm
	mov.b32 %r5641, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5642, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5643, %r5588, %r5641;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5646, %r5643, %r5642;
	// end inline asm
	// begin inline asm
	mov.b32 %r5649, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5650, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5651, %r5591, %r5649;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5654, %r5651, %r5650;
	// end inline asm
	// begin inline asm
	mov.b32 %r5657, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5658, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5659, %r5594, %r5657;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5662, %r5659, %r5658;
	// end inline asm
	// begin inline asm
	mov.b32 %r5665, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5666, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5667, %r5597, %r5665;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5670, %r5667, %r5666;
	// end inline asm
	// begin inline asm
	mov.b32 %r5673, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5674, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5675, %r5600, %r5673;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5678, %r5675, %r5674;
	// end inline asm
	// begin inline asm
	mov.b32 %r5681, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5682, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5683, %r5603, %r5681;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5686, %r5683, %r5682;
	// end inline asm
	// begin inline asm
	mov.b32 %r5689, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5690, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5691, %r5606, %r5689;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5694, %r5691, %r5690;
	// end inline asm
	// begin inline asm
	mov.b32 %r5697, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5698, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5699, %r5609, %r5697;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5702, %r5699, %r5698;
	// end inline asm
	// begin inline asm
	mov.b32 %r5705, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5706, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5707, %r5612, %r5705;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5710, %r5707, %r5706;
	// end inline asm
	// begin inline asm
	mov.b32 %r5713, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5714, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5715, %r5615, %r5713;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5718, %r5715, %r5714;
	// end inline asm
	// begin inline asm
	mov.b32 %r5721, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5722, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5723, %r5618, %r5721;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5726, %r5723, %r5722;
	// end inline asm
	// begin inline asm
	mov.b32 %r5729, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5730, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5731, %r5621, %r5729;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5734, %r5731, %r5730;
	// end inline asm
	// begin inline asm
	mov.b32 %r5737, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5738, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5739, %r5624, %r5737;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5742, %r5739, %r5738;
	// end inline asm
	// begin inline asm
	mov.b32 %r5745, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5746, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5747, %r5627, %r5745;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5750, %r5747, %r5746;
	// end inline asm
	// begin inline asm
	mov.b32 %r5753, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5754, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5755, %r5630, %r5753;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5758, %r5755, %r5754;
	// end inline asm
	// begin inline asm
	mov.b32 %r5764, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5762, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5763, %r5764, %r5762;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5766, %r5638, %r5763;
	// end inline asm
	// begin inline asm
	mov.b32 %r5769, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5770, %r5764, %r5769;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5773, %r5646, %r5770;
	// end inline asm
	// begin inline asm
	mov.b32 %r5776, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5777, %r5764, %r5776;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5780, %r5654, %r5777;
	// end inline asm
	// begin inline asm
	mov.b32 %r5783, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5784, %r5764, %r5783;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5787, %r5662, %r5784;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5790, %r5766, %r5780, %r2201;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5794, %r5773, %r5787, %r2201;
	// end inline asm
	shl.b32 	%r5801, %r5794, 4;
	// begin inline asm
	lop3.b32 %r5798, %r2207, %r5790, %r5801, 202;
	// end inline asm
	xor.b32  	%r7733, %r5798, -2004318072;
	// begin inline asm
	mov.b32 %r5805, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5803, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5804, %r5805, %r5803;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5807, %r5670, %r5804;
	// end inline asm
	// begin inline asm
	mov.b32 %r5810, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5811, %r5805, %r5810;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5814, %r5678, %r5811;
	// end inline asm
	// begin inline asm
	mov.b32 %r5817, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5818, %r5805, %r5817;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5821, %r5686, %r5818;
	// end inline asm
	// begin inline asm
	mov.b32 %r5824, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5825, %r5805, %r5824;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5828, %r5694, %r5825;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5831, %r5807, %r5821, %r2201;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5835, %r5814, %r5828, %r2201;
	// end inline asm
	shl.b32 	%r5842, %r5835, 4;
	// begin inline asm
	lop3.b32 %r5839, %r2207, %r5831, %r5842, 202;
	// end inline asm
	xor.b32  	%r7734, %r5839, -2004318072;
	// begin inline asm
	mov.b32 %r5846, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5844, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5845, %r5846, %r5844;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5848, %r5702, %r5845;
	// end inline asm
	// begin inline asm
	mov.b32 %r5851, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5852, %r5846, %r5851;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5855, %r5710, %r5852;
	// end inline asm
	// begin inline asm
	mov.b32 %r5858, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5859, %r5846, %r5858;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5862, %r5718, %r5859;
	// end inline asm
	// begin inline asm
	mov.b32 %r5865, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5866, %r5846, %r5865;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5869, %r5726, %r5866;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5872, %r5848, %r5862, %r2201;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5876, %r5855, %r5869, %r2201;
	// end inline asm
	shl.b32 	%r5883, %r5876, 4;
	// begin inline asm
	lop3.b32 %r5880, %r2207, %r5872, %r5883, 202;
	// end inline asm
	xor.b32  	%r7735, %r5880, -2004318072;
	// begin inline asm
	mov.b32 %r5887, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5885, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5886, %r5887, %r5885;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5889, %r5734, %r5886;
	// end inline asm
	// begin inline asm
	mov.b32 %r5892, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5893, %r5887, %r5892;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5896, %r5742, %r5893;
	// end inline asm
	// begin inline asm
	mov.b32 %r5899, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5900, %r5887, %r5899;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5903, %r5750, %r5900;
	// end inline asm
	// begin inline asm
	mov.b32 %r5906, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5907, %r5887, %r5906;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5910, %r5758, %r5907;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5913, %r5889, %r5903, %r2201;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5917, %r5896, %r5910, %r2201;
	// end inline asm
	shl.b32 	%r5924, %r5917, 4;
	// begin inline asm
	lop3.b32 %r5921, %r2207, %r5913, %r5924, 202;
	// end inline asm
	xor.b32  	%r7736, %r5921, -2004318072;
	st.shared.u32 	[%rd80], %r7733;
	st.shared.u32 	[%rd81], %r7734;
	st.shared.u32 	[%rd82], %r7735;
	st.shared.u32 	[%rd83], %r7736;
	ld.shared.u32 	%r7803, [%rd76];
	ld.shared.u32 	%r7804, [%rd77];
	ld.shared.u32 	%r7805, [%rd78];
	ld.shared.u32 	%r7806, [%rd79];
	// begin inline asm
	mov.b32 %r5930, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5941, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r5929, %r7803, -2004318072;
	// begin inline asm
	lop3.b32 %r5927, %r540, %r5929, %r5930, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5931, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5932, %r5930, %r5931;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5935, %r5927, %r5932;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5938, %r551, %r5929, %r5941, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5942, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5943, %r5941, %r5942;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5946, %r5938, %r5943;
	// end inline asm
	shr.u32 	%r5951, %r5929, 8;
	// begin inline asm
	lop3.b32 %r5949, %r540, %r5951, %r5930, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5953, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5954, %r5930, %r5953;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5957, %r5949, %r5954;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5960, %r551, %r5951, %r5941, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5964, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5965, %r5941, %r5964;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5968, %r5960, %r5965;
	// end inline asm
	// begin inline asm
	mov.b32 %r5976, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5987, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r5975, %r7804, -2004318072;
	// begin inline asm
	lop3.b32 %r5973, %r540, %r5975, %r5976, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5977, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5978, %r5976, %r5977;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5981, %r5973, %r5978;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5984, %r551, %r5975, %r5987, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5988, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5989, %r5987, %r5988;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5992, %r5984, %r5989;
	// end inline asm
	shr.u32 	%r5997, %r5975, 8;
	// begin inline asm
	lop3.b32 %r5995, %r540, %r5997, %r5976, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5999, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6000, %r5976, %r5999;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6003, %r5995, %r6000;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6006, %r551, %r5997, %r5987, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6010, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6011, %r5987, %r6010;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6014, %r6006, %r6011;
	// end inline asm
	// begin inline asm
	mov.b32 %r6022, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6033, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r6021, %r7805, -2004318072;
	// begin inline asm
	lop3.b32 %r6019, %r540, %r6021, %r6022, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6023, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6024, %r6022, %r6023;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6027, %r6019, %r6024;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6030, %r551, %r6021, %r6033, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6034, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6035, %r6033, %r6034;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6038, %r6030, %r6035;
	// end inline asm
	shr.u32 	%r6043, %r6021, 8;
	// begin inline asm
	lop3.b32 %r6041, %r540, %r6043, %r6022, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6045, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6046, %r6022, %r6045;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6049, %r6041, %r6046;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6052, %r551, %r6043, %r6033, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6056, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6057, %r6033, %r6056;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6060, %r6052, %r6057;
	// end inline asm
	// begin inline asm
	mov.b32 %r6068, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6079, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r6067, %r7806, -2004318072;
	// begin inline asm
	lop3.b32 %r6065, %r540, %r6067, %r6068, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6069, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6070, %r6068, %r6069;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6073, %r6065, %r6070;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6076, %r551, %r6067, %r6079, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6080, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6081, %r6079, %r6080;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6084, %r6076, %r6081;
	// end inline asm
	shr.u32 	%r6089, %r6067, 8;
	// begin inline asm
	lop3.b32 %r6087, %r540, %r6089, %r6068, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6091, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6092, %r6068, %r6091;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6095, %r6087, %r6092;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6098, %r551, %r6089, %r6079, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6102, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6103, %r6079, %r6102;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6106, %r6098, %r6103;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6109, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6111, %r6109, %r5935;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6114, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6116, %r6114, %r5946;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6119, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6121, %r6119, %r5957;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6124, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6126, %r6124, %r5968;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6129, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6131, %r6129, %r5981;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6134, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6136, %r6134, %r5992;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6139, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6141, %r6139, %r6003;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6144, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6146, %r6144, %r6014;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6149, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6151, %r6149, %r6027;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6154, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6156, %r6154, %r6038;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6159, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6161, %r6159, %r6049;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6164, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6166, %r6164, %r6060;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6169, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6171, %r6169, %r6073;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6174, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6176, %r6174, %r6084;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6179, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6181, %r6179, %r6095;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6184, %r250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6186, %r6184, %r6106;
	// end inline asm
	// begin inline asm
	mov.b32 %r6194, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6205, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6191, %r540, %r541, %r6194, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6195, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6196, %r6194, %r6195;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6199, %r6191, %r6196;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6202, %r551, %r541, %r6205, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6206, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6207, %r6205, %r6206;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6210, %r6202, %r6207;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6213, %r540, %r563, %r6194, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6217, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6218, %r6194, %r6217;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6221, %r6213, %r6218;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6224, %r551, %r563, %r6205, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6228, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6229, %r6205, %r6228;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6232, %r6224, %r6229;
	// end inline asm
	// begin inline asm
	mov.b32 %r6240, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6251, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6237, %r540, %r587, %r6240, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6241, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6242, %r6240, %r6241;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6245, %r6237, %r6242;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6248, %r551, %r587, %r6251, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6252, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6253, %r6251, %r6252;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6256, %r6248, %r6253;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6259, %r540, %r609, %r6240, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6263, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6264, %r6240, %r6263;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6267, %r6259, %r6264;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6270, %r551, %r609, %r6251, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6274, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6275, %r6251, %r6274;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6278, %r6270, %r6275;
	// end inline asm
	// begin inline asm
	mov.b32 %r6286, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6297, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6283, %r540, %r633, %r6286, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6287, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6288, %r6286, %r6287;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6291, %r6283, %r6288;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6294, %r551, %r633, %r6297, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6298, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6299, %r6297, %r6298;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6302, %r6294, %r6299;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6305, %r540, %r655, %r6286, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6309, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6310, %r6286, %r6309;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6313, %r6305, %r6310;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6316, %r551, %r655, %r6297, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6320, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6321, %r6297, %r6320;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6324, %r6316, %r6321;
	// end inline asm
	// begin inline asm
	mov.b32 %r6332, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6343, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6329, %r540, %r679, %r6332, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6333, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6334, %r6332, %r6333;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6337, %r6329, %r6334;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6340, %r551, %r679, %r6343, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6344, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6345, %r6343, %r6344;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6348, %r6340, %r6345;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6351, %r540, %r701, %r6332, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6355, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6356, %r6332, %r6355;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6359, %r6351, %r6356;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6362, %r551, %r701, %r6343, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6366, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6367, %r6343, %r6366;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6370, %r6362, %r6367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6373, %r196, %r6199, %r6111;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6377, %r196, %r6210, %r6116;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6381, %r196, %r6221, %r6121;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6385, %r196, %r6232, %r6126;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6389, %r196, %r6245, %r6131;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6393, %r196, %r6256, %r6136;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6397, %r196, %r6267, %r6141;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6401, %r196, %r6278, %r6146;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6405, %r196, %r6291, %r6151;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6409, %r196, %r6302, %r6156;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6413, %r196, %r6313, %r6161;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6417, %r196, %r6324, %r6166;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6421, %r196, %r6337, %r6171;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6425, %r196, %r6348, %r6176;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6429, %r196, %r6359, %r6181;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6433, %r196, %r6370, %r6186;
	// end inline asm
	// begin inline asm
	mov.b32 %r6442, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6453, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6439, %r540, %r2337, %r6442, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6443, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6444, %r6442, %r6443;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6447, %r6439, %r6444;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6450, %r551, %r2337, %r6453, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6454, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6455, %r6453, %r6454;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6458, %r6450, %r6455;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6461, %r540, %r2359, %r6442, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6465, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6466, %r6442, %r6465;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6469, %r6461, %r6466;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6472, %r551, %r2359, %r6453, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6476, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6477, %r6453, %r6476;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6480, %r6472, %r6477;
	// end inline asm
	// begin inline asm
	mov.b32 %r6488, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6499, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6485, %r540, %r2383, %r6488, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6489, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6490, %r6488, %r6489;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6493, %r6485, %r6490;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6496, %r551, %r2383, %r6499, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6500, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6501, %r6499, %r6500;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6504, %r6496, %r6501;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6507, %r540, %r2405, %r6488, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6511, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6512, %r6488, %r6511;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6515, %r6507, %r6512;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6518, %r551, %r2405, %r6499, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6522, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6523, %r6499, %r6522;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6526, %r6518, %r6523;
	// end inline asm
	// begin inline asm
	mov.b32 %r6534, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6545, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6531, %r540, %r2429, %r6534, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6535, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6536, %r6534, %r6535;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6539, %r6531, %r6536;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6542, %r551, %r2429, %r6545, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6546, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6547, %r6545, %r6546;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6550, %r6542, %r6547;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6553, %r540, %r2451, %r6534, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6557, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6558, %r6534, %r6557;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6561, %r6553, %r6558;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6564, %r551, %r2451, %r6545, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6568, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6569, %r6545, %r6568;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6572, %r6564, %r6569;
	// end inline asm
	// begin inline asm
	mov.b32 %r6580, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6591, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6577, %r540, %r2475, %r6580, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6581, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6582, %r6580, %r6581;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6585, %r6577, %r6582;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6588, %r551, %r2475, %r6591, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6592, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6593, %r6591, %r6592;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6596, %r6588, %r6593;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6599, %r540, %r2497, %r6580, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6603, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6604, %r6580, %r6603;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6607, %r6599, %r6604;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6610, %r551, %r2497, %r6591, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6614, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6615, %r6591, %r6614;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6618, %r6610, %r6615;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6621, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6623, %r6621, %r6447, %r6373;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6627, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6629, %r6627, %r6458, %r6377;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6633, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6635, %r6633, %r6469, %r6381;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6639, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6641, %r6639, %r6480, %r6385;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6645, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6647, %r6645, %r6493, %r6389;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6651, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6653, %r6651, %r6504, %r6393;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6657, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6659, %r6657, %r6515, %r6397;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6663, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6665, %r6663, %r6526, %r6401;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6669, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6671, %r6669, %r6539, %r6405;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6675, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6677, %r6675, %r6550, %r6409;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6681, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6683, %r6681, %r6561, %r6413;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6687, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6689, %r6687, %r6572, %r6417;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6693, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6695, %r6693, %r6585, %r6421;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6699, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6701, %r6699, %r6596, %r6425;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6705, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6707, %r6705, %r6607, %r6429;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6711, %r214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6713, %r6711, %r6618, %r6433;
	// end inline asm
	// begin inline asm
	mov.b32 %r6722, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6733, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6719, %r540, %r4133, %r6722, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6723, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6724, %r6722, %r6723;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6727, %r6719, %r6724;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6730, %r551, %r4133, %r6733, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6734, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6735, %r6733, %r6734;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6738, %r6730, %r6735;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6741, %r540, %r4155, %r6722, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6745, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6746, %r6722, %r6745;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6749, %r6741, %r6746;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6752, %r551, %r4155, %r6733, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6756, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6757, %r6733, %r6756;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6760, %r6752, %r6757;
	// end inline asm
	// begin inline asm
	mov.b32 %r6768, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6779, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6765, %r540, %r4179, %r6768, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6769, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6770, %r6768, %r6769;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6773, %r6765, %r6770;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6776, %r551, %r4179, %r6779, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6780, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6781, %r6779, %r6780;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6784, %r6776, %r6781;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6787, %r540, %r4201, %r6768, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6791, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6792, %r6768, %r6791;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6795, %r6787, %r6792;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6798, %r551, %r4201, %r6779, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6802, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6803, %r6779, %r6802;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6806, %r6798, %r6803;
	// end inline asm
	// begin inline asm
	mov.b32 %r6814, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6825, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6811, %r540, %r4225, %r6814, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6815, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6816, %r6814, %r6815;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6819, %r6811, %r6816;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6822, %r551, %r4225, %r6825, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6826, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6827, %r6825, %r6826;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6830, %r6822, %r6827;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6833, %r540, %r4247, %r6814, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6837, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6838, %r6814, %r6837;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6841, %r6833, %r6838;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6844, %r551, %r4247, %r6825, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6848, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6849, %r6825, %r6848;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6852, %r6844, %r6849;
	// end inline asm
	// begin inline asm
	mov.b32 %r6860, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6871, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6857, %r540, %r4271, %r6860, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6861, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6862, %r6860, %r6861;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6865, %r6857, %r6862;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6868, %r551, %r4271, %r6871, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6872, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6873, %r6871, %r6872;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6876, %r6868, %r6873;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6879, %r540, %r4293, %r6860, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6883, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6884, %r6860, %r6883;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6887, %r6879, %r6884;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6890, %r551, %r4293, %r6871, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6894, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6895, %r6871, %r6894;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6898, %r6890, %r6895;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6972, %r232, %r6727, %r6623;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6969, %r232, %r6738, %r6629;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6981, %r232, %r6749, %r6635;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6978, %r232, %r6760, %r6641;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6990, %r232, %r6773, %r6647;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6987, %r232, %r6784, %r6653;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6999, %r232, %r6795, %r6659;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6996, %r232, %r6806, %r6665;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7008, %r232, %r6819, %r6671;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7005, %r232, %r6830, %r6677;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7017, %r232, %r6841, %r6683;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7014, %r232, %r6852, %r6689;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7026, %r232, %r6865, %r6695;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7023, %r232, %r6876, %r6701;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7035, %r232, %r6887, %r6707;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7032, %r232, %r6898, %r6713;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6965, %r281;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6967, %r6965, %r6969;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6970, %r278, %r6972, %r6967;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6974, %r281;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6976, %r6974, %r6978;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6979, %r278, %r6981, %r6976;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6983, %r281;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6985, %r6983, %r6987;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6988, %r278, %r6990, %r6985;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6992, %r281;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6994, %r6992, %r6996;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6997, %r278, %r6999, %r6994;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7001, %r281;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7003, %r7001, %r7005;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7006, %r278, %r7008, %r7003;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7010, %r281;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7012, %r7010, %r7014;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7015, %r278, %r7017, %r7012;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7019, %r281;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7021, %r7019, %r7023;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7024, %r278, %r7026, %r7021;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7028, %r281;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7030, %r7028, %r7032;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7033, %r278, %r7035, %r7030;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7037, %r281, %r6972;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7040, %r278, %r6969, %r7037;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7044, %r281, %r6981;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7047, %r278, %r6978, %r7044;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7051, %r281, %r6990;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7054, %r278, %r6987, %r7051;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7058, %r281, %r6999;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7061, %r278, %r6996, %r7058;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7065, %r281, %r7008;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7068, %r278, %r7005, %r7065;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7072, %r281, %r7017;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7075, %r278, %r7014, %r7072;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7079, %r281, %r7026;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7082, %r278, %r7023, %r7079;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7086, %r281, %r7035;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7089, %r278, %r7032, %r7086;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7180, %r7177}, {%r320, %r326, %r323, %r329}, {%r6970, %r7040}, {%r7380, %r7380};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7189, %r7186}, {%r320, %r326, %r323, %r329}, {%r6979, %r7047}, {%r7380, %r7380};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7198, %r7195}, {%r320, %r326, %r323, %r329}, {%r6988, %r7054}, {%r7380, %r7380};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7207, %r7204}, {%r320, %r326, %r323, %r329}, {%r6997, %r7061}, {%r7380, %r7380};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7216, %r7213}, {%r320, %r326, %r323, %r329}, {%r7006, %r7068}, {%r7380, %r7380};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7225, %r7222}, {%r320, %r326, %r323, %r329}, {%r7015, %r7075}, {%r7380, %r7380};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7234, %r7231}, {%r320, %r326, %r323, %r329}, {%r7024, %r7082}, {%r7380, %r7380};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7243, %r7240}, {%r320, %r326, %r323, %r329}, {%r7033, %r7089}, {%r7380, %r7380};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7173, %r367;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7175, %r7173, %r7177;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7178, %r364, %r7180, %r7175;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7182, %r367;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7184, %r7182, %r7186;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7187, %r364, %r7189, %r7184;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7191, %r367;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7193, %r7191, %r7195;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7196, %r364, %r7198, %r7193;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7200, %r367;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7202, %r7200, %r7204;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7205, %r364, %r7207, %r7202;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7209, %r367;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7211, %r7209, %r7213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7214, %r364, %r7216, %r7211;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7218, %r367;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7220, %r7218, %r7222;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7223, %r364, %r7225, %r7220;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7227, %r367;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7229, %r7227, %r7231;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7232, %r364, %r7234, %r7229;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7236, %r367;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7238, %r7236, %r7240;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7241, %r364, %r7243, %r7238;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7245, %r367, %r7180;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7248, %r364, %r7177, %r7245;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7252, %r367, %r7189;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7255, %r364, %r7186, %r7252;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7259, %r367, %r7198;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7262, %r364, %r7195, %r7259;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7266, %r367, %r7207;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7269, %r364, %r7204, %r7266;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7273, %r367, %r7216;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7276, %r364, %r7213, %r7273;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7280, %r367, %r7225;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7283, %r364, %r7222, %r7280;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7287, %r367, %r7234;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7290, %r364, %r7231, %r7287;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7294, %r367, %r7243;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7297, %r364, %r7240, %r7294;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7301, %r7302}, {%r72, %r74, %r73, %r75}, {%r7178, %r7248}, {%r7380, %r7380};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7311, %r7312}, {%r72, %r74, %r73, %r75}, {%r7187, %r7255}, {%r7380, %r7380};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7321, %r7322}, {%r72, %r74, %r73, %r75}, {%r7196, %r7262}, {%r7380, %r7380};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7331, %r7332}, {%r72, %r74, %r73, %r75}, {%r7205, %r7269}, {%r7380, %r7380};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7341, %r7342}, {%r72, %r74, %r73, %r75}, {%r7214, %r7276}, {%r7380, %r7380};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7351, %r7352}, {%r72, %r74, %r73, %r75}, {%r7223, %r7283}, {%r7380, %r7380};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7361, %r7362}, {%r72, %r74, %r73, %r75}, {%r7232, %r7290}, {%r7380, %r7380};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7371, %r7372}, {%r72, %r74, %r73, %r75}, {%r7241, %r7297}, {%r7380, %r7380};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7381, %r126, %r7301;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7384, %r126, %r7302;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7387, %r126, %r7311;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7390, %r126, %r7312;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7393, %r126, %r7321;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7396, %r126, %r7322;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7399, %r126, %r7331;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7402, %r126, %r7332;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7405, %r126, %r7341;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7408, %r126, %r7342;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7411, %r126, %r7351;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7414, %r126, %r7352;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7417, %r126, %r7361;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7420, %r126, %r7362;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7423, %r126, %r7371;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7426, %r126, %r7372;
	// end inline asm
	// begin inline asm
	mov.b32 %r7429, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7430, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7431, %r7381, %r7429;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7434, %r7431, %r7430;
	// end inline asm
	// begin inline asm
	mov.b32 %r7437, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7438, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7439, %r7384, %r7437;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7442, %r7439, %r7438;
	// end inline asm
	// begin inline asm
	mov.b32 %r7445, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7446, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7447, %r7387, %r7445;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7450, %r7447, %r7446;
	// end inline asm
	// begin inline asm
	mov.b32 %r7453, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7454, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7455, %r7390, %r7453;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7458, %r7455, %r7454;
	// end inline asm
	// begin inline asm
	mov.b32 %r7461, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7462, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7463, %r7393, %r7461;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7466, %r7463, %r7462;
	// end inline asm
	// begin inline asm
	mov.b32 %r7469, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7470, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7471, %r7396, %r7469;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7474, %r7471, %r7470;
	// end inline asm
	// begin inline asm
	mov.b32 %r7477, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7478, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7479, %r7399, %r7477;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7482, %r7479, %r7478;
	// end inline asm
	// begin inline asm
	mov.b32 %r7485, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7486, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7487, %r7402, %r7485;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7490, %r7487, %r7486;
	// end inline asm
	// begin inline asm
	mov.b32 %r7493, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7494, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7495, %r7405, %r7493;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7498, %r7495, %r7494;
	// end inline asm
	// begin inline asm
	mov.b32 %r7501, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7502, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7503, %r7408, %r7501;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7506, %r7503, %r7502;
	// end inline asm
	// begin inline asm
	mov.b32 %r7509, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7510, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7511, %r7411, %r7509;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7514, %r7511, %r7510;
	// end inline asm
	// begin inline asm
	mov.b32 %r7517, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7518, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7519, %r7414, %r7517;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7522, %r7519, %r7518;
	// end inline asm
	// begin inline asm
	mov.b32 %r7525, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7526, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7527, %r7417, %r7525;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7530, %r7527, %r7526;
	// end inline asm
	// begin inline asm
	mov.b32 %r7533, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7534, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7535, %r7420, %r7533;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7538, %r7535, %r7534;
	// end inline asm
	// begin inline asm
	mov.b32 %r7541, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7542, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7543, %r7423, %r7541;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7546, %r7543, %r7542;
	// end inline asm
	// begin inline asm
	mov.b32 %r7549, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7550, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7551, %r7426, %r7549;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7554, %r7551, %r7550;
	// end inline asm
	// begin inline asm
	mov.b32 %r7560, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r7558, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7559, %r7560, %r7558;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7562, %r7434, %r7559;
	// end inline asm
	// begin inline asm
	mov.b32 %r7565, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7566, %r7560, %r7565;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7569, %r7442, %r7566;
	// end inline asm
	// begin inline asm
	mov.b32 %r7572, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7573, %r7560, %r7572;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7576, %r7450, %r7573;
	// end inline asm
	// begin inline asm
	mov.b32 %r7579, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7580, %r7560, %r7579;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7583, %r7458, %r7580;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7586, %r7562, %r7576, %r2201;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7590, %r7569, %r7583, %r2201;
	// end inline asm
	shl.b32 	%r7597, %r7590, 4;
	// begin inline asm
	lop3.b32 %r7594, %r2207, %r7586, %r7597, 202;
	// end inline asm
	xor.b32  	%r7737, %r7594, -2004318072;
	// begin inline asm
	mov.b32 %r7601, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r7599, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7600, %r7601, %r7599;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7603, %r7466, %r7600;
	// end inline asm
	// begin inline asm
	mov.b32 %r7606, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7607, %r7601, %r7606;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7610, %r7474, %r7607;
	// end inline asm
	// begin inline asm
	mov.b32 %r7613, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7614, %r7601, %r7613;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7617, %r7482, %r7614;
	// end inline asm
	// begin inline asm
	mov.b32 %r7620, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7621, %r7601, %r7620;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7624, %r7490, %r7621;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7627, %r7603, %r7617, %r2201;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7631, %r7610, %r7624, %r2201;
	// end inline asm
	shl.b32 	%r7638, %r7631, 4;
	// begin inline asm
	lop3.b32 %r7635, %r2207, %r7627, %r7638, 202;
	// end inline asm
	xor.b32  	%r7738, %r7635, -2004318072;
	// begin inline asm
	mov.b32 %r7642, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r7640, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7641, %r7642, %r7640;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7644, %r7498, %r7641;
	// end inline asm
	// begin inline asm
	mov.b32 %r7647, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7648, %r7642, %r7647;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7651, %r7506, %r7648;
	// end inline asm
	// begin inline asm
	mov.b32 %r7654, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7655, %r7642, %r7654;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7658, %r7514, %r7655;
	// end inline asm
	// begin inline asm
	mov.b32 %r7661, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7662, %r7642, %r7661;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7665, %r7522, %r7662;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7668, %r7644, %r7658, %r2201;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7672, %r7651, %r7665, %r2201;
	// end inline asm
	shl.b32 	%r7679, %r7672, 4;
	// begin inline asm
	lop3.b32 %r7676, %r2207, %r7668, %r7679, 202;
	// end inline asm
	xor.b32  	%r7739, %r7676, -2004318072;
	// begin inline asm
	mov.b32 %r7683, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r7681, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7682, %r7683, %r7681;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7685, %r7530, %r7682;
	// end inline asm
	// begin inline asm
	mov.b32 %r7688, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7689, %r7683, %r7688;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7692, %r7538, %r7689;
	// end inline asm
	// begin inline asm
	mov.b32 %r7695, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7696, %r7683, %r7695;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7699, %r7546, %r7696;
	// end inline asm
	// begin inline asm
	mov.b32 %r7702, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7703, %r7683, %r7702;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7706, %r7554, %r7703;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7709, %r7685, %r7699, %r2201;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7713, %r7692, %r7706, %r2201;
	// end inline asm
	shl.b32 	%r7720, %r7713, 4;
	// begin inline asm
	lop3.b32 %r7717, %r2207, %r7709, %r7720, 202;
	// end inline asm
	xor.b32  	%r7740, %r7717, -2004318072;
	st.shared.u32 	[%rd80], %r7737;
	st.shared.u32 	[%rd81], %r7738;
	st.shared.u32 	[%rd82], %r7739;
	st.shared.u32 	[%rd83], %r7740;
	add.s32 	%r7794, %r7794, -64;
	add.s64 	%rd86, %rd86, 8324;
	setp.eq.s32 	%p215, %r7794, 0;
	@%p215 bra 	LBB0_114;
	bra.uni 	LBB0_113;
LBB0_114:                               // %guard_pass10509
                                        //   in Loop: Header=BB0_112 Depth=1
	bar.sync 	0;
	ld.shared.u32 	%r7746, [%rd9];
	ld.shared.u32 	%r7747, [%rd10+128];
	ld.shared.u32 	%r7754, [%rd10+4];
	ld.shared.u32 	%r7755, [%rd10+132];
	// begin inline asm
	prmt.b32 %r7741, %r7746, %r7747, %r520;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7745, %r7746, %r7747, %r524;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7749, %r7754, %r7755, %r520;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7753, %r7754, %r7755, %r524;
	// end inline asm
	selp.b32 	%r7757, %r7745, %r7741, %p214;
	shfl.sync.bfly.b32	%r159, %r7757, 8, 31, -1;
	selp.b32 	%r7758, %r7753, %r7749, %p214;
	shfl.sync.bfly.b32	%r160, %r7758, 8, 31, -1;
	setp.eq.s32 	%p217, %r94, 0;
	@%p217 bra 	LBB0_116;
// %bb.115:                             // %L29146
                                        //   in Loop: Header=BB0_112 Depth=1
	selp.b32 	%r7759, %r160, %r7753, %p214;
	selp.b32 	%r7760, %r7749, %r160, %p214;
	selp.b32 	%r7761, %r159, %r7745, %p214;
	selp.b32 	%r7762, %r7741, %r159, %p214;
	shl.b32 	%r7763, %r94, 12;
	or.b32  	%r7764, %r7763, %r79;
	or.b32  	%r7765, %r7764, %r80;
	or.b32  	%r7766, %r7765, %r81;
	add.s32 	%r7767, %r7766, -786432;
	mul.wide.s32 	%rd84, %r7767, 4;
	add.s64 	%rd85, %rd3, %rd84;
	st.global.v4.u32 	[%rd85], {%r7762, %r7760, %r7761, %r7759};
	bra.uni 	LBB0_116;
LBB0_117:                               // %L29364
	st.global.u32 	[%rd4], %r7380;
	ret;
LBB0_1:                                 // %L8
	mov.u64 	%rd30, exception1;
	cvta.global.u64 	%rd31, %rd30;
	{ // callseq 0, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd31;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 0
	{ // callseq 1, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd21;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 1
	// begin inline asm
	exit;
	// end inline asm
	// begin inline asm
	exit;
	// end inline asm
LBB0_3:                                 // %L178
	mov.u32 	%r167, 2;
	st.global.u32 	[%rd4], %r167;
	mov.u64 	%rd33, exception2325;
	cvta.global.u64 	%rd34, %rd33;
	{ // callseq 2, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd34;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 2
	{ // callseq 3, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd21;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 3
	// begin inline asm
	exit;
	// end inline asm
	// begin inline asm
	exit;
	// end inline asm
LBB0_119:                               // %L29463
	{ // callseq 5, 0
	.reg .b32 temp_param_reg;
	call.uni 
	julia_AssertionError_9523, 
	(
	);
	} // callseq 5
	mov.u64 	%rd41, exception1;
	cvta.global.u64 	%rd42, %rd41;
	{ // callseq 6, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd42;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 6
	{ // callseq 7, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd21;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 7
	// begin inline asm
	exit;
	// end inline asm
	// begin inline asm
	exit;
	// end inline asm
LBB0_118:                               // %L29460
	{ // callseq 9, 0
	.reg .b32 temp_param_reg;
	call.uni 
	julia_AssertionError_9523, 
	(
	);
	} // callseq 9
	mov.u64 	%rd47, exception1;
	cvta.global.u64 	%rd48, %rd47;
	{ // callseq 10, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd48;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 10
	{ // callseq 11, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd21;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 11
	// begin inline asm
	exit;
	// end inline asm
	// begin inline asm
	exit;
	// end inline asm
LBB0_144:                               // %L29457
	{ // callseq 15, 0
	.reg .b32 temp_param_reg;
	call.uni 
	julia_AssertionError_9523, 
	(
	);
	} // callseq 15
	mov.u64 	%rd61, exception1;
	cvta.global.u64 	%rd62, %rd61;
	{ // callseq 16, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd62;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 16
	{ // callseq 17, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd21;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 17
	// begin inline asm
	exit;
	// end inline asm
	// begin inline asm
	exit;
	// end inline asm
                                        // -- End function
}
