// PTX CompilerJob of MethodInstance for upchan(::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Float16x2, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int32, 1}) for sm_86, minthreads=512, blocks_per_sm=2

//
// Generated by LLVM NVPTX Back-End
//

.version 7.1
.target sm_86
.address_size 64

	// .globl	_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE // -- Begin function _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE
.func julia_AssertionError_9513
()
.noreturn
{
	trap;
}
.func gpu_report_exception
(
	.param .b64 gpu_report_exception_param_0
)
.noreturn
{
	trap;
}
.func gpu_signal_exception
(
	.param .align 8 .b8 gpu_signal_exception_param_0[16]
)
.noreturn
{
	trap;
}
.func  (.param .b64 func_retval0) julia_power_by_squaring_9524
(
	.param .align 8 .b8 julia_power_by_squaring_9524_param_0[16],
	.param .b64 julia_power_by_squaring_9524_param_1,
	.param .b64 julia_power_by_squaring_9524_param_2
)
.noreturn
{
	trap;
}
.extern .shared .align 32 .b8 shmem[];
.global .align 1 .b8 exception2324[6] = {101, 114, 114, 111, 114, 0};
.global .align 1 .b8 exception12345[10] = {101, 120, 99, 101, 112, 116, 105, 111, 110, 0};
                                        // @_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE
.visible .entry _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE(
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_0[16],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_1[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_2[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_3[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_4[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_5[32]
)
.reqntid 512, 1, 1
.minnctapersm 2
{
	.reg .pred 	%p<224>;
	.reg .b16 	%rs<1185>;
	.reg .b32 	%r<7811>;
	.reg .f32 	%f<930>;
	.reg .b64 	%rd<87>;

// %bb.0:                               // %conversion
	ld.param.u32 	%r161, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_0+8];
	ld.param.u64 	%rd21, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_0];
	// begin inline asm
	mov.u32 %r162, %dynamic_smem_size;
	// end inline asm
	setp.gt.u32 	%p1, %r162, 66815;
	@%p1 bra 	LBB0_2;
	bra.uni 	LBB0_1;
LBB0_2:                                 // %L10
	ld.param.u64 	%rd26, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_5];
	ld.param.u64 	%rd22, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_1];
	mov.u32 	%r1, %ctaid.x;
	shl.b32 	%r163, %r1, 9;
	mov.u32 	%r2, %tid.x;
	mov.u32 	%r3, %tid.y;
	shl.b32 	%r4, %r3, 5;
	or.b32  	%r164, %r163, %r2;
	or.b32  	%r165, %r164, %r4;
	mul.wide.u32 	%rd32, %r165, 4;
	add.s64 	%rd4, %rd26, %rd32;
	mov.u32 	%r166, 1;
	st.global.u32 	[%rd4], %r166;
	ld.global.u32 	%r5, [%rd22];
	setp.lt.u32 	%p2, %r5, 32769;
	and.b32  	%r167, %r5, 255;
	setp.eq.s32 	%p3, %r167, 0;
	and.pred  	%p4, %p2, %p3;
	@%p4 bra 	LBB0_4;
	bra.uni 	LBB0_3;
LBB0_4:                                 // %L242
	bfe.u32 	%r14, %r2, 1, 1;
	and.b32  	%r15, %r2, 1;
	bfe.u32 	%r17, %r2, 2, 1;
	shr.u32 	%r18, %r2, 4;
	shl.b32 	%r174, %r18, 1;
	shl.b32 	%r175, %r17, 2;
	shl.b32 	%r176, %r15, 3;
	shl.b32 	%r177, %r14, 4;
	or.b32  	%r178, %r176, %r177;
	or.b32  	%r179, %r175, %r178;
	or.b32  	%r180, %r174, %r179;
	bfe.u32 	%r20, %r2, 3, 1;
	or.b32  	%r21, %r20, %r180;
	or.b32  	%r22, %r21, 32;
	mov.f32 	%f185, 0f40000000;
	mov.f32 	%f186, 0f437F0000;
	div.approx.f32 	%f1, %f186, %f185;
	cvt.rn.f32.s32 	%f187, %r21;
	sub.f32 	%f188, %f187, %f1;
	mov.f32 	%f217, 0f42800000;
	div.approx.f32 	%f3, %f188, %f217;
	setp.eq.f32 	%p10, %f3, 0f00000000;
	mov.f32 	%f897, 0f3F800000;
	mov.f32 	%f890, %f897;
	@%p10 bra 	LBB0_6;
// %bb.5:                               // %L452
	sin.approx.f32 	%f218, %f3;
	div.approx.f32 	%f890, %f218, %f3;
LBB0_6:                                 // %L455
	cvt.rn.f32.s32 	%f221, %r22;
	sub.f32 	%f222, %f221, %f1;
	div.approx.f32 	%f8, %f222, %f217;
	setp.eq.f32 	%p16, %f8, 0f00000000;
	mov.f32 	%f891, %f897;
	@%p16 bra 	LBB0_8;
// %bb.7:                               // %L472
	sin.approx.f32 	%f252, %f8;
	div.approx.f32 	%f891, %f252, %f8;
LBB0_8:                                 // %L475
	or.b32  	%r198, %r21, 64;
	or.b32  	%r24, %r21, 96;
	cvt.rn.f32.s32 	%f256, %r198;
	sub.f32 	%f257, %f256, %f1;
	div.approx.f32 	%f12, %f257, %f217;
	setp.eq.f32 	%p22, %f12, 0f00000000;
	mov.f32 	%f892, %f897;
	@%p22 bra 	LBB0_10;
// %bb.9:                               // %L553
	sin.approx.f32 	%f287, %f12;
	div.approx.f32 	%f892, %f287, %f12;
LBB0_10:                                // %L556
	cvt.rn.f32.s32 	%f290, %r24;
	sub.f32 	%f291, %f290, %f1;
	div.approx.f32 	%f17, %f291, %f217;
	setp.eq.f32 	%p28, %f17, 0f00000000;
	mov.f32 	%f893, %f897;
	@%p28 bra 	LBB0_12;
// %bb.11:                              // %L573
	sin.approx.f32 	%f321, %f17;
	div.approx.f32 	%f893, %f321, %f17;
LBB0_12:                                // %L576
	shl.b32 	%r7, %r2, 2;
	or.b32  	%r216, %r21, 128;
	or.b32  	%r26, %r21, 160;
	cvt.rn.f32.s32 	%f325, %r216;
	sub.f32 	%f326, %f325, %f1;
	div.approx.f32 	%f21, %f326, %f217;
	setp.eq.f32 	%p34, %f21, 0f00000000;
	mov.f32 	%f894, %f897;
	@%p34 bra 	LBB0_14;
// %bb.13:                              // %L654
	sin.approx.f32 	%f356, %f21;
	div.approx.f32 	%f894, %f356, %f21;
LBB0_14:                                // %L657
	and.b32  	%r8, %r7, 4;
	and.b32  	%r11, %r2, 18;
	cvt.rn.f32.s32 	%f359, %r26;
	sub.f32 	%f360, %f359, %f1;
	div.approx.f32 	%f26, %f360, %f217;
	setp.eq.f32 	%p40, %f26, 0f00000000;
	mov.f32 	%f895, %f897;
	@%p40 bra 	LBB0_16;
// %bb.15:                              // %L674
	sin.approx.f32 	%f390, %f26;
	div.approx.f32 	%f895, %f390, %f26;
LBB0_16:                                // %L677
	and.b32  	%r9, %r7, 32;
	shl.b32 	%r169, %r2, 1;
	or.b32  	%r170, %r11, %r8;
	or.b32  	%r234, %r21, 192;
	or.b32  	%r28, %r21, 224;
	cvt.rn.f32.s32 	%f394, %r234;
	sub.f32 	%f395, %f394, %f1;
	div.approx.f32 	%f30, %f395, %f217;
	setp.eq.f32 	%p46, %f30, 0f00000000;
	mov.f32 	%f896, %f897;
	@%p46 bra 	LBB0_18;
// %bb.17:                              // %L755
	sin.approx.f32 	%f425, %f30;
	div.approx.f32 	%f896, %f425, %f30;
LBB0_18:                                // %L758
	and.b32  	%r10, %r169, 8;
	or.b32  	%r171, %r170, %r9;
	cvt.rn.f32.s32 	%f428, %r28;
	sub.f32 	%f429, %f428, %f1;
	div.approx.f32 	%f35, %f429, %f217;
	setp.eq.f32 	%p52, %f35, 0f00000000;
	@%p52 bra 	LBB0_20;
// %bb.19:                              // %L775
	sin.approx.f32 	%f459, %f35;
	div.approx.f32 	%f897, %f459, %f35;
LBB0_20:                                // %L778
	or.b32  	%r172, %r171, %r10;
	mul.lo.s32 	%r30, %r21, 63;
	cvt.rn.f32.s32 	%f462, %r30;
	div.approx.f32 	%f38, %f462, %f217;
	abs.f32 	%f900, %f38;
	setp.lt.f32 	%p53, %f900, 0f40000000;
	@%p53 bra 	LBB0_32;
// %bb.21:
	setp.gtu.f32 	%p54, %f900, 0f4B800000;
	@%p54 bra 	LBB0_28;
	bra.uni 	LBB0_22;
LBB0_28:
	mov.b32 	%r32, %f900;
	and.b32  	%r252, %r32, 8388607;
	or.b32  	%r7769, %r252, 1065353216;
	mov.b32 	%f899, %r7769;
	add.s32 	%r253, %r32, -1073741824;
	and.b32  	%r7770, %r253, -8388608;
	setp.eq.s32 	%p60, %r7770, 0;
	@%p60 bra 	LBB0_31;
// %bb.29:                              // %__nv_fmaf_rn.exit4.i.i.i.preheader
	mov.f32 	%f473, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f472,%f473;
	// end inline asm
LBB0_30:                                // %__nv_fmaf_rn.exit4.i.i.i
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r254, %r7770, 192937984;
	add.s32 	%r255, %r254, %r7769;
	mov.b32 	%f474, %r255;
	mul.f32 	%f475, %f472, %f474;
	sub.f32 	%f476, %f474, %f475;
	fma.rn.f32 	%f477, %f476, %f472, %f475;
	sub.f32 	%f478, %f474, %f477;
	fma.rz.f32 	%f479, %f478, %f472, %f477;
	cvt.rzi.f32.f32 	%f480, %f479;
	sub.f32 	%f899, %f474, %f480;
	sub.s32 	%r7770, %r7770, %r254;
	mov.b32 	%r7769, %f899;
	setp.ne.s32 	%p61, %r7770, 0;
	setp.ne.s32 	%p62, %r7769, 0;
	and.pred  	%p63, %p61, %p62;
	@%p63 bra 	LBB0_30;
LBB0_31:                                // %__internal_fmodf_slowpath_mod.exit.i.i
	setp.gt.u32 	%p64, %r32, 2139095039;
	selp.f32 	%f481, 0f7FFFFFFF, 0f4B800000, %p64;
	mul.f32 	%f482, %f899, 0f34000000;
	mul.f32 	%f900, %f481, %f482;
	bra.uni 	LBB0_32;
LBB0_22:                                // %__nv_fast_fdividef.exit.i.i.i
	div.approx.f32 	%f465, %f900, %f185;
	cvt.rzi.f32.f32 	%f898, %f465;
	fma.rn.f32 	%f41, %f898, 0fC0000000, %f900;
	mov.b32 	%r31, %f41;
	setp.lt.u32 	%p55, %r31, 1073741824;
	@%p55 bra 	LBB0_27;
// %bb.23:
	setp.lt.u32 	%p56, %r31, -2147483647;
	@%p56 bra 	LBB0_25;
// %bb.24:
	add.f32 	%f470, %f898, 0fBF800000;
	setp.lt.f32 	%p59, %f41, 0fC0000000;
	add.f32 	%f471, %f470, 0fBF800000;
	selp.f32 	%f898, %f471, %f470, %p59;
	bra.uni 	LBB0_27;
LBB0_25:
	add.f32 	%f898, %f898, 0f3F800000;
	setp.ltu.f32 	%p57, %f41, 0f40800000;
	@%p57 bra 	LBB0_27;
// %bb.26:                              // %__nv_fmaf_rn.exit.i.i.i
	add.f32 	%f466, %f898, 0f3F800000;
	fma.rn.f32 	%f468, %f185, 0fC0400000, %f41;
	setp.ge.f32 	%p58, %f468, 0f00000000;
	add.f32 	%f469, %f466, 0f3F800000;
	selp.f32 	%f898, %f469, %f466, %p58;
LBB0_27:                                // %__internal_fmodf_fastpath_quot.exit.i.i
	fma.rn.f32 	%f900, %f898, 0fC0000000, %f900;
LBB0_32:                                // %__internal_fmodf_kernel.exit.i
	shr.u32 	%r173, %r172, 1;
	abs.f32 	%f483, %f900;
	setp.gtu.f32 	%p65, %f483, 0f7F800000;
	@%p65 bra 	LBB0_34;
// %bb.33:
	mov.b32 	%r256, %f38;
	and.b32  	%r257, %r256, -2147483648;
	mov.b32 	%r258, %f900;
	or.b32  	%r259, %r257, %r258;
	mov.b32 	%f900, %r259;
LBB0_34:                                // %__nv_fmodf.exit
	ld.param.u64 	%rd1, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_2];
	mul.wide.u32 	%rd35, %r173, 4;
	add.s32 	%r268, %r30, 2016;
	cvt.rn.f32.s32 	%f515, %r268;
	div.approx.f32 	%f57, %f515, %f217;
	abs.f32 	%f904, %f57;
	setp.lt.f32 	%p73, %f904, 0f40000000;
	@%p73 bra 	LBB0_46;
// %bb.35:
	setp.gtu.f32 	%p74, %f904, 0f4B800000;
	@%p74 bra 	LBB0_42;
	bra.uni 	LBB0_36;
LBB0_42:
	mov.b32 	%r40, %f904;
	and.b32  	%r269, %r40, 8388607;
	or.b32  	%r7771, %r269, 1065353216;
	mov.b32 	%f903, %r7771;
	add.s32 	%r270, %r40, -1073741824;
	and.b32  	%r7772, %r270, -8388608;
	setp.eq.s32 	%p80, %r7772, 0;
	@%p80 bra 	LBB0_45;
// %bb.43:                              // %__nv_fmaf_rn.exit4.i.i.i1136.preheader
	mov.f32 	%f526, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f525,%f526;
	// end inline asm
LBB0_44:                                // %__nv_fmaf_rn.exit4.i.i.i1136
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r271, %r7772, 192937984;
	add.s32 	%r272, %r271, %r7771;
	mov.b32 	%f527, %r272;
	mul.f32 	%f528, %f525, %f527;
	sub.f32 	%f529, %f527, %f528;
	fma.rn.f32 	%f530, %f529, %f525, %f528;
	sub.f32 	%f531, %f527, %f530;
	fma.rz.f32 	%f532, %f531, %f525, %f530;
	cvt.rzi.f32.f32 	%f533, %f532;
	sub.f32 	%f903, %f527, %f533;
	sub.s32 	%r7772, %r7772, %r271;
	mov.b32 	%r7771, %f903;
	setp.ne.s32 	%p81, %r7772, 0;
	setp.ne.s32 	%p82, %r7771, 0;
	and.pred  	%p83, %p81, %p82;
	@%p83 bra 	LBB0_44;
LBB0_45:                                // %__internal_fmodf_slowpath_mod.exit.i.i1138
	setp.gt.u32 	%p84, %r40, 2139095039;
	selp.f32 	%f534, 0f7FFFFFFF, 0f4B800000, %p84;
	mul.f32 	%f535, %f903, 0f34000000;
	mul.f32 	%f904, %f534, %f535;
	bra.uni 	LBB0_46;
LBB0_36:                                // %__nv_fast_fdividef.exit.i.i.i1108
	div.approx.f32 	%f518, %f904, %f185;
	cvt.rzi.f32.f32 	%f902, %f518;
	fma.rn.f32 	%f60, %f902, 0fC0000000, %f904;
	mov.b32 	%r39, %f60;
	setp.lt.u32 	%p75, %r39, 1073741824;
	@%p75 bra 	LBB0_41;
// %bb.37:
	setp.lt.u32 	%p76, %r39, -2147483647;
	@%p76 bra 	LBB0_39;
// %bb.38:
	add.f32 	%f523, %f902, 0fBF800000;
	setp.lt.f32 	%p79, %f60, 0fC0000000;
	add.f32 	%f524, %f523, 0fBF800000;
	selp.f32 	%f902, %f524, %f523, %p79;
	bra.uni 	LBB0_41;
LBB0_39:
	add.f32 	%f902, %f902, 0f3F800000;
	setp.ltu.f32 	%p77, %f60, 0f40800000;
	@%p77 bra 	LBB0_41;
// %bb.40:                              // %__nv_fmaf_rn.exit.i.i.i1113
	add.f32 	%f519, %f902, 0f3F800000;
	fma.rn.f32 	%f521, %f185, 0fC0400000, %f60;
	setp.ge.f32 	%p78, %f521, 0f00000000;
	add.f32 	%f522, %f519, 0f3F800000;
	selp.f32 	%f902, %f522, %f519, %p78;
LBB0_41:                                // %__internal_fmodf_fastpath_quot.exit.i.i1117
	fma.rn.f32 	%f904, %f902, 0fC0000000, %f904;
LBB0_46:                                // %__internal_fmodf_kernel.exit.i1142
	add.s64 	%rd36, %rd1, %rd35;
	abs.f32 	%f536, %f904;
	setp.gtu.f32 	%p85, %f536, 0f7F800000;
	@%p85 bra 	LBB0_48;
// %bb.47:
	mov.b32 	%r273, %f57;
	and.b32  	%r274, %r273, -2147483648;
	mov.b32 	%r275, %f904;
	or.b32  	%r276, %r274, %r275;
	mov.b32 	%f904, %r276;
LBB0_48:                                // %__nv_fmodf.exit1143
	ld.global.u32 	%r12, [%rd36];
	mov.u64 	%rd37, 2;
	mov.u64 	%rd38, 6;
	{ // callseq 4, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd21;
	st.param.b32 	[param0+8], %r161;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd37;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd38;
	.param .b64 retval0;
	call.uni (retval0), 
	julia_power_by_squaring_9524, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64 	%rd39, [retval0+0];
	} // callseq 4
	setp.ne.s64 	%p93, %rd39, 64;
	@%p93 bra 	LBB0_119;
// %bb.49:                              // %L875
	shr.u32 	%r16, %r2, 2;
	and.b32  	%r291, %r2, 3;
	shl.b32 	%r292, %r291, 1;
	neg.s32 	%r49, %r292;
	mul.lo.s32 	%r50, %r49, %r16;
	cvt.rn.f32.s32 	%f74, %r50;
	mov.f32 	%f570, 0f41000000;
	div.approx.f32 	%f75, %f74, %f570;
	abs.f32 	%f908, %f75;
	setp.lt.f32 	%p94, %f908, 0f40000000;
	@%p94 bra 	LBB0_61;
// %bb.50:
	setp.gtu.f32 	%p95, %f908, 0f4B800000;
	@%p95 bra 	LBB0_57;
	bra.uni 	LBB0_51;
LBB0_57:
	mov.b32 	%r52, %f908;
	and.b32  	%r293, %r52, 8388607;
	or.b32  	%r7773, %r293, 1065353216;
	mov.b32 	%f907, %r7773;
	add.s32 	%r294, %r52, -1073741824;
	and.b32  	%r7774, %r294, -8388608;
	setp.eq.s32 	%p101, %r7774, 0;
	@%p101 bra 	LBB0_60;
// %bb.58:                              // %__nv_fmaf_rn.exit4.i.i.i1182.preheader
	mov.f32 	%f580, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f579,%f580;
	// end inline asm
LBB0_59:                                // %__nv_fmaf_rn.exit4.i.i.i1182
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r295, %r7774, 192937984;
	add.s32 	%r296, %r295, %r7773;
	mov.b32 	%f581, %r296;
	mul.f32 	%f582, %f579, %f581;
	sub.f32 	%f583, %f581, %f582;
	fma.rn.f32 	%f584, %f583, %f579, %f582;
	sub.f32 	%f585, %f581, %f584;
	fma.rz.f32 	%f586, %f585, %f579, %f584;
	cvt.rzi.f32.f32 	%f587, %f586;
	sub.f32 	%f907, %f581, %f587;
	sub.s32 	%r7774, %r7774, %r295;
	mov.b32 	%r7773, %f907;
	setp.ne.s32 	%p102, %r7774, 0;
	setp.ne.s32 	%p103, %r7773, 0;
	and.pred  	%p104, %p102, %p103;
	@%p104 bra 	LBB0_59;
LBB0_60:                                // %__internal_fmodf_slowpath_mod.exit.i.i1184
	setp.gt.u32 	%p105, %r52, 2139095039;
	selp.f32 	%f588, 0f7FFFFFFF, 0f4B800000, %p105;
	mul.f32 	%f589, %f907, 0f34000000;
	mul.f32 	%f908, %f588, %f589;
	bra.uni 	LBB0_61;
LBB0_51:                                // %__nv_fast_fdividef.exit.i.i.i1154
	div.approx.f32 	%f572, %f908, %f185;
	cvt.rzi.f32.f32 	%f906, %f572;
	fma.rn.f32 	%f78, %f906, 0fC0000000, %f908;
	mov.b32 	%r51, %f78;
	setp.lt.u32 	%p96, %r51, 1073741824;
	@%p96 bra 	LBB0_56;
// %bb.52:
	setp.lt.u32 	%p97, %r51, -2147483647;
	@%p97 bra 	LBB0_54;
// %bb.53:
	add.f32 	%f577, %f906, 0fBF800000;
	setp.lt.f32 	%p100, %f78, 0fC0000000;
	add.f32 	%f578, %f577, 0fBF800000;
	selp.f32 	%f906, %f578, %f577, %p100;
	bra.uni 	LBB0_56;
LBB0_54:
	add.f32 	%f906, %f906, 0f3F800000;
	setp.ltu.f32 	%p98, %f78, 0f40800000;
	@%p98 bra 	LBB0_56;
// %bb.55:                              // %__nv_fmaf_rn.exit.i.i.i1159
	add.f32 	%f573, %f906, 0f3F800000;
	fma.rn.f32 	%f575, %f185, 0fC0400000, %f78;
	setp.ge.f32 	%p99, %f575, 0f00000000;
	add.f32 	%f576, %f573, 0f3F800000;
	selp.f32 	%f906, %f576, %f573, %p99;
LBB0_56:                                // %__internal_fmodf_fastpath_quot.exit.i.i1163
	fma.rn.f32 	%f908, %f906, 0fC0000000, %f908;
LBB0_61:                                // %__internal_fmodf_kernel.exit.i1188
	abs.f32 	%f590, %f908;
	setp.gtu.f32 	%p106, %f590, 0f7F800000;
	@%p106 bra 	LBB0_63;
// %bb.62:
	mov.b32 	%r297, %f75;
	and.b32  	%r298, %r297, -2147483648;
	mov.b32 	%r299, %f908;
	or.b32  	%r300, %r298, %r299;
	mov.b32 	%f908, %r300;
LBB0_63:                                // %__nv_fmodf.exit1189
	shl.b32 	%r309, %r16, 3;
	sub.s32 	%r310, %r50, %r309;
	cvt.rn.f32.s32 	%f94, %r310;
	div.approx.f32 	%f95, %f94, %f570;
	abs.f32 	%f912, %f95;
	setp.lt.f32 	%p114, %f912, 0f40000000;
	@%p114 bra 	LBB0_75;
// %bb.64:
	setp.gtu.f32 	%p115, %f912, 0f4B800000;
	@%p115 bra 	LBB0_71;
	bra.uni 	LBB0_65;
LBB0_71:
	mov.b32 	%r60, %f912;
	and.b32  	%r311, %r60, 8388607;
	or.b32  	%r7775, %r311, 1065353216;
	mov.b32 	%f911, %r7775;
	add.s32 	%r312, %r60, -1073741824;
	and.b32  	%r7776, %r312, -8388608;
	setp.eq.s32 	%p121, %r7776, 0;
	@%p121 bra 	LBB0_74;
// %bb.72:                              // %__nv_fmaf_rn.exit4.i.i.i1228.preheader
	mov.f32 	%f632, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f631,%f632;
	// end inline asm
LBB0_73:                                // %__nv_fmaf_rn.exit4.i.i.i1228
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r313, %r7776, 192937984;
	add.s32 	%r314, %r313, %r7775;
	mov.b32 	%f633, %r314;
	mul.f32 	%f634, %f631, %f633;
	sub.f32 	%f635, %f633, %f634;
	fma.rn.f32 	%f636, %f635, %f631, %f634;
	sub.f32 	%f637, %f633, %f636;
	fma.rz.f32 	%f638, %f637, %f631, %f636;
	cvt.rzi.f32.f32 	%f639, %f638;
	sub.f32 	%f911, %f633, %f639;
	sub.s32 	%r7776, %r7776, %r313;
	mov.b32 	%r7775, %f911;
	setp.ne.s32 	%p122, %r7776, 0;
	setp.ne.s32 	%p123, %r7775, 0;
	and.pred  	%p124, %p122, %p123;
	@%p124 bra 	LBB0_73;
LBB0_74:                                // %__internal_fmodf_slowpath_mod.exit.i.i1230
	setp.gt.u32 	%p125, %r60, 2139095039;
	selp.f32 	%f640, 0f7FFFFFFF, 0f4B800000, %p125;
	mul.f32 	%f641, %f911, 0f34000000;
	mul.f32 	%f912, %f640, %f641;
	bra.uni 	LBB0_75;
LBB0_65:                                // %__nv_fast_fdividef.exit.i.i.i1200
	div.approx.f32 	%f624, %f912, %f185;
	cvt.rzi.f32.f32 	%f910, %f624;
	fma.rn.f32 	%f98, %f910, 0fC0000000, %f912;
	mov.b32 	%r59, %f98;
	setp.lt.u32 	%p116, %r59, 1073741824;
	@%p116 bra 	LBB0_70;
// %bb.66:
	setp.lt.u32 	%p117, %r59, -2147483647;
	@%p117 bra 	LBB0_68;
// %bb.67:
	add.f32 	%f629, %f910, 0fBF800000;
	setp.lt.f32 	%p120, %f98, 0fC0000000;
	add.f32 	%f630, %f629, 0fBF800000;
	selp.f32 	%f910, %f630, %f629, %p120;
	bra.uni 	LBB0_70;
LBB0_68:
	add.f32 	%f910, %f910, 0f3F800000;
	setp.ltu.f32 	%p118, %f98, 0f40800000;
	@%p118 bra 	LBB0_70;
// %bb.69:                              // %__nv_fmaf_rn.exit.i.i.i1205
	add.f32 	%f625, %f910, 0f3F800000;
	fma.rn.f32 	%f627, %f185, 0fC0400000, %f98;
	setp.ge.f32 	%p119, %f627, 0f00000000;
	add.f32 	%f628, %f625, 0f3F800000;
	selp.f32 	%f910, %f628, %f625, %p119;
LBB0_70:                                // %__internal_fmodf_fastpath_quot.exit.i.i1209
	fma.rn.f32 	%f912, %f910, 0fC0000000, %f912;
LBB0_75:                                // %__internal_fmodf_kernel.exit.i1234
	abs.f32 	%f642, %f912;
	setp.gtu.f32 	%p126, %f642, 0f7F800000;
	@%p126 bra 	LBB0_77;
// %bb.76:
	mov.b32 	%r315, %f95;
	and.b32  	%r316, %r315, -2147483648;
	mov.b32 	%r317, %f912;
	or.b32  	%r318, %r316, %r317;
	mov.b32 	%f912, %r318;
LBB0_77:                                // %__nv_fmodf.exit1235
	{ // callseq 8, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd21;
	st.param.b32 	[param0+8], %r161;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd37;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd38;
	.param .b64 retval0;
	call.uni (retval0), 
	julia_power_by_squaring_9524, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64 	%rd45, [retval0+0];
	} // callseq 8
	setp.ne.s64 	%p134, %rd45, 64;
	@%p134 bra 	LBB0_118;
// %bb.78:                              // %L1013
	{ // callseq 12, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd21;
	st.param.b32 	[param0+8], %r161;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd37;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd38;
	.param .b64 retval0;
	call.uni (retval0), 
	julia_power_by_squaring_9524, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64 	%rd51, [retval0+0];
	} // callseq 12
	cvt.rn.f32.s64 	%f676, %rd51;
	div.approx.f32 	%f112, %f74, %f676;
	abs.f32 	%f924, %f112;
	setp.lt.f32 	%p135, %f924, 0f40000000;
	@%p135 bra 	LBB0_127;
// %bb.79:
	setp.gtu.f32 	%p136, %f924, 0f4B800000;
	@%p136 bra 	LBB0_123;
	bra.uni 	LBB0_80;
LBB0_123:
	mov.b32 	%r138, %f924;
	and.b32  	%r339, %r138, 8388607;
	or.b32  	%r7807, %r339, 1065353216;
	mov.b32 	%f923, %r7807;
	add.s32 	%r340, %r138, -1073741824;
	and.b32  	%r7808, %r340, -8388608;
	setp.eq.s32 	%p142, %r7808, 0;
	@%p142 bra 	LBB0_126;
// %bb.124:                             // %__nv_fmaf_rn.exit4.i.i.i1366.preheader
	mov.f32 	%f686, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f685,%f686;
	// end inline asm
LBB0_125:                               // %__nv_fmaf_rn.exit4.i.i.i1366
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r341, %r7808, 192937984;
	add.s32 	%r342, %r341, %r7807;
	mov.b32 	%f687, %r342;
	mul.f32 	%f688, %f685, %f687;
	sub.f32 	%f689, %f687, %f688;
	fma.rn.f32 	%f690, %f689, %f685, %f688;
	sub.f32 	%f691, %f687, %f690;
	fma.rz.f32 	%f692, %f691, %f685, %f690;
	cvt.rzi.f32.f32 	%f693, %f692;
	sub.f32 	%f923, %f687, %f693;
	sub.s32 	%r7808, %r7808, %r341;
	mov.b32 	%r7807, %f923;
	setp.ne.s32 	%p143, %r7808, 0;
	setp.ne.s32 	%p144, %r7807, 0;
	and.pred  	%p145, %p143, %p144;
	@%p145 bra 	LBB0_125;
LBB0_126:                               // %__internal_fmodf_slowpath_mod.exit.i.i1368
	setp.gt.u32 	%p146, %r138, 2139095039;
	selp.f32 	%f694, 0f7FFFFFFF, 0f4B800000, %p146;
	mul.f32 	%f695, %f923, 0f34000000;
	mul.f32 	%f924, %f694, %f695;
	bra.uni 	LBB0_127;
LBB0_80:                                // %__nv_fast_fdividef.exit.i.i.i1338
	div.approx.f32 	%f678, %f924, %f185;
	cvt.rzi.f32.f32 	%f922, %f678;
	fma.rn.f32 	%f151, %f922, 0fC0000000, %f924;
	mov.b32 	%r137, %f151;
	setp.lt.u32 	%p137, %r137, 1073741824;
	@%p137 bra 	LBB0_122;
// %bb.81:
	setp.lt.u32 	%p138, %r137, -2147483647;
	@%p138 bra 	LBB0_120;
// %bb.82:
	add.f32 	%f683, %f922, 0fBF800000;
	setp.lt.f32 	%p141, %f151, 0fC0000000;
	add.f32 	%f684, %f683, 0fBF800000;
	selp.f32 	%f922, %f684, %f683, %p141;
	bra.uni 	LBB0_122;
LBB0_120:
	add.f32 	%f922, %f922, 0f3F800000;
	setp.ltu.f32 	%p139, %f151, 0f40800000;
	@%p139 bra 	LBB0_122;
// %bb.121:                             // %__nv_fmaf_rn.exit.i.i.i1343
	add.f32 	%f679, %f922, 0f3F800000;
	fma.rn.f32 	%f681, %f185, 0fC0400000, %f151;
	setp.ge.f32 	%p140, %f681, 0f00000000;
	add.f32 	%f682, %f679, 0f3F800000;
	selp.f32 	%f922, %f682, %f679, %p140;
LBB0_122:                               // %__internal_fmodf_fastpath_quot.exit.i.i1347
	fma.rn.f32 	%f924, %f922, 0fC0000000, %f924;
LBB0_127:                               // %__internal_fmodf_kernel.exit.i1372
	abs.f32 	%f696, %f924;
	setp.gtu.f32 	%p147, %f696, 0f7F800000;
	@%p147 bra 	LBB0_129;
// %bb.128:
	mov.b32 	%r343, %f112;
	and.b32  	%r344, %r343, -2147483648;
	mov.b32 	%r345, %f924;
	or.b32  	%r346, %r344, %r345;
	mov.b32 	%f924, %r346;
LBB0_129:                               // %__nv_fmodf.exit1373
	{ // callseq 13, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd21;
	st.param.b32 	[param0+8], %r161;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd37;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd38;
	.param .b64 retval0;
	call.uni (retval0), 
	julia_power_by_squaring_9524, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64 	%rd55, [retval0+0];
	} // callseq 13
	cvt.rn.f32.s64 	%f728, %rd55;
	div.approx.f32 	%f167, %f94, %f728;
	abs.f32 	%f928, %f167;
	setp.lt.f32 	%p155, %f928, 0f40000000;
	@%p155 bra 	LBB0_141;
// %bb.130:
	setp.gtu.f32 	%p156, %f928, 0f4B800000;
	@%p156 bra 	LBB0_137;
	bra.uni 	LBB0_131;
LBB0_137:
	mov.b32 	%r146, %f928;
	and.b32  	%r355, %r146, 8388607;
	or.b32  	%r7809, %r355, 1065353216;
	mov.b32 	%f927, %r7809;
	add.s32 	%r356, %r146, -1073741824;
	and.b32  	%r7810, %r356, -8388608;
	setp.eq.s32 	%p162, %r7810, 0;
	@%p162 bra 	LBB0_140;
// %bb.138:                             // %__nv_fmaf_rn.exit4.i.i.i1412.preheader
	mov.f32 	%f738, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f737,%f738;
	// end inline asm
LBB0_139:                               // %__nv_fmaf_rn.exit4.i.i.i1412
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r357, %r7810, 192937984;
	add.s32 	%r358, %r357, %r7809;
	mov.b32 	%f739, %r358;
	mul.f32 	%f740, %f737, %f739;
	sub.f32 	%f741, %f739, %f740;
	fma.rn.f32 	%f742, %f741, %f737, %f740;
	sub.f32 	%f743, %f739, %f742;
	fma.rz.f32 	%f744, %f743, %f737, %f742;
	cvt.rzi.f32.f32 	%f745, %f744;
	sub.f32 	%f927, %f739, %f745;
	sub.s32 	%r7810, %r7810, %r357;
	mov.b32 	%r7809, %f927;
	setp.ne.s32 	%p163, %r7810, 0;
	setp.ne.s32 	%p164, %r7809, 0;
	and.pred  	%p165, %p163, %p164;
	@%p165 bra 	LBB0_139;
LBB0_140:                               // %__internal_fmodf_slowpath_mod.exit.i.i1414
	setp.gt.u32 	%p166, %r146, 2139095039;
	selp.f32 	%f746, 0f7FFFFFFF, 0f4B800000, %p166;
	mul.f32 	%f747, %f927, 0f34000000;
	mul.f32 	%f928, %f746, %f747;
	bra.uni 	LBB0_141;
LBB0_131:                               // %__nv_fast_fdividef.exit.i.i.i1384
	div.approx.f32 	%f730, %f928, %f185;
	cvt.rzi.f32.f32 	%f926, %f730;
	fma.rn.f32 	%f170, %f926, 0fC0000000, %f928;
	mov.b32 	%r145, %f170;
	setp.lt.u32 	%p157, %r145, 1073741824;
	@%p157 bra 	LBB0_136;
// %bb.132:
	setp.lt.u32 	%p158, %r145, -2147483647;
	@%p158 bra 	LBB0_134;
// %bb.133:
	add.f32 	%f735, %f926, 0fBF800000;
	setp.lt.f32 	%p161, %f170, 0fC0000000;
	add.f32 	%f736, %f735, 0fBF800000;
	selp.f32 	%f926, %f736, %f735, %p161;
	bra.uni 	LBB0_136;
LBB0_134:
	add.f32 	%f926, %f926, 0f3F800000;
	setp.ltu.f32 	%p159, %f170, 0f40800000;
	@%p159 bra 	LBB0_136;
// %bb.135:                             // %__nv_fmaf_rn.exit.i.i.i1389
	add.f32 	%f731, %f926, 0f3F800000;
	fma.rn.f32 	%f733, %f185, 0fC0400000, %f170;
	setp.ge.f32 	%p160, %f733, 0f00000000;
	add.f32 	%f734, %f731, 0f3F800000;
	selp.f32 	%f926, %f734, %f731, %p160;
LBB0_136:                               // %__internal_fmodf_fastpath_quot.exit.i.i1393
	fma.rn.f32 	%f928, %f926, 0fC0000000, %f928;
LBB0_141:                               // %__internal_fmodf_kernel.exit.i1418
	abs.f32 	%f748, %f928;
	setp.gtu.f32 	%p167, %f748, 0f7F800000;
	@%p167 bra 	LBB0_143;
// %bb.142:
	mov.b32 	%r359, %f167;
	and.b32  	%r360, %r359, -2147483648;
	mov.b32 	%r361, %f928;
	or.b32  	%r362, %r360, %r361;
	mov.b32 	%f928, %r362;
LBB0_143:                               // %__nv_fmodf.exit1419
	{ // callseq 14, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd21;
	st.param.b32 	[param0+8], %r161;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd37;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd38;
	.param .b64 retval0;
	call.uni (retval0), 
	julia_power_by_squaring_9524, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64 	%rd59, [retval0+0];
	} // callseq 14
	setp.eq.s64 	%p175, %rd59, 64;
	@%p175 bra 	LBB0_83;
	bra.uni 	LBB0_144;
LBB0_83:                                // %L1096
	mov.f32 	%f189, 0f43808000;
	div.approx.f32 	%f190, %f188, %f189;
	div.approx.f32 	%f224, %f222, %f189;
	div.approx.f32 	%f259, %f257, %f189;
	div.approx.f32 	%f293, %f291, %f189;
	div.approx.f32 	%f328, %f326, %f189;
	div.approx.f32 	%f362, %f360, %f189;
	div.approx.f32 	%f397, %f395, %f189;
	div.approx.f32 	%f431, %f429, %f189;
	abs.f32 	%f191, %f190;
	abs.f32 	%f225, %f224;
	abs.f32 	%f260, %f259;
	abs.f32 	%f294, %f293;
	abs.f32 	%f329, %f328;
	abs.f32 	%f363, %f362;
	abs.f32 	%f398, %f397;
	abs.f32 	%f432, %f431;
	add.f32 	%f591, %f908, %f908;
	add.f32 	%f643, %f912, %f912;
	setp.gt.f32 	%p5, %f191, 0f4B800000;
	mul.f32 	%f192, %f190, 0f00000000;
	setp.gt.f32 	%p11, %f225, 0f4B800000;
	mul.f32 	%f226, %f224, 0f00000000;
	setp.gt.f32 	%p17, %f260, 0f4B800000;
	mul.f32 	%f261, %f259, 0f00000000;
	setp.gt.f32 	%p23, %f294, 0f4B800000;
	mul.f32 	%f295, %f293, 0f00000000;
	setp.gt.f32 	%p29, %f329, 0f4B800000;
	mul.f32 	%f330, %f328, 0f00000000;
	setp.gt.f32 	%p35, %f363, 0f4B800000;
	mul.f32 	%f364, %f362, 0f00000000;
	setp.gt.f32 	%p41, %f398, 0f4B800000;
	mul.f32 	%f399, %f397, 0f00000000;
	setp.gt.f32 	%p47, %f432, 0f4B800000;
	mul.f32 	%f433, %f431, 0f00000000;
	add.f32 	%f484, %f900, %f900;
	add.f32 	%f537, %f904, %f904;
	mov.b32 	%r301, %f591;
	mov.b32 	%r331, %f643;
	selp.f32 	%f193, %f192, %f190, %p5;
	selp.f32 	%f227, %f226, %f224, %p11;
	selp.f32 	%f262, %f261, %f259, %p17;
	selp.f32 	%f296, %f295, %f293, %p23;
	selp.f32 	%f331, %f330, %f328, %p29;
	selp.f32 	%f365, %f364, %f362, %p35;
	selp.f32 	%f400, %f399, %f397, %p41;
	selp.f32 	%f434, %f433, %f431, %p47;
	mov.b32 	%r260, %f484;
	mov.b32 	%r283, %f537;
	and.b32  	%r302, %r301, -2147483648;
	and.b32  	%r332, %r331, -2147483648;
	add.f32 	%f697, %f924, %f924;
	add.f32 	%f194, %f193, %f193;
	add.f32 	%f228, %f227, %f227;
	add.f32 	%f263, %f262, %f262;
	add.f32 	%f297, %f296, %f296;
	add.f32 	%f332, %f331, %f331;
	add.f32 	%f366, %f365, %f365;
	add.f32 	%f401, %f400, %f400;
	add.f32 	%f435, %f434, %f434;
	and.b32  	%r261, %r260, -2147483648;
	and.b32  	%r284, %r283, -2147483648;
	or.b32  	%r303, %r302, 1056964608;
	or.b32  	%r333, %r332, 1056964608;
	mov.b32 	%r347, %f697;
	mov.b32 	%r181, %f194;
	mov.b32 	%r188, %f228;
	mov.b32 	%r199, %f263;
	mov.b32 	%r206, %f297;
	mov.b32 	%r217, %f332;
	mov.b32 	%r224, %f366;
	mov.b32 	%r235, %f401;
	mov.b32 	%r242, %f435;
	or.b32  	%r262, %r261, 1056964608;
	or.b32  	%r285, %r284, 1056964608;
	mov.b32 	%f592, %r303;
	mov.b32 	%f644, %r333;
	and.b32  	%r348, %r347, -2147483648;
	and.b32  	%r182, %r181, -2147483648;
	and.b32  	%r189, %r188, -2147483648;
	and.b32  	%r200, %r199, -2147483648;
	and.b32  	%r207, %r206, -2147483648;
	and.b32  	%r218, %r217, -2147483648;
	and.b32  	%r225, %r224, -2147483648;
	and.b32  	%r236, %r235, -2147483648;
	and.b32  	%r243, %r242, -2147483648;
	mov.b32 	%f485, %r262;
	mov.b32 	%f538, %r285;
	add.f32 	%f593, %f591, %f592;
	abs.f32 	%f595, %f591;
	add.f32 	%f645, %f643, %f644;
	abs.f32 	%f647, %f643;
	or.b32  	%r349, %r348, 1056964608;
	or.b32  	%r183, %r182, 1056964608;
	or.b32  	%r190, %r189, 1056964608;
	or.b32  	%r201, %r200, 1056964608;
	or.b32  	%r208, %r207, 1056964608;
	or.b32  	%r219, %r218, 1056964608;
	or.b32  	%r226, %r225, 1056964608;
	or.b32  	%r237, %r236, 1056964608;
	or.b32  	%r244, %r243, 1056964608;
	add.f32 	%f486, %f484, %f485;
	abs.f32 	%f488, %f484;
	add.f32 	%f539, %f537, %f538;
	abs.f32 	%f541, %f537;
	cvt.rzi.f32.f32 	%f594, %f593;
	setp.gt.f32 	%p107, %f595, 0f4B000000;
	cvt.rzi.f32.f32 	%f646, %f645;
	setp.gt.f32 	%p127, %f647, 0f4B000000;
	mov.b32 	%f698, %r349;
	mov.b32 	%f195, %r183;
	mov.b32 	%f229, %r190;
	mov.b32 	%f264, %r201;
	mov.b32 	%f298, %r208;
	mov.b32 	%f333, %r219;
	mov.b32 	%f367, %r226;
	mov.b32 	%f402, %r237;
	mov.b32 	%f436, %r244;
	cvt.rzi.f32.f32 	%f487, %f486;
	setp.gt.f32 	%p66, %f488, 0f4B000000;
	cvt.rzi.f32.f32 	%f540, %f539;
	setp.gt.f32 	%p86, %f541, 0f4B000000;
	selp.f32 	%f596, %f591, %f594, %p107;
	cvt.rzi.f32.f32 	%f597, %f591;
	setp.lt.f32 	%p108, %f595, 0f3F000000;
	selp.f32 	%f648, %f643, %f646, %p127;
	cvt.rzi.f32.f32 	%f649, %f643;
	setp.lt.f32 	%p128, %f647, 0f3F000000;
	add.f32 	%f699, %f697, %f698;
	abs.f32 	%f701, %f697;
	add.f32 	%f196, %f194, %f195;
	abs.f32 	%f198, %f194;
	add.f32 	%f230, %f228, %f229;
	abs.f32 	%f232, %f228;
	add.f32 	%f265, %f263, %f264;
	abs.f32 	%f267, %f263;
	add.f32 	%f299, %f297, %f298;
	abs.f32 	%f301, %f297;
	add.f32 	%f334, %f332, %f333;
	abs.f32 	%f336, %f332;
	add.f32 	%f368, %f366, %f367;
	abs.f32 	%f370, %f366;
	add.f32 	%f403, %f401, %f402;
	abs.f32 	%f405, %f401;
	add.f32 	%f437, %f435, %f436;
	abs.f32 	%f439, %f435;
	selp.f32 	%f489, %f484, %f487, %p66;
	cvt.rzi.f32.f32 	%f490, %f484;
	setp.lt.f32 	%p67, %f488, 0f3F000000;
	selp.f32 	%f542, %f537, %f540, %p86;
	cvt.rzi.f32.f32 	%f543, %f537;
	setp.lt.f32 	%p87, %f541, 0f3F000000;
	selp.f32 	%f598, %f597, %f596, %p108;
	selp.f32 	%f650, %f649, %f648, %p128;
	cvt.rzi.f32.f32 	%f700, %f699;
	setp.gt.f32 	%p148, %f701, 0f4B000000;
	cvt.rzi.f32.f32 	%f197, %f196;
	setp.gt.f32 	%p6, %f198, 0f4B000000;
	cvt.rzi.f32.f32 	%f231, %f230;
	setp.gt.f32 	%p12, %f232, 0f4B000000;
	cvt.rzi.f32.f32 	%f266, %f265;
	setp.gt.f32 	%p18, %f267, 0f4B000000;
	cvt.rzi.f32.f32 	%f300, %f299;
	setp.gt.f32 	%p24, %f301, 0f4B000000;
	cvt.rzi.f32.f32 	%f335, %f334;
	setp.gt.f32 	%p30, %f336, 0f4B000000;
	cvt.rzi.f32.f32 	%f369, %f368;
	setp.gt.f32 	%p36, %f370, 0f4B000000;
	cvt.rzi.f32.f32 	%f404, %f403;
	setp.gt.f32 	%p42, %f405, 0f4B000000;
	cvt.rzi.f32.f32 	%f438, %f437;
	setp.gt.f32 	%p48, %f439, 0f4B000000;
	selp.f32 	%f491, %f490, %f489, %p67;
	selp.f32 	%f544, %f543, %f542, %p87;
	fma.rn.f32 	%f599, %f598, 0fBF000000, %f908;
	fma.rn.f32 	%f651, %f650, 0fBF000000, %f912;
	selp.f32 	%f702, %f697, %f700, %p148;
	cvt.rzi.f32.f32 	%f703, %f697;
	setp.lt.f32 	%p149, %f701, 0f3F000000;
	selp.f32 	%f199, %f194, %f197, %p6;
	cvt.rzi.f32.f32 	%f200, %f194;
	setp.lt.f32 	%p7, %f198, 0f3F000000;
	selp.f32 	%f233, %f228, %f231, %p12;
	cvt.rzi.f32.f32 	%f234, %f228;
	setp.lt.f32 	%p13, %f232, 0f3F000000;
	selp.f32 	%f268, %f263, %f266, %p18;
	cvt.rzi.f32.f32 	%f269, %f263;
	setp.lt.f32 	%p19, %f267, 0f3F000000;
	selp.f32 	%f302, %f297, %f300, %p24;
	cvt.rzi.f32.f32 	%f303, %f297;
	setp.lt.f32 	%p25, %f301, 0f3F000000;
	selp.f32 	%f337, %f332, %f335, %p30;
	cvt.rzi.f32.f32 	%f338, %f332;
	setp.lt.f32 	%p31, %f336, 0f3F000000;
	selp.f32 	%f371, %f366, %f369, %p36;
	cvt.rzi.f32.f32 	%f372, %f366;
	setp.lt.f32 	%p37, %f370, 0f3F000000;
	selp.f32 	%f406, %f401, %f404, %p42;
	cvt.rzi.f32.f32 	%f407, %f401;
	setp.lt.f32 	%p43, %f405, 0f3F000000;
	selp.f32 	%f440, %f435, %f438, %p48;
	cvt.rzi.f32.f32 	%f441, %f435;
	setp.lt.f32 	%p49, %f439, 0f3F000000;
	fma.rn.f32 	%f492, %f491, 0fBF000000, %f900;
	fma.rn.f32 	%f545, %f544, 0fBF000000, %f904;
	mul.f32 	%f600, %f599, 0f34222169;
	mul.f32 	%f652, %f651, 0f34222169;
	selp.f32 	%f704, %f703, %f702, %p149;
	selp.f32 	%f201, %f200, %f199, %p7;
	selp.f32 	%f235, %f234, %f233, %p13;
	selp.f32 	%f270, %f269, %f268, %p19;
	selp.f32 	%f304, %f303, %f302, %p25;
	selp.f32 	%f339, %f338, %f337, %p31;
	selp.f32 	%f373, %f372, %f371, %p37;
	selp.f32 	%f408, %f407, %f406, %p43;
	selp.f32 	%f442, %f441, %f440, %p49;
	mul.f32 	%f493, %f492, 0f34222169;
	mul.f32 	%f546, %f545, 0f34222169;
	fma.rn.f32 	%f601, %f599, 0f40490FDA, %f600;
	fma.rn.f32 	%f653, %f651, 0f40490FDA, %f652;
	fma.rn.f32 	%f705, %f704, 0fBF000000, %f924;
	fma.rn.f32 	%f202, %f201, 0fBF000000, %f193;
	fma.rn.f32 	%f236, %f235, 0fBF000000, %f227;
	fma.rn.f32 	%f271, %f270, 0fBF000000, %f262;
	fma.rn.f32 	%f305, %f304, 0fBF000000, %f296;
	fma.rn.f32 	%f340, %f339, 0fBF000000, %f331;
	fma.rn.f32 	%f374, %f373, 0fBF000000, %f365;
	fma.rn.f32 	%f409, %f408, 0fBF000000, %f400;
	fma.rn.f32 	%f443, %f442, 0fBF000000, %f434;
	fma.rn.f32 	%f494, %f492, 0f40490FDA, %f493;
	fma.rn.f32 	%f547, %f545, 0f40490FDA, %f546;
	mul.f32 	%f602, %f601, %f601;
	mul.f32 	%f654, %f653, %f653;
	mul.f32 	%f706, %f705, 0f34222169;
	mul.f32 	%f203, %f202, %f202;
	mul.f32 	%f237, %f236, %f236;
	mul.f32 	%f272, %f271, %f271;
	mul.f32 	%f306, %f305, %f305;
	mul.f32 	%f341, %f340, %f340;
	mul.f32 	%f375, %f374, %f374;
	mul.f32 	%f410, %f409, %f409;
	mul.f32 	%f444, %f443, %f443;
	mul.f32 	%f495, %f494, %f494;
	mul.f32 	%f548, %f547, %f547;
	fma.rn.f32 	%f603, %f602, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f655, %f654, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f707, %f705, 0f40490FDA, %f706;
	cvt.rzi.s32.f32 	%r184, %f201;
	fma.rn.f32 	%f204, %f203, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f205, %f203, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r191, %f235;
	fma.rn.f32 	%f238, %f237, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f239, %f237, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r202, %f270;
	fma.rn.f32 	%f273, %f272, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f274, %f272, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r209, %f304;
	fma.rn.f32 	%f307, %f306, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f308, %f306, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r220, %f339;
	fma.rn.f32 	%f342, %f341, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f343, %f341, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r227, %f373;
	fma.rn.f32 	%f376, %f375, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f377, %f375, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r238, %f408;
	fma.rn.f32 	%f411, %f410, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f412, %f410, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r245, %f442;
	fma.rn.f32 	%f445, %f444, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f446, %f444, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f496, %f495, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f549, %f548, 0f37CBAC00, 0fBAB607ED;
	cvt.rzi.s32.f32 	%r304, %f598;
	fma.rn.f32 	%f604, %f603, %f602, 0f3D2AAABB;
	fma.rn.f32 	%f608, %f602, 0fB94D4153, 0f3C0885E4;
	cvt.rzi.s32.f32 	%r334, %f650;
	fma.rn.f32 	%f656, %f655, %f654, 0f3D2AAABB;
	fma.rn.f32 	%f660, %f654, 0fB94D4153, 0f3C0885E4;
	mul.f32 	%f708, %f707, %f707;
	add.s32 	%r185, %r184, 1;
	fma.rn.f32 	%f206, %f204, %f203, 0fC0A55DF6;
	fma.rn.f32 	%f207, %f205, %f203, 0f4081E0CF;
	fma.rn.f32 	%f208, %f203, %f202, 0f00000000;
	add.s32 	%r192, %r191, 1;
	fma.rn.f32 	%f240, %f238, %f237, 0fC0A55DF6;
	fma.rn.f32 	%f241, %f239, %f237, 0f4081E0CF;
	fma.rn.f32 	%f242, %f237, %f236, 0f00000000;
	add.s32 	%r203, %r202, 1;
	fma.rn.f32 	%f275, %f273, %f272, 0fC0A55DF6;
	fma.rn.f32 	%f276, %f274, %f272, 0f4081E0CF;
	fma.rn.f32 	%f277, %f272, %f271, 0f00000000;
	add.s32 	%r210, %r209, 1;
	fma.rn.f32 	%f309, %f307, %f306, 0fC0A55DF6;
	fma.rn.f32 	%f310, %f308, %f306, 0f4081E0CF;
	fma.rn.f32 	%f311, %f306, %f305, 0f00000000;
	add.s32 	%r221, %r220, 1;
	fma.rn.f32 	%f344, %f342, %f341, 0fC0A55DF6;
	fma.rn.f32 	%f345, %f343, %f341, 0f4081E0CF;
	fma.rn.f32 	%f346, %f341, %f340, 0f00000000;
	add.s32 	%r228, %r227, 1;
	fma.rn.f32 	%f378, %f376, %f375, 0fC0A55DF6;
	fma.rn.f32 	%f379, %f377, %f375, 0f4081E0CF;
	fma.rn.f32 	%f380, %f375, %f374, 0f00000000;
	add.s32 	%r239, %r238, 1;
	fma.rn.f32 	%f413, %f411, %f410, 0fC0A55DF6;
	fma.rn.f32 	%f414, %f412, %f410, 0f4081E0CF;
	fma.rn.f32 	%f415, %f410, %f409, 0f00000000;
	add.s32 	%r246, %r245, 1;
	fma.rn.f32 	%f447, %f445, %f444, 0fC0A55DF6;
	fma.rn.f32 	%f448, %f446, %f444, 0f4081E0CF;
	fma.rn.f32 	%f449, %f444, %f443, 0f00000000;
	cvt.rzi.s32.f32 	%r263, %f491;
	fma.rn.f32 	%f497, %f496, %f495, 0f3D2AAABB;
	fma.rn.f32 	%f501, %f495, 0fB94D4153, 0f3C0885E4;
	cvt.rzi.s32.f32 	%r286, %f544;
	fma.rn.f32 	%f550, %f549, %f548, 0f3D2AAABB;
	fma.rn.f32 	%f554, %f548, 0fB94D4153, 0f3C0885E4;
	fma.rn.f32 	%f605, %f604, %f602, 0fBEFFFFFF;
	fma.rn.f32 	%f607, %f602, %f601, 0f00000000;
	fma.rn.f32 	%f609, %f608, %f602, 0fBE2AAAA8;
	and.b32  	%r305, %r304, 1;
	fma.rn.f32 	%f657, %f656, %f654, 0fBEFFFFFF;
	fma.rn.f32 	%f659, %f654, %f653, 0f00000000;
	fma.rn.f32 	%f661, %f660, %f654, 0fBE2AAAA8;
	and.b32  	%r335, %r334, 1;
	fma.rn.f32 	%f709, %f708, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f209, %f207, %f203, 0fC09DE9E6;
	fma.rn.f32 	%f210, %f206, %f208, 0f00000000;
	and.b32  	%r186, %r185, 1;
	fma.rn.f32 	%f243, %f241, %f237, 0fC09DE9E6;
	fma.rn.f32 	%f244, %f240, %f242, 0f00000000;
	and.b32  	%r193, %r192, 1;
	fma.rn.f32 	%f278, %f276, %f272, 0fC09DE9E6;
	fma.rn.f32 	%f279, %f275, %f277, 0f00000000;
	and.b32  	%r204, %r203, 1;
	fma.rn.f32 	%f312, %f310, %f306, 0fC09DE9E6;
	fma.rn.f32 	%f313, %f309, %f311, 0f00000000;
	and.b32  	%r211, %r210, 1;
	fma.rn.f32 	%f347, %f345, %f341, 0fC09DE9E6;
	fma.rn.f32 	%f348, %f344, %f346, 0f00000000;
	and.b32  	%r222, %r221, 1;
	fma.rn.f32 	%f381, %f379, %f375, 0fC09DE9E6;
	fma.rn.f32 	%f382, %f378, %f380, 0f00000000;
	and.b32  	%r229, %r228, 1;
	fma.rn.f32 	%f416, %f414, %f410, 0fC09DE9E6;
	fma.rn.f32 	%f417, %f413, %f415, 0f00000000;
	and.b32  	%r240, %r239, 1;
	fma.rn.f32 	%f450, %f448, %f444, 0fC09DE9E6;
	fma.rn.f32 	%f451, %f447, %f449, 0f00000000;
	and.b32  	%r247, %r246, 1;
	fma.rn.f32 	%f498, %f497, %f495, 0fBEFFFFFF;
	fma.rn.f32 	%f500, %f495, %f494, 0f00000000;
	fma.rn.f32 	%f502, %f501, %f495, 0fBE2AAAA8;
	and.b32  	%r264, %r263, 1;
	fma.rn.f32 	%f551, %f550, %f548, 0fBEFFFFFF;
	fma.rn.f32 	%f553, %f548, %f547, 0f00000000;
	fma.rn.f32 	%f555, %f554, %f548, 0fBE2AAAA8;
	and.b32  	%r287, %r286, 1;
	fma.rn.f32 	%f606, %f605, %f602, 0f3F800000;
	fma.rn.f32 	%f610, %f609, %f607, %f601;
	setp.eq.b32 	%p109, %r305, 1;
	fma.rn.f32 	%f658, %f657, %f654, 0f3F800000;
	fma.rn.f32 	%f662, %f661, %f659, %f653;
	setp.eq.b32 	%p129, %r335, 1;
	cvt.rzi.s32.f32 	%r350, %f704;
	fma.rn.f32 	%f710, %f709, %f708, 0f3D2AAABB;
	fma.rn.f32 	%f714, %f708, 0fB94D4153, 0f3C0885E4;
	fma.rn.f32 	%f211, %f209, %f203, 0f3F800000;
	fma.rn.f32 	%f212, %f202, 0f40490FDB, %f210;
	setp.eq.b32 	%p8, %r186, 1;
	fma.rn.f32 	%f245, %f243, %f237, 0f3F800000;
	fma.rn.f32 	%f246, %f236, 0f40490FDB, %f244;
	setp.eq.b32 	%p14, %r193, 1;
	fma.rn.f32 	%f280, %f278, %f272, 0f3F800000;
	fma.rn.f32 	%f281, %f271, 0f40490FDB, %f279;
	setp.eq.b32 	%p20, %r204, 1;
	fma.rn.f32 	%f314, %f312, %f306, 0f3F800000;
	fma.rn.f32 	%f315, %f305, 0f40490FDB, %f313;
	setp.eq.b32 	%p26, %r211, 1;
	fma.rn.f32 	%f349, %f347, %f341, 0f3F800000;
	fma.rn.f32 	%f350, %f340, 0f40490FDB, %f348;
	setp.eq.b32 	%p32, %r222, 1;
	fma.rn.f32 	%f383, %f381, %f375, 0f3F800000;
	fma.rn.f32 	%f384, %f374, 0f40490FDB, %f382;
	setp.eq.b32 	%p38, %r229, 1;
	fma.rn.f32 	%f418, %f416, %f410, 0f3F800000;
	fma.rn.f32 	%f419, %f409, 0f40490FDB, %f417;
	setp.eq.b32 	%p44, %r240, 1;
	fma.rn.f32 	%f452, %f450, %f444, 0f3F800000;
	fma.rn.f32 	%f453, %f443, 0f40490FDB, %f451;
	setp.eq.b32 	%p50, %r247, 1;
	fma.rn.f32 	%f499, %f498, %f495, 0f3F800000;
	fma.rn.f32 	%f503, %f502, %f500, %f494;
	setp.eq.b32 	%p68, %r264, 1;
	fma.rn.f32 	%f552, %f551, %f548, 0f3F800000;
	fma.rn.f32 	%f556, %f555, %f553, %f547;
	setp.eq.b32 	%p88, %r287, 1;
	selp.f32 	%f611, %f606, %f610, %p109;
	and.b32  	%r306, %r304, 2;
	selp.f32 	%f663, %f658, %f662, %p129;
	and.b32  	%r336, %r334, 2;
	fma.rn.f32 	%f711, %f710, %f708, 0fBEFFFFFF;
	fma.rn.f32 	%f713, %f708, %f707, 0f00000000;
	fma.rn.f32 	%f715, %f714, %f708, 0fBE2AAAA8;
	and.b32  	%r351, %r350, 1;
	selp.f32 	%f213, %f211, %f212, %p8;
	and.b32  	%r187, %r185, 2;
	mov.f32 	%f214, 0f00000000;
	selp.f32 	%f247, %f245, %f246, %p14;
	and.b32  	%r194, %r192, 2;
	selp.f32 	%f282, %f280, %f281, %p20;
	and.b32  	%r205, %r203, 2;
	selp.f32 	%f316, %f314, %f315, %p26;
	and.b32  	%r212, %r210, 2;
	selp.f32 	%f351, %f349, %f350, %p32;
	and.b32  	%r223, %r221, 2;
	selp.f32 	%f385, %f383, %f384, %p38;
	and.b32  	%r230, %r228, 2;
	selp.f32 	%f420, %f418, %f419, %p44;
	and.b32  	%r241, %r239, 2;
	selp.f32 	%f454, %f452, %f453, %p50;
	and.b32  	%r248, %r246, 2;
	selp.f32 	%f504, %f499, %f503, %p68;
	and.b32  	%r265, %r263, 2;
	selp.f32 	%f557, %f552, %f556, %p88;
	and.b32  	%r288, %r286, 2;
	setp.eq.s32 	%p110, %r306, 0;
	neg.f32 	%f613, %f611;
	add.s32 	%r307, %r304, 1;
	cvt.rzi.f32.f32 	%f618, %f908;
	setp.eq.s32 	%p130, %r336, 0;
	neg.f32 	%f665, %f663;
	add.s32 	%r337, %r334, 1;
	cvt.rzi.f32.f32 	%f670, %f912;
	fma.rn.f32 	%f712, %f711, %f708, 0f3F800000;
	fma.rn.f32 	%f716, %f715, %f713, %f707;
	setp.eq.b32 	%p150, %r351, 1;
	setp.eq.s32 	%p9, %r187, 0;
	sub.f32 	%f215, %f214, %f213;
	setp.eq.s32 	%p15, %r194, 0;
	sub.f32 	%f249, %f214, %f247;
	setp.eq.s32 	%p21, %r205, 0;
	sub.f32 	%f284, %f214, %f282;
	setp.eq.s32 	%p27, %r212, 0;
	sub.f32 	%f318, %f214, %f316;
	setp.eq.s32 	%p33, %r223, 0;
	sub.f32 	%f353, %f214, %f351;
	setp.eq.s32 	%p39, %r230, 0;
	sub.f32 	%f387, %f214, %f385;
	setp.eq.s32 	%p45, %r241, 0;
	sub.f32 	%f422, %f214, %f420;
	setp.eq.s32 	%p51, %r248, 0;
	sub.f32 	%f456, %f214, %f454;
	setp.eq.s32 	%p69, %r265, 0;
	neg.f32 	%f506, %f504;
	add.s32 	%r266, %r263, 1;
	cvt.rzi.f32.f32 	%f511, %f900;
	setp.eq.s32 	%p89, %r288, 0;
	neg.f32 	%f559, %f557;
	add.s32 	%r289, %r286, 1;
	cvt.rzi.f32.f32 	%f564, %f904;
	selp.f32 	%f612, %f610, %f606, %p109;
	selp.f32 	%f614, %f611, %f613, %p110;
	and.b32  	%r308, %r307, 2;
	setp.eq.f32 	%p112, %f618, %f908;
	mul.f32 	%f619, %f908, 0f00000000;
	selp.f32 	%f664, %f662, %f658, %p129;
	selp.f32 	%f666, %f663, %f665, %p130;
	and.b32  	%r338, %r337, 2;
	setp.eq.f32 	%p132, %f670, %f912;
	mul.f32 	%f671, %f912, 0f00000000;
	selp.f32 	%f717, %f712, %f716, %p150;
	and.b32  	%r352, %r350, 2;
	selp.f32 	%f216, %f213, %f215, %p9;
	selp.f32 	%f250, %f247, %f249, %p15;
	selp.f32 	%f285, %f282, %f284, %p21;
	selp.f32 	%f319, %f316, %f318, %p27;
	selp.f32 	%f354, %f351, %f353, %p33;
	selp.f32 	%f388, %f385, %f387, %p39;
	selp.f32 	%f423, %f420, %f422, %p45;
	selp.f32 	%f457, %f454, %f456, %p51;
	selp.f32 	%f505, %f503, %f499, %p68;
	selp.f32 	%f507, %f504, %f506, %p69;
	and.b32  	%r267, %r266, 2;
	setp.eq.f32 	%p71, %f511, %f900;
	mul.f32 	%f512, %f900, 0f00000000;
	selp.f32 	%f558, %f556, %f552, %p88;
	selp.f32 	%f560, %f557, %f559, %p89;
	and.b32  	%r290, %r289, 2;
	setp.eq.f32 	%p91, %f564, %f904;
	mul.f32 	%f565, %f904, 0f00000000;
	setp.eq.s32 	%p111, %r308, 0;
	sub.f32 	%f616, %f214, %f612;
	selp.f32 	%f92, %f619, %f614, %p112;
	abs.f32 	%f620, %f908;
	setp.eq.s32 	%p131, %r338, 0;
	sub.f32 	%f668, %f214, %f664;
	selp.f32 	%f672, %f671, %f666, %p132;
	abs.f32 	%f673, %f912;
	setp.eq.s32 	%p151, %r352, 0;
	neg.f32 	%f719, %f717;
	add.s32 	%r353, %r350, 1;
	cvt.rzi.f32.f32 	%f724, %f924;
	mul.f32 	%f2, %f216, %f216;
	mul.f32 	%f7, %f250, %f250;
	mul.f32 	%f11, %f285, %f285;
	mul.f32 	%f16, %f319, %f319;
	mul.f32 	%f20, %f354, %f354;
	mul.f32 	%f25, %f388, %f388;
	mul.f32 	%f29, %f423, %f423;
	mul.f32 	%f34, %f457, %f457;
	setp.eq.s32 	%p70, %r267, 0;
	sub.f32 	%f509, %f214, %f505;
	selp.f32 	%f55, %f512, %f507, %p71;
	abs.f32 	%f513, %f900;
	setp.eq.s32 	%p90, %r290, 0;
	sub.f32 	%f562, %f214, %f558;
	selp.f32 	%f566, %f565, %f560, %p91;
	abs.f32 	%f567, %f904;
	selp.f32 	%f617, %f612, %f616, %p111;
	setp.gt.f32 	%p113, %f620, 0f4B800000;
	add.f32 	%f621, %f92, 0f3F800000;
	selp.f32 	%f669, %f664, %f668, %p131;
	setp.gt.f32 	%p133, %f673, 0f4B800000;
	add.f32 	%f674, %f672, 0f3F800000;
	selp.f32 	%f718, %f716, %f712, %p150;
	selp.f32 	%f720, %f717, %f719, %p151;
	and.b32  	%r354, %r353, 2;
	setp.eq.f32 	%p153, %f724, %f924;
	mul.f32 	%f725, %f924, 0f00000000;
	setp.eq.s32 	%p152, %r354, 0;
	sub.f32 	%f722, %f214, %f718;
	selp.f32 	%f165, %f725, %f720, %p153;
	abs.f32 	%f726, %f924;
	shr.u32 	%r13, %r2, 1;
	shr.u32 	%r19, %r2, 3;
	add.f32 	%f749, %f928, %f928;
	mov.b32 	%r369, %f749;
	and.b32  	%r370, %r369, -2147483648;
	or.b32  	%r371, %r370, 1056964608;
	mov.b32 	%f750, %r371;
	add.f32 	%f751, %f749, %f750;
	cvt.rzi.f32.f32 	%f752, %f751;
	abs.f32 	%f753, %f749;
	setp.gt.f32 	%p168, %f753, 0f4B000000;
	selp.f32 	%f754, %f749, %f752, %p168;
	cvt.rzi.f32.f32 	%f755, %f749;
	setp.lt.f32 	%p169, %f753, 0f3F000000;
	selp.f32 	%f756, %f755, %f754, %p169;
	cvt.rzi.s32.f32 	%r372, %f756;
	fma.rn.f32 	%f757, %f756, 0fBF000000, %f928;
	mul.f32 	%f758, %f757, 0f34222169;
	fma.rn.f32 	%f759, %f757, 0f40490FDA, %f758;
	mul.f32 	%f760, %f759, %f759;
	fma.rn.f32 	%f761, %f760, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f762, %f761, %f760, 0f3D2AAABB;
	fma.rn.f32 	%f763, %f762, %f760, 0fBEFFFFFF;
	fma.rn.f32 	%f764, %f763, %f760, 0f3F800000;
	fma.rn.f32 	%f765, %f760, %f759, 0f00000000;
	fma.rn.f32 	%f766, %f760, 0fB94D4153, 0f3C0885E4;
	fma.rn.f32 	%f767, %f766, %f760, 0fBE2AAAA8;
	fma.rn.f32 	%f768, %f767, %f765, %f759;
	and.b32  	%r373, %r372, 1;
	setp.eq.b32 	%p170, %r373, 1;
	selp.f32 	%f769, %f764, %f768, %p170;
	selp.f32 	%f770, %f768, %f764, %p170;
	and.b32  	%r374, %r372, 2;
	setp.eq.s32 	%p171, %r374, 0;
	neg.f32 	%f771, %f769;
	selp.f32 	%f772, %f769, %f771, %p171;
	add.s32 	%r375, %r372, 1;
	and.b32  	%r376, %r375, 2;
	setp.eq.s32 	%p172, %r376, 0;
	sub.f32 	%f774, %f214, %f770;
	cvt.rzi.f32.f32 	%f776, %f928;
	setp.eq.f32 	%p173, %f776, %f928;
	mul.f32 	%f777, %f928, 0f00000000;
	selp.f32 	%f778, %f777, %f772, %p173;
	abs.f32 	%f779, %f928;
	and.b32  	%r377, %r19, 2;
	and.b32  	%r378, %r13, 4;
	or.b32  	%r379, %r17, %r377;
	or.b32  	%r71, %r379, %r378;
	mul.lo.s32 	%r72, %r49, %r71;
	cvt.rn.f32.s32 	%f782, %r72;
	div.approx.f32 	%f114, %f782, %f570;
	abs.f32 	%f916, %f114;
	setp.lt.f32 	%p176, %f916, 0f40000000;
	@%p176 bra 	LBB0_95;
// %bb.84:
	setp.gtu.f32 	%p177, %f916, 0f4B800000;
	@%p177 bra 	LBB0_91;
	bra.uni 	LBB0_85;
LBB0_91:
	mov.b32 	%r74, %f916;
	and.b32  	%r380, %r74, 8388607;
	or.b32  	%r7777, %r380, 1065353216;
	mov.b32 	%f915, %r7777;
	add.s32 	%r381, %r74, -1073741824;
	and.b32  	%r7778, %r381, -8388608;
	setp.eq.s32 	%p183, %r7778, 0;
	@%p183 bra 	LBB0_94;
// %bb.92:                              // %__nv_fmaf_rn.exit4.i.i.i1274.preheader
	mov.f32 	%f793, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f792,%f793;
	// end inline asm
LBB0_93:                                // %__nv_fmaf_rn.exit4.i.i.i1274
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r382, %r7778, 192937984;
	add.s32 	%r383, %r382, %r7777;
	mov.b32 	%f794, %r383;
	mul.f32 	%f795, %f792, %f794;
	sub.f32 	%f796, %f794, %f795;
	fma.rn.f32 	%f797, %f796, %f792, %f795;
	sub.f32 	%f798, %f794, %f797;
	fma.rz.f32 	%f799, %f798, %f792, %f797;
	cvt.rzi.f32.f32 	%f800, %f799;
	sub.f32 	%f915, %f794, %f800;
	sub.s32 	%r7778, %r7778, %r382;
	mov.b32 	%r7777, %f915;
	setp.ne.s32 	%p184, %r7778, 0;
	setp.ne.s32 	%p185, %r7777, 0;
	and.pred  	%p186, %p184, %p185;
	@%p186 bra 	LBB0_93;
LBB0_94:                                // %__internal_fmodf_slowpath_mod.exit.i.i1276
	setp.gt.u32 	%p187, %r74, 2139095039;
	selp.f32 	%f801, 0f7FFFFFFF, 0f4B800000, %p187;
	mul.f32 	%f802, %f915, 0f34000000;
	mul.f32 	%f916, %f801, %f802;
	bra.uni 	LBB0_95;
LBB0_85:                                // %__nv_fast_fdividef.exit.i.i.i1246
	div.approx.f32 	%f785, %f916, %f185;
	cvt.rzi.f32.f32 	%f914, %f785;
	fma.rn.f32 	%f117, %f914, 0fC0000000, %f916;
	mov.b32 	%r73, %f117;
	setp.lt.u32 	%p178, %r73, 1073741824;
	@%p178 bra 	LBB0_90;
// %bb.86:
	setp.lt.u32 	%p179, %r73, -2147483647;
	@%p179 bra 	LBB0_88;
// %bb.87:
	add.f32 	%f790, %f914, 0fBF800000;
	setp.lt.f32 	%p182, %f117, 0fC0000000;
	add.f32 	%f791, %f790, 0fBF800000;
	selp.f32 	%f914, %f791, %f790, %p182;
	bra.uni 	LBB0_90;
LBB0_88:
	add.f32 	%f914, %f914, 0f3F800000;
	setp.ltu.f32 	%p180, %f117, 0f40800000;
	@%p180 bra 	LBB0_90;
// %bb.89:                              // %__nv_fmaf_rn.exit.i.i.i1251
	add.f32 	%f786, %f914, 0f3F800000;
	fma.rn.f32 	%f788, %f185, 0fC0400000, %f117;
	setp.ge.f32 	%p181, %f788, 0f00000000;
	add.f32 	%f789, %f786, 0f3F800000;
	selp.f32 	%f914, %f789, %f786, %p181;
LBB0_90:                                // %__internal_fmodf_fastpath_quot.exit.i.i1255
	fma.rn.f32 	%f916, %f914, 0fC0000000, %f916;
LBB0_95:                                // %__internal_fmodf_kernel.exit.i1280
	mul.f32 	%f220, %f2, 0f3C0AF64E;
	mul.f32 	%f254, %f7, 0f3C0AF64E;
	mul.f32 	%f289, %f11, 0f3C0AF64E;
	mul.f32 	%f323, %f16, 0f3C0AF64E;
	mul.f32 	%f358, %f20, 0f3C0AF64E;
	mul.f32 	%f392, %f25, 0f3C0AF64E;
	mul.f32 	%f427, %f29, 0f3C0AF64E;
	mul.f32 	%f460, %f34, 0f3C0AF64E;
	selp.f32 	%f510, %f505, %f509, %p70;
	setp.gt.f32 	%p72, %f513, 0f4B800000;
	add.f32 	%f514, %f55, 0f3F800000;
	selp.f32 	%f563, %f558, %f562, %p90;
	setp.gt.f32 	%p92, %f567, 0f4B800000;
	add.f32 	%f568, %f566, 0f3F800000;
	selp.f32 	%f93, %f621, %f617, %p113;
	selp.f32 	%f675, %f674, %f669, %p133;
	selp.f32 	%f723, %f718, %f722, %p152;
	setp.gt.f32 	%p154, %f726, 0f4B800000;
	add.f32 	%f727, %f165, 0f3F800000;
	selp.f32 	%f775, %f770, %f774, %p172;
	setp.gt.f32 	%p174, %f779, 0f4B800000;
	add.f32 	%f780, %f778, 0f3F800000;
	abs.f32 	%f803, %f916;
	setp.gtu.f32 	%p188, %f803, 0f7F800000;
	@%p188 bra 	LBB0_97;
// %bb.96:
	mov.b32 	%r384, %f114;
	and.b32  	%r385, %r384, -2147483648;
	mov.b32 	%r386, %f916;
	or.b32  	%r387, %r385, %r386;
	mov.b32 	%f916, %r387;
LBB0_97:                                // %__nv_fmodf.exit1281
	mul.f32 	%f6, %f220, %f890;
	mul.f32 	%f255, %f254, %f891;
	mul.f32 	%f15, %f289, %f892;
	mul.f32 	%f324, %f323, %f893;
	mul.f32 	%f24, %f358, %f894;
	mul.f32 	%f393, %f392, %f895;
	mul.f32 	%f33, %f427, %f896;
	mul.f32 	%f461, %f460, %f897;
	selp.f32 	%f56, %f514, %f510, %p72;
	selp.f32 	%f569, %f568, %f563, %p92;
	mov.b32 	%r321, %f675;
	mov.b32 	%r320, %f93;
	mov.b32 	%r327, %f672;
	mov.b32 	%r326, %f92;
	selp.f32 	%f166, %f727, %f723, %p154;
	selp.f32 	%f781, %f780, %f775, %p174;
	add.f32 	%f804, %f916, %f916;
	mov.b32 	%r388, %f804;
	and.b32  	%r389, %r388, -2147483648;
	or.b32  	%r390, %r389, 1056964608;
	mov.b32 	%f805, %r390;
	add.f32 	%f806, %f804, %f805;
	cvt.rzi.f32.f32 	%f807, %f806;
	abs.f32 	%f808, %f804;
	setp.gt.f32 	%p189, %f808, 0f4B000000;
	selp.f32 	%f809, %f804, %f807, %p189;
	cvt.rzi.f32.f32 	%f810, %f804;
	setp.lt.f32 	%p190, %f808, 0f3F000000;
	selp.f32 	%f811, %f810, %f809, %p190;
	cvt.rzi.s32.f32 	%r391, %f811;
	fma.rn.f32 	%f812, %f811, 0fBF000000, %f916;
	mul.f32 	%f813, %f812, 0f34222169;
	fma.rn.f32 	%f814, %f812, 0f40490FDA, %f813;
	mul.f32 	%f815, %f814, %f814;
	fma.rn.f32 	%f816, %f815, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f817, %f816, %f815, 0f3D2AAABB;
	fma.rn.f32 	%f818, %f817, %f815, 0fBEFFFFFF;
	fma.rn.f32 	%f819, %f818, %f815, 0f3F800000;
	fma.rn.f32 	%f820, %f815, %f814, 0f00000000;
	fma.rn.f32 	%f821, %f815, 0fB94D4153, 0f3C0885E4;
	fma.rn.f32 	%f822, %f821, %f815, 0fBE2AAAA8;
	fma.rn.f32 	%f823, %f822, %f820, %f814;
	and.b32  	%r392, %r391, 1;
	setp.eq.b32 	%p191, %r392, 1;
	selp.f32 	%f824, %f819, %f823, %p191;
	selp.f32 	%f825, %f823, %f819, %p191;
	and.b32  	%r393, %r391, 2;
	setp.eq.s32 	%p192, %r393, 0;
	neg.f32 	%f826, %f824;
	selp.f32 	%f827, %f824, %f826, %p192;
	add.s32 	%r394, %r391, 1;
	and.b32  	%r395, %r394, 2;
	setp.eq.s32 	%p193, %r395, 0;
	sub.f32 	%f829, %f214, %f825;
	selp.f32 	%f830, %f825, %f829, %p193;
	cvt.rzi.f32.f32 	%f831, %f916;
	setp.eq.f32 	%p194, %f831, %f916;
	mul.f32 	%f832, %f916, 0f00000000;
	selp.f32 	%f131, %f832, %f827, %p194;
	abs.f32 	%f833, %f916;
	setp.gt.f32 	%p195, %f833, 0f4B800000;
	add.f32 	%f834, %f131, 0f3F800000;
	shl.b32 	%r396, %r71, 3;
	sub.s32 	%r397, %r72, %r396;
	cvt.rn.f32.s32 	%f835, %r397;
	div.approx.f32 	%f133, %f835, %f570;
	abs.f32 	%f920, %f133;
	setp.lt.f32 	%p196, %f920, 0f40000000;
	@%p196 bra 	LBB0_109;
// %bb.98:
	setp.gtu.f32 	%p197, %f920, 0f4B800000;
	@%p197 bra 	LBB0_105;
	bra.uni 	LBB0_99;
LBB0_105:
	mov.b32 	%r82, %f920;
	and.b32  	%r398, %r82, 8388607;
	or.b32  	%r7779, %r398, 1065353216;
	mov.b32 	%f919, %r7779;
	add.s32 	%r399, %r82, -1073741824;
	and.b32  	%r7780, %r399, -8388608;
	setp.eq.s32 	%p203, %r7780, 0;
	@%p203 bra 	LBB0_108;
// %bb.106:                             // %__nv_fmaf_rn.exit4.i.i.i1320.preheader
	mov.f32 	%f846, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f845,%f846;
	// end inline asm
LBB0_107:                               // %__nv_fmaf_rn.exit4.i.i.i1320
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r400, %r7780, 192937984;
	add.s32 	%r401, %r400, %r7779;
	mov.b32 	%f847, %r401;
	mul.f32 	%f848, %f845, %f847;
	sub.f32 	%f849, %f847, %f848;
	fma.rn.f32 	%f850, %f849, %f845, %f848;
	sub.f32 	%f851, %f847, %f850;
	fma.rz.f32 	%f852, %f851, %f845, %f850;
	cvt.rzi.f32.f32 	%f853, %f852;
	sub.f32 	%f919, %f847, %f853;
	sub.s32 	%r7780, %r7780, %r400;
	mov.b32 	%r7779, %f919;
	setp.ne.s32 	%p204, %r7780, 0;
	setp.ne.s32 	%p205, %r7779, 0;
	and.pred  	%p206, %p204, %p205;
	@%p206 bra 	LBB0_107;
LBB0_108:                               // %__internal_fmodf_slowpath_mod.exit.i.i1322
	setp.gt.u32 	%p207, %r82, 2139095039;
	selp.f32 	%f854, 0f7FFFFFFF, 0f4B800000, %p207;
	mul.f32 	%f855, %f919, 0f34000000;
	mul.f32 	%f920, %f854, %f855;
	bra.uni 	LBB0_109;
LBB0_99:                                // %__nv_fast_fdividef.exit.i.i.i1292
	div.approx.f32 	%f838, %f920, %f185;
	cvt.rzi.f32.f32 	%f918, %f838;
	fma.rn.f32 	%f136, %f918, 0fC0000000, %f920;
	mov.b32 	%r81, %f136;
	setp.lt.u32 	%p198, %r81, 1073741824;
	@%p198 bra 	LBB0_104;
// %bb.100:
	setp.lt.u32 	%p199, %r81, -2147483647;
	@%p199 bra 	LBB0_102;
// %bb.101:
	add.f32 	%f843, %f918, 0fBF800000;
	setp.lt.f32 	%p202, %f136, 0fC0000000;
	add.f32 	%f844, %f843, 0fBF800000;
	selp.f32 	%f918, %f844, %f843, %p202;
	bra.uni 	LBB0_104;
LBB0_102:
	add.f32 	%f918, %f918, 0f3F800000;
	setp.ltu.f32 	%p200, %f136, 0f40800000;
	@%p200 bra 	LBB0_104;
// %bb.103:                             // %__nv_fmaf_rn.exit.i.i.i1297
	add.f32 	%f839, %f918, 0f3F800000;
	fma.rn.f32 	%f841, %f185, 0fC0400000, %f136;
	setp.ge.f32 	%p201, %f841, 0f00000000;
	add.f32 	%f842, %f839, 0f3F800000;
	selp.f32 	%f918, %f842, %f839, %p201;
LBB0_104:                               // %__internal_fmodf_fastpath_quot.exit.i.i1301
	fma.rn.f32 	%f920, %f918, 0fC0000000, %f920;
LBB0_109:                               // %__internal_fmodf_kernel.exit.i1326
	mov.b32 	%r197, %f255;
	mov.b32 	%r196, %f6;
	mov.b32 	%r215, %f324;
	mov.b32 	%r214, %f15;
	mov.b32 	%r233, %f393;
	mov.b32 	%r232, %f24;
	mov.b32 	%r251, %f461;
	mov.b32 	%r250, %f33;
	mov.b32 	%r279, %f569;
	mov.b32 	%r278, %f56;
	mov.b32 	%r282, %f566;
	mov.b32 	%r281, %f55;
	xor.b32  	%r324, %r327, -2147483648;
	xor.b32  	%r323, %r326, -2147483648;
	mov.b32 	%r365, %f781;
	mov.b32 	%r364, %f166;
	mov.b32 	%r368, %f778;
	mov.b32 	%r367, %f165;
	and.b32  	%r6, %r2, 16;
	selp.f32 	%f132, %f834, %f830, %p195;
	abs.f32 	%f856, %f920;
	setp.gtu.f32 	%p208, %f856, 0f7F800000;
	@%p208 bra 	LBB0_111;
// %bb.110:
	mov.b32 	%r402, %f133;
	and.b32  	%r403, %r402, -2147483648;
	mov.b32 	%r404, %f920;
	or.b32  	%r405, %r403, %r404;
	mov.b32 	%f920, %r405;
LBB0_111:                               // %__nv_fmodf.exit1327
	ld.param.u64 	%rd2, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_3];
	ld.param.u64 	%rd3, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_4];
	// begin inline asm
	cvt.rn.f16x2.f32 %r195, %r197, %r196;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r213, %r215, %r214;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r231, %r233, %r232;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r249, %r251, %r250;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r277, %r279, %r278;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r280, %r282, %r281;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r319, %r321, %r320;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r322, %r324, %r323;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r325, %r327, %r326;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r328, %r321, %r320;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r363, %r365, %r364;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r366, %r368, %r367;
	// end inline asm
	add.f32 	%f857, %f920, %f920;
	mov.b32 	%r419, %f857;
	and.b32  	%r420, %r419, -2147483648;
	or.b32  	%r421, %r420, 1056964608;
	mov.b32 	%f858, %r421;
	add.f32 	%f859, %f857, %f858;
	cvt.rzi.f32.f32 	%f860, %f859;
	abs.f32 	%f861, %f857;
	setp.gt.f32 	%p209, %f861, 0f4B000000;
	selp.f32 	%f862, %f857, %f860, %p209;
	cvt.rzi.f32.f32 	%f863, %f857;
	setp.lt.f32 	%p210, %f861, 0f3F000000;
	selp.f32 	%f864, %f863, %f862, %p210;
	cvt.rzi.s32.f32 	%r422, %f864;
	fma.rn.f32 	%f865, %f864, 0fBF000000, %f920;
	mul.f32 	%f866, %f865, 0f34222169;
	fma.rn.f32 	%f867, %f865, 0f40490FDA, %f866;
	mul.f32 	%f868, %f867, %f867;
	fma.rn.f32 	%f869, %f868, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f870, %f869, %f868, 0f3D2AAABB;
	fma.rn.f32 	%f871, %f870, %f868, 0fBEFFFFFF;
	fma.rn.f32 	%f872, %f871, %f868, 0f3F800000;
	fma.rn.f32 	%f873, %f868, %f867, 0f00000000;
	fma.rn.f32 	%f874, %f868, 0fB94D4153, 0f3C0885E4;
	fma.rn.f32 	%f875, %f874, %f868, 0fBE2AAAA8;
	fma.rn.f32 	%f876, %f875, %f873, %f867;
	and.b32  	%r423, %r422, 1;
	setp.eq.b32 	%p211, %r423, 1;
	selp.f32 	%f877, %f872, %f876, %p211;
	selp.f32 	%f878, %f876, %f872, %p211;
	and.b32  	%r424, %r422, 2;
	setp.eq.s32 	%p212, %r424, 0;
	neg.f32 	%f879, %f877;
	selp.f32 	%f880, %f877, %f879, %p212;
	add.s32 	%r425, %r422, 1;
	and.b32  	%r426, %r425, 2;
	setp.eq.s32 	%p213, %r426, 0;
	sub.f32 	%f882, %f214, %f878;
	selp.f32 	%f883, %f878, %f882, %p213;
	cvt.rzi.f32.f32 	%f884, %f920;
	setp.eq.f32 	%p214, %f884, %f920;
	mul.f32 	%f885, %f920, 0f00000000;
	selp.f32 	%f886, %f885, %f880, %p214;
	abs.f32 	%f887, %f920;
	setp.gt.f32 	%p215, %f887, 0f4B800000;
	add.f32 	%f888, %f886, 0f3F800000;
	selp.f32 	%f889, %f888, %f883, %p215;
	mov.b32 	%r408, %f889;
	mov.b32 	%r407, %f132;
	// begin inline asm
	cvt.rn.f16x2.f32 %r89, %r408, %r407;
	// end inline asm
	mov.b32 	%r414, %f886;
	xor.b32  	%r411, %r414, -2147483648;
	mov.b32 	%r413, %f131;
	xor.b32  	%r410, %r413, -2147483648;
	// begin inline asm
	cvt.rn.f16x2.f32 %r90, %r411, %r410;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r91, %r414, %r413;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r92, %r408, %r407;
	// end inline asm
	shl.b32 	%r427, %r2, 4;
	and.b32  	%r428, %r427, 112;
	shl.b32 	%r429, %r1, 7;
	and.b32  	%r430, %r429, 384;
	or.b32  	%r431, %r428, %r430;
	and.b32  	%r432, %r429, 512;
	or.b32  	%r433, %r6, %r3;
	or.b32  	%r93, %r433, %r9;
	or.b32  	%r94, %r431, %r432;
	and.b32  	%r95, %r2, 8;
	shr.u32 	%r434, %r3, 3;
	mul.lo.s32 	%r435, %r18, 65;
	or.b32  	%r436, %r427, %r95;
	shr.u32 	%r437, %r436, 2;
	and.b32  	%r438, %r437, 30;
	bfe.u32 	%r439, %r3, 2, 1;
	shr.u32 	%r440, %r3, 1;
	bfe.u32 	%r441, %r3, 1, 1;
	and.b32  	%r442, %r3, 1;
	mad.lo.s32 	%r443, %r434, 130, %r435;
	mad.lo.s32 	%r444, %r442, 1040, %r443;
	mad.lo.s32 	%r445, %r439, 260, %r444;
	mad.lo.s32 	%r446, %r441, 520, %r445;
	add.s32 	%r447, %r446, %r438;
	mul.wide.u32 	%rd63, %r447, 4;
	mov.u64 	%rd64, shmem;
	add.s64 	%rd5, %rd64, %rd63;
	add.s32 	%r448, %r447, 32;
	mul.wide.u32 	%rd65, %r448, 4;
	add.s64 	%rd6, %rd64, %rd65;
	add.s32 	%r449, %r447, 1;
	mul.wide.u32 	%rd66, %r449, 4;
	add.s64 	%rd7, %rd64, %rd66;
	add.s32 	%r450, %r447, 33;
	mul.wide.u32 	%rd67, %r450, 4;
	add.s64 	%rd8, %rd64, %rd67;
	mul.lo.s32 	%r451, %r15, 130;
	mul.lo.s32 	%r452, %r14, 65;
	mul.lo.s32 	%r453, %r17, 260;
	mul.lo.s32 	%r454, %r18, 520;
	mul.lo.s32 	%r455, %r20, 1040;
	and.b32  	%r456, %r4, 32;
	add.s32 	%r457, %r451, %r440;
	add.s32 	%r458, %r457, %r454;
	add.s32 	%r459, %r458, %r456;
	add.s32 	%r460, %r459, %r452;
	add.s32 	%r461, %r460, %r453;
	add.s32 	%r462, %r461, %r455;
	or.b32  	%r463, %r440, 8;
	add.s32 	%r464, %r463, %r451;
	add.s32 	%r465, %r464, %r454;
	add.s32 	%r466, %r465, %r456;
	add.s32 	%r467, %r466, %r452;
	add.s32 	%r468, %r467, %r453;
	add.s32 	%r469, %r468, %r455;
	or.b32  	%r470, %r440, 16;
	add.s32 	%r471, %r470, %r451;
	add.s32 	%r472, %r471, %r454;
	add.s32 	%r473, %r472, %r456;
	add.s32 	%r474, %r473, %r452;
	add.s32 	%r475, %r474, %r453;
	add.s32 	%r476, %r475, %r455;
	or.b32  	%r477, %r440, 24;
	add.s32 	%r478, %r477, %r451;
	add.s32 	%r479, %r478, %r454;
	add.s32 	%r480, %r479, %r456;
	add.s32 	%r481, %r480, %r452;
	add.s32 	%r482, %r481, %r453;
	add.s32 	%r483, %r482, %r455;
	or.b32  	%r484, %r11, %r10;
	or.b32  	%r485, %r484, %r8;
	or.b32  	%r486, %r485, %r9;
	shr.u32 	%r487, %r486, 1;
	mul.lo.s32 	%r488, %r487, 65;
	or.b32  	%r489, %r456, %r440;
	add.s32 	%r490, %r489, %r488;
	or.b32  	%r491, %r456, %r463;
	add.s32 	%r492, %r491, %r488;
	or.b32  	%r493, %r456, %r470;
	add.s32 	%r494, %r493, %r488;
	or.b32  	%r495, %r456, %r477;
	add.s32 	%r496, %r495, %r488;
	shl.b32 	%r497, %r3, 1;
	or.b32  	%r498, %r497, %r18;
	mul.lo.s32 	%r499, %r498, 65;
	add.s32 	%r500, %r438, %r499;
	mul.wide.u32 	%rd68, %r500, 4;
	add.s64 	%rd9, %rd64, %rd68;
	cvt.u64.u32 	%rd69, %r438;
	cvt.u64.u32 	%rd70, %r499;
	add.s64 	%rd71, %rd70, %rd69;
	shl.b64 	%rd72, %rd71, 2;
	add.s64 	%rd10, %rd64, %rd72;
	and.b32  	%r501, %r7, 28;
	shl.b32 	%r502, %r1, 5;
	shl.b32 	%r503, %r3, 2;
	or.b32  	%r504, %r503, %r19;
	shl.b32 	%r505, %r1, 3;
	and.b32  	%r506, %r505, 960;
	or.b32  	%r507, %r504, %r506;
	shl.b32 	%r508, %r507, 8;
	and.b32  	%r509, %r502, 224;
	or.b32  	%r510, %r509, %r501;
	or.b32  	%r511, %r510, %r508;
	or.b32  	%r96, %r511, -786432;
	mul.wide.u32 	%rd11, %r496, 4;
	mul.wide.u32 	%rd12, %r494, 4;
	mul.wide.u32 	%rd13, %r492, 4;
	mul.wide.u32 	%rd14, %r490, 4;
	mul.wide.u32 	%rd15, %r483, 4;
	mul.wide.u32 	%rd16, %r476, 4;
	mul.wide.u32 	%rd17, %r469, 4;
	mul.wide.u32 	%rd18, %r462, 4;
	mov.u32 	%r7795, 0;
	setp.eq.s32 	%p216, %r95, 0;
	mov.u16 	%rs1176, 25600;
	mov.u16 	%rs1072, 21504;
	mov.u16 	%rs1184, 18432;
	mov.u16 	%rs1142, -14592;
	mov.u32 	%r7796, %r7795;
	mov.u32 	%r7797, %r7795;
	mov.u32 	%r7798, %r7795;
	mov.u32 	%r7799, %r7795;
	mov.u32 	%r7800, %r7795;
	mov.u32 	%r7801, %r7795;
	mov.u32 	%r7802, %r7795;
	mov.u32 	%r7803, %r7795;
	mov.u32 	%r7804, %r7795;
	mov.u32 	%r7805, %r7795;
	mov.u32 	%r7806, %r7795;
	mov.u32 	%r7793, %r7795;
	bra.uni 	LBB0_112;
LBB0_116:                               // %L29334
                                        //   in Loop: Header=BB0_112 Depth=1
	add.s32 	%r7793, %r109, 256;
	setp.gt.s32 	%p221, %r5, %r7793;
	setp.ne.s32 	%p222, %r109, 32512;
	and.pred  	%p223, %p222, %p221;
	@%p223 bra 	LBB0_112;
	bra.uni 	LBB0_117;
LBB0_112:                               // %L1246
                                        // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_113 Depth 2
	mov.u32 	%r109, %r7793;
	or.b32  	%r529, %r93, %r109;
	shl.b32 	%r530, %r529, 14;
	or.b32  	%r531, %r94, %r530;
	cvt.u64.u32 	%rd74, %r531;
	add.s64 	%rd75, %rd2, %rd74;
	ld.global.v4.u32 	{%r532, %r533, %r534, %r535}, [%rd75];
	selp.b32 	%r536, %r534, %r532, %p216;
	shfl.sync.bfly.b32	%r537, %r536, 8, 31, -1;
	selp.b32 	%r513, %r532, %r537, %p216;
	selp.b32 	%r514, %r537, %r534, %p216;
	selp.b32 	%r538, %r535, %r533, %p216;
	shfl.sync.bfly.b32	%r539, %r538, 8, 31, -1;
	selp.b32 	%r521, %r533, %r539, %p216;
	selp.b32 	%r522, %r539, %r535, %p216;
	mov.u32 	%r523, 21520;
	// begin inline asm
	prmt.b32 %r512, %r513, %r514, %r523;
	// end inline asm
	mov.u32 	%r527, 30258;
	// begin inline asm
	prmt.b32 %r516, %r513, %r514, %r527;
	// end inline asm
	// begin inline asm
	prmt.b32 %r520, %r521, %r522, %r523;
	// end inline asm
	// begin inline asm
	prmt.b32 %r524, %r521, %r522, %r527;
	// end inline asm
	st.shared.u32 	[%rd5], %r512;
	st.shared.u32 	[%rd6], %r516;
	st.shared.u32 	[%rd7], %r520;
	st.shared.u32 	[%rd8], %r524;
	bar.sync 	0;
	mov.u32 	%r7794, 256;
	mov.u64 	%rd86, %rd64;
LBB0_113:                               // %L4370
                                        //   Parent Loop BB0_112 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	add.s64 	%rd76, %rd86, %rd18;
	ld.shared.u32 	%r7724, [%rd76];
	add.s64 	%rd77, %rd86, %rd17;
	ld.shared.u32 	%r7725, [%rd77];
	add.s64 	%rd78, %rd86, %rd16;
	ld.shared.u32 	%r7726, [%rd78];
	add.s64 	%rd79, %rd86, %rd15;
	ld.shared.u32 	%r7727, [%rd79];
	// begin inline asm
	mov.b32 %r545, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r556, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r544, %r7724, -2004318072;
	mov.u32 	%r543, 983055;
	// begin inline asm
	lop3.b32 %r542, %r543, %r544, %r545, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r546, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r547, %r545, %r546;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r550, %r542, %r547;
	// end inline asm
	mov.u32 	%r554, 15728880;
	// begin inline asm
	lop3.b32 %r553, %r554, %r544, %r556, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r557, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r558, %r556, %r557;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r561, %r553, %r558;
	// end inline asm
	shr.u32 	%r566, %r544, 8;
	// begin inline asm
	lop3.b32 %r564, %r543, %r566, %r545, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r568, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r569, %r545, %r568;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r572, %r564, %r569;
	// end inline asm
	// begin inline asm
	lop3.b32 %r575, %r554, %r566, %r556, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r579, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r580, %r556, %r579;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r583, %r575, %r580;
	// end inline asm
	// begin inline asm
	mov.b32 %r591, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r602, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r590, %r7725, -2004318072;
	// begin inline asm
	lop3.b32 %r588, %r543, %r590, %r591, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r592, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r593, %r591, %r592;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r596, %r588, %r593;
	// end inline asm
	// begin inline asm
	lop3.b32 %r599, %r554, %r590, %r602, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r603, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r604, %r602, %r603;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r607, %r599, %r604;
	// end inline asm
	shr.u32 	%r612, %r590, 8;
	// begin inline asm
	lop3.b32 %r610, %r543, %r612, %r591, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r614, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r615, %r591, %r614;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r618, %r610, %r615;
	// end inline asm
	// begin inline asm
	lop3.b32 %r621, %r554, %r612, %r602, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r625, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r626, %r602, %r625;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r629, %r621, %r626;
	// end inline asm
	// begin inline asm
	mov.b32 %r637, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r648, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r636, %r7726, -2004318072;
	// begin inline asm
	lop3.b32 %r634, %r543, %r636, %r637, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r638, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r639, %r637, %r638;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r642, %r634, %r639;
	// end inline asm
	// begin inline asm
	lop3.b32 %r645, %r554, %r636, %r648, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r649, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r650, %r648, %r649;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r653, %r645, %r650;
	// end inline asm
	shr.u32 	%r658, %r636, 8;
	// begin inline asm
	lop3.b32 %r656, %r543, %r658, %r637, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r660, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r661, %r637, %r660;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r664, %r656, %r661;
	// end inline asm
	// begin inline asm
	lop3.b32 %r667, %r554, %r658, %r648, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r671, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r672, %r648, %r671;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r675, %r667, %r672;
	// end inline asm
	// begin inline asm
	mov.b32 %r683, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r694, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r682, %r7727, -2004318072;
	// begin inline asm
	lop3.b32 %r680, %r543, %r682, %r683, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r684, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r685, %r683, %r684;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r688, %r680, %r685;
	// end inline asm
	// begin inline asm
	lop3.b32 %r691, %r554, %r682, %r694, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r695, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r696, %r694, %r695;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r699, %r691, %r696;
	// end inline asm
	shr.u32 	%r704, %r682, 8;
	// begin inline asm
	lop3.b32 %r702, %r543, %r704, %r683, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r706, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r707, %r683, %r706;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r710, %r702, %r707;
	// end inline asm
	// begin inline asm
	lop3.b32 %r713, %r554, %r704, %r694, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r717, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r718, %r694, %r717;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r721, %r713, %r718;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r724, %r249;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r726, %r724, %r550;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r729, %r249;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r731, %r729, %r561;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r734, %r249;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r736, %r734, %r572;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r739, %r249;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r741, %r739, %r583;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r744, %r249;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r746, %r744, %r596;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r749, %r249;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r751, %r749, %r607;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r754, %r249;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r756, %r754, %r618;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r759, %r249;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r761, %r759, %r629;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r764, %r249;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r766, %r764, %r642;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r769, %r249;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r771, %r769, %r653;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r774, %r249;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r776, %r774, %r664;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r779, %r249;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r781, %r779, %r675;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r784, %r249;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r786, %r784, %r688;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r789, %r249;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r791, %r789, %r699;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r794, %r249;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r796, %r794, %r710;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r799, %r249;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r801, %r799, %r721;
	// end inline asm
	// begin inline asm
	mov.b32 %r809, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r820, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r808, %r7795, -2004318072;
	// begin inline asm
	lop3.b32 %r806, %r543, %r808, %r809, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r810, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r811, %r809, %r810;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r814, %r806, %r811;
	// end inline asm
	// begin inline asm
	lop3.b32 %r817, %r554, %r808, %r820, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r821, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r822, %r820, %r821;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r825, %r817, %r822;
	// end inline asm
	shr.u32 	%r830, %r808, 8;
	// begin inline asm
	lop3.b32 %r828, %r543, %r830, %r809, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r832, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r833, %r809, %r832;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r836, %r828, %r833;
	// end inline asm
	// begin inline asm
	lop3.b32 %r839, %r554, %r830, %r820, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r843, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r844, %r820, %r843;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r847, %r839, %r844;
	// end inline asm
	// begin inline asm
	mov.b32 %r855, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r866, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r854, %r7796, -2004318072;
	// begin inline asm
	lop3.b32 %r852, %r543, %r854, %r855, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r856, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r857, %r855, %r856;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r860, %r852, %r857;
	// end inline asm
	// begin inline asm
	lop3.b32 %r863, %r554, %r854, %r866, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r867, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r868, %r866, %r867;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r871, %r863, %r868;
	// end inline asm
	shr.u32 	%r876, %r854, 8;
	// begin inline asm
	lop3.b32 %r874, %r543, %r876, %r855, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r878, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r879, %r855, %r878;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r882, %r874, %r879;
	// end inline asm
	// begin inline asm
	lop3.b32 %r885, %r554, %r876, %r866, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r889, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r890, %r866, %r889;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r893, %r885, %r890;
	// end inline asm
	// begin inline asm
	mov.b32 %r901, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r912, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r900, %r7797, -2004318072;
	// begin inline asm
	lop3.b32 %r898, %r543, %r900, %r901, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r902, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r903, %r901, %r902;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r906, %r898, %r903;
	// end inline asm
	// begin inline asm
	lop3.b32 %r909, %r554, %r900, %r912, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r913, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r914, %r912, %r913;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r917, %r909, %r914;
	// end inline asm
	shr.u32 	%r922, %r900, 8;
	// begin inline asm
	lop3.b32 %r920, %r543, %r922, %r901, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r924, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r925, %r901, %r924;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r928, %r920, %r925;
	// end inline asm
	// begin inline asm
	lop3.b32 %r931, %r554, %r922, %r912, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r935, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r936, %r912, %r935;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r939, %r931, %r936;
	// end inline asm
	// begin inline asm
	mov.b32 %r947, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r958, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r946, %r7798, -2004318072;
	// begin inline asm
	lop3.b32 %r944, %r543, %r946, %r947, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r948, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r949, %r947, %r948;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r952, %r944, %r949;
	// end inline asm
	// begin inline asm
	lop3.b32 %r955, %r554, %r946, %r958, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r959, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r960, %r958, %r959;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r963, %r955, %r960;
	// end inline asm
	shr.u32 	%r968, %r946, 8;
	// begin inline asm
	lop3.b32 %r966, %r543, %r968, %r947, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r970, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r971, %r947, %r970;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r974, %r966, %r971;
	// end inline asm
	// begin inline asm
	lop3.b32 %r977, %r554, %r968, %r958, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r981, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r982, %r958, %r981;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r985, %r977, %r982;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r988, %r195, %r814, %r726;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r992, %r195, %r825, %r731;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r996, %r195, %r836, %r736;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1000, %r195, %r847, %r741;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1004, %r195, %r860, %r746;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1008, %r195, %r871, %r751;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1012, %r195, %r882, %r756;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1016, %r195, %r893, %r761;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1020, %r195, %r906, %r766;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1024, %r195, %r917, %r771;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1028, %r195, %r928, %r776;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1032, %r195, %r939, %r781;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1036, %r195, %r952, %r786;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1040, %r195, %r963, %r791;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1044, %r195, %r974, %r796;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1048, %r195, %r985, %r801;
	// end inline asm
	// begin inline asm
	mov.b32 %r1057, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1068, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1056, %r7799, -2004318072;
	// begin inline asm
	lop3.b32 %r1054, %r543, %r1056, %r1057, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1058, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1059, %r1057, %r1058;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1062, %r1054, %r1059;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1065, %r554, %r1056, %r1068, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1069, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1070, %r1068, %r1069;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1073, %r1065, %r1070;
	// end inline asm
	shr.u32 	%r1078, %r1056, 8;
	// begin inline asm
	lop3.b32 %r1076, %r543, %r1078, %r1057, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1080, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1081, %r1057, %r1080;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1084, %r1076, %r1081;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1087, %r554, %r1078, %r1068, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1091, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1092, %r1068, %r1091;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1095, %r1087, %r1092;
	// end inline asm
	// begin inline asm
	mov.b32 %r1103, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1114, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1102, %r7800, -2004318072;
	// begin inline asm
	lop3.b32 %r1100, %r543, %r1102, %r1103, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1104, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1105, %r1103, %r1104;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1108, %r1100, %r1105;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1111, %r554, %r1102, %r1114, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1115, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1116, %r1114, %r1115;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1119, %r1111, %r1116;
	// end inline asm
	shr.u32 	%r1124, %r1102, 8;
	// begin inline asm
	lop3.b32 %r1122, %r543, %r1124, %r1103, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1126, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1127, %r1103, %r1126;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1130, %r1122, %r1127;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1133, %r554, %r1124, %r1114, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1137, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1138, %r1114, %r1137;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1141, %r1133, %r1138;
	// end inline asm
	// begin inline asm
	mov.b32 %r1149, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1160, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1148, %r7801, -2004318072;
	// begin inline asm
	lop3.b32 %r1146, %r543, %r1148, %r1149, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1150, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1151, %r1149, %r1150;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1154, %r1146, %r1151;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1157, %r554, %r1148, %r1160, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1161, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1162, %r1160, %r1161;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1165, %r1157, %r1162;
	// end inline asm
	shr.u32 	%r1170, %r1148, 8;
	// begin inline asm
	lop3.b32 %r1168, %r543, %r1170, %r1149, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1172, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1173, %r1149, %r1172;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1176, %r1168, %r1173;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1179, %r554, %r1170, %r1160, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1183, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1184, %r1160, %r1183;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1187, %r1179, %r1184;
	// end inline asm
	// begin inline asm
	mov.b32 %r1195, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1206, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1194, %r7802, -2004318072;
	// begin inline asm
	lop3.b32 %r1192, %r543, %r1194, %r1195, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1196, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1197, %r1195, %r1196;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1200, %r1192, %r1197;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1203, %r554, %r1194, %r1206, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1207, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1208, %r1206, %r1207;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1211, %r1203, %r1208;
	// end inline asm
	shr.u32 	%r1216, %r1194, 8;
	// begin inline asm
	lop3.b32 %r1214, %r543, %r1216, %r1195, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1218, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1219, %r1195, %r1218;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1222, %r1214, %r1219;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1225, %r554, %r1216, %r1206, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1229, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1230, %r1206, %r1229;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1233, %r1225, %r1230;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1236, %r213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1238, %r1236, %r1062, %r988;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1242, %r213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1244, %r1242, %r1073, %r992;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1248, %r213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1250, %r1248, %r1084, %r996;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1254, %r213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1256, %r1254, %r1095, %r1000;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1260, %r213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1262, %r1260, %r1108, %r1004;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1266, %r213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1268, %r1266, %r1119, %r1008;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1272, %r213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1274, %r1272, %r1130, %r1012;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1278, %r213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1280, %r1278, %r1141, %r1016;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1284, %r213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1286, %r1284, %r1154, %r1020;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1290, %r213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1292, %r1290, %r1165, %r1024;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1296, %r213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1298, %r1296, %r1176, %r1028;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1302, %r213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1304, %r1302, %r1187, %r1032;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1308, %r213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1310, %r1308, %r1200, %r1036;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1314, %r213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1316, %r1314, %r1211, %r1040;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1320, %r213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1322, %r1320, %r1222, %r1044;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1326, %r213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1328, %r1326, %r1233, %r1048;
	// end inline asm
	// begin inline asm
	mov.b32 %r1337, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1348, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1336, %r7803, -2004318072;
	// begin inline asm
	lop3.b32 %r1334, %r543, %r1336, %r1337, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1338, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1339, %r1337, %r1338;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1342, %r1334, %r1339;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1345, %r554, %r1336, %r1348, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1349, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1350, %r1348, %r1349;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1353, %r1345, %r1350;
	// end inline asm
	shr.u32 	%r1358, %r1336, 8;
	// begin inline asm
	lop3.b32 %r1356, %r543, %r1358, %r1337, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1360, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1361, %r1337, %r1360;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1364, %r1356, %r1361;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1367, %r554, %r1358, %r1348, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1371, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1372, %r1348, %r1371;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1375, %r1367, %r1372;
	// end inline asm
	// begin inline asm
	mov.b32 %r1383, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1394, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1382, %r7804, -2004318072;
	// begin inline asm
	lop3.b32 %r1380, %r543, %r1382, %r1383, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1384, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1385, %r1383, %r1384;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1388, %r1380, %r1385;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1391, %r554, %r1382, %r1394, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1395, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1396, %r1394, %r1395;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1399, %r1391, %r1396;
	// end inline asm
	shr.u32 	%r1404, %r1382, 8;
	// begin inline asm
	lop3.b32 %r1402, %r543, %r1404, %r1383, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1406, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1407, %r1383, %r1406;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1410, %r1402, %r1407;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1413, %r554, %r1404, %r1394, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1417, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1418, %r1394, %r1417;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1421, %r1413, %r1418;
	// end inline asm
	// begin inline asm
	mov.b32 %r1429, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1440, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1428, %r7805, -2004318072;
	// begin inline asm
	lop3.b32 %r1426, %r543, %r1428, %r1429, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1430, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1431, %r1429, %r1430;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1434, %r1426, %r1431;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1437, %r554, %r1428, %r1440, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1441, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1442, %r1440, %r1441;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1445, %r1437, %r1442;
	// end inline asm
	shr.u32 	%r1450, %r1428, 8;
	// begin inline asm
	lop3.b32 %r1448, %r543, %r1450, %r1429, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1452, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1453, %r1429, %r1452;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1456, %r1448, %r1453;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1459, %r554, %r1450, %r1440, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1463, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1464, %r1440, %r1463;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1467, %r1459, %r1464;
	// end inline asm
	// begin inline asm
	mov.b32 %r1475, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1486, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1474, %r7806, -2004318072;
	// begin inline asm
	lop3.b32 %r1472, %r543, %r1474, %r1475, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1476, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1477, %r1475, %r1476;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1480, %r1472, %r1477;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1483, %r554, %r1474, %r1486, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1487, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1488, %r1486, %r1487;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1491, %r1483, %r1488;
	// end inline asm
	shr.u32 	%r1496, %r1474, 8;
	// begin inline asm
	lop3.b32 %r1494, %r543, %r1496, %r1475, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1498, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1499, %r1475, %r1498;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1502, %r1494, %r1499;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1505, %r554, %r1496, %r1486, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1509, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1510, %r1486, %r1509;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1513, %r1505, %r1510;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1587, %r231, %r1342, %r1238;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1584, %r231, %r1353, %r1244;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1596, %r231, %r1364, %r1250;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1593, %r231, %r1375, %r1256;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1605, %r231, %r1388, %r1262;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1602, %r231, %r1399, %r1268;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1614, %r231, %r1410, %r1274;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1611, %r231, %r1421, %r1280;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1623, %r231, %r1434, %r1286;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1620, %r231, %r1445, %r1292;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1632, %r231, %r1456, %r1298;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1629, %r231, %r1467, %r1304;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1641, %r231, %r1480, %r1310;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1638, %r231, %r1491, %r1316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1650, %r231, %r1502, %r1322;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1647, %r231, %r1513, %r1328;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1580, %r280;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1582, %r1580, %r1584;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1585, %r277, %r1587, %r1582;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1589, %r280;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1591, %r1589, %r1593;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1594, %r277, %r1596, %r1591;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1598, %r280;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1600, %r1598, %r1602;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1603, %r277, %r1605, %r1600;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1607, %r280;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1609, %r1607, %r1611;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1612, %r277, %r1614, %r1609;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1616, %r280;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1618, %r1616, %r1620;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1621, %r277, %r1623, %r1618;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1625, %r280;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1627, %r1625, %r1629;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1630, %r277, %r1632, %r1627;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1634, %r280;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1636, %r1634, %r1638;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1639, %r277, %r1641, %r1636;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1643, %r280;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1645, %r1643, %r1647;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1648, %r277, %r1650, %r1645;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1652, %r280, %r1587;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1655, %r277, %r1584, %r1652;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1659, %r280, %r1596;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1662, %r277, %r1593, %r1659;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1666, %r280, %r1605;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1669, %r277, %r1602, %r1666;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1673, %r280, %r1614;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1676, %r277, %r1611, %r1673;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1680, %r280, %r1623;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1683, %r277, %r1620, %r1680;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1687, %r280, %r1632;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1690, %r277, %r1629, %r1687;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1694, %r280, %r1641;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1697, %r277, %r1638, %r1694;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1701, %r280, %r1650;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1704, %r277, %r1647, %r1701;
	// end inline asm
	mov.u32 	%r7383, 0;
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1795, %r1792}, {%r319, %r325, %r322, %r328}, {%r1585, %r1655}, {%r7383, %r7383};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1804, %r1801}, {%r319, %r325, %r322, %r328}, {%r1594, %r1662}, {%r7383, %r7383};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1813, %r1810}, {%r319, %r325, %r322, %r328}, {%r1603, %r1669}, {%r7383, %r7383};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1822, %r1819}, {%r319, %r325, %r322, %r328}, {%r1612, %r1676}, {%r7383, %r7383};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1831, %r1828}, {%r319, %r325, %r322, %r328}, {%r1621, %r1683}, {%r7383, %r7383};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1840, %r1837}, {%r319, %r325, %r322, %r328}, {%r1630, %r1690}, {%r7383, %r7383};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1849, %r1846}, {%r319, %r325, %r322, %r328}, {%r1639, %r1697}, {%r7383, %r7383};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1858, %r1855}, {%r319, %r325, %r322, %r328}, {%r1648, %r1704}, {%r7383, %r7383};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1788, %r366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1790, %r1788, %r1792;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1793, %r363, %r1795, %r1790;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1797, %r366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1799, %r1797, %r1801;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1802, %r363, %r1804, %r1799;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1806, %r366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1808, %r1806, %r1810;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1811, %r363, %r1813, %r1808;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1815, %r366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1817, %r1815, %r1819;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1820, %r363, %r1822, %r1817;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1824, %r366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1826, %r1824, %r1828;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1829, %r363, %r1831, %r1826;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1833, %r366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1835, %r1833, %r1837;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1838, %r363, %r1840, %r1835;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1842, %r366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1844, %r1842, %r1846;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1847, %r363, %r1849, %r1844;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1851, %r366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1853, %r1851, %r1855;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1856, %r363, %r1858, %r1853;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1860, %r366, %r1795;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1863, %r363, %r1792, %r1860;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1867, %r366, %r1804;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1870, %r363, %r1801, %r1867;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1874, %r366, %r1813;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1877, %r363, %r1810, %r1874;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1881, %r366, %r1822;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1884, %r363, %r1819, %r1881;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1888, %r366, %r1831;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1891, %r363, %r1828, %r1888;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1895, %r366, %r1840;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1898, %r363, %r1837, %r1895;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1902, %r366, %r1849;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1905, %r363, %r1846, %r1902;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1909, %r366, %r1858;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1912, %r363, %r1855, %r1909;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1916, %r1917}, {%r89, %r91, %r90, %r92}, {%r1793, %r1863}, {%r7383, %r7383};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1926, %r1927}, {%r89, %r91, %r90, %r92}, {%r1802, %r1870}, {%r7383, %r7383};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1936, %r1937}, {%r89, %r91, %r90, %r92}, {%r1811, %r1877}, {%r7383, %r7383};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1946, %r1947}, {%r89, %r91, %r90, %r92}, {%r1820, %r1884}, {%r7383, %r7383};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1956, %r1957}, {%r89, %r91, %r90, %r92}, {%r1829, %r1891}, {%r7383, %r7383};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1966, %r1967}, {%r89, %r91, %r90, %r92}, {%r1838, %r1898}, {%r7383, %r7383};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1976, %r1977}, {%r89, %r91, %r90, %r92}, {%r1847, %r1905}, {%r7383, %r7383};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1986, %r1987}, {%r89, %r91, %r90, %r92}, {%r1856, %r1912}, {%r7383, %r7383};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1996, %r12, %r1916;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1999, %r12, %r1917;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2002, %r12, %r1926;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2005, %r12, %r1927;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2008, %r12, %r1936;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2011, %r12, %r1937;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2014, %r12, %r1946;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2017, %r12, %r1947;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2020, %r12, %r1956;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2023, %r12, %r1957;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2026, %r12, %r1966;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2029, %r12, %r1967;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2032, %r12, %r1976;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2035, %r12, %r1977;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2038, %r12, %r1986;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2041, %r12, %r1987;
	// end inline asm
	// begin inline asm
	mov.b32 %r2044, {%rs1142, %rs1142};
	// end inline asm
	mov.u16 	%rs195, 18176;
	// begin inline asm
	mov.b32 %r2045, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2046, %r1996, %r2044;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2049, %r2046, %r2045;
	// end inline asm
	// begin inline asm
	mov.b32 %r2052, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2053, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2054, %r1999, %r2052;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2057, %r2054, %r2053;
	// end inline asm
	// begin inline asm
	mov.b32 %r2060, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2061, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2062, %r2002, %r2060;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2065, %r2062, %r2061;
	// end inline asm
	// begin inline asm
	mov.b32 %r2068, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2069, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2070, %r2005, %r2068;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2073, %r2070, %r2069;
	// end inline asm
	// begin inline asm
	mov.b32 %r2076, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2077, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2078, %r2008, %r2076;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2081, %r2078, %r2077;
	// end inline asm
	// begin inline asm
	mov.b32 %r2084, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2085, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2086, %r2011, %r2084;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2089, %r2086, %r2085;
	// end inline asm
	// begin inline asm
	mov.b32 %r2092, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2093, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2094, %r2014, %r2092;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2097, %r2094, %r2093;
	// end inline asm
	// begin inline asm
	mov.b32 %r2100, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2101, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2102, %r2017, %r2100;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2105, %r2102, %r2101;
	// end inline asm
	// begin inline asm
	mov.b32 %r2108, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2109, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2110, %r2020, %r2108;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2113, %r2110, %r2109;
	// end inline asm
	// begin inline asm
	mov.b32 %r2116, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2117, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2118, %r2023, %r2116;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2121, %r2118, %r2117;
	// end inline asm
	// begin inline asm
	mov.b32 %r2124, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2125, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2126, %r2026, %r2124;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2129, %r2126, %r2125;
	// end inline asm
	// begin inline asm
	mov.b32 %r2132, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2133, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2134, %r2029, %r2132;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2137, %r2134, %r2133;
	// end inline asm
	// begin inline asm
	mov.b32 %r2140, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2141, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2142, %r2032, %r2140;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2145, %r2142, %r2141;
	// end inline asm
	// begin inline asm
	mov.b32 %r2148, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2149, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2150, %r2035, %r2148;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2153, %r2150, %r2149;
	// end inline asm
	// begin inline asm
	mov.b32 %r2156, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2157, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2158, %r2038, %r2156;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2161, %r2158, %r2157;
	// end inline asm
	// begin inline asm
	mov.b32 %r2164, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2165, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2166, %r2041, %r2164;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2169, %r2166, %r2165;
	// end inline asm
	// begin inline asm
	mov.b32 %r2175, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2173, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2174, %r2175, %r2173;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2177, %r2049, %r2174;
	// end inline asm
	// begin inline asm
	mov.b32 %r2180, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2181, %r2175, %r2180;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2184, %r2057, %r2181;
	// end inline asm
	// begin inline asm
	mov.b32 %r2187, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2188, %r2175, %r2187;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2191, %r2065, %r2188;
	// end inline asm
	// begin inline asm
	mov.b32 %r2194, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2195, %r2175, %r2194;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2198, %r2073, %r2195;
	// end inline asm
	mov.u32 	%r2204, 25152;
	// begin inline asm
	prmt.b32 %r2201, %r2177, %r2191, %r2204;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2205, %r2184, %r2198, %r2204;
	// end inline asm
	shl.b32 	%r2212, %r2205, 4;
	mov.u32 	%r2210, 252645135;
	// begin inline asm
	lop3.b32 %r2209, %r2210, %r2201, %r2212, 202;
	// end inline asm
	xor.b32  	%r7728, %r2209, -2004318072;
	// begin inline asm
	mov.b32 %r2216, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2214, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2215, %r2216, %r2214;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2218, %r2081, %r2215;
	// end inline asm
	// begin inline asm
	mov.b32 %r2221, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2222, %r2216, %r2221;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2225, %r2089, %r2222;
	// end inline asm
	// begin inline asm
	mov.b32 %r2228, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2229, %r2216, %r2228;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2232, %r2097, %r2229;
	// end inline asm
	// begin inline asm
	mov.b32 %r2235, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2236, %r2216, %r2235;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2239, %r2105, %r2236;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2242, %r2218, %r2232, %r2204;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2246, %r2225, %r2239, %r2204;
	// end inline asm
	shl.b32 	%r2253, %r2246, 4;
	// begin inline asm
	lop3.b32 %r2250, %r2210, %r2242, %r2253, 202;
	// end inline asm
	xor.b32  	%r7729, %r2250, -2004318072;
	// begin inline asm
	mov.b32 %r2257, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2255, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2256, %r2257, %r2255;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2259, %r2113, %r2256;
	// end inline asm
	// begin inline asm
	mov.b32 %r2262, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2263, %r2257, %r2262;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2266, %r2121, %r2263;
	// end inline asm
	// begin inline asm
	mov.b32 %r2269, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2270, %r2257, %r2269;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2273, %r2129, %r2270;
	// end inline asm
	// begin inline asm
	mov.b32 %r2276, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2277, %r2257, %r2276;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2280, %r2137, %r2277;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2283, %r2259, %r2273, %r2204;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2287, %r2266, %r2280, %r2204;
	// end inline asm
	shl.b32 	%r2294, %r2287, 4;
	// begin inline asm
	lop3.b32 %r2291, %r2210, %r2283, %r2294, 202;
	// end inline asm
	xor.b32  	%r7730, %r2291, -2004318072;
	// begin inline asm
	mov.b32 %r2298, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2296, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2297, %r2298, %r2296;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2300, %r2145, %r2297;
	// end inline asm
	// begin inline asm
	mov.b32 %r2303, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2304, %r2298, %r2303;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2307, %r2153, %r2304;
	// end inline asm
	// begin inline asm
	mov.b32 %r2310, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2311, %r2298, %r2310;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2314, %r2161, %r2311;
	// end inline asm
	// begin inline asm
	mov.b32 %r2317, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2318, %r2298, %r2317;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2321, %r2169, %r2318;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2324, %r2300, %r2314, %r2204;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2328, %r2307, %r2321, %r2204;
	// end inline asm
	shl.b32 	%r2335, %r2328, 4;
	// begin inline asm
	lop3.b32 %r2332, %r2210, %r2324, %r2335, 202;
	// end inline asm
	xor.b32  	%r7731, %r2332, -2004318072;
	add.s64 	%rd80, %rd86, %rd14;
	st.shared.u32 	[%rd80], %r7728;
	add.s64 	%rd81, %rd86, %rd13;
	st.shared.u32 	[%rd81], %r7729;
	add.s64 	%rd82, %rd86, %rd12;
	st.shared.u32 	[%rd82], %r7730;
	add.s64 	%rd83, %rd86, %rd11;
	st.shared.u32 	[%rd83], %r7731;
	ld.shared.u32 	%r7795, [%rd76];
	ld.shared.u32 	%r7796, [%rd77];
	ld.shared.u32 	%r7797, [%rd78];
	ld.shared.u32 	%r7798, [%rd79];
	// begin inline asm
	mov.b32 %r2341, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2352, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r2340, %r7795, -2004318072;
	// begin inline asm
	lop3.b32 %r2338, %r543, %r2340, %r2341, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2342, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2343, %r2341, %r2342;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2346, %r2338, %r2343;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2349, %r554, %r2340, %r2352, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2353, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2354, %r2352, %r2353;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2357, %r2349, %r2354;
	// end inline asm
	shr.u32 	%r2362, %r2340, 8;
	// begin inline asm
	lop3.b32 %r2360, %r543, %r2362, %r2341, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2364, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2365, %r2341, %r2364;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2368, %r2360, %r2365;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2371, %r554, %r2362, %r2352, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2375, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2376, %r2352, %r2375;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2379, %r2371, %r2376;
	// end inline asm
	// begin inline asm
	mov.b32 %r2387, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2398, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r2386, %r7796, -2004318072;
	// begin inline asm
	lop3.b32 %r2384, %r543, %r2386, %r2387, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2388, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2389, %r2387, %r2388;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2392, %r2384, %r2389;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2395, %r554, %r2386, %r2398, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2399, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2400, %r2398, %r2399;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2403, %r2395, %r2400;
	// end inline asm
	shr.u32 	%r2408, %r2386, 8;
	// begin inline asm
	lop3.b32 %r2406, %r543, %r2408, %r2387, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2410, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2411, %r2387, %r2410;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2414, %r2406, %r2411;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2417, %r554, %r2408, %r2398, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2421, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2422, %r2398, %r2421;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2425, %r2417, %r2422;
	// end inline asm
	// begin inline asm
	mov.b32 %r2433, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2444, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r2432, %r7797, -2004318072;
	// begin inline asm
	lop3.b32 %r2430, %r543, %r2432, %r2433, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2434, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2435, %r2433, %r2434;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2438, %r2430, %r2435;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2441, %r554, %r2432, %r2444, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2445, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2446, %r2444, %r2445;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2449, %r2441, %r2446;
	// end inline asm
	shr.u32 	%r2454, %r2432, 8;
	// begin inline asm
	lop3.b32 %r2452, %r543, %r2454, %r2433, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2456, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2457, %r2433, %r2456;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2460, %r2452, %r2457;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2463, %r554, %r2454, %r2444, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2467, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2468, %r2444, %r2467;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2471, %r2463, %r2468;
	// end inline asm
	// begin inline asm
	mov.b32 %r2479, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2490, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r2478, %r7798, -2004318072;
	// begin inline asm
	lop3.b32 %r2476, %r543, %r2478, %r2479, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2480, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2481, %r2479, %r2480;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2484, %r2476, %r2481;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2487, %r554, %r2478, %r2490, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2491, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2492, %r2490, %r2491;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2495, %r2487, %r2492;
	// end inline asm
	shr.u32 	%r2500, %r2478, 8;
	// begin inline asm
	lop3.b32 %r2498, %r543, %r2500, %r2479, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2502, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2503, %r2479, %r2502;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2506, %r2498, %r2503;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2509, %r554, %r2500, %r2490, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2513, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2514, %r2490, %r2513;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2517, %r2509, %r2514;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2520, %r249;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2522, %r2520, %r2346;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2525, %r249;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2527, %r2525, %r2357;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2530, %r249;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2532, %r2530, %r2368;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2535, %r249;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2537, %r2535, %r2379;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2540, %r249;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2542, %r2540, %r2392;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2545, %r249;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2547, %r2545, %r2403;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2550, %r249;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2552, %r2550, %r2414;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2555, %r249;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2557, %r2555, %r2425;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2560, %r249;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2562, %r2560, %r2438;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2565, %r249;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2567, %r2565, %r2449;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2570, %r249;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2572, %r2570, %r2460;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2575, %r249;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2577, %r2575, %r2471;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2580, %r249;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2582, %r2580, %r2484;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2585, %r249;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2587, %r2585, %r2495;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2590, %r249;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2592, %r2590, %r2506;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2595, %r249;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2597, %r2595, %r2517;
	// end inline asm
	// begin inline asm
	mov.b32 %r2605, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2616, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2602, %r543, %r1056, %r2605, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2606, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2607, %r2605, %r2606;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2610, %r2602, %r2607;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2613, %r554, %r1056, %r2616, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2617, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2618, %r2616, %r2617;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2621, %r2613, %r2618;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2624, %r543, %r1078, %r2605, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2628, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2629, %r2605, %r2628;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2632, %r2624, %r2629;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2635, %r554, %r1078, %r2616, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2639, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2640, %r2616, %r2639;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2643, %r2635, %r2640;
	// end inline asm
	// begin inline asm
	mov.b32 %r2651, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2662, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2648, %r543, %r1102, %r2651, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2652, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2653, %r2651, %r2652;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2656, %r2648, %r2653;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2659, %r554, %r1102, %r2662, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2663, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2664, %r2662, %r2663;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2667, %r2659, %r2664;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2670, %r543, %r1124, %r2651, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2674, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2675, %r2651, %r2674;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2678, %r2670, %r2675;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2681, %r554, %r1124, %r2662, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2685, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2686, %r2662, %r2685;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2689, %r2681, %r2686;
	// end inline asm
	// begin inline asm
	mov.b32 %r2697, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2708, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2694, %r543, %r1148, %r2697, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2698, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2699, %r2697, %r2698;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2702, %r2694, %r2699;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2705, %r554, %r1148, %r2708, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2709, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2710, %r2708, %r2709;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2713, %r2705, %r2710;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2716, %r543, %r1170, %r2697, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2720, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2721, %r2697, %r2720;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2724, %r2716, %r2721;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2727, %r554, %r1170, %r2708, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2731, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2732, %r2708, %r2731;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2735, %r2727, %r2732;
	// end inline asm
	// begin inline asm
	mov.b32 %r2743, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2754, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2740, %r543, %r1194, %r2743, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2744, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2745, %r2743, %r2744;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2748, %r2740, %r2745;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2751, %r554, %r1194, %r2754, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2755, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2756, %r2754, %r2755;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2759, %r2751, %r2756;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2762, %r543, %r1216, %r2743, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2766, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2767, %r2743, %r2766;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2770, %r2762, %r2767;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2773, %r554, %r1216, %r2754, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2777, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2778, %r2754, %r2777;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2781, %r2773, %r2778;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2784, %r195, %r2610, %r2522;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2788, %r195, %r2621, %r2527;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2792, %r195, %r2632, %r2532;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2796, %r195, %r2643, %r2537;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2800, %r195, %r2656, %r2542;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2804, %r195, %r2667, %r2547;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2808, %r195, %r2678, %r2552;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2812, %r195, %r2689, %r2557;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2816, %r195, %r2702, %r2562;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2820, %r195, %r2713, %r2567;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2824, %r195, %r2724, %r2572;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2828, %r195, %r2735, %r2577;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2832, %r195, %r2748, %r2582;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2836, %r195, %r2759, %r2587;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2840, %r195, %r2770, %r2592;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2844, %r195, %r2781, %r2597;
	// end inline asm
	// begin inline asm
	mov.b32 %r2853, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2864, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2850, %r543, %r1336, %r2853, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2854, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2855, %r2853, %r2854;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2858, %r2850, %r2855;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2861, %r554, %r1336, %r2864, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2865, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2866, %r2864, %r2865;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2869, %r2861, %r2866;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2872, %r543, %r1358, %r2853, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2876, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2877, %r2853, %r2876;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2880, %r2872, %r2877;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2883, %r554, %r1358, %r2864, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2887, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2888, %r2864, %r2887;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2891, %r2883, %r2888;
	// end inline asm
	// begin inline asm
	mov.b32 %r2899, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2910, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2896, %r543, %r1382, %r2899, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2900, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2901, %r2899, %r2900;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2904, %r2896, %r2901;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2907, %r554, %r1382, %r2910, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2911, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2912, %r2910, %r2911;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2915, %r2907, %r2912;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2918, %r543, %r1404, %r2899, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2922, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2923, %r2899, %r2922;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2926, %r2918, %r2923;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2929, %r554, %r1404, %r2910, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2933, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2934, %r2910, %r2933;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2937, %r2929, %r2934;
	// end inline asm
	// begin inline asm
	mov.b32 %r2945, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2956, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2942, %r543, %r1428, %r2945, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2946, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2947, %r2945, %r2946;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2950, %r2942, %r2947;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2953, %r554, %r1428, %r2956, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2957, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2958, %r2956, %r2957;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2961, %r2953, %r2958;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2964, %r543, %r1450, %r2945, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2968, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2969, %r2945, %r2968;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2972, %r2964, %r2969;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2975, %r554, %r1450, %r2956, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2979, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2980, %r2956, %r2979;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2983, %r2975, %r2980;
	// end inline asm
	// begin inline asm
	mov.b32 %r2991, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r3002, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2988, %r543, %r1474, %r2991, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2992, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2993, %r2991, %r2992;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2996, %r2988, %r2993;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2999, %r554, %r1474, %r3002, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3003, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3004, %r3002, %r3003;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3007, %r2999, %r3004;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3010, %r543, %r1496, %r2991, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3014, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3015, %r2991, %r3014;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3018, %r3010, %r3015;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3021, %r554, %r1496, %r3002, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3025, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3026, %r3002, %r3025;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3029, %r3021, %r3026;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3032, %r213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3034, %r3032, %r2858, %r2784;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3038, %r213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3040, %r3038, %r2869, %r2788;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3044, %r213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3046, %r3044, %r2880, %r2792;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3050, %r213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3052, %r3050, %r2891, %r2796;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3056, %r213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3058, %r3056, %r2904, %r2800;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3062, %r213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3064, %r3062, %r2915, %r2804;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3068, %r213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3070, %r3068, %r2926, %r2808;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3074, %r213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3076, %r3074, %r2937, %r2812;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3080, %r213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3082, %r3080, %r2950, %r2816;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3086, %r213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3088, %r3086, %r2961, %r2820;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3092, %r213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3094, %r3092, %r2972, %r2824;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3098, %r213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3100, %r3098, %r2983, %r2828;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3104, %r213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3106, %r3104, %r2996, %r2832;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3110, %r213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3112, %r3110, %r3007, %r2836;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3116, %r213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3118, %r3116, %r3018, %r2840;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3122, %r213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3124, %r3122, %r3029, %r2844;
	// end inline asm
	// begin inline asm
	mov.b32 %r3133, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r3144, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3130, %r543, %r544, %r3133, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3134, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3135, %r3133, %r3134;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3138, %r3130, %r3135;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3141, %r554, %r544, %r3144, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3145, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3146, %r3144, %r3145;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3149, %r3141, %r3146;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3152, %r543, %r566, %r3133, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3156, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3157, %r3133, %r3156;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3160, %r3152, %r3157;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3163, %r554, %r566, %r3144, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3167, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3168, %r3144, %r3167;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3171, %r3163, %r3168;
	// end inline asm
	// begin inline asm
	mov.b32 %r3179, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r3190, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3176, %r543, %r590, %r3179, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3180, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3181, %r3179, %r3180;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3184, %r3176, %r3181;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3187, %r554, %r590, %r3190, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3191, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3192, %r3190, %r3191;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3195, %r3187, %r3192;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3198, %r543, %r612, %r3179, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3202, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3203, %r3179, %r3202;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3206, %r3198, %r3203;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3209, %r554, %r612, %r3190, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3213, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3214, %r3190, %r3213;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3217, %r3209, %r3214;
	// end inline asm
	// begin inline asm
	mov.b32 %r3225, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r3236, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3222, %r543, %r636, %r3225, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3226, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3227, %r3225, %r3226;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3230, %r3222, %r3227;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3233, %r554, %r636, %r3236, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3237, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3238, %r3236, %r3237;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3241, %r3233, %r3238;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3244, %r543, %r658, %r3225, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3248, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3249, %r3225, %r3248;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3252, %r3244, %r3249;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3255, %r554, %r658, %r3236, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3259, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3260, %r3236, %r3259;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3263, %r3255, %r3260;
	// end inline asm
	// begin inline asm
	mov.b32 %r3271, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r3282, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3268, %r543, %r682, %r3271, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3272, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3273, %r3271, %r3272;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3276, %r3268, %r3273;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3279, %r554, %r682, %r3282, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3283, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3284, %r3282, %r3283;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3287, %r3279, %r3284;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3290, %r543, %r704, %r3271, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3294, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3295, %r3271, %r3294;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3298, %r3290, %r3295;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3301, %r554, %r704, %r3282, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3305, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3306, %r3282, %r3305;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3309, %r3301, %r3306;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3383, %r231, %r3138, %r3034;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3380, %r231, %r3149, %r3040;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3392, %r231, %r3160, %r3046;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3389, %r231, %r3171, %r3052;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3401, %r231, %r3184, %r3058;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3398, %r231, %r3195, %r3064;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3410, %r231, %r3206, %r3070;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3407, %r231, %r3217, %r3076;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3419, %r231, %r3230, %r3082;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3416, %r231, %r3241, %r3088;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3428, %r231, %r3252, %r3094;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3425, %r231, %r3263, %r3100;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3437, %r231, %r3276, %r3106;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3434, %r231, %r3287, %r3112;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3446, %r231, %r3298, %r3118;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3443, %r231, %r3309, %r3124;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3376, %r280;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3378, %r3376, %r3380;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3381, %r277, %r3383, %r3378;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3385, %r280;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3387, %r3385, %r3389;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3390, %r277, %r3392, %r3387;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3394, %r280;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3396, %r3394, %r3398;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3399, %r277, %r3401, %r3396;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3403, %r280;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3405, %r3403, %r3407;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3408, %r277, %r3410, %r3405;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3412, %r280;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3414, %r3412, %r3416;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3417, %r277, %r3419, %r3414;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3421, %r280;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3423, %r3421, %r3425;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3426, %r277, %r3428, %r3423;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3430, %r280;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3432, %r3430, %r3434;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3435, %r277, %r3437, %r3432;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3439, %r280;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3441, %r3439, %r3443;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3444, %r277, %r3446, %r3441;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3448, %r280, %r3383;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3451, %r277, %r3380, %r3448;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3455, %r280, %r3392;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3458, %r277, %r3389, %r3455;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3462, %r280, %r3401;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3465, %r277, %r3398, %r3462;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3469, %r280, %r3410;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3472, %r277, %r3407, %r3469;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3476, %r280, %r3419;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3479, %r277, %r3416, %r3476;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3483, %r280, %r3428;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3486, %r277, %r3425, %r3483;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3490, %r280, %r3437;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3493, %r277, %r3434, %r3490;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3497, %r280, %r3446;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3500, %r277, %r3443, %r3497;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3591, %r3588}, {%r319, %r325, %r322, %r328}, {%r3381, %r3451}, {%r7383, %r7383};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3600, %r3597}, {%r319, %r325, %r322, %r328}, {%r3390, %r3458}, {%r7383, %r7383};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3609, %r3606}, {%r319, %r325, %r322, %r328}, {%r3399, %r3465}, {%r7383, %r7383};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3618, %r3615}, {%r319, %r325, %r322, %r328}, {%r3408, %r3472}, {%r7383, %r7383};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3627, %r3624}, {%r319, %r325, %r322, %r328}, {%r3417, %r3479}, {%r7383, %r7383};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3636, %r3633}, {%r319, %r325, %r322, %r328}, {%r3426, %r3486}, {%r7383, %r7383};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3645, %r3642}, {%r319, %r325, %r322, %r328}, {%r3435, %r3493}, {%r7383, %r7383};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3654, %r3651}, {%r319, %r325, %r322, %r328}, {%r3444, %r3500}, {%r7383, %r7383};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3584, %r366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3586, %r3584, %r3588;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3589, %r363, %r3591, %r3586;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3593, %r366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3595, %r3593, %r3597;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3598, %r363, %r3600, %r3595;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3602, %r366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3604, %r3602, %r3606;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3607, %r363, %r3609, %r3604;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3611, %r366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3613, %r3611, %r3615;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3616, %r363, %r3618, %r3613;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3620, %r366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3622, %r3620, %r3624;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3625, %r363, %r3627, %r3622;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3629, %r366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3631, %r3629, %r3633;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3634, %r363, %r3636, %r3631;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3638, %r366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3640, %r3638, %r3642;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3643, %r363, %r3645, %r3640;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3647, %r366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3649, %r3647, %r3651;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3652, %r363, %r3654, %r3649;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3656, %r366, %r3591;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3659, %r363, %r3588, %r3656;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3663, %r366, %r3600;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3666, %r363, %r3597, %r3663;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3670, %r366, %r3609;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3673, %r363, %r3606, %r3670;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3677, %r366, %r3618;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3680, %r363, %r3615, %r3677;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3684, %r366, %r3627;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3687, %r363, %r3624, %r3684;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3691, %r366, %r3636;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3694, %r363, %r3633, %r3691;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3698, %r366, %r3645;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3701, %r363, %r3642, %r3698;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3705, %r366, %r3654;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3708, %r363, %r3651, %r3705;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3712, %r3713}, {%r89, %r91, %r90, %r92}, {%r3589, %r3659}, {%r7383, %r7383};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3722, %r3723}, {%r89, %r91, %r90, %r92}, {%r3598, %r3666}, {%r7383, %r7383};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3732, %r3733}, {%r89, %r91, %r90, %r92}, {%r3607, %r3673}, {%r7383, %r7383};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3742, %r3743}, {%r89, %r91, %r90, %r92}, {%r3616, %r3680}, {%r7383, %r7383};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3752, %r3753}, {%r89, %r91, %r90, %r92}, {%r3625, %r3687}, {%r7383, %r7383};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3762, %r3763}, {%r89, %r91, %r90, %r92}, {%r3634, %r3694}, {%r7383, %r7383};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3772, %r3773}, {%r89, %r91, %r90, %r92}, {%r3643, %r3701}, {%r7383, %r7383};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3782, %r3783}, {%r89, %r91, %r90, %r92}, {%r3652, %r3708}, {%r7383, %r7383};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3792, %r12, %r3712;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3795, %r12, %r3713;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3798, %r12, %r3722;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3801, %r12, %r3723;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3804, %r12, %r3732;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3807, %r12, %r3733;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3810, %r12, %r3742;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3813, %r12, %r3743;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3816, %r12, %r3752;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3819, %r12, %r3753;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3822, %r12, %r3762;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3825, %r12, %r3763;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3828, %r12, %r3772;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3831, %r12, %r3773;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3834, %r12, %r3782;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3837, %r12, %r3783;
	// end inline asm
	// begin inline asm
	mov.b32 %r3840, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3841, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3842, %r3792, %r3840;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3845, %r3842, %r3841;
	// end inline asm
	// begin inline asm
	mov.b32 %r3848, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3849, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3850, %r3795, %r3848;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3853, %r3850, %r3849;
	// end inline asm
	// begin inline asm
	mov.b32 %r3856, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3857, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3858, %r3798, %r3856;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3861, %r3858, %r3857;
	// end inline asm
	// begin inline asm
	mov.b32 %r3864, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3865, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3866, %r3801, %r3864;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3869, %r3866, %r3865;
	// end inline asm
	// begin inline asm
	mov.b32 %r3872, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3873, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3874, %r3804, %r3872;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3877, %r3874, %r3873;
	// end inline asm
	// begin inline asm
	mov.b32 %r3880, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3881, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3882, %r3807, %r3880;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3885, %r3882, %r3881;
	// end inline asm
	// begin inline asm
	mov.b32 %r3888, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3889, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3890, %r3810, %r3888;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3893, %r3890, %r3889;
	// end inline asm
	// begin inline asm
	mov.b32 %r3896, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3897, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3898, %r3813, %r3896;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3901, %r3898, %r3897;
	// end inline asm
	// begin inline asm
	mov.b32 %r3904, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3905, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3906, %r3816, %r3904;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3909, %r3906, %r3905;
	// end inline asm
	// begin inline asm
	mov.b32 %r3912, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3913, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3914, %r3819, %r3912;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3917, %r3914, %r3913;
	// end inline asm
	// begin inline asm
	mov.b32 %r3920, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3921, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3922, %r3822, %r3920;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3925, %r3922, %r3921;
	// end inline asm
	// begin inline asm
	mov.b32 %r3928, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3929, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3930, %r3825, %r3928;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3933, %r3930, %r3929;
	// end inline asm
	// begin inline asm
	mov.b32 %r3936, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3937, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3938, %r3828, %r3936;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3941, %r3938, %r3937;
	// end inline asm
	// begin inline asm
	mov.b32 %r3944, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3945, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3946, %r3831, %r3944;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3949, %r3946, %r3945;
	// end inline asm
	// begin inline asm
	mov.b32 %r3952, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3953, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3954, %r3834, %r3952;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3957, %r3954, %r3953;
	// end inline asm
	// begin inline asm
	mov.b32 %r3960, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3961, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3962, %r3837, %r3960;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3965, %r3962, %r3961;
	// end inline asm
	// begin inline asm
	mov.b32 %r3971, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r3969, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3970, %r3971, %r3969;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3973, %r3845, %r3970;
	// end inline asm
	// begin inline asm
	mov.b32 %r3976, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3977, %r3971, %r3976;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3980, %r3853, %r3977;
	// end inline asm
	// begin inline asm
	mov.b32 %r3983, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3984, %r3971, %r3983;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3987, %r3861, %r3984;
	// end inline asm
	// begin inline asm
	mov.b32 %r3990, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3991, %r3971, %r3990;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3994, %r3869, %r3991;
	// end inline asm
	// begin inline asm
	prmt.b32 %r3997, %r3973, %r3987, %r2204;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4001, %r3980, %r3994, %r2204;
	// end inline asm
	shl.b32 	%r4008, %r4001, 4;
	// begin inline asm
	lop3.b32 %r4005, %r2210, %r3997, %r4008, 202;
	// end inline asm
	xor.b32  	%r7732, %r4005, -2004318072;
	// begin inline asm
	mov.b32 %r4012, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4010, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4011, %r4012, %r4010;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4014, %r3877, %r4011;
	// end inline asm
	// begin inline asm
	mov.b32 %r4017, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4018, %r4012, %r4017;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4021, %r3885, %r4018;
	// end inline asm
	// begin inline asm
	mov.b32 %r4024, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4025, %r4012, %r4024;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4028, %r3893, %r4025;
	// end inline asm
	// begin inline asm
	mov.b32 %r4031, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4032, %r4012, %r4031;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4035, %r3901, %r4032;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4038, %r4014, %r4028, %r2204;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4042, %r4021, %r4035, %r2204;
	// end inline asm
	shl.b32 	%r4049, %r4042, 4;
	// begin inline asm
	lop3.b32 %r4046, %r2210, %r4038, %r4049, 202;
	// end inline asm
	xor.b32  	%r7733, %r4046, -2004318072;
	// begin inline asm
	mov.b32 %r4053, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4051, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4052, %r4053, %r4051;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4055, %r3909, %r4052;
	// end inline asm
	// begin inline asm
	mov.b32 %r4058, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4059, %r4053, %r4058;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4062, %r3917, %r4059;
	// end inline asm
	// begin inline asm
	mov.b32 %r4065, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4066, %r4053, %r4065;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4069, %r3925, %r4066;
	// end inline asm
	// begin inline asm
	mov.b32 %r4072, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4073, %r4053, %r4072;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4076, %r3933, %r4073;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4079, %r4055, %r4069, %r2204;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4083, %r4062, %r4076, %r2204;
	// end inline asm
	shl.b32 	%r4090, %r4083, 4;
	// begin inline asm
	lop3.b32 %r4087, %r2210, %r4079, %r4090, 202;
	// end inline asm
	xor.b32  	%r7734, %r4087, -2004318072;
	// begin inline asm
	mov.b32 %r4094, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4092, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4093, %r4094, %r4092;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4096, %r3941, %r4093;
	// end inline asm
	// begin inline asm
	mov.b32 %r4099, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4100, %r4094, %r4099;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4103, %r3949, %r4100;
	// end inline asm
	// begin inline asm
	mov.b32 %r4106, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4107, %r4094, %r4106;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4110, %r3957, %r4107;
	// end inline asm
	// begin inline asm
	mov.b32 %r4113, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4114, %r4094, %r4113;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4117, %r3965, %r4114;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4120, %r4096, %r4110, %r2204;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4124, %r4103, %r4117, %r2204;
	// end inline asm
	shl.b32 	%r4131, %r4124, 4;
	// begin inline asm
	lop3.b32 %r4128, %r2210, %r4120, %r4131, 202;
	// end inline asm
	xor.b32  	%r7735, %r4128, -2004318072;
	st.shared.u32 	[%rd80], %r7732;
	st.shared.u32 	[%rd81], %r7733;
	st.shared.u32 	[%rd82], %r7734;
	st.shared.u32 	[%rd83], %r7735;
	ld.shared.u32 	%r7799, [%rd76];
	ld.shared.u32 	%r7800, [%rd77];
	ld.shared.u32 	%r7801, [%rd78];
	ld.shared.u32 	%r7802, [%rd79];
	// begin inline asm
	mov.b32 %r4137, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4148, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r4136, %r7799, -2004318072;
	// begin inline asm
	lop3.b32 %r4134, %r543, %r4136, %r4137, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4138, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4139, %r4137, %r4138;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4142, %r4134, %r4139;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4145, %r554, %r4136, %r4148, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4149, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4150, %r4148, %r4149;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4153, %r4145, %r4150;
	// end inline asm
	shr.u32 	%r4158, %r4136, 8;
	// begin inline asm
	lop3.b32 %r4156, %r543, %r4158, %r4137, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4160, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4161, %r4137, %r4160;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4164, %r4156, %r4161;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4167, %r554, %r4158, %r4148, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4171, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4172, %r4148, %r4171;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4175, %r4167, %r4172;
	// end inline asm
	// begin inline asm
	mov.b32 %r4183, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4194, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r4182, %r7800, -2004318072;
	// begin inline asm
	lop3.b32 %r4180, %r543, %r4182, %r4183, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4184, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4185, %r4183, %r4184;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4188, %r4180, %r4185;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4191, %r554, %r4182, %r4194, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4195, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4196, %r4194, %r4195;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4199, %r4191, %r4196;
	// end inline asm
	shr.u32 	%r4204, %r4182, 8;
	// begin inline asm
	lop3.b32 %r4202, %r543, %r4204, %r4183, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4206, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4207, %r4183, %r4206;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4210, %r4202, %r4207;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4213, %r554, %r4204, %r4194, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4217, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4218, %r4194, %r4217;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4221, %r4213, %r4218;
	// end inline asm
	// begin inline asm
	mov.b32 %r4229, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4240, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r4228, %r7801, -2004318072;
	// begin inline asm
	lop3.b32 %r4226, %r543, %r4228, %r4229, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4230, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4231, %r4229, %r4230;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4234, %r4226, %r4231;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4237, %r554, %r4228, %r4240, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4241, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4242, %r4240, %r4241;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4245, %r4237, %r4242;
	// end inline asm
	shr.u32 	%r4250, %r4228, 8;
	// begin inline asm
	lop3.b32 %r4248, %r543, %r4250, %r4229, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4252, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4253, %r4229, %r4252;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4256, %r4248, %r4253;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4259, %r554, %r4250, %r4240, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4263, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4264, %r4240, %r4263;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4267, %r4259, %r4264;
	// end inline asm
	// begin inline asm
	mov.b32 %r4275, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4286, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r4274, %r7802, -2004318072;
	// begin inline asm
	lop3.b32 %r4272, %r543, %r4274, %r4275, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4276, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4277, %r4275, %r4276;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4280, %r4272, %r4277;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4283, %r554, %r4274, %r4286, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4287, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4288, %r4286, %r4287;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4291, %r4283, %r4288;
	// end inline asm
	shr.u32 	%r4296, %r4274, 8;
	// begin inline asm
	lop3.b32 %r4294, %r543, %r4296, %r4275, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4298, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4299, %r4275, %r4298;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4302, %r4294, %r4299;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4305, %r554, %r4296, %r4286, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4309, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4310, %r4286, %r4309;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4313, %r4305, %r4310;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4316, %r249;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4318, %r4316, %r4142;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4321, %r249;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4323, %r4321, %r4153;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4326, %r249;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4328, %r4326, %r4164;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4331, %r249;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4333, %r4331, %r4175;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4336, %r249;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4338, %r4336, %r4188;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4341, %r249;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4343, %r4341, %r4199;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4346, %r249;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4348, %r4346, %r4210;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4351, %r249;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4353, %r4351, %r4221;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4356, %r249;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4358, %r4356, %r4234;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4361, %r249;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4363, %r4361, %r4245;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4366, %r249;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4368, %r4366, %r4256;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4371, %r249;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4373, %r4371, %r4267;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4376, %r249;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4378, %r4376, %r4280;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4381, %r249;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4383, %r4381, %r4291;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4386, %r249;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4388, %r4386, %r4302;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4391, %r249;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4393, %r4391, %r4313;
	// end inline asm
	// begin inline asm
	mov.b32 %r4401, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4412, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4398, %r543, %r1336, %r4401, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4402, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4403, %r4401, %r4402;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4406, %r4398, %r4403;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4409, %r554, %r1336, %r4412, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4413, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4414, %r4412, %r4413;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4417, %r4409, %r4414;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4420, %r543, %r1358, %r4401, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4424, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4425, %r4401, %r4424;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4428, %r4420, %r4425;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4431, %r554, %r1358, %r4412, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4435, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4436, %r4412, %r4435;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4439, %r4431, %r4436;
	// end inline asm
	// begin inline asm
	mov.b32 %r4447, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4458, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4444, %r543, %r1382, %r4447, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4448, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4449, %r4447, %r4448;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4452, %r4444, %r4449;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4455, %r554, %r1382, %r4458, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4459, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4460, %r4458, %r4459;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4463, %r4455, %r4460;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4466, %r543, %r1404, %r4447, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4470, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4471, %r4447, %r4470;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4474, %r4466, %r4471;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4477, %r554, %r1404, %r4458, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4481, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4482, %r4458, %r4481;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4485, %r4477, %r4482;
	// end inline asm
	// begin inline asm
	mov.b32 %r4493, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4504, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4490, %r543, %r1428, %r4493, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4494, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4495, %r4493, %r4494;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4498, %r4490, %r4495;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4501, %r554, %r1428, %r4504, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4505, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4506, %r4504, %r4505;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4509, %r4501, %r4506;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4512, %r543, %r1450, %r4493, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4516, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4517, %r4493, %r4516;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4520, %r4512, %r4517;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4523, %r554, %r1450, %r4504, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4527, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4528, %r4504, %r4527;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4531, %r4523, %r4528;
	// end inline asm
	// begin inline asm
	mov.b32 %r4539, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4550, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4536, %r543, %r1474, %r4539, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4540, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4541, %r4539, %r4540;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4544, %r4536, %r4541;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4547, %r554, %r1474, %r4550, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4551, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4552, %r4550, %r4551;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4555, %r4547, %r4552;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4558, %r543, %r1496, %r4539, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4562, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4563, %r4539, %r4562;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4566, %r4558, %r4563;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4569, %r554, %r1496, %r4550, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4573, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4574, %r4550, %r4573;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4577, %r4569, %r4574;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4580, %r195, %r4406, %r4318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4584, %r195, %r4417, %r4323;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4588, %r195, %r4428, %r4328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4592, %r195, %r4439, %r4333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4596, %r195, %r4452, %r4338;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4600, %r195, %r4463, %r4343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4604, %r195, %r4474, %r4348;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4608, %r195, %r4485, %r4353;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4612, %r195, %r4498, %r4358;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4616, %r195, %r4509, %r4363;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4620, %r195, %r4520, %r4368;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4624, %r195, %r4531, %r4373;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4628, %r195, %r4544, %r4378;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4632, %r195, %r4555, %r4383;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4636, %r195, %r4566, %r4388;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4640, %r195, %r4577, %r4393;
	// end inline asm
	// begin inline asm
	mov.b32 %r4649, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4660, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4646, %r543, %r544, %r4649, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4650, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4651, %r4649, %r4650;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4654, %r4646, %r4651;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4657, %r554, %r544, %r4660, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4661, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4662, %r4660, %r4661;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4665, %r4657, %r4662;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4668, %r543, %r566, %r4649, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4672, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4673, %r4649, %r4672;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4676, %r4668, %r4673;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4679, %r554, %r566, %r4660, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4683, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4684, %r4660, %r4683;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4687, %r4679, %r4684;
	// end inline asm
	// begin inline asm
	mov.b32 %r4695, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4706, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4692, %r543, %r590, %r4695, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4696, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4697, %r4695, %r4696;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4700, %r4692, %r4697;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4703, %r554, %r590, %r4706, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4707, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4708, %r4706, %r4707;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4711, %r4703, %r4708;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4714, %r543, %r612, %r4695, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4718, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4719, %r4695, %r4718;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4722, %r4714, %r4719;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4725, %r554, %r612, %r4706, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4729, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4730, %r4706, %r4729;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4733, %r4725, %r4730;
	// end inline asm
	// begin inline asm
	mov.b32 %r4741, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4752, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4738, %r543, %r636, %r4741, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4742, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4743, %r4741, %r4742;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4746, %r4738, %r4743;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4749, %r554, %r636, %r4752, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4753, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4754, %r4752, %r4753;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4757, %r4749, %r4754;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4760, %r543, %r658, %r4741, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4764, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4765, %r4741, %r4764;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4768, %r4760, %r4765;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4771, %r554, %r658, %r4752, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4775, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4776, %r4752, %r4775;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4779, %r4771, %r4776;
	// end inline asm
	// begin inline asm
	mov.b32 %r4787, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4798, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4784, %r543, %r682, %r4787, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4788, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4789, %r4787, %r4788;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4792, %r4784, %r4789;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4795, %r554, %r682, %r4798, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4799, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4800, %r4798, %r4799;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4803, %r4795, %r4800;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4806, %r543, %r704, %r4787, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4810, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4811, %r4787, %r4810;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4814, %r4806, %r4811;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4817, %r554, %r704, %r4798, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4821, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4822, %r4798, %r4821;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4825, %r4817, %r4822;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4828, %r213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4830, %r4828, %r4654, %r4580;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4834, %r213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4836, %r4834, %r4665, %r4584;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4840, %r213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4842, %r4840, %r4676, %r4588;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4846, %r213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4848, %r4846, %r4687, %r4592;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4852, %r213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4854, %r4852, %r4700, %r4596;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4858, %r213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4860, %r4858, %r4711, %r4600;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4864, %r213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4866, %r4864, %r4722, %r4604;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4870, %r213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4872, %r4870, %r4733, %r4608;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4876, %r213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4878, %r4876, %r4746, %r4612;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4882, %r213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4884, %r4882, %r4757, %r4616;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4888, %r213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4890, %r4888, %r4768, %r4620;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4894, %r213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4896, %r4894, %r4779, %r4624;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4900, %r213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4902, %r4900, %r4792, %r4628;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4906, %r213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4908, %r4906, %r4803, %r4632;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4912, %r213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4914, %r4912, %r4814, %r4636;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4918, %r213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4920, %r4918, %r4825, %r4640;
	// end inline asm
	// begin inline asm
	mov.b32 %r4929, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4940, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4926, %r543, %r2340, %r4929, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4930, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4931, %r4929, %r4930;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4934, %r4926, %r4931;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4937, %r554, %r2340, %r4940, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4941, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4942, %r4940, %r4941;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4945, %r4937, %r4942;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4948, %r543, %r2362, %r4929, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4952, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4953, %r4929, %r4952;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4956, %r4948, %r4953;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4959, %r554, %r2362, %r4940, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4963, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4964, %r4940, %r4963;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4967, %r4959, %r4964;
	// end inline asm
	// begin inline asm
	mov.b32 %r4975, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4986, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4972, %r543, %r2386, %r4975, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4976, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4977, %r4975, %r4976;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4980, %r4972, %r4977;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4983, %r554, %r2386, %r4986, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4987, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4988, %r4986, %r4987;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4991, %r4983, %r4988;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4994, %r543, %r2408, %r4975, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4998, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4999, %r4975, %r4998;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5002, %r4994, %r4999;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5005, %r554, %r2408, %r4986, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5009, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5010, %r4986, %r5009;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5013, %r5005, %r5010;
	// end inline asm
	// begin inline asm
	mov.b32 %r5021, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5032, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5018, %r543, %r2432, %r5021, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5022, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5023, %r5021, %r5022;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5026, %r5018, %r5023;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5029, %r554, %r2432, %r5032, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5033, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5034, %r5032, %r5033;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5037, %r5029, %r5034;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5040, %r543, %r2454, %r5021, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5044, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5045, %r5021, %r5044;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5048, %r5040, %r5045;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5051, %r554, %r2454, %r5032, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5055, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5056, %r5032, %r5055;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5059, %r5051, %r5056;
	// end inline asm
	// begin inline asm
	mov.b32 %r5067, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5078, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5064, %r543, %r2478, %r5067, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5068, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5069, %r5067, %r5068;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5072, %r5064, %r5069;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5075, %r554, %r2478, %r5078, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5079, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5080, %r5078, %r5079;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5083, %r5075, %r5080;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5086, %r543, %r2500, %r5067, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5090, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5091, %r5067, %r5090;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5094, %r5086, %r5091;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5097, %r554, %r2500, %r5078, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5101, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5102, %r5078, %r5101;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5105, %r5097, %r5102;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5179, %r231, %r4934, %r4830;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5176, %r231, %r4945, %r4836;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5188, %r231, %r4956, %r4842;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5185, %r231, %r4967, %r4848;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5197, %r231, %r4980, %r4854;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5194, %r231, %r4991, %r4860;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5206, %r231, %r5002, %r4866;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5203, %r231, %r5013, %r4872;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5215, %r231, %r5026, %r4878;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5212, %r231, %r5037, %r4884;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5224, %r231, %r5048, %r4890;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5221, %r231, %r5059, %r4896;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5233, %r231, %r5072, %r4902;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5230, %r231, %r5083, %r4908;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5242, %r231, %r5094, %r4914;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5239, %r231, %r5105, %r4920;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5172, %r280;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5174, %r5172, %r5176;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5177, %r277, %r5179, %r5174;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5181, %r280;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5183, %r5181, %r5185;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5186, %r277, %r5188, %r5183;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5190, %r280;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5192, %r5190, %r5194;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5195, %r277, %r5197, %r5192;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5199, %r280;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5201, %r5199, %r5203;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5204, %r277, %r5206, %r5201;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5208, %r280;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5210, %r5208, %r5212;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5213, %r277, %r5215, %r5210;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5217, %r280;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5219, %r5217, %r5221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5222, %r277, %r5224, %r5219;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5226, %r280;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5228, %r5226, %r5230;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5231, %r277, %r5233, %r5228;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5235, %r280;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5237, %r5235, %r5239;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5240, %r277, %r5242, %r5237;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5244, %r280, %r5179;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5247, %r277, %r5176, %r5244;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5251, %r280, %r5188;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5254, %r277, %r5185, %r5251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5258, %r280, %r5197;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5261, %r277, %r5194, %r5258;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5265, %r280, %r5206;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5268, %r277, %r5203, %r5265;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5272, %r280, %r5215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5275, %r277, %r5212, %r5272;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5279, %r280, %r5224;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5282, %r277, %r5221, %r5279;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5286, %r280, %r5233;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5289, %r277, %r5230, %r5286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5293, %r280, %r5242;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5296, %r277, %r5239, %r5293;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5387, %r5384}, {%r319, %r325, %r322, %r328}, {%r5177, %r5247}, {%r7383, %r7383};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5396, %r5393}, {%r319, %r325, %r322, %r328}, {%r5186, %r5254}, {%r7383, %r7383};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5405, %r5402}, {%r319, %r325, %r322, %r328}, {%r5195, %r5261}, {%r7383, %r7383};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5414, %r5411}, {%r319, %r325, %r322, %r328}, {%r5204, %r5268}, {%r7383, %r7383};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5423, %r5420}, {%r319, %r325, %r322, %r328}, {%r5213, %r5275}, {%r7383, %r7383};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5432, %r5429}, {%r319, %r325, %r322, %r328}, {%r5222, %r5282}, {%r7383, %r7383};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5441, %r5438}, {%r319, %r325, %r322, %r328}, {%r5231, %r5289}, {%r7383, %r7383};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5450, %r5447}, {%r319, %r325, %r322, %r328}, {%r5240, %r5296}, {%r7383, %r7383};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5380, %r366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5382, %r5380, %r5384;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5385, %r363, %r5387, %r5382;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5389, %r366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5391, %r5389, %r5393;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5394, %r363, %r5396, %r5391;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5398, %r366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5400, %r5398, %r5402;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5403, %r363, %r5405, %r5400;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5407, %r366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5409, %r5407, %r5411;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5412, %r363, %r5414, %r5409;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5416, %r366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5418, %r5416, %r5420;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5421, %r363, %r5423, %r5418;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5425, %r366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5427, %r5425, %r5429;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5430, %r363, %r5432, %r5427;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5434, %r366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5436, %r5434, %r5438;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5439, %r363, %r5441, %r5436;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5443, %r366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5445, %r5443, %r5447;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5448, %r363, %r5450, %r5445;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5452, %r366, %r5387;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5455, %r363, %r5384, %r5452;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5459, %r366, %r5396;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5462, %r363, %r5393, %r5459;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5466, %r366, %r5405;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5469, %r363, %r5402, %r5466;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5473, %r366, %r5414;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5476, %r363, %r5411, %r5473;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5480, %r366, %r5423;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5483, %r363, %r5420, %r5480;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5487, %r366, %r5432;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5490, %r363, %r5429, %r5487;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5494, %r366, %r5441;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5497, %r363, %r5438, %r5494;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5501, %r366, %r5450;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5504, %r363, %r5447, %r5501;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5508, %r5509}, {%r89, %r91, %r90, %r92}, {%r5385, %r5455}, {%r7383, %r7383};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5518, %r5519}, {%r89, %r91, %r90, %r92}, {%r5394, %r5462}, {%r7383, %r7383};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5528, %r5529}, {%r89, %r91, %r90, %r92}, {%r5403, %r5469}, {%r7383, %r7383};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5538, %r5539}, {%r89, %r91, %r90, %r92}, {%r5412, %r5476}, {%r7383, %r7383};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5548, %r5549}, {%r89, %r91, %r90, %r92}, {%r5421, %r5483}, {%r7383, %r7383};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5558, %r5559}, {%r89, %r91, %r90, %r92}, {%r5430, %r5490}, {%r7383, %r7383};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5568, %r5569}, {%r89, %r91, %r90, %r92}, {%r5439, %r5497}, {%r7383, %r7383};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5578, %r5579}, {%r89, %r91, %r90, %r92}, {%r5448, %r5504}, {%r7383, %r7383};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5588, %r12, %r5508;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5591, %r12, %r5509;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5594, %r12, %r5518;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5597, %r12, %r5519;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5600, %r12, %r5528;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5603, %r12, %r5529;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5606, %r12, %r5538;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5609, %r12, %r5539;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5612, %r12, %r5548;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5615, %r12, %r5549;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5618, %r12, %r5558;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5621, %r12, %r5559;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5624, %r12, %r5568;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5627, %r12, %r5569;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5630, %r12, %r5578;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5633, %r12, %r5579;
	// end inline asm
	// begin inline asm
	mov.b32 %r5636, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5637, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5638, %r5588, %r5636;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5641, %r5638, %r5637;
	// end inline asm
	// begin inline asm
	mov.b32 %r5644, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5645, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5646, %r5591, %r5644;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5649, %r5646, %r5645;
	// end inline asm
	// begin inline asm
	mov.b32 %r5652, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5653, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5654, %r5594, %r5652;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5657, %r5654, %r5653;
	// end inline asm
	// begin inline asm
	mov.b32 %r5660, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5661, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5662, %r5597, %r5660;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5665, %r5662, %r5661;
	// end inline asm
	// begin inline asm
	mov.b32 %r5668, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5669, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5670, %r5600, %r5668;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5673, %r5670, %r5669;
	// end inline asm
	// begin inline asm
	mov.b32 %r5676, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5677, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5678, %r5603, %r5676;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5681, %r5678, %r5677;
	// end inline asm
	// begin inline asm
	mov.b32 %r5684, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5685, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5686, %r5606, %r5684;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5689, %r5686, %r5685;
	// end inline asm
	// begin inline asm
	mov.b32 %r5692, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5693, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5694, %r5609, %r5692;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5697, %r5694, %r5693;
	// end inline asm
	// begin inline asm
	mov.b32 %r5700, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5701, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5702, %r5612, %r5700;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5705, %r5702, %r5701;
	// end inline asm
	// begin inline asm
	mov.b32 %r5708, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5709, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5710, %r5615, %r5708;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5713, %r5710, %r5709;
	// end inline asm
	// begin inline asm
	mov.b32 %r5716, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5717, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5718, %r5618, %r5716;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5721, %r5718, %r5717;
	// end inline asm
	// begin inline asm
	mov.b32 %r5724, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5725, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5726, %r5621, %r5724;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5729, %r5726, %r5725;
	// end inline asm
	// begin inline asm
	mov.b32 %r5732, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5733, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5734, %r5624, %r5732;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5737, %r5734, %r5733;
	// end inline asm
	// begin inline asm
	mov.b32 %r5740, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5741, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5742, %r5627, %r5740;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5745, %r5742, %r5741;
	// end inline asm
	// begin inline asm
	mov.b32 %r5748, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5749, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5750, %r5630, %r5748;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5753, %r5750, %r5749;
	// end inline asm
	// begin inline asm
	mov.b32 %r5756, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5757, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5758, %r5633, %r5756;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5761, %r5758, %r5757;
	// end inline asm
	// begin inline asm
	mov.b32 %r5767, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5765, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5766, %r5767, %r5765;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5769, %r5641, %r5766;
	// end inline asm
	// begin inline asm
	mov.b32 %r5772, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5773, %r5767, %r5772;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5776, %r5649, %r5773;
	// end inline asm
	// begin inline asm
	mov.b32 %r5779, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5780, %r5767, %r5779;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5783, %r5657, %r5780;
	// end inline asm
	// begin inline asm
	mov.b32 %r5786, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5787, %r5767, %r5786;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5790, %r5665, %r5787;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5793, %r5769, %r5783, %r2204;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5797, %r5776, %r5790, %r2204;
	// end inline asm
	shl.b32 	%r5804, %r5797, 4;
	// begin inline asm
	lop3.b32 %r5801, %r2210, %r5793, %r5804, 202;
	// end inline asm
	xor.b32  	%r7736, %r5801, -2004318072;
	// begin inline asm
	mov.b32 %r5808, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5806, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5807, %r5808, %r5806;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5810, %r5673, %r5807;
	// end inline asm
	// begin inline asm
	mov.b32 %r5813, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5814, %r5808, %r5813;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5817, %r5681, %r5814;
	// end inline asm
	// begin inline asm
	mov.b32 %r5820, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5821, %r5808, %r5820;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5824, %r5689, %r5821;
	// end inline asm
	// begin inline asm
	mov.b32 %r5827, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5828, %r5808, %r5827;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5831, %r5697, %r5828;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5834, %r5810, %r5824, %r2204;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5838, %r5817, %r5831, %r2204;
	// end inline asm
	shl.b32 	%r5845, %r5838, 4;
	// begin inline asm
	lop3.b32 %r5842, %r2210, %r5834, %r5845, 202;
	// end inline asm
	xor.b32  	%r7737, %r5842, -2004318072;
	// begin inline asm
	mov.b32 %r5849, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5847, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5848, %r5849, %r5847;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5851, %r5705, %r5848;
	// end inline asm
	// begin inline asm
	mov.b32 %r5854, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5855, %r5849, %r5854;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5858, %r5713, %r5855;
	// end inline asm
	// begin inline asm
	mov.b32 %r5861, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5862, %r5849, %r5861;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5865, %r5721, %r5862;
	// end inline asm
	// begin inline asm
	mov.b32 %r5868, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5869, %r5849, %r5868;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5872, %r5729, %r5869;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5875, %r5851, %r5865, %r2204;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5879, %r5858, %r5872, %r2204;
	// end inline asm
	shl.b32 	%r5886, %r5879, 4;
	// begin inline asm
	lop3.b32 %r5883, %r2210, %r5875, %r5886, 202;
	// end inline asm
	xor.b32  	%r7738, %r5883, -2004318072;
	// begin inline asm
	mov.b32 %r5890, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5888, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5889, %r5890, %r5888;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5892, %r5737, %r5889;
	// end inline asm
	// begin inline asm
	mov.b32 %r5895, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5896, %r5890, %r5895;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5899, %r5745, %r5896;
	// end inline asm
	// begin inline asm
	mov.b32 %r5902, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5903, %r5890, %r5902;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5906, %r5753, %r5903;
	// end inline asm
	// begin inline asm
	mov.b32 %r5909, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5910, %r5890, %r5909;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5913, %r5761, %r5910;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5916, %r5892, %r5906, %r2204;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5920, %r5899, %r5913, %r2204;
	// end inline asm
	shl.b32 	%r5927, %r5920, 4;
	// begin inline asm
	lop3.b32 %r5924, %r2210, %r5916, %r5927, 202;
	// end inline asm
	xor.b32  	%r7739, %r5924, -2004318072;
	st.shared.u32 	[%rd80], %r7736;
	st.shared.u32 	[%rd81], %r7737;
	st.shared.u32 	[%rd82], %r7738;
	st.shared.u32 	[%rd83], %r7739;
	ld.shared.u32 	%r7803, [%rd76];
	ld.shared.u32 	%r7804, [%rd77];
	ld.shared.u32 	%r7805, [%rd78];
	ld.shared.u32 	%r7806, [%rd79];
	// begin inline asm
	mov.b32 %r5933, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5944, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r5932, %r7803, -2004318072;
	// begin inline asm
	lop3.b32 %r5930, %r543, %r5932, %r5933, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5934, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5935, %r5933, %r5934;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5938, %r5930, %r5935;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5941, %r554, %r5932, %r5944, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5945, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5946, %r5944, %r5945;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5949, %r5941, %r5946;
	// end inline asm
	shr.u32 	%r5954, %r5932, 8;
	// begin inline asm
	lop3.b32 %r5952, %r543, %r5954, %r5933, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5956, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5957, %r5933, %r5956;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5960, %r5952, %r5957;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5963, %r554, %r5954, %r5944, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5967, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5968, %r5944, %r5967;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5971, %r5963, %r5968;
	// end inline asm
	// begin inline asm
	mov.b32 %r5979, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5990, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r5978, %r7804, -2004318072;
	// begin inline asm
	lop3.b32 %r5976, %r543, %r5978, %r5979, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5980, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5981, %r5979, %r5980;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5984, %r5976, %r5981;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5987, %r554, %r5978, %r5990, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5991, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5992, %r5990, %r5991;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5995, %r5987, %r5992;
	// end inline asm
	shr.u32 	%r6000, %r5978, 8;
	// begin inline asm
	lop3.b32 %r5998, %r543, %r6000, %r5979, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6002, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6003, %r5979, %r6002;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6006, %r5998, %r6003;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6009, %r554, %r6000, %r5990, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6013, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6014, %r5990, %r6013;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6017, %r6009, %r6014;
	// end inline asm
	// begin inline asm
	mov.b32 %r6025, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6036, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r6024, %r7805, -2004318072;
	// begin inline asm
	lop3.b32 %r6022, %r543, %r6024, %r6025, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6026, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6027, %r6025, %r6026;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6030, %r6022, %r6027;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6033, %r554, %r6024, %r6036, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6037, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6038, %r6036, %r6037;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6041, %r6033, %r6038;
	// end inline asm
	shr.u32 	%r6046, %r6024, 8;
	// begin inline asm
	lop3.b32 %r6044, %r543, %r6046, %r6025, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6048, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6049, %r6025, %r6048;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6052, %r6044, %r6049;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6055, %r554, %r6046, %r6036, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6059, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6060, %r6036, %r6059;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6063, %r6055, %r6060;
	// end inline asm
	// begin inline asm
	mov.b32 %r6071, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6082, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r6070, %r7806, -2004318072;
	// begin inline asm
	lop3.b32 %r6068, %r543, %r6070, %r6071, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6072, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6073, %r6071, %r6072;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6076, %r6068, %r6073;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6079, %r554, %r6070, %r6082, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6083, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6084, %r6082, %r6083;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6087, %r6079, %r6084;
	// end inline asm
	shr.u32 	%r6092, %r6070, 8;
	// begin inline asm
	lop3.b32 %r6090, %r543, %r6092, %r6071, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6094, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6095, %r6071, %r6094;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6098, %r6090, %r6095;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6101, %r554, %r6092, %r6082, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6105, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6106, %r6082, %r6105;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6109, %r6101, %r6106;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6112, %r249;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6114, %r6112, %r5938;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6117, %r249;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6119, %r6117, %r5949;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6122, %r249;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6124, %r6122, %r5960;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6127, %r249;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6129, %r6127, %r5971;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6132, %r249;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6134, %r6132, %r5984;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6137, %r249;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6139, %r6137, %r5995;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6142, %r249;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6144, %r6142, %r6006;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6147, %r249;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6149, %r6147, %r6017;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6152, %r249;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6154, %r6152, %r6030;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6157, %r249;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6159, %r6157, %r6041;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6162, %r249;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6164, %r6162, %r6052;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6167, %r249;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6169, %r6167, %r6063;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6172, %r249;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6174, %r6172, %r6076;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6177, %r249;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6179, %r6177, %r6087;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6182, %r249;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6184, %r6182, %r6098;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6187, %r249;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6189, %r6187, %r6109;
	// end inline asm
	// begin inline asm
	mov.b32 %r6197, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6208, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6194, %r543, %r544, %r6197, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6198, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6199, %r6197, %r6198;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6202, %r6194, %r6199;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6205, %r554, %r544, %r6208, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6209, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6210, %r6208, %r6209;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6213, %r6205, %r6210;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6216, %r543, %r566, %r6197, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6220, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6221, %r6197, %r6220;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6224, %r6216, %r6221;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6227, %r554, %r566, %r6208, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6231, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6232, %r6208, %r6231;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6235, %r6227, %r6232;
	// end inline asm
	// begin inline asm
	mov.b32 %r6243, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6254, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6240, %r543, %r590, %r6243, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6244, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6245, %r6243, %r6244;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6248, %r6240, %r6245;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6251, %r554, %r590, %r6254, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6255, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6256, %r6254, %r6255;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6259, %r6251, %r6256;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6262, %r543, %r612, %r6243, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6266, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6267, %r6243, %r6266;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6270, %r6262, %r6267;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6273, %r554, %r612, %r6254, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6277, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6278, %r6254, %r6277;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6281, %r6273, %r6278;
	// end inline asm
	// begin inline asm
	mov.b32 %r6289, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6300, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6286, %r543, %r636, %r6289, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6290, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6291, %r6289, %r6290;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6294, %r6286, %r6291;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6297, %r554, %r636, %r6300, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6301, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6302, %r6300, %r6301;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6305, %r6297, %r6302;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6308, %r543, %r658, %r6289, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6312, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6313, %r6289, %r6312;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6316, %r6308, %r6313;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6319, %r554, %r658, %r6300, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6323, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6324, %r6300, %r6323;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6327, %r6319, %r6324;
	// end inline asm
	// begin inline asm
	mov.b32 %r6335, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6346, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6332, %r543, %r682, %r6335, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6336, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6337, %r6335, %r6336;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6340, %r6332, %r6337;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6343, %r554, %r682, %r6346, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6347, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6348, %r6346, %r6347;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6351, %r6343, %r6348;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6354, %r543, %r704, %r6335, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6358, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6359, %r6335, %r6358;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6362, %r6354, %r6359;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6365, %r554, %r704, %r6346, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6369, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6370, %r6346, %r6369;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6373, %r6365, %r6370;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6376, %r195, %r6202, %r6114;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6380, %r195, %r6213, %r6119;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6384, %r195, %r6224, %r6124;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6388, %r195, %r6235, %r6129;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6392, %r195, %r6248, %r6134;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6396, %r195, %r6259, %r6139;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6400, %r195, %r6270, %r6144;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6404, %r195, %r6281, %r6149;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6408, %r195, %r6294, %r6154;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6412, %r195, %r6305, %r6159;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6416, %r195, %r6316, %r6164;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6420, %r195, %r6327, %r6169;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6424, %r195, %r6340, %r6174;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6428, %r195, %r6351, %r6179;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6432, %r195, %r6362, %r6184;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6436, %r195, %r6373, %r6189;
	// end inline asm
	// begin inline asm
	mov.b32 %r6445, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6456, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6442, %r543, %r2340, %r6445, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6446, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6447, %r6445, %r6446;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6450, %r6442, %r6447;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6453, %r554, %r2340, %r6456, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6457, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6458, %r6456, %r6457;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6461, %r6453, %r6458;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6464, %r543, %r2362, %r6445, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6468, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6469, %r6445, %r6468;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6472, %r6464, %r6469;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6475, %r554, %r2362, %r6456, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6479, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6480, %r6456, %r6479;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6483, %r6475, %r6480;
	// end inline asm
	// begin inline asm
	mov.b32 %r6491, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6502, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6488, %r543, %r2386, %r6491, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6492, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6493, %r6491, %r6492;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6496, %r6488, %r6493;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6499, %r554, %r2386, %r6502, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6503, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6504, %r6502, %r6503;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6507, %r6499, %r6504;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6510, %r543, %r2408, %r6491, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6514, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6515, %r6491, %r6514;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6518, %r6510, %r6515;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6521, %r554, %r2408, %r6502, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6525, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6526, %r6502, %r6525;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6529, %r6521, %r6526;
	// end inline asm
	// begin inline asm
	mov.b32 %r6537, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6548, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6534, %r543, %r2432, %r6537, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6538, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6539, %r6537, %r6538;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6542, %r6534, %r6539;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6545, %r554, %r2432, %r6548, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6549, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6550, %r6548, %r6549;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6553, %r6545, %r6550;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6556, %r543, %r2454, %r6537, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6560, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6561, %r6537, %r6560;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6564, %r6556, %r6561;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6567, %r554, %r2454, %r6548, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6571, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6572, %r6548, %r6571;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6575, %r6567, %r6572;
	// end inline asm
	// begin inline asm
	mov.b32 %r6583, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6594, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6580, %r543, %r2478, %r6583, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6584, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6585, %r6583, %r6584;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6588, %r6580, %r6585;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6591, %r554, %r2478, %r6594, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6595, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6596, %r6594, %r6595;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6599, %r6591, %r6596;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6602, %r543, %r2500, %r6583, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6606, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6607, %r6583, %r6606;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6610, %r6602, %r6607;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6613, %r554, %r2500, %r6594, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6617, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6618, %r6594, %r6617;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6621, %r6613, %r6618;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6624, %r213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6626, %r6624, %r6450, %r6376;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6630, %r213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6632, %r6630, %r6461, %r6380;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6636, %r213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6638, %r6636, %r6472, %r6384;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6642, %r213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6644, %r6642, %r6483, %r6388;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6648, %r213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6650, %r6648, %r6496, %r6392;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6654, %r213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6656, %r6654, %r6507, %r6396;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6660, %r213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6662, %r6660, %r6518, %r6400;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6666, %r213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6668, %r6666, %r6529, %r6404;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6672, %r213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6674, %r6672, %r6542, %r6408;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6678, %r213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6680, %r6678, %r6553, %r6412;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6684, %r213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6686, %r6684, %r6564, %r6416;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6690, %r213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6692, %r6690, %r6575, %r6420;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6696, %r213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6698, %r6696, %r6588, %r6424;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6702, %r213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6704, %r6702, %r6599, %r6428;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6708, %r213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6710, %r6708, %r6610, %r6432;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6714, %r213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6716, %r6714, %r6621, %r6436;
	// end inline asm
	// begin inline asm
	mov.b32 %r6725, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6736, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6722, %r543, %r4136, %r6725, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6726, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6727, %r6725, %r6726;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6730, %r6722, %r6727;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6733, %r554, %r4136, %r6736, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6737, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6738, %r6736, %r6737;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6741, %r6733, %r6738;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6744, %r543, %r4158, %r6725, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6748, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6749, %r6725, %r6748;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6752, %r6744, %r6749;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6755, %r554, %r4158, %r6736, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6759, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6760, %r6736, %r6759;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6763, %r6755, %r6760;
	// end inline asm
	// begin inline asm
	mov.b32 %r6771, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6782, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6768, %r543, %r4182, %r6771, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6772, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6773, %r6771, %r6772;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6776, %r6768, %r6773;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6779, %r554, %r4182, %r6782, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6783, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6784, %r6782, %r6783;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6787, %r6779, %r6784;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6790, %r543, %r4204, %r6771, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6794, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6795, %r6771, %r6794;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6798, %r6790, %r6795;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6801, %r554, %r4204, %r6782, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6805, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6806, %r6782, %r6805;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6809, %r6801, %r6806;
	// end inline asm
	// begin inline asm
	mov.b32 %r6817, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6828, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6814, %r543, %r4228, %r6817, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6818, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6819, %r6817, %r6818;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6822, %r6814, %r6819;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6825, %r554, %r4228, %r6828, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6829, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6830, %r6828, %r6829;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6833, %r6825, %r6830;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6836, %r543, %r4250, %r6817, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6840, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6841, %r6817, %r6840;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6844, %r6836, %r6841;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6847, %r554, %r4250, %r6828, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6851, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6852, %r6828, %r6851;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6855, %r6847, %r6852;
	// end inline asm
	// begin inline asm
	mov.b32 %r6863, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6874, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6860, %r543, %r4274, %r6863, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6864, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6865, %r6863, %r6864;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6868, %r6860, %r6865;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6871, %r554, %r4274, %r6874, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6875, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6876, %r6874, %r6875;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6879, %r6871, %r6876;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6882, %r543, %r4296, %r6863, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6886, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6887, %r6863, %r6886;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6890, %r6882, %r6887;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6893, %r554, %r4296, %r6874, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6897, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6898, %r6874, %r6897;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6901, %r6893, %r6898;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6975, %r231, %r6730, %r6626;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6972, %r231, %r6741, %r6632;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6984, %r231, %r6752, %r6638;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6981, %r231, %r6763, %r6644;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6993, %r231, %r6776, %r6650;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6990, %r231, %r6787, %r6656;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7002, %r231, %r6798, %r6662;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6999, %r231, %r6809, %r6668;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7011, %r231, %r6822, %r6674;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7008, %r231, %r6833, %r6680;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7020, %r231, %r6844, %r6686;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7017, %r231, %r6855, %r6692;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7029, %r231, %r6868, %r6698;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7026, %r231, %r6879, %r6704;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7038, %r231, %r6890, %r6710;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7035, %r231, %r6901, %r6716;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6968, %r280;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6970, %r6968, %r6972;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6973, %r277, %r6975, %r6970;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6977, %r280;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6979, %r6977, %r6981;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6982, %r277, %r6984, %r6979;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6986, %r280;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6988, %r6986, %r6990;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6991, %r277, %r6993, %r6988;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6995, %r280;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6997, %r6995, %r6999;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7000, %r277, %r7002, %r6997;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7004, %r280;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7006, %r7004, %r7008;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7009, %r277, %r7011, %r7006;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7013, %r280;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7015, %r7013, %r7017;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7018, %r277, %r7020, %r7015;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7022, %r280;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7024, %r7022, %r7026;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7027, %r277, %r7029, %r7024;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7031, %r280;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7033, %r7031, %r7035;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7036, %r277, %r7038, %r7033;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7040, %r280, %r6975;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7043, %r277, %r6972, %r7040;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7047, %r280, %r6984;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7050, %r277, %r6981, %r7047;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7054, %r280, %r6993;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7057, %r277, %r6990, %r7054;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7061, %r280, %r7002;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7064, %r277, %r6999, %r7061;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7068, %r280, %r7011;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7071, %r277, %r7008, %r7068;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7075, %r280, %r7020;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7078, %r277, %r7017, %r7075;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7082, %r280, %r7029;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7085, %r277, %r7026, %r7082;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7089, %r280, %r7038;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7092, %r277, %r7035, %r7089;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7183, %r7180}, {%r319, %r325, %r322, %r328}, {%r6973, %r7043}, {%r7383, %r7383};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7192, %r7189}, {%r319, %r325, %r322, %r328}, {%r6982, %r7050}, {%r7383, %r7383};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7201, %r7198}, {%r319, %r325, %r322, %r328}, {%r6991, %r7057}, {%r7383, %r7383};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7210, %r7207}, {%r319, %r325, %r322, %r328}, {%r7000, %r7064}, {%r7383, %r7383};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7219, %r7216}, {%r319, %r325, %r322, %r328}, {%r7009, %r7071}, {%r7383, %r7383};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7228, %r7225}, {%r319, %r325, %r322, %r328}, {%r7018, %r7078}, {%r7383, %r7383};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7237, %r7234}, {%r319, %r325, %r322, %r328}, {%r7027, %r7085}, {%r7383, %r7383};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7246, %r7243}, {%r319, %r325, %r322, %r328}, {%r7036, %r7092}, {%r7383, %r7383};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7176, %r366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7178, %r7176, %r7180;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7181, %r363, %r7183, %r7178;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7185, %r366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7187, %r7185, %r7189;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7190, %r363, %r7192, %r7187;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7194, %r366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7196, %r7194, %r7198;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7199, %r363, %r7201, %r7196;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7203, %r366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7205, %r7203, %r7207;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7208, %r363, %r7210, %r7205;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7212, %r366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7214, %r7212, %r7216;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7217, %r363, %r7219, %r7214;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7221, %r366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7223, %r7221, %r7225;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7226, %r363, %r7228, %r7223;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7230, %r366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7232, %r7230, %r7234;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7235, %r363, %r7237, %r7232;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7239, %r366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7241, %r7239, %r7243;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7244, %r363, %r7246, %r7241;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7248, %r366, %r7183;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7251, %r363, %r7180, %r7248;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7255, %r366, %r7192;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7258, %r363, %r7189, %r7255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7262, %r366, %r7201;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7265, %r363, %r7198, %r7262;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7269, %r366, %r7210;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7272, %r363, %r7207, %r7269;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7276, %r366, %r7219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7279, %r363, %r7216, %r7276;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7283, %r366, %r7228;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7286, %r363, %r7225, %r7283;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7290, %r366, %r7237;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7293, %r363, %r7234, %r7290;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7297, %r366, %r7246;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7300, %r363, %r7243, %r7297;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7304, %r7305}, {%r89, %r91, %r90, %r92}, {%r7181, %r7251}, {%r7383, %r7383};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7314, %r7315}, {%r89, %r91, %r90, %r92}, {%r7190, %r7258}, {%r7383, %r7383};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7324, %r7325}, {%r89, %r91, %r90, %r92}, {%r7199, %r7265}, {%r7383, %r7383};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7334, %r7335}, {%r89, %r91, %r90, %r92}, {%r7208, %r7272}, {%r7383, %r7383};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7344, %r7345}, {%r89, %r91, %r90, %r92}, {%r7217, %r7279}, {%r7383, %r7383};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7354, %r7355}, {%r89, %r91, %r90, %r92}, {%r7226, %r7286}, {%r7383, %r7383};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7364, %r7365}, {%r89, %r91, %r90, %r92}, {%r7235, %r7293}, {%r7383, %r7383};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7374, %r7375}, {%r89, %r91, %r90, %r92}, {%r7244, %r7300}, {%r7383, %r7383};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7384, %r12, %r7304;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7387, %r12, %r7305;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7390, %r12, %r7314;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7393, %r12, %r7315;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7396, %r12, %r7324;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7399, %r12, %r7325;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7402, %r12, %r7334;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7405, %r12, %r7335;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7408, %r12, %r7344;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7411, %r12, %r7345;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7414, %r12, %r7354;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7417, %r12, %r7355;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7420, %r12, %r7364;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7423, %r12, %r7365;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7426, %r12, %r7374;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7429, %r12, %r7375;
	// end inline asm
	// begin inline asm
	mov.b32 %r7432, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7433, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7434, %r7384, %r7432;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7437, %r7434, %r7433;
	// end inline asm
	// begin inline asm
	mov.b32 %r7440, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7441, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7442, %r7387, %r7440;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7445, %r7442, %r7441;
	// end inline asm
	// begin inline asm
	mov.b32 %r7448, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7449, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7450, %r7390, %r7448;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7453, %r7450, %r7449;
	// end inline asm
	// begin inline asm
	mov.b32 %r7456, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7457, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7458, %r7393, %r7456;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7461, %r7458, %r7457;
	// end inline asm
	// begin inline asm
	mov.b32 %r7464, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7465, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7466, %r7396, %r7464;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7469, %r7466, %r7465;
	// end inline asm
	// begin inline asm
	mov.b32 %r7472, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7473, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7474, %r7399, %r7472;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7477, %r7474, %r7473;
	// end inline asm
	// begin inline asm
	mov.b32 %r7480, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7481, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7482, %r7402, %r7480;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7485, %r7482, %r7481;
	// end inline asm
	// begin inline asm
	mov.b32 %r7488, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7489, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7490, %r7405, %r7488;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7493, %r7490, %r7489;
	// end inline asm
	// begin inline asm
	mov.b32 %r7496, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7497, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7498, %r7408, %r7496;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7501, %r7498, %r7497;
	// end inline asm
	// begin inline asm
	mov.b32 %r7504, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7505, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7506, %r7411, %r7504;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7509, %r7506, %r7505;
	// end inline asm
	// begin inline asm
	mov.b32 %r7512, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7513, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7514, %r7414, %r7512;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7517, %r7514, %r7513;
	// end inline asm
	// begin inline asm
	mov.b32 %r7520, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7521, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7522, %r7417, %r7520;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7525, %r7522, %r7521;
	// end inline asm
	// begin inline asm
	mov.b32 %r7528, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7529, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7530, %r7420, %r7528;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7533, %r7530, %r7529;
	// end inline asm
	// begin inline asm
	mov.b32 %r7536, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7537, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7538, %r7423, %r7536;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7541, %r7538, %r7537;
	// end inline asm
	// begin inline asm
	mov.b32 %r7544, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7545, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7546, %r7426, %r7544;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7549, %r7546, %r7545;
	// end inline asm
	// begin inline asm
	mov.b32 %r7552, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7553, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7554, %r7429, %r7552;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7557, %r7554, %r7553;
	// end inline asm
	// begin inline asm
	mov.b32 %r7563, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r7561, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7562, %r7563, %r7561;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7565, %r7437, %r7562;
	// end inline asm
	// begin inline asm
	mov.b32 %r7568, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7569, %r7563, %r7568;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7572, %r7445, %r7569;
	// end inline asm
	// begin inline asm
	mov.b32 %r7575, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7576, %r7563, %r7575;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7579, %r7453, %r7576;
	// end inline asm
	// begin inline asm
	mov.b32 %r7582, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7583, %r7563, %r7582;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7586, %r7461, %r7583;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7589, %r7565, %r7579, %r2204;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7593, %r7572, %r7586, %r2204;
	// end inline asm
	shl.b32 	%r7600, %r7593, 4;
	// begin inline asm
	lop3.b32 %r7597, %r2210, %r7589, %r7600, 202;
	// end inline asm
	xor.b32  	%r7740, %r7597, -2004318072;
	// begin inline asm
	mov.b32 %r7604, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r7602, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7603, %r7604, %r7602;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7606, %r7469, %r7603;
	// end inline asm
	// begin inline asm
	mov.b32 %r7609, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7610, %r7604, %r7609;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7613, %r7477, %r7610;
	// end inline asm
	// begin inline asm
	mov.b32 %r7616, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7617, %r7604, %r7616;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7620, %r7485, %r7617;
	// end inline asm
	// begin inline asm
	mov.b32 %r7623, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7624, %r7604, %r7623;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7627, %r7493, %r7624;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7630, %r7606, %r7620, %r2204;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7634, %r7613, %r7627, %r2204;
	// end inline asm
	shl.b32 	%r7641, %r7634, 4;
	// begin inline asm
	lop3.b32 %r7638, %r2210, %r7630, %r7641, 202;
	// end inline asm
	xor.b32  	%r7741, %r7638, -2004318072;
	// begin inline asm
	mov.b32 %r7645, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r7643, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7644, %r7645, %r7643;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7647, %r7501, %r7644;
	// end inline asm
	// begin inline asm
	mov.b32 %r7650, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7651, %r7645, %r7650;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7654, %r7509, %r7651;
	// end inline asm
	// begin inline asm
	mov.b32 %r7657, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7658, %r7645, %r7657;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7661, %r7517, %r7658;
	// end inline asm
	// begin inline asm
	mov.b32 %r7664, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7665, %r7645, %r7664;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7668, %r7525, %r7665;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7671, %r7647, %r7661, %r2204;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7675, %r7654, %r7668, %r2204;
	// end inline asm
	shl.b32 	%r7682, %r7675, 4;
	// begin inline asm
	lop3.b32 %r7679, %r2210, %r7671, %r7682, 202;
	// end inline asm
	xor.b32  	%r7742, %r7679, -2004318072;
	// begin inline asm
	mov.b32 %r7686, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r7684, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7685, %r7686, %r7684;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7688, %r7533, %r7685;
	// end inline asm
	// begin inline asm
	mov.b32 %r7691, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7692, %r7686, %r7691;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7695, %r7541, %r7692;
	// end inline asm
	// begin inline asm
	mov.b32 %r7698, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7699, %r7686, %r7698;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7702, %r7549, %r7699;
	// end inline asm
	// begin inline asm
	mov.b32 %r7705, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7706, %r7686, %r7705;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7709, %r7557, %r7706;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7712, %r7688, %r7702, %r2204;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7716, %r7695, %r7709, %r2204;
	// end inline asm
	shl.b32 	%r7723, %r7716, 4;
	// begin inline asm
	lop3.b32 %r7720, %r2210, %r7712, %r7723, 202;
	// end inline asm
	xor.b32  	%r7743, %r7720, -2004318072;
	st.shared.u32 	[%rd80], %r7740;
	st.shared.u32 	[%rd81], %r7741;
	st.shared.u32 	[%rd82], %r7742;
	st.shared.u32 	[%rd83], %r7743;
	add.s32 	%r7794, %r7794, -64;
	add.s64 	%rd86, %rd86, 8324;
	setp.eq.s32 	%p217, %r7794, 0;
	@%p217 bra 	LBB0_114;
	bra.uni 	LBB0_113;
LBB0_114:                               // %guard_pass10507
                                        //   in Loop: Header=BB0_112 Depth=1
	bar.sync 	0;
	ld.shared.u32 	%r7749, [%rd9];
	ld.shared.u32 	%r7750, [%rd10+128];
	ld.shared.u32 	%r7757, [%rd10+4];
	ld.shared.u32 	%r7758, [%rd10+132];
	// begin inline asm
	prmt.b32 %r7744, %r7749, %r7750, %r523;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7748, %r7749, %r7750, %r527;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7752, %r7757, %r7758, %r523;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7756, %r7757, %r7758, %r527;
	// end inline asm
	selp.b32 	%r7760, %r7748, %r7744, %p216;
	shfl.sync.bfly.b32	%r159, %r7760, 8, 31, -1;
	selp.b32 	%r7761, %r7756, %r7752, %p216;
	shfl.sync.bfly.b32	%r160, %r7761, 8, 31, -1;
	setp.eq.s32 	%p219, %r109, 0;
	@%p219 bra 	LBB0_116;
// %bb.115:                             // %L29131
                                        //   in Loop: Header=BB0_112 Depth=1
	selp.b32 	%r7762, %r160, %r7756, %p216;
	selp.b32 	%r7763, %r7752, %r160, %p216;
	selp.b32 	%r7764, %r159, %r7748, %p216;
	selp.b32 	%r7765, %r7744, %r159, %p216;
	shl.b32 	%r7766, %r109, 12;
	add.s32 	%r7767, %r96, %r7766;
	mul.wide.s32 	%rd84, %r7767, 4;
	add.s64 	%rd85, %rd3, %rd84;
	st.global.v4.u32 	[%rd85], {%r7765, %r7763, %r7764, %r7762};
	bra.uni 	LBB0_116;
LBB0_117:                               // %L29349
	st.global.u32 	[%rd4], %r7383;
	ret;
LBB0_1:                                 // %L8
	mov.u64 	%rd30, exception12345;
	cvta.global.u64 	%rd31, %rd30;
	{ // callseq 0, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd31;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 0
	{ // callseq 1, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd21;
	st.param.b32 	[param0+8], %r161;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 1
	// begin inline asm
	exit;
	// end inline asm
	// begin inline asm
	exit;
	// end inline asm
LBB0_3:                                 // %L149
	mov.u32 	%r168, 2;
	st.global.u32 	[%rd4], %r168;
	mov.u64 	%rd33, exception2324;
	cvta.global.u64 	%rd34, %rd33;
	{ // callseq 2, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd34;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 2
	{ // callseq 3, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd21;
	st.param.b32 	[param0+8], %r161;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 3
	// begin inline asm
	exit;
	// end inline asm
	// begin inline asm
	exit;
	// end inline asm
LBB0_119:                               // %L29448
	{ // callseq 5, 0
	.reg .b32 temp_param_reg;
	call.uni 
	julia_AssertionError_9513, 
	(
	);
	} // callseq 5
	mov.u64 	%rd41, exception12345;
	cvta.global.u64 	%rd42, %rd41;
	{ // callseq 6, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd42;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 6
	{ // callseq 7, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd21;
	st.param.b32 	[param0+8], %r161;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 7
	// begin inline asm
	exit;
	// end inline asm
	// begin inline asm
	exit;
	// end inline asm
LBB0_118:                               // %L29445
	{ // callseq 9, 0
	.reg .b32 temp_param_reg;
	call.uni 
	julia_AssertionError_9513, 
	(
	);
	} // callseq 9
	mov.u64 	%rd47, exception12345;
	cvta.global.u64 	%rd48, %rd47;
	{ // callseq 10, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd48;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 10
	{ // callseq 11, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd21;
	st.param.b32 	[param0+8], %r161;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 11
	// begin inline asm
	exit;
	// end inline asm
	// begin inline asm
	exit;
	// end inline asm
LBB0_144:                               // %L29442
	{ // callseq 15, 0
	.reg .b32 temp_param_reg;
	call.uni 
	julia_AssertionError_9513, 
	(
	);
	} // callseq 15
	mov.u64 	%rd61, exception12345;
	cvta.global.u64 	%rd62, %rd61;
	{ // callseq 16, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd62;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 16
	{ // callseq 17, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd21;
	st.param.b32 	[param0+8], %r161;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 17
	// begin inline asm
	exit;
	// end inline asm
	// begin inline asm
	exit;
	// end inline asm
                                        // -- End function
}
