// PTX CompilerJob of MethodInstance for upchan(::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Float16x2, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int32, 1}) for sm_86, minthreads=512, blocks_per_sm=2

//
// Generated by LLVM NVPTX Back-End
//

.version 7.1
.target sm_86
.address_size 64

	// .globl	_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE // -- Begin function _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE
.func julia_AssertionError_9513
()
.noreturn
{
	trap;
}
.func gpu_report_exception
(
	.param .b64 gpu_report_exception_param_0
)
.noreturn
{
	trap;
}
.func  (.param .b64 func_retval0) julia_power_by_squaring_9524
(
	.param .align 8 .b8 julia_power_by_squaring_9524_param_0[16],
	.param .b64 julia_power_by_squaring_9524_param_1,
	.param .b64 julia_power_by_squaring_9524_param_2
)
.noreturn
{
	trap;
}
.func gpu_signal_exception
(
	.param .align 8 .b8 gpu_signal_exception_param_0[16]
)
.noreturn
{
	trap;
}
.extern .shared .align 32 .b8 shmem[];
.global .align 1 .b8 exception2325[6] = {101, 114, 114, 111, 114, 0};
.global .align 1 .b8 exception1[10] = {101, 120, 99, 101, 112, 116, 105, 111, 110, 0};
                                        // @_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE
.visible .entry _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE(
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_0[16],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_1[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_2[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_3[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_4[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_5[32]
)
.reqntid 512, 1, 1
.minnctapersm 2
{
	.reg .pred 	%p<224>;
	.reg .b16 	%rs<1185>;
	.reg .b32 	%r<7804>;
	.reg .f32 	%f<930>;
	.reg .b64 	%rd<87>;

// %bb.0:                               // %conversion
	ld.param.u32 	%r162, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_0+8];
	ld.param.u64 	%rd21, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_0];
	// begin inline asm
	mov.u32 %r163, %dynamic_smem_size;
	// end inline asm
	setp.gt.u32 	%p1, %r163, 66815;
	@%p1 bra 	LBB0_2;
	bra.uni 	LBB0_1;
LBB0_2:                                 // %L10
	ld.param.u64 	%rd26, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_5];
	ld.param.u64 	%rd22, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_1];
	mov.u32 	%r1, %tid.x;
	mov.u32 	%r2, %tid.y;
	shl.b32 	%r3, %r2, 5;
	mov.u32 	%r4, %ctaid.x;
	shl.b32 	%r5, %r4, 9;
	or.b32  	%r164, %r3, %r1;
	or.b32  	%r165, %r164, %r5;
	mul.wide.u32 	%rd32, %r165, 4;
	add.s64 	%rd4, %rd26, %rd32;
	mov.u32 	%r166, 1;
	st.global.u32 	[%rd4], %r166;
	ld.global.u32 	%r6, [%rd22];
	setp.lt.u32 	%p2, %r6, 32769;
	and.b32  	%r167, %r6, 255;
	setp.eq.s32 	%p3, %r167, 0;
	and.pred  	%p4, %p2, %p3;
	@%p4 bra 	LBB0_4;
	bra.uni 	LBB0_3;
LBB0_4:                                 // %L256
	bfe.u32 	%r13, %r1, 1, 1;
	and.b32  	%r14, %r1, 1;
	bfe.u32 	%r16, %r1, 2, 1;
	shr.u32 	%r17, %r1, 4;
	shl.b32 	%r176, %r17, 1;
	shl.b32 	%r177, %r16, 2;
	shl.b32 	%r178, %r14, 3;
	shl.b32 	%r179, %r13, 4;
	or.b32  	%r180, %r178, %r179;
	or.b32  	%r181, %r177, %r180;
	or.b32  	%r182, %r176, %r181;
	bfe.u32 	%r19, %r1, 3, 1;
	or.b32  	%r20, %r19, %r182;
	or.b32  	%r21, %r20, 32;
	mov.f32 	%f185, 0f40000000;
	mov.f32 	%f186, 0f437F0000;
	div.approx.f32 	%f1, %f186, %f185;
	cvt.rn.f32.s32 	%f187, %r20;
	sub.f32 	%f188, %f187, %f1;
	mov.f32 	%f217, 0f42800000;
	div.approx.f32 	%f3, %f188, %f217;
	setp.eq.f32 	%p10, %f3, 0f00000000;
	mov.f32 	%f897, 0f3F800000;
	mov.f32 	%f890, %f897;
	@%p10 bra 	LBB0_6;
// %bb.5:                               // %L452
	sin.approx.f32 	%f218, %f3;
	div.approx.f32 	%f890, %f218, %f3;
LBB0_6:                                 // %L455
	cvt.rn.f32.s32 	%f221, %r21;
	sub.f32 	%f222, %f221, %f1;
	div.approx.f32 	%f8, %f222, %f217;
	setp.eq.f32 	%p16, %f8, 0f00000000;
	mov.f32 	%f891, %f897;
	@%p16 bra 	LBB0_8;
// %bb.7:                               // %L472
	sin.approx.f32 	%f252, %f8;
	div.approx.f32 	%f891, %f252, %f8;
LBB0_8:                                 // %L475
	or.b32  	%r200, %r20, 64;
	or.b32  	%r23, %r20, 96;
	cvt.rn.f32.s32 	%f256, %r200;
	sub.f32 	%f257, %f256, %f1;
	div.approx.f32 	%f12, %f257, %f217;
	setp.eq.f32 	%p22, %f12, 0f00000000;
	mov.f32 	%f892, %f897;
	@%p22 bra 	LBB0_10;
// %bb.9:                               // %L553
	sin.approx.f32 	%f287, %f12;
	div.approx.f32 	%f892, %f287, %f12;
LBB0_10:                                // %L556
	cvt.rn.f32.s32 	%f290, %r23;
	sub.f32 	%f291, %f290, %f1;
	div.approx.f32 	%f17, %f291, %f217;
	setp.eq.f32 	%p28, %f17, 0f00000000;
	mov.f32 	%f893, %f897;
	@%p28 bra 	LBB0_12;
// %bb.11:                              // %L573
	sin.approx.f32 	%f321, %f17;
	div.approx.f32 	%f893, %f321, %f17;
LBB0_12:                                // %L576
	shl.b32 	%r170, %r1, 1;
	or.b32  	%r218, %r20, 128;
	or.b32  	%r25, %r20, 160;
	cvt.rn.f32.s32 	%f325, %r218;
	sub.f32 	%f326, %f325, %f1;
	div.approx.f32 	%f21, %f326, %f217;
	setp.eq.f32 	%p34, %f21, 0f00000000;
	mov.f32 	%f894, %f897;
	@%p34 bra 	LBB0_14;
// %bb.13:                              // %L654
	sin.approx.f32 	%f356, %f21;
	div.approx.f32 	%f894, %f356, %f21;
LBB0_14:                                // %L657
	shl.b32 	%r7, %r1, 2;
	and.b32  	%r171, %r170, 8;
	and.b32  	%r172, %r1, 18;
	cvt.rn.f32.s32 	%f359, %r25;
	sub.f32 	%f360, %f359, %f1;
	div.approx.f32 	%f26, %f360, %f217;
	setp.eq.f32 	%p40, %f26, 0f00000000;
	mov.f32 	%f895, %f897;
	@%p40 bra 	LBB0_16;
// %bb.15:                              // %L674
	sin.approx.f32 	%f390, %f26;
	div.approx.f32 	%f895, %f390, %f26;
LBB0_16:                                // %L677
	and.b32  	%r169, %r7, 4;
	or.b32  	%r173, %r172, %r171;
	or.b32  	%r236, %r20, 192;
	or.b32  	%r27, %r20, 224;
	cvt.rn.f32.s32 	%f394, %r236;
	sub.f32 	%f395, %f394, %f1;
	div.approx.f32 	%f30, %f395, %f217;
	setp.eq.f32 	%p46, %f30, 0f00000000;
	mov.f32 	%f896, %f897;
	@%p46 bra 	LBB0_18;
// %bb.17:                              // %L755
	sin.approx.f32 	%f425, %f30;
	div.approx.f32 	%f896, %f425, %f30;
LBB0_18:                                // %L758
	and.b32  	%r9, %r7, 32;
	or.b32  	%r174, %r173, %r169;
	cvt.rn.f32.s32 	%f428, %r27;
	sub.f32 	%f429, %f428, %f1;
	div.approx.f32 	%f35, %f429, %f217;
	setp.eq.f32 	%p52, %f35, 0f00000000;
	@%p52 bra 	LBB0_20;
// %bb.19:                              // %L775
	sin.approx.f32 	%f459, %f35;
	div.approx.f32 	%f897, %f459, %f35;
LBB0_20:                                // %L778
	or.b32  	%r175, %r174, %r9;
	mul.lo.s32 	%r29, %r20, 63;
	cvt.rn.f32.s32 	%f462, %r29;
	div.approx.f32 	%f38, %f462, %f217;
	abs.f32 	%f900, %f38;
	setp.lt.f32 	%p53, %f900, 0f40000000;
	@%p53 bra 	LBB0_32;
// %bb.21:
	setp.gtu.f32 	%p54, %f900, 0f4B800000;
	@%p54 bra 	LBB0_28;
	bra.uni 	LBB0_22;
LBB0_28:
	mov.b32 	%r31, %f900;
	and.b32  	%r254, %r31, 8388607;
	or.b32  	%r7762, %r254, 1065353216;
	mov.b32 	%f899, %r7762;
	add.s32 	%r255, %r31, -1073741824;
	and.b32  	%r7763, %r255, -8388608;
	setp.eq.s32 	%p60, %r7763, 0;
	@%p60 bra 	LBB0_31;
// %bb.29:                              // %__nv_fmaf_rn.exit4.i.i.i.preheader
	mov.f32 	%f473, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f472,%f473;
	// end inline asm
LBB0_30:                                // %__nv_fmaf_rn.exit4.i.i.i
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r256, %r7763, 192937984;
	add.s32 	%r257, %r256, %r7762;
	mov.b32 	%f474, %r257;
	mul.f32 	%f475, %f472, %f474;
	sub.f32 	%f476, %f474, %f475;
	fma.rn.f32 	%f477, %f476, %f472, %f475;
	sub.f32 	%f478, %f474, %f477;
	fma.rz.f32 	%f479, %f478, %f472, %f477;
	cvt.rzi.f32.f32 	%f480, %f479;
	sub.f32 	%f899, %f474, %f480;
	sub.s32 	%r7763, %r7763, %r256;
	mov.b32 	%r7762, %f899;
	setp.ne.s32 	%p61, %r7763, 0;
	setp.ne.s32 	%p62, %r7762, 0;
	and.pred  	%p63, %p61, %p62;
	@%p63 bra 	LBB0_30;
LBB0_31:                                // %__internal_fmodf_slowpath_mod.exit.i.i
	setp.gt.u32 	%p64, %r31, 2139095039;
	selp.f32 	%f481, 0f7FFFFFFF, 0f4B800000, %p64;
	mul.f32 	%f482, %f899, 0f34000000;
	mul.f32 	%f900, %f481, %f482;
	bra.uni 	LBB0_32;
LBB0_22:                                // %__nv_fast_fdividef.exit.i.i.i
	div.approx.f32 	%f465, %f900, %f185;
	cvt.rzi.f32.f32 	%f898, %f465;
	fma.rn.f32 	%f41, %f898, 0fC0000000, %f900;
	mov.b32 	%r30, %f41;
	setp.lt.u32 	%p55, %r30, 1073741824;
	@%p55 bra 	LBB0_27;
// %bb.23:
	setp.lt.u32 	%p56, %r30, -2147483647;
	@%p56 bra 	LBB0_25;
// %bb.24:
	add.f32 	%f470, %f898, 0fBF800000;
	setp.lt.f32 	%p59, %f41, 0fC0000000;
	add.f32 	%f471, %f470, 0fBF800000;
	selp.f32 	%f898, %f471, %f470, %p59;
	bra.uni 	LBB0_27;
LBB0_25:
	add.f32 	%f898, %f898, 0f3F800000;
	setp.ltu.f32 	%p57, %f41, 0f40800000;
	@%p57 bra 	LBB0_27;
// %bb.26:                              // %__nv_fmaf_rn.exit.i.i.i
	add.f32 	%f466, %f898, 0f3F800000;
	fma.rn.f32 	%f468, %f185, 0fC0400000, %f41;
	setp.ge.f32 	%p58, %f468, 0f00000000;
	add.f32 	%f469, %f466, 0f3F800000;
	selp.f32 	%f898, %f469, %f466, %p58;
LBB0_27:                                // %__internal_fmodf_fastpath_quot.exit.i.i
	fma.rn.f32 	%f900, %f898, 0fC0000000, %f900;
LBB0_32:                                // %__internal_fmodf_kernel.exit.i
	shr.u32 	%r10, %r175, 1;
	abs.f32 	%f483, %f900;
	setp.gtu.f32 	%p65, %f483, 0f7F800000;
	@%p65 bra 	LBB0_34;
// %bb.33:
	mov.b32 	%r258, %f38;
	and.b32  	%r259, %r258, -2147483648;
	mov.b32 	%r260, %f900;
	or.b32  	%r261, %r259, %r260;
	mov.b32 	%f900, %r261;
LBB0_34:                                // %__nv_fmodf.exit
	ld.param.u64 	%rd1, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_2];
	mul.wide.u32 	%rd35, %r10, 4;
	add.s32 	%r270, %r29, 2016;
	cvt.rn.f32.s32 	%f515, %r270;
	div.approx.f32 	%f57, %f515, %f217;
	abs.f32 	%f904, %f57;
	setp.lt.f32 	%p73, %f904, 0f40000000;
	@%p73 bra 	LBB0_46;
// %bb.35:
	setp.gtu.f32 	%p74, %f904, 0f4B800000;
	@%p74 bra 	LBB0_42;
	bra.uni 	LBB0_36;
LBB0_42:
	mov.b32 	%r39, %f904;
	and.b32  	%r271, %r39, 8388607;
	or.b32  	%r7764, %r271, 1065353216;
	mov.b32 	%f903, %r7764;
	add.s32 	%r272, %r39, -1073741824;
	and.b32  	%r7765, %r272, -8388608;
	setp.eq.s32 	%p80, %r7765, 0;
	@%p80 bra 	LBB0_45;
// %bb.43:                              // %__nv_fmaf_rn.exit4.i.i.i1136.preheader
	mov.f32 	%f526, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f525,%f526;
	// end inline asm
LBB0_44:                                // %__nv_fmaf_rn.exit4.i.i.i1136
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r273, %r7765, 192937984;
	add.s32 	%r274, %r273, %r7764;
	mov.b32 	%f527, %r274;
	mul.f32 	%f528, %f525, %f527;
	sub.f32 	%f529, %f527, %f528;
	fma.rn.f32 	%f530, %f529, %f525, %f528;
	sub.f32 	%f531, %f527, %f530;
	fma.rz.f32 	%f532, %f531, %f525, %f530;
	cvt.rzi.f32.f32 	%f533, %f532;
	sub.f32 	%f903, %f527, %f533;
	sub.s32 	%r7765, %r7765, %r273;
	mov.b32 	%r7764, %f903;
	setp.ne.s32 	%p81, %r7765, 0;
	setp.ne.s32 	%p82, %r7764, 0;
	and.pred  	%p83, %p81, %p82;
	@%p83 bra 	LBB0_44;
LBB0_45:                                // %__internal_fmodf_slowpath_mod.exit.i.i1138
	setp.gt.u32 	%p84, %r39, 2139095039;
	selp.f32 	%f534, 0f7FFFFFFF, 0f4B800000, %p84;
	mul.f32 	%f535, %f903, 0f34000000;
	mul.f32 	%f904, %f534, %f535;
	bra.uni 	LBB0_46;
LBB0_36:                                // %__nv_fast_fdividef.exit.i.i.i1108
	div.approx.f32 	%f518, %f904, %f185;
	cvt.rzi.f32.f32 	%f902, %f518;
	fma.rn.f32 	%f60, %f902, 0fC0000000, %f904;
	mov.b32 	%r38, %f60;
	setp.lt.u32 	%p75, %r38, 1073741824;
	@%p75 bra 	LBB0_41;
// %bb.37:
	setp.lt.u32 	%p76, %r38, -2147483647;
	@%p76 bra 	LBB0_39;
// %bb.38:
	add.f32 	%f523, %f902, 0fBF800000;
	setp.lt.f32 	%p79, %f60, 0fC0000000;
	add.f32 	%f524, %f523, 0fBF800000;
	selp.f32 	%f902, %f524, %f523, %p79;
	bra.uni 	LBB0_41;
LBB0_39:
	add.f32 	%f902, %f902, 0f3F800000;
	setp.ltu.f32 	%p77, %f60, 0f40800000;
	@%p77 bra 	LBB0_41;
// %bb.40:                              // %__nv_fmaf_rn.exit.i.i.i1113
	add.f32 	%f519, %f902, 0f3F800000;
	fma.rn.f32 	%f521, %f185, 0fC0400000, %f60;
	setp.ge.f32 	%p78, %f521, 0f00000000;
	add.f32 	%f522, %f519, 0f3F800000;
	selp.f32 	%f902, %f522, %f519, %p78;
LBB0_41:                                // %__internal_fmodf_fastpath_quot.exit.i.i1117
	fma.rn.f32 	%f904, %f902, 0fC0000000, %f904;
LBB0_46:                                // %__internal_fmodf_kernel.exit.i1142
	add.s64 	%rd36, %rd1, %rd35;
	abs.f32 	%f536, %f904;
	setp.gtu.f32 	%p85, %f536, 0f7F800000;
	@%p85 bra 	LBB0_48;
// %bb.47:
	mov.b32 	%r275, %f57;
	and.b32  	%r276, %r275, -2147483648;
	mov.b32 	%r277, %f904;
	or.b32  	%r278, %r276, %r277;
	mov.b32 	%f904, %r278;
LBB0_48:                                // %__nv_fmodf.exit1143
	ld.global.u32 	%r11, [%rd36];
	mov.u64 	%rd37, 2;
	mov.u64 	%rd38, 6;
	{ // callseq 4, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd21;
	st.param.b32 	[param0+8], %r162;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd37;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd38;
	.param .b64 retval0;
	call.uni (retval0), 
	julia_power_by_squaring_9524, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64 	%rd39, [retval0+0];
	} // callseq 4
	setp.ne.s64 	%p93, %rd39, 64;
	@%p93 bra 	LBB0_119;
// %bb.49:                              // %L875
	shr.u32 	%r15, %r1, 2;
	and.b32  	%r293, %r1, 3;
	shl.b32 	%r294, %r293, 1;
	neg.s32 	%r48, %r294;
	mul.lo.s32 	%r49, %r48, %r15;
	cvt.rn.f32.s32 	%f74, %r49;
	mov.f32 	%f570, 0f41000000;
	div.approx.f32 	%f75, %f74, %f570;
	abs.f32 	%f908, %f75;
	setp.lt.f32 	%p94, %f908, 0f40000000;
	@%p94 bra 	LBB0_61;
// %bb.50:
	setp.gtu.f32 	%p95, %f908, 0f4B800000;
	@%p95 bra 	LBB0_57;
	bra.uni 	LBB0_51;
LBB0_57:
	mov.b32 	%r51, %f908;
	and.b32  	%r295, %r51, 8388607;
	or.b32  	%r7766, %r295, 1065353216;
	mov.b32 	%f907, %r7766;
	add.s32 	%r296, %r51, -1073741824;
	and.b32  	%r7767, %r296, -8388608;
	setp.eq.s32 	%p101, %r7767, 0;
	@%p101 bra 	LBB0_60;
// %bb.58:                              // %__nv_fmaf_rn.exit4.i.i.i1182.preheader
	mov.f32 	%f580, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f579,%f580;
	// end inline asm
LBB0_59:                                // %__nv_fmaf_rn.exit4.i.i.i1182
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r297, %r7767, 192937984;
	add.s32 	%r298, %r297, %r7766;
	mov.b32 	%f581, %r298;
	mul.f32 	%f582, %f579, %f581;
	sub.f32 	%f583, %f581, %f582;
	fma.rn.f32 	%f584, %f583, %f579, %f582;
	sub.f32 	%f585, %f581, %f584;
	fma.rz.f32 	%f586, %f585, %f579, %f584;
	cvt.rzi.f32.f32 	%f587, %f586;
	sub.f32 	%f907, %f581, %f587;
	sub.s32 	%r7767, %r7767, %r297;
	mov.b32 	%r7766, %f907;
	setp.ne.s32 	%p102, %r7767, 0;
	setp.ne.s32 	%p103, %r7766, 0;
	and.pred  	%p104, %p102, %p103;
	@%p104 bra 	LBB0_59;
LBB0_60:                                // %__internal_fmodf_slowpath_mod.exit.i.i1184
	setp.gt.u32 	%p105, %r51, 2139095039;
	selp.f32 	%f588, 0f7FFFFFFF, 0f4B800000, %p105;
	mul.f32 	%f589, %f907, 0f34000000;
	mul.f32 	%f908, %f588, %f589;
	bra.uni 	LBB0_61;
LBB0_51:                                // %__nv_fast_fdividef.exit.i.i.i1154
	div.approx.f32 	%f572, %f908, %f185;
	cvt.rzi.f32.f32 	%f906, %f572;
	fma.rn.f32 	%f78, %f906, 0fC0000000, %f908;
	mov.b32 	%r50, %f78;
	setp.lt.u32 	%p96, %r50, 1073741824;
	@%p96 bra 	LBB0_56;
// %bb.52:
	setp.lt.u32 	%p97, %r50, -2147483647;
	@%p97 bra 	LBB0_54;
// %bb.53:
	add.f32 	%f577, %f906, 0fBF800000;
	setp.lt.f32 	%p100, %f78, 0fC0000000;
	add.f32 	%f578, %f577, 0fBF800000;
	selp.f32 	%f906, %f578, %f577, %p100;
	bra.uni 	LBB0_56;
LBB0_54:
	add.f32 	%f906, %f906, 0f3F800000;
	setp.ltu.f32 	%p98, %f78, 0f40800000;
	@%p98 bra 	LBB0_56;
// %bb.55:                              // %__nv_fmaf_rn.exit.i.i.i1159
	add.f32 	%f573, %f906, 0f3F800000;
	fma.rn.f32 	%f575, %f185, 0fC0400000, %f78;
	setp.ge.f32 	%p99, %f575, 0f00000000;
	add.f32 	%f576, %f573, 0f3F800000;
	selp.f32 	%f906, %f576, %f573, %p99;
LBB0_56:                                // %__internal_fmodf_fastpath_quot.exit.i.i1163
	fma.rn.f32 	%f908, %f906, 0fC0000000, %f908;
LBB0_61:                                // %__internal_fmodf_kernel.exit.i1188
	abs.f32 	%f590, %f908;
	setp.gtu.f32 	%p106, %f590, 0f7F800000;
	@%p106 bra 	LBB0_63;
// %bb.62:
	mov.b32 	%r299, %f75;
	and.b32  	%r300, %r299, -2147483648;
	mov.b32 	%r301, %f908;
	or.b32  	%r302, %r300, %r301;
	mov.b32 	%f908, %r302;
LBB0_63:                                // %__nv_fmodf.exit1189
	shl.b32 	%r311, %r15, 3;
	sub.s32 	%r312, %r49, %r311;
	cvt.rn.f32.s32 	%f94, %r312;
	div.approx.f32 	%f95, %f94, %f570;
	abs.f32 	%f912, %f95;
	setp.lt.f32 	%p114, %f912, 0f40000000;
	@%p114 bra 	LBB0_75;
// %bb.64:
	setp.gtu.f32 	%p115, %f912, 0f4B800000;
	@%p115 bra 	LBB0_71;
	bra.uni 	LBB0_65;
LBB0_71:
	mov.b32 	%r59, %f912;
	and.b32  	%r313, %r59, 8388607;
	or.b32  	%r7768, %r313, 1065353216;
	mov.b32 	%f911, %r7768;
	add.s32 	%r314, %r59, -1073741824;
	and.b32  	%r7769, %r314, -8388608;
	setp.eq.s32 	%p121, %r7769, 0;
	@%p121 bra 	LBB0_74;
// %bb.72:                              // %__nv_fmaf_rn.exit4.i.i.i1228.preheader
	mov.f32 	%f632, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f631,%f632;
	// end inline asm
LBB0_73:                                // %__nv_fmaf_rn.exit4.i.i.i1228
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r315, %r7769, 192937984;
	add.s32 	%r316, %r315, %r7768;
	mov.b32 	%f633, %r316;
	mul.f32 	%f634, %f631, %f633;
	sub.f32 	%f635, %f633, %f634;
	fma.rn.f32 	%f636, %f635, %f631, %f634;
	sub.f32 	%f637, %f633, %f636;
	fma.rz.f32 	%f638, %f637, %f631, %f636;
	cvt.rzi.f32.f32 	%f639, %f638;
	sub.f32 	%f911, %f633, %f639;
	sub.s32 	%r7769, %r7769, %r315;
	mov.b32 	%r7768, %f911;
	setp.ne.s32 	%p122, %r7769, 0;
	setp.ne.s32 	%p123, %r7768, 0;
	and.pred  	%p124, %p122, %p123;
	@%p124 bra 	LBB0_73;
LBB0_74:                                // %__internal_fmodf_slowpath_mod.exit.i.i1230
	setp.gt.u32 	%p125, %r59, 2139095039;
	selp.f32 	%f640, 0f7FFFFFFF, 0f4B800000, %p125;
	mul.f32 	%f641, %f911, 0f34000000;
	mul.f32 	%f912, %f640, %f641;
	bra.uni 	LBB0_75;
LBB0_65:                                // %__nv_fast_fdividef.exit.i.i.i1200
	div.approx.f32 	%f624, %f912, %f185;
	cvt.rzi.f32.f32 	%f910, %f624;
	fma.rn.f32 	%f98, %f910, 0fC0000000, %f912;
	mov.b32 	%r58, %f98;
	setp.lt.u32 	%p116, %r58, 1073741824;
	@%p116 bra 	LBB0_70;
// %bb.66:
	setp.lt.u32 	%p117, %r58, -2147483647;
	@%p117 bra 	LBB0_68;
// %bb.67:
	add.f32 	%f629, %f910, 0fBF800000;
	setp.lt.f32 	%p120, %f98, 0fC0000000;
	add.f32 	%f630, %f629, 0fBF800000;
	selp.f32 	%f910, %f630, %f629, %p120;
	bra.uni 	LBB0_70;
LBB0_68:
	add.f32 	%f910, %f910, 0f3F800000;
	setp.ltu.f32 	%p118, %f98, 0f40800000;
	@%p118 bra 	LBB0_70;
// %bb.69:                              // %__nv_fmaf_rn.exit.i.i.i1205
	add.f32 	%f625, %f910, 0f3F800000;
	fma.rn.f32 	%f627, %f185, 0fC0400000, %f98;
	setp.ge.f32 	%p119, %f627, 0f00000000;
	add.f32 	%f628, %f625, 0f3F800000;
	selp.f32 	%f910, %f628, %f625, %p119;
LBB0_70:                                // %__internal_fmodf_fastpath_quot.exit.i.i1209
	fma.rn.f32 	%f912, %f910, 0fC0000000, %f912;
LBB0_75:                                // %__internal_fmodf_kernel.exit.i1234
	abs.f32 	%f642, %f912;
	setp.gtu.f32 	%p126, %f642, 0f7F800000;
	@%p126 bra 	LBB0_77;
// %bb.76:
	mov.b32 	%r317, %f95;
	and.b32  	%r318, %r317, -2147483648;
	mov.b32 	%r319, %f912;
	or.b32  	%r320, %r318, %r319;
	mov.b32 	%f912, %r320;
LBB0_77:                                // %__nv_fmodf.exit1235
	{ // callseq 8, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd21;
	st.param.b32 	[param0+8], %r162;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd37;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd38;
	.param .b64 retval0;
	call.uni (retval0), 
	julia_power_by_squaring_9524, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64 	%rd45, [retval0+0];
	} // callseq 8
	setp.ne.s64 	%p134, %rd45, 64;
	@%p134 bra 	LBB0_118;
// %bb.78:                              // %L1013
	{ // callseq 12, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd21;
	st.param.b32 	[param0+8], %r162;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd37;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd38;
	.param .b64 retval0;
	call.uni (retval0), 
	julia_power_by_squaring_9524, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64 	%rd51, [retval0+0];
	} // callseq 12
	cvt.rn.f32.s64 	%f676, %rd51;
	div.approx.f32 	%f112, %f74, %f676;
	abs.f32 	%f924, %f112;
	setp.lt.f32 	%p135, %f924, 0f40000000;
	@%p135 bra 	LBB0_127;
// %bb.79:
	setp.gtu.f32 	%p136, %f924, 0f4B800000;
	@%p136 bra 	LBB0_123;
	bra.uni 	LBB0_80;
LBB0_123:
	mov.b32 	%r139, %f924;
	and.b32  	%r341, %r139, 8388607;
	or.b32  	%r7800, %r341, 1065353216;
	mov.b32 	%f923, %r7800;
	add.s32 	%r342, %r139, -1073741824;
	and.b32  	%r7801, %r342, -8388608;
	setp.eq.s32 	%p142, %r7801, 0;
	@%p142 bra 	LBB0_126;
// %bb.124:                             // %__nv_fmaf_rn.exit4.i.i.i1366.preheader
	mov.f32 	%f686, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f685,%f686;
	// end inline asm
LBB0_125:                               // %__nv_fmaf_rn.exit4.i.i.i1366
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r343, %r7801, 192937984;
	add.s32 	%r344, %r343, %r7800;
	mov.b32 	%f687, %r344;
	mul.f32 	%f688, %f685, %f687;
	sub.f32 	%f689, %f687, %f688;
	fma.rn.f32 	%f690, %f689, %f685, %f688;
	sub.f32 	%f691, %f687, %f690;
	fma.rz.f32 	%f692, %f691, %f685, %f690;
	cvt.rzi.f32.f32 	%f693, %f692;
	sub.f32 	%f923, %f687, %f693;
	sub.s32 	%r7801, %r7801, %r343;
	mov.b32 	%r7800, %f923;
	setp.ne.s32 	%p143, %r7801, 0;
	setp.ne.s32 	%p144, %r7800, 0;
	and.pred  	%p145, %p143, %p144;
	@%p145 bra 	LBB0_125;
LBB0_126:                               // %__internal_fmodf_slowpath_mod.exit.i.i1368
	setp.gt.u32 	%p146, %r139, 2139095039;
	selp.f32 	%f694, 0f7FFFFFFF, 0f4B800000, %p146;
	mul.f32 	%f695, %f923, 0f34000000;
	mul.f32 	%f924, %f694, %f695;
	bra.uni 	LBB0_127;
LBB0_80:                                // %__nv_fast_fdividef.exit.i.i.i1338
	div.approx.f32 	%f678, %f924, %f185;
	cvt.rzi.f32.f32 	%f922, %f678;
	fma.rn.f32 	%f151, %f922, 0fC0000000, %f924;
	mov.b32 	%r138, %f151;
	setp.lt.u32 	%p137, %r138, 1073741824;
	@%p137 bra 	LBB0_122;
// %bb.81:
	setp.lt.u32 	%p138, %r138, -2147483647;
	@%p138 bra 	LBB0_120;
// %bb.82:
	add.f32 	%f683, %f922, 0fBF800000;
	setp.lt.f32 	%p141, %f151, 0fC0000000;
	add.f32 	%f684, %f683, 0fBF800000;
	selp.f32 	%f922, %f684, %f683, %p141;
	bra.uni 	LBB0_122;
LBB0_120:
	add.f32 	%f922, %f922, 0f3F800000;
	setp.ltu.f32 	%p139, %f151, 0f40800000;
	@%p139 bra 	LBB0_122;
// %bb.121:                             // %__nv_fmaf_rn.exit.i.i.i1343
	add.f32 	%f679, %f922, 0f3F800000;
	fma.rn.f32 	%f681, %f185, 0fC0400000, %f151;
	setp.ge.f32 	%p140, %f681, 0f00000000;
	add.f32 	%f682, %f679, 0f3F800000;
	selp.f32 	%f922, %f682, %f679, %p140;
LBB0_122:                               // %__internal_fmodf_fastpath_quot.exit.i.i1347
	fma.rn.f32 	%f924, %f922, 0fC0000000, %f924;
LBB0_127:                               // %__internal_fmodf_kernel.exit.i1372
	abs.f32 	%f696, %f924;
	setp.gtu.f32 	%p147, %f696, 0f7F800000;
	@%p147 bra 	LBB0_129;
// %bb.128:
	mov.b32 	%r345, %f112;
	and.b32  	%r346, %r345, -2147483648;
	mov.b32 	%r347, %f924;
	or.b32  	%r348, %r346, %r347;
	mov.b32 	%f924, %r348;
LBB0_129:                               // %__nv_fmodf.exit1373
	{ // callseq 13, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd21;
	st.param.b32 	[param0+8], %r162;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd37;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd38;
	.param .b64 retval0;
	call.uni (retval0), 
	julia_power_by_squaring_9524, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64 	%rd55, [retval0+0];
	} // callseq 13
	cvt.rn.f32.s64 	%f728, %rd55;
	div.approx.f32 	%f167, %f94, %f728;
	abs.f32 	%f928, %f167;
	setp.lt.f32 	%p155, %f928, 0f40000000;
	@%p155 bra 	LBB0_141;
// %bb.130:
	setp.gtu.f32 	%p156, %f928, 0f4B800000;
	@%p156 bra 	LBB0_137;
	bra.uni 	LBB0_131;
LBB0_137:
	mov.b32 	%r147, %f928;
	and.b32  	%r357, %r147, 8388607;
	or.b32  	%r7802, %r357, 1065353216;
	mov.b32 	%f927, %r7802;
	add.s32 	%r358, %r147, -1073741824;
	and.b32  	%r7803, %r358, -8388608;
	setp.eq.s32 	%p162, %r7803, 0;
	@%p162 bra 	LBB0_140;
// %bb.138:                             // %__nv_fmaf_rn.exit4.i.i.i1412.preheader
	mov.f32 	%f738, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f737,%f738;
	// end inline asm
LBB0_139:                               // %__nv_fmaf_rn.exit4.i.i.i1412
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r359, %r7803, 192937984;
	add.s32 	%r360, %r359, %r7802;
	mov.b32 	%f739, %r360;
	mul.f32 	%f740, %f737, %f739;
	sub.f32 	%f741, %f739, %f740;
	fma.rn.f32 	%f742, %f741, %f737, %f740;
	sub.f32 	%f743, %f739, %f742;
	fma.rz.f32 	%f744, %f743, %f737, %f742;
	cvt.rzi.f32.f32 	%f745, %f744;
	sub.f32 	%f927, %f739, %f745;
	sub.s32 	%r7803, %r7803, %r359;
	mov.b32 	%r7802, %f927;
	setp.ne.s32 	%p163, %r7803, 0;
	setp.ne.s32 	%p164, %r7802, 0;
	and.pred  	%p165, %p163, %p164;
	@%p165 bra 	LBB0_139;
LBB0_140:                               // %__internal_fmodf_slowpath_mod.exit.i.i1414
	setp.gt.u32 	%p166, %r147, 2139095039;
	selp.f32 	%f746, 0f7FFFFFFF, 0f4B800000, %p166;
	mul.f32 	%f747, %f927, 0f34000000;
	mul.f32 	%f928, %f746, %f747;
	bra.uni 	LBB0_141;
LBB0_131:                               // %__nv_fast_fdividef.exit.i.i.i1384
	div.approx.f32 	%f730, %f928, %f185;
	cvt.rzi.f32.f32 	%f926, %f730;
	fma.rn.f32 	%f170, %f926, 0fC0000000, %f928;
	mov.b32 	%r146, %f170;
	setp.lt.u32 	%p157, %r146, 1073741824;
	@%p157 bra 	LBB0_136;
// %bb.132:
	setp.lt.u32 	%p158, %r146, -2147483647;
	@%p158 bra 	LBB0_134;
// %bb.133:
	add.f32 	%f735, %f926, 0fBF800000;
	setp.lt.f32 	%p161, %f170, 0fC0000000;
	add.f32 	%f736, %f735, 0fBF800000;
	selp.f32 	%f926, %f736, %f735, %p161;
	bra.uni 	LBB0_136;
LBB0_134:
	add.f32 	%f926, %f926, 0f3F800000;
	setp.ltu.f32 	%p159, %f170, 0f40800000;
	@%p159 bra 	LBB0_136;
// %bb.135:                             // %__nv_fmaf_rn.exit.i.i.i1389
	add.f32 	%f731, %f926, 0f3F800000;
	fma.rn.f32 	%f733, %f185, 0fC0400000, %f170;
	setp.ge.f32 	%p160, %f733, 0f00000000;
	add.f32 	%f734, %f731, 0f3F800000;
	selp.f32 	%f926, %f734, %f731, %p160;
LBB0_136:                               // %__internal_fmodf_fastpath_quot.exit.i.i1393
	fma.rn.f32 	%f928, %f926, 0fC0000000, %f928;
LBB0_141:                               // %__internal_fmodf_kernel.exit.i1418
	abs.f32 	%f748, %f928;
	setp.gtu.f32 	%p167, %f748, 0f7F800000;
	@%p167 bra 	LBB0_143;
// %bb.142:
	mov.b32 	%r361, %f167;
	and.b32  	%r362, %r361, -2147483648;
	mov.b32 	%r363, %f928;
	or.b32  	%r364, %r362, %r363;
	mov.b32 	%f928, %r364;
LBB0_143:                               // %__nv_fmodf.exit1419
	{ // callseq 14, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd21;
	st.param.b32 	[param0+8], %r162;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd37;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd38;
	.param .b64 retval0;
	call.uni (retval0), 
	julia_power_by_squaring_9524, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64 	%rd59, [retval0+0];
	} // callseq 14
	setp.eq.s64 	%p175, %rd59, 64;
	@%p175 bra 	LBB0_83;
	bra.uni 	LBB0_144;
LBB0_83:                                // %L1096
	mov.f32 	%f189, 0f43808000;
	div.approx.f32 	%f190, %f188, %f189;
	div.approx.f32 	%f224, %f222, %f189;
	div.approx.f32 	%f259, %f257, %f189;
	div.approx.f32 	%f293, %f291, %f189;
	div.approx.f32 	%f328, %f326, %f189;
	div.approx.f32 	%f362, %f360, %f189;
	div.approx.f32 	%f397, %f395, %f189;
	div.approx.f32 	%f431, %f429, %f189;
	abs.f32 	%f191, %f190;
	abs.f32 	%f225, %f224;
	abs.f32 	%f260, %f259;
	abs.f32 	%f294, %f293;
	abs.f32 	%f329, %f328;
	abs.f32 	%f363, %f362;
	abs.f32 	%f398, %f397;
	abs.f32 	%f432, %f431;
	add.f32 	%f591, %f908, %f908;
	add.f32 	%f643, %f912, %f912;
	setp.gt.f32 	%p5, %f191, 0f4B800000;
	mul.f32 	%f192, %f190, 0f00000000;
	setp.gt.f32 	%p11, %f225, 0f4B800000;
	mul.f32 	%f226, %f224, 0f00000000;
	setp.gt.f32 	%p17, %f260, 0f4B800000;
	mul.f32 	%f261, %f259, 0f00000000;
	setp.gt.f32 	%p23, %f294, 0f4B800000;
	mul.f32 	%f295, %f293, 0f00000000;
	setp.gt.f32 	%p29, %f329, 0f4B800000;
	mul.f32 	%f330, %f328, 0f00000000;
	setp.gt.f32 	%p35, %f363, 0f4B800000;
	mul.f32 	%f364, %f362, 0f00000000;
	setp.gt.f32 	%p41, %f398, 0f4B800000;
	mul.f32 	%f399, %f397, 0f00000000;
	setp.gt.f32 	%p47, %f432, 0f4B800000;
	mul.f32 	%f433, %f431, 0f00000000;
	add.f32 	%f484, %f900, %f900;
	add.f32 	%f537, %f904, %f904;
	mov.b32 	%r303, %f591;
	mov.b32 	%r333, %f643;
	selp.f32 	%f193, %f192, %f190, %p5;
	selp.f32 	%f227, %f226, %f224, %p11;
	selp.f32 	%f262, %f261, %f259, %p17;
	selp.f32 	%f296, %f295, %f293, %p23;
	selp.f32 	%f331, %f330, %f328, %p29;
	selp.f32 	%f365, %f364, %f362, %p35;
	selp.f32 	%f400, %f399, %f397, %p41;
	selp.f32 	%f434, %f433, %f431, %p47;
	mov.b32 	%r262, %f484;
	mov.b32 	%r285, %f537;
	and.b32  	%r304, %r303, -2147483648;
	and.b32  	%r334, %r333, -2147483648;
	add.f32 	%f697, %f924, %f924;
	add.f32 	%f194, %f193, %f193;
	add.f32 	%f228, %f227, %f227;
	add.f32 	%f263, %f262, %f262;
	add.f32 	%f297, %f296, %f296;
	add.f32 	%f332, %f331, %f331;
	add.f32 	%f366, %f365, %f365;
	add.f32 	%f401, %f400, %f400;
	add.f32 	%f435, %f434, %f434;
	and.b32  	%r263, %r262, -2147483648;
	and.b32  	%r286, %r285, -2147483648;
	or.b32  	%r305, %r304, 1056964608;
	or.b32  	%r335, %r334, 1056964608;
	mov.b32 	%r349, %f697;
	mov.b32 	%r183, %f194;
	mov.b32 	%r190, %f228;
	mov.b32 	%r201, %f263;
	mov.b32 	%r208, %f297;
	mov.b32 	%r219, %f332;
	mov.b32 	%r226, %f366;
	mov.b32 	%r237, %f401;
	mov.b32 	%r244, %f435;
	or.b32  	%r264, %r263, 1056964608;
	or.b32  	%r287, %r286, 1056964608;
	mov.b32 	%f592, %r305;
	mov.b32 	%f644, %r335;
	and.b32  	%r350, %r349, -2147483648;
	and.b32  	%r184, %r183, -2147483648;
	and.b32  	%r191, %r190, -2147483648;
	and.b32  	%r202, %r201, -2147483648;
	and.b32  	%r209, %r208, -2147483648;
	and.b32  	%r220, %r219, -2147483648;
	and.b32  	%r227, %r226, -2147483648;
	and.b32  	%r238, %r237, -2147483648;
	and.b32  	%r245, %r244, -2147483648;
	mov.b32 	%f485, %r264;
	mov.b32 	%f538, %r287;
	add.f32 	%f593, %f591, %f592;
	abs.f32 	%f595, %f591;
	add.f32 	%f645, %f643, %f644;
	abs.f32 	%f647, %f643;
	or.b32  	%r351, %r350, 1056964608;
	or.b32  	%r185, %r184, 1056964608;
	or.b32  	%r192, %r191, 1056964608;
	or.b32  	%r203, %r202, 1056964608;
	or.b32  	%r210, %r209, 1056964608;
	or.b32  	%r221, %r220, 1056964608;
	or.b32  	%r228, %r227, 1056964608;
	or.b32  	%r239, %r238, 1056964608;
	or.b32  	%r246, %r245, 1056964608;
	add.f32 	%f486, %f484, %f485;
	abs.f32 	%f488, %f484;
	add.f32 	%f539, %f537, %f538;
	abs.f32 	%f541, %f537;
	cvt.rzi.f32.f32 	%f594, %f593;
	setp.gt.f32 	%p107, %f595, 0f4B000000;
	cvt.rzi.f32.f32 	%f646, %f645;
	setp.gt.f32 	%p127, %f647, 0f4B000000;
	mov.b32 	%f698, %r351;
	mov.b32 	%f195, %r185;
	mov.b32 	%f229, %r192;
	mov.b32 	%f264, %r203;
	mov.b32 	%f298, %r210;
	mov.b32 	%f333, %r221;
	mov.b32 	%f367, %r228;
	mov.b32 	%f402, %r239;
	mov.b32 	%f436, %r246;
	cvt.rzi.f32.f32 	%f487, %f486;
	setp.gt.f32 	%p66, %f488, 0f4B000000;
	cvt.rzi.f32.f32 	%f540, %f539;
	setp.gt.f32 	%p86, %f541, 0f4B000000;
	selp.f32 	%f596, %f591, %f594, %p107;
	cvt.rzi.f32.f32 	%f597, %f591;
	setp.lt.f32 	%p108, %f595, 0f3F000000;
	selp.f32 	%f648, %f643, %f646, %p127;
	cvt.rzi.f32.f32 	%f649, %f643;
	setp.lt.f32 	%p128, %f647, 0f3F000000;
	add.f32 	%f699, %f697, %f698;
	abs.f32 	%f701, %f697;
	add.f32 	%f196, %f194, %f195;
	abs.f32 	%f198, %f194;
	add.f32 	%f230, %f228, %f229;
	abs.f32 	%f232, %f228;
	add.f32 	%f265, %f263, %f264;
	abs.f32 	%f267, %f263;
	add.f32 	%f299, %f297, %f298;
	abs.f32 	%f301, %f297;
	add.f32 	%f334, %f332, %f333;
	abs.f32 	%f336, %f332;
	add.f32 	%f368, %f366, %f367;
	abs.f32 	%f370, %f366;
	add.f32 	%f403, %f401, %f402;
	abs.f32 	%f405, %f401;
	add.f32 	%f437, %f435, %f436;
	abs.f32 	%f439, %f435;
	selp.f32 	%f489, %f484, %f487, %p66;
	cvt.rzi.f32.f32 	%f490, %f484;
	setp.lt.f32 	%p67, %f488, 0f3F000000;
	selp.f32 	%f542, %f537, %f540, %p86;
	cvt.rzi.f32.f32 	%f543, %f537;
	setp.lt.f32 	%p87, %f541, 0f3F000000;
	selp.f32 	%f598, %f597, %f596, %p108;
	selp.f32 	%f650, %f649, %f648, %p128;
	cvt.rzi.f32.f32 	%f700, %f699;
	setp.gt.f32 	%p148, %f701, 0f4B000000;
	cvt.rzi.f32.f32 	%f197, %f196;
	setp.gt.f32 	%p6, %f198, 0f4B000000;
	cvt.rzi.f32.f32 	%f231, %f230;
	setp.gt.f32 	%p12, %f232, 0f4B000000;
	cvt.rzi.f32.f32 	%f266, %f265;
	setp.gt.f32 	%p18, %f267, 0f4B000000;
	cvt.rzi.f32.f32 	%f300, %f299;
	setp.gt.f32 	%p24, %f301, 0f4B000000;
	cvt.rzi.f32.f32 	%f335, %f334;
	setp.gt.f32 	%p30, %f336, 0f4B000000;
	cvt.rzi.f32.f32 	%f369, %f368;
	setp.gt.f32 	%p36, %f370, 0f4B000000;
	cvt.rzi.f32.f32 	%f404, %f403;
	setp.gt.f32 	%p42, %f405, 0f4B000000;
	cvt.rzi.f32.f32 	%f438, %f437;
	setp.gt.f32 	%p48, %f439, 0f4B000000;
	selp.f32 	%f491, %f490, %f489, %p67;
	selp.f32 	%f544, %f543, %f542, %p87;
	fma.rn.f32 	%f599, %f598, 0fBF000000, %f908;
	fma.rn.f32 	%f651, %f650, 0fBF000000, %f912;
	selp.f32 	%f702, %f697, %f700, %p148;
	cvt.rzi.f32.f32 	%f703, %f697;
	setp.lt.f32 	%p149, %f701, 0f3F000000;
	selp.f32 	%f199, %f194, %f197, %p6;
	cvt.rzi.f32.f32 	%f200, %f194;
	setp.lt.f32 	%p7, %f198, 0f3F000000;
	selp.f32 	%f233, %f228, %f231, %p12;
	cvt.rzi.f32.f32 	%f234, %f228;
	setp.lt.f32 	%p13, %f232, 0f3F000000;
	selp.f32 	%f268, %f263, %f266, %p18;
	cvt.rzi.f32.f32 	%f269, %f263;
	setp.lt.f32 	%p19, %f267, 0f3F000000;
	selp.f32 	%f302, %f297, %f300, %p24;
	cvt.rzi.f32.f32 	%f303, %f297;
	setp.lt.f32 	%p25, %f301, 0f3F000000;
	selp.f32 	%f337, %f332, %f335, %p30;
	cvt.rzi.f32.f32 	%f338, %f332;
	setp.lt.f32 	%p31, %f336, 0f3F000000;
	selp.f32 	%f371, %f366, %f369, %p36;
	cvt.rzi.f32.f32 	%f372, %f366;
	setp.lt.f32 	%p37, %f370, 0f3F000000;
	selp.f32 	%f406, %f401, %f404, %p42;
	cvt.rzi.f32.f32 	%f407, %f401;
	setp.lt.f32 	%p43, %f405, 0f3F000000;
	selp.f32 	%f440, %f435, %f438, %p48;
	cvt.rzi.f32.f32 	%f441, %f435;
	setp.lt.f32 	%p49, %f439, 0f3F000000;
	fma.rn.f32 	%f492, %f491, 0fBF000000, %f900;
	fma.rn.f32 	%f545, %f544, 0fBF000000, %f904;
	mul.f32 	%f600, %f599, 0f34222169;
	mul.f32 	%f652, %f651, 0f34222169;
	selp.f32 	%f704, %f703, %f702, %p149;
	selp.f32 	%f201, %f200, %f199, %p7;
	selp.f32 	%f235, %f234, %f233, %p13;
	selp.f32 	%f270, %f269, %f268, %p19;
	selp.f32 	%f304, %f303, %f302, %p25;
	selp.f32 	%f339, %f338, %f337, %p31;
	selp.f32 	%f373, %f372, %f371, %p37;
	selp.f32 	%f408, %f407, %f406, %p43;
	selp.f32 	%f442, %f441, %f440, %p49;
	mul.f32 	%f493, %f492, 0f34222169;
	mul.f32 	%f546, %f545, 0f34222169;
	fma.rn.f32 	%f601, %f599, 0f40490FDA, %f600;
	fma.rn.f32 	%f653, %f651, 0f40490FDA, %f652;
	fma.rn.f32 	%f705, %f704, 0fBF000000, %f924;
	fma.rn.f32 	%f202, %f201, 0fBF000000, %f193;
	fma.rn.f32 	%f236, %f235, 0fBF000000, %f227;
	fma.rn.f32 	%f271, %f270, 0fBF000000, %f262;
	fma.rn.f32 	%f305, %f304, 0fBF000000, %f296;
	fma.rn.f32 	%f340, %f339, 0fBF000000, %f331;
	fma.rn.f32 	%f374, %f373, 0fBF000000, %f365;
	fma.rn.f32 	%f409, %f408, 0fBF000000, %f400;
	fma.rn.f32 	%f443, %f442, 0fBF000000, %f434;
	fma.rn.f32 	%f494, %f492, 0f40490FDA, %f493;
	fma.rn.f32 	%f547, %f545, 0f40490FDA, %f546;
	mul.f32 	%f602, %f601, %f601;
	mul.f32 	%f654, %f653, %f653;
	mul.f32 	%f706, %f705, 0f34222169;
	mul.f32 	%f203, %f202, %f202;
	mul.f32 	%f237, %f236, %f236;
	mul.f32 	%f272, %f271, %f271;
	mul.f32 	%f306, %f305, %f305;
	mul.f32 	%f341, %f340, %f340;
	mul.f32 	%f375, %f374, %f374;
	mul.f32 	%f410, %f409, %f409;
	mul.f32 	%f444, %f443, %f443;
	mul.f32 	%f495, %f494, %f494;
	mul.f32 	%f548, %f547, %f547;
	fma.rn.f32 	%f603, %f602, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f655, %f654, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f707, %f705, 0f40490FDA, %f706;
	cvt.rzi.s32.f32 	%r186, %f201;
	fma.rn.f32 	%f204, %f203, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f205, %f203, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r193, %f235;
	fma.rn.f32 	%f238, %f237, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f239, %f237, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r204, %f270;
	fma.rn.f32 	%f273, %f272, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f274, %f272, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r211, %f304;
	fma.rn.f32 	%f307, %f306, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f308, %f306, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r222, %f339;
	fma.rn.f32 	%f342, %f341, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f343, %f341, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r229, %f373;
	fma.rn.f32 	%f376, %f375, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f377, %f375, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r240, %f408;
	fma.rn.f32 	%f411, %f410, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f412, %f410, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r247, %f442;
	fma.rn.f32 	%f445, %f444, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f446, %f444, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f496, %f495, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f549, %f548, 0f37CBAC00, 0fBAB607ED;
	cvt.rzi.s32.f32 	%r306, %f598;
	fma.rn.f32 	%f604, %f603, %f602, 0f3D2AAABB;
	fma.rn.f32 	%f608, %f602, 0fB94D4153, 0f3C0885E4;
	cvt.rzi.s32.f32 	%r336, %f650;
	fma.rn.f32 	%f656, %f655, %f654, 0f3D2AAABB;
	fma.rn.f32 	%f660, %f654, 0fB94D4153, 0f3C0885E4;
	mul.f32 	%f708, %f707, %f707;
	add.s32 	%r187, %r186, 1;
	fma.rn.f32 	%f206, %f204, %f203, 0fC0A55DF6;
	fma.rn.f32 	%f207, %f205, %f203, 0f4081E0CF;
	fma.rn.f32 	%f208, %f203, %f202, 0f00000000;
	add.s32 	%r194, %r193, 1;
	fma.rn.f32 	%f240, %f238, %f237, 0fC0A55DF6;
	fma.rn.f32 	%f241, %f239, %f237, 0f4081E0CF;
	fma.rn.f32 	%f242, %f237, %f236, 0f00000000;
	add.s32 	%r205, %r204, 1;
	fma.rn.f32 	%f275, %f273, %f272, 0fC0A55DF6;
	fma.rn.f32 	%f276, %f274, %f272, 0f4081E0CF;
	fma.rn.f32 	%f277, %f272, %f271, 0f00000000;
	add.s32 	%r212, %r211, 1;
	fma.rn.f32 	%f309, %f307, %f306, 0fC0A55DF6;
	fma.rn.f32 	%f310, %f308, %f306, 0f4081E0CF;
	fma.rn.f32 	%f311, %f306, %f305, 0f00000000;
	add.s32 	%r223, %r222, 1;
	fma.rn.f32 	%f344, %f342, %f341, 0fC0A55DF6;
	fma.rn.f32 	%f345, %f343, %f341, 0f4081E0CF;
	fma.rn.f32 	%f346, %f341, %f340, 0f00000000;
	add.s32 	%r230, %r229, 1;
	fma.rn.f32 	%f378, %f376, %f375, 0fC0A55DF6;
	fma.rn.f32 	%f379, %f377, %f375, 0f4081E0CF;
	fma.rn.f32 	%f380, %f375, %f374, 0f00000000;
	add.s32 	%r241, %r240, 1;
	fma.rn.f32 	%f413, %f411, %f410, 0fC0A55DF6;
	fma.rn.f32 	%f414, %f412, %f410, 0f4081E0CF;
	fma.rn.f32 	%f415, %f410, %f409, 0f00000000;
	add.s32 	%r248, %r247, 1;
	fma.rn.f32 	%f447, %f445, %f444, 0fC0A55DF6;
	fma.rn.f32 	%f448, %f446, %f444, 0f4081E0CF;
	fma.rn.f32 	%f449, %f444, %f443, 0f00000000;
	cvt.rzi.s32.f32 	%r265, %f491;
	fma.rn.f32 	%f497, %f496, %f495, 0f3D2AAABB;
	fma.rn.f32 	%f501, %f495, 0fB94D4153, 0f3C0885E4;
	cvt.rzi.s32.f32 	%r288, %f544;
	fma.rn.f32 	%f550, %f549, %f548, 0f3D2AAABB;
	fma.rn.f32 	%f554, %f548, 0fB94D4153, 0f3C0885E4;
	fma.rn.f32 	%f605, %f604, %f602, 0fBEFFFFFF;
	fma.rn.f32 	%f607, %f602, %f601, 0f00000000;
	fma.rn.f32 	%f609, %f608, %f602, 0fBE2AAAA8;
	and.b32  	%r307, %r306, 1;
	fma.rn.f32 	%f657, %f656, %f654, 0fBEFFFFFF;
	fma.rn.f32 	%f659, %f654, %f653, 0f00000000;
	fma.rn.f32 	%f661, %f660, %f654, 0fBE2AAAA8;
	and.b32  	%r337, %r336, 1;
	fma.rn.f32 	%f709, %f708, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f209, %f207, %f203, 0fC09DE9E6;
	fma.rn.f32 	%f210, %f206, %f208, 0f00000000;
	and.b32  	%r188, %r187, 1;
	fma.rn.f32 	%f243, %f241, %f237, 0fC09DE9E6;
	fma.rn.f32 	%f244, %f240, %f242, 0f00000000;
	and.b32  	%r195, %r194, 1;
	fma.rn.f32 	%f278, %f276, %f272, 0fC09DE9E6;
	fma.rn.f32 	%f279, %f275, %f277, 0f00000000;
	and.b32  	%r206, %r205, 1;
	fma.rn.f32 	%f312, %f310, %f306, 0fC09DE9E6;
	fma.rn.f32 	%f313, %f309, %f311, 0f00000000;
	and.b32  	%r213, %r212, 1;
	fma.rn.f32 	%f347, %f345, %f341, 0fC09DE9E6;
	fma.rn.f32 	%f348, %f344, %f346, 0f00000000;
	and.b32  	%r224, %r223, 1;
	fma.rn.f32 	%f381, %f379, %f375, 0fC09DE9E6;
	fma.rn.f32 	%f382, %f378, %f380, 0f00000000;
	and.b32  	%r231, %r230, 1;
	fma.rn.f32 	%f416, %f414, %f410, 0fC09DE9E6;
	fma.rn.f32 	%f417, %f413, %f415, 0f00000000;
	and.b32  	%r242, %r241, 1;
	fma.rn.f32 	%f450, %f448, %f444, 0fC09DE9E6;
	fma.rn.f32 	%f451, %f447, %f449, 0f00000000;
	and.b32  	%r249, %r248, 1;
	fma.rn.f32 	%f498, %f497, %f495, 0fBEFFFFFF;
	fma.rn.f32 	%f500, %f495, %f494, 0f00000000;
	fma.rn.f32 	%f502, %f501, %f495, 0fBE2AAAA8;
	and.b32  	%r266, %r265, 1;
	fma.rn.f32 	%f551, %f550, %f548, 0fBEFFFFFF;
	fma.rn.f32 	%f553, %f548, %f547, 0f00000000;
	fma.rn.f32 	%f555, %f554, %f548, 0fBE2AAAA8;
	and.b32  	%r289, %r288, 1;
	fma.rn.f32 	%f606, %f605, %f602, 0f3F800000;
	fma.rn.f32 	%f610, %f609, %f607, %f601;
	setp.eq.b32 	%p109, %r307, 1;
	fma.rn.f32 	%f658, %f657, %f654, 0f3F800000;
	fma.rn.f32 	%f662, %f661, %f659, %f653;
	setp.eq.b32 	%p129, %r337, 1;
	cvt.rzi.s32.f32 	%r352, %f704;
	fma.rn.f32 	%f710, %f709, %f708, 0f3D2AAABB;
	fma.rn.f32 	%f714, %f708, 0fB94D4153, 0f3C0885E4;
	fma.rn.f32 	%f211, %f209, %f203, 0f3F800000;
	fma.rn.f32 	%f212, %f202, 0f40490FDB, %f210;
	setp.eq.b32 	%p8, %r188, 1;
	fma.rn.f32 	%f245, %f243, %f237, 0f3F800000;
	fma.rn.f32 	%f246, %f236, 0f40490FDB, %f244;
	setp.eq.b32 	%p14, %r195, 1;
	fma.rn.f32 	%f280, %f278, %f272, 0f3F800000;
	fma.rn.f32 	%f281, %f271, 0f40490FDB, %f279;
	setp.eq.b32 	%p20, %r206, 1;
	fma.rn.f32 	%f314, %f312, %f306, 0f3F800000;
	fma.rn.f32 	%f315, %f305, 0f40490FDB, %f313;
	setp.eq.b32 	%p26, %r213, 1;
	fma.rn.f32 	%f349, %f347, %f341, 0f3F800000;
	fma.rn.f32 	%f350, %f340, 0f40490FDB, %f348;
	setp.eq.b32 	%p32, %r224, 1;
	fma.rn.f32 	%f383, %f381, %f375, 0f3F800000;
	fma.rn.f32 	%f384, %f374, 0f40490FDB, %f382;
	setp.eq.b32 	%p38, %r231, 1;
	fma.rn.f32 	%f418, %f416, %f410, 0f3F800000;
	fma.rn.f32 	%f419, %f409, 0f40490FDB, %f417;
	setp.eq.b32 	%p44, %r242, 1;
	fma.rn.f32 	%f452, %f450, %f444, 0f3F800000;
	fma.rn.f32 	%f453, %f443, 0f40490FDB, %f451;
	setp.eq.b32 	%p50, %r249, 1;
	fma.rn.f32 	%f499, %f498, %f495, 0f3F800000;
	fma.rn.f32 	%f503, %f502, %f500, %f494;
	setp.eq.b32 	%p68, %r266, 1;
	fma.rn.f32 	%f552, %f551, %f548, 0f3F800000;
	fma.rn.f32 	%f556, %f555, %f553, %f547;
	setp.eq.b32 	%p88, %r289, 1;
	selp.f32 	%f611, %f606, %f610, %p109;
	and.b32  	%r308, %r306, 2;
	selp.f32 	%f663, %f658, %f662, %p129;
	and.b32  	%r338, %r336, 2;
	fma.rn.f32 	%f711, %f710, %f708, 0fBEFFFFFF;
	fma.rn.f32 	%f713, %f708, %f707, 0f00000000;
	fma.rn.f32 	%f715, %f714, %f708, 0fBE2AAAA8;
	and.b32  	%r353, %r352, 1;
	selp.f32 	%f213, %f211, %f212, %p8;
	and.b32  	%r189, %r187, 2;
	mov.f32 	%f214, 0f00000000;
	selp.f32 	%f247, %f245, %f246, %p14;
	and.b32  	%r196, %r194, 2;
	selp.f32 	%f282, %f280, %f281, %p20;
	and.b32  	%r207, %r205, 2;
	selp.f32 	%f316, %f314, %f315, %p26;
	and.b32  	%r214, %r212, 2;
	selp.f32 	%f351, %f349, %f350, %p32;
	and.b32  	%r225, %r223, 2;
	selp.f32 	%f385, %f383, %f384, %p38;
	and.b32  	%r232, %r230, 2;
	selp.f32 	%f420, %f418, %f419, %p44;
	and.b32  	%r243, %r241, 2;
	selp.f32 	%f454, %f452, %f453, %p50;
	and.b32  	%r250, %r248, 2;
	selp.f32 	%f504, %f499, %f503, %p68;
	and.b32  	%r267, %r265, 2;
	selp.f32 	%f557, %f552, %f556, %p88;
	and.b32  	%r290, %r288, 2;
	setp.eq.s32 	%p110, %r308, 0;
	neg.f32 	%f613, %f611;
	add.s32 	%r309, %r306, 1;
	cvt.rzi.f32.f32 	%f618, %f908;
	setp.eq.s32 	%p130, %r338, 0;
	neg.f32 	%f665, %f663;
	add.s32 	%r339, %r336, 1;
	cvt.rzi.f32.f32 	%f670, %f912;
	fma.rn.f32 	%f712, %f711, %f708, 0f3F800000;
	fma.rn.f32 	%f716, %f715, %f713, %f707;
	setp.eq.b32 	%p150, %r353, 1;
	setp.eq.s32 	%p9, %r189, 0;
	sub.f32 	%f215, %f214, %f213;
	setp.eq.s32 	%p15, %r196, 0;
	sub.f32 	%f249, %f214, %f247;
	setp.eq.s32 	%p21, %r207, 0;
	sub.f32 	%f284, %f214, %f282;
	setp.eq.s32 	%p27, %r214, 0;
	sub.f32 	%f318, %f214, %f316;
	setp.eq.s32 	%p33, %r225, 0;
	sub.f32 	%f353, %f214, %f351;
	setp.eq.s32 	%p39, %r232, 0;
	sub.f32 	%f387, %f214, %f385;
	setp.eq.s32 	%p45, %r243, 0;
	sub.f32 	%f422, %f214, %f420;
	setp.eq.s32 	%p51, %r250, 0;
	sub.f32 	%f456, %f214, %f454;
	setp.eq.s32 	%p69, %r267, 0;
	neg.f32 	%f506, %f504;
	add.s32 	%r268, %r265, 1;
	cvt.rzi.f32.f32 	%f511, %f900;
	setp.eq.s32 	%p89, %r290, 0;
	neg.f32 	%f559, %f557;
	add.s32 	%r291, %r288, 1;
	cvt.rzi.f32.f32 	%f564, %f904;
	selp.f32 	%f612, %f610, %f606, %p109;
	selp.f32 	%f614, %f611, %f613, %p110;
	and.b32  	%r310, %r309, 2;
	setp.eq.f32 	%p112, %f618, %f908;
	mul.f32 	%f619, %f908, 0f00000000;
	selp.f32 	%f664, %f662, %f658, %p129;
	selp.f32 	%f666, %f663, %f665, %p130;
	and.b32  	%r340, %r339, 2;
	setp.eq.f32 	%p132, %f670, %f912;
	mul.f32 	%f671, %f912, 0f00000000;
	selp.f32 	%f717, %f712, %f716, %p150;
	and.b32  	%r354, %r352, 2;
	selp.f32 	%f216, %f213, %f215, %p9;
	selp.f32 	%f250, %f247, %f249, %p15;
	selp.f32 	%f285, %f282, %f284, %p21;
	selp.f32 	%f319, %f316, %f318, %p27;
	selp.f32 	%f354, %f351, %f353, %p33;
	selp.f32 	%f388, %f385, %f387, %p39;
	selp.f32 	%f423, %f420, %f422, %p45;
	selp.f32 	%f457, %f454, %f456, %p51;
	selp.f32 	%f505, %f503, %f499, %p68;
	selp.f32 	%f507, %f504, %f506, %p69;
	and.b32  	%r269, %r268, 2;
	setp.eq.f32 	%p71, %f511, %f900;
	mul.f32 	%f512, %f900, 0f00000000;
	selp.f32 	%f558, %f556, %f552, %p88;
	selp.f32 	%f560, %f557, %f559, %p89;
	and.b32  	%r292, %r291, 2;
	setp.eq.f32 	%p91, %f564, %f904;
	mul.f32 	%f565, %f904, 0f00000000;
	setp.eq.s32 	%p111, %r310, 0;
	sub.f32 	%f616, %f214, %f612;
	selp.f32 	%f92, %f619, %f614, %p112;
	abs.f32 	%f620, %f908;
	setp.eq.s32 	%p131, %r340, 0;
	sub.f32 	%f668, %f214, %f664;
	selp.f32 	%f672, %f671, %f666, %p132;
	abs.f32 	%f673, %f912;
	setp.eq.s32 	%p151, %r354, 0;
	neg.f32 	%f719, %f717;
	add.s32 	%r355, %r352, 1;
	cvt.rzi.f32.f32 	%f724, %f924;
	mul.f32 	%f2, %f216, %f216;
	mul.f32 	%f7, %f250, %f250;
	mul.f32 	%f11, %f285, %f285;
	mul.f32 	%f16, %f319, %f319;
	mul.f32 	%f20, %f354, %f354;
	mul.f32 	%f25, %f388, %f388;
	mul.f32 	%f29, %f423, %f423;
	mul.f32 	%f34, %f457, %f457;
	setp.eq.s32 	%p70, %r269, 0;
	sub.f32 	%f509, %f214, %f505;
	selp.f32 	%f55, %f512, %f507, %p71;
	abs.f32 	%f513, %f900;
	setp.eq.s32 	%p90, %r292, 0;
	sub.f32 	%f562, %f214, %f558;
	selp.f32 	%f566, %f565, %f560, %p91;
	abs.f32 	%f567, %f904;
	selp.f32 	%f617, %f612, %f616, %p111;
	setp.gt.f32 	%p113, %f620, 0f4B800000;
	add.f32 	%f621, %f92, 0f3F800000;
	selp.f32 	%f669, %f664, %f668, %p131;
	setp.gt.f32 	%p133, %f673, 0f4B800000;
	add.f32 	%f674, %f672, 0f3F800000;
	selp.f32 	%f718, %f716, %f712, %p150;
	selp.f32 	%f720, %f717, %f719, %p151;
	and.b32  	%r356, %r355, 2;
	setp.eq.f32 	%p153, %f724, %f924;
	mul.f32 	%f725, %f924, 0f00000000;
	setp.eq.s32 	%p152, %r356, 0;
	sub.f32 	%f722, %f214, %f718;
	selp.f32 	%f165, %f725, %f720, %p153;
	abs.f32 	%f726, %f924;
	shr.u32 	%r12, %r1, 1;
	shr.u32 	%r18, %r1, 3;
	add.f32 	%f749, %f928, %f928;
	mov.b32 	%r371, %f749;
	and.b32  	%r372, %r371, -2147483648;
	or.b32  	%r373, %r372, 1056964608;
	mov.b32 	%f750, %r373;
	add.f32 	%f751, %f749, %f750;
	cvt.rzi.f32.f32 	%f752, %f751;
	abs.f32 	%f753, %f749;
	setp.gt.f32 	%p168, %f753, 0f4B000000;
	selp.f32 	%f754, %f749, %f752, %p168;
	cvt.rzi.f32.f32 	%f755, %f749;
	setp.lt.f32 	%p169, %f753, 0f3F000000;
	selp.f32 	%f756, %f755, %f754, %p169;
	cvt.rzi.s32.f32 	%r374, %f756;
	fma.rn.f32 	%f757, %f756, 0fBF000000, %f928;
	mul.f32 	%f758, %f757, 0f34222169;
	fma.rn.f32 	%f759, %f757, 0f40490FDA, %f758;
	mul.f32 	%f760, %f759, %f759;
	fma.rn.f32 	%f761, %f760, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f762, %f761, %f760, 0f3D2AAABB;
	fma.rn.f32 	%f763, %f762, %f760, 0fBEFFFFFF;
	fma.rn.f32 	%f764, %f763, %f760, 0f3F800000;
	fma.rn.f32 	%f765, %f760, %f759, 0f00000000;
	fma.rn.f32 	%f766, %f760, 0fB94D4153, 0f3C0885E4;
	fma.rn.f32 	%f767, %f766, %f760, 0fBE2AAAA8;
	fma.rn.f32 	%f768, %f767, %f765, %f759;
	and.b32  	%r375, %r374, 1;
	setp.eq.b32 	%p170, %r375, 1;
	selp.f32 	%f769, %f764, %f768, %p170;
	selp.f32 	%f770, %f768, %f764, %p170;
	and.b32  	%r376, %r374, 2;
	setp.eq.s32 	%p171, %r376, 0;
	neg.f32 	%f771, %f769;
	selp.f32 	%f772, %f769, %f771, %p171;
	add.s32 	%r377, %r374, 1;
	and.b32  	%r378, %r377, 2;
	setp.eq.s32 	%p172, %r378, 0;
	sub.f32 	%f774, %f214, %f770;
	cvt.rzi.f32.f32 	%f776, %f928;
	setp.eq.f32 	%p173, %f776, %f928;
	mul.f32 	%f777, %f928, 0f00000000;
	selp.f32 	%f778, %f777, %f772, %p173;
	abs.f32 	%f779, %f928;
	and.b32  	%r379, %r18, 2;
	and.b32  	%r380, %r12, 4;
	or.b32  	%r381, %r16, %r379;
	or.b32  	%r70, %r381, %r380;
	mul.lo.s32 	%r71, %r48, %r70;
	cvt.rn.f32.s32 	%f782, %r71;
	div.approx.f32 	%f114, %f782, %f570;
	abs.f32 	%f916, %f114;
	setp.lt.f32 	%p176, %f916, 0f40000000;
	@%p176 bra 	LBB0_95;
// %bb.84:
	setp.gtu.f32 	%p177, %f916, 0f4B800000;
	@%p177 bra 	LBB0_91;
	bra.uni 	LBB0_85;
LBB0_91:
	mov.b32 	%r73, %f916;
	and.b32  	%r382, %r73, 8388607;
	or.b32  	%r7770, %r382, 1065353216;
	mov.b32 	%f915, %r7770;
	add.s32 	%r383, %r73, -1073741824;
	and.b32  	%r7771, %r383, -8388608;
	setp.eq.s32 	%p183, %r7771, 0;
	@%p183 bra 	LBB0_94;
// %bb.92:                              // %__nv_fmaf_rn.exit4.i.i.i1274.preheader
	mov.f32 	%f793, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f792,%f793;
	// end inline asm
LBB0_93:                                // %__nv_fmaf_rn.exit4.i.i.i1274
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r384, %r7771, 192937984;
	add.s32 	%r385, %r384, %r7770;
	mov.b32 	%f794, %r385;
	mul.f32 	%f795, %f792, %f794;
	sub.f32 	%f796, %f794, %f795;
	fma.rn.f32 	%f797, %f796, %f792, %f795;
	sub.f32 	%f798, %f794, %f797;
	fma.rz.f32 	%f799, %f798, %f792, %f797;
	cvt.rzi.f32.f32 	%f800, %f799;
	sub.f32 	%f915, %f794, %f800;
	sub.s32 	%r7771, %r7771, %r384;
	mov.b32 	%r7770, %f915;
	setp.ne.s32 	%p184, %r7771, 0;
	setp.ne.s32 	%p185, %r7770, 0;
	and.pred  	%p186, %p184, %p185;
	@%p186 bra 	LBB0_93;
LBB0_94:                                // %__internal_fmodf_slowpath_mod.exit.i.i1276
	setp.gt.u32 	%p187, %r73, 2139095039;
	selp.f32 	%f801, 0f7FFFFFFF, 0f4B800000, %p187;
	mul.f32 	%f802, %f915, 0f34000000;
	mul.f32 	%f916, %f801, %f802;
	bra.uni 	LBB0_95;
LBB0_85:                                // %__nv_fast_fdividef.exit.i.i.i1246
	div.approx.f32 	%f785, %f916, %f185;
	cvt.rzi.f32.f32 	%f914, %f785;
	fma.rn.f32 	%f117, %f914, 0fC0000000, %f916;
	mov.b32 	%r72, %f117;
	setp.lt.u32 	%p178, %r72, 1073741824;
	@%p178 bra 	LBB0_90;
// %bb.86:
	setp.lt.u32 	%p179, %r72, -2147483647;
	@%p179 bra 	LBB0_88;
// %bb.87:
	add.f32 	%f790, %f914, 0fBF800000;
	setp.lt.f32 	%p182, %f117, 0fC0000000;
	add.f32 	%f791, %f790, 0fBF800000;
	selp.f32 	%f914, %f791, %f790, %p182;
	bra.uni 	LBB0_90;
LBB0_88:
	add.f32 	%f914, %f914, 0f3F800000;
	setp.ltu.f32 	%p180, %f117, 0f40800000;
	@%p180 bra 	LBB0_90;
// %bb.89:                              // %__nv_fmaf_rn.exit.i.i.i1251
	add.f32 	%f786, %f914, 0f3F800000;
	fma.rn.f32 	%f788, %f185, 0fC0400000, %f117;
	setp.ge.f32 	%p181, %f788, 0f00000000;
	add.f32 	%f789, %f786, 0f3F800000;
	selp.f32 	%f914, %f789, %f786, %p181;
LBB0_90:                                // %__internal_fmodf_fastpath_quot.exit.i.i1255
	fma.rn.f32 	%f916, %f914, 0fC0000000, %f916;
LBB0_95:                                // %__internal_fmodf_kernel.exit.i1280
	mul.f32 	%f220, %f2, 0f3C0AF64E;
	mul.f32 	%f254, %f7, 0f3C0AF64E;
	mul.f32 	%f289, %f11, 0f3C0AF64E;
	mul.f32 	%f323, %f16, 0f3C0AF64E;
	mul.f32 	%f358, %f20, 0f3C0AF64E;
	mul.f32 	%f392, %f25, 0f3C0AF64E;
	mul.f32 	%f427, %f29, 0f3C0AF64E;
	mul.f32 	%f460, %f34, 0f3C0AF64E;
	selp.f32 	%f510, %f505, %f509, %p70;
	setp.gt.f32 	%p72, %f513, 0f4B800000;
	add.f32 	%f514, %f55, 0f3F800000;
	selp.f32 	%f563, %f558, %f562, %p90;
	setp.gt.f32 	%p92, %f567, 0f4B800000;
	add.f32 	%f568, %f566, 0f3F800000;
	selp.f32 	%f93, %f621, %f617, %p113;
	selp.f32 	%f675, %f674, %f669, %p133;
	selp.f32 	%f723, %f718, %f722, %p152;
	setp.gt.f32 	%p154, %f726, 0f4B800000;
	add.f32 	%f727, %f165, 0f3F800000;
	selp.f32 	%f775, %f770, %f774, %p172;
	setp.gt.f32 	%p174, %f779, 0f4B800000;
	add.f32 	%f780, %f778, 0f3F800000;
	abs.f32 	%f803, %f916;
	setp.gtu.f32 	%p188, %f803, 0f7F800000;
	@%p188 bra 	LBB0_97;
// %bb.96:
	mov.b32 	%r386, %f114;
	and.b32  	%r387, %r386, -2147483648;
	mov.b32 	%r388, %f916;
	or.b32  	%r389, %r387, %r388;
	mov.b32 	%f916, %r389;
LBB0_97:                                // %__nv_fmodf.exit1281
	mul.f32 	%f6, %f220, %f890;
	mul.f32 	%f255, %f254, %f891;
	mul.f32 	%f15, %f289, %f892;
	mul.f32 	%f324, %f323, %f893;
	mul.f32 	%f24, %f358, %f894;
	mul.f32 	%f393, %f392, %f895;
	mul.f32 	%f33, %f427, %f896;
	mul.f32 	%f461, %f460, %f897;
	selp.f32 	%f56, %f514, %f510, %p72;
	selp.f32 	%f569, %f568, %f563, %p92;
	mov.b32 	%r323, %f675;
	mov.b32 	%r322, %f93;
	mov.b32 	%r329, %f672;
	mov.b32 	%r328, %f92;
	selp.f32 	%f166, %f727, %f723, %p154;
	selp.f32 	%f781, %f780, %f775, %p174;
	add.f32 	%f804, %f916, %f916;
	mov.b32 	%r390, %f804;
	and.b32  	%r391, %r390, -2147483648;
	or.b32  	%r392, %r391, 1056964608;
	mov.b32 	%f805, %r392;
	add.f32 	%f806, %f804, %f805;
	cvt.rzi.f32.f32 	%f807, %f806;
	abs.f32 	%f808, %f804;
	setp.gt.f32 	%p189, %f808, 0f4B000000;
	selp.f32 	%f809, %f804, %f807, %p189;
	cvt.rzi.f32.f32 	%f810, %f804;
	setp.lt.f32 	%p190, %f808, 0f3F000000;
	selp.f32 	%f811, %f810, %f809, %p190;
	cvt.rzi.s32.f32 	%r393, %f811;
	fma.rn.f32 	%f812, %f811, 0fBF000000, %f916;
	mul.f32 	%f813, %f812, 0f34222169;
	fma.rn.f32 	%f814, %f812, 0f40490FDA, %f813;
	mul.f32 	%f815, %f814, %f814;
	fma.rn.f32 	%f816, %f815, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f817, %f816, %f815, 0f3D2AAABB;
	fma.rn.f32 	%f818, %f817, %f815, 0fBEFFFFFF;
	fma.rn.f32 	%f819, %f818, %f815, 0f3F800000;
	fma.rn.f32 	%f820, %f815, %f814, 0f00000000;
	fma.rn.f32 	%f821, %f815, 0fB94D4153, 0f3C0885E4;
	fma.rn.f32 	%f822, %f821, %f815, 0fBE2AAAA8;
	fma.rn.f32 	%f823, %f822, %f820, %f814;
	and.b32  	%r394, %r393, 1;
	setp.eq.b32 	%p191, %r394, 1;
	selp.f32 	%f824, %f819, %f823, %p191;
	selp.f32 	%f825, %f823, %f819, %p191;
	and.b32  	%r395, %r393, 2;
	setp.eq.s32 	%p192, %r395, 0;
	neg.f32 	%f826, %f824;
	selp.f32 	%f827, %f824, %f826, %p192;
	add.s32 	%r396, %r393, 1;
	and.b32  	%r397, %r396, 2;
	setp.eq.s32 	%p193, %r397, 0;
	sub.f32 	%f829, %f214, %f825;
	selp.f32 	%f830, %f825, %f829, %p193;
	cvt.rzi.f32.f32 	%f831, %f916;
	setp.eq.f32 	%p194, %f831, %f916;
	mul.f32 	%f832, %f916, 0f00000000;
	selp.f32 	%f131, %f832, %f827, %p194;
	abs.f32 	%f833, %f916;
	setp.gt.f32 	%p195, %f833, 0f4B800000;
	add.f32 	%f834, %f131, 0f3F800000;
	shl.b32 	%r398, %r70, 3;
	sub.s32 	%r399, %r71, %r398;
	cvt.rn.f32.s32 	%f835, %r399;
	div.approx.f32 	%f133, %f835, %f570;
	abs.f32 	%f920, %f133;
	setp.lt.f32 	%p196, %f920, 0f40000000;
	@%p196 bra 	LBB0_109;
// %bb.98:
	setp.gtu.f32 	%p197, %f920, 0f4B800000;
	@%p197 bra 	LBB0_105;
	bra.uni 	LBB0_99;
LBB0_105:
	mov.b32 	%r81, %f920;
	and.b32  	%r400, %r81, 8388607;
	or.b32  	%r7772, %r400, 1065353216;
	mov.b32 	%f919, %r7772;
	add.s32 	%r401, %r81, -1073741824;
	and.b32  	%r7773, %r401, -8388608;
	setp.eq.s32 	%p203, %r7773, 0;
	@%p203 bra 	LBB0_108;
// %bb.106:                             // %__nv_fmaf_rn.exit4.i.i.i1320.preheader
	mov.f32 	%f846, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f845,%f846;
	// end inline asm
LBB0_107:                               // %__nv_fmaf_rn.exit4.i.i.i1320
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r402, %r7773, 192937984;
	add.s32 	%r403, %r402, %r7772;
	mov.b32 	%f847, %r403;
	mul.f32 	%f848, %f845, %f847;
	sub.f32 	%f849, %f847, %f848;
	fma.rn.f32 	%f850, %f849, %f845, %f848;
	sub.f32 	%f851, %f847, %f850;
	fma.rz.f32 	%f852, %f851, %f845, %f850;
	cvt.rzi.f32.f32 	%f853, %f852;
	sub.f32 	%f919, %f847, %f853;
	sub.s32 	%r7773, %r7773, %r402;
	mov.b32 	%r7772, %f919;
	setp.ne.s32 	%p204, %r7773, 0;
	setp.ne.s32 	%p205, %r7772, 0;
	and.pred  	%p206, %p204, %p205;
	@%p206 bra 	LBB0_107;
LBB0_108:                               // %__internal_fmodf_slowpath_mod.exit.i.i1322
	setp.gt.u32 	%p207, %r81, 2139095039;
	selp.f32 	%f854, 0f7FFFFFFF, 0f4B800000, %p207;
	mul.f32 	%f855, %f919, 0f34000000;
	mul.f32 	%f920, %f854, %f855;
	bra.uni 	LBB0_109;
LBB0_99:                                // %__nv_fast_fdividef.exit.i.i.i1292
	div.approx.f32 	%f838, %f920, %f185;
	cvt.rzi.f32.f32 	%f918, %f838;
	fma.rn.f32 	%f136, %f918, 0fC0000000, %f920;
	mov.b32 	%r80, %f136;
	setp.lt.u32 	%p198, %r80, 1073741824;
	@%p198 bra 	LBB0_104;
// %bb.100:
	setp.lt.u32 	%p199, %r80, -2147483647;
	@%p199 bra 	LBB0_102;
// %bb.101:
	add.f32 	%f843, %f918, 0fBF800000;
	setp.lt.f32 	%p202, %f136, 0fC0000000;
	add.f32 	%f844, %f843, 0fBF800000;
	selp.f32 	%f918, %f844, %f843, %p202;
	bra.uni 	LBB0_104;
LBB0_102:
	add.f32 	%f918, %f918, 0f3F800000;
	setp.ltu.f32 	%p200, %f136, 0f40800000;
	@%p200 bra 	LBB0_104;
// %bb.103:                             // %__nv_fmaf_rn.exit.i.i.i1297
	add.f32 	%f839, %f918, 0f3F800000;
	fma.rn.f32 	%f841, %f185, 0fC0400000, %f136;
	setp.ge.f32 	%p201, %f841, 0f00000000;
	add.f32 	%f842, %f839, 0f3F800000;
	selp.f32 	%f918, %f842, %f839, %p201;
LBB0_104:                               // %__internal_fmodf_fastpath_quot.exit.i.i1301
	fma.rn.f32 	%f920, %f918, 0fC0000000, %f920;
LBB0_109:                               // %__internal_fmodf_kernel.exit.i1326
	mov.b32 	%r199, %f255;
	mov.b32 	%r198, %f6;
	mov.b32 	%r217, %f324;
	mov.b32 	%r216, %f15;
	mov.b32 	%r235, %f393;
	mov.b32 	%r234, %f24;
	mov.b32 	%r253, %f461;
	mov.b32 	%r252, %f33;
	mov.b32 	%r281, %f569;
	mov.b32 	%r280, %f56;
	mov.b32 	%r284, %f566;
	mov.b32 	%r283, %f55;
	xor.b32  	%r326, %r329, -2147483648;
	xor.b32  	%r325, %r328, -2147483648;
	mov.b32 	%r367, %f781;
	mov.b32 	%r366, %f166;
	mov.b32 	%r370, %f778;
	mov.b32 	%r369, %f165;
	and.b32  	%r8, %r1, 16;
	selp.f32 	%f132, %f834, %f830, %p195;
	abs.f32 	%f856, %f920;
	setp.gtu.f32 	%p208, %f856, 0f7F800000;
	@%p208 bra 	LBB0_111;
// %bb.110:
	mov.b32 	%r404, %f133;
	and.b32  	%r405, %r404, -2147483648;
	mov.b32 	%r406, %f920;
	or.b32  	%r407, %r405, %r406;
	mov.b32 	%f920, %r407;
LBB0_111:                               // %__nv_fmodf.exit1327
	ld.param.u64 	%rd2, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_3];
	ld.param.u64 	%rd3, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_4];
	// begin inline asm
	cvt.rn.f16x2.f32 %r197, %r199, %r198;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r215, %r217, %r216;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r233, %r235, %r234;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r251, %r253, %r252;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r279, %r281, %r280;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r282, %r284, %r283;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r321, %r323, %r322;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r324, %r326, %r325;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r327, %r329, %r328;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r330, %r323, %r322;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r365, %r367, %r366;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r368, %r370, %r369;
	// end inline asm
	add.f32 	%f857, %f920, %f920;
	mov.b32 	%r421, %f857;
	and.b32  	%r422, %r421, -2147483648;
	or.b32  	%r423, %r422, 1056964608;
	mov.b32 	%f858, %r423;
	add.f32 	%f859, %f857, %f858;
	cvt.rzi.f32.f32 	%f860, %f859;
	abs.f32 	%f861, %f857;
	setp.gt.f32 	%p209, %f861, 0f4B000000;
	selp.f32 	%f862, %f857, %f860, %p209;
	cvt.rzi.f32.f32 	%f863, %f857;
	setp.lt.f32 	%p210, %f861, 0f3F000000;
	selp.f32 	%f864, %f863, %f862, %p210;
	cvt.rzi.s32.f32 	%r424, %f864;
	fma.rn.f32 	%f865, %f864, 0fBF000000, %f920;
	mul.f32 	%f866, %f865, 0f34222169;
	fma.rn.f32 	%f867, %f865, 0f40490FDA, %f866;
	mul.f32 	%f868, %f867, %f867;
	fma.rn.f32 	%f869, %f868, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f870, %f869, %f868, 0f3D2AAABB;
	fma.rn.f32 	%f871, %f870, %f868, 0fBEFFFFFF;
	fma.rn.f32 	%f872, %f871, %f868, 0f3F800000;
	fma.rn.f32 	%f873, %f868, %f867, 0f00000000;
	fma.rn.f32 	%f874, %f868, 0fB94D4153, 0f3C0885E4;
	fma.rn.f32 	%f875, %f874, %f868, 0fBE2AAAA8;
	fma.rn.f32 	%f876, %f875, %f873, %f867;
	and.b32  	%r425, %r424, 1;
	setp.eq.b32 	%p211, %r425, 1;
	selp.f32 	%f877, %f872, %f876, %p211;
	selp.f32 	%f878, %f876, %f872, %p211;
	and.b32  	%r426, %r424, 2;
	setp.eq.s32 	%p212, %r426, 0;
	neg.f32 	%f879, %f877;
	selp.f32 	%f880, %f877, %f879, %p212;
	add.s32 	%r427, %r424, 1;
	and.b32  	%r428, %r427, 2;
	setp.eq.s32 	%p213, %r428, 0;
	sub.f32 	%f882, %f214, %f878;
	selp.f32 	%f883, %f878, %f882, %p213;
	cvt.rzi.f32.f32 	%f884, %f920;
	setp.eq.f32 	%p214, %f884, %f920;
	mul.f32 	%f885, %f920, 0f00000000;
	selp.f32 	%f886, %f885, %f880, %p214;
	abs.f32 	%f887, %f920;
	setp.gt.f32 	%p215, %f887, 0f4B800000;
	add.f32 	%f888, %f886, 0f3F800000;
	selp.f32 	%f889, %f888, %f883, %p215;
	mov.b32 	%r410, %f889;
	mov.b32 	%r409, %f132;
	// begin inline asm
	cvt.rn.f16x2.f32 %r88, %r410, %r409;
	// end inline asm
	mov.b32 	%r416, %f886;
	xor.b32  	%r413, %r416, -2147483648;
	mov.b32 	%r415, %f131;
	xor.b32  	%r412, %r415, -2147483648;
	// begin inline asm
	cvt.rn.f16x2.f32 %r89, %r413, %r412;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r90, %r416, %r415;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r91, %r410, %r409;
	// end inline asm
	or.b32  	%r429, %r8, %r2;
	or.b32  	%r92, %r429, %r9;
	shl.b32 	%r430, %r4, 5;
	and.b32  	%r431, %r7, 28;
	and.b32  	%r432, %r430, 96;
	or.b32  	%r93, %r432, %r431;
	and.b32  	%r94, %r5, 2048;
	shl.b32 	%r433, %r4, 4;
	and.b32  	%r95, %r433, 1920;
	and.b32  	%r96, %r1, 8;
	mul.lo.s32 	%r434, %r17, 65;
	bfe.u32 	%r435, %r2, 2, 1;
	shr.u32 	%r436, %r2, 1;
	bfe.u32 	%r437, %r2, 1, 1;
	and.b32  	%r438, %r2, 1;
	shr.u32 	%r439, %r2, 3;
	shl.b32 	%r440, %r1, 4;
	or.b32  	%r441, %r96, %r440;
	shr.u32 	%r442, %r441, 2;
	and.b32  	%r443, %r442, 30;
	mad.lo.s32 	%r444, %r438, 1040, %r434;
	mad.lo.s32 	%r445, %r439, 130, %r444;
	mad.lo.s32 	%r446, %r435, 260, %r445;
	mad.lo.s32 	%r447, %r437, 520, %r446;
	add.s32 	%r448, %r447, %r443;
	mul.wide.u32 	%rd63, %r448, 4;
	mov.u64 	%rd64, shmem;
	add.s64 	%rd5, %rd64, %rd63;
	add.s32 	%r449, %r448, 32;
	mul.wide.u32 	%rd65, %r449, 4;
	add.s64 	%rd6, %rd64, %rd65;
	add.s32 	%r450, %r448, 1;
	mul.wide.u32 	%rd66, %r450, 4;
	add.s64 	%rd7, %rd64, %rd66;
	add.s32 	%r451, %r448, 33;
	mul.wide.u32 	%rd67, %r451, 4;
	add.s64 	%rd8, %rd64, %rd67;
	and.b32  	%r452, %r3, 32;
	mul.lo.s32 	%r453, %r13, 65;
	mul.lo.s32 	%r454, %r16, 260;
	mul.lo.s32 	%r455, %r17, 520;
	mul.lo.s32 	%r456, %r19, 1040;
	mul.lo.s32 	%r457, %r14, 130;
	or.b32  	%r458, %r452, %r436;
	add.s32 	%r459, %r458, %r455;
	add.s32 	%r460, %r459, %r457;
	add.s32 	%r461, %r460, %r453;
	add.s32 	%r462, %r461, %r454;
	add.s32 	%r463, %r462, %r456;
	or.b32  	%r464, %r436, 8;
	add.s32 	%r465, %r455, %r452;
	add.s32 	%r466, %r465, %r457;
	add.s32 	%r467, %r466, %r464;
	add.s32 	%r468, %r467, %r453;
	add.s32 	%r469, %r468, %r454;
	add.s32 	%r470, %r469, %r456;
	or.b32  	%r471, %r436, 16;
	add.s32 	%r472, %r466, %r471;
	add.s32 	%r473, %r472, %r453;
	add.s32 	%r474, %r473, %r454;
	add.s32 	%r475, %r474, %r456;
	or.b32  	%r476, %r436, 24;
	add.s32 	%r477, %r466, %r476;
	add.s32 	%r478, %r477, %r453;
	add.s32 	%r479, %r478, %r454;
	add.s32 	%r480, %r479, %r456;
	mul.lo.s32 	%r481, %r10, 65;
	add.s32 	%r482, %r458, %r481;
	or.b32  	%r483, %r464, %r452;
	add.s32 	%r484, %r483, %r481;
	or.b32  	%r485, %r471, %r452;
	add.s32 	%r486, %r485, %r481;
	or.b32  	%r487, %r476, %r452;
	add.s32 	%r488, %r487, %r481;
	shl.b32 	%r489, %r2, 1;
	or.b32  	%r490, %r489, %r17;
	mul.lo.s32 	%r491, %r490, 65;
	add.s32 	%r492, %r443, %r491;
	mul.wide.u32 	%rd68, %r492, 4;
	add.s64 	%rd9, %rd64, %rd68;
	cvt.u64.u32 	%rd69, %r443;
	cvt.u64.u32 	%rd70, %r491;
	add.s64 	%rd71, %rd70, %rd69;
	shl.b64 	%rd72, %rd71, 2;
	add.s64 	%rd10, %rd64, %rd72;
	shl.b32 	%r493, %r2, 2;
	or.b32  	%r494, %r493, %r18;
	shl.b32 	%r495, %r4, 3;
	and.b32  	%r496, %r495, 960;
	or.b32  	%r497, %r494, %r496;
	shl.b32 	%r498, %r497, 7;
	shl.b32 	%r499, %r4, 15;
	and.b32  	%r500, %r499, 131072;
	or.b32  	%r501, %r498, %r93;
	or.b32  	%r502, %r501, %r500;
	add.s32 	%r97, %r502, -786432;
	mul.wide.u32 	%rd11, %r488, 4;
	mul.wide.u32 	%rd12, %r486, 4;
	mul.wide.u32 	%rd13, %r484, 4;
	mul.wide.u32 	%rd14, %r482, 4;
	mul.wide.u32 	%rd15, %r480, 4;
	mul.wide.u32 	%rd16, %r475, 4;
	mul.wide.u32 	%rd17, %r470, 4;
	mul.wide.u32 	%rd18, %r463, 4;
	mov.u32 	%r7788, 0;
	setp.eq.s32 	%p216, %r96, 0;
	mov.u16 	%rs1176, 25600;
	mov.u16 	%rs1072, 21504;
	mov.u16 	%rs1184, 18432;
	mov.u16 	%rs1142, -14592;
	mov.u32 	%r7789, %r7788;
	mov.u32 	%r7790, %r7788;
	mov.u32 	%r7791, %r7788;
	mov.u32 	%r7792, %r7788;
	mov.u32 	%r7793, %r7788;
	mov.u32 	%r7794, %r7788;
	mov.u32 	%r7795, %r7788;
	mov.u32 	%r7796, %r7788;
	mov.u32 	%r7797, %r7788;
	mov.u32 	%r7798, %r7788;
	mov.u32 	%r7799, %r7788;
	mov.u32 	%r7786, %r7788;
	bra.uni 	LBB0_112;
LBB0_116:                               // %L29335
                                        //   in Loop: Header=BB0_112 Depth=1
	add.s32 	%r7786, %r110, 256;
	setp.gt.s32 	%p221, %r6, %r7786;
	setp.ne.s32 	%p222, %r110, 32512;
	and.pred  	%p223, %p222, %p221;
	@%p223 bra 	LBB0_112;
	bra.uni 	LBB0_117;
LBB0_112:                               // %L1246
                                        // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_113 Depth 2
	mov.u32 	%r110, %r7786;
	or.b32  	%r520, %r92, %r110;
	shl.b32 	%r521, %r520, 12;
	or.b32  	%r522, %r521, %r93;
	or.b32  	%r523, %r522, %r94;
	or.b32  	%r524, %r523, %r95;
	mul.wide.s32 	%rd74, %r524, 4;
	add.s64 	%rd75, %rd2, %rd74;
	ld.global.v4.u32 	{%r525, %r526, %r527, %r528}, [%rd75];
	selp.b32 	%r529, %r527, %r525, %p216;
	shfl.sync.bfly.b32	%r530, %r529, 8, 31, -1;
	selp.b32 	%r504, %r525, %r530, %p216;
	selp.b32 	%r505, %r530, %r527, %p216;
	selp.b32 	%r531, %r528, %r526, %p216;
	shfl.sync.bfly.b32	%r532, %r531, 8, 31, -1;
	selp.b32 	%r512, %r526, %r532, %p216;
	selp.b32 	%r513, %r532, %r528, %p216;
	mov.u32 	%r514, 21520;
	// begin inline asm
	prmt.b32 %r503, %r504, %r505, %r514;
	// end inline asm
	mov.u32 	%r518, 30258;
	// begin inline asm
	prmt.b32 %r507, %r504, %r505, %r518;
	// end inline asm
	// begin inline asm
	prmt.b32 %r511, %r512, %r513, %r514;
	// end inline asm
	// begin inline asm
	prmt.b32 %r515, %r512, %r513, %r518;
	// end inline asm
	st.shared.u32 	[%rd5], %r503;
	st.shared.u32 	[%rd6], %r507;
	st.shared.u32 	[%rd7], %r511;
	st.shared.u32 	[%rd8], %r515;
	bar.sync 	0;
	mov.u32 	%r7787, 256;
	mov.u64 	%rd86, %rd64;
LBB0_113:                               // %L4371
                                        //   Parent Loop BB0_112 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	add.s64 	%rd76, %rd86, %rd18;
	ld.shared.u32 	%r7717, [%rd76];
	add.s64 	%rd77, %rd86, %rd17;
	ld.shared.u32 	%r7718, [%rd77];
	add.s64 	%rd78, %rd86, %rd16;
	ld.shared.u32 	%r7719, [%rd78];
	add.s64 	%rd79, %rd86, %rd15;
	ld.shared.u32 	%r7720, [%rd79];
	// begin inline asm
	mov.b32 %r538, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r549, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r537, %r7717, -2004318072;
	mov.u32 	%r536, 983055;
	// begin inline asm
	lop3.b32 %r535, %r536, %r537, %r538, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r539, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r540, %r538, %r539;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r543, %r535, %r540;
	// end inline asm
	mov.u32 	%r547, 15728880;
	// begin inline asm
	lop3.b32 %r546, %r547, %r537, %r549, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r550, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r551, %r549, %r550;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r554, %r546, %r551;
	// end inline asm
	shr.u32 	%r559, %r537, 8;
	// begin inline asm
	lop3.b32 %r557, %r536, %r559, %r538, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r561, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r562, %r538, %r561;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r565, %r557, %r562;
	// end inline asm
	// begin inline asm
	lop3.b32 %r568, %r547, %r559, %r549, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r572, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r573, %r549, %r572;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r576, %r568, %r573;
	// end inline asm
	// begin inline asm
	mov.b32 %r584, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r595, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r583, %r7718, -2004318072;
	// begin inline asm
	lop3.b32 %r581, %r536, %r583, %r584, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r585, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r586, %r584, %r585;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r589, %r581, %r586;
	// end inline asm
	// begin inline asm
	lop3.b32 %r592, %r547, %r583, %r595, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r596, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r597, %r595, %r596;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r600, %r592, %r597;
	// end inline asm
	shr.u32 	%r605, %r583, 8;
	// begin inline asm
	lop3.b32 %r603, %r536, %r605, %r584, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r607, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r608, %r584, %r607;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r611, %r603, %r608;
	// end inline asm
	// begin inline asm
	lop3.b32 %r614, %r547, %r605, %r595, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r618, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r619, %r595, %r618;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r622, %r614, %r619;
	// end inline asm
	// begin inline asm
	mov.b32 %r630, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r641, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r629, %r7719, -2004318072;
	// begin inline asm
	lop3.b32 %r627, %r536, %r629, %r630, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r631, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r632, %r630, %r631;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r635, %r627, %r632;
	// end inline asm
	// begin inline asm
	lop3.b32 %r638, %r547, %r629, %r641, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r642, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r643, %r641, %r642;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r646, %r638, %r643;
	// end inline asm
	shr.u32 	%r651, %r629, 8;
	// begin inline asm
	lop3.b32 %r649, %r536, %r651, %r630, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r653, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r654, %r630, %r653;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r657, %r649, %r654;
	// end inline asm
	// begin inline asm
	lop3.b32 %r660, %r547, %r651, %r641, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r664, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r665, %r641, %r664;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r668, %r660, %r665;
	// end inline asm
	// begin inline asm
	mov.b32 %r676, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r687, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r675, %r7720, -2004318072;
	// begin inline asm
	lop3.b32 %r673, %r536, %r675, %r676, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r677, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r678, %r676, %r677;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r681, %r673, %r678;
	// end inline asm
	// begin inline asm
	lop3.b32 %r684, %r547, %r675, %r687, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r688, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r689, %r687, %r688;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r692, %r684, %r689;
	// end inline asm
	shr.u32 	%r697, %r675, 8;
	// begin inline asm
	lop3.b32 %r695, %r536, %r697, %r676, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r699, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r700, %r676, %r699;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r703, %r695, %r700;
	// end inline asm
	// begin inline asm
	lop3.b32 %r706, %r547, %r697, %r687, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r710, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r711, %r687, %r710;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r714, %r706, %r711;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r717, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r719, %r717, %r543;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r722, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r724, %r722, %r554;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r727, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r729, %r727, %r565;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r732, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r734, %r732, %r576;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r737, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r739, %r737, %r589;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r742, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r744, %r742, %r600;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r747, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r749, %r747, %r611;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r752, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r754, %r752, %r622;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r757, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r759, %r757, %r635;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r762, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r764, %r762, %r646;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r767, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r769, %r767, %r657;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r772, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r774, %r772, %r668;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r777, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r779, %r777, %r681;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r782, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r784, %r782, %r692;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r787, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r789, %r787, %r703;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r792, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r794, %r792, %r714;
	// end inline asm
	// begin inline asm
	mov.b32 %r802, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r813, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r801, %r7788, -2004318072;
	// begin inline asm
	lop3.b32 %r799, %r536, %r801, %r802, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r803, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r804, %r802, %r803;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r807, %r799, %r804;
	// end inline asm
	// begin inline asm
	lop3.b32 %r810, %r547, %r801, %r813, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r814, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r815, %r813, %r814;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r818, %r810, %r815;
	// end inline asm
	shr.u32 	%r823, %r801, 8;
	// begin inline asm
	lop3.b32 %r821, %r536, %r823, %r802, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r825, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r826, %r802, %r825;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r829, %r821, %r826;
	// end inline asm
	// begin inline asm
	lop3.b32 %r832, %r547, %r823, %r813, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r836, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r837, %r813, %r836;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r840, %r832, %r837;
	// end inline asm
	// begin inline asm
	mov.b32 %r848, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r859, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r847, %r7789, -2004318072;
	// begin inline asm
	lop3.b32 %r845, %r536, %r847, %r848, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r849, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r850, %r848, %r849;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r853, %r845, %r850;
	// end inline asm
	// begin inline asm
	lop3.b32 %r856, %r547, %r847, %r859, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r860, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r861, %r859, %r860;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r864, %r856, %r861;
	// end inline asm
	shr.u32 	%r869, %r847, 8;
	// begin inline asm
	lop3.b32 %r867, %r536, %r869, %r848, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r871, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r872, %r848, %r871;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r875, %r867, %r872;
	// end inline asm
	// begin inline asm
	lop3.b32 %r878, %r547, %r869, %r859, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r882, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r883, %r859, %r882;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r886, %r878, %r883;
	// end inline asm
	// begin inline asm
	mov.b32 %r894, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r905, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r893, %r7790, -2004318072;
	// begin inline asm
	lop3.b32 %r891, %r536, %r893, %r894, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r895, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r896, %r894, %r895;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r899, %r891, %r896;
	// end inline asm
	// begin inline asm
	lop3.b32 %r902, %r547, %r893, %r905, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r906, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r907, %r905, %r906;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r910, %r902, %r907;
	// end inline asm
	shr.u32 	%r915, %r893, 8;
	// begin inline asm
	lop3.b32 %r913, %r536, %r915, %r894, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r917, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r918, %r894, %r917;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r921, %r913, %r918;
	// end inline asm
	// begin inline asm
	lop3.b32 %r924, %r547, %r915, %r905, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r928, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r929, %r905, %r928;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r932, %r924, %r929;
	// end inline asm
	// begin inline asm
	mov.b32 %r940, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r951, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r939, %r7791, -2004318072;
	// begin inline asm
	lop3.b32 %r937, %r536, %r939, %r940, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r941, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r942, %r940, %r941;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r945, %r937, %r942;
	// end inline asm
	// begin inline asm
	lop3.b32 %r948, %r547, %r939, %r951, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r952, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r953, %r951, %r952;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r956, %r948, %r953;
	// end inline asm
	shr.u32 	%r961, %r939, 8;
	// begin inline asm
	lop3.b32 %r959, %r536, %r961, %r940, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r963, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r964, %r940, %r963;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r967, %r959, %r964;
	// end inline asm
	// begin inline asm
	lop3.b32 %r970, %r547, %r961, %r951, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r974, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r975, %r951, %r974;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r978, %r970, %r975;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r981, %r197, %r807, %r719;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r985, %r197, %r818, %r724;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r989, %r197, %r829, %r729;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r993, %r197, %r840, %r734;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r997, %r197, %r853, %r739;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1001, %r197, %r864, %r744;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1005, %r197, %r875, %r749;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1009, %r197, %r886, %r754;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1013, %r197, %r899, %r759;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1017, %r197, %r910, %r764;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1021, %r197, %r921, %r769;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1025, %r197, %r932, %r774;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1029, %r197, %r945, %r779;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1033, %r197, %r956, %r784;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1037, %r197, %r967, %r789;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1041, %r197, %r978, %r794;
	// end inline asm
	// begin inline asm
	mov.b32 %r1050, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1061, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1049, %r7792, -2004318072;
	// begin inline asm
	lop3.b32 %r1047, %r536, %r1049, %r1050, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1051, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1052, %r1050, %r1051;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1055, %r1047, %r1052;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1058, %r547, %r1049, %r1061, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1062, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1063, %r1061, %r1062;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1066, %r1058, %r1063;
	// end inline asm
	shr.u32 	%r1071, %r1049, 8;
	// begin inline asm
	lop3.b32 %r1069, %r536, %r1071, %r1050, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1073, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1074, %r1050, %r1073;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1077, %r1069, %r1074;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1080, %r547, %r1071, %r1061, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1084, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1085, %r1061, %r1084;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1088, %r1080, %r1085;
	// end inline asm
	// begin inline asm
	mov.b32 %r1096, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1107, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1095, %r7793, -2004318072;
	// begin inline asm
	lop3.b32 %r1093, %r536, %r1095, %r1096, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1097, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1098, %r1096, %r1097;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1101, %r1093, %r1098;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1104, %r547, %r1095, %r1107, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1108, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1109, %r1107, %r1108;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1112, %r1104, %r1109;
	// end inline asm
	shr.u32 	%r1117, %r1095, 8;
	// begin inline asm
	lop3.b32 %r1115, %r536, %r1117, %r1096, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1119, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1120, %r1096, %r1119;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1123, %r1115, %r1120;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1126, %r547, %r1117, %r1107, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1130, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1131, %r1107, %r1130;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1134, %r1126, %r1131;
	// end inline asm
	// begin inline asm
	mov.b32 %r1142, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1153, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1141, %r7794, -2004318072;
	// begin inline asm
	lop3.b32 %r1139, %r536, %r1141, %r1142, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1143, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1144, %r1142, %r1143;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1147, %r1139, %r1144;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1150, %r547, %r1141, %r1153, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1154, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1155, %r1153, %r1154;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1158, %r1150, %r1155;
	// end inline asm
	shr.u32 	%r1163, %r1141, 8;
	// begin inline asm
	lop3.b32 %r1161, %r536, %r1163, %r1142, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1165, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1166, %r1142, %r1165;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1169, %r1161, %r1166;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1172, %r547, %r1163, %r1153, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1176, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1177, %r1153, %r1176;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1180, %r1172, %r1177;
	// end inline asm
	// begin inline asm
	mov.b32 %r1188, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1199, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1187, %r7795, -2004318072;
	// begin inline asm
	lop3.b32 %r1185, %r536, %r1187, %r1188, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1189, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1190, %r1188, %r1189;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1193, %r1185, %r1190;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1196, %r547, %r1187, %r1199, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1200, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1201, %r1199, %r1200;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1204, %r1196, %r1201;
	// end inline asm
	shr.u32 	%r1209, %r1187, 8;
	// begin inline asm
	lop3.b32 %r1207, %r536, %r1209, %r1188, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1211, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1212, %r1188, %r1211;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1215, %r1207, %r1212;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1218, %r547, %r1209, %r1199, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1222, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1223, %r1199, %r1222;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1226, %r1218, %r1223;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1229, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1231, %r1229, %r1055, %r981;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1235, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1237, %r1235, %r1066, %r985;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1241, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1243, %r1241, %r1077, %r989;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1247, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1249, %r1247, %r1088, %r993;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1253, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1255, %r1253, %r1101, %r997;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1259, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1261, %r1259, %r1112, %r1001;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1265, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1267, %r1265, %r1123, %r1005;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1271, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1273, %r1271, %r1134, %r1009;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1277, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1279, %r1277, %r1147, %r1013;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1283, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1285, %r1283, %r1158, %r1017;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1289, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1291, %r1289, %r1169, %r1021;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1295, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1297, %r1295, %r1180, %r1025;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1301, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1303, %r1301, %r1193, %r1029;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1307, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1309, %r1307, %r1204, %r1033;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1313, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1315, %r1313, %r1215, %r1037;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1319, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1321, %r1319, %r1226, %r1041;
	// end inline asm
	// begin inline asm
	mov.b32 %r1330, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1341, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1329, %r7796, -2004318072;
	// begin inline asm
	lop3.b32 %r1327, %r536, %r1329, %r1330, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1331, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1332, %r1330, %r1331;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1335, %r1327, %r1332;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1338, %r547, %r1329, %r1341, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1342, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1343, %r1341, %r1342;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1346, %r1338, %r1343;
	// end inline asm
	shr.u32 	%r1351, %r1329, 8;
	// begin inline asm
	lop3.b32 %r1349, %r536, %r1351, %r1330, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1353, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1354, %r1330, %r1353;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1357, %r1349, %r1354;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1360, %r547, %r1351, %r1341, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1364, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1365, %r1341, %r1364;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1368, %r1360, %r1365;
	// end inline asm
	// begin inline asm
	mov.b32 %r1376, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1387, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1375, %r7797, -2004318072;
	// begin inline asm
	lop3.b32 %r1373, %r536, %r1375, %r1376, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1377, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1378, %r1376, %r1377;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1381, %r1373, %r1378;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1384, %r547, %r1375, %r1387, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1388, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1389, %r1387, %r1388;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1392, %r1384, %r1389;
	// end inline asm
	shr.u32 	%r1397, %r1375, 8;
	// begin inline asm
	lop3.b32 %r1395, %r536, %r1397, %r1376, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1399, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1400, %r1376, %r1399;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1403, %r1395, %r1400;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1406, %r547, %r1397, %r1387, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1410, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1411, %r1387, %r1410;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1414, %r1406, %r1411;
	// end inline asm
	// begin inline asm
	mov.b32 %r1422, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1433, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1421, %r7798, -2004318072;
	// begin inline asm
	lop3.b32 %r1419, %r536, %r1421, %r1422, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1423, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1424, %r1422, %r1423;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1427, %r1419, %r1424;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1430, %r547, %r1421, %r1433, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1434, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1435, %r1433, %r1434;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1438, %r1430, %r1435;
	// end inline asm
	shr.u32 	%r1443, %r1421, 8;
	// begin inline asm
	lop3.b32 %r1441, %r536, %r1443, %r1422, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1445, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1446, %r1422, %r1445;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1449, %r1441, %r1446;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1452, %r547, %r1443, %r1433, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1456, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1457, %r1433, %r1456;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1460, %r1452, %r1457;
	// end inline asm
	// begin inline asm
	mov.b32 %r1468, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1479, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1467, %r7799, -2004318072;
	// begin inline asm
	lop3.b32 %r1465, %r536, %r1467, %r1468, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1469, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1470, %r1468, %r1469;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1473, %r1465, %r1470;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1476, %r547, %r1467, %r1479, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1480, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1481, %r1479, %r1480;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1484, %r1476, %r1481;
	// end inline asm
	shr.u32 	%r1489, %r1467, 8;
	// begin inline asm
	lop3.b32 %r1487, %r536, %r1489, %r1468, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1491, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1492, %r1468, %r1491;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1495, %r1487, %r1492;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1498, %r547, %r1489, %r1479, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1502, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1503, %r1479, %r1502;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1506, %r1498, %r1503;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1580, %r233, %r1335, %r1231;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1577, %r233, %r1346, %r1237;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1589, %r233, %r1357, %r1243;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1586, %r233, %r1368, %r1249;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1598, %r233, %r1381, %r1255;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1595, %r233, %r1392, %r1261;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1607, %r233, %r1403, %r1267;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1604, %r233, %r1414, %r1273;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1616, %r233, %r1427, %r1279;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1613, %r233, %r1438, %r1285;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1625, %r233, %r1449, %r1291;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1622, %r233, %r1460, %r1297;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1634, %r233, %r1473, %r1303;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1631, %r233, %r1484, %r1309;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1643, %r233, %r1495, %r1315;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1640, %r233, %r1506, %r1321;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1573, %r282;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1575, %r1573, %r1577;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1578, %r279, %r1580, %r1575;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1582, %r282;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1584, %r1582, %r1586;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1587, %r279, %r1589, %r1584;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1591, %r282;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1593, %r1591, %r1595;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1596, %r279, %r1598, %r1593;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1600, %r282;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1602, %r1600, %r1604;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1605, %r279, %r1607, %r1602;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1609, %r282;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1611, %r1609, %r1613;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1614, %r279, %r1616, %r1611;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1618, %r282;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1620, %r1618, %r1622;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1623, %r279, %r1625, %r1620;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1627, %r282;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1629, %r1627, %r1631;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1632, %r279, %r1634, %r1629;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1636, %r282;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1638, %r1636, %r1640;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1641, %r279, %r1643, %r1638;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1645, %r282, %r1580;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1648, %r279, %r1577, %r1645;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1652, %r282, %r1589;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1655, %r279, %r1586, %r1652;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1659, %r282, %r1598;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1662, %r279, %r1595, %r1659;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1666, %r282, %r1607;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1669, %r279, %r1604, %r1666;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1673, %r282, %r1616;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1676, %r279, %r1613, %r1673;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1680, %r282, %r1625;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1683, %r279, %r1622, %r1680;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1687, %r282, %r1634;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1690, %r279, %r1631, %r1687;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1694, %r282, %r1643;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1697, %r279, %r1640, %r1694;
	// end inline asm
	mov.u32 	%r7376, 0;
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1788, %r1785}, {%r321, %r327, %r324, %r330}, {%r1578, %r1648}, {%r7376, %r7376};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1797, %r1794}, {%r321, %r327, %r324, %r330}, {%r1587, %r1655}, {%r7376, %r7376};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1806, %r1803}, {%r321, %r327, %r324, %r330}, {%r1596, %r1662}, {%r7376, %r7376};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1815, %r1812}, {%r321, %r327, %r324, %r330}, {%r1605, %r1669}, {%r7376, %r7376};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1824, %r1821}, {%r321, %r327, %r324, %r330}, {%r1614, %r1676}, {%r7376, %r7376};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1833, %r1830}, {%r321, %r327, %r324, %r330}, {%r1623, %r1683}, {%r7376, %r7376};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1842, %r1839}, {%r321, %r327, %r324, %r330}, {%r1632, %r1690}, {%r7376, %r7376};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1851, %r1848}, {%r321, %r327, %r324, %r330}, {%r1641, %r1697}, {%r7376, %r7376};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1781, %r368;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1783, %r1781, %r1785;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1786, %r365, %r1788, %r1783;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1790, %r368;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1792, %r1790, %r1794;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1795, %r365, %r1797, %r1792;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1799, %r368;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1801, %r1799, %r1803;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1804, %r365, %r1806, %r1801;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1808, %r368;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1810, %r1808, %r1812;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1813, %r365, %r1815, %r1810;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1817, %r368;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1819, %r1817, %r1821;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1822, %r365, %r1824, %r1819;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1826, %r368;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1828, %r1826, %r1830;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1831, %r365, %r1833, %r1828;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1835, %r368;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1837, %r1835, %r1839;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1840, %r365, %r1842, %r1837;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1844, %r368;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1846, %r1844, %r1848;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1849, %r365, %r1851, %r1846;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1853, %r368, %r1788;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1856, %r365, %r1785, %r1853;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1860, %r368, %r1797;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1863, %r365, %r1794, %r1860;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1867, %r368, %r1806;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1870, %r365, %r1803, %r1867;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1874, %r368, %r1815;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1877, %r365, %r1812, %r1874;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1881, %r368, %r1824;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1884, %r365, %r1821, %r1881;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1888, %r368, %r1833;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1891, %r365, %r1830, %r1888;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1895, %r368, %r1842;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1898, %r365, %r1839, %r1895;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1902, %r368, %r1851;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1905, %r365, %r1848, %r1902;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1909, %r1910}, {%r88, %r90, %r89, %r91}, {%r1786, %r1856}, {%r7376, %r7376};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1919, %r1920}, {%r88, %r90, %r89, %r91}, {%r1795, %r1863}, {%r7376, %r7376};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1929, %r1930}, {%r88, %r90, %r89, %r91}, {%r1804, %r1870}, {%r7376, %r7376};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1939, %r1940}, {%r88, %r90, %r89, %r91}, {%r1813, %r1877}, {%r7376, %r7376};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1949, %r1950}, {%r88, %r90, %r89, %r91}, {%r1822, %r1884}, {%r7376, %r7376};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1959, %r1960}, {%r88, %r90, %r89, %r91}, {%r1831, %r1891}, {%r7376, %r7376};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1969, %r1970}, {%r88, %r90, %r89, %r91}, {%r1840, %r1898}, {%r7376, %r7376};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1979, %r1980}, {%r88, %r90, %r89, %r91}, {%r1849, %r1905}, {%r7376, %r7376};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1989, %r11, %r1909;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1992, %r11, %r1910;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1995, %r11, %r1919;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1998, %r11, %r1920;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2001, %r11, %r1929;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2004, %r11, %r1930;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2007, %r11, %r1939;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2010, %r11, %r1940;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2013, %r11, %r1949;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2016, %r11, %r1950;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2019, %r11, %r1959;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2022, %r11, %r1960;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2025, %r11, %r1969;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2028, %r11, %r1970;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2031, %r11, %r1979;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2034, %r11, %r1980;
	// end inline asm
	// begin inline asm
	mov.b32 %r2037, {%rs1142, %rs1142};
	// end inline asm
	mov.u16 	%rs195, 18176;
	// begin inline asm
	mov.b32 %r2038, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2039, %r1989, %r2037;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2042, %r2039, %r2038;
	// end inline asm
	// begin inline asm
	mov.b32 %r2045, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2046, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2047, %r1992, %r2045;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2050, %r2047, %r2046;
	// end inline asm
	// begin inline asm
	mov.b32 %r2053, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2054, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2055, %r1995, %r2053;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2058, %r2055, %r2054;
	// end inline asm
	// begin inline asm
	mov.b32 %r2061, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2062, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2063, %r1998, %r2061;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2066, %r2063, %r2062;
	// end inline asm
	// begin inline asm
	mov.b32 %r2069, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2070, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2071, %r2001, %r2069;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2074, %r2071, %r2070;
	// end inline asm
	// begin inline asm
	mov.b32 %r2077, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2078, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2079, %r2004, %r2077;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2082, %r2079, %r2078;
	// end inline asm
	// begin inline asm
	mov.b32 %r2085, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2086, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2087, %r2007, %r2085;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2090, %r2087, %r2086;
	// end inline asm
	// begin inline asm
	mov.b32 %r2093, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2094, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2095, %r2010, %r2093;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2098, %r2095, %r2094;
	// end inline asm
	// begin inline asm
	mov.b32 %r2101, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2102, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2103, %r2013, %r2101;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2106, %r2103, %r2102;
	// end inline asm
	// begin inline asm
	mov.b32 %r2109, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2110, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2111, %r2016, %r2109;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2114, %r2111, %r2110;
	// end inline asm
	// begin inline asm
	mov.b32 %r2117, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2118, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2119, %r2019, %r2117;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2122, %r2119, %r2118;
	// end inline asm
	// begin inline asm
	mov.b32 %r2125, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2126, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2127, %r2022, %r2125;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2130, %r2127, %r2126;
	// end inline asm
	// begin inline asm
	mov.b32 %r2133, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2134, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2135, %r2025, %r2133;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2138, %r2135, %r2134;
	// end inline asm
	// begin inline asm
	mov.b32 %r2141, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2142, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2143, %r2028, %r2141;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2146, %r2143, %r2142;
	// end inline asm
	// begin inline asm
	mov.b32 %r2149, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2150, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2151, %r2031, %r2149;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2154, %r2151, %r2150;
	// end inline asm
	// begin inline asm
	mov.b32 %r2157, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2158, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2159, %r2034, %r2157;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2162, %r2159, %r2158;
	// end inline asm
	// begin inline asm
	mov.b32 %r2168, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2166, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2167, %r2168, %r2166;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2170, %r2042, %r2167;
	// end inline asm
	// begin inline asm
	mov.b32 %r2173, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2174, %r2168, %r2173;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2177, %r2050, %r2174;
	// end inline asm
	// begin inline asm
	mov.b32 %r2180, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2181, %r2168, %r2180;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2184, %r2058, %r2181;
	// end inline asm
	// begin inline asm
	mov.b32 %r2187, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2188, %r2168, %r2187;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2191, %r2066, %r2188;
	// end inline asm
	mov.u32 	%r2197, 25152;
	// begin inline asm
	prmt.b32 %r2194, %r2170, %r2184, %r2197;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2198, %r2177, %r2191, %r2197;
	// end inline asm
	shl.b32 	%r2205, %r2198, 4;
	mov.u32 	%r2203, 252645135;
	// begin inline asm
	lop3.b32 %r2202, %r2203, %r2194, %r2205, 202;
	// end inline asm
	xor.b32  	%r7721, %r2202, -2004318072;
	// begin inline asm
	mov.b32 %r2209, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2207, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2208, %r2209, %r2207;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2211, %r2074, %r2208;
	// end inline asm
	// begin inline asm
	mov.b32 %r2214, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2215, %r2209, %r2214;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2218, %r2082, %r2215;
	// end inline asm
	// begin inline asm
	mov.b32 %r2221, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2222, %r2209, %r2221;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2225, %r2090, %r2222;
	// end inline asm
	// begin inline asm
	mov.b32 %r2228, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2229, %r2209, %r2228;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2232, %r2098, %r2229;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2235, %r2211, %r2225, %r2197;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2239, %r2218, %r2232, %r2197;
	// end inline asm
	shl.b32 	%r2246, %r2239, 4;
	// begin inline asm
	lop3.b32 %r2243, %r2203, %r2235, %r2246, 202;
	// end inline asm
	xor.b32  	%r7722, %r2243, -2004318072;
	// begin inline asm
	mov.b32 %r2250, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2248, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2249, %r2250, %r2248;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2252, %r2106, %r2249;
	// end inline asm
	// begin inline asm
	mov.b32 %r2255, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2256, %r2250, %r2255;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2259, %r2114, %r2256;
	// end inline asm
	// begin inline asm
	mov.b32 %r2262, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2263, %r2250, %r2262;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2266, %r2122, %r2263;
	// end inline asm
	// begin inline asm
	mov.b32 %r2269, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2270, %r2250, %r2269;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2273, %r2130, %r2270;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2276, %r2252, %r2266, %r2197;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2280, %r2259, %r2273, %r2197;
	// end inline asm
	shl.b32 	%r2287, %r2280, 4;
	// begin inline asm
	lop3.b32 %r2284, %r2203, %r2276, %r2287, 202;
	// end inline asm
	xor.b32  	%r7723, %r2284, -2004318072;
	// begin inline asm
	mov.b32 %r2291, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2289, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2290, %r2291, %r2289;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2293, %r2138, %r2290;
	// end inline asm
	// begin inline asm
	mov.b32 %r2296, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2297, %r2291, %r2296;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2300, %r2146, %r2297;
	// end inline asm
	// begin inline asm
	mov.b32 %r2303, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2304, %r2291, %r2303;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2307, %r2154, %r2304;
	// end inline asm
	// begin inline asm
	mov.b32 %r2310, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2311, %r2291, %r2310;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2314, %r2162, %r2311;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2317, %r2293, %r2307, %r2197;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2321, %r2300, %r2314, %r2197;
	// end inline asm
	shl.b32 	%r2328, %r2321, 4;
	// begin inline asm
	lop3.b32 %r2325, %r2203, %r2317, %r2328, 202;
	// end inline asm
	xor.b32  	%r7724, %r2325, -2004318072;
	add.s64 	%rd80, %rd86, %rd14;
	st.shared.u32 	[%rd80], %r7721;
	add.s64 	%rd81, %rd86, %rd13;
	st.shared.u32 	[%rd81], %r7722;
	add.s64 	%rd82, %rd86, %rd12;
	st.shared.u32 	[%rd82], %r7723;
	add.s64 	%rd83, %rd86, %rd11;
	st.shared.u32 	[%rd83], %r7724;
	ld.shared.u32 	%r7788, [%rd76];
	ld.shared.u32 	%r7789, [%rd77];
	ld.shared.u32 	%r7790, [%rd78];
	ld.shared.u32 	%r7791, [%rd79];
	// begin inline asm
	mov.b32 %r2334, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2345, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r2333, %r7788, -2004318072;
	// begin inline asm
	lop3.b32 %r2331, %r536, %r2333, %r2334, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2335, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2336, %r2334, %r2335;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2339, %r2331, %r2336;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2342, %r547, %r2333, %r2345, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2346, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2347, %r2345, %r2346;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2350, %r2342, %r2347;
	// end inline asm
	shr.u32 	%r2355, %r2333, 8;
	// begin inline asm
	lop3.b32 %r2353, %r536, %r2355, %r2334, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2357, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2358, %r2334, %r2357;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2361, %r2353, %r2358;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2364, %r547, %r2355, %r2345, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2368, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2369, %r2345, %r2368;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2372, %r2364, %r2369;
	// end inline asm
	// begin inline asm
	mov.b32 %r2380, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2391, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r2379, %r7789, -2004318072;
	// begin inline asm
	lop3.b32 %r2377, %r536, %r2379, %r2380, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2381, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2382, %r2380, %r2381;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2385, %r2377, %r2382;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2388, %r547, %r2379, %r2391, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2392, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2393, %r2391, %r2392;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2396, %r2388, %r2393;
	// end inline asm
	shr.u32 	%r2401, %r2379, 8;
	// begin inline asm
	lop3.b32 %r2399, %r536, %r2401, %r2380, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2403, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2404, %r2380, %r2403;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2407, %r2399, %r2404;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2410, %r547, %r2401, %r2391, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2414, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2415, %r2391, %r2414;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2418, %r2410, %r2415;
	// end inline asm
	// begin inline asm
	mov.b32 %r2426, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2437, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r2425, %r7790, -2004318072;
	// begin inline asm
	lop3.b32 %r2423, %r536, %r2425, %r2426, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2427, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2428, %r2426, %r2427;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2431, %r2423, %r2428;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2434, %r547, %r2425, %r2437, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2438, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2439, %r2437, %r2438;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2442, %r2434, %r2439;
	// end inline asm
	shr.u32 	%r2447, %r2425, 8;
	// begin inline asm
	lop3.b32 %r2445, %r536, %r2447, %r2426, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2449, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2450, %r2426, %r2449;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2453, %r2445, %r2450;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2456, %r547, %r2447, %r2437, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2460, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2461, %r2437, %r2460;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2464, %r2456, %r2461;
	// end inline asm
	// begin inline asm
	mov.b32 %r2472, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2483, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r2471, %r7791, -2004318072;
	// begin inline asm
	lop3.b32 %r2469, %r536, %r2471, %r2472, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2473, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2474, %r2472, %r2473;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2477, %r2469, %r2474;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2480, %r547, %r2471, %r2483, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2484, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2485, %r2483, %r2484;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2488, %r2480, %r2485;
	// end inline asm
	shr.u32 	%r2493, %r2471, 8;
	// begin inline asm
	lop3.b32 %r2491, %r536, %r2493, %r2472, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2495, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2496, %r2472, %r2495;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2499, %r2491, %r2496;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2502, %r547, %r2493, %r2483, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2506, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2507, %r2483, %r2506;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2510, %r2502, %r2507;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2513, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2515, %r2513, %r2339;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2518, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2520, %r2518, %r2350;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2523, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2525, %r2523, %r2361;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2528, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2530, %r2528, %r2372;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2533, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2535, %r2533, %r2385;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2538, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2540, %r2538, %r2396;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2543, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2545, %r2543, %r2407;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2548, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2550, %r2548, %r2418;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2553, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2555, %r2553, %r2431;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2558, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2560, %r2558, %r2442;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2563, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2565, %r2563, %r2453;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2568, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2570, %r2568, %r2464;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2573, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2575, %r2573, %r2477;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2578, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2580, %r2578, %r2488;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2583, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2585, %r2583, %r2499;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2588, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2590, %r2588, %r2510;
	// end inline asm
	// begin inline asm
	mov.b32 %r2598, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2609, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2595, %r536, %r1049, %r2598, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2599, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2600, %r2598, %r2599;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2603, %r2595, %r2600;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2606, %r547, %r1049, %r2609, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2610, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2611, %r2609, %r2610;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2614, %r2606, %r2611;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2617, %r536, %r1071, %r2598, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2621, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2622, %r2598, %r2621;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2625, %r2617, %r2622;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2628, %r547, %r1071, %r2609, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2632, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2633, %r2609, %r2632;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2636, %r2628, %r2633;
	// end inline asm
	// begin inline asm
	mov.b32 %r2644, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2655, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2641, %r536, %r1095, %r2644, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2645, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2646, %r2644, %r2645;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2649, %r2641, %r2646;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2652, %r547, %r1095, %r2655, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2656, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2657, %r2655, %r2656;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2660, %r2652, %r2657;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2663, %r536, %r1117, %r2644, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2667, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2668, %r2644, %r2667;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2671, %r2663, %r2668;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2674, %r547, %r1117, %r2655, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2678, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2679, %r2655, %r2678;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2682, %r2674, %r2679;
	// end inline asm
	// begin inline asm
	mov.b32 %r2690, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2701, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2687, %r536, %r1141, %r2690, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2691, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2692, %r2690, %r2691;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2695, %r2687, %r2692;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2698, %r547, %r1141, %r2701, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2702, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2703, %r2701, %r2702;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2706, %r2698, %r2703;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2709, %r536, %r1163, %r2690, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2713, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2714, %r2690, %r2713;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2717, %r2709, %r2714;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2720, %r547, %r1163, %r2701, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2724, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2725, %r2701, %r2724;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2728, %r2720, %r2725;
	// end inline asm
	// begin inline asm
	mov.b32 %r2736, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2747, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2733, %r536, %r1187, %r2736, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2737, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2738, %r2736, %r2737;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2741, %r2733, %r2738;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2744, %r547, %r1187, %r2747, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2748, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2749, %r2747, %r2748;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2752, %r2744, %r2749;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2755, %r536, %r1209, %r2736, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2759, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2760, %r2736, %r2759;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2763, %r2755, %r2760;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2766, %r547, %r1209, %r2747, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2770, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2771, %r2747, %r2770;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2774, %r2766, %r2771;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2777, %r197, %r2603, %r2515;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2781, %r197, %r2614, %r2520;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2785, %r197, %r2625, %r2525;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2789, %r197, %r2636, %r2530;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2793, %r197, %r2649, %r2535;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2797, %r197, %r2660, %r2540;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2801, %r197, %r2671, %r2545;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2805, %r197, %r2682, %r2550;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2809, %r197, %r2695, %r2555;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2813, %r197, %r2706, %r2560;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2817, %r197, %r2717, %r2565;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2821, %r197, %r2728, %r2570;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2825, %r197, %r2741, %r2575;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2829, %r197, %r2752, %r2580;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2833, %r197, %r2763, %r2585;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2837, %r197, %r2774, %r2590;
	// end inline asm
	// begin inline asm
	mov.b32 %r2846, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2857, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2843, %r536, %r1329, %r2846, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2847, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2848, %r2846, %r2847;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2851, %r2843, %r2848;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2854, %r547, %r1329, %r2857, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2858, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2859, %r2857, %r2858;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2862, %r2854, %r2859;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2865, %r536, %r1351, %r2846, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2869, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2870, %r2846, %r2869;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2873, %r2865, %r2870;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2876, %r547, %r1351, %r2857, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2880, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2881, %r2857, %r2880;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2884, %r2876, %r2881;
	// end inline asm
	// begin inline asm
	mov.b32 %r2892, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2903, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2889, %r536, %r1375, %r2892, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2893, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2894, %r2892, %r2893;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2897, %r2889, %r2894;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2900, %r547, %r1375, %r2903, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2904, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2905, %r2903, %r2904;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2908, %r2900, %r2905;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2911, %r536, %r1397, %r2892, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2915, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2916, %r2892, %r2915;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2919, %r2911, %r2916;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2922, %r547, %r1397, %r2903, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2926, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2927, %r2903, %r2926;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2930, %r2922, %r2927;
	// end inline asm
	// begin inline asm
	mov.b32 %r2938, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2949, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2935, %r536, %r1421, %r2938, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2939, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2940, %r2938, %r2939;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2943, %r2935, %r2940;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2946, %r547, %r1421, %r2949, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2950, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2951, %r2949, %r2950;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2954, %r2946, %r2951;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2957, %r536, %r1443, %r2938, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2961, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2962, %r2938, %r2961;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2965, %r2957, %r2962;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2968, %r547, %r1443, %r2949, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2972, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2973, %r2949, %r2972;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2976, %r2968, %r2973;
	// end inline asm
	// begin inline asm
	mov.b32 %r2984, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2995, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2981, %r536, %r1467, %r2984, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2985, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2986, %r2984, %r2985;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2989, %r2981, %r2986;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2992, %r547, %r1467, %r2995, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2996, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2997, %r2995, %r2996;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3000, %r2992, %r2997;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3003, %r536, %r1489, %r2984, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3007, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3008, %r2984, %r3007;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3011, %r3003, %r3008;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3014, %r547, %r1489, %r2995, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3018, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3019, %r2995, %r3018;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3022, %r3014, %r3019;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3025, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3027, %r3025, %r2851, %r2777;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3031, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3033, %r3031, %r2862, %r2781;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3037, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3039, %r3037, %r2873, %r2785;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3043, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3045, %r3043, %r2884, %r2789;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3049, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3051, %r3049, %r2897, %r2793;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3055, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3057, %r3055, %r2908, %r2797;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3061, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3063, %r3061, %r2919, %r2801;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3067, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3069, %r3067, %r2930, %r2805;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3073, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3075, %r3073, %r2943, %r2809;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3079, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3081, %r3079, %r2954, %r2813;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3085, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3087, %r3085, %r2965, %r2817;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3091, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3093, %r3091, %r2976, %r2821;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3097, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3099, %r3097, %r2989, %r2825;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3103, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3105, %r3103, %r3000, %r2829;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3109, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3111, %r3109, %r3011, %r2833;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3115, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3117, %r3115, %r3022, %r2837;
	// end inline asm
	// begin inline asm
	mov.b32 %r3126, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r3137, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3123, %r536, %r537, %r3126, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3127, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3128, %r3126, %r3127;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3131, %r3123, %r3128;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3134, %r547, %r537, %r3137, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3138, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3139, %r3137, %r3138;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3142, %r3134, %r3139;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3145, %r536, %r559, %r3126, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3149, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3150, %r3126, %r3149;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3153, %r3145, %r3150;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3156, %r547, %r559, %r3137, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3160, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3161, %r3137, %r3160;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3164, %r3156, %r3161;
	// end inline asm
	// begin inline asm
	mov.b32 %r3172, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r3183, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3169, %r536, %r583, %r3172, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3173, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3174, %r3172, %r3173;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3177, %r3169, %r3174;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3180, %r547, %r583, %r3183, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3184, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3185, %r3183, %r3184;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3188, %r3180, %r3185;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3191, %r536, %r605, %r3172, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3195, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3196, %r3172, %r3195;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3199, %r3191, %r3196;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3202, %r547, %r605, %r3183, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3206, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3207, %r3183, %r3206;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3210, %r3202, %r3207;
	// end inline asm
	// begin inline asm
	mov.b32 %r3218, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r3229, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3215, %r536, %r629, %r3218, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3219, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3220, %r3218, %r3219;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3223, %r3215, %r3220;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3226, %r547, %r629, %r3229, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3230, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3231, %r3229, %r3230;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3234, %r3226, %r3231;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3237, %r536, %r651, %r3218, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3241, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3242, %r3218, %r3241;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3245, %r3237, %r3242;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3248, %r547, %r651, %r3229, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3252, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3253, %r3229, %r3252;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3256, %r3248, %r3253;
	// end inline asm
	// begin inline asm
	mov.b32 %r3264, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r3275, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3261, %r536, %r675, %r3264, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3265, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3266, %r3264, %r3265;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3269, %r3261, %r3266;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3272, %r547, %r675, %r3275, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3276, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3277, %r3275, %r3276;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3280, %r3272, %r3277;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3283, %r536, %r697, %r3264, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3287, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3288, %r3264, %r3287;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3291, %r3283, %r3288;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3294, %r547, %r697, %r3275, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3298, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3299, %r3275, %r3298;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3302, %r3294, %r3299;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3376, %r233, %r3131, %r3027;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3373, %r233, %r3142, %r3033;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3385, %r233, %r3153, %r3039;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3382, %r233, %r3164, %r3045;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3394, %r233, %r3177, %r3051;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3391, %r233, %r3188, %r3057;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3403, %r233, %r3199, %r3063;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3400, %r233, %r3210, %r3069;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3412, %r233, %r3223, %r3075;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3409, %r233, %r3234, %r3081;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3421, %r233, %r3245, %r3087;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3418, %r233, %r3256, %r3093;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3430, %r233, %r3269, %r3099;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3427, %r233, %r3280, %r3105;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3439, %r233, %r3291, %r3111;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3436, %r233, %r3302, %r3117;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3369, %r282;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3371, %r3369, %r3373;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3374, %r279, %r3376, %r3371;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3378, %r282;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3380, %r3378, %r3382;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3383, %r279, %r3385, %r3380;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3387, %r282;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3389, %r3387, %r3391;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3392, %r279, %r3394, %r3389;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3396, %r282;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3398, %r3396, %r3400;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3401, %r279, %r3403, %r3398;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3405, %r282;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3407, %r3405, %r3409;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3410, %r279, %r3412, %r3407;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3414, %r282;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3416, %r3414, %r3418;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3419, %r279, %r3421, %r3416;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3423, %r282;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3425, %r3423, %r3427;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3428, %r279, %r3430, %r3425;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3432, %r282;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3434, %r3432, %r3436;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3437, %r279, %r3439, %r3434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3441, %r282, %r3376;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3444, %r279, %r3373, %r3441;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3448, %r282, %r3385;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3451, %r279, %r3382, %r3448;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3455, %r282, %r3394;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3458, %r279, %r3391, %r3455;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3462, %r282, %r3403;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3465, %r279, %r3400, %r3462;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3469, %r282, %r3412;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3472, %r279, %r3409, %r3469;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3476, %r282, %r3421;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3479, %r279, %r3418, %r3476;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3483, %r282, %r3430;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3486, %r279, %r3427, %r3483;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3490, %r282, %r3439;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3493, %r279, %r3436, %r3490;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3584, %r3581}, {%r321, %r327, %r324, %r330}, {%r3374, %r3444}, {%r7376, %r7376};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3593, %r3590}, {%r321, %r327, %r324, %r330}, {%r3383, %r3451}, {%r7376, %r7376};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3602, %r3599}, {%r321, %r327, %r324, %r330}, {%r3392, %r3458}, {%r7376, %r7376};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3611, %r3608}, {%r321, %r327, %r324, %r330}, {%r3401, %r3465}, {%r7376, %r7376};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3620, %r3617}, {%r321, %r327, %r324, %r330}, {%r3410, %r3472}, {%r7376, %r7376};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3629, %r3626}, {%r321, %r327, %r324, %r330}, {%r3419, %r3479}, {%r7376, %r7376};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3638, %r3635}, {%r321, %r327, %r324, %r330}, {%r3428, %r3486}, {%r7376, %r7376};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3647, %r3644}, {%r321, %r327, %r324, %r330}, {%r3437, %r3493}, {%r7376, %r7376};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3577, %r368;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3579, %r3577, %r3581;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3582, %r365, %r3584, %r3579;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3586, %r368;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3588, %r3586, %r3590;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3591, %r365, %r3593, %r3588;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3595, %r368;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3597, %r3595, %r3599;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3600, %r365, %r3602, %r3597;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3604, %r368;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3606, %r3604, %r3608;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3609, %r365, %r3611, %r3606;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3613, %r368;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3615, %r3613, %r3617;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3618, %r365, %r3620, %r3615;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3622, %r368;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3624, %r3622, %r3626;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3627, %r365, %r3629, %r3624;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3631, %r368;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3633, %r3631, %r3635;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3636, %r365, %r3638, %r3633;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3640, %r368;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3642, %r3640, %r3644;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3645, %r365, %r3647, %r3642;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3649, %r368, %r3584;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3652, %r365, %r3581, %r3649;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3656, %r368, %r3593;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3659, %r365, %r3590, %r3656;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3663, %r368, %r3602;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3666, %r365, %r3599, %r3663;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3670, %r368, %r3611;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3673, %r365, %r3608, %r3670;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3677, %r368, %r3620;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3680, %r365, %r3617, %r3677;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3684, %r368, %r3629;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3687, %r365, %r3626, %r3684;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3691, %r368, %r3638;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3694, %r365, %r3635, %r3691;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3698, %r368, %r3647;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3701, %r365, %r3644, %r3698;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3705, %r3706}, {%r88, %r90, %r89, %r91}, {%r3582, %r3652}, {%r7376, %r7376};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3715, %r3716}, {%r88, %r90, %r89, %r91}, {%r3591, %r3659}, {%r7376, %r7376};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3725, %r3726}, {%r88, %r90, %r89, %r91}, {%r3600, %r3666}, {%r7376, %r7376};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3735, %r3736}, {%r88, %r90, %r89, %r91}, {%r3609, %r3673}, {%r7376, %r7376};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3745, %r3746}, {%r88, %r90, %r89, %r91}, {%r3618, %r3680}, {%r7376, %r7376};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3755, %r3756}, {%r88, %r90, %r89, %r91}, {%r3627, %r3687}, {%r7376, %r7376};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3765, %r3766}, {%r88, %r90, %r89, %r91}, {%r3636, %r3694}, {%r7376, %r7376};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3775, %r3776}, {%r88, %r90, %r89, %r91}, {%r3645, %r3701}, {%r7376, %r7376};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3785, %r11, %r3705;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3788, %r11, %r3706;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3791, %r11, %r3715;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3794, %r11, %r3716;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3797, %r11, %r3725;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3800, %r11, %r3726;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3803, %r11, %r3735;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3806, %r11, %r3736;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3809, %r11, %r3745;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3812, %r11, %r3746;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3815, %r11, %r3755;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3818, %r11, %r3756;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3821, %r11, %r3765;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3824, %r11, %r3766;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3827, %r11, %r3775;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3830, %r11, %r3776;
	// end inline asm
	// begin inline asm
	mov.b32 %r3833, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3834, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3835, %r3785, %r3833;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3838, %r3835, %r3834;
	// end inline asm
	// begin inline asm
	mov.b32 %r3841, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3842, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3843, %r3788, %r3841;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3846, %r3843, %r3842;
	// end inline asm
	// begin inline asm
	mov.b32 %r3849, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3850, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3851, %r3791, %r3849;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3854, %r3851, %r3850;
	// end inline asm
	// begin inline asm
	mov.b32 %r3857, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3858, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3859, %r3794, %r3857;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3862, %r3859, %r3858;
	// end inline asm
	// begin inline asm
	mov.b32 %r3865, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3866, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3867, %r3797, %r3865;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3870, %r3867, %r3866;
	// end inline asm
	// begin inline asm
	mov.b32 %r3873, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3874, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3875, %r3800, %r3873;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3878, %r3875, %r3874;
	// end inline asm
	// begin inline asm
	mov.b32 %r3881, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3882, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3883, %r3803, %r3881;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3886, %r3883, %r3882;
	// end inline asm
	// begin inline asm
	mov.b32 %r3889, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3890, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3891, %r3806, %r3889;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3894, %r3891, %r3890;
	// end inline asm
	// begin inline asm
	mov.b32 %r3897, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3898, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3899, %r3809, %r3897;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3902, %r3899, %r3898;
	// end inline asm
	// begin inline asm
	mov.b32 %r3905, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3906, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3907, %r3812, %r3905;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3910, %r3907, %r3906;
	// end inline asm
	// begin inline asm
	mov.b32 %r3913, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3914, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3915, %r3815, %r3913;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3918, %r3915, %r3914;
	// end inline asm
	// begin inline asm
	mov.b32 %r3921, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3922, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3923, %r3818, %r3921;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3926, %r3923, %r3922;
	// end inline asm
	// begin inline asm
	mov.b32 %r3929, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3930, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3931, %r3821, %r3929;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3934, %r3931, %r3930;
	// end inline asm
	// begin inline asm
	mov.b32 %r3937, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3938, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3939, %r3824, %r3937;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3942, %r3939, %r3938;
	// end inline asm
	// begin inline asm
	mov.b32 %r3945, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3946, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3947, %r3827, %r3945;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3950, %r3947, %r3946;
	// end inline asm
	// begin inline asm
	mov.b32 %r3953, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3954, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3955, %r3830, %r3953;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3958, %r3955, %r3954;
	// end inline asm
	// begin inline asm
	mov.b32 %r3964, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r3962, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3963, %r3964, %r3962;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3966, %r3838, %r3963;
	// end inline asm
	// begin inline asm
	mov.b32 %r3969, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3970, %r3964, %r3969;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3973, %r3846, %r3970;
	// end inline asm
	// begin inline asm
	mov.b32 %r3976, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3977, %r3964, %r3976;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3980, %r3854, %r3977;
	// end inline asm
	// begin inline asm
	mov.b32 %r3983, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3984, %r3964, %r3983;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3987, %r3862, %r3984;
	// end inline asm
	// begin inline asm
	prmt.b32 %r3990, %r3966, %r3980, %r2197;
	// end inline asm
	// begin inline asm
	prmt.b32 %r3994, %r3973, %r3987, %r2197;
	// end inline asm
	shl.b32 	%r4001, %r3994, 4;
	// begin inline asm
	lop3.b32 %r3998, %r2203, %r3990, %r4001, 202;
	// end inline asm
	xor.b32  	%r7725, %r3998, -2004318072;
	// begin inline asm
	mov.b32 %r4005, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4003, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4004, %r4005, %r4003;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4007, %r3870, %r4004;
	// end inline asm
	// begin inline asm
	mov.b32 %r4010, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4011, %r4005, %r4010;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4014, %r3878, %r4011;
	// end inline asm
	// begin inline asm
	mov.b32 %r4017, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4018, %r4005, %r4017;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4021, %r3886, %r4018;
	// end inline asm
	// begin inline asm
	mov.b32 %r4024, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4025, %r4005, %r4024;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4028, %r3894, %r4025;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4031, %r4007, %r4021, %r2197;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4035, %r4014, %r4028, %r2197;
	// end inline asm
	shl.b32 	%r4042, %r4035, 4;
	// begin inline asm
	lop3.b32 %r4039, %r2203, %r4031, %r4042, 202;
	// end inline asm
	xor.b32  	%r7726, %r4039, -2004318072;
	// begin inline asm
	mov.b32 %r4046, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4044, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4045, %r4046, %r4044;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4048, %r3902, %r4045;
	// end inline asm
	// begin inline asm
	mov.b32 %r4051, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4052, %r4046, %r4051;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4055, %r3910, %r4052;
	// end inline asm
	// begin inline asm
	mov.b32 %r4058, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4059, %r4046, %r4058;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4062, %r3918, %r4059;
	// end inline asm
	// begin inline asm
	mov.b32 %r4065, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4066, %r4046, %r4065;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4069, %r3926, %r4066;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4072, %r4048, %r4062, %r2197;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4076, %r4055, %r4069, %r2197;
	// end inline asm
	shl.b32 	%r4083, %r4076, 4;
	// begin inline asm
	lop3.b32 %r4080, %r2203, %r4072, %r4083, 202;
	// end inline asm
	xor.b32  	%r7727, %r4080, -2004318072;
	// begin inline asm
	mov.b32 %r4087, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4085, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4086, %r4087, %r4085;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4089, %r3934, %r4086;
	// end inline asm
	// begin inline asm
	mov.b32 %r4092, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4093, %r4087, %r4092;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4096, %r3942, %r4093;
	// end inline asm
	// begin inline asm
	mov.b32 %r4099, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4100, %r4087, %r4099;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4103, %r3950, %r4100;
	// end inline asm
	// begin inline asm
	mov.b32 %r4106, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4107, %r4087, %r4106;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4110, %r3958, %r4107;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4113, %r4089, %r4103, %r2197;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4117, %r4096, %r4110, %r2197;
	// end inline asm
	shl.b32 	%r4124, %r4117, 4;
	// begin inline asm
	lop3.b32 %r4121, %r2203, %r4113, %r4124, 202;
	// end inline asm
	xor.b32  	%r7728, %r4121, -2004318072;
	st.shared.u32 	[%rd80], %r7725;
	st.shared.u32 	[%rd81], %r7726;
	st.shared.u32 	[%rd82], %r7727;
	st.shared.u32 	[%rd83], %r7728;
	ld.shared.u32 	%r7792, [%rd76];
	ld.shared.u32 	%r7793, [%rd77];
	ld.shared.u32 	%r7794, [%rd78];
	ld.shared.u32 	%r7795, [%rd79];
	// begin inline asm
	mov.b32 %r4130, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4141, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r4129, %r7792, -2004318072;
	// begin inline asm
	lop3.b32 %r4127, %r536, %r4129, %r4130, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4131, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4132, %r4130, %r4131;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4135, %r4127, %r4132;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4138, %r547, %r4129, %r4141, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4142, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4143, %r4141, %r4142;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4146, %r4138, %r4143;
	// end inline asm
	shr.u32 	%r4151, %r4129, 8;
	// begin inline asm
	lop3.b32 %r4149, %r536, %r4151, %r4130, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4153, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4154, %r4130, %r4153;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4157, %r4149, %r4154;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4160, %r547, %r4151, %r4141, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4164, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4165, %r4141, %r4164;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4168, %r4160, %r4165;
	// end inline asm
	// begin inline asm
	mov.b32 %r4176, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4187, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r4175, %r7793, -2004318072;
	// begin inline asm
	lop3.b32 %r4173, %r536, %r4175, %r4176, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4177, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4178, %r4176, %r4177;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4181, %r4173, %r4178;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4184, %r547, %r4175, %r4187, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4188, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4189, %r4187, %r4188;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4192, %r4184, %r4189;
	// end inline asm
	shr.u32 	%r4197, %r4175, 8;
	// begin inline asm
	lop3.b32 %r4195, %r536, %r4197, %r4176, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4199, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4200, %r4176, %r4199;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4203, %r4195, %r4200;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4206, %r547, %r4197, %r4187, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4210, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4211, %r4187, %r4210;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4214, %r4206, %r4211;
	// end inline asm
	// begin inline asm
	mov.b32 %r4222, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4233, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r4221, %r7794, -2004318072;
	// begin inline asm
	lop3.b32 %r4219, %r536, %r4221, %r4222, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4223, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4224, %r4222, %r4223;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4227, %r4219, %r4224;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4230, %r547, %r4221, %r4233, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4234, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4235, %r4233, %r4234;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4238, %r4230, %r4235;
	// end inline asm
	shr.u32 	%r4243, %r4221, 8;
	// begin inline asm
	lop3.b32 %r4241, %r536, %r4243, %r4222, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4245, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4246, %r4222, %r4245;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4249, %r4241, %r4246;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4252, %r547, %r4243, %r4233, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4256, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4257, %r4233, %r4256;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4260, %r4252, %r4257;
	// end inline asm
	// begin inline asm
	mov.b32 %r4268, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4279, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r4267, %r7795, -2004318072;
	// begin inline asm
	lop3.b32 %r4265, %r536, %r4267, %r4268, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4269, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4270, %r4268, %r4269;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4273, %r4265, %r4270;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4276, %r547, %r4267, %r4279, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4280, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4281, %r4279, %r4280;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4284, %r4276, %r4281;
	// end inline asm
	shr.u32 	%r4289, %r4267, 8;
	// begin inline asm
	lop3.b32 %r4287, %r536, %r4289, %r4268, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4291, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4292, %r4268, %r4291;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4295, %r4287, %r4292;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4298, %r547, %r4289, %r4279, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4302, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4303, %r4279, %r4302;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4306, %r4298, %r4303;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4309, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4311, %r4309, %r4135;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4314, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4316, %r4314, %r4146;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4319, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4321, %r4319, %r4157;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4324, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4326, %r4324, %r4168;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4329, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4331, %r4329, %r4181;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4334, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4336, %r4334, %r4192;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4339, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4341, %r4339, %r4203;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4344, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4346, %r4344, %r4214;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4349, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4351, %r4349, %r4227;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4354, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4356, %r4354, %r4238;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4359, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4361, %r4359, %r4249;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4364, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4366, %r4364, %r4260;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4369, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4371, %r4369, %r4273;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4374, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4376, %r4374, %r4284;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4379, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4381, %r4379, %r4295;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4384, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4386, %r4384, %r4306;
	// end inline asm
	// begin inline asm
	mov.b32 %r4394, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4405, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4391, %r536, %r1329, %r4394, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4395, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4396, %r4394, %r4395;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4399, %r4391, %r4396;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4402, %r547, %r1329, %r4405, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4406, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4407, %r4405, %r4406;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4410, %r4402, %r4407;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4413, %r536, %r1351, %r4394, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4417, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4418, %r4394, %r4417;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4421, %r4413, %r4418;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4424, %r547, %r1351, %r4405, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4428, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4429, %r4405, %r4428;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4432, %r4424, %r4429;
	// end inline asm
	// begin inline asm
	mov.b32 %r4440, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4451, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4437, %r536, %r1375, %r4440, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4441, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4442, %r4440, %r4441;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4445, %r4437, %r4442;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4448, %r547, %r1375, %r4451, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4452, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4453, %r4451, %r4452;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4456, %r4448, %r4453;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4459, %r536, %r1397, %r4440, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4463, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4464, %r4440, %r4463;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4467, %r4459, %r4464;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4470, %r547, %r1397, %r4451, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4474, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4475, %r4451, %r4474;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4478, %r4470, %r4475;
	// end inline asm
	// begin inline asm
	mov.b32 %r4486, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4497, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4483, %r536, %r1421, %r4486, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4487, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4488, %r4486, %r4487;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4491, %r4483, %r4488;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4494, %r547, %r1421, %r4497, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4498, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4499, %r4497, %r4498;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4502, %r4494, %r4499;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4505, %r536, %r1443, %r4486, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4509, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4510, %r4486, %r4509;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4513, %r4505, %r4510;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4516, %r547, %r1443, %r4497, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4520, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4521, %r4497, %r4520;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4524, %r4516, %r4521;
	// end inline asm
	// begin inline asm
	mov.b32 %r4532, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4543, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4529, %r536, %r1467, %r4532, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4533, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4534, %r4532, %r4533;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4537, %r4529, %r4534;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4540, %r547, %r1467, %r4543, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4544, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4545, %r4543, %r4544;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4548, %r4540, %r4545;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4551, %r536, %r1489, %r4532, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4555, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4556, %r4532, %r4555;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4559, %r4551, %r4556;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4562, %r547, %r1489, %r4543, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4566, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4567, %r4543, %r4566;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4570, %r4562, %r4567;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4573, %r197, %r4399, %r4311;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4577, %r197, %r4410, %r4316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4581, %r197, %r4421, %r4321;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4585, %r197, %r4432, %r4326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4589, %r197, %r4445, %r4331;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4593, %r197, %r4456, %r4336;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4597, %r197, %r4467, %r4341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4601, %r197, %r4478, %r4346;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4605, %r197, %r4491, %r4351;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4609, %r197, %r4502, %r4356;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4613, %r197, %r4513, %r4361;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4617, %r197, %r4524, %r4366;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4621, %r197, %r4537, %r4371;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4625, %r197, %r4548, %r4376;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4629, %r197, %r4559, %r4381;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4633, %r197, %r4570, %r4386;
	// end inline asm
	// begin inline asm
	mov.b32 %r4642, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4653, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4639, %r536, %r537, %r4642, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4643, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4644, %r4642, %r4643;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4647, %r4639, %r4644;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4650, %r547, %r537, %r4653, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4654, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4655, %r4653, %r4654;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4658, %r4650, %r4655;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4661, %r536, %r559, %r4642, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4665, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4666, %r4642, %r4665;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4669, %r4661, %r4666;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4672, %r547, %r559, %r4653, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4676, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4677, %r4653, %r4676;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4680, %r4672, %r4677;
	// end inline asm
	// begin inline asm
	mov.b32 %r4688, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4699, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4685, %r536, %r583, %r4688, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4689, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4690, %r4688, %r4689;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4693, %r4685, %r4690;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4696, %r547, %r583, %r4699, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4700, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4701, %r4699, %r4700;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4704, %r4696, %r4701;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4707, %r536, %r605, %r4688, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4711, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4712, %r4688, %r4711;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4715, %r4707, %r4712;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4718, %r547, %r605, %r4699, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4722, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4723, %r4699, %r4722;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4726, %r4718, %r4723;
	// end inline asm
	// begin inline asm
	mov.b32 %r4734, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4745, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4731, %r536, %r629, %r4734, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4735, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4736, %r4734, %r4735;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4739, %r4731, %r4736;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4742, %r547, %r629, %r4745, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4746, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4747, %r4745, %r4746;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4750, %r4742, %r4747;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4753, %r536, %r651, %r4734, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4757, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4758, %r4734, %r4757;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4761, %r4753, %r4758;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4764, %r547, %r651, %r4745, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4768, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4769, %r4745, %r4768;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4772, %r4764, %r4769;
	// end inline asm
	// begin inline asm
	mov.b32 %r4780, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4791, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4777, %r536, %r675, %r4780, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4781, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4782, %r4780, %r4781;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4785, %r4777, %r4782;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4788, %r547, %r675, %r4791, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4792, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4793, %r4791, %r4792;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4796, %r4788, %r4793;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4799, %r536, %r697, %r4780, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4803, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4804, %r4780, %r4803;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4807, %r4799, %r4804;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4810, %r547, %r697, %r4791, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4814, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4815, %r4791, %r4814;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4818, %r4810, %r4815;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4821, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4823, %r4821, %r4647, %r4573;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4827, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4829, %r4827, %r4658, %r4577;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4833, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4835, %r4833, %r4669, %r4581;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4839, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4841, %r4839, %r4680, %r4585;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4845, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4847, %r4845, %r4693, %r4589;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4851, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4853, %r4851, %r4704, %r4593;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4857, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4859, %r4857, %r4715, %r4597;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4863, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4865, %r4863, %r4726, %r4601;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4869, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4871, %r4869, %r4739, %r4605;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4875, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4877, %r4875, %r4750, %r4609;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4881, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4883, %r4881, %r4761, %r4613;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4887, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4889, %r4887, %r4772, %r4617;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4893, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4895, %r4893, %r4785, %r4621;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4899, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4901, %r4899, %r4796, %r4625;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4905, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4907, %r4905, %r4807, %r4629;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4911, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4913, %r4911, %r4818, %r4633;
	// end inline asm
	// begin inline asm
	mov.b32 %r4922, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4933, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4919, %r536, %r2333, %r4922, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4923, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4924, %r4922, %r4923;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4927, %r4919, %r4924;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4930, %r547, %r2333, %r4933, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4934, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4935, %r4933, %r4934;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4938, %r4930, %r4935;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4941, %r536, %r2355, %r4922, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4945, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4946, %r4922, %r4945;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4949, %r4941, %r4946;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4952, %r547, %r2355, %r4933, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4956, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4957, %r4933, %r4956;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4960, %r4952, %r4957;
	// end inline asm
	// begin inline asm
	mov.b32 %r4968, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4979, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4965, %r536, %r2379, %r4968, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4969, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4970, %r4968, %r4969;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4973, %r4965, %r4970;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4976, %r547, %r2379, %r4979, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4980, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4981, %r4979, %r4980;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4984, %r4976, %r4981;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4987, %r536, %r2401, %r4968, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4991, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4992, %r4968, %r4991;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4995, %r4987, %r4992;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4998, %r547, %r2401, %r4979, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5002, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5003, %r4979, %r5002;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5006, %r4998, %r5003;
	// end inline asm
	// begin inline asm
	mov.b32 %r5014, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5025, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5011, %r536, %r2425, %r5014, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5015, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5016, %r5014, %r5015;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5019, %r5011, %r5016;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5022, %r547, %r2425, %r5025, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5026, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5027, %r5025, %r5026;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5030, %r5022, %r5027;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5033, %r536, %r2447, %r5014, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5037, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5038, %r5014, %r5037;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5041, %r5033, %r5038;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5044, %r547, %r2447, %r5025, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5048, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5049, %r5025, %r5048;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5052, %r5044, %r5049;
	// end inline asm
	// begin inline asm
	mov.b32 %r5060, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5071, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5057, %r536, %r2471, %r5060, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5061, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5062, %r5060, %r5061;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5065, %r5057, %r5062;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5068, %r547, %r2471, %r5071, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5072, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5073, %r5071, %r5072;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5076, %r5068, %r5073;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5079, %r536, %r2493, %r5060, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5083, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5084, %r5060, %r5083;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5087, %r5079, %r5084;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5090, %r547, %r2493, %r5071, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5094, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5095, %r5071, %r5094;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5098, %r5090, %r5095;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5172, %r233, %r4927, %r4823;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5169, %r233, %r4938, %r4829;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5181, %r233, %r4949, %r4835;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5178, %r233, %r4960, %r4841;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5190, %r233, %r4973, %r4847;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5187, %r233, %r4984, %r4853;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5199, %r233, %r4995, %r4859;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5196, %r233, %r5006, %r4865;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5208, %r233, %r5019, %r4871;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5205, %r233, %r5030, %r4877;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5217, %r233, %r5041, %r4883;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5214, %r233, %r5052, %r4889;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5226, %r233, %r5065, %r4895;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5223, %r233, %r5076, %r4901;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5235, %r233, %r5087, %r4907;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5232, %r233, %r5098, %r4913;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5165, %r282;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5167, %r5165, %r5169;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5170, %r279, %r5172, %r5167;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5174, %r282;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5176, %r5174, %r5178;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5179, %r279, %r5181, %r5176;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5183, %r282;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5185, %r5183, %r5187;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5188, %r279, %r5190, %r5185;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5192, %r282;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5194, %r5192, %r5196;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5197, %r279, %r5199, %r5194;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5201, %r282;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5203, %r5201, %r5205;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5206, %r279, %r5208, %r5203;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5210, %r282;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5212, %r5210, %r5214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5215, %r279, %r5217, %r5212;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5219, %r282;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5221, %r5219, %r5223;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5224, %r279, %r5226, %r5221;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5228, %r282;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5230, %r5228, %r5232;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5233, %r279, %r5235, %r5230;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5237, %r282, %r5172;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5240, %r279, %r5169, %r5237;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5244, %r282, %r5181;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5247, %r279, %r5178, %r5244;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5251, %r282, %r5190;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5254, %r279, %r5187, %r5251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5258, %r282, %r5199;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5261, %r279, %r5196, %r5258;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5265, %r282, %r5208;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5268, %r279, %r5205, %r5265;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5272, %r282, %r5217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5275, %r279, %r5214, %r5272;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5279, %r282, %r5226;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5282, %r279, %r5223, %r5279;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5286, %r282, %r5235;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5289, %r279, %r5232, %r5286;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5380, %r5377}, {%r321, %r327, %r324, %r330}, {%r5170, %r5240}, {%r7376, %r7376};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5389, %r5386}, {%r321, %r327, %r324, %r330}, {%r5179, %r5247}, {%r7376, %r7376};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5398, %r5395}, {%r321, %r327, %r324, %r330}, {%r5188, %r5254}, {%r7376, %r7376};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5407, %r5404}, {%r321, %r327, %r324, %r330}, {%r5197, %r5261}, {%r7376, %r7376};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5416, %r5413}, {%r321, %r327, %r324, %r330}, {%r5206, %r5268}, {%r7376, %r7376};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5425, %r5422}, {%r321, %r327, %r324, %r330}, {%r5215, %r5275}, {%r7376, %r7376};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5434, %r5431}, {%r321, %r327, %r324, %r330}, {%r5224, %r5282}, {%r7376, %r7376};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5443, %r5440}, {%r321, %r327, %r324, %r330}, {%r5233, %r5289}, {%r7376, %r7376};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5373, %r368;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5375, %r5373, %r5377;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5378, %r365, %r5380, %r5375;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5382, %r368;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5384, %r5382, %r5386;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5387, %r365, %r5389, %r5384;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5391, %r368;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5393, %r5391, %r5395;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5396, %r365, %r5398, %r5393;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5400, %r368;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5402, %r5400, %r5404;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5405, %r365, %r5407, %r5402;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5409, %r368;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5411, %r5409, %r5413;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5414, %r365, %r5416, %r5411;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5418, %r368;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5420, %r5418, %r5422;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5423, %r365, %r5425, %r5420;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5427, %r368;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5429, %r5427, %r5431;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5432, %r365, %r5434, %r5429;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5436, %r368;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5438, %r5436, %r5440;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5441, %r365, %r5443, %r5438;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5445, %r368, %r5380;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5448, %r365, %r5377, %r5445;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5452, %r368, %r5389;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5455, %r365, %r5386, %r5452;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5459, %r368, %r5398;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5462, %r365, %r5395, %r5459;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5466, %r368, %r5407;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5469, %r365, %r5404, %r5466;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5473, %r368, %r5416;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5476, %r365, %r5413, %r5473;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5480, %r368, %r5425;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5483, %r365, %r5422, %r5480;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5487, %r368, %r5434;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5490, %r365, %r5431, %r5487;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5494, %r368, %r5443;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5497, %r365, %r5440, %r5494;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5501, %r5502}, {%r88, %r90, %r89, %r91}, {%r5378, %r5448}, {%r7376, %r7376};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5511, %r5512}, {%r88, %r90, %r89, %r91}, {%r5387, %r5455}, {%r7376, %r7376};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5521, %r5522}, {%r88, %r90, %r89, %r91}, {%r5396, %r5462}, {%r7376, %r7376};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5531, %r5532}, {%r88, %r90, %r89, %r91}, {%r5405, %r5469}, {%r7376, %r7376};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5541, %r5542}, {%r88, %r90, %r89, %r91}, {%r5414, %r5476}, {%r7376, %r7376};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5551, %r5552}, {%r88, %r90, %r89, %r91}, {%r5423, %r5483}, {%r7376, %r7376};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5561, %r5562}, {%r88, %r90, %r89, %r91}, {%r5432, %r5490}, {%r7376, %r7376};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5571, %r5572}, {%r88, %r90, %r89, %r91}, {%r5441, %r5497}, {%r7376, %r7376};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5581, %r11, %r5501;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5584, %r11, %r5502;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5587, %r11, %r5511;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5590, %r11, %r5512;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5593, %r11, %r5521;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5596, %r11, %r5522;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5599, %r11, %r5531;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5602, %r11, %r5532;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5605, %r11, %r5541;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5608, %r11, %r5542;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5611, %r11, %r5551;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5614, %r11, %r5552;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5617, %r11, %r5561;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5620, %r11, %r5562;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5623, %r11, %r5571;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5626, %r11, %r5572;
	// end inline asm
	// begin inline asm
	mov.b32 %r5629, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5630, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5631, %r5581, %r5629;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5634, %r5631, %r5630;
	// end inline asm
	// begin inline asm
	mov.b32 %r5637, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5638, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5639, %r5584, %r5637;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5642, %r5639, %r5638;
	// end inline asm
	// begin inline asm
	mov.b32 %r5645, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5646, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5647, %r5587, %r5645;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5650, %r5647, %r5646;
	// end inline asm
	// begin inline asm
	mov.b32 %r5653, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5654, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5655, %r5590, %r5653;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5658, %r5655, %r5654;
	// end inline asm
	// begin inline asm
	mov.b32 %r5661, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5662, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5663, %r5593, %r5661;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5666, %r5663, %r5662;
	// end inline asm
	// begin inline asm
	mov.b32 %r5669, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5670, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5671, %r5596, %r5669;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5674, %r5671, %r5670;
	// end inline asm
	// begin inline asm
	mov.b32 %r5677, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5678, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5679, %r5599, %r5677;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5682, %r5679, %r5678;
	// end inline asm
	// begin inline asm
	mov.b32 %r5685, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5686, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5687, %r5602, %r5685;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5690, %r5687, %r5686;
	// end inline asm
	// begin inline asm
	mov.b32 %r5693, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5694, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5695, %r5605, %r5693;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5698, %r5695, %r5694;
	// end inline asm
	// begin inline asm
	mov.b32 %r5701, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5702, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5703, %r5608, %r5701;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5706, %r5703, %r5702;
	// end inline asm
	// begin inline asm
	mov.b32 %r5709, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5710, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5711, %r5611, %r5709;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5714, %r5711, %r5710;
	// end inline asm
	// begin inline asm
	mov.b32 %r5717, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5718, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5719, %r5614, %r5717;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5722, %r5719, %r5718;
	// end inline asm
	// begin inline asm
	mov.b32 %r5725, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5726, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5727, %r5617, %r5725;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5730, %r5727, %r5726;
	// end inline asm
	// begin inline asm
	mov.b32 %r5733, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5734, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5735, %r5620, %r5733;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5738, %r5735, %r5734;
	// end inline asm
	// begin inline asm
	mov.b32 %r5741, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5742, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5743, %r5623, %r5741;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5746, %r5743, %r5742;
	// end inline asm
	// begin inline asm
	mov.b32 %r5749, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5750, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5751, %r5626, %r5749;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5754, %r5751, %r5750;
	// end inline asm
	// begin inline asm
	mov.b32 %r5760, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5758, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5759, %r5760, %r5758;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5762, %r5634, %r5759;
	// end inline asm
	// begin inline asm
	mov.b32 %r5765, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5766, %r5760, %r5765;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5769, %r5642, %r5766;
	// end inline asm
	// begin inline asm
	mov.b32 %r5772, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5773, %r5760, %r5772;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5776, %r5650, %r5773;
	// end inline asm
	// begin inline asm
	mov.b32 %r5779, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5780, %r5760, %r5779;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5783, %r5658, %r5780;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5786, %r5762, %r5776, %r2197;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5790, %r5769, %r5783, %r2197;
	// end inline asm
	shl.b32 	%r5797, %r5790, 4;
	// begin inline asm
	lop3.b32 %r5794, %r2203, %r5786, %r5797, 202;
	// end inline asm
	xor.b32  	%r7729, %r5794, -2004318072;
	// begin inline asm
	mov.b32 %r5801, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5799, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5800, %r5801, %r5799;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5803, %r5666, %r5800;
	// end inline asm
	// begin inline asm
	mov.b32 %r5806, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5807, %r5801, %r5806;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5810, %r5674, %r5807;
	// end inline asm
	// begin inline asm
	mov.b32 %r5813, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5814, %r5801, %r5813;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5817, %r5682, %r5814;
	// end inline asm
	// begin inline asm
	mov.b32 %r5820, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5821, %r5801, %r5820;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5824, %r5690, %r5821;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5827, %r5803, %r5817, %r2197;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5831, %r5810, %r5824, %r2197;
	// end inline asm
	shl.b32 	%r5838, %r5831, 4;
	// begin inline asm
	lop3.b32 %r5835, %r2203, %r5827, %r5838, 202;
	// end inline asm
	xor.b32  	%r7730, %r5835, -2004318072;
	// begin inline asm
	mov.b32 %r5842, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5840, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5841, %r5842, %r5840;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5844, %r5698, %r5841;
	// end inline asm
	// begin inline asm
	mov.b32 %r5847, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5848, %r5842, %r5847;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5851, %r5706, %r5848;
	// end inline asm
	// begin inline asm
	mov.b32 %r5854, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5855, %r5842, %r5854;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5858, %r5714, %r5855;
	// end inline asm
	// begin inline asm
	mov.b32 %r5861, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5862, %r5842, %r5861;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5865, %r5722, %r5862;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5868, %r5844, %r5858, %r2197;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5872, %r5851, %r5865, %r2197;
	// end inline asm
	shl.b32 	%r5879, %r5872, 4;
	// begin inline asm
	lop3.b32 %r5876, %r2203, %r5868, %r5879, 202;
	// end inline asm
	xor.b32  	%r7731, %r5876, -2004318072;
	// begin inline asm
	mov.b32 %r5883, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5881, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5882, %r5883, %r5881;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5885, %r5730, %r5882;
	// end inline asm
	// begin inline asm
	mov.b32 %r5888, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5889, %r5883, %r5888;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5892, %r5738, %r5889;
	// end inline asm
	// begin inline asm
	mov.b32 %r5895, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5896, %r5883, %r5895;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5899, %r5746, %r5896;
	// end inline asm
	// begin inline asm
	mov.b32 %r5902, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5903, %r5883, %r5902;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5906, %r5754, %r5903;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5909, %r5885, %r5899, %r2197;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5913, %r5892, %r5906, %r2197;
	// end inline asm
	shl.b32 	%r5920, %r5913, 4;
	// begin inline asm
	lop3.b32 %r5917, %r2203, %r5909, %r5920, 202;
	// end inline asm
	xor.b32  	%r7732, %r5917, -2004318072;
	st.shared.u32 	[%rd80], %r7729;
	st.shared.u32 	[%rd81], %r7730;
	st.shared.u32 	[%rd82], %r7731;
	st.shared.u32 	[%rd83], %r7732;
	ld.shared.u32 	%r7796, [%rd76];
	ld.shared.u32 	%r7797, [%rd77];
	ld.shared.u32 	%r7798, [%rd78];
	ld.shared.u32 	%r7799, [%rd79];
	// begin inline asm
	mov.b32 %r5926, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5937, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r5925, %r7796, -2004318072;
	// begin inline asm
	lop3.b32 %r5923, %r536, %r5925, %r5926, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5927, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5928, %r5926, %r5927;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5931, %r5923, %r5928;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5934, %r547, %r5925, %r5937, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5938, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5939, %r5937, %r5938;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5942, %r5934, %r5939;
	// end inline asm
	shr.u32 	%r5947, %r5925, 8;
	// begin inline asm
	lop3.b32 %r5945, %r536, %r5947, %r5926, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5949, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5950, %r5926, %r5949;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5953, %r5945, %r5950;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5956, %r547, %r5947, %r5937, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5960, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5961, %r5937, %r5960;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5964, %r5956, %r5961;
	// end inline asm
	// begin inline asm
	mov.b32 %r5972, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5983, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r5971, %r7797, -2004318072;
	// begin inline asm
	lop3.b32 %r5969, %r536, %r5971, %r5972, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5973, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5974, %r5972, %r5973;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5977, %r5969, %r5974;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5980, %r547, %r5971, %r5983, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5984, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5985, %r5983, %r5984;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5988, %r5980, %r5985;
	// end inline asm
	shr.u32 	%r5993, %r5971, 8;
	// begin inline asm
	lop3.b32 %r5991, %r536, %r5993, %r5972, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5995, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5996, %r5972, %r5995;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5999, %r5991, %r5996;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6002, %r547, %r5993, %r5983, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6006, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6007, %r5983, %r6006;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6010, %r6002, %r6007;
	// end inline asm
	// begin inline asm
	mov.b32 %r6018, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6029, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r6017, %r7798, -2004318072;
	// begin inline asm
	lop3.b32 %r6015, %r536, %r6017, %r6018, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6019, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6020, %r6018, %r6019;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6023, %r6015, %r6020;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6026, %r547, %r6017, %r6029, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6030, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6031, %r6029, %r6030;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6034, %r6026, %r6031;
	// end inline asm
	shr.u32 	%r6039, %r6017, 8;
	// begin inline asm
	lop3.b32 %r6037, %r536, %r6039, %r6018, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6041, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6042, %r6018, %r6041;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6045, %r6037, %r6042;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6048, %r547, %r6039, %r6029, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6052, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6053, %r6029, %r6052;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6056, %r6048, %r6053;
	// end inline asm
	// begin inline asm
	mov.b32 %r6064, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6075, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r6063, %r7799, -2004318072;
	// begin inline asm
	lop3.b32 %r6061, %r536, %r6063, %r6064, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6065, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6066, %r6064, %r6065;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6069, %r6061, %r6066;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6072, %r547, %r6063, %r6075, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6076, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6077, %r6075, %r6076;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6080, %r6072, %r6077;
	// end inline asm
	shr.u32 	%r6085, %r6063, 8;
	// begin inline asm
	lop3.b32 %r6083, %r536, %r6085, %r6064, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6087, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6088, %r6064, %r6087;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6091, %r6083, %r6088;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6094, %r547, %r6085, %r6075, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6098, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6099, %r6075, %r6098;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6102, %r6094, %r6099;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6105, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6107, %r6105, %r5931;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6110, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6112, %r6110, %r5942;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6115, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6117, %r6115, %r5953;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6120, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6122, %r6120, %r5964;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6125, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6127, %r6125, %r5977;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6130, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6132, %r6130, %r5988;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6135, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6137, %r6135, %r5999;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6140, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6142, %r6140, %r6010;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6145, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6147, %r6145, %r6023;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6150, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6152, %r6150, %r6034;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6155, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6157, %r6155, %r6045;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6160, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6162, %r6160, %r6056;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6165, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6167, %r6165, %r6069;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6170, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6172, %r6170, %r6080;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6175, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6177, %r6175, %r6091;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6180, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6182, %r6180, %r6102;
	// end inline asm
	// begin inline asm
	mov.b32 %r6190, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6201, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6187, %r536, %r537, %r6190, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6191, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6192, %r6190, %r6191;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6195, %r6187, %r6192;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6198, %r547, %r537, %r6201, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6202, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6203, %r6201, %r6202;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6206, %r6198, %r6203;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6209, %r536, %r559, %r6190, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6213, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6214, %r6190, %r6213;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6217, %r6209, %r6214;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6220, %r547, %r559, %r6201, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6224, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6225, %r6201, %r6224;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6228, %r6220, %r6225;
	// end inline asm
	// begin inline asm
	mov.b32 %r6236, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6247, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6233, %r536, %r583, %r6236, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6237, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6238, %r6236, %r6237;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6241, %r6233, %r6238;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6244, %r547, %r583, %r6247, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6248, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6249, %r6247, %r6248;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6252, %r6244, %r6249;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6255, %r536, %r605, %r6236, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6259, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6260, %r6236, %r6259;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6263, %r6255, %r6260;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6266, %r547, %r605, %r6247, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6270, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6271, %r6247, %r6270;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6274, %r6266, %r6271;
	// end inline asm
	// begin inline asm
	mov.b32 %r6282, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6293, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6279, %r536, %r629, %r6282, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6283, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6284, %r6282, %r6283;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6287, %r6279, %r6284;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6290, %r547, %r629, %r6293, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6294, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6295, %r6293, %r6294;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6298, %r6290, %r6295;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6301, %r536, %r651, %r6282, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6305, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6306, %r6282, %r6305;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6309, %r6301, %r6306;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6312, %r547, %r651, %r6293, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6316, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6317, %r6293, %r6316;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6320, %r6312, %r6317;
	// end inline asm
	// begin inline asm
	mov.b32 %r6328, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6339, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6325, %r536, %r675, %r6328, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6329, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6330, %r6328, %r6329;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6333, %r6325, %r6330;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6336, %r547, %r675, %r6339, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6340, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6341, %r6339, %r6340;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6344, %r6336, %r6341;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6347, %r536, %r697, %r6328, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6351, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6352, %r6328, %r6351;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6355, %r6347, %r6352;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6358, %r547, %r697, %r6339, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6362, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6363, %r6339, %r6362;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6366, %r6358, %r6363;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6369, %r197, %r6195, %r6107;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6373, %r197, %r6206, %r6112;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6377, %r197, %r6217, %r6117;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6381, %r197, %r6228, %r6122;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6385, %r197, %r6241, %r6127;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6389, %r197, %r6252, %r6132;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6393, %r197, %r6263, %r6137;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6397, %r197, %r6274, %r6142;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6401, %r197, %r6287, %r6147;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6405, %r197, %r6298, %r6152;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6409, %r197, %r6309, %r6157;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6413, %r197, %r6320, %r6162;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6417, %r197, %r6333, %r6167;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6421, %r197, %r6344, %r6172;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6425, %r197, %r6355, %r6177;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6429, %r197, %r6366, %r6182;
	// end inline asm
	// begin inline asm
	mov.b32 %r6438, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6449, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6435, %r536, %r2333, %r6438, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6439, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6440, %r6438, %r6439;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6443, %r6435, %r6440;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6446, %r547, %r2333, %r6449, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6450, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6451, %r6449, %r6450;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6454, %r6446, %r6451;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6457, %r536, %r2355, %r6438, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6461, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6462, %r6438, %r6461;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6465, %r6457, %r6462;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6468, %r547, %r2355, %r6449, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6472, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6473, %r6449, %r6472;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6476, %r6468, %r6473;
	// end inline asm
	// begin inline asm
	mov.b32 %r6484, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6495, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6481, %r536, %r2379, %r6484, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6485, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6486, %r6484, %r6485;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6489, %r6481, %r6486;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6492, %r547, %r2379, %r6495, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6496, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6497, %r6495, %r6496;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6500, %r6492, %r6497;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6503, %r536, %r2401, %r6484, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6507, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6508, %r6484, %r6507;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6511, %r6503, %r6508;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6514, %r547, %r2401, %r6495, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6518, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6519, %r6495, %r6518;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6522, %r6514, %r6519;
	// end inline asm
	// begin inline asm
	mov.b32 %r6530, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6541, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6527, %r536, %r2425, %r6530, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6531, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6532, %r6530, %r6531;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6535, %r6527, %r6532;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6538, %r547, %r2425, %r6541, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6542, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6543, %r6541, %r6542;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6546, %r6538, %r6543;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6549, %r536, %r2447, %r6530, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6553, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6554, %r6530, %r6553;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6557, %r6549, %r6554;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6560, %r547, %r2447, %r6541, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6564, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6565, %r6541, %r6564;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6568, %r6560, %r6565;
	// end inline asm
	// begin inline asm
	mov.b32 %r6576, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6587, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6573, %r536, %r2471, %r6576, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6577, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6578, %r6576, %r6577;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6581, %r6573, %r6578;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6584, %r547, %r2471, %r6587, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6588, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6589, %r6587, %r6588;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6592, %r6584, %r6589;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6595, %r536, %r2493, %r6576, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6599, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6600, %r6576, %r6599;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6603, %r6595, %r6600;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6606, %r547, %r2493, %r6587, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6610, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6611, %r6587, %r6610;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6614, %r6606, %r6611;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6617, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6619, %r6617, %r6443, %r6369;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6623, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6625, %r6623, %r6454, %r6373;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6629, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6631, %r6629, %r6465, %r6377;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6635, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6637, %r6635, %r6476, %r6381;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6641, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6643, %r6641, %r6489, %r6385;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6647, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6649, %r6647, %r6500, %r6389;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6653, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6655, %r6653, %r6511, %r6393;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6659, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6661, %r6659, %r6522, %r6397;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6665, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6667, %r6665, %r6535, %r6401;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6671, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6673, %r6671, %r6546, %r6405;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6677, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6679, %r6677, %r6557, %r6409;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6683, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6685, %r6683, %r6568, %r6413;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6689, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6691, %r6689, %r6581, %r6417;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6695, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6697, %r6695, %r6592, %r6421;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6701, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6703, %r6701, %r6603, %r6425;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6707, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6709, %r6707, %r6614, %r6429;
	// end inline asm
	// begin inline asm
	mov.b32 %r6718, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6729, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6715, %r536, %r4129, %r6718, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6719, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6720, %r6718, %r6719;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6723, %r6715, %r6720;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6726, %r547, %r4129, %r6729, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6730, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6731, %r6729, %r6730;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6734, %r6726, %r6731;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6737, %r536, %r4151, %r6718, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6741, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6742, %r6718, %r6741;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6745, %r6737, %r6742;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6748, %r547, %r4151, %r6729, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6752, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6753, %r6729, %r6752;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6756, %r6748, %r6753;
	// end inline asm
	// begin inline asm
	mov.b32 %r6764, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6775, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6761, %r536, %r4175, %r6764, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6765, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6766, %r6764, %r6765;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6769, %r6761, %r6766;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6772, %r547, %r4175, %r6775, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6776, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6777, %r6775, %r6776;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6780, %r6772, %r6777;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6783, %r536, %r4197, %r6764, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6787, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6788, %r6764, %r6787;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6791, %r6783, %r6788;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6794, %r547, %r4197, %r6775, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6798, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6799, %r6775, %r6798;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6802, %r6794, %r6799;
	// end inline asm
	// begin inline asm
	mov.b32 %r6810, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6821, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6807, %r536, %r4221, %r6810, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6811, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6812, %r6810, %r6811;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6815, %r6807, %r6812;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6818, %r547, %r4221, %r6821, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6822, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6823, %r6821, %r6822;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6826, %r6818, %r6823;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6829, %r536, %r4243, %r6810, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6833, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6834, %r6810, %r6833;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6837, %r6829, %r6834;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6840, %r547, %r4243, %r6821, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6844, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6845, %r6821, %r6844;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6848, %r6840, %r6845;
	// end inline asm
	// begin inline asm
	mov.b32 %r6856, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6867, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6853, %r536, %r4267, %r6856, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6857, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6858, %r6856, %r6857;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6861, %r6853, %r6858;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6864, %r547, %r4267, %r6867, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6868, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6869, %r6867, %r6868;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6872, %r6864, %r6869;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6875, %r536, %r4289, %r6856, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6879, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6880, %r6856, %r6879;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6883, %r6875, %r6880;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6886, %r547, %r4289, %r6867, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6890, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6891, %r6867, %r6890;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6894, %r6886, %r6891;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6968, %r233, %r6723, %r6619;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6965, %r233, %r6734, %r6625;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6977, %r233, %r6745, %r6631;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6974, %r233, %r6756, %r6637;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6986, %r233, %r6769, %r6643;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6983, %r233, %r6780, %r6649;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6995, %r233, %r6791, %r6655;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6992, %r233, %r6802, %r6661;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7004, %r233, %r6815, %r6667;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7001, %r233, %r6826, %r6673;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7013, %r233, %r6837, %r6679;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7010, %r233, %r6848, %r6685;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7022, %r233, %r6861, %r6691;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7019, %r233, %r6872, %r6697;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7031, %r233, %r6883, %r6703;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7028, %r233, %r6894, %r6709;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6961, %r282;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6963, %r6961, %r6965;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6966, %r279, %r6968, %r6963;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6970, %r282;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6972, %r6970, %r6974;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6975, %r279, %r6977, %r6972;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6979, %r282;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6981, %r6979, %r6983;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6984, %r279, %r6986, %r6981;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6988, %r282;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6990, %r6988, %r6992;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6993, %r279, %r6995, %r6990;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6997, %r282;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6999, %r6997, %r7001;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7002, %r279, %r7004, %r6999;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7006, %r282;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7008, %r7006, %r7010;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7011, %r279, %r7013, %r7008;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7015, %r282;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7017, %r7015, %r7019;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7020, %r279, %r7022, %r7017;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7024, %r282;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7026, %r7024, %r7028;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7029, %r279, %r7031, %r7026;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7033, %r282, %r6968;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7036, %r279, %r6965, %r7033;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7040, %r282, %r6977;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7043, %r279, %r6974, %r7040;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7047, %r282, %r6986;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7050, %r279, %r6983, %r7047;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7054, %r282, %r6995;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7057, %r279, %r6992, %r7054;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7061, %r282, %r7004;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7064, %r279, %r7001, %r7061;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7068, %r282, %r7013;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7071, %r279, %r7010, %r7068;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7075, %r282, %r7022;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7078, %r279, %r7019, %r7075;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7082, %r282, %r7031;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7085, %r279, %r7028, %r7082;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7176, %r7173}, {%r321, %r327, %r324, %r330}, {%r6966, %r7036}, {%r7376, %r7376};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7185, %r7182}, {%r321, %r327, %r324, %r330}, {%r6975, %r7043}, {%r7376, %r7376};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7194, %r7191}, {%r321, %r327, %r324, %r330}, {%r6984, %r7050}, {%r7376, %r7376};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7203, %r7200}, {%r321, %r327, %r324, %r330}, {%r6993, %r7057}, {%r7376, %r7376};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7212, %r7209}, {%r321, %r327, %r324, %r330}, {%r7002, %r7064}, {%r7376, %r7376};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7221, %r7218}, {%r321, %r327, %r324, %r330}, {%r7011, %r7071}, {%r7376, %r7376};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7230, %r7227}, {%r321, %r327, %r324, %r330}, {%r7020, %r7078}, {%r7376, %r7376};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7239, %r7236}, {%r321, %r327, %r324, %r330}, {%r7029, %r7085}, {%r7376, %r7376};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7169, %r368;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7171, %r7169, %r7173;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7174, %r365, %r7176, %r7171;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7178, %r368;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7180, %r7178, %r7182;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7183, %r365, %r7185, %r7180;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7187, %r368;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7189, %r7187, %r7191;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7192, %r365, %r7194, %r7189;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7196, %r368;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7198, %r7196, %r7200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7201, %r365, %r7203, %r7198;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7205, %r368;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7207, %r7205, %r7209;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7210, %r365, %r7212, %r7207;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7214, %r368;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7216, %r7214, %r7218;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7219, %r365, %r7221, %r7216;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7223, %r368;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7225, %r7223, %r7227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7228, %r365, %r7230, %r7225;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7232, %r368;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7234, %r7232, %r7236;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7237, %r365, %r7239, %r7234;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7241, %r368, %r7176;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7244, %r365, %r7173, %r7241;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7248, %r368, %r7185;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7251, %r365, %r7182, %r7248;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7255, %r368, %r7194;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7258, %r365, %r7191, %r7255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7262, %r368, %r7203;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7265, %r365, %r7200, %r7262;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7269, %r368, %r7212;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7272, %r365, %r7209, %r7269;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7276, %r368, %r7221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7279, %r365, %r7218, %r7276;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7283, %r368, %r7230;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7286, %r365, %r7227, %r7283;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7290, %r368, %r7239;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7293, %r365, %r7236, %r7290;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7297, %r7298}, {%r88, %r90, %r89, %r91}, {%r7174, %r7244}, {%r7376, %r7376};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7307, %r7308}, {%r88, %r90, %r89, %r91}, {%r7183, %r7251}, {%r7376, %r7376};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7317, %r7318}, {%r88, %r90, %r89, %r91}, {%r7192, %r7258}, {%r7376, %r7376};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7327, %r7328}, {%r88, %r90, %r89, %r91}, {%r7201, %r7265}, {%r7376, %r7376};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7337, %r7338}, {%r88, %r90, %r89, %r91}, {%r7210, %r7272}, {%r7376, %r7376};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7347, %r7348}, {%r88, %r90, %r89, %r91}, {%r7219, %r7279}, {%r7376, %r7376};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7357, %r7358}, {%r88, %r90, %r89, %r91}, {%r7228, %r7286}, {%r7376, %r7376};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7367, %r7368}, {%r88, %r90, %r89, %r91}, {%r7237, %r7293}, {%r7376, %r7376};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7377, %r11, %r7297;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7380, %r11, %r7298;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7383, %r11, %r7307;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7386, %r11, %r7308;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7389, %r11, %r7317;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7392, %r11, %r7318;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7395, %r11, %r7327;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7398, %r11, %r7328;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7401, %r11, %r7337;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7404, %r11, %r7338;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7407, %r11, %r7347;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7410, %r11, %r7348;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7413, %r11, %r7357;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7416, %r11, %r7358;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7419, %r11, %r7367;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7422, %r11, %r7368;
	// end inline asm
	// begin inline asm
	mov.b32 %r7425, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7426, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7427, %r7377, %r7425;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7430, %r7427, %r7426;
	// end inline asm
	// begin inline asm
	mov.b32 %r7433, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7434, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7435, %r7380, %r7433;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7438, %r7435, %r7434;
	// end inline asm
	// begin inline asm
	mov.b32 %r7441, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7442, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7443, %r7383, %r7441;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7446, %r7443, %r7442;
	// end inline asm
	// begin inline asm
	mov.b32 %r7449, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7450, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7451, %r7386, %r7449;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7454, %r7451, %r7450;
	// end inline asm
	// begin inline asm
	mov.b32 %r7457, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7458, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7459, %r7389, %r7457;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7462, %r7459, %r7458;
	// end inline asm
	// begin inline asm
	mov.b32 %r7465, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7466, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7467, %r7392, %r7465;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7470, %r7467, %r7466;
	// end inline asm
	// begin inline asm
	mov.b32 %r7473, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7474, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7475, %r7395, %r7473;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7478, %r7475, %r7474;
	// end inline asm
	// begin inline asm
	mov.b32 %r7481, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7482, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7483, %r7398, %r7481;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7486, %r7483, %r7482;
	// end inline asm
	// begin inline asm
	mov.b32 %r7489, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7490, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7491, %r7401, %r7489;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7494, %r7491, %r7490;
	// end inline asm
	// begin inline asm
	mov.b32 %r7497, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7498, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7499, %r7404, %r7497;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7502, %r7499, %r7498;
	// end inline asm
	// begin inline asm
	mov.b32 %r7505, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7506, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7507, %r7407, %r7505;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7510, %r7507, %r7506;
	// end inline asm
	// begin inline asm
	mov.b32 %r7513, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7514, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7515, %r7410, %r7513;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7518, %r7515, %r7514;
	// end inline asm
	// begin inline asm
	mov.b32 %r7521, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7522, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7523, %r7413, %r7521;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7526, %r7523, %r7522;
	// end inline asm
	// begin inline asm
	mov.b32 %r7529, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7530, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7531, %r7416, %r7529;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7534, %r7531, %r7530;
	// end inline asm
	// begin inline asm
	mov.b32 %r7537, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7538, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7539, %r7419, %r7537;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7542, %r7539, %r7538;
	// end inline asm
	// begin inline asm
	mov.b32 %r7545, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7546, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7547, %r7422, %r7545;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7550, %r7547, %r7546;
	// end inline asm
	// begin inline asm
	mov.b32 %r7556, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r7554, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7555, %r7556, %r7554;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7558, %r7430, %r7555;
	// end inline asm
	// begin inline asm
	mov.b32 %r7561, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7562, %r7556, %r7561;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7565, %r7438, %r7562;
	// end inline asm
	// begin inline asm
	mov.b32 %r7568, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7569, %r7556, %r7568;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7572, %r7446, %r7569;
	// end inline asm
	// begin inline asm
	mov.b32 %r7575, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7576, %r7556, %r7575;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7579, %r7454, %r7576;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7582, %r7558, %r7572, %r2197;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7586, %r7565, %r7579, %r2197;
	// end inline asm
	shl.b32 	%r7593, %r7586, 4;
	// begin inline asm
	lop3.b32 %r7590, %r2203, %r7582, %r7593, 202;
	// end inline asm
	xor.b32  	%r7733, %r7590, -2004318072;
	// begin inline asm
	mov.b32 %r7597, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r7595, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7596, %r7597, %r7595;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7599, %r7462, %r7596;
	// end inline asm
	// begin inline asm
	mov.b32 %r7602, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7603, %r7597, %r7602;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7606, %r7470, %r7603;
	// end inline asm
	// begin inline asm
	mov.b32 %r7609, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7610, %r7597, %r7609;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7613, %r7478, %r7610;
	// end inline asm
	// begin inline asm
	mov.b32 %r7616, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7617, %r7597, %r7616;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7620, %r7486, %r7617;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7623, %r7599, %r7613, %r2197;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7627, %r7606, %r7620, %r2197;
	// end inline asm
	shl.b32 	%r7634, %r7627, 4;
	// begin inline asm
	lop3.b32 %r7631, %r2203, %r7623, %r7634, 202;
	// end inline asm
	xor.b32  	%r7734, %r7631, -2004318072;
	// begin inline asm
	mov.b32 %r7638, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r7636, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7637, %r7638, %r7636;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7640, %r7494, %r7637;
	// end inline asm
	// begin inline asm
	mov.b32 %r7643, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7644, %r7638, %r7643;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7647, %r7502, %r7644;
	// end inline asm
	// begin inline asm
	mov.b32 %r7650, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7651, %r7638, %r7650;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7654, %r7510, %r7651;
	// end inline asm
	// begin inline asm
	mov.b32 %r7657, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7658, %r7638, %r7657;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7661, %r7518, %r7658;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7664, %r7640, %r7654, %r2197;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7668, %r7647, %r7661, %r2197;
	// end inline asm
	shl.b32 	%r7675, %r7668, 4;
	// begin inline asm
	lop3.b32 %r7672, %r2203, %r7664, %r7675, 202;
	// end inline asm
	xor.b32  	%r7735, %r7672, -2004318072;
	// begin inline asm
	mov.b32 %r7679, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r7677, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7678, %r7679, %r7677;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7681, %r7526, %r7678;
	// end inline asm
	// begin inline asm
	mov.b32 %r7684, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7685, %r7679, %r7684;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7688, %r7534, %r7685;
	// end inline asm
	// begin inline asm
	mov.b32 %r7691, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7692, %r7679, %r7691;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7695, %r7542, %r7692;
	// end inline asm
	// begin inline asm
	mov.b32 %r7698, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7699, %r7679, %r7698;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7702, %r7550, %r7699;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7705, %r7681, %r7695, %r2197;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7709, %r7688, %r7702, %r2197;
	// end inline asm
	shl.b32 	%r7716, %r7709, 4;
	// begin inline asm
	lop3.b32 %r7713, %r2203, %r7705, %r7716, 202;
	// end inline asm
	xor.b32  	%r7736, %r7713, -2004318072;
	st.shared.u32 	[%rd80], %r7733;
	st.shared.u32 	[%rd81], %r7734;
	st.shared.u32 	[%rd82], %r7735;
	st.shared.u32 	[%rd83], %r7736;
	add.s32 	%r7787, %r7787, -64;
	add.s64 	%rd86, %rd86, 8324;
	setp.eq.s32 	%p217, %r7787, 0;
	@%p217 bra 	LBB0_114;
	bra.uni 	LBB0_113;
LBB0_114:                               // %guard_pass10509
                                        //   in Loop: Header=BB0_112 Depth=1
	bar.sync 	0;
	ld.shared.u32 	%r7742, [%rd9];
	ld.shared.u32 	%r7743, [%rd10+128];
	ld.shared.u32 	%r7750, [%rd10+4];
	ld.shared.u32 	%r7751, [%rd10+132];
	// begin inline asm
	prmt.b32 %r7737, %r7742, %r7743, %r514;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7741, %r7742, %r7743, %r518;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7745, %r7750, %r7751, %r514;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7749, %r7750, %r7751, %r518;
	// end inline asm
	selp.b32 	%r7753, %r7741, %r7737, %p216;
	shfl.sync.bfly.b32	%r160, %r7753, 8, 31, -1;
	selp.b32 	%r7754, %r7749, %r7745, %p216;
	shfl.sync.bfly.b32	%r161, %r7754, 8, 31, -1;
	setp.eq.s32 	%p219, %r110, 0;
	@%p219 bra 	LBB0_116;
// %bb.115:                             // %L29132
                                        //   in Loop: Header=BB0_112 Depth=1
	selp.b32 	%r7755, %r161, %r7749, %p216;
	selp.b32 	%r7756, %r7745, %r161, %p216;
	selp.b32 	%r7757, %r160, %r7741, %p216;
	selp.b32 	%r7758, %r7737, %r160, %p216;
	shl.b32 	%r7759, %r110, 12;
	add.s32 	%r7760, %r97, %r7759;
	mul.wide.s32 	%rd84, %r7760, 4;
	add.s64 	%rd85, %rd3, %rd84;
	st.global.v4.u32 	[%rd85], {%r7758, %r7756, %r7757, %r7755};
	bra.uni 	LBB0_116;
LBB0_117:                               // %L29350
	st.global.u32 	[%rd4], %r7376;
	ret;
LBB0_1:                                 // %L8
	mov.u64 	%rd30, exception1;
	cvta.global.u64 	%rd31, %rd30;
	{ // callseq 0, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd31;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 0
	{ // callseq 1, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd21;
	st.param.b32 	[param0+8], %r162;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 1
	// begin inline asm
	exit;
	// end inline asm
	// begin inline asm
	exit;
	// end inline asm
LBB0_3:                                 // %L164
	mov.u32 	%r168, 2;
	st.global.u32 	[%rd4], %r168;
	mov.u64 	%rd33, exception2325;
	cvta.global.u64 	%rd34, %rd33;
	{ // callseq 2, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd34;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 2
	{ // callseq 3, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd21;
	st.param.b32 	[param0+8], %r162;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 3
	// begin inline asm
	exit;
	// end inline asm
	// begin inline asm
	exit;
	// end inline asm
LBB0_119:                               // %L29449
	{ // callseq 5, 0
	.reg .b32 temp_param_reg;
	call.uni 
	julia_AssertionError_9513, 
	(
	);
	} // callseq 5
	mov.u64 	%rd41, exception1;
	cvta.global.u64 	%rd42, %rd41;
	{ // callseq 6, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd42;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 6
	{ // callseq 7, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd21;
	st.param.b32 	[param0+8], %r162;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 7
	// begin inline asm
	exit;
	// end inline asm
	// begin inline asm
	exit;
	// end inline asm
LBB0_118:                               // %L29446
	{ // callseq 9, 0
	.reg .b32 temp_param_reg;
	call.uni 
	julia_AssertionError_9513, 
	(
	);
	} // callseq 9
	mov.u64 	%rd47, exception1;
	cvta.global.u64 	%rd48, %rd47;
	{ // callseq 10, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd48;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 10
	{ // callseq 11, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd21;
	st.param.b32 	[param0+8], %r162;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 11
	// begin inline asm
	exit;
	// end inline asm
	// begin inline asm
	exit;
	// end inline asm
LBB0_144:                               // %L29443
	{ // callseq 15, 0
	.reg .b32 temp_param_reg;
	call.uni 
	julia_AssertionError_9513, 
	(
	);
	} // callseq 15
	mov.u64 	%rd61, exception1;
	cvta.global.u64 	%rd62, %rd61;
	{ // callseq 16, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd62;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 16
	{ // callseq 17, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd21;
	st.param.b32 	[param0+8], %r162;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 17
	// begin inline asm
	exit;
	// end inline asm
	// begin inline asm
	exit;
	// end inline asm
                                        // -- End function
}
