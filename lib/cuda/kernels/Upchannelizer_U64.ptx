// PTX CompilerJob of upchan(CuDeviceVector{Int32, 1}, CuDeviceVector{Float16x2, 1}, CuDeviceVector{Int4x8, 1}, CuDeviceVector{Int4x8, 1}, CuDeviceVector{Int32, 1}) in world 33605 for sm_86, minthreads=512, blocks_per_sm=2

//
// Generated by LLVM NVPTX Back-End
//

.version 7.1
.target sm_86
.address_size 64

	// .globl	_Z17julia_upchan_407113CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE // -- Begin function _Z17julia_upchan_407113CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE
.func julia_AssertionError_9656
()
.noreturn
{
	trap;
}
.func gpu_report_exception
(
	.param .b64 gpu_report_exception_param_0
)
.noreturn
{
	trap;
}
.func gpu_signal_exception
(
	.param .align 8 .b8 gpu_signal_exception_param_0[8]
)
.noreturn
{
	trap;
}
.func  (.param .b64 func_retval0) julia_power_by_squaring_9667
(
	.param .align 8 .b8 julia_power_by_squaring_9667_param_0[8],
	.param .b64 julia_power_by_squaring_9667_param_1,
	.param .b64 julia_power_by_squaring_9667_param_2
)
.noreturn
{
	trap;
}
.extern .shared .align 32 .b8 shmem[];
.global .align 1 .b8 exception2325[6] = {101, 114, 114, 111, 114, 0};
.global .align 1 .b8 exception1[10] = {101, 120, 99, 101, 112, 116, 105, 111, 110, 0};
                                        // @_Z17julia_upchan_407113CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE
.visible .entry _Z17julia_upchan_407113CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE(
	.param .align 8 .b8 _Z17julia_upchan_407113CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_0[8],
	.param .align 8 .b8 _Z17julia_upchan_407113CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_1[32],
	.param .align 8 .b8 _Z17julia_upchan_407113CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_2[32],
	.param .align 8 .b8 _Z17julia_upchan_407113CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_3[32],
	.param .align 8 .b8 _Z17julia_upchan_407113CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_4[32],
	.param .align 8 .b8 _Z17julia_upchan_407113CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_5[32]
)
.reqntid 512, 1, 1
.minnctapersm 2
{
	.reg .pred 	%p<222>;
	.reg .b16 	%rs<1185>;
	.reg .b32 	%r<7803>;
	.reg .f32 	%f<930>;
	.reg .b64 	%rd<87>;

// %bb.0:                               // %conversion
	ld.param.u64 	%rd21, [_Z17julia_upchan_407113CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_0];
	// begin inline asm
	mov.u32 %r160, %dynamic_smem_size;
	// end inline asm
	setp.gt.u32 	%p1, %r160, 66815;
	@%p1 bra 	LBB0_2;
	bra.uni 	LBB0_1;
LBB0_2:                                 // %L10
	ld.param.u64 	%rd26, [_Z17julia_upchan_407113CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_5];
	ld.param.u64 	%rd22, [_Z17julia_upchan_407113CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_1];
	mov.u32 	%r1, %ctaid.x;
	shl.b32 	%r2, %r1, 9;
	mov.u32 	%r3, %tid.y;
	shl.b32 	%r4, %r3, 5;
	mov.u32 	%r5, %tid.x;
	or.b32  	%r161, %r4, %r5;
	or.b32  	%r162, %r161, %r2;
	mul.wide.u32 	%rd32, %r162, 4;
	add.s64 	%rd4, %rd26, %rd32;
	mov.u32 	%r163, 1;
	st.global.u32 	[%rd4], %r163;
	ld.global.u32 	%r6, [%rd22];
	and.b32  	%r164, %r6, -32513;
	setp.eq.s32 	%p2, %r164, 0;
	@%p2 bra 	LBB0_4;
	bra.uni 	LBB0_3;
LBB0_4:                                 // %L255
	bfe.u32 	%r13, %r5, 1, 1;
	and.b32  	%r14, %r5, 1;
	bfe.u32 	%r16, %r5, 2, 1;
	shr.u32 	%r17, %r5, 4;
	shl.b32 	%r173, %r17, 1;
	shl.b32 	%r174, %r16, 2;
	shl.b32 	%r175, %r14, 3;
	shl.b32 	%r176, %r13, 4;
	or.b32  	%r177, %r175, %r176;
	or.b32  	%r178, %r174, %r177;
	or.b32  	%r179, %r173, %r178;
	bfe.u32 	%r19, %r5, 3, 1;
	or.b32  	%r20, %r19, %r179;
	or.b32  	%r21, %r20, 32;
	mov.f32 	%f185, 0f40000000;
	mov.f32 	%f186, 0f437F0000;
	div.approx.f32 	%f1, %f186, %f185;
	cvt.rn.f32.s32 	%f187, %r20;
	sub.f32 	%f188, %f187, %f1;
	mov.f32 	%f217, 0f42800000;
	div.approx.f32 	%f3, %f188, %f217;
	setp.eq.f32 	%p8, %f3, 0f00000000;
	mov.f32 	%f897, 0f3F800000;
	mov.f32 	%f890, %f897;
	@%p8 bra 	LBB0_6;
// %bb.5:                               // %L466
	sin.approx.f32 	%f218, %f3;
	div.approx.f32 	%f890, %f218, %f3;
LBB0_6:                                 // %L469
	cvt.rn.f32.s32 	%f221, %r21;
	sub.f32 	%f222, %f221, %f1;
	div.approx.f32 	%f8, %f222, %f217;
	setp.eq.f32 	%p14, %f8, 0f00000000;
	mov.f32 	%f891, %f897;
	@%p14 bra 	LBB0_8;
// %bb.7:                               // %L486
	sin.approx.f32 	%f252, %f8;
	div.approx.f32 	%f891, %f252, %f8;
LBB0_8:                                 // %L489
	or.b32  	%r197, %r20, 64;
	or.b32  	%r23, %r20, 96;
	cvt.rn.f32.s32 	%f256, %r197;
	sub.f32 	%f257, %f256, %f1;
	div.approx.f32 	%f12, %f257, %f217;
	setp.eq.f32 	%p20, %f12, 0f00000000;
	mov.f32 	%f892, %f897;
	@%p20 bra 	LBB0_10;
// %bb.9:                               // %L567
	sin.approx.f32 	%f287, %f12;
	div.approx.f32 	%f892, %f287, %f12;
LBB0_10:                                // %L570
	cvt.rn.f32.s32 	%f290, %r23;
	sub.f32 	%f291, %f290, %f1;
	div.approx.f32 	%f17, %f291, %f217;
	setp.eq.f32 	%p26, %f17, 0f00000000;
	mov.f32 	%f893, %f897;
	@%p26 bra 	LBB0_12;
// %bb.11:                              // %L587
	sin.approx.f32 	%f321, %f17;
	div.approx.f32 	%f893, %f321, %f17;
LBB0_12:                                // %L590
	shl.b32 	%r166, %r5, 1;
	or.b32  	%r215, %r20, 128;
	or.b32  	%r25, %r20, 160;
	cvt.rn.f32.s32 	%f325, %r215;
	sub.f32 	%f326, %f325, %f1;
	div.approx.f32 	%f21, %f326, %f217;
	setp.eq.f32 	%p32, %f21, 0f00000000;
	mov.f32 	%f894, %f897;
	@%p32 bra 	LBB0_14;
// %bb.13:                              // %L668
	sin.approx.f32 	%f356, %f21;
	div.approx.f32 	%f894, %f356, %f21;
LBB0_14:                                // %L671
	and.b32  	%r167, %r166, 8;
	shl.b32 	%r8, %r5, 2;
	and.b32  	%r169, %r5, 18;
	cvt.rn.f32.s32 	%f359, %r25;
	sub.f32 	%f360, %f359, %f1;
	div.approx.f32 	%f26, %f360, %f217;
	setp.eq.f32 	%p38, %f26, 0f00000000;
	mov.f32 	%f895, %f897;
	@%p38 bra 	LBB0_16;
// %bb.15:                              // %L688
	sin.approx.f32 	%f390, %f26;
	div.approx.f32 	%f895, %f390, %f26;
LBB0_16:                                // %L691
	and.b32  	%r168, %r8, 4;
	or.b32  	%r170, %r169, %r167;
	or.b32  	%r233, %r20, 192;
	or.b32  	%r27, %r20, 224;
	cvt.rn.f32.s32 	%f394, %r233;
	sub.f32 	%f395, %f394, %f1;
	div.approx.f32 	%f30, %f395, %f217;
	setp.eq.f32 	%p44, %f30, 0f00000000;
	mov.f32 	%f896, %f897;
	@%p44 bra 	LBB0_18;
// %bb.17:                              // %L769
	sin.approx.f32 	%f425, %f30;
	div.approx.f32 	%f896, %f425, %f30;
LBB0_18:                                // %L772
	and.b32  	%r9, %r8, 32;
	or.b32  	%r171, %r170, %r168;
	cvt.rn.f32.s32 	%f428, %r27;
	sub.f32 	%f429, %f428, %f1;
	div.approx.f32 	%f35, %f429, %f217;
	setp.eq.f32 	%p50, %f35, 0f00000000;
	@%p50 bra 	LBB0_20;
// %bb.19:                              // %L789
	sin.approx.f32 	%f459, %f35;
	div.approx.f32 	%f897, %f459, %f35;
LBB0_20:                                // %L792
	or.b32  	%r172, %r171, %r9;
	mul.lo.s32 	%r29, %r20, 63;
	cvt.rn.f32.s32 	%f462, %r29;
	div.approx.f32 	%f38, %f462, %f217;
	abs.f32 	%f900, %f38;
	setp.lt.f32 	%p51, %f900, 0f40000000;
	@%p51 bra 	LBB0_32;
// %bb.21:
	setp.gtu.f32 	%p52, %f900, 0f4B800000;
	@%p52 bra 	LBB0_28;
	bra.uni 	LBB0_22;
LBB0_28:
	mov.b32 	%r31, %f900;
	and.b32  	%r251, %r31, 8388607;
	or.b32  	%r7761, %r251, 1065353216;
	mov.b32 	%f899, %r7761;
	add.s32 	%r252, %r31, -1073741824;
	and.b32  	%r7762, %r252, -8388608;
	setp.eq.s32 	%p58, %r7762, 0;
	@%p58 bra 	LBB0_31;
// %bb.29:                              // %__nv_fmaf_rn.exit4.i.i.i.preheader
	mov.f32 	%f473, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f472,%f473;
	// end inline asm
LBB0_30:                                // %__nv_fmaf_rn.exit4.i.i.i
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r253, %r7762, 192937984;
	add.s32 	%r254, %r253, %r7761;
	mov.b32 	%f474, %r254;
	mul.f32 	%f475, %f472, %f474;
	sub.f32 	%f476, %f474, %f475;
	fma.rn.f32 	%f477, %f476, %f472, %f475;
	sub.f32 	%f478, %f474, %f477;
	fma.rz.f32 	%f479, %f478, %f472, %f477;
	cvt.rzi.f32.f32 	%f480, %f479;
	sub.f32 	%f899, %f474, %f480;
	sub.s32 	%r7762, %r7762, %r253;
	mov.b32 	%r7761, %f899;
	setp.ne.s32 	%p59, %r7762, 0;
	setp.ne.s32 	%p60, %r7761, 0;
	and.pred  	%p61, %p59, %p60;
	@%p61 bra 	LBB0_30;
LBB0_31:                                // %__internal_fmodf_slowpath_mod.exit.i.i
	setp.gt.u32 	%p62, %r31, 2139095039;
	selp.f32 	%f481, 0f7FFFFFFF, 0f4B800000, %p62;
	mul.f32 	%f482, %f899, 0f34000000;
	mul.f32 	%f900, %f481, %f482;
	bra.uni 	LBB0_32;
LBB0_22:                                // %__nv_fast_fdividef.exit.i.i.i
	div.approx.f32 	%f465, %f900, %f185;
	cvt.rzi.f32.f32 	%f898, %f465;
	fma.rn.f32 	%f41, %f898, 0fC0000000, %f900;
	mov.b32 	%r30, %f41;
	setp.lt.u32 	%p53, %r30, 1073741824;
	@%p53 bra 	LBB0_27;
// %bb.23:
	setp.lt.u32 	%p54, %r30, -2147483647;
	@%p54 bra 	LBB0_25;
// %bb.24:
	add.f32 	%f470, %f898, 0fBF800000;
	setp.lt.f32 	%p57, %f41, 0fC0000000;
	add.f32 	%f471, %f470, 0fBF800000;
	selp.f32 	%f898, %f471, %f470, %p57;
	bra.uni 	LBB0_27;
LBB0_25:
	add.f32 	%f898, %f898, 0f3F800000;
	setp.ltu.f32 	%p55, %f41, 0f40800000;
	@%p55 bra 	LBB0_27;
// %bb.26:                              // %__nv_fmaf_rn.exit.i.i.i
	add.f32 	%f466, %f898, 0f3F800000;
	fma.rn.f32 	%f468, %f185, 0fC0400000, %f41;
	setp.ge.f32 	%p56, %f468, 0f00000000;
	add.f32 	%f469, %f466, 0f3F800000;
	selp.f32 	%f898, %f469, %f466, %p56;
LBB0_27:                                // %__internal_fmodf_fastpath_quot.exit.i.i
	fma.rn.f32 	%f900, %f898, 0fC0000000, %f900;
LBB0_32:                                // %__internal_fmodf_kernel.exit.i
	shr.u32 	%r10, %r172, 1;
	abs.f32 	%f483, %f900;
	setp.gtu.f32 	%p63, %f483, 0f7F800000;
	@%p63 bra 	LBB0_34;
// %bb.33:
	mov.b32 	%r255, %f38;
	and.b32  	%r256, %r255, -2147483648;
	mov.b32 	%r257, %f900;
	or.b32  	%r258, %r256, %r257;
	mov.b32 	%f900, %r258;
LBB0_34:                                // %__nv_fmodf.exit
	ld.param.u64 	%rd1, [_Z17julia_upchan_407113CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_2];
	mul.wide.u32 	%rd35, %r10, 4;
	add.s32 	%r267, %r29, 2016;
	cvt.rn.f32.s32 	%f515, %r267;
	div.approx.f32 	%f57, %f515, %f217;
	abs.f32 	%f904, %f57;
	setp.lt.f32 	%p71, %f904, 0f40000000;
	@%p71 bra 	LBB0_46;
// %bb.35:
	setp.gtu.f32 	%p72, %f904, 0f4B800000;
	@%p72 bra 	LBB0_42;
	bra.uni 	LBB0_36;
LBB0_42:
	mov.b32 	%r39, %f904;
	and.b32  	%r268, %r39, 8388607;
	or.b32  	%r7763, %r268, 1065353216;
	mov.b32 	%f903, %r7763;
	add.s32 	%r269, %r39, -1073741824;
	and.b32  	%r7764, %r269, -8388608;
	setp.eq.s32 	%p78, %r7764, 0;
	@%p78 bra 	LBB0_45;
// %bb.43:                              // %__nv_fmaf_rn.exit4.i.i.i1136.preheader
	mov.f32 	%f526, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f525,%f526;
	// end inline asm
LBB0_44:                                // %__nv_fmaf_rn.exit4.i.i.i1136
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r270, %r7764, 192937984;
	add.s32 	%r271, %r270, %r7763;
	mov.b32 	%f527, %r271;
	mul.f32 	%f528, %f525, %f527;
	sub.f32 	%f529, %f527, %f528;
	fma.rn.f32 	%f530, %f529, %f525, %f528;
	sub.f32 	%f531, %f527, %f530;
	fma.rz.f32 	%f532, %f531, %f525, %f530;
	cvt.rzi.f32.f32 	%f533, %f532;
	sub.f32 	%f903, %f527, %f533;
	sub.s32 	%r7764, %r7764, %r270;
	mov.b32 	%r7763, %f903;
	setp.ne.s32 	%p79, %r7764, 0;
	setp.ne.s32 	%p80, %r7763, 0;
	and.pred  	%p81, %p79, %p80;
	@%p81 bra 	LBB0_44;
LBB0_45:                                // %__internal_fmodf_slowpath_mod.exit.i.i1138
	setp.gt.u32 	%p82, %r39, 2139095039;
	selp.f32 	%f534, 0f7FFFFFFF, 0f4B800000, %p82;
	mul.f32 	%f535, %f903, 0f34000000;
	mul.f32 	%f904, %f534, %f535;
	bra.uni 	LBB0_46;
LBB0_36:                                // %__nv_fast_fdividef.exit.i.i.i1108
	div.approx.f32 	%f518, %f904, %f185;
	cvt.rzi.f32.f32 	%f902, %f518;
	fma.rn.f32 	%f60, %f902, 0fC0000000, %f904;
	mov.b32 	%r38, %f60;
	setp.lt.u32 	%p73, %r38, 1073741824;
	@%p73 bra 	LBB0_41;
// %bb.37:
	setp.lt.u32 	%p74, %r38, -2147483647;
	@%p74 bra 	LBB0_39;
// %bb.38:
	add.f32 	%f523, %f902, 0fBF800000;
	setp.lt.f32 	%p77, %f60, 0fC0000000;
	add.f32 	%f524, %f523, 0fBF800000;
	selp.f32 	%f902, %f524, %f523, %p77;
	bra.uni 	LBB0_41;
LBB0_39:
	add.f32 	%f902, %f902, 0f3F800000;
	setp.ltu.f32 	%p75, %f60, 0f40800000;
	@%p75 bra 	LBB0_41;
// %bb.40:                              // %__nv_fmaf_rn.exit.i.i.i1113
	add.f32 	%f519, %f902, 0f3F800000;
	fma.rn.f32 	%f521, %f185, 0fC0400000, %f60;
	setp.ge.f32 	%p76, %f521, 0f00000000;
	add.f32 	%f522, %f519, 0f3F800000;
	selp.f32 	%f902, %f522, %f519, %p76;
LBB0_41:                                // %__internal_fmodf_fastpath_quot.exit.i.i1117
	fma.rn.f32 	%f904, %f902, 0fC0000000, %f904;
LBB0_46:                                // %__internal_fmodf_kernel.exit.i1142
	add.s64 	%rd36, %rd1, %rd35;
	abs.f32 	%f536, %f904;
	setp.gtu.f32 	%p83, %f536, 0f7F800000;
	@%p83 bra 	LBB0_48;
// %bb.47:
	mov.b32 	%r272, %f57;
	and.b32  	%r273, %r272, -2147483648;
	mov.b32 	%r274, %f904;
	or.b32  	%r275, %r273, %r274;
	mov.b32 	%f904, %r275;
LBB0_48:                                // %__nv_fmodf.exit1143
	ld.global.u32 	%r11, [%rd36];
	mov.u64 	%rd37, 2;
	mov.u64 	%rd38, 6;
	{ // callseq 4, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd21;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd37;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd38;
	.param .b64 retval0;
	call.uni (retval0), 
	julia_power_by_squaring_9667, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64 	%rd39, [retval0+0];
	} // callseq 4
	setp.ne.s64 	%p91, %rd39, 64;
	@%p91 bra 	LBB0_119;
// %bb.49:                              // %L889
	shr.u32 	%r15, %r5, 2;
	and.b32  	%r290, %r5, 3;
	shl.b32 	%r291, %r290, 1;
	neg.s32 	%r48, %r291;
	mul.lo.s32 	%r49, %r48, %r15;
	cvt.rn.f32.s32 	%f74, %r49;
	mov.f32 	%f570, 0f41000000;
	div.approx.f32 	%f75, %f74, %f570;
	abs.f32 	%f908, %f75;
	setp.lt.f32 	%p92, %f908, 0f40000000;
	@%p92 bra 	LBB0_61;
// %bb.50:
	setp.gtu.f32 	%p93, %f908, 0f4B800000;
	@%p93 bra 	LBB0_57;
	bra.uni 	LBB0_51;
LBB0_57:
	mov.b32 	%r51, %f908;
	and.b32  	%r292, %r51, 8388607;
	or.b32  	%r7765, %r292, 1065353216;
	mov.b32 	%f907, %r7765;
	add.s32 	%r293, %r51, -1073741824;
	and.b32  	%r7766, %r293, -8388608;
	setp.eq.s32 	%p99, %r7766, 0;
	@%p99 bra 	LBB0_60;
// %bb.58:                              // %__nv_fmaf_rn.exit4.i.i.i1182.preheader
	mov.f32 	%f580, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f579,%f580;
	// end inline asm
LBB0_59:                                // %__nv_fmaf_rn.exit4.i.i.i1182
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r294, %r7766, 192937984;
	add.s32 	%r295, %r294, %r7765;
	mov.b32 	%f581, %r295;
	mul.f32 	%f582, %f579, %f581;
	sub.f32 	%f583, %f581, %f582;
	fma.rn.f32 	%f584, %f583, %f579, %f582;
	sub.f32 	%f585, %f581, %f584;
	fma.rz.f32 	%f586, %f585, %f579, %f584;
	cvt.rzi.f32.f32 	%f587, %f586;
	sub.f32 	%f907, %f581, %f587;
	sub.s32 	%r7766, %r7766, %r294;
	mov.b32 	%r7765, %f907;
	setp.ne.s32 	%p100, %r7766, 0;
	setp.ne.s32 	%p101, %r7765, 0;
	and.pred  	%p102, %p100, %p101;
	@%p102 bra 	LBB0_59;
LBB0_60:                                // %__internal_fmodf_slowpath_mod.exit.i.i1184
	setp.gt.u32 	%p103, %r51, 2139095039;
	selp.f32 	%f588, 0f7FFFFFFF, 0f4B800000, %p103;
	mul.f32 	%f589, %f907, 0f34000000;
	mul.f32 	%f908, %f588, %f589;
	bra.uni 	LBB0_61;
LBB0_51:                                // %__nv_fast_fdividef.exit.i.i.i1154
	div.approx.f32 	%f572, %f908, %f185;
	cvt.rzi.f32.f32 	%f906, %f572;
	fma.rn.f32 	%f78, %f906, 0fC0000000, %f908;
	mov.b32 	%r50, %f78;
	setp.lt.u32 	%p94, %r50, 1073741824;
	@%p94 bra 	LBB0_56;
// %bb.52:
	setp.lt.u32 	%p95, %r50, -2147483647;
	@%p95 bra 	LBB0_54;
// %bb.53:
	add.f32 	%f577, %f906, 0fBF800000;
	setp.lt.f32 	%p98, %f78, 0fC0000000;
	add.f32 	%f578, %f577, 0fBF800000;
	selp.f32 	%f906, %f578, %f577, %p98;
	bra.uni 	LBB0_56;
LBB0_54:
	add.f32 	%f906, %f906, 0f3F800000;
	setp.ltu.f32 	%p96, %f78, 0f40800000;
	@%p96 bra 	LBB0_56;
// %bb.55:                              // %__nv_fmaf_rn.exit.i.i.i1159
	add.f32 	%f573, %f906, 0f3F800000;
	fma.rn.f32 	%f575, %f185, 0fC0400000, %f78;
	setp.ge.f32 	%p97, %f575, 0f00000000;
	add.f32 	%f576, %f573, 0f3F800000;
	selp.f32 	%f906, %f576, %f573, %p97;
LBB0_56:                                // %__internal_fmodf_fastpath_quot.exit.i.i1163
	fma.rn.f32 	%f908, %f906, 0fC0000000, %f908;
LBB0_61:                                // %__internal_fmodf_kernel.exit.i1188
	abs.f32 	%f590, %f908;
	setp.gtu.f32 	%p104, %f590, 0f7F800000;
	@%p104 bra 	LBB0_63;
// %bb.62:
	mov.b32 	%r296, %f75;
	and.b32  	%r297, %r296, -2147483648;
	mov.b32 	%r298, %f908;
	or.b32  	%r299, %r297, %r298;
	mov.b32 	%f908, %r299;
LBB0_63:                                // %__nv_fmodf.exit1189
	shl.b32 	%r308, %r15, 3;
	sub.s32 	%r309, %r49, %r308;
	cvt.rn.f32.s32 	%f94, %r309;
	div.approx.f32 	%f95, %f94, %f570;
	abs.f32 	%f912, %f95;
	setp.lt.f32 	%p112, %f912, 0f40000000;
	@%p112 bra 	LBB0_75;
// %bb.64:
	setp.gtu.f32 	%p113, %f912, 0f4B800000;
	@%p113 bra 	LBB0_71;
	bra.uni 	LBB0_65;
LBB0_71:
	mov.b32 	%r59, %f912;
	and.b32  	%r310, %r59, 8388607;
	or.b32  	%r7767, %r310, 1065353216;
	mov.b32 	%f911, %r7767;
	add.s32 	%r311, %r59, -1073741824;
	and.b32  	%r7768, %r311, -8388608;
	setp.eq.s32 	%p119, %r7768, 0;
	@%p119 bra 	LBB0_74;
// %bb.72:                              // %__nv_fmaf_rn.exit4.i.i.i1228.preheader
	mov.f32 	%f632, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f631,%f632;
	// end inline asm
LBB0_73:                                // %__nv_fmaf_rn.exit4.i.i.i1228
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r312, %r7768, 192937984;
	add.s32 	%r313, %r312, %r7767;
	mov.b32 	%f633, %r313;
	mul.f32 	%f634, %f631, %f633;
	sub.f32 	%f635, %f633, %f634;
	fma.rn.f32 	%f636, %f635, %f631, %f634;
	sub.f32 	%f637, %f633, %f636;
	fma.rz.f32 	%f638, %f637, %f631, %f636;
	cvt.rzi.f32.f32 	%f639, %f638;
	sub.f32 	%f911, %f633, %f639;
	sub.s32 	%r7768, %r7768, %r312;
	mov.b32 	%r7767, %f911;
	setp.ne.s32 	%p120, %r7768, 0;
	setp.ne.s32 	%p121, %r7767, 0;
	and.pred  	%p122, %p120, %p121;
	@%p122 bra 	LBB0_73;
LBB0_74:                                // %__internal_fmodf_slowpath_mod.exit.i.i1230
	setp.gt.u32 	%p123, %r59, 2139095039;
	selp.f32 	%f640, 0f7FFFFFFF, 0f4B800000, %p123;
	mul.f32 	%f641, %f911, 0f34000000;
	mul.f32 	%f912, %f640, %f641;
	bra.uni 	LBB0_75;
LBB0_65:                                // %__nv_fast_fdividef.exit.i.i.i1200
	div.approx.f32 	%f624, %f912, %f185;
	cvt.rzi.f32.f32 	%f910, %f624;
	fma.rn.f32 	%f98, %f910, 0fC0000000, %f912;
	mov.b32 	%r58, %f98;
	setp.lt.u32 	%p114, %r58, 1073741824;
	@%p114 bra 	LBB0_70;
// %bb.66:
	setp.lt.u32 	%p115, %r58, -2147483647;
	@%p115 bra 	LBB0_68;
// %bb.67:
	add.f32 	%f629, %f910, 0fBF800000;
	setp.lt.f32 	%p118, %f98, 0fC0000000;
	add.f32 	%f630, %f629, 0fBF800000;
	selp.f32 	%f910, %f630, %f629, %p118;
	bra.uni 	LBB0_70;
LBB0_68:
	add.f32 	%f910, %f910, 0f3F800000;
	setp.ltu.f32 	%p116, %f98, 0f40800000;
	@%p116 bra 	LBB0_70;
// %bb.69:                              // %__nv_fmaf_rn.exit.i.i.i1205
	add.f32 	%f625, %f910, 0f3F800000;
	fma.rn.f32 	%f627, %f185, 0fC0400000, %f98;
	setp.ge.f32 	%p117, %f627, 0f00000000;
	add.f32 	%f628, %f625, 0f3F800000;
	selp.f32 	%f910, %f628, %f625, %p117;
LBB0_70:                                // %__internal_fmodf_fastpath_quot.exit.i.i1209
	fma.rn.f32 	%f912, %f910, 0fC0000000, %f912;
LBB0_75:                                // %__internal_fmodf_kernel.exit.i1234
	abs.f32 	%f642, %f912;
	setp.gtu.f32 	%p124, %f642, 0f7F800000;
	@%p124 bra 	LBB0_77;
// %bb.76:
	mov.b32 	%r314, %f95;
	and.b32  	%r315, %r314, -2147483648;
	mov.b32 	%r316, %f912;
	or.b32  	%r317, %r315, %r316;
	mov.b32 	%f912, %r317;
LBB0_77:                                // %__nv_fmodf.exit1235
	{ // callseq 8, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd21;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd37;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd38;
	.param .b64 retval0;
	call.uni (retval0), 
	julia_power_by_squaring_9667, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64 	%rd45, [retval0+0];
	} // callseq 8
	setp.ne.s64 	%p132, %rd45, 64;
	@%p132 bra 	LBB0_118;
// %bb.78:                              // %L1027
	{ // callseq 12, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd21;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd37;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd38;
	.param .b64 retval0;
	call.uni (retval0), 
	julia_power_by_squaring_9667, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64 	%rd51, [retval0+0];
	} // callseq 12
	cvt.rn.f32.s64 	%f676, %rd51;
	div.approx.f32 	%f112, %f74, %f676;
	abs.f32 	%f924, %f112;
	setp.lt.f32 	%p133, %f924, 0f40000000;
	@%p133 bra 	LBB0_127;
// %bb.79:
	setp.gtu.f32 	%p134, %f924, 0f4B800000;
	@%p134 bra 	LBB0_123;
	bra.uni 	LBB0_80;
LBB0_123:
	mov.b32 	%r137, %f924;
	and.b32  	%r338, %r137, 8388607;
	or.b32  	%r7799, %r338, 1065353216;
	mov.b32 	%f923, %r7799;
	add.s32 	%r339, %r137, -1073741824;
	and.b32  	%r7800, %r339, -8388608;
	setp.eq.s32 	%p140, %r7800, 0;
	@%p140 bra 	LBB0_126;
// %bb.124:                             // %__nv_fmaf_rn.exit4.i.i.i1366.preheader
	mov.f32 	%f686, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f685,%f686;
	// end inline asm
LBB0_125:                               // %__nv_fmaf_rn.exit4.i.i.i1366
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r340, %r7800, 192937984;
	add.s32 	%r341, %r340, %r7799;
	mov.b32 	%f687, %r341;
	mul.f32 	%f688, %f685, %f687;
	sub.f32 	%f689, %f687, %f688;
	fma.rn.f32 	%f690, %f689, %f685, %f688;
	sub.f32 	%f691, %f687, %f690;
	fma.rz.f32 	%f692, %f691, %f685, %f690;
	cvt.rzi.f32.f32 	%f693, %f692;
	sub.f32 	%f923, %f687, %f693;
	sub.s32 	%r7800, %r7800, %r340;
	mov.b32 	%r7799, %f923;
	setp.ne.s32 	%p141, %r7800, 0;
	setp.ne.s32 	%p142, %r7799, 0;
	and.pred  	%p143, %p141, %p142;
	@%p143 bra 	LBB0_125;
LBB0_126:                               // %__internal_fmodf_slowpath_mod.exit.i.i1368
	setp.gt.u32 	%p144, %r137, 2139095039;
	selp.f32 	%f694, 0f7FFFFFFF, 0f4B800000, %p144;
	mul.f32 	%f695, %f923, 0f34000000;
	mul.f32 	%f924, %f694, %f695;
	bra.uni 	LBB0_127;
LBB0_80:                                // %__nv_fast_fdividef.exit.i.i.i1338
	div.approx.f32 	%f678, %f924, %f185;
	cvt.rzi.f32.f32 	%f922, %f678;
	fma.rn.f32 	%f151, %f922, 0fC0000000, %f924;
	mov.b32 	%r136, %f151;
	setp.lt.u32 	%p135, %r136, 1073741824;
	@%p135 bra 	LBB0_122;
// %bb.81:
	setp.lt.u32 	%p136, %r136, -2147483647;
	@%p136 bra 	LBB0_120;
// %bb.82:
	add.f32 	%f683, %f922, 0fBF800000;
	setp.lt.f32 	%p139, %f151, 0fC0000000;
	add.f32 	%f684, %f683, 0fBF800000;
	selp.f32 	%f922, %f684, %f683, %p139;
	bra.uni 	LBB0_122;
LBB0_120:
	add.f32 	%f922, %f922, 0f3F800000;
	setp.ltu.f32 	%p137, %f151, 0f40800000;
	@%p137 bra 	LBB0_122;
// %bb.121:                             // %__nv_fmaf_rn.exit.i.i.i1343
	add.f32 	%f679, %f922, 0f3F800000;
	fma.rn.f32 	%f681, %f185, 0fC0400000, %f151;
	setp.ge.f32 	%p138, %f681, 0f00000000;
	add.f32 	%f682, %f679, 0f3F800000;
	selp.f32 	%f922, %f682, %f679, %p138;
LBB0_122:                               // %__internal_fmodf_fastpath_quot.exit.i.i1347
	fma.rn.f32 	%f924, %f922, 0fC0000000, %f924;
LBB0_127:                               // %__internal_fmodf_kernel.exit.i1372
	abs.f32 	%f696, %f924;
	setp.gtu.f32 	%p145, %f696, 0f7F800000;
	@%p145 bra 	LBB0_129;
// %bb.128:
	mov.b32 	%r342, %f112;
	and.b32  	%r343, %r342, -2147483648;
	mov.b32 	%r344, %f924;
	or.b32  	%r345, %r343, %r344;
	mov.b32 	%f924, %r345;
LBB0_129:                               // %__nv_fmodf.exit1373
	{ // callseq 13, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd21;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd37;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd38;
	.param .b64 retval0;
	call.uni (retval0), 
	julia_power_by_squaring_9667, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64 	%rd55, [retval0+0];
	} // callseq 13
	cvt.rn.f32.s64 	%f728, %rd55;
	div.approx.f32 	%f167, %f94, %f728;
	abs.f32 	%f928, %f167;
	setp.lt.f32 	%p153, %f928, 0f40000000;
	@%p153 bra 	LBB0_141;
// %bb.130:
	setp.gtu.f32 	%p154, %f928, 0f4B800000;
	@%p154 bra 	LBB0_137;
	bra.uni 	LBB0_131;
LBB0_137:
	mov.b32 	%r145, %f928;
	and.b32  	%r354, %r145, 8388607;
	or.b32  	%r7801, %r354, 1065353216;
	mov.b32 	%f927, %r7801;
	add.s32 	%r355, %r145, -1073741824;
	and.b32  	%r7802, %r355, -8388608;
	setp.eq.s32 	%p160, %r7802, 0;
	@%p160 bra 	LBB0_140;
// %bb.138:                             // %__nv_fmaf_rn.exit4.i.i.i1412.preheader
	mov.f32 	%f738, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f737,%f738;
	// end inline asm
LBB0_139:                               // %__nv_fmaf_rn.exit4.i.i.i1412
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r356, %r7802, 192937984;
	add.s32 	%r357, %r356, %r7801;
	mov.b32 	%f739, %r357;
	mul.f32 	%f740, %f737, %f739;
	sub.f32 	%f741, %f739, %f740;
	fma.rn.f32 	%f742, %f741, %f737, %f740;
	sub.f32 	%f743, %f739, %f742;
	fma.rz.f32 	%f744, %f743, %f737, %f742;
	cvt.rzi.f32.f32 	%f745, %f744;
	sub.f32 	%f927, %f739, %f745;
	sub.s32 	%r7802, %r7802, %r356;
	mov.b32 	%r7801, %f927;
	setp.ne.s32 	%p161, %r7802, 0;
	setp.ne.s32 	%p162, %r7801, 0;
	and.pred  	%p163, %p161, %p162;
	@%p163 bra 	LBB0_139;
LBB0_140:                               // %__internal_fmodf_slowpath_mod.exit.i.i1414
	setp.gt.u32 	%p164, %r145, 2139095039;
	selp.f32 	%f746, 0f7FFFFFFF, 0f4B800000, %p164;
	mul.f32 	%f747, %f927, 0f34000000;
	mul.f32 	%f928, %f746, %f747;
	bra.uni 	LBB0_141;
LBB0_131:                               // %__nv_fast_fdividef.exit.i.i.i1384
	div.approx.f32 	%f730, %f928, %f185;
	cvt.rzi.f32.f32 	%f926, %f730;
	fma.rn.f32 	%f170, %f926, 0fC0000000, %f928;
	mov.b32 	%r144, %f170;
	setp.lt.u32 	%p155, %r144, 1073741824;
	@%p155 bra 	LBB0_136;
// %bb.132:
	setp.lt.u32 	%p156, %r144, -2147483647;
	@%p156 bra 	LBB0_134;
// %bb.133:
	add.f32 	%f735, %f926, 0fBF800000;
	setp.lt.f32 	%p159, %f170, 0fC0000000;
	add.f32 	%f736, %f735, 0fBF800000;
	selp.f32 	%f926, %f736, %f735, %p159;
	bra.uni 	LBB0_136;
LBB0_134:
	add.f32 	%f926, %f926, 0f3F800000;
	setp.ltu.f32 	%p157, %f170, 0f40800000;
	@%p157 bra 	LBB0_136;
// %bb.135:                             // %__nv_fmaf_rn.exit.i.i.i1389
	add.f32 	%f731, %f926, 0f3F800000;
	fma.rn.f32 	%f733, %f185, 0fC0400000, %f170;
	setp.ge.f32 	%p158, %f733, 0f00000000;
	add.f32 	%f734, %f731, 0f3F800000;
	selp.f32 	%f926, %f734, %f731, %p158;
LBB0_136:                               // %__internal_fmodf_fastpath_quot.exit.i.i1393
	fma.rn.f32 	%f928, %f926, 0fC0000000, %f928;
LBB0_141:                               // %__internal_fmodf_kernel.exit.i1418
	abs.f32 	%f748, %f928;
	setp.gtu.f32 	%p165, %f748, 0f7F800000;
	@%p165 bra 	LBB0_143;
// %bb.142:
	mov.b32 	%r358, %f167;
	and.b32  	%r359, %r358, -2147483648;
	mov.b32 	%r360, %f928;
	or.b32  	%r361, %r359, %r360;
	mov.b32 	%f928, %r361;
LBB0_143:                               // %__nv_fmodf.exit1419
	{ // callseq 14, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd21;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd37;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd38;
	.param .b64 retval0;
	call.uni (retval0), 
	julia_power_by_squaring_9667, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64 	%rd59, [retval0+0];
	} // callseq 14
	setp.eq.s64 	%p173, %rd59, 64;
	@%p173 bra 	LBB0_83;
	bra.uni 	LBB0_144;
LBB0_83:                                // %L1110
	mov.f32 	%f189, 0f43808000;
	div.approx.f32 	%f190, %f188, %f189;
	div.approx.f32 	%f224, %f222, %f189;
	div.approx.f32 	%f259, %f257, %f189;
	div.approx.f32 	%f293, %f291, %f189;
	div.approx.f32 	%f328, %f326, %f189;
	div.approx.f32 	%f362, %f360, %f189;
	div.approx.f32 	%f397, %f395, %f189;
	div.approx.f32 	%f431, %f429, %f189;
	abs.f32 	%f191, %f190;
	abs.f32 	%f225, %f224;
	abs.f32 	%f260, %f259;
	abs.f32 	%f294, %f293;
	abs.f32 	%f329, %f328;
	abs.f32 	%f363, %f362;
	abs.f32 	%f398, %f397;
	abs.f32 	%f432, %f431;
	add.f32 	%f591, %f908, %f908;
	add.f32 	%f643, %f912, %f912;
	setp.gt.f32 	%p3, %f191, 0f4B800000;
	mul.f32 	%f192, %f190, 0f00000000;
	setp.gt.f32 	%p9, %f225, 0f4B800000;
	mul.f32 	%f226, %f224, 0f00000000;
	setp.gt.f32 	%p15, %f260, 0f4B800000;
	mul.f32 	%f261, %f259, 0f00000000;
	setp.gt.f32 	%p21, %f294, 0f4B800000;
	mul.f32 	%f295, %f293, 0f00000000;
	setp.gt.f32 	%p27, %f329, 0f4B800000;
	mul.f32 	%f330, %f328, 0f00000000;
	setp.gt.f32 	%p33, %f363, 0f4B800000;
	mul.f32 	%f364, %f362, 0f00000000;
	setp.gt.f32 	%p39, %f398, 0f4B800000;
	mul.f32 	%f399, %f397, 0f00000000;
	setp.gt.f32 	%p45, %f432, 0f4B800000;
	mul.f32 	%f433, %f431, 0f00000000;
	add.f32 	%f484, %f900, %f900;
	add.f32 	%f537, %f904, %f904;
	mov.b32 	%r300, %f591;
	mov.b32 	%r330, %f643;
	selp.f32 	%f193, %f192, %f190, %p3;
	selp.f32 	%f227, %f226, %f224, %p9;
	selp.f32 	%f262, %f261, %f259, %p15;
	selp.f32 	%f296, %f295, %f293, %p21;
	selp.f32 	%f331, %f330, %f328, %p27;
	selp.f32 	%f365, %f364, %f362, %p33;
	selp.f32 	%f400, %f399, %f397, %p39;
	selp.f32 	%f434, %f433, %f431, %p45;
	mov.b32 	%r259, %f484;
	mov.b32 	%r282, %f537;
	and.b32  	%r301, %r300, -2147483648;
	and.b32  	%r331, %r330, -2147483648;
	add.f32 	%f697, %f924, %f924;
	add.f32 	%f194, %f193, %f193;
	add.f32 	%f228, %f227, %f227;
	add.f32 	%f263, %f262, %f262;
	add.f32 	%f297, %f296, %f296;
	add.f32 	%f332, %f331, %f331;
	add.f32 	%f366, %f365, %f365;
	add.f32 	%f401, %f400, %f400;
	add.f32 	%f435, %f434, %f434;
	and.b32  	%r260, %r259, -2147483648;
	and.b32  	%r283, %r282, -2147483648;
	or.b32  	%r302, %r301, 1056964608;
	or.b32  	%r332, %r331, 1056964608;
	mov.b32 	%r346, %f697;
	mov.b32 	%r180, %f194;
	mov.b32 	%r187, %f228;
	mov.b32 	%r198, %f263;
	mov.b32 	%r205, %f297;
	mov.b32 	%r216, %f332;
	mov.b32 	%r223, %f366;
	mov.b32 	%r234, %f401;
	mov.b32 	%r241, %f435;
	or.b32  	%r261, %r260, 1056964608;
	or.b32  	%r284, %r283, 1056964608;
	mov.b32 	%f592, %r302;
	mov.b32 	%f644, %r332;
	and.b32  	%r347, %r346, -2147483648;
	and.b32  	%r181, %r180, -2147483648;
	and.b32  	%r188, %r187, -2147483648;
	and.b32  	%r199, %r198, -2147483648;
	and.b32  	%r206, %r205, -2147483648;
	and.b32  	%r217, %r216, -2147483648;
	and.b32  	%r224, %r223, -2147483648;
	and.b32  	%r235, %r234, -2147483648;
	and.b32  	%r242, %r241, -2147483648;
	mov.b32 	%f485, %r261;
	mov.b32 	%f538, %r284;
	add.f32 	%f593, %f591, %f592;
	abs.f32 	%f595, %f591;
	add.f32 	%f645, %f643, %f644;
	abs.f32 	%f647, %f643;
	or.b32  	%r348, %r347, 1056964608;
	or.b32  	%r182, %r181, 1056964608;
	or.b32  	%r189, %r188, 1056964608;
	or.b32  	%r200, %r199, 1056964608;
	or.b32  	%r207, %r206, 1056964608;
	or.b32  	%r218, %r217, 1056964608;
	or.b32  	%r225, %r224, 1056964608;
	or.b32  	%r236, %r235, 1056964608;
	or.b32  	%r243, %r242, 1056964608;
	add.f32 	%f486, %f484, %f485;
	abs.f32 	%f488, %f484;
	add.f32 	%f539, %f537, %f538;
	abs.f32 	%f541, %f537;
	cvt.rzi.f32.f32 	%f594, %f593;
	setp.gt.f32 	%p105, %f595, 0f4B000000;
	cvt.rzi.f32.f32 	%f646, %f645;
	setp.gt.f32 	%p125, %f647, 0f4B000000;
	mov.b32 	%f698, %r348;
	mov.b32 	%f195, %r182;
	mov.b32 	%f229, %r189;
	mov.b32 	%f264, %r200;
	mov.b32 	%f298, %r207;
	mov.b32 	%f333, %r218;
	mov.b32 	%f367, %r225;
	mov.b32 	%f402, %r236;
	mov.b32 	%f436, %r243;
	cvt.rzi.f32.f32 	%f487, %f486;
	setp.gt.f32 	%p64, %f488, 0f4B000000;
	cvt.rzi.f32.f32 	%f540, %f539;
	setp.gt.f32 	%p84, %f541, 0f4B000000;
	selp.f32 	%f596, %f591, %f594, %p105;
	cvt.rzi.f32.f32 	%f597, %f591;
	setp.lt.f32 	%p106, %f595, 0f3F000000;
	selp.f32 	%f648, %f643, %f646, %p125;
	cvt.rzi.f32.f32 	%f649, %f643;
	setp.lt.f32 	%p126, %f647, 0f3F000000;
	add.f32 	%f699, %f697, %f698;
	abs.f32 	%f701, %f697;
	add.f32 	%f196, %f194, %f195;
	abs.f32 	%f198, %f194;
	add.f32 	%f230, %f228, %f229;
	abs.f32 	%f232, %f228;
	add.f32 	%f265, %f263, %f264;
	abs.f32 	%f267, %f263;
	add.f32 	%f299, %f297, %f298;
	abs.f32 	%f301, %f297;
	add.f32 	%f334, %f332, %f333;
	abs.f32 	%f336, %f332;
	add.f32 	%f368, %f366, %f367;
	abs.f32 	%f370, %f366;
	add.f32 	%f403, %f401, %f402;
	abs.f32 	%f405, %f401;
	add.f32 	%f437, %f435, %f436;
	abs.f32 	%f439, %f435;
	selp.f32 	%f489, %f484, %f487, %p64;
	cvt.rzi.f32.f32 	%f490, %f484;
	setp.lt.f32 	%p65, %f488, 0f3F000000;
	selp.f32 	%f542, %f537, %f540, %p84;
	cvt.rzi.f32.f32 	%f543, %f537;
	setp.lt.f32 	%p85, %f541, 0f3F000000;
	selp.f32 	%f598, %f597, %f596, %p106;
	selp.f32 	%f650, %f649, %f648, %p126;
	cvt.rzi.f32.f32 	%f700, %f699;
	setp.gt.f32 	%p146, %f701, 0f4B000000;
	cvt.rzi.f32.f32 	%f197, %f196;
	setp.gt.f32 	%p4, %f198, 0f4B000000;
	cvt.rzi.f32.f32 	%f231, %f230;
	setp.gt.f32 	%p10, %f232, 0f4B000000;
	cvt.rzi.f32.f32 	%f266, %f265;
	setp.gt.f32 	%p16, %f267, 0f4B000000;
	cvt.rzi.f32.f32 	%f300, %f299;
	setp.gt.f32 	%p22, %f301, 0f4B000000;
	cvt.rzi.f32.f32 	%f335, %f334;
	setp.gt.f32 	%p28, %f336, 0f4B000000;
	cvt.rzi.f32.f32 	%f369, %f368;
	setp.gt.f32 	%p34, %f370, 0f4B000000;
	cvt.rzi.f32.f32 	%f404, %f403;
	setp.gt.f32 	%p40, %f405, 0f4B000000;
	cvt.rzi.f32.f32 	%f438, %f437;
	setp.gt.f32 	%p46, %f439, 0f4B000000;
	selp.f32 	%f491, %f490, %f489, %p65;
	selp.f32 	%f544, %f543, %f542, %p85;
	fma.rn.f32 	%f599, %f598, 0fBF000000, %f908;
	fma.rn.f32 	%f651, %f650, 0fBF000000, %f912;
	selp.f32 	%f702, %f697, %f700, %p146;
	cvt.rzi.f32.f32 	%f703, %f697;
	setp.lt.f32 	%p147, %f701, 0f3F000000;
	selp.f32 	%f199, %f194, %f197, %p4;
	cvt.rzi.f32.f32 	%f200, %f194;
	setp.lt.f32 	%p5, %f198, 0f3F000000;
	selp.f32 	%f233, %f228, %f231, %p10;
	cvt.rzi.f32.f32 	%f234, %f228;
	setp.lt.f32 	%p11, %f232, 0f3F000000;
	selp.f32 	%f268, %f263, %f266, %p16;
	cvt.rzi.f32.f32 	%f269, %f263;
	setp.lt.f32 	%p17, %f267, 0f3F000000;
	selp.f32 	%f302, %f297, %f300, %p22;
	cvt.rzi.f32.f32 	%f303, %f297;
	setp.lt.f32 	%p23, %f301, 0f3F000000;
	selp.f32 	%f337, %f332, %f335, %p28;
	cvt.rzi.f32.f32 	%f338, %f332;
	setp.lt.f32 	%p29, %f336, 0f3F000000;
	selp.f32 	%f371, %f366, %f369, %p34;
	cvt.rzi.f32.f32 	%f372, %f366;
	setp.lt.f32 	%p35, %f370, 0f3F000000;
	selp.f32 	%f406, %f401, %f404, %p40;
	cvt.rzi.f32.f32 	%f407, %f401;
	setp.lt.f32 	%p41, %f405, 0f3F000000;
	selp.f32 	%f440, %f435, %f438, %p46;
	cvt.rzi.f32.f32 	%f441, %f435;
	setp.lt.f32 	%p47, %f439, 0f3F000000;
	fma.rn.f32 	%f492, %f491, 0fBF000000, %f900;
	fma.rn.f32 	%f545, %f544, 0fBF000000, %f904;
	mul.f32 	%f600, %f599, 0f34222169;
	mul.f32 	%f652, %f651, 0f34222169;
	selp.f32 	%f704, %f703, %f702, %p147;
	selp.f32 	%f201, %f200, %f199, %p5;
	selp.f32 	%f235, %f234, %f233, %p11;
	selp.f32 	%f270, %f269, %f268, %p17;
	selp.f32 	%f304, %f303, %f302, %p23;
	selp.f32 	%f339, %f338, %f337, %p29;
	selp.f32 	%f373, %f372, %f371, %p35;
	selp.f32 	%f408, %f407, %f406, %p41;
	selp.f32 	%f442, %f441, %f440, %p47;
	mul.f32 	%f493, %f492, 0f34222169;
	mul.f32 	%f546, %f545, 0f34222169;
	fma.rn.f32 	%f601, %f599, 0f40490FDA, %f600;
	fma.rn.f32 	%f653, %f651, 0f40490FDA, %f652;
	fma.rn.f32 	%f705, %f704, 0fBF000000, %f924;
	fma.rn.f32 	%f202, %f201, 0fBF000000, %f193;
	fma.rn.f32 	%f236, %f235, 0fBF000000, %f227;
	fma.rn.f32 	%f271, %f270, 0fBF000000, %f262;
	fma.rn.f32 	%f305, %f304, 0fBF000000, %f296;
	fma.rn.f32 	%f340, %f339, 0fBF000000, %f331;
	fma.rn.f32 	%f374, %f373, 0fBF000000, %f365;
	fma.rn.f32 	%f409, %f408, 0fBF000000, %f400;
	fma.rn.f32 	%f443, %f442, 0fBF000000, %f434;
	fma.rn.f32 	%f494, %f492, 0f40490FDA, %f493;
	fma.rn.f32 	%f547, %f545, 0f40490FDA, %f546;
	mul.f32 	%f602, %f601, %f601;
	mul.f32 	%f654, %f653, %f653;
	mul.f32 	%f706, %f705, 0f34222169;
	mul.f32 	%f203, %f202, %f202;
	mul.f32 	%f237, %f236, %f236;
	mul.f32 	%f272, %f271, %f271;
	mul.f32 	%f306, %f305, %f305;
	mul.f32 	%f341, %f340, %f340;
	mul.f32 	%f375, %f374, %f374;
	mul.f32 	%f410, %f409, %f409;
	mul.f32 	%f444, %f443, %f443;
	mul.f32 	%f495, %f494, %f494;
	mul.f32 	%f548, %f547, %f547;
	fma.rn.f32 	%f603, %f602, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f655, %f654, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f707, %f705, 0f40490FDA, %f706;
	cvt.rzi.s32.f32 	%r183, %f201;
	fma.rn.f32 	%f204, %f203, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f205, %f203, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r190, %f235;
	fma.rn.f32 	%f238, %f237, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f239, %f237, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r201, %f270;
	fma.rn.f32 	%f273, %f272, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f274, %f272, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r208, %f304;
	fma.rn.f32 	%f307, %f306, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f308, %f306, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r219, %f339;
	fma.rn.f32 	%f342, %f341, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f343, %f341, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r226, %f373;
	fma.rn.f32 	%f376, %f375, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f377, %f375, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r237, %f408;
	fma.rn.f32 	%f411, %f410, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f412, %f410, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r244, %f442;
	fma.rn.f32 	%f445, %f444, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f446, %f444, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f496, %f495, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f549, %f548, 0f37CBAC00, 0fBAB607ED;
	cvt.rzi.s32.f32 	%r303, %f598;
	fma.rn.f32 	%f604, %f603, %f602, 0f3D2AAABB;
	fma.rn.f32 	%f608, %f602, 0fB94D4153, 0f3C0885E4;
	cvt.rzi.s32.f32 	%r333, %f650;
	fma.rn.f32 	%f656, %f655, %f654, 0f3D2AAABB;
	fma.rn.f32 	%f660, %f654, 0fB94D4153, 0f3C0885E4;
	mul.f32 	%f708, %f707, %f707;
	add.s32 	%r184, %r183, 1;
	fma.rn.f32 	%f206, %f204, %f203, 0fC0A55DF6;
	fma.rn.f32 	%f207, %f205, %f203, 0f4081E0CF;
	fma.rn.f32 	%f208, %f203, %f202, 0f00000000;
	add.s32 	%r191, %r190, 1;
	fma.rn.f32 	%f240, %f238, %f237, 0fC0A55DF6;
	fma.rn.f32 	%f241, %f239, %f237, 0f4081E0CF;
	fma.rn.f32 	%f242, %f237, %f236, 0f00000000;
	add.s32 	%r202, %r201, 1;
	fma.rn.f32 	%f275, %f273, %f272, 0fC0A55DF6;
	fma.rn.f32 	%f276, %f274, %f272, 0f4081E0CF;
	fma.rn.f32 	%f277, %f272, %f271, 0f00000000;
	add.s32 	%r209, %r208, 1;
	fma.rn.f32 	%f309, %f307, %f306, 0fC0A55DF6;
	fma.rn.f32 	%f310, %f308, %f306, 0f4081E0CF;
	fma.rn.f32 	%f311, %f306, %f305, 0f00000000;
	add.s32 	%r220, %r219, 1;
	fma.rn.f32 	%f344, %f342, %f341, 0fC0A55DF6;
	fma.rn.f32 	%f345, %f343, %f341, 0f4081E0CF;
	fma.rn.f32 	%f346, %f341, %f340, 0f00000000;
	add.s32 	%r227, %r226, 1;
	fma.rn.f32 	%f378, %f376, %f375, 0fC0A55DF6;
	fma.rn.f32 	%f379, %f377, %f375, 0f4081E0CF;
	fma.rn.f32 	%f380, %f375, %f374, 0f00000000;
	add.s32 	%r238, %r237, 1;
	fma.rn.f32 	%f413, %f411, %f410, 0fC0A55DF6;
	fma.rn.f32 	%f414, %f412, %f410, 0f4081E0CF;
	fma.rn.f32 	%f415, %f410, %f409, 0f00000000;
	add.s32 	%r245, %r244, 1;
	fma.rn.f32 	%f447, %f445, %f444, 0fC0A55DF6;
	fma.rn.f32 	%f448, %f446, %f444, 0f4081E0CF;
	fma.rn.f32 	%f449, %f444, %f443, 0f00000000;
	cvt.rzi.s32.f32 	%r262, %f491;
	fma.rn.f32 	%f497, %f496, %f495, 0f3D2AAABB;
	fma.rn.f32 	%f501, %f495, 0fB94D4153, 0f3C0885E4;
	cvt.rzi.s32.f32 	%r285, %f544;
	fma.rn.f32 	%f550, %f549, %f548, 0f3D2AAABB;
	fma.rn.f32 	%f554, %f548, 0fB94D4153, 0f3C0885E4;
	fma.rn.f32 	%f605, %f604, %f602, 0fBEFFFFFF;
	fma.rn.f32 	%f607, %f602, %f601, 0f00000000;
	fma.rn.f32 	%f609, %f608, %f602, 0fBE2AAAA8;
	and.b32  	%r304, %r303, 1;
	fma.rn.f32 	%f657, %f656, %f654, 0fBEFFFFFF;
	fma.rn.f32 	%f659, %f654, %f653, 0f00000000;
	fma.rn.f32 	%f661, %f660, %f654, 0fBE2AAAA8;
	and.b32  	%r334, %r333, 1;
	fma.rn.f32 	%f709, %f708, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f209, %f207, %f203, 0fC09DE9E6;
	fma.rn.f32 	%f210, %f206, %f208, 0f00000000;
	and.b32  	%r185, %r184, 1;
	fma.rn.f32 	%f243, %f241, %f237, 0fC09DE9E6;
	fma.rn.f32 	%f244, %f240, %f242, 0f00000000;
	and.b32  	%r192, %r191, 1;
	fma.rn.f32 	%f278, %f276, %f272, 0fC09DE9E6;
	fma.rn.f32 	%f279, %f275, %f277, 0f00000000;
	and.b32  	%r203, %r202, 1;
	fma.rn.f32 	%f312, %f310, %f306, 0fC09DE9E6;
	fma.rn.f32 	%f313, %f309, %f311, 0f00000000;
	and.b32  	%r210, %r209, 1;
	fma.rn.f32 	%f347, %f345, %f341, 0fC09DE9E6;
	fma.rn.f32 	%f348, %f344, %f346, 0f00000000;
	and.b32  	%r221, %r220, 1;
	fma.rn.f32 	%f381, %f379, %f375, 0fC09DE9E6;
	fma.rn.f32 	%f382, %f378, %f380, 0f00000000;
	and.b32  	%r228, %r227, 1;
	fma.rn.f32 	%f416, %f414, %f410, 0fC09DE9E6;
	fma.rn.f32 	%f417, %f413, %f415, 0f00000000;
	and.b32  	%r239, %r238, 1;
	fma.rn.f32 	%f450, %f448, %f444, 0fC09DE9E6;
	fma.rn.f32 	%f451, %f447, %f449, 0f00000000;
	and.b32  	%r246, %r245, 1;
	fma.rn.f32 	%f498, %f497, %f495, 0fBEFFFFFF;
	fma.rn.f32 	%f500, %f495, %f494, 0f00000000;
	fma.rn.f32 	%f502, %f501, %f495, 0fBE2AAAA8;
	and.b32  	%r263, %r262, 1;
	fma.rn.f32 	%f551, %f550, %f548, 0fBEFFFFFF;
	fma.rn.f32 	%f553, %f548, %f547, 0f00000000;
	fma.rn.f32 	%f555, %f554, %f548, 0fBE2AAAA8;
	and.b32  	%r286, %r285, 1;
	fma.rn.f32 	%f606, %f605, %f602, 0f3F800000;
	fma.rn.f32 	%f610, %f609, %f607, %f601;
	setp.eq.b32 	%p107, %r304, 1;
	fma.rn.f32 	%f658, %f657, %f654, 0f3F800000;
	fma.rn.f32 	%f662, %f661, %f659, %f653;
	setp.eq.b32 	%p127, %r334, 1;
	cvt.rzi.s32.f32 	%r349, %f704;
	fma.rn.f32 	%f710, %f709, %f708, 0f3D2AAABB;
	fma.rn.f32 	%f714, %f708, 0fB94D4153, 0f3C0885E4;
	fma.rn.f32 	%f211, %f209, %f203, 0f3F800000;
	fma.rn.f32 	%f212, %f202, 0f40490FDB, %f210;
	setp.eq.b32 	%p6, %r185, 1;
	fma.rn.f32 	%f245, %f243, %f237, 0f3F800000;
	fma.rn.f32 	%f246, %f236, 0f40490FDB, %f244;
	setp.eq.b32 	%p12, %r192, 1;
	fma.rn.f32 	%f280, %f278, %f272, 0f3F800000;
	fma.rn.f32 	%f281, %f271, 0f40490FDB, %f279;
	setp.eq.b32 	%p18, %r203, 1;
	fma.rn.f32 	%f314, %f312, %f306, 0f3F800000;
	fma.rn.f32 	%f315, %f305, 0f40490FDB, %f313;
	setp.eq.b32 	%p24, %r210, 1;
	fma.rn.f32 	%f349, %f347, %f341, 0f3F800000;
	fma.rn.f32 	%f350, %f340, 0f40490FDB, %f348;
	setp.eq.b32 	%p30, %r221, 1;
	fma.rn.f32 	%f383, %f381, %f375, 0f3F800000;
	fma.rn.f32 	%f384, %f374, 0f40490FDB, %f382;
	setp.eq.b32 	%p36, %r228, 1;
	fma.rn.f32 	%f418, %f416, %f410, 0f3F800000;
	fma.rn.f32 	%f419, %f409, 0f40490FDB, %f417;
	setp.eq.b32 	%p42, %r239, 1;
	fma.rn.f32 	%f452, %f450, %f444, 0f3F800000;
	fma.rn.f32 	%f453, %f443, 0f40490FDB, %f451;
	setp.eq.b32 	%p48, %r246, 1;
	fma.rn.f32 	%f499, %f498, %f495, 0f3F800000;
	fma.rn.f32 	%f503, %f502, %f500, %f494;
	setp.eq.b32 	%p66, %r263, 1;
	fma.rn.f32 	%f552, %f551, %f548, 0f3F800000;
	fma.rn.f32 	%f556, %f555, %f553, %f547;
	setp.eq.b32 	%p86, %r286, 1;
	selp.f32 	%f611, %f606, %f610, %p107;
	and.b32  	%r305, %r303, 2;
	selp.f32 	%f663, %f658, %f662, %p127;
	and.b32  	%r335, %r333, 2;
	fma.rn.f32 	%f711, %f710, %f708, 0fBEFFFFFF;
	fma.rn.f32 	%f713, %f708, %f707, 0f00000000;
	fma.rn.f32 	%f715, %f714, %f708, 0fBE2AAAA8;
	and.b32  	%r350, %r349, 1;
	selp.f32 	%f213, %f211, %f212, %p6;
	and.b32  	%r186, %r184, 2;
	mov.f32 	%f214, 0f00000000;
	selp.f32 	%f247, %f245, %f246, %p12;
	and.b32  	%r193, %r191, 2;
	selp.f32 	%f282, %f280, %f281, %p18;
	and.b32  	%r204, %r202, 2;
	selp.f32 	%f316, %f314, %f315, %p24;
	and.b32  	%r211, %r209, 2;
	selp.f32 	%f351, %f349, %f350, %p30;
	and.b32  	%r222, %r220, 2;
	selp.f32 	%f385, %f383, %f384, %p36;
	and.b32  	%r229, %r227, 2;
	selp.f32 	%f420, %f418, %f419, %p42;
	and.b32  	%r240, %r238, 2;
	selp.f32 	%f454, %f452, %f453, %p48;
	and.b32  	%r247, %r245, 2;
	selp.f32 	%f504, %f499, %f503, %p66;
	and.b32  	%r264, %r262, 2;
	selp.f32 	%f557, %f552, %f556, %p86;
	and.b32  	%r287, %r285, 2;
	setp.eq.s32 	%p108, %r305, 0;
	neg.f32 	%f613, %f611;
	add.s32 	%r306, %r303, 1;
	cvt.rzi.f32.f32 	%f618, %f908;
	setp.eq.s32 	%p128, %r335, 0;
	neg.f32 	%f665, %f663;
	add.s32 	%r336, %r333, 1;
	cvt.rzi.f32.f32 	%f670, %f912;
	fma.rn.f32 	%f712, %f711, %f708, 0f3F800000;
	fma.rn.f32 	%f716, %f715, %f713, %f707;
	setp.eq.b32 	%p148, %r350, 1;
	setp.eq.s32 	%p7, %r186, 0;
	sub.f32 	%f215, %f214, %f213;
	setp.eq.s32 	%p13, %r193, 0;
	sub.f32 	%f249, %f214, %f247;
	setp.eq.s32 	%p19, %r204, 0;
	sub.f32 	%f284, %f214, %f282;
	setp.eq.s32 	%p25, %r211, 0;
	sub.f32 	%f318, %f214, %f316;
	setp.eq.s32 	%p31, %r222, 0;
	sub.f32 	%f353, %f214, %f351;
	setp.eq.s32 	%p37, %r229, 0;
	sub.f32 	%f387, %f214, %f385;
	setp.eq.s32 	%p43, %r240, 0;
	sub.f32 	%f422, %f214, %f420;
	setp.eq.s32 	%p49, %r247, 0;
	sub.f32 	%f456, %f214, %f454;
	setp.eq.s32 	%p67, %r264, 0;
	neg.f32 	%f506, %f504;
	add.s32 	%r265, %r262, 1;
	cvt.rzi.f32.f32 	%f511, %f900;
	setp.eq.s32 	%p87, %r287, 0;
	neg.f32 	%f559, %f557;
	add.s32 	%r288, %r285, 1;
	cvt.rzi.f32.f32 	%f564, %f904;
	selp.f32 	%f612, %f610, %f606, %p107;
	selp.f32 	%f614, %f611, %f613, %p108;
	and.b32  	%r307, %r306, 2;
	setp.eq.f32 	%p110, %f618, %f908;
	mul.f32 	%f619, %f908, 0f00000000;
	selp.f32 	%f664, %f662, %f658, %p127;
	selp.f32 	%f666, %f663, %f665, %p128;
	and.b32  	%r337, %r336, 2;
	setp.eq.f32 	%p130, %f670, %f912;
	mul.f32 	%f671, %f912, 0f00000000;
	selp.f32 	%f717, %f712, %f716, %p148;
	and.b32  	%r351, %r349, 2;
	selp.f32 	%f216, %f213, %f215, %p7;
	selp.f32 	%f250, %f247, %f249, %p13;
	selp.f32 	%f285, %f282, %f284, %p19;
	selp.f32 	%f319, %f316, %f318, %p25;
	selp.f32 	%f354, %f351, %f353, %p31;
	selp.f32 	%f388, %f385, %f387, %p37;
	selp.f32 	%f423, %f420, %f422, %p43;
	selp.f32 	%f457, %f454, %f456, %p49;
	selp.f32 	%f505, %f503, %f499, %p66;
	selp.f32 	%f507, %f504, %f506, %p67;
	and.b32  	%r266, %r265, 2;
	setp.eq.f32 	%p69, %f511, %f900;
	mul.f32 	%f512, %f900, 0f00000000;
	selp.f32 	%f558, %f556, %f552, %p86;
	selp.f32 	%f560, %f557, %f559, %p87;
	and.b32  	%r289, %r288, 2;
	setp.eq.f32 	%p89, %f564, %f904;
	mul.f32 	%f565, %f904, 0f00000000;
	setp.eq.s32 	%p109, %r307, 0;
	sub.f32 	%f616, %f214, %f612;
	selp.f32 	%f92, %f619, %f614, %p110;
	abs.f32 	%f620, %f908;
	setp.eq.s32 	%p129, %r337, 0;
	sub.f32 	%f668, %f214, %f664;
	selp.f32 	%f672, %f671, %f666, %p130;
	abs.f32 	%f673, %f912;
	setp.eq.s32 	%p149, %r351, 0;
	neg.f32 	%f719, %f717;
	add.s32 	%r352, %r349, 1;
	cvt.rzi.f32.f32 	%f724, %f924;
	mul.f32 	%f2, %f216, %f216;
	mul.f32 	%f7, %f250, %f250;
	mul.f32 	%f11, %f285, %f285;
	mul.f32 	%f16, %f319, %f319;
	mul.f32 	%f20, %f354, %f354;
	mul.f32 	%f25, %f388, %f388;
	mul.f32 	%f29, %f423, %f423;
	mul.f32 	%f34, %f457, %f457;
	setp.eq.s32 	%p68, %r266, 0;
	sub.f32 	%f509, %f214, %f505;
	selp.f32 	%f55, %f512, %f507, %p69;
	abs.f32 	%f513, %f900;
	setp.eq.s32 	%p88, %r289, 0;
	sub.f32 	%f562, %f214, %f558;
	selp.f32 	%f566, %f565, %f560, %p89;
	abs.f32 	%f567, %f904;
	selp.f32 	%f617, %f612, %f616, %p109;
	setp.gt.f32 	%p111, %f620, 0f4B800000;
	add.f32 	%f621, %f92, 0f3F800000;
	selp.f32 	%f669, %f664, %f668, %p129;
	setp.gt.f32 	%p131, %f673, 0f4B800000;
	add.f32 	%f674, %f672, 0f3F800000;
	selp.f32 	%f718, %f716, %f712, %p148;
	selp.f32 	%f720, %f717, %f719, %p149;
	and.b32  	%r353, %r352, 2;
	setp.eq.f32 	%p151, %f724, %f924;
	mul.f32 	%f725, %f924, 0f00000000;
	setp.eq.s32 	%p150, %r353, 0;
	sub.f32 	%f722, %f214, %f718;
	selp.f32 	%f165, %f725, %f720, %p151;
	abs.f32 	%f726, %f924;
	shr.u32 	%r12, %r5, 1;
	shr.u32 	%r18, %r5, 3;
	add.f32 	%f749, %f928, %f928;
	mov.b32 	%r368, %f749;
	and.b32  	%r369, %r368, -2147483648;
	or.b32  	%r370, %r369, 1056964608;
	mov.b32 	%f750, %r370;
	add.f32 	%f751, %f749, %f750;
	cvt.rzi.f32.f32 	%f752, %f751;
	abs.f32 	%f753, %f749;
	setp.gt.f32 	%p166, %f753, 0f4B000000;
	selp.f32 	%f754, %f749, %f752, %p166;
	cvt.rzi.f32.f32 	%f755, %f749;
	setp.lt.f32 	%p167, %f753, 0f3F000000;
	selp.f32 	%f756, %f755, %f754, %p167;
	cvt.rzi.s32.f32 	%r371, %f756;
	fma.rn.f32 	%f757, %f756, 0fBF000000, %f928;
	mul.f32 	%f758, %f757, 0f34222169;
	fma.rn.f32 	%f759, %f757, 0f40490FDA, %f758;
	mul.f32 	%f760, %f759, %f759;
	fma.rn.f32 	%f761, %f760, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f762, %f761, %f760, 0f3D2AAABB;
	fma.rn.f32 	%f763, %f762, %f760, 0fBEFFFFFF;
	fma.rn.f32 	%f764, %f763, %f760, 0f3F800000;
	fma.rn.f32 	%f765, %f760, %f759, 0f00000000;
	fma.rn.f32 	%f766, %f760, 0fB94D4153, 0f3C0885E4;
	fma.rn.f32 	%f767, %f766, %f760, 0fBE2AAAA8;
	fma.rn.f32 	%f768, %f767, %f765, %f759;
	and.b32  	%r372, %r371, 1;
	setp.eq.b32 	%p168, %r372, 1;
	selp.f32 	%f769, %f764, %f768, %p168;
	selp.f32 	%f770, %f768, %f764, %p168;
	and.b32  	%r373, %r371, 2;
	setp.eq.s32 	%p169, %r373, 0;
	neg.f32 	%f771, %f769;
	selp.f32 	%f772, %f769, %f771, %p169;
	add.s32 	%r374, %r371, 1;
	and.b32  	%r375, %r374, 2;
	setp.eq.s32 	%p170, %r375, 0;
	sub.f32 	%f774, %f214, %f770;
	cvt.rzi.f32.f32 	%f776, %f928;
	setp.eq.f32 	%p171, %f776, %f928;
	mul.f32 	%f777, %f928, 0f00000000;
	selp.f32 	%f778, %f777, %f772, %p171;
	abs.f32 	%f779, %f928;
	and.b32  	%r376, %r18, 2;
	and.b32  	%r377, %r12, 4;
	or.b32  	%r378, %r16, %r376;
	or.b32  	%r70, %r378, %r377;
	mul.lo.s32 	%r71, %r48, %r70;
	cvt.rn.f32.s32 	%f782, %r71;
	div.approx.f32 	%f114, %f782, %f570;
	abs.f32 	%f916, %f114;
	setp.lt.f32 	%p174, %f916, 0f40000000;
	@%p174 bra 	LBB0_95;
// %bb.84:
	setp.gtu.f32 	%p175, %f916, 0f4B800000;
	@%p175 bra 	LBB0_91;
	bra.uni 	LBB0_85;
LBB0_91:
	mov.b32 	%r73, %f916;
	and.b32  	%r379, %r73, 8388607;
	or.b32  	%r7769, %r379, 1065353216;
	mov.b32 	%f915, %r7769;
	add.s32 	%r380, %r73, -1073741824;
	and.b32  	%r7770, %r380, -8388608;
	setp.eq.s32 	%p181, %r7770, 0;
	@%p181 bra 	LBB0_94;
// %bb.92:                              // %__nv_fmaf_rn.exit4.i.i.i1274.preheader
	mov.f32 	%f793, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f792,%f793;
	// end inline asm
LBB0_93:                                // %__nv_fmaf_rn.exit4.i.i.i1274
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r381, %r7770, 192937984;
	add.s32 	%r382, %r381, %r7769;
	mov.b32 	%f794, %r382;
	mul.f32 	%f795, %f792, %f794;
	sub.f32 	%f796, %f794, %f795;
	fma.rn.f32 	%f797, %f796, %f792, %f795;
	sub.f32 	%f798, %f794, %f797;
	fma.rz.f32 	%f799, %f798, %f792, %f797;
	cvt.rzi.f32.f32 	%f800, %f799;
	sub.f32 	%f915, %f794, %f800;
	sub.s32 	%r7770, %r7770, %r381;
	mov.b32 	%r7769, %f915;
	setp.ne.s32 	%p182, %r7770, 0;
	setp.ne.s32 	%p183, %r7769, 0;
	and.pred  	%p184, %p182, %p183;
	@%p184 bra 	LBB0_93;
LBB0_94:                                // %__internal_fmodf_slowpath_mod.exit.i.i1276
	setp.gt.u32 	%p185, %r73, 2139095039;
	selp.f32 	%f801, 0f7FFFFFFF, 0f4B800000, %p185;
	mul.f32 	%f802, %f915, 0f34000000;
	mul.f32 	%f916, %f801, %f802;
	bra.uni 	LBB0_95;
LBB0_85:                                // %__nv_fast_fdividef.exit.i.i.i1246
	div.approx.f32 	%f785, %f916, %f185;
	cvt.rzi.f32.f32 	%f914, %f785;
	fma.rn.f32 	%f117, %f914, 0fC0000000, %f916;
	mov.b32 	%r72, %f117;
	setp.lt.u32 	%p176, %r72, 1073741824;
	@%p176 bra 	LBB0_90;
// %bb.86:
	setp.lt.u32 	%p177, %r72, -2147483647;
	@%p177 bra 	LBB0_88;
// %bb.87:
	add.f32 	%f790, %f914, 0fBF800000;
	setp.lt.f32 	%p180, %f117, 0fC0000000;
	add.f32 	%f791, %f790, 0fBF800000;
	selp.f32 	%f914, %f791, %f790, %p180;
	bra.uni 	LBB0_90;
LBB0_88:
	add.f32 	%f914, %f914, 0f3F800000;
	setp.ltu.f32 	%p178, %f117, 0f40800000;
	@%p178 bra 	LBB0_90;
// %bb.89:                              // %__nv_fmaf_rn.exit.i.i.i1251
	add.f32 	%f786, %f914, 0f3F800000;
	fma.rn.f32 	%f788, %f185, 0fC0400000, %f117;
	setp.ge.f32 	%p179, %f788, 0f00000000;
	add.f32 	%f789, %f786, 0f3F800000;
	selp.f32 	%f914, %f789, %f786, %p179;
LBB0_90:                                // %__internal_fmodf_fastpath_quot.exit.i.i1255
	fma.rn.f32 	%f916, %f914, 0fC0000000, %f916;
LBB0_95:                                // %__internal_fmodf_kernel.exit.i1280
	mul.f32 	%f220, %f2, 0f3C0AF64E;
	mul.f32 	%f254, %f7, 0f3C0AF64E;
	mul.f32 	%f289, %f11, 0f3C0AF64E;
	mul.f32 	%f323, %f16, 0f3C0AF64E;
	mul.f32 	%f358, %f20, 0f3C0AF64E;
	mul.f32 	%f392, %f25, 0f3C0AF64E;
	mul.f32 	%f427, %f29, 0f3C0AF64E;
	mul.f32 	%f460, %f34, 0f3C0AF64E;
	selp.f32 	%f510, %f505, %f509, %p68;
	setp.gt.f32 	%p70, %f513, 0f4B800000;
	add.f32 	%f514, %f55, 0f3F800000;
	selp.f32 	%f563, %f558, %f562, %p88;
	setp.gt.f32 	%p90, %f567, 0f4B800000;
	add.f32 	%f568, %f566, 0f3F800000;
	selp.f32 	%f93, %f621, %f617, %p111;
	selp.f32 	%f675, %f674, %f669, %p131;
	selp.f32 	%f723, %f718, %f722, %p150;
	setp.gt.f32 	%p152, %f726, 0f4B800000;
	add.f32 	%f727, %f165, 0f3F800000;
	selp.f32 	%f775, %f770, %f774, %p170;
	setp.gt.f32 	%p172, %f779, 0f4B800000;
	add.f32 	%f780, %f778, 0f3F800000;
	abs.f32 	%f803, %f916;
	setp.gtu.f32 	%p186, %f803, 0f7F800000;
	@%p186 bra 	LBB0_97;
// %bb.96:
	mov.b32 	%r383, %f114;
	and.b32  	%r384, %r383, -2147483648;
	mov.b32 	%r385, %f916;
	or.b32  	%r386, %r384, %r385;
	mov.b32 	%f916, %r386;
LBB0_97:                                // %__nv_fmodf.exit1281
	mul.f32 	%f6, %f220, %f890;
	mul.f32 	%f255, %f254, %f891;
	mul.f32 	%f15, %f289, %f892;
	mul.f32 	%f324, %f323, %f893;
	mul.f32 	%f24, %f358, %f894;
	mul.f32 	%f393, %f392, %f895;
	mul.f32 	%f33, %f427, %f896;
	mul.f32 	%f461, %f460, %f897;
	selp.f32 	%f56, %f514, %f510, %p70;
	selp.f32 	%f569, %f568, %f563, %p90;
	mov.b32 	%r320, %f675;
	mov.b32 	%r319, %f93;
	mov.b32 	%r326, %f672;
	mov.b32 	%r325, %f92;
	selp.f32 	%f166, %f727, %f723, %p152;
	selp.f32 	%f781, %f780, %f775, %p172;
	add.f32 	%f804, %f916, %f916;
	mov.b32 	%r387, %f804;
	and.b32  	%r388, %r387, -2147483648;
	or.b32  	%r389, %r388, 1056964608;
	mov.b32 	%f805, %r389;
	add.f32 	%f806, %f804, %f805;
	cvt.rzi.f32.f32 	%f807, %f806;
	abs.f32 	%f808, %f804;
	setp.gt.f32 	%p187, %f808, 0f4B000000;
	selp.f32 	%f809, %f804, %f807, %p187;
	cvt.rzi.f32.f32 	%f810, %f804;
	setp.lt.f32 	%p188, %f808, 0f3F000000;
	selp.f32 	%f811, %f810, %f809, %p188;
	cvt.rzi.s32.f32 	%r390, %f811;
	fma.rn.f32 	%f812, %f811, 0fBF000000, %f916;
	mul.f32 	%f813, %f812, 0f34222169;
	fma.rn.f32 	%f814, %f812, 0f40490FDA, %f813;
	mul.f32 	%f815, %f814, %f814;
	fma.rn.f32 	%f816, %f815, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f817, %f816, %f815, 0f3D2AAABB;
	fma.rn.f32 	%f818, %f817, %f815, 0fBEFFFFFF;
	fma.rn.f32 	%f819, %f818, %f815, 0f3F800000;
	fma.rn.f32 	%f820, %f815, %f814, 0f00000000;
	fma.rn.f32 	%f821, %f815, 0fB94D4153, 0f3C0885E4;
	fma.rn.f32 	%f822, %f821, %f815, 0fBE2AAAA8;
	fma.rn.f32 	%f823, %f822, %f820, %f814;
	and.b32  	%r391, %r390, 1;
	setp.eq.b32 	%p189, %r391, 1;
	selp.f32 	%f824, %f819, %f823, %p189;
	selp.f32 	%f825, %f823, %f819, %p189;
	and.b32  	%r392, %r390, 2;
	setp.eq.s32 	%p190, %r392, 0;
	neg.f32 	%f826, %f824;
	selp.f32 	%f827, %f824, %f826, %p190;
	add.s32 	%r393, %r390, 1;
	and.b32  	%r394, %r393, 2;
	setp.eq.s32 	%p191, %r394, 0;
	sub.f32 	%f829, %f214, %f825;
	selp.f32 	%f830, %f825, %f829, %p191;
	cvt.rzi.f32.f32 	%f831, %f916;
	setp.eq.f32 	%p192, %f831, %f916;
	mul.f32 	%f832, %f916, 0f00000000;
	selp.f32 	%f131, %f832, %f827, %p192;
	abs.f32 	%f833, %f916;
	setp.gt.f32 	%p193, %f833, 0f4B800000;
	add.f32 	%f834, %f131, 0f3F800000;
	shl.b32 	%r395, %r70, 3;
	sub.s32 	%r396, %r71, %r395;
	cvt.rn.f32.s32 	%f835, %r396;
	div.approx.f32 	%f133, %f835, %f570;
	abs.f32 	%f920, %f133;
	setp.lt.f32 	%p194, %f920, 0f40000000;
	@%p194 bra 	LBB0_109;
// %bb.98:
	setp.gtu.f32 	%p195, %f920, 0f4B800000;
	@%p195 bra 	LBB0_105;
	bra.uni 	LBB0_99;
LBB0_105:
	mov.b32 	%r81, %f920;
	and.b32  	%r397, %r81, 8388607;
	or.b32  	%r7771, %r397, 1065353216;
	mov.b32 	%f919, %r7771;
	add.s32 	%r398, %r81, -1073741824;
	and.b32  	%r7772, %r398, -8388608;
	setp.eq.s32 	%p201, %r7772, 0;
	@%p201 bra 	LBB0_108;
// %bb.106:                             // %__nv_fmaf_rn.exit4.i.i.i1320.preheader
	mov.f32 	%f846, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f845,%f846;
	// end inline asm
LBB0_107:                               // %__nv_fmaf_rn.exit4.i.i.i1320
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r399, %r7772, 192937984;
	add.s32 	%r400, %r399, %r7771;
	mov.b32 	%f847, %r400;
	mul.f32 	%f848, %f845, %f847;
	sub.f32 	%f849, %f847, %f848;
	fma.rn.f32 	%f850, %f849, %f845, %f848;
	sub.f32 	%f851, %f847, %f850;
	fma.rz.f32 	%f852, %f851, %f845, %f850;
	cvt.rzi.f32.f32 	%f853, %f852;
	sub.f32 	%f919, %f847, %f853;
	sub.s32 	%r7772, %r7772, %r399;
	mov.b32 	%r7771, %f919;
	setp.ne.s32 	%p202, %r7772, 0;
	setp.ne.s32 	%p203, %r7771, 0;
	and.pred  	%p204, %p202, %p203;
	@%p204 bra 	LBB0_107;
LBB0_108:                               // %__internal_fmodf_slowpath_mod.exit.i.i1322
	setp.gt.u32 	%p205, %r81, 2139095039;
	selp.f32 	%f854, 0f7FFFFFFF, 0f4B800000, %p205;
	mul.f32 	%f855, %f919, 0f34000000;
	mul.f32 	%f920, %f854, %f855;
	bra.uni 	LBB0_109;
LBB0_99:                                // %__nv_fast_fdividef.exit.i.i.i1292
	div.approx.f32 	%f838, %f920, %f185;
	cvt.rzi.f32.f32 	%f918, %f838;
	fma.rn.f32 	%f136, %f918, 0fC0000000, %f920;
	mov.b32 	%r80, %f136;
	setp.lt.u32 	%p196, %r80, 1073741824;
	@%p196 bra 	LBB0_104;
// %bb.100:
	setp.lt.u32 	%p197, %r80, -2147483647;
	@%p197 bra 	LBB0_102;
// %bb.101:
	add.f32 	%f843, %f918, 0fBF800000;
	setp.lt.f32 	%p200, %f136, 0fC0000000;
	add.f32 	%f844, %f843, 0fBF800000;
	selp.f32 	%f918, %f844, %f843, %p200;
	bra.uni 	LBB0_104;
LBB0_102:
	add.f32 	%f918, %f918, 0f3F800000;
	setp.ltu.f32 	%p198, %f136, 0f40800000;
	@%p198 bra 	LBB0_104;
// %bb.103:                             // %__nv_fmaf_rn.exit.i.i.i1297
	add.f32 	%f839, %f918, 0f3F800000;
	fma.rn.f32 	%f841, %f185, 0fC0400000, %f136;
	setp.ge.f32 	%p199, %f841, 0f00000000;
	add.f32 	%f842, %f839, 0f3F800000;
	selp.f32 	%f918, %f842, %f839, %p199;
LBB0_104:                               // %__internal_fmodf_fastpath_quot.exit.i.i1301
	fma.rn.f32 	%f920, %f918, 0fC0000000, %f920;
LBB0_109:                               // %__internal_fmodf_kernel.exit.i1326
	mov.b32 	%r196, %f255;
	mov.b32 	%r195, %f6;
	mov.b32 	%r214, %f324;
	mov.b32 	%r213, %f15;
	mov.b32 	%r232, %f393;
	mov.b32 	%r231, %f24;
	mov.b32 	%r250, %f461;
	mov.b32 	%r249, %f33;
	mov.b32 	%r278, %f569;
	mov.b32 	%r277, %f56;
	mov.b32 	%r281, %f566;
	mov.b32 	%r280, %f55;
	xor.b32  	%r323, %r326, -2147483648;
	xor.b32  	%r322, %r325, -2147483648;
	mov.b32 	%r364, %f781;
	mov.b32 	%r363, %f166;
	mov.b32 	%r367, %f778;
	mov.b32 	%r366, %f165;
	and.b32  	%r7, %r5, 16;
	selp.f32 	%f132, %f834, %f830, %p193;
	abs.f32 	%f856, %f920;
	setp.gtu.f32 	%p206, %f856, 0f7F800000;
	@%p206 bra 	LBB0_111;
// %bb.110:
	mov.b32 	%r401, %f133;
	and.b32  	%r402, %r401, -2147483648;
	mov.b32 	%r403, %f920;
	or.b32  	%r404, %r402, %r403;
	mov.b32 	%f920, %r404;
LBB0_111:                               // %__nv_fmodf.exit1327
	ld.param.u64 	%rd2, [_Z17julia_upchan_407113CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_3];
	ld.param.u64 	%rd3, [_Z17julia_upchan_407113CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_4];
	// begin inline asm
	cvt.rn.f16x2.f32 %r194, %r196, %r195;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r212, %r214, %r213;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r230, %r232, %r231;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r248, %r250, %r249;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r276, %r278, %r277;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r279, %r281, %r280;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r318, %r320, %r319;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r321, %r323, %r322;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r324, %r326, %r325;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r327, %r320, %r319;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r362, %r364, %r363;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r365, %r367, %r366;
	// end inline asm
	add.f32 	%f857, %f920, %f920;
	mov.b32 	%r418, %f857;
	and.b32  	%r419, %r418, -2147483648;
	or.b32  	%r420, %r419, 1056964608;
	mov.b32 	%f858, %r420;
	add.f32 	%f859, %f857, %f858;
	cvt.rzi.f32.f32 	%f860, %f859;
	abs.f32 	%f861, %f857;
	setp.gt.f32 	%p207, %f861, 0f4B000000;
	selp.f32 	%f862, %f857, %f860, %p207;
	cvt.rzi.f32.f32 	%f863, %f857;
	setp.lt.f32 	%p208, %f861, 0f3F000000;
	selp.f32 	%f864, %f863, %f862, %p208;
	cvt.rzi.s32.f32 	%r421, %f864;
	fma.rn.f32 	%f865, %f864, 0fBF000000, %f920;
	mul.f32 	%f866, %f865, 0f34222169;
	fma.rn.f32 	%f867, %f865, 0f40490FDA, %f866;
	mul.f32 	%f868, %f867, %f867;
	fma.rn.f32 	%f869, %f868, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f870, %f869, %f868, 0f3D2AAABB;
	fma.rn.f32 	%f871, %f870, %f868, 0fBEFFFFFF;
	fma.rn.f32 	%f872, %f871, %f868, 0f3F800000;
	fma.rn.f32 	%f873, %f868, %f867, 0f00000000;
	fma.rn.f32 	%f874, %f868, 0fB94D4153, 0f3C0885E4;
	fma.rn.f32 	%f875, %f874, %f868, 0fBE2AAAA8;
	fma.rn.f32 	%f876, %f875, %f873, %f867;
	and.b32  	%r422, %r421, 1;
	setp.eq.b32 	%p209, %r422, 1;
	selp.f32 	%f877, %f872, %f876, %p209;
	selp.f32 	%f878, %f876, %f872, %p209;
	and.b32  	%r423, %r421, 2;
	setp.eq.s32 	%p210, %r423, 0;
	neg.f32 	%f879, %f877;
	selp.f32 	%f880, %f877, %f879, %p210;
	add.s32 	%r424, %r421, 1;
	and.b32  	%r425, %r424, 2;
	setp.eq.s32 	%p211, %r425, 0;
	sub.f32 	%f882, %f214, %f878;
	selp.f32 	%f883, %f878, %f882, %p211;
	cvt.rzi.f32.f32 	%f884, %f920;
	setp.eq.f32 	%p212, %f884, %f920;
	mul.f32 	%f885, %f920, 0f00000000;
	selp.f32 	%f886, %f885, %f880, %p212;
	abs.f32 	%f887, %f920;
	setp.gt.f32 	%p213, %f887, 0f4B800000;
	add.f32 	%f888, %f886, 0f3F800000;
	selp.f32 	%f889, %f888, %f883, %p213;
	mov.b32 	%r407, %f889;
	mov.b32 	%r406, %f132;
	// begin inline asm
	cvt.rn.f16x2.f32 %r88, %r407, %r406;
	// end inline asm
	mov.b32 	%r413, %f886;
	xor.b32  	%r410, %r413, -2147483648;
	mov.b32 	%r412, %f131;
	xor.b32  	%r409, %r412, -2147483648;
	// begin inline asm
	cvt.rn.f16x2.f32 %r89, %r410, %r409;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r90, %r413, %r412;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r91, %r407, %r406;
	// end inline asm
	and.b32  	%r426, %r8, 28;
	shl.b32 	%r427, %r1, 5;
	and.b32  	%r428, %r427, 96;
	or.b32  	%r429, %r426, %r428;
	shl.b32 	%r430, %r1, 4;
	and.b32  	%r431, %r430, 1920;
	or.b32  	%r432, %r7, %r3;
	or.b32  	%r92, %r432, %r9;
	and.b32  	%r433, %r2, 2048;
	or.b32  	%r434, %r429, %r431;
	or.b32  	%r93, %r434, %r433;
	and.b32  	%r94, %r5, 8;
	and.b32  	%r435, %r3, 1;
	mul.lo.s32 	%r436, %r17, 65;
	shr.u32 	%r437, %r3, 1;
	bfe.u32 	%r438, %r3, 1, 1;
	bfe.u32 	%r439, %r3, 2, 1;
	shr.u32 	%r440, %r3, 3;
	shl.b32 	%r441, %r5, 4;
	or.b32  	%r442, %r441, %r94;
	shr.u32 	%r443, %r442, 2;
	and.b32  	%r444, %r443, 30;
	mad.lo.s32 	%r445, %r435, 1040, %r436;
	mad.lo.s32 	%r446, %r440, 130, %r445;
	mad.lo.s32 	%r447, %r438, 520, %r446;
	mad.lo.s32 	%r448, %r439, 260, %r447;
	add.s32 	%r449, %r448, %r444;
	mul.wide.u32 	%rd63, %r449, 4;
	mov.u64 	%rd64, shmem;
	add.s64 	%rd5, %rd64, %rd63;
	add.s32 	%r450, %r449, 32;
	mul.wide.u32 	%rd65, %r450, 4;
	add.s64 	%rd6, %rd64, %rd65;
	add.s32 	%r451, %r449, 1;
	mul.wide.u32 	%rd66, %r451, 4;
	add.s64 	%rd7, %rd64, %rd66;
	add.s32 	%r452, %r449, 33;
	mul.wide.u32 	%rd67, %r452, 4;
	add.s64 	%rd8, %rd64, %rd67;
	mul.lo.s32 	%r453, %r19, 1040;
	and.b32  	%r454, %r4, 32;
	mul.lo.s32 	%r455, %r13, 65;
	mul.lo.s32 	%r456, %r17, 520;
	mul.lo.s32 	%r457, %r16, 260;
	mul.lo.s32 	%r458, %r14, 130;
	or.b32  	%r459, %r454, %r437;
	add.s32 	%r460, %r459, %r456;
	add.s32 	%r461, %r460, %r458;
	add.s32 	%r462, %r461, %r453;
	add.s32 	%r463, %r462, %r455;
	add.s32 	%r464, %r463, %r457;
	or.b32  	%r465, %r437, 8;
	add.s32 	%r466, %r456, %r454;
	add.s32 	%r467, %r466, %r458;
	add.s32 	%r468, %r467, %r465;
	add.s32 	%r469, %r468, %r453;
	add.s32 	%r470, %r469, %r455;
	add.s32 	%r471, %r470, %r457;
	or.b32  	%r472, %r437, 16;
	add.s32 	%r473, %r467, %r472;
	add.s32 	%r474, %r473, %r453;
	add.s32 	%r475, %r474, %r455;
	add.s32 	%r476, %r475, %r457;
	or.b32  	%r477, %r437, 24;
	add.s32 	%r478, %r467, %r477;
	add.s32 	%r479, %r478, %r453;
	add.s32 	%r480, %r479, %r455;
	add.s32 	%r481, %r480, %r457;
	shl.b32 	%r482, %r1, 3;
	and.b32  	%r483, %r482, 960;
	mul.lo.s32 	%r484, %r10, 65;
	add.s32 	%r485, %r459, %r484;
	or.b32  	%r486, %r465, %r454;
	add.s32 	%r487, %r486, %r484;
	or.b32  	%r488, %r472, %r454;
	add.s32 	%r489, %r488, %r484;
	or.b32  	%r490, %r477, %r454;
	add.s32 	%r491, %r490, %r484;
	shl.b32 	%r492, %r3, 1;
	or.b32  	%r493, %r17, %r492;
	mul.lo.s32 	%r494, %r493, 65;
	add.s32 	%r495, %r444, %r494;
	mul.wide.u32 	%rd68, %r495, 4;
	add.s64 	%rd9, %rd64, %rd68;
	cvt.u64.u32 	%rd69, %r444;
	cvt.u64.u32 	%rd70, %r494;
	add.s64 	%rd71, %rd70, %rd69;
	shl.b64 	%rd72, %rd71, 2;
	add.s64 	%rd10, %rd64, %rd72;
	shl.b32 	%r496, %r3, 2;
	or.b32  	%r497, %r18, %r496;
	shl.b32 	%r498, %r1, 15;
	and.b32  	%r499, %r498, 131072;
	or.b32  	%r500, %r499, %r429;
	or.b32  	%r501, %r497, %r483;
	shl.b32 	%r502, %r501, 7;
	or.b32  	%r503, %r500, %r502;
	or.b32  	%r95, %r503, -786432;
	mul.wide.u32 	%rd11, %r491, 4;
	mul.wide.u32 	%rd12, %r489, 4;
	mul.wide.u32 	%rd13, %r487, 4;
	mul.wide.u32 	%rd14, %r485, 4;
	mul.wide.u32 	%rd15, %r481, 4;
	mul.wide.u32 	%rd16, %r476, 4;
	mul.wide.u32 	%rd17, %r471, 4;
	mul.wide.u32 	%rd18, %r464, 4;
	mov.u32 	%r7787, 0;
	setp.eq.s32 	%p214, %r94, 0;
	mov.u16 	%rs1176, 25600;
	mov.u16 	%rs1072, 21504;
	mov.u16 	%rs1184, 18432;
	mov.u16 	%rs1142, -14592;
	mov.u32 	%r7788, %r7787;
	mov.u32 	%r7789, %r7787;
	mov.u32 	%r7790, %r7787;
	mov.u32 	%r7791, %r7787;
	mov.u32 	%r7792, %r7787;
	mov.u32 	%r7793, %r7787;
	mov.u32 	%r7794, %r7787;
	mov.u32 	%r7795, %r7787;
	mov.u32 	%r7796, %r7787;
	mov.u32 	%r7797, %r7787;
	mov.u32 	%r7798, %r7787;
	mov.u32 	%r7785, %r7787;
	bra.uni 	LBB0_112;
LBB0_116:                               // %L29369
                                        //   in Loop: Header=BB0_112 Depth=1
	add.s32 	%r7785, %r108, 256;
	setp.gt.s32 	%p219, %r6, %r7785;
	setp.ne.s32 	%p220, %r108, 32512;
	and.pred  	%p221, %p220, %p219;
	@%p221 bra 	LBB0_112;
	bra.uni 	LBB0_117;
LBB0_112:                               // %L1260
                                        // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_113 Depth 2
	mov.u32 	%r108, %r7785;
	or.b32  	%r521, %r92, %r108;
	shl.b32 	%r522, %r521, 12;
	or.b32  	%r523, %r93, %r522;
	mul.wide.u32 	%rd74, %r523, 4;
	add.s64 	%rd75, %rd2, %rd74;
	ld.global.v4.u32 	{%r524, %r525, %r526, %r527}, [%rd75];
	selp.b32 	%r528, %r526, %r524, %p214;
	shfl.sync.bfly.b32	%r529, %r528, 8, 31, -1;
	selp.b32 	%r505, %r524, %r529, %p214;
	selp.b32 	%r506, %r529, %r526, %p214;
	selp.b32 	%r530, %r527, %r525, %p214;
	shfl.sync.bfly.b32	%r531, %r530, 8, 31, -1;
	selp.b32 	%r513, %r525, %r531, %p214;
	selp.b32 	%r514, %r531, %r527, %p214;
	mov.u32 	%r515, 21520;
	// begin inline asm
	prmt.b32 %r504, %r505, %r506, %r515;
	// end inline asm
	mov.u32 	%r519, 30258;
	// begin inline asm
	prmt.b32 %r508, %r505, %r506, %r519;
	// end inline asm
	// begin inline asm
	prmt.b32 %r512, %r513, %r514, %r515;
	// end inline asm
	// begin inline asm
	prmt.b32 %r516, %r513, %r514, %r519;
	// end inline asm
	st.shared.u32 	[%rd5], %r504;
	st.shared.u32 	[%rd6], %r508;
	st.shared.u32 	[%rd7], %r512;
	st.shared.u32 	[%rd8], %r516;
	bar.sync 	0;
	mov.u32 	%r7786, 256;
	mov.u64 	%rd86, %rd64;
LBB0_113:                               // %L4385
                                        //   Parent Loop BB0_112 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	add.s64 	%rd76, %rd86, %rd18;
	ld.shared.u32 	%r7716, [%rd76];
	add.s64 	%rd77, %rd86, %rd17;
	ld.shared.u32 	%r7717, [%rd77];
	add.s64 	%rd78, %rd86, %rd16;
	ld.shared.u32 	%r7718, [%rd78];
	add.s64 	%rd79, %rd86, %rd15;
	ld.shared.u32 	%r7719, [%rd79];
	// begin inline asm
	mov.b32 %r537, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r548, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r536, %r7716, -2004318072;
	mov.u32 	%r535, 983055;
	// begin inline asm
	lop3.b32 %r534, %r535, %r536, %r537, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r538, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r539, %r537, %r538;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r542, %r534, %r539;
	// end inline asm
	mov.u32 	%r546, 15728880;
	// begin inline asm
	lop3.b32 %r545, %r546, %r536, %r548, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r549, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r550, %r548, %r549;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r553, %r545, %r550;
	// end inline asm
	shr.u32 	%r558, %r536, 8;
	// begin inline asm
	lop3.b32 %r556, %r535, %r558, %r537, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r560, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r561, %r537, %r560;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r564, %r556, %r561;
	// end inline asm
	// begin inline asm
	lop3.b32 %r567, %r546, %r558, %r548, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r571, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r572, %r548, %r571;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r575, %r567, %r572;
	// end inline asm
	// begin inline asm
	mov.b32 %r583, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r594, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r582, %r7717, -2004318072;
	// begin inline asm
	lop3.b32 %r580, %r535, %r582, %r583, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r584, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r585, %r583, %r584;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r588, %r580, %r585;
	// end inline asm
	// begin inline asm
	lop3.b32 %r591, %r546, %r582, %r594, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r595, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r596, %r594, %r595;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r599, %r591, %r596;
	// end inline asm
	shr.u32 	%r604, %r582, 8;
	// begin inline asm
	lop3.b32 %r602, %r535, %r604, %r583, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r606, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r607, %r583, %r606;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r610, %r602, %r607;
	// end inline asm
	// begin inline asm
	lop3.b32 %r613, %r546, %r604, %r594, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r617, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r618, %r594, %r617;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r621, %r613, %r618;
	// end inline asm
	// begin inline asm
	mov.b32 %r629, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r640, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r628, %r7718, -2004318072;
	// begin inline asm
	lop3.b32 %r626, %r535, %r628, %r629, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r630, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r631, %r629, %r630;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r634, %r626, %r631;
	// end inline asm
	// begin inline asm
	lop3.b32 %r637, %r546, %r628, %r640, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r641, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r642, %r640, %r641;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r645, %r637, %r642;
	// end inline asm
	shr.u32 	%r650, %r628, 8;
	// begin inline asm
	lop3.b32 %r648, %r535, %r650, %r629, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r652, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r653, %r629, %r652;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r656, %r648, %r653;
	// end inline asm
	// begin inline asm
	lop3.b32 %r659, %r546, %r650, %r640, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r663, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r664, %r640, %r663;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r667, %r659, %r664;
	// end inline asm
	// begin inline asm
	mov.b32 %r675, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r686, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r674, %r7719, -2004318072;
	// begin inline asm
	lop3.b32 %r672, %r535, %r674, %r675, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r676, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r677, %r675, %r676;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r680, %r672, %r677;
	// end inline asm
	// begin inline asm
	lop3.b32 %r683, %r546, %r674, %r686, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r687, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r688, %r686, %r687;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r691, %r683, %r688;
	// end inline asm
	shr.u32 	%r696, %r674, 8;
	// begin inline asm
	lop3.b32 %r694, %r535, %r696, %r675, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r698, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r699, %r675, %r698;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r702, %r694, %r699;
	// end inline asm
	// begin inline asm
	lop3.b32 %r705, %r546, %r696, %r686, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r709, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r710, %r686, %r709;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r713, %r705, %r710;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r716, %r248;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r718, %r716, %r542;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r721, %r248;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r723, %r721, %r553;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r726, %r248;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r728, %r726, %r564;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r731, %r248;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r733, %r731, %r575;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r736, %r248;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r738, %r736, %r588;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r741, %r248;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r743, %r741, %r599;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r746, %r248;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r748, %r746, %r610;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r751, %r248;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r753, %r751, %r621;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r756, %r248;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r758, %r756, %r634;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r761, %r248;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r763, %r761, %r645;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r766, %r248;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r768, %r766, %r656;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r771, %r248;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r773, %r771, %r667;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r776, %r248;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r778, %r776, %r680;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r781, %r248;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r783, %r781, %r691;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r786, %r248;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r788, %r786, %r702;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r791, %r248;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r793, %r791, %r713;
	// end inline asm
	// begin inline asm
	mov.b32 %r801, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r812, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r800, %r7787, -2004318072;
	// begin inline asm
	lop3.b32 %r798, %r535, %r800, %r801, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r802, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r803, %r801, %r802;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r806, %r798, %r803;
	// end inline asm
	// begin inline asm
	lop3.b32 %r809, %r546, %r800, %r812, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r813, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r814, %r812, %r813;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r817, %r809, %r814;
	// end inline asm
	shr.u32 	%r822, %r800, 8;
	// begin inline asm
	lop3.b32 %r820, %r535, %r822, %r801, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r824, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r825, %r801, %r824;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r828, %r820, %r825;
	// end inline asm
	// begin inline asm
	lop3.b32 %r831, %r546, %r822, %r812, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r835, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r836, %r812, %r835;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r839, %r831, %r836;
	// end inline asm
	// begin inline asm
	mov.b32 %r847, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r858, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r846, %r7788, -2004318072;
	// begin inline asm
	lop3.b32 %r844, %r535, %r846, %r847, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r848, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r849, %r847, %r848;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r852, %r844, %r849;
	// end inline asm
	// begin inline asm
	lop3.b32 %r855, %r546, %r846, %r858, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r859, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r860, %r858, %r859;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r863, %r855, %r860;
	// end inline asm
	shr.u32 	%r868, %r846, 8;
	// begin inline asm
	lop3.b32 %r866, %r535, %r868, %r847, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r870, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r871, %r847, %r870;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r874, %r866, %r871;
	// end inline asm
	// begin inline asm
	lop3.b32 %r877, %r546, %r868, %r858, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r881, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r882, %r858, %r881;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r885, %r877, %r882;
	// end inline asm
	// begin inline asm
	mov.b32 %r893, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r904, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r892, %r7789, -2004318072;
	// begin inline asm
	lop3.b32 %r890, %r535, %r892, %r893, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r894, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r895, %r893, %r894;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r898, %r890, %r895;
	// end inline asm
	// begin inline asm
	lop3.b32 %r901, %r546, %r892, %r904, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r905, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r906, %r904, %r905;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r909, %r901, %r906;
	// end inline asm
	shr.u32 	%r914, %r892, 8;
	// begin inline asm
	lop3.b32 %r912, %r535, %r914, %r893, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r916, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r917, %r893, %r916;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r920, %r912, %r917;
	// end inline asm
	// begin inline asm
	lop3.b32 %r923, %r546, %r914, %r904, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r927, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r928, %r904, %r927;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r931, %r923, %r928;
	// end inline asm
	// begin inline asm
	mov.b32 %r939, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r950, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r938, %r7790, -2004318072;
	// begin inline asm
	lop3.b32 %r936, %r535, %r938, %r939, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r940, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r941, %r939, %r940;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r944, %r936, %r941;
	// end inline asm
	// begin inline asm
	lop3.b32 %r947, %r546, %r938, %r950, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r951, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r952, %r950, %r951;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r955, %r947, %r952;
	// end inline asm
	shr.u32 	%r960, %r938, 8;
	// begin inline asm
	lop3.b32 %r958, %r535, %r960, %r939, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r962, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r963, %r939, %r962;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r966, %r958, %r963;
	// end inline asm
	// begin inline asm
	lop3.b32 %r969, %r546, %r960, %r950, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r973, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r974, %r950, %r973;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r977, %r969, %r974;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r980, %r194, %r806, %r718;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r984, %r194, %r817, %r723;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r988, %r194, %r828, %r728;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r992, %r194, %r839, %r733;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r996, %r194, %r852, %r738;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1000, %r194, %r863, %r743;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1004, %r194, %r874, %r748;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1008, %r194, %r885, %r753;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1012, %r194, %r898, %r758;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1016, %r194, %r909, %r763;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1020, %r194, %r920, %r768;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1024, %r194, %r931, %r773;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1028, %r194, %r944, %r778;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1032, %r194, %r955, %r783;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1036, %r194, %r966, %r788;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1040, %r194, %r977, %r793;
	// end inline asm
	// begin inline asm
	mov.b32 %r1049, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1060, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1048, %r7791, -2004318072;
	// begin inline asm
	lop3.b32 %r1046, %r535, %r1048, %r1049, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1050, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1051, %r1049, %r1050;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1054, %r1046, %r1051;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1057, %r546, %r1048, %r1060, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1061, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1062, %r1060, %r1061;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1065, %r1057, %r1062;
	// end inline asm
	shr.u32 	%r1070, %r1048, 8;
	// begin inline asm
	lop3.b32 %r1068, %r535, %r1070, %r1049, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1072, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1073, %r1049, %r1072;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1076, %r1068, %r1073;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1079, %r546, %r1070, %r1060, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1083, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1084, %r1060, %r1083;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1087, %r1079, %r1084;
	// end inline asm
	// begin inline asm
	mov.b32 %r1095, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1106, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1094, %r7792, -2004318072;
	// begin inline asm
	lop3.b32 %r1092, %r535, %r1094, %r1095, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1096, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1097, %r1095, %r1096;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1100, %r1092, %r1097;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1103, %r546, %r1094, %r1106, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1107, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1108, %r1106, %r1107;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1111, %r1103, %r1108;
	// end inline asm
	shr.u32 	%r1116, %r1094, 8;
	// begin inline asm
	lop3.b32 %r1114, %r535, %r1116, %r1095, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1118, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1119, %r1095, %r1118;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1122, %r1114, %r1119;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1125, %r546, %r1116, %r1106, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1129, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1130, %r1106, %r1129;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1133, %r1125, %r1130;
	// end inline asm
	// begin inline asm
	mov.b32 %r1141, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1152, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1140, %r7793, -2004318072;
	// begin inline asm
	lop3.b32 %r1138, %r535, %r1140, %r1141, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1142, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1143, %r1141, %r1142;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1146, %r1138, %r1143;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1149, %r546, %r1140, %r1152, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1153, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1154, %r1152, %r1153;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1157, %r1149, %r1154;
	// end inline asm
	shr.u32 	%r1162, %r1140, 8;
	// begin inline asm
	lop3.b32 %r1160, %r535, %r1162, %r1141, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1164, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1165, %r1141, %r1164;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1168, %r1160, %r1165;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1171, %r546, %r1162, %r1152, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1175, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1176, %r1152, %r1175;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1179, %r1171, %r1176;
	// end inline asm
	// begin inline asm
	mov.b32 %r1187, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1198, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1186, %r7794, -2004318072;
	// begin inline asm
	lop3.b32 %r1184, %r535, %r1186, %r1187, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1188, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1189, %r1187, %r1188;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1192, %r1184, %r1189;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1195, %r546, %r1186, %r1198, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1199, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1200, %r1198, %r1199;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1203, %r1195, %r1200;
	// end inline asm
	shr.u32 	%r1208, %r1186, 8;
	// begin inline asm
	lop3.b32 %r1206, %r535, %r1208, %r1187, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1210, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1211, %r1187, %r1210;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1214, %r1206, %r1211;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1217, %r546, %r1208, %r1198, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1221, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1222, %r1198, %r1221;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1225, %r1217, %r1222;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1228, %r212;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1230, %r1228, %r1054, %r980;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1234, %r212;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1236, %r1234, %r1065, %r984;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1240, %r212;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1242, %r1240, %r1076, %r988;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1246, %r212;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1248, %r1246, %r1087, %r992;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1252, %r212;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1254, %r1252, %r1100, %r996;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1258, %r212;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1260, %r1258, %r1111, %r1000;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1264, %r212;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1266, %r1264, %r1122, %r1004;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1270, %r212;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1272, %r1270, %r1133, %r1008;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1276, %r212;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1278, %r1276, %r1146, %r1012;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1282, %r212;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1284, %r1282, %r1157, %r1016;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1288, %r212;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1290, %r1288, %r1168, %r1020;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1294, %r212;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1296, %r1294, %r1179, %r1024;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1300, %r212;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1302, %r1300, %r1192, %r1028;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1306, %r212;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1308, %r1306, %r1203, %r1032;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1312, %r212;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1314, %r1312, %r1214, %r1036;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1318, %r212;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1320, %r1318, %r1225, %r1040;
	// end inline asm
	// begin inline asm
	mov.b32 %r1329, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1340, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1328, %r7795, -2004318072;
	// begin inline asm
	lop3.b32 %r1326, %r535, %r1328, %r1329, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1330, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1331, %r1329, %r1330;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1334, %r1326, %r1331;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1337, %r546, %r1328, %r1340, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1341, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1342, %r1340, %r1341;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1345, %r1337, %r1342;
	// end inline asm
	shr.u32 	%r1350, %r1328, 8;
	// begin inline asm
	lop3.b32 %r1348, %r535, %r1350, %r1329, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1352, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1353, %r1329, %r1352;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1356, %r1348, %r1353;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1359, %r546, %r1350, %r1340, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1363, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1364, %r1340, %r1363;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1367, %r1359, %r1364;
	// end inline asm
	// begin inline asm
	mov.b32 %r1375, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1386, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1374, %r7796, -2004318072;
	// begin inline asm
	lop3.b32 %r1372, %r535, %r1374, %r1375, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1376, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1377, %r1375, %r1376;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1380, %r1372, %r1377;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1383, %r546, %r1374, %r1386, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1387, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1388, %r1386, %r1387;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1391, %r1383, %r1388;
	// end inline asm
	shr.u32 	%r1396, %r1374, 8;
	// begin inline asm
	lop3.b32 %r1394, %r535, %r1396, %r1375, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1398, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1399, %r1375, %r1398;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1402, %r1394, %r1399;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1405, %r546, %r1396, %r1386, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1409, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1410, %r1386, %r1409;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1413, %r1405, %r1410;
	// end inline asm
	// begin inline asm
	mov.b32 %r1421, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1432, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1420, %r7797, -2004318072;
	// begin inline asm
	lop3.b32 %r1418, %r535, %r1420, %r1421, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1422, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1423, %r1421, %r1422;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1426, %r1418, %r1423;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1429, %r546, %r1420, %r1432, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1433, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1434, %r1432, %r1433;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1437, %r1429, %r1434;
	// end inline asm
	shr.u32 	%r1442, %r1420, 8;
	// begin inline asm
	lop3.b32 %r1440, %r535, %r1442, %r1421, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1444, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1445, %r1421, %r1444;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1448, %r1440, %r1445;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1451, %r546, %r1442, %r1432, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1455, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1456, %r1432, %r1455;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1459, %r1451, %r1456;
	// end inline asm
	// begin inline asm
	mov.b32 %r1467, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1478, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1466, %r7798, -2004318072;
	// begin inline asm
	lop3.b32 %r1464, %r535, %r1466, %r1467, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1468, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1469, %r1467, %r1468;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1472, %r1464, %r1469;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1475, %r546, %r1466, %r1478, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1479, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1480, %r1478, %r1479;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1483, %r1475, %r1480;
	// end inline asm
	shr.u32 	%r1488, %r1466, 8;
	// begin inline asm
	lop3.b32 %r1486, %r535, %r1488, %r1467, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1490, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1491, %r1467, %r1490;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1494, %r1486, %r1491;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1497, %r546, %r1488, %r1478, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1501, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1502, %r1478, %r1501;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1505, %r1497, %r1502;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1579, %r230, %r1334, %r1230;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1576, %r230, %r1345, %r1236;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1588, %r230, %r1356, %r1242;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1585, %r230, %r1367, %r1248;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1597, %r230, %r1380, %r1254;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1594, %r230, %r1391, %r1260;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1606, %r230, %r1402, %r1266;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1603, %r230, %r1413, %r1272;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1615, %r230, %r1426, %r1278;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1612, %r230, %r1437, %r1284;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1624, %r230, %r1448, %r1290;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1621, %r230, %r1459, %r1296;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1633, %r230, %r1472, %r1302;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1630, %r230, %r1483, %r1308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1642, %r230, %r1494, %r1314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1639, %r230, %r1505, %r1320;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1572, %r279;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1574, %r1572, %r1576;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1577, %r276, %r1579, %r1574;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1581, %r279;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1583, %r1581, %r1585;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1586, %r276, %r1588, %r1583;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1590, %r279;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1592, %r1590, %r1594;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1595, %r276, %r1597, %r1592;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1599, %r279;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1601, %r1599, %r1603;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1604, %r276, %r1606, %r1601;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1608, %r279;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1610, %r1608, %r1612;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1613, %r276, %r1615, %r1610;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1617, %r279;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1619, %r1617, %r1621;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1622, %r276, %r1624, %r1619;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1626, %r279;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1628, %r1626, %r1630;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1631, %r276, %r1633, %r1628;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1635, %r279;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1637, %r1635, %r1639;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1640, %r276, %r1642, %r1637;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1644, %r279, %r1579;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1647, %r276, %r1576, %r1644;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1651, %r279, %r1588;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1654, %r276, %r1585, %r1651;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1658, %r279, %r1597;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1661, %r276, %r1594, %r1658;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1665, %r279, %r1606;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1668, %r276, %r1603, %r1665;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1672, %r279, %r1615;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1675, %r276, %r1612, %r1672;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1679, %r279, %r1624;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1682, %r276, %r1621, %r1679;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1686, %r279, %r1633;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1689, %r276, %r1630, %r1686;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1693, %r279, %r1642;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1696, %r276, %r1639, %r1693;
	// end inline asm
	mov.u32 	%r7375, 0;
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1787, %r1784}, {%r318, %r324, %r321, %r327}, {%r1577, %r1647}, {%r7375, %r7375};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1796, %r1793}, {%r318, %r324, %r321, %r327}, {%r1586, %r1654}, {%r7375, %r7375};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1805, %r1802}, {%r318, %r324, %r321, %r327}, {%r1595, %r1661}, {%r7375, %r7375};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1814, %r1811}, {%r318, %r324, %r321, %r327}, {%r1604, %r1668}, {%r7375, %r7375};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1823, %r1820}, {%r318, %r324, %r321, %r327}, {%r1613, %r1675}, {%r7375, %r7375};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1832, %r1829}, {%r318, %r324, %r321, %r327}, {%r1622, %r1682}, {%r7375, %r7375};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1841, %r1838}, {%r318, %r324, %r321, %r327}, {%r1631, %r1689}, {%r7375, %r7375};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1850, %r1847}, {%r318, %r324, %r321, %r327}, {%r1640, %r1696}, {%r7375, %r7375};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1780, %r365;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1782, %r1780, %r1784;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1785, %r362, %r1787, %r1782;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1789, %r365;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1791, %r1789, %r1793;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1794, %r362, %r1796, %r1791;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1798, %r365;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1800, %r1798, %r1802;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1803, %r362, %r1805, %r1800;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1807, %r365;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1809, %r1807, %r1811;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1812, %r362, %r1814, %r1809;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1816, %r365;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1818, %r1816, %r1820;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1821, %r362, %r1823, %r1818;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1825, %r365;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1827, %r1825, %r1829;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1830, %r362, %r1832, %r1827;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1834, %r365;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1836, %r1834, %r1838;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1839, %r362, %r1841, %r1836;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1843, %r365;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1845, %r1843, %r1847;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1848, %r362, %r1850, %r1845;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1852, %r365, %r1787;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1855, %r362, %r1784, %r1852;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1859, %r365, %r1796;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1862, %r362, %r1793, %r1859;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1866, %r365, %r1805;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1869, %r362, %r1802, %r1866;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1873, %r365, %r1814;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1876, %r362, %r1811, %r1873;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1880, %r365, %r1823;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1883, %r362, %r1820, %r1880;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1887, %r365, %r1832;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1890, %r362, %r1829, %r1887;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1894, %r365, %r1841;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1897, %r362, %r1838, %r1894;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1901, %r365, %r1850;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1904, %r362, %r1847, %r1901;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1908, %r1909}, {%r88, %r90, %r89, %r91}, {%r1785, %r1855}, {%r7375, %r7375};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1918, %r1919}, {%r88, %r90, %r89, %r91}, {%r1794, %r1862}, {%r7375, %r7375};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1928, %r1929}, {%r88, %r90, %r89, %r91}, {%r1803, %r1869}, {%r7375, %r7375};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1938, %r1939}, {%r88, %r90, %r89, %r91}, {%r1812, %r1876}, {%r7375, %r7375};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1948, %r1949}, {%r88, %r90, %r89, %r91}, {%r1821, %r1883}, {%r7375, %r7375};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1958, %r1959}, {%r88, %r90, %r89, %r91}, {%r1830, %r1890}, {%r7375, %r7375};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1968, %r1969}, {%r88, %r90, %r89, %r91}, {%r1839, %r1897}, {%r7375, %r7375};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1978, %r1979}, {%r88, %r90, %r89, %r91}, {%r1848, %r1904}, {%r7375, %r7375};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1988, %r11, %r1908;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1991, %r11, %r1909;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1994, %r11, %r1918;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1997, %r11, %r1919;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2000, %r11, %r1928;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2003, %r11, %r1929;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2006, %r11, %r1938;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2009, %r11, %r1939;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2012, %r11, %r1948;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2015, %r11, %r1949;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2018, %r11, %r1958;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2021, %r11, %r1959;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2024, %r11, %r1968;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2027, %r11, %r1969;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2030, %r11, %r1978;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2033, %r11, %r1979;
	// end inline asm
	// begin inline asm
	mov.b32 %r2036, {%rs1142, %rs1142};
	// end inline asm
	mov.u16 	%rs195, 18176;
	// begin inline asm
	mov.b32 %r2037, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2038, %r1988, %r2036;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2041, %r2038, %r2037;
	// end inline asm
	// begin inline asm
	mov.b32 %r2044, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2045, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2046, %r1991, %r2044;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2049, %r2046, %r2045;
	// end inline asm
	// begin inline asm
	mov.b32 %r2052, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2053, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2054, %r1994, %r2052;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2057, %r2054, %r2053;
	// end inline asm
	// begin inline asm
	mov.b32 %r2060, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2061, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2062, %r1997, %r2060;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2065, %r2062, %r2061;
	// end inline asm
	// begin inline asm
	mov.b32 %r2068, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2069, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2070, %r2000, %r2068;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2073, %r2070, %r2069;
	// end inline asm
	// begin inline asm
	mov.b32 %r2076, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2077, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2078, %r2003, %r2076;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2081, %r2078, %r2077;
	// end inline asm
	// begin inline asm
	mov.b32 %r2084, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2085, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2086, %r2006, %r2084;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2089, %r2086, %r2085;
	// end inline asm
	// begin inline asm
	mov.b32 %r2092, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2093, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2094, %r2009, %r2092;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2097, %r2094, %r2093;
	// end inline asm
	// begin inline asm
	mov.b32 %r2100, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2101, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2102, %r2012, %r2100;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2105, %r2102, %r2101;
	// end inline asm
	// begin inline asm
	mov.b32 %r2108, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2109, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2110, %r2015, %r2108;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2113, %r2110, %r2109;
	// end inline asm
	// begin inline asm
	mov.b32 %r2116, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2117, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2118, %r2018, %r2116;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2121, %r2118, %r2117;
	// end inline asm
	// begin inline asm
	mov.b32 %r2124, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2125, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2126, %r2021, %r2124;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2129, %r2126, %r2125;
	// end inline asm
	// begin inline asm
	mov.b32 %r2132, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2133, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2134, %r2024, %r2132;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2137, %r2134, %r2133;
	// end inline asm
	// begin inline asm
	mov.b32 %r2140, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2141, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2142, %r2027, %r2140;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2145, %r2142, %r2141;
	// end inline asm
	// begin inline asm
	mov.b32 %r2148, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2149, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2150, %r2030, %r2148;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2153, %r2150, %r2149;
	// end inline asm
	// begin inline asm
	mov.b32 %r2156, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2157, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2158, %r2033, %r2156;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2161, %r2158, %r2157;
	// end inline asm
	// begin inline asm
	mov.b32 %r2167, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2165, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2166, %r2167, %r2165;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2169, %r2041, %r2166;
	// end inline asm
	// begin inline asm
	mov.b32 %r2172, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2173, %r2167, %r2172;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2176, %r2049, %r2173;
	// end inline asm
	// begin inline asm
	mov.b32 %r2179, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2180, %r2167, %r2179;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2183, %r2057, %r2180;
	// end inline asm
	// begin inline asm
	mov.b32 %r2186, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2187, %r2167, %r2186;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2190, %r2065, %r2187;
	// end inline asm
	mov.u32 	%r2196, 25152;
	// begin inline asm
	prmt.b32 %r2193, %r2169, %r2183, %r2196;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2197, %r2176, %r2190, %r2196;
	// end inline asm
	shl.b32 	%r2204, %r2197, 4;
	mov.u32 	%r2202, 252645135;
	// begin inline asm
	lop3.b32 %r2201, %r2202, %r2193, %r2204, 202;
	// end inline asm
	xor.b32  	%r7720, %r2201, -2004318072;
	// begin inline asm
	mov.b32 %r2208, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2206, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2207, %r2208, %r2206;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2210, %r2073, %r2207;
	// end inline asm
	// begin inline asm
	mov.b32 %r2213, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2214, %r2208, %r2213;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2217, %r2081, %r2214;
	// end inline asm
	// begin inline asm
	mov.b32 %r2220, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2221, %r2208, %r2220;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2224, %r2089, %r2221;
	// end inline asm
	// begin inline asm
	mov.b32 %r2227, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2228, %r2208, %r2227;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2231, %r2097, %r2228;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2234, %r2210, %r2224, %r2196;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2238, %r2217, %r2231, %r2196;
	// end inline asm
	shl.b32 	%r2245, %r2238, 4;
	// begin inline asm
	lop3.b32 %r2242, %r2202, %r2234, %r2245, 202;
	// end inline asm
	xor.b32  	%r7721, %r2242, -2004318072;
	// begin inline asm
	mov.b32 %r2249, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2247, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2248, %r2249, %r2247;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2251, %r2105, %r2248;
	// end inline asm
	// begin inline asm
	mov.b32 %r2254, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2255, %r2249, %r2254;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2258, %r2113, %r2255;
	// end inline asm
	// begin inline asm
	mov.b32 %r2261, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2262, %r2249, %r2261;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2265, %r2121, %r2262;
	// end inline asm
	// begin inline asm
	mov.b32 %r2268, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2269, %r2249, %r2268;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2272, %r2129, %r2269;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2275, %r2251, %r2265, %r2196;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2279, %r2258, %r2272, %r2196;
	// end inline asm
	shl.b32 	%r2286, %r2279, 4;
	// begin inline asm
	lop3.b32 %r2283, %r2202, %r2275, %r2286, 202;
	// end inline asm
	xor.b32  	%r7722, %r2283, -2004318072;
	// begin inline asm
	mov.b32 %r2290, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2288, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2289, %r2290, %r2288;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2292, %r2137, %r2289;
	// end inline asm
	// begin inline asm
	mov.b32 %r2295, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2296, %r2290, %r2295;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2299, %r2145, %r2296;
	// end inline asm
	// begin inline asm
	mov.b32 %r2302, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2303, %r2290, %r2302;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2306, %r2153, %r2303;
	// end inline asm
	// begin inline asm
	mov.b32 %r2309, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2310, %r2290, %r2309;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2313, %r2161, %r2310;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2316, %r2292, %r2306, %r2196;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2320, %r2299, %r2313, %r2196;
	// end inline asm
	shl.b32 	%r2327, %r2320, 4;
	// begin inline asm
	lop3.b32 %r2324, %r2202, %r2316, %r2327, 202;
	// end inline asm
	xor.b32  	%r7723, %r2324, -2004318072;
	add.s64 	%rd80, %rd86, %rd14;
	st.shared.u32 	[%rd80], %r7720;
	add.s64 	%rd81, %rd86, %rd13;
	st.shared.u32 	[%rd81], %r7721;
	add.s64 	%rd82, %rd86, %rd12;
	st.shared.u32 	[%rd82], %r7722;
	add.s64 	%rd83, %rd86, %rd11;
	st.shared.u32 	[%rd83], %r7723;
	ld.shared.u32 	%r7787, [%rd76];
	ld.shared.u32 	%r7788, [%rd77];
	ld.shared.u32 	%r7789, [%rd78];
	ld.shared.u32 	%r7790, [%rd79];
	// begin inline asm
	mov.b32 %r2333, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2344, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r2332, %r7787, -2004318072;
	// begin inline asm
	lop3.b32 %r2330, %r535, %r2332, %r2333, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2334, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2335, %r2333, %r2334;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2338, %r2330, %r2335;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2341, %r546, %r2332, %r2344, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2345, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2346, %r2344, %r2345;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2349, %r2341, %r2346;
	// end inline asm
	shr.u32 	%r2354, %r2332, 8;
	// begin inline asm
	lop3.b32 %r2352, %r535, %r2354, %r2333, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2356, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2357, %r2333, %r2356;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2360, %r2352, %r2357;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2363, %r546, %r2354, %r2344, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2367, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2368, %r2344, %r2367;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2371, %r2363, %r2368;
	// end inline asm
	// begin inline asm
	mov.b32 %r2379, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2390, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r2378, %r7788, -2004318072;
	// begin inline asm
	lop3.b32 %r2376, %r535, %r2378, %r2379, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2380, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2381, %r2379, %r2380;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2384, %r2376, %r2381;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2387, %r546, %r2378, %r2390, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2391, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2392, %r2390, %r2391;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2395, %r2387, %r2392;
	// end inline asm
	shr.u32 	%r2400, %r2378, 8;
	// begin inline asm
	lop3.b32 %r2398, %r535, %r2400, %r2379, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2402, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2403, %r2379, %r2402;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2406, %r2398, %r2403;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2409, %r546, %r2400, %r2390, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2413, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2414, %r2390, %r2413;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2417, %r2409, %r2414;
	// end inline asm
	// begin inline asm
	mov.b32 %r2425, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2436, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r2424, %r7789, -2004318072;
	// begin inline asm
	lop3.b32 %r2422, %r535, %r2424, %r2425, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2426, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2427, %r2425, %r2426;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2430, %r2422, %r2427;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2433, %r546, %r2424, %r2436, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2437, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2438, %r2436, %r2437;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2441, %r2433, %r2438;
	// end inline asm
	shr.u32 	%r2446, %r2424, 8;
	// begin inline asm
	lop3.b32 %r2444, %r535, %r2446, %r2425, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2448, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2449, %r2425, %r2448;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2452, %r2444, %r2449;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2455, %r546, %r2446, %r2436, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2459, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2460, %r2436, %r2459;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2463, %r2455, %r2460;
	// end inline asm
	// begin inline asm
	mov.b32 %r2471, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2482, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r2470, %r7790, -2004318072;
	// begin inline asm
	lop3.b32 %r2468, %r535, %r2470, %r2471, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2472, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2473, %r2471, %r2472;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2476, %r2468, %r2473;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2479, %r546, %r2470, %r2482, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2483, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2484, %r2482, %r2483;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2487, %r2479, %r2484;
	// end inline asm
	shr.u32 	%r2492, %r2470, 8;
	// begin inline asm
	lop3.b32 %r2490, %r535, %r2492, %r2471, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2494, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2495, %r2471, %r2494;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2498, %r2490, %r2495;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2501, %r546, %r2492, %r2482, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2505, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2506, %r2482, %r2505;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2509, %r2501, %r2506;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2512, %r248;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2514, %r2512, %r2338;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2517, %r248;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2519, %r2517, %r2349;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2522, %r248;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2524, %r2522, %r2360;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2527, %r248;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2529, %r2527, %r2371;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2532, %r248;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2534, %r2532, %r2384;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2537, %r248;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2539, %r2537, %r2395;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2542, %r248;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2544, %r2542, %r2406;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2547, %r248;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2549, %r2547, %r2417;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2552, %r248;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2554, %r2552, %r2430;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2557, %r248;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2559, %r2557, %r2441;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2562, %r248;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2564, %r2562, %r2452;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2567, %r248;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2569, %r2567, %r2463;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2572, %r248;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2574, %r2572, %r2476;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2577, %r248;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2579, %r2577, %r2487;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2582, %r248;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2584, %r2582, %r2498;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2587, %r248;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2589, %r2587, %r2509;
	// end inline asm
	// begin inline asm
	mov.b32 %r2597, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2608, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2594, %r535, %r1048, %r2597, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2598, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2599, %r2597, %r2598;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2602, %r2594, %r2599;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2605, %r546, %r1048, %r2608, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2609, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2610, %r2608, %r2609;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2613, %r2605, %r2610;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2616, %r535, %r1070, %r2597, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2620, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2621, %r2597, %r2620;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2624, %r2616, %r2621;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2627, %r546, %r1070, %r2608, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2631, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2632, %r2608, %r2631;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2635, %r2627, %r2632;
	// end inline asm
	// begin inline asm
	mov.b32 %r2643, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2654, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2640, %r535, %r1094, %r2643, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2644, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2645, %r2643, %r2644;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2648, %r2640, %r2645;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2651, %r546, %r1094, %r2654, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2655, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2656, %r2654, %r2655;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2659, %r2651, %r2656;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2662, %r535, %r1116, %r2643, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2666, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2667, %r2643, %r2666;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2670, %r2662, %r2667;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2673, %r546, %r1116, %r2654, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2677, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2678, %r2654, %r2677;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2681, %r2673, %r2678;
	// end inline asm
	// begin inline asm
	mov.b32 %r2689, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2700, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2686, %r535, %r1140, %r2689, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2690, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2691, %r2689, %r2690;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2694, %r2686, %r2691;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2697, %r546, %r1140, %r2700, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2701, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2702, %r2700, %r2701;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2705, %r2697, %r2702;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2708, %r535, %r1162, %r2689, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2712, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2713, %r2689, %r2712;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2716, %r2708, %r2713;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2719, %r546, %r1162, %r2700, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2723, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2724, %r2700, %r2723;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2727, %r2719, %r2724;
	// end inline asm
	// begin inline asm
	mov.b32 %r2735, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2746, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2732, %r535, %r1186, %r2735, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2736, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2737, %r2735, %r2736;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2740, %r2732, %r2737;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2743, %r546, %r1186, %r2746, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2747, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2748, %r2746, %r2747;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2751, %r2743, %r2748;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2754, %r535, %r1208, %r2735, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2758, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2759, %r2735, %r2758;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2762, %r2754, %r2759;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2765, %r546, %r1208, %r2746, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2769, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2770, %r2746, %r2769;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2773, %r2765, %r2770;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2776, %r194, %r2602, %r2514;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2780, %r194, %r2613, %r2519;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2784, %r194, %r2624, %r2524;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2788, %r194, %r2635, %r2529;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2792, %r194, %r2648, %r2534;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2796, %r194, %r2659, %r2539;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2800, %r194, %r2670, %r2544;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2804, %r194, %r2681, %r2549;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2808, %r194, %r2694, %r2554;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2812, %r194, %r2705, %r2559;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2816, %r194, %r2716, %r2564;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2820, %r194, %r2727, %r2569;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2824, %r194, %r2740, %r2574;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2828, %r194, %r2751, %r2579;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2832, %r194, %r2762, %r2584;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2836, %r194, %r2773, %r2589;
	// end inline asm
	// begin inline asm
	mov.b32 %r2845, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2856, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2842, %r535, %r1328, %r2845, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2846, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2847, %r2845, %r2846;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2850, %r2842, %r2847;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2853, %r546, %r1328, %r2856, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2857, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2858, %r2856, %r2857;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2861, %r2853, %r2858;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2864, %r535, %r1350, %r2845, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2868, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2869, %r2845, %r2868;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2872, %r2864, %r2869;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2875, %r546, %r1350, %r2856, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2879, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2880, %r2856, %r2879;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2883, %r2875, %r2880;
	// end inline asm
	// begin inline asm
	mov.b32 %r2891, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2902, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2888, %r535, %r1374, %r2891, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2892, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2893, %r2891, %r2892;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2896, %r2888, %r2893;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2899, %r546, %r1374, %r2902, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2903, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2904, %r2902, %r2903;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2907, %r2899, %r2904;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2910, %r535, %r1396, %r2891, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2914, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2915, %r2891, %r2914;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2918, %r2910, %r2915;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2921, %r546, %r1396, %r2902, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2925, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2926, %r2902, %r2925;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2929, %r2921, %r2926;
	// end inline asm
	// begin inline asm
	mov.b32 %r2937, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2948, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2934, %r535, %r1420, %r2937, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2938, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2939, %r2937, %r2938;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2942, %r2934, %r2939;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2945, %r546, %r1420, %r2948, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2949, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2950, %r2948, %r2949;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2953, %r2945, %r2950;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2956, %r535, %r1442, %r2937, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2960, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2961, %r2937, %r2960;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2964, %r2956, %r2961;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2967, %r546, %r1442, %r2948, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2971, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2972, %r2948, %r2971;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2975, %r2967, %r2972;
	// end inline asm
	// begin inline asm
	mov.b32 %r2983, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2994, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2980, %r535, %r1466, %r2983, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2984, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2985, %r2983, %r2984;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2988, %r2980, %r2985;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2991, %r546, %r1466, %r2994, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2995, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2996, %r2994, %r2995;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2999, %r2991, %r2996;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3002, %r535, %r1488, %r2983, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3006, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3007, %r2983, %r3006;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3010, %r3002, %r3007;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3013, %r546, %r1488, %r2994, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3017, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3018, %r2994, %r3017;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3021, %r3013, %r3018;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3024, %r212;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3026, %r3024, %r2850, %r2776;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3030, %r212;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3032, %r3030, %r2861, %r2780;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3036, %r212;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3038, %r3036, %r2872, %r2784;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3042, %r212;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3044, %r3042, %r2883, %r2788;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3048, %r212;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3050, %r3048, %r2896, %r2792;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3054, %r212;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3056, %r3054, %r2907, %r2796;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3060, %r212;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3062, %r3060, %r2918, %r2800;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3066, %r212;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3068, %r3066, %r2929, %r2804;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3072, %r212;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3074, %r3072, %r2942, %r2808;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3078, %r212;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3080, %r3078, %r2953, %r2812;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3084, %r212;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3086, %r3084, %r2964, %r2816;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3090, %r212;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3092, %r3090, %r2975, %r2820;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3096, %r212;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3098, %r3096, %r2988, %r2824;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3102, %r212;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3104, %r3102, %r2999, %r2828;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3108, %r212;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3110, %r3108, %r3010, %r2832;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3114, %r212;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3116, %r3114, %r3021, %r2836;
	// end inline asm
	// begin inline asm
	mov.b32 %r3125, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r3136, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3122, %r535, %r536, %r3125, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3126, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3127, %r3125, %r3126;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3130, %r3122, %r3127;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3133, %r546, %r536, %r3136, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3137, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3138, %r3136, %r3137;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3141, %r3133, %r3138;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3144, %r535, %r558, %r3125, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3148, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3149, %r3125, %r3148;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3152, %r3144, %r3149;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3155, %r546, %r558, %r3136, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3159, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3160, %r3136, %r3159;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3163, %r3155, %r3160;
	// end inline asm
	// begin inline asm
	mov.b32 %r3171, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r3182, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3168, %r535, %r582, %r3171, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3172, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3173, %r3171, %r3172;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3176, %r3168, %r3173;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3179, %r546, %r582, %r3182, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3183, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3184, %r3182, %r3183;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3187, %r3179, %r3184;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3190, %r535, %r604, %r3171, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3194, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3195, %r3171, %r3194;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3198, %r3190, %r3195;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3201, %r546, %r604, %r3182, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3205, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3206, %r3182, %r3205;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3209, %r3201, %r3206;
	// end inline asm
	// begin inline asm
	mov.b32 %r3217, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r3228, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3214, %r535, %r628, %r3217, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3218, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3219, %r3217, %r3218;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3222, %r3214, %r3219;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3225, %r546, %r628, %r3228, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3229, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3230, %r3228, %r3229;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3233, %r3225, %r3230;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3236, %r535, %r650, %r3217, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3240, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3241, %r3217, %r3240;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3244, %r3236, %r3241;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3247, %r546, %r650, %r3228, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3251, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3252, %r3228, %r3251;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3255, %r3247, %r3252;
	// end inline asm
	// begin inline asm
	mov.b32 %r3263, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r3274, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3260, %r535, %r674, %r3263, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3264, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3265, %r3263, %r3264;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3268, %r3260, %r3265;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3271, %r546, %r674, %r3274, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3275, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3276, %r3274, %r3275;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3279, %r3271, %r3276;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3282, %r535, %r696, %r3263, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3286, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3287, %r3263, %r3286;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3290, %r3282, %r3287;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3293, %r546, %r696, %r3274, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3297, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3298, %r3274, %r3297;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3301, %r3293, %r3298;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3375, %r230, %r3130, %r3026;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3372, %r230, %r3141, %r3032;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3384, %r230, %r3152, %r3038;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3381, %r230, %r3163, %r3044;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3393, %r230, %r3176, %r3050;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3390, %r230, %r3187, %r3056;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3402, %r230, %r3198, %r3062;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3399, %r230, %r3209, %r3068;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3411, %r230, %r3222, %r3074;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3408, %r230, %r3233, %r3080;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3420, %r230, %r3244, %r3086;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3417, %r230, %r3255, %r3092;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3429, %r230, %r3268, %r3098;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3426, %r230, %r3279, %r3104;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3438, %r230, %r3290, %r3110;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3435, %r230, %r3301, %r3116;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3368, %r279;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3370, %r3368, %r3372;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3373, %r276, %r3375, %r3370;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3377, %r279;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3379, %r3377, %r3381;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3382, %r276, %r3384, %r3379;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3386, %r279;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3388, %r3386, %r3390;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3391, %r276, %r3393, %r3388;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3395, %r279;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3397, %r3395, %r3399;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3400, %r276, %r3402, %r3397;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3404, %r279;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3406, %r3404, %r3408;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3409, %r276, %r3411, %r3406;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3413, %r279;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3415, %r3413, %r3417;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3418, %r276, %r3420, %r3415;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3422, %r279;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3424, %r3422, %r3426;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3427, %r276, %r3429, %r3424;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3431, %r279;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3433, %r3431, %r3435;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3436, %r276, %r3438, %r3433;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3440, %r279, %r3375;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3443, %r276, %r3372, %r3440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3447, %r279, %r3384;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3450, %r276, %r3381, %r3447;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3454, %r279, %r3393;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3457, %r276, %r3390, %r3454;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3461, %r279, %r3402;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3464, %r276, %r3399, %r3461;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3468, %r279, %r3411;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3471, %r276, %r3408, %r3468;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3475, %r279, %r3420;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3478, %r276, %r3417, %r3475;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3482, %r279, %r3429;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3485, %r276, %r3426, %r3482;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3489, %r279, %r3438;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3492, %r276, %r3435, %r3489;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3583, %r3580}, {%r318, %r324, %r321, %r327}, {%r3373, %r3443}, {%r7375, %r7375};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3592, %r3589}, {%r318, %r324, %r321, %r327}, {%r3382, %r3450}, {%r7375, %r7375};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3601, %r3598}, {%r318, %r324, %r321, %r327}, {%r3391, %r3457}, {%r7375, %r7375};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3610, %r3607}, {%r318, %r324, %r321, %r327}, {%r3400, %r3464}, {%r7375, %r7375};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3619, %r3616}, {%r318, %r324, %r321, %r327}, {%r3409, %r3471}, {%r7375, %r7375};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3628, %r3625}, {%r318, %r324, %r321, %r327}, {%r3418, %r3478}, {%r7375, %r7375};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3637, %r3634}, {%r318, %r324, %r321, %r327}, {%r3427, %r3485}, {%r7375, %r7375};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3646, %r3643}, {%r318, %r324, %r321, %r327}, {%r3436, %r3492}, {%r7375, %r7375};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3576, %r365;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3578, %r3576, %r3580;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3581, %r362, %r3583, %r3578;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3585, %r365;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3587, %r3585, %r3589;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3590, %r362, %r3592, %r3587;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3594, %r365;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3596, %r3594, %r3598;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3599, %r362, %r3601, %r3596;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3603, %r365;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3605, %r3603, %r3607;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3608, %r362, %r3610, %r3605;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3612, %r365;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3614, %r3612, %r3616;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3617, %r362, %r3619, %r3614;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3621, %r365;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3623, %r3621, %r3625;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3626, %r362, %r3628, %r3623;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3630, %r365;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3632, %r3630, %r3634;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3635, %r362, %r3637, %r3632;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3639, %r365;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3641, %r3639, %r3643;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3644, %r362, %r3646, %r3641;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3648, %r365, %r3583;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3651, %r362, %r3580, %r3648;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3655, %r365, %r3592;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3658, %r362, %r3589, %r3655;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3662, %r365, %r3601;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3665, %r362, %r3598, %r3662;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3669, %r365, %r3610;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3672, %r362, %r3607, %r3669;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3676, %r365, %r3619;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3679, %r362, %r3616, %r3676;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3683, %r365, %r3628;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3686, %r362, %r3625, %r3683;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3690, %r365, %r3637;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3693, %r362, %r3634, %r3690;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3697, %r365, %r3646;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3700, %r362, %r3643, %r3697;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3704, %r3705}, {%r88, %r90, %r89, %r91}, {%r3581, %r3651}, {%r7375, %r7375};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3714, %r3715}, {%r88, %r90, %r89, %r91}, {%r3590, %r3658}, {%r7375, %r7375};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3724, %r3725}, {%r88, %r90, %r89, %r91}, {%r3599, %r3665}, {%r7375, %r7375};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3734, %r3735}, {%r88, %r90, %r89, %r91}, {%r3608, %r3672}, {%r7375, %r7375};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3744, %r3745}, {%r88, %r90, %r89, %r91}, {%r3617, %r3679}, {%r7375, %r7375};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3754, %r3755}, {%r88, %r90, %r89, %r91}, {%r3626, %r3686}, {%r7375, %r7375};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3764, %r3765}, {%r88, %r90, %r89, %r91}, {%r3635, %r3693}, {%r7375, %r7375};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3774, %r3775}, {%r88, %r90, %r89, %r91}, {%r3644, %r3700}, {%r7375, %r7375};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3784, %r11, %r3704;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3787, %r11, %r3705;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3790, %r11, %r3714;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3793, %r11, %r3715;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3796, %r11, %r3724;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3799, %r11, %r3725;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3802, %r11, %r3734;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3805, %r11, %r3735;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3808, %r11, %r3744;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3811, %r11, %r3745;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3814, %r11, %r3754;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3817, %r11, %r3755;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3820, %r11, %r3764;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3823, %r11, %r3765;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3826, %r11, %r3774;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3829, %r11, %r3775;
	// end inline asm
	// begin inline asm
	mov.b32 %r3832, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3833, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3834, %r3784, %r3832;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3837, %r3834, %r3833;
	// end inline asm
	// begin inline asm
	mov.b32 %r3840, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3841, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3842, %r3787, %r3840;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3845, %r3842, %r3841;
	// end inline asm
	// begin inline asm
	mov.b32 %r3848, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3849, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3850, %r3790, %r3848;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3853, %r3850, %r3849;
	// end inline asm
	// begin inline asm
	mov.b32 %r3856, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3857, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3858, %r3793, %r3856;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3861, %r3858, %r3857;
	// end inline asm
	// begin inline asm
	mov.b32 %r3864, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3865, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3866, %r3796, %r3864;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3869, %r3866, %r3865;
	// end inline asm
	// begin inline asm
	mov.b32 %r3872, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3873, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3874, %r3799, %r3872;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3877, %r3874, %r3873;
	// end inline asm
	// begin inline asm
	mov.b32 %r3880, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3881, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3882, %r3802, %r3880;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3885, %r3882, %r3881;
	// end inline asm
	// begin inline asm
	mov.b32 %r3888, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3889, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3890, %r3805, %r3888;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3893, %r3890, %r3889;
	// end inline asm
	// begin inline asm
	mov.b32 %r3896, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3897, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3898, %r3808, %r3896;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3901, %r3898, %r3897;
	// end inline asm
	// begin inline asm
	mov.b32 %r3904, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3905, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3906, %r3811, %r3904;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3909, %r3906, %r3905;
	// end inline asm
	// begin inline asm
	mov.b32 %r3912, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3913, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3914, %r3814, %r3912;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3917, %r3914, %r3913;
	// end inline asm
	// begin inline asm
	mov.b32 %r3920, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3921, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3922, %r3817, %r3920;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3925, %r3922, %r3921;
	// end inline asm
	// begin inline asm
	mov.b32 %r3928, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3929, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3930, %r3820, %r3928;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3933, %r3930, %r3929;
	// end inline asm
	// begin inline asm
	mov.b32 %r3936, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3937, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3938, %r3823, %r3936;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3941, %r3938, %r3937;
	// end inline asm
	// begin inline asm
	mov.b32 %r3944, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3945, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3946, %r3826, %r3944;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3949, %r3946, %r3945;
	// end inline asm
	// begin inline asm
	mov.b32 %r3952, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3953, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3954, %r3829, %r3952;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3957, %r3954, %r3953;
	// end inline asm
	// begin inline asm
	mov.b32 %r3963, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r3961, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3962, %r3963, %r3961;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3965, %r3837, %r3962;
	// end inline asm
	// begin inline asm
	mov.b32 %r3968, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3969, %r3963, %r3968;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3972, %r3845, %r3969;
	// end inline asm
	// begin inline asm
	mov.b32 %r3975, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3976, %r3963, %r3975;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3979, %r3853, %r3976;
	// end inline asm
	// begin inline asm
	mov.b32 %r3982, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3983, %r3963, %r3982;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3986, %r3861, %r3983;
	// end inline asm
	// begin inline asm
	prmt.b32 %r3989, %r3965, %r3979, %r2196;
	// end inline asm
	// begin inline asm
	prmt.b32 %r3993, %r3972, %r3986, %r2196;
	// end inline asm
	shl.b32 	%r4000, %r3993, 4;
	// begin inline asm
	lop3.b32 %r3997, %r2202, %r3989, %r4000, 202;
	// end inline asm
	xor.b32  	%r7724, %r3997, -2004318072;
	// begin inline asm
	mov.b32 %r4004, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4002, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4003, %r4004, %r4002;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4006, %r3869, %r4003;
	// end inline asm
	// begin inline asm
	mov.b32 %r4009, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4010, %r4004, %r4009;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4013, %r3877, %r4010;
	// end inline asm
	// begin inline asm
	mov.b32 %r4016, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4017, %r4004, %r4016;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4020, %r3885, %r4017;
	// end inline asm
	// begin inline asm
	mov.b32 %r4023, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4024, %r4004, %r4023;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4027, %r3893, %r4024;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4030, %r4006, %r4020, %r2196;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4034, %r4013, %r4027, %r2196;
	// end inline asm
	shl.b32 	%r4041, %r4034, 4;
	// begin inline asm
	lop3.b32 %r4038, %r2202, %r4030, %r4041, 202;
	// end inline asm
	xor.b32  	%r7725, %r4038, -2004318072;
	// begin inline asm
	mov.b32 %r4045, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4043, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4044, %r4045, %r4043;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4047, %r3901, %r4044;
	// end inline asm
	// begin inline asm
	mov.b32 %r4050, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4051, %r4045, %r4050;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4054, %r3909, %r4051;
	// end inline asm
	// begin inline asm
	mov.b32 %r4057, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4058, %r4045, %r4057;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4061, %r3917, %r4058;
	// end inline asm
	// begin inline asm
	mov.b32 %r4064, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4065, %r4045, %r4064;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4068, %r3925, %r4065;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4071, %r4047, %r4061, %r2196;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4075, %r4054, %r4068, %r2196;
	// end inline asm
	shl.b32 	%r4082, %r4075, 4;
	// begin inline asm
	lop3.b32 %r4079, %r2202, %r4071, %r4082, 202;
	// end inline asm
	xor.b32  	%r7726, %r4079, -2004318072;
	// begin inline asm
	mov.b32 %r4086, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4084, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4085, %r4086, %r4084;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4088, %r3933, %r4085;
	// end inline asm
	// begin inline asm
	mov.b32 %r4091, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4092, %r4086, %r4091;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4095, %r3941, %r4092;
	// end inline asm
	// begin inline asm
	mov.b32 %r4098, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4099, %r4086, %r4098;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4102, %r3949, %r4099;
	// end inline asm
	// begin inline asm
	mov.b32 %r4105, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4106, %r4086, %r4105;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4109, %r3957, %r4106;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4112, %r4088, %r4102, %r2196;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4116, %r4095, %r4109, %r2196;
	// end inline asm
	shl.b32 	%r4123, %r4116, 4;
	// begin inline asm
	lop3.b32 %r4120, %r2202, %r4112, %r4123, 202;
	// end inline asm
	xor.b32  	%r7727, %r4120, -2004318072;
	st.shared.u32 	[%rd80], %r7724;
	st.shared.u32 	[%rd81], %r7725;
	st.shared.u32 	[%rd82], %r7726;
	st.shared.u32 	[%rd83], %r7727;
	ld.shared.u32 	%r7791, [%rd76];
	ld.shared.u32 	%r7792, [%rd77];
	ld.shared.u32 	%r7793, [%rd78];
	ld.shared.u32 	%r7794, [%rd79];
	// begin inline asm
	mov.b32 %r4129, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4140, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r4128, %r7791, -2004318072;
	// begin inline asm
	lop3.b32 %r4126, %r535, %r4128, %r4129, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4130, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4131, %r4129, %r4130;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4134, %r4126, %r4131;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4137, %r546, %r4128, %r4140, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4141, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4142, %r4140, %r4141;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4145, %r4137, %r4142;
	// end inline asm
	shr.u32 	%r4150, %r4128, 8;
	// begin inline asm
	lop3.b32 %r4148, %r535, %r4150, %r4129, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4152, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4153, %r4129, %r4152;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4156, %r4148, %r4153;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4159, %r546, %r4150, %r4140, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4163, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4164, %r4140, %r4163;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4167, %r4159, %r4164;
	// end inline asm
	// begin inline asm
	mov.b32 %r4175, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4186, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r4174, %r7792, -2004318072;
	// begin inline asm
	lop3.b32 %r4172, %r535, %r4174, %r4175, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4176, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4177, %r4175, %r4176;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4180, %r4172, %r4177;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4183, %r546, %r4174, %r4186, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4187, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4188, %r4186, %r4187;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4191, %r4183, %r4188;
	// end inline asm
	shr.u32 	%r4196, %r4174, 8;
	// begin inline asm
	lop3.b32 %r4194, %r535, %r4196, %r4175, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4198, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4199, %r4175, %r4198;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4202, %r4194, %r4199;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4205, %r546, %r4196, %r4186, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4209, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4210, %r4186, %r4209;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4213, %r4205, %r4210;
	// end inline asm
	// begin inline asm
	mov.b32 %r4221, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4232, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r4220, %r7793, -2004318072;
	// begin inline asm
	lop3.b32 %r4218, %r535, %r4220, %r4221, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4222, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4223, %r4221, %r4222;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4226, %r4218, %r4223;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4229, %r546, %r4220, %r4232, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4233, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4234, %r4232, %r4233;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4237, %r4229, %r4234;
	// end inline asm
	shr.u32 	%r4242, %r4220, 8;
	// begin inline asm
	lop3.b32 %r4240, %r535, %r4242, %r4221, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4244, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4245, %r4221, %r4244;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4248, %r4240, %r4245;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4251, %r546, %r4242, %r4232, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4255, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4256, %r4232, %r4255;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4259, %r4251, %r4256;
	// end inline asm
	// begin inline asm
	mov.b32 %r4267, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4278, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r4266, %r7794, -2004318072;
	// begin inline asm
	lop3.b32 %r4264, %r535, %r4266, %r4267, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4268, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4269, %r4267, %r4268;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4272, %r4264, %r4269;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4275, %r546, %r4266, %r4278, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4279, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4280, %r4278, %r4279;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4283, %r4275, %r4280;
	// end inline asm
	shr.u32 	%r4288, %r4266, 8;
	// begin inline asm
	lop3.b32 %r4286, %r535, %r4288, %r4267, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4290, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4291, %r4267, %r4290;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4294, %r4286, %r4291;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4297, %r546, %r4288, %r4278, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4301, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4302, %r4278, %r4301;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4305, %r4297, %r4302;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4308, %r248;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4310, %r4308, %r4134;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4313, %r248;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4315, %r4313, %r4145;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4318, %r248;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4320, %r4318, %r4156;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4323, %r248;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4325, %r4323, %r4167;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4328, %r248;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4330, %r4328, %r4180;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4333, %r248;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4335, %r4333, %r4191;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4338, %r248;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4340, %r4338, %r4202;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4343, %r248;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4345, %r4343, %r4213;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4348, %r248;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4350, %r4348, %r4226;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4353, %r248;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4355, %r4353, %r4237;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4358, %r248;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4360, %r4358, %r4248;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4363, %r248;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4365, %r4363, %r4259;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4368, %r248;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4370, %r4368, %r4272;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4373, %r248;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4375, %r4373, %r4283;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4378, %r248;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4380, %r4378, %r4294;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4383, %r248;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4385, %r4383, %r4305;
	// end inline asm
	// begin inline asm
	mov.b32 %r4393, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4404, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4390, %r535, %r1328, %r4393, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4394, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4395, %r4393, %r4394;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4398, %r4390, %r4395;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4401, %r546, %r1328, %r4404, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4405, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4406, %r4404, %r4405;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4409, %r4401, %r4406;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4412, %r535, %r1350, %r4393, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4416, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4417, %r4393, %r4416;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4420, %r4412, %r4417;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4423, %r546, %r1350, %r4404, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4427, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4428, %r4404, %r4427;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4431, %r4423, %r4428;
	// end inline asm
	// begin inline asm
	mov.b32 %r4439, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4450, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4436, %r535, %r1374, %r4439, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4440, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4441, %r4439, %r4440;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4444, %r4436, %r4441;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4447, %r546, %r1374, %r4450, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4451, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4452, %r4450, %r4451;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4455, %r4447, %r4452;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4458, %r535, %r1396, %r4439, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4462, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4463, %r4439, %r4462;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4466, %r4458, %r4463;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4469, %r546, %r1396, %r4450, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4473, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4474, %r4450, %r4473;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4477, %r4469, %r4474;
	// end inline asm
	// begin inline asm
	mov.b32 %r4485, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4496, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4482, %r535, %r1420, %r4485, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4486, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4487, %r4485, %r4486;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4490, %r4482, %r4487;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4493, %r546, %r1420, %r4496, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4497, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4498, %r4496, %r4497;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4501, %r4493, %r4498;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4504, %r535, %r1442, %r4485, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4508, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4509, %r4485, %r4508;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4512, %r4504, %r4509;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4515, %r546, %r1442, %r4496, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4519, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4520, %r4496, %r4519;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4523, %r4515, %r4520;
	// end inline asm
	// begin inline asm
	mov.b32 %r4531, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4542, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4528, %r535, %r1466, %r4531, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4532, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4533, %r4531, %r4532;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4536, %r4528, %r4533;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4539, %r546, %r1466, %r4542, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4543, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4544, %r4542, %r4543;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4547, %r4539, %r4544;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4550, %r535, %r1488, %r4531, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4554, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4555, %r4531, %r4554;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4558, %r4550, %r4555;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4561, %r546, %r1488, %r4542, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4565, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4566, %r4542, %r4565;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4569, %r4561, %r4566;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4572, %r194, %r4398, %r4310;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4576, %r194, %r4409, %r4315;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4580, %r194, %r4420, %r4320;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4584, %r194, %r4431, %r4325;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4588, %r194, %r4444, %r4330;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4592, %r194, %r4455, %r4335;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4596, %r194, %r4466, %r4340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4600, %r194, %r4477, %r4345;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4604, %r194, %r4490, %r4350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4608, %r194, %r4501, %r4355;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4612, %r194, %r4512, %r4360;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4616, %r194, %r4523, %r4365;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4620, %r194, %r4536, %r4370;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4624, %r194, %r4547, %r4375;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4628, %r194, %r4558, %r4380;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4632, %r194, %r4569, %r4385;
	// end inline asm
	// begin inline asm
	mov.b32 %r4641, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4652, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4638, %r535, %r536, %r4641, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4642, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4643, %r4641, %r4642;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4646, %r4638, %r4643;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4649, %r546, %r536, %r4652, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4653, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4654, %r4652, %r4653;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4657, %r4649, %r4654;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4660, %r535, %r558, %r4641, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4664, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4665, %r4641, %r4664;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4668, %r4660, %r4665;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4671, %r546, %r558, %r4652, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4675, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4676, %r4652, %r4675;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4679, %r4671, %r4676;
	// end inline asm
	// begin inline asm
	mov.b32 %r4687, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4698, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4684, %r535, %r582, %r4687, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4688, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4689, %r4687, %r4688;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4692, %r4684, %r4689;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4695, %r546, %r582, %r4698, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4699, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4700, %r4698, %r4699;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4703, %r4695, %r4700;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4706, %r535, %r604, %r4687, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4710, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4711, %r4687, %r4710;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4714, %r4706, %r4711;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4717, %r546, %r604, %r4698, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4721, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4722, %r4698, %r4721;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4725, %r4717, %r4722;
	// end inline asm
	// begin inline asm
	mov.b32 %r4733, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4744, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4730, %r535, %r628, %r4733, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4734, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4735, %r4733, %r4734;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4738, %r4730, %r4735;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4741, %r546, %r628, %r4744, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4745, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4746, %r4744, %r4745;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4749, %r4741, %r4746;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4752, %r535, %r650, %r4733, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4756, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4757, %r4733, %r4756;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4760, %r4752, %r4757;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4763, %r546, %r650, %r4744, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4767, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4768, %r4744, %r4767;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4771, %r4763, %r4768;
	// end inline asm
	// begin inline asm
	mov.b32 %r4779, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4790, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4776, %r535, %r674, %r4779, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4780, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4781, %r4779, %r4780;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4784, %r4776, %r4781;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4787, %r546, %r674, %r4790, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4791, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4792, %r4790, %r4791;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4795, %r4787, %r4792;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4798, %r535, %r696, %r4779, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4802, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4803, %r4779, %r4802;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4806, %r4798, %r4803;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4809, %r546, %r696, %r4790, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4813, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4814, %r4790, %r4813;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4817, %r4809, %r4814;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4820, %r212;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4822, %r4820, %r4646, %r4572;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4826, %r212;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4828, %r4826, %r4657, %r4576;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4832, %r212;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4834, %r4832, %r4668, %r4580;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4838, %r212;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4840, %r4838, %r4679, %r4584;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4844, %r212;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4846, %r4844, %r4692, %r4588;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4850, %r212;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4852, %r4850, %r4703, %r4592;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4856, %r212;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4858, %r4856, %r4714, %r4596;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4862, %r212;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4864, %r4862, %r4725, %r4600;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4868, %r212;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4870, %r4868, %r4738, %r4604;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4874, %r212;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4876, %r4874, %r4749, %r4608;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4880, %r212;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4882, %r4880, %r4760, %r4612;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4886, %r212;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4888, %r4886, %r4771, %r4616;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4892, %r212;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4894, %r4892, %r4784, %r4620;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4898, %r212;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4900, %r4898, %r4795, %r4624;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4904, %r212;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4906, %r4904, %r4806, %r4628;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4910, %r212;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4912, %r4910, %r4817, %r4632;
	// end inline asm
	// begin inline asm
	mov.b32 %r4921, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4932, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4918, %r535, %r2332, %r4921, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4922, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4923, %r4921, %r4922;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4926, %r4918, %r4923;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4929, %r546, %r2332, %r4932, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4933, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4934, %r4932, %r4933;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4937, %r4929, %r4934;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4940, %r535, %r2354, %r4921, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4944, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4945, %r4921, %r4944;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4948, %r4940, %r4945;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4951, %r546, %r2354, %r4932, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4955, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4956, %r4932, %r4955;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4959, %r4951, %r4956;
	// end inline asm
	// begin inline asm
	mov.b32 %r4967, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4978, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4964, %r535, %r2378, %r4967, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4968, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4969, %r4967, %r4968;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4972, %r4964, %r4969;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4975, %r546, %r2378, %r4978, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4979, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4980, %r4978, %r4979;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4983, %r4975, %r4980;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4986, %r535, %r2400, %r4967, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4990, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4991, %r4967, %r4990;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4994, %r4986, %r4991;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4997, %r546, %r2400, %r4978, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5001, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5002, %r4978, %r5001;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5005, %r4997, %r5002;
	// end inline asm
	// begin inline asm
	mov.b32 %r5013, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5024, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5010, %r535, %r2424, %r5013, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5014, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5015, %r5013, %r5014;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5018, %r5010, %r5015;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5021, %r546, %r2424, %r5024, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5025, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5026, %r5024, %r5025;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5029, %r5021, %r5026;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5032, %r535, %r2446, %r5013, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5036, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5037, %r5013, %r5036;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5040, %r5032, %r5037;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5043, %r546, %r2446, %r5024, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5047, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5048, %r5024, %r5047;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5051, %r5043, %r5048;
	// end inline asm
	// begin inline asm
	mov.b32 %r5059, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5070, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5056, %r535, %r2470, %r5059, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5060, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5061, %r5059, %r5060;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5064, %r5056, %r5061;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5067, %r546, %r2470, %r5070, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5071, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5072, %r5070, %r5071;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5075, %r5067, %r5072;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5078, %r535, %r2492, %r5059, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5082, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5083, %r5059, %r5082;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5086, %r5078, %r5083;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5089, %r546, %r2492, %r5070, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5093, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5094, %r5070, %r5093;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5097, %r5089, %r5094;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5171, %r230, %r4926, %r4822;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5168, %r230, %r4937, %r4828;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5180, %r230, %r4948, %r4834;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5177, %r230, %r4959, %r4840;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5189, %r230, %r4972, %r4846;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5186, %r230, %r4983, %r4852;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5198, %r230, %r4994, %r4858;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5195, %r230, %r5005, %r4864;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5207, %r230, %r5018, %r4870;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5204, %r230, %r5029, %r4876;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5216, %r230, %r5040, %r4882;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5213, %r230, %r5051, %r4888;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5225, %r230, %r5064, %r4894;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5222, %r230, %r5075, %r4900;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5234, %r230, %r5086, %r4906;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5231, %r230, %r5097, %r4912;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5164, %r279;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5166, %r5164, %r5168;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5169, %r276, %r5171, %r5166;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5173, %r279;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5175, %r5173, %r5177;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5178, %r276, %r5180, %r5175;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5182, %r279;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5184, %r5182, %r5186;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5187, %r276, %r5189, %r5184;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5191, %r279;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5193, %r5191, %r5195;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5196, %r276, %r5198, %r5193;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5200, %r279;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5202, %r5200, %r5204;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5205, %r276, %r5207, %r5202;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5209, %r279;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5211, %r5209, %r5213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5214, %r276, %r5216, %r5211;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5218, %r279;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5220, %r5218, %r5222;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5223, %r276, %r5225, %r5220;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5227, %r279;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5229, %r5227, %r5231;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5232, %r276, %r5234, %r5229;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5236, %r279, %r5171;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5239, %r276, %r5168, %r5236;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5243, %r279, %r5180;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5246, %r276, %r5177, %r5243;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5250, %r279, %r5189;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5253, %r276, %r5186, %r5250;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5257, %r279, %r5198;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5260, %r276, %r5195, %r5257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5264, %r279, %r5207;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5267, %r276, %r5204, %r5264;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5271, %r279, %r5216;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5274, %r276, %r5213, %r5271;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5278, %r279, %r5225;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5281, %r276, %r5222, %r5278;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5285, %r279, %r5234;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5288, %r276, %r5231, %r5285;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5379, %r5376}, {%r318, %r324, %r321, %r327}, {%r5169, %r5239}, {%r7375, %r7375};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5388, %r5385}, {%r318, %r324, %r321, %r327}, {%r5178, %r5246}, {%r7375, %r7375};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5397, %r5394}, {%r318, %r324, %r321, %r327}, {%r5187, %r5253}, {%r7375, %r7375};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5406, %r5403}, {%r318, %r324, %r321, %r327}, {%r5196, %r5260}, {%r7375, %r7375};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5415, %r5412}, {%r318, %r324, %r321, %r327}, {%r5205, %r5267}, {%r7375, %r7375};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5424, %r5421}, {%r318, %r324, %r321, %r327}, {%r5214, %r5274}, {%r7375, %r7375};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5433, %r5430}, {%r318, %r324, %r321, %r327}, {%r5223, %r5281}, {%r7375, %r7375};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5442, %r5439}, {%r318, %r324, %r321, %r327}, {%r5232, %r5288}, {%r7375, %r7375};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5372, %r365;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5374, %r5372, %r5376;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5377, %r362, %r5379, %r5374;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5381, %r365;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5383, %r5381, %r5385;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5386, %r362, %r5388, %r5383;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5390, %r365;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5392, %r5390, %r5394;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5395, %r362, %r5397, %r5392;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5399, %r365;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5401, %r5399, %r5403;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5404, %r362, %r5406, %r5401;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5408, %r365;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5410, %r5408, %r5412;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5413, %r362, %r5415, %r5410;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5417, %r365;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5419, %r5417, %r5421;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5422, %r362, %r5424, %r5419;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5426, %r365;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5428, %r5426, %r5430;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5431, %r362, %r5433, %r5428;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5435, %r365;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5437, %r5435, %r5439;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5440, %r362, %r5442, %r5437;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5444, %r365, %r5379;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5447, %r362, %r5376, %r5444;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5451, %r365, %r5388;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5454, %r362, %r5385, %r5451;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5458, %r365, %r5397;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5461, %r362, %r5394, %r5458;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5465, %r365, %r5406;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5468, %r362, %r5403, %r5465;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5472, %r365, %r5415;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5475, %r362, %r5412, %r5472;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5479, %r365, %r5424;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5482, %r362, %r5421, %r5479;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5486, %r365, %r5433;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5489, %r362, %r5430, %r5486;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5493, %r365, %r5442;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5496, %r362, %r5439, %r5493;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5500, %r5501}, {%r88, %r90, %r89, %r91}, {%r5377, %r5447}, {%r7375, %r7375};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5510, %r5511}, {%r88, %r90, %r89, %r91}, {%r5386, %r5454}, {%r7375, %r7375};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5520, %r5521}, {%r88, %r90, %r89, %r91}, {%r5395, %r5461}, {%r7375, %r7375};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5530, %r5531}, {%r88, %r90, %r89, %r91}, {%r5404, %r5468}, {%r7375, %r7375};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5540, %r5541}, {%r88, %r90, %r89, %r91}, {%r5413, %r5475}, {%r7375, %r7375};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5550, %r5551}, {%r88, %r90, %r89, %r91}, {%r5422, %r5482}, {%r7375, %r7375};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5560, %r5561}, {%r88, %r90, %r89, %r91}, {%r5431, %r5489}, {%r7375, %r7375};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5570, %r5571}, {%r88, %r90, %r89, %r91}, {%r5440, %r5496}, {%r7375, %r7375};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5580, %r11, %r5500;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5583, %r11, %r5501;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5586, %r11, %r5510;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5589, %r11, %r5511;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5592, %r11, %r5520;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5595, %r11, %r5521;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5598, %r11, %r5530;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5601, %r11, %r5531;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5604, %r11, %r5540;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5607, %r11, %r5541;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5610, %r11, %r5550;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5613, %r11, %r5551;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5616, %r11, %r5560;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5619, %r11, %r5561;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5622, %r11, %r5570;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5625, %r11, %r5571;
	// end inline asm
	// begin inline asm
	mov.b32 %r5628, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5629, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5630, %r5580, %r5628;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5633, %r5630, %r5629;
	// end inline asm
	// begin inline asm
	mov.b32 %r5636, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5637, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5638, %r5583, %r5636;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5641, %r5638, %r5637;
	// end inline asm
	// begin inline asm
	mov.b32 %r5644, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5645, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5646, %r5586, %r5644;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5649, %r5646, %r5645;
	// end inline asm
	// begin inline asm
	mov.b32 %r5652, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5653, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5654, %r5589, %r5652;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5657, %r5654, %r5653;
	// end inline asm
	// begin inline asm
	mov.b32 %r5660, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5661, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5662, %r5592, %r5660;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5665, %r5662, %r5661;
	// end inline asm
	// begin inline asm
	mov.b32 %r5668, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5669, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5670, %r5595, %r5668;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5673, %r5670, %r5669;
	// end inline asm
	// begin inline asm
	mov.b32 %r5676, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5677, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5678, %r5598, %r5676;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5681, %r5678, %r5677;
	// end inline asm
	// begin inline asm
	mov.b32 %r5684, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5685, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5686, %r5601, %r5684;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5689, %r5686, %r5685;
	// end inline asm
	// begin inline asm
	mov.b32 %r5692, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5693, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5694, %r5604, %r5692;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5697, %r5694, %r5693;
	// end inline asm
	// begin inline asm
	mov.b32 %r5700, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5701, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5702, %r5607, %r5700;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5705, %r5702, %r5701;
	// end inline asm
	// begin inline asm
	mov.b32 %r5708, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5709, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5710, %r5610, %r5708;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5713, %r5710, %r5709;
	// end inline asm
	// begin inline asm
	mov.b32 %r5716, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5717, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5718, %r5613, %r5716;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5721, %r5718, %r5717;
	// end inline asm
	// begin inline asm
	mov.b32 %r5724, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5725, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5726, %r5616, %r5724;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5729, %r5726, %r5725;
	// end inline asm
	// begin inline asm
	mov.b32 %r5732, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5733, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5734, %r5619, %r5732;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5737, %r5734, %r5733;
	// end inline asm
	// begin inline asm
	mov.b32 %r5740, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5741, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5742, %r5622, %r5740;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5745, %r5742, %r5741;
	// end inline asm
	// begin inline asm
	mov.b32 %r5748, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5749, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5750, %r5625, %r5748;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5753, %r5750, %r5749;
	// end inline asm
	// begin inline asm
	mov.b32 %r5759, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5757, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5758, %r5759, %r5757;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5761, %r5633, %r5758;
	// end inline asm
	// begin inline asm
	mov.b32 %r5764, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5765, %r5759, %r5764;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5768, %r5641, %r5765;
	// end inline asm
	// begin inline asm
	mov.b32 %r5771, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5772, %r5759, %r5771;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5775, %r5649, %r5772;
	// end inline asm
	// begin inline asm
	mov.b32 %r5778, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5779, %r5759, %r5778;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5782, %r5657, %r5779;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5785, %r5761, %r5775, %r2196;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5789, %r5768, %r5782, %r2196;
	// end inline asm
	shl.b32 	%r5796, %r5789, 4;
	// begin inline asm
	lop3.b32 %r5793, %r2202, %r5785, %r5796, 202;
	// end inline asm
	xor.b32  	%r7728, %r5793, -2004318072;
	// begin inline asm
	mov.b32 %r5800, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5798, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5799, %r5800, %r5798;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5802, %r5665, %r5799;
	// end inline asm
	// begin inline asm
	mov.b32 %r5805, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5806, %r5800, %r5805;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5809, %r5673, %r5806;
	// end inline asm
	// begin inline asm
	mov.b32 %r5812, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5813, %r5800, %r5812;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5816, %r5681, %r5813;
	// end inline asm
	// begin inline asm
	mov.b32 %r5819, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5820, %r5800, %r5819;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5823, %r5689, %r5820;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5826, %r5802, %r5816, %r2196;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5830, %r5809, %r5823, %r2196;
	// end inline asm
	shl.b32 	%r5837, %r5830, 4;
	// begin inline asm
	lop3.b32 %r5834, %r2202, %r5826, %r5837, 202;
	// end inline asm
	xor.b32  	%r7729, %r5834, -2004318072;
	// begin inline asm
	mov.b32 %r5841, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5839, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5840, %r5841, %r5839;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5843, %r5697, %r5840;
	// end inline asm
	// begin inline asm
	mov.b32 %r5846, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5847, %r5841, %r5846;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5850, %r5705, %r5847;
	// end inline asm
	// begin inline asm
	mov.b32 %r5853, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5854, %r5841, %r5853;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5857, %r5713, %r5854;
	// end inline asm
	// begin inline asm
	mov.b32 %r5860, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5861, %r5841, %r5860;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5864, %r5721, %r5861;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5867, %r5843, %r5857, %r2196;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5871, %r5850, %r5864, %r2196;
	// end inline asm
	shl.b32 	%r5878, %r5871, 4;
	// begin inline asm
	lop3.b32 %r5875, %r2202, %r5867, %r5878, 202;
	// end inline asm
	xor.b32  	%r7730, %r5875, -2004318072;
	// begin inline asm
	mov.b32 %r5882, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5880, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5881, %r5882, %r5880;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5884, %r5729, %r5881;
	// end inline asm
	// begin inline asm
	mov.b32 %r5887, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5888, %r5882, %r5887;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5891, %r5737, %r5888;
	// end inline asm
	// begin inline asm
	mov.b32 %r5894, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5895, %r5882, %r5894;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5898, %r5745, %r5895;
	// end inline asm
	// begin inline asm
	mov.b32 %r5901, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5902, %r5882, %r5901;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5905, %r5753, %r5902;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5908, %r5884, %r5898, %r2196;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5912, %r5891, %r5905, %r2196;
	// end inline asm
	shl.b32 	%r5919, %r5912, 4;
	// begin inline asm
	lop3.b32 %r5916, %r2202, %r5908, %r5919, 202;
	// end inline asm
	xor.b32  	%r7731, %r5916, -2004318072;
	st.shared.u32 	[%rd80], %r7728;
	st.shared.u32 	[%rd81], %r7729;
	st.shared.u32 	[%rd82], %r7730;
	st.shared.u32 	[%rd83], %r7731;
	ld.shared.u32 	%r7795, [%rd76];
	ld.shared.u32 	%r7796, [%rd77];
	ld.shared.u32 	%r7797, [%rd78];
	ld.shared.u32 	%r7798, [%rd79];
	// begin inline asm
	mov.b32 %r5925, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5936, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r5924, %r7795, -2004318072;
	// begin inline asm
	lop3.b32 %r5922, %r535, %r5924, %r5925, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5926, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5927, %r5925, %r5926;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5930, %r5922, %r5927;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5933, %r546, %r5924, %r5936, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5937, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5938, %r5936, %r5937;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5941, %r5933, %r5938;
	// end inline asm
	shr.u32 	%r5946, %r5924, 8;
	// begin inline asm
	lop3.b32 %r5944, %r535, %r5946, %r5925, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5948, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5949, %r5925, %r5948;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5952, %r5944, %r5949;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5955, %r546, %r5946, %r5936, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5959, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5960, %r5936, %r5959;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5963, %r5955, %r5960;
	// end inline asm
	// begin inline asm
	mov.b32 %r5971, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5982, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r5970, %r7796, -2004318072;
	// begin inline asm
	lop3.b32 %r5968, %r535, %r5970, %r5971, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5972, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5973, %r5971, %r5972;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5976, %r5968, %r5973;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5979, %r546, %r5970, %r5982, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5983, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5984, %r5982, %r5983;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5987, %r5979, %r5984;
	// end inline asm
	shr.u32 	%r5992, %r5970, 8;
	// begin inline asm
	lop3.b32 %r5990, %r535, %r5992, %r5971, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5994, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5995, %r5971, %r5994;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5998, %r5990, %r5995;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6001, %r546, %r5992, %r5982, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6005, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6006, %r5982, %r6005;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6009, %r6001, %r6006;
	// end inline asm
	// begin inline asm
	mov.b32 %r6017, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6028, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r6016, %r7797, -2004318072;
	// begin inline asm
	lop3.b32 %r6014, %r535, %r6016, %r6017, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6018, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6019, %r6017, %r6018;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6022, %r6014, %r6019;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6025, %r546, %r6016, %r6028, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6029, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6030, %r6028, %r6029;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6033, %r6025, %r6030;
	// end inline asm
	shr.u32 	%r6038, %r6016, 8;
	// begin inline asm
	lop3.b32 %r6036, %r535, %r6038, %r6017, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6040, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6041, %r6017, %r6040;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6044, %r6036, %r6041;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6047, %r546, %r6038, %r6028, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6051, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6052, %r6028, %r6051;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6055, %r6047, %r6052;
	// end inline asm
	// begin inline asm
	mov.b32 %r6063, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6074, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r6062, %r7798, -2004318072;
	// begin inline asm
	lop3.b32 %r6060, %r535, %r6062, %r6063, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6064, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6065, %r6063, %r6064;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6068, %r6060, %r6065;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6071, %r546, %r6062, %r6074, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6075, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6076, %r6074, %r6075;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6079, %r6071, %r6076;
	// end inline asm
	shr.u32 	%r6084, %r6062, 8;
	// begin inline asm
	lop3.b32 %r6082, %r535, %r6084, %r6063, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6086, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6087, %r6063, %r6086;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6090, %r6082, %r6087;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6093, %r546, %r6084, %r6074, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6097, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6098, %r6074, %r6097;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6101, %r6093, %r6098;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6104, %r248;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6106, %r6104, %r5930;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6109, %r248;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6111, %r6109, %r5941;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6114, %r248;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6116, %r6114, %r5952;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6119, %r248;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6121, %r6119, %r5963;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6124, %r248;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6126, %r6124, %r5976;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6129, %r248;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6131, %r6129, %r5987;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6134, %r248;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6136, %r6134, %r5998;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6139, %r248;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6141, %r6139, %r6009;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6144, %r248;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6146, %r6144, %r6022;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6149, %r248;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6151, %r6149, %r6033;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6154, %r248;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6156, %r6154, %r6044;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6159, %r248;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6161, %r6159, %r6055;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6164, %r248;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6166, %r6164, %r6068;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6169, %r248;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6171, %r6169, %r6079;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6174, %r248;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6176, %r6174, %r6090;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6179, %r248;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6181, %r6179, %r6101;
	// end inline asm
	// begin inline asm
	mov.b32 %r6189, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6200, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6186, %r535, %r536, %r6189, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6190, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6191, %r6189, %r6190;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6194, %r6186, %r6191;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6197, %r546, %r536, %r6200, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6201, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6202, %r6200, %r6201;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6205, %r6197, %r6202;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6208, %r535, %r558, %r6189, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6212, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6213, %r6189, %r6212;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6216, %r6208, %r6213;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6219, %r546, %r558, %r6200, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6223, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6224, %r6200, %r6223;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6227, %r6219, %r6224;
	// end inline asm
	// begin inline asm
	mov.b32 %r6235, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6246, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6232, %r535, %r582, %r6235, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6236, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6237, %r6235, %r6236;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6240, %r6232, %r6237;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6243, %r546, %r582, %r6246, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6247, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6248, %r6246, %r6247;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6251, %r6243, %r6248;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6254, %r535, %r604, %r6235, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6258, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6259, %r6235, %r6258;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6262, %r6254, %r6259;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6265, %r546, %r604, %r6246, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6269, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6270, %r6246, %r6269;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6273, %r6265, %r6270;
	// end inline asm
	// begin inline asm
	mov.b32 %r6281, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6292, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6278, %r535, %r628, %r6281, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6282, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6283, %r6281, %r6282;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6286, %r6278, %r6283;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6289, %r546, %r628, %r6292, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6293, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6294, %r6292, %r6293;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6297, %r6289, %r6294;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6300, %r535, %r650, %r6281, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6304, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6305, %r6281, %r6304;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6308, %r6300, %r6305;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6311, %r546, %r650, %r6292, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6315, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6316, %r6292, %r6315;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6319, %r6311, %r6316;
	// end inline asm
	// begin inline asm
	mov.b32 %r6327, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6338, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6324, %r535, %r674, %r6327, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6328, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6329, %r6327, %r6328;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6332, %r6324, %r6329;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6335, %r546, %r674, %r6338, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6339, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6340, %r6338, %r6339;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6343, %r6335, %r6340;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6346, %r535, %r696, %r6327, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6350, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6351, %r6327, %r6350;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6354, %r6346, %r6351;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6357, %r546, %r696, %r6338, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6361, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6362, %r6338, %r6361;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6365, %r6357, %r6362;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6368, %r194, %r6194, %r6106;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6372, %r194, %r6205, %r6111;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6376, %r194, %r6216, %r6116;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6380, %r194, %r6227, %r6121;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6384, %r194, %r6240, %r6126;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6388, %r194, %r6251, %r6131;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6392, %r194, %r6262, %r6136;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6396, %r194, %r6273, %r6141;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6400, %r194, %r6286, %r6146;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6404, %r194, %r6297, %r6151;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6408, %r194, %r6308, %r6156;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6412, %r194, %r6319, %r6161;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6416, %r194, %r6332, %r6166;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6420, %r194, %r6343, %r6171;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6424, %r194, %r6354, %r6176;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6428, %r194, %r6365, %r6181;
	// end inline asm
	// begin inline asm
	mov.b32 %r6437, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6448, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6434, %r535, %r2332, %r6437, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6438, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6439, %r6437, %r6438;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6442, %r6434, %r6439;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6445, %r546, %r2332, %r6448, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6449, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6450, %r6448, %r6449;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6453, %r6445, %r6450;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6456, %r535, %r2354, %r6437, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6460, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6461, %r6437, %r6460;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6464, %r6456, %r6461;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6467, %r546, %r2354, %r6448, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6471, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6472, %r6448, %r6471;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6475, %r6467, %r6472;
	// end inline asm
	// begin inline asm
	mov.b32 %r6483, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6494, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6480, %r535, %r2378, %r6483, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6484, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6485, %r6483, %r6484;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6488, %r6480, %r6485;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6491, %r546, %r2378, %r6494, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6495, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6496, %r6494, %r6495;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6499, %r6491, %r6496;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6502, %r535, %r2400, %r6483, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6506, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6507, %r6483, %r6506;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6510, %r6502, %r6507;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6513, %r546, %r2400, %r6494, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6517, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6518, %r6494, %r6517;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6521, %r6513, %r6518;
	// end inline asm
	// begin inline asm
	mov.b32 %r6529, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6540, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6526, %r535, %r2424, %r6529, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6530, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6531, %r6529, %r6530;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6534, %r6526, %r6531;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6537, %r546, %r2424, %r6540, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6541, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6542, %r6540, %r6541;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6545, %r6537, %r6542;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6548, %r535, %r2446, %r6529, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6552, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6553, %r6529, %r6552;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6556, %r6548, %r6553;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6559, %r546, %r2446, %r6540, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6563, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6564, %r6540, %r6563;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6567, %r6559, %r6564;
	// end inline asm
	// begin inline asm
	mov.b32 %r6575, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6586, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6572, %r535, %r2470, %r6575, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6576, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6577, %r6575, %r6576;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6580, %r6572, %r6577;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6583, %r546, %r2470, %r6586, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6587, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6588, %r6586, %r6587;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6591, %r6583, %r6588;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6594, %r535, %r2492, %r6575, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6598, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6599, %r6575, %r6598;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6602, %r6594, %r6599;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6605, %r546, %r2492, %r6586, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6609, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6610, %r6586, %r6609;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6613, %r6605, %r6610;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6616, %r212;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6618, %r6616, %r6442, %r6368;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6622, %r212;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6624, %r6622, %r6453, %r6372;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6628, %r212;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6630, %r6628, %r6464, %r6376;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6634, %r212;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6636, %r6634, %r6475, %r6380;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6640, %r212;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6642, %r6640, %r6488, %r6384;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6646, %r212;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6648, %r6646, %r6499, %r6388;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6652, %r212;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6654, %r6652, %r6510, %r6392;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6658, %r212;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6660, %r6658, %r6521, %r6396;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6664, %r212;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6666, %r6664, %r6534, %r6400;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6670, %r212;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6672, %r6670, %r6545, %r6404;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6676, %r212;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6678, %r6676, %r6556, %r6408;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6682, %r212;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6684, %r6682, %r6567, %r6412;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6688, %r212;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6690, %r6688, %r6580, %r6416;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6694, %r212;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6696, %r6694, %r6591, %r6420;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6700, %r212;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6702, %r6700, %r6602, %r6424;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6706, %r212;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6708, %r6706, %r6613, %r6428;
	// end inline asm
	// begin inline asm
	mov.b32 %r6717, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6728, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6714, %r535, %r4128, %r6717, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6718, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6719, %r6717, %r6718;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6722, %r6714, %r6719;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6725, %r546, %r4128, %r6728, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6729, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6730, %r6728, %r6729;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6733, %r6725, %r6730;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6736, %r535, %r4150, %r6717, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6740, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6741, %r6717, %r6740;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6744, %r6736, %r6741;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6747, %r546, %r4150, %r6728, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6751, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6752, %r6728, %r6751;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6755, %r6747, %r6752;
	// end inline asm
	// begin inline asm
	mov.b32 %r6763, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6774, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6760, %r535, %r4174, %r6763, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6764, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6765, %r6763, %r6764;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6768, %r6760, %r6765;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6771, %r546, %r4174, %r6774, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6775, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6776, %r6774, %r6775;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6779, %r6771, %r6776;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6782, %r535, %r4196, %r6763, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6786, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6787, %r6763, %r6786;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6790, %r6782, %r6787;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6793, %r546, %r4196, %r6774, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6797, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6798, %r6774, %r6797;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6801, %r6793, %r6798;
	// end inline asm
	// begin inline asm
	mov.b32 %r6809, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6820, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6806, %r535, %r4220, %r6809, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6810, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6811, %r6809, %r6810;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6814, %r6806, %r6811;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6817, %r546, %r4220, %r6820, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6821, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6822, %r6820, %r6821;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6825, %r6817, %r6822;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6828, %r535, %r4242, %r6809, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6832, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6833, %r6809, %r6832;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6836, %r6828, %r6833;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6839, %r546, %r4242, %r6820, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6843, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6844, %r6820, %r6843;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6847, %r6839, %r6844;
	// end inline asm
	// begin inline asm
	mov.b32 %r6855, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6866, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6852, %r535, %r4266, %r6855, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6856, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6857, %r6855, %r6856;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6860, %r6852, %r6857;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6863, %r546, %r4266, %r6866, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6867, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6868, %r6866, %r6867;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6871, %r6863, %r6868;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6874, %r535, %r4288, %r6855, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6878, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6879, %r6855, %r6878;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6882, %r6874, %r6879;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6885, %r546, %r4288, %r6866, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6889, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6890, %r6866, %r6889;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6893, %r6885, %r6890;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6967, %r230, %r6722, %r6618;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6964, %r230, %r6733, %r6624;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6976, %r230, %r6744, %r6630;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6973, %r230, %r6755, %r6636;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6985, %r230, %r6768, %r6642;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6982, %r230, %r6779, %r6648;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6994, %r230, %r6790, %r6654;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6991, %r230, %r6801, %r6660;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7003, %r230, %r6814, %r6666;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7000, %r230, %r6825, %r6672;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7012, %r230, %r6836, %r6678;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7009, %r230, %r6847, %r6684;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7021, %r230, %r6860, %r6690;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7018, %r230, %r6871, %r6696;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7030, %r230, %r6882, %r6702;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7027, %r230, %r6893, %r6708;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6960, %r279;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6962, %r6960, %r6964;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6965, %r276, %r6967, %r6962;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6969, %r279;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6971, %r6969, %r6973;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6974, %r276, %r6976, %r6971;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6978, %r279;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6980, %r6978, %r6982;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6983, %r276, %r6985, %r6980;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6987, %r279;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6989, %r6987, %r6991;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6992, %r276, %r6994, %r6989;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6996, %r279;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6998, %r6996, %r7000;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7001, %r276, %r7003, %r6998;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7005, %r279;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7007, %r7005, %r7009;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7010, %r276, %r7012, %r7007;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7014, %r279;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7016, %r7014, %r7018;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7019, %r276, %r7021, %r7016;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7023, %r279;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7025, %r7023, %r7027;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7028, %r276, %r7030, %r7025;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7032, %r279, %r6967;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7035, %r276, %r6964, %r7032;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7039, %r279, %r6976;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7042, %r276, %r6973, %r7039;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7046, %r279, %r6985;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7049, %r276, %r6982, %r7046;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7053, %r279, %r6994;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7056, %r276, %r6991, %r7053;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7060, %r279, %r7003;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7063, %r276, %r7000, %r7060;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7067, %r279, %r7012;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7070, %r276, %r7009, %r7067;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7074, %r279, %r7021;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7077, %r276, %r7018, %r7074;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7081, %r279, %r7030;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7084, %r276, %r7027, %r7081;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7175, %r7172}, {%r318, %r324, %r321, %r327}, {%r6965, %r7035}, {%r7375, %r7375};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7184, %r7181}, {%r318, %r324, %r321, %r327}, {%r6974, %r7042}, {%r7375, %r7375};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7193, %r7190}, {%r318, %r324, %r321, %r327}, {%r6983, %r7049}, {%r7375, %r7375};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7202, %r7199}, {%r318, %r324, %r321, %r327}, {%r6992, %r7056}, {%r7375, %r7375};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7211, %r7208}, {%r318, %r324, %r321, %r327}, {%r7001, %r7063}, {%r7375, %r7375};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7220, %r7217}, {%r318, %r324, %r321, %r327}, {%r7010, %r7070}, {%r7375, %r7375};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7229, %r7226}, {%r318, %r324, %r321, %r327}, {%r7019, %r7077}, {%r7375, %r7375};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7238, %r7235}, {%r318, %r324, %r321, %r327}, {%r7028, %r7084}, {%r7375, %r7375};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7168, %r365;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7170, %r7168, %r7172;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7173, %r362, %r7175, %r7170;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7177, %r365;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7179, %r7177, %r7181;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7182, %r362, %r7184, %r7179;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7186, %r365;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7188, %r7186, %r7190;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7191, %r362, %r7193, %r7188;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7195, %r365;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7197, %r7195, %r7199;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7200, %r362, %r7202, %r7197;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7204, %r365;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7206, %r7204, %r7208;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7209, %r362, %r7211, %r7206;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7213, %r365;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7215, %r7213, %r7217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7218, %r362, %r7220, %r7215;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7222, %r365;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7224, %r7222, %r7226;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7227, %r362, %r7229, %r7224;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7231, %r365;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7233, %r7231, %r7235;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7236, %r362, %r7238, %r7233;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7240, %r365, %r7175;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7243, %r362, %r7172, %r7240;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7247, %r365, %r7184;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7250, %r362, %r7181, %r7247;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7254, %r365, %r7193;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7257, %r362, %r7190, %r7254;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7261, %r365, %r7202;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7264, %r362, %r7199, %r7261;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7268, %r365, %r7211;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7271, %r362, %r7208, %r7268;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7275, %r365, %r7220;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7278, %r362, %r7217, %r7275;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7282, %r365, %r7229;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7285, %r362, %r7226, %r7282;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7289, %r365, %r7238;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7292, %r362, %r7235, %r7289;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7296, %r7297}, {%r88, %r90, %r89, %r91}, {%r7173, %r7243}, {%r7375, %r7375};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7306, %r7307}, {%r88, %r90, %r89, %r91}, {%r7182, %r7250}, {%r7375, %r7375};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7316, %r7317}, {%r88, %r90, %r89, %r91}, {%r7191, %r7257}, {%r7375, %r7375};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7326, %r7327}, {%r88, %r90, %r89, %r91}, {%r7200, %r7264}, {%r7375, %r7375};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7336, %r7337}, {%r88, %r90, %r89, %r91}, {%r7209, %r7271}, {%r7375, %r7375};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7346, %r7347}, {%r88, %r90, %r89, %r91}, {%r7218, %r7278}, {%r7375, %r7375};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7356, %r7357}, {%r88, %r90, %r89, %r91}, {%r7227, %r7285}, {%r7375, %r7375};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7366, %r7367}, {%r88, %r90, %r89, %r91}, {%r7236, %r7292}, {%r7375, %r7375};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7376, %r11, %r7296;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7379, %r11, %r7297;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7382, %r11, %r7306;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7385, %r11, %r7307;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7388, %r11, %r7316;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7391, %r11, %r7317;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7394, %r11, %r7326;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7397, %r11, %r7327;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7400, %r11, %r7336;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7403, %r11, %r7337;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7406, %r11, %r7346;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7409, %r11, %r7347;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7412, %r11, %r7356;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7415, %r11, %r7357;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7418, %r11, %r7366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7421, %r11, %r7367;
	// end inline asm
	// begin inline asm
	mov.b32 %r7424, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7425, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7426, %r7376, %r7424;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7429, %r7426, %r7425;
	// end inline asm
	// begin inline asm
	mov.b32 %r7432, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7433, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7434, %r7379, %r7432;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7437, %r7434, %r7433;
	// end inline asm
	// begin inline asm
	mov.b32 %r7440, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7441, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7442, %r7382, %r7440;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7445, %r7442, %r7441;
	// end inline asm
	// begin inline asm
	mov.b32 %r7448, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7449, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7450, %r7385, %r7448;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7453, %r7450, %r7449;
	// end inline asm
	// begin inline asm
	mov.b32 %r7456, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7457, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7458, %r7388, %r7456;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7461, %r7458, %r7457;
	// end inline asm
	// begin inline asm
	mov.b32 %r7464, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7465, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7466, %r7391, %r7464;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7469, %r7466, %r7465;
	// end inline asm
	// begin inline asm
	mov.b32 %r7472, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7473, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7474, %r7394, %r7472;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7477, %r7474, %r7473;
	// end inline asm
	// begin inline asm
	mov.b32 %r7480, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7481, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7482, %r7397, %r7480;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7485, %r7482, %r7481;
	// end inline asm
	// begin inline asm
	mov.b32 %r7488, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7489, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7490, %r7400, %r7488;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7493, %r7490, %r7489;
	// end inline asm
	// begin inline asm
	mov.b32 %r7496, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7497, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7498, %r7403, %r7496;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7501, %r7498, %r7497;
	// end inline asm
	// begin inline asm
	mov.b32 %r7504, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7505, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7506, %r7406, %r7504;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7509, %r7506, %r7505;
	// end inline asm
	// begin inline asm
	mov.b32 %r7512, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7513, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7514, %r7409, %r7512;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7517, %r7514, %r7513;
	// end inline asm
	// begin inline asm
	mov.b32 %r7520, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7521, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7522, %r7412, %r7520;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7525, %r7522, %r7521;
	// end inline asm
	// begin inline asm
	mov.b32 %r7528, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7529, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7530, %r7415, %r7528;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7533, %r7530, %r7529;
	// end inline asm
	// begin inline asm
	mov.b32 %r7536, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7537, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7538, %r7418, %r7536;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7541, %r7538, %r7537;
	// end inline asm
	// begin inline asm
	mov.b32 %r7544, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7545, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7546, %r7421, %r7544;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7549, %r7546, %r7545;
	// end inline asm
	// begin inline asm
	mov.b32 %r7555, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r7553, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7554, %r7555, %r7553;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7557, %r7429, %r7554;
	// end inline asm
	// begin inline asm
	mov.b32 %r7560, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7561, %r7555, %r7560;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7564, %r7437, %r7561;
	// end inline asm
	// begin inline asm
	mov.b32 %r7567, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7568, %r7555, %r7567;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7571, %r7445, %r7568;
	// end inline asm
	// begin inline asm
	mov.b32 %r7574, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7575, %r7555, %r7574;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7578, %r7453, %r7575;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7581, %r7557, %r7571, %r2196;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7585, %r7564, %r7578, %r2196;
	// end inline asm
	shl.b32 	%r7592, %r7585, 4;
	// begin inline asm
	lop3.b32 %r7589, %r2202, %r7581, %r7592, 202;
	// end inline asm
	xor.b32  	%r7732, %r7589, -2004318072;
	// begin inline asm
	mov.b32 %r7596, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r7594, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7595, %r7596, %r7594;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7598, %r7461, %r7595;
	// end inline asm
	// begin inline asm
	mov.b32 %r7601, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7602, %r7596, %r7601;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7605, %r7469, %r7602;
	// end inline asm
	// begin inline asm
	mov.b32 %r7608, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7609, %r7596, %r7608;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7612, %r7477, %r7609;
	// end inline asm
	// begin inline asm
	mov.b32 %r7615, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7616, %r7596, %r7615;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7619, %r7485, %r7616;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7622, %r7598, %r7612, %r2196;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7626, %r7605, %r7619, %r2196;
	// end inline asm
	shl.b32 	%r7633, %r7626, 4;
	// begin inline asm
	lop3.b32 %r7630, %r2202, %r7622, %r7633, 202;
	// end inline asm
	xor.b32  	%r7733, %r7630, -2004318072;
	// begin inline asm
	mov.b32 %r7637, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r7635, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7636, %r7637, %r7635;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7639, %r7493, %r7636;
	// end inline asm
	// begin inline asm
	mov.b32 %r7642, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7643, %r7637, %r7642;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7646, %r7501, %r7643;
	// end inline asm
	// begin inline asm
	mov.b32 %r7649, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7650, %r7637, %r7649;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7653, %r7509, %r7650;
	// end inline asm
	// begin inline asm
	mov.b32 %r7656, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7657, %r7637, %r7656;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7660, %r7517, %r7657;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7663, %r7639, %r7653, %r2196;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7667, %r7646, %r7660, %r2196;
	// end inline asm
	shl.b32 	%r7674, %r7667, 4;
	// begin inline asm
	lop3.b32 %r7671, %r2202, %r7663, %r7674, 202;
	// end inline asm
	xor.b32  	%r7734, %r7671, -2004318072;
	// begin inline asm
	mov.b32 %r7678, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r7676, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7677, %r7678, %r7676;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7680, %r7525, %r7677;
	// end inline asm
	// begin inline asm
	mov.b32 %r7683, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7684, %r7678, %r7683;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7687, %r7533, %r7684;
	// end inline asm
	// begin inline asm
	mov.b32 %r7690, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7691, %r7678, %r7690;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7694, %r7541, %r7691;
	// end inline asm
	// begin inline asm
	mov.b32 %r7697, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7698, %r7678, %r7697;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7701, %r7549, %r7698;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7704, %r7680, %r7694, %r2196;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7708, %r7687, %r7701, %r2196;
	// end inline asm
	shl.b32 	%r7715, %r7708, 4;
	// begin inline asm
	lop3.b32 %r7712, %r2202, %r7704, %r7715, 202;
	// end inline asm
	xor.b32  	%r7735, %r7712, -2004318072;
	st.shared.u32 	[%rd80], %r7732;
	st.shared.u32 	[%rd81], %r7733;
	st.shared.u32 	[%rd82], %r7734;
	st.shared.u32 	[%rd83], %r7735;
	add.s32 	%r7786, %r7786, -64;
	add.s64 	%rd86, %rd86, 8324;
	setp.eq.s32 	%p215, %r7786, 0;
	@%p215 bra 	LBB0_114;
	bra.uni 	LBB0_113;
LBB0_114:                               // %guard_pass10509
                                        //   in Loop: Header=BB0_112 Depth=1
	bar.sync 	0;
	ld.shared.u32 	%r7741, [%rd9];
	ld.shared.u32 	%r7742, [%rd10+128];
	ld.shared.u32 	%r7749, [%rd10+4];
	ld.shared.u32 	%r7750, [%rd10+132];
	// begin inline asm
	prmt.b32 %r7736, %r7741, %r7742, %r515;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7740, %r7741, %r7742, %r519;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7744, %r7749, %r7750, %r515;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7748, %r7749, %r7750, %r519;
	// end inline asm
	selp.b32 	%r7752, %r7740, %r7736, %p214;
	shfl.sync.bfly.b32	%r158, %r7752, 8, 31, -1;
	selp.b32 	%r7753, %r7748, %r7744, %p214;
	shfl.sync.bfly.b32	%r159, %r7753, 8, 31, -1;
	setp.eq.s32 	%p217, %r108, 0;
	@%p217 bra 	LBB0_116;
// %bb.115:                             // %L29166
                                        //   in Loop: Header=BB0_112 Depth=1
	selp.b32 	%r7754, %r159, %r7748, %p214;
	selp.b32 	%r7755, %r7744, %r159, %p214;
	selp.b32 	%r7756, %r158, %r7740, %p214;
	selp.b32 	%r7757, %r7736, %r158, %p214;
	shl.b32 	%r7758, %r108, 12;
	add.s32 	%r7759, %r95, %r7758;
	mul.wide.s32 	%rd84, %r7759, 4;
	add.s64 	%rd85, %rd3, %rd84;
	st.global.v4.u32 	[%rd85], {%r7757, %r7755, %r7756, %r7754};
	bra.uni 	LBB0_116;
LBB0_117:                               // %L29384
	st.global.u32 	[%rd4], %r7375;
	ret;
LBB0_1:                                 // %L8
	mov.u64 	%rd30, exception1;
	cvta.global.u64 	%rd31, %rd30;
	{ // callseq 0, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd31;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 0
	{ // callseq 1, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd21;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 1
	// begin inline asm
	exit;
	// end inline asm
LBB0_3:                                 // %L163
	mov.u32 	%r165, 2;
	st.global.u32 	[%rd4], %r165;
	mov.u64 	%rd33, exception2325;
	cvta.global.u64 	%rd34, %rd33;
	{ // callseq 2, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd34;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 2
	{ // callseq 3, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd21;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 3
	// begin inline asm
	exit;
	// end inline asm
LBB0_119:                               // %L29482
	{ // callseq 5, 0
	.reg .b32 temp_param_reg;
	call.uni 
	julia_AssertionError_9656, 
	(
	);
	} // callseq 5
	mov.u64 	%rd41, exception1;
	cvta.global.u64 	%rd42, %rd41;
	{ // callseq 6, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd42;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 6
	{ // callseq 7, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd21;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 7
	// begin inline asm
	exit;
	// end inline asm
LBB0_118:                               // %L29479
	{ // callseq 9, 0
	.reg .b32 temp_param_reg;
	call.uni 
	julia_AssertionError_9656, 
	(
	);
	} // callseq 9
	mov.u64 	%rd47, exception1;
	cvta.global.u64 	%rd48, %rd47;
	{ // callseq 10, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd48;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 10
	{ // callseq 11, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd21;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 11
	// begin inline asm
	exit;
	// end inline asm
LBB0_144:                               // %L29476
	{ // callseq 15, 0
	.reg .b32 temp_param_reg;
	call.uni 
	julia_AssertionError_9656, 
	(
	);
	} // callseq 15
	mov.u64 	%rd61, exception1;
	cvta.global.u64 	%rd62, %rd61;
	{ // callseq 16, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd62;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 16
	{ // callseq 17, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[8];
	st.param.b64 	[param0+0], %rd21;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 17
	// begin inline asm
	exit;
	// end inline asm
                                        // -- End function
}
