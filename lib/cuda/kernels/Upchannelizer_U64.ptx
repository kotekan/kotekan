// PTX CompilerJob of MethodInstance for upchan(::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Float16x2, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int32, 1}) for sm_86, minthreads=512, blocks_per_sm=2

//
// Generated by LLVM NVPTX Back-End
//

.version 7.1
.target sm_86
.address_size 64

	// .globl	_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE // -- Begin function _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE
.func julia_AssertionError_9517
()
.noreturn
{
	trap;
}
.func gpu_report_exception
(
	.param .b64 gpu_report_exception_param_0
)
.noreturn
{
	trap;
}
.func gpu_signal_exception
(
	.param .align 8 .b8 gpu_signal_exception_param_0[16]
)
.noreturn
{
	trap;
}
.func  (.param .b64 func_retval0) julia_power_by_squaring_9528
(
	.param .align 8 .b8 julia_power_by_squaring_9528_param_0[16],
	.param .b64 julia_power_by_squaring_9528_param_1,
	.param .b64 julia_power_by_squaring_9528_param_2
)
.noreturn
{
	trap;
}
.extern .shared .align 32 .b8 shmem[];
.global .align 1 .b8 exception2324[6] = {101, 114, 114, 111, 114, 0};
.global .align 1 .b8 exception12345[10] = {101, 120, 99, 101, 112, 116, 105, 111, 110, 0};
                                        // @_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE
.visible .entry _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE(
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_0[16],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_1[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_2[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_3[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_4[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_5[32]
)
.reqntid 512, 1, 1
.minnctapersm 2
{
	.reg .pred 	%p<224>;
	.reg .b16 	%rs<1185>;
	.reg .b32 	%r<7809>;
	.reg .f32 	%f<930>;
	.reg .b64 	%rd<87>;

// %bb.0:                               // %conversion
	ld.param.u32 	%r161, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_0+8];
	ld.param.u64 	%rd21, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_0];
	// begin inline asm
	mov.u32 %r162, %dynamic_smem_size;
	// end inline asm
	setp.gt.u32 	%p1, %r162, 66815;
	@%p1 bra 	LBB0_2;
	bra.uni 	LBB0_1;
LBB0_2:                                 // %L10
	ld.param.u64 	%rd26, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_5];
	ld.param.u64 	%rd22, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_1];
	mov.u32 	%r1, %ctaid.x;
	shl.b32 	%r163, %r1, 9;
	mov.u32 	%r2, %tid.x;
	mov.u32 	%r3, %tid.y;
	shl.b32 	%r4, %r3, 5;
	or.b32  	%r164, %r163, %r2;
	or.b32  	%r165, %r164, %r4;
	mul.wide.u32 	%rd32, %r165, 4;
	add.s64 	%rd4, %rd26, %rd32;
	mov.u32 	%r166, 1;
	st.global.u32 	[%rd4], %r166;
	ld.global.u32 	%r5, [%rd22];
	setp.lt.u32 	%p2, %r5, 32769;
	and.b32  	%r167, %r5, 255;
	setp.eq.s32 	%p3, %r167, 0;
	and.pred  	%p4, %p2, %p3;
	@%p4 bra 	LBB0_4;
	bra.uni 	LBB0_3;
LBB0_4:                                 // %L242
	bfe.u32 	%r14, %r2, 1, 1;
	and.b32  	%r15, %r2, 1;
	bfe.u32 	%r17, %r2, 2, 1;
	shr.u32 	%r18, %r2, 4;
	shl.b32 	%r174, %r18, 1;
	shl.b32 	%r175, %r17, 2;
	shl.b32 	%r176, %r15, 3;
	shl.b32 	%r177, %r14, 4;
	or.b32  	%r178, %r176, %r177;
	or.b32  	%r179, %r175, %r178;
	or.b32  	%r180, %r174, %r179;
	bfe.u32 	%r20, %r2, 3, 1;
	or.b32  	%r21, %r20, %r180;
	or.b32  	%r22, %r21, 32;
	mov.f32 	%f185, 0f40000000;
	mov.f32 	%f186, 0f437F0000;
	div.approx.f32 	%f1, %f186, %f185;
	cvt.rn.f32.s32 	%f187, %r21;
	sub.f32 	%f188, %f187, %f1;
	mov.f32 	%f217, 0f42800000;
	div.approx.f32 	%f3, %f188, %f217;
	setp.eq.f32 	%p10, %f3, 0f00000000;
	mov.f32 	%f897, 0f3F800000;
	mov.f32 	%f890, %f897;
	@%p10 bra 	LBB0_6;
// %bb.5:                               // %L452
	sin.approx.f32 	%f218, %f3;
	div.approx.f32 	%f890, %f218, %f3;
LBB0_6:                                 // %L455
	cvt.rn.f32.s32 	%f221, %r22;
	sub.f32 	%f222, %f221, %f1;
	div.approx.f32 	%f8, %f222, %f217;
	setp.eq.f32 	%p16, %f8, 0f00000000;
	mov.f32 	%f891, %f897;
	@%p16 bra 	LBB0_8;
// %bb.7:                               // %L472
	sin.approx.f32 	%f252, %f8;
	div.approx.f32 	%f891, %f252, %f8;
LBB0_8:                                 // %L475
	or.b32  	%r198, %r21, 64;
	or.b32  	%r24, %r21, 96;
	cvt.rn.f32.s32 	%f256, %r198;
	sub.f32 	%f257, %f256, %f1;
	div.approx.f32 	%f12, %f257, %f217;
	setp.eq.f32 	%p22, %f12, 0f00000000;
	mov.f32 	%f892, %f897;
	@%p22 bra 	LBB0_10;
// %bb.9:                               // %L553
	sin.approx.f32 	%f287, %f12;
	div.approx.f32 	%f892, %f287, %f12;
LBB0_10:                                // %L556
	cvt.rn.f32.s32 	%f290, %r24;
	sub.f32 	%f291, %f290, %f1;
	div.approx.f32 	%f17, %f291, %f217;
	setp.eq.f32 	%p28, %f17, 0f00000000;
	mov.f32 	%f893, %f897;
	@%p28 bra 	LBB0_12;
// %bb.11:                              // %L573
	sin.approx.f32 	%f321, %f17;
	div.approx.f32 	%f893, %f321, %f17;
LBB0_12:                                // %L576
	shl.b32 	%r6, %r2, 2;
	or.b32  	%r216, %r21, 128;
	or.b32  	%r26, %r21, 160;
	cvt.rn.f32.s32 	%f325, %r216;
	sub.f32 	%f326, %f325, %f1;
	div.approx.f32 	%f21, %f326, %f217;
	setp.eq.f32 	%p34, %f21, 0f00000000;
	mov.f32 	%f894, %f897;
	@%p34 bra 	LBB0_14;
// %bb.13:                              // %L654
	sin.approx.f32 	%f356, %f21;
	div.approx.f32 	%f894, %f356, %f21;
LBB0_14:                                // %L657
	and.b32  	%r7, %r6, 4;
	and.b32  	%r11, %r2, 18;
	cvt.rn.f32.s32 	%f359, %r26;
	sub.f32 	%f360, %f359, %f1;
	div.approx.f32 	%f26, %f360, %f217;
	setp.eq.f32 	%p40, %f26, 0f00000000;
	mov.f32 	%f895, %f897;
	@%p40 bra 	LBB0_16;
// %bb.15:                              // %L674
	sin.approx.f32 	%f390, %f26;
	div.approx.f32 	%f895, %f390, %f26;
LBB0_16:                                // %L677
	and.b32  	%r8, %r6, 32;
	shl.b32 	%r169, %r2, 1;
	or.b32  	%r170, %r11, %r7;
	or.b32  	%r234, %r21, 192;
	or.b32  	%r28, %r21, 224;
	cvt.rn.f32.s32 	%f394, %r234;
	sub.f32 	%f395, %f394, %f1;
	div.approx.f32 	%f30, %f395, %f217;
	setp.eq.f32 	%p46, %f30, 0f00000000;
	mov.f32 	%f896, %f897;
	@%p46 bra 	LBB0_18;
// %bb.17:                              // %L755
	sin.approx.f32 	%f425, %f30;
	div.approx.f32 	%f896, %f425, %f30;
LBB0_18:                                // %L758
	and.b32  	%r9, %r169, 8;
	or.b32  	%r171, %r170, %r8;
	cvt.rn.f32.s32 	%f428, %r28;
	sub.f32 	%f429, %f428, %f1;
	div.approx.f32 	%f35, %f429, %f217;
	setp.eq.f32 	%p52, %f35, 0f00000000;
	@%p52 bra 	LBB0_20;
// %bb.19:                              // %L775
	sin.approx.f32 	%f459, %f35;
	div.approx.f32 	%f897, %f459, %f35;
LBB0_20:                                // %L778
	or.b32  	%r172, %r171, %r9;
	mul.lo.s32 	%r30, %r21, 63;
	cvt.rn.f32.s32 	%f462, %r30;
	div.approx.f32 	%f38, %f462, %f217;
	abs.f32 	%f900, %f38;
	setp.lt.f32 	%p53, %f900, 0f40000000;
	@%p53 bra 	LBB0_32;
// %bb.21:
	setp.gtu.f32 	%p54, %f900, 0f4B800000;
	@%p54 bra 	LBB0_28;
	bra.uni 	LBB0_22;
LBB0_28:
	mov.b32 	%r32, %f900;
	and.b32  	%r252, %r32, 8388607;
	or.b32  	%r7767, %r252, 1065353216;
	mov.b32 	%f899, %r7767;
	add.s32 	%r253, %r32, -1073741824;
	and.b32  	%r7768, %r253, -8388608;
	setp.eq.s32 	%p60, %r7768, 0;
	@%p60 bra 	LBB0_31;
// %bb.29:                              // %__nv_fmaf_rn.exit4.i.i.i.preheader
	mov.f32 	%f473, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f472,%f473;
	// end inline asm
LBB0_30:                                // %__nv_fmaf_rn.exit4.i.i.i
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r254, %r7768, 192937984;
	add.s32 	%r255, %r254, %r7767;
	mov.b32 	%f474, %r255;
	mul.f32 	%f475, %f472, %f474;
	sub.f32 	%f476, %f474, %f475;
	fma.rn.f32 	%f477, %f476, %f472, %f475;
	sub.f32 	%f478, %f474, %f477;
	fma.rz.f32 	%f479, %f478, %f472, %f477;
	cvt.rzi.f32.f32 	%f480, %f479;
	sub.f32 	%f899, %f474, %f480;
	sub.s32 	%r7768, %r7768, %r254;
	mov.b32 	%r7767, %f899;
	setp.ne.s32 	%p61, %r7768, 0;
	setp.ne.s32 	%p62, %r7767, 0;
	and.pred  	%p63, %p61, %p62;
	@%p63 bra 	LBB0_30;
LBB0_31:                                // %__internal_fmodf_slowpath_mod.exit.i.i
	setp.gt.u32 	%p64, %r32, 2139095039;
	selp.f32 	%f481, 0f7FFFFFFF, 0f4B800000, %p64;
	mul.f32 	%f482, %f899, 0f34000000;
	mul.f32 	%f900, %f481, %f482;
	bra.uni 	LBB0_32;
LBB0_22:                                // %__nv_fast_fdividef.exit.i.i.i
	div.approx.f32 	%f465, %f900, %f185;
	cvt.rzi.f32.f32 	%f898, %f465;
	fma.rn.f32 	%f41, %f898, 0fC0000000, %f900;
	mov.b32 	%r31, %f41;
	setp.lt.u32 	%p55, %r31, 1073741824;
	@%p55 bra 	LBB0_27;
// %bb.23:
	setp.lt.u32 	%p56, %r31, -2147483647;
	@%p56 bra 	LBB0_25;
// %bb.24:
	add.f32 	%f470, %f898, 0fBF800000;
	setp.lt.f32 	%p59, %f41, 0fC0000000;
	add.f32 	%f471, %f470, 0fBF800000;
	selp.f32 	%f898, %f471, %f470, %p59;
	bra.uni 	LBB0_27;
LBB0_25:
	add.f32 	%f898, %f898, 0f3F800000;
	setp.ltu.f32 	%p57, %f41, 0f40800000;
	@%p57 bra 	LBB0_27;
// %bb.26:                              // %__nv_fmaf_rn.exit.i.i.i
	add.f32 	%f466, %f898, 0f3F800000;
	fma.rn.f32 	%f468, %f185, 0fC0400000, %f41;
	setp.ge.f32 	%p58, %f468, 0f00000000;
	add.f32 	%f469, %f466, 0f3F800000;
	selp.f32 	%f898, %f469, %f466, %p58;
LBB0_27:                                // %__internal_fmodf_fastpath_quot.exit.i.i
	fma.rn.f32 	%f900, %f898, 0fC0000000, %f900;
LBB0_32:                                // %__internal_fmodf_kernel.exit.i
	shr.u32 	%r173, %r172, 1;
	abs.f32 	%f483, %f900;
	setp.gtu.f32 	%p65, %f483, 0f7F800000;
	@%p65 bra 	LBB0_34;
// %bb.33:
	mov.b32 	%r256, %f38;
	and.b32  	%r257, %r256, -2147483648;
	mov.b32 	%r258, %f900;
	or.b32  	%r259, %r257, %r258;
	mov.b32 	%f900, %r259;
LBB0_34:                                // %__nv_fmodf.exit
	ld.param.u64 	%rd1, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_2];
	mul.wide.u32 	%rd35, %r173, 4;
	add.s32 	%r268, %r30, 2016;
	cvt.rn.f32.s32 	%f515, %r268;
	div.approx.f32 	%f57, %f515, %f217;
	abs.f32 	%f904, %f57;
	setp.lt.f32 	%p73, %f904, 0f40000000;
	@%p73 bra 	LBB0_46;
// %bb.35:
	setp.gtu.f32 	%p74, %f904, 0f4B800000;
	@%p74 bra 	LBB0_42;
	bra.uni 	LBB0_36;
LBB0_42:
	mov.b32 	%r40, %f904;
	and.b32  	%r269, %r40, 8388607;
	or.b32  	%r7769, %r269, 1065353216;
	mov.b32 	%f903, %r7769;
	add.s32 	%r270, %r40, -1073741824;
	and.b32  	%r7770, %r270, -8388608;
	setp.eq.s32 	%p80, %r7770, 0;
	@%p80 bra 	LBB0_45;
// %bb.43:                              // %__nv_fmaf_rn.exit4.i.i.i1136.preheader
	mov.f32 	%f526, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f525,%f526;
	// end inline asm
LBB0_44:                                // %__nv_fmaf_rn.exit4.i.i.i1136
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r271, %r7770, 192937984;
	add.s32 	%r272, %r271, %r7769;
	mov.b32 	%f527, %r272;
	mul.f32 	%f528, %f525, %f527;
	sub.f32 	%f529, %f527, %f528;
	fma.rn.f32 	%f530, %f529, %f525, %f528;
	sub.f32 	%f531, %f527, %f530;
	fma.rz.f32 	%f532, %f531, %f525, %f530;
	cvt.rzi.f32.f32 	%f533, %f532;
	sub.f32 	%f903, %f527, %f533;
	sub.s32 	%r7770, %r7770, %r271;
	mov.b32 	%r7769, %f903;
	setp.ne.s32 	%p81, %r7770, 0;
	setp.ne.s32 	%p82, %r7769, 0;
	and.pred  	%p83, %p81, %p82;
	@%p83 bra 	LBB0_44;
LBB0_45:                                // %__internal_fmodf_slowpath_mod.exit.i.i1138
	setp.gt.u32 	%p84, %r40, 2139095039;
	selp.f32 	%f534, 0f7FFFFFFF, 0f4B800000, %p84;
	mul.f32 	%f535, %f903, 0f34000000;
	mul.f32 	%f904, %f534, %f535;
	bra.uni 	LBB0_46;
LBB0_36:                                // %__nv_fast_fdividef.exit.i.i.i1108
	div.approx.f32 	%f518, %f904, %f185;
	cvt.rzi.f32.f32 	%f902, %f518;
	fma.rn.f32 	%f60, %f902, 0fC0000000, %f904;
	mov.b32 	%r39, %f60;
	setp.lt.u32 	%p75, %r39, 1073741824;
	@%p75 bra 	LBB0_41;
// %bb.37:
	setp.lt.u32 	%p76, %r39, -2147483647;
	@%p76 bra 	LBB0_39;
// %bb.38:
	add.f32 	%f523, %f902, 0fBF800000;
	setp.lt.f32 	%p79, %f60, 0fC0000000;
	add.f32 	%f524, %f523, 0fBF800000;
	selp.f32 	%f902, %f524, %f523, %p79;
	bra.uni 	LBB0_41;
LBB0_39:
	add.f32 	%f902, %f902, 0f3F800000;
	setp.ltu.f32 	%p77, %f60, 0f40800000;
	@%p77 bra 	LBB0_41;
// %bb.40:                              // %__nv_fmaf_rn.exit.i.i.i1113
	add.f32 	%f519, %f902, 0f3F800000;
	fma.rn.f32 	%f521, %f185, 0fC0400000, %f60;
	setp.ge.f32 	%p78, %f521, 0f00000000;
	add.f32 	%f522, %f519, 0f3F800000;
	selp.f32 	%f902, %f522, %f519, %p78;
LBB0_41:                                // %__internal_fmodf_fastpath_quot.exit.i.i1117
	fma.rn.f32 	%f904, %f902, 0fC0000000, %f904;
LBB0_46:                                // %__internal_fmodf_kernel.exit.i1142
	add.s64 	%rd36, %rd1, %rd35;
	abs.f32 	%f536, %f904;
	setp.gtu.f32 	%p85, %f536, 0f7F800000;
	@%p85 bra 	LBB0_48;
// %bb.47:
	mov.b32 	%r273, %f57;
	and.b32  	%r274, %r273, -2147483648;
	mov.b32 	%r275, %f904;
	or.b32  	%r276, %r274, %r275;
	mov.b32 	%f904, %r276;
LBB0_48:                                // %__nv_fmodf.exit1143
	ld.global.u32 	%r12, [%rd36];
	mov.u64 	%rd37, 2;
	mov.u64 	%rd38, 6;
	{ // callseq 4, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd21;
	st.param.b32 	[param0+8], %r161;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd37;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd38;
	.param .b64 retval0;
	call.uni (retval0), 
	julia_power_by_squaring_9528, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64 	%rd39, [retval0+0];
	} // callseq 4
	setp.ne.s64 	%p93, %rd39, 64;
	@%p93 bra 	LBB0_119;
// %bb.49:                              // %L875
	shr.u32 	%r16, %r2, 2;
	and.b32  	%r291, %r2, 3;
	shl.b32 	%r292, %r291, 1;
	neg.s32 	%r49, %r292;
	mul.lo.s32 	%r50, %r49, %r16;
	cvt.rn.f32.s32 	%f74, %r50;
	mov.f32 	%f570, 0f41000000;
	div.approx.f32 	%f75, %f74, %f570;
	abs.f32 	%f908, %f75;
	setp.lt.f32 	%p94, %f908, 0f40000000;
	@%p94 bra 	LBB0_61;
// %bb.50:
	setp.gtu.f32 	%p95, %f908, 0f4B800000;
	@%p95 bra 	LBB0_57;
	bra.uni 	LBB0_51;
LBB0_57:
	mov.b32 	%r52, %f908;
	and.b32  	%r293, %r52, 8388607;
	or.b32  	%r7771, %r293, 1065353216;
	mov.b32 	%f907, %r7771;
	add.s32 	%r294, %r52, -1073741824;
	and.b32  	%r7772, %r294, -8388608;
	setp.eq.s32 	%p101, %r7772, 0;
	@%p101 bra 	LBB0_60;
// %bb.58:                              // %__nv_fmaf_rn.exit4.i.i.i1182.preheader
	mov.f32 	%f580, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f579,%f580;
	// end inline asm
LBB0_59:                                // %__nv_fmaf_rn.exit4.i.i.i1182
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r295, %r7772, 192937984;
	add.s32 	%r296, %r295, %r7771;
	mov.b32 	%f581, %r296;
	mul.f32 	%f582, %f579, %f581;
	sub.f32 	%f583, %f581, %f582;
	fma.rn.f32 	%f584, %f583, %f579, %f582;
	sub.f32 	%f585, %f581, %f584;
	fma.rz.f32 	%f586, %f585, %f579, %f584;
	cvt.rzi.f32.f32 	%f587, %f586;
	sub.f32 	%f907, %f581, %f587;
	sub.s32 	%r7772, %r7772, %r295;
	mov.b32 	%r7771, %f907;
	setp.ne.s32 	%p102, %r7772, 0;
	setp.ne.s32 	%p103, %r7771, 0;
	and.pred  	%p104, %p102, %p103;
	@%p104 bra 	LBB0_59;
LBB0_60:                                // %__internal_fmodf_slowpath_mod.exit.i.i1184
	setp.gt.u32 	%p105, %r52, 2139095039;
	selp.f32 	%f588, 0f7FFFFFFF, 0f4B800000, %p105;
	mul.f32 	%f589, %f907, 0f34000000;
	mul.f32 	%f908, %f588, %f589;
	bra.uni 	LBB0_61;
LBB0_51:                                // %__nv_fast_fdividef.exit.i.i.i1154
	div.approx.f32 	%f572, %f908, %f185;
	cvt.rzi.f32.f32 	%f906, %f572;
	fma.rn.f32 	%f78, %f906, 0fC0000000, %f908;
	mov.b32 	%r51, %f78;
	setp.lt.u32 	%p96, %r51, 1073741824;
	@%p96 bra 	LBB0_56;
// %bb.52:
	setp.lt.u32 	%p97, %r51, -2147483647;
	@%p97 bra 	LBB0_54;
// %bb.53:
	add.f32 	%f577, %f906, 0fBF800000;
	setp.lt.f32 	%p100, %f78, 0fC0000000;
	add.f32 	%f578, %f577, 0fBF800000;
	selp.f32 	%f906, %f578, %f577, %p100;
	bra.uni 	LBB0_56;
LBB0_54:
	add.f32 	%f906, %f906, 0f3F800000;
	setp.ltu.f32 	%p98, %f78, 0f40800000;
	@%p98 bra 	LBB0_56;
// %bb.55:                              // %__nv_fmaf_rn.exit.i.i.i1159
	add.f32 	%f573, %f906, 0f3F800000;
	fma.rn.f32 	%f575, %f185, 0fC0400000, %f78;
	setp.ge.f32 	%p99, %f575, 0f00000000;
	add.f32 	%f576, %f573, 0f3F800000;
	selp.f32 	%f906, %f576, %f573, %p99;
LBB0_56:                                // %__internal_fmodf_fastpath_quot.exit.i.i1163
	fma.rn.f32 	%f908, %f906, 0fC0000000, %f908;
LBB0_61:                                // %__internal_fmodf_kernel.exit.i1188
	abs.f32 	%f590, %f908;
	setp.gtu.f32 	%p106, %f590, 0f7F800000;
	@%p106 bra 	LBB0_63;
// %bb.62:
	mov.b32 	%r297, %f75;
	and.b32  	%r298, %r297, -2147483648;
	mov.b32 	%r299, %f908;
	or.b32  	%r300, %r298, %r299;
	mov.b32 	%f908, %r300;
LBB0_63:                                // %__nv_fmodf.exit1189
	shl.b32 	%r309, %r16, 3;
	sub.s32 	%r310, %r50, %r309;
	cvt.rn.f32.s32 	%f94, %r310;
	div.approx.f32 	%f95, %f94, %f570;
	abs.f32 	%f912, %f95;
	setp.lt.f32 	%p114, %f912, 0f40000000;
	@%p114 bra 	LBB0_75;
// %bb.64:
	setp.gtu.f32 	%p115, %f912, 0f4B800000;
	@%p115 bra 	LBB0_71;
	bra.uni 	LBB0_65;
LBB0_71:
	mov.b32 	%r60, %f912;
	and.b32  	%r311, %r60, 8388607;
	or.b32  	%r7773, %r311, 1065353216;
	mov.b32 	%f911, %r7773;
	add.s32 	%r312, %r60, -1073741824;
	and.b32  	%r7774, %r312, -8388608;
	setp.eq.s32 	%p121, %r7774, 0;
	@%p121 bra 	LBB0_74;
// %bb.72:                              // %__nv_fmaf_rn.exit4.i.i.i1228.preheader
	mov.f32 	%f632, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f631,%f632;
	// end inline asm
LBB0_73:                                // %__nv_fmaf_rn.exit4.i.i.i1228
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r313, %r7774, 192937984;
	add.s32 	%r314, %r313, %r7773;
	mov.b32 	%f633, %r314;
	mul.f32 	%f634, %f631, %f633;
	sub.f32 	%f635, %f633, %f634;
	fma.rn.f32 	%f636, %f635, %f631, %f634;
	sub.f32 	%f637, %f633, %f636;
	fma.rz.f32 	%f638, %f637, %f631, %f636;
	cvt.rzi.f32.f32 	%f639, %f638;
	sub.f32 	%f911, %f633, %f639;
	sub.s32 	%r7774, %r7774, %r313;
	mov.b32 	%r7773, %f911;
	setp.ne.s32 	%p122, %r7774, 0;
	setp.ne.s32 	%p123, %r7773, 0;
	and.pred  	%p124, %p122, %p123;
	@%p124 bra 	LBB0_73;
LBB0_74:                                // %__internal_fmodf_slowpath_mod.exit.i.i1230
	setp.gt.u32 	%p125, %r60, 2139095039;
	selp.f32 	%f640, 0f7FFFFFFF, 0f4B800000, %p125;
	mul.f32 	%f641, %f911, 0f34000000;
	mul.f32 	%f912, %f640, %f641;
	bra.uni 	LBB0_75;
LBB0_65:                                // %__nv_fast_fdividef.exit.i.i.i1200
	div.approx.f32 	%f624, %f912, %f185;
	cvt.rzi.f32.f32 	%f910, %f624;
	fma.rn.f32 	%f98, %f910, 0fC0000000, %f912;
	mov.b32 	%r59, %f98;
	setp.lt.u32 	%p116, %r59, 1073741824;
	@%p116 bra 	LBB0_70;
// %bb.66:
	setp.lt.u32 	%p117, %r59, -2147483647;
	@%p117 bra 	LBB0_68;
// %bb.67:
	add.f32 	%f629, %f910, 0fBF800000;
	setp.lt.f32 	%p120, %f98, 0fC0000000;
	add.f32 	%f630, %f629, 0fBF800000;
	selp.f32 	%f910, %f630, %f629, %p120;
	bra.uni 	LBB0_70;
LBB0_68:
	add.f32 	%f910, %f910, 0f3F800000;
	setp.ltu.f32 	%p118, %f98, 0f40800000;
	@%p118 bra 	LBB0_70;
// %bb.69:                              // %__nv_fmaf_rn.exit.i.i.i1205
	add.f32 	%f625, %f910, 0f3F800000;
	fma.rn.f32 	%f627, %f185, 0fC0400000, %f98;
	setp.ge.f32 	%p119, %f627, 0f00000000;
	add.f32 	%f628, %f625, 0f3F800000;
	selp.f32 	%f910, %f628, %f625, %p119;
LBB0_70:                                // %__internal_fmodf_fastpath_quot.exit.i.i1209
	fma.rn.f32 	%f912, %f910, 0fC0000000, %f912;
LBB0_75:                                // %__internal_fmodf_kernel.exit.i1234
	abs.f32 	%f642, %f912;
	setp.gtu.f32 	%p126, %f642, 0f7F800000;
	@%p126 bra 	LBB0_77;
// %bb.76:
	mov.b32 	%r315, %f95;
	and.b32  	%r316, %r315, -2147483648;
	mov.b32 	%r317, %f912;
	or.b32  	%r318, %r316, %r317;
	mov.b32 	%f912, %r318;
LBB0_77:                                // %__nv_fmodf.exit1235
	{ // callseq 8, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd21;
	st.param.b32 	[param0+8], %r161;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd37;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd38;
	.param .b64 retval0;
	call.uni (retval0), 
	julia_power_by_squaring_9528, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64 	%rd45, [retval0+0];
	} // callseq 8
	setp.ne.s64 	%p134, %rd45, 64;
	@%p134 bra 	LBB0_118;
// %bb.78:                              // %L1013
	{ // callseq 12, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd21;
	st.param.b32 	[param0+8], %r161;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd37;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd38;
	.param .b64 retval0;
	call.uni (retval0), 
	julia_power_by_squaring_9528, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64 	%rd51, [retval0+0];
	} // callseq 12
	cvt.rn.f32.s64 	%f676, %rd51;
	div.approx.f32 	%f112, %f74, %f676;
	abs.f32 	%f924, %f112;
	setp.lt.f32 	%p135, %f924, 0f40000000;
	@%p135 bra 	LBB0_127;
// %bb.79:
	setp.gtu.f32 	%p136, %f924, 0f4B800000;
	@%p136 bra 	LBB0_123;
	bra.uni 	LBB0_80;
LBB0_123:
	mov.b32 	%r138, %f924;
	and.b32  	%r339, %r138, 8388607;
	or.b32  	%r7805, %r339, 1065353216;
	mov.b32 	%f923, %r7805;
	add.s32 	%r340, %r138, -1073741824;
	and.b32  	%r7806, %r340, -8388608;
	setp.eq.s32 	%p142, %r7806, 0;
	@%p142 bra 	LBB0_126;
// %bb.124:                             // %__nv_fmaf_rn.exit4.i.i.i1366.preheader
	mov.f32 	%f686, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f685,%f686;
	// end inline asm
LBB0_125:                               // %__nv_fmaf_rn.exit4.i.i.i1366
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r341, %r7806, 192937984;
	add.s32 	%r342, %r341, %r7805;
	mov.b32 	%f687, %r342;
	mul.f32 	%f688, %f685, %f687;
	sub.f32 	%f689, %f687, %f688;
	fma.rn.f32 	%f690, %f689, %f685, %f688;
	sub.f32 	%f691, %f687, %f690;
	fma.rz.f32 	%f692, %f691, %f685, %f690;
	cvt.rzi.f32.f32 	%f693, %f692;
	sub.f32 	%f923, %f687, %f693;
	sub.s32 	%r7806, %r7806, %r341;
	mov.b32 	%r7805, %f923;
	setp.ne.s32 	%p143, %r7806, 0;
	setp.ne.s32 	%p144, %r7805, 0;
	and.pred  	%p145, %p143, %p144;
	@%p145 bra 	LBB0_125;
LBB0_126:                               // %__internal_fmodf_slowpath_mod.exit.i.i1368
	setp.gt.u32 	%p146, %r138, 2139095039;
	selp.f32 	%f694, 0f7FFFFFFF, 0f4B800000, %p146;
	mul.f32 	%f695, %f923, 0f34000000;
	mul.f32 	%f924, %f694, %f695;
	bra.uni 	LBB0_127;
LBB0_80:                                // %__nv_fast_fdividef.exit.i.i.i1338
	div.approx.f32 	%f678, %f924, %f185;
	cvt.rzi.f32.f32 	%f922, %f678;
	fma.rn.f32 	%f151, %f922, 0fC0000000, %f924;
	mov.b32 	%r137, %f151;
	setp.lt.u32 	%p137, %r137, 1073741824;
	@%p137 bra 	LBB0_122;
// %bb.81:
	setp.lt.u32 	%p138, %r137, -2147483647;
	@%p138 bra 	LBB0_120;
// %bb.82:
	add.f32 	%f683, %f922, 0fBF800000;
	setp.lt.f32 	%p141, %f151, 0fC0000000;
	add.f32 	%f684, %f683, 0fBF800000;
	selp.f32 	%f922, %f684, %f683, %p141;
	bra.uni 	LBB0_122;
LBB0_120:
	add.f32 	%f922, %f922, 0f3F800000;
	setp.ltu.f32 	%p139, %f151, 0f40800000;
	@%p139 bra 	LBB0_122;
// %bb.121:                             // %__nv_fmaf_rn.exit.i.i.i1343
	add.f32 	%f679, %f922, 0f3F800000;
	fma.rn.f32 	%f681, %f185, 0fC0400000, %f151;
	setp.ge.f32 	%p140, %f681, 0f00000000;
	add.f32 	%f682, %f679, 0f3F800000;
	selp.f32 	%f922, %f682, %f679, %p140;
LBB0_122:                               // %__internal_fmodf_fastpath_quot.exit.i.i1347
	fma.rn.f32 	%f924, %f922, 0fC0000000, %f924;
LBB0_127:                               // %__internal_fmodf_kernel.exit.i1372
	abs.f32 	%f696, %f924;
	setp.gtu.f32 	%p147, %f696, 0f7F800000;
	@%p147 bra 	LBB0_129;
// %bb.128:
	mov.b32 	%r343, %f112;
	and.b32  	%r344, %r343, -2147483648;
	mov.b32 	%r345, %f924;
	or.b32  	%r346, %r344, %r345;
	mov.b32 	%f924, %r346;
LBB0_129:                               // %__nv_fmodf.exit1373
	{ // callseq 13, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd21;
	st.param.b32 	[param0+8], %r161;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd37;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd38;
	.param .b64 retval0;
	call.uni (retval0), 
	julia_power_by_squaring_9528, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64 	%rd55, [retval0+0];
	} // callseq 13
	cvt.rn.f32.s64 	%f728, %rd55;
	div.approx.f32 	%f167, %f94, %f728;
	abs.f32 	%f928, %f167;
	setp.lt.f32 	%p155, %f928, 0f40000000;
	@%p155 bra 	LBB0_141;
// %bb.130:
	setp.gtu.f32 	%p156, %f928, 0f4B800000;
	@%p156 bra 	LBB0_137;
	bra.uni 	LBB0_131;
LBB0_137:
	mov.b32 	%r146, %f928;
	and.b32  	%r355, %r146, 8388607;
	or.b32  	%r7807, %r355, 1065353216;
	mov.b32 	%f927, %r7807;
	add.s32 	%r356, %r146, -1073741824;
	and.b32  	%r7808, %r356, -8388608;
	setp.eq.s32 	%p162, %r7808, 0;
	@%p162 bra 	LBB0_140;
// %bb.138:                             // %__nv_fmaf_rn.exit4.i.i.i1412.preheader
	mov.f32 	%f738, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f737,%f738;
	// end inline asm
LBB0_139:                               // %__nv_fmaf_rn.exit4.i.i.i1412
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r357, %r7808, 192937984;
	add.s32 	%r358, %r357, %r7807;
	mov.b32 	%f739, %r358;
	mul.f32 	%f740, %f737, %f739;
	sub.f32 	%f741, %f739, %f740;
	fma.rn.f32 	%f742, %f741, %f737, %f740;
	sub.f32 	%f743, %f739, %f742;
	fma.rz.f32 	%f744, %f743, %f737, %f742;
	cvt.rzi.f32.f32 	%f745, %f744;
	sub.f32 	%f927, %f739, %f745;
	sub.s32 	%r7808, %r7808, %r357;
	mov.b32 	%r7807, %f927;
	setp.ne.s32 	%p163, %r7808, 0;
	setp.ne.s32 	%p164, %r7807, 0;
	and.pred  	%p165, %p163, %p164;
	@%p165 bra 	LBB0_139;
LBB0_140:                               // %__internal_fmodf_slowpath_mod.exit.i.i1414
	setp.gt.u32 	%p166, %r146, 2139095039;
	selp.f32 	%f746, 0f7FFFFFFF, 0f4B800000, %p166;
	mul.f32 	%f747, %f927, 0f34000000;
	mul.f32 	%f928, %f746, %f747;
	bra.uni 	LBB0_141;
LBB0_131:                               // %__nv_fast_fdividef.exit.i.i.i1384
	div.approx.f32 	%f730, %f928, %f185;
	cvt.rzi.f32.f32 	%f926, %f730;
	fma.rn.f32 	%f170, %f926, 0fC0000000, %f928;
	mov.b32 	%r145, %f170;
	setp.lt.u32 	%p157, %r145, 1073741824;
	@%p157 bra 	LBB0_136;
// %bb.132:
	setp.lt.u32 	%p158, %r145, -2147483647;
	@%p158 bra 	LBB0_134;
// %bb.133:
	add.f32 	%f735, %f926, 0fBF800000;
	setp.lt.f32 	%p161, %f170, 0fC0000000;
	add.f32 	%f736, %f735, 0fBF800000;
	selp.f32 	%f926, %f736, %f735, %p161;
	bra.uni 	LBB0_136;
LBB0_134:
	add.f32 	%f926, %f926, 0f3F800000;
	setp.ltu.f32 	%p159, %f170, 0f40800000;
	@%p159 bra 	LBB0_136;
// %bb.135:                             // %__nv_fmaf_rn.exit.i.i.i1389
	add.f32 	%f731, %f926, 0f3F800000;
	fma.rn.f32 	%f733, %f185, 0fC0400000, %f170;
	setp.ge.f32 	%p160, %f733, 0f00000000;
	add.f32 	%f734, %f731, 0f3F800000;
	selp.f32 	%f926, %f734, %f731, %p160;
LBB0_136:                               // %__internal_fmodf_fastpath_quot.exit.i.i1393
	fma.rn.f32 	%f928, %f926, 0fC0000000, %f928;
LBB0_141:                               // %__internal_fmodf_kernel.exit.i1418
	abs.f32 	%f748, %f928;
	setp.gtu.f32 	%p167, %f748, 0f7F800000;
	@%p167 bra 	LBB0_143;
// %bb.142:
	mov.b32 	%r359, %f167;
	and.b32  	%r360, %r359, -2147483648;
	mov.b32 	%r361, %f928;
	or.b32  	%r362, %r360, %r361;
	mov.b32 	%f928, %r362;
LBB0_143:                               // %__nv_fmodf.exit1419
	{ // callseq 14, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd21;
	st.param.b32 	[param0+8], %r161;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd37;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd38;
	.param .b64 retval0;
	call.uni (retval0), 
	julia_power_by_squaring_9528, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64 	%rd59, [retval0+0];
	} // callseq 14
	setp.eq.s64 	%p175, %rd59, 64;
	@%p175 bra 	LBB0_83;
	bra.uni 	LBB0_144;
LBB0_83:                                // %L1096
	mov.f32 	%f189, 0f43808000;
	div.approx.f32 	%f190, %f188, %f189;
	div.approx.f32 	%f224, %f222, %f189;
	div.approx.f32 	%f259, %f257, %f189;
	div.approx.f32 	%f293, %f291, %f189;
	div.approx.f32 	%f328, %f326, %f189;
	div.approx.f32 	%f362, %f360, %f189;
	div.approx.f32 	%f397, %f395, %f189;
	div.approx.f32 	%f431, %f429, %f189;
	abs.f32 	%f191, %f190;
	abs.f32 	%f225, %f224;
	abs.f32 	%f260, %f259;
	abs.f32 	%f294, %f293;
	abs.f32 	%f329, %f328;
	abs.f32 	%f363, %f362;
	abs.f32 	%f398, %f397;
	abs.f32 	%f432, %f431;
	add.f32 	%f591, %f908, %f908;
	add.f32 	%f643, %f912, %f912;
	setp.gt.f32 	%p5, %f191, 0f4B800000;
	mul.f32 	%f192, %f190, 0f00000000;
	setp.gt.f32 	%p11, %f225, 0f4B800000;
	mul.f32 	%f226, %f224, 0f00000000;
	setp.gt.f32 	%p17, %f260, 0f4B800000;
	mul.f32 	%f261, %f259, 0f00000000;
	setp.gt.f32 	%p23, %f294, 0f4B800000;
	mul.f32 	%f295, %f293, 0f00000000;
	setp.gt.f32 	%p29, %f329, 0f4B800000;
	mul.f32 	%f330, %f328, 0f00000000;
	setp.gt.f32 	%p35, %f363, 0f4B800000;
	mul.f32 	%f364, %f362, 0f00000000;
	setp.gt.f32 	%p41, %f398, 0f4B800000;
	mul.f32 	%f399, %f397, 0f00000000;
	setp.gt.f32 	%p47, %f432, 0f4B800000;
	mul.f32 	%f433, %f431, 0f00000000;
	add.f32 	%f484, %f900, %f900;
	add.f32 	%f537, %f904, %f904;
	mov.b32 	%r301, %f591;
	mov.b32 	%r331, %f643;
	selp.f32 	%f193, %f192, %f190, %p5;
	selp.f32 	%f227, %f226, %f224, %p11;
	selp.f32 	%f262, %f261, %f259, %p17;
	selp.f32 	%f296, %f295, %f293, %p23;
	selp.f32 	%f331, %f330, %f328, %p29;
	selp.f32 	%f365, %f364, %f362, %p35;
	selp.f32 	%f400, %f399, %f397, %p41;
	selp.f32 	%f434, %f433, %f431, %p47;
	mov.b32 	%r260, %f484;
	mov.b32 	%r283, %f537;
	and.b32  	%r302, %r301, -2147483648;
	and.b32  	%r332, %r331, -2147483648;
	add.f32 	%f697, %f924, %f924;
	add.f32 	%f194, %f193, %f193;
	add.f32 	%f228, %f227, %f227;
	add.f32 	%f263, %f262, %f262;
	add.f32 	%f297, %f296, %f296;
	add.f32 	%f332, %f331, %f331;
	add.f32 	%f366, %f365, %f365;
	add.f32 	%f401, %f400, %f400;
	add.f32 	%f435, %f434, %f434;
	and.b32  	%r261, %r260, -2147483648;
	and.b32  	%r284, %r283, -2147483648;
	or.b32  	%r303, %r302, 1056964608;
	or.b32  	%r333, %r332, 1056964608;
	mov.b32 	%r347, %f697;
	mov.b32 	%r181, %f194;
	mov.b32 	%r188, %f228;
	mov.b32 	%r199, %f263;
	mov.b32 	%r206, %f297;
	mov.b32 	%r217, %f332;
	mov.b32 	%r224, %f366;
	mov.b32 	%r235, %f401;
	mov.b32 	%r242, %f435;
	or.b32  	%r262, %r261, 1056964608;
	or.b32  	%r285, %r284, 1056964608;
	mov.b32 	%f592, %r303;
	mov.b32 	%f644, %r333;
	and.b32  	%r348, %r347, -2147483648;
	and.b32  	%r182, %r181, -2147483648;
	and.b32  	%r189, %r188, -2147483648;
	and.b32  	%r200, %r199, -2147483648;
	and.b32  	%r207, %r206, -2147483648;
	and.b32  	%r218, %r217, -2147483648;
	and.b32  	%r225, %r224, -2147483648;
	and.b32  	%r236, %r235, -2147483648;
	and.b32  	%r243, %r242, -2147483648;
	mov.b32 	%f485, %r262;
	mov.b32 	%f538, %r285;
	add.f32 	%f593, %f591, %f592;
	abs.f32 	%f595, %f591;
	add.f32 	%f645, %f643, %f644;
	abs.f32 	%f647, %f643;
	or.b32  	%r349, %r348, 1056964608;
	or.b32  	%r183, %r182, 1056964608;
	or.b32  	%r190, %r189, 1056964608;
	or.b32  	%r201, %r200, 1056964608;
	or.b32  	%r208, %r207, 1056964608;
	or.b32  	%r219, %r218, 1056964608;
	or.b32  	%r226, %r225, 1056964608;
	or.b32  	%r237, %r236, 1056964608;
	or.b32  	%r244, %r243, 1056964608;
	add.f32 	%f486, %f484, %f485;
	abs.f32 	%f488, %f484;
	add.f32 	%f539, %f537, %f538;
	abs.f32 	%f541, %f537;
	cvt.rzi.f32.f32 	%f594, %f593;
	setp.gt.f32 	%p107, %f595, 0f4B000000;
	cvt.rzi.f32.f32 	%f646, %f645;
	setp.gt.f32 	%p127, %f647, 0f4B000000;
	mov.b32 	%f698, %r349;
	mov.b32 	%f195, %r183;
	mov.b32 	%f229, %r190;
	mov.b32 	%f264, %r201;
	mov.b32 	%f298, %r208;
	mov.b32 	%f333, %r219;
	mov.b32 	%f367, %r226;
	mov.b32 	%f402, %r237;
	mov.b32 	%f436, %r244;
	cvt.rzi.f32.f32 	%f487, %f486;
	setp.gt.f32 	%p66, %f488, 0f4B000000;
	cvt.rzi.f32.f32 	%f540, %f539;
	setp.gt.f32 	%p86, %f541, 0f4B000000;
	selp.f32 	%f596, %f591, %f594, %p107;
	cvt.rzi.f32.f32 	%f597, %f591;
	setp.lt.f32 	%p108, %f595, 0f3F000000;
	selp.f32 	%f648, %f643, %f646, %p127;
	cvt.rzi.f32.f32 	%f649, %f643;
	setp.lt.f32 	%p128, %f647, 0f3F000000;
	add.f32 	%f699, %f697, %f698;
	abs.f32 	%f701, %f697;
	add.f32 	%f196, %f194, %f195;
	abs.f32 	%f198, %f194;
	add.f32 	%f230, %f228, %f229;
	abs.f32 	%f232, %f228;
	add.f32 	%f265, %f263, %f264;
	abs.f32 	%f267, %f263;
	add.f32 	%f299, %f297, %f298;
	abs.f32 	%f301, %f297;
	add.f32 	%f334, %f332, %f333;
	abs.f32 	%f336, %f332;
	add.f32 	%f368, %f366, %f367;
	abs.f32 	%f370, %f366;
	add.f32 	%f403, %f401, %f402;
	abs.f32 	%f405, %f401;
	add.f32 	%f437, %f435, %f436;
	abs.f32 	%f439, %f435;
	selp.f32 	%f489, %f484, %f487, %p66;
	cvt.rzi.f32.f32 	%f490, %f484;
	setp.lt.f32 	%p67, %f488, 0f3F000000;
	selp.f32 	%f542, %f537, %f540, %p86;
	cvt.rzi.f32.f32 	%f543, %f537;
	setp.lt.f32 	%p87, %f541, 0f3F000000;
	selp.f32 	%f598, %f597, %f596, %p108;
	selp.f32 	%f650, %f649, %f648, %p128;
	cvt.rzi.f32.f32 	%f700, %f699;
	setp.gt.f32 	%p148, %f701, 0f4B000000;
	cvt.rzi.f32.f32 	%f197, %f196;
	setp.gt.f32 	%p6, %f198, 0f4B000000;
	cvt.rzi.f32.f32 	%f231, %f230;
	setp.gt.f32 	%p12, %f232, 0f4B000000;
	cvt.rzi.f32.f32 	%f266, %f265;
	setp.gt.f32 	%p18, %f267, 0f4B000000;
	cvt.rzi.f32.f32 	%f300, %f299;
	setp.gt.f32 	%p24, %f301, 0f4B000000;
	cvt.rzi.f32.f32 	%f335, %f334;
	setp.gt.f32 	%p30, %f336, 0f4B000000;
	cvt.rzi.f32.f32 	%f369, %f368;
	setp.gt.f32 	%p36, %f370, 0f4B000000;
	cvt.rzi.f32.f32 	%f404, %f403;
	setp.gt.f32 	%p42, %f405, 0f4B000000;
	cvt.rzi.f32.f32 	%f438, %f437;
	setp.gt.f32 	%p48, %f439, 0f4B000000;
	selp.f32 	%f491, %f490, %f489, %p67;
	selp.f32 	%f544, %f543, %f542, %p87;
	fma.rn.f32 	%f599, %f598, 0fBF000000, %f908;
	fma.rn.f32 	%f651, %f650, 0fBF000000, %f912;
	selp.f32 	%f702, %f697, %f700, %p148;
	cvt.rzi.f32.f32 	%f703, %f697;
	setp.lt.f32 	%p149, %f701, 0f3F000000;
	selp.f32 	%f199, %f194, %f197, %p6;
	cvt.rzi.f32.f32 	%f200, %f194;
	setp.lt.f32 	%p7, %f198, 0f3F000000;
	selp.f32 	%f233, %f228, %f231, %p12;
	cvt.rzi.f32.f32 	%f234, %f228;
	setp.lt.f32 	%p13, %f232, 0f3F000000;
	selp.f32 	%f268, %f263, %f266, %p18;
	cvt.rzi.f32.f32 	%f269, %f263;
	setp.lt.f32 	%p19, %f267, 0f3F000000;
	selp.f32 	%f302, %f297, %f300, %p24;
	cvt.rzi.f32.f32 	%f303, %f297;
	setp.lt.f32 	%p25, %f301, 0f3F000000;
	selp.f32 	%f337, %f332, %f335, %p30;
	cvt.rzi.f32.f32 	%f338, %f332;
	setp.lt.f32 	%p31, %f336, 0f3F000000;
	selp.f32 	%f371, %f366, %f369, %p36;
	cvt.rzi.f32.f32 	%f372, %f366;
	setp.lt.f32 	%p37, %f370, 0f3F000000;
	selp.f32 	%f406, %f401, %f404, %p42;
	cvt.rzi.f32.f32 	%f407, %f401;
	setp.lt.f32 	%p43, %f405, 0f3F000000;
	selp.f32 	%f440, %f435, %f438, %p48;
	cvt.rzi.f32.f32 	%f441, %f435;
	setp.lt.f32 	%p49, %f439, 0f3F000000;
	fma.rn.f32 	%f492, %f491, 0fBF000000, %f900;
	fma.rn.f32 	%f545, %f544, 0fBF000000, %f904;
	mul.f32 	%f600, %f599, 0f34222169;
	mul.f32 	%f652, %f651, 0f34222169;
	selp.f32 	%f704, %f703, %f702, %p149;
	selp.f32 	%f201, %f200, %f199, %p7;
	selp.f32 	%f235, %f234, %f233, %p13;
	selp.f32 	%f270, %f269, %f268, %p19;
	selp.f32 	%f304, %f303, %f302, %p25;
	selp.f32 	%f339, %f338, %f337, %p31;
	selp.f32 	%f373, %f372, %f371, %p37;
	selp.f32 	%f408, %f407, %f406, %p43;
	selp.f32 	%f442, %f441, %f440, %p49;
	mul.f32 	%f493, %f492, 0f34222169;
	mul.f32 	%f546, %f545, 0f34222169;
	fma.rn.f32 	%f601, %f599, 0f40490FDA, %f600;
	fma.rn.f32 	%f653, %f651, 0f40490FDA, %f652;
	fma.rn.f32 	%f705, %f704, 0fBF000000, %f924;
	fma.rn.f32 	%f202, %f201, 0fBF000000, %f193;
	fma.rn.f32 	%f236, %f235, 0fBF000000, %f227;
	fma.rn.f32 	%f271, %f270, 0fBF000000, %f262;
	fma.rn.f32 	%f305, %f304, 0fBF000000, %f296;
	fma.rn.f32 	%f340, %f339, 0fBF000000, %f331;
	fma.rn.f32 	%f374, %f373, 0fBF000000, %f365;
	fma.rn.f32 	%f409, %f408, 0fBF000000, %f400;
	fma.rn.f32 	%f443, %f442, 0fBF000000, %f434;
	fma.rn.f32 	%f494, %f492, 0f40490FDA, %f493;
	fma.rn.f32 	%f547, %f545, 0f40490FDA, %f546;
	mul.f32 	%f602, %f601, %f601;
	mul.f32 	%f654, %f653, %f653;
	mul.f32 	%f706, %f705, 0f34222169;
	mul.f32 	%f203, %f202, %f202;
	mul.f32 	%f237, %f236, %f236;
	mul.f32 	%f272, %f271, %f271;
	mul.f32 	%f306, %f305, %f305;
	mul.f32 	%f341, %f340, %f340;
	mul.f32 	%f375, %f374, %f374;
	mul.f32 	%f410, %f409, %f409;
	mul.f32 	%f444, %f443, %f443;
	mul.f32 	%f495, %f494, %f494;
	mul.f32 	%f548, %f547, %f547;
	fma.rn.f32 	%f603, %f602, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f655, %f654, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f707, %f705, 0f40490FDA, %f706;
	cvt.rzi.s32.f32 	%r184, %f201;
	fma.rn.f32 	%f204, %f203, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f205, %f203, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r191, %f235;
	fma.rn.f32 	%f238, %f237, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f239, %f237, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r202, %f270;
	fma.rn.f32 	%f273, %f272, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f274, %f272, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r209, %f304;
	fma.rn.f32 	%f307, %f306, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f308, %f306, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r220, %f339;
	fma.rn.f32 	%f342, %f341, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f343, %f341, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r227, %f373;
	fma.rn.f32 	%f376, %f375, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f377, %f375, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r238, %f408;
	fma.rn.f32 	%f411, %f410, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f412, %f410, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r245, %f442;
	fma.rn.f32 	%f445, %f444, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f446, %f444, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f496, %f495, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f549, %f548, 0f37CBAC00, 0fBAB607ED;
	cvt.rzi.s32.f32 	%r304, %f598;
	fma.rn.f32 	%f604, %f603, %f602, 0f3D2AAABB;
	fma.rn.f32 	%f608, %f602, 0fB94D4153, 0f3C0885E4;
	cvt.rzi.s32.f32 	%r334, %f650;
	fma.rn.f32 	%f656, %f655, %f654, 0f3D2AAABB;
	fma.rn.f32 	%f660, %f654, 0fB94D4153, 0f3C0885E4;
	mul.f32 	%f708, %f707, %f707;
	add.s32 	%r185, %r184, 1;
	fma.rn.f32 	%f206, %f204, %f203, 0fC0A55DF6;
	fma.rn.f32 	%f207, %f205, %f203, 0f4081E0CF;
	fma.rn.f32 	%f208, %f203, %f202, 0f00000000;
	add.s32 	%r192, %r191, 1;
	fma.rn.f32 	%f240, %f238, %f237, 0fC0A55DF6;
	fma.rn.f32 	%f241, %f239, %f237, 0f4081E0CF;
	fma.rn.f32 	%f242, %f237, %f236, 0f00000000;
	add.s32 	%r203, %r202, 1;
	fma.rn.f32 	%f275, %f273, %f272, 0fC0A55DF6;
	fma.rn.f32 	%f276, %f274, %f272, 0f4081E0CF;
	fma.rn.f32 	%f277, %f272, %f271, 0f00000000;
	add.s32 	%r210, %r209, 1;
	fma.rn.f32 	%f309, %f307, %f306, 0fC0A55DF6;
	fma.rn.f32 	%f310, %f308, %f306, 0f4081E0CF;
	fma.rn.f32 	%f311, %f306, %f305, 0f00000000;
	add.s32 	%r221, %r220, 1;
	fma.rn.f32 	%f344, %f342, %f341, 0fC0A55DF6;
	fma.rn.f32 	%f345, %f343, %f341, 0f4081E0CF;
	fma.rn.f32 	%f346, %f341, %f340, 0f00000000;
	add.s32 	%r228, %r227, 1;
	fma.rn.f32 	%f378, %f376, %f375, 0fC0A55DF6;
	fma.rn.f32 	%f379, %f377, %f375, 0f4081E0CF;
	fma.rn.f32 	%f380, %f375, %f374, 0f00000000;
	add.s32 	%r239, %r238, 1;
	fma.rn.f32 	%f413, %f411, %f410, 0fC0A55DF6;
	fma.rn.f32 	%f414, %f412, %f410, 0f4081E0CF;
	fma.rn.f32 	%f415, %f410, %f409, 0f00000000;
	add.s32 	%r246, %r245, 1;
	fma.rn.f32 	%f447, %f445, %f444, 0fC0A55DF6;
	fma.rn.f32 	%f448, %f446, %f444, 0f4081E0CF;
	fma.rn.f32 	%f449, %f444, %f443, 0f00000000;
	cvt.rzi.s32.f32 	%r263, %f491;
	fma.rn.f32 	%f497, %f496, %f495, 0f3D2AAABB;
	fma.rn.f32 	%f501, %f495, 0fB94D4153, 0f3C0885E4;
	cvt.rzi.s32.f32 	%r286, %f544;
	fma.rn.f32 	%f550, %f549, %f548, 0f3D2AAABB;
	fma.rn.f32 	%f554, %f548, 0fB94D4153, 0f3C0885E4;
	fma.rn.f32 	%f605, %f604, %f602, 0fBEFFFFFF;
	fma.rn.f32 	%f607, %f602, %f601, 0f00000000;
	fma.rn.f32 	%f609, %f608, %f602, 0fBE2AAAA8;
	and.b32  	%r305, %r304, 1;
	fma.rn.f32 	%f657, %f656, %f654, 0fBEFFFFFF;
	fma.rn.f32 	%f659, %f654, %f653, 0f00000000;
	fma.rn.f32 	%f661, %f660, %f654, 0fBE2AAAA8;
	and.b32  	%r335, %r334, 1;
	fma.rn.f32 	%f709, %f708, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f209, %f207, %f203, 0fC09DE9E6;
	fma.rn.f32 	%f210, %f206, %f208, 0f00000000;
	and.b32  	%r186, %r185, 1;
	fma.rn.f32 	%f243, %f241, %f237, 0fC09DE9E6;
	fma.rn.f32 	%f244, %f240, %f242, 0f00000000;
	and.b32  	%r193, %r192, 1;
	fma.rn.f32 	%f278, %f276, %f272, 0fC09DE9E6;
	fma.rn.f32 	%f279, %f275, %f277, 0f00000000;
	and.b32  	%r204, %r203, 1;
	fma.rn.f32 	%f312, %f310, %f306, 0fC09DE9E6;
	fma.rn.f32 	%f313, %f309, %f311, 0f00000000;
	and.b32  	%r211, %r210, 1;
	fma.rn.f32 	%f347, %f345, %f341, 0fC09DE9E6;
	fma.rn.f32 	%f348, %f344, %f346, 0f00000000;
	and.b32  	%r222, %r221, 1;
	fma.rn.f32 	%f381, %f379, %f375, 0fC09DE9E6;
	fma.rn.f32 	%f382, %f378, %f380, 0f00000000;
	and.b32  	%r229, %r228, 1;
	fma.rn.f32 	%f416, %f414, %f410, 0fC09DE9E6;
	fma.rn.f32 	%f417, %f413, %f415, 0f00000000;
	and.b32  	%r240, %r239, 1;
	fma.rn.f32 	%f450, %f448, %f444, 0fC09DE9E6;
	fma.rn.f32 	%f451, %f447, %f449, 0f00000000;
	and.b32  	%r247, %r246, 1;
	fma.rn.f32 	%f498, %f497, %f495, 0fBEFFFFFF;
	fma.rn.f32 	%f500, %f495, %f494, 0f00000000;
	fma.rn.f32 	%f502, %f501, %f495, 0fBE2AAAA8;
	and.b32  	%r264, %r263, 1;
	fma.rn.f32 	%f551, %f550, %f548, 0fBEFFFFFF;
	fma.rn.f32 	%f553, %f548, %f547, 0f00000000;
	fma.rn.f32 	%f555, %f554, %f548, 0fBE2AAAA8;
	and.b32  	%r287, %r286, 1;
	fma.rn.f32 	%f606, %f605, %f602, 0f3F800000;
	fma.rn.f32 	%f610, %f609, %f607, %f601;
	setp.eq.b32 	%p109, %r305, 1;
	fma.rn.f32 	%f658, %f657, %f654, 0f3F800000;
	fma.rn.f32 	%f662, %f661, %f659, %f653;
	setp.eq.b32 	%p129, %r335, 1;
	cvt.rzi.s32.f32 	%r350, %f704;
	fma.rn.f32 	%f710, %f709, %f708, 0f3D2AAABB;
	fma.rn.f32 	%f714, %f708, 0fB94D4153, 0f3C0885E4;
	fma.rn.f32 	%f211, %f209, %f203, 0f3F800000;
	fma.rn.f32 	%f212, %f202, 0f40490FDB, %f210;
	setp.eq.b32 	%p8, %r186, 1;
	fma.rn.f32 	%f245, %f243, %f237, 0f3F800000;
	fma.rn.f32 	%f246, %f236, 0f40490FDB, %f244;
	setp.eq.b32 	%p14, %r193, 1;
	fma.rn.f32 	%f280, %f278, %f272, 0f3F800000;
	fma.rn.f32 	%f281, %f271, 0f40490FDB, %f279;
	setp.eq.b32 	%p20, %r204, 1;
	fma.rn.f32 	%f314, %f312, %f306, 0f3F800000;
	fma.rn.f32 	%f315, %f305, 0f40490FDB, %f313;
	setp.eq.b32 	%p26, %r211, 1;
	fma.rn.f32 	%f349, %f347, %f341, 0f3F800000;
	fma.rn.f32 	%f350, %f340, 0f40490FDB, %f348;
	setp.eq.b32 	%p32, %r222, 1;
	fma.rn.f32 	%f383, %f381, %f375, 0f3F800000;
	fma.rn.f32 	%f384, %f374, 0f40490FDB, %f382;
	setp.eq.b32 	%p38, %r229, 1;
	fma.rn.f32 	%f418, %f416, %f410, 0f3F800000;
	fma.rn.f32 	%f419, %f409, 0f40490FDB, %f417;
	setp.eq.b32 	%p44, %r240, 1;
	fma.rn.f32 	%f452, %f450, %f444, 0f3F800000;
	fma.rn.f32 	%f453, %f443, 0f40490FDB, %f451;
	setp.eq.b32 	%p50, %r247, 1;
	fma.rn.f32 	%f499, %f498, %f495, 0f3F800000;
	fma.rn.f32 	%f503, %f502, %f500, %f494;
	setp.eq.b32 	%p68, %r264, 1;
	fma.rn.f32 	%f552, %f551, %f548, 0f3F800000;
	fma.rn.f32 	%f556, %f555, %f553, %f547;
	setp.eq.b32 	%p88, %r287, 1;
	selp.f32 	%f611, %f606, %f610, %p109;
	and.b32  	%r306, %r304, 2;
	selp.f32 	%f663, %f658, %f662, %p129;
	and.b32  	%r336, %r334, 2;
	fma.rn.f32 	%f711, %f710, %f708, 0fBEFFFFFF;
	fma.rn.f32 	%f713, %f708, %f707, 0f00000000;
	fma.rn.f32 	%f715, %f714, %f708, 0fBE2AAAA8;
	and.b32  	%r351, %r350, 1;
	selp.f32 	%f213, %f211, %f212, %p8;
	and.b32  	%r187, %r185, 2;
	mov.f32 	%f214, 0f00000000;
	selp.f32 	%f247, %f245, %f246, %p14;
	and.b32  	%r194, %r192, 2;
	selp.f32 	%f282, %f280, %f281, %p20;
	and.b32  	%r205, %r203, 2;
	selp.f32 	%f316, %f314, %f315, %p26;
	and.b32  	%r212, %r210, 2;
	selp.f32 	%f351, %f349, %f350, %p32;
	and.b32  	%r223, %r221, 2;
	selp.f32 	%f385, %f383, %f384, %p38;
	and.b32  	%r230, %r228, 2;
	selp.f32 	%f420, %f418, %f419, %p44;
	and.b32  	%r241, %r239, 2;
	selp.f32 	%f454, %f452, %f453, %p50;
	and.b32  	%r248, %r246, 2;
	selp.f32 	%f504, %f499, %f503, %p68;
	and.b32  	%r265, %r263, 2;
	selp.f32 	%f557, %f552, %f556, %p88;
	and.b32  	%r288, %r286, 2;
	setp.eq.s32 	%p110, %r306, 0;
	neg.f32 	%f613, %f611;
	add.s32 	%r307, %r304, 1;
	cvt.rzi.f32.f32 	%f618, %f908;
	setp.eq.s32 	%p130, %r336, 0;
	neg.f32 	%f665, %f663;
	add.s32 	%r337, %r334, 1;
	cvt.rzi.f32.f32 	%f670, %f912;
	fma.rn.f32 	%f712, %f711, %f708, 0f3F800000;
	fma.rn.f32 	%f716, %f715, %f713, %f707;
	setp.eq.b32 	%p150, %r351, 1;
	setp.eq.s32 	%p9, %r187, 0;
	sub.f32 	%f215, %f214, %f213;
	setp.eq.s32 	%p15, %r194, 0;
	sub.f32 	%f249, %f214, %f247;
	setp.eq.s32 	%p21, %r205, 0;
	sub.f32 	%f284, %f214, %f282;
	setp.eq.s32 	%p27, %r212, 0;
	sub.f32 	%f318, %f214, %f316;
	setp.eq.s32 	%p33, %r223, 0;
	sub.f32 	%f353, %f214, %f351;
	setp.eq.s32 	%p39, %r230, 0;
	sub.f32 	%f387, %f214, %f385;
	setp.eq.s32 	%p45, %r241, 0;
	sub.f32 	%f422, %f214, %f420;
	setp.eq.s32 	%p51, %r248, 0;
	sub.f32 	%f456, %f214, %f454;
	setp.eq.s32 	%p69, %r265, 0;
	neg.f32 	%f506, %f504;
	add.s32 	%r266, %r263, 1;
	cvt.rzi.f32.f32 	%f511, %f900;
	setp.eq.s32 	%p89, %r288, 0;
	neg.f32 	%f559, %f557;
	add.s32 	%r289, %r286, 1;
	cvt.rzi.f32.f32 	%f564, %f904;
	selp.f32 	%f612, %f610, %f606, %p109;
	selp.f32 	%f614, %f611, %f613, %p110;
	and.b32  	%r308, %r307, 2;
	setp.eq.f32 	%p112, %f618, %f908;
	mul.f32 	%f619, %f908, 0f00000000;
	selp.f32 	%f664, %f662, %f658, %p129;
	selp.f32 	%f666, %f663, %f665, %p130;
	and.b32  	%r338, %r337, 2;
	setp.eq.f32 	%p132, %f670, %f912;
	mul.f32 	%f671, %f912, 0f00000000;
	selp.f32 	%f717, %f712, %f716, %p150;
	and.b32  	%r352, %r350, 2;
	selp.f32 	%f216, %f213, %f215, %p9;
	selp.f32 	%f250, %f247, %f249, %p15;
	selp.f32 	%f285, %f282, %f284, %p21;
	selp.f32 	%f319, %f316, %f318, %p27;
	selp.f32 	%f354, %f351, %f353, %p33;
	selp.f32 	%f388, %f385, %f387, %p39;
	selp.f32 	%f423, %f420, %f422, %p45;
	selp.f32 	%f457, %f454, %f456, %p51;
	selp.f32 	%f505, %f503, %f499, %p68;
	selp.f32 	%f507, %f504, %f506, %p69;
	and.b32  	%r267, %r266, 2;
	setp.eq.f32 	%p71, %f511, %f900;
	mul.f32 	%f512, %f900, 0f00000000;
	selp.f32 	%f558, %f556, %f552, %p88;
	selp.f32 	%f560, %f557, %f559, %p89;
	and.b32  	%r290, %r289, 2;
	setp.eq.f32 	%p91, %f564, %f904;
	mul.f32 	%f565, %f904, 0f00000000;
	setp.eq.s32 	%p111, %r308, 0;
	sub.f32 	%f616, %f214, %f612;
	selp.f32 	%f92, %f619, %f614, %p112;
	abs.f32 	%f620, %f908;
	setp.eq.s32 	%p131, %r338, 0;
	sub.f32 	%f668, %f214, %f664;
	selp.f32 	%f672, %f671, %f666, %p132;
	abs.f32 	%f673, %f912;
	setp.eq.s32 	%p151, %r352, 0;
	neg.f32 	%f719, %f717;
	add.s32 	%r353, %r350, 1;
	cvt.rzi.f32.f32 	%f724, %f924;
	mul.f32 	%f2, %f216, %f216;
	mul.f32 	%f7, %f250, %f250;
	mul.f32 	%f11, %f285, %f285;
	mul.f32 	%f16, %f319, %f319;
	mul.f32 	%f20, %f354, %f354;
	mul.f32 	%f25, %f388, %f388;
	mul.f32 	%f29, %f423, %f423;
	mul.f32 	%f34, %f457, %f457;
	setp.eq.s32 	%p70, %r267, 0;
	sub.f32 	%f509, %f214, %f505;
	selp.f32 	%f55, %f512, %f507, %p71;
	abs.f32 	%f513, %f900;
	setp.eq.s32 	%p90, %r290, 0;
	sub.f32 	%f562, %f214, %f558;
	selp.f32 	%f566, %f565, %f560, %p91;
	abs.f32 	%f567, %f904;
	selp.f32 	%f617, %f612, %f616, %p111;
	setp.gt.f32 	%p113, %f620, 0f4B800000;
	add.f32 	%f621, %f92, 0f3F800000;
	selp.f32 	%f669, %f664, %f668, %p131;
	setp.gt.f32 	%p133, %f673, 0f4B800000;
	add.f32 	%f674, %f672, 0f3F800000;
	selp.f32 	%f718, %f716, %f712, %p150;
	selp.f32 	%f720, %f717, %f719, %p151;
	and.b32  	%r354, %r353, 2;
	setp.eq.f32 	%p153, %f724, %f924;
	mul.f32 	%f725, %f924, 0f00000000;
	setp.eq.s32 	%p152, %r354, 0;
	sub.f32 	%f722, %f214, %f718;
	selp.f32 	%f165, %f725, %f720, %p153;
	abs.f32 	%f726, %f924;
	shr.u32 	%r13, %r2, 1;
	shr.u32 	%r19, %r2, 3;
	add.f32 	%f749, %f928, %f928;
	mov.b32 	%r369, %f749;
	and.b32  	%r370, %r369, -2147483648;
	or.b32  	%r371, %r370, 1056964608;
	mov.b32 	%f750, %r371;
	add.f32 	%f751, %f749, %f750;
	cvt.rzi.f32.f32 	%f752, %f751;
	abs.f32 	%f753, %f749;
	setp.gt.f32 	%p168, %f753, 0f4B000000;
	selp.f32 	%f754, %f749, %f752, %p168;
	cvt.rzi.f32.f32 	%f755, %f749;
	setp.lt.f32 	%p169, %f753, 0f3F000000;
	selp.f32 	%f756, %f755, %f754, %p169;
	cvt.rzi.s32.f32 	%r372, %f756;
	fma.rn.f32 	%f757, %f756, 0fBF000000, %f928;
	mul.f32 	%f758, %f757, 0f34222169;
	fma.rn.f32 	%f759, %f757, 0f40490FDA, %f758;
	mul.f32 	%f760, %f759, %f759;
	fma.rn.f32 	%f761, %f760, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f762, %f761, %f760, 0f3D2AAABB;
	fma.rn.f32 	%f763, %f762, %f760, 0fBEFFFFFF;
	fma.rn.f32 	%f764, %f763, %f760, 0f3F800000;
	fma.rn.f32 	%f765, %f760, %f759, 0f00000000;
	fma.rn.f32 	%f766, %f760, 0fB94D4153, 0f3C0885E4;
	fma.rn.f32 	%f767, %f766, %f760, 0fBE2AAAA8;
	fma.rn.f32 	%f768, %f767, %f765, %f759;
	and.b32  	%r373, %r372, 1;
	setp.eq.b32 	%p170, %r373, 1;
	selp.f32 	%f769, %f764, %f768, %p170;
	selp.f32 	%f770, %f768, %f764, %p170;
	and.b32  	%r374, %r372, 2;
	setp.eq.s32 	%p171, %r374, 0;
	neg.f32 	%f771, %f769;
	selp.f32 	%f772, %f769, %f771, %p171;
	add.s32 	%r375, %r372, 1;
	and.b32  	%r376, %r375, 2;
	setp.eq.s32 	%p172, %r376, 0;
	sub.f32 	%f774, %f214, %f770;
	cvt.rzi.f32.f32 	%f776, %f928;
	setp.eq.f32 	%p173, %f776, %f928;
	mul.f32 	%f777, %f928, 0f00000000;
	selp.f32 	%f778, %f777, %f772, %p173;
	abs.f32 	%f779, %f928;
	and.b32  	%r377, %r19, 2;
	and.b32  	%r378, %r13, 4;
	or.b32  	%r379, %r17, %r377;
	or.b32  	%r71, %r379, %r378;
	mul.lo.s32 	%r72, %r49, %r71;
	cvt.rn.f32.s32 	%f782, %r72;
	div.approx.f32 	%f114, %f782, %f570;
	abs.f32 	%f916, %f114;
	setp.lt.f32 	%p176, %f916, 0f40000000;
	@%p176 bra 	LBB0_95;
// %bb.84:
	setp.gtu.f32 	%p177, %f916, 0f4B800000;
	@%p177 bra 	LBB0_91;
	bra.uni 	LBB0_85;
LBB0_91:
	mov.b32 	%r74, %f916;
	and.b32  	%r380, %r74, 8388607;
	or.b32  	%r7775, %r380, 1065353216;
	mov.b32 	%f915, %r7775;
	add.s32 	%r381, %r74, -1073741824;
	and.b32  	%r7776, %r381, -8388608;
	setp.eq.s32 	%p183, %r7776, 0;
	@%p183 bra 	LBB0_94;
// %bb.92:                              // %__nv_fmaf_rn.exit4.i.i.i1274.preheader
	mov.f32 	%f793, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f792,%f793;
	// end inline asm
LBB0_93:                                // %__nv_fmaf_rn.exit4.i.i.i1274
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r382, %r7776, 192937984;
	add.s32 	%r383, %r382, %r7775;
	mov.b32 	%f794, %r383;
	mul.f32 	%f795, %f792, %f794;
	sub.f32 	%f796, %f794, %f795;
	fma.rn.f32 	%f797, %f796, %f792, %f795;
	sub.f32 	%f798, %f794, %f797;
	fma.rz.f32 	%f799, %f798, %f792, %f797;
	cvt.rzi.f32.f32 	%f800, %f799;
	sub.f32 	%f915, %f794, %f800;
	sub.s32 	%r7776, %r7776, %r382;
	mov.b32 	%r7775, %f915;
	setp.ne.s32 	%p184, %r7776, 0;
	setp.ne.s32 	%p185, %r7775, 0;
	and.pred  	%p186, %p184, %p185;
	@%p186 bra 	LBB0_93;
LBB0_94:                                // %__internal_fmodf_slowpath_mod.exit.i.i1276
	setp.gt.u32 	%p187, %r74, 2139095039;
	selp.f32 	%f801, 0f7FFFFFFF, 0f4B800000, %p187;
	mul.f32 	%f802, %f915, 0f34000000;
	mul.f32 	%f916, %f801, %f802;
	bra.uni 	LBB0_95;
LBB0_85:                                // %__nv_fast_fdividef.exit.i.i.i1246
	div.approx.f32 	%f785, %f916, %f185;
	cvt.rzi.f32.f32 	%f914, %f785;
	fma.rn.f32 	%f117, %f914, 0fC0000000, %f916;
	mov.b32 	%r73, %f117;
	setp.lt.u32 	%p178, %r73, 1073741824;
	@%p178 bra 	LBB0_90;
// %bb.86:
	setp.lt.u32 	%p179, %r73, -2147483647;
	@%p179 bra 	LBB0_88;
// %bb.87:
	add.f32 	%f790, %f914, 0fBF800000;
	setp.lt.f32 	%p182, %f117, 0fC0000000;
	add.f32 	%f791, %f790, 0fBF800000;
	selp.f32 	%f914, %f791, %f790, %p182;
	bra.uni 	LBB0_90;
LBB0_88:
	add.f32 	%f914, %f914, 0f3F800000;
	setp.ltu.f32 	%p180, %f117, 0f40800000;
	@%p180 bra 	LBB0_90;
// %bb.89:                              // %__nv_fmaf_rn.exit.i.i.i1251
	add.f32 	%f786, %f914, 0f3F800000;
	fma.rn.f32 	%f788, %f185, 0fC0400000, %f117;
	setp.ge.f32 	%p181, %f788, 0f00000000;
	add.f32 	%f789, %f786, 0f3F800000;
	selp.f32 	%f914, %f789, %f786, %p181;
LBB0_90:                                // %__internal_fmodf_fastpath_quot.exit.i.i1255
	fma.rn.f32 	%f916, %f914, 0fC0000000, %f916;
LBB0_95:                                // %__internal_fmodf_kernel.exit.i1280
	mul.f32 	%f220, %f2, 0f3C0AF64E;
	mul.f32 	%f254, %f7, 0f3C0AF64E;
	mul.f32 	%f289, %f11, 0f3C0AF64E;
	mul.f32 	%f323, %f16, 0f3C0AF64E;
	mul.f32 	%f358, %f20, 0f3C0AF64E;
	mul.f32 	%f392, %f25, 0f3C0AF64E;
	mul.f32 	%f427, %f29, 0f3C0AF64E;
	mul.f32 	%f460, %f34, 0f3C0AF64E;
	selp.f32 	%f510, %f505, %f509, %p70;
	setp.gt.f32 	%p72, %f513, 0f4B800000;
	add.f32 	%f514, %f55, 0f3F800000;
	selp.f32 	%f563, %f558, %f562, %p90;
	setp.gt.f32 	%p92, %f567, 0f4B800000;
	add.f32 	%f568, %f566, 0f3F800000;
	selp.f32 	%f93, %f621, %f617, %p113;
	selp.f32 	%f675, %f674, %f669, %p133;
	selp.f32 	%f723, %f718, %f722, %p152;
	setp.gt.f32 	%p154, %f726, 0f4B800000;
	add.f32 	%f727, %f165, 0f3F800000;
	selp.f32 	%f775, %f770, %f774, %p172;
	setp.gt.f32 	%p174, %f779, 0f4B800000;
	add.f32 	%f780, %f778, 0f3F800000;
	abs.f32 	%f803, %f916;
	setp.gtu.f32 	%p188, %f803, 0f7F800000;
	@%p188 bra 	LBB0_97;
// %bb.96:
	mov.b32 	%r384, %f114;
	and.b32  	%r385, %r384, -2147483648;
	mov.b32 	%r386, %f916;
	or.b32  	%r387, %r385, %r386;
	mov.b32 	%f916, %r387;
LBB0_97:                                // %__nv_fmodf.exit1281
	mul.f32 	%f6, %f220, %f890;
	mul.f32 	%f255, %f254, %f891;
	mul.f32 	%f15, %f289, %f892;
	mul.f32 	%f324, %f323, %f893;
	mul.f32 	%f24, %f358, %f894;
	mul.f32 	%f393, %f392, %f895;
	mul.f32 	%f33, %f427, %f896;
	mul.f32 	%f461, %f460, %f897;
	selp.f32 	%f56, %f514, %f510, %p72;
	selp.f32 	%f569, %f568, %f563, %p92;
	mov.b32 	%r321, %f675;
	mov.b32 	%r320, %f93;
	mov.b32 	%r327, %f672;
	mov.b32 	%r326, %f92;
	selp.f32 	%f166, %f727, %f723, %p154;
	selp.f32 	%f781, %f780, %f775, %p174;
	add.f32 	%f804, %f916, %f916;
	mov.b32 	%r388, %f804;
	and.b32  	%r389, %r388, -2147483648;
	or.b32  	%r390, %r389, 1056964608;
	mov.b32 	%f805, %r390;
	add.f32 	%f806, %f804, %f805;
	cvt.rzi.f32.f32 	%f807, %f806;
	abs.f32 	%f808, %f804;
	setp.gt.f32 	%p189, %f808, 0f4B000000;
	selp.f32 	%f809, %f804, %f807, %p189;
	cvt.rzi.f32.f32 	%f810, %f804;
	setp.lt.f32 	%p190, %f808, 0f3F000000;
	selp.f32 	%f811, %f810, %f809, %p190;
	cvt.rzi.s32.f32 	%r391, %f811;
	fma.rn.f32 	%f812, %f811, 0fBF000000, %f916;
	mul.f32 	%f813, %f812, 0f34222169;
	fma.rn.f32 	%f814, %f812, 0f40490FDA, %f813;
	mul.f32 	%f815, %f814, %f814;
	fma.rn.f32 	%f816, %f815, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f817, %f816, %f815, 0f3D2AAABB;
	fma.rn.f32 	%f818, %f817, %f815, 0fBEFFFFFF;
	fma.rn.f32 	%f819, %f818, %f815, 0f3F800000;
	fma.rn.f32 	%f820, %f815, %f814, 0f00000000;
	fma.rn.f32 	%f821, %f815, 0fB94D4153, 0f3C0885E4;
	fma.rn.f32 	%f822, %f821, %f815, 0fBE2AAAA8;
	fma.rn.f32 	%f823, %f822, %f820, %f814;
	and.b32  	%r392, %r391, 1;
	setp.eq.b32 	%p191, %r392, 1;
	selp.f32 	%f824, %f819, %f823, %p191;
	selp.f32 	%f825, %f823, %f819, %p191;
	and.b32  	%r393, %r391, 2;
	setp.eq.s32 	%p192, %r393, 0;
	neg.f32 	%f826, %f824;
	selp.f32 	%f827, %f824, %f826, %p192;
	add.s32 	%r394, %r391, 1;
	and.b32  	%r395, %r394, 2;
	setp.eq.s32 	%p193, %r395, 0;
	sub.f32 	%f829, %f214, %f825;
	selp.f32 	%f830, %f825, %f829, %p193;
	cvt.rzi.f32.f32 	%f831, %f916;
	setp.eq.f32 	%p194, %f831, %f916;
	mul.f32 	%f832, %f916, 0f00000000;
	selp.f32 	%f131, %f832, %f827, %p194;
	abs.f32 	%f833, %f916;
	setp.gt.f32 	%p195, %f833, 0f4B800000;
	add.f32 	%f834, %f131, 0f3F800000;
	shl.b32 	%r396, %r71, 3;
	sub.s32 	%r397, %r72, %r396;
	cvt.rn.f32.s32 	%f835, %r397;
	div.approx.f32 	%f133, %f835, %f570;
	abs.f32 	%f920, %f133;
	setp.lt.f32 	%p196, %f920, 0f40000000;
	@%p196 bra 	LBB0_109;
// %bb.98:
	setp.gtu.f32 	%p197, %f920, 0f4B800000;
	@%p197 bra 	LBB0_105;
	bra.uni 	LBB0_99;
LBB0_105:
	mov.b32 	%r82, %f920;
	and.b32  	%r398, %r82, 8388607;
	or.b32  	%r7777, %r398, 1065353216;
	mov.b32 	%f919, %r7777;
	add.s32 	%r399, %r82, -1073741824;
	and.b32  	%r7778, %r399, -8388608;
	setp.eq.s32 	%p203, %r7778, 0;
	@%p203 bra 	LBB0_108;
// %bb.106:                             // %__nv_fmaf_rn.exit4.i.i.i1320.preheader
	mov.f32 	%f846, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f845,%f846;
	// end inline asm
LBB0_107:                               // %__nv_fmaf_rn.exit4.i.i.i1320
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r400, %r7778, 192937984;
	add.s32 	%r401, %r400, %r7777;
	mov.b32 	%f847, %r401;
	mul.f32 	%f848, %f845, %f847;
	sub.f32 	%f849, %f847, %f848;
	fma.rn.f32 	%f850, %f849, %f845, %f848;
	sub.f32 	%f851, %f847, %f850;
	fma.rz.f32 	%f852, %f851, %f845, %f850;
	cvt.rzi.f32.f32 	%f853, %f852;
	sub.f32 	%f919, %f847, %f853;
	sub.s32 	%r7778, %r7778, %r400;
	mov.b32 	%r7777, %f919;
	setp.ne.s32 	%p204, %r7778, 0;
	setp.ne.s32 	%p205, %r7777, 0;
	and.pred  	%p206, %p204, %p205;
	@%p206 bra 	LBB0_107;
LBB0_108:                               // %__internal_fmodf_slowpath_mod.exit.i.i1322
	setp.gt.u32 	%p207, %r82, 2139095039;
	selp.f32 	%f854, 0f7FFFFFFF, 0f4B800000, %p207;
	mul.f32 	%f855, %f919, 0f34000000;
	mul.f32 	%f920, %f854, %f855;
	bra.uni 	LBB0_109;
LBB0_99:                                // %__nv_fast_fdividef.exit.i.i.i1292
	div.approx.f32 	%f838, %f920, %f185;
	cvt.rzi.f32.f32 	%f918, %f838;
	fma.rn.f32 	%f136, %f918, 0fC0000000, %f920;
	mov.b32 	%r81, %f136;
	setp.lt.u32 	%p198, %r81, 1073741824;
	@%p198 bra 	LBB0_104;
// %bb.100:
	setp.lt.u32 	%p199, %r81, -2147483647;
	@%p199 bra 	LBB0_102;
// %bb.101:
	add.f32 	%f843, %f918, 0fBF800000;
	setp.lt.f32 	%p202, %f136, 0fC0000000;
	add.f32 	%f844, %f843, 0fBF800000;
	selp.f32 	%f918, %f844, %f843, %p202;
	bra.uni 	LBB0_104;
LBB0_102:
	add.f32 	%f918, %f918, 0f3F800000;
	setp.ltu.f32 	%p200, %f136, 0f40800000;
	@%p200 bra 	LBB0_104;
// %bb.103:                             // %__nv_fmaf_rn.exit.i.i.i1297
	add.f32 	%f839, %f918, 0f3F800000;
	fma.rn.f32 	%f841, %f185, 0fC0400000, %f136;
	setp.ge.f32 	%p201, %f841, 0f00000000;
	add.f32 	%f842, %f839, 0f3F800000;
	selp.f32 	%f918, %f842, %f839, %p201;
LBB0_104:                               // %__internal_fmodf_fastpath_quot.exit.i.i1301
	fma.rn.f32 	%f920, %f918, 0fC0000000, %f920;
LBB0_109:                               // %__internal_fmodf_kernel.exit.i1326
	mov.b32 	%r197, %f255;
	mov.b32 	%r196, %f6;
	mov.b32 	%r215, %f324;
	mov.b32 	%r214, %f15;
	mov.b32 	%r233, %f393;
	mov.b32 	%r232, %f24;
	mov.b32 	%r251, %f461;
	mov.b32 	%r250, %f33;
	mov.b32 	%r279, %f569;
	mov.b32 	%r278, %f56;
	mov.b32 	%r282, %f566;
	mov.b32 	%r281, %f55;
	xor.b32  	%r324, %r327, -2147483648;
	xor.b32  	%r323, %r326, -2147483648;
	mov.b32 	%r365, %f781;
	mov.b32 	%r364, %f166;
	mov.b32 	%r368, %f778;
	mov.b32 	%r367, %f165;
	and.b32  	%r10, %r2, 16;
	selp.f32 	%f132, %f834, %f830, %p195;
	abs.f32 	%f856, %f920;
	setp.gtu.f32 	%p208, %f856, 0f7F800000;
	@%p208 bra 	LBB0_111;
// %bb.110:
	mov.b32 	%r402, %f133;
	and.b32  	%r403, %r402, -2147483648;
	mov.b32 	%r404, %f920;
	or.b32  	%r405, %r403, %r404;
	mov.b32 	%f920, %r405;
LBB0_111:                               // %__nv_fmodf.exit1327
	ld.param.u64 	%rd2, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_3];
	ld.param.u64 	%rd3, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_4];
	// begin inline asm
	cvt.rn.f16x2.f32 %r195, %r197, %r196;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r213, %r215, %r214;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r231, %r233, %r232;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r249, %r251, %r250;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r277, %r279, %r278;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r280, %r282, %r281;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r319, %r321, %r320;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r322, %r324, %r323;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r325, %r327, %r326;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r328, %r321, %r320;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r363, %r365, %r364;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r366, %r368, %r367;
	// end inline asm
	add.f32 	%f857, %f920, %f920;
	mov.b32 	%r419, %f857;
	and.b32  	%r420, %r419, -2147483648;
	or.b32  	%r421, %r420, 1056964608;
	mov.b32 	%f858, %r421;
	add.f32 	%f859, %f857, %f858;
	cvt.rzi.f32.f32 	%f860, %f859;
	abs.f32 	%f861, %f857;
	setp.gt.f32 	%p209, %f861, 0f4B000000;
	selp.f32 	%f862, %f857, %f860, %p209;
	cvt.rzi.f32.f32 	%f863, %f857;
	setp.lt.f32 	%p210, %f861, 0f3F000000;
	selp.f32 	%f864, %f863, %f862, %p210;
	cvt.rzi.s32.f32 	%r422, %f864;
	fma.rn.f32 	%f865, %f864, 0fBF000000, %f920;
	mul.f32 	%f866, %f865, 0f34222169;
	fma.rn.f32 	%f867, %f865, 0f40490FDA, %f866;
	mul.f32 	%f868, %f867, %f867;
	fma.rn.f32 	%f869, %f868, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f870, %f869, %f868, 0f3D2AAABB;
	fma.rn.f32 	%f871, %f870, %f868, 0fBEFFFFFF;
	fma.rn.f32 	%f872, %f871, %f868, 0f3F800000;
	fma.rn.f32 	%f873, %f868, %f867, 0f00000000;
	fma.rn.f32 	%f874, %f868, 0fB94D4153, 0f3C0885E4;
	fma.rn.f32 	%f875, %f874, %f868, 0fBE2AAAA8;
	fma.rn.f32 	%f876, %f875, %f873, %f867;
	and.b32  	%r423, %r422, 1;
	setp.eq.b32 	%p211, %r423, 1;
	selp.f32 	%f877, %f872, %f876, %p211;
	selp.f32 	%f878, %f876, %f872, %p211;
	and.b32  	%r424, %r422, 2;
	setp.eq.s32 	%p212, %r424, 0;
	neg.f32 	%f879, %f877;
	selp.f32 	%f880, %f877, %f879, %p212;
	add.s32 	%r425, %r422, 1;
	and.b32  	%r426, %r425, 2;
	setp.eq.s32 	%p213, %r426, 0;
	sub.f32 	%f882, %f214, %f878;
	selp.f32 	%f883, %f878, %f882, %p213;
	cvt.rzi.f32.f32 	%f884, %f920;
	setp.eq.f32 	%p214, %f884, %f920;
	mul.f32 	%f885, %f920, 0f00000000;
	selp.f32 	%f886, %f885, %f880, %p214;
	abs.f32 	%f887, %f920;
	setp.gt.f32 	%p215, %f887, 0f4B800000;
	add.f32 	%f888, %f886, 0f3F800000;
	selp.f32 	%f889, %f888, %f883, %p215;
	mov.b32 	%r408, %f889;
	mov.b32 	%r407, %f132;
	// begin inline asm
	cvt.rn.f16x2.f32 %r89, %r408, %r407;
	// end inline asm
	mov.b32 	%r414, %f886;
	xor.b32  	%r411, %r414, -2147483648;
	mov.b32 	%r413, %f131;
	xor.b32  	%r410, %r413, -2147483648;
	// begin inline asm
	cvt.rn.f16x2.f32 %r90, %r411, %r410;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r91, %r414, %r413;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r92, %r408, %r407;
	// end inline asm
	shl.b32 	%r427, %r1, 7;
	shl.b32 	%r428, %r2, 4;
	and.b32  	%r429, %r428, 112;
	and.b32  	%r430, %r427, 384;
	or.b32  	%r431, %r430, %r429;
	and.b32  	%r432, %r427, 512;
	or.b32  	%r433, %r10, %r3;
	or.b32  	%r93, %r433, %r8;
	or.b32  	%r94, %r431, %r432;
	and.b32  	%r95, %r2, 8;
	mul.lo.s32 	%r434, %r18, 65;
	bfe.u32 	%r435, %r3, 2, 1;
	and.b32  	%r436, %r3, 1;
	shr.u32 	%r437, %r3, 1;
	bfe.u32 	%r438, %r3, 1, 1;
	shr.u32 	%r439, %r3, 3;
	or.b32  	%r440, %r95, %r428;
	shr.u32 	%r441, %r440, 2;
	and.b32  	%r442, %r441, 30;
	mad.lo.s32 	%r443, %r436, 1040, %r434;
	mad.lo.s32 	%r444, %r439, 130, %r443;
	mad.lo.s32 	%r445, %r435, 260, %r444;
	mad.lo.s32 	%r446, %r438, 520, %r445;
	add.s32 	%r447, %r446, %r442;
	mul.wide.u32 	%rd63, %r447, 4;
	mov.u64 	%rd64, shmem;
	add.s64 	%rd5, %rd64, %rd63;
	add.s32 	%r448, %r447, 32;
	mul.wide.u32 	%rd65, %r448, 4;
	add.s64 	%rd6, %rd64, %rd65;
	add.s32 	%r449, %r447, 1;
	mul.wide.u32 	%rd66, %r449, 4;
	add.s64 	%rd7, %rd64, %rd66;
	add.s32 	%r450, %r447, 33;
	mul.wide.u32 	%rd67, %r450, 4;
	add.s64 	%rd8, %rd64, %rd67;
	mul.lo.s32 	%r451, %r14, 65;
	mul.lo.s32 	%r452, %r17, 260;
	mul.lo.s32 	%r453, %r20, 1040;
	mul.lo.s32 	%r454, %r18, 520;
	and.b32  	%r455, %r4, 32;
	mul.lo.s32 	%r456, %r15, 130;
	or.b32  	%r457, %r454, %r437;
	add.s32 	%r458, %r457, %r455;
	add.s32 	%r459, %r458, %r456;
	add.s32 	%r460, %r459, %r452;
	add.s32 	%r461, %r460, %r451;
	add.s32 	%r462, %r461, %r453;
	or.b32  	%r463, %r437, 8;
	add.s32 	%r464, %r455, %r454;
	add.s32 	%r465, %r464, %r456;
	add.s32 	%r466, %r465, %r463;
	add.s32 	%r467, %r466, %r452;
	add.s32 	%r468, %r467, %r451;
	add.s32 	%r469, %r468, %r453;
	or.b32  	%r470, %r437, 16;
	add.s32 	%r471, %r465, %r470;
	add.s32 	%r472, %r471, %r452;
	add.s32 	%r473, %r472, %r451;
	add.s32 	%r474, %r473, %r453;
	or.b32  	%r475, %r437, 24;
	add.s32 	%r476, %r465, %r475;
	add.s32 	%r477, %r476, %r452;
	add.s32 	%r478, %r477, %r451;
	add.s32 	%r479, %r478, %r453;
	shl.b32 	%r480, %r1, 3;
	and.b32  	%r481, %r480, 960;
	or.b32  	%r482, %r11, %r8;
	or.b32  	%r483, %r482, %r7;
	or.b32  	%r484, %r483, %r9;
	shr.u32 	%r485, %r484, 1;
	mul.lo.s32 	%r486, %r485, 65;
	or.b32  	%r487, %r455, %r437;
	add.s32 	%r488, %r487, %r486;
	or.b32  	%r489, %r463, %r455;
	add.s32 	%r490, %r489, %r486;
	or.b32  	%r491, %r470, %r455;
	add.s32 	%r492, %r491, %r486;
	or.b32  	%r493, %r475, %r455;
	add.s32 	%r494, %r493, %r486;
	shl.b32 	%r495, %r3, 1;
	or.b32  	%r496, %r18, %r495;
	mul.lo.s32 	%r497, %r496, 65;
	add.s32 	%r498, %r442, %r497;
	mul.wide.u32 	%rd68, %r498, 4;
	add.s64 	%rd9, %rd64, %rd68;
	cvt.u64.u32 	%rd69, %r442;
	cvt.u64.u32 	%rd70, %r497;
	add.s64 	%rd71, %rd70, %rd69;
	shl.b64 	%rd72, %rd71, 2;
	add.s64 	%rd10, %rd64, %rd72;
	shl.b32 	%r499, %r3, 10;
	and.b32  	%r500, %r6, 28;
	shl.b32 	%r501, %r1, 5;
	and.b32  	%r502, %r501, 96;
	or.b32  	%r503, %r502, %r500;
	and.b32  	%r504, %r501, 128;
	or.b32  	%r505, %r504, %r503;
	or.b32  	%r506, %r481, %r19;
	shl.b32 	%r507, %r506, 8;
	or.b32  	%r508, %r499, %r507;
	or.b32  	%r509, %r505, %r508;
	or.b32  	%r96, %r509, -786432;
	mul.wide.u32 	%rd11, %r494, 4;
	mul.wide.u32 	%rd12, %r492, 4;
	mul.wide.u32 	%rd13, %r490, 4;
	mul.wide.u32 	%rd14, %r488, 4;
	mul.wide.u32 	%rd15, %r479, 4;
	mul.wide.u32 	%rd16, %r474, 4;
	mul.wide.u32 	%rd17, %r469, 4;
	mul.wide.u32 	%rd18, %r462, 4;
	mov.u32 	%r7793, 0;
	setp.eq.s32 	%p216, %r95, 0;
	mov.u16 	%rs1176, 25600;
	mov.u16 	%rs1072, 21504;
	mov.u16 	%rs1184, 18432;
	mov.u16 	%rs1142, -14592;
	mov.u32 	%r7794, %r7793;
	mov.u32 	%r7795, %r7793;
	mov.u32 	%r7796, %r7793;
	mov.u32 	%r7797, %r7793;
	mov.u32 	%r7798, %r7793;
	mov.u32 	%r7799, %r7793;
	mov.u32 	%r7800, %r7793;
	mov.u32 	%r7801, %r7793;
	mov.u32 	%r7802, %r7793;
	mov.u32 	%r7803, %r7793;
	mov.u32 	%r7804, %r7793;
	mov.u32 	%r7791, %r7793;
	bra.uni 	LBB0_112;
LBB0_116:                               // %L29334
                                        //   in Loop: Header=BB0_112 Depth=1
	add.s32 	%r7791, %r109, 256;
	setp.gt.s32 	%p221, %r5, %r7791;
	setp.ne.s32 	%p222, %r109, 32512;
	and.pred  	%p223, %p222, %p221;
	@%p223 bra 	LBB0_112;
	bra.uni 	LBB0_117;
LBB0_112:                               // %L1246
                                        // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_113 Depth 2
	mov.u32 	%r109, %r7791;
	or.b32  	%r527, %r93, %r109;
	shl.b32 	%r528, %r527, 14;
	or.b32  	%r529, %r94, %r528;
	cvt.u64.u32 	%rd74, %r529;
	add.s64 	%rd75, %rd2, %rd74;
	ld.global.v4.u32 	{%r530, %r531, %r532, %r533}, [%rd75];
	selp.b32 	%r534, %r532, %r530, %p216;
	shfl.sync.bfly.b32	%r535, %r534, 8, 31, -1;
	selp.b32 	%r511, %r530, %r535, %p216;
	selp.b32 	%r512, %r535, %r532, %p216;
	selp.b32 	%r536, %r533, %r531, %p216;
	shfl.sync.bfly.b32	%r537, %r536, 8, 31, -1;
	selp.b32 	%r519, %r531, %r537, %p216;
	selp.b32 	%r520, %r537, %r533, %p216;
	mov.u32 	%r521, 21520;
	// begin inline asm
	prmt.b32 %r510, %r511, %r512, %r521;
	// end inline asm
	mov.u32 	%r525, 30258;
	// begin inline asm
	prmt.b32 %r514, %r511, %r512, %r525;
	// end inline asm
	// begin inline asm
	prmt.b32 %r518, %r519, %r520, %r521;
	// end inline asm
	// begin inline asm
	prmt.b32 %r522, %r519, %r520, %r525;
	// end inline asm
	st.shared.u32 	[%rd5], %r510;
	st.shared.u32 	[%rd6], %r514;
	st.shared.u32 	[%rd7], %r518;
	st.shared.u32 	[%rd8], %r522;
	bar.sync 	0;
	mov.u32 	%r7792, 256;
	mov.u64 	%rd86, %rd64;
LBB0_113:                               // %L4370
                                        //   Parent Loop BB0_112 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	add.s64 	%rd76, %rd86, %rd18;
	ld.shared.u32 	%r7722, [%rd76];
	add.s64 	%rd77, %rd86, %rd17;
	ld.shared.u32 	%r7723, [%rd77];
	add.s64 	%rd78, %rd86, %rd16;
	ld.shared.u32 	%r7724, [%rd78];
	add.s64 	%rd79, %rd86, %rd15;
	ld.shared.u32 	%r7725, [%rd79];
	// begin inline asm
	mov.b32 %r543, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r554, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r542, %r7722, -2004318072;
	mov.u32 	%r541, 983055;
	// begin inline asm
	lop3.b32 %r540, %r541, %r542, %r543, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r544, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r545, %r543, %r544;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r548, %r540, %r545;
	// end inline asm
	mov.u32 	%r552, 15728880;
	// begin inline asm
	lop3.b32 %r551, %r552, %r542, %r554, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r555, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r556, %r554, %r555;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r559, %r551, %r556;
	// end inline asm
	shr.u32 	%r564, %r542, 8;
	// begin inline asm
	lop3.b32 %r562, %r541, %r564, %r543, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r566, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r567, %r543, %r566;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r570, %r562, %r567;
	// end inline asm
	// begin inline asm
	lop3.b32 %r573, %r552, %r564, %r554, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r577, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r578, %r554, %r577;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r581, %r573, %r578;
	// end inline asm
	// begin inline asm
	mov.b32 %r589, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r600, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r588, %r7723, -2004318072;
	// begin inline asm
	lop3.b32 %r586, %r541, %r588, %r589, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r590, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r591, %r589, %r590;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r594, %r586, %r591;
	// end inline asm
	// begin inline asm
	lop3.b32 %r597, %r552, %r588, %r600, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r601, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r602, %r600, %r601;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r605, %r597, %r602;
	// end inline asm
	shr.u32 	%r610, %r588, 8;
	// begin inline asm
	lop3.b32 %r608, %r541, %r610, %r589, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r612, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r613, %r589, %r612;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r616, %r608, %r613;
	// end inline asm
	// begin inline asm
	lop3.b32 %r619, %r552, %r610, %r600, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r623, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r624, %r600, %r623;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r627, %r619, %r624;
	// end inline asm
	// begin inline asm
	mov.b32 %r635, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r646, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r634, %r7724, -2004318072;
	// begin inline asm
	lop3.b32 %r632, %r541, %r634, %r635, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r636, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r637, %r635, %r636;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r640, %r632, %r637;
	// end inline asm
	// begin inline asm
	lop3.b32 %r643, %r552, %r634, %r646, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r647, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r648, %r646, %r647;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r651, %r643, %r648;
	// end inline asm
	shr.u32 	%r656, %r634, 8;
	// begin inline asm
	lop3.b32 %r654, %r541, %r656, %r635, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r658, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r659, %r635, %r658;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r662, %r654, %r659;
	// end inline asm
	// begin inline asm
	lop3.b32 %r665, %r552, %r656, %r646, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r669, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r670, %r646, %r669;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r673, %r665, %r670;
	// end inline asm
	// begin inline asm
	mov.b32 %r681, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r692, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r680, %r7725, -2004318072;
	// begin inline asm
	lop3.b32 %r678, %r541, %r680, %r681, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r682, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r683, %r681, %r682;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r686, %r678, %r683;
	// end inline asm
	// begin inline asm
	lop3.b32 %r689, %r552, %r680, %r692, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r693, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r694, %r692, %r693;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r697, %r689, %r694;
	// end inline asm
	shr.u32 	%r702, %r680, 8;
	// begin inline asm
	lop3.b32 %r700, %r541, %r702, %r681, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r704, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r705, %r681, %r704;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r708, %r700, %r705;
	// end inline asm
	// begin inline asm
	lop3.b32 %r711, %r552, %r702, %r692, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r715, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r716, %r692, %r715;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r719, %r711, %r716;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r722, %r249;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r724, %r722, %r548;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r727, %r249;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r729, %r727, %r559;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r732, %r249;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r734, %r732, %r570;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r737, %r249;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r739, %r737, %r581;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r742, %r249;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r744, %r742, %r594;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r747, %r249;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r749, %r747, %r605;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r752, %r249;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r754, %r752, %r616;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r757, %r249;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r759, %r757, %r627;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r762, %r249;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r764, %r762, %r640;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r767, %r249;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r769, %r767, %r651;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r772, %r249;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r774, %r772, %r662;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r777, %r249;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r779, %r777, %r673;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r782, %r249;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r784, %r782, %r686;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r787, %r249;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r789, %r787, %r697;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r792, %r249;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r794, %r792, %r708;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r797, %r249;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r799, %r797, %r719;
	// end inline asm
	// begin inline asm
	mov.b32 %r807, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r818, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r806, %r7793, -2004318072;
	// begin inline asm
	lop3.b32 %r804, %r541, %r806, %r807, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r808, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r809, %r807, %r808;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r812, %r804, %r809;
	// end inline asm
	// begin inline asm
	lop3.b32 %r815, %r552, %r806, %r818, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r819, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r820, %r818, %r819;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r823, %r815, %r820;
	// end inline asm
	shr.u32 	%r828, %r806, 8;
	// begin inline asm
	lop3.b32 %r826, %r541, %r828, %r807, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r830, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r831, %r807, %r830;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r834, %r826, %r831;
	// end inline asm
	// begin inline asm
	lop3.b32 %r837, %r552, %r828, %r818, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r841, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r842, %r818, %r841;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r845, %r837, %r842;
	// end inline asm
	// begin inline asm
	mov.b32 %r853, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r864, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r852, %r7794, -2004318072;
	// begin inline asm
	lop3.b32 %r850, %r541, %r852, %r853, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r854, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r855, %r853, %r854;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r858, %r850, %r855;
	// end inline asm
	// begin inline asm
	lop3.b32 %r861, %r552, %r852, %r864, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r865, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r866, %r864, %r865;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r869, %r861, %r866;
	// end inline asm
	shr.u32 	%r874, %r852, 8;
	// begin inline asm
	lop3.b32 %r872, %r541, %r874, %r853, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r876, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r877, %r853, %r876;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r880, %r872, %r877;
	// end inline asm
	// begin inline asm
	lop3.b32 %r883, %r552, %r874, %r864, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r887, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r888, %r864, %r887;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r891, %r883, %r888;
	// end inline asm
	// begin inline asm
	mov.b32 %r899, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r910, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r898, %r7795, -2004318072;
	// begin inline asm
	lop3.b32 %r896, %r541, %r898, %r899, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r900, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r901, %r899, %r900;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r904, %r896, %r901;
	// end inline asm
	// begin inline asm
	lop3.b32 %r907, %r552, %r898, %r910, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r911, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r912, %r910, %r911;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r915, %r907, %r912;
	// end inline asm
	shr.u32 	%r920, %r898, 8;
	// begin inline asm
	lop3.b32 %r918, %r541, %r920, %r899, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r922, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r923, %r899, %r922;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r926, %r918, %r923;
	// end inline asm
	// begin inline asm
	lop3.b32 %r929, %r552, %r920, %r910, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r933, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r934, %r910, %r933;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r937, %r929, %r934;
	// end inline asm
	// begin inline asm
	mov.b32 %r945, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r956, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r944, %r7796, -2004318072;
	// begin inline asm
	lop3.b32 %r942, %r541, %r944, %r945, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r946, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r947, %r945, %r946;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r950, %r942, %r947;
	// end inline asm
	// begin inline asm
	lop3.b32 %r953, %r552, %r944, %r956, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r957, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r958, %r956, %r957;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r961, %r953, %r958;
	// end inline asm
	shr.u32 	%r966, %r944, 8;
	// begin inline asm
	lop3.b32 %r964, %r541, %r966, %r945, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r968, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r969, %r945, %r968;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r972, %r964, %r969;
	// end inline asm
	// begin inline asm
	lop3.b32 %r975, %r552, %r966, %r956, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r979, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r980, %r956, %r979;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r983, %r975, %r980;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r986, %r195, %r812, %r724;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r990, %r195, %r823, %r729;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r994, %r195, %r834, %r734;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r998, %r195, %r845, %r739;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1002, %r195, %r858, %r744;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1006, %r195, %r869, %r749;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1010, %r195, %r880, %r754;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1014, %r195, %r891, %r759;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1018, %r195, %r904, %r764;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1022, %r195, %r915, %r769;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1026, %r195, %r926, %r774;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1030, %r195, %r937, %r779;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1034, %r195, %r950, %r784;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1038, %r195, %r961, %r789;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1042, %r195, %r972, %r794;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1046, %r195, %r983, %r799;
	// end inline asm
	// begin inline asm
	mov.b32 %r1055, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1066, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1054, %r7797, -2004318072;
	// begin inline asm
	lop3.b32 %r1052, %r541, %r1054, %r1055, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1056, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1057, %r1055, %r1056;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1060, %r1052, %r1057;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1063, %r552, %r1054, %r1066, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1067, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1068, %r1066, %r1067;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1071, %r1063, %r1068;
	// end inline asm
	shr.u32 	%r1076, %r1054, 8;
	// begin inline asm
	lop3.b32 %r1074, %r541, %r1076, %r1055, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1078, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1079, %r1055, %r1078;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1082, %r1074, %r1079;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1085, %r552, %r1076, %r1066, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1089, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1090, %r1066, %r1089;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1093, %r1085, %r1090;
	// end inline asm
	// begin inline asm
	mov.b32 %r1101, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1112, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1100, %r7798, -2004318072;
	// begin inline asm
	lop3.b32 %r1098, %r541, %r1100, %r1101, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1102, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1103, %r1101, %r1102;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1106, %r1098, %r1103;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1109, %r552, %r1100, %r1112, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1113, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1114, %r1112, %r1113;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1117, %r1109, %r1114;
	// end inline asm
	shr.u32 	%r1122, %r1100, 8;
	// begin inline asm
	lop3.b32 %r1120, %r541, %r1122, %r1101, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1124, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1125, %r1101, %r1124;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1128, %r1120, %r1125;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1131, %r552, %r1122, %r1112, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1135, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1136, %r1112, %r1135;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1139, %r1131, %r1136;
	// end inline asm
	// begin inline asm
	mov.b32 %r1147, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1158, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1146, %r7799, -2004318072;
	// begin inline asm
	lop3.b32 %r1144, %r541, %r1146, %r1147, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1148, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1149, %r1147, %r1148;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1152, %r1144, %r1149;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1155, %r552, %r1146, %r1158, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1159, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1160, %r1158, %r1159;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1163, %r1155, %r1160;
	// end inline asm
	shr.u32 	%r1168, %r1146, 8;
	// begin inline asm
	lop3.b32 %r1166, %r541, %r1168, %r1147, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1170, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1171, %r1147, %r1170;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1174, %r1166, %r1171;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1177, %r552, %r1168, %r1158, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1181, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1182, %r1158, %r1181;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1185, %r1177, %r1182;
	// end inline asm
	// begin inline asm
	mov.b32 %r1193, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1204, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1192, %r7800, -2004318072;
	// begin inline asm
	lop3.b32 %r1190, %r541, %r1192, %r1193, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1194, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1195, %r1193, %r1194;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1198, %r1190, %r1195;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1201, %r552, %r1192, %r1204, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1205, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1206, %r1204, %r1205;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1209, %r1201, %r1206;
	// end inline asm
	shr.u32 	%r1214, %r1192, 8;
	// begin inline asm
	lop3.b32 %r1212, %r541, %r1214, %r1193, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1216, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1217, %r1193, %r1216;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1220, %r1212, %r1217;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1223, %r552, %r1214, %r1204, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1227, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1228, %r1204, %r1227;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1231, %r1223, %r1228;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1234, %r213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1236, %r1234, %r1060, %r986;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1240, %r213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1242, %r1240, %r1071, %r990;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1246, %r213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1248, %r1246, %r1082, %r994;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1252, %r213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1254, %r1252, %r1093, %r998;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1258, %r213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1260, %r1258, %r1106, %r1002;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1264, %r213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1266, %r1264, %r1117, %r1006;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1270, %r213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1272, %r1270, %r1128, %r1010;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1276, %r213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1278, %r1276, %r1139, %r1014;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1282, %r213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1284, %r1282, %r1152, %r1018;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1288, %r213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1290, %r1288, %r1163, %r1022;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1294, %r213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1296, %r1294, %r1174, %r1026;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1300, %r213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1302, %r1300, %r1185, %r1030;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1306, %r213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1308, %r1306, %r1198, %r1034;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1312, %r213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1314, %r1312, %r1209, %r1038;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1318, %r213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1320, %r1318, %r1220, %r1042;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1324, %r213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1326, %r1324, %r1231, %r1046;
	// end inline asm
	// begin inline asm
	mov.b32 %r1335, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1346, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1334, %r7801, -2004318072;
	// begin inline asm
	lop3.b32 %r1332, %r541, %r1334, %r1335, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1336, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1337, %r1335, %r1336;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1340, %r1332, %r1337;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1343, %r552, %r1334, %r1346, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1347, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1348, %r1346, %r1347;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1351, %r1343, %r1348;
	// end inline asm
	shr.u32 	%r1356, %r1334, 8;
	// begin inline asm
	lop3.b32 %r1354, %r541, %r1356, %r1335, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1358, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1359, %r1335, %r1358;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1362, %r1354, %r1359;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1365, %r552, %r1356, %r1346, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1369, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1370, %r1346, %r1369;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1373, %r1365, %r1370;
	// end inline asm
	// begin inline asm
	mov.b32 %r1381, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1392, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1380, %r7802, -2004318072;
	// begin inline asm
	lop3.b32 %r1378, %r541, %r1380, %r1381, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1382, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1383, %r1381, %r1382;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1386, %r1378, %r1383;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1389, %r552, %r1380, %r1392, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1393, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1394, %r1392, %r1393;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1397, %r1389, %r1394;
	// end inline asm
	shr.u32 	%r1402, %r1380, 8;
	// begin inline asm
	lop3.b32 %r1400, %r541, %r1402, %r1381, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1404, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1405, %r1381, %r1404;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1408, %r1400, %r1405;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1411, %r552, %r1402, %r1392, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1415, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1416, %r1392, %r1415;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1419, %r1411, %r1416;
	// end inline asm
	// begin inline asm
	mov.b32 %r1427, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1438, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1426, %r7803, -2004318072;
	// begin inline asm
	lop3.b32 %r1424, %r541, %r1426, %r1427, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1428, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1429, %r1427, %r1428;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1432, %r1424, %r1429;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1435, %r552, %r1426, %r1438, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1439, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1440, %r1438, %r1439;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1443, %r1435, %r1440;
	// end inline asm
	shr.u32 	%r1448, %r1426, 8;
	// begin inline asm
	lop3.b32 %r1446, %r541, %r1448, %r1427, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1450, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1451, %r1427, %r1450;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1454, %r1446, %r1451;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1457, %r552, %r1448, %r1438, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1461, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1462, %r1438, %r1461;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1465, %r1457, %r1462;
	// end inline asm
	// begin inline asm
	mov.b32 %r1473, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1484, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1472, %r7804, -2004318072;
	// begin inline asm
	lop3.b32 %r1470, %r541, %r1472, %r1473, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1474, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1475, %r1473, %r1474;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1478, %r1470, %r1475;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1481, %r552, %r1472, %r1484, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1485, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1486, %r1484, %r1485;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1489, %r1481, %r1486;
	// end inline asm
	shr.u32 	%r1494, %r1472, 8;
	// begin inline asm
	lop3.b32 %r1492, %r541, %r1494, %r1473, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1496, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1497, %r1473, %r1496;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1500, %r1492, %r1497;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1503, %r552, %r1494, %r1484, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1507, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1508, %r1484, %r1507;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1511, %r1503, %r1508;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1585, %r231, %r1340, %r1236;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1582, %r231, %r1351, %r1242;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1594, %r231, %r1362, %r1248;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1591, %r231, %r1373, %r1254;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1603, %r231, %r1386, %r1260;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1600, %r231, %r1397, %r1266;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1612, %r231, %r1408, %r1272;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1609, %r231, %r1419, %r1278;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1621, %r231, %r1432, %r1284;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1618, %r231, %r1443, %r1290;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1630, %r231, %r1454, %r1296;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1627, %r231, %r1465, %r1302;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1639, %r231, %r1478, %r1308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1636, %r231, %r1489, %r1314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1648, %r231, %r1500, %r1320;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1645, %r231, %r1511, %r1326;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1578, %r280;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1580, %r1578, %r1582;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1583, %r277, %r1585, %r1580;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1587, %r280;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1589, %r1587, %r1591;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1592, %r277, %r1594, %r1589;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1596, %r280;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1598, %r1596, %r1600;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1601, %r277, %r1603, %r1598;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1605, %r280;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1607, %r1605, %r1609;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1610, %r277, %r1612, %r1607;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1614, %r280;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1616, %r1614, %r1618;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1619, %r277, %r1621, %r1616;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1623, %r280;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1625, %r1623, %r1627;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1628, %r277, %r1630, %r1625;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1632, %r280;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1634, %r1632, %r1636;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1637, %r277, %r1639, %r1634;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1641, %r280;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1643, %r1641, %r1645;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1646, %r277, %r1648, %r1643;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1650, %r280, %r1585;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1653, %r277, %r1582, %r1650;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1657, %r280, %r1594;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1660, %r277, %r1591, %r1657;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1664, %r280, %r1603;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1667, %r277, %r1600, %r1664;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1671, %r280, %r1612;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1674, %r277, %r1609, %r1671;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1678, %r280, %r1621;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1681, %r277, %r1618, %r1678;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1685, %r280, %r1630;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1688, %r277, %r1627, %r1685;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1692, %r280, %r1639;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1695, %r277, %r1636, %r1692;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1699, %r280, %r1648;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1702, %r277, %r1645, %r1699;
	// end inline asm
	mov.u32 	%r7381, 0;
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1793, %r1790}, {%r319, %r325, %r322, %r328}, {%r1583, %r1653}, {%r7381, %r7381};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1802, %r1799}, {%r319, %r325, %r322, %r328}, {%r1592, %r1660}, {%r7381, %r7381};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1811, %r1808}, {%r319, %r325, %r322, %r328}, {%r1601, %r1667}, {%r7381, %r7381};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1820, %r1817}, {%r319, %r325, %r322, %r328}, {%r1610, %r1674}, {%r7381, %r7381};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1829, %r1826}, {%r319, %r325, %r322, %r328}, {%r1619, %r1681}, {%r7381, %r7381};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1838, %r1835}, {%r319, %r325, %r322, %r328}, {%r1628, %r1688}, {%r7381, %r7381};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1847, %r1844}, {%r319, %r325, %r322, %r328}, {%r1637, %r1695}, {%r7381, %r7381};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1856, %r1853}, {%r319, %r325, %r322, %r328}, {%r1646, %r1702}, {%r7381, %r7381};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1786, %r366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1788, %r1786, %r1790;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1791, %r363, %r1793, %r1788;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1795, %r366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1797, %r1795, %r1799;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1800, %r363, %r1802, %r1797;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1804, %r366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1806, %r1804, %r1808;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1809, %r363, %r1811, %r1806;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1813, %r366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1815, %r1813, %r1817;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1818, %r363, %r1820, %r1815;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1822, %r366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1824, %r1822, %r1826;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1827, %r363, %r1829, %r1824;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1831, %r366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1833, %r1831, %r1835;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1836, %r363, %r1838, %r1833;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1840, %r366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1842, %r1840, %r1844;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1845, %r363, %r1847, %r1842;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1849, %r366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1851, %r1849, %r1853;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1854, %r363, %r1856, %r1851;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1858, %r366, %r1793;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1861, %r363, %r1790, %r1858;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1865, %r366, %r1802;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1868, %r363, %r1799, %r1865;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1872, %r366, %r1811;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1875, %r363, %r1808, %r1872;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1879, %r366, %r1820;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1882, %r363, %r1817, %r1879;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1886, %r366, %r1829;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1889, %r363, %r1826, %r1886;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1893, %r366, %r1838;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1896, %r363, %r1835, %r1893;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1900, %r366, %r1847;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1903, %r363, %r1844, %r1900;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1907, %r366, %r1856;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1910, %r363, %r1853, %r1907;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1914, %r1915}, {%r89, %r91, %r90, %r92}, {%r1791, %r1861}, {%r7381, %r7381};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1924, %r1925}, {%r89, %r91, %r90, %r92}, {%r1800, %r1868}, {%r7381, %r7381};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1934, %r1935}, {%r89, %r91, %r90, %r92}, {%r1809, %r1875}, {%r7381, %r7381};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1944, %r1945}, {%r89, %r91, %r90, %r92}, {%r1818, %r1882}, {%r7381, %r7381};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1954, %r1955}, {%r89, %r91, %r90, %r92}, {%r1827, %r1889}, {%r7381, %r7381};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1964, %r1965}, {%r89, %r91, %r90, %r92}, {%r1836, %r1896}, {%r7381, %r7381};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1974, %r1975}, {%r89, %r91, %r90, %r92}, {%r1845, %r1903}, {%r7381, %r7381};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1984, %r1985}, {%r89, %r91, %r90, %r92}, {%r1854, %r1910}, {%r7381, %r7381};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1994, %r12, %r1914;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1997, %r12, %r1915;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2000, %r12, %r1924;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2003, %r12, %r1925;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2006, %r12, %r1934;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2009, %r12, %r1935;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2012, %r12, %r1944;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2015, %r12, %r1945;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2018, %r12, %r1954;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2021, %r12, %r1955;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2024, %r12, %r1964;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2027, %r12, %r1965;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2030, %r12, %r1974;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2033, %r12, %r1975;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2036, %r12, %r1984;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2039, %r12, %r1985;
	// end inline asm
	// begin inline asm
	mov.b32 %r2042, {%rs1142, %rs1142};
	// end inline asm
	mov.u16 	%rs195, 18176;
	// begin inline asm
	mov.b32 %r2043, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2044, %r1994, %r2042;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2047, %r2044, %r2043;
	// end inline asm
	// begin inline asm
	mov.b32 %r2050, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2051, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2052, %r1997, %r2050;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2055, %r2052, %r2051;
	// end inline asm
	// begin inline asm
	mov.b32 %r2058, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2059, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2060, %r2000, %r2058;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2063, %r2060, %r2059;
	// end inline asm
	// begin inline asm
	mov.b32 %r2066, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2067, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2068, %r2003, %r2066;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2071, %r2068, %r2067;
	// end inline asm
	// begin inline asm
	mov.b32 %r2074, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2075, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2076, %r2006, %r2074;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2079, %r2076, %r2075;
	// end inline asm
	// begin inline asm
	mov.b32 %r2082, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2083, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2084, %r2009, %r2082;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2087, %r2084, %r2083;
	// end inline asm
	// begin inline asm
	mov.b32 %r2090, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2091, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2092, %r2012, %r2090;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2095, %r2092, %r2091;
	// end inline asm
	// begin inline asm
	mov.b32 %r2098, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2099, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2100, %r2015, %r2098;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2103, %r2100, %r2099;
	// end inline asm
	// begin inline asm
	mov.b32 %r2106, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2107, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2108, %r2018, %r2106;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2111, %r2108, %r2107;
	// end inline asm
	// begin inline asm
	mov.b32 %r2114, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2115, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2116, %r2021, %r2114;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2119, %r2116, %r2115;
	// end inline asm
	// begin inline asm
	mov.b32 %r2122, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2123, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2124, %r2024, %r2122;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2127, %r2124, %r2123;
	// end inline asm
	// begin inline asm
	mov.b32 %r2130, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2131, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2132, %r2027, %r2130;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2135, %r2132, %r2131;
	// end inline asm
	// begin inline asm
	mov.b32 %r2138, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2139, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2140, %r2030, %r2138;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2143, %r2140, %r2139;
	// end inline asm
	// begin inline asm
	mov.b32 %r2146, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2147, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2148, %r2033, %r2146;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2151, %r2148, %r2147;
	// end inline asm
	// begin inline asm
	mov.b32 %r2154, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2155, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2156, %r2036, %r2154;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2159, %r2156, %r2155;
	// end inline asm
	// begin inline asm
	mov.b32 %r2162, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2163, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2164, %r2039, %r2162;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2167, %r2164, %r2163;
	// end inline asm
	// begin inline asm
	mov.b32 %r2173, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2171, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2172, %r2173, %r2171;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2175, %r2047, %r2172;
	// end inline asm
	// begin inline asm
	mov.b32 %r2178, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2179, %r2173, %r2178;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2182, %r2055, %r2179;
	// end inline asm
	// begin inline asm
	mov.b32 %r2185, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2186, %r2173, %r2185;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2189, %r2063, %r2186;
	// end inline asm
	// begin inline asm
	mov.b32 %r2192, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2193, %r2173, %r2192;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2196, %r2071, %r2193;
	// end inline asm
	mov.u32 	%r2202, 25152;
	// begin inline asm
	prmt.b32 %r2199, %r2175, %r2189, %r2202;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2203, %r2182, %r2196, %r2202;
	// end inline asm
	shl.b32 	%r2210, %r2203, 4;
	mov.u32 	%r2208, 252645135;
	// begin inline asm
	lop3.b32 %r2207, %r2208, %r2199, %r2210, 202;
	// end inline asm
	xor.b32  	%r7726, %r2207, -2004318072;
	// begin inline asm
	mov.b32 %r2214, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2212, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2213, %r2214, %r2212;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2216, %r2079, %r2213;
	// end inline asm
	// begin inline asm
	mov.b32 %r2219, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2220, %r2214, %r2219;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2223, %r2087, %r2220;
	// end inline asm
	// begin inline asm
	mov.b32 %r2226, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2227, %r2214, %r2226;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2230, %r2095, %r2227;
	// end inline asm
	// begin inline asm
	mov.b32 %r2233, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2234, %r2214, %r2233;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2237, %r2103, %r2234;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2240, %r2216, %r2230, %r2202;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2244, %r2223, %r2237, %r2202;
	// end inline asm
	shl.b32 	%r2251, %r2244, 4;
	// begin inline asm
	lop3.b32 %r2248, %r2208, %r2240, %r2251, 202;
	// end inline asm
	xor.b32  	%r7727, %r2248, -2004318072;
	// begin inline asm
	mov.b32 %r2255, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2253, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2254, %r2255, %r2253;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2257, %r2111, %r2254;
	// end inline asm
	// begin inline asm
	mov.b32 %r2260, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2261, %r2255, %r2260;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2264, %r2119, %r2261;
	// end inline asm
	// begin inline asm
	mov.b32 %r2267, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2268, %r2255, %r2267;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2271, %r2127, %r2268;
	// end inline asm
	// begin inline asm
	mov.b32 %r2274, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2275, %r2255, %r2274;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2278, %r2135, %r2275;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2281, %r2257, %r2271, %r2202;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2285, %r2264, %r2278, %r2202;
	// end inline asm
	shl.b32 	%r2292, %r2285, 4;
	// begin inline asm
	lop3.b32 %r2289, %r2208, %r2281, %r2292, 202;
	// end inline asm
	xor.b32  	%r7728, %r2289, -2004318072;
	// begin inline asm
	mov.b32 %r2296, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2294, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2295, %r2296, %r2294;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2298, %r2143, %r2295;
	// end inline asm
	// begin inline asm
	mov.b32 %r2301, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2302, %r2296, %r2301;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2305, %r2151, %r2302;
	// end inline asm
	// begin inline asm
	mov.b32 %r2308, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2309, %r2296, %r2308;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2312, %r2159, %r2309;
	// end inline asm
	// begin inline asm
	mov.b32 %r2315, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2316, %r2296, %r2315;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2319, %r2167, %r2316;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2322, %r2298, %r2312, %r2202;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2326, %r2305, %r2319, %r2202;
	// end inline asm
	shl.b32 	%r2333, %r2326, 4;
	// begin inline asm
	lop3.b32 %r2330, %r2208, %r2322, %r2333, 202;
	// end inline asm
	xor.b32  	%r7729, %r2330, -2004318072;
	add.s64 	%rd80, %rd86, %rd14;
	st.shared.u32 	[%rd80], %r7726;
	add.s64 	%rd81, %rd86, %rd13;
	st.shared.u32 	[%rd81], %r7727;
	add.s64 	%rd82, %rd86, %rd12;
	st.shared.u32 	[%rd82], %r7728;
	add.s64 	%rd83, %rd86, %rd11;
	st.shared.u32 	[%rd83], %r7729;
	ld.shared.u32 	%r7793, [%rd76];
	ld.shared.u32 	%r7794, [%rd77];
	ld.shared.u32 	%r7795, [%rd78];
	ld.shared.u32 	%r7796, [%rd79];
	// begin inline asm
	mov.b32 %r2339, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2350, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r2338, %r7793, -2004318072;
	// begin inline asm
	lop3.b32 %r2336, %r541, %r2338, %r2339, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2340, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2341, %r2339, %r2340;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2344, %r2336, %r2341;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2347, %r552, %r2338, %r2350, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2351, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2352, %r2350, %r2351;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2355, %r2347, %r2352;
	// end inline asm
	shr.u32 	%r2360, %r2338, 8;
	// begin inline asm
	lop3.b32 %r2358, %r541, %r2360, %r2339, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2362, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2363, %r2339, %r2362;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2366, %r2358, %r2363;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2369, %r552, %r2360, %r2350, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2373, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2374, %r2350, %r2373;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2377, %r2369, %r2374;
	// end inline asm
	// begin inline asm
	mov.b32 %r2385, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2396, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r2384, %r7794, -2004318072;
	// begin inline asm
	lop3.b32 %r2382, %r541, %r2384, %r2385, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2386, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2387, %r2385, %r2386;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2390, %r2382, %r2387;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2393, %r552, %r2384, %r2396, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2397, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2398, %r2396, %r2397;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2401, %r2393, %r2398;
	// end inline asm
	shr.u32 	%r2406, %r2384, 8;
	// begin inline asm
	lop3.b32 %r2404, %r541, %r2406, %r2385, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2408, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2409, %r2385, %r2408;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2412, %r2404, %r2409;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2415, %r552, %r2406, %r2396, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2419, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2420, %r2396, %r2419;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2423, %r2415, %r2420;
	// end inline asm
	// begin inline asm
	mov.b32 %r2431, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2442, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r2430, %r7795, -2004318072;
	// begin inline asm
	lop3.b32 %r2428, %r541, %r2430, %r2431, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2432, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2433, %r2431, %r2432;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2436, %r2428, %r2433;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2439, %r552, %r2430, %r2442, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2443, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2444, %r2442, %r2443;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2447, %r2439, %r2444;
	// end inline asm
	shr.u32 	%r2452, %r2430, 8;
	// begin inline asm
	lop3.b32 %r2450, %r541, %r2452, %r2431, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2454, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2455, %r2431, %r2454;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2458, %r2450, %r2455;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2461, %r552, %r2452, %r2442, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2465, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2466, %r2442, %r2465;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2469, %r2461, %r2466;
	// end inline asm
	// begin inline asm
	mov.b32 %r2477, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2488, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r2476, %r7796, -2004318072;
	// begin inline asm
	lop3.b32 %r2474, %r541, %r2476, %r2477, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2478, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2479, %r2477, %r2478;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2482, %r2474, %r2479;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2485, %r552, %r2476, %r2488, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2489, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2490, %r2488, %r2489;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2493, %r2485, %r2490;
	// end inline asm
	shr.u32 	%r2498, %r2476, 8;
	// begin inline asm
	lop3.b32 %r2496, %r541, %r2498, %r2477, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2500, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2501, %r2477, %r2500;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2504, %r2496, %r2501;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2507, %r552, %r2498, %r2488, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2511, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2512, %r2488, %r2511;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2515, %r2507, %r2512;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2518, %r249;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2520, %r2518, %r2344;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2523, %r249;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2525, %r2523, %r2355;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2528, %r249;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2530, %r2528, %r2366;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2533, %r249;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2535, %r2533, %r2377;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2538, %r249;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2540, %r2538, %r2390;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2543, %r249;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2545, %r2543, %r2401;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2548, %r249;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2550, %r2548, %r2412;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2553, %r249;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2555, %r2553, %r2423;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2558, %r249;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2560, %r2558, %r2436;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2563, %r249;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2565, %r2563, %r2447;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2568, %r249;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2570, %r2568, %r2458;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2573, %r249;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2575, %r2573, %r2469;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2578, %r249;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2580, %r2578, %r2482;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2583, %r249;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2585, %r2583, %r2493;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2588, %r249;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2590, %r2588, %r2504;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2593, %r249;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2595, %r2593, %r2515;
	// end inline asm
	// begin inline asm
	mov.b32 %r2603, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2614, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2600, %r541, %r1054, %r2603, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2604, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2605, %r2603, %r2604;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2608, %r2600, %r2605;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2611, %r552, %r1054, %r2614, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2615, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2616, %r2614, %r2615;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2619, %r2611, %r2616;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2622, %r541, %r1076, %r2603, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2626, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2627, %r2603, %r2626;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2630, %r2622, %r2627;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2633, %r552, %r1076, %r2614, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2637, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2638, %r2614, %r2637;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2641, %r2633, %r2638;
	// end inline asm
	// begin inline asm
	mov.b32 %r2649, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2660, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2646, %r541, %r1100, %r2649, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2650, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2651, %r2649, %r2650;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2654, %r2646, %r2651;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2657, %r552, %r1100, %r2660, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2661, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2662, %r2660, %r2661;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2665, %r2657, %r2662;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2668, %r541, %r1122, %r2649, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2672, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2673, %r2649, %r2672;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2676, %r2668, %r2673;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2679, %r552, %r1122, %r2660, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2683, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2684, %r2660, %r2683;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2687, %r2679, %r2684;
	// end inline asm
	// begin inline asm
	mov.b32 %r2695, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2706, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2692, %r541, %r1146, %r2695, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2696, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2697, %r2695, %r2696;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2700, %r2692, %r2697;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2703, %r552, %r1146, %r2706, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2707, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2708, %r2706, %r2707;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2711, %r2703, %r2708;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2714, %r541, %r1168, %r2695, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2718, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2719, %r2695, %r2718;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2722, %r2714, %r2719;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2725, %r552, %r1168, %r2706, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2729, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2730, %r2706, %r2729;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2733, %r2725, %r2730;
	// end inline asm
	// begin inline asm
	mov.b32 %r2741, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2752, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2738, %r541, %r1192, %r2741, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2742, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2743, %r2741, %r2742;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2746, %r2738, %r2743;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2749, %r552, %r1192, %r2752, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2753, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2754, %r2752, %r2753;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2757, %r2749, %r2754;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2760, %r541, %r1214, %r2741, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2764, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2765, %r2741, %r2764;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2768, %r2760, %r2765;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2771, %r552, %r1214, %r2752, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2775, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2776, %r2752, %r2775;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2779, %r2771, %r2776;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2782, %r195, %r2608, %r2520;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2786, %r195, %r2619, %r2525;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2790, %r195, %r2630, %r2530;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2794, %r195, %r2641, %r2535;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2798, %r195, %r2654, %r2540;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2802, %r195, %r2665, %r2545;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2806, %r195, %r2676, %r2550;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2810, %r195, %r2687, %r2555;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2814, %r195, %r2700, %r2560;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2818, %r195, %r2711, %r2565;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2822, %r195, %r2722, %r2570;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2826, %r195, %r2733, %r2575;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2830, %r195, %r2746, %r2580;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2834, %r195, %r2757, %r2585;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2838, %r195, %r2768, %r2590;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2842, %r195, %r2779, %r2595;
	// end inline asm
	// begin inline asm
	mov.b32 %r2851, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2862, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2848, %r541, %r1334, %r2851, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2852, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2853, %r2851, %r2852;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2856, %r2848, %r2853;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2859, %r552, %r1334, %r2862, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2863, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2864, %r2862, %r2863;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2867, %r2859, %r2864;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2870, %r541, %r1356, %r2851, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2874, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2875, %r2851, %r2874;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2878, %r2870, %r2875;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2881, %r552, %r1356, %r2862, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2885, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2886, %r2862, %r2885;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2889, %r2881, %r2886;
	// end inline asm
	// begin inline asm
	mov.b32 %r2897, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2908, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2894, %r541, %r1380, %r2897, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2898, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2899, %r2897, %r2898;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2902, %r2894, %r2899;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2905, %r552, %r1380, %r2908, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2909, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2910, %r2908, %r2909;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2913, %r2905, %r2910;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2916, %r541, %r1402, %r2897, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2920, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2921, %r2897, %r2920;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2924, %r2916, %r2921;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2927, %r552, %r1402, %r2908, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2931, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2932, %r2908, %r2931;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2935, %r2927, %r2932;
	// end inline asm
	// begin inline asm
	mov.b32 %r2943, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2954, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2940, %r541, %r1426, %r2943, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2944, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2945, %r2943, %r2944;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2948, %r2940, %r2945;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2951, %r552, %r1426, %r2954, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2955, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2956, %r2954, %r2955;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2959, %r2951, %r2956;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2962, %r541, %r1448, %r2943, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2966, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2967, %r2943, %r2966;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2970, %r2962, %r2967;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2973, %r552, %r1448, %r2954, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2977, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2978, %r2954, %r2977;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2981, %r2973, %r2978;
	// end inline asm
	// begin inline asm
	mov.b32 %r2989, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r3000, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2986, %r541, %r1472, %r2989, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2990, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2991, %r2989, %r2990;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2994, %r2986, %r2991;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2997, %r552, %r1472, %r3000, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3001, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3002, %r3000, %r3001;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3005, %r2997, %r3002;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3008, %r541, %r1494, %r2989, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3012, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3013, %r2989, %r3012;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3016, %r3008, %r3013;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3019, %r552, %r1494, %r3000, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3023, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3024, %r3000, %r3023;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3027, %r3019, %r3024;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3030, %r213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3032, %r3030, %r2856, %r2782;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3036, %r213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3038, %r3036, %r2867, %r2786;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3042, %r213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3044, %r3042, %r2878, %r2790;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3048, %r213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3050, %r3048, %r2889, %r2794;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3054, %r213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3056, %r3054, %r2902, %r2798;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3060, %r213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3062, %r3060, %r2913, %r2802;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3066, %r213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3068, %r3066, %r2924, %r2806;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3072, %r213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3074, %r3072, %r2935, %r2810;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3078, %r213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3080, %r3078, %r2948, %r2814;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3084, %r213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3086, %r3084, %r2959, %r2818;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3090, %r213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3092, %r3090, %r2970, %r2822;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3096, %r213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3098, %r3096, %r2981, %r2826;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3102, %r213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3104, %r3102, %r2994, %r2830;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3108, %r213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3110, %r3108, %r3005, %r2834;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3114, %r213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3116, %r3114, %r3016, %r2838;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3120, %r213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3122, %r3120, %r3027, %r2842;
	// end inline asm
	// begin inline asm
	mov.b32 %r3131, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r3142, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3128, %r541, %r542, %r3131, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3132, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3133, %r3131, %r3132;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3136, %r3128, %r3133;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3139, %r552, %r542, %r3142, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3143, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3144, %r3142, %r3143;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3147, %r3139, %r3144;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3150, %r541, %r564, %r3131, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3154, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3155, %r3131, %r3154;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3158, %r3150, %r3155;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3161, %r552, %r564, %r3142, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3165, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3166, %r3142, %r3165;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3169, %r3161, %r3166;
	// end inline asm
	// begin inline asm
	mov.b32 %r3177, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r3188, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3174, %r541, %r588, %r3177, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3178, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3179, %r3177, %r3178;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3182, %r3174, %r3179;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3185, %r552, %r588, %r3188, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3189, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3190, %r3188, %r3189;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3193, %r3185, %r3190;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3196, %r541, %r610, %r3177, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3200, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3201, %r3177, %r3200;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3204, %r3196, %r3201;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3207, %r552, %r610, %r3188, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3211, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3212, %r3188, %r3211;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3215, %r3207, %r3212;
	// end inline asm
	// begin inline asm
	mov.b32 %r3223, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r3234, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3220, %r541, %r634, %r3223, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3224, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3225, %r3223, %r3224;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3228, %r3220, %r3225;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3231, %r552, %r634, %r3234, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3235, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3236, %r3234, %r3235;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3239, %r3231, %r3236;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3242, %r541, %r656, %r3223, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3246, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3247, %r3223, %r3246;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3250, %r3242, %r3247;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3253, %r552, %r656, %r3234, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3257, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3258, %r3234, %r3257;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3261, %r3253, %r3258;
	// end inline asm
	// begin inline asm
	mov.b32 %r3269, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r3280, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3266, %r541, %r680, %r3269, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3270, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3271, %r3269, %r3270;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3274, %r3266, %r3271;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3277, %r552, %r680, %r3280, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3281, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3282, %r3280, %r3281;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3285, %r3277, %r3282;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3288, %r541, %r702, %r3269, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3292, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3293, %r3269, %r3292;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3296, %r3288, %r3293;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3299, %r552, %r702, %r3280, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3303, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3304, %r3280, %r3303;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3307, %r3299, %r3304;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3381, %r231, %r3136, %r3032;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3378, %r231, %r3147, %r3038;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3390, %r231, %r3158, %r3044;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3387, %r231, %r3169, %r3050;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3399, %r231, %r3182, %r3056;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3396, %r231, %r3193, %r3062;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3408, %r231, %r3204, %r3068;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3405, %r231, %r3215, %r3074;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3417, %r231, %r3228, %r3080;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3414, %r231, %r3239, %r3086;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3426, %r231, %r3250, %r3092;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3423, %r231, %r3261, %r3098;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3435, %r231, %r3274, %r3104;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3432, %r231, %r3285, %r3110;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3444, %r231, %r3296, %r3116;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3441, %r231, %r3307, %r3122;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3374, %r280;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3376, %r3374, %r3378;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3379, %r277, %r3381, %r3376;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3383, %r280;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3385, %r3383, %r3387;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3388, %r277, %r3390, %r3385;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3392, %r280;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3394, %r3392, %r3396;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3397, %r277, %r3399, %r3394;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3401, %r280;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3403, %r3401, %r3405;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3406, %r277, %r3408, %r3403;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3410, %r280;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3412, %r3410, %r3414;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3415, %r277, %r3417, %r3412;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3419, %r280;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3421, %r3419, %r3423;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3424, %r277, %r3426, %r3421;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3428, %r280;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3430, %r3428, %r3432;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3433, %r277, %r3435, %r3430;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3437, %r280;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3439, %r3437, %r3441;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3442, %r277, %r3444, %r3439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3446, %r280, %r3381;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3449, %r277, %r3378, %r3446;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3453, %r280, %r3390;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3456, %r277, %r3387, %r3453;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3460, %r280, %r3399;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3463, %r277, %r3396, %r3460;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3467, %r280, %r3408;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3470, %r277, %r3405, %r3467;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3474, %r280, %r3417;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3477, %r277, %r3414, %r3474;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3481, %r280, %r3426;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3484, %r277, %r3423, %r3481;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3488, %r280, %r3435;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3491, %r277, %r3432, %r3488;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3495, %r280, %r3444;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3498, %r277, %r3441, %r3495;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3589, %r3586}, {%r319, %r325, %r322, %r328}, {%r3379, %r3449}, {%r7381, %r7381};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3598, %r3595}, {%r319, %r325, %r322, %r328}, {%r3388, %r3456}, {%r7381, %r7381};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3607, %r3604}, {%r319, %r325, %r322, %r328}, {%r3397, %r3463}, {%r7381, %r7381};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3616, %r3613}, {%r319, %r325, %r322, %r328}, {%r3406, %r3470}, {%r7381, %r7381};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3625, %r3622}, {%r319, %r325, %r322, %r328}, {%r3415, %r3477}, {%r7381, %r7381};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3634, %r3631}, {%r319, %r325, %r322, %r328}, {%r3424, %r3484}, {%r7381, %r7381};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3643, %r3640}, {%r319, %r325, %r322, %r328}, {%r3433, %r3491}, {%r7381, %r7381};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3652, %r3649}, {%r319, %r325, %r322, %r328}, {%r3442, %r3498}, {%r7381, %r7381};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3582, %r366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3584, %r3582, %r3586;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3587, %r363, %r3589, %r3584;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3591, %r366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3593, %r3591, %r3595;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3596, %r363, %r3598, %r3593;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3600, %r366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3602, %r3600, %r3604;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3605, %r363, %r3607, %r3602;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3609, %r366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3611, %r3609, %r3613;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3614, %r363, %r3616, %r3611;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3618, %r366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3620, %r3618, %r3622;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3623, %r363, %r3625, %r3620;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3627, %r366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3629, %r3627, %r3631;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3632, %r363, %r3634, %r3629;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3636, %r366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3638, %r3636, %r3640;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3641, %r363, %r3643, %r3638;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3645, %r366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3647, %r3645, %r3649;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3650, %r363, %r3652, %r3647;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3654, %r366, %r3589;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3657, %r363, %r3586, %r3654;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3661, %r366, %r3598;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3664, %r363, %r3595, %r3661;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3668, %r366, %r3607;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3671, %r363, %r3604, %r3668;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3675, %r366, %r3616;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3678, %r363, %r3613, %r3675;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3682, %r366, %r3625;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3685, %r363, %r3622, %r3682;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3689, %r366, %r3634;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3692, %r363, %r3631, %r3689;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3696, %r366, %r3643;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3699, %r363, %r3640, %r3696;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3703, %r366, %r3652;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3706, %r363, %r3649, %r3703;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3710, %r3711}, {%r89, %r91, %r90, %r92}, {%r3587, %r3657}, {%r7381, %r7381};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3720, %r3721}, {%r89, %r91, %r90, %r92}, {%r3596, %r3664}, {%r7381, %r7381};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3730, %r3731}, {%r89, %r91, %r90, %r92}, {%r3605, %r3671}, {%r7381, %r7381};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3740, %r3741}, {%r89, %r91, %r90, %r92}, {%r3614, %r3678}, {%r7381, %r7381};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3750, %r3751}, {%r89, %r91, %r90, %r92}, {%r3623, %r3685}, {%r7381, %r7381};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3760, %r3761}, {%r89, %r91, %r90, %r92}, {%r3632, %r3692}, {%r7381, %r7381};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3770, %r3771}, {%r89, %r91, %r90, %r92}, {%r3641, %r3699}, {%r7381, %r7381};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3780, %r3781}, {%r89, %r91, %r90, %r92}, {%r3650, %r3706}, {%r7381, %r7381};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3790, %r12, %r3710;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3793, %r12, %r3711;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3796, %r12, %r3720;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3799, %r12, %r3721;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3802, %r12, %r3730;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3805, %r12, %r3731;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3808, %r12, %r3740;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3811, %r12, %r3741;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3814, %r12, %r3750;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3817, %r12, %r3751;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3820, %r12, %r3760;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3823, %r12, %r3761;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3826, %r12, %r3770;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3829, %r12, %r3771;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3832, %r12, %r3780;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3835, %r12, %r3781;
	// end inline asm
	// begin inline asm
	mov.b32 %r3838, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3839, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3840, %r3790, %r3838;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3843, %r3840, %r3839;
	// end inline asm
	// begin inline asm
	mov.b32 %r3846, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3847, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3848, %r3793, %r3846;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3851, %r3848, %r3847;
	// end inline asm
	// begin inline asm
	mov.b32 %r3854, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3855, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3856, %r3796, %r3854;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3859, %r3856, %r3855;
	// end inline asm
	// begin inline asm
	mov.b32 %r3862, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3863, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3864, %r3799, %r3862;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3867, %r3864, %r3863;
	// end inline asm
	// begin inline asm
	mov.b32 %r3870, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3871, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3872, %r3802, %r3870;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3875, %r3872, %r3871;
	// end inline asm
	// begin inline asm
	mov.b32 %r3878, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3879, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3880, %r3805, %r3878;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3883, %r3880, %r3879;
	// end inline asm
	// begin inline asm
	mov.b32 %r3886, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3887, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3888, %r3808, %r3886;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3891, %r3888, %r3887;
	// end inline asm
	// begin inline asm
	mov.b32 %r3894, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3895, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3896, %r3811, %r3894;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3899, %r3896, %r3895;
	// end inline asm
	// begin inline asm
	mov.b32 %r3902, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3903, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3904, %r3814, %r3902;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3907, %r3904, %r3903;
	// end inline asm
	// begin inline asm
	mov.b32 %r3910, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3911, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3912, %r3817, %r3910;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3915, %r3912, %r3911;
	// end inline asm
	// begin inline asm
	mov.b32 %r3918, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3919, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3920, %r3820, %r3918;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3923, %r3920, %r3919;
	// end inline asm
	// begin inline asm
	mov.b32 %r3926, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3927, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3928, %r3823, %r3926;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3931, %r3928, %r3927;
	// end inline asm
	// begin inline asm
	mov.b32 %r3934, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3935, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3936, %r3826, %r3934;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3939, %r3936, %r3935;
	// end inline asm
	// begin inline asm
	mov.b32 %r3942, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3943, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3944, %r3829, %r3942;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3947, %r3944, %r3943;
	// end inline asm
	// begin inline asm
	mov.b32 %r3950, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3951, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3952, %r3832, %r3950;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3955, %r3952, %r3951;
	// end inline asm
	// begin inline asm
	mov.b32 %r3958, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3959, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3960, %r3835, %r3958;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3963, %r3960, %r3959;
	// end inline asm
	// begin inline asm
	mov.b32 %r3969, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r3967, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3968, %r3969, %r3967;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3971, %r3843, %r3968;
	// end inline asm
	// begin inline asm
	mov.b32 %r3974, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3975, %r3969, %r3974;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3978, %r3851, %r3975;
	// end inline asm
	// begin inline asm
	mov.b32 %r3981, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3982, %r3969, %r3981;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3985, %r3859, %r3982;
	// end inline asm
	// begin inline asm
	mov.b32 %r3988, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3989, %r3969, %r3988;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3992, %r3867, %r3989;
	// end inline asm
	// begin inline asm
	prmt.b32 %r3995, %r3971, %r3985, %r2202;
	// end inline asm
	// begin inline asm
	prmt.b32 %r3999, %r3978, %r3992, %r2202;
	// end inline asm
	shl.b32 	%r4006, %r3999, 4;
	// begin inline asm
	lop3.b32 %r4003, %r2208, %r3995, %r4006, 202;
	// end inline asm
	xor.b32  	%r7730, %r4003, -2004318072;
	// begin inline asm
	mov.b32 %r4010, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4008, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4009, %r4010, %r4008;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4012, %r3875, %r4009;
	// end inline asm
	// begin inline asm
	mov.b32 %r4015, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4016, %r4010, %r4015;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4019, %r3883, %r4016;
	// end inline asm
	// begin inline asm
	mov.b32 %r4022, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4023, %r4010, %r4022;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4026, %r3891, %r4023;
	// end inline asm
	// begin inline asm
	mov.b32 %r4029, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4030, %r4010, %r4029;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4033, %r3899, %r4030;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4036, %r4012, %r4026, %r2202;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4040, %r4019, %r4033, %r2202;
	// end inline asm
	shl.b32 	%r4047, %r4040, 4;
	// begin inline asm
	lop3.b32 %r4044, %r2208, %r4036, %r4047, 202;
	// end inline asm
	xor.b32  	%r7731, %r4044, -2004318072;
	// begin inline asm
	mov.b32 %r4051, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4049, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4050, %r4051, %r4049;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4053, %r3907, %r4050;
	// end inline asm
	// begin inline asm
	mov.b32 %r4056, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4057, %r4051, %r4056;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4060, %r3915, %r4057;
	// end inline asm
	// begin inline asm
	mov.b32 %r4063, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4064, %r4051, %r4063;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4067, %r3923, %r4064;
	// end inline asm
	// begin inline asm
	mov.b32 %r4070, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4071, %r4051, %r4070;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4074, %r3931, %r4071;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4077, %r4053, %r4067, %r2202;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4081, %r4060, %r4074, %r2202;
	// end inline asm
	shl.b32 	%r4088, %r4081, 4;
	// begin inline asm
	lop3.b32 %r4085, %r2208, %r4077, %r4088, 202;
	// end inline asm
	xor.b32  	%r7732, %r4085, -2004318072;
	// begin inline asm
	mov.b32 %r4092, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4090, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4091, %r4092, %r4090;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4094, %r3939, %r4091;
	// end inline asm
	// begin inline asm
	mov.b32 %r4097, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4098, %r4092, %r4097;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4101, %r3947, %r4098;
	// end inline asm
	// begin inline asm
	mov.b32 %r4104, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4105, %r4092, %r4104;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4108, %r3955, %r4105;
	// end inline asm
	// begin inline asm
	mov.b32 %r4111, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4112, %r4092, %r4111;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4115, %r3963, %r4112;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4118, %r4094, %r4108, %r2202;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4122, %r4101, %r4115, %r2202;
	// end inline asm
	shl.b32 	%r4129, %r4122, 4;
	// begin inline asm
	lop3.b32 %r4126, %r2208, %r4118, %r4129, 202;
	// end inline asm
	xor.b32  	%r7733, %r4126, -2004318072;
	st.shared.u32 	[%rd80], %r7730;
	st.shared.u32 	[%rd81], %r7731;
	st.shared.u32 	[%rd82], %r7732;
	st.shared.u32 	[%rd83], %r7733;
	ld.shared.u32 	%r7797, [%rd76];
	ld.shared.u32 	%r7798, [%rd77];
	ld.shared.u32 	%r7799, [%rd78];
	ld.shared.u32 	%r7800, [%rd79];
	// begin inline asm
	mov.b32 %r4135, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4146, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r4134, %r7797, -2004318072;
	// begin inline asm
	lop3.b32 %r4132, %r541, %r4134, %r4135, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4136, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4137, %r4135, %r4136;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4140, %r4132, %r4137;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4143, %r552, %r4134, %r4146, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4147, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4148, %r4146, %r4147;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4151, %r4143, %r4148;
	// end inline asm
	shr.u32 	%r4156, %r4134, 8;
	// begin inline asm
	lop3.b32 %r4154, %r541, %r4156, %r4135, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4158, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4159, %r4135, %r4158;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4162, %r4154, %r4159;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4165, %r552, %r4156, %r4146, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4169, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4170, %r4146, %r4169;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4173, %r4165, %r4170;
	// end inline asm
	// begin inline asm
	mov.b32 %r4181, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4192, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r4180, %r7798, -2004318072;
	// begin inline asm
	lop3.b32 %r4178, %r541, %r4180, %r4181, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4182, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4183, %r4181, %r4182;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4186, %r4178, %r4183;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4189, %r552, %r4180, %r4192, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4193, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4194, %r4192, %r4193;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4197, %r4189, %r4194;
	// end inline asm
	shr.u32 	%r4202, %r4180, 8;
	// begin inline asm
	lop3.b32 %r4200, %r541, %r4202, %r4181, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4204, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4205, %r4181, %r4204;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4208, %r4200, %r4205;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4211, %r552, %r4202, %r4192, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4215, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4216, %r4192, %r4215;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4219, %r4211, %r4216;
	// end inline asm
	// begin inline asm
	mov.b32 %r4227, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4238, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r4226, %r7799, -2004318072;
	// begin inline asm
	lop3.b32 %r4224, %r541, %r4226, %r4227, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4228, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4229, %r4227, %r4228;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4232, %r4224, %r4229;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4235, %r552, %r4226, %r4238, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4239, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4240, %r4238, %r4239;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4243, %r4235, %r4240;
	// end inline asm
	shr.u32 	%r4248, %r4226, 8;
	// begin inline asm
	lop3.b32 %r4246, %r541, %r4248, %r4227, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4250, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4251, %r4227, %r4250;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4254, %r4246, %r4251;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4257, %r552, %r4248, %r4238, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4261, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4262, %r4238, %r4261;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4265, %r4257, %r4262;
	// end inline asm
	// begin inline asm
	mov.b32 %r4273, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4284, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r4272, %r7800, -2004318072;
	// begin inline asm
	lop3.b32 %r4270, %r541, %r4272, %r4273, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4274, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4275, %r4273, %r4274;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4278, %r4270, %r4275;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4281, %r552, %r4272, %r4284, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4285, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4286, %r4284, %r4285;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4289, %r4281, %r4286;
	// end inline asm
	shr.u32 	%r4294, %r4272, 8;
	// begin inline asm
	lop3.b32 %r4292, %r541, %r4294, %r4273, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4296, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4297, %r4273, %r4296;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4300, %r4292, %r4297;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4303, %r552, %r4294, %r4284, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4307, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4308, %r4284, %r4307;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4311, %r4303, %r4308;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4314, %r249;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4316, %r4314, %r4140;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4319, %r249;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4321, %r4319, %r4151;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4324, %r249;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4326, %r4324, %r4162;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4329, %r249;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4331, %r4329, %r4173;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4334, %r249;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4336, %r4334, %r4186;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4339, %r249;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4341, %r4339, %r4197;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4344, %r249;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4346, %r4344, %r4208;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4349, %r249;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4351, %r4349, %r4219;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4354, %r249;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4356, %r4354, %r4232;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4359, %r249;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4361, %r4359, %r4243;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4364, %r249;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4366, %r4364, %r4254;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4369, %r249;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4371, %r4369, %r4265;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4374, %r249;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4376, %r4374, %r4278;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4379, %r249;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4381, %r4379, %r4289;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4384, %r249;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4386, %r4384, %r4300;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4389, %r249;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4391, %r4389, %r4311;
	// end inline asm
	// begin inline asm
	mov.b32 %r4399, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4410, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4396, %r541, %r1334, %r4399, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4400, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4401, %r4399, %r4400;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4404, %r4396, %r4401;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4407, %r552, %r1334, %r4410, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4411, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4412, %r4410, %r4411;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4415, %r4407, %r4412;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4418, %r541, %r1356, %r4399, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4422, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4423, %r4399, %r4422;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4426, %r4418, %r4423;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4429, %r552, %r1356, %r4410, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4433, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4434, %r4410, %r4433;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4437, %r4429, %r4434;
	// end inline asm
	// begin inline asm
	mov.b32 %r4445, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4456, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4442, %r541, %r1380, %r4445, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4446, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4447, %r4445, %r4446;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4450, %r4442, %r4447;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4453, %r552, %r1380, %r4456, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4457, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4458, %r4456, %r4457;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4461, %r4453, %r4458;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4464, %r541, %r1402, %r4445, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4468, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4469, %r4445, %r4468;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4472, %r4464, %r4469;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4475, %r552, %r1402, %r4456, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4479, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4480, %r4456, %r4479;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4483, %r4475, %r4480;
	// end inline asm
	// begin inline asm
	mov.b32 %r4491, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4502, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4488, %r541, %r1426, %r4491, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4492, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4493, %r4491, %r4492;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4496, %r4488, %r4493;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4499, %r552, %r1426, %r4502, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4503, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4504, %r4502, %r4503;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4507, %r4499, %r4504;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4510, %r541, %r1448, %r4491, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4514, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4515, %r4491, %r4514;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4518, %r4510, %r4515;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4521, %r552, %r1448, %r4502, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4525, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4526, %r4502, %r4525;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4529, %r4521, %r4526;
	// end inline asm
	// begin inline asm
	mov.b32 %r4537, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4548, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4534, %r541, %r1472, %r4537, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4538, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4539, %r4537, %r4538;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4542, %r4534, %r4539;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4545, %r552, %r1472, %r4548, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4549, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4550, %r4548, %r4549;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4553, %r4545, %r4550;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4556, %r541, %r1494, %r4537, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4560, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4561, %r4537, %r4560;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4564, %r4556, %r4561;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4567, %r552, %r1494, %r4548, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4571, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4572, %r4548, %r4571;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4575, %r4567, %r4572;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4578, %r195, %r4404, %r4316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4582, %r195, %r4415, %r4321;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4586, %r195, %r4426, %r4326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4590, %r195, %r4437, %r4331;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4594, %r195, %r4450, %r4336;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4598, %r195, %r4461, %r4341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4602, %r195, %r4472, %r4346;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4606, %r195, %r4483, %r4351;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4610, %r195, %r4496, %r4356;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4614, %r195, %r4507, %r4361;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4618, %r195, %r4518, %r4366;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4622, %r195, %r4529, %r4371;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4626, %r195, %r4542, %r4376;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4630, %r195, %r4553, %r4381;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4634, %r195, %r4564, %r4386;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4638, %r195, %r4575, %r4391;
	// end inline asm
	// begin inline asm
	mov.b32 %r4647, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4658, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4644, %r541, %r542, %r4647, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4648, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4649, %r4647, %r4648;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4652, %r4644, %r4649;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4655, %r552, %r542, %r4658, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4659, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4660, %r4658, %r4659;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4663, %r4655, %r4660;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4666, %r541, %r564, %r4647, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4670, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4671, %r4647, %r4670;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4674, %r4666, %r4671;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4677, %r552, %r564, %r4658, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4681, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4682, %r4658, %r4681;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4685, %r4677, %r4682;
	// end inline asm
	// begin inline asm
	mov.b32 %r4693, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4704, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4690, %r541, %r588, %r4693, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4694, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4695, %r4693, %r4694;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4698, %r4690, %r4695;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4701, %r552, %r588, %r4704, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4705, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4706, %r4704, %r4705;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4709, %r4701, %r4706;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4712, %r541, %r610, %r4693, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4716, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4717, %r4693, %r4716;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4720, %r4712, %r4717;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4723, %r552, %r610, %r4704, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4727, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4728, %r4704, %r4727;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4731, %r4723, %r4728;
	// end inline asm
	// begin inline asm
	mov.b32 %r4739, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4750, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4736, %r541, %r634, %r4739, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4740, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4741, %r4739, %r4740;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4744, %r4736, %r4741;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4747, %r552, %r634, %r4750, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4751, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4752, %r4750, %r4751;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4755, %r4747, %r4752;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4758, %r541, %r656, %r4739, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4762, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4763, %r4739, %r4762;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4766, %r4758, %r4763;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4769, %r552, %r656, %r4750, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4773, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4774, %r4750, %r4773;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4777, %r4769, %r4774;
	// end inline asm
	// begin inline asm
	mov.b32 %r4785, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4796, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4782, %r541, %r680, %r4785, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4786, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4787, %r4785, %r4786;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4790, %r4782, %r4787;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4793, %r552, %r680, %r4796, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4797, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4798, %r4796, %r4797;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4801, %r4793, %r4798;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4804, %r541, %r702, %r4785, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4808, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4809, %r4785, %r4808;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4812, %r4804, %r4809;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4815, %r552, %r702, %r4796, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4819, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4820, %r4796, %r4819;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4823, %r4815, %r4820;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4826, %r213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4828, %r4826, %r4652, %r4578;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4832, %r213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4834, %r4832, %r4663, %r4582;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4838, %r213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4840, %r4838, %r4674, %r4586;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4844, %r213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4846, %r4844, %r4685, %r4590;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4850, %r213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4852, %r4850, %r4698, %r4594;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4856, %r213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4858, %r4856, %r4709, %r4598;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4862, %r213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4864, %r4862, %r4720, %r4602;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4868, %r213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4870, %r4868, %r4731, %r4606;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4874, %r213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4876, %r4874, %r4744, %r4610;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4880, %r213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4882, %r4880, %r4755, %r4614;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4886, %r213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4888, %r4886, %r4766, %r4618;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4892, %r213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4894, %r4892, %r4777, %r4622;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4898, %r213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4900, %r4898, %r4790, %r4626;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4904, %r213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4906, %r4904, %r4801, %r4630;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4910, %r213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4912, %r4910, %r4812, %r4634;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4916, %r213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4918, %r4916, %r4823, %r4638;
	// end inline asm
	// begin inline asm
	mov.b32 %r4927, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4938, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4924, %r541, %r2338, %r4927, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4928, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4929, %r4927, %r4928;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4932, %r4924, %r4929;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4935, %r552, %r2338, %r4938, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4939, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4940, %r4938, %r4939;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4943, %r4935, %r4940;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4946, %r541, %r2360, %r4927, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4950, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4951, %r4927, %r4950;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4954, %r4946, %r4951;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4957, %r552, %r2360, %r4938, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4961, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4962, %r4938, %r4961;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4965, %r4957, %r4962;
	// end inline asm
	// begin inline asm
	mov.b32 %r4973, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4984, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4970, %r541, %r2384, %r4973, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4974, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4975, %r4973, %r4974;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4978, %r4970, %r4975;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4981, %r552, %r2384, %r4984, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4985, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4986, %r4984, %r4985;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4989, %r4981, %r4986;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4992, %r541, %r2406, %r4973, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4996, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4997, %r4973, %r4996;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5000, %r4992, %r4997;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5003, %r552, %r2406, %r4984, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5007, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5008, %r4984, %r5007;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5011, %r5003, %r5008;
	// end inline asm
	// begin inline asm
	mov.b32 %r5019, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5030, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5016, %r541, %r2430, %r5019, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5020, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5021, %r5019, %r5020;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5024, %r5016, %r5021;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5027, %r552, %r2430, %r5030, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5031, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5032, %r5030, %r5031;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5035, %r5027, %r5032;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5038, %r541, %r2452, %r5019, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5042, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5043, %r5019, %r5042;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5046, %r5038, %r5043;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5049, %r552, %r2452, %r5030, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5053, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5054, %r5030, %r5053;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5057, %r5049, %r5054;
	// end inline asm
	// begin inline asm
	mov.b32 %r5065, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5076, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5062, %r541, %r2476, %r5065, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5066, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5067, %r5065, %r5066;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5070, %r5062, %r5067;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5073, %r552, %r2476, %r5076, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5077, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5078, %r5076, %r5077;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5081, %r5073, %r5078;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5084, %r541, %r2498, %r5065, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5088, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5089, %r5065, %r5088;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5092, %r5084, %r5089;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5095, %r552, %r2498, %r5076, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5099, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5100, %r5076, %r5099;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5103, %r5095, %r5100;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5177, %r231, %r4932, %r4828;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5174, %r231, %r4943, %r4834;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5186, %r231, %r4954, %r4840;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5183, %r231, %r4965, %r4846;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5195, %r231, %r4978, %r4852;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5192, %r231, %r4989, %r4858;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5204, %r231, %r5000, %r4864;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5201, %r231, %r5011, %r4870;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5213, %r231, %r5024, %r4876;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5210, %r231, %r5035, %r4882;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5222, %r231, %r5046, %r4888;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5219, %r231, %r5057, %r4894;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5231, %r231, %r5070, %r4900;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5228, %r231, %r5081, %r4906;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5240, %r231, %r5092, %r4912;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5237, %r231, %r5103, %r4918;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5170, %r280;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5172, %r5170, %r5174;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5175, %r277, %r5177, %r5172;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5179, %r280;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5181, %r5179, %r5183;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5184, %r277, %r5186, %r5181;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5188, %r280;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5190, %r5188, %r5192;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5193, %r277, %r5195, %r5190;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5197, %r280;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5199, %r5197, %r5201;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5202, %r277, %r5204, %r5199;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5206, %r280;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5208, %r5206, %r5210;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5211, %r277, %r5213, %r5208;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5215, %r280;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5217, %r5215, %r5219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5220, %r277, %r5222, %r5217;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5224, %r280;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5226, %r5224, %r5228;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5229, %r277, %r5231, %r5226;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5233, %r280;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5235, %r5233, %r5237;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5238, %r277, %r5240, %r5235;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5242, %r280, %r5177;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5245, %r277, %r5174, %r5242;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5249, %r280, %r5186;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5252, %r277, %r5183, %r5249;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5256, %r280, %r5195;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5259, %r277, %r5192, %r5256;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5263, %r280, %r5204;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5266, %r277, %r5201, %r5263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5270, %r280, %r5213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5273, %r277, %r5210, %r5270;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5277, %r280, %r5222;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5280, %r277, %r5219, %r5277;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5284, %r280, %r5231;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5287, %r277, %r5228, %r5284;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5291, %r280, %r5240;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5294, %r277, %r5237, %r5291;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5385, %r5382}, {%r319, %r325, %r322, %r328}, {%r5175, %r5245}, {%r7381, %r7381};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5394, %r5391}, {%r319, %r325, %r322, %r328}, {%r5184, %r5252}, {%r7381, %r7381};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5403, %r5400}, {%r319, %r325, %r322, %r328}, {%r5193, %r5259}, {%r7381, %r7381};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5412, %r5409}, {%r319, %r325, %r322, %r328}, {%r5202, %r5266}, {%r7381, %r7381};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5421, %r5418}, {%r319, %r325, %r322, %r328}, {%r5211, %r5273}, {%r7381, %r7381};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5430, %r5427}, {%r319, %r325, %r322, %r328}, {%r5220, %r5280}, {%r7381, %r7381};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5439, %r5436}, {%r319, %r325, %r322, %r328}, {%r5229, %r5287}, {%r7381, %r7381};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5448, %r5445}, {%r319, %r325, %r322, %r328}, {%r5238, %r5294}, {%r7381, %r7381};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5378, %r366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5380, %r5378, %r5382;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5383, %r363, %r5385, %r5380;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5387, %r366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5389, %r5387, %r5391;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5392, %r363, %r5394, %r5389;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5396, %r366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5398, %r5396, %r5400;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5401, %r363, %r5403, %r5398;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5405, %r366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5407, %r5405, %r5409;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5410, %r363, %r5412, %r5407;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5414, %r366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5416, %r5414, %r5418;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5419, %r363, %r5421, %r5416;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5423, %r366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5425, %r5423, %r5427;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5428, %r363, %r5430, %r5425;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5432, %r366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5434, %r5432, %r5436;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5437, %r363, %r5439, %r5434;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5441, %r366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5443, %r5441, %r5445;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5446, %r363, %r5448, %r5443;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5450, %r366, %r5385;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5453, %r363, %r5382, %r5450;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5457, %r366, %r5394;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5460, %r363, %r5391, %r5457;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5464, %r366, %r5403;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5467, %r363, %r5400, %r5464;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5471, %r366, %r5412;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5474, %r363, %r5409, %r5471;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5478, %r366, %r5421;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5481, %r363, %r5418, %r5478;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5485, %r366, %r5430;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5488, %r363, %r5427, %r5485;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5492, %r366, %r5439;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5495, %r363, %r5436, %r5492;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5499, %r366, %r5448;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5502, %r363, %r5445, %r5499;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5506, %r5507}, {%r89, %r91, %r90, %r92}, {%r5383, %r5453}, {%r7381, %r7381};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5516, %r5517}, {%r89, %r91, %r90, %r92}, {%r5392, %r5460}, {%r7381, %r7381};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5526, %r5527}, {%r89, %r91, %r90, %r92}, {%r5401, %r5467}, {%r7381, %r7381};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5536, %r5537}, {%r89, %r91, %r90, %r92}, {%r5410, %r5474}, {%r7381, %r7381};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5546, %r5547}, {%r89, %r91, %r90, %r92}, {%r5419, %r5481}, {%r7381, %r7381};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5556, %r5557}, {%r89, %r91, %r90, %r92}, {%r5428, %r5488}, {%r7381, %r7381};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5566, %r5567}, {%r89, %r91, %r90, %r92}, {%r5437, %r5495}, {%r7381, %r7381};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5576, %r5577}, {%r89, %r91, %r90, %r92}, {%r5446, %r5502}, {%r7381, %r7381};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5586, %r12, %r5506;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5589, %r12, %r5507;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5592, %r12, %r5516;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5595, %r12, %r5517;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5598, %r12, %r5526;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5601, %r12, %r5527;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5604, %r12, %r5536;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5607, %r12, %r5537;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5610, %r12, %r5546;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5613, %r12, %r5547;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5616, %r12, %r5556;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5619, %r12, %r5557;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5622, %r12, %r5566;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5625, %r12, %r5567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5628, %r12, %r5576;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5631, %r12, %r5577;
	// end inline asm
	// begin inline asm
	mov.b32 %r5634, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5635, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5636, %r5586, %r5634;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5639, %r5636, %r5635;
	// end inline asm
	// begin inline asm
	mov.b32 %r5642, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5643, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5644, %r5589, %r5642;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5647, %r5644, %r5643;
	// end inline asm
	// begin inline asm
	mov.b32 %r5650, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5651, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5652, %r5592, %r5650;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5655, %r5652, %r5651;
	// end inline asm
	// begin inline asm
	mov.b32 %r5658, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5659, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5660, %r5595, %r5658;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5663, %r5660, %r5659;
	// end inline asm
	// begin inline asm
	mov.b32 %r5666, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5667, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5668, %r5598, %r5666;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5671, %r5668, %r5667;
	// end inline asm
	// begin inline asm
	mov.b32 %r5674, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5675, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5676, %r5601, %r5674;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5679, %r5676, %r5675;
	// end inline asm
	// begin inline asm
	mov.b32 %r5682, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5683, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5684, %r5604, %r5682;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5687, %r5684, %r5683;
	// end inline asm
	// begin inline asm
	mov.b32 %r5690, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5691, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5692, %r5607, %r5690;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5695, %r5692, %r5691;
	// end inline asm
	// begin inline asm
	mov.b32 %r5698, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5699, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5700, %r5610, %r5698;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5703, %r5700, %r5699;
	// end inline asm
	// begin inline asm
	mov.b32 %r5706, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5707, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5708, %r5613, %r5706;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5711, %r5708, %r5707;
	// end inline asm
	// begin inline asm
	mov.b32 %r5714, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5715, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5716, %r5616, %r5714;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5719, %r5716, %r5715;
	// end inline asm
	// begin inline asm
	mov.b32 %r5722, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5723, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5724, %r5619, %r5722;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5727, %r5724, %r5723;
	// end inline asm
	// begin inline asm
	mov.b32 %r5730, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5731, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5732, %r5622, %r5730;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5735, %r5732, %r5731;
	// end inline asm
	// begin inline asm
	mov.b32 %r5738, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5739, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5740, %r5625, %r5738;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5743, %r5740, %r5739;
	// end inline asm
	// begin inline asm
	mov.b32 %r5746, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5747, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5748, %r5628, %r5746;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5751, %r5748, %r5747;
	// end inline asm
	// begin inline asm
	mov.b32 %r5754, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5755, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5756, %r5631, %r5754;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5759, %r5756, %r5755;
	// end inline asm
	// begin inline asm
	mov.b32 %r5765, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5763, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5764, %r5765, %r5763;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5767, %r5639, %r5764;
	// end inline asm
	// begin inline asm
	mov.b32 %r5770, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5771, %r5765, %r5770;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5774, %r5647, %r5771;
	// end inline asm
	// begin inline asm
	mov.b32 %r5777, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5778, %r5765, %r5777;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5781, %r5655, %r5778;
	// end inline asm
	// begin inline asm
	mov.b32 %r5784, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5785, %r5765, %r5784;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5788, %r5663, %r5785;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5791, %r5767, %r5781, %r2202;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5795, %r5774, %r5788, %r2202;
	// end inline asm
	shl.b32 	%r5802, %r5795, 4;
	// begin inline asm
	lop3.b32 %r5799, %r2208, %r5791, %r5802, 202;
	// end inline asm
	xor.b32  	%r7734, %r5799, -2004318072;
	// begin inline asm
	mov.b32 %r5806, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5804, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5805, %r5806, %r5804;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5808, %r5671, %r5805;
	// end inline asm
	// begin inline asm
	mov.b32 %r5811, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5812, %r5806, %r5811;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5815, %r5679, %r5812;
	// end inline asm
	// begin inline asm
	mov.b32 %r5818, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5819, %r5806, %r5818;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5822, %r5687, %r5819;
	// end inline asm
	// begin inline asm
	mov.b32 %r5825, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5826, %r5806, %r5825;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5829, %r5695, %r5826;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5832, %r5808, %r5822, %r2202;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5836, %r5815, %r5829, %r2202;
	// end inline asm
	shl.b32 	%r5843, %r5836, 4;
	// begin inline asm
	lop3.b32 %r5840, %r2208, %r5832, %r5843, 202;
	// end inline asm
	xor.b32  	%r7735, %r5840, -2004318072;
	// begin inline asm
	mov.b32 %r5847, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5845, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5846, %r5847, %r5845;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5849, %r5703, %r5846;
	// end inline asm
	// begin inline asm
	mov.b32 %r5852, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5853, %r5847, %r5852;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5856, %r5711, %r5853;
	// end inline asm
	// begin inline asm
	mov.b32 %r5859, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5860, %r5847, %r5859;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5863, %r5719, %r5860;
	// end inline asm
	// begin inline asm
	mov.b32 %r5866, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5867, %r5847, %r5866;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5870, %r5727, %r5867;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5873, %r5849, %r5863, %r2202;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5877, %r5856, %r5870, %r2202;
	// end inline asm
	shl.b32 	%r5884, %r5877, 4;
	// begin inline asm
	lop3.b32 %r5881, %r2208, %r5873, %r5884, 202;
	// end inline asm
	xor.b32  	%r7736, %r5881, -2004318072;
	// begin inline asm
	mov.b32 %r5888, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5886, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5887, %r5888, %r5886;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5890, %r5735, %r5887;
	// end inline asm
	// begin inline asm
	mov.b32 %r5893, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5894, %r5888, %r5893;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5897, %r5743, %r5894;
	// end inline asm
	// begin inline asm
	mov.b32 %r5900, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5901, %r5888, %r5900;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5904, %r5751, %r5901;
	// end inline asm
	// begin inline asm
	mov.b32 %r5907, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5908, %r5888, %r5907;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5911, %r5759, %r5908;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5914, %r5890, %r5904, %r2202;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5918, %r5897, %r5911, %r2202;
	// end inline asm
	shl.b32 	%r5925, %r5918, 4;
	// begin inline asm
	lop3.b32 %r5922, %r2208, %r5914, %r5925, 202;
	// end inline asm
	xor.b32  	%r7737, %r5922, -2004318072;
	st.shared.u32 	[%rd80], %r7734;
	st.shared.u32 	[%rd81], %r7735;
	st.shared.u32 	[%rd82], %r7736;
	st.shared.u32 	[%rd83], %r7737;
	ld.shared.u32 	%r7801, [%rd76];
	ld.shared.u32 	%r7802, [%rd77];
	ld.shared.u32 	%r7803, [%rd78];
	ld.shared.u32 	%r7804, [%rd79];
	// begin inline asm
	mov.b32 %r5931, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5942, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r5930, %r7801, -2004318072;
	// begin inline asm
	lop3.b32 %r5928, %r541, %r5930, %r5931, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5932, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5933, %r5931, %r5932;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5936, %r5928, %r5933;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5939, %r552, %r5930, %r5942, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5943, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5944, %r5942, %r5943;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5947, %r5939, %r5944;
	// end inline asm
	shr.u32 	%r5952, %r5930, 8;
	// begin inline asm
	lop3.b32 %r5950, %r541, %r5952, %r5931, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5954, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5955, %r5931, %r5954;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5958, %r5950, %r5955;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5961, %r552, %r5952, %r5942, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5965, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5966, %r5942, %r5965;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5969, %r5961, %r5966;
	// end inline asm
	// begin inline asm
	mov.b32 %r5977, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5988, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r5976, %r7802, -2004318072;
	// begin inline asm
	lop3.b32 %r5974, %r541, %r5976, %r5977, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5978, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5979, %r5977, %r5978;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5982, %r5974, %r5979;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5985, %r552, %r5976, %r5988, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5989, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5990, %r5988, %r5989;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5993, %r5985, %r5990;
	// end inline asm
	shr.u32 	%r5998, %r5976, 8;
	// begin inline asm
	lop3.b32 %r5996, %r541, %r5998, %r5977, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6000, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6001, %r5977, %r6000;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6004, %r5996, %r6001;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6007, %r552, %r5998, %r5988, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6011, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6012, %r5988, %r6011;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6015, %r6007, %r6012;
	// end inline asm
	// begin inline asm
	mov.b32 %r6023, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6034, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r6022, %r7803, -2004318072;
	// begin inline asm
	lop3.b32 %r6020, %r541, %r6022, %r6023, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6024, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6025, %r6023, %r6024;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6028, %r6020, %r6025;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6031, %r552, %r6022, %r6034, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6035, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6036, %r6034, %r6035;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6039, %r6031, %r6036;
	// end inline asm
	shr.u32 	%r6044, %r6022, 8;
	// begin inline asm
	lop3.b32 %r6042, %r541, %r6044, %r6023, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6046, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6047, %r6023, %r6046;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6050, %r6042, %r6047;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6053, %r552, %r6044, %r6034, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6057, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6058, %r6034, %r6057;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6061, %r6053, %r6058;
	// end inline asm
	// begin inline asm
	mov.b32 %r6069, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6080, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r6068, %r7804, -2004318072;
	// begin inline asm
	lop3.b32 %r6066, %r541, %r6068, %r6069, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6070, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6071, %r6069, %r6070;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6074, %r6066, %r6071;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6077, %r552, %r6068, %r6080, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6081, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6082, %r6080, %r6081;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6085, %r6077, %r6082;
	// end inline asm
	shr.u32 	%r6090, %r6068, 8;
	// begin inline asm
	lop3.b32 %r6088, %r541, %r6090, %r6069, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6092, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6093, %r6069, %r6092;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6096, %r6088, %r6093;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6099, %r552, %r6090, %r6080, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6103, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6104, %r6080, %r6103;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6107, %r6099, %r6104;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6110, %r249;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6112, %r6110, %r5936;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6115, %r249;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6117, %r6115, %r5947;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6120, %r249;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6122, %r6120, %r5958;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6125, %r249;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6127, %r6125, %r5969;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6130, %r249;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6132, %r6130, %r5982;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6135, %r249;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6137, %r6135, %r5993;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6140, %r249;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6142, %r6140, %r6004;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6145, %r249;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6147, %r6145, %r6015;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6150, %r249;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6152, %r6150, %r6028;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6155, %r249;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6157, %r6155, %r6039;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6160, %r249;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6162, %r6160, %r6050;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6165, %r249;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6167, %r6165, %r6061;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6170, %r249;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6172, %r6170, %r6074;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6175, %r249;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6177, %r6175, %r6085;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6180, %r249;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6182, %r6180, %r6096;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6185, %r249;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6187, %r6185, %r6107;
	// end inline asm
	// begin inline asm
	mov.b32 %r6195, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6206, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6192, %r541, %r542, %r6195, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6196, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6197, %r6195, %r6196;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6200, %r6192, %r6197;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6203, %r552, %r542, %r6206, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6207, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6208, %r6206, %r6207;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6211, %r6203, %r6208;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6214, %r541, %r564, %r6195, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6218, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6219, %r6195, %r6218;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6222, %r6214, %r6219;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6225, %r552, %r564, %r6206, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6229, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6230, %r6206, %r6229;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6233, %r6225, %r6230;
	// end inline asm
	// begin inline asm
	mov.b32 %r6241, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6252, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6238, %r541, %r588, %r6241, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6242, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6243, %r6241, %r6242;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6246, %r6238, %r6243;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6249, %r552, %r588, %r6252, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6253, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6254, %r6252, %r6253;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6257, %r6249, %r6254;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6260, %r541, %r610, %r6241, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6264, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6265, %r6241, %r6264;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6268, %r6260, %r6265;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6271, %r552, %r610, %r6252, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6275, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6276, %r6252, %r6275;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6279, %r6271, %r6276;
	// end inline asm
	// begin inline asm
	mov.b32 %r6287, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6298, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6284, %r541, %r634, %r6287, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6288, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6289, %r6287, %r6288;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6292, %r6284, %r6289;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6295, %r552, %r634, %r6298, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6299, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6300, %r6298, %r6299;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6303, %r6295, %r6300;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6306, %r541, %r656, %r6287, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6310, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6311, %r6287, %r6310;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6314, %r6306, %r6311;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6317, %r552, %r656, %r6298, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6321, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6322, %r6298, %r6321;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6325, %r6317, %r6322;
	// end inline asm
	// begin inline asm
	mov.b32 %r6333, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6344, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6330, %r541, %r680, %r6333, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6334, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6335, %r6333, %r6334;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6338, %r6330, %r6335;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6341, %r552, %r680, %r6344, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6345, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6346, %r6344, %r6345;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6349, %r6341, %r6346;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6352, %r541, %r702, %r6333, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6356, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6357, %r6333, %r6356;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6360, %r6352, %r6357;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6363, %r552, %r702, %r6344, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6367, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6368, %r6344, %r6367;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6371, %r6363, %r6368;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6374, %r195, %r6200, %r6112;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6378, %r195, %r6211, %r6117;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6382, %r195, %r6222, %r6122;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6386, %r195, %r6233, %r6127;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6390, %r195, %r6246, %r6132;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6394, %r195, %r6257, %r6137;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6398, %r195, %r6268, %r6142;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6402, %r195, %r6279, %r6147;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6406, %r195, %r6292, %r6152;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6410, %r195, %r6303, %r6157;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6414, %r195, %r6314, %r6162;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6418, %r195, %r6325, %r6167;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6422, %r195, %r6338, %r6172;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6426, %r195, %r6349, %r6177;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6430, %r195, %r6360, %r6182;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6434, %r195, %r6371, %r6187;
	// end inline asm
	// begin inline asm
	mov.b32 %r6443, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6454, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6440, %r541, %r2338, %r6443, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6444, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6445, %r6443, %r6444;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6448, %r6440, %r6445;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6451, %r552, %r2338, %r6454, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6455, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6456, %r6454, %r6455;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6459, %r6451, %r6456;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6462, %r541, %r2360, %r6443, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6466, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6467, %r6443, %r6466;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6470, %r6462, %r6467;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6473, %r552, %r2360, %r6454, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6477, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6478, %r6454, %r6477;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6481, %r6473, %r6478;
	// end inline asm
	// begin inline asm
	mov.b32 %r6489, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6500, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6486, %r541, %r2384, %r6489, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6490, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6491, %r6489, %r6490;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6494, %r6486, %r6491;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6497, %r552, %r2384, %r6500, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6501, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6502, %r6500, %r6501;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6505, %r6497, %r6502;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6508, %r541, %r2406, %r6489, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6512, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6513, %r6489, %r6512;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6516, %r6508, %r6513;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6519, %r552, %r2406, %r6500, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6523, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6524, %r6500, %r6523;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6527, %r6519, %r6524;
	// end inline asm
	// begin inline asm
	mov.b32 %r6535, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6546, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6532, %r541, %r2430, %r6535, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6536, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6537, %r6535, %r6536;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6540, %r6532, %r6537;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6543, %r552, %r2430, %r6546, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6547, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6548, %r6546, %r6547;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6551, %r6543, %r6548;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6554, %r541, %r2452, %r6535, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6558, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6559, %r6535, %r6558;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6562, %r6554, %r6559;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6565, %r552, %r2452, %r6546, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6569, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6570, %r6546, %r6569;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6573, %r6565, %r6570;
	// end inline asm
	// begin inline asm
	mov.b32 %r6581, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6592, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6578, %r541, %r2476, %r6581, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6582, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6583, %r6581, %r6582;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6586, %r6578, %r6583;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6589, %r552, %r2476, %r6592, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6593, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6594, %r6592, %r6593;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6597, %r6589, %r6594;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6600, %r541, %r2498, %r6581, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6604, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6605, %r6581, %r6604;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6608, %r6600, %r6605;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6611, %r552, %r2498, %r6592, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6615, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6616, %r6592, %r6615;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6619, %r6611, %r6616;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6622, %r213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6624, %r6622, %r6448, %r6374;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6628, %r213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6630, %r6628, %r6459, %r6378;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6634, %r213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6636, %r6634, %r6470, %r6382;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6640, %r213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6642, %r6640, %r6481, %r6386;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6646, %r213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6648, %r6646, %r6494, %r6390;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6652, %r213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6654, %r6652, %r6505, %r6394;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6658, %r213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6660, %r6658, %r6516, %r6398;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6664, %r213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6666, %r6664, %r6527, %r6402;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6670, %r213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6672, %r6670, %r6540, %r6406;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6676, %r213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6678, %r6676, %r6551, %r6410;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6682, %r213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6684, %r6682, %r6562, %r6414;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6688, %r213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6690, %r6688, %r6573, %r6418;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6694, %r213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6696, %r6694, %r6586, %r6422;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6700, %r213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6702, %r6700, %r6597, %r6426;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6706, %r213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6708, %r6706, %r6608, %r6430;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6712, %r213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6714, %r6712, %r6619, %r6434;
	// end inline asm
	// begin inline asm
	mov.b32 %r6723, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6734, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6720, %r541, %r4134, %r6723, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6724, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6725, %r6723, %r6724;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6728, %r6720, %r6725;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6731, %r552, %r4134, %r6734, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6735, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6736, %r6734, %r6735;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6739, %r6731, %r6736;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6742, %r541, %r4156, %r6723, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6746, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6747, %r6723, %r6746;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6750, %r6742, %r6747;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6753, %r552, %r4156, %r6734, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6757, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6758, %r6734, %r6757;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6761, %r6753, %r6758;
	// end inline asm
	// begin inline asm
	mov.b32 %r6769, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6780, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6766, %r541, %r4180, %r6769, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6770, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6771, %r6769, %r6770;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6774, %r6766, %r6771;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6777, %r552, %r4180, %r6780, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6781, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6782, %r6780, %r6781;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6785, %r6777, %r6782;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6788, %r541, %r4202, %r6769, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6792, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6793, %r6769, %r6792;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6796, %r6788, %r6793;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6799, %r552, %r4202, %r6780, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6803, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6804, %r6780, %r6803;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6807, %r6799, %r6804;
	// end inline asm
	// begin inline asm
	mov.b32 %r6815, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6826, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6812, %r541, %r4226, %r6815, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6816, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6817, %r6815, %r6816;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6820, %r6812, %r6817;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6823, %r552, %r4226, %r6826, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6827, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6828, %r6826, %r6827;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6831, %r6823, %r6828;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6834, %r541, %r4248, %r6815, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6838, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6839, %r6815, %r6838;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6842, %r6834, %r6839;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6845, %r552, %r4248, %r6826, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6849, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6850, %r6826, %r6849;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6853, %r6845, %r6850;
	// end inline asm
	// begin inline asm
	mov.b32 %r6861, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6872, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6858, %r541, %r4272, %r6861, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6862, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6863, %r6861, %r6862;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6866, %r6858, %r6863;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6869, %r552, %r4272, %r6872, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6873, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6874, %r6872, %r6873;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6877, %r6869, %r6874;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6880, %r541, %r4294, %r6861, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6884, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6885, %r6861, %r6884;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6888, %r6880, %r6885;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6891, %r552, %r4294, %r6872, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6895, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6896, %r6872, %r6895;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6899, %r6891, %r6896;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6973, %r231, %r6728, %r6624;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6970, %r231, %r6739, %r6630;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6982, %r231, %r6750, %r6636;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6979, %r231, %r6761, %r6642;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6991, %r231, %r6774, %r6648;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6988, %r231, %r6785, %r6654;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7000, %r231, %r6796, %r6660;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6997, %r231, %r6807, %r6666;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7009, %r231, %r6820, %r6672;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7006, %r231, %r6831, %r6678;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7018, %r231, %r6842, %r6684;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7015, %r231, %r6853, %r6690;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7027, %r231, %r6866, %r6696;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7024, %r231, %r6877, %r6702;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7036, %r231, %r6888, %r6708;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7033, %r231, %r6899, %r6714;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6966, %r280;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6968, %r6966, %r6970;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6971, %r277, %r6973, %r6968;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6975, %r280;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6977, %r6975, %r6979;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6980, %r277, %r6982, %r6977;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6984, %r280;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6986, %r6984, %r6988;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6989, %r277, %r6991, %r6986;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6993, %r280;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6995, %r6993, %r6997;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6998, %r277, %r7000, %r6995;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7002, %r280;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7004, %r7002, %r7006;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7007, %r277, %r7009, %r7004;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7011, %r280;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7013, %r7011, %r7015;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7016, %r277, %r7018, %r7013;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7020, %r280;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7022, %r7020, %r7024;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7025, %r277, %r7027, %r7022;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7029, %r280;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7031, %r7029, %r7033;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7034, %r277, %r7036, %r7031;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7038, %r280, %r6973;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7041, %r277, %r6970, %r7038;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7045, %r280, %r6982;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7048, %r277, %r6979, %r7045;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7052, %r280, %r6991;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7055, %r277, %r6988, %r7052;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7059, %r280, %r7000;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7062, %r277, %r6997, %r7059;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7066, %r280, %r7009;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7069, %r277, %r7006, %r7066;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7073, %r280, %r7018;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7076, %r277, %r7015, %r7073;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7080, %r280, %r7027;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7083, %r277, %r7024, %r7080;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7087, %r280, %r7036;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7090, %r277, %r7033, %r7087;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7181, %r7178}, {%r319, %r325, %r322, %r328}, {%r6971, %r7041}, {%r7381, %r7381};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7190, %r7187}, {%r319, %r325, %r322, %r328}, {%r6980, %r7048}, {%r7381, %r7381};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7199, %r7196}, {%r319, %r325, %r322, %r328}, {%r6989, %r7055}, {%r7381, %r7381};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7208, %r7205}, {%r319, %r325, %r322, %r328}, {%r6998, %r7062}, {%r7381, %r7381};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7217, %r7214}, {%r319, %r325, %r322, %r328}, {%r7007, %r7069}, {%r7381, %r7381};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7226, %r7223}, {%r319, %r325, %r322, %r328}, {%r7016, %r7076}, {%r7381, %r7381};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7235, %r7232}, {%r319, %r325, %r322, %r328}, {%r7025, %r7083}, {%r7381, %r7381};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7244, %r7241}, {%r319, %r325, %r322, %r328}, {%r7034, %r7090}, {%r7381, %r7381};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7174, %r366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7176, %r7174, %r7178;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7179, %r363, %r7181, %r7176;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7183, %r366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7185, %r7183, %r7187;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7188, %r363, %r7190, %r7185;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7192, %r366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7194, %r7192, %r7196;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7197, %r363, %r7199, %r7194;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7201, %r366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7203, %r7201, %r7205;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7206, %r363, %r7208, %r7203;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7210, %r366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7212, %r7210, %r7214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7215, %r363, %r7217, %r7212;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7219, %r366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7221, %r7219, %r7223;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7224, %r363, %r7226, %r7221;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7228, %r366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7230, %r7228, %r7232;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7233, %r363, %r7235, %r7230;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7237, %r366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7239, %r7237, %r7241;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7242, %r363, %r7244, %r7239;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7246, %r366, %r7181;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7249, %r363, %r7178, %r7246;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7253, %r366, %r7190;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7256, %r363, %r7187, %r7253;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7260, %r366, %r7199;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7263, %r363, %r7196, %r7260;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7267, %r366, %r7208;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7270, %r363, %r7205, %r7267;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7274, %r366, %r7217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7277, %r363, %r7214, %r7274;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7281, %r366, %r7226;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7284, %r363, %r7223, %r7281;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7288, %r366, %r7235;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7291, %r363, %r7232, %r7288;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7295, %r366, %r7244;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7298, %r363, %r7241, %r7295;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7302, %r7303}, {%r89, %r91, %r90, %r92}, {%r7179, %r7249}, {%r7381, %r7381};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7312, %r7313}, {%r89, %r91, %r90, %r92}, {%r7188, %r7256}, {%r7381, %r7381};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7322, %r7323}, {%r89, %r91, %r90, %r92}, {%r7197, %r7263}, {%r7381, %r7381};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7332, %r7333}, {%r89, %r91, %r90, %r92}, {%r7206, %r7270}, {%r7381, %r7381};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7342, %r7343}, {%r89, %r91, %r90, %r92}, {%r7215, %r7277}, {%r7381, %r7381};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7352, %r7353}, {%r89, %r91, %r90, %r92}, {%r7224, %r7284}, {%r7381, %r7381};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7362, %r7363}, {%r89, %r91, %r90, %r92}, {%r7233, %r7291}, {%r7381, %r7381};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7372, %r7373}, {%r89, %r91, %r90, %r92}, {%r7242, %r7298}, {%r7381, %r7381};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7382, %r12, %r7302;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7385, %r12, %r7303;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7388, %r12, %r7312;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7391, %r12, %r7313;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7394, %r12, %r7322;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7397, %r12, %r7323;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7400, %r12, %r7332;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7403, %r12, %r7333;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7406, %r12, %r7342;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7409, %r12, %r7343;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7412, %r12, %r7352;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7415, %r12, %r7353;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7418, %r12, %r7362;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7421, %r12, %r7363;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7424, %r12, %r7372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7427, %r12, %r7373;
	// end inline asm
	// begin inline asm
	mov.b32 %r7430, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7431, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7432, %r7382, %r7430;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7435, %r7432, %r7431;
	// end inline asm
	// begin inline asm
	mov.b32 %r7438, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7439, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7440, %r7385, %r7438;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7443, %r7440, %r7439;
	// end inline asm
	// begin inline asm
	mov.b32 %r7446, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7447, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7448, %r7388, %r7446;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7451, %r7448, %r7447;
	// end inline asm
	// begin inline asm
	mov.b32 %r7454, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7455, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7456, %r7391, %r7454;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7459, %r7456, %r7455;
	// end inline asm
	// begin inline asm
	mov.b32 %r7462, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7463, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7464, %r7394, %r7462;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7467, %r7464, %r7463;
	// end inline asm
	// begin inline asm
	mov.b32 %r7470, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7471, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7472, %r7397, %r7470;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7475, %r7472, %r7471;
	// end inline asm
	// begin inline asm
	mov.b32 %r7478, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7479, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7480, %r7400, %r7478;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7483, %r7480, %r7479;
	// end inline asm
	// begin inline asm
	mov.b32 %r7486, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7487, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7488, %r7403, %r7486;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7491, %r7488, %r7487;
	// end inline asm
	// begin inline asm
	mov.b32 %r7494, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7495, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7496, %r7406, %r7494;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7499, %r7496, %r7495;
	// end inline asm
	// begin inline asm
	mov.b32 %r7502, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7503, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7504, %r7409, %r7502;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7507, %r7504, %r7503;
	// end inline asm
	// begin inline asm
	mov.b32 %r7510, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7511, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7512, %r7412, %r7510;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7515, %r7512, %r7511;
	// end inline asm
	// begin inline asm
	mov.b32 %r7518, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7519, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7520, %r7415, %r7518;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7523, %r7520, %r7519;
	// end inline asm
	// begin inline asm
	mov.b32 %r7526, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7527, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7528, %r7418, %r7526;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7531, %r7528, %r7527;
	// end inline asm
	// begin inline asm
	mov.b32 %r7534, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7535, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7536, %r7421, %r7534;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7539, %r7536, %r7535;
	// end inline asm
	// begin inline asm
	mov.b32 %r7542, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7543, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7544, %r7424, %r7542;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7547, %r7544, %r7543;
	// end inline asm
	// begin inline asm
	mov.b32 %r7550, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7551, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7552, %r7427, %r7550;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7555, %r7552, %r7551;
	// end inline asm
	// begin inline asm
	mov.b32 %r7561, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r7559, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7560, %r7561, %r7559;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7563, %r7435, %r7560;
	// end inline asm
	// begin inline asm
	mov.b32 %r7566, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7567, %r7561, %r7566;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7570, %r7443, %r7567;
	// end inline asm
	// begin inline asm
	mov.b32 %r7573, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7574, %r7561, %r7573;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7577, %r7451, %r7574;
	// end inline asm
	// begin inline asm
	mov.b32 %r7580, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7581, %r7561, %r7580;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7584, %r7459, %r7581;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7587, %r7563, %r7577, %r2202;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7591, %r7570, %r7584, %r2202;
	// end inline asm
	shl.b32 	%r7598, %r7591, 4;
	// begin inline asm
	lop3.b32 %r7595, %r2208, %r7587, %r7598, 202;
	// end inline asm
	xor.b32  	%r7738, %r7595, -2004318072;
	// begin inline asm
	mov.b32 %r7602, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r7600, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7601, %r7602, %r7600;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7604, %r7467, %r7601;
	// end inline asm
	// begin inline asm
	mov.b32 %r7607, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7608, %r7602, %r7607;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7611, %r7475, %r7608;
	// end inline asm
	// begin inline asm
	mov.b32 %r7614, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7615, %r7602, %r7614;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7618, %r7483, %r7615;
	// end inline asm
	// begin inline asm
	mov.b32 %r7621, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7622, %r7602, %r7621;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7625, %r7491, %r7622;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7628, %r7604, %r7618, %r2202;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7632, %r7611, %r7625, %r2202;
	// end inline asm
	shl.b32 	%r7639, %r7632, 4;
	// begin inline asm
	lop3.b32 %r7636, %r2208, %r7628, %r7639, 202;
	// end inline asm
	xor.b32  	%r7739, %r7636, -2004318072;
	// begin inline asm
	mov.b32 %r7643, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r7641, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7642, %r7643, %r7641;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7645, %r7499, %r7642;
	// end inline asm
	// begin inline asm
	mov.b32 %r7648, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7649, %r7643, %r7648;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7652, %r7507, %r7649;
	// end inline asm
	// begin inline asm
	mov.b32 %r7655, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7656, %r7643, %r7655;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7659, %r7515, %r7656;
	// end inline asm
	// begin inline asm
	mov.b32 %r7662, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7663, %r7643, %r7662;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7666, %r7523, %r7663;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7669, %r7645, %r7659, %r2202;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7673, %r7652, %r7666, %r2202;
	// end inline asm
	shl.b32 	%r7680, %r7673, 4;
	// begin inline asm
	lop3.b32 %r7677, %r2208, %r7669, %r7680, 202;
	// end inline asm
	xor.b32  	%r7740, %r7677, -2004318072;
	// begin inline asm
	mov.b32 %r7684, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r7682, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7683, %r7684, %r7682;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7686, %r7531, %r7683;
	// end inline asm
	// begin inline asm
	mov.b32 %r7689, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7690, %r7684, %r7689;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7693, %r7539, %r7690;
	// end inline asm
	// begin inline asm
	mov.b32 %r7696, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7697, %r7684, %r7696;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7700, %r7547, %r7697;
	// end inline asm
	// begin inline asm
	mov.b32 %r7703, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7704, %r7684, %r7703;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7707, %r7555, %r7704;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7710, %r7686, %r7700, %r2202;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7714, %r7693, %r7707, %r2202;
	// end inline asm
	shl.b32 	%r7721, %r7714, 4;
	// begin inline asm
	lop3.b32 %r7718, %r2208, %r7710, %r7721, 202;
	// end inline asm
	xor.b32  	%r7741, %r7718, -2004318072;
	st.shared.u32 	[%rd80], %r7738;
	st.shared.u32 	[%rd81], %r7739;
	st.shared.u32 	[%rd82], %r7740;
	st.shared.u32 	[%rd83], %r7741;
	add.s32 	%r7792, %r7792, -64;
	add.s64 	%rd86, %rd86, 8324;
	setp.eq.s32 	%p217, %r7792, 0;
	@%p217 bra 	LBB0_114;
	bra.uni 	LBB0_113;
LBB0_114:                               // %guard_pass10507
                                        //   in Loop: Header=BB0_112 Depth=1
	bar.sync 	0;
	ld.shared.u32 	%r7747, [%rd9];
	ld.shared.u32 	%r7748, [%rd10+128];
	ld.shared.u32 	%r7755, [%rd10+4];
	ld.shared.u32 	%r7756, [%rd10+132];
	// begin inline asm
	prmt.b32 %r7742, %r7747, %r7748, %r521;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7746, %r7747, %r7748, %r525;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7750, %r7755, %r7756, %r521;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7754, %r7755, %r7756, %r525;
	// end inline asm
	selp.b32 	%r7758, %r7746, %r7742, %p216;
	shfl.sync.bfly.b32	%r159, %r7758, 8, 31, -1;
	selp.b32 	%r7759, %r7754, %r7750, %p216;
	shfl.sync.bfly.b32	%r160, %r7759, 8, 31, -1;
	setp.eq.s32 	%p219, %r109, 0;
	@%p219 bra 	LBB0_116;
// %bb.115:                             // %L29131
                                        //   in Loop: Header=BB0_112 Depth=1
	selp.b32 	%r7760, %r160, %r7754, %p216;
	selp.b32 	%r7761, %r7750, %r160, %p216;
	selp.b32 	%r7762, %r159, %r7746, %p216;
	selp.b32 	%r7763, %r7742, %r159, %p216;
	shl.b32 	%r7764, %r109, 12;
	add.s32 	%r7765, %r96, %r7764;
	mul.wide.s32 	%rd84, %r7765, 4;
	add.s64 	%rd85, %rd3, %rd84;
	st.global.v4.u32 	[%rd85], {%r7763, %r7761, %r7762, %r7760};
	bra.uni 	LBB0_116;
LBB0_117:                               // %L29349
	st.global.u32 	[%rd4], %r7381;
	ret;
LBB0_1:                                 // %L8
	mov.u64 	%rd30, exception12345;
	cvta.global.u64 	%rd31, %rd30;
	{ // callseq 0, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd31;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 0
	{ // callseq 1, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd21;
	st.param.b32 	[param0+8], %r161;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 1
	// begin inline asm
	exit;
	// end inline asm
	// begin inline asm
	exit;
	// end inline asm
LBB0_3:                                 // %L149
	mov.u32 	%r168, 2;
	st.global.u32 	[%rd4], %r168;
	mov.u64 	%rd33, exception2324;
	cvta.global.u64 	%rd34, %rd33;
	{ // callseq 2, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd34;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 2
	{ // callseq 3, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd21;
	st.param.b32 	[param0+8], %r161;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 3
	// begin inline asm
	exit;
	// end inline asm
	// begin inline asm
	exit;
	// end inline asm
LBB0_119:                               // %L29448
	{ // callseq 5, 0
	.reg .b32 temp_param_reg;
	call.uni 
	julia_AssertionError_9517, 
	(
	);
	} // callseq 5
	mov.u64 	%rd41, exception12345;
	cvta.global.u64 	%rd42, %rd41;
	{ // callseq 6, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd42;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 6
	{ // callseq 7, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd21;
	st.param.b32 	[param0+8], %r161;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 7
	// begin inline asm
	exit;
	// end inline asm
	// begin inline asm
	exit;
	// end inline asm
LBB0_118:                               // %L29445
	{ // callseq 9, 0
	.reg .b32 temp_param_reg;
	call.uni 
	julia_AssertionError_9517, 
	(
	);
	} // callseq 9
	mov.u64 	%rd47, exception12345;
	cvta.global.u64 	%rd48, %rd47;
	{ // callseq 10, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd48;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 10
	{ // callseq 11, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd21;
	st.param.b32 	[param0+8], %r161;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 11
	// begin inline asm
	exit;
	// end inline asm
	// begin inline asm
	exit;
	// end inline asm
LBB0_144:                               // %L29442
	{ // callseq 15, 0
	.reg .b32 temp_param_reg;
	call.uni 
	julia_AssertionError_9517, 
	(
	);
	} // callseq 15
	mov.u64 	%rd61, exception12345;
	cvta.global.u64 	%rd62, %rd61;
	{ // callseq 16, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd62;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 16
	{ // callseq 17, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd21;
	st.param.b32 	[param0+8], %r161;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 17
	// begin inline asm
	exit;
	// end inline asm
	// begin inline asm
	exit;
	// end inline asm
                                        // -- End function
}
