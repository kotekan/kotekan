// PTX kernel code for the CUDA upchannelizer
// This file has been generated automatically by `upchan.jl`.
// Do not modify this file, your changes will be lost.

// PTX CompilerJob of MethodInstance for upchan(::Int32, ::Int32, ::Int32, ::Int32, ::Int32, ::Int32, ::CuDeviceVector{Float16x2, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int32, 1}) for sm_86, minthreads=512, blocks_per_sm=2

//
// Generated by LLVM NVPTX Back-End
//

.version 8.2
.target sm_86
.address_size 64

	// .globl	_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE // -- Begin function _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE
.func gpu_report_exception
(
	.param .b64 gpu_report_exception_param_0
)
.noreturn
{
	trap;
}
.func gpu_signal_exception
(
	.param .align 8 .b8 gpu_signal_exception_param_0[16]
)
.noreturn
{
	trap;
}
.extern .shared .align 32 .b8 shmem[];
.global .align 1 .b8 exception2111[6] = {101, 114, 114, 111, 114, 0};
.global .align 1 .b8 exception12130[10] = {101, 120, 99, 101, 112, 116, 105, 111, 110, 0};
                                        // @_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE
.visible .entry _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE(
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_0[16],
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_1,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_2,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_3,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_4,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_5,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_6,
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_7[32],
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_8[32],
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_9[32],
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_10[32]
)
.reqntid 512, 1, 1
.minnctapersm 2
{
	.reg .pred 	%p<199>;
	.reg .b16 	%rs<297>;
	.reg .b32 	%r<2523>;
	.reg .f32 	%f<794>;
	.reg .b64 	%rd<156>;

// %bb.0:                               // %conversion
	ld.param.u32 	%r86, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_0+8];
	ld.param.u64 	%rd30, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_0];
	// begin inline asm
	mov.u32 %r93, %dynamic_smem_size;
	// end inline asm
	setp.gt.u32 	%p1, %r93, 67839;
	@%p1 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:                              // %L16
	ld.param.u64 	%rd31, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_10];
	ld.param.u32 	%r87, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_1];
	mov.u32 	%r1, %ctaid.x;
	shl.b32 	%r94, %r1, 9;
	mov.u32 	%r2, %tid.y;
	shl.b32 	%r3, %r2, 5;
	mov.u32 	%r4, %tid.x;
	or.b32  	%r95, %r3, %r4;
	or.b32  	%r96, %r95, %r94;
	mul.wide.u32 	%rd37, %r96, 4;
	add.s64 	%rd4, %rd31, %rd37;
	mov.u32 	%r97, 1;
	st.global.u32 	[%rd4], %r97;
	setp.gt.u32 	%p2, %r87, 65535;
	@%p2 bra 	$L__BB0_7;
// %bb.3:                               // %L120
	ld.param.u32 	%r88, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_2];
	setp.lt.s32 	%p3, %r88, %r87;
	setp.gt.s32 	%p4, %r88, 131071;
	or.pred  	%p5, %p3, %p4;
	@%p5 bra 	$L__BB0_7;
// %bb.4:                               // %L127
	ld.param.u32 	%r89, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_3];
	sub.s32 	%r98, %r88, %r87;
	and.b32  	%r99, %r98, 255;
	setp.ne.s32 	%p6, %r99, 0;
	setp.gt.u32 	%p7, %r89, 2047;
	or.pred  	%p8, %p6, %p7;
	@%p8 bra 	$L__BB0_7;
// %bb.5:                               // %L138
	ld.param.u32 	%r90, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_4];
	setp.lt.s32 	%p9, %r90, %r89;
	setp.gt.s32 	%p10, %r90, 4095;
	or.pred  	%p11, %p9, %p10;
	@%p11 bra 	$L__BB0_7;
// %bb.6:                               // %L145
	sub.s32 	%r100, %r90, %r89;
	add.s32 	%r101, %r100, 3;
	and.b32  	%r102, %r101, 7;
	setp.eq.s32 	%p12, %r102, 0;
	@%p12 bra 	$L__BB0_8;
	bra.uni 	$L__BB0_7;
$L__BB0_8:                              // %L260
	ld.param.u32 	%r91, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_5];
	setp.lt.s32 	%p13, %r91, 0;
	@%p13 bra 	$L__BB0_10;
// %bb.9:                               // %L262
	ld.param.u32 	%r92, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_6];
	setp.le.s32 	%p14, %r91, %r92;
	setp.lt.s32 	%p15, %r92, 17;
	and.pred  	%p16, %p14, %p15;
	@%p16 bra 	$L__BB0_11;
	bra.uni 	$L__BB0_10;
$L__BB0_11:                             // %pass180
	bfe.u32 	%r47, %r4, 1, 1;
	and.b32  	%r48, %r4, 1;
	bfe.u32 	%r49, %r4, 2, 1;
	shl.b32 	%r106, %r49, 1;
	shl.b32 	%r107, %r48, 2;
	shl.b32 	%r108, %r47, 3;
	or.b32  	%r109, %r107, %r108;
	or.b32  	%r110, %r106, %r109;
	shr.u32 	%r50, %r4, 4;
	or.b32  	%r51, %r50, %r110;
	shl.b32 	%r52, %r51, 1;
	or.b32  	%r111, %r52, -127;
	cvt.rn.f32.s32 	%f46, %r111;
	mov.f32 	%f47, 0f43800000;
	div.approx.f32 	%f42, %f46, %f47;
	mov.f32 	%f71, 0f00000000;
	mul.f32 	%f44, %f42, 0f40800000;
	setp.neu.f32 	%p22, %f44, 0f00000000;
	mov.f32 	%f793, 0f3F800000;
	mov.f32 	%f786, %f793;
	@%p22 bra 	$L__BB0_12;
	bra.uni 	$L__BB0_13;
$L__BB0_12:                             // %L576
	add.f32 	%f74, %f44, %f44;
	mov.b32 	%r119, %f74;
	and.b32  	%r120, %r119, -2147483648;
	or.b32  	%r121, %r120, 1056964608;
	mov.b32 	%f75, %r121;
	add.f32 	%f76, %f74, %f75;
	cvt.rzi.f32.f32 	%f77, %f76;
	abs.f32 	%f78, %f74;
	setp.gt.f32 	%p23, %f78, 0f4B000000;
	selp.f32 	%f79, %f74, %f77, %p23;
	cvt.rzi.f32.f32 	%f80, %f74;
	setp.lt.f32 	%p24, %f78, 0f3F000000;
	selp.f32 	%f81, %f80, %f79, %p24;
	cvt.rzi.s32.f32 	%r122, %f81;
	fma.rn.f32 	%f82, %f81, 0fBF000000, %f44;
	mul.f32 	%f83, %f82, %f82;
	fma.rn.f32 	%f84, %f83, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f85, %f83, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f86, %f84, %f83, 0fC0A55DF6;
	fma.rn.f32 	%f87, %f85, %f83, 0f4081E0CF;
	fma.rn.f32 	%f88, %f83, %f82, 0f00000000;
	fma.rn.f32 	%f89, %f87, %f83, 0fC09DE9E6;
	fma.rn.f32 	%f90, %f86, %f88, 0f00000000;
	fma.rn.f32 	%f91, %f89, %f83, 0f3F800000;
	fma.rn.f32 	%f92, %f82, 0f40490FDB, %f90;
	and.b32  	%r123, %r122, 1;
	setp.eq.b32 	%p25, %r123, 1;
	selp.f32 	%f93, %f91, %f92, %p25;
	and.b32  	%r124, %r122, 2;
	setp.eq.s32 	%p26, %r124, 0;
	sub.f32 	%f95, %f71, %f93;
	selp.f32 	%f96, %f93, %f95, %p26;
	cvt.rzi.f32.f32 	%f97, %f44;
	setp.eq.f32 	%p27, %f44, %f97;
	mul.f32 	%f98, %f44, 0f00000000;
	selp.f32 	%f99, %f98, %f96, %p27;
	mul.f32 	%f100, %f42, 0f41490FDB;
	div.approx.f32 	%f786, %f99, %f100;
$L__BB0_13:                             // %L580
	or.b32  	%r125, %r52, -95;
	cvt.rn.f32.s32 	%f104, %r125;
	div.approx.f32 	%f4, %f104, %f47;
	mul.f32 	%f6, %f4, 0f40800000;
	setp.eq.f32 	%p33, %f6, 0f00000000;
	mov.f32 	%f787, %f793;
	@%p33 bra 	$L__BB0_15;
// %bb.14:                              // %L594
	add.f32 	%f132, %f6, %f6;
	mov.b32 	%r133, %f132;
	and.b32  	%r134, %r133, -2147483648;
	or.b32  	%r135, %r134, 1056964608;
	mov.b32 	%f133, %r135;
	add.f32 	%f134, %f132, %f133;
	cvt.rzi.f32.f32 	%f135, %f134;
	abs.f32 	%f136, %f132;
	setp.gt.f32 	%p34, %f136, 0f4B000000;
	selp.f32 	%f137, %f132, %f135, %p34;
	cvt.rzi.f32.f32 	%f138, %f132;
	setp.lt.f32 	%p35, %f136, 0f3F000000;
	selp.f32 	%f139, %f138, %f137, %p35;
	cvt.rzi.s32.f32 	%r136, %f139;
	fma.rn.f32 	%f140, %f139, 0fBF000000, %f6;
	mul.f32 	%f141, %f140, %f140;
	fma.rn.f32 	%f142, %f141, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f143, %f141, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f144, %f142, %f141, 0fC0A55DF6;
	fma.rn.f32 	%f145, %f143, %f141, 0f4081E0CF;
	fma.rn.f32 	%f146, %f141, %f140, 0f00000000;
	fma.rn.f32 	%f147, %f145, %f141, 0fC09DE9E6;
	fma.rn.f32 	%f148, %f144, %f146, 0f00000000;
	fma.rn.f32 	%f149, %f147, %f141, 0f3F800000;
	fma.rn.f32 	%f150, %f140, 0f40490FDB, %f148;
	and.b32  	%r137, %r136, 1;
	setp.eq.b32 	%p36, %r137, 1;
	selp.f32 	%f151, %f149, %f150, %p36;
	and.b32  	%r138, %r136, 2;
	setp.eq.s32 	%p37, %r138, 0;
	sub.f32 	%f153, %f71, %f151;
	selp.f32 	%f154, %f151, %f153, %p37;
	cvt.rzi.f32.f32 	%f155, %f6;
	setp.eq.f32 	%p38, %f6, %f155;
	mul.f32 	%f156, %f6, 0f00000000;
	selp.f32 	%f157, %f156, %f154, %p38;
	mul.f32 	%f158, %f4, 0f41490FDB;
	div.approx.f32 	%f787, %f157, %f158;
$L__BB0_15:                             // %L598
	or.b32  	%r142, %r52, -63;
	cvt.rn.f32.s32 	%f163, %r142;
	div.approx.f32 	%f9, %f163, %f47;
	mul.f32 	%f11, %f9, 0f40800000;
	setp.eq.f32 	%p44, %f11, 0f00000000;
	mov.f32 	%f788, %f793;
	@%p44 bra 	$L__BB0_17;
// %bb.16:                              // %L674
	add.f32 	%f191, %f11, %f11;
	mov.b32 	%r150, %f191;
	and.b32  	%r151, %r150, -2147483648;
	or.b32  	%r152, %r151, 1056964608;
	mov.b32 	%f192, %r152;
	add.f32 	%f193, %f191, %f192;
	cvt.rzi.f32.f32 	%f194, %f193;
	abs.f32 	%f195, %f191;
	setp.gt.f32 	%p45, %f195, 0f4B000000;
	selp.f32 	%f196, %f191, %f194, %p45;
	cvt.rzi.f32.f32 	%f197, %f191;
	setp.lt.f32 	%p46, %f195, 0f3F000000;
	selp.f32 	%f198, %f197, %f196, %p46;
	cvt.rzi.s32.f32 	%r153, %f198;
	fma.rn.f32 	%f199, %f198, 0fBF000000, %f11;
	mul.f32 	%f200, %f199, %f199;
	fma.rn.f32 	%f201, %f200, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f202, %f200, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f203, %f201, %f200, 0fC0A55DF6;
	fma.rn.f32 	%f204, %f202, %f200, 0f4081E0CF;
	fma.rn.f32 	%f205, %f200, %f199, 0f00000000;
	fma.rn.f32 	%f206, %f204, %f200, 0fC09DE9E6;
	fma.rn.f32 	%f207, %f203, %f205, 0f00000000;
	fma.rn.f32 	%f208, %f206, %f200, 0f3F800000;
	fma.rn.f32 	%f209, %f199, 0f40490FDB, %f207;
	and.b32  	%r154, %r153, 1;
	setp.eq.b32 	%p47, %r154, 1;
	selp.f32 	%f210, %f208, %f209, %p47;
	and.b32  	%r155, %r153, 2;
	setp.eq.s32 	%p48, %r155, 0;
	sub.f32 	%f212, %f71, %f210;
	selp.f32 	%f213, %f210, %f212, %p48;
	cvt.rzi.f32.f32 	%f214, %f11;
	setp.eq.f32 	%p49, %f11, %f214;
	mul.f32 	%f215, %f11, 0f00000000;
	selp.f32 	%f216, %f215, %f213, %p49;
	mul.f32 	%f217, %f9, 0f41490FDB;
	div.approx.f32 	%f788, %f216, %f217;
$L__BB0_17:                             // %L678
	or.b32  	%r156, %r52, -31;
	cvt.rn.f32.s32 	%f221, %r156;
	div.approx.f32 	%f15, %f221, %f47;
	mul.f32 	%f17, %f15, 0f40800000;
	setp.eq.f32 	%p55, %f17, 0f00000000;
	mov.f32 	%f789, %f793;
	@%p55 bra 	$L__BB0_19;
// %bb.18:                              // %L692
	add.f32 	%f249, %f17, %f17;
	mov.b32 	%r164, %f249;
	and.b32  	%r165, %r164, -2147483648;
	or.b32  	%r166, %r165, 1056964608;
	mov.b32 	%f250, %r166;
	add.f32 	%f251, %f249, %f250;
	cvt.rzi.f32.f32 	%f252, %f251;
	abs.f32 	%f253, %f249;
	setp.gt.f32 	%p56, %f253, 0f4B000000;
	selp.f32 	%f254, %f249, %f252, %p56;
	cvt.rzi.f32.f32 	%f255, %f249;
	setp.lt.f32 	%p57, %f253, 0f3F000000;
	selp.f32 	%f256, %f255, %f254, %p57;
	cvt.rzi.s32.f32 	%r167, %f256;
	fma.rn.f32 	%f257, %f256, 0fBF000000, %f17;
	mul.f32 	%f258, %f257, %f257;
	fma.rn.f32 	%f259, %f258, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f260, %f258, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f261, %f259, %f258, 0fC0A55DF6;
	fma.rn.f32 	%f262, %f260, %f258, 0f4081E0CF;
	fma.rn.f32 	%f263, %f258, %f257, 0f00000000;
	fma.rn.f32 	%f264, %f262, %f258, 0fC09DE9E6;
	fma.rn.f32 	%f265, %f261, %f263, 0f00000000;
	fma.rn.f32 	%f266, %f264, %f258, 0f3F800000;
	fma.rn.f32 	%f267, %f257, 0f40490FDB, %f265;
	and.b32  	%r168, %r167, 1;
	setp.eq.b32 	%p58, %r168, 1;
	selp.f32 	%f268, %f266, %f267, %p58;
	and.b32  	%r169, %r167, 2;
	setp.eq.s32 	%p59, %r169, 0;
	sub.f32 	%f270, %f71, %f268;
	selp.f32 	%f271, %f268, %f270, %p59;
	cvt.rzi.f32.f32 	%f272, %f17;
	setp.eq.f32 	%p60, %f17, %f272;
	mul.f32 	%f273, %f17, 0f00000000;
	selp.f32 	%f274, %f273, %f271, %p60;
	mul.f32 	%f275, %f15, 0f41490FDB;
	div.approx.f32 	%f789, %f274, %f275;
$L__BB0_19:                             // %L696
	or.b32  	%r173, %r52, 1;
	cvt.rn.f32.s32 	%f280, %r173;
	div.approx.f32 	%f20, %f280, %f47;
	mul.f32 	%f22, %f20, 0f40800000;
	setp.eq.f32 	%p66, %f22, 0f00000000;
	mov.f32 	%f790, %f793;
	@%p66 bra 	$L__BB0_21;
// %bb.20:                              // %L772
	add.f32 	%f308, %f22, %f22;
	mov.b32 	%r181, %f308;
	and.b32  	%r182, %r181, -2147483648;
	or.b32  	%r183, %r182, 1056964608;
	mov.b32 	%f309, %r183;
	add.f32 	%f310, %f308, %f309;
	cvt.rzi.f32.f32 	%f311, %f310;
	abs.f32 	%f312, %f308;
	setp.gt.f32 	%p67, %f312, 0f4B000000;
	selp.f32 	%f313, %f308, %f311, %p67;
	cvt.rzi.f32.f32 	%f314, %f308;
	setp.lt.f32 	%p68, %f312, 0f3F000000;
	selp.f32 	%f315, %f314, %f313, %p68;
	cvt.rzi.s32.f32 	%r184, %f315;
	fma.rn.f32 	%f316, %f315, 0fBF000000, %f22;
	mul.f32 	%f317, %f316, %f316;
	fma.rn.f32 	%f318, %f317, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f319, %f317, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f320, %f318, %f317, 0fC0A55DF6;
	fma.rn.f32 	%f321, %f319, %f317, 0f4081E0CF;
	fma.rn.f32 	%f322, %f317, %f316, 0f00000000;
	fma.rn.f32 	%f323, %f321, %f317, 0fC09DE9E6;
	fma.rn.f32 	%f324, %f320, %f322, 0f00000000;
	fma.rn.f32 	%f325, %f323, %f317, 0f3F800000;
	fma.rn.f32 	%f326, %f316, 0f40490FDB, %f324;
	and.b32  	%r185, %r184, 1;
	setp.eq.b32 	%p69, %r185, 1;
	selp.f32 	%f327, %f325, %f326, %p69;
	and.b32  	%r186, %r184, 2;
	setp.eq.s32 	%p70, %r186, 0;
	sub.f32 	%f329, %f71, %f327;
	selp.f32 	%f330, %f327, %f329, %p70;
	cvt.rzi.f32.f32 	%f331, %f22;
	setp.eq.f32 	%p71, %f22, %f331;
	mul.f32 	%f332, %f22, 0f00000000;
	selp.f32 	%f333, %f332, %f330, %p71;
	mul.f32 	%f334, %f20, 0f41490FDB;
	div.approx.f32 	%f790, %f333, %f334;
$L__BB0_21:                             // %L776
	or.b32  	%r187, %r52, 33;
	cvt.rn.f32.s32 	%f338, %r187;
	div.approx.f32 	%f26, %f338, %f47;
	mul.f32 	%f28, %f26, 0f40800000;
	setp.eq.f32 	%p77, %f28, 0f00000000;
	mov.f32 	%f791, %f793;
	@%p77 bra 	$L__BB0_23;
// %bb.22:                              // %L790
	add.f32 	%f366, %f28, %f28;
	mov.b32 	%r195, %f366;
	and.b32  	%r196, %r195, -2147483648;
	or.b32  	%r197, %r196, 1056964608;
	mov.b32 	%f367, %r197;
	add.f32 	%f368, %f366, %f367;
	cvt.rzi.f32.f32 	%f369, %f368;
	abs.f32 	%f370, %f366;
	setp.gt.f32 	%p78, %f370, 0f4B000000;
	selp.f32 	%f371, %f366, %f369, %p78;
	cvt.rzi.f32.f32 	%f372, %f366;
	setp.lt.f32 	%p79, %f370, 0f3F000000;
	selp.f32 	%f373, %f372, %f371, %p79;
	cvt.rzi.s32.f32 	%r198, %f373;
	fma.rn.f32 	%f374, %f373, 0fBF000000, %f28;
	mul.f32 	%f375, %f374, %f374;
	fma.rn.f32 	%f376, %f375, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f377, %f375, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f378, %f376, %f375, 0fC0A55DF6;
	fma.rn.f32 	%f379, %f377, %f375, 0f4081E0CF;
	fma.rn.f32 	%f380, %f375, %f374, 0f00000000;
	fma.rn.f32 	%f381, %f379, %f375, 0fC09DE9E6;
	fma.rn.f32 	%f382, %f378, %f380, 0f00000000;
	fma.rn.f32 	%f383, %f381, %f375, 0f3F800000;
	fma.rn.f32 	%f384, %f374, 0f40490FDB, %f382;
	and.b32  	%r199, %r198, 1;
	setp.eq.b32 	%p80, %r199, 1;
	selp.f32 	%f385, %f383, %f384, %p80;
	and.b32  	%r200, %r198, 2;
	setp.eq.s32 	%p81, %r200, 0;
	sub.f32 	%f387, %f71, %f385;
	selp.f32 	%f388, %f385, %f387, %p81;
	cvt.rzi.f32.f32 	%f389, %f28;
	setp.eq.f32 	%p82, %f28, %f389;
	mul.f32 	%f390, %f28, 0f00000000;
	selp.f32 	%f391, %f390, %f388, %p82;
	mul.f32 	%f392, %f26, 0f41490FDB;
	div.approx.f32 	%f791, %f391, %f392;
$L__BB0_23:                             // %L794
	or.b32  	%r204, %r52, 65;
	cvt.rn.f32.s32 	%f397, %r204;
	div.approx.f32 	%f31, %f397, %f47;
	mul.f32 	%f33, %f31, 0f40800000;
	setp.eq.f32 	%p88, %f33, 0f00000000;
	mov.f32 	%f792, %f793;
	@%p88 bra 	$L__BB0_25;
// %bb.24:                              // %L870
	add.f32 	%f425, %f33, %f33;
	mov.b32 	%r212, %f425;
	and.b32  	%r213, %r212, -2147483648;
	or.b32  	%r214, %r213, 1056964608;
	mov.b32 	%f426, %r214;
	add.f32 	%f427, %f425, %f426;
	cvt.rzi.f32.f32 	%f428, %f427;
	abs.f32 	%f429, %f425;
	setp.gt.f32 	%p89, %f429, 0f4B000000;
	selp.f32 	%f430, %f425, %f428, %p89;
	cvt.rzi.f32.f32 	%f431, %f425;
	setp.lt.f32 	%p90, %f429, 0f3F000000;
	selp.f32 	%f432, %f431, %f430, %p90;
	cvt.rzi.s32.f32 	%r215, %f432;
	fma.rn.f32 	%f433, %f432, 0fBF000000, %f33;
	mul.f32 	%f434, %f433, %f433;
	fma.rn.f32 	%f435, %f434, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f436, %f434, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f437, %f435, %f434, 0fC0A55DF6;
	fma.rn.f32 	%f438, %f436, %f434, 0f4081E0CF;
	fma.rn.f32 	%f439, %f434, %f433, 0f00000000;
	fma.rn.f32 	%f440, %f438, %f434, 0fC09DE9E6;
	fma.rn.f32 	%f441, %f437, %f439, 0f00000000;
	fma.rn.f32 	%f442, %f440, %f434, 0f3F800000;
	fma.rn.f32 	%f443, %f433, 0f40490FDB, %f441;
	and.b32  	%r216, %r215, 1;
	setp.eq.b32 	%p91, %r216, 1;
	selp.f32 	%f444, %f442, %f443, %p91;
	and.b32  	%r217, %r215, 2;
	setp.eq.s32 	%p92, %r217, 0;
	sub.f32 	%f446, %f71, %f444;
	selp.f32 	%f447, %f444, %f446, %p92;
	cvt.rzi.f32.f32 	%f448, %f33;
	setp.eq.f32 	%p93, %f33, %f448;
	mul.f32 	%f449, %f33, 0f00000000;
	selp.f32 	%f450, %f449, %f447, %p93;
	mul.f32 	%f451, %f31, 0f41490FDB;
	div.approx.f32 	%f792, %f450, %f451;
$L__BB0_25:                             // %L874
	or.b32  	%r218, %r52, 97;
	cvt.rn.f32.s32 	%f455, %r218;
	div.approx.f32 	%f37, %f455, %f47;
	mul.f32 	%f39, %f37, 0f40800000;
	setp.eq.f32 	%p99, %f39, 0f00000000;
	@%p99 bra 	$L__BB0_27;
// %bb.26:                              // %L888
	add.f32 	%f483, %f39, %f39;
	mov.b32 	%r226, %f483;
	and.b32  	%r227, %r226, -2147483648;
	or.b32  	%r228, %r227, 1056964608;
	mov.b32 	%f484, %r228;
	add.f32 	%f485, %f483, %f484;
	cvt.rzi.f32.f32 	%f486, %f485;
	abs.f32 	%f487, %f483;
	setp.gt.f32 	%p100, %f487, 0f4B000000;
	selp.f32 	%f488, %f483, %f486, %p100;
	cvt.rzi.f32.f32 	%f489, %f483;
	setp.lt.f32 	%p101, %f487, 0f3F000000;
	selp.f32 	%f490, %f489, %f488, %p101;
	cvt.rzi.s32.f32 	%r229, %f490;
	fma.rn.f32 	%f491, %f490, 0fBF000000, %f39;
	mul.f32 	%f492, %f491, %f491;
	fma.rn.f32 	%f493, %f492, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f494, %f492, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f495, %f493, %f492, 0fC0A55DF6;
	fma.rn.f32 	%f496, %f494, %f492, 0f4081E0CF;
	fma.rn.f32 	%f497, %f492, %f491, 0f00000000;
	fma.rn.f32 	%f498, %f496, %f492, 0fC09DE9E6;
	fma.rn.f32 	%f499, %f495, %f497, 0f00000000;
	fma.rn.f32 	%f500, %f498, %f492, 0f3F800000;
	fma.rn.f32 	%f501, %f491, 0f40490FDB, %f499;
	and.b32  	%r230, %r229, 1;
	setp.eq.b32 	%p102, %r230, 1;
	selp.f32 	%f502, %f500, %f501, %p102;
	and.b32  	%r231, %r229, 2;
	setp.eq.s32 	%p103, %r231, 0;
	sub.f32 	%f504, %f71, %f502;
	selp.f32 	%f505, %f502, %f504, %p103;
	cvt.rzi.f32.f32 	%f506, %f39;
	setp.eq.f32 	%p104, %f39, %f506;
	mul.f32 	%f507, %f39, 0f00000000;
	selp.f32 	%f508, %f507, %f505, %p104;
	mul.f32 	%f509, %f37, 0f41490FDB;
	div.approx.f32 	%f793, %f508, %f509;
$L__BB0_27:                             // %L892
	setp.le.s32 	%p162, %r88, %r87;
	mov.u32 	%r2507, 0;
	@%p162 bra 	$L__BB0_36;
// %bb.28:                              // %L1404.lr.ph
	abs.f32 	%f48, %f42;
	abs.f32 	%f106, %f4;
	abs.f32 	%f165, %f9;
	abs.f32 	%f223, %f15;
	abs.f32 	%f282, %f20;
	abs.f32 	%f340, %f26;
	setp.gt.f32 	%p17, %f48, 0f4B800000;
	mul.f32 	%f49, %f42, 0f00000000;
	setp.gt.f32 	%p28, %f106, 0f4B800000;
	mul.f32 	%f107, %f4, 0f00000000;
	setp.gt.f32 	%p39, %f165, 0f4B800000;
	mul.f32 	%f166, %f9, 0f00000000;
	setp.gt.f32 	%p50, %f223, 0f4B800000;
	mul.f32 	%f224, %f15, 0f00000000;
	setp.gt.f32 	%p61, %f282, 0f4B800000;
	mul.f32 	%f283, %f20, 0f00000000;
	setp.gt.f32 	%p72, %f340, 0f4B800000;
	mul.f32 	%f341, %f26, 0f00000000;
	abs.f32 	%f399, %f31;
	selp.f32 	%f50, %f49, %f42, %p17;
	selp.f32 	%f108, %f107, %f4, %p28;
	selp.f32 	%f167, %f166, %f9, %p39;
	selp.f32 	%f225, %f224, %f15, %p50;
	selp.f32 	%f284, %f283, %f20, %p61;
	selp.f32 	%f342, %f341, %f26, %p72;
	setp.gt.f32 	%p83, %f399, 0f4B800000;
	mul.f32 	%f400, %f31, 0f00000000;
	add.f32 	%f51, %f50, %f50;
	add.f32 	%f109, %f108, %f108;
	add.f32 	%f168, %f167, %f167;
	add.f32 	%f226, %f225, %f225;
	add.f32 	%f285, %f284, %f284;
	add.f32 	%f343, %f342, %f342;
	selp.f32 	%f401, %f400, %f31, %p83;
	abs.f32 	%f457, %f37;
	mov.b32 	%r112, %f51;
	mov.b32 	%r126, %f109;
	mov.b32 	%r143, %f168;
	mov.b32 	%r157, %f226;
	mov.b32 	%r174, %f285;
	mov.b32 	%r188, %f343;
	add.f32 	%f402, %f401, %f401;
	setp.gt.f32 	%p94, %f457, 0f4B800000;
	mul.f32 	%f458, %f37, 0f00000000;
	and.b32  	%r113, %r112, -2147483648;
	and.b32  	%r127, %r126, -2147483648;
	and.b32  	%r144, %r143, -2147483648;
	and.b32  	%r158, %r157, -2147483648;
	and.b32  	%r175, %r174, -2147483648;
	and.b32  	%r189, %r188, -2147483648;
	mov.b32 	%r205, %f402;
	selp.f32 	%f459, %f458, %f37, %p94;
	or.b32  	%r114, %r113, 1056964608;
	or.b32  	%r128, %r127, 1056964608;
	or.b32  	%r145, %r144, 1056964608;
	or.b32  	%r159, %r158, 1056964608;
	or.b32  	%r176, %r175, 1056964608;
	or.b32  	%r190, %r189, 1056964608;
	and.b32  	%r206, %r205, -2147483648;
	add.f32 	%f460, %f459, %f459;
	mov.b32 	%f52, %r114;
	mov.b32 	%f110, %r128;
	mov.b32 	%f169, %r145;
	mov.b32 	%f227, %r159;
	mov.b32 	%f286, %r176;
	mov.b32 	%f344, %r190;
	or.b32  	%r207, %r206, 1056964608;
	mov.b32 	%r219, %f460;
	add.f32 	%f53, %f51, %f52;
	abs.f32 	%f55, %f51;
	add.f32 	%f111, %f109, %f110;
	abs.f32 	%f113, %f109;
	add.f32 	%f170, %f168, %f169;
	abs.f32 	%f172, %f168;
	add.f32 	%f228, %f226, %f227;
	abs.f32 	%f230, %f226;
	add.f32 	%f287, %f285, %f286;
	abs.f32 	%f289, %f285;
	add.f32 	%f345, %f343, %f344;
	abs.f32 	%f347, %f343;
	mov.b32 	%f403, %r207;
	and.b32  	%r220, %r219, -2147483648;
	cvt.rzi.f32.f32 	%f54, %f53;
	setp.gt.f32 	%p18, %f55, 0f4B000000;
	cvt.rzi.f32.f32 	%f112, %f111;
	setp.gt.f32 	%p29, %f113, 0f4B000000;
	cvt.rzi.f32.f32 	%f171, %f170;
	setp.gt.f32 	%p40, %f172, 0f4B000000;
	cvt.rzi.f32.f32 	%f229, %f228;
	setp.gt.f32 	%p51, %f230, 0f4B000000;
	cvt.rzi.f32.f32 	%f288, %f287;
	setp.gt.f32 	%p62, %f289, 0f4B000000;
	cvt.rzi.f32.f32 	%f346, %f345;
	setp.gt.f32 	%p73, %f347, 0f4B000000;
	add.f32 	%f404, %f402, %f403;
	abs.f32 	%f406, %f402;
	or.b32  	%r221, %r220, 1056964608;
	selp.f32 	%f56, %f51, %f54, %p18;
	cvt.rzi.f32.f32 	%f57, %f51;
	setp.lt.f32 	%p19, %f55, 0f3F000000;
	selp.f32 	%f114, %f109, %f112, %p29;
	cvt.rzi.f32.f32 	%f115, %f109;
	setp.lt.f32 	%p30, %f113, 0f3F000000;
	selp.f32 	%f173, %f168, %f171, %p40;
	cvt.rzi.f32.f32 	%f174, %f168;
	setp.lt.f32 	%p41, %f172, 0f3F000000;
	selp.f32 	%f231, %f226, %f229, %p51;
	cvt.rzi.f32.f32 	%f232, %f226;
	setp.lt.f32 	%p52, %f230, 0f3F000000;
	selp.f32 	%f290, %f285, %f288, %p62;
	cvt.rzi.f32.f32 	%f291, %f285;
	setp.lt.f32 	%p63, %f289, 0f3F000000;
	selp.f32 	%f348, %f343, %f346, %p73;
	cvt.rzi.f32.f32 	%f349, %f343;
	setp.lt.f32 	%p74, %f347, 0f3F000000;
	cvt.rzi.f32.f32 	%f405, %f404;
	setp.gt.f32 	%p84, %f406, 0f4B000000;
	mov.b32 	%f461, %r221;
	selp.f32 	%f58, %f57, %f56, %p19;
	selp.f32 	%f116, %f115, %f114, %p30;
	selp.f32 	%f175, %f174, %f173, %p41;
	selp.f32 	%f233, %f232, %f231, %p52;
	selp.f32 	%f292, %f291, %f290, %p63;
	selp.f32 	%f350, %f349, %f348, %p74;
	selp.f32 	%f407, %f402, %f405, %p84;
	cvt.rzi.f32.f32 	%f408, %f402;
	setp.lt.f32 	%p85, %f406, 0f3F000000;
	add.f32 	%f462, %f460, %f461;
	abs.f32 	%f464, %f460;
	fma.rn.f32 	%f59, %f58, 0fBF000000, %f50;
	fma.rn.f32 	%f117, %f116, 0fBF000000, %f108;
	fma.rn.f32 	%f176, %f175, 0fBF000000, %f167;
	fma.rn.f32 	%f234, %f233, 0fBF000000, %f225;
	fma.rn.f32 	%f293, %f292, 0fBF000000, %f284;
	fma.rn.f32 	%f351, %f350, 0fBF000000, %f342;
	selp.f32 	%f409, %f408, %f407, %p85;
	cvt.rzi.f32.f32 	%f463, %f462;
	setp.gt.f32 	%p95, %f464, 0f4B000000;
	mul.f32 	%f60, %f59, %f59;
	mul.f32 	%f118, %f117, %f117;
	mul.f32 	%f177, %f176, %f176;
	mul.f32 	%f235, %f234, %f234;
	mul.f32 	%f294, %f293, %f293;
	mul.f32 	%f352, %f351, %f351;
	fma.rn.f32 	%f410, %f409, 0fBF000000, %f401;
	selp.f32 	%f465, %f460, %f463, %p95;
	cvt.rzi.f32.f32 	%f466, %f460;
	setp.lt.f32 	%p96, %f464, 0f3F000000;
	cvt.rzi.s32.f32 	%r115, %f58;
	fma.rn.f32 	%f61, %f60, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f62, %f60, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r129, %f116;
	fma.rn.f32 	%f119, %f118, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f120, %f118, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r146, %f175;
	fma.rn.f32 	%f178, %f177, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f179, %f177, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r160, %f233;
	fma.rn.f32 	%f236, %f235, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f237, %f235, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r177, %f292;
	fma.rn.f32 	%f295, %f294, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f296, %f294, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r191, %f350;
	fma.rn.f32 	%f353, %f352, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f354, %f352, 0f3E684E12, 0fBFAAD2E0;
	mul.f32 	%f411, %f410, %f410;
	selp.f32 	%f467, %f466, %f465, %p96;
	add.s32 	%r116, %r115, 1;
	fma.rn.f32 	%f63, %f61, %f60, 0fC0A55DF6;
	fma.rn.f32 	%f64, %f62, %f60, 0f4081E0CF;
	fma.rn.f32 	%f65, %f60, %f59, 0f00000000;
	add.s32 	%r130, %r129, 1;
	fma.rn.f32 	%f121, %f119, %f118, 0fC0A55DF6;
	fma.rn.f32 	%f122, %f120, %f118, 0f4081E0CF;
	fma.rn.f32 	%f123, %f118, %f117, 0f00000000;
	add.s32 	%r147, %r146, 1;
	fma.rn.f32 	%f180, %f178, %f177, 0fC0A55DF6;
	fma.rn.f32 	%f181, %f179, %f177, 0f4081E0CF;
	fma.rn.f32 	%f182, %f177, %f176, 0f00000000;
	add.s32 	%r161, %r160, 1;
	fma.rn.f32 	%f238, %f236, %f235, 0fC0A55DF6;
	fma.rn.f32 	%f239, %f237, %f235, 0f4081E0CF;
	fma.rn.f32 	%f240, %f235, %f234, 0f00000000;
	add.s32 	%r178, %r177, 1;
	fma.rn.f32 	%f297, %f295, %f294, 0fC0A55DF6;
	fma.rn.f32 	%f298, %f296, %f294, 0f4081E0CF;
	fma.rn.f32 	%f299, %f294, %f293, 0f00000000;
	add.s32 	%r192, %r191, 1;
	fma.rn.f32 	%f355, %f353, %f352, 0fC0A55DF6;
	fma.rn.f32 	%f356, %f354, %f352, 0f4081E0CF;
	fma.rn.f32 	%f357, %f352, %f351, 0f00000000;
	cvt.rzi.s32.f32 	%r208, %f409;
	fma.rn.f32 	%f412, %f411, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f413, %f411, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f468, %f467, 0fBF000000, %f459;
	fma.rn.f32 	%f66, %f64, %f60, 0fC09DE9E6;
	fma.rn.f32 	%f67, %f63, %f65, 0f00000000;
	and.b32  	%r117, %r116, 1;
	fma.rn.f32 	%f124, %f122, %f118, 0fC09DE9E6;
	fma.rn.f32 	%f125, %f121, %f123, 0f00000000;
	and.b32  	%r131, %r130, 1;
	fma.rn.f32 	%f183, %f181, %f177, 0fC09DE9E6;
	fma.rn.f32 	%f184, %f180, %f182, 0f00000000;
	and.b32  	%r148, %r147, 1;
	fma.rn.f32 	%f241, %f239, %f235, 0fC09DE9E6;
	fma.rn.f32 	%f242, %f238, %f240, 0f00000000;
	and.b32  	%r162, %r161, 1;
	fma.rn.f32 	%f300, %f298, %f294, 0fC09DE9E6;
	fma.rn.f32 	%f301, %f297, %f299, 0f00000000;
	and.b32  	%r179, %r178, 1;
	fma.rn.f32 	%f358, %f356, %f352, 0fC09DE9E6;
	fma.rn.f32 	%f359, %f355, %f357, 0f00000000;
	and.b32  	%r193, %r192, 1;
	add.s32 	%r209, %r208, 1;
	fma.rn.f32 	%f414, %f412, %f411, 0fC0A55DF6;
	fma.rn.f32 	%f415, %f413, %f411, 0f4081E0CF;
	fma.rn.f32 	%f416, %f411, %f410, 0f00000000;
	mul.f32 	%f469, %f468, %f468;
	shl.b32 	%r40, %r4, 1;
	fma.rn.f32 	%f68, %f66, %f60, 0f3F800000;
	fma.rn.f32 	%f69, %f59, 0f40490FDB, %f67;
	setp.eq.b32 	%p20, %r117, 1;
	fma.rn.f32 	%f126, %f124, %f118, 0f3F800000;
	fma.rn.f32 	%f127, %f117, 0f40490FDB, %f125;
	setp.eq.b32 	%p31, %r131, 1;
	fma.rn.f32 	%f185, %f183, %f177, 0f3F800000;
	fma.rn.f32 	%f186, %f176, 0f40490FDB, %f184;
	setp.eq.b32 	%p42, %r148, 1;
	fma.rn.f32 	%f243, %f241, %f235, 0f3F800000;
	fma.rn.f32 	%f244, %f234, 0f40490FDB, %f242;
	setp.eq.b32 	%p53, %r162, 1;
	fma.rn.f32 	%f302, %f300, %f294, 0f3F800000;
	fma.rn.f32 	%f303, %f293, 0f40490FDB, %f301;
	setp.eq.b32 	%p64, %r179, 1;
	fma.rn.f32 	%f360, %f358, %f352, 0f3F800000;
	fma.rn.f32 	%f361, %f351, 0f40490FDB, %f359;
	setp.eq.b32 	%p75, %r193, 1;
	fma.rn.f32 	%f417, %f415, %f411, 0fC09DE9E6;
	fma.rn.f32 	%f418, %f414, %f416, 0f00000000;
	and.b32  	%r210, %r209, 1;
	cvt.rzi.s32.f32 	%r222, %f467;
	fma.rn.f32 	%f470, %f469, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f471, %f469, 0f3E684E12, 0fBFAAD2E0;
	and.b32  	%r41, %r40, 8;
	shl.b32 	%r42, %r4, 2;
	and.b32  	%r44, %r4, 18;
	selp.f32 	%f70, %f68, %f69, %p20;
	and.b32  	%r118, %r116, 2;
	selp.f32 	%f128, %f126, %f127, %p31;
	and.b32  	%r132, %r130, 2;
	selp.f32 	%f187, %f185, %f186, %p42;
	and.b32  	%r149, %r147, 2;
	selp.f32 	%f245, %f243, %f244, %p53;
	and.b32  	%r163, %r161, 2;
	selp.f32 	%f304, %f302, %f303, %p64;
	and.b32  	%r180, %r178, 2;
	selp.f32 	%f362, %f360, %f361, %p75;
	and.b32  	%r194, %r192, 2;
	fma.rn.f32 	%f419, %f417, %f411, 0f3F800000;
	fma.rn.f32 	%f420, %f410, 0f40490FDB, %f418;
	setp.eq.b32 	%p86, %r210, 1;
	add.s32 	%r223, %r222, 1;
	fma.rn.f32 	%f472, %f470, %f469, 0fC0A55DF6;
	fma.rn.f32 	%f473, %f471, %f469, 0f4081E0CF;
	fma.rn.f32 	%f474, %f469, %f468, 0f00000000;
	and.b32  	%r43, %r42, 4;
	or.b32  	%r103, %r44, %r41;
	setp.eq.s32 	%p21, %r118, 0;
	sub.f32 	%f72, %f71, %f70;
	setp.eq.s32 	%p32, %r132, 0;
	sub.f32 	%f130, %f71, %f128;
	setp.eq.s32 	%p43, %r149, 0;
	sub.f32 	%f189, %f71, %f187;
	setp.eq.s32 	%p54, %r163, 0;
	sub.f32 	%f247, %f71, %f245;
	setp.eq.s32 	%p65, %r180, 0;
	sub.f32 	%f306, %f71, %f304;
	setp.eq.s32 	%p76, %r194, 0;
	sub.f32 	%f364, %f71, %f362;
	selp.f32 	%f421, %f419, %f420, %p86;
	and.b32  	%r211, %r209, 2;
	fma.rn.f32 	%f475, %f473, %f469, 0fC09DE9E6;
	fma.rn.f32 	%f476, %f472, %f474, 0f00000000;
	and.b32  	%r224, %r223, 1;
	or.b32  	%r104, %r103, %r43;
	selp.f32 	%f73, %f70, %f72, %p21;
	selp.f32 	%f131, %f128, %f130, %p32;
	selp.f32 	%f190, %f187, %f189, %p43;
	selp.f32 	%f248, %f245, %f247, %p54;
	selp.f32 	%f307, %f304, %f306, %p65;
	selp.f32 	%f365, %f362, %f364, %p76;
	setp.eq.s32 	%p87, %r211, 0;
	sub.f32 	%f423, %f71, %f421;
	fma.rn.f32 	%f477, %f475, %f469, 0f3F800000;
	fma.rn.f32 	%f478, %f468, 0f40490FDB, %f476;
	setp.eq.b32 	%p97, %r224, 1;
	shr.u32 	%r105, %r104, 1;
	mul.f32 	%f43, %f73, %f73;
	mul.f32 	%f5, %f131, %f131;
	mul.f32 	%f10, %f190, %f190;
	mul.f32 	%f16, %f248, %f248;
	mul.f32 	%f21, %f307, %f307;
	mul.f32 	%f27, %f365, %f365;
	selp.f32 	%f424, %f421, %f423, %p87;
	selp.f32 	%f479, %f477, %f478, %p97;
	and.b32  	%r225, %r223, 2;
	ld.param.u64 	%rd1, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_7];
	mul.wide.u32 	%rd38, %r105, 4;
	mul.f32 	%f102, %f786, %f43;
	mov.f32 	%f103, 0f42000000;
	mul.f32 	%f160, %f787, %f5;
	mul.f32 	%f219, %f788, %f10;
	mul.f32 	%f277, %f789, %f16;
	mul.f32 	%f336, %f790, %f21;
	mul.f32 	%f394, %f791, %f27;
	mul.f32 	%f32, %f424, %f424;
	setp.eq.s32 	%p98, %r225, 0;
	sub.f32 	%f481, %f71, %f479;
	add.s64 	%rd39, %rd1, %rd38;
	div.approx.f32 	%f3, %f102, %f103;
	div.approx.f32 	%f162, %f160, %f103;
	div.approx.f32 	%f14, %f219, %f103;
	div.approx.f32 	%f279, %f277, %f103;
	div.approx.f32 	%f25, %f336, %f103;
	div.approx.f32 	%f396, %f394, %f103;
	mul.f32 	%f453, %f792, %f32;
	selp.f32 	%f482, %f479, %f481, %p98;
	ld.param.u64 	%rd2, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_8];
	ld.param.u64 	%rd3, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_9];
	ld.global.u32 	%r45, [%rd39];
	shr.u32 	%r46, %r4, 1;
	mov.b32 	%r141, %f162;
	mov.b32 	%r140, %f3;
	mov.b32 	%r172, %f279;
	mov.b32 	%r171, %f14;
	mov.b32 	%r203, %f396;
	mov.b32 	%r202, %f25;
	div.approx.f32 	%f36, %f453, %f103;
	mul.f32 	%f38, %f482, %f482;
	// begin inline asm
	cvt.rn.f16x2.f32 %r139, %r141, %r140;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r170, %r172, %r171;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r201, %r203, %r202;
	// end inline asm
	mul.f32 	%f510, %f793, %f38;
	div.approx.f32 	%f512, %f510, %f103;
	mov.b32 	%r234, %f512;
	mov.b32 	%r233, %f36;
	// begin inline asm
	cvt.rn.f16x2.f32 %r232, %r234, %r233;
	// end inline asm
	mul.lo.s32 	%r271, %r51, 31;
	and.b32  	%r272, %r271, 63;
	cvt.rn.f32.s32 	%f513, %r272;
	div.approx.f32 	%f514, %f513, %f103;
	add.f32 	%f515, %f514, %f514;
	mov.b32 	%r273, %f515;
	and.b32  	%r274, %r273, -2147483648;
	or.b32  	%r275, %r274, 1056964608;
	mov.b32 	%f516, %r275;
	add.f32 	%f517, %f515, %f516;
	cvt.rzi.f32.f32 	%f518, %f517;
	abs.f32 	%f519, %f515;
	setp.gt.f32 	%p105, %f519, 0f4B000000;
	selp.f32 	%f520, %f515, %f518, %p105;
	cvt.rzi.f32.f32 	%f521, %f515;
	setp.lt.f32 	%p106, %f519, 0f3F000000;
	selp.f32 	%f522, %f521, %f520, %p106;
	cvt.rzi.s32.f32 	%r276, %f522;
	fma.rn.f32 	%f523, %f522, 0fBF000000, %f514;
	mul.f32 	%f524, %f523, %f523;
	fma.rn.f32 	%f525, %f524, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f526, %f524, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f527, %f525, %f524, 0fC0A55DF6;
	fma.rn.f32 	%f528, %f526, %f524, 0f4081E0CF;
	fma.rn.f32 	%f529, %f524, %f523, 0f00000000;
	fma.rn.f32 	%f530, %f528, %f524, 0fC09DE9E6;
	fma.rn.f32 	%f531, %f527, %f529, 0f00000000;
	fma.rn.f32 	%f532, %f530, %f524, 0f3F800000;
	fma.rn.f32 	%f533, %f523, 0f40490FDB, %f531;
	and.b32  	%r277, %r276, 1;
	setp.eq.b32 	%p107, %r277, 1;
	selp.f32 	%f534, %f532, %f533, %p107;
	selp.f32 	%f535, %f533, %f532, %p107;
	and.b32  	%r278, %r276, 2;
	setp.eq.s32 	%p108, %r278, 0;
	neg.f32 	%f536, %f534;
	selp.f32 	%f537, %f534, %f536, %p108;
	add.s32 	%r279, %r276, 1;
	and.b32  	%r280, %r279, 2;
	setp.eq.s32 	%p109, %r280, 0;
	sub.f32 	%f539, %f71, %f535;
	selp.f32 	%f540, %f535, %f539, %p109;
	cvt.rzi.f32.f32 	%f541, %f514;
	setp.eq.f32 	%p110, %f541, %f514;
	mul.f32 	%f542, %f514, 0f00000000;
	selp.f32 	%f543, %f542, %f537, %p110;
	abs.f32 	%f544, %f514;
	setp.gt.f32 	%p111, %f544, 0f4B800000;
	add.f32 	%f545, %f543, 0f3F800000;
	selp.f32 	%f546, %f545, %f540, %p111;
	add.s32 	%r281, %r271, 48;
	and.b32  	%r282, %r281, 63;
	cvt.rn.f32.s32 	%f547, %r282;
	div.approx.f32 	%f548, %f547, %f103;
	add.f32 	%f549, %f548, %f548;
	mov.b32 	%r283, %f549;
	and.b32  	%r284, %r283, -2147483648;
	or.b32  	%r285, %r284, 1056964608;
	mov.b32 	%f550, %r285;
	add.f32 	%f551, %f549, %f550;
	cvt.rzi.f32.f32 	%f552, %f551;
	abs.f32 	%f553, %f549;
	setp.gt.f32 	%p112, %f553, 0f4B000000;
	selp.f32 	%f554, %f549, %f552, %p112;
	cvt.rzi.f32.f32 	%f555, %f549;
	setp.lt.f32 	%p113, %f553, 0f3F000000;
	selp.f32 	%f556, %f555, %f554, %p113;
	cvt.rzi.s32.f32 	%r286, %f556;
	fma.rn.f32 	%f557, %f556, 0fBF000000, %f548;
	mul.f32 	%f558, %f557, %f557;
	fma.rn.f32 	%f559, %f558, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f560, %f558, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f561, %f559, %f558, 0fC0A55DF6;
	fma.rn.f32 	%f562, %f560, %f558, 0f4081E0CF;
	fma.rn.f32 	%f563, %f558, %f557, 0f00000000;
	fma.rn.f32 	%f564, %f562, %f558, 0fC09DE9E6;
	fma.rn.f32 	%f565, %f561, %f563, 0f00000000;
	fma.rn.f32 	%f566, %f564, %f558, 0f3F800000;
	fma.rn.f32 	%f567, %f557, 0f40490FDB, %f565;
	and.b32  	%r287, %r286, 1;
	setp.eq.b32 	%p114, %r287, 1;
	selp.f32 	%f568, %f566, %f567, %p114;
	selp.f32 	%f569, %f567, %f566, %p114;
	and.b32  	%r288, %r286, 2;
	setp.eq.s32 	%p115, %r288, 0;
	neg.f32 	%f570, %f568;
	selp.f32 	%f571, %f568, %f570, %p115;
	add.s32 	%r289, %r286, 1;
	and.b32  	%r290, %r289, 2;
	setp.eq.s32 	%p116, %r290, 0;
	sub.f32 	%f572, %f71, %f569;
	selp.f32 	%f573, %f569, %f572, %p116;
	cvt.rzi.f32.f32 	%f574, %f548;
	setp.eq.f32 	%p117, %f574, %f548;
	mul.f32 	%f575, %f548, 0f00000000;
	selp.f32 	%f576, %f575, %f571, %p117;
	abs.f32 	%f577, %f548;
	setp.gt.f32 	%p118, %f577, 0f4B800000;
	add.f32 	%f578, %f576, 0f3F800000;
	selp.f32 	%f579, %f578, %f573, %p118;
	mov.b32 	%r236, %f546;
	mov.b32 	%r237, %f579;
	// begin inline asm
	cvt.rn.f16x2.f32 %r235, %r237, %r236;
	// end inline asm
	mov.b32 	%r239, %f543;
	mov.b32 	%r240, %f576;
	// begin inline asm
	cvt.rn.f16x2.f32 %r238, %r240, %r239;
	// end inline asm
	shr.u32 	%r11, %r4, 3;
	and.b32  	%r291, %r11, 2;
	and.b32  	%r292, %r46, 4;
	or.b32  	%r293, %r49, %r291;
	or.b32  	%r294, %r293, %r292;
	and.b32  	%r295, %r40, 6;
	mul.lo.s32 	%r296, %r294, %r295;
	and.b32  	%r297, %r296, 14;
	cvt.rn.f32.s32 	%f580, %r297;
	mov.f32 	%f581, 0f41000000;
	div.approx.f32 	%f582, %f580, %f581;
	add.f32 	%f583, %f582, %f582;
	mov.b32 	%r298, %f583;
	and.b32  	%r299, %r298, -2147483648;
	or.b32  	%r300, %r299, 1056964608;
	mov.b32 	%f584, %r300;
	add.f32 	%f585, %f583, %f584;
	cvt.rzi.f32.f32 	%f586, %f585;
	abs.f32 	%f587, %f583;
	setp.gt.f32 	%p119, %f587, 0f4B000000;
	selp.f32 	%f588, %f583, %f586, %p119;
	cvt.rzi.f32.f32 	%f589, %f583;
	setp.lt.f32 	%p120, %f587, 0f3F000000;
	selp.f32 	%f590, %f589, %f588, %p120;
	cvt.rzi.s32.f32 	%r301, %f590;
	fma.rn.f32 	%f591, %f590, 0fBF000000, %f582;
	mul.f32 	%f592, %f591, %f591;
	fma.rn.f32 	%f593, %f592, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f594, %f592, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f595, %f593, %f592, 0fC0A55DF6;
	fma.rn.f32 	%f596, %f594, %f592, 0f4081E0CF;
	fma.rn.f32 	%f597, %f592, %f591, 0f00000000;
	fma.rn.f32 	%f598, %f596, %f592, 0fC09DE9E6;
	fma.rn.f32 	%f599, %f595, %f597, 0f00000000;
	fma.rn.f32 	%f600, %f598, %f592, 0f3F800000;
	fma.rn.f32 	%f601, %f591, 0f40490FDB, %f599;
	and.b32  	%r302, %r301, 1;
	setp.eq.b32 	%p121, %r302, 1;
	selp.f32 	%f602, %f600, %f601, %p121;
	selp.f32 	%f603, %f601, %f600, %p121;
	and.b32  	%r303, %r301, 2;
	setp.eq.s32 	%p122, %r303, 0;
	neg.f32 	%f604, %f602;
	selp.f32 	%f605, %f602, %f604, %p122;
	add.s32 	%r304, %r301, 1;
	and.b32  	%r305, %r304, 2;
	setp.eq.s32 	%p123, %r305, 0;
	sub.f32 	%f606, %f71, %f603;
	selp.f32 	%f607, %f603, %f606, %p123;
	cvt.rzi.f32.f32 	%f608, %f582;
	setp.eq.f32 	%p124, %f608, %f582;
	mul.f32 	%f609, %f582, 0f00000000;
	selp.f32 	%f610, %f609, %f605, %p124;
	abs.f32 	%f611, %f582;
	setp.gt.f32 	%p125, %f611, 0f4B800000;
	add.f32 	%f612, %f610, 0f3F800000;
	selp.f32 	%f613, %f612, %f607, %p125;
	or.b32  	%r306, %r40, 8;
	mul.lo.s32 	%r307, %r294, %r306;
	and.b32  	%r308, %r307, 14;
	cvt.rn.f32.s32 	%f614, %r308;
	div.approx.f32 	%f615, %f614, %f581;
	add.f32 	%f616, %f615, %f615;
	mov.b32 	%r309, %f616;
	and.b32  	%r310, %r309, -2147483648;
	or.b32  	%r311, %r310, 1056964608;
	mov.b32 	%f617, %r311;
	add.f32 	%f618, %f616, %f617;
	cvt.rzi.f32.f32 	%f619, %f618;
	abs.f32 	%f620, %f616;
	setp.gt.f32 	%p126, %f620, 0f4B000000;
	selp.f32 	%f621, %f616, %f619, %p126;
	cvt.rzi.f32.f32 	%f622, %f616;
	setp.lt.f32 	%p127, %f620, 0f3F000000;
	selp.f32 	%f623, %f622, %f621, %p127;
	cvt.rzi.s32.f32 	%r312, %f623;
	fma.rn.f32 	%f624, %f623, 0fBF000000, %f615;
	mul.f32 	%f625, %f624, %f624;
	fma.rn.f32 	%f626, %f625, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f627, %f625, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f628, %f626, %f625, 0fC0A55DF6;
	fma.rn.f32 	%f629, %f627, %f625, 0f4081E0CF;
	fma.rn.f32 	%f630, %f625, %f624, 0f00000000;
	fma.rn.f32 	%f631, %f629, %f625, 0fC09DE9E6;
	fma.rn.f32 	%f632, %f628, %f630, 0f00000000;
	fma.rn.f32 	%f633, %f631, %f625, 0f3F800000;
	fma.rn.f32 	%f634, %f624, 0f40490FDB, %f632;
	and.b32  	%r313, %r312, 1;
	setp.eq.b32 	%p128, %r313, 1;
	selp.f32 	%f635, %f633, %f634, %p128;
	selp.f32 	%f636, %f634, %f633, %p128;
	and.b32  	%r314, %r312, 2;
	setp.eq.s32 	%p129, %r314, 0;
	neg.f32 	%f637, %f635;
	selp.f32 	%f638, %f635, %f637, %p129;
	add.s32 	%r315, %r312, 1;
	and.b32  	%r316, %r315, 2;
	setp.eq.s32 	%p130, %r316, 0;
	sub.f32 	%f639, %f71, %f636;
	selp.f32 	%f640, %f636, %f639, %p130;
	cvt.rzi.f32.f32 	%f641, %f615;
	setp.eq.f32 	%p131, %f641, %f615;
	mul.f32 	%f642, %f615, 0f00000000;
	selp.f32 	%f643, %f642, %f638, %p131;
	abs.f32 	%f644, %f615;
	setp.gt.f32 	%p132, %f644, 0f4B800000;
	add.f32 	%f645, %f643, 0f3F800000;
	selp.f32 	%f646, %f645, %f640, %p132;
	mov.b32 	%r242, %f613;
	mov.b32 	%r243, %f646;
	// begin inline asm
	cvt.rn.f16x2.f32 %r241, %r243, %r242;
	// end inline asm
	mov.b32 	%r245, %f610;
	mov.b32 	%r246, %f643;
	// begin inline asm
	cvt.rn.f16x2.f32 %r244, %r246, %r245;
	// end inline asm
	xor.b32  	%r248, %r245, -2147483648;
	xor.b32  	%r249, %r246, -2147483648;
	// begin inline asm
	cvt.rn.f16x2.f32 %r247, %r249, %r248;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r250, %r243, %r242;
	// end inline asm
	shl.b32 	%r317, %r47, 1;
	mul.lo.s32 	%r318, %r317, %r294;
	cvt.rn.f32.s32 	%f647, %r318;
	div.approx.f32 	%f648, %f647, %f103;
	add.f32 	%f649, %f648, %f648;
	mov.b32 	%r319, %f649;
	and.b32  	%r320, %r319, -2147483648;
	or.b32  	%r321, %r320, 1056964608;
	mov.b32 	%f650, %r321;
	add.f32 	%f651, %f649, %f650;
	cvt.rzi.f32.f32 	%f652, %f651;
	abs.f32 	%f653, %f649;
	setp.gt.f32 	%p133, %f653, 0f4B000000;
	selp.f32 	%f654, %f649, %f652, %p133;
	cvt.rzi.f32.f32 	%f655, %f649;
	setp.lt.f32 	%p134, %f653, 0f3F000000;
	selp.f32 	%f656, %f655, %f654, %p134;
	cvt.rzi.s32.f32 	%r322, %f656;
	fma.rn.f32 	%f657, %f656, 0fBF000000, %f648;
	mul.f32 	%f658, %f657, %f657;
	fma.rn.f32 	%f659, %f658, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f660, %f658, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f661, %f659, %f658, 0fC0A55DF6;
	fma.rn.f32 	%f662, %f660, %f658, 0f4081E0CF;
	fma.rn.f32 	%f663, %f658, %f657, 0f00000000;
	fma.rn.f32 	%f664, %f662, %f658, 0fC09DE9E6;
	fma.rn.f32 	%f665, %f661, %f663, 0f00000000;
	fma.rn.f32 	%f666, %f664, %f658, 0f3F800000;
	fma.rn.f32 	%f667, %f657, 0f40490FDB, %f665;
	and.b32  	%r323, %r322, 1;
	setp.eq.b32 	%p135, %r323, 1;
	selp.f32 	%f668, %f666, %f667, %p135;
	selp.f32 	%f669, %f667, %f666, %p135;
	and.b32  	%r324, %r322, 2;
	setp.eq.s32 	%p136, %r324, 0;
	neg.f32 	%f670, %f668;
	selp.f32 	%f671, %f668, %f670, %p136;
	add.s32 	%r325, %r322, 1;
	and.b32  	%r326, %r325, 2;
	setp.eq.s32 	%p137, %r326, 0;
	sub.f32 	%f672, %f71, %f669;
	selp.f32 	%f673, %f669, %f672, %p137;
	cvt.rzi.f32.f32 	%f674, %f648;
	setp.eq.f32 	%p138, %f674, %f648;
	mul.f32 	%f675, %f648, 0f00000000;
	selp.f32 	%f676, %f675, %f671, %p138;
	mov.b32 	%r327, %f676;
	abs.f32 	%f677, %f648;
	setp.gt.f32 	%p139, %f677, 0f4B800000;
	add.f32 	%f678, %f676, 0f3F800000;
	selp.f32 	%f679, %f678, %f673, %p139;
	shl.b32 	%r328, %r294, 2;
	add.s32 	%r329, %r318, %r328;
	cvt.rn.f32.s32 	%f680, %r329;
	div.approx.f32 	%f681, %f680, %f103;
	add.f32 	%f682, %f681, %f681;
	mov.b32 	%r330, %f682;
	and.b32  	%r331, %r330, -2147483648;
	or.b32  	%r332, %r331, 1056964608;
	mov.b32 	%f683, %r332;
	add.f32 	%f684, %f682, %f683;
	cvt.rzi.f32.f32 	%f685, %f684;
	abs.f32 	%f686, %f682;
	setp.gt.f32 	%p140, %f686, 0f4B000000;
	selp.f32 	%f687, %f682, %f685, %p140;
	cvt.rzi.f32.f32 	%f688, %f682;
	setp.lt.f32 	%p141, %f686, 0f3F000000;
	selp.f32 	%f689, %f688, %f687, %p141;
	cvt.rzi.s32.f32 	%r333, %f689;
	fma.rn.f32 	%f690, %f689, 0fBF000000, %f681;
	mul.f32 	%f691, %f690, %f690;
	fma.rn.f32 	%f692, %f691, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f693, %f691, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f694, %f692, %f691, 0fC0A55DF6;
	fma.rn.f32 	%f695, %f693, %f691, 0f4081E0CF;
	fma.rn.f32 	%f696, %f691, %f690, 0f00000000;
	fma.rn.f32 	%f697, %f695, %f691, 0fC09DE9E6;
	fma.rn.f32 	%f698, %f694, %f696, 0f00000000;
	fma.rn.f32 	%f699, %f697, %f691, 0f3F800000;
	fma.rn.f32 	%f700, %f690, 0f40490FDB, %f698;
	and.b32  	%r334, %r333, 1;
	setp.eq.b32 	%p142, %r334, 1;
	selp.f32 	%f701, %f699, %f700, %p142;
	selp.f32 	%f702, %f700, %f699, %p142;
	and.b32  	%r335, %r333, 2;
	setp.eq.s32 	%p143, %r335, 0;
	neg.f32 	%f703, %f701;
	selp.f32 	%f704, %f701, %f703, %p143;
	add.s32 	%r336, %r333, 1;
	and.b32  	%r337, %r336, 2;
	setp.eq.s32 	%p144, %r337, 0;
	sub.f32 	%f705, %f71, %f702;
	selp.f32 	%f706, %f702, %f705, %p144;
	cvt.rzi.f32.f32 	%f707, %f681;
	setp.eq.f32 	%p145, %f707, %f681;
	mul.f32 	%f708, %f681, 0f00000000;
	selp.f32 	%f709, %f708, %f704, %p145;
	mov.b32 	%r338, %f709;
	abs.f32 	%f710, %f681;
	setp.gt.f32 	%p146, %f710, 0f4B800000;
	add.f32 	%f711, %f709, 0f3F800000;
	selp.f32 	%f712, %f711, %f706, %p146;
	mov.b32 	%r255, %f712;
	mov.b32 	%r254, %f679;
	// begin inline asm
	cvt.rn.f16x2.f32 %r253, %r255, %r254;
	// end inline asm
	xor.b32  	%r258, %r338, -2147483648;
	xor.b32  	%r257, %r327, -2147483648;
	// begin inline asm
	cvt.rn.f16x2.f32 %r256, %r258, %r257;
	// end inline asm
	bfe.u32 	%r339, %r4, 3, 1;
	setp.eq.s32 	%p147, %r339, %r48;
	mul.lo.s32 	%r340, %r317, %r293;
	cvt.rn.f32.s32 	%f713, %r340;
	mov.f32 	%f714, 0f40800000;
	div.approx.f32 	%f715, %f713, %f714;
	add.f32 	%f716, %f715, %f715;
	mov.b32 	%r341, %f716;
	and.b32  	%r342, %r341, -2147483648;
	or.b32  	%r343, %r342, 1056964608;
	mov.b32 	%f717, %r343;
	add.f32 	%f718, %f716, %f717;
	cvt.rzi.f32.f32 	%f719, %f718;
	abs.f32 	%f720, %f716;
	setp.gt.f32 	%p148, %f720, 0f4B000000;
	selp.f32 	%f721, %f716, %f719, %p148;
	cvt.rzi.f32.f32 	%f722, %f716;
	setp.lt.f32 	%p149, %f720, 0f3F000000;
	selp.f32 	%f723, %f722, %f721, %p149;
	cvt.rzi.s32.f32 	%r344, %f723;
	fma.rn.f32 	%f724, %f723, 0fBF000000, %f715;
	mul.f32 	%f725, %f724, %f724;
	fma.rn.f32 	%f726, %f725, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f727, %f725, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f728, %f726, %f725, 0fC0A55DF6;
	fma.rn.f32 	%f729, %f727, %f725, 0f4081E0CF;
	fma.rn.f32 	%f730, %f725, %f724, 0f00000000;
	fma.rn.f32 	%f731, %f729, %f725, 0fC09DE9E6;
	fma.rn.f32 	%f732, %f728, %f730, 0f00000000;
	fma.rn.f32 	%f733, %f731, %f725, 0f3F800000;
	fma.rn.f32 	%f734, %f724, 0f40490FDB, %f732;
	and.b32  	%r345, %r344, 1;
	setp.eq.b32 	%p150, %r345, 1;
	selp.f32 	%f735, %f733, %f734, %p150;
	selp.f32 	%f736, %f734, %f733, %p150;
	and.b32  	%r346, %r344, 2;
	setp.eq.s32 	%p151, %r346, 0;
	neg.f32 	%f737, %f735;
	selp.f32 	%f738, %f735, %f737, %p151;
	add.s32 	%r347, %r344, 1;
	and.b32  	%r348, %r347, 2;
	setp.eq.s32 	%p152, %r348, 0;
	sub.f32 	%f739, %f71, %f736;
	selp.f32 	%f740, %f736, %f739, %p152;
	cvt.rzi.f32.f32 	%f741, %f715;
	setp.eq.f32 	%p153, %f741, %f715;
	mul.f32 	%f742, %f715, 0f00000000;
	selp.f32 	%f743, %f742, %f738, %p153;
	abs.f32 	%f744, %f715;
	setp.gt.f32 	%p154, %f744, 0f4B800000;
	add.f32 	%f745, %f743, 0f3F800000;
	selp.f32 	%f746, %f745, %f740, %p154;
	selp.f32 	%f747, 0f3F800000, 0f00000000, %p147;
	mul.f32 	%f748, %f746, %f747;
	neg.f32 	%f749, %f747;
	mul.f32 	%f750, %f743, %f749;
	shl.b32 	%r349, %r49, 2;
	add.s32 	%r350, %r340, %r349;
	and.b32  	%r351, %r350, 6;
	cvt.rn.f32.s32 	%f751, %r351;
	div.approx.f32 	%f752, %f751, %f714;
	add.f32 	%f753, %f752, %f752;
	mov.b32 	%r352, %f753;
	and.b32  	%r353, %r352, -2147483648;
	or.b32  	%r354, %r353, 1056964608;
	mov.b32 	%f754, %r354;
	add.f32 	%f755, %f753, %f754;
	cvt.rzi.f32.f32 	%f756, %f755;
	abs.f32 	%f757, %f753;
	setp.gt.f32 	%p155, %f757, 0f4B000000;
	selp.f32 	%f758, %f753, %f756, %p155;
	cvt.rzi.f32.f32 	%f759, %f753;
	setp.lt.f32 	%p156, %f757, 0f3F000000;
	selp.f32 	%f760, %f759, %f758, %p156;
	cvt.rzi.s32.f32 	%r355, %f760;
	fma.rn.f32 	%f761, %f760, 0fBF000000, %f752;
	mul.f32 	%f762, %f761, %f761;
	fma.rn.f32 	%f763, %f762, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f764, %f762, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f765, %f763, %f762, 0fC0A55DF6;
	fma.rn.f32 	%f766, %f764, %f762, 0f4081E0CF;
	fma.rn.f32 	%f767, %f762, %f761, 0f00000000;
	fma.rn.f32 	%f768, %f766, %f762, 0fC09DE9E6;
	fma.rn.f32 	%f769, %f765, %f767, 0f00000000;
	fma.rn.f32 	%f770, %f768, %f762, 0f3F800000;
	fma.rn.f32 	%f771, %f761, 0f40490FDB, %f769;
	and.b32  	%r356, %r355, 1;
	setp.eq.b32 	%p157, %r356, 1;
	selp.f32 	%f772, %f770, %f771, %p157;
	selp.f32 	%f773, %f771, %f770, %p157;
	and.b32  	%r357, %r355, 2;
	setp.eq.s32 	%p158, %r357, 0;
	neg.f32 	%f774, %f772;
	selp.f32 	%f775, %f772, %f774, %p158;
	add.s32 	%r358, %r355, 1;
	and.b32  	%r359, %r358, 2;
	setp.eq.s32 	%p159, %r359, 0;
	sub.f32 	%f776, %f71, %f773;
	selp.f32 	%f777, %f773, %f776, %p159;
	cvt.rzi.f32.f32 	%f778, %f752;
	setp.eq.f32 	%p160, %f778, %f752;
	mul.f32 	%f779, %f752, 0f00000000;
	selp.f32 	%f780, %f779, %f775, %p160;
	abs.f32 	%f781, %f752;
	setp.gt.f32 	%p161, %f781, 0f4B800000;
	add.f32 	%f782, %f780, 0f3F800000;
	selp.f32 	%f783, %f782, %f777, %p161;
	mul.f32 	%f784, %f783, %f747;
	mul.f32 	%f785, %f780, %f749;
	mov.b32 	%r260, %f748;
	mov.b32 	%r261, %f784;
	// begin inline asm
	cvt.rn.f16x2.f32 %r259, %r261, %r260;
	// end inline asm
	mov.b32 	%r266, %f750;
	xor.b32  	%r263, %r266, -2147483648;
	mov.b32 	%r267, %f785;
	xor.b32  	%r264, %r267, -2147483648;
	// begin inline asm
	cvt.rn.f16x2.f32 %r262, %r264, %r263;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r265, %r267, %r266;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r268, %r261, %r260;
	// end inline asm
	shl.b32 	%r361, %r87, 13;
	shl.b32 	%r362, %r91, 9;
	shl.b32 	%r363, %r1, 5;
	and.b32  	%r364, %r42, 28;
	and.b32  	%r365, %r363, 224;
	and.b32  	%r366, %r363, 256;
	shl.b32 	%r367, %r2, 2;
	and.b32  	%r22, %r367, 32;
	and.b32  	%r368, %r46, 8;
	or.b32  	%r23, %r22, %r368;
	and.b32  	%r24, %r2, 7;
	and.b32  	%r25, %r40, 16;
	and.b32  	%r369, %r363, 7936;
	or.b32  	%r370, %r369, %r364;
	or.b32  	%r371, %r370, %r365;
	or.b32  	%r372, %r371, %r361;
	add.s32 	%r26, %r372, %r362;
	and.b32  	%r27, %r4, 8;
	shl.b32 	%r373, %r4, 4;
	or.b32  	%r374, %r27, %r373;
	shr.u32 	%r375, %r374, 2;
	and.b32  	%r376, %r375, 30;
	and.b32  	%r377, %r46, 2;
	or.b32  	%r378, %r377, %r50;
	and.b32  	%r379, %r42, 12;
	or.b32  	%r28, %r378, %r379;
	shl.b32 	%r380, %r4, 3;
	and.b32  	%r381, %r380, 64;
	shl.b32 	%r382, %r2, 1;
	or.b32  	%r383, %r381, %r382;
	shr.u32 	%r384, %r383, 2;
	and.b32  	%r385, %r3, 32;
	or.b32  	%r29, %r384, %r385;
	or.b32  	%r30, %r29, 8;
	or.b32  	%r386, %r44, %r43;
	or.b32  	%r387, %r386, %r41;
	shr.u32 	%r388, %r387, 1;
	mul.lo.s32 	%r389, %r388, 65;
	add.s32 	%r390, %r29, %r389;
	add.s32 	%r391, %r30, %r389;
	shl.b32 	%r392, %r89, 14;
	add.s32 	%r393, %r392, -49152;
	or.b32  	%r31, %r365, %r364;
	and.b32  	%r394, %r367, 28;
	or.b32  	%r395, %r394, %r11;
	shl.b32 	%r396, %r395, 9;
	or.b32  	%r32, %r396, %r366;
	cvt.s64.s32 	%rd5, %r393;
	shr.u32 	%r397, %r2, 3;
	or.b32  	%r398, %r397, 2;
	or.b32  	%r399, %r397, 4;
	or.b32  	%r400, %r397, 6;
	bfe.s32 	%r401, %r2, 1, 1;
	and.b32  	%r402, %r2, 2;
	setp.eq.s32 	%p163, %r402, 0;
	and.b32  	%r403, %r401, 260;
	and.b32  	%r404, %r2, 1;
	neg.s32 	%r405, %r404;
	setp.eq.b32 	%p164, %r404, 1;
	and.b32  	%r406, %r405, 520;
	mul.lo.s32 	%r407, %r397, 1057;
	mul.lo.s32 	%r408, %r50, 65;
	bfe.s32 	%r409, %r2, 2, 1;
	and.b32  	%r410, %r2, 4;
	setp.eq.s32 	%p165, %r410, 0;
	and.b32  	%r411, %r409, 130;
	add.s32 	%r412, %r406, %r376;
	add.s32 	%r413, %r412, %r403;
	add.s32 	%r414, %r413, %r407;
	add.s32 	%r415, %r414, %r408;
	add.s32 	%r416, %r415, %r411;
	mul.wide.u32 	%rd40, %r416, 4;
	mov.u64 	%rd41, shmem;
	add.s64 	%rd6, %rd41, %rd40;
	selp.b64 	%rd42, 0, 130, %p165;
	cvt.u64.u32 	%rd43, %r408;
	cvt.u64.u32 	%rd44, %r407;
	selp.b64 	%rd45, 0, 260, %p163;
	selp.b64 	%rd46, 520, 0, %p164;
	cvt.u64.u32 	%rd47, %r376;
	add.s64 	%rd48, %rd47, %rd46;
	add.s64 	%rd49, %rd48, %rd45;
	add.s64 	%rd50, %rd49, %rd44;
	add.s64 	%rd51, %rd50, %rd43;
	add.s64 	%rd52, %rd51, %rd42;
	shl.b64 	%rd53, %rd52, 2;
	add.s64 	%rd7, %rd41, %rd53;
	mul.lo.s32 	%r417, %r398, 1057;
	bfe.u32 	%r418, %r46, 3, 1;
	mul.lo.s32 	%r419, %r418, 65;
	add.s32 	%r420, %r413, %r417;
	add.s32 	%r421, %r420, %r419;
	add.s32 	%r422, %r421, %r411;
	mul.wide.u32 	%rd54, %r422, 4;
	add.s64 	%rd8, %rd41, %rd54;
	cvt.u64.u32 	%rd55, %r419;
	cvt.u64.u32 	%rd56, %r417;
	add.s64 	%rd57, %rd49, %rd56;
	add.s64 	%rd58, %rd57, %rd55;
	add.s64 	%rd59, %rd58, %rd42;
	shl.b64 	%rd60, %rd59, 2;
	add.s64 	%rd9, %rd41, %rd60;
	mul.lo.s32 	%r423, %r399, 1057;
	add.s32 	%r424, %r413, %r423;
	add.s32 	%r425, %r424, %r419;
	add.s32 	%r426, %r425, %r411;
	mul.wide.u32 	%rd61, %r426, 4;
	add.s64 	%rd10, %rd41, %rd61;
	cvt.u64.u32 	%rd62, %r423;
	add.s64 	%rd63, %rd49, %rd62;
	add.s64 	%rd64, %rd63, %rd55;
	add.s64 	%rd65, %rd64, %rd42;
	shl.b64 	%rd66, %rd65, 2;
	add.s64 	%rd11, %rd41, %rd66;
	mul.lo.s32 	%r427, %r400, 1057;
	add.s32 	%r428, %r413, %r427;
	add.s32 	%r429, %r428, %r419;
	add.s32 	%r430, %r429, %r411;
	mul.wide.u32 	%rd67, %r430, 4;
	add.s64 	%rd12, %rd41, %rd67;
	cvt.u64.u32 	%rd68, %r427;
	add.s64 	%rd69, %rd49, %rd68;
	add.s64 	%rd70, %rd69, %rd55;
	add.s64 	%rd71, %rd70, %rd42;
	shl.b64 	%rd72, %rd71, 2;
	add.s64 	%rd13, %rd41, %rd72;
	and.b32  	%r431, %r382, 14;
	or.b32  	%r432, %r431, %r50;
	mul.lo.s32 	%r433, %r432, 65;
	add.s32 	%r434, %r433, %r376;
	add.s32 	%r435, %r434, %r407;
	mul.wide.u32 	%rd73, %r435, 4;
	add.s64 	%rd14, %rd41, %rd73;
	cvt.u64.u32 	%rd74, %r433;
	add.s64 	%rd75, %rd47, %rd74;
	add.s64 	%rd76, %rd75, %rd44;
	shl.b64 	%rd77, %rd76, 2;
	add.s64 	%rd15, %rd41, %rd77;
	add.s32 	%r436, %r434, %r417;
	mul.wide.u32 	%rd78, %r436, 4;
	add.s64 	%rd16, %rd41, %rd78;
	add.s64 	%rd79, %rd75, %rd56;
	shl.b64 	%rd80, %rd79, 2;
	add.s64 	%rd17, %rd41, %rd80;
	add.s32 	%r437, %r434, %r423;
	mul.wide.u32 	%rd81, %r437, 4;
	add.s64 	%rd18, %rd41, %rd81;
	add.s64 	%rd82, %rd75, %rd62;
	shl.b64 	%rd83, %rd82, 2;
	add.s64 	%rd19, %rd41, %rd83;
	add.s32 	%r438, %r434, %r427;
	mul.wide.u32 	%rd84, %r438, 4;
	add.s64 	%rd20, %rd41, %rd84;
	add.s64 	%rd85, %rd75, %rd68;
	shl.b64 	%rd86, %rd85, 2;
	add.s64 	%rd21, %rd41, %rd86;
	mul.wide.u32 	%rd87, %r391, 4;
	add.s64 	%rd22, %rd41, %rd87;
	mul.wide.u32 	%rd88, %r390, 4;
	add.s64 	%rd23, %rd41, %rd88;
	mov.u16 	%rs288, 25600;
	mov.u16 	%rs236, 21504;
	mov.u16 	%rs296, 18432;
	mov.u16 	%rs274, -14592;
	mov.u32 	%r2509, %r2507;
	mov.u32 	%r2510, %r2507;
	mov.u32 	%r2511, %r2507;
	mov.u32 	%r2512, %r2507;
	mov.u32 	%r2516, %r2507;
	mov.u32 	%r2517, %r2507;
	mov.u32 	%r39, %r2507;
	bra.uni 	$L__BB0_29;
$L__BB0_35:                             // %pass10197
                                        //   in Loop: Header=BB0_29 Depth=1
	or.b32  	%r2499, %r2508, %r31;
	or.b32  	%r2500, %r2499, %r32;
	or.b32  	%r2501, %r2500, 65536;
	cvt.s64.s32 	%rd126, %r2501;
	add.s64 	%rd127, %rd126, %rd5;
	shr.u64 	%rd128, %rd127, 39;
	add.s64 	%rd129, %rd127, %rd128;
	shr.s64 	%rd130, %rd129, 25;
	setp.lt.s64 	%p190, %rd127, 0;
	and.b64  	%rd131, %rd129, -33554432;
	setp.ne.s64 	%p191, %rd131, %rd127;
	and.pred  	%p192, %p190, %p191;
	selp.u64 	%rd132, 1, 0, %p192;
	sub.s64 	%rd133, %rd132, %rd130;
	shl.b64 	%rd134, %rd133, 25;
	add.s64 	%rd135, %rd134, %rd127;
	shl.b64 	%rd136, %rd135, 2;
	add.s64 	%rd137, %rd3, %rd136;
	st.global.v4.u32 	[%rd137], {%r78, %r80, %r79, %r81};
	or.b32  	%r2502, %r2500, 98304;
	cvt.s64.s32 	%rd138, %r2502;
	add.s64 	%rd139, %rd138, %rd5;
	shr.u64 	%rd140, %rd139, 39;
	add.s64 	%rd141, %rd139, %rd140;
	shr.s64 	%rd142, %rd141, 25;
	setp.lt.s64 	%p193, %rd139, 0;
	and.b64  	%rd143, %rd141, -33554432;
	setp.ne.s64 	%p194, %rd143, %rd139;
	and.pred  	%p195, %p193, %p194;
	selp.u64 	%rd144, 1, 0, %p195;
	sub.s64 	%rd145, %rd144, %rd142;
	shl.b64 	%rd146, %rd145, 25;
	add.s64 	%rd147, %rd146, %rd139;
	shl.b64 	%rd148, %rd147, 2;
	add.s64 	%rd149, %rd3, %rd148;
	st.global.v4.u32 	[%rd149], {%r82, %r84, %r83, %r85};
	setp.ne.s32 	%p196, %r39, 65280;
	add.s32 	%r39, %r39, 256;
	add.s32 	%r2503, %r39, %r87;
	setp.lt.s32 	%p197, %r2503, %r88;
	and.pred  	%p198, %p196, %p197;
	@%p198 bra 	$L__BB0_29;
	bra.uni 	$L__BB0_36;
$L__BB0_29:                             // %L1404
                                        // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_30 Depth 2
	setp.eq.s32 	%p166, %r27, 0;
	or.b32  	%r504, %r39, %r23;
	or.b32  	%r505, %r504, %r24;
	or.b32  	%r506, %r505, %r25;
	shl.b32 	%r507, %r506, 13;
	add.s32 	%r508, %r26, %r507;
	shr.s32 	%r509, %r508, 31;
	shr.u32 	%r510, %r509, 3;
	add.s32 	%r511, %r508, %r510;
	shr.s32 	%r512, %r511, 29;
	setp.lt.s32 	%p167, %r508, 0;
	and.b32  	%r513, %r511, -536870912;
	setp.ne.s32 	%p168, %r513, %r508;
	and.pred  	%p169, %p167, %p168;
	selp.u32 	%r514, 1, 0, %p169;
	sub.s32 	%r515, %r514, %r512;
	shl.b32 	%r516, %r515, 29;
	or.b32  	%r517, %r508, 1;
	add.s32 	%r518, %r517, %r516;
	mul.wide.s32 	%rd89, %r518, 4;
	add.s64 	%rd90, %rd2, %rd89;
	ld.global.v4.u32 	{%r519, %r520, %r521, %r522}, [%rd90+-4];
	or.b32  	%r523, %r507, 524288;
	add.s32 	%r524, %r26, %r523;
	shr.s32 	%r525, %r524, 31;
	shr.u32 	%r526, %r525, 3;
	add.s32 	%r527, %r524, %r526;
	shr.s32 	%r528, %r527, 29;
	setp.lt.s32 	%p170, %r524, 0;
	and.b32  	%r529, %r527, -536870912;
	setp.ne.s32 	%p171, %r529, %r524;
	and.pred  	%p172, %p170, %p171;
	selp.u32 	%r530, 1, 0, %p172;
	sub.s32 	%r531, %r530, %r528;
	shl.b32 	%r532, %r531, 29;
	or.b32  	%r533, %r524, 1;
	add.s32 	%r534, %r533, %r532;
	mul.wide.s32 	%rd91, %r534, 4;
	add.s64 	%rd92, %rd2, %rd91;
	ld.global.v4.u32 	{%r535, %r536, %r537, %r538}, [%rd92+-4];
	or.b32  	%r539, %r507, 1048576;
	add.s32 	%r540, %r26, %r539;
	shr.s32 	%r541, %r540, 31;
	shr.u32 	%r542, %r541, 3;
	add.s32 	%r543, %r540, %r542;
	shr.s32 	%r544, %r543, 29;
	setp.lt.s32 	%p173, %r540, 0;
	and.b32  	%r545, %r543, -536870912;
	setp.ne.s32 	%p174, %r545, %r540;
	and.pred  	%p175, %p173, %p174;
	selp.u32 	%r546, 1, 0, %p175;
	sub.s32 	%r547, %r546, %r544;
	shl.b32 	%r548, %r547, 29;
	or.b32  	%r549, %r540, 1;
	add.s32 	%r550, %r549, %r548;
	mul.wide.s32 	%rd93, %r550, 4;
	add.s64 	%rd94, %rd2, %rd93;
	ld.global.v4.u32 	{%r551, %r552, %r553, %r554}, [%rd94+-4];
	or.b32  	%r555, %r507, 1572864;
	add.s32 	%r556, %r26, %r555;
	shr.s32 	%r557, %r556, 31;
	shr.u32 	%r558, %r557, 3;
	add.s32 	%r559, %r556, %r558;
	shr.s32 	%r560, %r559, 29;
	setp.lt.s32 	%p176, %r556, 0;
	and.b32  	%r561, %r559, -536870912;
	setp.ne.s32 	%p177, %r561, %r556;
	and.pred  	%p178, %p176, %p177;
	selp.u32 	%r562, 1, 0, %p178;
	sub.s32 	%r563, %r562, %r560;
	shl.b32 	%r564, %r563, 29;
	or.b32  	%r565, %r556, 1;
	add.s32 	%r566, %r565, %r564;
	mul.wide.s32 	%rd95, %r566, 4;
	add.s64 	%rd96, %rd2, %rd95;
	ld.global.v4.u32 	{%r567, %r568, %r569, %r570}, [%rd96+-4];
	selp.b32 	%r571, %r521, %r519, %p166;
	shfl.sync.bfly.b32	%r572, %r571, 8, 31, -1;
	selp.b32 	%r440, %r519, %r572, %p166;
	selp.b32 	%r441, %r572, %r521, %p166;
	selp.b32 	%r573, %r522, %r520, %p166;
	shfl.sync.bfly.b32	%r574, %r573, 8, 31, -1;
	selp.b32 	%r448, %r520, %r574, %p166;
	selp.b32 	%r449, %r574, %r522, %p166;
	selp.b32 	%r575, %r537, %r535, %p166;
	shfl.sync.bfly.b32	%r576, %r575, 8, 31, -1;
	selp.b32 	%r456, %r535, %r576, %p166;
	selp.b32 	%r457, %r576, %r537, %p166;
	selp.b32 	%r577, %r538, %r536, %p166;
	shfl.sync.bfly.b32	%r578, %r577, 8, 31, -1;
	selp.b32 	%r464, %r536, %r578, %p166;
	selp.b32 	%r465, %r578, %r538, %p166;
	selp.b32 	%r579, %r553, %r551, %p166;
	shfl.sync.bfly.b32	%r580, %r579, 8, 31, -1;
	selp.b32 	%r472, %r551, %r580, %p166;
	selp.b32 	%r473, %r580, %r553, %p166;
	selp.b32 	%r581, %r554, %r552, %p166;
	shfl.sync.bfly.b32	%r582, %r581, 8, 31, -1;
	selp.b32 	%r480, %r552, %r582, %p166;
	selp.b32 	%r481, %r582, %r554, %p166;
	selp.b32 	%r583, %r569, %r567, %p166;
	shfl.sync.bfly.b32	%r584, %r583, 8, 31, -1;
	selp.b32 	%r488, %r567, %r584, %p166;
	selp.b32 	%r489, %r584, %r569, %p166;
	selp.b32 	%r585, %r570, %r568, %p166;
	shfl.sync.bfly.b32	%r586, %r585, 8, 31, -1;
	selp.b32 	%r496, %r568, %r586, %p166;
	selp.b32 	%r497, %r586, %r570, %p166;
	mov.u32 	%r498, 21520;
	// begin inline asm
	prmt.b32 %r439, %r440, %r441, %r498;
	// end inline asm
	mov.u32 	%r502, 30258;
	// begin inline asm
	prmt.b32 %r443, %r440, %r441, %r502;
	// end inline asm
	// begin inline asm
	prmt.b32 %r447, %r448, %r449, %r498;
	// end inline asm
	// begin inline asm
	prmt.b32 %r451, %r448, %r449, %r502;
	// end inline asm
	// begin inline asm
	prmt.b32 %r455, %r456, %r457, %r498;
	// end inline asm
	// begin inline asm
	prmt.b32 %r459, %r456, %r457, %r502;
	// end inline asm
	// begin inline asm
	prmt.b32 %r463, %r464, %r465, %r498;
	// end inline asm
	// begin inline asm
	prmt.b32 %r467, %r464, %r465, %r502;
	// end inline asm
	// begin inline asm
	prmt.b32 %r471, %r472, %r473, %r498;
	// end inline asm
	// begin inline asm
	prmt.b32 %r475, %r472, %r473, %r502;
	// end inline asm
	// begin inline asm
	prmt.b32 %r479, %r480, %r481, %r498;
	// end inline asm
	// begin inline asm
	prmt.b32 %r483, %r480, %r481, %r502;
	// end inline asm
	// begin inline asm
	prmt.b32 %r487, %r488, %r489, %r498;
	// end inline asm
	// begin inline asm
	prmt.b32 %r491, %r488, %r489, %r502;
	// end inline asm
	// begin inline asm
	prmt.b32 %r495, %r496, %r497, %r498;
	// end inline asm
	// begin inline asm
	prmt.b32 %r499, %r496, %r497, %r502;
	// end inline asm
	st.shared.u32 	[%rd6], %r439;
	st.shared.u32 	[%rd7+128], %r443;
	st.shared.u32 	[%rd7+4], %r447;
	st.shared.u32 	[%rd7+132], %r451;
	st.shared.u32 	[%rd8], %r455;
	st.shared.u32 	[%rd9+128], %r459;
	st.shared.u32 	[%rd9+4], %r463;
	st.shared.u32 	[%rd9+132], %r467;
	st.shared.u32 	[%rd10], %r471;
	st.shared.u32 	[%rd11+128], %r475;
	st.shared.u32 	[%rd11+4], %r479;
	st.shared.u32 	[%rd11+132], %r483;
	st.shared.u32 	[%rd12], %r487;
	st.shared.u32 	[%rd13+128], %r491;
	st.shared.u32 	[%rd13+4], %r495;
	st.shared.u32 	[%rd13+132], %r499;
	bar.sync 	0;
	mov.u64 	%rd154, %rd23;
	mov.u64 	%rd155, %rd22;
	mov.u32 	%r2518, %r2507;
	mov.u32 	%r2519, %r2512;
	mov.u32 	%r2520, %r2511;
	mov.u32 	%r2521, %r2510;
	mov.u32 	%r2522, %r2509;
$L__BB0_30:                             // %pass5749
                                        //   Parent Loop BB0_29 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	mov.u32 	%r2510, %r2517;
	mov.u32 	%r2509, %r2516;
	or.b32  	%r2383, %r28, %r2518;
	add.s32 	%r2384, %r2383, %r39;
	bfe.s32 	%r2385, %r2384, 1, 1;
	and.b32  	%r2386, %r2385, 260;
	and.b32  	%r2387, %r2384, 1;
	neg.s32 	%r2388, %r2387;
	and.b32  	%r2389, %r2388, 520;
	bfe.u32 	%r2390, %r2384, 5, 3;
	mul.lo.s32 	%r2391, %r2390, 1057;
	bfe.s32 	%r2392, %r2384, 3, 1;
	and.b32  	%r2393, %r2392, 65;
	bfe.s32 	%r2394, %r2384, 2, 1;
	and.b32  	%r2395, %r2394, 130;
	or.b32  	%r2396, %r29, %r2389;
	add.s32 	%r2397, %r2396, %r2386;
	add.s32 	%r2398, %r2397, %r2391;
	add.s32 	%r2399, %r2398, %r2393;
	add.s32 	%r2400, %r2399, %r2395;
	mul.wide.u32 	%rd97, %r2400, 4;
	add.s64 	%rd99, %rd41, %rd97;
	ld.shared.u32 	%r2511, [%rd99];
	add.s32 	%r2401, %r30, %r2389;
	add.s32 	%r2402, %r2401, %r2386;
	add.s32 	%r2403, %r2402, %r2391;
	add.s32 	%r2404, %r2403, %r2393;
	add.s32 	%r2405, %r2404, %r2395;
	mul.wide.u32 	%rd100, %r2405, 4;
	add.s64 	%rd101, %rd41, %rd100;
	ld.shared.u32 	%r2512, [%rd101];
	// begin inline asm
	mov.b32 %r592, {%rs288, %rs288};
	// end inline asm
	// begin inline asm
	mov.b32 %r603, {%rs236, %rs236};
	// end inline asm
	xor.b32  	%r591, %r2511, -2004318072;
	mov.u32 	%r590, 983055;
	// begin inline asm
	lop3.b32 %r589, %r590, %r591, %r592, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r593, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r594, %r592, %r593;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r597, %r589, %r594;
	// end inline asm
	mov.u32 	%r601, 15728880;
	// begin inline asm
	lop3.b32 %r600, %r601, %r591, %r603, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r604, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r605, %r603, %r604;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r608, %r600, %r605;
	// end inline asm
	shr.u32 	%r613, %r591, 8;
	// begin inline asm
	lop3.b32 %r611, %r590, %r613, %r592, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r615, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r616, %r592, %r615;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r619, %r611, %r616;
	// end inline asm
	// begin inline asm
	lop3.b32 %r622, %r601, %r613, %r603, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r626, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r627, %r603, %r626;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r630, %r622, %r627;
	// end inline asm
	// begin inline asm
	mov.b32 %r638, {%rs288, %rs288};
	// end inline asm
	// begin inline asm
	mov.b32 %r649, {%rs236, %rs236};
	// end inline asm
	xor.b32  	%r637, %r2512, -2004318072;
	// begin inline asm
	lop3.b32 %r635, %r590, %r637, %r638, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r639, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r640, %r638, %r639;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r643, %r635, %r640;
	// end inline asm
	// begin inline asm
	lop3.b32 %r646, %r601, %r637, %r649, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r650, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r651, %r649, %r650;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r654, %r646, %r651;
	// end inline asm
	shr.u32 	%r659, %r637, 8;
	// begin inline asm
	lop3.b32 %r657, %r590, %r659, %r638, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r661, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r662, %r638, %r661;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r665, %r657, %r662;
	// end inline asm
	// begin inline asm
	lop3.b32 %r668, %r601, %r659, %r649, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r672, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r673, %r649, %r672;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r676, %r668, %r673;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r679, %r232;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r681, %r679, %r597;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r684, %r232;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r686, %r684, %r608;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r689, %r232;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r691, %r689, %r619;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r694, %r232;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r696, %r694, %r630;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r699, %r232;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r701, %r699, %r643;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r704, %r232;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r706, %r704, %r654;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r709, %r232;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r711, %r709, %r665;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r714, %r232;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r716, %r714, %r676;
	// end inline asm
	// begin inline asm
	mov.b32 %r724, {%rs288, %rs288};
	// end inline asm
	// begin inline asm
	mov.b32 %r735, {%rs236, %rs236};
	// end inline asm
	xor.b32  	%r723, %r2522, -2004318072;
	// begin inline asm
	lop3.b32 %r721, %r590, %r723, %r724, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r725, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r726, %r724, %r725;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r729, %r721, %r726;
	// end inline asm
	// begin inline asm
	lop3.b32 %r732, %r601, %r723, %r735, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r736, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r737, %r735, %r736;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r740, %r732, %r737;
	// end inline asm
	shr.u32 	%r745, %r723, 8;
	// begin inline asm
	lop3.b32 %r743, %r590, %r745, %r724, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r747, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r748, %r724, %r747;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r751, %r743, %r748;
	// end inline asm
	// begin inline asm
	lop3.b32 %r754, %r601, %r745, %r735, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r758, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r759, %r735, %r758;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r762, %r754, %r759;
	// end inline asm
	// begin inline asm
	mov.b32 %r770, {%rs288, %rs288};
	// end inline asm
	// begin inline asm
	mov.b32 %r781, {%rs236, %rs236};
	// end inline asm
	xor.b32  	%r769, %r2521, -2004318072;
	// begin inline asm
	lop3.b32 %r767, %r590, %r769, %r770, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r771, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r772, %r770, %r771;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r775, %r767, %r772;
	// end inline asm
	// begin inline asm
	lop3.b32 %r778, %r601, %r769, %r781, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r782, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r783, %r781, %r782;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r786, %r778, %r783;
	// end inline asm
	shr.u32 	%r791, %r769, 8;
	// begin inline asm
	lop3.b32 %r789, %r590, %r791, %r770, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r793, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r794, %r770, %r793;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r797, %r789, %r794;
	// end inline asm
	// begin inline asm
	lop3.b32 %r800, %r601, %r791, %r781, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r804, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r805, %r781, %r804;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r808, %r800, %r805;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r811, %r139, %r729, %r681;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r815, %r139, %r740, %r686;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r819, %r139, %r751, %r691;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r823, %r139, %r762, %r696;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r827, %r139, %r775, %r701;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r831, %r139, %r786, %r706;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r835, %r139, %r797, %r711;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r839, %r139, %r808, %r716;
	// end inline asm
	// begin inline asm
	mov.b32 %r848, {%rs288, %rs288};
	// end inline asm
	// begin inline asm
	mov.b32 %r859, {%rs236, %rs236};
	// end inline asm
	xor.b32  	%r847, %r2520, -2004318072;
	// begin inline asm
	lop3.b32 %r845, %r590, %r847, %r848, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r849, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r850, %r848, %r849;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r853, %r845, %r850;
	// end inline asm
	// begin inline asm
	lop3.b32 %r856, %r601, %r847, %r859, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r860, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r861, %r859, %r860;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r864, %r856, %r861;
	// end inline asm
	shr.u32 	%r869, %r847, 8;
	// begin inline asm
	lop3.b32 %r867, %r590, %r869, %r848, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r871, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r872, %r848, %r871;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r875, %r867, %r872;
	// end inline asm
	// begin inline asm
	lop3.b32 %r878, %r601, %r869, %r859, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r882, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r883, %r859, %r882;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r886, %r878, %r883;
	// end inline asm
	// begin inline asm
	mov.b32 %r894, {%rs288, %rs288};
	// end inline asm
	// begin inline asm
	mov.b32 %r905, {%rs236, %rs236};
	// end inline asm
	xor.b32  	%r893, %r2519, -2004318072;
	// begin inline asm
	lop3.b32 %r891, %r590, %r893, %r894, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r895, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r896, %r894, %r895;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r899, %r891, %r896;
	// end inline asm
	// begin inline asm
	lop3.b32 %r902, %r601, %r893, %r905, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r906, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r907, %r905, %r906;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r910, %r902, %r907;
	// end inline asm
	shr.u32 	%r915, %r893, 8;
	// begin inline asm
	lop3.b32 %r913, %r590, %r915, %r894, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r917, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r918, %r894, %r917;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r921, %r913, %r918;
	// end inline asm
	// begin inline asm
	lop3.b32 %r924, %r601, %r915, %r905, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r928, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r929, %r905, %r928;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r932, %r924, %r929;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r935, %r170;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r937, %r935, %r853, %r811;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r941, %r170;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r943, %r941, %r864, %r815;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r947, %r170;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r949, %r947, %r875, %r819;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r953, %r170;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r955, %r953, %r886, %r823;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r959, %r170;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r961, %r959, %r899, %r827;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r965, %r170;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r967, %r965, %r910, %r831;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r971, %r170;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r973, %r971, %r921, %r835;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r977, %r170;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r979, %r977, %r932, %r839;
	// end inline asm
	// begin inline asm
	mov.b32 %r988, {%rs288, %rs288};
	// end inline asm
	// begin inline asm
	mov.b32 %r999, {%rs236, %rs236};
	// end inline asm
	xor.b32  	%r987, %r2509, -2004318072;
	// begin inline asm
	lop3.b32 %r985, %r590, %r987, %r988, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r989, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r990, %r988, %r989;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r993, %r985, %r990;
	// end inline asm
	// begin inline asm
	lop3.b32 %r996, %r601, %r987, %r999, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1000, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1001, %r999, %r1000;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1004, %r996, %r1001;
	// end inline asm
	shr.u32 	%r1009, %r987, 8;
	// begin inline asm
	lop3.b32 %r1007, %r590, %r1009, %r988, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1011, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1012, %r988, %r1011;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1015, %r1007, %r1012;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1018, %r601, %r1009, %r999, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1022, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1023, %r999, %r1022;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1026, %r1018, %r1023;
	// end inline asm
	// begin inline asm
	mov.b32 %r1034, {%rs288, %rs288};
	// end inline asm
	// begin inline asm
	mov.b32 %r1045, {%rs236, %rs236};
	// end inline asm
	xor.b32  	%r1033, %r2510, -2004318072;
	// begin inline asm
	lop3.b32 %r1031, %r590, %r1033, %r1034, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1035, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1036, %r1034, %r1035;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1039, %r1031, %r1036;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1042, %r601, %r1033, %r1045, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1046, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1047, %r1045, %r1046;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1050, %r1042, %r1047;
	// end inline asm
	shr.u32 	%r1055, %r1033, 8;
	// begin inline asm
	lop3.b32 %r1053, %r590, %r1055, %r1034, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1057, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1058, %r1034, %r1057;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1061, %r1053, %r1058;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1064, %r601, %r1055, %r1045, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1068, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1069, %r1045, %r1068;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1072, %r1064, %r1069;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1114, %r201, %r993, %r937;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1111, %r201, %r1004, %r943;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1123, %r201, %r1015, %r949;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1120, %r201, %r1026, %r955;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1132, %r201, %r1039, %r961;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1129, %r201, %r1050, %r967;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1141, %r201, %r1061, %r973;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1138, %r201, %r1072, %r979;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1107, %r238;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1109, %r1107, %r1111;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1112, %r235, %r1114, %r1109;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1116, %r238;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1118, %r1116, %r1120;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1121, %r235, %r1123, %r1118;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1125, %r238;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1127, %r1125, %r1129;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1130, %r235, %r1132, %r1127;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1134, %r238;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1136, %r1134, %r1138;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1139, %r235, %r1141, %r1136;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1143, %r238, %r1114;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1146, %r235, %r1111, %r1143;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1150, %r238, %r1123;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1153, %r235, %r1120, %r1150;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1157, %r238, %r1132;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1160, %r235, %r1129, %r1157;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1164, %r238, %r1141;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1167, %r235, %r1138, %r1164;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1218, %r1215}, {%r241, %r247, %r244, %r250}, {%r1112, %r1146}, {%r2507, %r2507};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1227, %r1224}, {%r241, %r247, %r244, %r250}, {%r1121, %r1153}, {%r2507, %r2507};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1236, %r1233}, {%r241, %r247, %r244, %r250}, {%r1130, %r1160}, {%r2507, %r2507};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1245, %r1242}, {%r241, %r247, %r244, %r250}, {%r1139, %r1167}, {%r2507, %r2507};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1211, %r256;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1213, %r1211, %r1215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1216, %r253, %r1218, %r1213;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1220, %r256;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1222, %r1220, %r1224;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1225, %r253, %r1227, %r1222;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1229, %r256;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1231, %r1229, %r1233;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1234, %r253, %r1236, %r1231;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1238, %r256;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1240, %r1238, %r1242;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1243, %r253, %r1245, %r1240;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1247, %r256, %r1218;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1250, %r253, %r1215, %r1247;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1254, %r256, %r1227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1257, %r253, %r1224, %r1254;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1261, %r256, %r1236;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1264, %r253, %r1233, %r1261;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1268, %r256, %r1245;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1271, %r253, %r1242, %r1268;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1275, %r1276}, {%r259, %r265, %r262, %r268}, {%r1216, %r1250}, {%r2507, %r2507};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1285, %r1286}, {%r259, %r265, %r262, %r268}, {%r1225, %r1257}, {%r2507, %r2507};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1295, %r1296}, {%r259, %r265, %r262, %r268}, {%r1234, %r1264}, {%r2507, %r2507};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1305, %r1306}, {%r259, %r265, %r262, %r268}, {%r1243, %r1271}, {%r2507, %r2507};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1315, %r45, %r1275;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1318, %r45, %r1276;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1321, %r45, %r1285;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1324, %r45, %r1286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1327, %r45, %r1295;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1330, %r45, %r1296;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1333, %r45, %r1305;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1336, %r45, %r1306;
	// end inline asm
	// begin inline asm
	mov.b32 %r1339, {%rs274, %rs274};
	// end inline asm
	mov.u16 	%rs99, 18176;
	// begin inline asm
	mov.b32 %r1340, {%rs99, %rs99};
	// end inline asm
	// begin inline asm
	max.f16x2 %r1341, %r1315, %r1339;
	// end inline asm
	// begin inline asm
	min.f16x2 %r1344, %r1341, %r1340;
	// end inline asm
	// begin inline asm
	mov.b32 %r1347, {%rs274, %rs274};
	// end inline asm
	// begin inline asm
	mov.b32 %r1348, {%rs99, %rs99};
	// end inline asm
	// begin inline asm
	max.f16x2 %r1349, %r1318, %r1347;
	// end inline asm
	// begin inline asm
	min.f16x2 %r1352, %r1349, %r1348;
	// end inline asm
	// begin inline asm
	mov.b32 %r1355, {%rs274, %rs274};
	// end inline asm
	// begin inline asm
	mov.b32 %r1356, {%rs99, %rs99};
	// end inline asm
	// begin inline asm
	max.f16x2 %r1357, %r1321, %r1355;
	// end inline asm
	// begin inline asm
	min.f16x2 %r1360, %r1357, %r1356;
	// end inline asm
	// begin inline asm
	mov.b32 %r1363, {%rs274, %rs274};
	// end inline asm
	// begin inline asm
	mov.b32 %r1364, {%rs99, %rs99};
	// end inline asm
	// begin inline asm
	max.f16x2 %r1365, %r1324, %r1363;
	// end inline asm
	// begin inline asm
	min.f16x2 %r1368, %r1365, %r1364;
	// end inline asm
	// begin inline asm
	mov.b32 %r1371, {%rs274, %rs274};
	// end inline asm
	// begin inline asm
	mov.b32 %r1372, {%rs99, %rs99};
	// end inline asm
	// begin inline asm
	max.f16x2 %r1373, %r1327, %r1371;
	// end inline asm
	// begin inline asm
	min.f16x2 %r1376, %r1373, %r1372;
	// end inline asm
	// begin inline asm
	mov.b32 %r1379, {%rs274, %rs274};
	// end inline asm
	// begin inline asm
	mov.b32 %r1380, {%rs99, %rs99};
	// end inline asm
	// begin inline asm
	max.f16x2 %r1381, %r1330, %r1379;
	// end inline asm
	// begin inline asm
	min.f16x2 %r1384, %r1381, %r1380;
	// end inline asm
	// begin inline asm
	mov.b32 %r1387, {%rs274, %rs274};
	// end inline asm
	// begin inline asm
	mov.b32 %r1388, {%rs99, %rs99};
	// end inline asm
	// begin inline asm
	max.f16x2 %r1389, %r1333, %r1387;
	// end inline asm
	// begin inline asm
	min.f16x2 %r1392, %r1389, %r1388;
	// end inline asm
	// begin inline asm
	mov.b32 %r1395, {%rs274, %rs274};
	// end inline asm
	// begin inline asm
	mov.b32 %r1396, {%rs99, %rs99};
	// end inline asm
	// begin inline asm
	max.f16x2 %r1397, %r1336, %r1395;
	// end inline asm
	// begin inline asm
	min.f16x2 %r1400, %r1397, %r1396;
	// end inline asm
	// begin inline asm
	mov.b32 %r1406, {%rs288, %rs288};
	// end inline asm
	// begin inline asm
	mov.b32 %r1404, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1405, %r1406, %r1404;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1408, %r1344, %r1405;
	// end inline asm
	// begin inline asm
	mov.b32 %r1411, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1412, %r1406, %r1411;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1415, %r1352, %r1412;
	// end inline asm
	// begin inline asm
	mov.b32 %r1418, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1419, %r1406, %r1418;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1422, %r1360, %r1419;
	// end inline asm
	// begin inline asm
	mov.b32 %r1425, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1426, %r1406, %r1425;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1429, %r1368, %r1426;
	// end inline asm
	mov.u32 	%r1435, 25152;
	// begin inline asm
	prmt.b32 %r1432, %r1408, %r1422, %r1435;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1436, %r1415, %r1429, %r1435;
	// end inline asm
	shl.b32 	%r1443, %r1436, 4;
	mov.u32 	%r1441, 252645135;
	// begin inline asm
	lop3.b32 %r1440, %r1441, %r1432, %r1443, 202;
	// end inline asm
	xor.b32  	%r2406, %r1440, -2004318072;
	// begin inline asm
	mov.b32 %r1447, {%rs288, %rs288};
	// end inline asm
	// begin inline asm
	mov.b32 %r1445, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1446, %r1447, %r1445;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1449, %r1376, %r1446;
	// end inline asm
	// begin inline asm
	mov.b32 %r1452, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1453, %r1447, %r1452;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1456, %r1384, %r1453;
	// end inline asm
	// begin inline asm
	mov.b32 %r1459, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1460, %r1447, %r1459;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1463, %r1392, %r1460;
	// end inline asm
	// begin inline asm
	mov.b32 %r1466, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1467, %r1447, %r1466;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1470, %r1400, %r1467;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1473, %r1449, %r1463, %r1435;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1477, %r1456, %r1470, %r1435;
	// end inline asm
	shl.b32 	%r1484, %r1477, 4;
	// begin inline asm
	lop3.b32 %r1481, %r1441, %r1473, %r1484, 202;
	// end inline asm
	xor.b32  	%r2407, %r1481, -2004318072;
	st.shared.u32 	[%rd154], %r2406;
	st.shared.u32 	[%rd155], %r2407;
	ld.shared.u32 	%r2516, [%rd99];
	ld.shared.u32 	%r2517, [%rd101];
	// begin inline asm
	mov.b32 %r1490, {%rs288, %rs288};
	// end inline asm
	// begin inline asm
	mov.b32 %r1501, {%rs236, %rs236};
	// end inline asm
	xor.b32  	%r1489, %r2516, -2004318072;
	// begin inline asm
	lop3.b32 %r1487, %r590, %r1489, %r1490, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1491, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1492, %r1490, %r1491;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1495, %r1487, %r1492;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1498, %r601, %r1489, %r1501, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1502, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1503, %r1501, %r1502;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1506, %r1498, %r1503;
	// end inline asm
	shr.u32 	%r1511, %r1489, 8;
	// begin inline asm
	lop3.b32 %r1509, %r590, %r1511, %r1490, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1513, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1514, %r1490, %r1513;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1517, %r1509, %r1514;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1520, %r601, %r1511, %r1501, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1524, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1525, %r1501, %r1524;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1528, %r1520, %r1525;
	// end inline asm
	// begin inline asm
	mov.b32 %r1536, {%rs288, %rs288};
	// end inline asm
	// begin inline asm
	mov.b32 %r1547, {%rs236, %rs236};
	// end inline asm
	xor.b32  	%r1535, %r2517, -2004318072;
	// begin inline asm
	lop3.b32 %r1533, %r590, %r1535, %r1536, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1537, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1538, %r1536, %r1537;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1541, %r1533, %r1538;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1544, %r601, %r1535, %r1547, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1548, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1549, %r1547, %r1548;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1552, %r1544, %r1549;
	// end inline asm
	shr.u32 	%r1557, %r1535, 8;
	// begin inline asm
	lop3.b32 %r1555, %r590, %r1557, %r1536, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1559, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1560, %r1536, %r1559;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1563, %r1555, %r1560;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1566, %r601, %r1557, %r1547, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1570, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1571, %r1547, %r1570;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1574, %r1566, %r1571;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1577, %r232;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1579, %r1577, %r1495;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1582, %r232;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1584, %r1582, %r1506;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1587, %r232;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1589, %r1587, %r1517;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1592, %r232;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1594, %r1592, %r1528;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1597, %r232;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1599, %r1597, %r1541;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1602, %r232;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1604, %r1602, %r1552;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1607, %r232;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1609, %r1607, %r1563;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1612, %r232;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1614, %r1612, %r1574;
	// end inline asm
	// begin inline asm
	mov.b32 %r1622, {%rs288, %rs288};
	// end inline asm
	// begin inline asm
	mov.b32 %r1633, {%rs236, %rs236};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1619, %r590, %r847, %r1622, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1623, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1624, %r1622, %r1623;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1627, %r1619, %r1624;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1630, %r601, %r847, %r1633, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1634, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1635, %r1633, %r1634;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1638, %r1630, %r1635;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1641, %r590, %r869, %r1622, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1645, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1646, %r1622, %r1645;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1649, %r1641, %r1646;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1652, %r601, %r869, %r1633, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1656, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1657, %r1633, %r1656;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1660, %r1652, %r1657;
	// end inline asm
	// begin inline asm
	mov.b32 %r1668, {%rs288, %rs288};
	// end inline asm
	// begin inline asm
	mov.b32 %r1679, {%rs236, %rs236};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1665, %r590, %r893, %r1668, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1669, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1670, %r1668, %r1669;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1673, %r1665, %r1670;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1676, %r601, %r893, %r1679, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1680, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1681, %r1679, %r1680;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1684, %r1676, %r1681;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1687, %r590, %r915, %r1668, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1691, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1692, %r1668, %r1691;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1695, %r1687, %r1692;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1698, %r601, %r915, %r1679, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1702, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1703, %r1679, %r1702;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1706, %r1698, %r1703;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1709, %r139, %r1627, %r1579;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1713, %r139, %r1638, %r1584;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1717, %r139, %r1649, %r1589;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1721, %r139, %r1660, %r1594;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1725, %r139, %r1673, %r1599;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1729, %r139, %r1684, %r1604;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1733, %r139, %r1695, %r1609;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1737, %r139, %r1706, %r1614;
	// end inline asm
	// begin inline asm
	mov.b32 %r1746, {%rs288, %rs288};
	// end inline asm
	// begin inline asm
	mov.b32 %r1757, {%rs236, %rs236};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1743, %r590, %r987, %r1746, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1747, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1748, %r1746, %r1747;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1751, %r1743, %r1748;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1754, %r601, %r987, %r1757, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1758, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1759, %r1757, %r1758;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1762, %r1754, %r1759;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1765, %r590, %r1009, %r1746, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1769, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1770, %r1746, %r1769;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1773, %r1765, %r1770;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1776, %r601, %r1009, %r1757, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1780, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1781, %r1757, %r1780;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1784, %r1776, %r1781;
	// end inline asm
	// begin inline asm
	mov.b32 %r1792, {%rs288, %rs288};
	// end inline asm
	// begin inline asm
	mov.b32 %r1803, {%rs236, %rs236};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1789, %r590, %r1033, %r1792, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1793, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1794, %r1792, %r1793;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1797, %r1789, %r1794;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1800, %r601, %r1033, %r1803, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1804, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1805, %r1803, %r1804;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1808, %r1800, %r1805;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1811, %r590, %r1055, %r1792, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1815, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1816, %r1792, %r1815;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1819, %r1811, %r1816;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1822, %r601, %r1055, %r1803, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1826, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1827, %r1803, %r1826;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1830, %r1822, %r1827;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1833, %r170;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1835, %r1833, %r1751, %r1709;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1839, %r170;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1841, %r1839, %r1762, %r1713;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1845, %r170;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1847, %r1845, %r1773, %r1717;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1851, %r170;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1853, %r1851, %r1784, %r1721;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1857, %r170;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1859, %r1857, %r1797, %r1725;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1863, %r170;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1865, %r1863, %r1808, %r1729;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1869, %r170;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1871, %r1869, %r1819, %r1733;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1875, %r170;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1877, %r1875, %r1830, %r1737;
	// end inline asm
	// begin inline asm
	mov.b32 %r1886, {%rs288, %rs288};
	// end inline asm
	// begin inline asm
	mov.b32 %r1897, {%rs236, %rs236};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1883, %r590, %r591, %r1886, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1887, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1888, %r1886, %r1887;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1891, %r1883, %r1888;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1894, %r601, %r591, %r1897, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1898, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1899, %r1897, %r1898;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1902, %r1894, %r1899;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1905, %r590, %r613, %r1886, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1909, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1910, %r1886, %r1909;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1913, %r1905, %r1910;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1916, %r601, %r613, %r1897, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1920, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1921, %r1897, %r1920;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1924, %r1916, %r1921;
	// end inline asm
	// begin inline asm
	mov.b32 %r1932, {%rs288, %rs288};
	// end inline asm
	// begin inline asm
	mov.b32 %r1943, {%rs236, %rs236};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1929, %r590, %r637, %r1932, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1933, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1934, %r1932, %r1933;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1937, %r1929, %r1934;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1940, %r601, %r637, %r1943, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1944, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1945, %r1943, %r1944;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1948, %r1940, %r1945;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1951, %r590, %r659, %r1932, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1955, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1956, %r1932, %r1955;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1959, %r1951, %r1956;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1962, %r601, %r659, %r1943, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1966, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1967, %r1943, %r1966;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1970, %r1962, %r1967;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2012, %r201, %r1891, %r1835;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2009, %r201, %r1902, %r1841;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2021, %r201, %r1913, %r1847;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2018, %r201, %r1924, %r1853;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2030, %r201, %r1937, %r1859;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2027, %r201, %r1948, %r1865;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2039, %r201, %r1959, %r1871;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2036, %r201, %r1970, %r1877;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2005, %r238;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2007, %r2005, %r2009;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2010, %r235, %r2012, %r2007;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2014, %r238;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2016, %r2014, %r2018;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2019, %r235, %r2021, %r2016;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2023, %r238;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2025, %r2023, %r2027;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2028, %r235, %r2030, %r2025;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2032, %r238;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2034, %r2032, %r2036;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2037, %r235, %r2039, %r2034;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2041, %r238, %r2012;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2044, %r235, %r2009, %r2041;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2048, %r238, %r2021;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2051, %r235, %r2018, %r2048;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2055, %r238, %r2030;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2058, %r235, %r2027, %r2055;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2062, %r238, %r2039;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2065, %r235, %r2036, %r2062;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2116, %r2113}, {%r241, %r247, %r244, %r250}, {%r2010, %r2044}, {%r2507, %r2507};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2125, %r2122}, {%r241, %r247, %r244, %r250}, {%r2019, %r2051}, {%r2507, %r2507};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2134, %r2131}, {%r241, %r247, %r244, %r250}, {%r2028, %r2058}, {%r2507, %r2507};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2143, %r2140}, {%r241, %r247, %r244, %r250}, {%r2037, %r2065}, {%r2507, %r2507};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2109, %r256;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2111, %r2109, %r2113;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2114, %r253, %r2116, %r2111;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2118, %r256;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2120, %r2118, %r2122;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2123, %r253, %r2125, %r2120;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2127, %r256;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2129, %r2127, %r2131;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2132, %r253, %r2134, %r2129;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2136, %r256;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2138, %r2136, %r2140;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2141, %r253, %r2143, %r2138;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2145, %r256, %r2116;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2148, %r253, %r2113, %r2145;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2152, %r256, %r2125;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2155, %r253, %r2122, %r2152;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2159, %r256, %r2134;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2162, %r253, %r2131, %r2159;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2166, %r256, %r2143;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2169, %r253, %r2140, %r2166;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2173, %r2174}, {%r259, %r265, %r262, %r268}, {%r2114, %r2148}, {%r2507, %r2507};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2183, %r2184}, {%r259, %r265, %r262, %r268}, {%r2123, %r2155}, {%r2507, %r2507};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2193, %r2194}, {%r259, %r265, %r262, %r268}, {%r2132, %r2162}, {%r2507, %r2507};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2203, %r2204}, {%r259, %r265, %r262, %r268}, {%r2141, %r2169}, {%r2507, %r2507};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2213, %r45, %r2173;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2216, %r45, %r2174;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2219, %r45, %r2183;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2222, %r45, %r2184;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2225, %r45, %r2193;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2228, %r45, %r2194;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2231, %r45, %r2203;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2234, %r45, %r2204;
	// end inline asm
	// begin inline asm
	mov.b32 %r2237, {%rs274, %rs274};
	// end inline asm
	// begin inline asm
	mov.b32 %r2238, {%rs99, %rs99};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2239, %r2213, %r2237;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2242, %r2239, %r2238;
	// end inline asm
	// begin inline asm
	mov.b32 %r2245, {%rs274, %rs274};
	// end inline asm
	// begin inline asm
	mov.b32 %r2246, {%rs99, %rs99};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2247, %r2216, %r2245;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2250, %r2247, %r2246;
	// end inline asm
	// begin inline asm
	mov.b32 %r2253, {%rs274, %rs274};
	// end inline asm
	// begin inline asm
	mov.b32 %r2254, {%rs99, %rs99};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2255, %r2219, %r2253;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2258, %r2255, %r2254;
	// end inline asm
	// begin inline asm
	mov.b32 %r2261, {%rs274, %rs274};
	// end inline asm
	// begin inline asm
	mov.b32 %r2262, {%rs99, %rs99};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2263, %r2222, %r2261;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2266, %r2263, %r2262;
	// end inline asm
	// begin inline asm
	mov.b32 %r2269, {%rs274, %rs274};
	// end inline asm
	// begin inline asm
	mov.b32 %r2270, {%rs99, %rs99};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2271, %r2225, %r2269;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2274, %r2271, %r2270;
	// end inline asm
	// begin inline asm
	mov.b32 %r2277, {%rs274, %rs274};
	// end inline asm
	// begin inline asm
	mov.b32 %r2278, {%rs99, %rs99};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2279, %r2228, %r2277;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2282, %r2279, %r2278;
	// end inline asm
	// begin inline asm
	mov.b32 %r2285, {%rs274, %rs274};
	// end inline asm
	// begin inline asm
	mov.b32 %r2286, {%rs99, %rs99};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2287, %r2231, %r2285;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2290, %r2287, %r2286;
	// end inline asm
	// begin inline asm
	mov.b32 %r2293, {%rs274, %rs274};
	// end inline asm
	// begin inline asm
	mov.b32 %r2294, {%rs99, %rs99};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2295, %r2234, %r2293;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2298, %r2295, %r2294;
	// end inline asm
	// begin inline asm
	mov.b32 %r2304, {%rs288, %rs288};
	// end inline asm
	// begin inline asm
	mov.b32 %r2302, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2303, %r2304, %r2302;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2306, %r2242, %r2303;
	// end inline asm
	// begin inline asm
	mov.b32 %r2309, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2310, %r2304, %r2309;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2313, %r2250, %r2310;
	// end inline asm
	// begin inline asm
	mov.b32 %r2316, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2317, %r2304, %r2316;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2320, %r2258, %r2317;
	// end inline asm
	// begin inline asm
	mov.b32 %r2323, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2324, %r2304, %r2323;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2327, %r2266, %r2324;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2330, %r2306, %r2320, %r1435;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2334, %r2313, %r2327, %r1435;
	// end inline asm
	shl.b32 	%r2341, %r2334, 4;
	// begin inline asm
	lop3.b32 %r2338, %r1441, %r2330, %r2341, 202;
	// end inline asm
	xor.b32  	%r2408, %r2338, -2004318072;
	// begin inline asm
	mov.b32 %r2345, {%rs288, %rs288};
	// end inline asm
	// begin inline asm
	mov.b32 %r2343, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2344, %r2345, %r2343;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2347, %r2274, %r2344;
	// end inline asm
	// begin inline asm
	mov.b32 %r2350, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2351, %r2345, %r2350;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2354, %r2282, %r2351;
	// end inline asm
	// begin inline asm
	mov.b32 %r2357, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2358, %r2345, %r2357;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2361, %r2290, %r2358;
	// end inline asm
	// begin inline asm
	mov.b32 %r2364, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2365, %r2345, %r2364;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2368, %r2298, %r2365;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2371, %r2347, %r2361, %r1435;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2375, %r2354, %r2368, %r1435;
	// end inline asm
	shl.b32 	%r2382, %r2375, 4;
	// begin inline asm
	lop3.b32 %r2379, %r1441, %r2371, %r2382, 202;
	// end inline asm
	xor.b32  	%r2409, %r2379, -2004318072;
	st.shared.u32 	[%rd154], %r2408;
	st.shared.u32 	[%rd155], %r2409;
	add.s32 	%r2518, %r2518, 32;
	add.s64 	%rd155, %rd155, 4228;
	add.s64 	%rd154, %rd154, 4228;
	setp.eq.s32 	%p179, %r2518, 256;
	mov.u32 	%r2519, %r2512;
	mov.u32 	%r2520, %r2511;
	mov.u32 	%r2521, %r2510;
	mov.u32 	%r2522, %r2509;
	@%p179 bra 	$L__BB0_31;
	bra.uni 	$L__BB0_30;
$L__BB0_31:                             // %guard_exit10646
                                        //   in Loop: Header=BB0_29 Depth=1
	bar.sync 	0;
	or.b32  	%r66, %r39, %r22;
	ld.shared.u32 	%r2415, [%rd14];
	ld.shared.u32 	%r2416, [%rd15+128];
	ld.shared.u32 	%r2423, [%rd15+4];
	ld.shared.u32 	%r2424, [%rd15+132];
	or.b32  	%r67, %r66, 64;
	ld.shared.u32 	%r2431, [%rd16];
	ld.shared.u32 	%r2432, [%rd17+128];
	ld.shared.u32 	%r2439, [%rd17+4];
	ld.shared.u32 	%r2440, [%rd17+132];
	ld.shared.u32 	%r2447, [%rd18];
	ld.shared.u32 	%r2448, [%rd19+128];
	ld.shared.u32 	%r2455, [%rd19+4];
	ld.shared.u32 	%r2456, [%rd19+132];
	ld.shared.u32 	%r2463, [%rd20];
	ld.shared.u32 	%r2464, [%rd21+128];
	ld.shared.u32 	%r2471, [%rd21+4];
	ld.shared.u32 	%r2472, [%rd21+132];
	// begin inline asm
	prmt.b32 %r2410, %r2415, %r2416, %r498;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2414, %r2415, %r2416, %r502;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2418, %r2423, %r2424, %r498;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2422, %r2423, %r2424, %r502;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2426, %r2431, %r2432, %r498;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2430, %r2431, %r2432, %r502;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2434, %r2439, %r2440, %r498;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2438, %r2439, %r2440, %r502;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2442, %r2447, %r2448, %r498;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2446, %r2447, %r2448, %r502;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2450, %r2455, %r2456, %r498;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2454, %r2455, %r2456, %r502;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2458, %r2463, %r2464, %r498;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2462, %r2463, %r2464, %r502;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2466, %r2471, %r2472, %r498;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2470, %r2471, %r2472, %r502;
	// end inline asm
	selp.b32 	%r2474, %r2414, %r2410, %p166;
	shfl.sync.bfly.b32	%r72, %r2474, 8, 31, -1;
	selp.b32 	%r2475, %r2422, %r2418, %p166;
	shfl.sync.bfly.b32	%r73, %r2475, 8, 31, -1;
	selp.b32 	%r2476, %r2430, %r2426, %p166;
	shfl.sync.bfly.b32	%r2477, %r2476, 8, 31, -1;
	selp.b32 	%r2478, %r2438, %r2434, %p166;
	shfl.sync.bfly.b32	%r2479, %r2478, 8, 31, -1;
	selp.b32 	%r2480, %r2446, %r2442, %p166;
	shfl.sync.bfly.b32	%r2481, %r2480, 8, 31, -1;
	selp.b32 	%r2482, %r2454, %r2450, %p166;
	shfl.sync.bfly.b32	%r2483, %r2482, 8, 31, -1;
	selp.b32 	%r2484, %r2462, %r2458, %p166;
	shfl.sync.bfly.b32	%r2485, %r2484, 8, 31, -1;
	selp.b32 	%r2486, %r2470, %r2466, %p166;
	shfl.sync.bfly.b32	%r2487, %r2486, 8, 31, -1;
	setp.lt.u32 	%p181, %r66, 96;
	shl.b32 	%r2508, %r66, 9;
	@%p181 bra 	$L__BB0_33;
// %bb.32:                              // %pass9947
                                        //   in Loop: Header=BB0_29 Depth=1
	selp.b32 	%r2488, %r73, %r2422, %p166;
	selp.b32 	%r2489, %r2418, %r73, %p166;
	selp.b32 	%r2490, %r72, %r2414, %p166;
	selp.b32 	%r2491, %r2410, %r72, %p166;
	or.b32  	%r2493, %r2508, %r31;
	or.b32  	%r2494, %r32, %r2493;
	cvt.u64.u32 	%rd102, %r2494;
	add.s64 	%rd103, %rd102, %rd5;
	shr.u64 	%rd104, %rd103, 39;
	add.s64 	%rd105, %rd103, %rd104;
	shr.s64 	%rd106, %rd105, 25;
	setp.lt.s64 	%p183, %rd103, 0;
	and.b64  	%rd107, %rd105, -33554432;
	setp.ne.s64 	%p184, %rd107, %rd103;
	and.pred  	%p185, %p183, %p184;
	selp.u64 	%rd108, 1, 0, %p185;
	sub.s64 	%rd109, %rd108, %rd106;
	shl.b64 	%rd110, %rd109, 25;
	add.s64 	%rd111, %rd110, %rd103;
	shl.b64 	%rd112, %rd111, 2;
	add.s64 	%rd113, %rd3, %rd112;
	st.global.v4.u32 	[%rd113], {%r2491, %r2489, %r2490, %r2488};
$L__BB0_33:                             // %pass10040
                                        //   in Loop: Header=BB0_29 Depth=1
	selp.b32 	%r78, %r2442, %r2481, %p166;
	selp.b32 	%r79, %r2481, %r2446, %p166;
	selp.b32 	%r80, %r2450, %r2483, %p166;
	selp.b32 	%r81, %r2483, %r2454, %p166;
	selp.b32 	%r82, %r2458, %r2485, %p166;
	selp.b32 	%r83, %r2485, %r2462, %p166;
	selp.b32 	%r84, %r2466, %r2487, %p166;
	selp.b32 	%r85, %r2487, %r2470, %p166;
	setp.lt.u32 	%p186, %r67, 96;
	@%p186 bra 	$L__BB0_35;
// %bb.34:                              // %pass10072
                                        //   in Loop: Header=BB0_29 Depth=1
	selp.b32 	%r74, %r2426, %r2477, %p166;
	selp.b32 	%r75, %r2477, %r2430, %p166;
	selp.b32 	%r76, %r2434, %r2479, %p166;
	selp.b32 	%r77, %r2479, %r2438, %p166;
	shl.b32 	%r2495, %r67, 9;
	or.b32  	%r2496, %r2495, %r31;
	or.b32  	%r2497, %r32, %r2496;
	cvt.u64.u32 	%rd114, %r2497;
	add.s64 	%rd115, %rd114, %rd5;
	shr.u64 	%rd116, %rd115, 39;
	add.s64 	%rd117, %rd115, %rd116;
	shr.s64 	%rd118, %rd117, 25;
	setp.lt.s64 	%p187, %rd115, 0;
	and.b64  	%rd119, %rd117, -33554432;
	setp.ne.s64 	%p188, %rd119, %rd115;
	and.pred  	%p189, %p187, %p188;
	selp.u64 	%rd120, 1, 0, %p189;
	sub.s64 	%rd121, %rd120, %rd118;
	shl.b64 	%rd122, %rd121, 25;
	add.s64 	%rd123, %rd122, %rd115;
	shl.b64 	%rd124, %rd123, 2;
	add.s64 	%rd125, %rd3, %rd124;
	st.global.v4.u32 	[%rd125], {%r74, %r76, %r75, %r77};
	bra.uni 	$L__BB0_35;
$L__BB0_36:                             // %L23941
	st.global.u32 	[%rd4], %r2507;
	ret;
$L__BB0_7:                              // %L167
	mov.u32 	%r2506, 2;
	st.global.u32 	[%rd4], %r2506;
	mov.u64 	%rd152, exception2111;
	cvta.global.u64 	%rd153, %rd152;
	{ // callseq 4, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd153;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 4
	{ // callseq 5, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd30;
	st.param.b32 	[param0+8], %r86;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 5
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
$L__BB0_10:                             // %L275
	mov.u32 	%r2505, 3;
	st.global.u32 	[%rd4], %r2505;
	mov.u64 	%rd150, exception2111;
	cvta.global.u64 	%rd151, %rd150;
	{ // callseq 2, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd151;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 2
	{ // callseq 3, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd30;
	st.param.b32 	[param0+8], %r86;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 3
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
$L__BB0_1:                              // %L8
	mov.u64 	%rd35, exception12130;
	cvta.global.u64 	%rd36, %rd35;
	{ // callseq 0, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd36;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 0
	{ // callseq 1, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd30;
	st.param.b32 	[param0+8], %r86;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 1
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
                                        // -- End function
}
