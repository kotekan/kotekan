// PTX kernel code for the CUDA upchannelizer
// This file has been generated automatically by `upchan.jl`.
// Do not modify this file, your changes will be lost.

// PTX CompilerJob of MethodInstance for upchan(::Int32, ::Int32, ::Int32, ::Int32, ::Int32, ::Int32, ::CuDeviceVector{Float16x2, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int32, 1}) for sm_86, minthreads=512, blocks_per_sm=2

//
// Generated by LLVM NVPTX Back-End
//

.version 8.2
.target sm_86
.address_size 64

	// .globl	_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE // -- Begin function _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE
.func gpu_report_exception
(
	.param .b64 gpu_report_exception_param_0
)
.noreturn
{
	trap;
}
.func gpu_signal_exception
(
	.param .align 8 .b8 gpu_signal_exception_param_0[16]
)
.noreturn
{
	trap;
}
.extern .shared .align 32 .b8 shmem[];
.global .align 1 .b8 exception1601[6] = {101, 114, 114, 111, 114, 0};
.global .align 1 .b8 exception1[10] = {101, 120, 99, 101, 112, 116, 105, 111, 110, 0};
                                        // @_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE
.visible .entry _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE(
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_0[16],
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_1,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_2,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_3,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_4,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_5,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_6,
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_7[32],
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_8[32],
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_9[32],
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_10[32]
)
.reqntid 512, 1, 1
.minnctapersm 2
{
	.reg .pred 	%p<235>;
	.reg .b16 	%rs<81>;
	.reg .b32 	%r<1185>;
	.reg .f32 	%f<845>;
	.reg .b64 	%rd<145>;

// %bb.0:                               // %conversion
	ld.param.u32 	%r135, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_0+8];
	ld.param.u64 	%rd30, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_0];
	// begin inline asm
	mov.u32 %r142, %dynamic_smem_size;
	// end inline asm
	setp.gt.u32 	%p1, %r142, 69887;
	@%p1 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:                              // %L16
	ld.param.u64 	%rd31, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_10];
	ld.param.u32 	%r136, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_1];
	mov.u32 	%r1, %tid.y;
	shl.b32 	%r2, %r1, 5;
	mov.u32 	%r3, %tid.x;
	mov.u32 	%r4, %ctaid.x;
	shl.b32 	%r5, %r4, 9;
	or.b32  	%r143, %r2, %r3;
	or.b32  	%r144, %r143, %r5;
	mul.wide.u32 	%rd37, %r144, 4;
	add.s64 	%rd4, %rd31, %rd37;
	mov.u32 	%r145, 1;
	st.global.u32 	[%rd4], %r145;
	setp.gt.u32 	%p2, %r136, 32767;
	@%p2 bra 	$L__BB0_7;
// %bb.3:                               // %L120
	ld.param.u32 	%r137, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_2];
	setp.lt.s32 	%p3, %r137, %r136;
	setp.gt.s32 	%p4, %r137, 65535;
	or.pred  	%p5, %p3, %p4;
	@%p5 bra 	$L__BB0_7;
// %bb.4:                               // %L127
	ld.param.u32 	%r138, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_3];
	sub.s32 	%r146, %r137, %r136;
	and.b32  	%r147, %r146, 255;
	setp.ne.s32 	%p6, %r147, 0;
	setp.gt.u32 	%p7, %r138, 2047;
	or.pred  	%p8, %p6, %p7;
	@%p8 bra 	$L__BB0_7;
// %bb.5:                               // %L138
	ld.param.u32 	%r139, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_4];
	setp.lt.s32 	%p9, %r139, %r138;
	setp.gt.s32 	%p10, %r139, 4095;
	or.pred  	%p11, %p9, %p10;
	@%p11 bra 	$L__BB0_7;
// %bb.6:                               // %L145
	sub.s32 	%r148, %r139, %r138;
	add.s32 	%r149, %r148, 3;
	and.b32  	%r150, %r149, 15;
	setp.eq.s32 	%p12, %r150, 0;
	@%p12 bra 	$L__BB0_8;
	bra.uni 	$L__BB0_7;
$L__BB0_8:                              // %L260
	ld.param.u32 	%r140, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_5];
	setp.lt.s32 	%p13, %r140, 0;
	@%p13 bra 	$L__BB0_10;
// %bb.9:                               // %L262
	ld.param.u32 	%r141, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_6];
	setp.le.s32 	%p14, %r140, %r141;
	setp.lt.s32 	%p15, %r141, 65;
	and.pred  	%p16, %p14, %p15;
	@%p16 bra 	$L__BB0_11;
	bra.uni 	$L__BB0_10;
$L__BB0_11:                             // %pass171
	shl.b32 	%r78, %r3, 1;
	and.b32  	%r156, %r78, 6;
	bfe.u32 	%r84, %r3, 2, 1;
	or.b32  	%r85, %r84, %r156;
	or.b32  	%r86, %r85, 8;
	mov.f32 	%f148, 0f40000000;
	mov.f32 	%f149, 0f427C0000;
	div.approx.f32 	%f86, %f149, %f148;
	cvt.rn.f32.s32 	%f150, %r85;
	sub.f32 	%f151, %f150, %f86;
	mov.f32 	%f180, 0f41800000;
	div.approx.f32 	%f88, %f151, %f180;
	setp.ne.f32 	%p22, %f88, 0f00000000;
	mov.f32 	%f820, 0f3F800000;
	mov.f32 	%f813, %f820;
	@%p22 bra 	$L__BB0_12;
	bra.uni 	$L__BB0_13;
$L__BB0_12:                             // %L556
	sin.approx.f32 	%f181, %f88;
	div.approx.f32 	%f813, %f181, %f88;
$L__BB0_13:                             // %L559
	cvt.rn.f32.s32 	%f184, %r86;
	sub.f32 	%f185, %f184, %f86;
	div.approx.f32 	%f5, %f185, %f180;
	setp.eq.f32 	%p28, %f5, 0f00000000;
	mov.f32 	%f814, %f820;
	@%p28 bra 	$L__BB0_15;
// %bb.14:                              // %L576
	sin.approx.f32 	%f215, %f5;
	div.approx.f32 	%f814, %f215, %f5;
$L__BB0_15:                             // %L579
	or.b32  	%r174, %r85, 16;
	or.b32  	%r7, %r85, 24;
	cvt.rn.f32.s32 	%f219, %r174;
	sub.f32 	%f220, %f219, %f86;
	div.approx.f32 	%f9, %f220, %f180;
	setp.eq.f32 	%p34, %f9, 0f00000000;
	mov.f32 	%f815, %f820;
	@%p34 bra 	$L__BB0_17;
// %bb.16:                              // %L658
	sin.approx.f32 	%f250, %f9;
	div.approx.f32 	%f815, %f250, %f9;
$L__BB0_17:                             // %L661
	cvt.rn.f32.s32 	%f253, %r7;
	sub.f32 	%f254, %f253, %f86;
	div.approx.f32 	%f14, %f254, %f180;
	setp.eq.f32 	%p40, %f14, 0f00000000;
	mov.f32 	%f816, %f820;
	@%p40 bra 	$L__BB0_19;
// %bb.18:                              // %L678
	sin.approx.f32 	%f284, %f14;
	div.approx.f32 	%f816, %f284, %f14;
$L__BB0_19:                             // %L681
	or.b32  	%r192, %r85, 32;
	or.b32  	%r9, %r85, 40;
	cvt.rn.f32.s32 	%f288, %r192;
	sub.f32 	%f289, %f288, %f86;
	div.approx.f32 	%f18, %f289, %f180;
	setp.eq.f32 	%p46, %f18, 0f00000000;
	mov.f32 	%f817, %f820;
	@%p46 bra 	$L__BB0_21;
// %bb.20:                              // %L760
	sin.approx.f32 	%f319, %f18;
	div.approx.f32 	%f817, %f319, %f18;
$L__BB0_21:                             // %L763
	cvt.rn.f32.s32 	%f322, %r9;
	sub.f32 	%f323, %f322, %f86;
	div.approx.f32 	%f23, %f323, %f180;
	setp.eq.f32 	%p52, %f23, 0f00000000;
	mov.f32 	%f818, %f820;
	@%p52 bra 	$L__BB0_23;
// %bb.22:                              // %L780
	sin.approx.f32 	%f353, %f23;
	div.approx.f32 	%f818, %f353, %f23;
$L__BB0_23:                             // %L783
	or.b32  	%r210, %r85, 48;
	or.b32  	%r11, %r85, 56;
	cvt.rn.f32.s32 	%f357, %r210;
	sub.f32 	%f358, %f357, %f86;
	div.approx.f32 	%f27, %f358, %f180;
	setp.eq.f32 	%p58, %f27, 0f00000000;
	mov.f32 	%f819, %f820;
	@%p58 bra 	$L__BB0_25;
// %bb.24:                              // %L862
	sin.approx.f32 	%f388, %f27;
	div.approx.f32 	%f819, %f388, %f27;
$L__BB0_25:                             // %L865
	shr.u32 	%r82, %r3, 1;
	cvt.rn.f32.s32 	%f391, %r11;
	sub.f32 	%f392, %f391, %f86;
	div.approx.f32 	%f32, %f392, %f180;
	setp.eq.f32 	%p64, %f32, 0f00000000;
	@%p64 bra 	$L__BB0_27;
// %bb.26:                              // %L882
	sin.approx.f32 	%f422, %f32;
	div.approx.f32 	%f820, %f422, %f32;
$L__BB0_27:                             // %L885
	shr.u32 	%r15, %r3, 3;
	and.b32  	%r16, %r15, 2;
	and.b32  	%r17, %r82, 4;
	or.b32  	%r254, %r84, %r16;
	or.b32  	%r18, %r254, %r17;
	and.b32  	%r255, %r3, 3;
	mul.lo.s32 	%r256, %r255, %r18;
	shl.b32 	%r257, %r256, 1;
	neg.s32 	%r258, %r257;
	cvt.rn.f32.s32 	%f493, %r258;
	mov.f32 	%f494, 0f41000000;
	div.approx.f32 	%f35, %f493, %f494;
	abs.f32 	%f835, %f35;
	setp.lt.f32 	%p79, %f835, 0f40000000;
	@%p79 bra 	$L__BB0_94;
// %bb.28:
	setp.gtu.f32 	%p80, %f835, 0f4B800000;
	@%p80 bra 	$L__BB0_90;
	bra.uni 	$L__BB0_29;
$L__BB0_90:
	mov.b32 	%r88, %f835;
	and.b32  	%r259, %r88, 8388607;
	or.b32  	%r1178, %r259, 1065353216;
	mov.b32 	%f834, %r1178;
	add.s32 	%r260, %r88, -1073741824;
	and.b32  	%r1179, %r260, -8388608;
	setp.eq.s32 	%p86, %r1179, 0;
	@%p86 bra 	$L__BB0_93;
// %bb.91:                              // %__nv_fmaf_rn.exit4.i.i.i566.preheader
	mov.f32 	%f504, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f503,%f504;
	// end inline asm
$L__BB0_92:                             // %__nv_fmaf_rn.exit4.i.i.i566
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r261, %r1179, 192937984;
	add.s32 	%r262, %r1178, %r261;
	mov.b32 	%f505, %r262;
	mul.f32 	%f506, %f503, %f505;
	sub.f32 	%f507, %f505, %f506;
	fma.rn.f32 	%f508, %f507, %f503, %f506;
	sub.f32 	%f509, %f505, %f508;
	fma.rz.f32 	%f510, %f509, %f503, %f508;
	cvt.rzi.f32.f32 	%f511, %f510;
	sub.f32 	%f834, %f505, %f511;
	sub.s32 	%r1179, %r1179, %r261;
	mov.b32 	%r1178, %f834;
	setp.ne.s32 	%p87, %r1179, 0;
	setp.ne.s32 	%p88, %r1178, 0;
	and.pred  	%p89, %p87, %p88;
	@%p89 bra 	$L__BB0_92;
$L__BB0_93:                             // %__internal_fmodf_slowpath_mod.exit.i.i568
	setp.gt.u32 	%p90, %r88, 2139095039;
	selp.f32 	%f512, 0f7FFFFFFF, 0f4B800000, %p90;
	mul.f32 	%f513, %f834, 0f34000000;
	mul.f32 	%f835, %f512, %f513;
	bra.uni 	$L__BB0_94;
$L__BB0_29:                             // %__nv_fast_fdividef.exit.i.i.i545
	div.approx.f32 	%f496, %f835, %f148;
	cvt.rzi.f32.f32 	%f833, %f496;
	fma.rn.f32 	%f90, %f833, 0fC0000000, %f835;
	mov.b32 	%r87, %f90;
	setp.lt.u32 	%p81, %r87, 1073741824;
	@%p81 bra 	$L__BB0_89;
// %bb.30:
	setp.lt.u32 	%p82, %r87, -2147483647;
	@%p82 bra 	$L__BB0_87;
// %bb.31:
	add.f32 	%f501, %f833, 0fBF800000;
	setp.lt.f32 	%p85, %f90, 0fC0000000;
	add.f32 	%f502, %f501, 0fBF800000;
	selp.f32 	%f833, %f502, %f501, %p85;
	bra.uni 	$L__BB0_89;
$L__BB0_87:
	add.f32 	%f833, %f833, 0f3F800000;
	setp.ltu.f32 	%p83, %f90, 0f40800000;
	@%p83 bra 	$L__BB0_89;
// %bb.88:                              // %__nv_fmaf_rn.exit.i.i.i549
	add.f32 	%f497, %f833, 0f3F800000;
	fma.rn.f32 	%f499, %f148, 0fC0400000, %f90;
	setp.ge.f32 	%p84, %f499, 0f00000000;
	add.f32 	%f500, %f497, 0f3F800000;
	selp.f32 	%f833, %f500, %f497, %p84;
$L__BB0_89:                             // %__internal_fmodf_fastpath_quot.exit.i.i552
	fma.rn.f32 	%f835, %f833, 0fC0000000, %f835;
$L__BB0_94:                             // %__internal_fmodf_kernel.exit.i571
	abs.f32 	%f514, %f835;
	setp.gtu.f32 	%p91, %f514, 0f7F800000;
	@%p91 bra 	$L__BB0_96;
// %bb.95:
	mov.b32 	%r263, %f35;
	and.b32  	%r264, %r263, -2147483648;
	mov.b32 	%r265, %f835;
	or.b32  	%r266, %r264, %r265;
	mov.b32 	%f835, %r266;
$L__BB0_96:                             // %__nv_fmodf.exit572
	mov.u32 	%r275, -8;
	sub.s32 	%r276, %r275, %r156;
	mul.lo.s32 	%r277, %r18, %r276;
	cvt.rn.f32.s32 	%f545, %r277;
	div.approx.f32 	%f106, %f545, %f494;
	abs.f32 	%f823, %f106;
	setp.lt.f32 	%p99, %f823, 0f40000000;
	@%p99 bra 	$L__BB0_43;
// %bb.32:
	setp.gtu.f32 	%p100, %f823, 0f4B800000;
	@%p100 bra 	$L__BB0_39;
	bra.uni 	$L__BB0_33;
$L__BB0_39:
	mov.b32 	%r20, %f823;
	and.b32  	%r278, %r20, 8388607;
	or.b32  	%r1164, %r278, 1065353216;
	mov.b32 	%f822, %r1164;
	add.s32 	%r279, %r20, -1073741824;
	and.b32  	%r1165, %r279, -8388608;
	setp.eq.s32 	%p106, %r1165, 0;
	@%p106 bra 	$L__BB0_42;
// %bb.40:                              // %__nv_fmaf_rn.exit4.i.i.i.preheader
	mov.f32 	%f556, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f555,%f556;
	// end inline asm
$L__BB0_41:                             // %__nv_fmaf_rn.exit4.i.i.i
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r280, %r1165, 192937984;
	add.s32 	%r281, %r1164, %r280;
	mov.b32 	%f557, %r281;
	mul.f32 	%f558, %f555, %f557;
	sub.f32 	%f559, %f557, %f558;
	fma.rn.f32 	%f560, %f559, %f555, %f558;
	sub.f32 	%f561, %f557, %f560;
	fma.rz.f32 	%f562, %f561, %f555, %f560;
	cvt.rzi.f32.f32 	%f563, %f562;
	sub.f32 	%f822, %f557, %f563;
	sub.s32 	%r1165, %r1165, %r280;
	mov.b32 	%r1164, %f822;
	setp.ne.s32 	%p107, %r1165, 0;
	setp.ne.s32 	%p108, %r1164, 0;
	and.pred  	%p109, %p107, %p108;
	@%p109 bra 	$L__BB0_41;
$L__BB0_42:                             // %__internal_fmodf_slowpath_mod.exit.i.i
	setp.gt.u32 	%p110, %r20, 2139095039;
	selp.f32 	%f564, 0f7FFFFFFF, 0f4B800000, %p110;
	mul.f32 	%f565, %f822, 0f34000000;
	mul.f32 	%f823, %f564, %f565;
	bra.uni 	$L__BB0_43;
$L__BB0_33:                             // %__nv_fast_fdividef.exit.i.i.i
	div.approx.f32 	%f548, %f823, %f148;
	cvt.rzi.f32.f32 	%f821, %f548;
	fma.rn.f32 	%f38, %f821, 0fC0000000, %f823;
	mov.b32 	%r19, %f38;
	setp.lt.u32 	%p101, %r19, 1073741824;
	@%p101 bra 	$L__BB0_38;
// %bb.34:
	setp.lt.u32 	%p102, %r19, -2147483647;
	@%p102 bra 	$L__BB0_36;
// %bb.35:
	add.f32 	%f553, %f821, 0fBF800000;
	setp.lt.f32 	%p105, %f38, 0fC0000000;
	add.f32 	%f554, %f553, 0fBF800000;
	selp.f32 	%f821, %f554, %f553, %p105;
	bra.uni 	$L__BB0_38;
$L__BB0_36:
	add.f32 	%f821, %f821, 0f3F800000;
	setp.ltu.f32 	%p103, %f38, 0f40800000;
	@%p103 bra 	$L__BB0_38;
// %bb.37:                              // %__nv_fmaf_rn.exit.i.i.i
	add.f32 	%f549, %f821, 0f3F800000;
	fma.rn.f32 	%f551, %f148, 0fC0400000, %f38;
	setp.ge.f32 	%p104, %f551, 0f00000000;
	add.f32 	%f552, %f549, 0f3F800000;
	selp.f32 	%f821, %f552, %f549, %p104;
$L__BB0_38:                             // %__internal_fmodf_fastpath_quot.exit.i.i
	fma.rn.f32 	%f823, %f821, 0fC0000000, %f823;
$L__BB0_43:                             // %__internal_fmodf_kernel.exit.i
	mov.f32 	%f177, 0f00000000;
	abs.f32 	%f566, %f823;
	setp.gtu.f32 	%p111, %f566, 0f7F800000;
	@%p111 bra 	$L__BB0_45;
// %bb.44:
	mov.b32 	%r282, %f106;
	and.b32  	%r283, %r282, -2147483648;
	mov.b32 	%r284, %f823;
	or.b32  	%r285, %r283, %r284;
	mov.b32 	%f823, %r285;
$L__BB0_45:                             // %__nv_fmodf.exit
	bfe.s32 	%r306, %r3, 2, 1;
	or.b32  	%r307, %r16, %r17;
	div.approx.f32 	%f52, %f177, %f180;
	abs.f32 	%f839, %f52;
	setp.lt.f32 	%p119, %f839, 0f40000000;
	@%p119 bra 	$L__BB0_104;
// %bb.46:
	setp.gtu.f32 	%p120, %f839, 0f4B800000;
	@%p120 bra 	$L__BB0_100;
	bra.uni 	$L__BB0_47;
$L__BB0_100:
	mov.b32 	%r97, %f839;
	and.b32  	%r308, %r97, 8388607;
	or.b32  	%r1180, %r308, 1065353216;
	mov.b32 	%f838, %r1180;
	add.s32 	%r309, %r97, -1073741824;
	and.b32  	%r1181, %r309, -8388608;
	setp.eq.s32 	%p126, %r1181, 0;
	@%p126 bra 	$L__BB0_103;
// %bb.101:                             // %__nv_fmaf_rn.exit4.i.i.i597.preheader
	mov.f32 	%f609, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f608,%f609;
	// end inline asm
$L__BB0_102:                            // %__nv_fmaf_rn.exit4.i.i.i597
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r310, %r1181, 192937984;
	add.s32 	%r311, %r1180, %r310;
	mov.b32 	%f610, %r311;
	mul.f32 	%f611, %f608, %f610;
	sub.f32 	%f612, %f610, %f611;
	fma.rn.f32 	%f613, %f612, %f608, %f611;
	sub.f32 	%f614, %f610, %f613;
	fma.rz.f32 	%f615, %f614, %f608, %f613;
	cvt.rzi.f32.f32 	%f616, %f615;
	sub.f32 	%f838, %f610, %f616;
	sub.s32 	%r1181, %r1181, %r310;
	mov.b32 	%r1180, %f838;
	setp.ne.s32 	%p127, %r1181, 0;
	setp.ne.s32 	%p128, %r1180, 0;
	and.pred  	%p129, %p127, %p128;
	@%p129 bra 	$L__BB0_102;
$L__BB0_103:                            // %__internal_fmodf_slowpath_mod.exit.i.i599
	setp.gt.u32 	%p130, %r97, 2139095039;
	selp.f32 	%f617, 0f7FFFFFFF, 0f4B800000, %p130;
	mul.f32 	%f618, %f838, 0f34000000;
	mul.f32 	%f839, %f617, %f618;
	bra.uni 	$L__BB0_104;
$L__BB0_47:                             // %__nv_fast_fdividef.exit.i.i.i576
	div.approx.f32 	%f601, %f839, %f148;
	cvt.rzi.f32.f32 	%f837, %f601;
	fma.rn.f32 	%f109, %f837, 0fC0000000, %f839;
	mov.b32 	%r96, %f109;
	setp.lt.u32 	%p121, %r96, 1073741824;
	@%p121 bra 	$L__BB0_99;
// %bb.48:
	setp.lt.u32 	%p122, %r96, -2147483647;
	@%p122 bra 	$L__BB0_97;
// %bb.49:
	add.f32 	%f606, %f837, 0fBF800000;
	setp.lt.f32 	%p125, %f109, 0fC0000000;
	add.f32 	%f607, %f606, 0fBF800000;
	selp.f32 	%f837, %f607, %f606, %p125;
	bra.uni 	$L__BB0_99;
$L__BB0_97:
	add.f32 	%f837, %f837, 0f3F800000;
	setp.ltu.f32 	%p123, %f109, 0f40800000;
	@%p123 bra 	$L__BB0_99;
// %bb.98:                              // %__nv_fmaf_rn.exit.i.i.i580
	add.f32 	%f602, %f837, 0f3F800000;
	fma.rn.f32 	%f604, %f148, 0fC0400000, %f109;
	setp.ge.f32 	%p124, %f604, 0f00000000;
	add.f32 	%f605, %f602, 0f3F800000;
	selp.f32 	%f837, %f605, %f602, %p124;
$L__BB0_99:                             // %__internal_fmodf_fastpath_quot.exit.i.i583
	fma.rn.f32 	%f839, %f837, 0fC0000000, %f839;
$L__BB0_104:                            // %__internal_fmodf_kernel.exit.i602
	sub.s32 	%r32, %r306, %r307;
	abs.f32 	%f619, %f839;
	setp.gtu.f32 	%p131, %f619, 0f7F800000;
	@%p131 bra 	$L__BB0_106;
// %bb.105:
	mov.b32 	%r312, %f52;
	and.b32  	%r313, %r312, -2147483648;
	mov.b32 	%r314, %f839;
	or.b32  	%r315, %r313, %r314;
	mov.b32 	%f839, %r315;
$L__BB0_106:                            // %__nv_fmodf.exit603
	shl.b32 	%r324, %r32, 1;
	cvt.rn.f32.s32 	%f650, %r324;
	div.approx.f32 	%f125, %f650, %f180;
	abs.f32 	%f827, %f125;
	setp.lt.f32 	%p139, %f827, 0f40000000;
	@%p139 bra 	$L__BB0_61;
// %bb.50:
	setp.gtu.f32 	%p140, %f827, 0f4B800000;
	@%p140 bra 	$L__BB0_57;
	bra.uni 	$L__BB0_51;
$L__BB0_57:
	mov.b32 	%r34, %f827;
	and.b32  	%r325, %r34, 8388607;
	or.b32  	%r1166, %r325, 1065353216;
	mov.b32 	%f826, %r1166;
	add.s32 	%r326, %r34, -1073741824;
	and.b32  	%r1167, %r326, -8388608;
	setp.eq.s32 	%p146, %r1167, 0;
	@%p146 bra 	$L__BB0_60;
// %bb.58:                              // %__nv_fmaf_rn.exit4.i.i.i504.preheader
	mov.f32 	%f661, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f660,%f661;
	// end inline asm
$L__BB0_59:                             // %__nv_fmaf_rn.exit4.i.i.i504
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r327, %r1167, 192937984;
	add.s32 	%r328, %r1166, %r327;
	mov.b32 	%f662, %r328;
	mul.f32 	%f663, %f660, %f662;
	sub.f32 	%f664, %f662, %f663;
	fma.rn.f32 	%f665, %f664, %f660, %f663;
	sub.f32 	%f666, %f662, %f665;
	fma.rz.f32 	%f667, %f666, %f660, %f665;
	cvt.rzi.f32.f32 	%f668, %f667;
	sub.f32 	%f826, %f662, %f668;
	sub.s32 	%r1167, %r1167, %r327;
	mov.b32 	%r1166, %f826;
	setp.ne.s32 	%p147, %r1167, 0;
	setp.ne.s32 	%p148, %r1166, 0;
	and.pred  	%p149, %p147, %p148;
	@%p149 bra 	$L__BB0_59;
$L__BB0_60:                             // %__internal_fmodf_slowpath_mod.exit.i.i506
	setp.gt.u32 	%p150, %r34, 2139095039;
	selp.f32 	%f669, 0f7FFFFFFF, 0f4B800000, %p150;
	mul.f32 	%f670, %f826, 0f34000000;
	mul.f32 	%f827, %f669, %f670;
	bra.uni 	$L__BB0_61;
$L__BB0_51:                             // %__nv_fast_fdividef.exit.i.i.i483
	div.approx.f32 	%f653, %f827, %f148;
	cvt.rzi.f32.f32 	%f825, %f653;
	fma.rn.f32 	%f55, %f825, 0fC0000000, %f827;
	mov.b32 	%r33, %f55;
	setp.lt.u32 	%p141, %r33, 1073741824;
	@%p141 bra 	$L__BB0_56;
// %bb.52:
	setp.lt.u32 	%p142, %r33, -2147483647;
	@%p142 bra 	$L__BB0_54;
// %bb.53:
	add.f32 	%f658, %f825, 0fBF800000;
	setp.lt.f32 	%p145, %f55, 0fC0000000;
	add.f32 	%f659, %f658, 0fBF800000;
	selp.f32 	%f825, %f659, %f658, %p145;
	bra.uni 	$L__BB0_56;
$L__BB0_54:
	add.f32 	%f825, %f825, 0f3F800000;
	setp.ltu.f32 	%p143, %f55, 0f40800000;
	@%p143 bra 	$L__BB0_56;
// %bb.55:                              // %__nv_fmaf_rn.exit.i.i.i487
	add.f32 	%f654, %f825, 0f3F800000;
	fma.rn.f32 	%f656, %f148, 0fC0400000, %f55;
	setp.ge.f32 	%p144, %f656, 0f00000000;
	add.f32 	%f657, %f654, 0f3F800000;
	selp.f32 	%f825, %f657, %f654, %p144;
$L__BB0_56:                             // %__internal_fmodf_fastpath_quot.exit.i.i490
	fma.rn.f32 	%f827, %f825, 0fC0000000, %f827;
$L__BB0_61:                             // %__internal_fmodf_kernel.exit.i509
	abs.f32 	%f671, %f827;
	setp.gtu.f32 	%p151, %f671, 0f7F800000;
	@%p151 bra 	$L__BB0_63;
// %bb.62:
	mov.b32 	%r329, %f125;
	and.b32  	%r330, %r329, -2147483648;
	mov.b32 	%r331, %f827;
	or.b32  	%r332, %r330, %r331;
	mov.b32 	%f827, %r332;
$L__BB0_63:                             // %__nv_fmodf.exit510
	div.approx.f32 	%f69, %f177, %f148;
	abs.f32 	%f843, %f69;
	setp.lt.f32 	%p159, %f843, 0f40000000;
	@%p159 bra 	$L__BB0_114;
// %bb.64:
	setp.gtu.f32 	%p160, %f843, 0f4B800000;
	@%p160 bra 	$L__BB0_110;
	bra.uni 	$L__BB0_65;
$L__BB0_110:
	mov.b32 	%r105, %f843;
	and.b32  	%r348, %r105, 8388607;
	or.b32  	%r1182, %r348, 1065353216;
	mov.b32 	%f842, %r1182;
	add.s32 	%r349, %r105, -1073741824;
	and.b32  	%r1183, %r349, -8388608;
	setp.eq.s32 	%p166, %r1183, 0;
	@%p166 bra 	$L__BB0_113;
// %bb.111:                             // %__nv_fmaf_rn.exit4.i.i.i628.preheader
	mov.f32 	%f714, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f713,%f714;
	// end inline asm
$L__BB0_112:                            // %__nv_fmaf_rn.exit4.i.i.i628
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r350, %r1183, 192937984;
	add.s32 	%r351, %r1182, %r350;
	mov.b32 	%f715, %r351;
	mul.f32 	%f716, %f713, %f715;
	sub.f32 	%f717, %f715, %f716;
	fma.rn.f32 	%f718, %f717, %f713, %f716;
	sub.f32 	%f719, %f715, %f718;
	fma.rz.f32 	%f720, %f719, %f713, %f718;
	cvt.rzi.f32.f32 	%f721, %f720;
	sub.f32 	%f842, %f715, %f721;
	sub.s32 	%r1183, %r1183, %r350;
	mov.b32 	%r1182, %f842;
	setp.ne.s32 	%p167, %r1183, 0;
	setp.ne.s32 	%p168, %r1182, 0;
	and.pred  	%p169, %p167, %p168;
	@%p169 bra 	$L__BB0_112;
$L__BB0_113:                            // %__internal_fmodf_slowpath_mod.exit.i.i630
	setp.gt.u32 	%p170, %r105, 2139095039;
	selp.f32 	%f722, 0f7FFFFFFF, 0f4B800000, %p170;
	mul.f32 	%f723, %f842, 0f34000000;
	mul.f32 	%f843, %f722, %f723;
	bra.uni 	$L__BB0_114;
$L__BB0_65:                             // %__nv_fast_fdividef.exit.i.i.i607
	div.approx.f32 	%f706, %f843, %f148;
	cvt.rzi.f32.f32 	%f841, %f706;
	fma.rn.f32 	%f128, %f841, 0fC0000000, %f843;
	mov.b32 	%r104, %f128;
	setp.lt.u32 	%p161, %r104, 1073741824;
	@%p161 bra 	$L__BB0_109;
// %bb.66:
	setp.lt.u32 	%p162, %r104, -2147483647;
	@%p162 bra 	$L__BB0_107;
// %bb.67:
	add.f32 	%f711, %f841, 0fBF800000;
	setp.lt.f32 	%p165, %f128, 0fC0000000;
	add.f32 	%f712, %f711, 0fBF800000;
	selp.f32 	%f841, %f712, %f711, %p165;
	bra.uni 	$L__BB0_109;
$L__BB0_107:
	add.f32 	%f841, %f841, 0f3F800000;
	setp.ltu.f32 	%p163, %f128, 0f40800000;
	@%p163 bra 	$L__BB0_109;
// %bb.108:                             // %__nv_fmaf_rn.exit.i.i.i611
	add.f32 	%f707, %f841, 0f3F800000;
	fma.rn.f32 	%f709, %f148, 0fC0400000, %f128;
	setp.ge.f32 	%p164, %f709, 0f00000000;
	add.f32 	%f710, %f707, 0f3F800000;
	selp.f32 	%f841, %f710, %f707, %p164;
$L__BB0_109:                            // %__internal_fmodf_fastpath_quot.exit.i.i614
	fma.rn.f32 	%f843, %f841, 0fC0000000, %f843;
$L__BB0_114:                            // %__internal_fmodf_kernel.exit.i633
	shl.b32 	%r31, %r3, 29;
	abs.f32 	%f724, %f843;
	setp.gtu.f32 	%p171, %f724, 0f7F800000;
	@%p171 bra 	$L__BB0_116;
// %bb.115:
	mov.b32 	%r352, %f69;
	and.b32  	%r353, %r352, -2147483648;
	mov.b32 	%r354, %f843;
	or.b32  	%r355, %r353, %r354;
	mov.b32 	%f843, %r355;
$L__BB0_116:                            // %__nv_fmodf.exit634
	shr.s32 	%r364, %r31, 30;
	and.b32  	%r365, %r364, -2;
	cvt.rn.f32.s32 	%f757, %r365;
	div.approx.f32 	%f145, %f757, %f148;
	abs.f32 	%f831, %f145;
	setp.lt.f32 	%p180, %f831, 0f40000000;
	@%p180 bra 	$L__BB0_79;
// %bb.68:
	setp.gtu.f32 	%p181, %f831, 0f4B800000;
	@%p181 bra 	$L__BB0_75;
	bra.uni 	$L__BB0_69;
$L__BB0_75:
	mov.b32 	%r47, %f831;
	and.b32  	%r366, %r47, 8388607;
	or.b32  	%r1168, %r366, 1065353216;
	mov.b32 	%f830, %r1168;
	add.s32 	%r367, %r47, -1073741824;
	and.b32  	%r1169, %r367, -8388608;
	setp.eq.s32 	%p187, %r1169, 0;
	@%p187 bra 	$L__BB0_78;
// %bb.76:                              // %__nv_fmaf_rn.exit4.i.i.i535.preheader
	mov.f32 	%f768, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f767,%f768;
	// end inline asm
$L__BB0_77:                             // %__nv_fmaf_rn.exit4.i.i.i535
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r368, %r1169, 192937984;
	add.s32 	%r369, %r1168, %r368;
	mov.b32 	%f769, %r369;
	mul.f32 	%f770, %f767, %f769;
	sub.f32 	%f771, %f769, %f770;
	fma.rn.f32 	%f772, %f771, %f767, %f770;
	sub.f32 	%f773, %f769, %f772;
	fma.rz.f32 	%f774, %f773, %f767, %f772;
	cvt.rzi.f32.f32 	%f775, %f774;
	sub.f32 	%f830, %f769, %f775;
	sub.s32 	%r1169, %r1169, %r368;
	mov.b32 	%r1168, %f830;
	setp.ne.s32 	%p188, %r1169, 0;
	setp.ne.s32 	%p189, %r1168, 0;
	and.pred  	%p190, %p188, %p189;
	@%p190 bra 	$L__BB0_77;
$L__BB0_78:                             // %__internal_fmodf_slowpath_mod.exit.i.i537
	setp.gt.u32 	%p191, %r47, 2139095039;
	selp.f32 	%f776, 0f7FFFFFFF, 0f4B800000, %p191;
	mul.f32 	%f777, %f830, 0f34000000;
	mul.f32 	%f831, %f776, %f777;
	bra.uni 	$L__BB0_79;
$L__BB0_69:                             // %__nv_fast_fdividef.exit.i.i.i514
	div.approx.f32 	%f760, %f831, %f148;
	cvt.rzi.f32.f32 	%f829, %f760;
	fma.rn.f32 	%f72, %f829, 0fC0000000, %f831;
	mov.b32 	%r46, %f72;
	setp.lt.u32 	%p182, %r46, 1073741824;
	@%p182 bra 	$L__BB0_74;
// %bb.70:
	setp.lt.u32 	%p183, %r46, -2147483647;
	@%p183 bra 	$L__BB0_72;
// %bb.71:
	add.f32 	%f765, %f829, 0fBF800000;
	setp.lt.f32 	%p186, %f72, 0fC0000000;
	add.f32 	%f766, %f765, 0fBF800000;
	selp.f32 	%f829, %f766, %f765, %p186;
	bra.uni 	$L__BB0_74;
$L__BB0_72:
	add.f32 	%f829, %f829, 0f3F800000;
	setp.ltu.f32 	%p184, %f72, 0f40800000;
	@%p184 bra 	$L__BB0_74;
// %bb.73:                              // %__nv_fmaf_rn.exit.i.i.i518
	add.f32 	%f761, %f829, 0f3F800000;
	fma.rn.f32 	%f763, %f148, 0fC0400000, %f72;
	setp.ge.f32 	%p185, %f763, 0f00000000;
	add.f32 	%f764, %f761, 0f3F800000;
	selp.f32 	%f829, %f764, %f761, %p185;
$L__BB0_74:                             // %__internal_fmodf_fastpath_quot.exit.i.i521
	fma.rn.f32 	%f831, %f829, 0fC0000000, %f831;
$L__BB0_79:                             // %__internal_fmodf_kernel.exit.i540
	abs.f32 	%f778, %f831;
	setp.gtu.f32 	%p192, %f778, 0f7F800000;
	@%p192 bra 	$L__BB0_81;
// %bb.80:
	mov.b32 	%r370, %f145;
	and.b32  	%r371, %r370, -2147483648;
	mov.b32 	%r372, %f831;
	or.b32  	%r373, %r371, %r372;
	mov.b32 	%f831, %r373;
$L__BB0_81:                             // %__nv_fmodf.exit541
	setp.le.s32 	%p200, %r137, %r136;
	mov.u32 	%r1162, 0;
	@%p200 bra 	$L__BB0_119;
// %bb.82:                              // %L1382.lr.ph
	mov.f32 	%f152, 0f42820000;
	mul.lo.s32 	%r234, %r85, 15;
	div.approx.f32 	%f153, %f151, %f152;
	div.approx.f32 	%f187, %f185, %f152;
	div.approx.f32 	%f222, %f220, %f152;
	div.approx.f32 	%f256, %f254, %f152;
	div.approx.f32 	%f291, %f289, %f152;
	div.approx.f32 	%f325, %f323, %f152;
	div.approx.f32 	%f360, %f358, %f152;
	div.approx.f32 	%f394, %f392, %f152;
	add.s32 	%r244, %r234, 24;
	abs.f32 	%f154, %f153;
	abs.f32 	%f188, %f187;
	abs.f32 	%f223, %f222;
	abs.f32 	%f257, %f256;
	abs.f32 	%f292, %f291;
	abs.f32 	%f326, %f325;
	abs.f32 	%f361, %f360;
	abs.f32 	%f395, %f394;
	and.b32  	%r235, %r234, 31;
	and.b32  	%r245, %r244, 31;
	setp.gt.f32 	%p17, %f154, 0f4B800000;
	mul.f32 	%f155, %f153, 0f00000000;
	setp.gt.f32 	%p23, %f188, 0f4B800000;
	mul.f32 	%f189, %f187, 0f00000000;
	setp.gt.f32 	%p29, %f223, 0f4B800000;
	mul.f32 	%f224, %f222, 0f00000000;
	setp.gt.f32 	%p35, %f257, 0f4B800000;
	mul.f32 	%f258, %f256, 0f00000000;
	setp.gt.f32 	%p41, %f292, 0f4B800000;
	mul.f32 	%f293, %f291, 0f00000000;
	setp.gt.f32 	%p47, %f326, 0f4B800000;
	mul.f32 	%f327, %f325, 0f00000000;
	setp.gt.f32 	%p53, %f361, 0f4B800000;
	mul.f32 	%f362, %f360, 0f00000000;
	setp.gt.f32 	%p59, %f395, 0f4B800000;
	mul.f32 	%f396, %f394, 0f00000000;
	cvt.rn.f32.s32 	%f425, %r235;
	cvt.rn.f32.s32 	%f460, %r245;
	selp.f32 	%f156, %f155, %f153, %p17;
	selp.f32 	%f190, %f189, %f187, %p23;
	selp.f32 	%f225, %f224, %f222, %p29;
	selp.f32 	%f259, %f258, %f256, %p35;
	selp.f32 	%f294, %f293, %f291, %p41;
	selp.f32 	%f328, %f327, %f325, %p47;
	selp.f32 	%f363, %f362, %f360, %p53;
	selp.f32 	%f397, %f396, %f394, %p59;
	div.approx.f32 	%f427, %f425, %f180;
	div.approx.f32 	%f461, %f460, %f180;
	add.f32 	%f157, %f156, %f156;
	add.f32 	%f191, %f190, %f190;
	add.f32 	%f226, %f225, %f225;
	add.f32 	%f260, %f259, %f259;
	add.f32 	%f295, %f294, %f294;
	add.f32 	%f329, %f328, %f328;
	add.f32 	%f364, %f363, %f363;
	add.f32 	%f398, %f397, %f397;
	add.f32 	%f428, %f427, %f427;
	add.f32 	%f462, %f461, %f461;
	add.f32 	%f515, %f835, %f835;
	add.f32 	%f567, %f823, %f823;
	mov.b32 	%r157, %f157;
	mov.b32 	%r164, %f191;
	mov.b32 	%r175, %f226;
	mov.b32 	%r182, %f260;
	mov.b32 	%r193, %f295;
	mov.b32 	%r200, %f329;
	mov.b32 	%r211, %f364;
	mov.b32 	%r218, %f398;
	mov.b32 	%r236, %f428;
	mov.b32 	%r246, %f462;
	mov.b32 	%r267, %f515;
	mov.b32 	%r298, %f567;
	and.b32  	%r158, %r157, -2147483648;
	and.b32  	%r165, %r164, -2147483648;
	and.b32  	%r176, %r175, -2147483648;
	and.b32  	%r183, %r182, -2147483648;
	and.b32  	%r194, %r193, -2147483648;
	and.b32  	%r201, %r200, -2147483648;
	and.b32  	%r212, %r211, -2147483648;
	and.b32  	%r219, %r218, -2147483648;
	and.b32  	%r237, %r236, -2147483648;
	and.b32  	%r247, %r246, -2147483648;
	and.b32  	%r268, %r267, -2147483648;
	and.b32  	%r299, %r298, -2147483648;
	add.f32 	%f620, %f839, %f839;
	add.f32 	%f672, %f827, %f827;
	or.b32  	%r159, %r158, 1056964608;
	or.b32  	%r166, %r165, 1056964608;
	or.b32  	%r177, %r176, 1056964608;
	or.b32  	%r184, %r183, 1056964608;
	or.b32  	%r195, %r194, 1056964608;
	or.b32  	%r202, %r201, 1056964608;
	or.b32  	%r213, %r212, 1056964608;
	or.b32  	%r220, %r219, 1056964608;
	or.b32  	%r238, %r237, 1056964608;
	or.b32  	%r248, %r247, 1056964608;
	or.b32  	%r269, %r268, 1056964608;
	or.b32  	%r300, %r299, 1056964608;
	mov.b32 	%r316, %f620;
	mov.b32 	%r339, %f672;
	add.f32 	%f725, %f843, %f843;
	mov.b32 	%f158, %r159;
	mov.b32 	%f192, %r166;
	mov.b32 	%f227, %r177;
	mov.b32 	%f261, %r184;
	mov.b32 	%f296, %r195;
	mov.b32 	%f330, %r202;
	mov.b32 	%f365, %r213;
	mov.b32 	%f399, %r220;
	mov.b32 	%f429, %r238;
	mov.b32 	%f463, %r248;
	mov.b32 	%f516, %r269;
	mov.b32 	%f568, %r300;
	and.b32  	%r317, %r316, -2147483648;
	and.b32  	%r340, %r339, -2147483648;
	mov.b32 	%r356, %f725;
	add.f32 	%f159, %f157, %f158;
	abs.f32 	%f161, %f157;
	add.f32 	%f193, %f191, %f192;
	abs.f32 	%f195, %f191;
	add.f32 	%f228, %f226, %f227;
	abs.f32 	%f230, %f226;
	add.f32 	%f262, %f260, %f261;
	abs.f32 	%f264, %f260;
	add.f32 	%f297, %f295, %f296;
	abs.f32 	%f299, %f295;
	add.f32 	%f331, %f329, %f330;
	abs.f32 	%f333, %f329;
	add.f32 	%f366, %f364, %f365;
	abs.f32 	%f368, %f364;
	add.f32 	%f400, %f398, %f399;
	abs.f32 	%f402, %f398;
	add.f32 	%f430, %f428, %f429;
	abs.f32 	%f432, %f428;
	add.f32 	%f464, %f462, %f463;
	abs.f32 	%f466, %f462;
	add.f32 	%f517, %f515, %f516;
	abs.f32 	%f519, %f515;
	add.f32 	%f569, %f567, %f568;
	abs.f32 	%f571, %f567;
	or.b32  	%r318, %r317, 1056964608;
	or.b32  	%r341, %r340, 1056964608;
	and.b32  	%r357, %r356, -2147483648;
	cvt.rzi.f32.f32 	%f160, %f159;
	setp.gt.f32 	%p18, %f161, 0f4B000000;
	cvt.rzi.f32.f32 	%f194, %f193;
	setp.gt.f32 	%p24, %f195, 0f4B000000;
	cvt.rzi.f32.f32 	%f229, %f228;
	setp.gt.f32 	%p30, %f230, 0f4B000000;
	cvt.rzi.f32.f32 	%f263, %f262;
	setp.gt.f32 	%p36, %f264, 0f4B000000;
	cvt.rzi.f32.f32 	%f298, %f297;
	setp.gt.f32 	%p42, %f299, 0f4B000000;
	cvt.rzi.f32.f32 	%f332, %f331;
	setp.gt.f32 	%p48, %f333, 0f4B000000;
	cvt.rzi.f32.f32 	%f367, %f366;
	setp.gt.f32 	%p54, %f368, 0f4B000000;
	cvt.rzi.f32.f32 	%f401, %f400;
	setp.gt.f32 	%p60, %f402, 0f4B000000;
	cvt.rzi.f32.f32 	%f431, %f430;
	setp.gt.f32 	%p65, %f432, 0f4B000000;
	cvt.rzi.f32.f32 	%f465, %f464;
	setp.gt.f32 	%p72, %f466, 0f4B000000;
	cvt.rzi.f32.f32 	%f518, %f517;
	setp.gt.f32 	%p92, %f519, 0f4B000000;
	cvt.rzi.f32.f32 	%f570, %f569;
	setp.gt.f32 	%p112, %f571, 0f4B000000;
	mov.b32 	%f621, %r318;
	mov.b32 	%f673, %r341;
	or.b32  	%r358, %r357, 1056964608;
	selp.f32 	%f162, %f157, %f160, %p18;
	cvt.rzi.f32.f32 	%f163, %f157;
	setp.lt.f32 	%p19, %f161, 0f3F000000;
	selp.f32 	%f196, %f191, %f194, %p24;
	cvt.rzi.f32.f32 	%f197, %f191;
	setp.lt.f32 	%p25, %f195, 0f3F000000;
	selp.f32 	%f231, %f226, %f229, %p30;
	cvt.rzi.f32.f32 	%f232, %f226;
	setp.lt.f32 	%p31, %f230, 0f3F000000;
	selp.f32 	%f265, %f260, %f263, %p36;
	cvt.rzi.f32.f32 	%f266, %f260;
	setp.lt.f32 	%p37, %f264, 0f3F000000;
	selp.f32 	%f300, %f295, %f298, %p42;
	cvt.rzi.f32.f32 	%f301, %f295;
	setp.lt.f32 	%p43, %f299, 0f3F000000;
	selp.f32 	%f334, %f329, %f332, %p48;
	cvt.rzi.f32.f32 	%f335, %f329;
	setp.lt.f32 	%p49, %f333, 0f3F000000;
	selp.f32 	%f369, %f364, %f367, %p54;
	cvt.rzi.f32.f32 	%f370, %f364;
	setp.lt.f32 	%p55, %f368, 0f3F000000;
	selp.f32 	%f403, %f398, %f401, %p60;
	cvt.rzi.f32.f32 	%f404, %f398;
	setp.lt.f32 	%p61, %f402, 0f3F000000;
	selp.f32 	%f433, %f428, %f431, %p65;
	cvt.rzi.f32.f32 	%f434, %f428;
	setp.lt.f32 	%p66, %f432, 0f3F000000;
	selp.f32 	%f467, %f462, %f465, %p72;
	cvt.rzi.f32.f32 	%f468, %f462;
	setp.lt.f32 	%p73, %f466, 0f3F000000;
	selp.f32 	%f520, %f515, %f518, %p92;
	cvt.rzi.f32.f32 	%f521, %f515;
	setp.lt.f32 	%p93, %f519, 0f3F000000;
	selp.f32 	%f572, %f567, %f570, %p112;
	cvt.rzi.f32.f32 	%f573, %f567;
	setp.lt.f32 	%p113, %f571, 0f3F000000;
	add.f32 	%f622, %f620, %f621;
	abs.f32 	%f624, %f620;
	add.f32 	%f674, %f672, %f673;
	abs.f32 	%f676, %f672;
	mov.b32 	%f726, %r358;
	selp.f32 	%f164, %f163, %f162, %p19;
	selp.f32 	%f198, %f197, %f196, %p25;
	selp.f32 	%f233, %f232, %f231, %p31;
	selp.f32 	%f267, %f266, %f265, %p37;
	selp.f32 	%f302, %f301, %f300, %p43;
	selp.f32 	%f336, %f335, %f334, %p49;
	selp.f32 	%f371, %f370, %f369, %p55;
	selp.f32 	%f405, %f404, %f403, %p61;
	selp.f32 	%f435, %f434, %f433, %p66;
	selp.f32 	%f469, %f468, %f467, %p73;
	selp.f32 	%f522, %f521, %f520, %p93;
	selp.f32 	%f574, %f573, %f572, %p113;
	cvt.rzi.f32.f32 	%f623, %f622;
	setp.gt.f32 	%p132, %f624, 0f4B000000;
	cvt.rzi.f32.f32 	%f675, %f674;
	setp.gt.f32 	%p152, %f676, 0f4B000000;
	add.f32 	%f727, %f725, %f726;
	abs.f32 	%f729, %f725;
	fma.rn.f32 	%f165, %f164, 0fBF000000, %f156;
	fma.rn.f32 	%f199, %f198, 0fBF000000, %f190;
	fma.rn.f32 	%f234, %f233, 0fBF000000, %f225;
	fma.rn.f32 	%f268, %f267, 0fBF000000, %f259;
	fma.rn.f32 	%f303, %f302, 0fBF000000, %f294;
	fma.rn.f32 	%f337, %f336, 0fBF000000, %f328;
	fma.rn.f32 	%f372, %f371, 0fBF000000, %f363;
	fma.rn.f32 	%f406, %f405, 0fBF000000, %f397;
	fma.rn.f32 	%f436, %f435, 0fBF000000, %f427;
	fma.rn.f32 	%f470, %f469, 0fBF000000, %f461;
	fma.rn.f32 	%f523, %f522, 0fBF000000, %f835;
	fma.rn.f32 	%f575, %f574, 0fBF000000, %f823;
	selp.f32 	%f625, %f620, %f623, %p132;
	cvt.rzi.f32.f32 	%f626, %f620;
	setp.lt.f32 	%p133, %f624, 0f3F000000;
	selp.f32 	%f677, %f672, %f675, %p152;
	cvt.rzi.f32.f32 	%f678, %f672;
	setp.lt.f32 	%p153, %f676, 0f3F000000;
	cvt.rzi.f32.f32 	%f728, %f727;
	setp.gt.f32 	%p173, %f729, 0f4B000000;
	mul.f32 	%f166, %f165, %f165;
	mul.f32 	%f200, %f199, %f199;
	mul.f32 	%f235, %f234, %f234;
	mul.f32 	%f269, %f268, %f268;
	mul.f32 	%f304, %f303, %f303;
	mul.f32 	%f338, %f337, %f337;
	mul.f32 	%f373, %f372, %f372;
	mul.f32 	%f407, %f406, %f406;
	mul.f32 	%f437, %f436, %f436;
	mul.f32 	%f471, %f470, %f470;
	mul.f32 	%f524, %f523, %f523;
	mul.f32 	%f576, %f575, %f575;
	selp.f32 	%f627, %f626, %f625, %p133;
	selp.f32 	%f679, %f678, %f677, %p153;
	selp.f32 	%f730, %f725, %f728, %p173;
	cvt.rzi.f32.f32 	%f731, %f725;
	setp.lt.f32 	%p174, %f729, 0f3F000000;
	cvt.rzi.s32.f32 	%r160, %f164;
	fma.rn.f32 	%f167, %f166, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f168, %f166, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r167, %f198;
	fma.rn.f32 	%f201, %f200, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f202, %f200, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r178, %f233;
	fma.rn.f32 	%f236, %f235, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f237, %f235, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r185, %f267;
	fma.rn.f32 	%f270, %f269, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f271, %f269, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r196, %f302;
	fma.rn.f32 	%f305, %f304, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f306, %f304, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r203, %f336;
	fma.rn.f32 	%f339, %f338, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f340, %f338, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r214, %f371;
	fma.rn.f32 	%f374, %f373, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f375, %f373, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r221, %f405;
	fma.rn.f32 	%f408, %f407, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f409, %f407, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f438, %f437, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f439, %f437, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f472, %f471, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f473, %f471, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f525, %f524, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f526, %f524, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f577, %f576, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f578, %f576, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f628, %f627, 0fBF000000, %f839;
	fma.rn.f32 	%f680, %f679, 0fBF000000, %f827;
	selp.f32 	%f732, %f731, %f730, %p174;
	add.s32 	%r161, %r160, 1;
	fma.rn.f32 	%f169, %f167, %f166, 0fC0A55DF6;
	fma.rn.f32 	%f170, %f168, %f166, 0f4081E0CF;
	fma.rn.f32 	%f171, %f166, %f165, 0f00000000;
	add.s32 	%r168, %r167, 1;
	fma.rn.f32 	%f203, %f201, %f200, 0fC0A55DF6;
	fma.rn.f32 	%f204, %f202, %f200, 0f4081E0CF;
	fma.rn.f32 	%f205, %f200, %f199, 0f00000000;
	add.s32 	%r179, %r178, 1;
	fma.rn.f32 	%f238, %f236, %f235, 0fC0A55DF6;
	fma.rn.f32 	%f239, %f237, %f235, 0f4081E0CF;
	fma.rn.f32 	%f240, %f235, %f234, 0f00000000;
	add.s32 	%r186, %r185, 1;
	fma.rn.f32 	%f272, %f270, %f269, 0fC0A55DF6;
	fma.rn.f32 	%f273, %f271, %f269, 0f4081E0CF;
	fma.rn.f32 	%f274, %f269, %f268, 0f00000000;
	add.s32 	%r197, %r196, 1;
	fma.rn.f32 	%f307, %f305, %f304, 0fC0A55DF6;
	fma.rn.f32 	%f308, %f306, %f304, 0f4081E0CF;
	fma.rn.f32 	%f309, %f304, %f303, 0f00000000;
	add.s32 	%r204, %r203, 1;
	fma.rn.f32 	%f341, %f339, %f338, 0fC0A55DF6;
	fma.rn.f32 	%f342, %f340, %f338, 0f4081E0CF;
	fma.rn.f32 	%f343, %f338, %f337, 0f00000000;
	add.s32 	%r215, %r214, 1;
	fma.rn.f32 	%f376, %f374, %f373, 0fC0A55DF6;
	fma.rn.f32 	%f377, %f375, %f373, 0f4081E0CF;
	fma.rn.f32 	%f378, %f373, %f372, 0f00000000;
	add.s32 	%r222, %r221, 1;
	fma.rn.f32 	%f410, %f408, %f407, 0fC0A55DF6;
	fma.rn.f32 	%f411, %f409, %f407, 0f4081E0CF;
	fma.rn.f32 	%f412, %f407, %f406, 0f00000000;
	cvt.rzi.s32.f32 	%r239, %f435;
	fma.rn.f32 	%f440, %f438, %f437, 0fC0A55DF6;
	fma.rn.f32 	%f441, %f439, %f437, 0f4081E0CF;
	fma.rn.f32 	%f442, %f437, %f436, 0f00000000;
	cvt.rzi.s32.f32 	%r249, %f469;
	fma.rn.f32 	%f474, %f472, %f471, 0fC0A55DF6;
	fma.rn.f32 	%f475, %f473, %f471, 0f4081E0CF;
	fma.rn.f32 	%f476, %f471, %f470, 0f00000000;
	cvt.rzi.s32.f32 	%r270, %f522;
	fma.rn.f32 	%f527, %f525, %f524, 0fC0A55DF6;
	fma.rn.f32 	%f528, %f526, %f524, 0f4081E0CF;
	fma.rn.f32 	%f529, %f524, %f523, 0f00000000;
	cvt.rzi.s32.f32 	%r301, %f574;
	fma.rn.f32 	%f579, %f577, %f576, 0fC0A55DF6;
	fma.rn.f32 	%f580, %f578, %f576, 0f4081E0CF;
	fma.rn.f32 	%f581, %f576, %f575, 0f00000000;
	mul.f32 	%f629, %f628, %f628;
	mul.f32 	%f681, %f680, %f680;
	fma.rn.f32 	%f733, %f732, 0fBF000000, %f843;
	shl.b32 	%r151, %r4, 2;
	fma.rn.f32 	%f172, %f170, %f166, 0fC09DE9E6;
	fma.rn.f32 	%f173, %f169, %f171, 0f00000000;
	and.b32  	%r162, %r161, 1;
	fma.rn.f32 	%f206, %f204, %f200, 0fC09DE9E6;
	fma.rn.f32 	%f207, %f203, %f205, 0f00000000;
	and.b32  	%r169, %r168, 1;
	fma.rn.f32 	%f241, %f239, %f235, 0fC09DE9E6;
	fma.rn.f32 	%f242, %f238, %f240, 0f00000000;
	and.b32  	%r180, %r179, 1;
	fma.rn.f32 	%f275, %f273, %f269, 0fC09DE9E6;
	fma.rn.f32 	%f276, %f272, %f274, 0f00000000;
	and.b32  	%r187, %r186, 1;
	fma.rn.f32 	%f310, %f308, %f304, 0fC09DE9E6;
	fma.rn.f32 	%f311, %f307, %f309, 0f00000000;
	and.b32  	%r198, %r197, 1;
	fma.rn.f32 	%f344, %f342, %f338, 0fC09DE9E6;
	fma.rn.f32 	%f345, %f341, %f343, 0f00000000;
	and.b32  	%r205, %r204, 1;
	fma.rn.f32 	%f379, %f377, %f373, 0fC09DE9E6;
	fma.rn.f32 	%f380, %f376, %f378, 0f00000000;
	and.b32  	%r216, %r215, 1;
	fma.rn.f32 	%f413, %f411, %f407, 0fC09DE9E6;
	fma.rn.f32 	%f414, %f410, %f412, 0f00000000;
	and.b32  	%r223, %r222, 1;
	fma.rn.f32 	%f443, %f441, %f437, 0fC09DE9E6;
	fma.rn.f32 	%f444, %f440, %f442, 0f00000000;
	and.b32  	%r240, %r239, 1;
	fma.rn.f32 	%f477, %f475, %f471, 0fC09DE9E6;
	fma.rn.f32 	%f478, %f474, %f476, 0f00000000;
	and.b32  	%r250, %r249, 1;
	fma.rn.f32 	%f530, %f528, %f524, 0fC09DE9E6;
	fma.rn.f32 	%f531, %f527, %f529, 0f00000000;
	and.b32  	%r271, %r270, 1;
	fma.rn.f32 	%f582, %f580, %f576, 0fC09DE9E6;
	fma.rn.f32 	%f583, %f579, %f581, 0f00000000;
	and.b32  	%r302, %r301, 1;
	fma.rn.f32 	%f630, %f629, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f631, %f629, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f682, %f681, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f683, %f681, 0f3E684E12, 0fBFAAD2E0;
	mul.f32 	%f734, %f733, %f733;
	shl.b32 	%r75, %r3, 2;
	and.b32  	%r77, %r151, 1008;
	and.b32  	%r80, %r3, 2;
	fma.rn.f32 	%f174, %f172, %f166, 0f3F800000;
	fma.rn.f32 	%f175, %f165, 0f40490FDB, %f173;
	setp.eq.b32 	%p20, %r162, 1;
	fma.rn.f32 	%f208, %f206, %f200, 0f3F800000;
	fma.rn.f32 	%f209, %f199, 0f40490FDB, %f207;
	setp.eq.b32 	%p26, %r169, 1;
	fma.rn.f32 	%f243, %f241, %f235, 0f3F800000;
	fma.rn.f32 	%f244, %f234, 0f40490FDB, %f242;
	setp.eq.b32 	%p32, %r180, 1;
	fma.rn.f32 	%f277, %f275, %f269, 0f3F800000;
	fma.rn.f32 	%f278, %f268, 0f40490FDB, %f276;
	setp.eq.b32 	%p38, %r187, 1;
	fma.rn.f32 	%f312, %f310, %f304, 0f3F800000;
	fma.rn.f32 	%f313, %f303, 0f40490FDB, %f311;
	setp.eq.b32 	%p44, %r198, 1;
	fma.rn.f32 	%f346, %f344, %f338, 0f3F800000;
	fma.rn.f32 	%f347, %f337, 0f40490FDB, %f345;
	setp.eq.b32 	%p50, %r205, 1;
	fma.rn.f32 	%f381, %f379, %f373, 0f3F800000;
	fma.rn.f32 	%f382, %f372, 0f40490FDB, %f380;
	setp.eq.b32 	%p56, %r216, 1;
	fma.rn.f32 	%f415, %f413, %f407, 0f3F800000;
	fma.rn.f32 	%f416, %f406, 0f40490FDB, %f414;
	setp.eq.b32 	%p62, %r223, 1;
	fma.rn.f32 	%f445, %f443, %f437, 0f3F800000;
	fma.rn.f32 	%f446, %f436, 0f40490FDB, %f444;
	setp.eq.b32 	%p67, %r240, 1;
	fma.rn.f32 	%f479, %f477, %f471, 0f3F800000;
	fma.rn.f32 	%f480, %f470, 0f40490FDB, %f478;
	setp.eq.b32 	%p74, %r250, 1;
	fma.rn.f32 	%f532, %f530, %f524, 0f3F800000;
	fma.rn.f32 	%f533, %f523, 0f40490FDB, %f531;
	setp.eq.b32 	%p94, %r271, 1;
	fma.rn.f32 	%f584, %f582, %f576, 0f3F800000;
	fma.rn.f32 	%f585, %f575, 0f40490FDB, %f583;
	setp.eq.b32 	%p114, %r302, 1;
	cvt.rzi.s32.f32 	%r319, %f627;
	fma.rn.f32 	%f632, %f630, %f629, 0fC0A55DF6;
	fma.rn.f32 	%f633, %f631, %f629, 0f4081E0CF;
	fma.rn.f32 	%f634, %f629, %f628, 0f00000000;
	cvt.rzi.s32.f32 	%r342, %f679;
	fma.rn.f32 	%f684, %f682, %f681, 0fC0A55DF6;
	fma.rn.f32 	%f685, %f683, %f681, 0f4081E0CF;
	fma.rn.f32 	%f686, %f681, %f680, 0f00000000;
	fma.rn.f32 	%f735, %f734, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f736, %f734, 0f3E684E12, 0fBFAAD2E0;
	and.b32  	%r76, %r75, 4;
	or.b32  	%r152, %r77, %r80;
	selp.f32 	%f176, %f174, %f175, %p20;
	and.b32  	%r163, %r161, 2;
	selp.f32 	%f210, %f208, %f209, %p26;
	and.b32  	%r170, %r168, 2;
	selp.f32 	%f245, %f243, %f244, %p32;
	and.b32  	%r181, %r179, 2;
	selp.f32 	%f279, %f277, %f278, %p38;
	and.b32  	%r188, %r186, 2;
	selp.f32 	%f314, %f312, %f313, %p44;
	and.b32  	%r199, %r197, 2;
	selp.f32 	%f348, %f346, %f347, %p50;
	and.b32  	%r206, %r204, 2;
	selp.f32 	%f383, %f381, %f382, %p56;
	and.b32  	%r217, %r215, 2;
	selp.f32 	%f417, %f415, %f416, %p62;
	and.b32  	%r224, %r222, 2;
	selp.f32 	%f447, %f445, %f446, %p67;
	and.b32  	%r241, %r239, 2;
	selp.f32 	%f481, %f479, %f480, %p74;
	and.b32  	%r251, %r249, 2;
	selp.f32 	%f534, %f532, %f533, %p94;
	and.b32  	%r272, %r270, 2;
	selp.f32 	%f586, %f584, %f585, %p114;
	and.b32  	%r303, %r301, 2;
	fma.rn.f32 	%f635, %f633, %f629, 0fC09DE9E6;
	fma.rn.f32 	%f636, %f632, %f634, 0f00000000;
	and.b32  	%r320, %r319, 1;
	fma.rn.f32 	%f687, %f685, %f681, 0fC09DE9E6;
	fma.rn.f32 	%f688, %f684, %f686, 0f00000000;
	and.b32  	%r343, %r342, 1;
	cvt.rzi.s32.f32 	%r359, %f732;
	fma.rn.f32 	%f737, %f735, %f734, 0fC0A55DF6;
	fma.rn.f32 	%f738, %f736, %f734, 0f4081E0CF;
	fma.rn.f32 	%f739, %f734, %f733, 0f00000000;
	and.b32  	%r79, %r78, 8;
	or.b32  	%r153, %r152, %r76;
	setp.eq.s32 	%p21, %r163, 0;
	sub.f32 	%f178, %f177, %f176;
	setp.eq.s32 	%p27, %r170, 0;
	sub.f32 	%f212, %f177, %f210;
	setp.eq.s32 	%p33, %r181, 0;
	sub.f32 	%f247, %f177, %f245;
	setp.eq.s32 	%p39, %r188, 0;
	sub.f32 	%f281, %f177, %f279;
	setp.eq.s32 	%p45, %r199, 0;
	sub.f32 	%f316, %f177, %f314;
	setp.eq.s32 	%p51, %r206, 0;
	sub.f32 	%f350, %f177, %f348;
	setp.eq.s32 	%p57, %r217, 0;
	sub.f32 	%f385, %f177, %f383;
	setp.eq.s32 	%p63, %r224, 0;
	sub.f32 	%f419, %f177, %f417;
	setp.eq.s32 	%p68, %r241, 0;
	neg.f32 	%f449, %f447;
	add.s32 	%r242, %r239, 1;
	cvt.rzi.f32.f32 	%f454, %f427;
	setp.eq.s32 	%p75, %r251, 0;
	neg.f32 	%f483, %f481;
	add.s32 	%r252, %r249, 1;
	cvt.rzi.f32.f32 	%f487, %f461;
	setp.eq.s32 	%p95, %r272, 0;
	neg.f32 	%f536, %f534;
	add.s32 	%r273, %r270, 1;
	cvt.rzi.f32.f32 	%f541, %f835;
	setp.eq.s32 	%p115, %r303, 0;
	neg.f32 	%f588, %f586;
	add.s32 	%r304, %r301, 1;
	cvt.rzi.f32.f32 	%f593, %f823;
	fma.rn.f32 	%f637, %f635, %f629, 0f3F800000;
	fma.rn.f32 	%f638, %f628, 0f40490FDB, %f636;
	setp.eq.b32 	%p134, %r320, 1;
	fma.rn.f32 	%f689, %f687, %f681, 0f3F800000;
	fma.rn.f32 	%f690, %f680, 0f40490FDB, %f688;
	setp.eq.b32 	%p154, %r343, 1;
	cvt.u16.u32 	%rs1, %r3;
	fma.rn.f32 	%f740, %f738, %f734, 0fC09DE9E6;
	fma.rn.f32 	%f741, %f737, %f739, 0f00000000;
	and.b32  	%r360, %r359, 1;
	or.b32  	%r154, %r153, %r79;
	selp.f32 	%f179, %f176, %f178, %p21;
	selp.f32 	%f213, %f210, %f212, %p27;
	selp.f32 	%f248, %f245, %f247, %p33;
	selp.f32 	%f282, %f279, %f281, %p39;
	selp.f32 	%f317, %f314, %f316, %p45;
	selp.f32 	%f351, %f348, %f350, %p51;
	selp.f32 	%f386, %f383, %f385, %p57;
	selp.f32 	%f420, %f417, %f419, %p63;
	selp.f32 	%f448, %f446, %f445, %p67;
	selp.f32 	%f450, %f447, %f449, %p68;
	and.b32  	%r243, %r242, 2;
	setp.eq.f32 	%p70, %f454, %f427;
	mul.f32 	%f455, %f427, 0f00000000;
	selp.f32 	%f482, %f480, %f479, %p74;
	selp.f32 	%f484, %f481, %f483, %p75;
	and.b32  	%r253, %r252, 2;
	setp.eq.f32 	%p77, %f487, %f461;
	mul.f32 	%f488, %f461, 0f00000000;
	selp.f32 	%f535, %f533, %f532, %p94;
	selp.f32 	%f537, %f534, %f536, %p95;
	and.b32  	%r274, %r273, 2;
	setp.eq.f32 	%p97, %f541, %f835;
	mul.f32 	%f542, %f835, 0f00000000;
	selp.f32 	%f587, %f585, %f584, %p114;
	selp.f32 	%f589, %f586, %f588, %p115;
	and.b32  	%r305, %r304, 2;
	setp.eq.f32 	%p117, %f593, %f823;
	mul.f32 	%f594, %f823, 0f00000000;
	selp.f32 	%f639, %f637, %f638, %p134;
	and.b32  	%r321, %r319, 2;
	selp.f32 	%f691, %f689, %f690, %p154;
	and.b32  	%r344, %r342, 2;
	and.b16  	%rs2, %rs1, 2;
	fma.rn.f32 	%f742, %f740, %f734, 0f3F800000;
	fma.rn.f32 	%f743, %f733, 0f40490FDB, %f741;
	setp.eq.b32 	%p175, %r360, 1;
	shr.u32 	%r155, %r154, 1;
	mul.f32 	%f87, %f179, %f179;
	mul.f32 	%f4, %f213, %f213;
	mul.f32 	%f8, %f248, %f248;
	mul.f32 	%f13, %f282, %f282;
	mul.f32 	%f17, %f317, %f317;
	mul.f32 	%f22, %f351, %f351;
	mul.f32 	%f26, %f386, %f386;
	mul.f32 	%f31, %f420, %f420;
	setp.eq.s32 	%p69, %r243, 0;
	sub.f32 	%f452, %f177, %f448;
	selp.f32 	%f456, %f455, %f450, %p70;
	abs.f32 	%f457, %f427;
	setp.eq.s32 	%p76, %r253, 0;
	sub.f32 	%f485, %f177, %f482;
	selp.f32 	%f489, %f488, %f484, %p77;
	abs.f32 	%f490, %f461;
	setp.eq.s32 	%p96, %r274, 0;
	sub.f32 	%f539, %f177, %f535;
	selp.f32 	%f104, %f542, %f537, %p97;
	abs.f32 	%f543, %f835;
	setp.eq.s32 	%p116, %r305, 0;
	sub.f32 	%f591, %f177, %f587;
	selp.f32 	%f595, %f594, %f589, %p117;
	abs.f32 	%f596, %f823;
	setp.eq.s32 	%p135, %r321, 0;
	neg.f32 	%f641, %f639;
	add.s32 	%r322, %r319, 1;
	cvt.rzi.f32.f32 	%f646, %f839;
	setp.eq.s32 	%p155, %r344, 0;
	neg.f32 	%f693, %f691;
	add.s32 	%r345, %r342, 1;
	cvt.rzi.f32.f32 	%f698, %f827;
	shl.b16 	%rs3, %rs1, 1;
	shr.u16 	%rs4, %rs2, 1;
	selp.f32 	%f744, %f742, %f743, %p175;
	and.b32  	%r361, %r359, 2;
	ld.param.u64 	%rd1, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_7];
	mul.wide.u32 	%rd38, %r155, 4;
	mul.f32 	%f183, %f87, 0f3D09A17B;
	mul.f32 	%f217, %f4, 0f3D09A17B;
	mul.f32 	%f252, %f8, 0f3D09A17B;
	mul.f32 	%f286, %f13, 0f3D09A17B;
	mul.f32 	%f321, %f17, 0f3D09A17B;
	mul.f32 	%f355, %f22, 0f3D09A17B;
	mul.f32 	%f390, %f26, 0f3D09A17B;
	mul.f32 	%f423, %f31, 0f3D09A17B;
	selp.f32 	%f453, %f448, %f452, %p69;
	setp.gt.f32 	%p71, %f457, 0f4B800000;
	add.f32 	%f458, %f456, 0f3F800000;
	selp.f32 	%f486, %f482, %f485, %p76;
	setp.gt.f32 	%p78, %f490, 0f4B800000;
	add.f32 	%f491, %f489, 0f3F800000;
	selp.f32 	%f540, %f535, %f539, %p96;
	setp.gt.f32 	%p98, %f543, 0f4B800000;
	add.f32 	%f544, %f104, 0f3F800000;
	selp.f32 	%f592, %f587, %f591, %p116;
	setp.gt.f32 	%p118, %f596, 0f4B800000;
	add.f32 	%f597, %f595, 0f3F800000;
	selp.f32 	%f640, %f638, %f637, %p134;
	selp.f32 	%f642, %f639, %f641, %p135;
	and.b32  	%r323, %r322, 2;
	setp.eq.f32 	%p137, %f646, %f839;
	mul.f32 	%f647, %f839, 0f00000000;
	shr.u32 	%r83, %r3, 2;
	selp.f32 	%f692, %f690, %f689, %p154;
	selp.f32 	%f694, %f691, %f693, %p155;
	and.b32  	%r346, %r345, 2;
	setp.eq.f32 	%p157, %f698, %f827;
	mul.f32 	%f699, %f827, 0f00000000;
	or.b16  	%rs5, %rs3, %rs4;
	setp.eq.s32 	%p176, %r361, 0;
	neg.f32 	%f746, %f744;
	add.s32 	%r362, %r359, 1;
	cvt.rzi.f32.f32 	%f751, %f843;
	add.s64 	%rd39, %rd1, %rd38;
	mul.f32 	%f3, %f183, %f813;
	mul.f32 	%f218, %f217, %f814;
	mul.f32 	%f12, %f252, %f815;
	mul.f32 	%f287, %f286, %f816;
	mul.f32 	%f21, %f321, %f817;
	mul.f32 	%f356, %f355, %f818;
	mul.f32 	%f30, %f390, %f819;
	mul.f32 	%f424, %f423, %f820;
	selp.f32 	%f459, %f458, %f453, %p71;
	selp.f32 	%f492, %f491, %f486, %p78;
	selp.f32 	%f105, %f544, %f540, %p98;
	selp.f32 	%f598, %f597, %f592, %p118;
	setp.eq.s32 	%p136, %r323, 0;
	sub.f32 	%f644, %f177, %f640;
	selp.f32 	%f123, %f647, %f642, %p137;
	abs.f32 	%f648, %f839;
	setp.eq.s32 	%p156, %r346, 0;
	sub.f32 	%f696, %f177, %f692;
	selp.f32 	%f700, %f699, %f694, %p157;
	abs.f32 	%f701, %f827;
	shr.u32 	%r43, %r3, 4;
	and.b16  	%rs6, %rs5, 3;
	and.b32  	%r347, %r83, 2;
	selp.f32 	%f745, %f743, %f742, %p175;
	selp.f32 	%f747, %f744, %f746, %p176;
	and.b32  	%r363, %r362, 2;
	setp.eq.f32 	%p178, %f751, %f843;
	mul.f32 	%f752, %f843, 0f00000000;
	ld.param.u64 	%rd2, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_8];
	ld.param.u64 	%rd3, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_9];
	ld.global.u32 	%r81, [%rd39];
	mov.b32 	%r173, %f218;
	mov.b32 	%r172, %f3;
	mov.b32 	%r191, %f287;
	mov.b32 	%r190, %f12;
	mov.b32 	%r209, %f356;
	mov.b32 	%r208, %f21;
	mov.b32 	%r227, %f424;
	mov.b32 	%r226, %f30;
	mov.b32 	%r229, %f459;
	mov.b32 	%r230, %f492;
	mov.b32 	%r232, %f456;
	mov.b32 	%r233, %f489;
	mov.b32 	%r288, %f598;
	mov.b32 	%r287, %f105;
	mov.b32 	%r294, %f595;
	mov.b32 	%r293, %f104;
	selp.f32 	%f645, %f640, %f644, %p136;
	setp.gt.f32 	%p138, %f648, 0f4B800000;
	add.f32 	%f649, %f123, 0f3F800000;
	selp.f32 	%f697, %f692, %f696, %p156;
	setp.gt.f32 	%p158, %f701, 0f4B800000;
	add.f32 	%f702, %f700, 0f3F800000;
	cvt.u32.u16 	%r44, %rs6;
	or.b32  	%r45, %r347, %r43;
	setp.eq.s32 	%p177, %r363, 0;
	sub.f32 	%f749, %f177, %f745;
	selp.f32 	%f753, %f752, %f747, %p178;
	abs.f32 	%f754, %f843;
	// begin inline asm
	cvt.rn.f16x2.f32 %r171, %r173, %r172;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r189, %r191, %r190;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r207, %r209, %r208;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r225, %r227, %r226;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r228, %r230, %r229;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r231, %r233, %r232;
	// end inline asm
	xor.b32  	%r291, %r294, -2147483648;
	xor.b32  	%r290, %r293, -2147483648;
	selp.f32 	%f124, %f649, %f645, %p138;
	selp.f32 	%f703, %f702, %f697, %p158;
	setp.eq.s32 	%p172, %r45, %r44;
	selp.f32 	%f750, %f745, %f749, %p177;
	setp.gt.f32 	%p179, %f754, 0f4B800000;
	add.f32 	%f755, %f753, 0f3F800000;
	// begin inline asm
	cvt.rn.f16x2.f32 %r286, %r288, %r287;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r289, %r291, %r290;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r292, %r294, %r293;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r295, %r288, %r287;
	// end inline asm
	mov.b32 	%r335, %f703;
	mov.b32 	%r334, %f124;
	mov.b32 	%r338, %f700;
	mov.b32 	%r337, %f123;
	selp.f32 	%f756, %f755, %f750, %p179;
	selp.f32 	%f142, 0f3F800000, 0f00000000, %p172;
	// begin inline asm
	cvt.rn.f16x2.f32 %r333, %r335, %r334;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r336, %r338, %r337;
	// end inline asm
	mul.f32 	%f143, %f756, %f142;
	mul.f32 	%f144, %f753, %f142;
	add.f32 	%f779, %f831, %f831;
	mov.b32 	%r386, %f779;
	and.b32  	%r387, %r386, -2147483648;
	or.b32  	%r388, %r387, 1056964608;
	mov.b32 	%f780, %r388;
	add.f32 	%f781, %f779, %f780;
	cvt.rzi.f32.f32 	%f782, %f781;
	abs.f32 	%f783, %f779;
	setp.gt.f32 	%p193, %f783, 0f4B000000;
	selp.f32 	%f784, %f779, %f782, %p193;
	cvt.rzi.f32.f32 	%f785, %f779;
	setp.lt.f32 	%p194, %f783, 0f3F000000;
	selp.f32 	%f786, %f785, %f784, %p194;
	cvt.rzi.s32.f32 	%r389, %f786;
	fma.rn.f32 	%f787, %f786, 0fBF000000, %f831;
	mul.f32 	%f788, %f787, %f787;
	fma.rn.f32 	%f789, %f788, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f790, %f788, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f791, %f789, %f788, 0fC0A55DF6;
	fma.rn.f32 	%f792, %f790, %f788, 0f4081E0CF;
	fma.rn.f32 	%f793, %f788, %f787, 0f00000000;
	fma.rn.f32 	%f794, %f792, %f788, 0fC09DE9E6;
	fma.rn.f32 	%f795, %f791, %f793, 0f00000000;
	fma.rn.f32 	%f796, %f794, %f788, 0f3F800000;
	fma.rn.f32 	%f797, %f787, 0f40490FDB, %f795;
	and.b32  	%r390, %r389, 1;
	setp.eq.b32 	%p195, %r390, 1;
	selp.f32 	%f798, %f796, %f797, %p195;
	selp.f32 	%f799, %f797, %f796, %p195;
	and.b32  	%r391, %r389, 2;
	setp.eq.s32 	%p196, %r391, 0;
	neg.f32 	%f800, %f798;
	selp.f32 	%f801, %f798, %f800, %p196;
	add.s32 	%r392, %r389, 1;
	and.b32  	%r393, %r392, 2;
	setp.eq.s32 	%p197, %r393, 0;
	sub.f32 	%f803, %f177, %f799;
	selp.f32 	%f804, %f799, %f803, %p197;
	cvt.rzi.f32.f32 	%f805, %f831;
	setp.eq.f32 	%p198, %f805, %f831;
	mul.f32 	%f806, %f831, 0f00000000;
	selp.f32 	%f807, %f806, %f801, %p198;
	abs.f32 	%f808, %f831;
	setp.gt.f32 	%p199, %f808, 0f4B800000;
	add.f32 	%f809, %f807, 0f3F800000;
	selp.f32 	%f810, %f809, %f804, %p199;
	mul.f32 	%f811, %f810, %f142;
	mul.f32 	%f812, %f807, %f142;
	mov.b32 	%r376, %f811;
	mov.b32 	%r375, %f143;
	// begin inline asm
	cvt.rn.f16x2.f32 %r374, %r376, %r375;
	// end inline asm
	mov.b32 	%r382, %f812;
	xor.b32  	%r379, %r382, -2147483648;
	mov.b32 	%r381, %f144;
	xor.b32  	%r378, %r381, -2147483648;
	// begin inline asm
	cvt.rn.f16x2.f32 %r377, %r379, %r378;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r380, %r382, %r381;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r383, %r376, %r375;
	// end inline asm
	shl.b32 	%r395, %r136, 13;
	shl.b32 	%r396, %r140, 7;
	and.b32  	%r397, %r75, 28;
	shl.b32 	%r398, %r4, 5;
	and.b32  	%r399, %r398, 32;
	or.b32  	%r400, %r397, %r399;
	and.b32  	%r401, %r5, 6144;
	or.b32  	%r402, %r401, %r400;
	and.b32  	%r58, %r83, 4;
	and.b32  	%r59, %r1, 3;
	and.b32  	%r60, %r3, 8;
	shl.b32 	%r403, %r1, 2;
	and.b32  	%r61, %r403, 48;
	and.b32  	%r62, %r398, 64;
	or.b32  	%r404, %r395, %r62;
	or.b32  	%r405, %r404, %r402;
	add.s32 	%r63, %r405, %r396;
	shl.b32 	%r406, %r3, 4;
	or.b32  	%r407, %r60, %r406;
	shr.u32 	%r408, %r407, 2;
	and.b32  	%r409, %r408, 30;
	and.b32  	%r410, %r2, 32;
	shl.b32 	%r411, %r3, 3;
	and.b32  	%r412, %r411, 64;
	shl.b32 	%r413, %r1, 1;
	or.b32  	%r414, %r412, %r413;
	and.b32  	%r415, %r78, 32;
	or.b32  	%r416, %r414, %r415;
	shr.u32 	%r417, %r416, 2;
	or.b32  	%r418, %r417, %r410;
	or.b32  	%r419, %r79, %r80;
	or.b32  	%r420, %r419, %r76;
	shr.u32 	%r421, %r420, 1;
	mad.lo.s32 	%r422, %r421, 65, %r418;
	shl.b32 	%r423, %r138, 17;
	add.s32 	%r424, %r423, -393216;
	and.b32  	%r425, %r403, 12;
	or.b32  	%r426, %r425, %r15;
	or.b32  	%r427, %r426, %r77;
	shl.b32 	%r428, %r427, 7;
	or.b32  	%r64, %r428, %r400;
	cvt.s64.s32 	%rd5, %r424;
	shr.u32 	%r429, %r156, 2;
	shr.u32 	%r430, %r1, 2;
	or.b32  	%r431, %r430, 4;
	or.b32  	%r432, %r430, 8;
	or.b32  	%r433, %r430, 12;
	and.b32  	%r434, %r1, 1;
	neg.s32 	%r435, %r434;
	setp.eq.b32 	%p201, %r434, 1;
	and.b32  	%r436, %r435, 260;
	bfe.s32 	%r437, %r1, 1, 1;
	and.b32  	%r438, %r1, 2;
	setp.eq.s32 	%p202, %r438, 0;
	and.b32  	%r439, %r437, 130;
	mul.lo.s32 	%r440, %r430, 545;
	bfe.u32 	%r441, %r83, 2, 1;
	mul.lo.s32 	%r442, %r441, 65;
	add.s32 	%r443, %r436, %r409;
	add.s32 	%r444, %r443, %r439;
	add.s32 	%r445, %r444, %r440;
	add.s32 	%r446, %r445, %r442;
	mul.wide.u32 	%rd40, %r446, 4;
	mov.u64 	%rd41, shmem;
	add.s64 	%rd6, %rd41, %rd40;
	cvt.u64.u32 	%rd42, %r442;
	cvt.u64.u32 	%rd43, %r440;
	selp.b64 	%rd44, 0, 130, %p202;
	selp.b64 	%rd45, 260, 0, %p201;
	cvt.u64.u32 	%rd46, %r409;
	add.s64 	%rd47, %rd46, %rd45;
	add.s64 	%rd48, %rd47, %rd44;
	add.s64 	%rd49, %rd48, %rd43;
	add.s64 	%rd50, %rd49, %rd42;
	shl.b64 	%rd51, %rd50, 2;
	add.s64 	%rd7, %rd41, %rd51;
	mul.lo.s32 	%r447, %r431, 545;
	add.s32 	%r448, %r444, %r447;
	add.s32 	%r449, %r448, %r442;
	mul.wide.u32 	%rd52, %r449, 4;
	add.s64 	%rd8, %rd41, %rd52;
	cvt.u64.u32 	%rd53, %r447;
	add.s64 	%rd54, %rd48, %rd53;
	add.s64 	%rd55, %rd54, %rd42;
	shl.b64 	%rd56, %rd55, 2;
	add.s64 	%rd9, %rd41, %rd56;
	mul.lo.s32 	%r450, %r432, 545;
	add.s32 	%r451, %r444, %r450;
	add.s32 	%r452, %r451, %r442;
	mul.wide.u32 	%rd57, %r452, 4;
	add.s64 	%rd10, %rd41, %rd57;
	cvt.u64.u32 	%rd58, %r450;
	add.s64 	%rd59, %rd48, %rd58;
	add.s64 	%rd60, %rd59, %rd42;
	shl.b64 	%rd61, %rd60, 2;
	add.s64 	%rd11, %rd41, %rd61;
	mul.lo.s32 	%r453, %r433, 545;
	add.s32 	%r454, %r444, %r453;
	add.s32 	%r455, %r454, %r442;
	mul.wide.u32 	%rd62, %r455, 4;
	add.s64 	%rd12, %rd41, %rd62;
	cvt.u64.u32 	%rd63, %r453;
	add.s64 	%rd64, %rd48, %rd63;
	add.s64 	%rd65, %rd64, %rd42;
	shl.b64 	%rd66, %rd65, 2;
	add.s64 	%rd13, %rd41, %rd66;
	and.b32  	%r456, %r3, 1;
	neg.s32 	%r457, %r456;
	and.b32  	%r458, %r457, 130;
	and.b32  	%r459, %r413, 6;
	or.b32  	%r460, %r459, %r43;
	mul.lo.s32 	%r461, %r460, 65;
	add.s32 	%r462, %r409, %r461;
	add.s32 	%r463, %r462, %r440;
	mul.wide.u32 	%rd67, %r463, 4;
	add.s64 	%rd14, %rd41, %rd67;
	cvt.u64.u32 	%rd68, %r461;
	add.s64 	%rd69, %rd68, %rd46;
	add.s64 	%rd70, %rd69, %rd43;
	shl.b64 	%rd71, %rd70, 2;
	add.s64 	%rd15, %rd41, %rd71;
	add.s32 	%r464, %r462, %r447;
	mul.wide.u32 	%rd72, %r464, 4;
	add.s64 	%rd16, %rd41, %rd72;
	add.s64 	%rd73, %rd69, %rd53;
	shl.b64 	%rd74, %rd73, 2;
	add.s64 	%rd17, %rd41, %rd74;
	add.s32 	%r465, %r462, %r450;
	mul.wide.u32 	%rd75, %r465, 4;
	add.s64 	%rd18, %rd41, %rd75;
	add.s64 	%rd76, %rd69, %rd58;
	shl.b64 	%rd77, %rd76, 2;
	add.s64 	%rd19, %rd41, %rd77;
	add.s32 	%r466, %r462, %r453;
	mul.wide.u32 	%rd78, %r466, 4;
	add.s64 	%rd20, %rd41, %rd78;
	add.s64 	%rd79, %rd69, %rd63;
	shl.b64 	%rd80, %rd79, 2;
	add.s64 	%rd21, %rd41, %rd80;
	mul.wide.u32 	%rd81, %r422, 4;
	add.s64 	%rd22, %rd41, %rd81;
	add.s32 	%r467, %r458, %r418;
	mad.lo.s32 	%r468, %r84, 260, %r467;
	mad.lo.s32 	%r469, %r429, 65, %r468;
	mul.wide.u32 	%rd82, %r469, 4;
	add.s64 	%rd23, %rd41, %rd82;
	setp.eq.s32 	%p203, %r60, 0;
	mov.u16 	%rs72, 25600;
	mov.u16 	%rs46, 21504;
	mov.u16 	%rs80, 18432;
	mov.u16 	%rs68, -14592;
	mov.u32 	%r1170, %r1162;
	mov.u32 	%r1171, %r1162;
	mov.u32 	%r1177, %r1162;
	mov.u32 	%r68, %r1162;
	bra.uni 	$L__BB0_83;
$L__BB0_117:                            // %pass7543
                                        //   in Loop: Header=BB0_83 Depth=1
	selp.b32 	%r1147, %r121, %r1081, %p203;
	selp.b32 	%r1148, %r1077, %r121, %p203;
	selp.b32 	%r1149, %r120, %r1073, %p203;
	selp.b32 	%r1150, %r1069, %r120, %p203;
	or.b32  	%r1152, %r1163, %r64;
	or.b32  	%r1184, %r1152, %r62;
	cvt.s64.s32 	%rd91, %r1184;
	add.s64 	%rd92, %rd91, %rd5;
	shr.u64 	%rd93, %rd92, 36;
	add.s64 	%rd94, %rd92, %rd93;
	shr.s64 	%rd95, %rd94, 28;
	setp.lt.s64 	%p220, %rd92, 0;
	and.b64  	%rd96, %rd94, -268435456;
	setp.ne.s64 	%p221, %rd96, %rd92;
	and.pred  	%p222, %p220, %p221;
	selp.u64 	%rd97, 1, 0, %p222;
	sub.s64 	%rd98, %rd97, %rd95;
	shl.b64 	%rd99, %rd98, 28;
	add.s64 	%rd100, %rd99, %rd92;
	shl.b64 	%rd101, %rd100, 2;
	add.s64 	%rd102, %rd3, %rd101;
	st.global.v4.u32 	[%rd102], {%r1150, %r1148, %r1149, %r1147};
$L__BB0_118:                            // %pass7668
                                        //   in Loop: Header=BB0_83 Depth=1
	or.b32  	%r1155, %r1184, 524288;
	cvt.s64.s32 	%rd103, %r1155;
	add.s64 	%rd104, %rd103, %rd5;
	shr.u64 	%rd105, %rd104, 36;
	add.s64 	%rd106, %rd104, %rd105;
	shr.s64 	%rd107, %rd106, 28;
	setp.lt.s64 	%p223, %rd104, 0;
	and.b64  	%rd108, %rd106, -268435456;
	setp.ne.s64 	%p224, %rd108, %rd104;
	and.pred  	%p225, %p223, %p224;
	selp.u64 	%rd109, 1, 0, %p225;
	sub.s64 	%rd110, %rd109, %rd107;
	shl.b64 	%rd111, %rd110, 28;
	add.s64 	%rd112, %rd111, %rd104;
	shl.b64 	%rd113, %rd112, 2;
	add.s64 	%rd114, %rd3, %rd113;
	st.global.v4.u32 	[%rd114], {%r122, %r124, %r123, %r125};
	or.b32  	%r1156, %r1184, 1048576;
	cvt.s64.s32 	%rd115, %r1156;
	add.s64 	%rd116, %rd115, %rd5;
	shr.u64 	%rd117, %rd116, 36;
	add.s64 	%rd118, %rd116, %rd117;
	shr.s64 	%rd119, %rd118, 28;
	setp.lt.s64 	%p226, %rd116, 0;
	and.b64  	%rd120, %rd118, -268435456;
	setp.ne.s64 	%p227, %rd120, %rd116;
	and.pred  	%p228, %p226, %p227;
	selp.u64 	%rd121, 1, 0, %p228;
	sub.s64 	%rd122, %rd121, %rd119;
	shl.b64 	%rd123, %rd122, 28;
	add.s64 	%rd124, %rd123, %rd116;
	shl.b64 	%rd125, %rd124, 2;
	add.s64 	%rd126, %rd3, %rd125;
	st.global.v4.u32 	[%rd126], {%r126, %r128, %r127, %r129};
	or.b32  	%r1157, %r1184, 1572864;
	cvt.s64.s32 	%rd127, %r1157;
	add.s64 	%rd128, %rd127, %rd5;
	shr.u64 	%rd129, %rd128, 36;
	add.s64 	%rd130, %rd128, %rd129;
	shr.s64 	%rd131, %rd130, 28;
	setp.lt.s64 	%p229, %rd128, 0;
	and.b64  	%rd132, %rd130, -268435456;
	setp.ne.s64 	%p230, %rd132, %rd128;
	and.pred  	%p231, %p229, %p230;
	selp.u64 	%rd133, 1, 0, %p231;
	sub.s64 	%rd134, %rd133, %rd131;
	shl.b64 	%rd135, %rd134, 28;
	add.s64 	%rd136, %rd135, %rd128;
	shl.b64 	%rd137, %rd136, 2;
	add.s64 	%rd138, %rd3, %rd137;
	st.global.v4.u32 	[%rd138], {%r130, %r132, %r131, %r133};
	setp.ne.s32 	%p232, %r68, 32512;
	add.s32 	%r68, %r68, 256;
	add.s32 	%r1158, %r68, %r136;
	setp.lt.s32 	%p233, %r1158, %r137;
	and.pred  	%p234, %p232, %p233;
	@%p234 bra 	$L__BB0_83;
	bra.uni 	$L__BB0_119;
$L__BB0_83:                             // %L1382
                                        // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_84 Depth 2
	or.b32  	%r535, %r68, %r58;
	or.b32  	%r536, %r535, %r59;
	or.b32  	%r537, %r536, %r60;
	or.b32  	%r538, %r537, %r61;
	shl.b32 	%r539, %r538, 13;
	add.s32 	%r540, %r63, %r539;
	shr.s32 	%r541, %r540, 31;
	shr.u32 	%r542, %r541, 4;
	add.s32 	%r543, %r540, %r542;
	shr.s32 	%r544, %r543, 28;
	setp.lt.s32 	%p204, %r540, 0;
	and.b32  	%r545, %r543, -268435456;
	setp.ne.s32 	%p205, %r545, %r540;
	and.pred  	%p206, %p204, %p205;
	selp.u32 	%r546, 1, 0, %p206;
	sub.s32 	%r547, %r546, %r544;
	shl.b32 	%r548, %r547, 28;
	or.b32  	%r549, %r540, 1;
	add.s32 	%r550, %r549, %r548;
	mul.wide.s32 	%rd83, %r550, 4;
	add.s64 	%rd84, %rd2, %rd83;
	ld.global.v4.u32 	{%r551, %r552, %r553, %r554}, [%rd84+-4];
	or.b32  	%r555, %r539, 524288;
	add.s32 	%r556, %r63, %r555;
	shr.s32 	%r557, %r556, 31;
	shr.u32 	%r558, %r557, 4;
	add.s32 	%r559, %r556, %r558;
	shr.s32 	%r560, %r559, 28;
	setp.lt.s32 	%p207, %r556, 0;
	and.b32  	%r561, %r559, -268435456;
	setp.ne.s32 	%p208, %r561, %r556;
	and.pred  	%p209, %p207, %p208;
	selp.u32 	%r562, 1, 0, %p209;
	sub.s32 	%r563, %r562, %r560;
	shl.b32 	%r564, %r563, 28;
	or.b32  	%r565, %r556, 1;
	add.s32 	%r566, %r565, %r564;
	mul.wide.s32 	%rd85, %r566, 4;
	add.s64 	%rd86, %rd2, %rd85;
	ld.global.v4.u32 	{%r567, %r568, %r569, %r570}, [%rd86+-4];
	or.b32  	%r571, %r539, 1048576;
	add.s32 	%r572, %r63, %r571;
	shr.s32 	%r573, %r572, 31;
	shr.u32 	%r574, %r573, 4;
	add.s32 	%r575, %r572, %r574;
	shr.s32 	%r576, %r575, 28;
	setp.lt.s32 	%p210, %r572, 0;
	and.b32  	%r577, %r575, -268435456;
	setp.ne.s32 	%p211, %r577, %r572;
	and.pred  	%p212, %p210, %p211;
	selp.u32 	%r578, 1, 0, %p212;
	sub.s32 	%r579, %r578, %r576;
	shl.b32 	%r580, %r579, 28;
	or.b32  	%r581, %r572, 1;
	add.s32 	%r582, %r581, %r580;
	mul.wide.s32 	%rd87, %r582, 4;
	add.s64 	%rd88, %rd2, %rd87;
	ld.global.v4.u32 	{%r583, %r584, %r585, %r586}, [%rd88+-4];
	or.b32  	%r587, %r539, 1572864;
	add.s32 	%r588, %r63, %r587;
	shr.s32 	%r589, %r588, 31;
	shr.u32 	%r590, %r589, 4;
	add.s32 	%r591, %r588, %r590;
	shr.s32 	%r592, %r591, 28;
	setp.lt.s32 	%p213, %r588, 0;
	and.b32  	%r593, %r591, -268435456;
	setp.ne.s32 	%p214, %r593, %r588;
	and.pred  	%p215, %p213, %p214;
	selp.u32 	%r594, 1, 0, %p215;
	sub.s32 	%r595, %r594, %r592;
	shl.b32 	%r596, %r595, 28;
	or.b32  	%r597, %r588, 1;
	add.s32 	%r598, %r597, %r596;
	mul.wide.s32 	%rd89, %r598, 4;
	add.s64 	%rd90, %rd2, %rd89;
	ld.global.v4.u32 	{%r599, %r600, %r601, %r602}, [%rd90+-4];
	selp.b32 	%r603, %r553, %r551, %p203;
	shfl.sync.bfly.b32	%r604, %r603, 8, 31, -1;
	selp.b32 	%r471, %r551, %r604, %p203;
	selp.b32 	%r472, %r604, %r553, %p203;
	selp.b32 	%r605, %r554, %r552, %p203;
	shfl.sync.bfly.b32	%r606, %r605, 8, 31, -1;
	selp.b32 	%r479, %r552, %r606, %p203;
	selp.b32 	%r480, %r606, %r554, %p203;
	selp.b32 	%r607, %r569, %r567, %p203;
	shfl.sync.bfly.b32	%r608, %r607, 8, 31, -1;
	selp.b32 	%r487, %r567, %r608, %p203;
	selp.b32 	%r488, %r608, %r569, %p203;
	selp.b32 	%r609, %r570, %r568, %p203;
	shfl.sync.bfly.b32	%r610, %r609, 8, 31, -1;
	selp.b32 	%r495, %r568, %r610, %p203;
	selp.b32 	%r496, %r610, %r570, %p203;
	selp.b32 	%r611, %r585, %r583, %p203;
	shfl.sync.bfly.b32	%r612, %r611, 8, 31, -1;
	selp.b32 	%r503, %r583, %r612, %p203;
	selp.b32 	%r504, %r612, %r585, %p203;
	selp.b32 	%r613, %r586, %r584, %p203;
	shfl.sync.bfly.b32	%r614, %r613, 8, 31, -1;
	selp.b32 	%r511, %r584, %r614, %p203;
	selp.b32 	%r512, %r614, %r586, %p203;
	selp.b32 	%r615, %r601, %r599, %p203;
	shfl.sync.bfly.b32	%r616, %r615, 8, 31, -1;
	selp.b32 	%r519, %r599, %r616, %p203;
	selp.b32 	%r520, %r616, %r601, %p203;
	selp.b32 	%r617, %r602, %r600, %p203;
	shfl.sync.bfly.b32	%r618, %r617, 8, 31, -1;
	selp.b32 	%r527, %r600, %r618, %p203;
	selp.b32 	%r528, %r618, %r602, %p203;
	mov.u32 	%r529, 21520;
	// begin inline asm
	prmt.b32 %r470, %r471, %r472, %r529;
	// end inline asm
	mov.u32 	%r533, 30258;
	// begin inline asm
	prmt.b32 %r474, %r471, %r472, %r533;
	// end inline asm
	// begin inline asm
	prmt.b32 %r478, %r479, %r480, %r529;
	// end inline asm
	// begin inline asm
	prmt.b32 %r482, %r479, %r480, %r533;
	// end inline asm
	// begin inline asm
	prmt.b32 %r486, %r487, %r488, %r529;
	// end inline asm
	// begin inline asm
	prmt.b32 %r490, %r487, %r488, %r533;
	// end inline asm
	// begin inline asm
	prmt.b32 %r494, %r495, %r496, %r529;
	// end inline asm
	// begin inline asm
	prmt.b32 %r498, %r495, %r496, %r533;
	// end inline asm
	// begin inline asm
	prmt.b32 %r502, %r503, %r504, %r529;
	// end inline asm
	// begin inline asm
	prmt.b32 %r506, %r503, %r504, %r533;
	// end inline asm
	// begin inline asm
	prmt.b32 %r510, %r511, %r512, %r529;
	// end inline asm
	// begin inline asm
	prmt.b32 %r514, %r511, %r512, %r533;
	// end inline asm
	// begin inline asm
	prmt.b32 %r518, %r519, %r520, %r529;
	// end inline asm
	// begin inline asm
	prmt.b32 %r522, %r519, %r520, %r533;
	// end inline asm
	// begin inline asm
	prmt.b32 %r526, %r527, %r528, %r529;
	// end inline asm
	// begin inline asm
	prmt.b32 %r530, %r527, %r528, %r533;
	// end inline asm
	st.shared.u32 	[%rd6], %r470;
	st.shared.u32 	[%rd7+128], %r474;
	st.shared.u32 	[%rd7+4], %r478;
	st.shared.u32 	[%rd7+132], %r482;
	st.shared.u32 	[%rd8], %r486;
	st.shared.u32 	[%rd9+128], %r490;
	st.shared.u32 	[%rd9+4], %r494;
	st.shared.u32 	[%rd9+132], %r498;
	st.shared.u32 	[%rd10], %r502;
	st.shared.u32 	[%rd11+128], %r506;
	st.shared.u32 	[%rd11+4], %r510;
	st.shared.u32 	[%rd11+132], %r514;
	st.shared.u32 	[%rd12], %r518;
	st.shared.u32 	[%rd13+128], %r522;
	st.shared.u32 	[%rd13+4], %r526;
	st.shared.u32 	[%rd13+132], %r530;
	bar.sync 	0;
	mov.u32 	%r1174, 256;
	mov.u64 	%rd143, %rd23;
	mov.u64 	%rd144, %rd22;
	mov.u32 	%r1175, %r1170;
	mov.u32 	%r1176, %r1171;
$L__BB0_84:                             // %L10982
                                        //   Parent Loop BB0_83 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	mov.u32 	%r1171, %r1177;
	mov.u32 	%r1170, %r1176;
	ld.shared.u32 	%r1177, [%rd143];
	// begin inline asm
	mov.b32 %r624, {%rs72, %rs72};
	// end inline asm
	// begin inline asm
	mov.b32 %r635, {%rs46, %rs46};
	// end inline asm
	xor.b32  	%r623, %r1177, -2004318072;
	mov.u32 	%r622, 983055;
	// begin inline asm
	lop3.b32 %r621, %r622, %r623, %r624, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r625, {%rs80, %rs80};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r626, %r624, %r625;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r629, %r621, %r626;
	// end inline asm
	mov.u32 	%r633, 15728880;
	// begin inline asm
	lop3.b32 %r632, %r633, %r623, %r635, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r636, {%rs80, %rs80};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r637, %r635, %r636;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r640, %r632, %r637;
	// end inline asm
	shr.u32 	%r645, %r623, 8;
	// begin inline asm
	lop3.b32 %r643, %r622, %r645, %r624, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r647, {%rs80, %rs80};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r648, %r624, %r647;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r651, %r643, %r648;
	// end inline asm
	// begin inline asm
	lop3.b32 %r654, %r633, %r645, %r635, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r658, {%rs80, %rs80};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r659, %r635, %r658;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r662, %r654, %r659;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r665, %r225;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r667, %r665, %r629;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r670, %r225;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r672, %r670, %r640;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r675, %r225;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r677, %r675, %r651;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r680, %r225;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r682, %r680, %r662;
	// end inline asm
	// begin inline asm
	mov.b32 %r690, {%rs72, %rs72};
	// end inline asm
	// begin inline asm
	mov.b32 %r701, {%rs46, %rs46};
	// end inline asm
	xor.b32  	%r689, %r1175, -2004318072;
	// begin inline asm
	lop3.b32 %r687, %r622, %r689, %r690, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r691, {%rs80, %rs80};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r692, %r690, %r691;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r695, %r687, %r692;
	// end inline asm
	// begin inline asm
	lop3.b32 %r698, %r633, %r689, %r701, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r702, {%rs80, %rs80};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r703, %r701, %r702;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r706, %r698, %r703;
	// end inline asm
	shr.u32 	%r711, %r689, 8;
	// begin inline asm
	lop3.b32 %r709, %r622, %r711, %r690, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r713, {%rs80, %rs80};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r714, %r690, %r713;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r717, %r709, %r714;
	// end inline asm
	// begin inline asm
	lop3.b32 %r720, %r633, %r711, %r701, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r724, {%rs80, %rs80};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r725, %r701, %r724;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r728, %r720, %r725;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r731, %r171, %r695, %r667;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r735, %r171, %r706, %r672;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r739, %r171, %r717, %r677;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r743, %r171, %r728, %r682;
	// end inline asm
	// begin inline asm
	mov.b32 %r752, {%rs72, %rs72};
	// end inline asm
	// begin inline asm
	mov.b32 %r763, {%rs46, %rs46};
	// end inline asm
	xor.b32  	%r751, %r1170, -2004318072;
	// begin inline asm
	lop3.b32 %r749, %r622, %r751, %r752, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r753, {%rs80, %rs80};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r754, %r752, %r753;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r757, %r749, %r754;
	// end inline asm
	// begin inline asm
	lop3.b32 %r760, %r633, %r751, %r763, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r764, {%rs80, %rs80};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r765, %r763, %r764;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r768, %r760, %r765;
	// end inline asm
	shr.u32 	%r773, %r751, 8;
	// begin inline asm
	lop3.b32 %r771, %r622, %r773, %r752, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r775, {%rs80, %rs80};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r776, %r752, %r775;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r779, %r771, %r776;
	// end inline asm
	// begin inline asm
	lop3.b32 %r782, %r633, %r773, %r763, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r786, {%rs80, %rs80};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r787, %r763, %r786;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r790, %r782, %r787;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r793, %r189;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r795, %r793, %r757, %r731;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r799, %r189;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r801, %r799, %r768, %r735;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r805, %r189;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r807, %r805, %r779, %r739;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r811, %r189;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r813, %r811, %r790, %r743;
	// end inline asm
	// begin inline asm
	mov.b32 %r822, {%rs72, %rs72};
	// end inline asm
	// begin inline asm
	mov.b32 %r833, {%rs46, %rs46};
	// end inline asm
	xor.b32  	%r821, %r1171, -2004318072;
	// begin inline asm
	lop3.b32 %r819, %r622, %r821, %r822, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r823, {%rs80, %rs80};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r824, %r822, %r823;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r827, %r819, %r824;
	// end inline asm
	// begin inline asm
	lop3.b32 %r830, %r633, %r821, %r833, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r834, {%rs80, %rs80};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r835, %r833, %r834;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r838, %r830, %r835;
	// end inline asm
	shr.u32 	%r843, %r821, 8;
	// begin inline asm
	lop3.b32 %r841, %r622, %r843, %r822, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r845, {%rs80, %rs80};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r846, %r822, %r845;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r849, %r841, %r846;
	// end inline asm
	// begin inline asm
	lop3.b32 %r852, %r633, %r843, %r833, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r856, {%rs80, %rs80};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r857, %r833, %r856;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r860, %r852, %r857;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r886, %r207, %r827, %r795;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r883, %r207, %r838, %r801;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r895, %r207, %r849, %r807;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r892, %r207, %r860, %r813;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r879, %r231;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r881, %r879, %r883;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r884, %r228, %r886, %r881;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r888, %r231;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r890, %r888, %r892;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r893, %r228, %r895, %r890;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r897, %r231, %r886;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r900, %r228, %r883, %r897;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r904, %r231, %r895;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r907, %r228, %r892, %r904;
	// end inline asm
	mov.u32 	%r919, 0;
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r938, %r935}, {%r286, %r292, %r289, %r295}, {%r884, %r900}, {%r919, %r919};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r947, %r944}, {%r286, %r292, %r289, %r295}, {%r893, %r907}, {%r919, %r919};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r931, %r336;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r933, %r931, %r935;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r936, %r333, %r938, %r933;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r940, %r336;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r942, %r940, %r944;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r945, %r333, %r947, %r942;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r949, %r336, %r938;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r952, %r333, %r935, %r949;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r956, %r336, %r947;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r959, %r333, %r944, %r956;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r963, %r964}, {%r374, %r380, %r377, %r383}, {%r936, %r952}, {%r919, %r919};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r973, %r974}, {%r374, %r380, %r377, %r383}, {%r945, %r959}, {%r919, %r919};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r983, %r81, %r963;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r986, %r81, %r964;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r989, %r81, %r973;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r992, %r81, %r974;
	// end inline asm
	// begin inline asm
	mov.b32 %r995, {%rs68, %rs68};
	// end inline asm
	mov.u16 	%rs57, 18176;
	// begin inline asm
	mov.b32 %r996, {%rs57, %rs57};
	// end inline asm
	// begin inline asm
	max.f16x2 %r997, %r983, %r995;
	// end inline asm
	// begin inline asm
	min.f16x2 %r1000, %r997, %r996;
	// end inline asm
	// begin inline asm
	mov.b32 %r1003, {%rs68, %rs68};
	// end inline asm
	// begin inline asm
	mov.b32 %r1004, {%rs57, %rs57};
	// end inline asm
	// begin inline asm
	max.f16x2 %r1005, %r986, %r1003;
	// end inline asm
	// begin inline asm
	min.f16x2 %r1008, %r1005, %r1004;
	// end inline asm
	// begin inline asm
	mov.b32 %r1011, {%rs68, %rs68};
	// end inline asm
	// begin inline asm
	mov.b32 %r1012, {%rs57, %rs57};
	// end inline asm
	// begin inline asm
	max.f16x2 %r1013, %r989, %r1011;
	// end inline asm
	// begin inline asm
	min.f16x2 %r1016, %r1013, %r1012;
	// end inline asm
	// begin inline asm
	mov.b32 %r1019, {%rs68, %rs68};
	// end inline asm
	// begin inline asm
	mov.b32 %r1020, {%rs57, %rs57};
	// end inline asm
	// begin inline asm
	max.f16x2 %r1021, %r992, %r1019;
	// end inline asm
	// begin inline asm
	min.f16x2 %r1024, %r1021, %r1020;
	// end inline asm
	// begin inline asm
	mov.b32 %r1030, {%rs72, %rs72};
	// end inline asm
	// begin inline asm
	mov.b32 %r1028, {%rs80, %rs80};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1029, %r1030, %r1028;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1032, %r1000, %r1029;
	// end inline asm
	// begin inline asm
	mov.b32 %r1035, {%rs80, %rs80};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1036, %r1030, %r1035;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1039, %r1008, %r1036;
	// end inline asm
	// begin inline asm
	mov.b32 %r1042, {%rs80, %rs80};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1043, %r1030, %r1042;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1046, %r1016, %r1043;
	// end inline asm
	// begin inline asm
	mov.b32 %r1049, {%rs80, %rs80};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1050, %r1030, %r1049;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1053, %r1024, %r1050;
	// end inline asm
	mov.u32 	%r1059, 25152;
	// begin inline asm
	prmt.b32 %r1056, %r1032, %r1046, %r1059;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1060, %r1039, %r1053, %r1059;
	// end inline asm
	shl.b32 	%r1067, %r1060, 4;
	mov.u32 	%r1065, 252645135;
	// begin inline asm
	lop3.b32 %r1064, %r1065, %r1056, %r1067, 202;
	// end inline asm
	xor.b32  	%r1068, %r1064, -2004318072;
	st.shared.u32 	[%rd144], %r1068;
	add.s32 	%r1174, %r1174, -16;
	add.s64 	%rd144, %rd144, 2180;
	add.s64 	%rd143, %rd143, 2180;
	setp.eq.s32 	%p216, %r1174, 0;
	mov.u32 	%r1175, %r1170;
	mov.u32 	%r1176, %r1171;
	@%p216 bra 	$L__BB0_85;
	bra.uni 	$L__BB0_84;
$L__BB0_85:                             // %guard_exit8057
                                        //   in Loop: Header=BB0_83 Depth=1
	bar.sync 	0;
	or.b32  	%r115, %r68, %r61;
	ld.shared.u32 	%r1074, [%rd14];
	ld.shared.u32 	%r1075, [%rd15+128];
	ld.shared.u32 	%r1082, [%rd15+4];
	ld.shared.u32 	%r1083, [%rd15+132];
	ld.shared.u32 	%r1090, [%rd16];
	ld.shared.u32 	%r1091, [%rd17+128];
	ld.shared.u32 	%r1098, [%rd17+4];
	ld.shared.u32 	%r1099, [%rd17+132];
	ld.shared.u32 	%r1106, [%rd18];
	ld.shared.u32 	%r1107, [%rd19+128];
	ld.shared.u32 	%r1114, [%rd19+4];
	ld.shared.u32 	%r1115, [%rd19+132];
	ld.shared.u32 	%r1122, [%rd20];
	ld.shared.u32 	%r1123, [%rd21+128];
	ld.shared.u32 	%r1130, [%rd21+4];
	ld.shared.u32 	%r1131, [%rd21+132];
	// begin inline asm
	prmt.b32 %r1069, %r1074, %r1075, %r529;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1073, %r1074, %r1075, %r533;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1077, %r1082, %r1083, %r529;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1081, %r1082, %r1083, %r533;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1085, %r1090, %r1091, %r529;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1089, %r1090, %r1091, %r533;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1093, %r1098, %r1099, %r529;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1097, %r1098, %r1099, %r533;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1101, %r1106, %r1107, %r529;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1105, %r1106, %r1107, %r533;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1109, %r1114, %r1115, %r529;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1113, %r1114, %r1115, %r533;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1117, %r1122, %r1123, %r529;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1121, %r1122, %r1123, %r533;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1125, %r1130, %r1131, %r529;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1129, %r1130, %r1131, %r533;
	// end inline asm
	selp.b32 	%r1133, %r1073, %r1069, %p203;
	shfl.sync.bfly.b32	%r120, %r1133, 8, 31, -1;
	selp.b32 	%r1134, %r1081, %r1077, %p203;
	shfl.sync.bfly.b32	%r121, %r1134, 8, 31, -1;
	selp.b32 	%r1135, %r1089, %r1085, %p203;
	shfl.sync.bfly.b32	%r1136, %r1135, 8, 31, -1;
	selp.b32 	%r122, %r1085, %r1136, %p203;
	selp.b32 	%r123, %r1136, %r1089, %p203;
	selp.b32 	%r1137, %r1097, %r1093, %p203;
	shfl.sync.bfly.b32	%r1138, %r1137, 8, 31, -1;
	selp.b32 	%r124, %r1093, %r1138, %p203;
	selp.b32 	%r125, %r1138, %r1097, %p203;
	selp.b32 	%r1139, %r1105, %r1101, %p203;
	shfl.sync.bfly.b32	%r1140, %r1139, 8, 31, -1;
	selp.b32 	%r126, %r1101, %r1140, %p203;
	selp.b32 	%r127, %r1140, %r1105, %p203;
	selp.b32 	%r1141, %r1113, %r1109, %p203;
	shfl.sync.bfly.b32	%r1142, %r1141, 8, 31, -1;
	selp.b32 	%r128, %r1109, %r1142, %p203;
	selp.b32 	%r129, %r1142, %r1113, %p203;
	selp.b32 	%r1143, %r1121, %r1117, %p203;
	shfl.sync.bfly.b32	%r1144, %r1143, 8, 31, -1;
	selp.b32 	%r130, %r1117, %r1144, %p203;
	selp.b32 	%r131, %r1144, %r1121, %p203;
	selp.b32 	%r1145, %r1129, %r1125, %p203;
	shfl.sync.bfly.b32	%r1146, %r1145, 8, 31, -1;
	selp.b32 	%r132, %r1125, %r1146, %p203;
	selp.b32 	%r133, %r1146, %r1129, %p203;
	setp.gt.u32 	%p218, %r115, 47;
	shl.b32 	%r1163, %r115, 13;
	@%p218 bra 	$L__BB0_117;
// %bb.86:                              // %guard_exit8057.pass7668_crit_edge
                                        //   in Loop: Header=BB0_83 Depth=1
	or.b32  	%r1154, %r1163, %r64;
	or.b32  	%r1184, %r1154, %r62;
	bra.uni 	$L__BB0_118;
$L__BB0_119:                            // %L17941
	st.global.u32 	[%rd4], %r1162;
	ret;
$L__BB0_7:                              // %L167
	mov.u32 	%r1161, 2;
	st.global.u32 	[%rd4], %r1161;
	mov.u64 	%rd141, exception1601;
	cvta.global.u64 	%rd142, %rd141;
	{ // callseq 4, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd142;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 4
	{ // callseq 5, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd30;
	st.param.b32 	[param0+8], %r135;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 5
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
$L__BB0_10:                             // %L275
	mov.u32 	%r1160, 3;
	st.global.u32 	[%rd4], %r1160;
	mov.u64 	%rd139, exception1601;
	cvta.global.u64 	%rd140, %rd139;
	{ // callseq 2, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd140;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 2
	{ // callseq 3, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd30;
	st.param.b32 	[param0+8], %r135;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 3
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
$L__BB0_1:                              // %L8
	mov.u64 	%rd35, exception1;
	cvta.global.u64 	%rd36, %rd35;
	{ // callseq 0, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd36;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 0
	{ // callseq 1, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd30;
	st.param.b32 	[param0+8], %r135;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 1
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
                                        // -- End function
}
