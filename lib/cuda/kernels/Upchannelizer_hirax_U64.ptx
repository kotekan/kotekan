// PTX kernel code for the CUDA upchannelizer
// This file has been generated automatically by `upchan.jl`.
// Do not modify this file, your changes will be lost.

// PTX CompilerJob of MethodInstance for upchan(::Int32, ::Int32, ::Int32, ::Int32, ::Int32, ::Int32, ::CuDeviceVector{Float16x2, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int32, 1}) for sm_86, minthreads=512, blocks_per_sm=2

//
// Generated by LLVM NVPTX Back-End
//

.version 8.2
.target sm_86
.address_size 64

	// .globl	_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE // -- Begin function _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE
.func gpu_report_exception
(
	.param .b64 gpu_report_exception_param_0
)
.noreturn
{
	trap;
}
.func gpu_signal_exception
(
	.param .align 8 .b8 gpu_signal_exception_param_0[16]
)
.noreturn
{
	trap;
}
.extern .shared .align 32 .b8 shmem[];
.global .align 1 .b8 exception3410[6] = {101, 114, 114, 111, 114, 0};
.global .align 1 .b8 exception13430[10] = {101, 120, 99, 101, 112, 116, 105, 111, 110, 0};
                                        // @_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE
.visible .entry _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE(
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_0[16],
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_1,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_2,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_3,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_4,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_5,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_6,
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_7[32],
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_8[32],
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_9[32],
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_10[32]
)
.reqntid 512, 1, 1
.minnctapersm 2
{
	.reg .pred 	%p<237>;
	.reg .b16 	%rs<1185>;
	.reg .b32 	%r<7982>;
	.reg .f32 	%f<832>;
	.reg .b64 	%rd<142>;

// %bb.0:                               // %conversion
	ld.param.u32 	%r151, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_0+8];
	ld.param.u64 	%rd30, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_0];
	// begin inline asm
	mov.u32 %r158, %dynamic_smem_size;
	// end inline asm
	setp.gt.u32 	%p1, %r158, 66815;
	@%p1 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:                              // %L19
	ld.param.u64 	%rd31, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_10];
	ld.param.u32 	%r152, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_1];
	mov.u32 	%r1, %tid.y;
	shl.b32 	%r2, %r1, 5;
	mov.u32 	%r3, %ctaid.x;
	shl.b32 	%r159, %r3, 9;
	mov.u32 	%r4, %tid.x;
	or.b32  	%r160, %r159, %r4;
	or.b32  	%r161, %r160, %r2;
	mul.wide.u32 	%rd37, %r161, 4;
	add.s64 	%rd4, %rd31, %rd37;
	mov.u32 	%r162, 1;
	st.global.u32 	[%rd4], %r162;
	setp.gt.u32 	%p2, %r152, 32767;
	@%p2 bra 	$L__BB0_7;
// %bb.3:                               // %L119
	ld.param.u32 	%r153, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_2];
	setp.lt.s32 	%p3, %r153, %r152;
	setp.gt.s32 	%p4, %r153, 65535;
	or.pred  	%p5, %p3, %p4;
	@%p5 bra 	$L__BB0_7;
// %bb.4:                               // %L126
	ld.param.u32 	%r154, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_3];
	sub.s32 	%r163, %r153, %r152;
	and.b32  	%r164, %r163, 255;
	setp.ne.s32 	%p6, %r164, 0;
	setp.gt.u32 	%p7, %r154, 511;
	or.pred  	%p8, %p6, %p7;
	@%p8 bra 	$L__BB0_7;
// %bb.5:                               // %L137
	ld.param.u32 	%r155, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_4];
	setp.lt.s32 	%p9, %r155, %r154;
	setp.gt.s32 	%p10, %r155, 1023;
	or.pred  	%p11, %p9, %p10;
	@%p11 bra 	$L__BB0_7;
// %bb.6:                               // %L144
	not.b32 	%r165, %r154;
	add.s32 	%r166, %r165, %r155;
	and.b32  	%r167, %r166, 3;
	setp.eq.s32 	%p12, %r167, 0;
	@%p12 bra 	$L__BB0_8;
	bra.uni 	$L__BB0_7;
$L__BB0_8:                              // %L260
	ld.param.u32 	%r156, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_5];
	setp.lt.s32 	%p13, %r156, 0;
	@%p13 bra 	$L__BB0_10;
// %bb.9:                               // %L262
	ld.param.u32 	%r157, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_6];
	setp.le.s32 	%p14, %r156, %r157;
	setp.lt.s32 	%p15, %r157, 65;
	and.pred  	%p16, %p14, %p15;
	@%p16 bra 	$L__BB0_11;
	bra.uni 	$L__BB0_10;
$L__BB0_11:                             // %pass180
	bfe.u32 	%r102, %r4, 2, 1;
	shr.u32 	%r103, %r4, 4;
	shl.b32 	%r176, %r103, 1;
	shl.b32 	%r177, %r102, 2;
	shl.b32 	%r178, %r4, 3;
	and.b32  	%r179, %r178, 24;
	or.b32  	%r180, %r177, %r179;
	or.b32  	%r181, %r176, %r180;
	bfe.u32 	%r182, %r4, 3, 1;
	or.b32  	%r105, %r182, %r181;
	or.b32  	%r106, %r105, 32;
	mov.f32 	%f145, 0f40000000;
	mov.f32 	%f146, 0f437F0000;
	div.approx.f32 	%f85, %f146, %f145;
	cvt.rn.f32.s32 	%f147, %r105;
	sub.f32 	%f148, %f147, %f85;
	mov.f32 	%f177, 0f42800000;
	div.approx.f32 	%f87, %f148, %f177;
	setp.ne.f32 	%p22, %f87, 0f00000000;
	mov.f32 	%f807, 0f3F800000;
	mov.f32 	%f800, %f807;
	@%p22 bra 	$L__BB0_12;
	bra.uni 	$L__BB0_13;
$L__BB0_12:                             // %L604
	sin.approx.f32 	%f178, %f87;
	div.approx.f32 	%f800, %f178, %f87;
$L__BB0_13:                             // %L607
	cvt.rn.f32.s32 	%f181, %r106;
	sub.f32 	%f182, %f181, %f85;
	div.approx.f32 	%f5, %f182, %f177;
	setp.eq.f32 	%p28, %f5, 0f00000000;
	mov.f32 	%f801, %f807;
	@%p28 bra 	$L__BB0_15;
// %bb.14:                              // %L624
	sin.approx.f32 	%f212, %f5;
	div.approx.f32 	%f801, %f212, %f5;
$L__BB0_15:                             // %L627
	or.b32  	%r200, %r105, 64;
	or.b32  	%r6, %r105, 96;
	cvt.rn.f32.s32 	%f216, %r200;
	sub.f32 	%f217, %f216, %f85;
	div.approx.f32 	%f9, %f217, %f177;
	setp.eq.f32 	%p34, %f9, 0f00000000;
	mov.f32 	%f802, %f807;
	@%p34 bra 	$L__BB0_17;
// %bb.16:                              // %L706
	sin.approx.f32 	%f247, %f9;
	div.approx.f32 	%f802, %f247, %f9;
$L__BB0_17:                             // %L709
	cvt.rn.f32.s32 	%f250, %r6;
	sub.f32 	%f251, %f250, %f85;
	div.approx.f32 	%f14, %f251, %f177;
	setp.eq.f32 	%p40, %f14, 0f00000000;
	mov.f32 	%f803, %f807;
	@%p40 bra 	$L__BB0_19;
// %bb.18:                              // %L726
	sin.approx.f32 	%f281, %f14;
	div.approx.f32 	%f803, %f281, %f14;
$L__BB0_19:                             // %L729
	or.b32  	%r218, %r105, 128;
	or.b32  	%r8, %r105, 160;
	cvt.rn.f32.s32 	%f285, %r218;
	sub.f32 	%f286, %f285, %f85;
	div.approx.f32 	%f18, %f286, %f177;
	setp.eq.f32 	%p46, %f18, 0f00000000;
	mov.f32 	%f804, %f807;
	@%p46 bra 	$L__BB0_21;
// %bb.20:                              // %L808
	sin.approx.f32 	%f316, %f18;
	div.approx.f32 	%f804, %f316, %f18;
$L__BB0_21:                             // %L811
	cvt.rn.f32.s32 	%f319, %r8;
	sub.f32 	%f320, %f319, %f85;
	div.approx.f32 	%f23, %f320, %f177;
	setp.eq.f32 	%p52, %f23, 0f00000000;
	mov.f32 	%f805, %f807;
	@%p52 bra 	$L__BB0_23;
// %bb.22:                              // %L828
	sin.approx.f32 	%f350, %f23;
	div.approx.f32 	%f805, %f350, %f23;
$L__BB0_23:                             // %L831
	or.b32  	%r236, %r105, 192;
	or.b32  	%r10, %r105, 224;
	cvt.rn.f32.s32 	%f354, %r236;
	sub.f32 	%f355, %f354, %f85;
	div.approx.f32 	%f27, %f355, %f177;
	setp.eq.f32 	%p58, %f27, 0f00000000;
	mov.f32 	%f806, %f807;
	@%p58 bra 	$L__BB0_25;
// %bb.24:                              // %L910
	sin.approx.f32 	%f385, %f27;
	div.approx.f32 	%f806, %f385, %f27;
$L__BB0_25:                             // %L913
	shr.u32 	%r101, %r4, 1;
	shr.u32 	%r104, %r4, 3;
	cvt.rn.f32.s32 	%f388, %r10;
	sub.f32 	%f389, %f388, %f85;
	div.approx.f32 	%f32, %f389, %f177;
	setp.eq.f32 	%p64, %f32, 0f00000000;
	@%p64 bra 	$L__BB0_27;
// %bb.26:                              // %L930
	sin.approx.f32 	%f419, %f32;
	div.approx.f32 	%f807, %f419, %f32;
$L__BB0_27:                             // %L933
	and.b32  	%r280, %r4, 3;
	and.b32  	%r281, %r104, 2;
	and.b32  	%r282, %r101, 4;
	or.b32  	%r283, %r102, %r281;
	or.b32  	%r14, %r283, %r282;
	mul.lo.s32 	%r284, %r280, %r14;
	shl.b32 	%r285, %r284, 1;
	neg.s32 	%r286, %r285;
	cvt.rn.f32.s32 	%f35, %r286;
	mov.f32 	%f490, 0f41000000;
	div.approx.f32 	%f36, %f35, %f490;
	abs.f32 	%f830, %f36;
	setp.lt.f32 	%p79, %f830, 0f40000000;
	setp.gtu.f32 	%p235, %f830, 0f4B800000;
	mov.f32 	%f822, %f830;
	@%p79 bra 	$L__BB0_97;
// %bb.28:
	@%p235 bra 	$L__BB0_93;
	bra.uni 	$L__BB0_29;
$L__BB0_93:
	mov.b32 	%r108, %f830;
	and.b32  	%r287, %r108, 8388607;
	or.b32  	%r7976, %r287, 1065353216;
	mov.b32 	%f821, %r7976;
	add.s32 	%r288, %r108, -1073741824;
	and.b32  	%r7977, %r288, -8388608;
	setp.eq.s32 	%p86, %r7977, 0;
	@%p86 bra 	$L__BB0_96;
// %bb.94:                              // %__nv_fmaf_rn.exit4.i.i.i923.preheader
	mov.f32 	%f500, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f499,%f500;
	// end inline asm
$L__BB0_95:                             // %__nv_fmaf_rn.exit4.i.i.i923
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r289, %r7977, 192937984;
	add.s32 	%r290, %r7976, %r289;
	mov.b32 	%f501, %r290;
	mul.f32 	%f502, %f499, %f501;
	sub.f32 	%f503, %f501, %f502;
	fma.rn.f32 	%f504, %f503, %f499, %f502;
	sub.f32 	%f505, %f501, %f504;
	fma.rz.f32 	%f506, %f505, %f499, %f504;
	cvt.rzi.f32.f32 	%f507, %f506;
	sub.f32 	%f821, %f501, %f507;
	sub.s32 	%r7977, %r7977, %r289;
	mov.b32 	%r7976, %f821;
	setp.ne.s32 	%p87, %r7977, 0;
	setp.ne.s32 	%p88, %r7976, 0;
	and.pred  	%p89, %p87, %p88;
	@%p89 bra 	$L__BB0_95;
$L__BB0_96:                             // %__internal_fmodf_slowpath_mod.exit.i.i925
	setp.gt.u32 	%p90, %r108, 2139095039;
	selp.f32 	%f508, 0f7FFFFFFF, 0f4B800000, %p90;
	mul.f32 	%f509, %f821, 0f34000000;
	mul.f32 	%f822, %f508, %f509;
	bra.uni 	$L__BB0_97;
$L__BB0_29:                             // %__nv_fast_fdividef.exit.i.i.i902
	div.approx.f32 	%f492, %f830, %f145;
	cvt.rzi.f32.f32 	%f820, %f492;
	fma.rn.f32 	%f89, %f820, 0fC0000000, %f830;
	mov.b32 	%r107, %f89;
	setp.lt.u32 	%p81, %r107, 1073741824;
	@%p81 bra 	$L__BB0_92;
// %bb.30:
	setp.lt.u32 	%p82, %r107, -2147483647;
	@%p82 bra 	$L__BB0_90;
// %bb.31:
	add.f32 	%f497, %f820, 0fBF800000;
	setp.lt.f32 	%p85, %f89, 0fC0000000;
	add.f32 	%f498, %f497, 0fBF800000;
	selp.f32 	%f820, %f498, %f497, %p85;
	bra.uni 	$L__BB0_92;
$L__BB0_90:
	add.f32 	%f820, %f820, 0f3F800000;
	setp.ltu.f32 	%p83, %f89, 0f40800000;
	@%p83 bra 	$L__BB0_92;
// %bb.91:                              // %__nv_fmaf_rn.exit.i.i.i906
	add.f32 	%f493, %f820, 0f3F800000;
	fma.rn.f32 	%f495, %f145, 0fC0400000, %f89;
	setp.ge.f32 	%p84, %f495, 0f00000000;
	add.f32 	%f496, %f493, 0f3F800000;
	selp.f32 	%f820, %f496, %f493, %p84;
$L__BB0_92:                             // %__internal_fmodf_fastpath_quot.exit.i.i909
	fma.rn.f32 	%f822, %f820, 0fC0000000, %f830;
$L__BB0_97:                             // %__internal_fmodf_kernel.exit.i928
	shl.b32 	%r97, %r4, 1;
	abs.f32 	%f510, %f822;
	setp.gtu.f32 	%p91, %f510, 0f7F800000;
	mov.b32 	%r291, %f36;
	and.b32  	%r115, %r291, -2147483648;
	@%p91 bra 	$L__BB0_99;
// %bb.98:
	mov.b32 	%r292, %f822;
	or.b32  	%r293, %r115, %r292;
	mov.b32 	%f822, %r293;
$L__BB0_99:                             // %__nv_fmodf.exit929
	and.b32  	%r302, %r97, 6;
	mov.u32 	%r303, -8;
	sub.s32 	%r304, %r303, %r302;
	mul.lo.s32 	%r305, %r14, %r304;
	cvt.rn.f32.s32 	%f105, %r305;
	div.approx.f32 	%f106, %f105, %f490;
	abs.f32 	%f818, %f106;
	setp.lt.f32 	%p99, %f818, 0f40000000;
	setp.gtu.f32 	%p236, %f818, 0f4B800000;
	mov.f32 	%f810, %f818;
	@%p99 bra 	$L__BB0_43;
// %bb.32:
	@%p236 bra 	$L__BB0_39;
	bra.uni 	$L__BB0_33;
$L__BB0_39:
	mov.b32 	%r16, %f818;
	and.b32  	%r306, %r16, 8388607;
	or.b32  	%r7943, %r306, 1065353216;
	mov.b32 	%f809, %r7943;
	add.s32 	%r307, %r16, -1073741824;
	and.b32  	%r7944, %r307, -8388608;
	setp.eq.s32 	%p106, %r7944, 0;
	@%p106 bra 	$L__BB0_42;
// %bb.40:                              // %__nv_fmaf_rn.exit4.i.i.i.preheader
	mov.f32 	%f551, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f550,%f551;
	// end inline asm
$L__BB0_41:                             // %__nv_fmaf_rn.exit4.i.i.i
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r308, %r7944, 192937984;
	add.s32 	%r309, %r7943, %r308;
	mov.b32 	%f552, %r309;
	mul.f32 	%f553, %f550, %f552;
	sub.f32 	%f554, %f552, %f553;
	fma.rn.f32 	%f555, %f554, %f550, %f553;
	sub.f32 	%f556, %f552, %f555;
	fma.rz.f32 	%f557, %f556, %f550, %f555;
	cvt.rzi.f32.f32 	%f558, %f557;
	sub.f32 	%f809, %f552, %f558;
	sub.s32 	%r7944, %r7944, %r308;
	mov.b32 	%r7943, %f809;
	setp.ne.s32 	%p107, %r7944, 0;
	setp.ne.s32 	%p108, %r7943, 0;
	and.pred  	%p109, %p107, %p108;
	@%p109 bra 	$L__BB0_41;
$L__BB0_42:                             // %__internal_fmodf_slowpath_mod.exit.i.i
	setp.gt.u32 	%p110, %r16, 2139095039;
	selp.f32 	%f559, 0f7FFFFFFF, 0f4B800000, %p110;
	mul.f32 	%f560, %f809, 0f34000000;
	mul.f32 	%f810, %f559, %f560;
	bra.uni 	$L__BB0_43;
$L__BB0_33:                             // %__nv_fast_fdividef.exit.i.i.i
	div.approx.f32 	%f543, %f818, %f145;
	cvt.rzi.f32.f32 	%f808, %f543;
	fma.rn.f32 	%f39, %f808, 0fC0000000, %f818;
	mov.b32 	%r15, %f39;
	setp.lt.u32 	%p101, %r15, 1073741824;
	@%p101 bra 	$L__BB0_38;
// %bb.34:
	setp.lt.u32 	%p102, %r15, -2147483647;
	@%p102 bra 	$L__BB0_36;
// %bb.35:
	add.f32 	%f548, %f808, 0fBF800000;
	setp.lt.f32 	%p105, %f39, 0fC0000000;
	add.f32 	%f549, %f548, 0fBF800000;
	selp.f32 	%f808, %f549, %f548, %p105;
	bra.uni 	$L__BB0_38;
$L__BB0_36:
	add.f32 	%f808, %f808, 0f3F800000;
	setp.ltu.f32 	%p103, %f39, 0f40800000;
	@%p103 bra 	$L__BB0_38;
// %bb.37:                              // %__nv_fmaf_rn.exit.i.i.i
	add.f32 	%f544, %f808, 0f3F800000;
	fma.rn.f32 	%f546, %f145, 0fC0400000, %f39;
	setp.ge.f32 	%p104, %f546, 0f00000000;
	add.f32 	%f547, %f544, 0f3F800000;
	selp.f32 	%f808, %f547, %f544, %p104;
$L__BB0_38:                             // %__internal_fmodf_fastpath_quot.exit.i.i
	fma.rn.f32 	%f810, %f808, 0fC0000000, %f818;
$L__BB0_43:                             // %__internal_fmodf_kernel.exit.i
	abs.f32 	%f561, %f810;
	setp.gtu.f32 	%p111, %f561, 0f7F800000;
	mov.b32 	%r310, %f106;
	and.b32  	%r23, %r310, -2147483648;
	@%p111 bra 	$L__BB0_45;
// %bb.44:
	mov.b32 	%r311, %f810;
	or.b32  	%r312, %r23, %r311;
	mov.b32 	%f810, %r312;
$L__BB0_45:                             // %__nv_fmodf.exit
	div.approx.f32 	%f53, %f35, %f177;
	abs.f32 	%f826, %f53;
	setp.lt.f32 	%p119, %f826, 0f40000000;
	@%p119 bra 	$L__BB0_107;
// %bb.46:
	setp.gtu.f32 	%p120, %f826, 0f4B800000;
	@%p120 bra 	$L__BB0_103;
	bra.uni 	$L__BB0_47;
$L__BB0_103:
	mov.b32 	%r117, %f826;
	and.b32  	%r333, %r117, 8388607;
	or.b32  	%r7978, %r333, 1065353216;
	mov.b32 	%f825, %r7978;
	add.s32 	%r334, %r117, -1073741824;
	and.b32  	%r7979, %r334, -8388608;
	setp.eq.s32 	%p126, %r7979, 0;
	@%p126 bra 	$L__BB0_106;
// %bb.104:                             // %__nv_fmaf_rn.exit4.i.i.i954.preheader
	mov.f32 	%f604, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f603,%f604;
	// end inline asm
$L__BB0_105:                            // %__nv_fmaf_rn.exit4.i.i.i954
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r335, %r7979, 192937984;
	add.s32 	%r336, %r7978, %r335;
	mov.b32 	%f605, %r336;
	mul.f32 	%f606, %f603, %f605;
	sub.f32 	%f607, %f605, %f606;
	fma.rn.f32 	%f608, %f607, %f603, %f606;
	sub.f32 	%f609, %f605, %f608;
	fma.rz.f32 	%f610, %f609, %f603, %f608;
	cvt.rzi.f32.f32 	%f611, %f610;
	sub.f32 	%f825, %f605, %f611;
	sub.s32 	%r7979, %r7979, %r335;
	mov.b32 	%r7978, %f825;
	setp.ne.s32 	%p127, %r7979, 0;
	setp.ne.s32 	%p128, %r7978, 0;
	and.pred  	%p129, %p127, %p128;
	@%p129 bra 	$L__BB0_105;
$L__BB0_106:                            // %__internal_fmodf_slowpath_mod.exit.i.i956
	setp.gt.u32 	%p130, %r117, 2139095039;
	selp.f32 	%f612, 0f7FFFFFFF, 0f4B800000, %p130;
	mul.f32 	%f613, %f825, 0f34000000;
	mul.f32 	%f826, %f612, %f613;
	bra.uni 	$L__BB0_107;
$L__BB0_47:                             // %__nv_fast_fdividef.exit.i.i.i933
	div.approx.f32 	%f596, %f826, %f145;
	cvt.rzi.f32.f32 	%f824, %f596;
	fma.rn.f32 	%f109, %f824, 0fC0000000, %f826;
	mov.b32 	%r116, %f109;
	setp.lt.u32 	%p121, %r116, 1073741824;
	@%p121 bra 	$L__BB0_102;
// %bb.48:
	setp.lt.u32 	%p122, %r116, -2147483647;
	@%p122 bra 	$L__BB0_100;
// %bb.49:
	add.f32 	%f601, %f824, 0fBF800000;
	setp.lt.f32 	%p125, %f109, 0fC0000000;
	add.f32 	%f602, %f601, 0fBF800000;
	selp.f32 	%f824, %f602, %f601, %p125;
	bra.uni 	$L__BB0_102;
$L__BB0_100:
	add.f32 	%f824, %f824, 0f3F800000;
	setp.ltu.f32 	%p123, %f109, 0f40800000;
	@%p123 bra 	$L__BB0_102;
// %bb.101:                             // %__nv_fmaf_rn.exit.i.i.i937
	add.f32 	%f597, %f824, 0f3F800000;
	fma.rn.f32 	%f599, %f145, 0fC0400000, %f109;
	setp.ge.f32 	%p124, %f599, 0f00000000;
	add.f32 	%f600, %f597, 0f3F800000;
	selp.f32 	%f824, %f600, %f597, %p124;
$L__BB0_102:                            // %__internal_fmodf_fastpath_quot.exit.i.i940
	fma.rn.f32 	%f826, %f824, 0fC0000000, %f826;
$L__BB0_107:                            // %__internal_fmodf_kernel.exit.i959
	abs.f32 	%f614, %f826;
	setp.gtu.f32 	%p131, %f614, 0f7F800000;
	@%p131 bra 	$L__BB0_109;
// %bb.108:
	mov.b32 	%r337, %f53;
	and.b32  	%r338, %r337, -2147483648;
	mov.b32 	%r339, %f826;
	or.b32  	%r340, %r338, %r339;
	mov.b32 	%f826, %r340;
$L__BB0_109:                            // %__nv_fmodf.exit960
	div.approx.f32 	%f125, %f105, %f177;
	abs.f32 	%f814, %f125;
	setp.lt.f32 	%p139, %f814, 0f40000000;
	@%p139 bra 	$L__BB0_61;
// %bb.50:
	setp.gtu.f32 	%p140, %f814, 0f4B800000;
	@%p140 bra 	$L__BB0_57;
	bra.uni 	$L__BB0_51;
$L__BB0_57:
	mov.b32 	%r29, %f814;
	and.b32  	%r349, %r29, 8388607;
	or.b32  	%r7945, %r349, 1065353216;
	mov.b32 	%f813, %r7945;
	add.s32 	%r350, %r29, -1073741824;
	and.b32  	%r7946, %r350, -8388608;
	setp.eq.s32 	%p146, %r7946, 0;
	@%p146 bra 	$L__BB0_60;
// %bb.58:                              // %__nv_fmaf_rn.exit4.i.i.i861.preheader
	mov.f32 	%f655, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f654,%f655;
	// end inline asm
$L__BB0_59:                             // %__nv_fmaf_rn.exit4.i.i.i861
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r351, %r7946, 192937984;
	add.s32 	%r352, %r7945, %r351;
	mov.b32 	%f656, %r352;
	mul.f32 	%f657, %f654, %f656;
	sub.f32 	%f658, %f656, %f657;
	fma.rn.f32 	%f659, %f658, %f654, %f657;
	sub.f32 	%f660, %f656, %f659;
	fma.rz.f32 	%f661, %f660, %f654, %f659;
	cvt.rzi.f32.f32 	%f662, %f661;
	sub.f32 	%f813, %f656, %f662;
	sub.s32 	%r7946, %r7946, %r351;
	mov.b32 	%r7945, %f813;
	setp.ne.s32 	%p147, %r7946, 0;
	setp.ne.s32 	%p148, %r7945, 0;
	and.pred  	%p149, %p147, %p148;
	@%p149 bra 	$L__BB0_59;
$L__BB0_60:                             // %__internal_fmodf_slowpath_mod.exit.i.i863
	setp.gt.u32 	%p150, %r29, 2139095039;
	selp.f32 	%f663, 0f7FFFFFFF, 0f4B800000, %p150;
	mul.f32 	%f664, %f813, 0f34000000;
	mul.f32 	%f814, %f663, %f664;
	bra.uni 	$L__BB0_61;
$L__BB0_51:                             // %__nv_fast_fdividef.exit.i.i.i840
	div.approx.f32 	%f647, %f814, %f145;
	cvt.rzi.f32.f32 	%f812, %f647;
	fma.rn.f32 	%f56, %f812, 0fC0000000, %f814;
	mov.b32 	%r28, %f56;
	setp.lt.u32 	%p141, %r28, 1073741824;
	@%p141 bra 	$L__BB0_56;
// %bb.52:
	setp.lt.u32 	%p142, %r28, -2147483647;
	@%p142 bra 	$L__BB0_54;
// %bb.53:
	add.f32 	%f652, %f812, 0fBF800000;
	setp.lt.f32 	%p145, %f56, 0fC0000000;
	add.f32 	%f653, %f652, 0fBF800000;
	selp.f32 	%f812, %f653, %f652, %p145;
	bra.uni 	$L__BB0_56;
$L__BB0_54:
	add.f32 	%f812, %f812, 0f3F800000;
	setp.ltu.f32 	%p143, %f56, 0f40800000;
	@%p143 bra 	$L__BB0_56;
// %bb.55:                              // %__nv_fmaf_rn.exit.i.i.i844
	add.f32 	%f648, %f812, 0f3F800000;
	fma.rn.f32 	%f650, %f145, 0fC0400000, %f56;
	setp.ge.f32 	%p144, %f650, 0f00000000;
	add.f32 	%f651, %f648, 0f3F800000;
	selp.f32 	%f812, %f651, %f648, %p144;
$L__BB0_56:                             // %__internal_fmodf_fastpath_quot.exit.i.i847
	fma.rn.f32 	%f814, %f812, 0fC0000000, %f814;
$L__BB0_61:                             // %__internal_fmodf_kernel.exit.i866
	abs.f32 	%f665, %f814;
	setp.gtu.f32 	%p151, %f665, 0f7F800000;
	@%p151 bra 	$L__BB0_63;
// %bb.62:
	mov.b32 	%r353, %f125;
	and.b32  	%r354, %r353, -2147483648;
	mov.b32 	%r355, %f814;
	or.b32  	%r356, %r354, %r355;
	mov.b32 	%f814, %r356;
$L__BB0_63:                             // %__nv_fmodf.exit867
	@%p79 bra 	$L__BB0_117;
// %bb.64:
	@%p235 bra 	$L__BB0_113;
	bra.uni 	$L__BB0_65;
$L__BB0_113:
	mov.b32 	%r125, %f830;
	and.b32  	%r371, %r125, 8388607;
	or.b32  	%r7980, %r371, 1065353216;
	mov.b32 	%f829, %r7980;
	add.s32 	%r372, %r125, -1073741824;
	and.b32  	%r7981, %r372, -8388608;
	setp.eq.s32 	%p166, %r7981, 0;
	@%p166 bra 	$L__BB0_116;
// %bb.114:                             // %__nv_fmaf_rn.exit4.i.i.i985.preheader
	mov.f32 	%f707, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f706,%f707;
	// end inline asm
$L__BB0_115:                            // %__nv_fmaf_rn.exit4.i.i.i985
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r373, %r7981, 192937984;
	add.s32 	%r374, %r7980, %r373;
	mov.b32 	%f708, %r374;
	mul.f32 	%f709, %f706, %f708;
	sub.f32 	%f710, %f708, %f709;
	fma.rn.f32 	%f711, %f710, %f706, %f709;
	sub.f32 	%f712, %f708, %f711;
	fma.rz.f32 	%f713, %f712, %f706, %f711;
	cvt.rzi.f32.f32 	%f714, %f713;
	sub.f32 	%f829, %f708, %f714;
	sub.s32 	%r7981, %r7981, %r373;
	mov.b32 	%r7980, %f829;
	setp.ne.s32 	%p167, %r7981, 0;
	setp.ne.s32 	%p168, %r7980, 0;
	and.pred  	%p169, %p167, %p168;
	@%p169 bra 	$L__BB0_115;
$L__BB0_116:                            // %__internal_fmodf_slowpath_mod.exit.i.i987
	setp.gt.u32 	%p170, %r125, 2139095039;
	selp.f32 	%f715, 0f7FFFFFFF, 0f4B800000, %p170;
	mul.f32 	%f716, %f829, 0f34000000;
	mul.f32 	%f830, %f715, %f716;
	bra.uni 	$L__BB0_117;
$L__BB0_65:                             // %__nv_fast_fdividef.exit.i.i.i964
	div.approx.f32 	%f699, %f830, %f145;
	cvt.rzi.f32.f32 	%f828, %f699;
	fma.rn.f32 	%f128, %f828, 0fC0000000, %f830;
	mov.b32 	%r124, %f128;
	setp.lt.u32 	%p161, %r124, 1073741824;
	@%p161 bra 	$L__BB0_112;
// %bb.66:
	setp.lt.u32 	%p162, %r124, -2147483647;
	@%p162 bra 	$L__BB0_110;
// %bb.67:
	add.f32 	%f704, %f828, 0fBF800000;
	setp.lt.f32 	%p165, %f128, 0fC0000000;
	add.f32 	%f705, %f704, 0fBF800000;
	selp.f32 	%f828, %f705, %f704, %p165;
	bra.uni 	$L__BB0_112;
$L__BB0_110:
	add.f32 	%f828, %f828, 0f3F800000;
	setp.ltu.f32 	%p163, %f128, 0f40800000;
	@%p163 bra 	$L__BB0_112;
// %bb.111:                             // %__nv_fmaf_rn.exit.i.i.i968
	add.f32 	%f700, %f828, 0f3F800000;
	fma.rn.f32 	%f702, %f145, 0fC0400000, %f128;
	setp.ge.f32 	%p164, %f702, 0f00000000;
	add.f32 	%f703, %f700, 0f3F800000;
	selp.f32 	%f828, %f703, %f700, %p164;
$L__BB0_112:                            // %__internal_fmodf_fastpath_quot.exit.i.i971
	fma.rn.f32 	%f830, %f828, 0fC0000000, %f830;
$L__BB0_117:                            // %__internal_fmodf_kernel.exit.i990
	abs.f32 	%f717, %f830;
	setp.gtu.f32 	%p171, %f717, 0f7F800000;
	@%p171 bra 	$L__BB0_119;
// %bb.118:
	mov.b32 	%r375, %f830;
	or.b32  	%r376, %r115, %r375;
	mov.b32 	%f830, %r376;
$L__BB0_119:                            // %__nv_fmodf.exit991
	@%p99 bra 	$L__BB0_79;
// %bb.68:
	@%p236 bra 	$L__BB0_75;
	bra.uni 	$L__BB0_69;
$L__BB0_75:
	mov.b32 	%r39, %f818;
	and.b32  	%r385, %r39, 8388607;
	or.b32  	%r7947, %r385, 1065353216;
	mov.b32 	%f817, %r7947;
	add.s32 	%r386, %r39, -1073741824;
	and.b32  	%r7948, %r386, -8388608;
	setp.eq.s32 	%p186, %r7948, 0;
	@%p186 bra 	$L__BB0_78;
// %bb.76:                              // %__nv_fmaf_rn.exit4.i.i.i892.preheader
	mov.f32 	%f757, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f756,%f757;
	// end inline asm
$L__BB0_77:                             // %__nv_fmaf_rn.exit4.i.i.i892
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r387, %r7948, 192937984;
	add.s32 	%r388, %r7947, %r387;
	mov.b32 	%f758, %r388;
	mul.f32 	%f759, %f756, %f758;
	sub.f32 	%f760, %f758, %f759;
	fma.rn.f32 	%f761, %f760, %f756, %f759;
	sub.f32 	%f762, %f758, %f761;
	fma.rz.f32 	%f763, %f762, %f756, %f761;
	cvt.rzi.f32.f32 	%f764, %f763;
	sub.f32 	%f817, %f758, %f764;
	sub.s32 	%r7948, %r7948, %r387;
	mov.b32 	%r7947, %f817;
	setp.ne.s32 	%p187, %r7948, 0;
	setp.ne.s32 	%p188, %r7947, 0;
	and.pred  	%p189, %p187, %p188;
	@%p189 bra 	$L__BB0_77;
$L__BB0_78:                             // %__internal_fmodf_slowpath_mod.exit.i.i894
	setp.gt.u32 	%p190, %r39, 2139095039;
	selp.f32 	%f765, 0f7FFFFFFF, 0f4B800000, %p190;
	mul.f32 	%f766, %f817, 0f34000000;
	mul.f32 	%f818, %f765, %f766;
	bra.uni 	$L__BB0_79;
$L__BB0_69:                             // %__nv_fast_fdividef.exit.i.i.i871
	div.approx.f32 	%f749, %f818, %f145;
	cvt.rzi.f32.f32 	%f816, %f749;
	fma.rn.f32 	%f71, %f816, 0fC0000000, %f818;
	mov.b32 	%r38, %f71;
	setp.lt.u32 	%p181, %r38, 1073741824;
	@%p181 bra 	$L__BB0_74;
// %bb.70:
	setp.lt.u32 	%p182, %r38, -2147483647;
	@%p182 bra 	$L__BB0_72;
// %bb.71:
	add.f32 	%f754, %f816, 0fBF800000;
	setp.lt.f32 	%p185, %f71, 0fC0000000;
	add.f32 	%f755, %f754, 0fBF800000;
	selp.f32 	%f816, %f755, %f754, %p185;
	bra.uni 	$L__BB0_74;
$L__BB0_72:
	add.f32 	%f816, %f816, 0f3F800000;
	setp.ltu.f32 	%p183, %f71, 0f40800000;
	@%p183 bra 	$L__BB0_74;
// %bb.73:                              // %__nv_fmaf_rn.exit.i.i.i875
	add.f32 	%f750, %f816, 0f3F800000;
	fma.rn.f32 	%f752, %f145, 0fC0400000, %f71;
	setp.ge.f32 	%p184, %f752, 0f00000000;
	add.f32 	%f753, %f750, 0f3F800000;
	selp.f32 	%f816, %f753, %f750, %p184;
$L__BB0_74:                             // %__internal_fmodf_fastpath_quot.exit.i.i878
	fma.rn.f32 	%f818, %f816, 0fC0000000, %f818;
$L__BB0_79:                             // %__internal_fmodf_kernel.exit.i897
	abs.f32 	%f767, %f818;
	setp.gtu.f32 	%p191, %f767, 0f7F800000;
	@%p191 bra 	$L__BB0_81;
// %bb.80:
	mov.b32 	%r389, %f818;
	or.b32  	%r390, %r23, %r389;
	mov.b32 	%f818, %r390;
$L__BB0_81:                             // %__nv_fmodf.exit898
	setp.le.s32 	%p199, %r153, %r152;
	mov.u32 	%r7941, 0;
	@%p199 bra 	$L__BB0_89;
// %bb.82:                              // %L1450.lr.ph
	mov.f32 	%f149, 0f43808000;
	mul.lo.s32 	%r260, %r105, 63;
	div.approx.f32 	%f150, %f148, %f149;
	div.approx.f32 	%f184, %f182, %f149;
	div.approx.f32 	%f219, %f217, %f149;
	div.approx.f32 	%f253, %f251, %f149;
	div.approx.f32 	%f288, %f286, %f149;
	div.approx.f32 	%f322, %f320, %f149;
	div.approx.f32 	%f357, %f355, %f149;
	div.approx.f32 	%f391, %f389, %f149;
	add.s32 	%r270, %r260, 96;
	abs.f32 	%f151, %f150;
	abs.f32 	%f185, %f184;
	abs.f32 	%f220, %f219;
	abs.f32 	%f254, %f253;
	abs.f32 	%f289, %f288;
	abs.f32 	%f323, %f322;
	abs.f32 	%f358, %f357;
	abs.f32 	%f392, %f391;
	and.b32  	%r261, %r260, 127;
	and.b32  	%r271, %r270, 127;
	setp.gt.f32 	%p17, %f151, 0f4B800000;
	mul.f32 	%f152, %f150, 0f00000000;
	setp.gt.f32 	%p23, %f185, 0f4B800000;
	mul.f32 	%f186, %f184, 0f00000000;
	setp.gt.f32 	%p29, %f220, 0f4B800000;
	mul.f32 	%f221, %f219, 0f00000000;
	setp.gt.f32 	%p35, %f254, 0f4B800000;
	mul.f32 	%f255, %f253, 0f00000000;
	setp.gt.f32 	%p41, %f289, 0f4B800000;
	mul.f32 	%f290, %f288, 0f00000000;
	setp.gt.f32 	%p47, %f323, 0f4B800000;
	mul.f32 	%f324, %f322, 0f00000000;
	setp.gt.f32 	%p53, %f358, 0f4B800000;
	mul.f32 	%f359, %f357, 0f00000000;
	setp.gt.f32 	%p59, %f392, 0f4B800000;
	mul.f32 	%f393, %f391, 0f00000000;
	cvt.rn.f32.s32 	%f422, %r261;
	cvt.rn.f32.s32 	%f457, %r271;
	selp.f32 	%f153, %f152, %f150, %p17;
	selp.f32 	%f187, %f186, %f184, %p23;
	selp.f32 	%f222, %f221, %f219, %p29;
	selp.f32 	%f256, %f255, %f253, %p35;
	selp.f32 	%f291, %f290, %f288, %p41;
	selp.f32 	%f325, %f324, %f322, %p47;
	selp.f32 	%f360, %f359, %f357, %p53;
	selp.f32 	%f394, %f393, %f391, %p59;
	div.approx.f32 	%f424, %f422, %f177;
	div.approx.f32 	%f458, %f457, %f177;
	add.f32 	%f154, %f153, %f153;
	add.f32 	%f188, %f187, %f187;
	add.f32 	%f223, %f222, %f222;
	add.f32 	%f257, %f256, %f256;
	add.f32 	%f292, %f291, %f291;
	add.f32 	%f326, %f325, %f325;
	add.f32 	%f361, %f360, %f360;
	add.f32 	%f395, %f394, %f394;
	add.f32 	%f425, %f424, %f424;
	add.f32 	%f459, %f458, %f458;
	add.f32 	%f511, %f822, %f822;
	add.f32 	%f562, %f810, %f810;
	mov.b32 	%r183, %f154;
	mov.b32 	%r190, %f188;
	mov.b32 	%r201, %f223;
	mov.b32 	%r208, %f257;
	mov.b32 	%r219, %f292;
	mov.b32 	%r226, %f326;
	mov.b32 	%r237, %f361;
	mov.b32 	%r244, %f395;
	mov.b32 	%r262, %f425;
	mov.b32 	%r272, %f459;
	mov.b32 	%r294, %f511;
	mov.b32 	%r325, %f562;
	and.b32  	%r184, %r183, -2147483648;
	and.b32  	%r191, %r190, -2147483648;
	and.b32  	%r202, %r201, -2147483648;
	and.b32  	%r209, %r208, -2147483648;
	and.b32  	%r220, %r219, -2147483648;
	and.b32  	%r227, %r226, -2147483648;
	and.b32  	%r238, %r237, -2147483648;
	and.b32  	%r245, %r244, -2147483648;
	and.b32  	%r263, %r262, -2147483648;
	and.b32  	%r273, %r272, -2147483648;
	and.b32  	%r295, %r294, -2147483648;
	and.b32  	%r326, %r325, -2147483648;
	add.f32 	%f615, %f826, %f826;
	add.f32 	%f666, %f814, %f814;
	or.b32  	%r185, %r184, 1056964608;
	or.b32  	%r192, %r191, 1056964608;
	or.b32  	%r203, %r202, 1056964608;
	or.b32  	%r210, %r209, 1056964608;
	or.b32  	%r221, %r220, 1056964608;
	or.b32  	%r228, %r227, 1056964608;
	or.b32  	%r239, %r238, 1056964608;
	or.b32  	%r246, %r245, 1056964608;
	or.b32  	%r264, %r263, 1056964608;
	or.b32  	%r274, %r273, 1056964608;
	or.b32  	%r296, %r295, 1056964608;
	or.b32  	%r327, %r326, 1056964608;
	mov.b32 	%r341, %f615;
	mov.b32 	%r363, %f666;
	mov.b32 	%f155, %r185;
	mov.b32 	%f189, %r192;
	mov.b32 	%f224, %r203;
	mov.b32 	%f258, %r210;
	mov.b32 	%f293, %r221;
	mov.b32 	%f327, %r228;
	mov.b32 	%f362, %r239;
	mov.b32 	%f396, %r246;
	mov.b32 	%f426, %r264;
	mov.b32 	%f460, %r274;
	mov.b32 	%f512, %r296;
	mov.b32 	%f563, %r327;
	and.b32  	%r342, %r341, -2147483648;
	and.b32  	%r364, %r363, -2147483648;
	add.f32 	%f718, %f830, %f830;
	add.f32 	%f156, %f154, %f155;
	abs.f32 	%f158, %f154;
	add.f32 	%f190, %f188, %f189;
	abs.f32 	%f192, %f188;
	add.f32 	%f225, %f223, %f224;
	abs.f32 	%f227, %f223;
	add.f32 	%f259, %f257, %f258;
	abs.f32 	%f261, %f257;
	add.f32 	%f294, %f292, %f293;
	abs.f32 	%f296, %f292;
	add.f32 	%f328, %f326, %f327;
	abs.f32 	%f330, %f326;
	add.f32 	%f363, %f361, %f362;
	abs.f32 	%f365, %f361;
	add.f32 	%f397, %f395, %f396;
	abs.f32 	%f399, %f395;
	add.f32 	%f427, %f425, %f426;
	abs.f32 	%f429, %f425;
	add.f32 	%f461, %f459, %f460;
	abs.f32 	%f463, %f459;
	add.f32 	%f513, %f511, %f512;
	abs.f32 	%f515, %f511;
	add.f32 	%f564, %f562, %f563;
	abs.f32 	%f566, %f562;
	or.b32  	%r343, %r342, 1056964608;
	or.b32  	%r365, %r364, 1056964608;
	mov.b32 	%r377, %f718;
	cvt.rzi.f32.f32 	%f157, %f156;
	setp.gt.f32 	%p18, %f158, 0f4B000000;
	cvt.rzi.f32.f32 	%f191, %f190;
	setp.gt.f32 	%p24, %f192, 0f4B000000;
	cvt.rzi.f32.f32 	%f226, %f225;
	setp.gt.f32 	%p30, %f227, 0f4B000000;
	cvt.rzi.f32.f32 	%f260, %f259;
	setp.gt.f32 	%p36, %f261, 0f4B000000;
	cvt.rzi.f32.f32 	%f295, %f294;
	setp.gt.f32 	%p42, %f296, 0f4B000000;
	cvt.rzi.f32.f32 	%f329, %f328;
	setp.gt.f32 	%p48, %f330, 0f4B000000;
	cvt.rzi.f32.f32 	%f364, %f363;
	setp.gt.f32 	%p54, %f365, 0f4B000000;
	cvt.rzi.f32.f32 	%f398, %f397;
	setp.gt.f32 	%p60, %f399, 0f4B000000;
	cvt.rzi.f32.f32 	%f428, %f427;
	setp.gt.f32 	%p65, %f429, 0f4B000000;
	cvt.rzi.f32.f32 	%f462, %f461;
	setp.gt.f32 	%p72, %f463, 0f4B000000;
	cvt.rzi.f32.f32 	%f514, %f513;
	setp.gt.f32 	%p92, %f515, 0f4B000000;
	cvt.rzi.f32.f32 	%f565, %f564;
	setp.gt.f32 	%p112, %f566, 0f4B000000;
	mov.b32 	%f616, %r343;
	mov.b32 	%f667, %r365;
	and.b32  	%r378, %r377, -2147483648;
	selp.f32 	%f159, %f154, %f157, %p18;
	cvt.rzi.f32.f32 	%f160, %f154;
	setp.lt.f32 	%p19, %f158, 0f3F000000;
	selp.f32 	%f193, %f188, %f191, %p24;
	cvt.rzi.f32.f32 	%f194, %f188;
	setp.lt.f32 	%p25, %f192, 0f3F000000;
	selp.f32 	%f228, %f223, %f226, %p30;
	cvt.rzi.f32.f32 	%f229, %f223;
	setp.lt.f32 	%p31, %f227, 0f3F000000;
	selp.f32 	%f262, %f257, %f260, %p36;
	cvt.rzi.f32.f32 	%f263, %f257;
	setp.lt.f32 	%p37, %f261, 0f3F000000;
	selp.f32 	%f297, %f292, %f295, %p42;
	cvt.rzi.f32.f32 	%f298, %f292;
	setp.lt.f32 	%p43, %f296, 0f3F000000;
	selp.f32 	%f331, %f326, %f329, %p48;
	cvt.rzi.f32.f32 	%f332, %f326;
	setp.lt.f32 	%p49, %f330, 0f3F000000;
	selp.f32 	%f366, %f361, %f364, %p54;
	cvt.rzi.f32.f32 	%f367, %f361;
	setp.lt.f32 	%p55, %f365, 0f3F000000;
	selp.f32 	%f400, %f395, %f398, %p60;
	cvt.rzi.f32.f32 	%f401, %f395;
	setp.lt.f32 	%p61, %f399, 0f3F000000;
	selp.f32 	%f430, %f425, %f428, %p65;
	cvt.rzi.f32.f32 	%f431, %f425;
	setp.lt.f32 	%p66, %f429, 0f3F000000;
	selp.f32 	%f464, %f459, %f462, %p72;
	cvt.rzi.f32.f32 	%f465, %f459;
	setp.lt.f32 	%p73, %f463, 0f3F000000;
	selp.f32 	%f516, %f511, %f514, %p92;
	cvt.rzi.f32.f32 	%f517, %f511;
	setp.lt.f32 	%p93, %f515, 0f3F000000;
	selp.f32 	%f567, %f562, %f565, %p112;
	cvt.rzi.f32.f32 	%f568, %f562;
	setp.lt.f32 	%p113, %f566, 0f3F000000;
	add.f32 	%f617, %f615, %f616;
	abs.f32 	%f619, %f615;
	add.f32 	%f668, %f666, %f667;
	abs.f32 	%f670, %f666;
	or.b32  	%r379, %r378, 1056964608;
	selp.f32 	%f161, %f160, %f159, %p19;
	selp.f32 	%f195, %f194, %f193, %p25;
	selp.f32 	%f230, %f229, %f228, %p31;
	selp.f32 	%f264, %f263, %f262, %p37;
	selp.f32 	%f299, %f298, %f297, %p43;
	selp.f32 	%f333, %f332, %f331, %p49;
	selp.f32 	%f368, %f367, %f366, %p55;
	selp.f32 	%f402, %f401, %f400, %p61;
	selp.f32 	%f432, %f431, %f430, %p66;
	selp.f32 	%f466, %f465, %f464, %p73;
	selp.f32 	%f518, %f517, %f516, %p93;
	selp.f32 	%f569, %f568, %f567, %p113;
	cvt.rzi.f32.f32 	%f618, %f617;
	setp.gt.f32 	%p132, %f619, 0f4B000000;
	cvt.rzi.f32.f32 	%f669, %f668;
	setp.gt.f32 	%p153, %f670, 0f4B000000;
	mov.b32 	%f719, %r379;
	fma.rn.f32 	%f162, %f161, 0fBF000000, %f153;
	fma.rn.f32 	%f196, %f195, 0fBF000000, %f187;
	fma.rn.f32 	%f231, %f230, 0fBF000000, %f222;
	fma.rn.f32 	%f265, %f264, 0fBF000000, %f256;
	fma.rn.f32 	%f300, %f299, 0fBF000000, %f291;
	fma.rn.f32 	%f334, %f333, 0fBF000000, %f325;
	fma.rn.f32 	%f369, %f368, 0fBF000000, %f360;
	fma.rn.f32 	%f403, %f402, 0fBF000000, %f394;
	fma.rn.f32 	%f433, %f432, 0fBF000000, %f424;
	fma.rn.f32 	%f467, %f466, 0fBF000000, %f458;
	fma.rn.f32 	%f519, %f518, 0fBF000000, %f822;
	fma.rn.f32 	%f570, %f569, 0fBF000000, %f810;
	selp.f32 	%f620, %f615, %f618, %p132;
	cvt.rzi.f32.f32 	%f621, %f615;
	setp.lt.f32 	%p133, %f619, 0f3F000000;
	selp.f32 	%f671, %f666, %f669, %p153;
	cvt.rzi.f32.f32 	%f672, %f666;
	setp.lt.f32 	%p154, %f670, 0f3F000000;
	add.f32 	%f720, %f718, %f719;
	abs.f32 	%f722, %f718;
	mul.f32 	%f163, %f162, %f162;
	mul.f32 	%f197, %f196, %f196;
	mul.f32 	%f232, %f231, %f231;
	mul.f32 	%f266, %f265, %f265;
	mul.f32 	%f301, %f300, %f300;
	mul.f32 	%f335, %f334, %f334;
	mul.f32 	%f370, %f369, %f369;
	mul.f32 	%f404, %f403, %f403;
	mul.f32 	%f434, %f433, %f433;
	mul.f32 	%f468, %f467, %f467;
	mul.f32 	%f520, %f519, %f519;
	mul.f32 	%f571, %f570, %f570;
	selp.f32 	%f622, %f621, %f620, %p133;
	selp.f32 	%f673, %f672, %f671, %p154;
	cvt.rzi.f32.f32 	%f721, %f720;
	setp.gt.f32 	%p173, %f722, 0f4B000000;
	cvt.rzi.s32.f32 	%r186, %f161;
	fma.rn.f32 	%f164, %f163, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f165, %f163, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r193, %f195;
	fma.rn.f32 	%f198, %f197, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f199, %f197, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r204, %f230;
	fma.rn.f32 	%f233, %f232, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f234, %f232, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r211, %f264;
	fma.rn.f32 	%f267, %f266, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f268, %f266, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r222, %f299;
	fma.rn.f32 	%f302, %f301, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f303, %f301, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r229, %f333;
	fma.rn.f32 	%f336, %f335, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f337, %f335, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r240, %f368;
	fma.rn.f32 	%f371, %f370, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f372, %f370, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r247, %f402;
	fma.rn.f32 	%f405, %f404, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f406, %f404, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f435, %f434, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f436, %f434, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f469, %f468, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f470, %f468, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f521, %f520, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f522, %f520, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f572, %f571, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f573, %f571, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f623, %f622, 0fBF000000, %f826;
	fma.rn.f32 	%f674, %f673, 0fBF000000, %f814;
	selp.f32 	%f723, %f718, %f721, %p173;
	cvt.rzi.f32.f32 	%f724, %f718;
	setp.lt.f32 	%p174, %f722, 0f3F000000;
	add.s32 	%r187, %r186, 1;
	fma.rn.f32 	%f166, %f164, %f163, 0fC0A55DF6;
	fma.rn.f32 	%f167, %f165, %f163, 0f4081E0CF;
	fma.rn.f32 	%f168, %f163, %f162, 0f00000000;
	add.s32 	%r194, %r193, 1;
	fma.rn.f32 	%f200, %f198, %f197, 0fC0A55DF6;
	fma.rn.f32 	%f201, %f199, %f197, 0f4081E0CF;
	fma.rn.f32 	%f202, %f197, %f196, 0f00000000;
	add.s32 	%r205, %r204, 1;
	fma.rn.f32 	%f235, %f233, %f232, 0fC0A55DF6;
	fma.rn.f32 	%f236, %f234, %f232, 0f4081E0CF;
	fma.rn.f32 	%f237, %f232, %f231, 0f00000000;
	add.s32 	%r212, %r211, 1;
	fma.rn.f32 	%f269, %f267, %f266, 0fC0A55DF6;
	fma.rn.f32 	%f270, %f268, %f266, 0f4081E0CF;
	fma.rn.f32 	%f271, %f266, %f265, 0f00000000;
	add.s32 	%r223, %r222, 1;
	fma.rn.f32 	%f304, %f302, %f301, 0fC0A55DF6;
	fma.rn.f32 	%f305, %f303, %f301, 0f4081E0CF;
	fma.rn.f32 	%f306, %f301, %f300, 0f00000000;
	add.s32 	%r230, %r229, 1;
	fma.rn.f32 	%f338, %f336, %f335, 0fC0A55DF6;
	fma.rn.f32 	%f339, %f337, %f335, 0f4081E0CF;
	fma.rn.f32 	%f340, %f335, %f334, 0f00000000;
	add.s32 	%r241, %r240, 1;
	fma.rn.f32 	%f373, %f371, %f370, 0fC0A55DF6;
	fma.rn.f32 	%f374, %f372, %f370, 0f4081E0CF;
	fma.rn.f32 	%f375, %f370, %f369, 0f00000000;
	add.s32 	%r248, %r247, 1;
	fma.rn.f32 	%f407, %f405, %f404, 0fC0A55DF6;
	fma.rn.f32 	%f408, %f406, %f404, 0f4081E0CF;
	fma.rn.f32 	%f409, %f404, %f403, 0f00000000;
	cvt.rzi.s32.f32 	%r265, %f432;
	fma.rn.f32 	%f437, %f435, %f434, 0fC0A55DF6;
	fma.rn.f32 	%f438, %f436, %f434, 0f4081E0CF;
	fma.rn.f32 	%f439, %f434, %f433, 0f00000000;
	cvt.rzi.s32.f32 	%r275, %f466;
	fma.rn.f32 	%f471, %f469, %f468, 0fC0A55DF6;
	fma.rn.f32 	%f472, %f470, %f468, 0f4081E0CF;
	fma.rn.f32 	%f473, %f468, %f467, 0f00000000;
	cvt.rzi.s32.f32 	%r297, %f518;
	fma.rn.f32 	%f523, %f521, %f520, 0fC0A55DF6;
	fma.rn.f32 	%f524, %f522, %f520, 0f4081E0CF;
	fma.rn.f32 	%f525, %f520, %f519, 0f00000000;
	cvt.rzi.s32.f32 	%r328, %f569;
	fma.rn.f32 	%f574, %f572, %f571, 0fC0A55DF6;
	fma.rn.f32 	%f575, %f573, %f571, 0f4081E0CF;
	fma.rn.f32 	%f576, %f571, %f570, 0f00000000;
	mul.f32 	%f624, %f623, %f623;
	mul.f32 	%f675, %f674, %f674;
	selp.f32 	%f725, %f724, %f723, %p174;
	shl.b32 	%r95, %r4, 2;
	and.b32  	%r168, %r97, 8;
	and.b32  	%r171, %r4, 18;
	fma.rn.f32 	%f169, %f167, %f163, 0fC09DE9E6;
	fma.rn.f32 	%f170, %f166, %f168, 0f00000000;
	and.b32  	%r188, %r187, 1;
	fma.rn.f32 	%f203, %f201, %f197, 0fC09DE9E6;
	fma.rn.f32 	%f204, %f200, %f202, 0f00000000;
	and.b32  	%r195, %r194, 1;
	fma.rn.f32 	%f238, %f236, %f232, 0fC09DE9E6;
	fma.rn.f32 	%f239, %f235, %f237, 0f00000000;
	and.b32  	%r206, %r205, 1;
	fma.rn.f32 	%f272, %f270, %f266, 0fC09DE9E6;
	fma.rn.f32 	%f273, %f269, %f271, 0f00000000;
	and.b32  	%r213, %r212, 1;
	fma.rn.f32 	%f307, %f305, %f301, 0fC09DE9E6;
	fma.rn.f32 	%f308, %f304, %f306, 0f00000000;
	and.b32  	%r224, %r223, 1;
	fma.rn.f32 	%f341, %f339, %f335, 0fC09DE9E6;
	fma.rn.f32 	%f342, %f338, %f340, 0f00000000;
	and.b32  	%r231, %r230, 1;
	fma.rn.f32 	%f376, %f374, %f370, 0fC09DE9E6;
	fma.rn.f32 	%f377, %f373, %f375, 0f00000000;
	and.b32  	%r242, %r241, 1;
	fma.rn.f32 	%f410, %f408, %f404, 0fC09DE9E6;
	fma.rn.f32 	%f411, %f407, %f409, 0f00000000;
	and.b32  	%r249, %r248, 1;
	fma.rn.f32 	%f440, %f438, %f434, 0fC09DE9E6;
	fma.rn.f32 	%f441, %f437, %f439, 0f00000000;
	and.b32  	%r266, %r265, 1;
	fma.rn.f32 	%f474, %f472, %f468, 0fC09DE9E6;
	fma.rn.f32 	%f475, %f471, %f473, 0f00000000;
	and.b32  	%r276, %r275, 1;
	fma.rn.f32 	%f526, %f524, %f520, 0fC09DE9E6;
	fma.rn.f32 	%f527, %f523, %f525, 0f00000000;
	and.b32  	%r298, %r297, 1;
	fma.rn.f32 	%f577, %f575, %f571, 0fC09DE9E6;
	fma.rn.f32 	%f578, %f574, %f576, 0f00000000;
	and.b32  	%r329, %r328, 1;
	fma.rn.f32 	%f625, %f624, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f626, %f624, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f676, %f675, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f677, %f675, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f726, %f725, 0fBF000000, %f830;
	and.b32  	%r96, %r95, 32;
	or.b32  	%r172, %r171, %r168;
	fma.rn.f32 	%f171, %f169, %f163, 0f3F800000;
	fma.rn.f32 	%f172, %f162, 0f40490FDB, %f170;
	setp.eq.b32 	%p20, %r188, 1;
	fma.rn.f32 	%f205, %f203, %f197, 0f3F800000;
	fma.rn.f32 	%f206, %f196, 0f40490FDB, %f204;
	setp.eq.b32 	%p26, %r195, 1;
	fma.rn.f32 	%f240, %f238, %f232, 0f3F800000;
	fma.rn.f32 	%f241, %f231, 0f40490FDB, %f239;
	setp.eq.b32 	%p32, %r206, 1;
	fma.rn.f32 	%f274, %f272, %f266, 0f3F800000;
	fma.rn.f32 	%f275, %f265, 0f40490FDB, %f273;
	setp.eq.b32 	%p38, %r213, 1;
	fma.rn.f32 	%f309, %f307, %f301, 0f3F800000;
	fma.rn.f32 	%f310, %f300, 0f40490FDB, %f308;
	setp.eq.b32 	%p44, %r224, 1;
	fma.rn.f32 	%f343, %f341, %f335, 0f3F800000;
	fma.rn.f32 	%f344, %f334, 0f40490FDB, %f342;
	setp.eq.b32 	%p50, %r231, 1;
	fma.rn.f32 	%f378, %f376, %f370, 0f3F800000;
	fma.rn.f32 	%f379, %f369, 0f40490FDB, %f377;
	setp.eq.b32 	%p56, %r242, 1;
	fma.rn.f32 	%f412, %f410, %f404, 0f3F800000;
	fma.rn.f32 	%f413, %f403, 0f40490FDB, %f411;
	setp.eq.b32 	%p62, %r249, 1;
	fma.rn.f32 	%f442, %f440, %f434, 0f3F800000;
	fma.rn.f32 	%f443, %f433, 0f40490FDB, %f441;
	setp.eq.b32 	%p67, %r266, 1;
	fma.rn.f32 	%f476, %f474, %f468, 0f3F800000;
	fma.rn.f32 	%f477, %f467, 0f40490FDB, %f475;
	setp.eq.b32 	%p74, %r276, 1;
	fma.rn.f32 	%f528, %f526, %f520, 0f3F800000;
	fma.rn.f32 	%f529, %f519, 0f40490FDB, %f527;
	setp.eq.b32 	%p94, %r298, 1;
	fma.rn.f32 	%f579, %f577, %f571, 0f3F800000;
	fma.rn.f32 	%f580, %f570, 0f40490FDB, %f578;
	setp.eq.b32 	%p114, %r329, 1;
	cvt.rzi.s32.f32 	%r344, %f622;
	fma.rn.f32 	%f627, %f625, %f624, 0fC0A55DF6;
	fma.rn.f32 	%f628, %f626, %f624, 0f4081E0CF;
	fma.rn.f32 	%f629, %f624, %f623, 0f00000000;
	cvt.rzi.s32.f32 	%r366, %f673;
	fma.rn.f32 	%f678, %f676, %f675, 0fC0A55DF6;
	fma.rn.f32 	%f679, %f677, %f675, 0f4081E0CF;
	fma.rn.f32 	%f680, %f675, %f674, 0f00000000;
	mul.f32 	%f727, %f726, %f726;
	and.b32  	%r169, %r95, 4;
	shl.b32 	%r170, %r3, 4;
	or.b32  	%r173, %r172, %r96;
	selp.f32 	%f173, %f171, %f172, %p20;
	and.b32  	%r189, %r187, 2;
	mov.f32 	%f174, 0f00000000;
	selp.f32 	%f207, %f205, %f206, %p26;
	and.b32  	%r196, %r194, 2;
	selp.f32 	%f242, %f240, %f241, %p32;
	and.b32  	%r207, %r205, 2;
	selp.f32 	%f276, %f274, %f275, %p38;
	and.b32  	%r214, %r212, 2;
	selp.f32 	%f311, %f309, %f310, %p44;
	and.b32  	%r225, %r223, 2;
	selp.f32 	%f345, %f343, %f344, %p50;
	and.b32  	%r232, %r230, 2;
	selp.f32 	%f380, %f378, %f379, %p56;
	and.b32  	%r243, %r241, 2;
	selp.f32 	%f414, %f412, %f413, %p62;
	and.b32  	%r250, %r248, 2;
	selp.f32 	%f444, %f442, %f443, %p67;
	and.b32  	%r267, %r265, 2;
	selp.f32 	%f478, %f476, %f477, %p74;
	and.b32  	%r277, %r275, 2;
	selp.f32 	%f530, %f528, %f529, %p94;
	and.b32  	%r299, %r297, 2;
	selp.f32 	%f581, %f579, %f580, %p114;
	and.b32  	%r330, %r328, 2;
	fma.rn.f32 	%f630, %f628, %f624, 0fC09DE9E6;
	fma.rn.f32 	%f631, %f627, %f629, 0f00000000;
	and.b32  	%r345, %r344, 1;
	fma.rn.f32 	%f681, %f679, %f675, 0fC09DE9E6;
	fma.rn.f32 	%f682, %f678, %f680, 0f00000000;
	and.b32  	%r367, %r366, 1;
	fma.rn.f32 	%f728, %f727, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f729, %f727, 0f3E684E12, 0fBFAAD2E0;
	and.b32  	%r98, %r170, 4032;
	or.b32  	%r99, %r173, %r169;
	setp.eq.s32 	%p21, %r189, 0;
	sub.f32 	%f175, %f174, %f173;
	setp.eq.s32 	%p27, %r196, 0;
	sub.f32 	%f209, %f174, %f207;
	setp.eq.s32 	%p33, %r207, 0;
	sub.f32 	%f244, %f174, %f242;
	setp.eq.s32 	%p39, %r214, 0;
	sub.f32 	%f278, %f174, %f276;
	setp.eq.s32 	%p45, %r225, 0;
	sub.f32 	%f313, %f174, %f311;
	setp.eq.s32 	%p51, %r232, 0;
	sub.f32 	%f347, %f174, %f345;
	setp.eq.s32 	%p57, %r243, 0;
	sub.f32 	%f382, %f174, %f380;
	setp.eq.s32 	%p63, %r250, 0;
	sub.f32 	%f416, %f174, %f414;
	setp.eq.s32 	%p68, %r267, 0;
	neg.f32 	%f446, %f444;
	add.s32 	%r268, %r265, 1;
	cvt.rzi.f32.f32 	%f451, %f424;
	setp.eq.s32 	%p75, %r277, 0;
	neg.f32 	%f480, %f478;
	add.s32 	%r278, %r275, 1;
	cvt.rzi.f32.f32 	%f484, %f458;
	setp.eq.s32 	%p95, %r299, 0;
	neg.f32 	%f532, %f530;
	add.s32 	%r300, %r297, 1;
	cvt.rzi.f32.f32 	%f537, %f822;
	setp.eq.s32 	%p115, %r330, 0;
	neg.f32 	%f583, %f581;
	add.s32 	%r331, %r328, 1;
	cvt.rzi.f32.f32 	%f588, %f810;
	fma.rn.f32 	%f632, %f630, %f624, 0f3F800000;
	fma.rn.f32 	%f633, %f623, 0f40490FDB, %f631;
	setp.eq.b32 	%p134, %r345, 1;
	fma.rn.f32 	%f683, %f681, %f675, 0f3F800000;
	fma.rn.f32 	%f684, %f674, 0f40490FDB, %f682;
	setp.eq.b32 	%p155, %r367, 1;
	cvt.rzi.s32.f32 	%r380, %f725;
	fma.rn.f32 	%f730, %f728, %f727, 0fC0A55DF6;
	fma.rn.f32 	%f731, %f729, %f727, 0f4081E0CF;
	fma.rn.f32 	%f732, %f727, %f726, 0f00000000;
	or.b32  	%r174, %r99, %r98;
	selp.f32 	%f176, %f173, %f175, %p21;
	selp.f32 	%f210, %f207, %f209, %p27;
	selp.f32 	%f245, %f242, %f244, %p33;
	selp.f32 	%f279, %f276, %f278, %p39;
	selp.f32 	%f314, %f311, %f313, %p45;
	selp.f32 	%f348, %f345, %f347, %p51;
	selp.f32 	%f383, %f380, %f382, %p57;
	selp.f32 	%f417, %f414, %f416, %p63;
	selp.f32 	%f445, %f443, %f442, %p67;
	selp.f32 	%f447, %f444, %f446, %p68;
	and.b32  	%r269, %r268, 2;
	setp.eq.f32 	%p70, %f451, %f424;
	mul.f32 	%f452, %f424, 0f00000000;
	selp.f32 	%f479, %f477, %f476, %p74;
	selp.f32 	%f481, %f478, %f480, %p75;
	and.b32  	%r279, %r278, 2;
	setp.eq.f32 	%p77, %f484, %f458;
	mul.f32 	%f485, %f458, 0f00000000;
	selp.f32 	%f531, %f529, %f528, %p94;
	selp.f32 	%f533, %f530, %f532, %p95;
	and.b32  	%r301, %r300, 2;
	setp.eq.f32 	%p97, %f537, %f822;
	mul.f32 	%f538, %f822, 0f00000000;
	selp.f32 	%f582, %f580, %f579, %p114;
	selp.f32 	%f584, %f581, %f583, %p115;
	and.b32  	%r332, %r331, 2;
	setp.eq.f32 	%p117, %f588, %f810;
	mul.f32 	%f589, %f810, 0f00000000;
	selp.f32 	%f634, %f632, %f633, %p134;
	and.b32  	%r346, %r344, 2;
	selp.f32 	%f685, %f683, %f684, %p155;
	and.b32  	%r368, %r366, 2;
	fma.rn.f32 	%f733, %f731, %f727, 0fC09DE9E6;
	fma.rn.f32 	%f734, %f730, %f732, 0f00000000;
	and.b32  	%r381, %r380, 1;
	shr.u32 	%r175, %r174, 1;
	mul.f32 	%f86, %f176, %f176;
	mul.f32 	%f4, %f210, %f210;
	mul.f32 	%f8, %f245, %f245;
	mul.f32 	%f13, %f279, %f279;
	mul.f32 	%f17, %f314, %f314;
	mul.f32 	%f22, %f348, %f348;
	mul.f32 	%f26, %f383, %f383;
	mul.f32 	%f31, %f417, %f417;
	setp.eq.s32 	%p69, %r269, 0;
	sub.f32 	%f449, %f174, %f445;
	selp.f32 	%f453, %f452, %f447, %p70;
	abs.f32 	%f454, %f424;
	setp.eq.s32 	%p76, %r279, 0;
	sub.f32 	%f482, %f174, %f479;
	selp.f32 	%f486, %f485, %f481, %p77;
	abs.f32 	%f487, %f458;
	setp.eq.s32 	%p96, %r301, 0;
	sub.f32 	%f535, %f174, %f531;
	selp.f32 	%f103, %f538, %f533, %p97;
	abs.f32 	%f539, %f822;
	setp.eq.s32 	%p116, %r332, 0;
	sub.f32 	%f586, %f174, %f582;
	selp.f32 	%f590, %f589, %f584, %p117;
	abs.f32 	%f591, %f810;
	setp.eq.s32 	%p135, %r346, 0;
	neg.f32 	%f636, %f634;
	add.s32 	%r347, %r344, 1;
	cvt.rzi.f32.f32 	%f641, %f826;
	setp.eq.s32 	%p156, %r368, 0;
	neg.f32 	%f687, %f685;
	add.s32 	%r369, %r366, 1;
	cvt.rzi.f32.f32 	%f692, %f814;
	fma.rn.f32 	%f735, %f733, %f727, 0f3F800000;
	fma.rn.f32 	%f736, %f726, 0f40490FDB, %f734;
	setp.eq.b32 	%p175, %r381, 1;
	ld.param.u64 	%rd1, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_7];
	mul.wide.u32 	%rd38, %r175, 4;
	mul.f32 	%f180, %f86, 0f3C0AF64E;
	mul.f32 	%f214, %f4, 0f3C0AF64E;
	mul.f32 	%f249, %f8, 0f3C0AF64E;
	mul.f32 	%f283, %f13, 0f3C0AF64E;
	mul.f32 	%f318, %f17, 0f3C0AF64E;
	mul.f32 	%f352, %f22, 0f3C0AF64E;
	mul.f32 	%f387, %f26, 0f3C0AF64E;
	mul.f32 	%f420, %f31, 0f3C0AF64E;
	selp.f32 	%f450, %f445, %f449, %p69;
	setp.gt.f32 	%p71, %f454, 0f4B800000;
	add.f32 	%f455, %f453, 0f3F800000;
	selp.f32 	%f483, %f479, %f482, %p76;
	setp.gt.f32 	%p78, %f487, 0f4B800000;
	add.f32 	%f488, %f486, 0f3F800000;
	selp.f32 	%f536, %f531, %f535, %p96;
	setp.gt.f32 	%p98, %f539, 0f4B800000;
	add.f32 	%f540, %f103, 0f3F800000;
	selp.f32 	%f587, %f582, %f586, %p116;
	setp.gt.f32 	%p118, %f591, 0f4B800000;
	add.f32 	%f592, %f590, 0f3F800000;
	selp.f32 	%f635, %f633, %f632, %p134;
	selp.f32 	%f637, %f634, %f636, %p135;
	and.b32  	%r348, %r347, 2;
	setp.eq.f32 	%p137, %f641, %f826;
	mul.f32 	%f642, %f826, 0f00000000;
	selp.f32 	%f686, %f684, %f683, %p155;
	selp.f32 	%f688, %f685, %f687, %p156;
	and.b32  	%r370, %r369, 2;
	setp.eq.f32 	%p158, %f692, %f814;
	mul.f32 	%f693, %f814, 0f00000000;
	selp.f32 	%f737, %f735, %f736, %p175;
	and.b32  	%r382, %r380, 2;
	add.s64 	%rd39, %rd1, %rd38;
	mul.f32 	%f3, %f180, %f800;
	mul.f32 	%f215, %f214, %f801;
	mul.f32 	%f12, %f249, %f802;
	mul.f32 	%f284, %f283, %f803;
	mul.f32 	%f21, %f318, %f804;
	mul.f32 	%f353, %f352, %f805;
	mul.f32 	%f30, %f387, %f806;
	mul.f32 	%f421, %f420, %f807;
	selp.f32 	%f456, %f455, %f450, %p71;
	selp.f32 	%f489, %f488, %f483, %p78;
	selp.f32 	%f104, %f540, %f536, %p98;
	selp.f32 	%f593, %f592, %f587, %p118;
	setp.eq.s32 	%p136, %r348, 0;
	sub.f32 	%f639, %f174, %f635;
	selp.f32 	%f123, %f642, %f637, %p137;
	abs.f32 	%f643, %f826;
	setp.eq.s32 	%p157, %r370, 0;
	sub.f32 	%f690, %f174, %f686;
	selp.f32 	%f694, %f693, %f688, %p158;
	abs.f32 	%f695, %f814;
	setp.eq.s32 	%p176, %r382, 0;
	neg.f32 	%f739, %f737;
	add.s32 	%r383, %r380, 1;
	cvt.rzi.f32.f32 	%f744, %f830;
	ld.param.u64 	%rd2, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_8];
	ld.param.u64 	%rd3, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_9];
	ld.global.u32 	%r100, [%rd39];
	mov.b32 	%r199, %f215;
	mov.b32 	%r198, %f3;
	mov.b32 	%r217, %f284;
	mov.b32 	%r216, %f12;
	mov.b32 	%r235, %f353;
	mov.b32 	%r234, %f21;
	mov.b32 	%r253, %f421;
	mov.b32 	%r252, %f30;
	mov.b32 	%r255, %f456;
	mov.b32 	%r256, %f489;
	mov.b32 	%r258, %f453;
	mov.b32 	%r259, %f486;
	mov.b32 	%r315, %f593;
	mov.b32 	%r314, %f104;
	mov.b32 	%r321, %f590;
	mov.b32 	%r320, %f103;
	selp.f32 	%f640, %f635, %f639, %p136;
	setp.gt.f32 	%p138, %f643, 0f4B800000;
	add.f32 	%f644, %f123, 0f3F800000;
	selp.f32 	%f691, %f686, %f690, %p157;
	setp.gt.f32 	%p159, %f695, 0f4B800000;
	add.f32 	%f696, %f694, 0f3F800000;
	selp.f32 	%f738, %f736, %f735, %p175;
	selp.f32 	%f740, %f737, %f739, %p176;
	and.b32  	%r384, %r383, 2;
	setp.eq.f32 	%p178, %f744, %f830;
	mul.f32 	%f745, %f830, 0f00000000;
	// begin inline asm
	cvt.rn.f16x2.f32 %r197, %r199, %r198;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r215, %r217, %r216;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r233, %r235, %r234;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r251, %r253, %r252;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r254, %r256, %r255;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r257, %r259, %r258;
	// end inline asm
	xor.b32  	%r318, %r321, -2147483648;
	xor.b32  	%r317, %r320, -2147483648;
	selp.f32 	%f124, %f644, %f640, %p138;
	selp.f32 	%f697, %f696, %f691, %p159;
	setp.eq.s32 	%p177, %r384, 0;
	sub.f32 	%f742, %f174, %f738;
	selp.f32 	%f142, %f745, %f740, %p178;
	abs.f32 	%f746, %f830;
	// begin inline asm
	cvt.rn.f16x2.f32 %r313, %r315, %r314;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r316, %r318, %r317;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r319, %r321, %r320;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r322, %r315, %r314;
	// end inline asm
	mov.b32 	%r359, %f697;
	mov.b32 	%r358, %f124;
	mov.b32 	%r362, %f694;
	mov.b32 	%r361, %f123;
	selp.f32 	%f743, %f738, %f742, %p177;
	setp.gt.f32 	%p179, %f746, 0f4B800000;
	add.f32 	%f747, %f142, 0f3F800000;
	// begin inline asm
	cvt.rn.f16x2.f32 %r357, %r359, %r358;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r360, %r362, %r361;
	// end inline asm
	selp.f32 	%f143, %f747, %f743, %p179;
	add.f32 	%f768, %f818, %f818;
	mov.b32 	%r403, %f768;
	and.b32  	%r404, %r403, -2147483648;
	or.b32  	%r405, %r404, 1056964608;
	mov.b32 	%f769, %r405;
	add.f32 	%f770, %f768, %f769;
	cvt.rzi.f32.f32 	%f771, %f770;
	abs.f32 	%f772, %f768;
	setp.gt.f32 	%p192, %f772, 0f4B000000;
	selp.f32 	%f773, %f768, %f771, %p192;
	cvt.rzi.f32.f32 	%f774, %f768;
	setp.lt.f32 	%p193, %f772, 0f3F000000;
	selp.f32 	%f775, %f774, %f773, %p193;
	cvt.rzi.s32.f32 	%r406, %f775;
	fma.rn.f32 	%f776, %f775, 0fBF000000, %f818;
	mul.f32 	%f777, %f776, %f776;
	fma.rn.f32 	%f778, %f777, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f779, %f777, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f780, %f778, %f777, 0fC0A55DF6;
	fma.rn.f32 	%f781, %f779, %f777, 0f4081E0CF;
	fma.rn.f32 	%f782, %f777, %f776, 0f00000000;
	fma.rn.f32 	%f783, %f781, %f777, 0fC09DE9E6;
	fma.rn.f32 	%f784, %f780, %f782, 0f00000000;
	fma.rn.f32 	%f785, %f783, %f777, 0f3F800000;
	fma.rn.f32 	%f786, %f776, 0f40490FDB, %f784;
	and.b32  	%r407, %r406, 1;
	setp.eq.b32 	%p194, %r407, 1;
	selp.f32 	%f787, %f785, %f786, %p194;
	selp.f32 	%f788, %f786, %f785, %p194;
	and.b32  	%r408, %r406, 2;
	setp.eq.s32 	%p195, %r408, 0;
	neg.f32 	%f789, %f787;
	selp.f32 	%f790, %f787, %f789, %p195;
	add.s32 	%r409, %r406, 1;
	and.b32  	%r410, %r409, 2;
	setp.eq.s32 	%p196, %r410, 0;
	sub.f32 	%f792, %f174, %f788;
	selp.f32 	%f793, %f788, %f792, %p196;
	cvt.rzi.f32.f32 	%f794, %f818;
	setp.eq.f32 	%p197, %f794, %f818;
	mul.f32 	%f795, %f818, 0f00000000;
	selp.f32 	%f796, %f795, %f790, %p197;
	abs.f32 	%f797, %f818;
	setp.gt.f32 	%p198, %f797, 0f4B800000;
	add.f32 	%f798, %f796, 0f3F800000;
	selp.f32 	%f799, %f798, %f793, %p198;
	mov.b32 	%r393, %f799;
	mov.b32 	%r392, %f143;
	// begin inline asm
	cvt.rn.f16x2.f32 %r391, %r393, %r392;
	// end inline asm
	mov.b32 	%r399, %f796;
	xor.b32  	%r396, %r399, -2147483648;
	mov.b32 	%r398, %f142;
	xor.b32  	%r395, %r398, -2147483648;
	// begin inline asm
	cvt.rn.f16x2.f32 %r394, %r396, %r395;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r397, %r399, %r398;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r400, %r393, %r392;
	// end inline asm
	shl.b32 	%r412, %r152, 13;
	shl.b32 	%r413, %r156, 7;
	shl.b32 	%r414, %r3, 5;
	and.b32  	%r415, %r414, 64;
	and.b32  	%r416, %r95, 28;
	and.b32  	%r417, %r414, 32;
	or.b32  	%r418, %r417, %r416;
	or.b32  	%r419, %r415, %r418;
	or.b32  	%r420, %r419, %r412;
	add.s32 	%r50, %r420, %r413;
	bfe.s32 	%r421, %r4, 3, 1;
	and.b32  	%r51, %r4, 8;
	shl.b32 	%r422, %r4, 4;
	or.b32  	%r423, %r51, %r422;
	shr.u32 	%r424, %r423, 2;
	and.b32  	%r425, %r424, 30;
	shr.u32 	%r426, %r1, 1;
	and.b32  	%r427, %r2, 32;
	or.b32  	%r428, %r427, %r426;
	or.b32  	%r429, %r428, 8;
	or.b32  	%r430, %r428, 16;
	or.b32  	%r431, %r428, 24;
	shr.u32 	%r432, %r99, 1;
	mul.lo.s32 	%r433, %r432, 65;
	add.s32 	%r434, %r428, %r433;
	add.s32 	%r435, %r429, %r433;
	add.s32 	%r436, %r430, %r433;
	add.s32 	%r437, %r431, %r433;
	shl.b32 	%r438, %r1, 1;
	or.b32  	%r439, %r103, %r438;
	mul.lo.s32 	%r440, %r439, 65;
	add.s32 	%r441, %r425, %r440;
	mul.wide.u32 	%rd40, %r441, 4;
	mov.u64 	%rd41, shmem;
	add.s64 	%rd5, %rd41, %rd40;
	cvt.u64.u32 	%rd42, %r425;
	cvt.u64.u32 	%rd43, %r440;
	add.s64 	%rd44, %rd43, %rd42;
	shl.b64 	%rd45, %rd44, 2;
	add.s64 	%rd6, %rd41, %rd45;
	shl.b32 	%r442, %r154, 19;
	add.s32 	%r443, %r442, -1572864;
	or.b32  	%r444, %r98, %r104;
	shl.b32 	%r445, %r1, 9;
	shl.b32 	%r446, %r444, 7;
	or.b32  	%r447, %r445, %r446;
	or.b32  	%r52, %r419, %r447;
	cvt.s64.s32 	%rd7, %r443;
	shr.u32 	%r448, %r1, 3;
	mul.lo.s32 	%r449, %r448, 130;
	bfe.s32 	%r450, %r1, 1, 1;
	and.b32  	%r451, %r1, 2;
	setp.eq.s32 	%p200, %r451, 0;
	and.b32  	%r452, %r450, 520;
	mul.lo.s32 	%r453, %r103, 65;
	bfe.s32 	%r454, %r1, 2, 1;
	and.b32  	%r455, %r1, 4;
	setp.eq.s32 	%p201, %r455, 0;
	and.b32  	%r456, %r454, 260;
	and.b32  	%r457, %r1, 1;
	neg.s32 	%r458, %r457;
	setp.eq.b32 	%p202, %r457, 1;
	and.b32  	%r459, %r458, 1040;
	add.s32 	%r460, %r459, %r425;
	add.s32 	%r461, %r460, %r449;
	add.s32 	%r462, %r461, %r452;
	add.s32 	%r463, %r462, %r453;
	add.s32 	%r464, %r463, %r456;
	mul.wide.u32 	%rd46, %r464, 4;
	add.s64 	%rd8, %rd41, %rd46;
	selp.b64 	%rd47, 0, 260, %p201;
	cvt.u64.u32 	%rd48, %r453;
	selp.b64 	%rd49, 0, 520, %p200;
	cvt.u64.u32 	%rd50, %r449;
	selp.b64 	%rd51, 1040, 0, %p202;
	add.s64 	%rd52, %rd42, %rd51;
	add.s64 	%rd53, %rd52, %rd50;
	add.s64 	%rd54, %rd53, %rd49;
	add.s64 	%rd55, %rd54, %rd48;
	add.s64 	%rd56, %rd55, %rd47;
	shl.b64 	%rd57, %rd56, 2;
	add.s64 	%rd9, %rd41, %rd57;
	cvt.u64.u32 	%rd58, %r461;
	add.s64 	%rd59, %rd58, %rd49;
	add.s64 	%rd60, %rd59, %rd48;
	add.s64 	%rd61, %rd60, %rd47;
	shl.b64 	%rd62, %rd61, 2;
	add.s64 	%rd10, %rd41, %rd62;
	add.s32 	%r465, %r464, 2113;
	mul.wide.u32 	%rd63, %r465, 4;
	add.s64 	%rd11, %rd41, %rd63;
	add.s32 	%r466, %r464, 2082;
	mul.wide.u32 	%rd64, %r466, 4;
	add.s64 	%rd12, %rd41, %rd64;
	add.s32 	%r467, %r464, 2114;
	mul.wide.u32 	%rd65, %r467, 4;
	add.s64 	%rd13, %rd41, %rd65;
	add.s32 	%r468, %r464, 4194;
	mul.wide.u32 	%rd66, %r468, 4;
	add.s64 	%rd14, %rd41, %rd66;
	add.s32 	%r469, %r464, 4163;
	mul.wide.u32 	%rd67, %r469, 4;
	add.s64 	%rd15, %rd41, %rd67;
	add.s32 	%r470, %r464, 4195;
	mul.wide.u32 	%rd68, %r470, 4;
	add.s64 	%rd16, %rd41, %rd68;
	add.s32 	%r471, %r464, 6275;
	mul.wide.u32 	%rd69, %r471, 4;
	add.s64 	%rd17, %rd41, %rd69;
	add.s32 	%r472, %r464, 6244;
	mul.wide.u32 	%rd70, %r472, 4;
	add.s64 	%rd18, %rd41, %rd70;
	add.s32 	%r473, %r464, 6276;
	mul.wide.u32 	%rd71, %r473, 4;
	add.s64 	%rd19, %rd41, %rd71;
	and.b32  	%r474, %r4, 1;
	neg.s32 	%r475, %r474;
	and.b32  	%r476, %r475, 130;
	mul.lo.s32 	%r477, %r103, 520;
	bfe.s32 	%r478, %r4, 1, 1;
	and.b32  	%r479, %r478, 65;
	bfe.s32 	%r480, %r4, 2, 1;
	and.b32  	%r481, %r480, 260;
	and.b32  	%r482, %r421, 1040;
	or.b32  	%r483, %r428, %r482;
	or.b32  	%r484, %r429, %r482;
	mul.wide.u32 	%rd20, %r437, 4;
	mul.wide.u32 	%rd21, %r436, 4;
	mul.wide.u32 	%rd22, %r435, 4;
	mul.wide.u32 	%rd23, %r434, 4;
	or.b32  	%r485, %r476, %r479;
	or.b32  	%r486, %r485, %r481;
	or.b32  	%r487, %r486, %r482;
	add.s32 	%r488, %r487, %r431;
	add.s32 	%r489, %r488, %r477;
	mul.wide.u32 	%rd24, %r489, 4;
	add.s32 	%r490, %r487, %r430;
	add.s32 	%r491, %r490, %r477;
	mul.wide.u32 	%rd25, %r491, 4;
	add.s32 	%r492, %r486, %r484;
	add.s32 	%r493, %r492, %r477;
	mul.wide.u32 	%rd26, %r493, 4;
	add.s32 	%r494, %r486, %r483;
	add.s32 	%r495, %r494, %r477;
	mul.wide.u32 	%rd27, %r495, 4;
	setp.eq.s32 	%p203, %r51, 0;
	mov.u16 	%rs1176, 25600;
	mov.u16 	%rs1072, 21504;
	mov.u16 	%rs1184, 18432;
	mov.u16 	%rs1142, -14592;
	mov.u32 	%r7963, %r7941;
	mov.u32 	%r7964, %r7941;
	mov.u32 	%r7965, %r7941;
	mov.u32 	%r7966, %r7941;
	mov.u32 	%r7967, %r7941;
	mov.u32 	%r7968, %r7941;
	mov.u32 	%r7969, %r7941;
	mov.u32 	%r7970, %r7941;
	mov.u32 	%r7971, %r7941;
	mov.u32 	%r7972, %r7941;
	mov.u32 	%r7973, %r7941;
	mov.u32 	%r7974, %r7941;
	mov.u32 	%r7961, %r7941;
	bra.uni 	$L__BB0_83;
$L__BB0_88:                             // %L40296
                                        //   in Loop: Header=BB0_83 Depth=1
	or.b32  	%r7935, %r7975, 1572864;
	add.s32 	%r7936, %r52, %r7935;
	cvt.s64.s32 	%rd125, %r7936;
	add.s64 	%rd126, %rd125, %rd7;
	shr.u64 	%rd127, %rd126, 36;
	add.s64 	%rd128, %rd126, %rd127;
	shr.s64 	%rd129, %rd128, 28;
	setp.lt.s64 	%p231, %rd126, 0;
	and.b64  	%rd130, %rd128, -268435456;
	setp.ne.s64 	%p232, %rd130, %rd126;
	and.pred  	%p233, %p231, %p232;
	selp.u64 	%rd131, 1, 0, %p233;
	sub.s64 	%rd132, %rd131, %rd129;
	shl.b64 	%rd133, %rd132, 28;
	add.s64 	%rd134, %rd133, %rd126;
	shl.b64 	%rd135, %rd134, 2;
	add.s64 	%rd136, %rd3, %rd135;
	st.global.v4.u32 	[%rd136], {%r147, %r149, %r148, %r150};
	add.s32 	%r7961, %r7961, 256;
	add.s32 	%r7937, %r7961, %r152;
	setp.lt.s32 	%p234, %r7937, %r153;
	@%p234 bra 	$L__BB0_83;
	bra.uni 	$L__BB0_89;
$L__BB0_83:                             // %L1450
                                        // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_84 Depth 2
	or.b32  	%r561, %r7961, %r4;
	and.b32  	%r562, %r561, 32528;
	or.b32  	%r563, %r562, %r96;
	or.b32  	%r564, %r563, %r1;
	shl.b32 	%r565, %r564, 13;
	add.s32 	%r566, %r50, %r565;
	shr.s32 	%r567, %r566, 31;
	shr.u32 	%r568, %r567, 4;
	add.s32 	%r569, %r566, %r568;
	shr.s32 	%r570, %r569, 28;
	setp.lt.s32 	%p204, %r566, 0;
	and.b32  	%r571, %r569, -268435456;
	setp.ne.s32 	%p205, %r571, %r566;
	and.pred  	%p206, %p204, %p205;
	selp.u32 	%r572, 1, 0, %p206;
	sub.s32 	%r573, %r572, %r570;
	shl.b32 	%r574, %r573, 28;
	add.s32 	%r575, %r574, %r566;
	mul.wide.s32 	%rd73, %r575, 4;
	add.s64 	%rd74, %rd2, %rd73;
	ld.global.v4.u32 	{%r576, %r577, %r578, %r579}, [%rd74];
	or.b32  	%r580, %r565, 524288;
	add.s32 	%r581, %r50, %r580;
	shr.s32 	%r582, %r581, 31;
	shr.u32 	%r583, %r582, 4;
	add.s32 	%r584, %r581, %r583;
	shr.s32 	%r585, %r584, 28;
	setp.lt.s32 	%p207, %r581, 0;
	and.b32  	%r586, %r584, -268435456;
	setp.ne.s32 	%p208, %r586, %r581;
	and.pred  	%p209, %p207, %p208;
	selp.u32 	%r587, 1, 0, %p209;
	sub.s32 	%r588, %r587, %r585;
	shl.b32 	%r589, %r588, 28;
	add.s32 	%r590, %r589, %r581;
	mul.wide.s32 	%rd75, %r590, 4;
	add.s64 	%rd76, %rd2, %rd75;
	ld.global.v4.u32 	{%r591, %r592, %r593, %r594}, [%rd76];
	or.b32  	%r595, %r565, 1048576;
	add.s32 	%r596, %r50, %r595;
	shr.s32 	%r597, %r596, 31;
	shr.u32 	%r598, %r597, 4;
	add.s32 	%r599, %r596, %r598;
	shr.s32 	%r600, %r599, 28;
	setp.lt.s32 	%p210, %r596, 0;
	and.b32  	%r601, %r599, -268435456;
	setp.ne.s32 	%p211, %r601, %r596;
	and.pred  	%p212, %p210, %p211;
	selp.u32 	%r602, 1, 0, %p212;
	sub.s32 	%r603, %r602, %r600;
	shl.b32 	%r604, %r603, 28;
	add.s32 	%r605, %r604, %r596;
	mul.wide.s32 	%rd77, %r605, 4;
	add.s64 	%rd78, %rd2, %rd77;
	ld.global.v4.u32 	{%r606, %r607, %r608, %r609}, [%rd78];
	or.b32  	%r610, %r565, 1572864;
	add.s32 	%r611, %r50, %r610;
	shr.s32 	%r612, %r611, 31;
	shr.u32 	%r613, %r612, 4;
	add.s32 	%r614, %r611, %r613;
	shr.s32 	%r615, %r614, 28;
	setp.lt.s32 	%p213, %r611, 0;
	and.b32  	%r616, %r614, -268435456;
	setp.ne.s32 	%p214, %r616, %r611;
	and.pred  	%p215, %p213, %p214;
	selp.u32 	%r617, 1, 0, %p215;
	sub.s32 	%r618, %r617, %r615;
	shl.b32 	%r619, %r618, 28;
	add.s32 	%r620, %r619, %r611;
	mul.wide.s32 	%rd79, %r620, 4;
	add.s64 	%rd80, %rd2, %rd79;
	ld.global.v4.u32 	{%r621, %r622, %r623, %r624}, [%rd80];
	selp.b32 	%r625, %r578, %r576, %p203;
	shfl.sync.bfly.b32	%r626, %r625, 8, 31, -1;
	selp.b32 	%r497, %r576, %r626, %p203;
	selp.b32 	%r498, %r626, %r578, %p203;
	selp.b32 	%r627, %r579, %r577, %p203;
	shfl.sync.bfly.b32	%r628, %r627, 8, 31, -1;
	selp.b32 	%r505, %r577, %r628, %p203;
	selp.b32 	%r506, %r628, %r579, %p203;
	selp.b32 	%r629, %r593, %r591, %p203;
	shfl.sync.bfly.b32	%r630, %r629, 8, 31, -1;
	selp.b32 	%r513, %r591, %r630, %p203;
	selp.b32 	%r514, %r630, %r593, %p203;
	selp.b32 	%r631, %r594, %r592, %p203;
	shfl.sync.bfly.b32	%r632, %r631, 8, 31, -1;
	selp.b32 	%r521, %r592, %r632, %p203;
	selp.b32 	%r522, %r632, %r594, %p203;
	selp.b32 	%r633, %r608, %r606, %p203;
	shfl.sync.bfly.b32	%r634, %r633, 8, 31, -1;
	selp.b32 	%r529, %r606, %r634, %p203;
	selp.b32 	%r530, %r634, %r608, %p203;
	selp.b32 	%r635, %r609, %r607, %p203;
	shfl.sync.bfly.b32	%r636, %r635, 8, 31, -1;
	selp.b32 	%r537, %r607, %r636, %p203;
	selp.b32 	%r538, %r636, %r609, %p203;
	selp.b32 	%r637, %r623, %r621, %p203;
	shfl.sync.bfly.b32	%r638, %r637, 8, 31, -1;
	selp.b32 	%r545, %r621, %r638, %p203;
	selp.b32 	%r546, %r638, %r623, %p203;
	selp.b32 	%r639, %r624, %r622, %p203;
	shfl.sync.bfly.b32	%r640, %r639, 8, 31, -1;
	selp.b32 	%r553, %r622, %r640, %p203;
	selp.b32 	%r554, %r640, %r624, %p203;
	mov.u32 	%r555, 21520;
	// begin inline asm
	prmt.b32 %r496, %r497, %r498, %r555;
	// end inline asm
	mov.u32 	%r559, 30258;
	// begin inline asm
	prmt.b32 %r500, %r497, %r498, %r559;
	// end inline asm
	// begin inline asm
	prmt.b32 %r504, %r505, %r506, %r555;
	// end inline asm
	// begin inline asm
	prmt.b32 %r508, %r505, %r506, %r559;
	// end inline asm
	// begin inline asm
	prmt.b32 %r512, %r513, %r514, %r555;
	// end inline asm
	// begin inline asm
	prmt.b32 %r516, %r513, %r514, %r559;
	// end inline asm
	// begin inline asm
	prmt.b32 %r520, %r521, %r522, %r555;
	// end inline asm
	// begin inline asm
	prmt.b32 %r524, %r521, %r522, %r559;
	// end inline asm
	// begin inline asm
	prmt.b32 %r528, %r529, %r530, %r555;
	// end inline asm
	// begin inline asm
	prmt.b32 %r532, %r529, %r530, %r559;
	// end inline asm
	// begin inline asm
	prmt.b32 %r536, %r537, %r538, %r555;
	// end inline asm
	// begin inline asm
	prmt.b32 %r540, %r537, %r538, %r559;
	// end inline asm
	// begin inline asm
	prmt.b32 %r544, %r545, %r546, %r555;
	// end inline asm
	// begin inline asm
	prmt.b32 %r548, %r545, %r546, %r559;
	// end inline asm
	// begin inline asm
	prmt.b32 %r552, %r553, %r554, %r555;
	// end inline asm
	// begin inline asm
	prmt.b32 %r556, %r553, %r554, %r559;
	// end inline asm
	st.shared.u32 	[%rd8], %r496;
	st.shared.u32 	[%rd9+128], %r500;
	st.shared.u32 	[%rd9+4], %r504;
	st.shared.u32 	[%rd9+132], %r508;
	st.shared.u32 	[%rd10+8324], %r512;
	st.shared.u32 	[%rd11], %r516;
	st.shared.u32 	[%rd12], %r520;
	st.shared.u32 	[%rd13], %r524;
	st.shared.u32 	[%rd10+16648], %r528;
	st.shared.u32 	[%rd14], %r532;
	st.shared.u32 	[%rd15], %r536;
	st.shared.u32 	[%rd16], %r540;
	st.shared.u32 	[%rd10+24972], %r544;
	st.shared.u32 	[%rd17], %r548;
	st.shared.u32 	[%rd18], %r552;
	st.shared.u32 	[%rd19], %r556;
	bar.sync 	0;
	mov.u32 	%r7962, 256;
	mov.u64 	%rd141, %rd41;
$L__BB0_84:                             // %L11734
                                        //   Parent Loop BB0_83 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	add.s64 	%rd81, %rd141, %rd27;
	ld.shared.u32 	%r7825, [%rd81];
	add.s64 	%rd82, %rd141, %rd26;
	ld.shared.u32 	%r7826, [%rd82];
	add.s64 	%rd83, %rd141, %rd25;
	ld.shared.u32 	%r7827, [%rd83];
	add.s64 	%rd84, %rd141, %rd24;
	ld.shared.u32 	%r7828, [%rd84];
	// begin inline asm
	mov.b32 %r646, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r657, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r645, %r7825, -2004318072;
	mov.u32 	%r644, 983055;
	// begin inline asm
	lop3.b32 %r643, %r644, %r645, %r646, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r647, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r648, %r646, %r647;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r651, %r643, %r648;
	// end inline asm
	mov.u32 	%r655, 15728880;
	// begin inline asm
	lop3.b32 %r654, %r655, %r645, %r657, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r658, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r659, %r657, %r658;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r662, %r654, %r659;
	// end inline asm
	shr.u32 	%r667, %r645, 8;
	// begin inline asm
	lop3.b32 %r665, %r644, %r667, %r646, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r669, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r670, %r646, %r669;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r673, %r665, %r670;
	// end inline asm
	// begin inline asm
	lop3.b32 %r676, %r655, %r667, %r657, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r680, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r681, %r657, %r680;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r684, %r676, %r681;
	// end inline asm
	// begin inline asm
	mov.b32 %r692, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r703, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r691, %r7826, -2004318072;
	// begin inline asm
	lop3.b32 %r689, %r644, %r691, %r692, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r693, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r694, %r692, %r693;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r697, %r689, %r694;
	// end inline asm
	// begin inline asm
	lop3.b32 %r700, %r655, %r691, %r703, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r704, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r705, %r703, %r704;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r708, %r700, %r705;
	// end inline asm
	shr.u32 	%r713, %r691, 8;
	// begin inline asm
	lop3.b32 %r711, %r644, %r713, %r692, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r715, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r716, %r692, %r715;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r719, %r711, %r716;
	// end inline asm
	// begin inline asm
	lop3.b32 %r722, %r655, %r713, %r703, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r726, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r727, %r703, %r726;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r730, %r722, %r727;
	// end inline asm
	// begin inline asm
	mov.b32 %r738, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r749, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r737, %r7827, -2004318072;
	// begin inline asm
	lop3.b32 %r735, %r644, %r737, %r738, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r739, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r740, %r738, %r739;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r743, %r735, %r740;
	// end inline asm
	// begin inline asm
	lop3.b32 %r746, %r655, %r737, %r749, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r750, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r751, %r749, %r750;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r754, %r746, %r751;
	// end inline asm
	shr.u32 	%r759, %r737, 8;
	// begin inline asm
	lop3.b32 %r757, %r644, %r759, %r738, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r761, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r762, %r738, %r761;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r765, %r757, %r762;
	// end inline asm
	// begin inline asm
	lop3.b32 %r768, %r655, %r759, %r749, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r772, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r773, %r749, %r772;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r776, %r768, %r773;
	// end inline asm
	// begin inline asm
	mov.b32 %r784, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r795, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r783, %r7828, -2004318072;
	// begin inline asm
	lop3.b32 %r781, %r644, %r783, %r784, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r785, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r786, %r784, %r785;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r789, %r781, %r786;
	// end inline asm
	// begin inline asm
	lop3.b32 %r792, %r655, %r783, %r795, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r796, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r797, %r795, %r796;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r800, %r792, %r797;
	// end inline asm
	shr.u32 	%r805, %r783, 8;
	// begin inline asm
	lop3.b32 %r803, %r644, %r805, %r784, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r807, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r808, %r784, %r807;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r811, %r803, %r808;
	// end inline asm
	// begin inline asm
	lop3.b32 %r814, %r655, %r805, %r795, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r818, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r819, %r795, %r818;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r822, %r814, %r819;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r825, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r827, %r825, %r651;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r830, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r832, %r830, %r662;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r835, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r837, %r835, %r673;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r840, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r842, %r840, %r684;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r845, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r847, %r845, %r697;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r850, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r852, %r850, %r708;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r855, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r857, %r855, %r719;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r860, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r862, %r860, %r730;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r865, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r867, %r865, %r743;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r870, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r872, %r870, %r754;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r875, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r877, %r875, %r765;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r880, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r882, %r880, %r776;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r885, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r887, %r885, %r789;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r890, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r892, %r890, %r800;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r895, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r897, %r895, %r811;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r900, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r902, %r900, %r822;
	// end inline asm
	// begin inline asm
	mov.b32 %r910, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r921, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r909, %r7963, -2004318072;
	// begin inline asm
	lop3.b32 %r907, %r644, %r909, %r910, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r911, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r912, %r910, %r911;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r915, %r907, %r912;
	// end inline asm
	// begin inline asm
	lop3.b32 %r918, %r655, %r909, %r921, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r922, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r923, %r921, %r922;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r926, %r918, %r923;
	// end inline asm
	shr.u32 	%r931, %r909, 8;
	// begin inline asm
	lop3.b32 %r929, %r644, %r931, %r910, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r933, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r934, %r910, %r933;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r937, %r929, %r934;
	// end inline asm
	// begin inline asm
	lop3.b32 %r940, %r655, %r931, %r921, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r944, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r945, %r921, %r944;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r948, %r940, %r945;
	// end inline asm
	// begin inline asm
	mov.b32 %r956, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r967, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r955, %r7964, -2004318072;
	// begin inline asm
	lop3.b32 %r953, %r644, %r955, %r956, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r957, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r958, %r956, %r957;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r961, %r953, %r958;
	// end inline asm
	// begin inline asm
	lop3.b32 %r964, %r655, %r955, %r967, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r968, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r969, %r967, %r968;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r972, %r964, %r969;
	// end inline asm
	shr.u32 	%r977, %r955, 8;
	// begin inline asm
	lop3.b32 %r975, %r644, %r977, %r956, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r979, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r980, %r956, %r979;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r983, %r975, %r980;
	// end inline asm
	// begin inline asm
	lop3.b32 %r986, %r655, %r977, %r967, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r990, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r991, %r967, %r990;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r994, %r986, %r991;
	// end inline asm
	// begin inline asm
	mov.b32 %r1002, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1013, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1001, %r7965, -2004318072;
	// begin inline asm
	lop3.b32 %r999, %r644, %r1001, %r1002, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1003, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1004, %r1002, %r1003;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1007, %r999, %r1004;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1010, %r655, %r1001, %r1013, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1014, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1015, %r1013, %r1014;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1018, %r1010, %r1015;
	// end inline asm
	shr.u32 	%r1023, %r1001, 8;
	// begin inline asm
	lop3.b32 %r1021, %r644, %r1023, %r1002, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1025, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1026, %r1002, %r1025;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1029, %r1021, %r1026;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1032, %r655, %r1023, %r1013, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1036, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1037, %r1013, %r1036;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1040, %r1032, %r1037;
	// end inline asm
	// begin inline asm
	mov.b32 %r1048, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1059, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1047, %r7966, -2004318072;
	// begin inline asm
	lop3.b32 %r1045, %r644, %r1047, %r1048, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1049, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1050, %r1048, %r1049;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1053, %r1045, %r1050;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1056, %r655, %r1047, %r1059, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1060, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1061, %r1059, %r1060;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1064, %r1056, %r1061;
	// end inline asm
	shr.u32 	%r1069, %r1047, 8;
	// begin inline asm
	lop3.b32 %r1067, %r644, %r1069, %r1048, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1071, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1072, %r1048, %r1071;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1075, %r1067, %r1072;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1078, %r655, %r1069, %r1059, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1082, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1083, %r1059, %r1082;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1086, %r1078, %r1083;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1089, %r197, %r915, %r827;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1093, %r197, %r926, %r832;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1097, %r197, %r937, %r837;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1101, %r197, %r948, %r842;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1105, %r197, %r961, %r847;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1109, %r197, %r972, %r852;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1113, %r197, %r983, %r857;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1117, %r197, %r994, %r862;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1121, %r197, %r1007, %r867;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1125, %r197, %r1018, %r872;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1129, %r197, %r1029, %r877;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1133, %r197, %r1040, %r882;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1137, %r197, %r1053, %r887;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1141, %r197, %r1064, %r892;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1145, %r197, %r1075, %r897;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1149, %r197, %r1086, %r902;
	// end inline asm
	// begin inline asm
	mov.b32 %r1158, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1169, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1157, %r7967, -2004318072;
	// begin inline asm
	lop3.b32 %r1155, %r644, %r1157, %r1158, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1159, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1160, %r1158, %r1159;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1163, %r1155, %r1160;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1166, %r655, %r1157, %r1169, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1170, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1171, %r1169, %r1170;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1174, %r1166, %r1171;
	// end inline asm
	shr.u32 	%r1179, %r1157, 8;
	// begin inline asm
	lop3.b32 %r1177, %r644, %r1179, %r1158, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1181, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1182, %r1158, %r1181;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1185, %r1177, %r1182;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1188, %r655, %r1179, %r1169, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1192, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1193, %r1169, %r1192;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1196, %r1188, %r1193;
	// end inline asm
	// begin inline asm
	mov.b32 %r1204, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1215, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1203, %r7968, -2004318072;
	// begin inline asm
	lop3.b32 %r1201, %r644, %r1203, %r1204, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1205, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1206, %r1204, %r1205;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1209, %r1201, %r1206;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1212, %r655, %r1203, %r1215, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1216, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1217, %r1215, %r1216;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1220, %r1212, %r1217;
	// end inline asm
	shr.u32 	%r1225, %r1203, 8;
	// begin inline asm
	lop3.b32 %r1223, %r644, %r1225, %r1204, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1227, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1228, %r1204, %r1227;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1231, %r1223, %r1228;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1234, %r655, %r1225, %r1215, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1238, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1239, %r1215, %r1238;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1242, %r1234, %r1239;
	// end inline asm
	// begin inline asm
	mov.b32 %r1250, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1261, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1249, %r7969, -2004318072;
	// begin inline asm
	lop3.b32 %r1247, %r644, %r1249, %r1250, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1251, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1252, %r1250, %r1251;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1255, %r1247, %r1252;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1258, %r655, %r1249, %r1261, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1262, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1263, %r1261, %r1262;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1266, %r1258, %r1263;
	// end inline asm
	shr.u32 	%r1271, %r1249, 8;
	// begin inline asm
	lop3.b32 %r1269, %r644, %r1271, %r1250, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1273, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1274, %r1250, %r1273;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1277, %r1269, %r1274;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1280, %r655, %r1271, %r1261, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1284, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1285, %r1261, %r1284;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1288, %r1280, %r1285;
	// end inline asm
	// begin inline asm
	mov.b32 %r1296, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1307, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1295, %r7970, -2004318072;
	// begin inline asm
	lop3.b32 %r1293, %r644, %r1295, %r1296, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1297, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1298, %r1296, %r1297;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1301, %r1293, %r1298;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1304, %r655, %r1295, %r1307, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1308, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1309, %r1307, %r1308;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1312, %r1304, %r1309;
	// end inline asm
	shr.u32 	%r1317, %r1295, 8;
	// begin inline asm
	lop3.b32 %r1315, %r644, %r1317, %r1296, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1319, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1320, %r1296, %r1319;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1323, %r1315, %r1320;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1326, %r655, %r1317, %r1307, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1330, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1331, %r1307, %r1330;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1334, %r1326, %r1331;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1337, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1339, %r1337, %r1163, %r1089;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1343, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1345, %r1343, %r1174, %r1093;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1349, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1351, %r1349, %r1185, %r1097;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1355, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1357, %r1355, %r1196, %r1101;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1361, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1363, %r1361, %r1209, %r1105;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1367, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1369, %r1367, %r1220, %r1109;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1373, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1375, %r1373, %r1231, %r1113;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1379, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1381, %r1379, %r1242, %r1117;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1385, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1387, %r1385, %r1255, %r1121;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1391, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1393, %r1391, %r1266, %r1125;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1397, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1399, %r1397, %r1277, %r1129;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1403, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1405, %r1403, %r1288, %r1133;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1409, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1411, %r1409, %r1301, %r1137;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1415, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1417, %r1415, %r1312, %r1141;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1421, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1423, %r1421, %r1323, %r1145;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1427, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1429, %r1427, %r1334, %r1149;
	// end inline asm
	// begin inline asm
	mov.b32 %r1438, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1449, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1437, %r7971, -2004318072;
	// begin inline asm
	lop3.b32 %r1435, %r644, %r1437, %r1438, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1439, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1440, %r1438, %r1439;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1443, %r1435, %r1440;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1446, %r655, %r1437, %r1449, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1450, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1451, %r1449, %r1450;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1454, %r1446, %r1451;
	// end inline asm
	shr.u32 	%r1459, %r1437, 8;
	// begin inline asm
	lop3.b32 %r1457, %r644, %r1459, %r1438, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1461, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1462, %r1438, %r1461;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1465, %r1457, %r1462;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1468, %r655, %r1459, %r1449, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1472, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1473, %r1449, %r1472;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1476, %r1468, %r1473;
	// end inline asm
	// begin inline asm
	mov.b32 %r1484, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1495, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1483, %r7972, -2004318072;
	// begin inline asm
	lop3.b32 %r1481, %r644, %r1483, %r1484, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1485, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1486, %r1484, %r1485;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1489, %r1481, %r1486;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1492, %r655, %r1483, %r1495, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1496, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1497, %r1495, %r1496;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1500, %r1492, %r1497;
	// end inline asm
	shr.u32 	%r1505, %r1483, 8;
	// begin inline asm
	lop3.b32 %r1503, %r644, %r1505, %r1484, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1507, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1508, %r1484, %r1507;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1511, %r1503, %r1508;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1514, %r655, %r1505, %r1495, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1518, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1519, %r1495, %r1518;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1522, %r1514, %r1519;
	// end inline asm
	// begin inline asm
	mov.b32 %r1530, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1541, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1529, %r7973, -2004318072;
	// begin inline asm
	lop3.b32 %r1527, %r644, %r1529, %r1530, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1531, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1532, %r1530, %r1531;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1535, %r1527, %r1532;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1538, %r655, %r1529, %r1541, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1542, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1543, %r1541, %r1542;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1546, %r1538, %r1543;
	// end inline asm
	shr.u32 	%r1551, %r1529, 8;
	// begin inline asm
	lop3.b32 %r1549, %r644, %r1551, %r1530, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1553, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1554, %r1530, %r1553;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1557, %r1549, %r1554;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1560, %r655, %r1551, %r1541, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1564, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1565, %r1541, %r1564;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1568, %r1560, %r1565;
	// end inline asm
	// begin inline asm
	mov.b32 %r1576, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1587, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1575, %r7974, -2004318072;
	// begin inline asm
	lop3.b32 %r1573, %r644, %r1575, %r1576, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1577, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1578, %r1576, %r1577;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1581, %r1573, %r1578;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1584, %r655, %r1575, %r1587, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1588, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1589, %r1587, %r1588;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1592, %r1584, %r1589;
	// end inline asm
	shr.u32 	%r1597, %r1575, 8;
	// begin inline asm
	lop3.b32 %r1595, %r644, %r1597, %r1576, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1599, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1600, %r1576, %r1599;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1603, %r1595, %r1600;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1606, %r655, %r1597, %r1587, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1610, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1611, %r1587, %r1610;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1614, %r1606, %r1611;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1688, %r233, %r1443, %r1339;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1685, %r233, %r1454, %r1345;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1697, %r233, %r1465, %r1351;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1694, %r233, %r1476, %r1357;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1706, %r233, %r1489, %r1363;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1703, %r233, %r1500, %r1369;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1715, %r233, %r1511, %r1375;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1712, %r233, %r1522, %r1381;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1724, %r233, %r1535, %r1387;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1721, %r233, %r1546, %r1393;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1733, %r233, %r1557, %r1399;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1730, %r233, %r1568, %r1405;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1742, %r233, %r1581, %r1411;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1739, %r233, %r1592, %r1417;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1751, %r233, %r1603, %r1423;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1748, %r233, %r1614, %r1429;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1681, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1683, %r1681, %r1685;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1686, %r254, %r1688, %r1683;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1690, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1692, %r1690, %r1694;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1695, %r254, %r1697, %r1692;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1699, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1701, %r1699, %r1703;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1704, %r254, %r1706, %r1701;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1708, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1710, %r1708, %r1712;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1713, %r254, %r1715, %r1710;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1717, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1719, %r1717, %r1721;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1722, %r254, %r1724, %r1719;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1726, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1728, %r1726, %r1730;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1731, %r254, %r1733, %r1728;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1735, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1737, %r1735, %r1739;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1740, %r254, %r1742, %r1737;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1744, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1746, %r1744, %r1748;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1749, %r254, %r1751, %r1746;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1753, %r257, %r1688;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1756, %r254, %r1685, %r1753;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1760, %r257, %r1697;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1763, %r254, %r1694, %r1760;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1767, %r257, %r1706;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1770, %r254, %r1703, %r1767;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1774, %r257, %r1715;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1777, %r254, %r1712, %r1774;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1781, %r257, %r1724;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1784, %r254, %r1721, %r1781;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1788, %r257, %r1733;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1791, %r254, %r1730, %r1788;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1795, %r257, %r1742;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1798, %r254, %r1739, %r1795;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1802, %r257, %r1751;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1805, %r254, %r1748, %r1802;
	// end inline asm
	mov.u32 	%r1817, 0;
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1896, %r1893}, {%r313, %r319, %r316, %r322}, {%r1686, %r1756}, {%r1817, %r1817};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1905, %r1902}, {%r313, %r319, %r316, %r322}, {%r1695, %r1763}, {%r1817, %r1817};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1914, %r1911}, {%r313, %r319, %r316, %r322}, {%r1704, %r1770}, {%r1817, %r1817};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1923, %r1920}, {%r313, %r319, %r316, %r322}, {%r1713, %r1777}, {%r1817, %r1817};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1932, %r1929}, {%r313, %r319, %r316, %r322}, {%r1722, %r1784}, {%r1817, %r1817};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1941, %r1938}, {%r313, %r319, %r316, %r322}, {%r1731, %r1791}, {%r1817, %r1817};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1950, %r1947}, {%r313, %r319, %r316, %r322}, {%r1740, %r1798}, {%r1817, %r1817};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1959, %r1956}, {%r313, %r319, %r316, %r322}, {%r1749, %r1805}, {%r1817, %r1817};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1889, %r360;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1891, %r1889, %r1893;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1894, %r357, %r1896, %r1891;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1898, %r360;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1900, %r1898, %r1902;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1903, %r357, %r1905, %r1900;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1907, %r360;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1909, %r1907, %r1911;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1912, %r357, %r1914, %r1909;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1916, %r360;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1918, %r1916, %r1920;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1921, %r357, %r1923, %r1918;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1925, %r360;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1927, %r1925, %r1929;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1930, %r357, %r1932, %r1927;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1934, %r360;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1936, %r1934, %r1938;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1939, %r357, %r1941, %r1936;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1943, %r360;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1945, %r1943, %r1947;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1948, %r357, %r1950, %r1945;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1952, %r360;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1954, %r1952, %r1956;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1957, %r357, %r1959, %r1954;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1961, %r360, %r1896;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1964, %r357, %r1893, %r1961;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1968, %r360, %r1905;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1971, %r357, %r1902, %r1968;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1975, %r360, %r1914;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1978, %r357, %r1911, %r1975;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1982, %r360, %r1923;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1985, %r357, %r1920, %r1982;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1989, %r360, %r1932;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1992, %r357, %r1929, %r1989;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1996, %r360, %r1941;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1999, %r357, %r1938, %r1996;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2003, %r360, %r1950;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2006, %r357, %r1947, %r2003;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2010, %r360, %r1959;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2013, %r357, %r1956, %r2010;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2017, %r2018}, {%r391, %r397, %r394, %r400}, {%r1894, %r1964}, {%r1817, %r1817};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2027, %r2028}, {%r391, %r397, %r394, %r400}, {%r1903, %r1971}, {%r1817, %r1817};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2037, %r2038}, {%r391, %r397, %r394, %r400}, {%r1912, %r1978}, {%r1817, %r1817};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2047, %r2048}, {%r391, %r397, %r394, %r400}, {%r1921, %r1985}, {%r1817, %r1817};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2057, %r2058}, {%r391, %r397, %r394, %r400}, {%r1930, %r1992}, {%r1817, %r1817};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2067, %r2068}, {%r391, %r397, %r394, %r400}, {%r1939, %r1999}, {%r1817, %r1817};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2077, %r2078}, {%r391, %r397, %r394, %r400}, {%r1948, %r2006}, {%r1817, %r1817};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2087, %r2088}, {%r391, %r397, %r394, %r400}, {%r1957, %r2013}, {%r1817, %r1817};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2097, %r100, %r2017;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2100, %r100, %r2018;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2103, %r100, %r2027;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2106, %r100, %r2028;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2109, %r100, %r2037;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2112, %r100, %r2038;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2115, %r100, %r2047;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2118, %r100, %r2048;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2121, %r100, %r2057;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2124, %r100, %r2058;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2127, %r100, %r2067;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2130, %r100, %r2068;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2133, %r100, %r2077;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2136, %r100, %r2078;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2139, %r100, %r2087;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2142, %r100, %r2088;
	// end inline asm
	// begin inline asm
	mov.b32 %r2145, {%rs1142, %rs1142};
	// end inline asm
	mov.u16 	%rs195, 18176;
	// begin inline asm
	mov.b32 %r2146, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2147, %r2097, %r2145;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2150, %r2147, %r2146;
	// end inline asm
	// begin inline asm
	mov.b32 %r2153, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2154, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2155, %r2100, %r2153;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2158, %r2155, %r2154;
	// end inline asm
	// begin inline asm
	mov.b32 %r2161, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2162, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2163, %r2103, %r2161;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2166, %r2163, %r2162;
	// end inline asm
	// begin inline asm
	mov.b32 %r2169, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2170, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2171, %r2106, %r2169;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2174, %r2171, %r2170;
	// end inline asm
	// begin inline asm
	mov.b32 %r2177, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2178, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2179, %r2109, %r2177;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2182, %r2179, %r2178;
	// end inline asm
	// begin inline asm
	mov.b32 %r2185, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2186, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2187, %r2112, %r2185;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2190, %r2187, %r2186;
	// end inline asm
	// begin inline asm
	mov.b32 %r2193, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2194, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2195, %r2115, %r2193;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2198, %r2195, %r2194;
	// end inline asm
	// begin inline asm
	mov.b32 %r2201, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2202, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2203, %r2118, %r2201;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2206, %r2203, %r2202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2209, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2210, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2211, %r2121, %r2209;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2214, %r2211, %r2210;
	// end inline asm
	// begin inline asm
	mov.b32 %r2217, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2218, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2219, %r2124, %r2217;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2222, %r2219, %r2218;
	// end inline asm
	// begin inline asm
	mov.b32 %r2225, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2226, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2227, %r2127, %r2225;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2230, %r2227, %r2226;
	// end inline asm
	// begin inline asm
	mov.b32 %r2233, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2234, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2235, %r2130, %r2233;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2238, %r2235, %r2234;
	// end inline asm
	// begin inline asm
	mov.b32 %r2241, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2242, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2243, %r2133, %r2241;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2246, %r2243, %r2242;
	// end inline asm
	// begin inline asm
	mov.b32 %r2249, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2250, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2251, %r2136, %r2249;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2254, %r2251, %r2250;
	// end inline asm
	// begin inline asm
	mov.b32 %r2257, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2258, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2259, %r2139, %r2257;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2262, %r2259, %r2258;
	// end inline asm
	// begin inline asm
	mov.b32 %r2265, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2266, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2267, %r2142, %r2265;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2270, %r2267, %r2266;
	// end inline asm
	// begin inline asm
	mov.b32 %r2276, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2274, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2275, %r2276, %r2274;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2278, %r2150, %r2275;
	// end inline asm
	// begin inline asm
	mov.b32 %r2281, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2282, %r2276, %r2281;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2285, %r2158, %r2282;
	// end inline asm
	// begin inline asm
	mov.b32 %r2288, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2289, %r2276, %r2288;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2292, %r2166, %r2289;
	// end inline asm
	// begin inline asm
	mov.b32 %r2295, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2296, %r2276, %r2295;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2299, %r2174, %r2296;
	// end inline asm
	mov.u32 	%r2305, 25152;
	// begin inline asm
	prmt.b32 %r2302, %r2278, %r2292, %r2305;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2306, %r2285, %r2299, %r2305;
	// end inline asm
	shl.b32 	%r2313, %r2306, 4;
	mov.u32 	%r2311, 252645135;
	// begin inline asm
	lop3.b32 %r2310, %r2311, %r2302, %r2313, 202;
	// end inline asm
	xor.b32  	%r7829, %r2310, -2004318072;
	// begin inline asm
	mov.b32 %r2317, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2315, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2316, %r2317, %r2315;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2319, %r2182, %r2316;
	// end inline asm
	// begin inline asm
	mov.b32 %r2322, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2323, %r2317, %r2322;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2326, %r2190, %r2323;
	// end inline asm
	// begin inline asm
	mov.b32 %r2329, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2330, %r2317, %r2329;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2333, %r2198, %r2330;
	// end inline asm
	// begin inline asm
	mov.b32 %r2336, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2337, %r2317, %r2336;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2340, %r2206, %r2337;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2343, %r2319, %r2333, %r2305;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2347, %r2326, %r2340, %r2305;
	// end inline asm
	shl.b32 	%r2354, %r2347, 4;
	// begin inline asm
	lop3.b32 %r2351, %r2311, %r2343, %r2354, 202;
	// end inline asm
	xor.b32  	%r7830, %r2351, -2004318072;
	// begin inline asm
	mov.b32 %r2358, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2356, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2357, %r2358, %r2356;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2360, %r2214, %r2357;
	// end inline asm
	// begin inline asm
	mov.b32 %r2363, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2364, %r2358, %r2363;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2367, %r2222, %r2364;
	// end inline asm
	// begin inline asm
	mov.b32 %r2370, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2371, %r2358, %r2370;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2374, %r2230, %r2371;
	// end inline asm
	// begin inline asm
	mov.b32 %r2377, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2378, %r2358, %r2377;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2381, %r2238, %r2378;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2384, %r2360, %r2374, %r2305;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2388, %r2367, %r2381, %r2305;
	// end inline asm
	shl.b32 	%r2395, %r2388, 4;
	// begin inline asm
	lop3.b32 %r2392, %r2311, %r2384, %r2395, 202;
	// end inline asm
	xor.b32  	%r7831, %r2392, -2004318072;
	// begin inline asm
	mov.b32 %r2399, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2397, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2398, %r2399, %r2397;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2401, %r2246, %r2398;
	// end inline asm
	// begin inline asm
	mov.b32 %r2404, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2405, %r2399, %r2404;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2408, %r2254, %r2405;
	// end inline asm
	// begin inline asm
	mov.b32 %r2411, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2412, %r2399, %r2411;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2415, %r2262, %r2412;
	// end inline asm
	// begin inline asm
	mov.b32 %r2418, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2419, %r2399, %r2418;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2422, %r2270, %r2419;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2425, %r2401, %r2415, %r2305;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2429, %r2408, %r2422, %r2305;
	// end inline asm
	shl.b32 	%r2436, %r2429, 4;
	// begin inline asm
	lop3.b32 %r2433, %r2311, %r2425, %r2436, 202;
	// end inline asm
	xor.b32  	%r7832, %r2433, -2004318072;
	add.s64 	%rd85, %rd141, %rd23;
	st.shared.u32 	[%rd85], %r7829;
	add.s64 	%rd86, %rd141, %rd22;
	st.shared.u32 	[%rd86], %r7830;
	add.s64 	%rd87, %rd141, %rd21;
	st.shared.u32 	[%rd87], %r7831;
	add.s64 	%rd88, %rd141, %rd20;
	st.shared.u32 	[%rd88], %r7832;
	ld.shared.u32 	%r7963, [%rd81];
	ld.shared.u32 	%r7964, [%rd82];
	ld.shared.u32 	%r7965, [%rd83];
	ld.shared.u32 	%r7966, [%rd84];
	// begin inline asm
	mov.b32 %r2442, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2453, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r2441, %r7963, -2004318072;
	// begin inline asm
	lop3.b32 %r2439, %r644, %r2441, %r2442, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2443, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2444, %r2442, %r2443;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2447, %r2439, %r2444;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2450, %r655, %r2441, %r2453, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2454, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2455, %r2453, %r2454;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2458, %r2450, %r2455;
	// end inline asm
	shr.u32 	%r2463, %r2441, 8;
	// begin inline asm
	lop3.b32 %r2461, %r644, %r2463, %r2442, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2465, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2466, %r2442, %r2465;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2469, %r2461, %r2466;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2472, %r655, %r2463, %r2453, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2476, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2477, %r2453, %r2476;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2480, %r2472, %r2477;
	// end inline asm
	// begin inline asm
	mov.b32 %r2488, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2499, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r2487, %r7964, -2004318072;
	// begin inline asm
	lop3.b32 %r2485, %r644, %r2487, %r2488, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2489, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2490, %r2488, %r2489;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2493, %r2485, %r2490;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2496, %r655, %r2487, %r2499, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2500, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2501, %r2499, %r2500;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2504, %r2496, %r2501;
	// end inline asm
	shr.u32 	%r2509, %r2487, 8;
	// begin inline asm
	lop3.b32 %r2507, %r644, %r2509, %r2488, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2511, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2512, %r2488, %r2511;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2515, %r2507, %r2512;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2518, %r655, %r2509, %r2499, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2522, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2523, %r2499, %r2522;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2526, %r2518, %r2523;
	// end inline asm
	// begin inline asm
	mov.b32 %r2534, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2545, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r2533, %r7965, -2004318072;
	// begin inline asm
	lop3.b32 %r2531, %r644, %r2533, %r2534, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2535, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2536, %r2534, %r2535;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2539, %r2531, %r2536;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2542, %r655, %r2533, %r2545, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2546, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2547, %r2545, %r2546;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2550, %r2542, %r2547;
	// end inline asm
	shr.u32 	%r2555, %r2533, 8;
	// begin inline asm
	lop3.b32 %r2553, %r644, %r2555, %r2534, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2557, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2558, %r2534, %r2557;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2561, %r2553, %r2558;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2564, %r655, %r2555, %r2545, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2568, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2569, %r2545, %r2568;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2572, %r2564, %r2569;
	// end inline asm
	// begin inline asm
	mov.b32 %r2580, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2591, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r2579, %r7966, -2004318072;
	// begin inline asm
	lop3.b32 %r2577, %r644, %r2579, %r2580, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2581, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2582, %r2580, %r2581;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2585, %r2577, %r2582;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2588, %r655, %r2579, %r2591, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2592, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2593, %r2591, %r2592;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2596, %r2588, %r2593;
	// end inline asm
	shr.u32 	%r2601, %r2579, 8;
	// begin inline asm
	lop3.b32 %r2599, %r644, %r2601, %r2580, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2603, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2604, %r2580, %r2603;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2607, %r2599, %r2604;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2610, %r655, %r2601, %r2591, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2614, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2615, %r2591, %r2614;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2618, %r2610, %r2615;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2621, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2623, %r2621, %r2447;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2626, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2628, %r2626, %r2458;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2631, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2633, %r2631, %r2469;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2636, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2638, %r2636, %r2480;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2641, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2643, %r2641, %r2493;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2646, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2648, %r2646, %r2504;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2651, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2653, %r2651, %r2515;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2656, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2658, %r2656, %r2526;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2661, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2663, %r2661, %r2539;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2666, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2668, %r2666, %r2550;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2671, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2673, %r2671, %r2561;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2676, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2678, %r2676, %r2572;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2681, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2683, %r2681, %r2585;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2686, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2688, %r2686, %r2596;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2691, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2693, %r2691, %r2607;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2696, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2698, %r2696, %r2618;
	// end inline asm
	// begin inline asm
	mov.b32 %r2706, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2717, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2703, %r644, %r1157, %r2706, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2707, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2708, %r2706, %r2707;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2711, %r2703, %r2708;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2714, %r655, %r1157, %r2717, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2718, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2719, %r2717, %r2718;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2722, %r2714, %r2719;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2725, %r644, %r1179, %r2706, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2729, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2730, %r2706, %r2729;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2733, %r2725, %r2730;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2736, %r655, %r1179, %r2717, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2740, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2741, %r2717, %r2740;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2744, %r2736, %r2741;
	// end inline asm
	// begin inline asm
	mov.b32 %r2752, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2763, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2749, %r644, %r1203, %r2752, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2753, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2754, %r2752, %r2753;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2757, %r2749, %r2754;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2760, %r655, %r1203, %r2763, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2764, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2765, %r2763, %r2764;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2768, %r2760, %r2765;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2771, %r644, %r1225, %r2752, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2775, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2776, %r2752, %r2775;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2779, %r2771, %r2776;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2782, %r655, %r1225, %r2763, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2786, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2787, %r2763, %r2786;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2790, %r2782, %r2787;
	// end inline asm
	// begin inline asm
	mov.b32 %r2798, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2809, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2795, %r644, %r1249, %r2798, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2799, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2800, %r2798, %r2799;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2803, %r2795, %r2800;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2806, %r655, %r1249, %r2809, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2810, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2811, %r2809, %r2810;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2814, %r2806, %r2811;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2817, %r644, %r1271, %r2798, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2821, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2822, %r2798, %r2821;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2825, %r2817, %r2822;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2828, %r655, %r1271, %r2809, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2832, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2833, %r2809, %r2832;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2836, %r2828, %r2833;
	// end inline asm
	// begin inline asm
	mov.b32 %r2844, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2855, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2841, %r644, %r1295, %r2844, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2845, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2846, %r2844, %r2845;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2849, %r2841, %r2846;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2852, %r655, %r1295, %r2855, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2856, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2857, %r2855, %r2856;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2860, %r2852, %r2857;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2863, %r644, %r1317, %r2844, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2867, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2868, %r2844, %r2867;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2871, %r2863, %r2868;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2874, %r655, %r1317, %r2855, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2878, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2879, %r2855, %r2878;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2882, %r2874, %r2879;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2885, %r197, %r2711, %r2623;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2889, %r197, %r2722, %r2628;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2893, %r197, %r2733, %r2633;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2897, %r197, %r2744, %r2638;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2901, %r197, %r2757, %r2643;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2905, %r197, %r2768, %r2648;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2909, %r197, %r2779, %r2653;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2913, %r197, %r2790, %r2658;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2917, %r197, %r2803, %r2663;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2921, %r197, %r2814, %r2668;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2925, %r197, %r2825, %r2673;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2929, %r197, %r2836, %r2678;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2933, %r197, %r2849, %r2683;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2937, %r197, %r2860, %r2688;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2941, %r197, %r2871, %r2693;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2945, %r197, %r2882, %r2698;
	// end inline asm
	// begin inline asm
	mov.b32 %r2954, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2965, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2951, %r644, %r1437, %r2954, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2955, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2956, %r2954, %r2955;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2959, %r2951, %r2956;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2962, %r655, %r1437, %r2965, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2966, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2967, %r2965, %r2966;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2970, %r2962, %r2967;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2973, %r644, %r1459, %r2954, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2977, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2978, %r2954, %r2977;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2981, %r2973, %r2978;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2984, %r655, %r1459, %r2965, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2988, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2989, %r2965, %r2988;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2992, %r2984, %r2989;
	// end inline asm
	// begin inline asm
	mov.b32 %r3000, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r3011, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2997, %r644, %r1483, %r3000, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3001, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3002, %r3000, %r3001;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3005, %r2997, %r3002;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3008, %r655, %r1483, %r3011, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3012, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3013, %r3011, %r3012;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3016, %r3008, %r3013;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3019, %r644, %r1505, %r3000, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3023, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3024, %r3000, %r3023;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3027, %r3019, %r3024;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3030, %r655, %r1505, %r3011, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3034, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3035, %r3011, %r3034;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3038, %r3030, %r3035;
	// end inline asm
	// begin inline asm
	mov.b32 %r3046, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r3057, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3043, %r644, %r1529, %r3046, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3047, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3048, %r3046, %r3047;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3051, %r3043, %r3048;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3054, %r655, %r1529, %r3057, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3058, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3059, %r3057, %r3058;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3062, %r3054, %r3059;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3065, %r644, %r1551, %r3046, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3069, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3070, %r3046, %r3069;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3073, %r3065, %r3070;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3076, %r655, %r1551, %r3057, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3080, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3081, %r3057, %r3080;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3084, %r3076, %r3081;
	// end inline asm
	// begin inline asm
	mov.b32 %r3092, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r3103, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3089, %r644, %r1575, %r3092, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3093, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3094, %r3092, %r3093;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3097, %r3089, %r3094;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3100, %r655, %r1575, %r3103, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3104, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3105, %r3103, %r3104;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3108, %r3100, %r3105;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3111, %r644, %r1597, %r3092, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3115, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3116, %r3092, %r3115;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3119, %r3111, %r3116;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3122, %r655, %r1597, %r3103, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3126, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3127, %r3103, %r3126;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3130, %r3122, %r3127;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3133, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3135, %r3133, %r2959, %r2885;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3139, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3141, %r3139, %r2970, %r2889;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3145, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3147, %r3145, %r2981, %r2893;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3151, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3153, %r3151, %r2992, %r2897;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3157, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3159, %r3157, %r3005, %r2901;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3163, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3165, %r3163, %r3016, %r2905;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3169, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3171, %r3169, %r3027, %r2909;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3175, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3177, %r3175, %r3038, %r2913;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3181, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3183, %r3181, %r3051, %r2917;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3187, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3189, %r3187, %r3062, %r2921;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3193, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3195, %r3193, %r3073, %r2925;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3199, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3201, %r3199, %r3084, %r2929;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3205, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3207, %r3205, %r3097, %r2933;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3211, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3213, %r3211, %r3108, %r2937;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3217, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3219, %r3217, %r3119, %r2941;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3223, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3225, %r3223, %r3130, %r2945;
	// end inline asm
	// begin inline asm
	mov.b32 %r3234, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r3245, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3231, %r644, %r645, %r3234, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3235, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3236, %r3234, %r3235;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3239, %r3231, %r3236;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3242, %r655, %r645, %r3245, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3246, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3247, %r3245, %r3246;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3250, %r3242, %r3247;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3253, %r644, %r667, %r3234, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3257, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3258, %r3234, %r3257;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3261, %r3253, %r3258;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3264, %r655, %r667, %r3245, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3268, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3269, %r3245, %r3268;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3272, %r3264, %r3269;
	// end inline asm
	// begin inline asm
	mov.b32 %r3280, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r3291, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3277, %r644, %r691, %r3280, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3281, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3282, %r3280, %r3281;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3285, %r3277, %r3282;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3288, %r655, %r691, %r3291, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3292, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3293, %r3291, %r3292;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3296, %r3288, %r3293;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3299, %r644, %r713, %r3280, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3303, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3304, %r3280, %r3303;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3307, %r3299, %r3304;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3310, %r655, %r713, %r3291, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3314, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3315, %r3291, %r3314;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3318, %r3310, %r3315;
	// end inline asm
	// begin inline asm
	mov.b32 %r3326, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r3337, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3323, %r644, %r737, %r3326, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3327, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3328, %r3326, %r3327;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3331, %r3323, %r3328;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3334, %r655, %r737, %r3337, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3338, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3339, %r3337, %r3338;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3342, %r3334, %r3339;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3345, %r644, %r759, %r3326, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3349, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3350, %r3326, %r3349;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3353, %r3345, %r3350;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3356, %r655, %r759, %r3337, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3360, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3361, %r3337, %r3360;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3364, %r3356, %r3361;
	// end inline asm
	// begin inline asm
	mov.b32 %r3372, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r3383, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3369, %r644, %r783, %r3372, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3373, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3374, %r3372, %r3373;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3377, %r3369, %r3374;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3380, %r655, %r783, %r3383, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3384, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3385, %r3383, %r3384;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3388, %r3380, %r3385;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3391, %r644, %r805, %r3372, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3395, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3396, %r3372, %r3395;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3399, %r3391, %r3396;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3402, %r655, %r805, %r3383, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3406, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3407, %r3383, %r3406;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3410, %r3402, %r3407;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3484, %r233, %r3239, %r3135;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3481, %r233, %r3250, %r3141;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3493, %r233, %r3261, %r3147;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3490, %r233, %r3272, %r3153;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3502, %r233, %r3285, %r3159;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3499, %r233, %r3296, %r3165;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3511, %r233, %r3307, %r3171;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3508, %r233, %r3318, %r3177;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3520, %r233, %r3331, %r3183;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3517, %r233, %r3342, %r3189;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3529, %r233, %r3353, %r3195;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3526, %r233, %r3364, %r3201;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3538, %r233, %r3377, %r3207;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3535, %r233, %r3388, %r3213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3547, %r233, %r3399, %r3219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3544, %r233, %r3410, %r3225;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3477, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3479, %r3477, %r3481;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3482, %r254, %r3484, %r3479;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3486, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3488, %r3486, %r3490;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3491, %r254, %r3493, %r3488;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3495, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3497, %r3495, %r3499;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3500, %r254, %r3502, %r3497;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3504, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3506, %r3504, %r3508;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3509, %r254, %r3511, %r3506;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3513, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3515, %r3513, %r3517;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3518, %r254, %r3520, %r3515;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3522, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3524, %r3522, %r3526;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3527, %r254, %r3529, %r3524;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3531, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3533, %r3531, %r3535;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3536, %r254, %r3538, %r3533;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3540, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3542, %r3540, %r3544;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3545, %r254, %r3547, %r3542;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3549, %r257, %r3484;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3552, %r254, %r3481, %r3549;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3556, %r257, %r3493;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3559, %r254, %r3490, %r3556;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3563, %r257, %r3502;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3566, %r254, %r3499, %r3563;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3570, %r257, %r3511;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3573, %r254, %r3508, %r3570;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3577, %r257, %r3520;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3580, %r254, %r3517, %r3577;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3584, %r257, %r3529;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3587, %r254, %r3526, %r3584;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3591, %r257, %r3538;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3594, %r254, %r3535, %r3591;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3598, %r257, %r3547;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3601, %r254, %r3544, %r3598;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3692, %r3689}, {%r313, %r319, %r316, %r322}, {%r3482, %r3552}, {%r1817, %r1817};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3701, %r3698}, {%r313, %r319, %r316, %r322}, {%r3491, %r3559}, {%r1817, %r1817};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3710, %r3707}, {%r313, %r319, %r316, %r322}, {%r3500, %r3566}, {%r1817, %r1817};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3719, %r3716}, {%r313, %r319, %r316, %r322}, {%r3509, %r3573}, {%r1817, %r1817};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3728, %r3725}, {%r313, %r319, %r316, %r322}, {%r3518, %r3580}, {%r1817, %r1817};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3737, %r3734}, {%r313, %r319, %r316, %r322}, {%r3527, %r3587}, {%r1817, %r1817};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3746, %r3743}, {%r313, %r319, %r316, %r322}, {%r3536, %r3594}, {%r1817, %r1817};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3755, %r3752}, {%r313, %r319, %r316, %r322}, {%r3545, %r3601}, {%r1817, %r1817};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3685, %r360;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3687, %r3685, %r3689;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3690, %r357, %r3692, %r3687;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3694, %r360;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3696, %r3694, %r3698;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3699, %r357, %r3701, %r3696;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3703, %r360;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3705, %r3703, %r3707;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3708, %r357, %r3710, %r3705;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3712, %r360;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3714, %r3712, %r3716;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3717, %r357, %r3719, %r3714;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3721, %r360;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3723, %r3721, %r3725;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3726, %r357, %r3728, %r3723;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3730, %r360;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3732, %r3730, %r3734;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3735, %r357, %r3737, %r3732;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3739, %r360;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3741, %r3739, %r3743;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3744, %r357, %r3746, %r3741;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3748, %r360;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3750, %r3748, %r3752;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3753, %r357, %r3755, %r3750;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3757, %r360, %r3692;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3760, %r357, %r3689, %r3757;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3764, %r360, %r3701;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3767, %r357, %r3698, %r3764;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3771, %r360, %r3710;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3774, %r357, %r3707, %r3771;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3778, %r360, %r3719;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3781, %r357, %r3716, %r3778;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3785, %r360, %r3728;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3788, %r357, %r3725, %r3785;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3792, %r360, %r3737;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3795, %r357, %r3734, %r3792;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3799, %r360, %r3746;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3802, %r357, %r3743, %r3799;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3806, %r360, %r3755;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3809, %r357, %r3752, %r3806;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3813, %r3814}, {%r391, %r397, %r394, %r400}, {%r3690, %r3760}, {%r1817, %r1817};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3823, %r3824}, {%r391, %r397, %r394, %r400}, {%r3699, %r3767}, {%r1817, %r1817};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3833, %r3834}, {%r391, %r397, %r394, %r400}, {%r3708, %r3774}, {%r1817, %r1817};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3843, %r3844}, {%r391, %r397, %r394, %r400}, {%r3717, %r3781}, {%r1817, %r1817};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3853, %r3854}, {%r391, %r397, %r394, %r400}, {%r3726, %r3788}, {%r1817, %r1817};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3863, %r3864}, {%r391, %r397, %r394, %r400}, {%r3735, %r3795}, {%r1817, %r1817};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3873, %r3874}, {%r391, %r397, %r394, %r400}, {%r3744, %r3802}, {%r1817, %r1817};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3883, %r3884}, {%r391, %r397, %r394, %r400}, {%r3753, %r3809}, {%r1817, %r1817};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3893, %r100, %r3813;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3896, %r100, %r3814;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3899, %r100, %r3823;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3902, %r100, %r3824;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3905, %r100, %r3833;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3908, %r100, %r3834;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3911, %r100, %r3843;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3914, %r100, %r3844;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3917, %r100, %r3853;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3920, %r100, %r3854;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3923, %r100, %r3863;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3926, %r100, %r3864;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3929, %r100, %r3873;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3932, %r100, %r3874;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3935, %r100, %r3883;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3938, %r100, %r3884;
	// end inline asm
	// begin inline asm
	mov.b32 %r3941, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3942, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3943, %r3893, %r3941;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3946, %r3943, %r3942;
	// end inline asm
	// begin inline asm
	mov.b32 %r3949, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3950, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3951, %r3896, %r3949;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3954, %r3951, %r3950;
	// end inline asm
	// begin inline asm
	mov.b32 %r3957, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3958, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3959, %r3899, %r3957;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3962, %r3959, %r3958;
	// end inline asm
	// begin inline asm
	mov.b32 %r3965, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3966, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3967, %r3902, %r3965;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3970, %r3967, %r3966;
	// end inline asm
	// begin inline asm
	mov.b32 %r3973, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3974, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3975, %r3905, %r3973;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3978, %r3975, %r3974;
	// end inline asm
	// begin inline asm
	mov.b32 %r3981, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3982, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3983, %r3908, %r3981;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3986, %r3983, %r3982;
	// end inline asm
	// begin inline asm
	mov.b32 %r3989, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3990, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3991, %r3911, %r3989;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3994, %r3991, %r3990;
	// end inline asm
	// begin inline asm
	mov.b32 %r3997, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3998, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3999, %r3914, %r3997;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4002, %r3999, %r3998;
	// end inline asm
	// begin inline asm
	mov.b32 %r4005, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r4006, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4007, %r3917, %r4005;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4010, %r4007, %r4006;
	// end inline asm
	// begin inline asm
	mov.b32 %r4013, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r4014, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4015, %r3920, %r4013;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4018, %r4015, %r4014;
	// end inline asm
	// begin inline asm
	mov.b32 %r4021, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r4022, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4023, %r3923, %r4021;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4026, %r4023, %r4022;
	// end inline asm
	// begin inline asm
	mov.b32 %r4029, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r4030, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4031, %r3926, %r4029;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4034, %r4031, %r4030;
	// end inline asm
	// begin inline asm
	mov.b32 %r4037, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r4038, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4039, %r3929, %r4037;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4042, %r4039, %r4038;
	// end inline asm
	// begin inline asm
	mov.b32 %r4045, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r4046, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4047, %r3932, %r4045;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4050, %r4047, %r4046;
	// end inline asm
	// begin inline asm
	mov.b32 %r4053, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r4054, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4055, %r3935, %r4053;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4058, %r4055, %r4054;
	// end inline asm
	// begin inline asm
	mov.b32 %r4061, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r4062, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4063, %r3938, %r4061;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4066, %r4063, %r4062;
	// end inline asm
	// begin inline asm
	mov.b32 %r4072, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4070, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4071, %r4072, %r4070;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4074, %r3946, %r4071;
	// end inline asm
	// begin inline asm
	mov.b32 %r4077, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4078, %r4072, %r4077;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4081, %r3954, %r4078;
	// end inline asm
	// begin inline asm
	mov.b32 %r4084, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4085, %r4072, %r4084;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4088, %r3962, %r4085;
	// end inline asm
	// begin inline asm
	mov.b32 %r4091, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4092, %r4072, %r4091;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4095, %r3970, %r4092;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4098, %r4074, %r4088, %r2305;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4102, %r4081, %r4095, %r2305;
	// end inline asm
	shl.b32 	%r4109, %r4102, 4;
	// begin inline asm
	lop3.b32 %r4106, %r2311, %r4098, %r4109, 202;
	// end inline asm
	xor.b32  	%r7833, %r4106, -2004318072;
	// begin inline asm
	mov.b32 %r4113, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4111, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4112, %r4113, %r4111;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4115, %r3978, %r4112;
	// end inline asm
	// begin inline asm
	mov.b32 %r4118, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4119, %r4113, %r4118;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4122, %r3986, %r4119;
	// end inline asm
	// begin inline asm
	mov.b32 %r4125, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4126, %r4113, %r4125;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4129, %r3994, %r4126;
	// end inline asm
	// begin inline asm
	mov.b32 %r4132, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4133, %r4113, %r4132;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4136, %r4002, %r4133;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4139, %r4115, %r4129, %r2305;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4143, %r4122, %r4136, %r2305;
	// end inline asm
	shl.b32 	%r4150, %r4143, 4;
	// begin inline asm
	lop3.b32 %r4147, %r2311, %r4139, %r4150, 202;
	// end inline asm
	xor.b32  	%r7834, %r4147, -2004318072;
	// begin inline asm
	mov.b32 %r4154, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4152, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4153, %r4154, %r4152;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4156, %r4010, %r4153;
	// end inline asm
	// begin inline asm
	mov.b32 %r4159, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4160, %r4154, %r4159;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4163, %r4018, %r4160;
	// end inline asm
	// begin inline asm
	mov.b32 %r4166, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4167, %r4154, %r4166;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4170, %r4026, %r4167;
	// end inline asm
	// begin inline asm
	mov.b32 %r4173, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4174, %r4154, %r4173;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4177, %r4034, %r4174;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4180, %r4156, %r4170, %r2305;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4184, %r4163, %r4177, %r2305;
	// end inline asm
	shl.b32 	%r4191, %r4184, 4;
	// begin inline asm
	lop3.b32 %r4188, %r2311, %r4180, %r4191, 202;
	// end inline asm
	xor.b32  	%r7835, %r4188, -2004318072;
	// begin inline asm
	mov.b32 %r4195, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4193, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4194, %r4195, %r4193;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4197, %r4042, %r4194;
	// end inline asm
	// begin inline asm
	mov.b32 %r4200, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4201, %r4195, %r4200;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4204, %r4050, %r4201;
	// end inline asm
	// begin inline asm
	mov.b32 %r4207, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4208, %r4195, %r4207;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4211, %r4058, %r4208;
	// end inline asm
	// begin inline asm
	mov.b32 %r4214, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4215, %r4195, %r4214;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4218, %r4066, %r4215;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4221, %r4197, %r4211, %r2305;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4225, %r4204, %r4218, %r2305;
	// end inline asm
	shl.b32 	%r4232, %r4225, 4;
	// begin inline asm
	lop3.b32 %r4229, %r2311, %r4221, %r4232, 202;
	// end inline asm
	xor.b32  	%r7836, %r4229, -2004318072;
	st.shared.u32 	[%rd85], %r7833;
	st.shared.u32 	[%rd86], %r7834;
	st.shared.u32 	[%rd87], %r7835;
	st.shared.u32 	[%rd88], %r7836;
	ld.shared.u32 	%r7967, [%rd81];
	ld.shared.u32 	%r7968, [%rd82];
	ld.shared.u32 	%r7969, [%rd83];
	ld.shared.u32 	%r7970, [%rd84];
	// begin inline asm
	mov.b32 %r4238, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4249, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r4237, %r7967, -2004318072;
	// begin inline asm
	lop3.b32 %r4235, %r644, %r4237, %r4238, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4239, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4240, %r4238, %r4239;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4243, %r4235, %r4240;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4246, %r655, %r4237, %r4249, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4250, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4251, %r4249, %r4250;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4254, %r4246, %r4251;
	// end inline asm
	shr.u32 	%r4259, %r4237, 8;
	// begin inline asm
	lop3.b32 %r4257, %r644, %r4259, %r4238, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4261, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4262, %r4238, %r4261;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4265, %r4257, %r4262;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4268, %r655, %r4259, %r4249, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4272, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4273, %r4249, %r4272;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4276, %r4268, %r4273;
	// end inline asm
	// begin inline asm
	mov.b32 %r4284, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4295, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r4283, %r7968, -2004318072;
	// begin inline asm
	lop3.b32 %r4281, %r644, %r4283, %r4284, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4285, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4286, %r4284, %r4285;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4289, %r4281, %r4286;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4292, %r655, %r4283, %r4295, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4296, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4297, %r4295, %r4296;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4300, %r4292, %r4297;
	// end inline asm
	shr.u32 	%r4305, %r4283, 8;
	// begin inline asm
	lop3.b32 %r4303, %r644, %r4305, %r4284, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4307, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4308, %r4284, %r4307;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4311, %r4303, %r4308;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4314, %r655, %r4305, %r4295, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4318, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4319, %r4295, %r4318;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4322, %r4314, %r4319;
	// end inline asm
	// begin inline asm
	mov.b32 %r4330, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4341, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r4329, %r7969, -2004318072;
	// begin inline asm
	lop3.b32 %r4327, %r644, %r4329, %r4330, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4331, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4332, %r4330, %r4331;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4335, %r4327, %r4332;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4338, %r655, %r4329, %r4341, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4342, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4343, %r4341, %r4342;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4346, %r4338, %r4343;
	// end inline asm
	shr.u32 	%r4351, %r4329, 8;
	// begin inline asm
	lop3.b32 %r4349, %r644, %r4351, %r4330, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4353, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4354, %r4330, %r4353;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4357, %r4349, %r4354;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4360, %r655, %r4351, %r4341, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4364, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4365, %r4341, %r4364;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4368, %r4360, %r4365;
	// end inline asm
	// begin inline asm
	mov.b32 %r4376, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4387, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r4375, %r7970, -2004318072;
	// begin inline asm
	lop3.b32 %r4373, %r644, %r4375, %r4376, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4377, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4378, %r4376, %r4377;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4381, %r4373, %r4378;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4384, %r655, %r4375, %r4387, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4388, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4389, %r4387, %r4388;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4392, %r4384, %r4389;
	// end inline asm
	shr.u32 	%r4397, %r4375, 8;
	// begin inline asm
	lop3.b32 %r4395, %r644, %r4397, %r4376, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4399, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4400, %r4376, %r4399;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4403, %r4395, %r4400;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4406, %r655, %r4397, %r4387, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4410, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4411, %r4387, %r4410;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4414, %r4406, %r4411;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4417, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4419, %r4417, %r4243;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4422, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4424, %r4422, %r4254;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4427, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4429, %r4427, %r4265;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4432, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4434, %r4432, %r4276;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4437, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4439, %r4437, %r4289;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4442, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4444, %r4442, %r4300;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4447, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4449, %r4447, %r4311;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4452, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4454, %r4452, %r4322;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4457, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4459, %r4457, %r4335;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4462, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4464, %r4462, %r4346;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4467, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4469, %r4467, %r4357;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4472, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4474, %r4472, %r4368;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4477, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4479, %r4477, %r4381;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4482, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4484, %r4482, %r4392;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4487, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4489, %r4487, %r4403;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4492, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4494, %r4492, %r4414;
	// end inline asm
	// begin inline asm
	mov.b32 %r4502, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4513, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4499, %r644, %r1437, %r4502, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4503, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4504, %r4502, %r4503;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4507, %r4499, %r4504;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4510, %r655, %r1437, %r4513, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4514, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4515, %r4513, %r4514;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4518, %r4510, %r4515;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4521, %r644, %r1459, %r4502, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4525, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4526, %r4502, %r4525;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4529, %r4521, %r4526;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4532, %r655, %r1459, %r4513, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4536, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4537, %r4513, %r4536;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4540, %r4532, %r4537;
	// end inline asm
	// begin inline asm
	mov.b32 %r4548, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4559, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4545, %r644, %r1483, %r4548, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4549, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4550, %r4548, %r4549;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4553, %r4545, %r4550;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4556, %r655, %r1483, %r4559, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4560, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4561, %r4559, %r4560;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4564, %r4556, %r4561;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4567, %r644, %r1505, %r4548, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4571, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4572, %r4548, %r4571;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4575, %r4567, %r4572;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4578, %r655, %r1505, %r4559, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4582, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4583, %r4559, %r4582;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4586, %r4578, %r4583;
	// end inline asm
	// begin inline asm
	mov.b32 %r4594, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4605, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4591, %r644, %r1529, %r4594, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4595, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4596, %r4594, %r4595;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4599, %r4591, %r4596;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4602, %r655, %r1529, %r4605, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4606, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4607, %r4605, %r4606;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4610, %r4602, %r4607;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4613, %r644, %r1551, %r4594, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4617, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4618, %r4594, %r4617;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4621, %r4613, %r4618;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4624, %r655, %r1551, %r4605, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4628, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4629, %r4605, %r4628;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4632, %r4624, %r4629;
	// end inline asm
	// begin inline asm
	mov.b32 %r4640, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4651, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4637, %r644, %r1575, %r4640, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4641, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4642, %r4640, %r4641;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4645, %r4637, %r4642;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4648, %r655, %r1575, %r4651, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4652, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4653, %r4651, %r4652;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4656, %r4648, %r4653;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4659, %r644, %r1597, %r4640, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4663, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4664, %r4640, %r4663;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4667, %r4659, %r4664;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4670, %r655, %r1597, %r4651, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4674, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4675, %r4651, %r4674;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4678, %r4670, %r4675;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4681, %r197, %r4507, %r4419;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4685, %r197, %r4518, %r4424;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4689, %r197, %r4529, %r4429;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4693, %r197, %r4540, %r4434;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4697, %r197, %r4553, %r4439;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4701, %r197, %r4564, %r4444;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4705, %r197, %r4575, %r4449;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4709, %r197, %r4586, %r4454;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4713, %r197, %r4599, %r4459;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4717, %r197, %r4610, %r4464;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4721, %r197, %r4621, %r4469;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4725, %r197, %r4632, %r4474;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4729, %r197, %r4645, %r4479;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4733, %r197, %r4656, %r4484;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4737, %r197, %r4667, %r4489;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4741, %r197, %r4678, %r4494;
	// end inline asm
	// begin inline asm
	mov.b32 %r4750, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4761, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4747, %r644, %r645, %r4750, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4751, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4752, %r4750, %r4751;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4755, %r4747, %r4752;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4758, %r655, %r645, %r4761, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4762, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4763, %r4761, %r4762;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4766, %r4758, %r4763;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4769, %r644, %r667, %r4750, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4773, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4774, %r4750, %r4773;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4777, %r4769, %r4774;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4780, %r655, %r667, %r4761, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4784, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4785, %r4761, %r4784;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4788, %r4780, %r4785;
	// end inline asm
	// begin inline asm
	mov.b32 %r4796, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4807, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4793, %r644, %r691, %r4796, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4797, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4798, %r4796, %r4797;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4801, %r4793, %r4798;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4804, %r655, %r691, %r4807, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4808, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4809, %r4807, %r4808;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4812, %r4804, %r4809;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4815, %r644, %r713, %r4796, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4819, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4820, %r4796, %r4819;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4823, %r4815, %r4820;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4826, %r655, %r713, %r4807, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4830, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4831, %r4807, %r4830;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4834, %r4826, %r4831;
	// end inline asm
	// begin inline asm
	mov.b32 %r4842, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4853, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4839, %r644, %r737, %r4842, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4843, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4844, %r4842, %r4843;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4847, %r4839, %r4844;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4850, %r655, %r737, %r4853, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4854, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4855, %r4853, %r4854;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4858, %r4850, %r4855;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4861, %r644, %r759, %r4842, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4865, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4866, %r4842, %r4865;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4869, %r4861, %r4866;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4872, %r655, %r759, %r4853, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4876, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4877, %r4853, %r4876;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4880, %r4872, %r4877;
	// end inline asm
	// begin inline asm
	mov.b32 %r4888, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4899, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4885, %r644, %r783, %r4888, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4889, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4890, %r4888, %r4889;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4893, %r4885, %r4890;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4896, %r655, %r783, %r4899, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4900, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4901, %r4899, %r4900;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4904, %r4896, %r4901;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4907, %r644, %r805, %r4888, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4911, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4912, %r4888, %r4911;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4915, %r4907, %r4912;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4918, %r655, %r805, %r4899, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4922, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4923, %r4899, %r4922;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4926, %r4918, %r4923;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4929, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4931, %r4929, %r4755, %r4681;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4935, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4937, %r4935, %r4766, %r4685;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4941, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4943, %r4941, %r4777, %r4689;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4947, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4949, %r4947, %r4788, %r4693;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4953, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4955, %r4953, %r4801, %r4697;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4959, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4961, %r4959, %r4812, %r4701;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4965, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4967, %r4965, %r4823, %r4705;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4971, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4973, %r4971, %r4834, %r4709;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4977, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4979, %r4977, %r4847, %r4713;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4983, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4985, %r4983, %r4858, %r4717;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4989, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4991, %r4989, %r4869, %r4721;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4995, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4997, %r4995, %r4880, %r4725;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5001, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5003, %r5001, %r4893, %r4729;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5007, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5009, %r5007, %r4904, %r4733;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5013, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5015, %r5013, %r4915, %r4737;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5019, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5021, %r5019, %r4926, %r4741;
	// end inline asm
	// begin inline asm
	mov.b32 %r5030, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5041, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5027, %r644, %r2441, %r5030, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5031, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5032, %r5030, %r5031;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5035, %r5027, %r5032;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5038, %r655, %r2441, %r5041, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5042, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5043, %r5041, %r5042;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5046, %r5038, %r5043;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5049, %r644, %r2463, %r5030, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5053, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5054, %r5030, %r5053;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5057, %r5049, %r5054;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5060, %r655, %r2463, %r5041, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5064, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5065, %r5041, %r5064;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5068, %r5060, %r5065;
	// end inline asm
	// begin inline asm
	mov.b32 %r5076, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5087, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5073, %r644, %r2487, %r5076, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5077, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5078, %r5076, %r5077;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5081, %r5073, %r5078;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5084, %r655, %r2487, %r5087, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5088, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5089, %r5087, %r5088;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5092, %r5084, %r5089;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5095, %r644, %r2509, %r5076, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5099, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5100, %r5076, %r5099;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5103, %r5095, %r5100;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5106, %r655, %r2509, %r5087, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5110, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5111, %r5087, %r5110;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5114, %r5106, %r5111;
	// end inline asm
	// begin inline asm
	mov.b32 %r5122, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5133, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5119, %r644, %r2533, %r5122, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5123, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5124, %r5122, %r5123;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5127, %r5119, %r5124;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5130, %r655, %r2533, %r5133, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5134, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5135, %r5133, %r5134;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5138, %r5130, %r5135;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5141, %r644, %r2555, %r5122, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5145, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5146, %r5122, %r5145;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5149, %r5141, %r5146;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5152, %r655, %r2555, %r5133, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5156, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5157, %r5133, %r5156;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5160, %r5152, %r5157;
	// end inline asm
	// begin inline asm
	mov.b32 %r5168, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5179, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5165, %r644, %r2579, %r5168, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5169, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5170, %r5168, %r5169;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5173, %r5165, %r5170;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5176, %r655, %r2579, %r5179, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5180, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5181, %r5179, %r5180;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5184, %r5176, %r5181;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5187, %r644, %r2601, %r5168, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5191, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5192, %r5168, %r5191;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5195, %r5187, %r5192;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5198, %r655, %r2601, %r5179, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5202, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5203, %r5179, %r5202;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5206, %r5198, %r5203;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5280, %r233, %r5035, %r4931;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5277, %r233, %r5046, %r4937;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5289, %r233, %r5057, %r4943;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5286, %r233, %r5068, %r4949;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5298, %r233, %r5081, %r4955;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5295, %r233, %r5092, %r4961;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5307, %r233, %r5103, %r4967;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5304, %r233, %r5114, %r4973;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5316, %r233, %r5127, %r4979;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5313, %r233, %r5138, %r4985;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5325, %r233, %r5149, %r4991;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5322, %r233, %r5160, %r4997;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5334, %r233, %r5173, %r5003;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5331, %r233, %r5184, %r5009;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5343, %r233, %r5195, %r5015;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5340, %r233, %r5206, %r5021;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5273, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5275, %r5273, %r5277;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5278, %r254, %r5280, %r5275;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5282, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5284, %r5282, %r5286;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5287, %r254, %r5289, %r5284;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5291, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5293, %r5291, %r5295;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5296, %r254, %r5298, %r5293;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5300, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5302, %r5300, %r5304;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5305, %r254, %r5307, %r5302;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5309, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5311, %r5309, %r5313;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5314, %r254, %r5316, %r5311;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5318, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5320, %r5318, %r5322;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5323, %r254, %r5325, %r5320;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5327, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5329, %r5327, %r5331;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5332, %r254, %r5334, %r5329;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5336, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5338, %r5336, %r5340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5341, %r254, %r5343, %r5338;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5345, %r257, %r5280;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5348, %r254, %r5277, %r5345;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5352, %r257, %r5289;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5355, %r254, %r5286, %r5352;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5359, %r257, %r5298;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5362, %r254, %r5295, %r5359;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5366, %r257, %r5307;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5369, %r254, %r5304, %r5366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5373, %r257, %r5316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5376, %r254, %r5313, %r5373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5380, %r257, %r5325;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5383, %r254, %r5322, %r5380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5387, %r257, %r5334;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5390, %r254, %r5331, %r5387;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5394, %r257, %r5343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5397, %r254, %r5340, %r5394;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5488, %r5485}, {%r313, %r319, %r316, %r322}, {%r5278, %r5348}, {%r1817, %r1817};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5497, %r5494}, {%r313, %r319, %r316, %r322}, {%r5287, %r5355}, {%r1817, %r1817};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5506, %r5503}, {%r313, %r319, %r316, %r322}, {%r5296, %r5362}, {%r1817, %r1817};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5515, %r5512}, {%r313, %r319, %r316, %r322}, {%r5305, %r5369}, {%r1817, %r1817};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5524, %r5521}, {%r313, %r319, %r316, %r322}, {%r5314, %r5376}, {%r1817, %r1817};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5533, %r5530}, {%r313, %r319, %r316, %r322}, {%r5323, %r5383}, {%r1817, %r1817};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5542, %r5539}, {%r313, %r319, %r316, %r322}, {%r5332, %r5390}, {%r1817, %r1817};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5551, %r5548}, {%r313, %r319, %r316, %r322}, {%r5341, %r5397}, {%r1817, %r1817};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5481, %r360;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5483, %r5481, %r5485;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5486, %r357, %r5488, %r5483;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5490, %r360;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5492, %r5490, %r5494;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5495, %r357, %r5497, %r5492;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5499, %r360;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5501, %r5499, %r5503;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5504, %r357, %r5506, %r5501;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5508, %r360;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5510, %r5508, %r5512;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5513, %r357, %r5515, %r5510;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5517, %r360;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5519, %r5517, %r5521;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5522, %r357, %r5524, %r5519;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5526, %r360;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5528, %r5526, %r5530;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5531, %r357, %r5533, %r5528;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5535, %r360;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5537, %r5535, %r5539;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5540, %r357, %r5542, %r5537;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5544, %r360;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5546, %r5544, %r5548;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5549, %r357, %r5551, %r5546;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5553, %r360, %r5488;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5556, %r357, %r5485, %r5553;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5560, %r360, %r5497;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5563, %r357, %r5494, %r5560;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5567, %r360, %r5506;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5570, %r357, %r5503, %r5567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5574, %r360, %r5515;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5577, %r357, %r5512, %r5574;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5581, %r360, %r5524;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5584, %r357, %r5521, %r5581;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5588, %r360, %r5533;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5591, %r357, %r5530, %r5588;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5595, %r360, %r5542;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5598, %r357, %r5539, %r5595;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5602, %r360, %r5551;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5605, %r357, %r5548, %r5602;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5609, %r5610}, {%r391, %r397, %r394, %r400}, {%r5486, %r5556}, {%r1817, %r1817};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5619, %r5620}, {%r391, %r397, %r394, %r400}, {%r5495, %r5563}, {%r1817, %r1817};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5629, %r5630}, {%r391, %r397, %r394, %r400}, {%r5504, %r5570}, {%r1817, %r1817};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5639, %r5640}, {%r391, %r397, %r394, %r400}, {%r5513, %r5577}, {%r1817, %r1817};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5649, %r5650}, {%r391, %r397, %r394, %r400}, {%r5522, %r5584}, {%r1817, %r1817};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5659, %r5660}, {%r391, %r397, %r394, %r400}, {%r5531, %r5591}, {%r1817, %r1817};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5669, %r5670}, {%r391, %r397, %r394, %r400}, {%r5540, %r5598}, {%r1817, %r1817};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5679, %r5680}, {%r391, %r397, %r394, %r400}, {%r5549, %r5605}, {%r1817, %r1817};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5689, %r100, %r5609;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5692, %r100, %r5610;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5695, %r100, %r5619;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5698, %r100, %r5620;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5701, %r100, %r5629;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5704, %r100, %r5630;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5707, %r100, %r5639;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5710, %r100, %r5640;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5713, %r100, %r5649;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5716, %r100, %r5650;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5719, %r100, %r5659;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5722, %r100, %r5660;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5725, %r100, %r5669;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5728, %r100, %r5670;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5731, %r100, %r5679;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5734, %r100, %r5680;
	// end inline asm
	// begin inline asm
	mov.b32 %r5737, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5738, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5739, %r5689, %r5737;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5742, %r5739, %r5738;
	// end inline asm
	// begin inline asm
	mov.b32 %r5745, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5746, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5747, %r5692, %r5745;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5750, %r5747, %r5746;
	// end inline asm
	// begin inline asm
	mov.b32 %r5753, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5754, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5755, %r5695, %r5753;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5758, %r5755, %r5754;
	// end inline asm
	// begin inline asm
	mov.b32 %r5761, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5762, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5763, %r5698, %r5761;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5766, %r5763, %r5762;
	// end inline asm
	// begin inline asm
	mov.b32 %r5769, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5770, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5771, %r5701, %r5769;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5774, %r5771, %r5770;
	// end inline asm
	// begin inline asm
	mov.b32 %r5777, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5778, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5779, %r5704, %r5777;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5782, %r5779, %r5778;
	// end inline asm
	// begin inline asm
	mov.b32 %r5785, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5786, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5787, %r5707, %r5785;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5790, %r5787, %r5786;
	// end inline asm
	// begin inline asm
	mov.b32 %r5793, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5794, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5795, %r5710, %r5793;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5798, %r5795, %r5794;
	// end inline asm
	// begin inline asm
	mov.b32 %r5801, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5802, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5803, %r5713, %r5801;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5806, %r5803, %r5802;
	// end inline asm
	// begin inline asm
	mov.b32 %r5809, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5810, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5811, %r5716, %r5809;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5814, %r5811, %r5810;
	// end inline asm
	// begin inline asm
	mov.b32 %r5817, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5818, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5819, %r5719, %r5817;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5822, %r5819, %r5818;
	// end inline asm
	// begin inline asm
	mov.b32 %r5825, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5826, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5827, %r5722, %r5825;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5830, %r5827, %r5826;
	// end inline asm
	// begin inline asm
	mov.b32 %r5833, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5834, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5835, %r5725, %r5833;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5838, %r5835, %r5834;
	// end inline asm
	// begin inline asm
	mov.b32 %r5841, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5842, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5843, %r5728, %r5841;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5846, %r5843, %r5842;
	// end inline asm
	// begin inline asm
	mov.b32 %r5849, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5850, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5851, %r5731, %r5849;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5854, %r5851, %r5850;
	// end inline asm
	// begin inline asm
	mov.b32 %r5857, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5858, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5859, %r5734, %r5857;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5862, %r5859, %r5858;
	// end inline asm
	// begin inline asm
	mov.b32 %r5868, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5866, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5867, %r5868, %r5866;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5870, %r5742, %r5867;
	// end inline asm
	// begin inline asm
	mov.b32 %r5873, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5874, %r5868, %r5873;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5877, %r5750, %r5874;
	// end inline asm
	// begin inline asm
	mov.b32 %r5880, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5881, %r5868, %r5880;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5884, %r5758, %r5881;
	// end inline asm
	// begin inline asm
	mov.b32 %r5887, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5888, %r5868, %r5887;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5891, %r5766, %r5888;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5894, %r5870, %r5884, %r2305;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5898, %r5877, %r5891, %r2305;
	// end inline asm
	shl.b32 	%r5905, %r5898, 4;
	// begin inline asm
	lop3.b32 %r5902, %r2311, %r5894, %r5905, 202;
	// end inline asm
	xor.b32  	%r7837, %r5902, -2004318072;
	// begin inline asm
	mov.b32 %r5909, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5907, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5908, %r5909, %r5907;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5911, %r5774, %r5908;
	// end inline asm
	// begin inline asm
	mov.b32 %r5914, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5915, %r5909, %r5914;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5918, %r5782, %r5915;
	// end inline asm
	// begin inline asm
	mov.b32 %r5921, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5922, %r5909, %r5921;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5925, %r5790, %r5922;
	// end inline asm
	// begin inline asm
	mov.b32 %r5928, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5929, %r5909, %r5928;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5932, %r5798, %r5929;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5935, %r5911, %r5925, %r2305;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5939, %r5918, %r5932, %r2305;
	// end inline asm
	shl.b32 	%r5946, %r5939, 4;
	// begin inline asm
	lop3.b32 %r5943, %r2311, %r5935, %r5946, 202;
	// end inline asm
	xor.b32  	%r7838, %r5943, -2004318072;
	// begin inline asm
	mov.b32 %r5950, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5948, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5949, %r5950, %r5948;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5952, %r5806, %r5949;
	// end inline asm
	// begin inline asm
	mov.b32 %r5955, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5956, %r5950, %r5955;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5959, %r5814, %r5956;
	// end inline asm
	// begin inline asm
	mov.b32 %r5962, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5963, %r5950, %r5962;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5966, %r5822, %r5963;
	// end inline asm
	// begin inline asm
	mov.b32 %r5969, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5970, %r5950, %r5969;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5973, %r5830, %r5970;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5976, %r5952, %r5966, %r2305;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5980, %r5959, %r5973, %r2305;
	// end inline asm
	shl.b32 	%r5987, %r5980, 4;
	// begin inline asm
	lop3.b32 %r5984, %r2311, %r5976, %r5987, 202;
	// end inline asm
	xor.b32  	%r7839, %r5984, -2004318072;
	// begin inline asm
	mov.b32 %r5991, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5989, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5990, %r5991, %r5989;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5993, %r5838, %r5990;
	// end inline asm
	// begin inline asm
	mov.b32 %r5996, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5997, %r5991, %r5996;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6000, %r5846, %r5997;
	// end inline asm
	// begin inline asm
	mov.b32 %r6003, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6004, %r5991, %r6003;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6007, %r5854, %r6004;
	// end inline asm
	// begin inline asm
	mov.b32 %r6010, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6011, %r5991, %r6010;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6014, %r5862, %r6011;
	// end inline asm
	// begin inline asm
	prmt.b32 %r6017, %r5993, %r6007, %r2305;
	// end inline asm
	// begin inline asm
	prmt.b32 %r6021, %r6000, %r6014, %r2305;
	// end inline asm
	shl.b32 	%r6028, %r6021, 4;
	// begin inline asm
	lop3.b32 %r6025, %r2311, %r6017, %r6028, 202;
	// end inline asm
	xor.b32  	%r7840, %r6025, -2004318072;
	st.shared.u32 	[%rd85], %r7837;
	st.shared.u32 	[%rd86], %r7838;
	st.shared.u32 	[%rd87], %r7839;
	st.shared.u32 	[%rd88], %r7840;
	ld.shared.u32 	%r7971, [%rd81];
	ld.shared.u32 	%r7972, [%rd82];
	ld.shared.u32 	%r7973, [%rd83];
	ld.shared.u32 	%r7974, [%rd84];
	// begin inline asm
	mov.b32 %r6034, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6045, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r6033, %r7971, -2004318072;
	// begin inline asm
	lop3.b32 %r6031, %r644, %r6033, %r6034, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6035, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6036, %r6034, %r6035;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6039, %r6031, %r6036;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6042, %r655, %r6033, %r6045, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6046, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6047, %r6045, %r6046;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6050, %r6042, %r6047;
	// end inline asm
	shr.u32 	%r6055, %r6033, 8;
	// begin inline asm
	lop3.b32 %r6053, %r644, %r6055, %r6034, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6057, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6058, %r6034, %r6057;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6061, %r6053, %r6058;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6064, %r655, %r6055, %r6045, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6068, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6069, %r6045, %r6068;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6072, %r6064, %r6069;
	// end inline asm
	// begin inline asm
	mov.b32 %r6080, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6091, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r6079, %r7972, -2004318072;
	// begin inline asm
	lop3.b32 %r6077, %r644, %r6079, %r6080, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6081, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6082, %r6080, %r6081;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6085, %r6077, %r6082;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6088, %r655, %r6079, %r6091, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6092, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6093, %r6091, %r6092;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6096, %r6088, %r6093;
	// end inline asm
	shr.u32 	%r6101, %r6079, 8;
	// begin inline asm
	lop3.b32 %r6099, %r644, %r6101, %r6080, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6103, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6104, %r6080, %r6103;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6107, %r6099, %r6104;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6110, %r655, %r6101, %r6091, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6114, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6115, %r6091, %r6114;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6118, %r6110, %r6115;
	// end inline asm
	// begin inline asm
	mov.b32 %r6126, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6137, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r6125, %r7973, -2004318072;
	// begin inline asm
	lop3.b32 %r6123, %r644, %r6125, %r6126, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6127, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6128, %r6126, %r6127;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6131, %r6123, %r6128;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6134, %r655, %r6125, %r6137, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6138, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6139, %r6137, %r6138;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6142, %r6134, %r6139;
	// end inline asm
	shr.u32 	%r6147, %r6125, 8;
	// begin inline asm
	lop3.b32 %r6145, %r644, %r6147, %r6126, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6149, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6150, %r6126, %r6149;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6153, %r6145, %r6150;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6156, %r655, %r6147, %r6137, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6160, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6161, %r6137, %r6160;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6164, %r6156, %r6161;
	// end inline asm
	// begin inline asm
	mov.b32 %r6172, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6183, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r6171, %r7974, -2004318072;
	// begin inline asm
	lop3.b32 %r6169, %r644, %r6171, %r6172, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6173, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6174, %r6172, %r6173;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6177, %r6169, %r6174;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6180, %r655, %r6171, %r6183, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6184, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6185, %r6183, %r6184;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6188, %r6180, %r6185;
	// end inline asm
	shr.u32 	%r6193, %r6171, 8;
	// begin inline asm
	lop3.b32 %r6191, %r644, %r6193, %r6172, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6195, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6196, %r6172, %r6195;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6199, %r6191, %r6196;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6202, %r655, %r6193, %r6183, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6206, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6207, %r6183, %r6206;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6210, %r6202, %r6207;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6213, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6215, %r6213, %r6039;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6218, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6220, %r6218, %r6050;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6223, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6225, %r6223, %r6061;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6228, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6230, %r6228, %r6072;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6233, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6235, %r6233, %r6085;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6238, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6240, %r6238, %r6096;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6243, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6245, %r6243, %r6107;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6248, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6250, %r6248, %r6118;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6253, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6255, %r6253, %r6131;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6258, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6260, %r6258, %r6142;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6263, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6265, %r6263, %r6153;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6268, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6270, %r6268, %r6164;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6273, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6275, %r6273, %r6177;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6278, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6280, %r6278, %r6188;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6283, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6285, %r6283, %r6199;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6288, %r251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6290, %r6288, %r6210;
	// end inline asm
	// begin inline asm
	mov.b32 %r6298, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6309, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6295, %r644, %r645, %r6298, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6299, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6300, %r6298, %r6299;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6303, %r6295, %r6300;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6306, %r655, %r645, %r6309, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6310, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6311, %r6309, %r6310;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6314, %r6306, %r6311;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6317, %r644, %r667, %r6298, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6321, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6322, %r6298, %r6321;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6325, %r6317, %r6322;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6328, %r655, %r667, %r6309, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6332, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6333, %r6309, %r6332;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6336, %r6328, %r6333;
	// end inline asm
	// begin inline asm
	mov.b32 %r6344, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6355, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6341, %r644, %r691, %r6344, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6345, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6346, %r6344, %r6345;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6349, %r6341, %r6346;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6352, %r655, %r691, %r6355, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6356, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6357, %r6355, %r6356;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6360, %r6352, %r6357;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6363, %r644, %r713, %r6344, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6367, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6368, %r6344, %r6367;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6371, %r6363, %r6368;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6374, %r655, %r713, %r6355, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6378, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6379, %r6355, %r6378;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6382, %r6374, %r6379;
	// end inline asm
	// begin inline asm
	mov.b32 %r6390, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6401, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6387, %r644, %r737, %r6390, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6391, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6392, %r6390, %r6391;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6395, %r6387, %r6392;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6398, %r655, %r737, %r6401, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6402, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6403, %r6401, %r6402;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6406, %r6398, %r6403;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6409, %r644, %r759, %r6390, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6413, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6414, %r6390, %r6413;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6417, %r6409, %r6414;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6420, %r655, %r759, %r6401, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6424, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6425, %r6401, %r6424;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6428, %r6420, %r6425;
	// end inline asm
	// begin inline asm
	mov.b32 %r6436, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6447, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6433, %r644, %r783, %r6436, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6437, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6438, %r6436, %r6437;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6441, %r6433, %r6438;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6444, %r655, %r783, %r6447, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6448, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6449, %r6447, %r6448;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6452, %r6444, %r6449;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6455, %r644, %r805, %r6436, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6459, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6460, %r6436, %r6459;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6463, %r6455, %r6460;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6466, %r655, %r805, %r6447, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6470, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6471, %r6447, %r6470;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6474, %r6466, %r6471;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6477, %r197, %r6303, %r6215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6481, %r197, %r6314, %r6220;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6485, %r197, %r6325, %r6225;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6489, %r197, %r6336, %r6230;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6493, %r197, %r6349, %r6235;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6497, %r197, %r6360, %r6240;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6501, %r197, %r6371, %r6245;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6505, %r197, %r6382, %r6250;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6509, %r197, %r6395, %r6255;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6513, %r197, %r6406, %r6260;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6517, %r197, %r6417, %r6265;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6521, %r197, %r6428, %r6270;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6525, %r197, %r6441, %r6275;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6529, %r197, %r6452, %r6280;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6533, %r197, %r6463, %r6285;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6537, %r197, %r6474, %r6290;
	// end inline asm
	// begin inline asm
	mov.b32 %r6546, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6557, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6543, %r644, %r2441, %r6546, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6547, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6548, %r6546, %r6547;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6551, %r6543, %r6548;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6554, %r655, %r2441, %r6557, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6558, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6559, %r6557, %r6558;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6562, %r6554, %r6559;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6565, %r644, %r2463, %r6546, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6569, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6570, %r6546, %r6569;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6573, %r6565, %r6570;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6576, %r655, %r2463, %r6557, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6580, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6581, %r6557, %r6580;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6584, %r6576, %r6581;
	// end inline asm
	// begin inline asm
	mov.b32 %r6592, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6603, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6589, %r644, %r2487, %r6592, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6593, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6594, %r6592, %r6593;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6597, %r6589, %r6594;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6600, %r655, %r2487, %r6603, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6604, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6605, %r6603, %r6604;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6608, %r6600, %r6605;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6611, %r644, %r2509, %r6592, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6615, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6616, %r6592, %r6615;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6619, %r6611, %r6616;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6622, %r655, %r2509, %r6603, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6626, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6627, %r6603, %r6626;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6630, %r6622, %r6627;
	// end inline asm
	// begin inline asm
	mov.b32 %r6638, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6649, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6635, %r644, %r2533, %r6638, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6639, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6640, %r6638, %r6639;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6643, %r6635, %r6640;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6646, %r655, %r2533, %r6649, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6650, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6651, %r6649, %r6650;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6654, %r6646, %r6651;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6657, %r644, %r2555, %r6638, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6661, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6662, %r6638, %r6661;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6665, %r6657, %r6662;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6668, %r655, %r2555, %r6649, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6672, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6673, %r6649, %r6672;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6676, %r6668, %r6673;
	// end inline asm
	// begin inline asm
	mov.b32 %r6684, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6695, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6681, %r644, %r2579, %r6684, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6685, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6686, %r6684, %r6685;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6689, %r6681, %r6686;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6692, %r655, %r2579, %r6695, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6696, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6697, %r6695, %r6696;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6700, %r6692, %r6697;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6703, %r644, %r2601, %r6684, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6707, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6708, %r6684, %r6707;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6711, %r6703, %r6708;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6714, %r655, %r2601, %r6695, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6718, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6719, %r6695, %r6718;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6722, %r6714, %r6719;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6725, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6727, %r6725, %r6551, %r6477;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6731, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6733, %r6731, %r6562, %r6481;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6737, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6739, %r6737, %r6573, %r6485;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6743, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6745, %r6743, %r6584, %r6489;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6749, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6751, %r6749, %r6597, %r6493;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6755, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6757, %r6755, %r6608, %r6497;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6761, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6763, %r6761, %r6619, %r6501;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6767, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6769, %r6767, %r6630, %r6505;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6773, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6775, %r6773, %r6643, %r6509;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6779, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6781, %r6779, %r6654, %r6513;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6785, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6787, %r6785, %r6665, %r6517;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6791, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6793, %r6791, %r6676, %r6521;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6797, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6799, %r6797, %r6689, %r6525;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6803, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6805, %r6803, %r6700, %r6529;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6809, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6811, %r6809, %r6711, %r6533;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6815, %r215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6817, %r6815, %r6722, %r6537;
	// end inline asm
	// begin inline asm
	mov.b32 %r6826, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6837, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6823, %r644, %r4237, %r6826, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6827, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6828, %r6826, %r6827;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6831, %r6823, %r6828;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6834, %r655, %r4237, %r6837, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6838, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6839, %r6837, %r6838;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6842, %r6834, %r6839;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6845, %r644, %r4259, %r6826, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6849, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6850, %r6826, %r6849;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6853, %r6845, %r6850;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6856, %r655, %r4259, %r6837, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6860, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6861, %r6837, %r6860;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6864, %r6856, %r6861;
	// end inline asm
	// begin inline asm
	mov.b32 %r6872, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6883, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6869, %r644, %r4283, %r6872, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6873, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6874, %r6872, %r6873;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6877, %r6869, %r6874;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6880, %r655, %r4283, %r6883, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6884, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6885, %r6883, %r6884;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6888, %r6880, %r6885;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6891, %r644, %r4305, %r6872, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6895, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6896, %r6872, %r6895;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6899, %r6891, %r6896;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6902, %r655, %r4305, %r6883, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6906, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6907, %r6883, %r6906;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6910, %r6902, %r6907;
	// end inline asm
	// begin inline asm
	mov.b32 %r6918, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6929, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6915, %r644, %r4329, %r6918, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6919, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6920, %r6918, %r6919;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6923, %r6915, %r6920;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6926, %r655, %r4329, %r6929, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6930, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6931, %r6929, %r6930;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6934, %r6926, %r6931;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6937, %r644, %r4351, %r6918, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6941, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6942, %r6918, %r6941;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6945, %r6937, %r6942;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6948, %r655, %r4351, %r6929, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6952, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6953, %r6929, %r6952;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6956, %r6948, %r6953;
	// end inline asm
	// begin inline asm
	mov.b32 %r6964, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6975, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6961, %r644, %r4375, %r6964, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6965, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6966, %r6964, %r6965;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6969, %r6961, %r6966;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6972, %r655, %r4375, %r6975, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6976, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6977, %r6975, %r6976;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6980, %r6972, %r6977;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6983, %r644, %r4397, %r6964, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6987, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6988, %r6964, %r6987;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6991, %r6983, %r6988;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6994, %r655, %r4397, %r6975, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6998, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6999, %r6975, %r6998;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7002, %r6994, %r6999;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7076, %r233, %r6831, %r6727;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7073, %r233, %r6842, %r6733;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7085, %r233, %r6853, %r6739;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7082, %r233, %r6864, %r6745;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7094, %r233, %r6877, %r6751;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7091, %r233, %r6888, %r6757;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7103, %r233, %r6899, %r6763;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7100, %r233, %r6910, %r6769;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7112, %r233, %r6923, %r6775;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7109, %r233, %r6934, %r6781;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7121, %r233, %r6945, %r6787;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7118, %r233, %r6956, %r6793;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7130, %r233, %r6969, %r6799;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7127, %r233, %r6980, %r6805;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7139, %r233, %r6991, %r6811;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7136, %r233, %r7002, %r6817;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7069, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7071, %r7069, %r7073;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7074, %r254, %r7076, %r7071;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7078, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7080, %r7078, %r7082;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7083, %r254, %r7085, %r7080;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7087, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7089, %r7087, %r7091;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7092, %r254, %r7094, %r7089;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7096, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7098, %r7096, %r7100;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7101, %r254, %r7103, %r7098;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7105, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7107, %r7105, %r7109;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7110, %r254, %r7112, %r7107;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7114, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7116, %r7114, %r7118;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7119, %r254, %r7121, %r7116;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7123, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7125, %r7123, %r7127;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7128, %r254, %r7130, %r7125;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7132, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7134, %r7132, %r7136;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7137, %r254, %r7139, %r7134;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7141, %r257, %r7076;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7144, %r254, %r7073, %r7141;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7148, %r257, %r7085;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7151, %r254, %r7082, %r7148;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7155, %r257, %r7094;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7158, %r254, %r7091, %r7155;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7162, %r257, %r7103;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7165, %r254, %r7100, %r7162;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7169, %r257, %r7112;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7172, %r254, %r7109, %r7169;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7176, %r257, %r7121;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7179, %r254, %r7118, %r7176;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7183, %r257, %r7130;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7186, %r254, %r7127, %r7183;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7190, %r257, %r7139;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7193, %r254, %r7136, %r7190;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7284, %r7281}, {%r313, %r319, %r316, %r322}, {%r7074, %r7144}, {%r1817, %r1817};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7293, %r7290}, {%r313, %r319, %r316, %r322}, {%r7083, %r7151}, {%r1817, %r1817};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7302, %r7299}, {%r313, %r319, %r316, %r322}, {%r7092, %r7158}, {%r1817, %r1817};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7311, %r7308}, {%r313, %r319, %r316, %r322}, {%r7101, %r7165}, {%r1817, %r1817};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7320, %r7317}, {%r313, %r319, %r316, %r322}, {%r7110, %r7172}, {%r1817, %r1817};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7329, %r7326}, {%r313, %r319, %r316, %r322}, {%r7119, %r7179}, {%r1817, %r1817};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7338, %r7335}, {%r313, %r319, %r316, %r322}, {%r7128, %r7186}, {%r1817, %r1817};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7347, %r7344}, {%r313, %r319, %r316, %r322}, {%r7137, %r7193}, {%r1817, %r1817};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7277, %r360;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7279, %r7277, %r7281;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7282, %r357, %r7284, %r7279;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7286, %r360;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7288, %r7286, %r7290;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7291, %r357, %r7293, %r7288;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7295, %r360;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7297, %r7295, %r7299;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7300, %r357, %r7302, %r7297;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7304, %r360;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7306, %r7304, %r7308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7309, %r357, %r7311, %r7306;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7313, %r360;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7315, %r7313, %r7317;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7318, %r357, %r7320, %r7315;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7322, %r360;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7324, %r7322, %r7326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7327, %r357, %r7329, %r7324;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7331, %r360;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7333, %r7331, %r7335;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7336, %r357, %r7338, %r7333;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7340, %r360;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7342, %r7340, %r7344;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7345, %r357, %r7347, %r7342;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7349, %r360, %r7284;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7352, %r357, %r7281, %r7349;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7356, %r360, %r7293;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7359, %r357, %r7290, %r7356;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7363, %r360, %r7302;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7366, %r357, %r7299, %r7363;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7370, %r360, %r7311;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7373, %r357, %r7308, %r7370;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7377, %r360, %r7320;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7380, %r357, %r7317, %r7377;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7384, %r360, %r7329;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7387, %r357, %r7326, %r7384;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7391, %r360, %r7338;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7394, %r357, %r7335, %r7391;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7398, %r360, %r7347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7401, %r357, %r7344, %r7398;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7405, %r7406}, {%r391, %r397, %r394, %r400}, {%r7282, %r7352}, {%r1817, %r1817};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7415, %r7416}, {%r391, %r397, %r394, %r400}, {%r7291, %r7359}, {%r1817, %r1817};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7425, %r7426}, {%r391, %r397, %r394, %r400}, {%r7300, %r7366}, {%r1817, %r1817};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7435, %r7436}, {%r391, %r397, %r394, %r400}, {%r7309, %r7373}, {%r1817, %r1817};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7445, %r7446}, {%r391, %r397, %r394, %r400}, {%r7318, %r7380}, {%r1817, %r1817};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7455, %r7456}, {%r391, %r397, %r394, %r400}, {%r7327, %r7387}, {%r1817, %r1817};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7465, %r7466}, {%r391, %r397, %r394, %r400}, {%r7336, %r7394}, {%r1817, %r1817};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7475, %r7476}, {%r391, %r397, %r394, %r400}, {%r7345, %r7401}, {%r1817, %r1817};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7485, %r100, %r7405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7488, %r100, %r7406;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7491, %r100, %r7415;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7494, %r100, %r7416;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7497, %r100, %r7425;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7500, %r100, %r7426;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7503, %r100, %r7435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7506, %r100, %r7436;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7509, %r100, %r7445;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7512, %r100, %r7446;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7515, %r100, %r7455;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7518, %r100, %r7456;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7521, %r100, %r7465;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7524, %r100, %r7466;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7527, %r100, %r7475;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7530, %r100, %r7476;
	// end inline asm
	// begin inline asm
	mov.b32 %r7533, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7534, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7535, %r7485, %r7533;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7538, %r7535, %r7534;
	// end inline asm
	// begin inline asm
	mov.b32 %r7541, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7542, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7543, %r7488, %r7541;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7546, %r7543, %r7542;
	// end inline asm
	// begin inline asm
	mov.b32 %r7549, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7550, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7551, %r7491, %r7549;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7554, %r7551, %r7550;
	// end inline asm
	// begin inline asm
	mov.b32 %r7557, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7558, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7559, %r7494, %r7557;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7562, %r7559, %r7558;
	// end inline asm
	// begin inline asm
	mov.b32 %r7565, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7566, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7567, %r7497, %r7565;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7570, %r7567, %r7566;
	// end inline asm
	// begin inline asm
	mov.b32 %r7573, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7574, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7575, %r7500, %r7573;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7578, %r7575, %r7574;
	// end inline asm
	// begin inline asm
	mov.b32 %r7581, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7582, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7583, %r7503, %r7581;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7586, %r7583, %r7582;
	// end inline asm
	// begin inline asm
	mov.b32 %r7589, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7590, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7591, %r7506, %r7589;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7594, %r7591, %r7590;
	// end inline asm
	// begin inline asm
	mov.b32 %r7597, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7598, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7599, %r7509, %r7597;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7602, %r7599, %r7598;
	// end inline asm
	// begin inline asm
	mov.b32 %r7605, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7606, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7607, %r7512, %r7605;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7610, %r7607, %r7606;
	// end inline asm
	// begin inline asm
	mov.b32 %r7613, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7614, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7615, %r7515, %r7613;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7618, %r7615, %r7614;
	// end inline asm
	// begin inline asm
	mov.b32 %r7621, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7622, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7623, %r7518, %r7621;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7626, %r7623, %r7622;
	// end inline asm
	// begin inline asm
	mov.b32 %r7629, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7630, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7631, %r7521, %r7629;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7634, %r7631, %r7630;
	// end inline asm
	// begin inline asm
	mov.b32 %r7637, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7638, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7639, %r7524, %r7637;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7642, %r7639, %r7638;
	// end inline asm
	// begin inline asm
	mov.b32 %r7645, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7646, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7647, %r7527, %r7645;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7650, %r7647, %r7646;
	// end inline asm
	// begin inline asm
	mov.b32 %r7653, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7654, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7655, %r7530, %r7653;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7658, %r7655, %r7654;
	// end inline asm
	// begin inline asm
	mov.b32 %r7664, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r7662, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7663, %r7664, %r7662;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7666, %r7538, %r7663;
	// end inline asm
	// begin inline asm
	mov.b32 %r7669, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7670, %r7664, %r7669;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7673, %r7546, %r7670;
	// end inline asm
	// begin inline asm
	mov.b32 %r7676, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7677, %r7664, %r7676;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7680, %r7554, %r7677;
	// end inline asm
	// begin inline asm
	mov.b32 %r7683, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7684, %r7664, %r7683;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7687, %r7562, %r7684;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7690, %r7666, %r7680, %r2305;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7694, %r7673, %r7687, %r2305;
	// end inline asm
	shl.b32 	%r7701, %r7694, 4;
	// begin inline asm
	lop3.b32 %r7698, %r2311, %r7690, %r7701, 202;
	// end inline asm
	xor.b32  	%r7841, %r7698, -2004318072;
	// begin inline asm
	mov.b32 %r7705, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r7703, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7704, %r7705, %r7703;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7707, %r7570, %r7704;
	// end inline asm
	// begin inline asm
	mov.b32 %r7710, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7711, %r7705, %r7710;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7714, %r7578, %r7711;
	// end inline asm
	// begin inline asm
	mov.b32 %r7717, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7718, %r7705, %r7717;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7721, %r7586, %r7718;
	// end inline asm
	// begin inline asm
	mov.b32 %r7724, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7725, %r7705, %r7724;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7728, %r7594, %r7725;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7731, %r7707, %r7721, %r2305;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7735, %r7714, %r7728, %r2305;
	// end inline asm
	shl.b32 	%r7742, %r7735, 4;
	// begin inline asm
	lop3.b32 %r7739, %r2311, %r7731, %r7742, 202;
	// end inline asm
	xor.b32  	%r7842, %r7739, -2004318072;
	// begin inline asm
	mov.b32 %r7746, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r7744, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7745, %r7746, %r7744;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7748, %r7602, %r7745;
	// end inline asm
	// begin inline asm
	mov.b32 %r7751, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7752, %r7746, %r7751;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7755, %r7610, %r7752;
	// end inline asm
	// begin inline asm
	mov.b32 %r7758, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7759, %r7746, %r7758;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7762, %r7618, %r7759;
	// end inline asm
	// begin inline asm
	mov.b32 %r7765, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7766, %r7746, %r7765;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7769, %r7626, %r7766;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7772, %r7748, %r7762, %r2305;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7776, %r7755, %r7769, %r2305;
	// end inline asm
	shl.b32 	%r7783, %r7776, 4;
	// begin inline asm
	lop3.b32 %r7780, %r2311, %r7772, %r7783, 202;
	// end inline asm
	xor.b32  	%r7843, %r7780, -2004318072;
	// begin inline asm
	mov.b32 %r7787, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r7785, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7786, %r7787, %r7785;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7789, %r7634, %r7786;
	// end inline asm
	// begin inline asm
	mov.b32 %r7792, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7793, %r7787, %r7792;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7796, %r7642, %r7793;
	// end inline asm
	// begin inline asm
	mov.b32 %r7799, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7800, %r7787, %r7799;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7803, %r7650, %r7800;
	// end inline asm
	// begin inline asm
	mov.b32 %r7806, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7807, %r7787, %r7806;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7810, %r7658, %r7807;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7813, %r7789, %r7803, %r2305;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7817, %r7796, %r7810, %r2305;
	// end inline asm
	shl.b32 	%r7824, %r7817, 4;
	// begin inline asm
	lop3.b32 %r7821, %r2311, %r7813, %r7824, 202;
	// end inline asm
	xor.b32  	%r7844, %r7821, -2004318072;
	st.shared.u32 	[%rd85], %r7841;
	st.shared.u32 	[%rd86], %r7842;
	st.shared.u32 	[%rd87], %r7843;
	st.shared.u32 	[%rd88], %r7844;
	add.s32 	%r7962, %r7962, -64;
	add.s64 	%rd141, %rd141, 8324;
	setp.eq.s32 	%p216, %r7962, 0;
	@%p216 bra 	$L__BB0_85;
	bra.uni 	$L__BB0_84;
$L__BB0_85:                             // %guard_exit17352
                                        //   in Loop: Header=BB0_83 Depth=1
	bar.sync 	0;
	ld.shared.u32 	%r7850, [%rd5];
	ld.shared.u32 	%r7851, [%rd6+128];
	ld.shared.u32 	%r7858, [%rd6+4];
	ld.shared.u32 	%r7859, [%rd6+132];
	ld.shared.u32 	%r7866, [%rd5+8324];
	ld.shared.u32 	%r7867, [%rd6+8452];
	ld.shared.u32 	%r7874, [%rd6+8328];
	ld.shared.u32 	%r7875, [%rd6+8456];
	ld.shared.u32 	%r7882, [%rd5+16648];
	ld.shared.u32 	%r7883, [%rd6+16776];
	ld.shared.u32 	%r7890, [%rd6+16652];
	ld.shared.u32 	%r7891, [%rd6+16780];
	ld.shared.u32 	%r7898, [%rd5+24972];
	ld.shared.u32 	%r7899, [%rd6+25100];
	ld.shared.u32 	%r7906, [%rd6+24976];
	ld.shared.u32 	%r7907, [%rd6+25104];
	// begin inline asm
	prmt.b32 %r7845, %r7850, %r7851, %r555;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7849, %r7850, %r7851, %r559;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7853, %r7858, %r7859, %r555;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7857, %r7858, %r7859, %r559;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7861, %r7866, %r7867, %r555;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7865, %r7866, %r7867, %r559;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7869, %r7874, %r7875, %r555;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7873, %r7874, %r7875, %r559;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7877, %r7882, %r7883, %r555;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7881, %r7882, %r7883, %r559;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7885, %r7890, %r7891, %r555;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7889, %r7890, %r7891, %r559;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7893, %r7898, %r7899, %r555;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7897, %r7898, %r7899, %r559;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7901, %r7906, %r7907, %r555;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7905, %r7906, %r7907, %r559;
	// end inline asm
	selp.b32 	%r7909, %r7849, %r7845, %p203;
	shfl.sync.bfly.b32	%r137, %r7909, 8, 31, -1;
	selp.b32 	%r7910, %r7857, %r7853, %p203;
	shfl.sync.bfly.b32	%r138, %r7910, 8, 31, -1;
	selp.b32 	%r7911, %r7865, %r7861, %p203;
	shfl.sync.bfly.b32	%r7912, %r7911, 8, 31, -1;
	selp.b32 	%r7913, %r7873, %r7869, %p203;
	shfl.sync.bfly.b32	%r7914, %r7913, 8, 31, -1;
	selp.b32 	%r7915, %r7881, %r7877, %p203;
	shfl.sync.bfly.b32	%r7916, %r7915, 8, 31, -1;
	selp.b32 	%r7917, %r7889, %r7885, %p203;
	shfl.sync.bfly.b32	%r7918, %r7917, 8, 31, -1;
	selp.b32 	%r7919, %r7897, %r7893, %p203;
	shfl.sync.bfly.b32	%r7920, %r7919, 8, 31, -1;
	selp.b32 	%r7921, %r7905, %r7901, %p203;
	shfl.sync.bfly.b32	%r7922, %r7921, 8, 31, -1;
	setp.eq.s32 	%p218, %r7961, 0;
	shl.b32 	%r7975, %r7961, 13;
	@%p218 bra 	$L__BB0_86;
// %bb.122:                             // %pass16539
                                        //   in Loop: Header=BB0_83 Depth=1
	selp.b32 	%r7923, %r138, %r7857, %p203;
	selp.b32 	%r7924, %r7853, %r138, %p203;
	selp.b32 	%r7925, %r137, %r7849, %p203;
	selp.b32 	%r7926, %r7845, %r137, %p203;
	add.s32 	%r7928, %r52, %r7975;
	cvt.s64.s32 	%rd89, %r7928;
	add.s64 	%rd90, %rd89, %rd7;
	shr.u64 	%rd91, %rd90, 36;
	add.s64 	%rd92, %rd90, %rd91;
	shr.s64 	%rd93, %rd92, 28;
	setp.lt.s64 	%p220, %rd90, 0;
	and.b64  	%rd94, %rd92, -268435456;
	setp.ne.s64 	%p221, %rd94, %rd90;
	and.pred  	%p222, %p220, %p221;
	selp.u64 	%rd95, 1, 0, %p222;
	sub.s64 	%rd96, %rd95, %rd93;
	shl.b64 	%rd97, %rd96, 28;
	add.s64 	%rd98, %rd97, %rd90;
	shl.b64 	%rd99, %rd98, 2;
	add.s64 	%rd100, %rd3, %rd99;
	st.global.v4.u32 	[%rd100], {%r7926, %r7924, %r7925, %r7923};
$L__BB0_86:                             // %L39860
                                        //   in Loop: Header=BB0_83 Depth=1
	or.b32  	%r7929, %r7961, 64;
	setp.gt.u32 	%p223, %r7929, 191;
	@%p223 bra 	$L__BB0_120;
	bra.uni 	$L__BB0_87;
$L__BB0_120:                            // %pass16646
                                        //   in Loop: Header=BB0_83 Depth=1
	selp.b32 	%r139, %r7861, %r7912, %p203;
	selp.b32 	%r140, %r7912, %r7865, %p203;
	selp.b32 	%r141, %r7869, %r7914, %p203;
	selp.b32 	%r142, %r7914, %r7873, %p203;
	or.b32  	%r7930, %r7975, 524288;
	add.s32 	%r7931, %r52, %r7930;
	cvt.s64.s32 	%rd101, %r7931;
	add.s64 	%rd102, %rd101, %rd7;
	shr.u64 	%rd103, %rd102, 36;
	add.s64 	%rd104, %rd102, %rd103;
	shr.s64 	%rd105, %rd104, 28;
	setp.lt.s64 	%p224, %rd102, 0;
	and.b64  	%rd106, %rd104, -268435456;
	setp.ne.s64 	%p225, %rd106, %rd102;
	and.pred  	%p226, %p224, %p225;
	selp.u64 	%rd107, 1, 0, %p226;
	sub.s64 	%rd108, %rd107, %rd105;
	shl.b64 	%rd109, %rd108, 28;
	add.s64 	%rd110, %rd109, %rd102;
	shl.b64 	%rd111, %rd110, 2;
	add.s64 	%rd112, %rd3, %rd111;
	st.global.v4.u32 	[%rd112], {%r139, %r141, %r140, %r142};
$L__BB0_87:                             // %L40078
                                        //   in Loop: Header=BB0_83 Depth=1
	selp.b32 	%r147, %r7893, %r7920, %p203;
	selp.b32 	%r148, %r7920, %r7897, %p203;
	selp.b32 	%r149, %r7901, %r7922, %p203;
	selp.b32 	%r150, %r7922, %r7905, %p203;
	or.b32  	%r7932, %r7961, 128;
	setp.gt.u32 	%p227, %r7932, 191;
	@%p227 bra 	$L__BB0_121;
	bra.uni 	$L__BB0_88;
$L__BB0_121:                            // %pass16753
                                        //   in Loop: Header=BB0_83 Depth=1
	selp.b32 	%r143, %r7877, %r7916, %p203;
	selp.b32 	%r144, %r7916, %r7881, %p203;
	selp.b32 	%r145, %r7885, %r7918, %p203;
	selp.b32 	%r146, %r7918, %r7889, %p203;
	or.b32  	%r7933, %r7975, 1048576;
	add.s32 	%r7934, %r52, %r7933;
	cvt.s64.s32 	%rd113, %r7934;
	add.s64 	%rd114, %rd113, %rd7;
	shr.u64 	%rd115, %rd114, 36;
	add.s64 	%rd116, %rd114, %rd115;
	shr.s64 	%rd117, %rd116, 28;
	setp.lt.s64 	%p228, %rd114, 0;
	and.b64  	%rd118, %rd116, -268435456;
	setp.ne.s64 	%p229, %rd118, %rd114;
	and.pred  	%p230, %p228, %p229;
	selp.u64 	%rd119, 1, 0, %p230;
	sub.s64 	%rd120, %rd119, %rd117;
	shl.b64 	%rd121, %rd120, 28;
	add.s64 	%rd122, %rd121, %rd114;
	shl.b64 	%rd123, %rd122, 2;
	add.s64 	%rd124, %rd3, %rd123;
	st.global.v4.u32 	[%rd124], {%r143, %r145, %r144, %r146};
	bra.uni 	$L__BB0_88;
$L__BB0_89:                             // %L40525
	st.global.u32 	[%rd4], %r7941;
	ret;
$L__BB0_7:                              // %L166
	mov.u32 	%r7940, 2;
	st.global.u32 	[%rd4], %r7940;
	mov.u64 	%rd139, exception3410;
	cvta.global.u64 	%rd140, %rd139;
	{ // callseq 4, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd140;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 4
	{ // callseq 5, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd30;
	st.param.b32 	[param0+8], %r151;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 5
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
$L__BB0_10:                             // %L275
	mov.u32 	%r7939, 3;
	st.global.u32 	[%rd4], %r7939;
	mov.u64 	%rd137, exception3410;
	cvta.global.u64 	%rd138, %rd137;
	{ // callseq 2, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd138;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 2
	{ // callseq 3, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd30;
	st.param.b32 	[param0+8], %r151;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 3
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
$L__BB0_1:                              // %L8
	mov.u64 	%rd35, exception13430;
	cvta.global.u64 	%rd36, %rd35;
	{ // callseq 0, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd36;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 0
	{ // callseq 1, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd30;
	st.param.b32 	[param0+8], %r151;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 1
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
                                        // -- End function
}
