// PTX kernel code for the CUDA upchannelizer
// This file has been generated automatically by `upchan.jl`.
// Do not modify this file, your changes will be lost.

// PTX CompilerJob of MethodInstance for upchan(::Int32, ::Int32, ::Int32, ::Int32, ::Int32, ::Int32, ::CuDeviceVector{Float16x2, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int32, 1}) for sm_86, minthreads=512, blocks_per_sm=2

//
// Generated by LLVM NVPTX Back-End
//

.version 8.2
.target sm_86
.address_size 64

	// .globl	_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE // -- Begin function _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE
.func gpu_report_exception
(
	.param .b64 gpu_report_exception_param_0
)
.noreturn
{
	trap;
}
.func gpu_signal_exception
(
	.param .align 8 .b8 gpu_signal_exception_param_0[16]
)
.noreturn
{
	trap;
}
.extern .shared .align 32 .b8 shmem[];
.global .align 1 .b8 exception3423[6] = {101, 114, 114, 111, 114, 0};
.global .align 1 .b8 exception1[10] = {101, 120, 99, 101, 112, 116, 105, 111, 110, 0};
                                        // @_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE
.visible .entry _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE(
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_0[16],
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_1,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_2,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_3,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_4,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_5,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_6,
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_7[32],
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_8[32],
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_9[32],
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_10[32]
)
.reqntid 512, 1, 1
.minnctapersm 2
{
	.reg .pred 	%p<185>;
	.reg .b16 	%rs<1185>;
	.reg .b32 	%r<7943>;
	.reg .f32 	%f<721>;
	.reg .b64 	%rd<149>;

// %bb.0:                               // %conversion
	ld.param.u32 	%r112, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_0+8];
	ld.param.u64 	%rd35, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_0];
	// begin inline asm
	mov.u32 %r119, %dynamic_smem_size;
	// end inline asm
	setp.gt.u32 	%p1, %r119, 66815;
	@%p1 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:                              // %L16
	ld.param.u64 	%rd36, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_10];
	ld.param.u32 	%r113, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_1];
	mov.u32 	%r1, %ctaid.x;
	shl.b32 	%r120, %r1, 9;
	mov.u32 	%r2, %tid.y;
	shl.b32 	%r3, %r2, 5;
	mov.u32 	%r4, %tid.x;
	or.b32  	%r121, %r3, %r4;
	or.b32  	%r122, %r121, %r120;
	mul.wide.u32 	%rd42, %r122, 4;
	add.s64 	%rd4, %rd36, %rd42;
	mov.u32 	%r123, 1;
	st.global.u32 	[%rd4], %r123;
	setp.gt.u32 	%p2, %r113, 32767;
	@%p2 bra 	$L__BB0_7;
// %bb.3:                               // %L120
	ld.param.u32 	%r114, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_2];
	setp.lt.s32 	%p3, %r114, %r113;
	setp.gt.s32 	%p4, %r114, 65535;
	or.pred  	%p5, %p3, %p4;
	@%p5 bra 	$L__BB0_7;
// %bb.4:                               // %L127
	ld.param.u32 	%r115, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_3];
	sub.s32 	%r124, %r114, %r113;
	and.b32  	%r125, %r124, 255;
	setp.ne.s32 	%p6, %r125, 0;
	setp.gt.u32 	%p7, %r115, 511;
	or.pred  	%p8, %p6, %p7;
	@%p8 bra 	$L__BB0_7;
// %bb.5:                               // %L138
	ld.param.u32 	%r116, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_4];
	setp.lt.s32 	%p9, %r116, %r115;
	setp.gt.s32 	%p10, %r116, 1023;
	or.pred  	%p11, %p9, %p10;
	@%p11 bra 	$L__BB0_7;
// %bb.6:                               // %L145
	not.b32 	%r126, %r115;
	add.s32 	%r127, %r126, %r116;
	and.b32  	%r128, %r127, 3;
	setp.eq.s32 	%p12, %r128, 0;
	@%p12 bra 	$L__BB0_8;
	bra.uni 	$L__BB0_7;
$L__BB0_8:                              // %L260
	ld.param.u32 	%r117, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_5];
	setp.lt.s32 	%p13, %r117, 0;
	@%p13 bra 	$L__BB0_10;
// %bb.9:                               // %L262
	ld.param.u32 	%r118, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_6];
	setp.le.s32 	%p14, %r117, %r118;
	setp.lt.s32 	%p15, %r118, 65;
	and.pred  	%p16, %p14, %p15;
	@%p16 bra 	$L__BB0_11;
	bra.uni 	$L__BB0_10;
$L__BB0_11:                             // %pass189
	bfe.u32 	%r57, %r4, 2, 1;
	shr.u32 	%r58, %r4, 4;
	shl.b32 	%r135, %r58, 1;
	shl.b32 	%r136, %r57, 2;
	shl.b32 	%r59, %r4, 3;
	and.b32  	%r137, %r59, 24;
	or.b32  	%r138, %r136, %r137;
	or.b32  	%r139, %r135, %r138;
	bfe.u32 	%r140, %r4, 3, 1;
	or.b32  	%r61, %r140, %r139;
	shl.b32 	%r62, %r61, 1;
	or.b32  	%r141, %r62, -255;
	cvt.rn.f32.s32 	%f46, %r141;
	mov.f32 	%f47, 0f44000000;
	div.approx.f32 	%f42, %f46, %f47;
	mov.f32 	%f71, 0f00000000;
	mul.f32 	%f44, %f42, 0f40800000;
	setp.neu.f32 	%p22, %f44, 0f00000000;
	mov.f32 	%f720, 0f3F800000;
	mov.f32 	%f713, %f720;
	@%p22 bra 	$L__BB0_12;
	bra.uni 	$L__BB0_13;
$L__BB0_12:                             // %L599
	add.f32 	%f74, %f44, %f44;
	mov.b32 	%r149, %f74;
	and.b32  	%r150, %r149, -2147483648;
	or.b32  	%r151, %r150, 1056964608;
	mov.b32 	%f75, %r151;
	add.f32 	%f76, %f74, %f75;
	cvt.rzi.f32.f32 	%f77, %f76;
	abs.f32 	%f78, %f74;
	setp.gt.f32 	%p23, %f78, 0f4B000000;
	selp.f32 	%f79, %f74, %f77, %p23;
	cvt.rzi.f32.f32 	%f80, %f74;
	setp.lt.f32 	%p24, %f78, 0f3F000000;
	selp.f32 	%f81, %f80, %f79, %p24;
	cvt.rzi.s32.f32 	%r152, %f81;
	fma.rn.f32 	%f82, %f81, 0fBF000000, %f44;
	mul.f32 	%f83, %f82, %f82;
	fma.rn.f32 	%f84, %f83, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f85, %f83, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f86, %f84, %f83, 0fC0A55DF6;
	fma.rn.f32 	%f87, %f85, %f83, 0f4081E0CF;
	fma.rn.f32 	%f88, %f83, %f82, 0f00000000;
	fma.rn.f32 	%f89, %f87, %f83, 0fC09DE9E6;
	fma.rn.f32 	%f90, %f86, %f88, 0f00000000;
	fma.rn.f32 	%f91, %f89, %f83, 0f3F800000;
	fma.rn.f32 	%f92, %f82, 0f40490FDB, %f90;
	and.b32  	%r153, %r152, 1;
	setp.eq.b32 	%p25, %r153, 1;
	selp.f32 	%f93, %f91, %f92, %p25;
	and.b32  	%r154, %r152, 2;
	setp.eq.s32 	%p26, %r154, 0;
	sub.f32 	%f95, %f71, %f93;
	selp.f32 	%f96, %f93, %f95, %p26;
	cvt.rzi.f32.f32 	%f97, %f44;
	setp.eq.f32 	%p27, %f44, %f97;
	mul.f32 	%f98, %f44, 0f00000000;
	selp.f32 	%f99, %f98, %f96, %p27;
	mul.f32 	%f100, %f42, 0f41490FDB;
	div.approx.f32 	%f713, %f99, %f100;
$L__BB0_13:                             // %L603
	or.b32  	%r155, %r62, -191;
	cvt.rn.f32.s32 	%f104, %r155;
	div.approx.f32 	%f4, %f104, %f47;
	mul.f32 	%f6, %f4, 0f40800000;
	setp.eq.f32 	%p33, %f6, 0f00000000;
	mov.f32 	%f714, %f720;
	@%p33 bra 	$L__BB0_15;
// %bb.14:                              // %L617
	add.f32 	%f132, %f6, %f6;
	mov.b32 	%r163, %f132;
	and.b32  	%r164, %r163, -2147483648;
	or.b32  	%r165, %r164, 1056964608;
	mov.b32 	%f133, %r165;
	add.f32 	%f134, %f132, %f133;
	cvt.rzi.f32.f32 	%f135, %f134;
	abs.f32 	%f136, %f132;
	setp.gt.f32 	%p34, %f136, 0f4B000000;
	selp.f32 	%f137, %f132, %f135, %p34;
	cvt.rzi.f32.f32 	%f138, %f132;
	setp.lt.f32 	%p35, %f136, 0f3F000000;
	selp.f32 	%f139, %f138, %f137, %p35;
	cvt.rzi.s32.f32 	%r166, %f139;
	fma.rn.f32 	%f140, %f139, 0fBF000000, %f6;
	mul.f32 	%f141, %f140, %f140;
	fma.rn.f32 	%f142, %f141, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f143, %f141, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f144, %f142, %f141, 0fC0A55DF6;
	fma.rn.f32 	%f145, %f143, %f141, 0f4081E0CF;
	fma.rn.f32 	%f146, %f141, %f140, 0f00000000;
	fma.rn.f32 	%f147, %f145, %f141, 0fC09DE9E6;
	fma.rn.f32 	%f148, %f144, %f146, 0f00000000;
	fma.rn.f32 	%f149, %f147, %f141, 0f3F800000;
	fma.rn.f32 	%f150, %f140, 0f40490FDB, %f148;
	and.b32  	%r167, %r166, 1;
	setp.eq.b32 	%p36, %r167, 1;
	selp.f32 	%f151, %f149, %f150, %p36;
	and.b32  	%r168, %r166, 2;
	setp.eq.s32 	%p37, %r168, 0;
	sub.f32 	%f153, %f71, %f151;
	selp.f32 	%f154, %f151, %f153, %p37;
	cvt.rzi.f32.f32 	%f155, %f6;
	setp.eq.f32 	%p38, %f6, %f155;
	mul.f32 	%f156, %f6, 0f00000000;
	selp.f32 	%f157, %f156, %f154, %p38;
	mul.f32 	%f158, %f4, 0f41490FDB;
	div.approx.f32 	%f714, %f157, %f158;
$L__BB0_15:                             // %L621
	or.b32  	%r172, %r62, -127;
	cvt.rn.f32.s32 	%f163, %r172;
	div.approx.f32 	%f9, %f163, %f47;
	mul.f32 	%f11, %f9, 0f40800000;
	setp.eq.f32 	%p44, %f11, 0f00000000;
	mov.f32 	%f715, %f720;
	@%p44 bra 	$L__BB0_17;
// %bb.16:                              // %L697
	add.f32 	%f191, %f11, %f11;
	mov.b32 	%r180, %f191;
	and.b32  	%r181, %r180, -2147483648;
	or.b32  	%r182, %r181, 1056964608;
	mov.b32 	%f192, %r182;
	add.f32 	%f193, %f191, %f192;
	cvt.rzi.f32.f32 	%f194, %f193;
	abs.f32 	%f195, %f191;
	setp.gt.f32 	%p45, %f195, 0f4B000000;
	selp.f32 	%f196, %f191, %f194, %p45;
	cvt.rzi.f32.f32 	%f197, %f191;
	setp.lt.f32 	%p46, %f195, 0f3F000000;
	selp.f32 	%f198, %f197, %f196, %p46;
	cvt.rzi.s32.f32 	%r183, %f198;
	fma.rn.f32 	%f199, %f198, 0fBF000000, %f11;
	mul.f32 	%f200, %f199, %f199;
	fma.rn.f32 	%f201, %f200, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f202, %f200, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f203, %f201, %f200, 0fC0A55DF6;
	fma.rn.f32 	%f204, %f202, %f200, 0f4081E0CF;
	fma.rn.f32 	%f205, %f200, %f199, 0f00000000;
	fma.rn.f32 	%f206, %f204, %f200, 0fC09DE9E6;
	fma.rn.f32 	%f207, %f203, %f205, 0f00000000;
	fma.rn.f32 	%f208, %f206, %f200, 0f3F800000;
	fma.rn.f32 	%f209, %f199, 0f40490FDB, %f207;
	and.b32  	%r184, %r183, 1;
	setp.eq.b32 	%p47, %r184, 1;
	selp.f32 	%f210, %f208, %f209, %p47;
	and.b32  	%r185, %r183, 2;
	setp.eq.s32 	%p48, %r185, 0;
	sub.f32 	%f212, %f71, %f210;
	selp.f32 	%f213, %f210, %f212, %p48;
	cvt.rzi.f32.f32 	%f214, %f11;
	setp.eq.f32 	%p49, %f11, %f214;
	mul.f32 	%f215, %f11, 0f00000000;
	selp.f32 	%f216, %f215, %f213, %p49;
	mul.f32 	%f217, %f9, 0f41490FDB;
	div.approx.f32 	%f715, %f216, %f217;
$L__BB0_17:                             // %L701
	or.b32  	%r186, %r62, -63;
	cvt.rn.f32.s32 	%f221, %r186;
	div.approx.f32 	%f15, %f221, %f47;
	mul.f32 	%f17, %f15, 0f40800000;
	setp.eq.f32 	%p55, %f17, 0f00000000;
	mov.f32 	%f716, %f720;
	@%p55 bra 	$L__BB0_19;
// %bb.18:                              // %L715
	add.f32 	%f249, %f17, %f17;
	mov.b32 	%r194, %f249;
	and.b32  	%r195, %r194, -2147483648;
	or.b32  	%r196, %r195, 1056964608;
	mov.b32 	%f250, %r196;
	add.f32 	%f251, %f249, %f250;
	cvt.rzi.f32.f32 	%f252, %f251;
	abs.f32 	%f253, %f249;
	setp.gt.f32 	%p56, %f253, 0f4B000000;
	selp.f32 	%f254, %f249, %f252, %p56;
	cvt.rzi.f32.f32 	%f255, %f249;
	setp.lt.f32 	%p57, %f253, 0f3F000000;
	selp.f32 	%f256, %f255, %f254, %p57;
	cvt.rzi.s32.f32 	%r197, %f256;
	fma.rn.f32 	%f257, %f256, 0fBF000000, %f17;
	mul.f32 	%f258, %f257, %f257;
	fma.rn.f32 	%f259, %f258, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f260, %f258, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f261, %f259, %f258, 0fC0A55DF6;
	fma.rn.f32 	%f262, %f260, %f258, 0f4081E0CF;
	fma.rn.f32 	%f263, %f258, %f257, 0f00000000;
	fma.rn.f32 	%f264, %f262, %f258, 0fC09DE9E6;
	fma.rn.f32 	%f265, %f261, %f263, 0f00000000;
	fma.rn.f32 	%f266, %f264, %f258, 0f3F800000;
	fma.rn.f32 	%f267, %f257, 0f40490FDB, %f265;
	and.b32  	%r198, %r197, 1;
	setp.eq.b32 	%p58, %r198, 1;
	selp.f32 	%f268, %f266, %f267, %p58;
	and.b32  	%r199, %r197, 2;
	setp.eq.s32 	%p59, %r199, 0;
	sub.f32 	%f270, %f71, %f268;
	selp.f32 	%f271, %f268, %f270, %p59;
	cvt.rzi.f32.f32 	%f272, %f17;
	setp.eq.f32 	%p60, %f17, %f272;
	mul.f32 	%f273, %f17, 0f00000000;
	selp.f32 	%f274, %f273, %f271, %p60;
	mul.f32 	%f275, %f15, 0f41490FDB;
	div.approx.f32 	%f716, %f274, %f275;
$L__BB0_19:                             // %L719
	or.b32  	%r203, %r62, 1;
	cvt.rn.f32.s32 	%f280, %r203;
	div.approx.f32 	%f20, %f280, %f47;
	mul.f32 	%f22, %f20, 0f40800000;
	setp.eq.f32 	%p66, %f22, 0f00000000;
	mov.f32 	%f717, %f720;
	@%p66 bra 	$L__BB0_21;
// %bb.20:                              // %L795
	add.f32 	%f308, %f22, %f22;
	mov.b32 	%r211, %f308;
	and.b32  	%r212, %r211, -2147483648;
	or.b32  	%r213, %r212, 1056964608;
	mov.b32 	%f309, %r213;
	add.f32 	%f310, %f308, %f309;
	cvt.rzi.f32.f32 	%f311, %f310;
	abs.f32 	%f312, %f308;
	setp.gt.f32 	%p67, %f312, 0f4B000000;
	selp.f32 	%f313, %f308, %f311, %p67;
	cvt.rzi.f32.f32 	%f314, %f308;
	setp.lt.f32 	%p68, %f312, 0f3F000000;
	selp.f32 	%f315, %f314, %f313, %p68;
	cvt.rzi.s32.f32 	%r214, %f315;
	fma.rn.f32 	%f316, %f315, 0fBF000000, %f22;
	mul.f32 	%f317, %f316, %f316;
	fma.rn.f32 	%f318, %f317, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f319, %f317, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f320, %f318, %f317, 0fC0A55DF6;
	fma.rn.f32 	%f321, %f319, %f317, 0f4081E0CF;
	fma.rn.f32 	%f322, %f317, %f316, 0f00000000;
	fma.rn.f32 	%f323, %f321, %f317, 0fC09DE9E6;
	fma.rn.f32 	%f324, %f320, %f322, 0f00000000;
	fma.rn.f32 	%f325, %f323, %f317, 0f3F800000;
	fma.rn.f32 	%f326, %f316, 0f40490FDB, %f324;
	and.b32  	%r215, %r214, 1;
	setp.eq.b32 	%p69, %r215, 1;
	selp.f32 	%f327, %f325, %f326, %p69;
	and.b32  	%r216, %r214, 2;
	setp.eq.s32 	%p70, %r216, 0;
	sub.f32 	%f329, %f71, %f327;
	selp.f32 	%f330, %f327, %f329, %p70;
	cvt.rzi.f32.f32 	%f331, %f22;
	setp.eq.f32 	%p71, %f22, %f331;
	mul.f32 	%f332, %f22, 0f00000000;
	selp.f32 	%f333, %f332, %f330, %p71;
	mul.f32 	%f334, %f20, 0f41490FDB;
	div.approx.f32 	%f717, %f333, %f334;
$L__BB0_21:                             // %L799
	or.b32  	%r217, %r62, 65;
	cvt.rn.f32.s32 	%f338, %r217;
	div.approx.f32 	%f26, %f338, %f47;
	mul.f32 	%f28, %f26, 0f40800000;
	setp.eq.f32 	%p77, %f28, 0f00000000;
	mov.f32 	%f718, %f720;
	@%p77 bra 	$L__BB0_23;
// %bb.22:                              // %L813
	add.f32 	%f366, %f28, %f28;
	mov.b32 	%r225, %f366;
	and.b32  	%r226, %r225, -2147483648;
	or.b32  	%r227, %r226, 1056964608;
	mov.b32 	%f367, %r227;
	add.f32 	%f368, %f366, %f367;
	cvt.rzi.f32.f32 	%f369, %f368;
	abs.f32 	%f370, %f366;
	setp.gt.f32 	%p78, %f370, 0f4B000000;
	selp.f32 	%f371, %f366, %f369, %p78;
	cvt.rzi.f32.f32 	%f372, %f366;
	setp.lt.f32 	%p79, %f370, 0f3F000000;
	selp.f32 	%f373, %f372, %f371, %p79;
	cvt.rzi.s32.f32 	%r228, %f373;
	fma.rn.f32 	%f374, %f373, 0fBF000000, %f28;
	mul.f32 	%f375, %f374, %f374;
	fma.rn.f32 	%f376, %f375, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f377, %f375, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f378, %f376, %f375, 0fC0A55DF6;
	fma.rn.f32 	%f379, %f377, %f375, 0f4081E0CF;
	fma.rn.f32 	%f380, %f375, %f374, 0f00000000;
	fma.rn.f32 	%f381, %f379, %f375, 0fC09DE9E6;
	fma.rn.f32 	%f382, %f378, %f380, 0f00000000;
	fma.rn.f32 	%f383, %f381, %f375, 0f3F800000;
	fma.rn.f32 	%f384, %f374, 0f40490FDB, %f382;
	and.b32  	%r229, %r228, 1;
	setp.eq.b32 	%p80, %r229, 1;
	selp.f32 	%f385, %f383, %f384, %p80;
	and.b32  	%r230, %r228, 2;
	setp.eq.s32 	%p81, %r230, 0;
	sub.f32 	%f387, %f71, %f385;
	selp.f32 	%f388, %f385, %f387, %p81;
	cvt.rzi.f32.f32 	%f389, %f28;
	setp.eq.f32 	%p82, %f28, %f389;
	mul.f32 	%f390, %f28, 0f00000000;
	selp.f32 	%f391, %f390, %f388, %p82;
	mul.f32 	%f392, %f26, 0f41490FDB;
	div.approx.f32 	%f718, %f391, %f392;
$L__BB0_23:                             // %L817
	or.b32  	%r234, %r62, 129;
	cvt.rn.f32.s32 	%f397, %r234;
	div.approx.f32 	%f31, %f397, %f47;
	mul.f32 	%f33, %f31, 0f40800000;
	setp.eq.f32 	%p88, %f33, 0f00000000;
	mov.f32 	%f719, %f720;
	@%p88 bra 	$L__BB0_25;
// %bb.24:                              // %L893
	add.f32 	%f425, %f33, %f33;
	mov.b32 	%r242, %f425;
	and.b32  	%r243, %r242, -2147483648;
	or.b32  	%r244, %r243, 1056964608;
	mov.b32 	%f426, %r244;
	add.f32 	%f427, %f425, %f426;
	cvt.rzi.f32.f32 	%f428, %f427;
	abs.f32 	%f429, %f425;
	setp.gt.f32 	%p89, %f429, 0f4B000000;
	selp.f32 	%f430, %f425, %f428, %p89;
	cvt.rzi.f32.f32 	%f431, %f425;
	setp.lt.f32 	%p90, %f429, 0f3F000000;
	selp.f32 	%f432, %f431, %f430, %p90;
	cvt.rzi.s32.f32 	%r245, %f432;
	fma.rn.f32 	%f433, %f432, 0fBF000000, %f33;
	mul.f32 	%f434, %f433, %f433;
	fma.rn.f32 	%f435, %f434, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f436, %f434, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f437, %f435, %f434, 0fC0A55DF6;
	fma.rn.f32 	%f438, %f436, %f434, 0f4081E0CF;
	fma.rn.f32 	%f439, %f434, %f433, 0f00000000;
	fma.rn.f32 	%f440, %f438, %f434, 0fC09DE9E6;
	fma.rn.f32 	%f441, %f437, %f439, 0f00000000;
	fma.rn.f32 	%f442, %f440, %f434, 0f3F800000;
	fma.rn.f32 	%f443, %f433, 0f40490FDB, %f441;
	and.b32  	%r246, %r245, 1;
	setp.eq.b32 	%p91, %r246, 1;
	selp.f32 	%f444, %f442, %f443, %p91;
	and.b32  	%r247, %r245, 2;
	setp.eq.s32 	%p92, %r247, 0;
	sub.f32 	%f446, %f71, %f444;
	selp.f32 	%f447, %f444, %f446, %p92;
	cvt.rzi.f32.f32 	%f448, %f33;
	setp.eq.f32 	%p93, %f33, %f448;
	mul.f32 	%f449, %f33, 0f00000000;
	selp.f32 	%f450, %f449, %f447, %p93;
	mul.f32 	%f451, %f31, 0f41490FDB;
	div.approx.f32 	%f719, %f450, %f451;
$L__BB0_25:                             // %L897
	or.b32  	%r248, %r62, 193;
	cvt.rn.f32.s32 	%f455, %r248;
	div.approx.f32 	%f37, %f455, %f47;
	mul.f32 	%f39, %f37, 0f40800000;
	setp.eq.f32 	%p99, %f39, 0f00000000;
	@%p99 bra 	$L__BB0_27;
// %bb.26:                              // %L911
	add.f32 	%f483, %f39, %f39;
	mov.b32 	%r256, %f483;
	and.b32  	%r257, %r256, -2147483648;
	or.b32  	%r258, %r257, 1056964608;
	mov.b32 	%f484, %r258;
	add.f32 	%f485, %f483, %f484;
	cvt.rzi.f32.f32 	%f486, %f485;
	abs.f32 	%f487, %f483;
	setp.gt.f32 	%p100, %f487, 0f4B000000;
	selp.f32 	%f488, %f483, %f486, %p100;
	cvt.rzi.f32.f32 	%f489, %f483;
	setp.lt.f32 	%p101, %f487, 0f3F000000;
	selp.f32 	%f490, %f489, %f488, %p101;
	cvt.rzi.s32.f32 	%r259, %f490;
	fma.rn.f32 	%f491, %f490, 0fBF000000, %f39;
	mul.f32 	%f492, %f491, %f491;
	fma.rn.f32 	%f493, %f492, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f494, %f492, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f495, %f493, %f492, 0fC0A55DF6;
	fma.rn.f32 	%f496, %f494, %f492, 0f4081E0CF;
	fma.rn.f32 	%f497, %f492, %f491, 0f00000000;
	fma.rn.f32 	%f498, %f496, %f492, 0fC09DE9E6;
	fma.rn.f32 	%f499, %f495, %f497, 0f00000000;
	fma.rn.f32 	%f500, %f498, %f492, 0f3F800000;
	fma.rn.f32 	%f501, %f491, 0f40490FDB, %f499;
	and.b32  	%r260, %r259, 1;
	setp.eq.b32 	%p102, %r260, 1;
	selp.f32 	%f502, %f500, %f501, %p102;
	and.b32  	%r261, %r259, 2;
	setp.eq.s32 	%p103, %r261, 0;
	sub.f32 	%f504, %f71, %f502;
	selp.f32 	%f505, %f502, %f504, %p103;
	cvt.rzi.f32.f32 	%f506, %f39;
	setp.eq.f32 	%p104, %f39, %f506;
	mul.f32 	%f507, %f39, 0f00000000;
	selp.f32 	%f508, %f507, %f505, %p104;
	mul.f32 	%f509, %f37, 0f41490FDB;
	div.approx.f32 	%f720, %f508, %f509;
$L__BB0_27:                             // %L915
	setp.le.s32 	%p147, %r114, %r113;
	mov.u32 	%r7914, 0;
	@%p147 bra 	$L__BB0_38;
// %bb.28:                              // %L1438.lr.ph
	abs.f32 	%f48, %f42;
	abs.f32 	%f106, %f4;
	abs.f32 	%f165, %f9;
	abs.f32 	%f223, %f15;
	abs.f32 	%f282, %f20;
	abs.f32 	%f340, %f26;
	setp.gt.f32 	%p17, %f48, 0f4B800000;
	mul.f32 	%f49, %f42, 0f00000000;
	setp.gt.f32 	%p28, %f106, 0f4B800000;
	mul.f32 	%f107, %f4, 0f00000000;
	setp.gt.f32 	%p39, %f165, 0f4B800000;
	mul.f32 	%f166, %f9, 0f00000000;
	setp.gt.f32 	%p50, %f223, 0f4B800000;
	mul.f32 	%f224, %f15, 0f00000000;
	setp.gt.f32 	%p61, %f282, 0f4B800000;
	mul.f32 	%f283, %f20, 0f00000000;
	setp.gt.f32 	%p72, %f340, 0f4B800000;
	mul.f32 	%f341, %f26, 0f00000000;
	abs.f32 	%f399, %f31;
	selp.f32 	%f50, %f49, %f42, %p17;
	selp.f32 	%f108, %f107, %f4, %p28;
	selp.f32 	%f167, %f166, %f9, %p39;
	selp.f32 	%f225, %f224, %f15, %p50;
	selp.f32 	%f284, %f283, %f20, %p61;
	selp.f32 	%f342, %f341, %f26, %p72;
	setp.gt.f32 	%p83, %f399, 0f4B800000;
	mul.f32 	%f400, %f31, 0f00000000;
	add.f32 	%f51, %f50, %f50;
	add.f32 	%f109, %f108, %f108;
	add.f32 	%f168, %f167, %f167;
	add.f32 	%f226, %f225, %f225;
	add.f32 	%f285, %f284, %f284;
	add.f32 	%f343, %f342, %f342;
	selp.f32 	%f401, %f400, %f31, %p83;
	abs.f32 	%f457, %f37;
	mov.b32 	%r142, %f51;
	mov.b32 	%r156, %f109;
	mov.b32 	%r173, %f168;
	mov.b32 	%r187, %f226;
	mov.b32 	%r204, %f285;
	mov.b32 	%r218, %f343;
	add.f32 	%f402, %f401, %f401;
	setp.gt.f32 	%p94, %f457, 0f4B800000;
	mul.f32 	%f458, %f37, 0f00000000;
	and.b32  	%r143, %r142, -2147483648;
	and.b32  	%r157, %r156, -2147483648;
	and.b32  	%r174, %r173, -2147483648;
	and.b32  	%r188, %r187, -2147483648;
	and.b32  	%r205, %r204, -2147483648;
	and.b32  	%r219, %r218, -2147483648;
	mov.b32 	%r235, %f402;
	selp.f32 	%f459, %f458, %f37, %p94;
	or.b32  	%r144, %r143, 1056964608;
	or.b32  	%r158, %r157, 1056964608;
	or.b32  	%r175, %r174, 1056964608;
	or.b32  	%r189, %r188, 1056964608;
	or.b32  	%r206, %r205, 1056964608;
	or.b32  	%r220, %r219, 1056964608;
	and.b32  	%r236, %r235, -2147483648;
	add.f32 	%f460, %f459, %f459;
	mov.b32 	%f52, %r144;
	mov.b32 	%f110, %r158;
	mov.b32 	%f169, %r175;
	mov.b32 	%f227, %r189;
	mov.b32 	%f286, %r206;
	mov.b32 	%f344, %r220;
	or.b32  	%r237, %r236, 1056964608;
	mov.b32 	%r249, %f460;
	add.f32 	%f53, %f51, %f52;
	abs.f32 	%f55, %f51;
	add.f32 	%f111, %f109, %f110;
	abs.f32 	%f113, %f109;
	add.f32 	%f170, %f168, %f169;
	abs.f32 	%f172, %f168;
	add.f32 	%f228, %f226, %f227;
	abs.f32 	%f230, %f226;
	add.f32 	%f287, %f285, %f286;
	abs.f32 	%f289, %f285;
	add.f32 	%f345, %f343, %f344;
	abs.f32 	%f347, %f343;
	mov.b32 	%f403, %r237;
	and.b32  	%r250, %r249, -2147483648;
	cvt.rzi.f32.f32 	%f54, %f53;
	setp.gt.f32 	%p18, %f55, 0f4B000000;
	cvt.rzi.f32.f32 	%f112, %f111;
	setp.gt.f32 	%p29, %f113, 0f4B000000;
	cvt.rzi.f32.f32 	%f171, %f170;
	setp.gt.f32 	%p40, %f172, 0f4B000000;
	cvt.rzi.f32.f32 	%f229, %f228;
	setp.gt.f32 	%p51, %f230, 0f4B000000;
	cvt.rzi.f32.f32 	%f288, %f287;
	setp.gt.f32 	%p62, %f289, 0f4B000000;
	cvt.rzi.f32.f32 	%f346, %f345;
	setp.gt.f32 	%p73, %f347, 0f4B000000;
	add.f32 	%f404, %f402, %f403;
	abs.f32 	%f406, %f402;
	or.b32  	%r251, %r250, 1056964608;
	selp.f32 	%f56, %f51, %f54, %p18;
	cvt.rzi.f32.f32 	%f57, %f51;
	setp.lt.f32 	%p19, %f55, 0f3F000000;
	selp.f32 	%f114, %f109, %f112, %p29;
	cvt.rzi.f32.f32 	%f115, %f109;
	setp.lt.f32 	%p30, %f113, 0f3F000000;
	selp.f32 	%f173, %f168, %f171, %p40;
	cvt.rzi.f32.f32 	%f174, %f168;
	setp.lt.f32 	%p41, %f172, 0f3F000000;
	selp.f32 	%f231, %f226, %f229, %p51;
	cvt.rzi.f32.f32 	%f232, %f226;
	setp.lt.f32 	%p52, %f230, 0f3F000000;
	selp.f32 	%f290, %f285, %f288, %p62;
	cvt.rzi.f32.f32 	%f291, %f285;
	setp.lt.f32 	%p63, %f289, 0f3F000000;
	selp.f32 	%f348, %f343, %f346, %p73;
	cvt.rzi.f32.f32 	%f349, %f343;
	setp.lt.f32 	%p74, %f347, 0f3F000000;
	cvt.rzi.f32.f32 	%f405, %f404;
	setp.gt.f32 	%p84, %f406, 0f4B000000;
	mov.b32 	%f461, %r251;
	selp.f32 	%f58, %f57, %f56, %p19;
	selp.f32 	%f116, %f115, %f114, %p30;
	selp.f32 	%f175, %f174, %f173, %p41;
	selp.f32 	%f233, %f232, %f231, %p52;
	selp.f32 	%f292, %f291, %f290, %p63;
	selp.f32 	%f350, %f349, %f348, %p74;
	selp.f32 	%f407, %f402, %f405, %p84;
	cvt.rzi.f32.f32 	%f408, %f402;
	setp.lt.f32 	%p85, %f406, 0f3F000000;
	add.f32 	%f462, %f460, %f461;
	abs.f32 	%f464, %f460;
	fma.rn.f32 	%f59, %f58, 0fBF000000, %f50;
	fma.rn.f32 	%f117, %f116, 0fBF000000, %f108;
	fma.rn.f32 	%f176, %f175, 0fBF000000, %f167;
	fma.rn.f32 	%f234, %f233, 0fBF000000, %f225;
	fma.rn.f32 	%f293, %f292, 0fBF000000, %f284;
	fma.rn.f32 	%f351, %f350, 0fBF000000, %f342;
	selp.f32 	%f409, %f408, %f407, %p85;
	cvt.rzi.f32.f32 	%f463, %f462;
	setp.gt.f32 	%p95, %f464, 0f4B000000;
	mul.f32 	%f60, %f59, %f59;
	mul.f32 	%f118, %f117, %f117;
	mul.f32 	%f177, %f176, %f176;
	mul.f32 	%f235, %f234, %f234;
	mul.f32 	%f294, %f293, %f293;
	mul.f32 	%f352, %f351, %f351;
	fma.rn.f32 	%f410, %f409, 0fBF000000, %f401;
	selp.f32 	%f465, %f460, %f463, %p95;
	cvt.rzi.f32.f32 	%f466, %f460;
	setp.lt.f32 	%p96, %f464, 0f3F000000;
	cvt.rzi.s32.f32 	%r145, %f58;
	fma.rn.f32 	%f61, %f60, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f62, %f60, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r159, %f116;
	fma.rn.f32 	%f119, %f118, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f120, %f118, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r176, %f175;
	fma.rn.f32 	%f178, %f177, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f179, %f177, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r190, %f233;
	fma.rn.f32 	%f236, %f235, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f237, %f235, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r207, %f292;
	fma.rn.f32 	%f295, %f294, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f296, %f294, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r221, %f350;
	fma.rn.f32 	%f353, %f352, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f354, %f352, 0f3E684E12, 0fBFAAD2E0;
	mul.f32 	%f411, %f410, %f410;
	selp.f32 	%f467, %f466, %f465, %p96;
	shl.b32 	%r48, %r4, 1;
	add.s32 	%r146, %r145, 1;
	fma.rn.f32 	%f63, %f61, %f60, 0fC0A55DF6;
	fma.rn.f32 	%f64, %f62, %f60, 0f4081E0CF;
	fma.rn.f32 	%f65, %f60, %f59, 0f00000000;
	add.s32 	%r160, %r159, 1;
	fma.rn.f32 	%f121, %f119, %f118, 0fC0A55DF6;
	fma.rn.f32 	%f122, %f120, %f118, 0f4081E0CF;
	fma.rn.f32 	%f123, %f118, %f117, 0f00000000;
	add.s32 	%r177, %r176, 1;
	fma.rn.f32 	%f180, %f178, %f177, 0fC0A55DF6;
	fma.rn.f32 	%f181, %f179, %f177, 0f4081E0CF;
	fma.rn.f32 	%f182, %f177, %f176, 0f00000000;
	add.s32 	%r191, %r190, 1;
	fma.rn.f32 	%f238, %f236, %f235, 0fC0A55DF6;
	fma.rn.f32 	%f239, %f237, %f235, 0f4081E0CF;
	fma.rn.f32 	%f240, %f235, %f234, 0f00000000;
	add.s32 	%r208, %r207, 1;
	fma.rn.f32 	%f297, %f295, %f294, 0fC0A55DF6;
	fma.rn.f32 	%f298, %f296, %f294, 0f4081E0CF;
	fma.rn.f32 	%f299, %f294, %f293, 0f00000000;
	add.s32 	%r222, %r221, 1;
	fma.rn.f32 	%f355, %f353, %f352, 0fC0A55DF6;
	fma.rn.f32 	%f356, %f354, %f352, 0f4081E0CF;
	fma.rn.f32 	%f357, %f352, %f351, 0f00000000;
	cvt.rzi.s32.f32 	%r238, %f409;
	fma.rn.f32 	%f412, %f411, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f413, %f411, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f468, %f467, 0fBF000000, %f459;
	and.b32  	%r49, %r48, 8;
	shl.b32 	%r50, %r4, 2;
	and.b32  	%r54, %r4, 18;
	fma.rn.f32 	%f66, %f64, %f60, 0fC09DE9E6;
	fma.rn.f32 	%f67, %f63, %f65, 0f00000000;
	and.b32  	%r147, %r146, 1;
	fma.rn.f32 	%f124, %f122, %f118, 0fC09DE9E6;
	fma.rn.f32 	%f125, %f121, %f123, 0f00000000;
	and.b32  	%r161, %r160, 1;
	fma.rn.f32 	%f183, %f181, %f177, 0fC09DE9E6;
	fma.rn.f32 	%f184, %f180, %f182, 0f00000000;
	and.b32  	%r178, %r177, 1;
	fma.rn.f32 	%f241, %f239, %f235, 0fC09DE9E6;
	fma.rn.f32 	%f242, %f238, %f240, 0f00000000;
	and.b32  	%r192, %r191, 1;
	fma.rn.f32 	%f300, %f298, %f294, 0fC09DE9E6;
	fma.rn.f32 	%f301, %f297, %f299, 0f00000000;
	and.b32  	%r209, %r208, 1;
	fma.rn.f32 	%f358, %f356, %f352, 0fC09DE9E6;
	fma.rn.f32 	%f359, %f355, %f357, 0f00000000;
	and.b32  	%r223, %r222, 1;
	add.s32 	%r239, %r238, 1;
	fma.rn.f32 	%f414, %f412, %f411, 0fC0A55DF6;
	fma.rn.f32 	%f415, %f413, %f411, 0f4081E0CF;
	fma.rn.f32 	%f416, %f411, %f410, 0f00000000;
	mul.f32 	%f469, %f468, %f468;
	and.b32  	%r51, %r50, 32;
	or.b32  	%r130, %r54, %r49;
	fma.rn.f32 	%f68, %f66, %f60, 0f3F800000;
	fma.rn.f32 	%f69, %f59, 0f40490FDB, %f67;
	setp.eq.b32 	%p20, %r147, 1;
	fma.rn.f32 	%f126, %f124, %f118, 0f3F800000;
	fma.rn.f32 	%f127, %f117, 0f40490FDB, %f125;
	setp.eq.b32 	%p31, %r161, 1;
	fma.rn.f32 	%f185, %f183, %f177, 0f3F800000;
	fma.rn.f32 	%f186, %f176, 0f40490FDB, %f184;
	setp.eq.b32 	%p42, %r178, 1;
	fma.rn.f32 	%f243, %f241, %f235, 0f3F800000;
	fma.rn.f32 	%f244, %f234, 0f40490FDB, %f242;
	setp.eq.b32 	%p53, %r192, 1;
	fma.rn.f32 	%f302, %f300, %f294, 0f3F800000;
	fma.rn.f32 	%f303, %f293, 0f40490FDB, %f301;
	setp.eq.b32 	%p64, %r209, 1;
	fma.rn.f32 	%f360, %f358, %f352, 0f3F800000;
	fma.rn.f32 	%f361, %f351, 0f40490FDB, %f359;
	setp.eq.b32 	%p75, %r223, 1;
	fma.rn.f32 	%f417, %f415, %f411, 0fC09DE9E6;
	fma.rn.f32 	%f418, %f414, %f416, 0f00000000;
	and.b32  	%r240, %r239, 1;
	cvt.rzi.s32.f32 	%r252, %f467;
	fma.rn.f32 	%f470, %f469, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f471, %f469, 0f3E684E12, 0fBFAAD2E0;
	and.b32  	%r52, %r50, 4;
	shl.b32 	%r129, %r1, 4;
	or.b32  	%r131, %r130, %r51;
	selp.f32 	%f70, %f68, %f69, %p20;
	and.b32  	%r148, %r146, 2;
	selp.f32 	%f128, %f126, %f127, %p31;
	and.b32  	%r162, %r160, 2;
	selp.f32 	%f187, %f185, %f186, %p42;
	and.b32  	%r179, %r177, 2;
	selp.f32 	%f245, %f243, %f244, %p53;
	and.b32  	%r193, %r191, 2;
	selp.f32 	%f304, %f302, %f303, %p64;
	and.b32  	%r210, %r208, 2;
	selp.f32 	%f362, %f360, %f361, %p75;
	and.b32  	%r224, %r222, 2;
	fma.rn.f32 	%f419, %f417, %f411, 0f3F800000;
	fma.rn.f32 	%f420, %f410, 0f40490FDB, %f418;
	setp.eq.b32 	%p86, %r240, 1;
	add.s32 	%r253, %r252, 1;
	fma.rn.f32 	%f472, %f470, %f469, 0fC0A55DF6;
	fma.rn.f32 	%f473, %f471, %f469, 0f4081E0CF;
	fma.rn.f32 	%f474, %f469, %f468, 0f00000000;
	and.b32  	%r53, %r129, 4032;
	or.b32  	%r132, %r131, %r52;
	setp.eq.s32 	%p21, %r148, 0;
	sub.f32 	%f72, %f71, %f70;
	setp.eq.s32 	%p32, %r162, 0;
	sub.f32 	%f130, %f71, %f128;
	setp.eq.s32 	%p43, %r179, 0;
	sub.f32 	%f189, %f71, %f187;
	setp.eq.s32 	%p54, %r193, 0;
	sub.f32 	%f247, %f71, %f245;
	setp.eq.s32 	%p65, %r210, 0;
	sub.f32 	%f306, %f71, %f304;
	setp.eq.s32 	%p76, %r224, 0;
	sub.f32 	%f364, %f71, %f362;
	selp.f32 	%f421, %f419, %f420, %p86;
	and.b32  	%r241, %r239, 2;
	fma.rn.f32 	%f475, %f473, %f469, 0fC09DE9E6;
	fma.rn.f32 	%f476, %f472, %f474, 0f00000000;
	and.b32  	%r254, %r253, 1;
	or.b32  	%r133, %r132, %r53;
	selp.f32 	%f73, %f70, %f72, %p21;
	selp.f32 	%f131, %f128, %f130, %p32;
	selp.f32 	%f190, %f187, %f189, %p43;
	selp.f32 	%f248, %f245, %f247, %p54;
	selp.f32 	%f307, %f304, %f306, %p65;
	selp.f32 	%f365, %f362, %f364, %p76;
	setp.eq.s32 	%p87, %r241, 0;
	sub.f32 	%f423, %f71, %f421;
	fma.rn.f32 	%f477, %f475, %f469, 0f3F800000;
	fma.rn.f32 	%f478, %f468, 0f40490FDB, %f476;
	setp.eq.b32 	%p97, %r254, 1;
	shr.u32 	%r134, %r133, 1;
	mul.f32 	%f43, %f73, %f73;
	mul.f32 	%f5, %f131, %f131;
	mul.f32 	%f10, %f190, %f190;
	mul.f32 	%f16, %f248, %f248;
	mul.f32 	%f21, %f307, %f307;
	mul.f32 	%f27, %f365, %f365;
	selp.f32 	%f424, %f421, %f423, %p87;
	selp.f32 	%f479, %f477, %f478, %p97;
	and.b32  	%r255, %r253, 2;
	ld.param.u64 	%rd1, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_7];
	mul.wide.u32 	%rd43, %r134, 4;
	mul.f32 	%f102, %f713, %f43;
	mov.f32 	%f103, 0f42800000;
	mul.f32 	%f160, %f714, %f5;
	mul.f32 	%f219, %f715, %f10;
	mul.f32 	%f277, %f716, %f16;
	mul.f32 	%f336, %f717, %f21;
	mul.f32 	%f394, %f718, %f27;
	mul.f32 	%f32, %f424, %f424;
	setp.eq.s32 	%p98, %r255, 0;
	sub.f32 	%f481, %f71, %f479;
	add.s64 	%rd44, %rd1, %rd43;
	div.approx.f32 	%f3, %f102, %f103;
	div.approx.f32 	%f162, %f160, %f103;
	div.approx.f32 	%f14, %f219, %f103;
	div.approx.f32 	%f279, %f277, %f103;
	div.approx.f32 	%f25, %f336, %f103;
	div.approx.f32 	%f396, %f394, %f103;
	mul.f32 	%f453, %f719, %f32;
	selp.f32 	%f482, %f479, %f481, %p98;
	ld.param.u64 	%rd2, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_8];
	ld.param.u64 	%rd3, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_9];
	and.b32  	%r47, %r4, 16;
	ld.global.u32 	%r55, [%rd44];
	shr.u32 	%r56, %r4, 1;
	shr.u32 	%r60, %r4, 3;
	mov.b32 	%r171, %f162;
	mov.b32 	%r170, %f3;
	mov.b32 	%r202, %f279;
	mov.b32 	%r201, %f14;
	mov.b32 	%r233, %f396;
	mov.b32 	%r232, %f25;
	div.approx.f32 	%f36, %f453, %f103;
	mul.f32 	%f38, %f482, %f482;
	// begin inline asm
	cvt.rn.f16x2.f32 %r169, %r171, %r170;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r200, %r202, %r201;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r231, %r233, %r232;
	// end inline asm
	mul.f32 	%f510, %f720, %f38;
	div.approx.f32 	%f512, %f510, %f103;
	mov.b32 	%r264, %f512;
	mov.b32 	%r263, %f36;
	// begin inline asm
	cvt.rn.f16x2.f32 %r262, %r264, %r263;
	// end inline asm
	mul.lo.s32 	%r301, %r61, 63;
	and.b32  	%r302, %r301, 127;
	cvt.rn.f32.s32 	%f513, %r302;
	div.approx.f32 	%f514, %f513, %f103;
	add.f32 	%f515, %f514, %f514;
	mov.b32 	%r303, %f515;
	and.b32  	%r304, %r303, -2147483648;
	or.b32  	%r305, %r304, 1056964608;
	mov.b32 	%f516, %r305;
	add.f32 	%f517, %f515, %f516;
	cvt.rzi.f32.f32 	%f518, %f517;
	abs.f32 	%f519, %f515;
	setp.gt.f32 	%p105, %f519, 0f4B000000;
	selp.f32 	%f520, %f515, %f518, %p105;
	cvt.rzi.f32.f32 	%f521, %f515;
	setp.lt.f32 	%p106, %f519, 0f3F000000;
	selp.f32 	%f522, %f521, %f520, %p106;
	cvt.rzi.s32.f32 	%r306, %f522;
	fma.rn.f32 	%f523, %f522, 0fBF000000, %f514;
	mul.f32 	%f524, %f523, %f523;
	fma.rn.f32 	%f525, %f524, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f526, %f524, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f527, %f525, %f524, 0fC0A55DF6;
	fma.rn.f32 	%f528, %f526, %f524, 0f4081E0CF;
	fma.rn.f32 	%f529, %f524, %f523, 0f00000000;
	fma.rn.f32 	%f530, %f528, %f524, 0fC09DE9E6;
	fma.rn.f32 	%f531, %f527, %f529, 0f00000000;
	fma.rn.f32 	%f532, %f530, %f524, 0f3F800000;
	fma.rn.f32 	%f533, %f523, 0f40490FDB, %f531;
	and.b32  	%r307, %r306, 1;
	setp.eq.b32 	%p107, %r307, 1;
	selp.f32 	%f534, %f532, %f533, %p107;
	selp.f32 	%f535, %f533, %f532, %p107;
	and.b32  	%r308, %r306, 2;
	setp.eq.s32 	%p108, %r308, 0;
	neg.f32 	%f536, %f534;
	selp.f32 	%f537, %f534, %f536, %p108;
	add.s32 	%r309, %r306, 1;
	and.b32  	%r310, %r309, 2;
	setp.eq.s32 	%p109, %r310, 0;
	sub.f32 	%f539, %f71, %f535;
	selp.f32 	%f540, %f535, %f539, %p109;
	cvt.rzi.f32.f32 	%f541, %f514;
	setp.eq.f32 	%p110, %f541, %f514;
	mul.f32 	%f542, %f514, 0f00000000;
	selp.f32 	%f543, %f542, %f537, %p110;
	abs.f32 	%f544, %f514;
	setp.gt.f32 	%p111, %f544, 0f4B800000;
	add.f32 	%f545, %f543, 0f3F800000;
	selp.f32 	%f546, %f545, %f540, %p111;
	add.s32 	%r311, %r301, 96;
	and.b32  	%r312, %r311, 127;
	cvt.rn.f32.s32 	%f547, %r312;
	div.approx.f32 	%f548, %f547, %f103;
	add.f32 	%f549, %f548, %f548;
	mov.b32 	%r313, %f549;
	and.b32  	%r314, %r313, -2147483648;
	or.b32  	%r315, %r314, 1056964608;
	mov.b32 	%f550, %r315;
	add.f32 	%f551, %f549, %f550;
	cvt.rzi.f32.f32 	%f552, %f551;
	abs.f32 	%f553, %f549;
	setp.gt.f32 	%p112, %f553, 0f4B000000;
	selp.f32 	%f554, %f549, %f552, %p112;
	cvt.rzi.f32.f32 	%f555, %f549;
	setp.lt.f32 	%p113, %f553, 0f3F000000;
	selp.f32 	%f556, %f555, %f554, %p113;
	cvt.rzi.s32.f32 	%r316, %f556;
	fma.rn.f32 	%f557, %f556, 0fBF000000, %f548;
	mul.f32 	%f558, %f557, %f557;
	fma.rn.f32 	%f559, %f558, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f560, %f558, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f561, %f559, %f558, 0fC0A55DF6;
	fma.rn.f32 	%f562, %f560, %f558, 0f4081E0CF;
	fma.rn.f32 	%f563, %f558, %f557, 0f00000000;
	fma.rn.f32 	%f564, %f562, %f558, 0fC09DE9E6;
	fma.rn.f32 	%f565, %f561, %f563, 0f00000000;
	fma.rn.f32 	%f566, %f564, %f558, 0f3F800000;
	fma.rn.f32 	%f567, %f557, 0f40490FDB, %f565;
	and.b32  	%r317, %r316, 1;
	setp.eq.b32 	%p114, %r317, 1;
	selp.f32 	%f568, %f566, %f567, %p114;
	selp.f32 	%f569, %f567, %f566, %p114;
	and.b32  	%r318, %r316, 2;
	setp.eq.s32 	%p115, %r318, 0;
	neg.f32 	%f570, %f568;
	selp.f32 	%f571, %f568, %f570, %p115;
	add.s32 	%r319, %r316, 1;
	and.b32  	%r320, %r319, 2;
	setp.eq.s32 	%p116, %r320, 0;
	sub.f32 	%f572, %f71, %f569;
	selp.f32 	%f573, %f569, %f572, %p116;
	cvt.rzi.f32.f32 	%f574, %f548;
	setp.eq.f32 	%p117, %f574, %f548;
	mul.f32 	%f575, %f548, 0f00000000;
	selp.f32 	%f576, %f575, %f571, %p117;
	abs.f32 	%f577, %f548;
	setp.gt.f32 	%p118, %f577, 0f4B800000;
	add.f32 	%f578, %f576, 0f3F800000;
	selp.f32 	%f579, %f578, %f573, %p118;
	mov.b32 	%r266, %f546;
	mov.b32 	%r267, %f579;
	// begin inline asm
	cvt.rn.f16x2.f32 %r265, %r267, %r266;
	// end inline asm
	mov.b32 	%r269, %f543;
	mov.b32 	%r270, %f576;
	// begin inline asm
	cvt.rn.f16x2.f32 %r268, %r270, %r269;
	// end inline asm
	and.b32  	%r321, %r60, 2;
	and.b32  	%r322, %r56, 4;
	or.b32  	%r323, %r57, %r321;
	or.b32  	%r324, %r323, %r322;
	and.b32  	%r325, %r48, 6;
	mul.lo.s32 	%r326, %r324, %r325;
	and.b32  	%r327, %r326, 14;
	cvt.rn.f32.s32 	%f580, %r327;
	mov.f32 	%f581, 0f41000000;
	div.approx.f32 	%f582, %f580, %f581;
	add.f32 	%f583, %f582, %f582;
	mov.b32 	%r328, %f583;
	and.b32  	%r329, %r328, -2147483648;
	or.b32  	%r330, %r329, 1056964608;
	mov.b32 	%f584, %r330;
	add.f32 	%f585, %f583, %f584;
	cvt.rzi.f32.f32 	%f586, %f585;
	abs.f32 	%f587, %f583;
	setp.gt.f32 	%p119, %f587, 0f4B000000;
	selp.f32 	%f588, %f583, %f586, %p119;
	cvt.rzi.f32.f32 	%f589, %f583;
	setp.lt.f32 	%p120, %f587, 0f3F000000;
	selp.f32 	%f590, %f589, %f588, %p120;
	cvt.rzi.s32.f32 	%r331, %f590;
	fma.rn.f32 	%f591, %f590, 0fBF000000, %f582;
	mul.f32 	%f592, %f591, %f591;
	fma.rn.f32 	%f593, %f592, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f594, %f592, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f595, %f593, %f592, 0fC0A55DF6;
	fma.rn.f32 	%f596, %f594, %f592, 0f4081E0CF;
	fma.rn.f32 	%f597, %f592, %f591, 0f00000000;
	fma.rn.f32 	%f598, %f596, %f592, 0fC09DE9E6;
	fma.rn.f32 	%f599, %f595, %f597, 0f00000000;
	fma.rn.f32 	%f600, %f598, %f592, 0f3F800000;
	fma.rn.f32 	%f601, %f591, 0f40490FDB, %f599;
	and.b32  	%r332, %r331, 1;
	setp.eq.b32 	%p121, %r332, 1;
	selp.f32 	%f602, %f600, %f601, %p121;
	selp.f32 	%f603, %f601, %f600, %p121;
	and.b32  	%r333, %r331, 2;
	setp.eq.s32 	%p122, %r333, 0;
	neg.f32 	%f604, %f602;
	selp.f32 	%f605, %f602, %f604, %p122;
	add.s32 	%r334, %r331, 1;
	and.b32  	%r335, %r334, 2;
	setp.eq.s32 	%p123, %r335, 0;
	sub.f32 	%f606, %f71, %f603;
	selp.f32 	%f607, %f603, %f606, %p123;
	cvt.rzi.f32.f32 	%f608, %f582;
	setp.eq.f32 	%p124, %f608, %f582;
	mul.f32 	%f609, %f582, 0f00000000;
	selp.f32 	%f610, %f609, %f605, %p124;
	abs.f32 	%f611, %f582;
	setp.gt.f32 	%p125, %f611, 0f4B800000;
	add.f32 	%f612, %f610, 0f3F800000;
	selp.f32 	%f613, %f612, %f607, %p125;
	or.b32  	%r336, %r48, 8;
	mul.lo.s32 	%r337, %r324, %r336;
	and.b32  	%r338, %r337, 14;
	cvt.rn.f32.s32 	%f614, %r338;
	div.approx.f32 	%f615, %f614, %f581;
	add.f32 	%f616, %f615, %f615;
	mov.b32 	%r339, %f616;
	and.b32  	%r340, %r339, -2147483648;
	or.b32  	%r341, %r340, 1056964608;
	mov.b32 	%f617, %r341;
	add.f32 	%f618, %f616, %f617;
	cvt.rzi.f32.f32 	%f619, %f618;
	abs.f32 	%f620, %f616;
	setp.gt.f32 	%p126, %f620, 0f4B000000;
	selp.f32 	%f621, %f616, %f619, %p126;
	cvt.rzi.f32.f32 	%f622, %f616;
	setp.lt.f32 	%p127, %f620, 0f3F000000;
	selp.f32 	%f623, %f622, %f621, %p127;
	cvt.rzi.s32.f32 	%r342, %f623;
	fma.rn.f32 	%f624, %f623, 0fBF000000, %f615;
	mul.f32 	%f625, %f624, %f624;
	fma.rn.f32 	%f626, %f625, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f627, %f625, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f628, %f626, %f625, 0fC0A55DF6;
	fma.rn.f32 	%f629, %f627, %f625, 0f4081E0CF;
	fma.rn.f32 	%f630, %f625, %f624, 0f00000000;
	fma.rn.f32 	%f631, %f629, %f625, 0fC09DE9E6;
	fma.rn.f32 	%f632, %f628, %f630, 0f00000000;
	fma.rn.f32 	%f633, %f631, %f625, 0f3F800000;
	fma.rn.f32 	%f634, %f624, 0f40490FDB, %f632;
	and.b32  	%r343, %r342, 1;
	setp.eq.b32 	%p128, %r343, 1;
	selp.f32 	%f635, %f633, %f634, %p128;
	selp.f32 	%f636, %f634, %f633, %p128;
	and.b32  	%r344, %r342, 2;
	setp.eq.s32 	%p129, %r344, 0;
	neg.f32 	%f637, %f635;
	selp.f32 	%f638, %f635, %f637, %p129;
	add.s32 	%r345, %r342, 1;
	and.b32  	%r346, %r345, 2;
	setp.eq.s32 	%p130, %r346, 0;
	sub.f32 	%f639, %f71, %f636;
	selp.f32 	%f640, %f636, %f639, %p130;
	cvt.rzi.f32.f32 	%f641, %f615;
	setp.eq.f32 	%p131, %f641, %f615;
	mul.f32 	%f642, %f615, 0f00000000;
	selp.f32 	%f643, %f642, %f638, %p131;
	abs.f32 	%f644, %f615;
	setp.gt.f32 	%p132, %f644, 0f4B800000;
	add.f32 	%f645, %f643, 0f3F800000;
	selp.f32 	%f646, %f645, %f640, %p132;
	mov.b32 	%r272, %f613;
	mov.b32 	%r273, %f646;
	// begin inline asm
	cvt.rn.f16x2.f32 %r271, %r273, %r272;
	// end inline asm
	mov.b32 	%r275, %f610;
	mov.b32 	%r276, %f643;
	// begin inline asm
	cvt.rn.f16x2.f32 %r274, %r276, %r275;
	// end inline asm
	xor.b32  	%r296, %r275, -2147483648;
	xor.b32  	%r297, %r276, -2147483648;
	// begin inline asm
	cvt.rn.f16x2.f32 %r277, %r297, %r296;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r280, %r273, %r272;
	// end inline asm
	cvt.rn.f32.s32 	%f647, %r326;
	div.approx.f32 	%f648, %f647, %f103;
	add.f32 	%f649, %f648, %f648;
	mov.b32 	%r347, %f649;
	and.b32  	%r348, %r347, -2147483648;
	or.b32  	%r349, %r348, 1056964608;
	mov.b32 	%f650, %r349;
	add.f32 	%f651, %f649, %f650;
	cvt.rzi.f32.f32 	%f652, %f651;
	abs.f32 	%f653, %f649;
	setp.gt.f32 	%p133, %f653, 0f4B000000;
	selp.f32 	%f654, %f649, %f652, %p133;
	cvt.rzi.f32.f32 	%f655, %f649;
	setp.lt.f32 	%p134, %f653, 0f3F000000;
	selp.f32 	%f656, %f655, %f654, %p134;
	cvt.rzi.s32.f32 	%r350, %f656;
	fma.rn.f32 	%f657, %f656, 0fBF000000, %f648;
	mul.f32 	%f658, %f657, %f657;
	fma.rn.f32 	%f659, %f658, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f660, %f658, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f661, %f659, %f658, 0fC0A55DF6;
	fma.rn.f32 	%f662, %f660, %f658, 0f4081E0CF;
	fma.rn.f32 	%f663, %f658, %f657, 0f00000000;
	fma.rn.f32 	%f664, %f662, %f658, 0fC09DE9E6;
	fma.rn.f32 	%f665, %f661, %f663, 0f00000000;
	fma.rn.f32 	%f666, %f664, %f658, 0f3F800000;
	fma.rn.f32 	%f667, %f657, 0f40490FDB, %f665;
	and.b32  	%r351, %r350, 1;
	setp.eq.b32 	%p135, %r351, 1;
	selp.f32 	%f668, %f666, %f667, %p135;
	selp.f32 	%f669, %f667, %f666, %p135;
	and.b32  	%r352, %r350, 2;
	setp.eq.s32 	%p136, %r352, 0;
	neg.f32 	%f670, %f668;
	selp.f32 	%f671, %f668, %f670, %p136;
	add.s32 	%r353, %r350, 1;
	and.b32  	%r354, %r353, 2;
	setp.eq.s32 	%p137, %r354, 0;
	sub.f32 	%f672, %f71, %f669;
	selp.f32 	%f673, %f669, %f672, %p137;
	cvt.rzi.f32.f32 	%f674, %f648;
	setp.eq.f32 	%p138, %f674, %f648;
	mul.f32 	%f675, %f648, 0f00000000;
	selp.f32 	%f676, %f675, %f671, %p138;
	mov.b32 	%r355, %f676;
	abs.f32 	%f677, %f648;
	setp.gt.f32 	%p139, %f677, 0f4B800000;
	add.f32 	%f678, %f676, 0f3F800000;
	selp.f32 	%f679, %f678, %f673, %p139;
	shl.b32 	%r356, %r324, 3;
	add.s32 	%r357, %r326, %r356;
	cvt.rn.f32.s32 	%f680, %r357;
	div.approx.f32 	%f681, %f680, %f103;
	add.f32 	%f682, %f681, %f681;
	mov.b32 	%r358, %f682;
	and.b32  	%r359, %r358, -2147483648;
	or.b32  	%r360, %r359, 1056964608;
	mov.b32 	%f683, %r360;
	add.f32 	%f684, %f682, %f683;
	cvt.rzi.f32.f32 	%f685, %f684;
	abs.f32 	%f686, %f682;
	setp.gt.f32 	%p140, %f686, 0f4B000000;
	selp.f32 	%f687, %f682, %f685, %p140;
	cvt.rzi.f32.f32 	%f688, %f682;
	setp.lt.f32 	%p141, %f686, 0f3F000000;
	selp.f32 	%f689, %f688, %f687, %p141;
	cvt.rzi.s32.f32 	%r361, %f689;
	fma.rn.f32 	%f690, %f689, 0fBF000000, %f681;
	mul.f32 	%f691, %f690, %f690;
	fma.rn.f32 	%f692, %f691, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f693, %f691, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f694, %f692, %f691, 0fC0A55DF6;
	fma.rn.f32 	%f695, %f693, %f691, 0f4081E0CF;
	fma.rn.f32 	%f696, %f691, %f690, 0f00000000;
	fma.rn.f32 	%f697, %f695, %f691, 0fC09DE9E6;
	fma.rn.f32 	%f698, %f694, %f696, 0f00000000;
	fma.rn.f32 	%f699, %f697, %f691, 0f3F800000;
	fma.rn.f32 	%f700, %f690, 0f40490FDB, %f698;
	and.b32  	%r362, %r361, 1;
	setp.eq.b32 	%p142, %r362, 1;
	selp.f32 	%f701, %f699, %f700, %p142;
	selp.f32 	%f702, %f700, %f699, %p142;
	and.b32  	%r363, %r361, 2;
	setp.eq.s32 	%p143, %r363, 0;
	neg.f32 	%f703, %f701;
	selp.f32 	%f704, %f701, %f703, %p143;
	add.s32 	%r364, %r361, 1;
	and.b32  	%r365, %r364, 2;
	setp.eq.s32 	%p144, %r365, 0;
	sub.f32 	%f705, %f71, %f702;
	selp.f32 	%f706, %f702, %f705, %p144;
	cvt.rzi.f32.f32 	%f707, %f681;
	setp.eq.f32 	%p145, %f707, %f681;
	mul.f32 	%f708, %f681, 0f00000000;
	selp.f32 	%f709, %f708, %f704, %p145;
	mov.b32 	%r366, %f709;
	abs.f32 	%f710, %f681;
	setp.gt.f32 	%p146, %f710, 0f4B800000;
	add.f32 	%f711, %f709, 0f3F800000;
	selp.f32 	%f712, %f711, %f706, %p146;
	mov.b32 	%r285, %f712;
	mov.b32 	%r284, %f679;
	// begin inline asm
	cvt.rn.f16x2.f32 %r283, %r285, %r284;
	// end inline asm
	xor.b32  	%r288, %r366, -2147483648;
	xor.b32  	%r287, %r355, -2147483648;
	// begin inline asm
	cvt.rn.f16x2.f32 %r286, %r288, %r287;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r289, %r273, %r272;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r292, %r276, %r275;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r295, %r297, %r296;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r298, %r273, %r272;
	// end inline asm
	shl.b32 	%r368, %r113, 13;
	shl.b32 	%r369, %r117, 7;
	or.b32  	%r21, %r47, %r2;
	shl.b32 	%r370, %r1, 5;
	and.b32  	%r371, %r370, 64;
	and.b32  	%r372, %r50, 28;
	and.b32  	%r373, %r370, 32;
	or.b32  	%r374, %r373, %r372;
	and.b32  	%r375, %r370, 8128;
	or.b32  	%r376, %r375, %r368;
	or.b32  	%r377, %r376, %r374;
	add.s32 	%r22, %r377, %r369;
	and.b32  	%r23, %r4, 8;
	shl.b32 	%r378, %r4, 4;
	or.b32  	%r379, %r23, %r378;
	shr.u32 	%r380, %r379, 2;
	and.b32  	%r381, %r380, 30;
	or.b32  	%r24, %r60, %r137;
	and.b32  	%r25, %r4, 4;
	shr.u32 	%r26, %r2, 1;
	and.b32  	%r27, %r3, 32;
	or.b32  	%r383, %r27, %r26;
	or.b32  	%r28, %r383, 8;
	or.b32  	%r29, %r383, 16;
	or.b32  	%r30, %r383, 24;
	or.b32  	%r384, %r54, %r52;
	or.b32  	%r385, %r384, %r51;
	or.b32  	%r386, %r385, %r49;
	shr.u32 	%r387, %r386, 1;
	mul.lo.s32 	%r388, %r387, 65;
	add.s32 	%r389, %r383, %r388;
	add.s32 	%r390, %r28, %r388;
	add.s32 	%r391, %r29, %r388;
	add.s32 	%r392, %r30, %r388;
	shl.b32 	%r393, %r2, 1;
	or.b32  	%r394, %r393, %r58;
	mul.lo.s32 	%r395, %r394, 65;
	add.s32 	%r396, %r381, %r395;
	mul.wide.u32 	%rd45, %r396, 4;
	mov.u64 	%rd46, shmem;
	add.s64 	%rd5, %rd46, %rd45;
	cvt.u64.u32 	%rd47, %r381;
	cvt.u64.u32 	%rd48, %r395;
	add.s64 	%rd49, %rd48, %rd47;
	shl.b64 	%rd50, %rd49, 2;
	add.s64 	%rd6, %rd46, %rd50;
	shl.b32 	%r397, %r115, 19;
	add.s32 	%r398, %r397, -1572864;
	shl.b32 	%r399, %r2, 2;
	or.b32  	%r400, %r399, %r60;
	or.b32  	%r401, %r400, %r53;
	shl.b32 	%r402, %r401, 7;
	or.b32  	%r403, %r374, %r371;
	or.b32  	%r31, %r403, %r402;
	cvt.s64.s32 	%rd7, %r398;
	bfe.s32 	%r404, %r2, 1, 1;
	and.b32  	%r405, %r2, 2;
	setp.eq.s32 	%p148, %r405, 0;
	and.b32  	%r406, %r404, 520;
	and.b32  	%r407, %r2, 1;
	neg.s32 	%r408, %r407;
	setp.eq.b32 	%p149, %r407, 1;
	and.b32  	%r409, %r408, 1040;
	shr.u32 	%r410, %r2, 3;
	mul.lo.s32 	%r411, %r410, 130;
	mul.lo.s32 	%r412, %r58, 65;
	bfe.s32 	%r413, %r2, 2, 1;
	and.b32  	%r414, %r2, 4;
	setp.eq.s32 	%p150, %r414, 0;
	and.b32  	%r415, %r413, 260;
	add.s32 	%r416, %r409, %r381;
	add.s32 	%r417, %r416, %r406;
	add.s32 	%r418, %r417, %r411;
	add.s32 	%r419, %r418, %r412;
	add.s32 	%r420, %r419, %r415;
	mul.wide.u32 	%rd51, %r420, 4;
	add.s64 	%rd8, %rd46, %rd51;
	selp.b64 	%rd52, 0, 260, %p150;
	cvt.u64.u32 	%rd53, %r412;
	cvt.u64.u32 	%rd54, %r411;
	selp.b64 	%rd55, 0, 520, %p148;
	selp.b64 	%rd56, 1040, 0, %p149;
	add.s64 	%rd57, %rd47, %rd56;
	add.s64 	%rd58, %rd57, %rd55;
	add.s64 	%rd59, %rd58, %rd54;
	add.s64 	%rd60, %rd59, %rd53;
	add.s64 	%rd61, %rd60, %rd52;
	shl.b64 	%rd62, %rd61, 2;
	add.s64 	%rd9, %rd46, %rd62;
	add.s32 	%r421, %r420, 2113;
	mul.wide.u32 	%rd63, %r421, 4;
	add.s64 	%rd10, %rd46, %rd63;
	add.s32 	%r422, %r420, 2082;
	mul.wide.u32 	%rd64, %r422, 4;
	add.s64 	%rd11, %rd46, %rd64;
	add.s32 	%r423, %r420, 2114;
	mul.wide.u32 	%rd65, %r423, 4;
	add.s64 	%rd12, %rd46, %rd65;
	add.s32 	%r424, %r420, 4194;
	mul.wide.u32 	%rd66, %r424, 4;
	add.s64 	%rd13, %rd46, %rd66;
	add.s32 	%r425, %r420, 4163;
	mul.wide.u32 	%rd67, %r425, 4;
	add.s64 	%rd14, %rd46, %rd67;
	add.s32 	%r426, %r420, 4195;
	mul.wide.u32 	%rd68, %r426, 4;
	add.s64 	%rd15, %rd46, %rd68;
	add.s32 	%r427, %r420, 6275;
	mul.wide.u32 	%rd69, %r427, 4;
	add.s64 	%rd16, %rd46, %rd69;
	add.s32 	%r428, %r420, 6244;
	mul.wide.u32 	%rd70, %r428, 4;
	add.s64 	%rd17, %rd46, %rd70;
	add.s32 	%r429, %r420, 6276;
	mul.wide.u32 	%rd71, %r429, 4;
	add.s64 	%rd18, %rd46, %rd71;
	mul.wide.u32 	%rd72, %r392, 4;
	add.s64 	%rd19, %rd46, %rd72;
	mul.wide.u32 	%rd73, %r391, 4;
	add.s64 	%rd20, %rd46, %rd73;
	mul.wide.u32 	%rd74, %r390, 4;
	add.s64 	%rd21, %rd46, %rd74;
	mul.wide.u32 	%rd75, %r389, 4;
	add.s64 	%rd22, %rd46, %rd75;
	mov.u16 	%rs1176, 25600;
	mov.u16 	%rs1072, 21504;
	mov.u16 	%rs1184, 18432;
	mov.u16 	%rs1142, -14592;
	mov.u32 	%r7942, %r7914;
	mov.u32 	%r7941, %r7914;
	mov.u32 	%r7940, %r7914;
	mov.u32 	%r7939, %r7914;
	mov.u32 	%r7938, %r7914;
	mov.u32 	%r7937, %r7914;
	mov.u32 	%r7936, %r7914;
	mov.u32 	%r7935, %r7914;
	mov.u32 	%r7934, %r7914;
	mov.u32 	%r7933, %r7914;
	mov.u32 	%r7932, %r7914;
	mov.u32 	%r7931, %r7914;
	mov.u32 	%r44, %r7914;
	bra.uni 	$L__BB0_29;
$L__BB0_37:                             // %pass16978
                                        //   in Loop: Header=BB0_29 Depth=1
	or.b32  	%r7908, %r7915, %r31;
	or.b32  	%r7909, %r7908, 1572864;
	cvt.s64.s32 	%rd129, %r7909;
	add.s64 	%rd130, %rd129, %rd7;
	shr.u64 	%rd131, %rd130, 36;
	add.s64 	%rd132, %rd130, %rd131;
	shr.s64 	%rd133, %rd132, 28;
	setp.lt.s64 	%p179, %rd130, 0;
	and.b64  	%rd134, %rd132, -268435456;
	setp.ne.s64 	%p180, %rd134, %rd130;
	and.pred  	%p181, %p179, %p180;
	selp.u64 	%rd135, 1, 0, %p181;
	sub.s64 	%rd136, %rd135, %rd133;
	shl.b64 	%rd137, %rd136, 28;
	add.s64 	%rd138, %rd137, %rd130;
	shl.b64 	%rd139, %rd138, 2;
	add.s64 	%rd140, %rd3, %rd139;
	st.global.v4.u32 	[%rd140], {%r108, %r110, %r109, %r111};
	setp.ne.s32 	%p182, %r44, 32512;
	add.s32 	%r44, %r44, 256;
	add.s32 	%r7910, %r44, %r113;
	setp.lt.s32 	%p183, %r7910, %r114;
	and.pred  	%p184, %p182, %p183;
	@%p184 bra 	$L__BB0_29;
	bra.uni 	$L__BB0_38;
$L__BB0_29:                             // %L1438
                                        // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_30 Depth 2
	setp.eq.s32 	%p151, %r23, 0;
	or.b32  	%r495, %r44, %r50;
	and.b32  	%r496, %r495, 32544;
	or.b32  	%r497, %r21, %r496;
	shl.b32 	%r498, %r497, 13;
	add.s32 	%r499, %r22, %r498;
	shr.s32 	%r500, %r499, 31;
	shr.u32 	%r501, %r500, 4;
	add.s32 	%r502, %r499, %r501;
	shr.s32 	%r503, %r502, 28;
	setp.lt.s32 	%p152, %r499, 0;
	and.b32  	%r504, %r502, -268435456;
	setp.ne.s32 	%p153, %r504, %r499;
	and.pred  	%p154, %p152, %p153;
	selp.u32 	%r505, 1, 0, %p154;
	sub.s32 	%r506, %r505, %r503;
	shl.b32 	%r507, %r506, 28;
	add.s32 	%r508, %r507, %r499;
	mul.wide.s32 	%rd76, %r508, 4;
	add.s64 	%rd77, %rd2, %rd76;
	ld.global.v4.u32 	{%r509, %r510, %r511, %r512}, [%rd77];
	or.b32  	%r513, %r498, 524288;
	add.s32 	%r514, %r22, %r513;
	shr.s32 	%r515, %r514, 31;
	shr.u32 	%r516, %r515, 4;
	add.s32 	%r517, %r514, %r516;
	shr.s32 	%r518, %r517, 28;
	setp.lt.s32 	%p155, %r514, 0;
	and.b32  	%r519, %r517, -268435456;
	setp.ne.s32 	%p156, %r519, %r514;
	and.pred  	%p157, %p155, %p156;
	selp.u32 	%r520, 1, 0, %p157;
	sub.s32 	%r521, %r520, %r518;
	shl.b32 	%r522, %r521, 28;
	add.s32 	%r523, %r522, %r514;
	mul.wide.s32 	%rd78, %r523, 4;
	add.s64 	%rd79, %rd2, %rd78;
	ld.global.v4.u32 	{%r524, %r525, %r526, %r527}, [%rd79];
	or.b32  	%r528, %r498, 1048576;
	add.s32 	%r529, %r22, %r528;
	shr.s32 	%r530, %r529, 31;
	shr.u32 	%r531, %r530, 4;
	add.s32 	%r532, %r529, %r531;
	shr.s32 	%r533, %r532, 28;
	setp.lt.s32 	%p158, %r529, 0;
	and.b32  	%r534, %r532, -268435456;
	setp.ne.s32 	%p159, %r534, %r529;
	and.pred  	%p160, %p158, %p159;
	selp.u32 	%r535, 1, 0, %p160;
	sub.s32 	%r536, %r535, %r533;
	shl.b32 	%r537, %r536, 28;
	add.s32 	%r538, %r537, %r529;
	mul.wide.s32 	%rd80, %r538, 4;
	add.s64 	%rd81, %rd2, %rd80;
	ld.global.v4.u32 	{%r539, %r540, %r541, %r542}, [%rd81];
	or.b32  	%r543, %r498, 1572864;
	add.s32 	%r544, %r22, %r543;
	shr.s32 	%r545, %r544, 31;
	shr.u32 	%r546, %r545, 4;
	add.s32 	%r547, %r544, %r546;
	shr.s32 	%r548, %r547, 28;
	setp.lt.s32 	%p161, %r544, 0;
	and.b32  	%r549, %r547, -268435456;
	setp.ne.s32 	%p162, %r549, %r544;
	and.pred  	%p163, %p161, %p162;
	selp.u32 	%r550, 1, 0, %p163;
	sub.s32 	%r551, %r550, %r548;
	shl.b32 	%r552, %r551, 28;
	add.s32 	%r553, %r552, %r544;
	mul.wide.s32 	%rd82, %r553, 4;
	add.s64 	%rd83, %rd2, %rd82;
	ld.global.v4.u32 	{%r554, %r555, %r556, %r557}, [%rd83];
	selp.b32 	%r558, %r511, %r509, %p151;
	shfl.sync.bfly.b32	%r559, %r558, 8, 31, -1;
	selp.b32 	%r431, %r509, %r559, %p151;
	selp.b32 	%r432, %r559, %r511, %p151;
	selp.b32 	%r560, %r512, %r510, %p151;
	shfl.sync.bfly.b32	%r561, %r560, 8, 31, -1;
	selp.b32 	%r439, %r510, %r561, %p151;
	selp.b32 	%r440, %r561, %r512, %p151;
	selp.b32 	%r562, %r526, %r524, %p151;
	shfl.sync.bfly.b32	%r563, %r562, 8, 31, -1;
	selp.b32 	%r447, %r524, %r563, %p151;
	selp.b32 	%r448, %r563, %r526, %p151;
	selp.b32 	%r564, %r527, %r525, %p151;
	shfl.sync.bfly.b32	%r565, %r564, 8, 31, -1;
	selp.b32 	%r455, %r525, %r565, %p151;
	selp.b32 	%r456, %r565, %r527, %p151;
	selp.b32 	%r566, %r541, %r539, %p151;
	shfl.sync.bfly.b32	%r567, %r566, 8, 31, -1;
	selp.b32 	%r463, %r539, %r567, %p151;
	selp.b32 	%r464, %r567, %r541, %p151;
	selp.b32 	%r568, %r542, %r540, %p151;
	shfl.sync.bfly.b32	%r569, %r568, 8, 31, -1;
	selp.b32 	%r471, %r540, %r569, %p151;
	selp.b32 	%r472, %r569, %r542, %p151;
	selp.b32 	%r570, %r556, %r554, %p151;
	shfl.sync.bfly.b32	%r571, %r570, 8, 31, -1;
	selp.b32 	%r479, %r554, %r571, %p151;
	selp.b32 	%r480, %r571, %r556, %p151;
	selp.b32 	%r572, %r557, %r555, %p151;
	shfl.sync.bfly.b32	%r573, %r572, 8, 31, -1;
	selp.b32 	%r487, %r555, %r573, %p151;
	selp.b32 	%r488, %r573, %r557, %p151;
	mov.u32 	%r489, 21520;
	// begin inline asm
	prmt.b32 %r430, %r431, %r432, %r489;
	// end inline asm
	mov.u32 	%r493, 30258;
	// begin inline asm
	prmt.b32 %r434, %r431, %r432, %r493;
	// end inline asm
	// begin inline asm
	prmt.b32 %r438, %r439, %r440, %r489;
	// end inline asm
	// begin inline asm
	prmt.b32 %r442, %r439, %r440, %r493;
	// end inline asm
	// begin inline asm
	prmt.b32 %r446, %r447, %r448, %r489;
	// end inline asm
	// begin inline asm
	prmt.b32 %r450, %r447, %r448, %r493;
	// end inline asm
	// begin inline asm
	prmt.b32 %r454, %r455, %r456, %r489;
	// end inline asm
	// begin inline asm
	prmt.b32 %r458, %r455, %r456, %r493;
	// end inline asm
	// begin inline asm
	prmt.b32 %r462, %r463, %r464, %r489;
	// end inline asm
	// begin inline asm
	prmt.b32 %r466, %r463, %r464, %r493;
	// end inline asm
	// begin inline asm
	prmt.b32 %r470, %r471, %r472, %r489;
	// end inline asm
	// begin inline asm
	prmt.b32 %r474, %r471, %r472, %r493;
	// end inline asm
	// begin inline asm
	prmt.b32 %r478, %r479, %r480, %r489;
	// end inline asm
	// begin inline asm
	prmt.b32 %r482, %r479, %r480, %r493;
	// end inline asm
	// begin inline asm
	prmt.b32 %r486, %r487, %r488, %r489;
	// end inline asm
	// begin inline asm
	prmt.b32 %r490, %r487, %r488, %r493;
	// end inline asm
	st.shared.u32 	[%rd8], %r430;
	st.shared.u32 	[%rd9+128], %r434;
	st.shared.u32 	[%rd9+4], %r438;
	st.shared.u32 	[%rd9+132], %r442;
	st.shared.u32 	[%rd8+8324], %r446;
	st.shared.u32 	[%rd10], %r450;
	st.shared.u32 	[%rd11], %r454;
	st.shared.u32 	[%rd12], %r458;
	st.shared.u32 	[%rd8+16648], %r462;
	st.shared.u32 	[%rd13], %r466;
	st.shared.u32 	[%rd14], %r470;
	st.shared.u32 	[%rd15], %r474;
	st.shared.u32 	[%rd8+24972], %r478;
	st.shared.u32 	[%rd16], %r482;
	st.shared.u32 	[%rd17], %r486;
	st.shared.u32 	[%rd18], %r490;
	bar.sync 	0;
	or.b32  	%r574, %r44, %r24;
	or.b32  	%r45, %r574, %r25;
	shr.u32 	%r7929, %r45, 6;
	mov.u64 	%rd145, %rd22;
	mov.u64 	%rd146, %rd21;
	mov.u64 	%rd147, %rd20;
	mov.u64 	%rd148, %rd19;
	mov.u32 	%r7930, %r7914;
$L__BB0_30:                             // %pass5624
                                        //   Parent Loop BB0_29 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	add.s32 	%r7759, %r45, %r7930;
	bfe.s32 	%r7760, %r7759, 1, 1;
	and.b32  	%r7761, %r7760, 520;
	and.b32  	%r7762, %r7759, 1;
	neg.s32 	%r7763, %r7762;
	and.b32  	%r7764, %r7763, 1040;
	bfe.s32 	%r7765, %r7759, 3, 1;
	and.b32  	%r7766, %r7765, 130;
	bfe.s32 	%r7767, %r7759, 4, 1;
	and.b32  	%r7768, %r7767, 65;
	bfe.s32 	%r7769, %r7759, 2, 1;
	and.b32  	%r7770, %r7769, 260;
	and.b32  	%r7771, %r7929, 3;
	mul.lo.s32 	%r7772, %r7771, 2081;
	or.b32  	%r7773, %r7761, %r7764;
	or.b32  	%r7774, %r7773, %r26;
	or.b32  	%r7775, %r7766, %r27;
	or.b32  	%r7776, %r7775, %r7768;
	or.b32  	%r7777, %r7776, %r7770;
	add.s32 	%r7778, %r7777, %r7772;
	add.s32 	%r7779, %r7778, %r7774;
	mul.wide.u32 	%rd84, %r7779, 4;
	add.s64 	%rd86, %rd46, %rd84;
	ld.shared.u32 	%r7780, [%rd86];
	or.b32  	%r7781, %r28, %r7764;
	add.s32 	%r7782, %r7781, %r7761;
	add.s32 	%r7783, %r7782, %r7766;
	add.s32 	%r7784, %r7783, %r7768;
	add.s32 	%r7785, %r7784, %r7770;
	add.s32 	%r7786, %r7785, %r7772;
	mul.wide.u32 	%rd87, %r7786, 4;
	add.s64 	%rd88, %rd46, %rd87;
	ld.shared.u32 	%r7787, [%rd88];
	add.s32 	%r7788, %r29, %r7764;
	or.b32  	%r7789, %r7788, %r7761;
	add.s32 	%r7790, %r7789, %r7766;
	add.s32 	%r7791, %r7790, %r7768;
	add.s32 	%r7792, %r7791, %r7770;
	add.s32 	%r7793, %r7792, %r7772;
	mul.wide.u32 	%rd89, %r7793, 4;
	add.s64 	%rd90, %rd46, %rd89;
	ld.shared.u32 	%r7794, [%rd90];
	add.s32 	%r7795, %r30, %r7764;
	add.s32 	%r7796, %r7795, %r7761;
	add.s32 	%r7797, %r7796, %r7766;
	add.s32 	%r7798, %r7797, %r7768;
	add.s32 	%r7799, %r7798, %r7770;
	add.s32 	%r7800, %r7799, %r7772;
	mul.wide.u32 	%rd91, %r7800, 4;
	add.s64 	%rd92, %rd46, %rd91;
	ld.shared.u32 	%r7801, [%rd92];
	// begin inline asm
	mov.b32 %r580, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r591, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r579, %r7780, -2004318072;
	mov.u32 	%r578, 983055;
	// begin inline asm
	lop3.b32 %r577, %r578, %r579, %r580, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r581, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r582, %r580, %r581;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r585, %r577, %r582;
	// end inline asm
	mov.u32 	%r589, 15728880;
	// begin inline asm
	lop3.b32 %r588, %r589, %r579, %r591, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r592, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r593, %r591, %r592;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r596, %r588, %r593;
	// end inline asm
	shr.u32 	%r601, %r579, 8;
	// begin inline asm
	lop3.b32 %r599, %r578, %r601, %r580, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r603, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r604, %r580, %r603;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r607, %r599, %r604;
	// end inline asm
	// begin inline asm
	lop3.b32 %r610, %r589, %r601, %r591, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r614, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r615, %r591, %r614;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r618, %r610, %r615;
	// end inline asm
	// begin inline asm
	mov.b32 %r626, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r637, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r625, %r7787, -2004318072;
	// begin inline asm
	lop3.b32 %r623, %r578, %r625, %r626, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r627, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r628, %r626, %r627;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r631, %r623, %r628;
	// end inline asm
	// begin inline asm
	lop3.b32 %r634, %r589, %r625, %r637, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r638, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r639, %r637, %r638;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r642, %r634, %r639;
	// end inline asm
	shr.u32 	%r647, %r625, 8;
	// begin inline asm
	lop3.b32 %r645, %r578, %r647, %r626, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r649, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r650, %r626, %r649;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r653, %r645, %r650;
	// end inline asm
	// begin inline asm
	lop3.b32 %r656, %r589, %r647, %r637, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r660, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r661, %r637, %r660;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r664, %r656, %r661;
	// end inline asm
	// begin inline asm
	mov.b32 %r672, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r683, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r671, %r7794, -2004318072;
	// begin inline asm
	lop3.b32 %r669, %r578, %r671, %r672, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r673, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r674, %r672, %r673;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r677, %r669, %r674;
	// end inline asm
	// begin inline asm
	lop3.b32 %r680, %r589, %r671, %r683, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r684, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r685, %r683, %r684;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r688, %r680, %r685;
	// end inline asm
	shr.u32 	%r693, %r671, 8;
	// begin inline asm
	lop3.b32 %r691, %r578, %r693, %r672, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r695, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r696, %r672, %r695;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r699, %r691, %r696;
	// end inline asm
	// begin inline asm
	lop3.b32 %r702, %r589, %r693, %r683, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r706, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r707, %r683, %r706;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r710, %r702, %r707;
	// end inline asm
	// begin inline asm
	mov.b32 %r718, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r729, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r717, %r7801, -2004318072;
	// begin inline asm
	lop3.b32 %r715, %r578, %r717, %r718, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r719, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r720, %r718, %r719;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r723, %r715, %r720;
	// end inline asm
	// begin inline asm
	lop3.b32 %r726, %r589, %r717, %r729, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r730, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r731, %r729, %r730;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r734, %r726, %r731;
	// end inline asm
	shr.u32 	%r739, %r717, 8;
	// begin inline asm
	lop3.b32 %r737, %r578, %r739, %r718, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r741, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r742, %r718, %r741;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r745, %r737, %r742;
	// end inline asm
	// begin inline asm
	lop3.b32 %r748, %r589, %r739, %r729, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r752, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r753, %r729, %r752;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r756, %r748, %r753;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r759, %r262;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r761, %r759, %r585;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r764, %r262;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r766, %r764, %r596;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r769, %r262;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r771, %r769, %r607;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r774, %r262;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r776, %r774, %r618;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r779, %r262;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r781, %r779, %r631;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r784, %r262;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r786, %r784, %r642;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r789, %r262;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r791, %r789, %r653;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r794, %r262;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r796, %r794, %r664;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r799, %r262;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r801, %r799, %r677;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r804, %r262;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r806, %r804, %r688;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r809, %r262;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r811, %r809, %r699;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r814, %r262;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r816, %r814, %r710;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r819, %r262;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r821, %r819, %r723;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r824, %r262;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r826, %r824, %r734;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r829, %r262;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r831, %r829, %r745;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r834, %r262;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r836, %r834, %r756;
	// end inline asm
	// begin inline asm
	mov.b32 %r844, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r855, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r843, %r7942, -2004318072;
	// begin inline asm
	lop3.b32 %r841, %r578, %r843, %r844, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r845, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r846, %r844, %r845;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r849, %r841, %r846;
	// end inline asm
	// begin inline asm
	lop3.b32 %r852, %r589, %r843, %r855, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r856, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r857, %r855, %r856;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r860, %r852, %r857;
	// end inline asm
	shr.u32 	%r865, %r843, 8;
	// begin inline asm
	lop3.b32 %r863, %r578, %r865, %r844, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r867, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r868, %r844, %r867;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r871, %r863, %r868;
	// end inline asm
	// begin inline asm
	lop3.b32 %r874, %r589, %r865, %r855, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r878, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r879, %r855, %r878;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r882, %r874, %r879;
	// end inline asm
	// begin inline asm
	mov.b32 %r890, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r901, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r889, %r7941, -2004318072;
	// begin inline asm
	lop3.b32 %r887, %r578, %r889, %r890, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r891, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r892, %r890, %r891;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r895, %r887, %r892;
	// end inline asm
	// begin inline asm
	lop3.b32 %r898, %r589, %r889, %r901, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r902, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r903, %r901, %r902;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r906, %r898, %r903;
	// end inline asm
	shr.u32 	%r911, %r889, 8;
	// begin inline asm
	lop3.b32 %r909, %r578, %r911, %r890, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r913, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r914, %r890, %r913;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r917, %r909, %r914;
	// end inline asm
	// begin inline asm
	lop3.b32 %r920, %r589, %r911, %r901, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r924, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r925, %r901, %r924;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r928, %r920, %r925;
	// end inline asm
	// begin inline asm
	mov.b32 %r936, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r947, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r935, %r7940, -2004318072;
	// begin inline asm
	lop3.b32 %r933, %r578, %r935, %r936, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r937, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r938, %r936, %r937;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r941, %r933, %r938;
	// end inline asm
	// begin inline asm
	lop3.b32 %r944, %r589, %r935, %r947, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r948, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r949, %r947, %r948;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r952, %r944, %r949;
	// end inline asm
	shr.u32 	%r957, %r935, 8;
	// begin inline asm
	lop3.b32 %r955, %r578, %r957, %r936, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r959, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r960, %r936, %r959;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r963, %r955, %r960;
	// end inline asm
	// begin inline asm
	lop3.b32 %r966, %r589, %r957, %r947, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r970, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r971, %r947, %r970;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r974, %r966, %r971;
	// end inline asm
	// begin inline asm
	mov.b32 %r982, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r993, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r981, %r7939, -2004318072;
	// begin inline asm
	lop3.b32 %r979, %r578, %r981, %r982, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r983, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r984, %r982, %r983;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r987, %r979, %r984;
	// end inline asm
	// begin inline asm
	lop3.b32 %r990, %r589, %r981, %r993, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r994, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r995, %r993, %r994;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r998, %r990, %r995;
	// end inline asm
	shr.u32 	%r1003, %r981, 8;
	// begin inline asm
	lop3.b32 %r1001, %r578, %r1003, %r982, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1005, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1006, %r982, %r1005;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1009, %r1001, %r1006;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1012, %r589, %r1003, %r993, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1016, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1017, %r993, %r1016;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1020, %r1012, %r1017;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1023, %r169, %r849, %r761;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1027, %r169, %r860, %r766;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1031, %r169, %r871, %r771;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1035, %r169, %r882, %r776;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1039, %r169, %r895, %r781;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1043, %r169, %r906, %r786;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1047, %r169, %r917, %r791;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1051, %r169, %r928, %r796;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1055, %r169, %r941, %r801;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1059, %r169, %r952, %r806;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1063, %r169, %r963, %r811;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1067, %r169, %r974, %r816;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1071, %r169, %r987, %r821;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1075, %r169, %r998, %r826;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1079, %r169, %r1009, %r831;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1083, %r169, %r1020, %r836;
	// end inline asm
	// begin inline asm
	mov.b32 %r1092, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1103, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1091, %r7938, -2004318072;
	// begin inline asm
	lop3.b32 %r1089, %r578, %r1091, %r1092, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1093, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1094, %r1092, %r1093;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1097, %r1089, %r1094;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1100, %r589, %r1091, %r1103, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1104, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1105, %r1103, %r1104;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1108, %r1100, %r1105;
	// end inline asm
	shr.u32 	%r1113, %r1091, 8;
	// begin inline asm
	lop3.b32 %r1111, %r578, %r1113, %r1092, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1115, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1116, %r1092, %r1115;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1119, %r1111, %r1116;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1122, %r589, %r1113, %r1103, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1126, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1127, %r1103, %r1126;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1130, %r1122, %r1127;
	// end inline asm
	// begin inline asm
	mov.b32 %r1138, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1149, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1137, %r7937, -2004318072;
	// begin inline asm
	lop3.b32 %r1135, %r578, %r1137, %r1138, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1139, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1140, %r1138, %r1139;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1143, %r1135, %r1140;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1146, %r589, %r1137, %r1149, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1150, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1151, %r1149, %r1150;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1154, %r1146, %r1151;
	// end inline asm
	shr.u32 	%r1159, %r1137, 8;
	// begin inline asm
	lop3.b32 %r1157, %r578, %r1159, %r1138, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1161, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1162, %r1138, %r1161;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1165, %r1157, %r1162;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1168, %r589, %r1159, %r1149, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1172, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1173, %r1149, %r1172;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1176, %r1168, %r1173;
	// end inline asm
	// begin inline asm
	mov.b32 %r1184, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1195, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1183, %r7936, -2004318072;
	// begin inline asm
	lop3.b32 %r1181, %r578, %r1183, %r1184, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1185, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1186, %r1184, %r1185;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1189, %r1181, %r1186;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1192, %r589, %r1183, %r1195, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1196, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1197, %r1195, %r1196;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1200, %r1192, %r1197;
	// end inline asm
	shr.u32 	%r1205, %r1183, 8;
	// begin inline asm
	lop3.b32 %r1203, %r578, %r1205, %r1184, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1207, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1208, %r1184, %r1207;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1211, %r1203, %r1208;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1214, %r589, %r1205, %r1195, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1218, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1219, %r1195, %r1218;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1222, %r1214, %r1219;
	// end inline asm
	// begin inline asm
	mov.b32 %r1230, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1241, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1229, %r7935, -2004318072;
	// begin inline asm
	lop3.b32 %r1227, %r578, %r1229, %r1230, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1231, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1232, %r1230, %r1231;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1235, %r1227, %r1232;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1238, %r589, %r1229, %r1241, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1242, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1243, %r1241, %r1242;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1246, %r1238, %r1243;
	// end inline asm
	shr.u32 	%r1251, %r1229, 8;
	// begin inline asm
	lop3.b32 %r1249, %r578, %r1251, %r1230, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1253, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1254, %r1230, %r1253;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1257, %r1249, %r1254;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1260, %r589, %r1251, %r1241, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1264, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1265, %r1241, %r1264;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1268, %r1260, %r1265;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1271, %r200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1273, %r1271, %r1097, %r1023;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1277, %r200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1279, %r1277, %r1108, %r1027;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1283, %r200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1285, %r1283, %r1119, %r1031;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1289, %r200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1291, %r1289, %r1130, %r1035;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1295, %r200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1297, %r1295, %r1143, %r1039;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1301, %r200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1303, %r1301, %r1154, %r1043;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1307, %r200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1309, %r1307, %r1165, %r1047;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1313, %r200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1315, %r1313, %r1176, %r1051;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1319, %r200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1321, %r1319, %r1189, %r1055;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1325, %r200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1327, %r1325, %r1200, %r1059;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1331, %r200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1333, %r1331, %r1211, %r1063;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1337, %r200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1339, %r1337, %r1222, %r1067;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1343, %r200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1345, %r1343, %r1235, %r1071;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1349, %r200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1351, %r1349, %r1246, %r1075;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1355, %r200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1357, %r1355, %r1257, %r1079;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1361, %r200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1363, %r1361, %r1268, %r1083;
	// end inline asm
	// begin inline asm
	mov.b32 %r1372, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1383, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1371, %r7934, -2004318072;
	// begin inline asm
	lop3.b32 %r1369, %r578, %r1371, %r1372, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1373, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1374, %r1372, %r1373;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1377, %r1369, %r1374;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1380, %r589, %r1371, %r1383, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1384, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1385, %r1383, %r1384;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1388, %r1380, %r1385;
	// end inline asm
	shr.u32 	%r1393, %r1371, 8;
	// begin inline asm
	lop3.b32 %r1391, %r578, %r1393, %r1372, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1395, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1396, %r1372, %r1395;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1399, %r1391, %r1396;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1402, %r589, %r1393, %r1383, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1406, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1407, %r1383, %r1406;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1410, %r1402, %r1407;
	// end inline asm
	// begin inline asm
	mov.b32 %r1418, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1429, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1417, %r7933, -2004318072;
	// begin inline asm
	lop3.b32 %r1415, %r578, %r1417, %r1418, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1419, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1420, %r1418, %r1419;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1423, %r1415, %r1420;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1426, %r589, %r1417, %r1429, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1430, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1431, %r1429, %r1430;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1434, %r1426, %r1431;
	// end inline asm
	shr.u32 	%r1439, %r1417, 8;
	// begin inline asm
	lop3.b32 %r1437, %r578, %r1439, %r1418, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1441, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1442, %r1418, %r1441;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1445, %r1437, %r1442;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1448, %r589, %r1439, %r1429, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1452, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1453, %r1429, %r1452;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1456, %r1448, %r1453;
	// end inline asm
	// begin inline asm
	mov.b32 %r1464, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1475, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1463, %r7932, -2004318072;
	// begin inline asm
	lop3.b32 %r1461, %r578, %r1463, %r1464, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1465, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1466, %r1464, %r1465;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1469, %r1461, %r1466;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1472, %r589, %r1463, %r1475, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1476, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1477, %r1475, %r1476;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1480, %r1472, %r1477;
	// end inline asm
	shr.u32 	%r1485, %r1463, 8;
	// begin inline asm
	lop3.b32 %r1483, %r578, %r1485, %r1464, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1487, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1488, %r1464, %r1487;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1491, %r1483, %r1488;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1494, %r589, %r1485, %r1475, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1498, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1499, %r1475, %r1498;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1502, %r1494, %r1499;
	// end inline asm
	// begin inline asm
	mov.b32 %r1510, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1521, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1509, %r7931, -2004318072;
	// begin inline asm
	lop3.b32 %r1507, %r578, %r1509, %r1510, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1511, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1512, %r1510, %r1511;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1515, %r1507, %r1512;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1518, %r589, %r1509, %r1521, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1522, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1523, %r1521, %r1522;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1526, %r1518, %r1523;
	// end inline asm
	shr.u32 	%r1531, %r1509, 8;
	// begin inline asm
	lop3.b32 %r1529, %r578, %r1531, %r1510, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1533, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1534, %r1510, %r1533;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1537, %r1529, %r1534;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1540, %r589, %r1531, %r1521, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1544, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1545, %r1521, %r1544;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1548, %r1540, %r1545;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1622, %r231, %r1377, %r1273;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1619, %r231, %r1388, %r1279;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1631, %r231, %r1399, %r1285;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1628, %r231, %r1410, %r1291;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1640, %r231, %r1423, %r1297;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1637, %r231, %r1434, %r1303;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1649, %r231, %r1445, %r1309;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1646, %r231, %r1456, %r1315;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1658, %r231, %r1469, %r1321;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1655, %r231, %r1480, %r1327;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1667, %r231, %r1491, %r1333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1664, %r231, %r1502, %r1339;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1676, %r231, %r1515, %r1345;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1673, %r231, %r1526, %r1351;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1685, %r231, %r1537, %r1357;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1682, %r231, %r1548, %r1363;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1615, %r268;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1617, %r1615, %r1619;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1620, %r265, %r1622, %r1617;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1624, %r268;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1626, %r1624, %r1628;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1629, %r265, %r1631, %r1626;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1633, %r268;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1635, %r1633, %r1637;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1638, %r265, %r1640, %r1635;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1642, %r268;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1644, %r1642, %r1646;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1647, %r265, %r1649, %r1644;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1651, %r268;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1653, %r1651, %r1655;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1656, %r265, %r1658, %r1653;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1660, %r268;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1662, %r1660, %r1664;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1665, %r265, %r1667, %r1662;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1669, %r268;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1671, %r1669, %r1673;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1674, %r265, %r1676, %r1671;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1678, %r268;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1680, %r1678, %r1682;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1683, %r265, %r1685, %r1680;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1687, %r268, %r1622;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1690, %r265, %r1619, %r1687;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1694, %r268, %r1631;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1697, %r265, %r1628, %r1694;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1701, %r268, %r1640;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1704, %r265, %r1637, %r1701;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1708, %r268, %r1649;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1711, %r265, %r1646, %r1708;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1715, %r268, %r1658;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1718, %r265, %r1655, %r1715;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1722, %r268, %r1667;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1725, %r265, %r1664, %r1722;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1729, %r268, %r1676;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1732, %r265, %r1673, %r1729;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1736, %r268, %r1685;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1739, %r265, %r1682, %r1736;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1830, %r1827}, {%r271, %r277, %r274, %r280}, {%r1620, %r1690}, {%r7914, %r7914};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1839, %r1836}, {%r271, %r277, %r274, %r280}, {%r1629, %r1697}, {%r7914, %r7914};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1848, %r1845}, {%r271, %r277, %r274, %r280}, {%r1638, %r1704}, {%r7914, %r7914};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1857, %r1854}, {%r271, %r277, %r274, %r280}, {%r1647, %r1711}, {%r7914, %r7914};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1866, %r1863}, {%r271, %r277, %r274, %r280}, {%r1656, %r1718}, {%r7914, %r7914};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1875, %r1872}, {%r271, %r277, %r274, %r280}, {%r1665, %r1725}, {%r7914, %r7914};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1884, %r1881}, {%r271, %r277, %r274, %r280}, {%r1674, %r1732}, {%r7914, %r7914};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1893, %r1890}, {%r271, %r277, %r274, %r280}, {%r1683, %r1739}, {%r7914, %r7914};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1823, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1825, %r1823, %r1827;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1828, %r283, %r1830, %r1825;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1832, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1834, %r1832, %r1836;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1837, %r283, %r1839, %r1834;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1841, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1843, %r1841, %r1845;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1846, %r283, %r1848, %r1843;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1850, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1852, %r1850, %r1854;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1855, %r283, %r1857, %r1852;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1859, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1861, %r1859, %r1863;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1864, %r283, %r1866, %r1861;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1868, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1870, %r1868, %r1872;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1873, %r283, %r1875, %r1870;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1877, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1879, %r1877, %r1881;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1882, %r283, %r1884, %r1879;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1886, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1888, %r1886, %r1890;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1891, %r283, %r1893, %r1888;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1895, %r286, %r1830;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1898, %r283, %r1827, %r1895;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1902, %r286, %r1839;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1905, %r283, %r1836, %r1902;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1909, %r286, %r1848;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1912, %r283, %r1845, %r1909;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1916, %r286, %r1857;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1919, %r283, %r1854, %r1916;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1923, %r286, %r1866;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1926, %r283, %r1863, %r1923;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1930, %r286, %r1875;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1933, %r283, %r1872, %r1930;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1937, %r286, %r1884;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1940, %r283, %r1881, %r1937;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1944, %r286, %r1893;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1947, %r283, %r1890, %r1944;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1951, %r1952}, {%r289, %r295, %r292, %r298}, {%r1828, %r1898}, {%r7914, %r7914};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1961, %r1962}, {%r289, %r295, %r292, %r298}, {%r1837, %r1905}, {%r7914, %r7914};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1971, %r1972}, {%r289, %r295, %r292, %r298}, {%r1846, %r1912}, {%r7914, %r7914};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1981, %r1982}, {%r289, %r295, %r292, %r298}, {%r1855, %r1919}, {%r7914, %r7914};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1991, %r1992}, {%r289, %r295, %r292, %r298}, {%r1864, %r1926}, {%r7914, %r7914};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2001, %r2002}, {%r289, %r295, %r292, %r298}, {%r1873, %r1933}, {%r7914, %r7914};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2011, %r2012}, {%r289, %r295, %r292, %r298}, {%r1882, %r1940}, {%r7914, %r7914};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2021, %r2022}, {%r289, %r295, %r292, %r298}, {%r1891, %r1947}, {%r7914, %r7914};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2031, %r55, %r1951;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2034, %r55, %r1952;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2037, %r55, %r1961;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2040, %r55, %r1962;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2043, %r55, %r1971;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2046, %r55, %r1972;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2049, %r55, %r1981;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2052, %r55, %r1982;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2055, %r55, %r1991;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2058, %r55, %r1992;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2061, %r55, %r2001;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2064, %r55, %r2002;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2067, %r55, %r2011;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2070, %r55, %r2012;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2073, %r55, %r2021;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2076, %r55, %r2022;
	// end inline asm
	// begin inline asm
	mov.b32 %r2079, {%rs1142, %rs1142};
	// end inline asm
	mov.u16 	%rs195, 18176;
	// begin inline asm
	mov.b32 %r2080, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2081, %r2031, %r2079;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2084, %r2081, %r2080;
	// end inline asm
	// begin inline asm
	mov.b32 %r2087, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2088, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2089, %r2034, %r2087;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2092, %r2089, %r2088;
	// end inline asm
	// begin inline asm
	mov.b32 %r2095, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2096, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2097, %r2037, %r2095;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2100, %r2097, %r2096;
	// end inline asm
	// begin inline asm
	mov.b32 %r2103, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2104, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2105, %r2040, %r2103;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2108, %r2105, %r2104;
	// end inline asm
	// begin inline asm
	mov.b32 %r2111, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2112, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2113, %r2043, %r2111;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2116, %r2113, %r2112;
	// end inline asm
	// begin inline asm
	mov.b32 %r2119, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2120, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2121, %r2046, %r2119;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2124, %r2121, %r2120;
	// end inline asm
	// begin inline asm
	mov.b32 %r2127, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2128, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2129, %r2049, %r2127;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2132, %r2129, %r2128;
	// end inline asm
	// begin inline asm
	mov.b32 %r2135, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2136, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2137, %r2052, %r2135;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2140, %r2137, %r2136;
	// end inline asm
	// begin inline asm
	mov.b32 %r2143, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2144, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2145, %r2055, %r2143;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2148, %r2145, %r2144;
	// end inline asm
	// begin inline asm
	mov.b32 %r2151, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2152, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2153, %r2058, %r2151;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2156, %r2153, %r2152;
	// end inline asm
	// begin inline asm
	mov.b32 %r2159, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2160, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2161, %r2061, %r2159;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2164, %r2161, %r2160;
	// end inline asm
	// begin inline asm
	mov.b32 %r2167, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2168, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2169, %r2064, %r2167;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2172, %r2169, %r2168;
	// end inline asm
	// begin inline asm
	mov.b32 %r2175, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2176, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2177, %r2067, %r2175;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2180, %r2177, %r2176;
	// end inline asm
	// begin inline asm
	mov.b32 %r2183, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2184, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2185, %r2070, %r2183;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2188, %r2185, %r2184;
	// end inline asm
	// begin inline asm
	mov.b32 %r2191, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2192, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2193, %r2073, %r2191;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2196, %r2193, %r2192;
	// end inline asm
	// begin inline asm
	mov.b32 %r2199, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2200, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2201, %r2076, %r2199;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2204, %r2201, %r2200;
	// end inline asm
	// begin inline asm
	mov.b32 %r2210, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2208, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2209, %r2210, %r2208;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2212, %r2084, %r2209;
	// end inline asm
	// begin inline asm
	mov.b32 %r2215, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2216, %r2210, %r2215;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2219, %r2092, %r2216;
	// end inline asm
	// begin inline asm
	mov.b32 %r2222, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2223, %r2210, %r2222;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2226, %r2100, %r2223;
	// end inline asm
	// begin inline asm
	mov.b32 %r2229, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2230, %r2210, %r2229;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2233, %r2108, %r2230;
	// end inline asm
	mov.u32 	%r2239, 25152;
	// begin inline asm
	prmt.b32 %r2236, %r2212, %r2226, %r2239;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2240, %r2219, %r2233, %r2239;
	// end inline asm
	shl.b32 	%r2247, %r2240, 4;
	mov.u32 	%r2245, 252645135;
	// begin inline asm
	lop3.b32 %r2244, %r2245, %r2236, %r2247, 202;
	// end inline asm
	xor.b32  	%r7802, %r2244, -2004318072;
	// begin inline asm
	mov.b32 %r2251, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2249, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2250, %r2251, %r2249;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2253, %r2116, %r2250;
	// end inline asm
	// begin inline asm
	mov.b32 %r2256, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2257, %r2251, %r2256;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2260, %r2124, %r2257;
	// end inline asm
	// begin inline asm
	mov.b32 %r2263, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2264, %r2251, %r2263;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2267, %r2132, %r2264;
	// end inline asm
	// begin inline asm
	mov.b32 %r2270, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2271, %r2251, %r2270;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2274, %r2140, %r2271;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2277, %r2253, %r2267, %r2239;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2281, %r2260, %r2274, %r2239;
	// end inline asm
	shl.b32 	%r2288, %r2281, 4;
	// begin inline asm
	lop3.b32 %r2285, %r2245, %r2277, %r2288, 202;
	// end inline asm
	xor.b32  	%r7803, %r2285, -2004318072;
	// begin inline asm
	mov.b32 %r2292, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2290, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2291, %r2292, %r2290;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2294, %r2148, %r2291;
	// end inline asm
	// begin inline asm
	mov.b32 %r2297, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2298, %r2292, %r2297;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2301, %r2156, %r2298;
	// end inline asm
	// begin inline asm
	mov.b32 %r2304, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2305, %r2292, %r2304;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2308, %r2164, %r2305;
	// end inline asm
	// begin inline asm
	mov.b32 %r2311, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2312, %r2292, %r2311;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2315, %r2172, %r2312;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2318, %r2294, %r2308, %r2239;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2322, %r2301, %r2315, %r2239;
	// end inline asm
	shl.b32 	%r2329, %r2322, 4;
	// begin inline asm
	lop3.b32 %r2326, %r2245, %r2318, %r2329, 202;
	// end inline asm
	xor.b32  	%r7804, %r2326, -2004318072;
	// begin inline asm
	mov.b32 %r2333, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2331, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2332, %r2333, %r2331;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2335, %r2180, %r2332;
	// end inline asm
	// begin inline asm
	mov.b32 %r2338, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2339, %r2333, %r2338;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2342, %r2188, %r2339;
	// end inline asm
	// begin inline asm
	mov.b32 %r2345, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2346, %r2333, %r2345;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2349, %r2196, %r2346;
	// end inline asm
	// begin inline asm
	mov.b32 %r2352, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2353, %r2333, %r2352;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2356, %r2204, %r2353;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2359, %r2335, %r2349, %r2239;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2363, %r2342, %r2356, %r2239;
	// end inline asm
	shl.b32 	%r2370, %r2363, 4;
	// begin inline asm
	lop3.b32 %r2367, %r2245, %r2359, %r2370, 202;
	// end inline asm
	xor.b32  	%r7805, %r2367, -2004318072;
	st.shared.u32 	[%rd145], %r7802;
	st.shared.u32 	[%rd146], %r7803;
	st.shared.u32 	[%rd147], %r7804;
	st.shared.u32 	[%rd148], %r7805;
	ld.shared.u32 	%r7942, [%rd86];
	ld.shared.u32 	%r7941, [%rd88];
	ld.shared.u32 	%r7940, [%rd90];
	ld.shared.u32 	%r7939, [%rd92];
	// begin inline asm
	mov.b32 %r2376, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2387, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r2375, %r7942, -2004318072;
	// begin inline asm
	lop3.b32 %r2373, %r578, %r2375, %r2376, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2377, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2378, %r2376, %r2377;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2381, %r2373, %r2378;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2384, %r589, %r2375, %r2387, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2388, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2389, %r2387, %r2388;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2392, %r2384, %r2389;
	// end inline asm
	shr.u32 	%r2397, %r2375, 8;
	// begin inline asm
	lop3.b32 %r2395, %r578, %r2397, %r2376, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2399, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2400, %r2376, %r2399;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2403, %r2395, %r2400;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2406, %r589, %r2397, %r2387, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2410, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2411, %r2387, %r2410;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2414, %r2406, %r2411;
	// end inline asm
	// begin inline asm
	mov.b32 %r2422, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2433, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r2421, %r7941, -2004318072;
	// begin inline asm
	lop3.b32 %r2419, %r578, %r2421, %r2422, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2423, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2424, %r2422, %r2423;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2427, %r2419, %r2424;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2430, %r589, %r2421, %r2433, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2434, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2435, %r2433, %r2434;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2438, %r2430, %r2435;
	// end inline asm
	shr.u32 	%r2443, %r2421, 8;
	// begin inline asm
	lop3.b32 %r2441, %r578, %r2443, %r2422, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2445, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2446, %r2422, %r2445;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2449, %r2441, %r2446;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2452, %r589, %r2443, %r2433, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2456, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2457, %r2433, %r2456;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2460, %r2452, %r2457;
	// end inline asm
	// begin inline asm
	mov.b32 %r2468, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2479, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r2467, %r7940, -2004318072;
	// begin inline asm
	lop3.b32 %r2465, %r578, %r2467, %r2468, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2469, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2470, %r2468, %r2469;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2473, %r2465, %r2470;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2476, %r589, %r2467, %r2479, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2480, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2481, %r2479, %r2480;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2484, %r2476, %r2481;
	// end inline asm
	shr.u32 	%r2489, %r2467, 8;
	// begin inline asm
	lop3.b32 %r2487, %r578, %r2489, %r2468, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2491, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2492, %r2468, %r2491;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2495, %r2487, %r2492;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2498, %r589, %r2489, %r2479, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2502, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2503, %r2479, %r2502;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2506, %r2498, %r2503;
	// end inline asm
	// begin inline asm
	mov.b32 %r2514, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2525, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r2513, %r7939, -2004318072;
	// begin inline asm
	lop3.b32 %r2511, %r578, %r2513, %r2514, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2515, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2516, %r2514, %r2515;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2519, %r2511, %r2516;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2522, %r589, %r2513, %r2525, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2526, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2527, %r2525, %r2526;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2530, %r2522, %r2527;
	// end inline asm
	shr.u32 	%r2535, %r2513, 8;
	// begin inline asm
	lop3.b32 %r2533, %r578, %r2535, %r2514, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2537, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2538, %r2514, %r2537;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2541, %r2533, %r2538;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2544, %r589, %r2535, %r2525, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2548, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2549, %r2525, %r2548;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2552, %r2544, %r2549;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2555, %r262;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2557, %r2555, %r2381;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2560, %r262;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2562, %r2560, %r2392;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2565, %r262;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2567, %r2565, %r2403;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2570, %r262;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2572, %r2570, %r2414;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2575, %r262;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2577, %r2575, %r2427;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2580, %r262;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2582, %r2580, %r2438;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2585, %r262;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2587, %r2585, %r2449;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2590, %r262;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2592, %r2590, %r2460;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2595, %r262;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2597, %r2595, %r2473;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2600, %r262;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2602, %r2600, %r2484;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2605, %r262;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2607, %r2605, %r2495;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2610, %r262;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2612, %r2610, %r2506;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2615, %r262;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2617, %r2615, %r2519;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2620, %r262;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2622, %r2620, %r2530;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2625, %r262;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2627, %r2625, %r2541;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2630, %r262;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2632, %r2630, %r2552;
	// end inline asm
	// begin inline asm
	mov.b32 %r2640, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2651, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2637, %r578, %r1091, %r2640, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2641, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2642, %r2640, %r2641;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2645, %r2637, %r2642;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2648, %r589, %r1091, %r2651, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2652, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2653, %r2651, %r2652;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2656, %r2648, %r2653;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2659, %r578, %r1113, %r2640, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2663, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2664, %r2640, %r2663;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2667, %r2659, %r2664;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2670, %r589, %r1113, %r2651, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2674, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2675, %r2651, %r2674;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2678, %r2670, %r2675;
	// end inline asm
	// begin inline asm
	mov.b32 %r2686, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2697, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2683, %r578, %r1137, %r2686, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2687, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2688, %r2686, %r2687;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2691, %r2683, %r2688;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2694, %r589, %r1137, %r2697, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2698, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2699, %r2697, %r2698;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2702, %r2694, %r2699;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2705, %r578, %r1159, %r2686, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2709, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2710, %r2686, %r2709;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2713, %r2705, %r2710;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2716, %r589, %r1159, %r2697, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2720, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2721, %r2697, %r2720;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2724, %r2716, %r2721;
	// end inline asm
	// begin inline asm
	mov.b32 %r2732, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2743, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2729, %r578, %r1183, %r2732, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2733, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2734, %r2732, %r2733;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2737, %r2729, %r2734;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2740, %r589, %r1183, %r2743, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2744, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2745, %r2743, %r2744;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2748, %r2740, %r2745;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2751, %r578, %r1205, %r2732, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2755, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2756, %r2732, %r2755;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2759, %r2751, %r2756;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2762, %r589, %r1205, %r2743, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2766, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2767, %r2743, %r2766;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2770, %r2762, %r2767;
	// end inline asm
	// begin inline asm
	mov.b32 %r2778, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2789, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2775, %r578, %r1229, %r2778, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2779, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2780, %r2778, %r2779;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2783, %r2775, %r2780;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2786, %r589, %r1229, %r2789, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2790, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2791, %r2789, %r2790;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2794, %r2786, %r2791;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2797, %r578, %r1251, %r2778, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2801, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2802, %r2778, %r2801;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2805, %r2797, %r2802;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2808, %r589, %r1251, %r2789, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2812, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2813, %r2789, %r2812;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2816, %r2808, %r2813;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2819, %r169, %r2645, %r2557;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2823, %r169, %r2656, %r2562;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2827, %r169, %r2667, %r2567;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2831, %r169, %r2678, %r2572;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2835, %r169, %r2691, %r2577;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2839, %r169, %r2702, %r2582;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2843, %r169, %r2713, %r2587;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2847, %r169, %r2724, %r2592;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2851, %r169, %r2737, %r2597;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2855, %r169, %r2748, %r2602;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2859, %r169, %r2759, %r2607;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2863, %r169, %r2770, %r2612;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2867, %r169, %r2783, %r2617;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2871, %r169, %r2794, %r2622;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2875, %r169, %r2805, %r2627;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2879, %r169, %r2816, %r2632;
	// end inline asm
	// begin inline asm
	mov.b32 %r2888, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2899, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2885, %r578, %r1371, %r2888, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2889, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2890, %r2888, %r2889;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2893, %r2885, %r2890;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2896, %r589, %r1371, %r2899, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2900, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2901, %r2899, %r2900;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2904, %r2896, %r2901;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2907, %r578, %r1393, %r2888, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2911, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2912, %r2888, %r2911;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2915, %r2907, %r2912;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2918, %r589, %r1393, %r2899, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2922, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2923, %r2899, %r2922;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2926, %r2918, %r2923;
	// end inline asm
	// begin inline asm
	mov.b32 %r2934, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2945, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2931, %r578, %r1417, %r2934, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2935, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2936, %r2934, %r2935;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2939, %r2931, %r2936;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2942, %r589, %r1417, %r2945, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2946, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2947, %r2945, %r2946;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2950, %r2942, %r2947;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2953, %r578, %r1439, %r2934, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2957, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2958, %r2934, %r2957;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2961, %r2953, %r2958;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2964, %r589, %r1439, %r2945, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2968, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2969, %r2945, %r2968;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2972, %r2964, %r2969;
	// end inline asm
	// begin inline asm
	mov.b32 %r2980, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2991, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2977, %r578, %r1463, %r2980, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2981, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2982, %r2980, %r2981;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2985, %r2977, %r2982;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2988, %r589, %r1463, %r2991, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2992, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2993, %r2991, %r2992;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2996, %r2988, %r2993;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2999, %r578, %r1485, %r2980, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3003, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3004, %r2980, %r3003;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3007, %r2999, %r3004;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3010, %r589, %r1485, %r2991, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3014, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3015, %r2991, %r3014;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3018, %r3010, %r3015;
	// end inline asm
	// begin inline asm
	mov.b32 %r3026, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r3037, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3023, %r578, %r1509, %r3026, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3027, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3028, %r3026, %r3027;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3031, %r3023, %r3028;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3034, %r589, %r1509, %r3037, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3038, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3039, %r3037, %r3038;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3042, %r3034, %r3039;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3045, %r578, %r1531, %r3026, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3049, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3050, %r3026, %r3049;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3053, %r3045, %r3050;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3056, %r589, %r1531, %r3037, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3060, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3061, %r3037, %r3060;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3064, %r3056, %r3061;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3067, %r200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3069, %r3067, %r2893, %r2819;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3073, %r200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3075, %r3073, %r2904, %r2823;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3079, %r200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3081, %r3079, %r2915, %r2827;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3085, %r200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3087, %r3085, %r2926, %r2831;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3091, %r200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3093, %r3091, %r2939, %r2835;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3097, %r200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3099, %r3097, %r2950, %r2839;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3103, %r200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3105, %r3103, %r2961, %r2843;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3109, %r200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3111, %r3109, %r2972, %r2847;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3115, %r200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3117, %r3115, %r2985, %r2851;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3121, %r200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3123, %r3121, %r2996, %r2855;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3127, %r200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3129, %r3127, %r3007, %r2859;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3133, %r200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3135, %r3133, %r3018, %r2863;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3139, %r200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3141, %r3139, %r3031, %r2867;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3145, %r200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3147, %r3145, %r3042, %r2871;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3151, %r200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3153, %r3151, %r3053, %r2875;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3157, %r200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3159, %r3157, %r3064, %r2879;
	// end inline asm
	// begin inline asm
	mov.b32 %r3168, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r3179, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3165, %r578, %r579, %r3168, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3169, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3170, %r3168, %r3169;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3173, %r3165, %r3170;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3176, %r589, %r579, %r3179, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3180, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3181, %r3179, %r3180;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3184, %r3176, %r3181;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3187, %r578, %r601, %r3168, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3191, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3192, %r3168, %r3191;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3195, %r3187, %r3192;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3198, %r589, %r601, %r3179, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3202, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3203, %r3179, %r3202;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3206, %r3198, %r3203;
	// end inline asm
	// begin inline asm
	mov.b32 %r3214, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r3225, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3211, %r578, %r625, %r3214, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3215, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3216, %r3214, %r3215;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3219, %r3211, %r3216;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3222, %r589, %r625, %r3225, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3226, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3227, %r3225, %r3226;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3230, %r3222, %r3227;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3233, %r578, %r647, %r3214, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3237, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3238, %r3214, %r3237;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3241, %r3233, %r3238;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3244, %r589, %r647, %r3225, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3248, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3249, %r3225, %r3248;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3252, %r3244, %r3249;
	// end inline asm
	// begin inline asm
	mov.b32 %r3260, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r3271, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3257, %r578, %r671, %r3260, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3261, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3262, %r3260, %r3261;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3265, %r3257, %r3262;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3268, %r589, %r671, %r3271, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3272, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3273, %r3271, %r3272;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3276, %r3268, %r3273;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3279, %r578, %r693, %r3260, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3283, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3284, %r3260, %r3283;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3287, %r3279, %r3284;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3290, %r589, %r693, %r3271, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3294, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3295, %r3271, %r3294;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3298, %r3290, %r3295;
	// end inline asm
	// begin inline asm
	mov.b32 %r3306, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r3317, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3303, %r578, %r717, %r3306, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3307, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3308, %r3306, %r3307;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3311, %r3303, %r3308;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3314, %r589, %r717, %r3317, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3318, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3319, %r3317, %r3318;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3322, %r3314, %r3319;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3325, %r578, %r739, %r3306, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3329, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3330, %r3306, %r3329;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3333, %r3325, %r3330;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3336, %r589, %r739, %r3317, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3340, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3341, %r3317, %r3340;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3344, %r3336, %r3341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3418, %r231, %r3173, %r3069;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3415, %r231, %r3184, %r3075;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3427, %r231, %r3195, %r3081;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3424, %r231, %r3206, %r3087;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3436, %r231, %r3219, %r3093;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3433, %r231, %r3230, %r3099;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3445, %r231, %r3241, %r3105;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3442, %r231, %r3252, %r3111;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3454, %r231, %r3265, %r3117;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3451, %r231, %r3276, %r3123;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3463, %r231, %r3287, %r3129;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3460, %r231, %r3298, %r3135;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3472, %r231, %r3311, %r3141;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3469, %r231, %r3322, %r3147;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3481, %r231, %r3333, %r3153;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3478, %r231, %r3344, %r3159;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3411, %r268;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3413, %r3411, %r3415;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3416, %r265, %r3418, %r3413;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3420, %r268;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3422, %r3420, %r3424;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3425, %r265, %r3427, %r3422;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3429, %r268;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3431, %r3429, %r3433;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3434, %r265, %r3436, %r3431;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3438, %r268;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3440, %r3438, %r3442;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3443, %r265, %r3445, %r3440;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3447, %r268;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3449, %r3447, %r3451;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3452, %r265, %r3454, %r3449;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3456, %r268;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3458, %r3456, %r3460;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3461, %r265, %r3463, %r3458;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3465, %r268;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3467, %r3465, %r3469;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3470, %r265, %r3472, %r3467;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3474, %r268;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3476, %r3474, %r3478;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3479, %r265, %r3481, %r3476;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3483, %r268, %r3418;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3486, %r265, %r3415, %r3483;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3490, %r268, %r3427;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3493, %r265, %r3424, %r3490;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3497, %r268, %r3436;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3500, %r265, %r3433, %r3497;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3504, %r268, %r3445;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3507, %r265, %r3442, %r3504;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3511, %r268, %r3454;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3514, %r265, %r3451, %r3511;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3518, %r268, %r3463;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3521, %r265, %r3460, %r3518;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3525, %r268, %r3472;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3528, %r265, %r3469, %r3525;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3532, %r268, %r3481;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3535, %r265, %r3478, %r3532;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3626, %r3623}, {%r271, %r277, %r274, %r280}, {%r3416, %r3486}, {%r7914, %r7914};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3635, %r3632}, {%r271, %r277, %r274, %r280}, {%r3425, %r3493}, {%r7914, %r7914};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3644, %r3641}, {%r271, %r277, %r274, %r280}, {%r3434, %r3500}, {%r7914, %r7914};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3653, %r3650}, {%r271, %r277, %r274, %r280}, {%r3443, %r3507}, {%r7914, %r7914};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3662, %r3659}, {%r271, %r277, %r274, %r280}, {%r3452, %r3514}, {%r7914, %r7914};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3671, %r3668}, {%r271, %r277, %r274, %r280}, {%r3461, %r3521}, {%r7914, %r7914};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3680, %r3677}, {%r271, %r277, %r274, %r280}, {%r3470, %r3528}, {%r7914, %r7914};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3689, %r3686}, {%r271, %r277, %r274, %r280}, {%r3479, %r3535}, {%r7914, %r7914};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3619, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3621, %r3619, %r3623;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3624, %r283, %r3626, %r3621;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3628, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3630, %r3628, %r3632;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3633, %r283, %r3635, %r3630;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3637, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3639, %r3637, %r3641;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3642, %r283, %r3644, %r3639;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3646, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3648, %r3646, %r3650;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3651, %r283, %r3653, %r3648;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3655, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3657, %r3655, %r3659;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3660, %r283, %r3662, %r3657;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3664, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3666, %r3664, %r3668;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3669, %r283, %r3671, %r3666;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3673, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3675, %r3673, %r3677;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3678, %r283, %r3680, %r3675;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3682, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3684, %r3682, %r3686;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3687, %r283, %r3689, %r3684;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3691, %r286, %r3626;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3694, %r283, %r3623, %r3691;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3698, %r286, %r3635;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3701, %r283, %r3632, %r3698;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3705, %r286, %r3644;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3708, %r283, %r3641, %r3705;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3712, %r286, %r3653;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3715, %r283, %r3650, %r3712;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3719, %r286, %r3662;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3722, %r283, %r3659, %r3719;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3726, %r286, %r3671;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3729, %r283, %r3668, %r3726;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3733, %r286, %r3680;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3736, %r283, %r3677, %r3733;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3740, %r286, %r3689;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3743, %r283, %r3686, %r3740;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3747, %r3748}, {%r289, %r295, %r292, %r298}, {%r3624, %r3694}, {%r7914, %r7914};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3757, %r3758}, {%r289, %r295, %r292, %r298}, {%r3633, %r3701}, {%r7914, %r7914};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3767, %r3768}, {%r289, %r295, %r292, %r298}, {%r3642, %r3708}, {%r7914, %r7914};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3777, %r3778}, {%r289, %r295, %r292, %r298}, {%r3651, %r3715}, {%r7914, %r7914};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3787, %r3788}, {%r289, %r295, %r292, %r298}, {%r3660, %r3722}, {%r7914, %r7914};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3797, %r3798}, {%r289, %r295, %r292, %r298}, {%r3669, %r3729}, {%r7914, %r7914};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3807, %r3808}, {%r289, %r295, %r292, %r298}, {%r3678, %r3736}, {%r7914, %r7914};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3817, %r3818}, {%r289, %r295, %r292, %r298}, {%r3687, %r3743}, {%r7914, %r7914};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3827, %r55, %r3747;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3830, %r55, %r3748;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3833, %r55, %r3757;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3836, %r55, %r3758;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3839, %r55, %r3767;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3842, %r55, %r3768;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3845, %r55, %r3777;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3848, %r55, %r3778;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3851, %r55, %r3787;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3854, %r55, %r3788;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3857, %r55, %r3797;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3860, %r55, %r3798;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3863, %r55, %r3807;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3866, %r55, %r3808;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3869, %r55, %r3817;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3872, %r55, %r3818;
	// end inline asm
	// begin inline asm
	mov.b32 %r3875, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3876, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3877, %r3827, %r3875;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3880, %r3877, %r3876;
	// end inline asm
	// begin inline asm
	mov.b32 %r3883, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3884, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3885, %r3830, %r3883;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3888, %r3885, %r3884;
	// end inline asm
	// begin inline asm
	mov.b32 %r3891, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3892, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3893, %r3833, %r3891;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3896, %r3893, %r3892;
	// end inline asm
	// begin inline asm
	mov.b32 %r3899, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3900, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3901, %r3836, %r3899;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3904, %r3901, %r3900;
	// end inline asm
	// begin inline asm
	mov.b32 %r3907, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3908, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3909, %r3839, %r3907;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3912, %r3909, %r3908;
	// end inline asm
	// begin inline asm
	mov.b32 %r3915, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3916, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3917, %r3842, %r3915;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3920, %r3917, %r3916;
	// end inline asm
	// begin inline asm
	mov.b32 %r3923, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3924, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3925, %r3845, %r3923;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3928, %r3925, %r3924;
	// end inline asm
	// begin inline asm
	mov.b32 %r3931, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3932, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3933, %r3848, %r3931;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3936, %r3933, %r3932;
	// end inline asm
	// begin inline asm
	mov.b32 %r3939, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3940, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3941, %r3851, %r3939;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3944, %r3941, %r3940;
	// end inline asm
	// begin inline asm
	mov.b32 %r3947, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3948, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3949, %r3854, %r3947;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3952, %r3949, %r3948;
	// end inline asm
	// begin inline asm
	mov.b32 %r3955, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3956, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3957, %r3857, %r3955;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3960, %r3957, %r3956;
	// end inline asm
	// begin inline asm
	mov.b32 %r3963, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3964, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3965, %r3860, %r3963;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3968, %r3965, %r3964;
	// end inline asm
	// begin inline asm
	mov.b32 %r3971, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3972, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3973, %r3863, %r3971;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3976, %r3973, %r3972;
	// end inline asm
	// begin inline asm
	mov.b32 %r3979, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3980, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3981, %r3866, %r3979;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3984, %r3981, %r3980;
	// end inline asm
	// begin inline asm
	mov.b32 %r3987, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3988, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3989, %r3869, %r3987;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3992, %r3989, %r3988;
	// end inline asm
	// begin inline asm
	mov.b32 %r3995, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3996, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3997, %r3872, %r3995;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4000, %r3997, %r3996;
	// end inline asm
	// begin inline asm
	mov.b32 %r4006, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4004, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4005, %r4006, %r4004;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4008, %r3880, %r4005;
	// end inline asm
	// begin inline asm
	mov.b32 %r4011, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4012, %r4006, %r4011;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4015, %r3888, %r4012;
	// end inline asm
	// begin inline asm
	mov.b32 %r4018, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4019, %r4006, %r4018;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4022, %r3896, %r4019;
	// end inline asm
	// begin inline asm
	mov.b32 %r4025, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4026, %r4006, %r4025;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4029, %r3904, %r4026;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4032, %r4008, %r4022, %r2239;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4036, %r4015, %r4029, %r2239;
	// end inline asm
	shl.b32 	%r4043, %r4036, 4;
	// begin inline asm
	lop3.b32 %r4040, %r2245, %r4032, %r4043, 202;
	// end inline asm
	xor.b32  	%r7806, %r4040, -2004318072;
	// begin inline asm
	mov.b32 %r4047, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4045, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4046, %r4047, %r4045;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4049, %r3912, %r4046;
	// end inline asm
	// begin inline asm
	mov.b32 %r4052, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4053, %r4047, %r4052;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4056, %r3920, %r4053;
	// end inline asm
	// begin inline asm
	mov.b32 %r4059, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4060, %r4047, %r4059;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4063, %r3928, %r4060;
	// end inline asm
	// begin inline asm
	mov.b32 %r4066, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4067, %r4047, %r4066;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4070, %r3936, %r4067;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4073, %r4049, %r4063, %r2239;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4077, %r4056, %r4070, %r2239;
	// end inline asm
	shl.b32 	%r4084, %r4077, 4;
	// begin inline asm
	lop3.b32 %r4081, %r2245, %r4073, %r4084, 202;
	// end inline asm
	xor.b32  	%r7807, %r4081, -2004318072;
	// begin inline asm
	mov.b32 %r4088, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4086, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4087, %r4088, %r4086;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4090, %r3944, %r4087;
	// end inline asm
	// begin inline asm
	mov.b32 %r4093, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4094, %r4088, %r4093;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4097, %r3952, %r4094;
	// end inline asm
	// begin inline asm
	mov.b32 %r4100, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4101, %r4088, %r4100;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4104, %r3960, %r4101;
	// end inline asm
	// begin inline asm
	mov.b32 %r4107, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4108, %r4088, %r4107;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4111, %r3968, %r4108;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4114, %r4090, %r4104, %r2239;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4118, %r4097, %r4111, %r2239;
	// end inline asm
	shl.b32 	%r4125, %r4118, 4;
	// begin inline asm
	lop3.b32 %r4122, %r2245, %r4114, %r4125, 202;
	// end inline asm
	xor.b32  	%r7808, %r4122, -2004318072;
	// begin inline asm
	mov.b32 %r4129, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4127, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4128, %r4129, %r4127;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4131, %r3976, %r4128;
	// end inline asm
	// begin inline asm
	mov.b32 %r4134, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4135, %r4129, %r4134;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4138, %r3984, %r4135;
	// end inline asm
	// begin inline asm
	mov.b32 %r4141, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4142, %r4129, %r4141;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4145, %r3992, %r4142;
	// end inline asm
	// begin inline asm
	mov.b32 %r4148, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4149, %r4129, %r4148;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4152, %r4000, %r4149;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4155, %r4131, %r4145, %r2239;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4159, %r4138, %r4152, %r2239;
	// end inline asm
	shl.b32 	%r4166, %r4159, 4;
	// begin inline asm
	lop3.b32 %r4163, %r2245, %r4155, %r4166, 202;
	// end inline asm
	xor.b32  	%r7809, %r4163, -2004318072;
	st.shared.u32 	[%rd145], %r7806;
	st.shared.u32 	[%rd146], %r7807;
	st.shared.u32 	[%rd147], %r7808;
	st.shared.u32 	[%rd148], %r7809;
	ld.shared.u32 	%r7938, [%rd86];
	ld.shared.u32 	%r7937, [%rd88];
	ld.shared.u32 	%r7936, [%rd90];
	ld.shared.u32 	%r7935, [%rd92];
	// begin inline asm
	mov.b32 %r4172, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4183, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r4171, %r7938, -2004318072;
	// begin inline asm
	lop3.b32 %r4169, %r578, %r4171, %r4172, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4173, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4174, %r4172, %r4173;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4177, %r4169, %r4174;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4180, %r589, %r4171, %r4183, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4184, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4185, %r4183, %r4184;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4188, %r4180, %r4185;
	// end inline asm
	shr.u32 	%r4193, %r4171, 8;
	// begin inline asm
	lop3.b32 %r4191, %r578, %r4193, %r4172, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4195, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4196, %r4172, %r4195;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4199, %r4191, %r4196;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4202, %r589, %r4193, %r4183, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4206, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4207, %r4183, %r4206;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4210, %r4202, %r4207;
	// end inline asm
	// begin inline asm
	mov.b32 %r4218, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4229, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r4217, %r7937, -2004318072;
	// begin inline asm
	lop3.b32 %r4215, %r578, %r4217, %r4218, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4219, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4220, %r4218, %r4219;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4223, %r4215, %r4220;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4226, %r589, %r4217, %r4229, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4230, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4231, %r4229, %r4230;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4234, %r4226, %r4231;
	// end inline asm
	shr.u32 	%r4239, %r4217, 8;
	// begin inline asm
	lop3.b32 %r4237, %r578, %r4239, %r4218, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4241, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4242, %r4218, %r4241;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4245, %r4237, %r4242;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4248, %r589, %r4239, %r4229, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4252, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4253, %r4229, %r4252;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4256, %r4248, %r4253;
	// end inline asm
	// begin inline asm
	mov.b32 %r4264, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4275, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r4263, %r7936, -2004318072;
	// begin inline asm
	lop3.b32 %r4261, %r578, %r4263, %r4264, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4265, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4266, %r4264, %r4265;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4269, %r4261, %r4266;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4272, %r589, %r4263, %r4275, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4276, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4277, %r4275, %r4276;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4280, %r4272, %r4277;
	// end inline asm
	shr.u32 	%r4285, %r4263, 8;
	// begin inline asm
	lop3.b32 %r4283, %r578, %r4285, %r4264, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4287, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4288, %r4264, %r4287;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4291, %r4283, %r4288;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4294, %r589, %r4285, %r4275, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4298, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4299, %r4275, %r4298;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4302, %r4294, %r4299;
	// end inline asm
	// begin inline asm
	mov.b32 %r4310, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4321, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r4309, %r7935, -2004318072;
	// begin inline asm
	lop3.b32 %r4307, %r578, %r4309, %r4310, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4311, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4312, %r4310, %r4311;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4315, %r4307, %r4312;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4318, %r589, %r4309, %r4321, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4322, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4323, %r4321, %r4322;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4326, %r4318, %r4323;
	// end inline asm
	shr.u32 	%r4331, %r4309, 8;
	// begin inline asm
	lop3.b32 %r4329, %r578, %r4331, %r4310, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4333, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4334, %r4310, %r4333;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4337, %r4329, %r4334;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4340, %r589, %r4331, %r4321, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4344, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4345, %r4321, %r4344;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4348, %r4340, %r4345;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4351, %r262;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4353, %r4351, %r4177;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4356, %r262;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4358, %r4356, %r4188;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4361, %r262;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4363, %r4361, %r4199;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4366, %r262;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4368, %r4366, %r4210;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4371, %r262;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4373, %r4371, %r4223;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4376, %r262;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4378, %r4376, %r4234;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4381, %r262;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4383, %r4381, %r4245;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4386, %r262;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4388, %r4386, %r4256;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4391, %r262;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4393, %r4391, %r4269;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4396, %r262;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4398, %r4396, %r4280;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4401, %r262;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4403, %r4401, %r4291;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4406, %r262;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4408, %r4406, %r4302;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4411, %r262;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4413, %r4411, %r4315;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4416, %r262;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4418, %r4416, %r4326;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4421, %r262;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4423, %r4421, %r4337;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4426, %r262;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4428, %r4426, %r4348;
	// end inline asm
	// begin inline asm
	mov.b32 %r4436, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4447, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4433, %r578, %r1371, %r4436, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4437, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4438, %r4436, %r4437;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4441, %r4433, %r4438;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4444, %r589, %r1371, %r4447, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4448, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4449, %r4447, %r4448;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4452, %r4444, %r4449;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4455, %r578, %r1393, %r4436, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4459, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4460, %r4436, %r4459;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4463, %r4455, %r4460;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4466, %r589, %r1393, %r4447, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4470, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4471, %r4447, %r4470;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4474, %r4466, %r4471;
	// end inline asm
	// begin inline asm
	mov.b32 %r4482, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4493, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4479, %r578, %r1417, %r4482, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4483, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4484, %r4482, %r4483;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4487, %r4479, %r4484;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4490, %r589, %r1417, %r4493, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4494, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4495, %r4493, %r4494;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4498, %r4490, %r4495;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4501, %r578, %r1439, %r4482, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4505, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4506, %r4482, %r4505;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4509, %r4501, %r4506;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4512, %r589, %r1439, %r4493, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4516, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4517, %r4493, %r4516;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4520, %r4512, %r4517;
	// end inline asm
	// begin inline asm
	mov.b32 %r4528, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4539, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4525, %r578, %r1463, %r4528, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4529, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4530, %r4528, %r4529;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4533, %r4525, %r4530;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4536, %r589, %r1463, %r4539, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4540, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4541, %r4539, %r4540;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4544, %r4536, %r4541;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4547, %r578, %r1485, %r4528, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4551, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4552, %r4528, %r4551;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4555, %r4547, %r4552;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4558, %r589, %r1485, %r4539, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4562, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4563, %r4539, %r4562;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4566, %r4558, %r4563;
	// end inline asm
	// begin inline asm
	mov.b32 %r4574, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4585, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4571, %r578, %r1509, %r4574, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4575, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4576, %r4574, %r4575;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4579, %r4571, %r4576;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4582, %r589, %r1509, %r4585, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4586, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4587, %r4585, %r4586;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4590, %r4582, %r4587;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4593, %r578, %r1531, %r4574, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4597, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4598, %r4574, %r4597;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4601, %r4593, %r4598;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4604, %r589, %r1531, %r4585, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4608, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4609, %r4585, %r4608;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4612, %r4604, %r4609;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4615, %r169, %r4441, %r4353;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4619, %r169, %r4452, %r4358;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4623, %r169, %r4463, %r4363;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4627, %r169, %r4474, %r4368;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4631, %r169, %r4487, %r4373;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4635, %r169, %r4498, %r4378;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4639, %r169, %r4509, %r4383;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4643, %r169, %r4520, %r4388;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4647, %r169, %r4533, %r4393;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4651, %r169, %r4544, %r4398;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4655, %r169, %r4555, %r4403;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4659, %r169, %r4566, %r4408;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4663, %r169, %r4579, %r4413;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4667, %r169, %r4590, %r4418;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4671, %r169, %r4601, %r4423;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4675, %r169, %r4612, %r4428;
	// end inline asm
	// begin inline asm
	mov.b32 %r4684, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4695, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4681, %r578, %r579, %r4684, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4685, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4686, %r4684, %r4685;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4689, %r4681, %r4686;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4692, %r589, %r579, %r4695, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4696, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4697, %r4695, %r4696;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4700, %r4692, %r4697;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4703, %r578, %r601, %r4684, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4707, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4708, %r4684, %r4707;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4711, %r4703, %r4708;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4714, %r589, %r601, %r4695, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4718, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4719, %r4695, %r4718;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4722, %r4714, %r4719;
	// end inline asm
	// begin inline asm
	mov.b32 %r4730, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4741, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4727, %r578, %r625, %r4730, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4731, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4732, %r4730, %r4731;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4735, %r4727, %r4732;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4738, %r589, %r625, %r4741, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4742, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4743, %r4741, %r4742;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4746, %r4738, %r4743;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4749, %r578, %r647, %r4730, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4753, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4754, %r4730, %r4753;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4757, %r4749, %r4754;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4760, %r589, %r647, %r4741, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4764, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4765, %r4741, %r4764;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4768, %r4760, %r4765;
	// end inline asm
	// begin inline asm
	mov.b32 %r4776, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4787, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4773, %r578, %r671, %r4776, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4777, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4778, %r4776, %r4777;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4781, %r4773, %r4778;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4784, %r589, %r671, %r4787, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4788, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4789, %r4787, %r4788;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4792, %r4784, %r4789;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4795, %r578, %r693, %r4776, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4799, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4800, %r4776, %r4799;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4803, %r4795, %r4800;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4806, %r589, %r693, %r4787, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4810, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4811, %r4787, %r4810;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4814, %r4806, %r4811;
	// end inline asm
	// begin inline asm
	mov.b32 %r4822, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4833, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4819, %r578, %r717, %r4822, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4823, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4824, %r4822, %r4823;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4827, %r4819, %r4824;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4830, %r589, %r717, %r4833, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4834, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4835, %r4833, %r4834;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4838, %r4830, %r4835;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4841, %r578, %r739, %r4822, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4845, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4846, %r4822, %r4845;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4849, %r4841, %r4846;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4852, %r589, %r739, %r4833, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4856, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4857, %r4833, %r4856;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4860, %r4852, %r4857;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4863, %r200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4865, %r4863, %r4689, %r4615;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4869, %r200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4871, %r4869, %r4700, %r4619;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4875, %r200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4877, %r4875, %r4711, %r4623;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4881, %r200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4883, %r4881, %r4722, %r4627;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4887, %r200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4889, %r4887, %r4735, %r4631;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4893, %r200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4895, %r4893, %r4746, %r4635;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4899, %r200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4901, %r4899, %r4757, %r4639;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4905, %r200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4907, %r4905, %r4768, %r4643;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4911, %r200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4913, %r4911, %r4781, %r4647;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4917, %r200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4919, %r4917, %r4792, %r4651;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4923, %r200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4925, %r4923, %r4803, %r4655;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4929, %r200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4931, %r4929, %r4814, %r4659;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4935, %r200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4937, %r4935, %r4827, %r4663;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4941, %r200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4943, %r4941, %r4838, %r4667;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4947, %r200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4949, %r4947, %r4849, %r4671;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4953, %r200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4955, %r4953, %r4860, %r4675;
	// end inline asm
	// begin inline asm
	mov.b32 %r4964, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4975, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4961, %r578, %r2375, %r4964, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4965, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4966, %r4964, %r4965;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4969, %r4961, %r4966;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4972, %r589, %r2375, %r4975, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4976, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4977, %r4975, %r4976;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4980, %r4972, %r4977;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4983, %r578, %r2397, %r4964, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4987, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4988, %r4964, %r4987;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4991, %r4983, %r4988;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4994, %r589, %r2397, %r4975, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4998, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4999, %r4975, %r4998;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5002, %r4994, %r4999;
	// end inline asm
	// begin inline asm
	mov.b32 %r5010, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5021, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5007, %r578, %r2421, %r5010, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5011, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5012, %r5010, %r5011;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5015, %r5007, %r5012;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5018, %r589, %r2421, %r5021, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5022, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5023, %r5021, %r5022;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5026, %r5018, %r5023;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5029, %r578, %r2443, %r5010, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5033, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5034, %r5010, %r5033;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5037, %r5029, %r5034;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5040, %r589, %r2443, %r5021, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5044, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5045, %r5021, %r5044;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5048, %r5040, %r5045;
	// end inline asm
	// begin inline asm
	mov.b32 %r5056, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5067, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5053, %r578, %r2467, %r5056, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5057, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5058, %r5056, %r5057;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5061, %r5053, %r5058;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5064, %r589, %r2467, %r5067, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5068, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5069, %r5067, %r5068;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5072, %r5064, %r5069;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5075, %r578, %r2489, %r5056, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5079, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5080, %r5056, %r5079;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5083, %r5075, %r5080;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5086, %r589, %r2489, %r5067, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5090, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5091, %r5067, %r5090;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5094, %r5086, %r5091;
	// end inline asm
	// begin inline asm
	mov.b32 %r5102, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5113, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5099, %r578, %r2513, %r5102, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5103, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5104, %r5102, %r5103;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5107, %r5099, %r5104;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5110, %r589, %r2513, %r5113, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5114, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5115, %r5113, %r5114;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5118, %r5110, %r5115;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5121, %r578, %r2535, %r5102, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5125, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5126, %r5102, %r5125;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5129, %r5121, %r5126;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5132, %r589, %r2535, %r5113, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5136, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5137, %r5113, %r5136;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5140, %r5132, %r5137;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5214, %r231, %r4969, %r4865;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5211, %r231, %r4980, %r4871;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5223, %r231, %r4991, %r4877;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5220, %r231, %r5002, %r4883;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5232, %r231, %r5015, %r4889;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5229, %r231, %r5026, %r4895;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5241, %r231, %r5037, %r4901;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5238, %r231, %r5048, %r4907;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5250, %r231, %r5061, %r4913;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5247, %r231, %r5072, %r4919;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5259, %r231, %r5083, %r4925;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5256, %r231, %r5094, %r4931;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5268, %r231, %r5107, %r4937;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5265, %r231, %r5118, %r4943;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5277, %r231, %r5129, %r4949;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5274, %r231, %r5140, %r4955;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5207, %r268;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5209, %r5207, %r5211;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5212, %r265, %r5214, %r5209;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5216, %r268;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5218, %r5216, %r5220;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5221, %r265, %r5223, %r5218;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5225, %r268;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5227, %r5225, %r5229;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5230, %r265, %r5232, %r5227;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5234, %r268;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5236, %r5234, %r5238;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5239, %r265, %r5241, %r5236;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5243, %r268;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5245, %r5243, %r5247;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5248, %r265, %r5250, %r5245;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5252, %r268;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5254, %r5252, %r5256;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5257, %r265, %r5259, %r5254;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5261, %r268;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5263, %r5261, %r5265;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5266, %r265, %r5268, %r5263;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5270, %r268;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5272, %r5270, %r5274;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5275, %r265, %r5277, %r5272;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5279, %r268, %r5214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5282, %r265, %r5211, %r5279;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5286, %r268, %r5223;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5289, %r265, %r5220, %r5286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5293, %r268, %r5232;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5296, %r265, %r5229, %r5293;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5300, %r268, %r5241;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5303, %r265, %r5238, %r5300;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5307, %r268, %r5250;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5310, %r265, %r5247, %r5307;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5314, %r268, %r5259;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5317, %r265, %r5256, %r5314;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5321, %r268, %r5268;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5324, %r265, %r5265, %r5321;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5328, %r268, %r5277;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5331, %r265, %r5274, %r5328;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5422, %r5419}, {%r271, %r277, %r274, %r280}, {%r5212, %r5282}, {%r7914, %r7914};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5431, %r5428}, {%r271, %r277, %r274, %r280}, {%r5221, %r5289}, {%r7914, %r7914};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5440, %r5437}, {%r271, %r277, %r274, %r280}, {%r5230, %r5296}, {%r7914, %r7914};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5449, %r5446}, {%r271, %r277, %r274, %r280}, {%r5239, %r5303}, {%r7914, %r7914};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5458, %r5455}, {%r271, %r277, %r274, %r280}, {%r5248, %r5310}, {%r7914, %r7914};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5467, %r5464}, {%r271, %r277, %r274, %r280}, {%r5257, %r5317}, {%r7914, %r7914};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5476, %r5473}, {%r271, %r277, %r274, %r280}, {%r5266, %r5324}, {%r7914, %r7914};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5485, %r5482}, {%r271, %r277, %r274, %r280}, {%r5275, %r5331}, {%r7914, %r7914};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5415, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5417, %r5415, %r5419;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5420, %r283, %r5422, %r5417;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5424, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5426, %r5424, %r5428;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5429, %r283, %r5431, %r5426;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5433, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5435, %r5433, %r5437;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5438, %r283, %r5440, %r5435;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5442, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5444, %r5442, %r5446;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5447, %r283, %r5449, %r5444;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5451, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5453, %r5451, %r5455;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5456, %r283, %r5458, %r5453;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5460, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5462, %r5460, %r5464;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5465, %r283, %r5467, %r5462;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5469, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5471, %r5469, %r5473;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5474, %r283, %r5476, %r5471;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5478, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5480, %r5478, %r5482;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5483, %r283, %r5485, %r5480;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5487, %r286, %r5422;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5490, %r283, %r5419, %r5487;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5494, %r286, %r5431;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5497, %r283, %r5428, %r5494;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5501, %r286, %r5440;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5504, %r283, %r5437, %r5501;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5508, %r286, %r5449;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5511, %r283, %r5446, %r5508;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5515, %r286, %r5458;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5518, %r283, %r5455, %r5515;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5522, %r286, %r5467;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5525, %r283, %r5464, %r5522;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5529, %r286, %r5476;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5532, %r283, %r5473, %r5529;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5536, %r286, %r5485;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5539, %r283, %r5482, %r5536;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5543, %r5544}, {%r289, %r295, %r292, %r298}, {%r5420, %r5490}, {%r7914, %r7914};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5553, %r5554}, {%r289, %r295, %r292, %r298}, {%r5429, %r5497}, {%r7914, %r7914};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5563, %r5564}, {%r289, %r295, %r292, %r298}, {%r5438, %r5504}, {%r7914, %r7914};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5573, %r5574}, {%r289, %r295, %r292, %r298}, {%r5447, %r5511}, {%r7914, %r7914};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5583, %r5584}, {%r289, %r295, %r292, %r298}, {%r5456, %r5518}, {%r7914, %r7914};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5593, %r5594}, {%r289, %r295, %r292, %r298}, {%r5465, %r5525}, {%r7914, %r7914};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5603, %r5604}, {%r289, %r295, %r292, %r298}, {%r5474, %r5532}, {%r7914, %r7914};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5613, %r5614}, {%r289, %r295, %r292, %r298}, {%r5483, %r5539}, {%r7914, %r7914};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5623, %r55, %r5543;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5626, %r55, %r5544;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5629, %r55, %r5553;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5632, %r55, %r5554;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5635, %r55, %r5563;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5638, %r55, %r5564;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5641, %r55, %r5573;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5644, %r55, %r5574;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5647, %r55, %r5583;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5650, %r55, %r5584;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5653, %r55, %r5593;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5656, %r55, %r5594;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5659, %r55, %r5603;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5662, %r55, %r5604;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5665, %r55, %r5613;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5668, %r55, %r5614;
	// end inline asm
	// begin inline asm
	mov.b32 %r5671, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5672, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5673, %r5623, %r5671;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5676, %r5673, %r5672;
	// end inline asm
	// begin inline asm
	mov.b32 %r5679, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5680, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5681, %r5626, %r5679;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5684, %r5681, %r5680;
	// end inline asm
	// begin inline asm
	mov.b32 %r5687, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5688, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5689, %r5629, %r5687;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5692, %r5689, %r5688;
	// end inline asm
	// begin inline asm
	mov.b32 %r5695, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5696, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5697, %r5632, %r5695;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5700, %r5697, %r5696;
	// end inline asm
	// begin inline asm
	mov.b32 %r5703, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5704, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5705, %r5635, %r5703;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5708, %r5705, %r5704;
	// end inline asm
	// begin inline asm
	mov.b32 %r5711, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5712, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5713, %r5638, %r5711;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5716, %r5713, %r5712;
	// end inline asm
	// begin inline asm
	mov.b32 %r5719, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5720, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5721, %r5641, %r5719;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5724, %r5721, %r5720;
	// end inline asm
	// begin inline asm
	mov.b32 %r5727, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5728, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5729, %r5644, %r5727;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5732, %r5729, %r5728;
	// end inline asm
	// begin inline asm
	mov.b32 %r5735, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5736, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5737, %r5647, %r5735;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5740, %r5737, %r5736;
	// end inline asm
	// begin inline asm
	mov.b32 %r5743, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5744, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5745, %r5650, %r5743;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5748, %r5745, %r5744;
	// end inline asm
	// begin inline asm
	mov.b32 %r5751, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5752, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5753, %r5653, %r5751;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5756, %r5753, %r5752;
	// end inline asm
	// begin inline asm
	mov.b32 %r5759, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5760, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5761, %r5656, %r5759;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5764, %r5761, %r5760;
	// end inline asm
	// begin inline asm
	mov.b32 %r5767, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5768, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5769, %r5659, %r5767;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5772, %r5769, %r5768;
	// end inline asm
	// begin inline asm
	mov.b32 %r5775, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5776, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5777, %r5662, %r5775;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5780, %r5777, %r5776;
	// end inline asm
	// begin inline asm
	mov.b32 %r5783, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5784, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5785, %r5665, %r5783;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5788, %r5785, %r5784;
	// end inline asm
	// begin inline asm
	mov.b32 %r5791, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5792, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5793, %r5668, %r5791;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5796, %r5793, %r5792;
	// end inline asm
	// begin inline asm
	mov.b32 %r5802, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5800, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5801, %r5802, %r5800;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5804, %r5676, %r5801;
	// end inline asm
	// begin inline asm
	mov.b32 %r5807, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5808, %r5802, %r5807;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5811, %r5684, %r5808;
	// end inline asm
	// begin inline asm
	mov.b32 %r5814, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5815, %r5802, %r5814;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5818, %r5692, %r5815;
	// end inline asm
	// begin inline asm
	mov.b32 %r5821, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5822, %r5802, %r5821;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5825, %r5700, %r5822;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5828, %r5804, %r5818, %r2239;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5832, %r5811, %r5825, %r2239;
	// end inline asm
	shl.b32 	%r5839, %r5832, 4;
	// begin inline asm
	lop3.b32 %r5836, %r2245, %r5828, %r5839, 202;
	// end inline asm
	xor.b32  	%r7810, %r5836, -2004318072;
	// begin inline asm
	mov.b32 %r5843, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5841, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5842, %r5843, %r5841;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5845, %r5708, %r5842;
	// end inline asm
	// begin inline asm
	mov.b32 %r5848, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5849, %r5843, %r5848;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5852, %r5716, %r5849;
	// end inline asm
	// begin inline asm
	mov.b32 %r5855, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5856, %r5843, %r5855;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5859, %r5724, %r5856;
	// end inline asm
	// begin inline asm
	mov.b32 %r5862, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5863, %r5843, %r5862;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5866, %r5732, %r5863;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5869, %r5845, %r5859, %r2239;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5873, %r5852, %r5866, %r2239;
	// end inline asm
	shl.b32 	%r5880, %r5873, 4;
	// begin inline asm
	lop3.b32 %r5877, %r2245, %r5869, %r5880, 202;
	// end inline asm
	xor.b32  	%r7811, %r5877, -2004318072;
	// begin inline asm
	mov.b32 %r5884, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5882, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5883, %r5884, %r5882;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5886, %r5740, %r5883;
	// end inline asm
	// begin inline asm
	mov.b32 %r5889, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5890, %r5884, %r5889;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5893, %r5748, %r5890;
	// end inline asm
	// begin inline asm
	mov.b32 %r5896, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5897, %r5884, %r5896;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5900, %r5756, %r5897;
	// end inline asm
	// begin inline asm
	mov.b32 %r5903, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5904, %r5884, %r5903;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5907, %r5764, %r5904;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5910, %r5886, %r5900, %r2239;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5914, %r5893, %r5907, %r2239;
	// end inline asm
	shl.b32 	%r5921, %r5914, 4;
	// begin inline asm
	lop3.b32 %r5918, %r2245, %r5910, %r5921, 202;
	// end inline asm
	xor.b32  	%r7812, %r5918, -2004318072;
	// begin inline asm
	mov.b32 %r5925, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5923, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5924, %r5925, %r5923;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5927, %r5772, %r5924;
	// end inline asm
	// begin inline asm
	mov.b32 %r5930, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5931, %r5925, %r5930;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5934, %r5780, %r5931;
	// end inline asm
	// begin inline asm
	mov.b32 %r5937, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5938, %r5925, %r5937;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5941, %r5788, %r5938;
	// end inline asm
	// begin inline asm
	mov.b32 %r5944, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5945, %r5925, %r5944;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5948, %r5796, %r5945;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5951, %r5927, %r5941, %r2239;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5955, %r5934, %r5948, %r2239;
	// end inline asm
	shl.b32 	%r5962, %r5955, 4;
	// begin inline asm
	lop3.b32 %r5959, %r2245, %r5951, %r5962, 202;
	// end inline asm
	xor.b32  	%r7813, %r5959, -2004318072;
	st.shared.u32 	[%rd145], %r7810;
	st.shared.u32 	[%rd146], %r7811;
	st.shared.u32 	[%rd147], %r7812;
	st.shared.u32 	[%rd148], %r7813;
	ld.shared.u32 	%r7934, [%rd86];
	ld.shared.u32 	%r7933, [%rd88];
	ld.shared.u32 	%r7932, [%rd90];
	ld.shared.u32 	%r7931, [%rd92];
	// begin inline asm
	mov.b32 %r5968, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5979, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r5967, %r7934, -2004318072;
	// begin inline asm
	lop3.b32 %r5965, %r578, %r5967, %r5968, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5969, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5970, %r5968, %r5969;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5973, %r5965, %r5970;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5976, %r589, %r5967, %r5979, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5980, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5981, %r5979, %r5980;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5984, %r5976, %r5981;
	// end inline asm
	shr.u32 	%r5989, %r5967, 8;
	// begin inline asm
	lop3.b32 %r5987, %r578, %r5989, %r5968, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5991, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5992, %r5968, %r5991;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5995, %r5987, %r5992;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5998, %r589, %r5989, %r5979, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6002, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6003, %r5979, %r6002;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6006, %r5998, %r6003;
	// end inline asm
	// begin inline asm
	mov.b32 %r6014, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6025, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r6013, %r7933, -2004318072;
	// begin inline asm
	lop3.b32 %r6011, %r578, %r6013, %r6014, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6015, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6016, %r6014, %r6015;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6019, %r6011, %r6016;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6022, %r589, %r6013, %r6025, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6026, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6027, %r6025, %r6026;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6030, %r6022, %r6027;
	// end inline asm
	shr.u32 	%r6035, %r6013, 8;
	// begin inline asm
	lop3.b32 %r6033, %r578, %r6035, %r6014, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6037, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6038, %r6014, %r6037;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6041, %r6033, %r6038;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6044, %r589, %r6035, %r6025, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6048, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6049, %r6025, %r6048;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6052, %r6044, %r6049;
	// end inline asm
	// begin inline asm
	mov.b32 %r6060, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6071, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r6059, %r7932, -2004318072;
	// begin inline asm
	lop3.b32 %r6057, %r578, %r6059, %r6060, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6061, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6062, %r6060, %r6061;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6065, %r6057, %r6062;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6068, %r589, %r6059, %r6071, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6072, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6073, %r6071, %r6072;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6076, %r6068, %r6073;
	// end inline asm
	shr.u32 	%r6081, %r6059, 8;
	// begin inline asm
	lop3.b32 %r6079, %r578, %r6081, %r6060, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6083, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6084, %r6060, %r6083;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6087, %r6079, %r6084;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6090, %r589, %r6081, %r6071, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6094, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6095, %r6071, %r6094;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6098, %r6090, %r6095;
	// end inline asm
	// begin inline asm
	mov.b32 %r6106, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6117, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r6105, %r7931, -2004318072;
	// begin inline asm
	lop3.b32 %r6103, %r578, %r6105, %r6106, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6107, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6108, %r6106, %r6107;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6111, %r6103, %r6108;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6114, %r589, %r6105, %r6117, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6118, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6119, %r6117, %r6118;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6122, %r6114, %r6119;
	// end inline asm
	shr.u32 	%r6127, %r6105, 8;
	// begin inline asm
	lop3.b32 %r6125, %r578, %r6127, %r6106, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6129, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6130, %r6106, %r6129;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6133, %r6125, %r6130;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6136, %r589, %r6127, %r6117, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6140, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6141, %r6117, %r6140;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6144, %r6136, %r6141;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6147, %r262;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6149, %r6147, %r5973;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6152, %r262;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6154, %r6152, %r5984;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6157, %r262;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6159, %r6157, %r5995;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6162, %r262;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6164, %r6162, %r6006;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6167, %r262;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6169, %r6167, %r6019;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6172, %r262;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6174, %r6172, %r6030;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6177, %r262;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6179, %r6177, %r6041;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6182, %r262;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6184, %r6182, %r6052;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6187, %r262;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6189, %r6187, %r6065;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6192, %r262;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6194, %r6192, %r6076;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6197, %r262;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6199, %r6197, %r6087;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6202, %r262;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6204, %r6202, %r6098;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6207, %r262;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6209, %r6207, %r6111;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6212, %r262;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6214, %r6212, %r6122;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6217, %r262;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6219, %r6217, %r6133;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6222, %r262;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6224, %r6222, %r6144;
	// end inline asm
	// begin inline asm
	mov.b32 %r6232, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6243, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6229, %r578, %r579, %r6232, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6233, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6234, %r6232, %r6233;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6237, %r6229, %r6234;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6240, %r589, %r579, %r6243, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6244, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6245, %r6243, %r6244;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6248, %r6240, %r6245;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6251, %r578, %r601, %r6232, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6255, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6256, %r6232, %r6255;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6259, %r6251, %r6256;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6262, %r589, %r601, %r6243, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6266, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6267, %r6243, %r6266;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6270, %r6262, %r6267;
	// end inline asm
	// begin inline asm
	mov.b32 %r6278, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6289, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6275, %r578, %r625, %r6278, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6279, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6280, %r6278, %r6279;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6283, %r6275, %r6280;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6286, %r589, %r625, %r6289, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6290, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6291, %r6289, %r6290;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6294, %r6286, %r6291;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6297, %r578, %r647, %r6278, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6301, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6302, %r6278, %r6301;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6305, %r6297, %r6302;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6308, %r589, %r647, %r6289, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6312, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6313, %r6289, %r6312;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6316, %r6308, %r6313;
	// end inline asm
	// begin inline asm
	mov.b32 %r6324, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6335, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6321, %r578, %r671, %r6324, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6325, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6326, %r6324, %r6325;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6329, %r6321, %r6326;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6332, %r589, %r671, %r6335, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6336, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6337, %r6335, %r6336;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6340, %r6332, %r6337;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6343, %r578, %r693, %r6324, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6347, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6348, %r6324, %r6347;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6351, %r6343, %r6348;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6354, %r589, %r693, %r6335, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6358, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6359, %r6335, %r6358;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6362, %r6354, %r6359;
	// end inline asm
	// begin inline asm
	mov.b32 %r6370, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6381, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6367, %r578, %r717, %r6370, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6371, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6372, %r6370, %r6371;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6375, %r6367, %r6372;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6378, %r589, %r717, %r6381, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6382, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6383, %r6381, %r6382;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6386, %r6378, %r6383;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6389, %r578, %r739, %r6370, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6393, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6394, %r6370, %r6393;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6397, %r6389, %r6394;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6400, %r589, %r739, %r6381, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6404, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6405, %r6381, %r6404;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6408, %r6400, %r6405;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6411, %r169, %r6237, %r6149;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6415, %r169, %r6248, %r6154;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6419, %r169, %r6259, %r6159;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6423, %r169, %r6270, %r6164;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6427, %r169, %r6283, %r6169;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6431, %r169, %r6294, %r6174;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6435, %r169, %r6305, %r6179;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6439, %r169, %r6316, %r6184;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6443, %r169, %r6329, %r6189;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6447, %r169, %r6340, %r6194;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6451, %r169, %r6351, %r6199;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6455, %r169, %r6362, %r6204;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6459, %r169, %r6375, %r6209;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6463, %r169, %r6386, %r6214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6467, %r169, %r6397, %r6219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6471, %r169, %r6408, %r6224;
	// end inline asm
	// begin inline asm
	mov.b32 %r6480, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6491, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6477, %r578, %r2375, %r6480, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6481, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6482, %r6480, %r6481;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6485, %r6477, %r6482;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6488, %r589, %r2375, %r6491, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6492, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6493, %r6491, %r6492;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6496, %r6488, %r6493;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6499, %r578, %r2397, %r6480, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6503, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6504, %r6480, %r6503;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6507, %r6499, %r6504;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6510, %r589, %r2397, %r6491, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6514, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6515, %r6491, %r6514;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6518, %r6510, %r6515;
	// end inline asm
	// begin inline asm
	mov.b32 %r6526, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6537, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6523, %r578, %r2421, %r6526, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6527, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6528, %r6526, %r6527;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6531, %r6523, %r6528;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6534, %r589, %r2421, %r6537, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6538, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6539, %r6537, %r6538;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6542, %r6534, %r6539;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6545, %r578, %r2443, %r6526, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6549, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6550, %r6526, %r6549;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6553, %r6545, %r6550;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6556, %r589, %r2443, %r6537, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6560, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6561, %r6537, %r6560;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6564, %r6556, %r6561;
	// end inline asm
	// begin inline asm
	mov.b32 %r6572, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6583, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6569, %r578, %r2467, %r6572, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6573, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6574, %r6572, %r6573;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6577, %r6569, %r6574;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6580, %r589, %r2467, %r6583, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6584, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6585, %r6583, %r6584;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6588, %r6580, %r6585;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6591, %r578, %r2489, %r6572, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6595, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6596, %r6572, %r6595;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6599, %r6591, %r6596;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6602, %r589, %r2489, %r6583, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6606, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6607, %r6583, %r6606;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6610, %r6602, %r6607;
	// end inline asm
	// begin inline asm
	mov.b32 %r6618, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6629, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6615, %r578, %r2513, %r6618, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6619, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6620, %r6618, %r6619;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6623, %r6615, %r6620;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6626, %r589, %r2513, %r6629, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6630, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6631, %r6629, %r6630;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6634, %r6626, %r6631;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6637, %r578, %r2535, %r6618, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6641, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6642, %r6618, %r6641;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6645, %r6637, %r6642;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6648, %r589, %r2535, %r6629, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6652, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6653, %r6629, %r6652;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6656, %r6648, %r6653;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6659, %r200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6661, %r6659, %r6485, %r6411;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6665, %r200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6667, %r6665, %r6496, %r6415;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6671, %r200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6673, %r6671, %r6507, %r6419;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6677, %r200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6679, %r6677, %r6518, %r6423;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6683, %r200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6685, %r6683, %r6531, %r6427;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6689, %r200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6691, %r6689, %r6542, %r6431;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6695, %r200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6697, %r6695, %r6553, %r6435;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6701, %r200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6703, %r6701, %r6564, %r6439;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6707, %r200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6709, %r6707, %r6577, %r6443;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6713, %r200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6715, %r6713, %r6588, %r6447;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6719, %r200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6721, %r6719, %r6599, %r6451;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6725, %r200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6727, %r6725, %r6610, %r6455;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6731, %r200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6733, %r6731, %r6623, %r6459;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6737, %r200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6739, %r6737, %r6634, %r6463;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6743, %r200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6745, %r6743, %r6645, %r6467;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6749, %r200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6751, %r6749, %r6656, %r6471;
	// end inline asm
	// begin inline asm
	mov.b32 %r6760, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6771, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6757, %r578, %r4171, %r6760, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6761, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6762, %r6760, %r6761;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6765, %r6757, %r6762;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6768, %r589, %r4171, %r6771, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6772, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6773, %r6771, %r6772;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6776, %r6768, %r6773;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6779, %r578, %r4193, %r6760, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6783, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6784, %r6760, %r6783;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6787, %r6779, %r6784;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6790, %r589, %r4193, %r6771, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6794, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6795, %r6771, %r6794;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6798, %r6790, %r6795;
	// end inline asm
	// begin inline asm
	mov.b32 %r6806, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6817, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6803, %r578, %r4217, %r6806, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6807, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6808, %r6806, %r6807;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6811, %r6803, %r6808;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6814, %r589, %r4217, %r6817, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6818, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6819, %r6817, %r6818;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6822, %r6814, %r6819;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6825, %r578, %r4239, %r6806, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6829, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6830, %r6806, %r6829;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6833, %r6825, %r6830;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6836, %r589, %r4239, %r6817, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6840, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6841, %r6817, %r6840;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6844, %r6836, %r6841;
	// end inline asm
	// begin inline asm
	mov.b32 %r6852, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6863, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6849, %r578, %r4263, %r6852, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6853, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6854, %r6852, %r6853;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6857, %r6849, %r6854;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6860, %r589, %r4263, %r6863, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6864, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6865, %r6863, %r6864;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6868, %r6860, %r6865;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6871, %r578, %r4285, %r6852, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6875, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6876, %r6852, %r6875;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6879, %r6871, %r6876;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6882, %r589, %r4285, %r6863, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6886, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6887, %r6863, %r6886;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6890, %r6882, %r6887;
	// end inline asm
	// begin inline asm
	mov.b32 %r6898, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6909, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6895, %r578, %r4309, %r6898, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6899, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6900, %r6898, %r6899;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6903, %r6895, %r6900;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6906, %r589, %r4309, %r6909, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6910, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6911, %r6909, %r6910;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6914, %r6906, %r6911;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6917, %r578, %r4331, %r6898, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6921, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6922, %r6898, %r6921;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6925, %r6917, %r6922;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6928, %r589, %r4331, %r6909, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6932, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6933, %r6909, %r6932;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6936, %r6928, %r6933;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7010, %r231, %r6765, %r6661;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7007, %r231, %r6776, %r6667;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7019, %r231, %r6787, %r6673;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7016, %r231, %r6798, %r6679;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7028, %r231, %r6811, %r6685;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7025, %r231, %r6822, %r6691;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7037, %r231, %r6833, %r6697;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7034, %r231, %r6844, %r6703;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7046, %r231, %r6857, %r6709;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7043, %r231, %r6868, %r6715;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7055, %r231, %r6879, %r6721;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7052, %r231, %r6890, %r6727;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7064, %r231, %r6903, %r6733;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7061, %r231, %r6914, %r6739;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7073, %r231, %r6925, %r6745;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7070, %r231, %r6936, %r6751;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7003, %r268;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7005, %r7003, %r7007;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7008, %r265, %r7010, %r7005;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7012, %r268;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7014, %r7012, %r7016;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7017, %r265, %r7019, %r7014;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7021, %r268;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7023, %r7021, %r7025;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7026, %r265, %r7028, %r7023;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7030, %r268;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7032, %r7030, %r7034;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7035, %r265, %r7037, %r7032;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7039, %r268;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7041, %r7039, %r7043;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7044, %r265, %r7046, %r7041;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7048, %r268;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7050, %r7048, %r7052;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7053, %r265, %r7055, %r7050;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7057, %r268;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7059, %r7057, %r7061;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7062, %r265, %r7064, %r7059;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7066, %r268;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7068, %r7066, %r7070;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7071, %r265, %r7073, %r7068;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7075, %r268, %r7010;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7078, %r265, %r7007, %r7075;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7082, %r268, %r7019;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7085, %r265, %r7016, %r7082;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7089, %r268, %r7028;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7092, %r265, %r7025, %r7089;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7096, %r268, %r7037;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7099, %r265, %r7034, %r7096;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7103, %r268, %r7046;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7106, %r265, %r7043, %r7103;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7110, %r268, %r7055;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7113, %r265, %r7052, %r7110;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7117, %r268, %r7064;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7120, %r265, %r7061, %r7117;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7124, %r268, %r7073;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7127, %r265, %r7070, %r7124;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7218, %r7215}, {%r271, %r277, %r274, %r280}, {%r7008, %r7078}, {%r7914, %r7914};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7227, %r7224}, {%r271, %r277, %r274, %r280}, {%r7017, %r7085}, {%r7914, %r7914};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7236, %r7233}, {%r271, %r277, %r274, %r280}, {%r7026, %r7092}, {%r7914, %r7914};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7245, %r7242}, {%r271, %r277, %r274, %r280}, {%r7035, %r7099}, {%r7914, %r7914};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7254, %r7251}, {%r271, %r277, %r274, %r280}, {%r7044, %r7106}, {%r7914, %r7914};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7263, %r7260}, {%r271, %r277, %r274, %r280}, {%r7053, %r7113}, {%r7914, %r7914};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7272, %r7269}, {%r271, %r277, %r274, %r280}, {%r7062, %r7120}, {%r7914, %r7914};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7281, %r7278}, {%r271, %r277, %r274, %r280}, {%r7071, %r7127}, {%r7914, %r7914};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7211, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7213, %r7211, %r7215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7216, %r283, %r7218, %r7213;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7220, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7222, %r7220, %r7224;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7225, %r283, %r7227, %r7222;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7229, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7231, %r7229, %r7233;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7234, %r283, %r7236, %r7231;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7238, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7240, %r7238, %r7242;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7243, %r283, %r7245, %r7240;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7247, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7249, %r7247, %r7251;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7252, %r283, %r7254, %r7249;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7256, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7258, %r7256, %r7260;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7261, %r283, %r7263, %r7258;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7265, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7267, %r7265, %r7269;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7270, %r283, %r7272, %r7267;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7274, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7276, %r7274, %r7278;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7279, %r283, %r7281, %r7276;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7283, %r286, %r7218;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7286, %r283, %r7215, %r7283;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7290, %r286, %r7227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7293, %r283, %r7224, %r7290;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7297, %r286, %r7236;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7300, %r283, %r7233, %r7297;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7304, %r286, %r7245;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7307, %r283, %r7242, %r7304;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7311, %r286, %r7254;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7314, %r283, %r7251, %r7311;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7318, %r286, %r7263;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7321, %r283, %r7260, %r7318;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7325, %r286, %r7272;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7328, %r283, %r7269, %r7325;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7332, %r286, %r7281;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7335, %r283, %r7278, %r7332;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7339, %r7340}, {%r289, %r295, %r292, %r298}, {%r7216, %r7286}, {%r7914, %r7914};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7349, %r7350}, {%r289, %r295, %r292, %r298}, {%r7225, %r7293}, {%r7914, %r7914};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7359, %r7360}, {%r289, %r295, %r292, %r298}, {%r7234, %r7300}, {%r7914, %r7914};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7369, %r7370}, {%r289, %r295, %r292, %r298}, {%r7243, %r7307}, {%r7914, %r7914};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7379, %r7380}, {%r289, %r295, %r292, %r298}, {%r7252, %r7314}, {%r7914, %r7914};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7389, %r7390}, {%r289, %r295, %r292, %r298}, {%r7261, %r7321}, {%r7914, %r7914};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7399, %r7400}, {%r289, %r295, %r292, %r298}, {%r7270, %r7328}, {%r7914, %r7914};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7409, %r7410}, {%r289, %r295, %r292, %r298}, {%r7279, %r7335}, {%r7914, %r7914};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7419, %r55, %r7339;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7422, %r55, %r7340;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7425, %r55, %r7349;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7428, %r55, %r7350;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7431, %r55, %r7359;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7434, %r55, %r7360;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7437, %r55, %r7369;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7440, %r55, %r7370;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7443, %r55, %r7379;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7446, %r55, %r7380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7449, %r55, %r7389;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7452, %r55, %r7390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7455, %r55, %r7399;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7458, %r55, %r7400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7461, %r55, %r7409;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7464, %r55, %r7410;
	// end inline asm
	// begin inline asm
	mov.b32 %r7467, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7468, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7469, %r7419, %r7467;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7472, %r7469, %r7468;
	// end inline asm
	// begin inline asm
	mov.b32 %r7475, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7476, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7477, %r7422, %r7475;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7480, %r7477, %r7476;
	// end inline asm
	// begin inline asm
	mov.b32 %r7483, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7484, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7485, %r7425, %r7483;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7488, %r7485, %r7484;
	// end inline asm
	// begin inline asm
	mov.b32 %r7491, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7492, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7493, %r7428, %r7491;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7496, %r7493, %r7492;
	// end inline asm
	// begin inline asm
	mov.b32 %r7499, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7500, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7501, %r7431, %r7499;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7504, %r7501, %r7500;
	// end inline asm
	// begin inline asm
	mov.b32 %r7507, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7508, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7509, %r7434, %r7507;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7512, %r7509, %r7508;
	// end inline asm
	// begin inline asm
	mov.b32 %r7515, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7516, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7517, %r7437, %r7515;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7520, %r7517, %r7516;
	// end inline asm
	// begin inline asm
	mov.b32 %r7523, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7524, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7525, %r7440, %r7523;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7528, %r7525, %r7524;
	// end inline asm
	// begin inline asm
	mov.b32 %r7531, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7532, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7533, %r7443, %r7531;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7536, %r7533, %r7532;
	// end inline asm
	// begin inline asm
	mov.b32 %r7539, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7540, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7541, %r7446, %r7539;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7544, %r7541, %r7540;
	// end inline asm
	// begin inline asm
	mov.b32 %r7547, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7548, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7549, %r7449, %r7547;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7552, %r7549, %r7548;
	// end inline asm
	// begin inline asm
	mov.b32 %r7555, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7556, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7557, %r7452, %r7555;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7560, %r7557, %r7556;
	// end inline asm
	// begin inline asm
	mov.b32 %r7563, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7564, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7565, %r7455, %r7563;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7568, %r7565, %r7564;
	// end inline asm
	// begin inline asm
	mov.b32 %r7571, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7572, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7573, %r7458, %r7571;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7576, %r7573, %r7572;
	// end inline asm
	// begin inline asm
	mov.b32 %r7579, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7580, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7581, %r7461, %r7579;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7584, %r7581, %r7580;
	// end inline asm
	// begin inline asm
	mov.b32 %r7587, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7588, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7589, %r7464, %r7587;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7592, %r7589, %r7588;
	// end inline asm
	// begin inline asm
	mov.b32 %r7598, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r7596, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7597, %r7598, %r7596;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7600, %r7472, %r7597;
	// end inline asm
	// begin inline asm
	mov.b32 %r7603, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7604, %r7598, %r7603;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7607, %r7480, %r7604;
	// end inline asm
	// begin inline asm
	mov.b32 %r7610, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7611, %r7598, %r7610;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7614, %r7488, %r7611;
	// end inline asm
	// begin inline asm
	mov.b32 %r7617, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7618, %r7598, %r7617;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7621, %r7496, %r7618;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7624, %r7600, %r7614, %r2239;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7628, %r7607, %r7621, %r2239;
	// end inline asm
	shl.b32 	%r7635, %r7628, 4;
	// begin inline asm
	lop3.b32 %r7632, %r2245, %r7624, %r7635, 202;
	// end inline asm
	xor.b32  	%r7814, %r7632, -2004318072;
	// begin inline asm
	mov.b32 %r7639, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r7637, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7638, %r7639, %r7637;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7641, %r7504, %r7638;
	// end inline asm
	// begin inline asm
	mov.b32 %r7644, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7645, %r7639, %r7644;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7648, %r7512, %r7645;
	// end inline asm
	// begin inline asm
	mov.b32 %r7651, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7652, %r7639, %r7651;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7655, %r7520, %r7652;
	// end inline asm
	// begin inline asm
	mov.b32 %r7658, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7659, %r7639, %r7658;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7662, %r7528, %r7659;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7665, %r7641, %r7655, %r2239;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7669, %r7648, %r7662, %r2239;
	// end inline asm
	shl.b32 	%r7676, %r7669, 4;
	// begin inline asm
	lop3.b32 %r7673, %r2245, %r7665, %r7676, 202;
	// end inline asm
	xor.b32  	%r7815, %r7673, -2004318072;
	// begin inline asm
	mov.b32 %r7680, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r7678, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7679, %r7680, %r7678;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7682, %r7536, %r7679;
	// end inline asm
	// begin inline asm
	mov.b32 %r7685, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7686, %r7680, %r7685;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7689, %r7544, %r7686;
	// end inline asm
	// begin inline asm
	mov.b32 %r7692, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7693, %r7680, %r7692;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7696, %r7552, %r7693;
	// end inline asm
	// begin inline asm
	mov.b32 %r7699, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7700, %r7680, %r7699;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7703, %r7560, %r7700;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7706, %r7682, %r7696, %r2239;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7710, %r7689, %r7703, %r2239;
	// end inline asm
	shl.b32 	%r7717, %r7710, 4;
	// begin inline asm
	lop3.b32 %r7714, %r2245, %r7706, %r7717, 202;
	// end inline asm
	xor.b32  	%r7816, %r7714, -2004318072;
	// begin inline asm
	mov.b32 %r7721, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r7719, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7720, %r7721, %r7719;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7723, %r7568, %r7720;
	// end inline asm
	// begin inline asm
	mov.b32 %r7726, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7727, %r7721, %r7726;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7730, %r7576, %r7727;
	// end inline asm
	// begin inline asm
	mov.b32 %r7733, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7734, %r7721, %r7733;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7737, %r7584, %r7734;
	// end inline asm
	// begin inline asm
	mov.b32 %r7740, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7741, %r7721, %r7740;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7744, %r7592, %r7741;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7747, %r7723, %r7737, %r2239;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7751, %r7730, %r7744, %r2239;
	// end inline asm
	shl.b32 	%r7758, %r7751, 4;
	// begin inline asm
	lop3.b32 %r7755, %r2245, %r7747, %r7758, 202;
	// end inline asm
	xor.b32  	%r7817, %r7755, -2004318072;
	st.shared.u32 	[%rd145], %r7814;
	st.shared.u32 	[%rd146], %r7815;
	st.shared.u32 	[%rd147], %r7816;
	st.shared.u32 	[%rd148], %r7817;
	add.s32 	%r7930, %r7930, 64;
	add.s64 	%rd148, %rd148, 8324;
	add.s64 	%rd147, %rd147, 8324;
	add.s64 	%rd146, %rd146, 8324;
	add.s64 	%rd145, %rd145, 8324;
	add.s32 	%r7929, %r7929, 1;
	setp.eq.s32 	%p164, %r7930, 256;
	@%p164 bra 	$L__BB0_31;
	bra.uni 	$L__BB0_30;
$L__BB0_31:                             // %guard_exit17471
                                        //   in Loop: Header=BB0_29 Depth=1
	bar.sync 	0;
	ld.shared.u32 	%r7823, [%rd5];
	ld.shared.u32 	%r7824, [%rd6+128];
	ld.shared.u32 	%r7831, [%rd6+4];
	ld.shared.u32 	%r7832, [%rd6+132];
	ld.shared.u32 	%r7839, [%rd5+8324];
	ld.shared.u32 	%r7840, [%rd6+8452];
	ld.shared.u32 	%r7847, [%rd6+8328];
	ld.shared.u32 	%r7848, [%rd6+8456];
	ld.shared.u32 	%r7855, [%rd5+16648];
	ld.shared.u32 	%r7856, [%rd6+16776];
	ld.shared.u32 	%r7863, [%rd6+16652];
	ld.shared.u32 	%r7864, [%rd6+16780];
	ld.shared.u32 	%r7871, [%rd5+24972];
	ld.shared.u32 	%r7872, [%rd6+25100];
	ld.shared.u32 	%r7879, [%rd6+24976];
	ld.shared.u32 	%r7880, [%rd6+25104];
	// begin inline asm
	prmt.b32 %r7818, %r7823, %r7824, %r489;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7822, %r7823, %r7824, %r493;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7826, %r7831, %r7832, %r489;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7830, %r7831, %r7832, %r493;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7834, %r7839, %r7840, %r489;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7838, %r7839, %r7840, %r493;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7842, %r7847, %r7848, %r489;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7846, %r7847, %r7848, %r493;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7850, %r7855, %r7856, %r489;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7854, %r7855, %r7856, %r493;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7858, %r7863, %r7864, %r489;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7862, %r7863, %r7864, %r493;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7866, %r7871, %r7872, %r489;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7870, %r7871, %r7872, %r493;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7874, %r7879, %r7880, %r489;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7878, %r7879, %r7880, %r493;
	// end inline asm
	selp.b32 	%r7882, %r7822, %r7818, %p151;
	shfl.sync.bfly.b32	%r98, %r7882, 8, 31, -1;
	selp.b32 	%r7883, %r7830, %r7826, %p151;
	shfl.sync.bfly.b32	%r99, %r7883, 8, 31, -1;
	selp.b32 	%r7884, %r7838, %r7834, %p151;
	shfl.sync.bfly.b32	%r7885, %r7884, 8, 31, -1;
	selp.b32 	%r7886, %r7846, %r7842, %p151;
	shfl.sync.bfly.b32	%r7887, %r7886, 8, 31, -1;
	selp.b32 	%r7888, %r7854, %r7850, %p151;
	shfl.sync.bfly.b32	%r7889, %r7888, 8, 31, -1;
	selp.b32 	%r7890, %r7862, %r7858, %p151;
	shfl.sync.bfly.b32	%r7891, %r7890, 8, 31, -1;
	selp.b32 	%r7892, %r7870, %r7866, %p151;
	shfl.sync.bfly.b32	%r7893, %r7892, 8, 31, -1;
	selp.b32 	%r7894, %r7878, %r7874, %p151;
	shfl.sync.bfly.b32	%r7895, %r7894, 8, 31, -1;
	and.b32  	%r7896, %r44, 32512;
	setp.eq.s32 	%p166, %r7896, 0;
	shl.b32 	%r7915, %r44, 13;
	@%p166 bra 	$L__BB0_33;
// %bb.32:                              // %pass16657
                                        //   in Loop: Header=BB0_29 Depth=1
	selp.b32 	%r7897, %r99, %r7830, %p151;
	selp.b32 	%r7898, %r7826, %r99, %p151;
	selp.b32 	%r7899, %r98, %r7822, %p151;
	selp.b32 	%r7900, %r7818, %r98, %p151;
	or.b32  	%r7902, %r31, %r7915;
	cvt.s64.s32 	%rd93, %r7902;
	add.s64 	%rd94, %rd93, %rd7;
	shr.u64 	%rd95, %rd94, 36;
	add.s64 	%rd96, %rd94, %rd95;
	shr.s64 	%rd97, %rd96, 28;
	setp.lt.s64 	%p168, %rd94, 0;
	and.b64  	%rd98, %rd96, -268435456;
	setp.ne.s64 	%p169, %rd98, %rd94;
	and.pred  	%p170, %p168, %p169;
	selp.u64 	%rd99, 1, 0, %p170;
	sub.s64 	%rd100, %rd99, %rd97;
	shl.b64 	%rd101, %rd100, 28;
	add.s64 	%rd102, %rd101, %rd94;
	shl.b64 	%rd103, %rd102, 2;
	add.s64 	%rd104, %rd3, %rd103;
	st.global.v4.u32 	[%rd104], {%r7900, %r7898, %r7899, %r7897};
$L__BB0_33:                             // %pass16670
                                        //   in Loop: Header=BB0_29 Depth=1
	or.b32  	%r92, %r44, 64;
	setp.lt.u32 	%p171, %r92, 192;
	@%p171 bra 	$L__BB0_35;
// %bb.34:                              // %pass16764
                                        //   in Loop: Header=BB0_29 Depth=1
	selp.b32 	%r100, %r7834, %r7885, %p151;
	selp.b32 	%r101, %r7885, %r7838, %p151;
	selp.b32 	%r102, %r7842, %r7887, %p151;
	selp.b32 	%r103, %r7887, %r7846, %p151;
	shl.b32 	%r7903, %r92, 13;
	or.b32  	%r7904, %r31, %r7903;
	cvt.s64.s32 	%rd105, %r7904;
	add.s64 	%rd106, %rd105, %rd7;
	shr.u64 	%rd107, %rd106, 36;
	add.s64 	%rd108, %rd106, %rd107;
	shr.s64 	%rd109, %rd108, 28;
	setp.lt.s64 	%p172, %rd106, 0;
	and.b64  	%rd110, %rd108, -268435456;
	setp.ne.s64 	%p173, %rd110, %rd106;
	and.pred  	%p174, %p172, %p173;
	selp.u64 	%rd111, 1, 0, %p174;
	sub.s64 	%rd112, %rd111, %rd109;
	shl.b64 	%rd113, %rd112, 28;
	add.s64 	%rd114, %rd113, %rd106;
	shl.b64 	%rd115, %rd114, 2;
	add.s64 	%rd116, %rd3, %rd115;
	st.global.v4.u32 	[%rd116], {%r100, %r102, %r101, %r103};
$L__BB0_35:                             // %pass16777
                                        //   in Loop: Header=BB0_29 Depth=1
	or.b32  	%r93, %r44, 128;
	selp.b32 	%r108, %r7866, %r7893, %p151;
	selp.b32 	%r109, %r7893, %r7870, %p151;
	selp.b32 	%r110, %r7874, %r7895, %p151;
	selp.b32 	%r111, %r7895, %r7878, %p151;
	setp.lt.u32 	%p175, %r93, 192;
	@%p175 bra 	$L__BB0_37;
// %bb.36:                              // %pass16871
                                        //   in Loop: Header=BB0_29 Depth=1
	selp.b32 	%r104, %r7850, %r7889, %p151;
	selp.b32 	%r105, %r7889, %r7854, %p151;
	selp.b32 	%r106, %r7858, %r7891, %p151;
	selp.b32 	%r107, %r7891, %r7862, %p151;
	shl.b32 	%r7905, %r93, 13;
	or.b32  	%r7906, %r31, %r7905;
	cvt.s64.s32 	%rd117, %r7906;
	add.s64 	%rd118, %rd117, %rd7;
	shr.u64 	%rd119, %rd118, 36;
	add.s64 	%rd120, %rd118, %rd119;
	shr.s64 	%rd121, %rd120, 28;
	setp.lt.s64 	%p176, %rd118, 0;
	and.b64  	%rd122, %rd120, -268435456;
	setp.ne.s64 	%p177, %rd122, %rd118;
	and.pred  	%p178, %p176, %p177;
	selp.u64 	%rd123, 1, 0, %p178;
	sub.s64 	%rd124, %rd123, %rd121;
	shl.b64 	%rd125, %rd124, 28;
	add.s64 	%rd126, %rd125, %rd118;
	shl.b64 	%rd127, %rd126, 2;
	add.s64 	%rd128, %rd3, %rd127;
	st.global.v4.u32 	[%rd128], {%r104, %r106, %r105, %r107};
	bra.uni 	$L__BB0_37;
$L__BB0_38:                             // %L40519
	st.global.u32 	[%rd4], %r7914;
	ret;
$L__BB0_7:                              // %L167
	mov.u32 	%r7913, 2;
	st.global.u32 	[%rd4], %r7913;
	mov.u64 	%rd143, exception3423;
	cvta.global.u64 	%rd144, %rd143;
	{ // callseq 4, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd144;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 4
	{ // callseq 5, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd35;
	st.param.b32 	[param0+8], %r112;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 5
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
$L__BB0_10:                             // %L275
	mov.u32 	%r7912, 3;
	st.global.u32 	[%rd4], %r7912;
	mov.u64 	%rd141, exception3423;
	cvta.global.u64 	%rd142, %rd141;
	{ // callseq 2, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd142;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 2
	{ // callseq 3, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd35;
	st.param.b32 	[param0+8], %r112;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 3
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
$L__BB0_1:                              // %L8
	mov.u64 	%rd40, exception1;
	cvta.global.u64 	%rd41, %rd40;
	{ // callseq 0, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd41;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 0
	{ // callseq 1, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd35;
	st.param.b32 	[param0+8], %r112;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 1
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
                                        // -- End function
}
