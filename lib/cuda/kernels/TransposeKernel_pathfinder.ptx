// PTX CompilerJob of MethodInstance for xpose_kernel(::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int32, 1}) for sm_86, minthreads=512, blocks_per_sm=1

//
// Generated by LLVM NVPTX Back-End
//

.version 8.2
.target sm_86
.address_size 64

	// .globl	_Z12xpose_kernel13CuDeviceArrayI6Int4x8Li1ELi1EES_IS0_Li1ELi1EES_I5Int32Li1ELi1EE // -- Begin function _Z12xpose_kernel13CuDeviceArrayI6Int4x8Li1ELi1EES_IS0_Li1ELi1EES_I5Int32Li1ELi1EE
                                        // @_Z12xpose_kernel13CuDeviceArrayI6Int4x8Li1ELi1EES_IS0_Li1ELi1EES_I5Int32Li1ELi1EE
.visible .entry _Z12xpose_kernel13CuDeviceArrayI6Int4x8Li1ELi1EES_IS0_Li1ELi1EES_I5Int32Li1ELi1EE(
	.param .align 8 .b8 _Z12xpose_kernel13CuDeviceArrayI6Int4x8Li1ELi1EES_IS0_Li1ELi1EES_I5Int32Li1ELi1EE_param_0[16],
	.param .align 8 .b8 _Z12xpose_kernel13CuDeviceArrayI6Int4x8Li1ELi1EES_IS0_Li1ELi1EES_I5Int32Li1ELi1EE_param_1[32],
	.param .align 8 .b8 _Z12xpose_kernel13CuDeviceArrayI6Int4x8Li1ELi1EES_IS0_Li1ELi1EES_I5Int32Li1ELi1EE_param_2[32],
	.param .align 8 .b8 _Z12xpose_kernel13CuDeviceArrayI6Int4x8Li1ELi1EES_IS0_Li1ELi1EES_I5Int32Li1ELi1EE_param_3[32]
)
.reqntid 512, 1, 1
.minnctapersm 1
{
	.reg .pred 	%p<4>;
	.reg .b32 	%r<96>;
	.reg .b64 	%rd<14>;

// %bb.0:                               // %conversion
	ld.param.u64 	%rd1, [_Z12xpose_kernel13CuDeviceArrayI6Int4x8Li1ELi1EES_IS0_Li1ELi1EES_I5Int32Li1ELi1EE_param_1];
	ld.param.u64 	%rd2, [_Z12xpose_kernel13CuDeviceArrayI6Int4x8Li1ELi1EES_IS0_Li1ELi1EES_I5Int32Li1ELi1EE_param_2];
	ld.param.u64 	%rd4, [_Z12xpose_kernel13CuDeviceArrayI6Int4x8Li1ELi1EES_IS0_Li1ELi1EES_I5Int32Li1ELi1EE_param_3];
	mov.u32 	%r1, %tid.x;
	mov.u32 	%r19, %tid.y;
	shl.b32 	%r20, %r19, 5;
	mov.u32 	%r21, %ctaid.x;
	shl.b32 	%r2, %r21, 9;
	or.b32  	%r22, %r20, %r1;
	or.b32  	%r23, %r22, %r2;
	mul.wide.u32 	%rd5, %r23, 4;
	add.s64 	%rd3, %rd4, %rd5;
	mov.u32 	%r24, 1;
	st.global.u32 	[%rd3], %r24;
	and.b32  	%r25, %r1, 14;
	shl.b32 	%r26, %r19, 11;
	or.b32  	%r27, %r26, %r1;
	shl.b32 	%r28, %r19, 8;
	and.b32  	%r3, %r28, 256;
	shr.u32 	%r4, %r1, 4;
	shl.b32 	%r29, %r1, 1;
	and.b32  	%r30, %r29, 2;
	or.b32  	%r31, %r30, %r4;
	shl.b32 	%r32, %r31, 5;
	and.b32  	%r5, %r1, 2;
	and.b32  	%r12, %r27, 28684;
	shl.b32 	%r33, %r1, 2;
	and.b32  	%r6, %r33, 12;
	shl.b32 	%r34, %r19, 4;
	and.b32  	%r7, %r34, 16;
	shl.b32 	%r8, %r21, 5;
	or.b32  	%r11, %r12, 2;
	shl.b32 	%r35, %r25, 1;
	or.b32  	%r9, %r35, %r32;
	or.b32  	%r10, %r9, 128;
	shl.b32 	%r36, %r19, 23;
	and.b32  	%r94, %r36, 117440512;
	mov.u32 	%r95, 0;
	setp.eq.s32 	%p1, %r5, 0;
	setp.lt.u32 	%p2, %r1, 16;
$L__BB0_1:                              // %L95
                                        // =>This Inner Loop Header: Depth=1
	or.b32  	%r37, %r94, %r3;
	or.b32  	%r38, %r37, %r2;
	or.b32  	%r39, %r9, %r38;
	mul.wide.u32 	%rd6, %r39, 4;
	add.s64 	%rd7, %rd1, %rd6;
	ld.global.v4.u32 	{%r40, %r41, %r42, %r43}, [%rd7];
	or.b32  	%r44, %r10, %r38;
	mul.wide.u32 	%rd8, %r44, 4;
	add.s64 	%rd9, %rd1, %rd8;
	ld.global.v4.u32 	{%r45, %r46, %r47, %r48}, [%rd9];
	selp.b32 	%r49, %r42, %r40, %p2;
	shfl.sync.bfly.b32	%r50, %r49, 16, 31, -1;
	selp.b32 	%r51, %r40, %r50, %p2;
	selp.b32 	%r52, %r50, %r42, %p2;
	selp.b32 	%r53, %r43, %r41, %p2;
	shfl.sync.bfly.b32	%r54, %r53, 16, 31, -1;
	selp.b32 	%r55, %r41, %r54, %p2;
	selp.b32 	%r56, %r54, %r43, %p2;
	selp.b32 	%r57, %r47, %r45, %p2;
	shfl.sync.bfly.b32	%r58, %r57, 16, 31, -1;
	selp.b32 	%r59, %r45, %r58, %p2;
	selp.b32 	%r60, %r58, %r47, %p2;
	selp.b32 	%r61, %r48, %r46, %p2;
	shfl.sync.bfly.b32	%r62, %r61, 16, 31, -1;
	selp.b32 	%r63, %r46, %r62, %p2;
	selp.b32 	%r64, %r62, %r48, %p2;
	selp.b32 	%r65, %r59, %r51, %p1;
	shfl.sync.bfly.b32	%r66, %r65, 2, 31, -1;
	selp.b32 	%r67, %r51, %r66, %p1;
	selp.b32 	%r68, %r66, %r59, %p1;
	selp.b32 	%r69, %r63, %r55, %p1;
	shfl.sync.bfly.b32	%r70, %r69, 2, 31, -1;
	selp.b32 	%r71, %r55, %r70, %p1;
	selp.b32 	%r72, %r70, %r63, %p1;
	selp.b32 	%r73, %r60, %r52, %p1;
	shfl.sync.bfly.b32	%r74, %r73, 2, 31, -1;
	selp.b32 	%r75, %r52, %r74, %p1;
	selp.b32 	%r76, %r74, %r60, %p1;
	selp.b32 	%r77, %r64, %r56, %p1;
	shfl.sync.bfly.b32	%r78, %r77, 2, 31, -1;
	selp.b32 	%r79, %r56, %r78, %p1;
	selp.b32 	%r80, %r78, %r64, %p1;
	add.s32 	%r81, %r12, %r95;
	or.b32  	%r82, %r81, %r4;
	shl.b32 	%r83, %r82, 12;
	or.b32  	%r84, %r83, %r6;
	or.b32  	%r85, %r84, %r7;
	or.b32  	%r86, %r85, %r8;
	mul.wide.u32 	%rd10, %r86, 4;
	add.s64 	%rd11, %rd2, %rd10;
	st.global.v4.u32 	[%rd11], {%r67, %r71, %r75, %r79};
	add.s32 	%r87, %r11, %r95;
	or.b32  	%r88, %r87, %r4;
	shl.b32 	%r89, %r88, 12;
	or.b32  	%r90, %r89, %r6;
	or.b32  	%r91, %r90, %r7;
	or.b32  	%r92, %r91, %r8;
	mul.wide.u32 	%rd12, %r92, 4;
	add.s64 	%rd13, %rd2, %rd12;
	st.global.v4.u32 	[%rd13], {%r68, %r72, %r76, %r80};
	add.s32 	%r95, %r95, 16;
	add.s32 	%r94, %r94, 65536;
	setp.ne.s32 	%p3, %r95, 4096;
	@%p3 bra 	$L__BB0_1;
// %bb.2:                               // %L1173
	mov.u32 	%r93, 0;
	st.global.u32 	[%rd3], %r93;
	ret;
                                        // -- End function
}
