// PTX kernel code for the CUDA upchannelizer
// This file has been generated automatically by `upchan.jl`.
// Do not modify this file, your changes will be lost.

// PTX CompilerJob of MethodInstance for upchan(::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Float16x2, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int32, 1}) for sm_86, minthreads=256, blocks_per_sm=4

//
// Generated by LLVM NVPTX Back-End
//

.version 8.2
.target sm_86
.address_size 64

	// .globl	_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE // -- Begin function _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE
.func gpu_report_exception
(
	.param .b64 gpu_report_exception_param_0
)
.noreturn
{
	trap;
}
.func gpu_signal_exception
(
	.param .align 8 .b8 gpu_signal_exception_param_0[16]
)
.noreturn
{
	trap;
}
.extern .shared .align 32 .b8 shmem[];
.global .align 1 .b8 exception2656[6] = {101, 114, 114, 111, 114, 0};
.global .align 1 .b8 exception1[10] = {101, 120, 99, 101, 112, 116, 105, 111, 110, 0};
                                        // @_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE
.visible .entry _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE(
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_0[16],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_1[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_2[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_3[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_4[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_5[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_6[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_7[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_8[32]
)
.reqntid 256, 1, 1
.minnctapersm 4
{
	.reg .pred 	%p<244>;
	.reg .b16 	%rs<95>;
	.reg .f32 	%f<775>;
	.reg .b32 	%r<1395>;
	.reg .b64 	%rd<268>;

// %bb.0:                               // %conversion
	ld.param.u32 	%r157, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_0+8];
	ld.param.u64 	%rd46, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_0];
	// begin inline asm
	mov.u32 %r158, %dynamic_smem_size;
	// end inline asm
	setp.gt.u32 	%p1, %r158, 73983;
	@%p1 bra 	LBB0_2;
	bra.uni 	LBB0_1;
LBB0_2:                                 // %L11
	ld.param.u64 	%rd63, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_8];
	ld.param.u64 	%rd47, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_1];
	mov.u32 	%r1, %tid.x;
	mov.u32 	%r2, %tid.y;
	shl.b32 	%r3, %r2, 5;
	mov.u32 	%r4, %ctaid.x;
	shl.b32 	%r5, %r4, 8;
	or.b32  	%r159, %r3, %r1;
	or.b32  	%r160, %r159, %r5;
	mul.wide.u32 	%rd69, %r160, 4;
	add.s64 	%rd4, %rd63, %rd69;
	mov.u32 	%r161, 1;
	st.global.u32 	[%rd4], %r161;
	ld.global.u32 	%r6, [%rd47];
	setp.lt.s32 	%p2, %r6, 0;
	@%p2 bra 	LBB0_7;
// %bb.3:                               // %L231
	ld.param.u64 	%rd51, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_2];
	ld.global.u32 	%r7, [%rd51];
	setp.lt.s32 	%p3, %r7, %r6;
	setp.gt.s32 	%p4, %r7, 16384;
	or.pred  	%p5, %p3, %p4;
	@%p5 bra 	LBB0_7;
// %bb.4:                               // %L241
	ld.param.u64 	%rd55, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_3];
	ld.global.u32 	%r8, [%rd55];
	sub.s32 	%r162, %r7, %r6;
	and.b32  	%r163, %r162, 255;
	setp.ne.s32 	%p6, %r163, 0;
	setp.lt.s32 	%p7, %r8, 0;
	or.pred  	%p8, %p6, %p7;
	@%p8 bra 	LBB0_7;
// %bb.5:                               // %L247
	ld.param.u64 	%rd59, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_4];
	ld.global.u32 	%r9, [%rd59];
	setp.lt.s32 	%p9, %r9, %r8;
	setp.gt.s32 	%p10, %r9, 2048;
	or.pred  	%p11, %p9, %p10;
	@%p11 bra 	LBB0_7;
// %bb.6:                               // %L257
	sub.s32 	%r164, %r9, %r8;
	add.s32 	%r165, %r164, 3;
	and.b32  	%r166, %r165, 31;
	setp.eq.s32 	%p12, %r166, 0;
	@%p12 bra 	LBB0_8;
	bra.uni 	LBB0_7;
LBB0_8:                                 // %L396
	bfe.u32 	%r16, %r1, 1, 1;
	shl.b32 	%r170, %r16, 1;
	and.b32  	%r17, %r1, 1;
	or.b32  	%r18, %r17, %r170;
	or.b32  	%r19, %r18, 4;
	mov.f32 	%f145, 0f40000000;
	mov.f32 	%f146, 0f41F80000;
	div.approx.f32 	%f1, %f146, %f145;
	cvt.rn.f32.s32 	%f147, %r18;
	sub.f32 	%f148, %f147, %f1;
	mov.f32 	%f177, 0f41000000;
	div.approx.f32 	%f3, %f148, %f177;
	setp.eq.f32 	%p18, %f3, 0f00000000;
	mov.f32 	%f750, 0f3F800000;
	mov.f32 	%f743, %f750;
	@%p18 bra 	LBB0_10;
// %bb.9:                               // %L562
	sin.approx.f32 	%f178, %f3;
	div.approx.f32 	%f743, %f178, %f3;
LBB0_10:                                // %L565
	cvt.rn.f32.s32 	%f181, %r19;
	sub.f32 	%f182, %f181, %f1;
	div.approx.f32 	%f8, %f182, %f177;
	setp.eq.f32 	%p24, %f8, 0f00000000;
	mov.f32 	%f744, %f750;
	@%p24 bra 	LBB0_12;
// %bb.11:                              // %L582
	sin.approx.f32 	%f212, %f8;
	div.approx.f32 	%f744, %f212, %f8;
LBB0_12:                                // %L585
	or.b32  	%r188, %r18, 8;
	or.b32  	%r21, %r18, 12;
	cvt.rn.f32.s32 	%f216, %r188;
	sub.f32 	%f217, %f216, %f1;
	div.approx.f32 	%f12, %f217, %f177;
	setp.eq.f32 	%p30, %f12, 0f00000000;
	mov.f32 	%f745, %f750;
	@%p30 bra 	LBB0_14;
// %bb.13:                              // %L671
	sin.approx.f32 	%f247, %f12;
	div.approx.f32 	%f745, %f247, %f12;
LBB0_14:                                // %L674
	cvt.rn.f32.s32 	%f250, %r21;
	sub.f32 	%f251, %f250, %f1;
	div.approx.f32 	%f17, %f251, %f177;
	setp.eq.f32 	%p36, %f17, 0f00000000;
	mov.f32 	%f746, %f750;
	@%p36 bra 	LBB0_16;
// %bb.15:                              // %L691
	sin.approx.f32 	%f281, %f17;
	div.approx.f32 	%f746, %f281, %f17;
LBB0_16:                                // %L694
	or.b32  	%r206, %r18, 16;
	or.b32  	%r23, %r18, 20;
	cvt.rn.f32.s32 	%f285, %r206;
	sub.f32 	%f286, %f285, %f1;
	div.approx.f32 	%f21, %f286, %f177;
	setp.eq.f32 	%p42, %f21, 0f00000000;
	mov.f32 	%f747, %f750;
	@%p42 bra 	LBB0_18;
// %bb.17:                              // %L780
	sin.approx.f32 	%f316, %f21;
	div.approx.f32 	%f747, %f316, %f21;
LBB0_18:                                // %L783
	cvt.rn.f32.s32 	%f319, %r23;
	sub.f32 	%f320, %f319, %f1;
	div.approx.f32 	%f26, %f320, %f177;
	setp.eq.f32 	%p48, %f26, 0f00000000;
	mov.f32 	%f748, %f750;
	@%p48 bra 	LBB0_20;
// %bb.19:                              // %L800
	sin.approx.f32 	%f350, %f26;
	div.approx.f32 	%f748, %f350, %f26;
LBB0_20:                                // %L803
	or.b32  	%r224, %r18, 24;
	or.b32  	%r25, %r18, 28;
	cvt.rn.f32.s32 	%f354, %r224;
	sub.f32 	%f355, %f354, %f1;
	div.approx.f32 	%f30, %f355, %f177;
	setp.eq.f32 	%p54, %f30, 0f00000000;
	mov.f32 	%f749, %f750;
	@%p54 bra 	LBB0_22;
// %bb.21:                              // %L889
	sin.approx.f32 	%f385, %f30;
	div.approx.f32 	%f749, %f385, %f30;
LBB0_22:                                // %L892
	cvt.rn.f32.s32 	%f388, %r25;
	sub.f32 	%f389, %f388, %f1;
	div.approx.f32 	%f35, %f389, %f177;
	setp.eq.f32 	%p60, %f35, 0f00000000;
	@%p60 bra 	LBB0_24;
// %bb.23:                              // %L909
	sin.approx.f32 	%f419, %f35;
	div.approx.f32 	%f750, %f419, %f35;
LBB0_24:                                // %L912
	mul.lo.s32 	%r27, %r18, 7;
	cvt.rn.f32.s32 	%f422, %r27;
	div.approx.f32 	%f38, %f422, %f177;
	abs.f32 	%f753, %f38;
	setp.lt.f32 	%p61, %f753, 0f40000000;
	@%p61 bra 	LBB0_36;
// %bb.25:
	setp.gtu.f32 	%p62, %f753, 0f4B800000;
	@%p62 bra 	LBB0_32;
	bra.uni 	LBB0_26;
LBB0_32:
	mov.b32 	%r29, %f753;
	and.b32  	%r242, %r29, 8388607;
	or.b32  	%r1374, %r242, 1065353216;
	mov.b32 	%f752, %r1374;
	add.s32 	%r243, %r29, -1073741824;
	and.b32  	%r1375, %r243, -8388608;
	setp.eq.s32 	%p68, %r1375, 0;
	@%p68 bra 	LBB0_35;
// %bb.33:                              // %.lr.ph1970.preheader
	mov.f32 	%f433, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f432,%f433;
	// end inline asm
LBB0_34:                                // %.lr.ph1970
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r244, %r1375, 192937984;
	add.s32 	%r245, %r244, %r1374;
	mov.b32 	%f434, %r245;
	mul.f32 	%f435, %f432, %f434;
	sub.f32 	%f436, %f434, %f435;
	fma.rn.f32 	%f437, %f436, %f432, %f435;
	sub.f32 	%f438, %f434, %f437;
	fma.rz.f32 	%f439, %f438, %f432, %f437;
	cvt.rzi.f32.f32 	%f440, %f439;
	sub.f32 	%f752, %f434, %f440;
	sub.s32 	%r1375, %r1375, %r244;
	mov.b32 	%r1374, %f752;
	setp.ne.s32 	%p69, %r1375, 0;
	setp.ne.s32 	%p70, %r1374, 0;
	and.pred  	%p71, %p69, %p70;
	@%p71 bra 	LBB0_34;
LBB0_35:                                // %__internal_fmodf_slowpath_mod.exit.i.i
	setp.gt.u32 	%p72, %r29, 2139095039;
	selp.f32 	%f441, 0f7FFFFFFF, 0f4B800000, %p72;
	mul.f32 	%f442, %f752, 0f34000000;
	mul.f32 	%f753, %f441, %f442;
	bra.uni 	LBB0_36;
LBB0_26:                                // %__nv_fast_fdividef.exit.i.i.i
	div.approx.f32 	%f425, %f753, %f145;
	cvt.rzi.f32.f32 	%f40, %f425;
	fma.rn.f32 	%f41, %f40, 0fC0000000, %f753;
	mov.b32 	%r28, %f41;
	setp.lt.u32 	%p63, %r28, 1073741824;
	mov.f32 	%f751, %f40;
	@%p63 bra 	LBB0_31;
// %bb.27:
	setp.lt.u32 	%p64, %r28, -2147483647;
	@%p64 bra 	LBB0_29;
// %bb.28:
	add.f32 	%f430, %f40, 0fBF800000;
	setp.lt.f32 	%p67, %f41, 0fC0000000;
	selp.f32 	%f431, %f430, %f40, %p67;
	add.f32 	%f751, %f431, 0fBF800000;
	bra.uni 	LBB0_31;
LBB0_29:
	add.f32 	%f751, %f40, 0f3F800000;
	setp.ltu.f32 	%p65, %f41, 0f40800000;
	@%p65 bra 	LBB0_31;
// %bb.30:                              // %__nv_fmaf_rn.exit.i.i.i
	fma.rn.f32 	%f427, %f145, 0fC0400000, %f41;
	setp.ge.f32 	%p66, %f427, 0f00000000;
	selp.f32 	%f428, %f751, %f40, %p66;
	add.f32 	%f429, %f428, 0f3F800000;
	add.f32 	%f751, %f429, 0f3F800000;
LBB0_31:                                // %__internal_fmodf_fastpath_quot.exit.i.i
	fma.rn.f32 	%f753, %f751, 0fC0000000, %f753;
LBB0_36:                                // %__internal_fmodf_kernel.exit.i
	abs.f32 	%f443, %f753;
	setp.gtu.f32 	%p73, %f443, 0f7F800000;
	@%p73 bra 	LBB0_38;
// %bb.37:
	mov.b32 	%r246, %f38;
	and.b32  	%r247, %r246, -2147483648;
	mov.b32 	%r248, %f753;
	or.b32  	%r249, %r247, %r248;
	mov.b32 	%f753, %r249;
LBB0_38:                                // %__nv_fmodf.exit
	add.s32 	%r258, %r27, 28;
	cvt.rn.f32.s32 	%f474, %r258;
	div.approx.f32 	%f57, %f474, %f177;
	abs.f32 	%f757, %f57;
	setp.lt.f32 	%p81, %f757, 0f40000000;
	@%p81 bra 	LBB0_50;
// %bb.39:
	setp.gtu.f32 	%p82, %f757, 0f4B800000;
	@%p82 bra 	LBB0_46;
	bra.uni 	LBB0_40;
LBB0_46:
	mov.b32 	%r37, %f757;
	and.b32  	%r259, %r37, 8388607;
	or.b32  	%r1376, %r259, 1065353216;
	mov.b32 	%f756, %r1376;
	add.s32 	%r260, %r37, -1073741824;
	and.b32  	%r1377, %r260, -8388608;
	setp.eq.s32 	%p88, %r1377, 0;
	@%p88 bra 	LBB0_49;
// %bb.47:                              // %.lr.ph1965.preheader
	mov.f32 	%f485, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f484,%f485;
	// end inline asm
LBB0_48:                                // %.lr.ph1965
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r261, %r1377, 192937984;
	add.s32 	%r262, %r261, %r1376;
	mov.b32 	%f486, %r262;
	mul.f32 	%f487, %f484, %f486;
	sub.f32 	%f488, %f486, %f487;
	fma.rn.f32 	%f489, %f488, %f484, %f487;
	sub.f32 	%f490, %f486, %f489;
	fma.rz.f32 	%f491, %f490, %f484, %f489;
	cvt.rzi.f32.f32 	%f492, %f491;
	sub.f32 	%f756, %f486, %f492;
	sub.s32 	%r1377, %r1377, %r261;
	mov.b32 	%r1376, %f756;
	setp.ne.s32 	%p89, %r1377, 0;
	setp.ne.s32 	%p90, %r1376, 0;
	and.pred  	%p91, %p89, %p90;
	@%p91 bra 	LBB0_48;
LBB0_49:                                // %__internal_fmodf_slowpath_mod.exit.i.i1151
	setp.gt.u32 	%p92, %r37, 2139095039;
	selp.f32 	%f493, 0f7FFFFFFF, 0f4B800000, %p92;
	mul.f32 	%f494, %f756, 0f34000000;
	mul.f32 	%f757, %f493, %f494;
	bra.uni 	LBB0_50;
LBB0_40:                                // %__nv_fast_fdividef.exit.i.i.i1117
	div.approx.f32 	%f477, %f757, %f145;
	cvt.rzi.f32.f32 	%f59, %f477;
	fma.rn.f32 	%f60, %f59, 0fC0000000, %f757;
	mov.b32 	%r36, %f60;
	setp.lt.u32 	%p83, %r36, 1073741824;
	mov.f32 	%f755, %f59;
	@%p83 bra 	LBB0_45;
// %bb.41:
	setp.lt.u32 	%p84, %r36, -2147483647;
	@%p84 bra 	LBB0_43;
// %bb.42:
	add.f32 	%f482, %f59, 0fBF800000;
	setp.lt.f32 	%p87, %f60, 0fC0000000;
	selp.f32 	%f483, %f482, %f59, %p87;
	add.f32 	%f755, %f483, 0fBF800000;
	bra.uni 	LBB0_45;
LBB0_43:
	add.f32 	%f755, %f59, 0f3F800000;
	setp.ltu.f32 	%p85, %f60, 0f40800000;
	@%p85 bra 	LBB0_45;
// %bb.44:                              // %__nv_fmaf_rn.exit.i.i.i1122
	fma.rn.f32 	%f479, %f145, 0fC0400000, %f60;
	setp.ge.f32 	%p86, %f479, 0f00000000;
	selp.f32 	%f480, %f755, %f59, %p86;
	add.f32 	%f481, %f480, 0f3F800000;
	add.f32 	%f755, %f481, 0f3F800000;
LBB0_45:                                // %__internal_fmodf_fastpath_quot.exit.i.i1125
	fma.rn.f32 	%f757, %f755, 0fC0000000, %f757;
LBB0_50:                                // %__internal_fmodf_kernel.exit.i1154
	shr.u32 	%r15, %r1, 1;
	abs.f32 	%f495, %f757;
	setp.gtu.f32 	%p93, %f495, 0f7F800000;
	@%p93 bra 	LBB0_52;
// %bb.51:
	mov.b32 	%r263, %f57;
	and.b32  	%r264, %r263, -2147483648;
	mov.b32 	%r265, %f757;
	or.b32  	%r266, %r264, %r265;
	mov.b32 	%f757, %r266;
LBB0_52:                                // %__nv_fmodf.exit1157
	bfe.u32 	%r281, %r1, 2, 1;
	shr.u32 	%r46, %r1, 3;
	and.b32  	%r47, %r46, 2;
	or.b32  	%r282, %r281, %r47;
	and.b32  	%r48, %r15, 4;
	or.b32  	%r49, %r282, %r48;
	and.b32  	%r283, %r1, 3;
	mul.lo.s32 	%r284, %r283, %r49;
	shl.b32 	%r285, %r284, 1;
	neg.s32 	%r286, %r285;
	cvt.rn.f32.s32 	%f528, %r286;
	div.approx.f32 	%f74, %f528, %f177;
	abs.f32 	%f761, %f74;
	setp.lt.f32 	%p101, %f761, 0f40000000;
	@%p101 bra 	LBB0_64;
// %bb.53:
	setp.gtu.f32 	%p102, %f761, 0f4B800000;
	@%p102 bra 	LBB0_60;
	bra.uni 	LBB0_54;
LBB0_60:
	mov.b32 	%r51, %f761;
	and.b32  	%r287, %r51, 8388607;
	or.b32  	%r1378, %r287, 1065353216;
	mov.b32 	%f760, %r1378;
	add.s32 	%r288, %r51, -1073741824;
	and.b32  	%r1379, %r288, -8388608;
	setp.eq.s32 	%p108, %r1379, 0;
	@%p108 bra 	LBB0_63;
// %bb.61:                              // %.lr.ph1950.preheader
	mov.f32 	%f539, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f538,%f539;
	// end inline asm
LBB0_62:                                // %.lr.ph1950
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r289, %r1379, 192937984;
	add.s32 	%r290, %r289, %r1378;
	mov.b32 	%f540, %r290;
	mul.f32 	%f541, %f538, %f540;
	sub.f32 	%f542, %f540, %f541;
	fma.rn.f32 	%f543, %f542, %f538, %f541;
	sub.f32 	%f544, %f540, %f543;
	fma.rz.f32 	%f545, %f544, %f538, %f543;
	cvt.rzi.f32.f32 	%f546, %f545;
	sub.f32 	%f760, %f540, %f546;
	sub.s32 	%r1379, %r1379, %r289;
	mov.b32 	%r1378, %f760;
	setp.ne.s32 	%p109, %r1379, 0;
	setp.ne.s32 	%p110, %r1378, 0;
	and.pred  	%p111, %p109, %p110;
	@%p111 bra 	LBB0_62;
LBB0_63:                                // %__internal_fmodf_slowpath_mod.exit.i.i1204
	setp.gt.u32 	%p112, %r51, 2139095039;
	selp.f32 	%f547, 0f7FFFFFFF, 0f4B800000, %p112;
	mul.f32 	%f548, %f760, 0f34000000;
	mul.f32 	%f761, %f547, %f548;
	bra.uni 	LBB0_64;
LBB0_54:                                // %__nv_fast_fdividef.exit.i.i.i1170
	div.approx.f32 	%f531, %f761, %f145;
	cvt.rzi.f32.f32 	%f76, %f531;
	fma.rn.f32 	%f77, %f76, 0fC0000000, %f761;
	mov.b32 	%r50, %f77;
	setp.lt.u32 	%p103, %r50, 1073741824;
	mov.f32 	%f759, %f76;
	@%p103 bra 	LBB0_59;
// %bb.55:
	setp.lt.u32 	%p104, %r50, -2147483647;
	@%p104 bra 	LBB0_57;
// %bb.56:
	add.f32 	%f536, %f76, 0fBF800000;
	setp.lt.f32 	%p107, %f77, 0fC0000000;
	selp.f32 	%f537, %f536, %f76, %p107;
	add.f32 	%f759, %f537, 0fBF800000;
	bra.uni 	LBB0_59;
LBB0_57:
	add.f32 	%f759, %f76, 0f3F800000;
	setp.ltu.f32 	%p105, %f77, 0f40800000;
	@%p105 bra 	LBB0_59;
// %bb.58:                              // %__nv_fmaf_rn.exit.i.i.i1175
	fma.rn.f32 	%f533, %f145, 0fC0400000, %f77;
	setp.ge.f32 	%p106, %f533, 0f00000000;
	selp.f32 	%f534, %f759, %f76, %p106;
	add.f32 	%f535, %f534, 0f3F800000;
	add.f32 	%f759, %f535, 0f3F800000;
LBB0_59:                                // %__internal_fmodf_fastpath_quot.exit.i.i1178
	fma.rn.f32 	%f761, %f759, 0fC0000000, %f761;
LBB0_64:                                // %__internal_fmodf_kernel.exit.i1207
	abs.f32 	%f549, %f761;
	setp.gtu.f32 	%p113, %f549, 0f7F800000;
	@%p113 bra 	LBB0_66;
// %bb.65:
	mov.b32 	%r291, %f74;
	and.b32  	%r292, %r291, -2147483648;
	mov.b32 	%r293, %f761;
	or.b32  	%r294, %r292, %r293;
	mov.b32 	%f761, %r294;
LBB0_66:                                // %__nv_fmodf.exit1210
	shl.b32 	%r58, %r1, 1;
	and.b32  	%r303, %r58, 6;
	mov.u32 	%r304, -8;
	sub.s32 	%r305, %r304, %r303;
	mul.lo.s32 	%r306, %r49, %r305;
	cvt.rn.f32.s32 	%f580, %r306;
	div.approx.f32 	%f93, %f580, %f177;
	abs.f32 	%f765, %f93;
	setp.lt.f32 	%p121, %f765, 0f40000000;
	@%p121 bra 	LBB0_78;
// %bb.67:
	setp.gtu.f32 	%p122, %f765, 0f4B800000;
	@%p122 bra 	LBB0_74;
	bra.uni 	LBB0_68;
LBB0_74:
	mov.b32 	%r60, %f765;
	and.b32  	%r307, %r60, 8388607;
	or.b32  	%r1380, %r307, 1065353216;
	mov.b32 	%f764, %r1380;
	add.s32 	%r308, %r60, -1073741824;
	and.b32  	%r1381, %r308, -8388608;
	setp.eq.s32 	%p128, %r1381, 0;
	@%p128 bra 	LBB0_77;
// %bb.75:                              // %.lr.ph1940.preheader
	mov.f32 	%f591, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f590,%f591;
	// end inline asm
LBB0_76:                                // %.lr.ph1940
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r309, %r1381, 192937984;
	add.s32 	%r310, %r309, %r1380;
	mov.b32 	%f592, %r310;
	mul.f32 	%f593, %f590, %f592;
	sub.f32 	%f594, %f592, %f593;
	fma.rn.f32 	%f595, %f594, %f590, %f593;
	sub.f32 	%f596, %f592, %f595;
	fma.rz.f32 	%f597, %f596, %f590, %f595;
	cvt.rzi.f32.f32 	%f598, %f597;
	sub.f32 	%f764, %f592, %f598;
	sub.s32 	%r1381, %r1381, %r309;
	mov.b32 	%r1380, %f764;
	setp.ne.s32 	%p129, %r1381, 0;
	setp.ne.s32 	%p130, %r1380, 0;
	and.pred  	%p131, %p129, %p130;
	@%p131 bra 	LBB0_76;
LBB0_77:                                // %__internal_fmodf_slowpath_mod.exit.i.i1257
	setp.gt.u32 	%p132, %r60, 2139095039;
	selp.f32 	%f599, 0f7FFFFFFF, 0f4B800000, %p132;
	mul.f32 	%f600, %f764, 0f34000000;
	mul.f32 	%f765, %f599, %f600;
	bra.uni 	LBB0_78;
LBB0_68:                                // %__nv_fast_fdividef.exit.i.i.i1223
	div.approx.f32 	%f583, %f765, %f145;
	cvt.rzi.f32.f32 	%f95, %f583;
	fma.rn.f32 	%f96, %f95, 0fC0000000, %f765;
	mov.b32 	%r59, %f96;
	setp.lt.u32 	%p123, %r59, 1073741824;
	mov.f32 	%f763, %f95;
	@%p123 bra 	LBB0_73;
// %bb.69:
	setp.lt.u32 	%p124, %r59, -2147483647;
	@%p124 bra 	LBB0_71;
// %bb.70:
	add.f32 	%f588, %f95, 0fBF800000;
	setp.lt.f32 	%p127, %f96, 0fC0000000;
	selp.f32 	%f589, %f588, %f95, %p127;
	add.f32 	%f763, %f589, 0fBF800000;
	bra.uni 	LBB0_73;
LBB0_71:
	add.f32 	%f763, %f95, 0f3F800000;
	setp.ltu.f32 	%p125, %f96, 0f40800000;
	@%p125 bra 	LBB0_73;
// %bb.72:                              // %__nv_fmaf_rn.exit.i.i.i1228
	fma.rn.f32 	%f585, %f145, 0fC0400000, %f96;
	setp.ge.f32 	%p126, %f585, 0f00000000;
	selp.f32 	%f586, %f763, %f95, %p126;
	add.f32 	%f587, %f586, 0f3F800000;
	add.f32 	%f763, %f587, 0f3F800000;
LBB0_73:                                // %__internal_fmodf_fastpath_quot.exit.i.i1231
	fma.rn.f32 	%f765, %f763, 0fC0000000, %f765;
LBB0_78:                                // %__internal_fmodf_kernel.exit.i1260
	mov.f32 	%f174, 0f00000000;
	abs.f32 	%f601, %f765;
	setp.gtu.f32 	%p133, %f601, 0f7F800000;
	@%p133 bra 	LBB0_80;
// %bb.79:
	mov.b32 	%r311, %f93;
	and.b32  	%r312, %r311, -2147483648;
	mov.b32 	%r313, %f765;
	or.b32  	%r314, %r312, %r313;
	mov.b32 	%f765, %r314;
LBB0_80:                                // %__nv_fmodf.exit1263
	mov.f32 	%f634, 0f3F800000;
	div.approx.f32 	%f110, %f174, %f634;
	abs.f32 	%f773, %f110;
	setp.lt.f32 	%p141, %f773, 0f40000000;
	setp.gtu.f32 	%p243, %f773, 0f4B800000;
	mov.f32 	%f769, %f773;
	@%p141 bra 	LBB0_99;
// %bb.81:
	@%p243 bra 	LBB0_95;
	bra.uni 	LBB0_82;
LBB0_95:
	mov.b32 	%r84, %f773;
	and.b32  	%r335, %r84, 8388607;
	or.b32  	%r1390, %r335, 1065353216;
	mov.b32 	%f768, %r1390;
	add.s32 	%r336, %r84, -1073741824;
	and.b32  	%r1391, %r336, -8388608;
	setp.eq.s32 	%p148, %r1391, 0;
	@%p148 bra 	LBB0_98;
// %bb.96:                              // %.lr.ph1930.preheader
	// begin inline asm
	rcp.approx.ftz.f32 %f643,%f634;
	// end inline asm
LBB0_97:                                // %.lr.ph1930
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r337, %r1391, 192937984;
	add.s32 	%r338, %r337, %r1390;
	mov.b32 	%f645, %r338;
	mul.f32 	%f646, %f643, %f645;
	sub.f32 	%f647, %f645, %f646;
	fma.rn.f32 	%f648, %f647, %f643, %f646;
	sub.f32 	%f649, %f645, %f648;
	fma.rz.f32 	%f650, %f649, %f643, %f648;
	cvt.rzi.f32.f32 	%f651, %f650;
	sub.f32 	%f768, %f645, %f651;
	sub.s32 	%r1391, %r1391, %r337;
	mov.b32 	%r1390, %f768;
	setp.ne.s32 	%p149, %r1391, 0;
	setp.ne.s32 	%p150, %r1390, 0;
	and.pred  	%p151, %p149, %p150;
	@%p151 bra 	LBB0_97;
LBB0_98:                                // %__internal_fmodf_slowpath_mod.exit.i.i1310
	setp.gt.u32 	%p152, %r84, 2139095039;
	selp.f32 	%f652, 0f7FFFFFFF, 0f4B800000, %p152;
	mul.f32 	%f653, %f768, 0f34000000;
	mul.f32 	%f769, %f652, %f653;
	bra.uni 	LBB0_99;
LBB0_82:                                // %__nv_fast_fdividef.exit.i.i.i1276
	div.approx.f32 	%f636, %f773, %f145;
	cvt.rzi.f32.f32 	%f112, %f636;
	fma.rn.f32 	%f113, %f112, 0fC0000000, %f773;
	mov.b32 	%r83, %f113;
	setp.lt.u32 	%p143, %r83, 1073741824;
	mov.f32 	%f767, %f112;
	@%p143 bra 	LBB0_94;
// %bb.83:
	setp.lt.u32 	%p144, %r83, -2147483647;
	@%p144 bra 	LBB0_92;
// %bb.84:
	add.f32 	%f641, %f112, 0fBF800000;
	setp.lt.f32 	%p147, %f113, 0fC0000000;
	selp.f32 	%f642, %f641, %f112, %p147;
	add.f32 	%f767, %f642, 0fBF800000;
	bra.uni 	LBB0_94;
LBB0_92:
	add.f32 	%f767, %f112, 0f3F800000;
	setp.ltu.f32 	%p145, %f113, 0f40800000;
	@%p145 bra 	LBB0_94;
// %bb.93:                              // %__nv_fmaf_rn.exit.i.i.i1281
	fma.rn.f32 	%f638, %f145, 0fC0400000, %f113;
	setp.ge.f32 	%p146, %f638, 0f00000000;
	selp.f32 	%f639, %f767, %f112, %p146;
	add.f32 	%f640, %f639, 0f3F800000;
	add.f32 	%f767, %f640, 0f3F800000;
LBB0_94:                                // %__internal_fmodf_fastpath_quot.exit.i.i1284
	fma.rn.f32 	%f769, %f767, 0fC0000000, %f773;
LBB0_99:                                // %__internal_fmodf_kernel.exit.i1313
	abs.f32 	%f654, %f769;
	setp.gtu.f32 	%p153, %f654, 0f7F800000;
	mov.b32 	%r339, %f110;
	and.b32  	%r91, %r339, -2147483648;
	@%p153 bra 	LBB0_101;
// %bb.100:
	mov.b32 	%r340, %f769;
	or.b32  	%r341, %r91, %r340;
	mov.b32 	%f769, %r341;
LBB0_101:                               // %__nv_fmodf.exit1316
	@%p141 bra 	LBB0_113;
// %bb.102:
	@%p243 bra 	LBB0_109;
	bra.uni 	LBB0_103;
LBB0_109:
	mov.b32 	%r93, %f773;
	and.b32  	%r350, %r93, 8388607;
	or.b32  	%r1392, %r350, 1065353216;
	mov.b32 	%f772, %r1392;
	add.s32 	%r351, %r93, -1073741824;
	and.b32  	%r1393, %r351, -8388608;
	setp.eq.s32 	%p169, %r1393, 0;
	@%p169 bra 	LBB0_112;
// %bb.110:                             // %.lr.ph.preheader
	// begin inline asm
	rcp.approx.ftz.f32 %f696,%f634;
	// end inline asm
LBB0_111:                               // %.lr.ph
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r352, %r1393, 192937984;
	add.s32 	%r353, %r352, %r1392;
	mov.b32 	%f698, %r353;
	mul.f32 	%f699, %f696, %f698;
	sub.f32 	%f700, %f698, %f699;
	fma.rn.f32 	%f701, %f700, %f696, %f699;
	sub.f32 	%f702, %f698, %f701;
	fma.rz.f32 	%f703, %f702, %f696, %f701;
	cvt.rzi.f32.f32 	%f704, %f703;
	sub.f32 	%f772, %f698, %f704;
	sub.s32 	%r1393, %r1393, %r352;
	mov.b32 	%r1392, %f772;
	setp.ne.s32 	%p170, %r1393, 0;
	setp.ne.s32 	%p171, %r1392, 0;
	and.pred  	%p172, %p170, %p171;
	@%p172 bra 	LBB0_111;
LBB0_112:                               // %__internal_fmodf_slowpath_mod.exit.i.i1363
	setp.gt.u32 	%p173, %r93, 2139095039;
	selp.f32 	%f705, 0f7FFFFFFF, 0f4B800000, %p173;
	mul.f32 	%f706, %f772, 0f34000000;
	mul.f32 	%f773, %f705, %f706;
	bra.uni 	LBB0_113;
LBB0_103:                               // %__nv_fast_fdividef.exit.i.i.i1329
	div.approx.f32 	%f689, %f773, %f145;
	cvt.rzi.f32.f32 	%f129, %f689;
	fma.rn.f32 	%f130, %f129, 0fC0000000, %f773;
	mov.b32 	%r92, %f130;
	setp.lt.u32 	%p164, %r92, 1073741824;
	mov.f32 	%f771, %f129;
	@%p164 bra 	LBB0_108;
// %bb.104:
	setp.lt.u32 	%p165, %r92, -2147483647;
	@%p165 bra 	LBB0_106;
// %bb.105:
	add.f32 	%f694, %f129, 0fBF800000;
	setp.lt.f32 	%p168, %f130, 0fC0000000;
	selp.f32 	%f695, %f694, %f129, %p168;
	add.f32 	%f771, %f695, 0fBF800000;
	bra.uni 	LBB0_108;
LBB0_106:
	add.f32 	%f771, %f129, 0f3F800000;
	setp.ltu.f32 	%p166, %f130, 0f40800000;
	@%p166 bra 	LBB0_108;
// %bb.107:                             // %__nv_fmaf_rn.exit.i.i.i1334
	fma.rn.f32 	%f691, %f145, 0fC0400000, %f130;
	setp.ge.f32 	%p167, %f691, 0f00000000;
	selp.f32 	%f692, %f771, %f129, %p167;
	add.f32 	%f693, %f692, 0f3F800000;
	add.f32 	%f771, %f693, 0f3F800000;
LBB0_108:                               // %__internal_fmodf_fastpath_quot.exit.i.i1337
	fma.rn.f32 	%f773, %f771, 0fC0000000, %f773;
LBB0_113:                               // %__internal_fmodf_kernel.exit.i1366
	abs.f32 	%f707, %f773;
	setp.gtu.f32 	%p174, %f707, 0f7F800000;
	@%p174 bra 	LBB0_115;
// %bb.114:
	mov.b32 	%r354, %f773;
	or.b32  	%r355, %r91, %r354;
	mov.b32 	%f773, %r355;
LBB0_115:                               // %__nv_fmodf.exit1369
	setp.le.s32 	%p183, %r7, %r6;
	mov.u32 	%r1372, 0;
	@%p183 bra 	LBB0_122;
// %bb.116:                             // %L1346.lr.ph
	mov.f32 	%f149, 0f42040000;
	div.approx.f32 	%f150, %f148, %f149;
	div.approx.f32 	%f184, %f182, %f149;
	div.approx.f32 	%f219, %f217, %f149;
	div.approx.f32 	%f253, %f251, %f149;
	div.approx.f32 	%f288, %f286, %f149;
	div.approx.f32 	%f322, %f320, %f149;
	div.approx.f32 	%f357, %f355, %f149;
	div.approx.f32 	%f391, %f389, %f149;
	abs.f32 	%f151, %f150;
	abs.f32 	%f185, %f184;
	abs.f32 	%f220, %f219;
	abs.f32 	%f254, %f253;
	abs.f32 	%f289, %f288;
	abs.f32 	%f323, %f322;
	abs.f32 	%f358, %f357;
	abs.f32 	%f392, %f391;
	setp.gt.f32 	%p13, %f151, 0f4B800000;
	mul.f32 	%f152, %f150, 0f00000000;
	setp.gt.f32 	%p19, %f185, 0f4B800000;
	mul.f32 	%f186, %f184, 0f00000000;
	setp.gt.f32 	%p25, %f220, 0f4B800000;
	mul.f32 	%f221, %f219, 0f00000000;
	setp.gt.f32 	%p31, %f254, 0f4B800000;
	mul.f32 	%f255, %f253, 0f00000000;
	setp.gt.f32 	%p37, %f289, 0f4B800000;
	mul.f32 	%f290, %f288, 0f00000000;
	setp.gt.f32 	%p43, %f323, 0f4B800000;
	mul.f32 	%f324, %f322, 0f00000000;
	setp.gt.f32 	%p49, %f358, 0f4B800000;
	mul.f32 	%f359, %f357, 0f00000000;
	setp.gt.f32 	%p55, %f392, 0f4B800000;
	mul.f32 	%f393, %f391, 0f00000000;
	selp.f32 	%f153, %f152, %f150, %p13;
	selp.f32 	%f187, %f186, %f184, %p19;
	selp.f32 	%f222, %f221, %f219, %p25;
	selp.f32 	%f256, %f255, %f253, %p31;
	selp.f32 	%f291, %f290, %f288, %p37;
	selp.f32 	%f325, %f324, %f322, %p43;
	selp.f32 	%f360, %f359, %f357, %p49;
	selp.f32 	%f394, %f393, %f391, %p55;
	add.f32 	%f550, %f761, %f761;
	add.f32 	%f602, %f765, %f765;
	add.f32 	%f154, %f153, %f153;
	add.f32 	%f188, %f187, %f187;
	add.f32 	%f223, %f222, %f222;
	add.f32 	%f257, %f256, %f256;
	add.f32 	%f292, %f291, %f291;
	add.f32 	%f326, %f325, %f325;
	add.f32 	%f361, %f360, %f360;
	add.f32 	%f395, %f394, %f394;
	add.f32 	%f444, %f753, %f753;
	add.f32 	%f496, %f757, %f757;
	mov.b32 	%r295, %f550;
	mov.b32 	%r327, %f602;
	add.f32 	%f655, %f769, %f769;
	mov.b32 	%r171, %f154;
	mov.b32 	%r178, %f188;
	mov.b32 	%r189, %f223;
	mov.b32 	%r196, %f257;
	mov.b32 	%r207, %f292;
	mov.b32 	%r214, %f326;
	mov.b32 	%r225, %f361;
	mov.b32 	%r232, %f395;
	mov.b32 	%r250, %f444;
	mov.b32 	%r273, %f496;
	and.b32  	%r296, %r295, -2147483648;
	and.b32  	%r328, %r327, -2147483648;
	mov.b32 	%r342, %f655;
	and.b32  	%r172, %r171, -2147483648;
	and.b32  	%r179, %r178, -2147483648;
	and.b32  	%r190, %r189, -2147483648;
	and.b32  	%r197, %r196, -2147483648;
	and.b32  	%r208, %r207, -2147483648;
	and.b32  	%r215, %r214, -2147483648;
	and.b32  	%r226, %r225, -2147483648;
	and.b32  	%r233, %r232, -2147483648;
	and.b32  	%r251, %r250, -2147483648;
	and.b32  	%r274, %r273, -2147483648;
	or.b32  	%r297, %r296, 1056964608;
	or.b32  	%r329, %r328, 1056964608;
	and.b32  	%r343, %r342, -2147483648;
	or.b32  	%r173, %r172, 1056964608;
	or.b32  	%r180, %r179, 1056964608;
	or.b32  	%r191, %r190, 1056964608;
	or.b32  	%r198, %r197, 1056964608;
	or.b32  	%r209, %r208, 1056964608;
	or.b32  	%r216, %r215, 1056964608;
	or.b32  	%r227, %r226, 1056964608;
	or.b32  	%r234, %r233, 1056964608;
	or.b32  	%r252, %r251, 1056964608;
	or.b32  	%r275, %r274, 1056964608;
	mov.b32 	%f551, %r297;
	mov.b32 	%f603, %r329;
	or.b32  	%r344, %r343, 1056964608;
	cvt.u16.u32 	%rs2, %r1;
	mov.b32 	%f155, %r173;
	mov.b32 	%f189, %r180;
	mov.b32 	%f224, %r191;
	mov.b32 	%f258, %r198;
	mov.b32 	%f293, %r209;
	mov.b32 	%f327, %r216;
	mov.b32 	%f362, %r227;
	mov.b32 	%f396, %r234;
	mov.b32 	%f445, %r252;
	mov.b32 	%f497, %r275;
	add.f32 	%f552, %f550, %f551;
	abs.f32 	%f554, %f550;
	add.f32 	%f604, %f602, %f603;
	abs.f32 	%f606, %f602;
	mov.b32 	%f656, %r344;
	shr.u16 	%rs3, %rs2, 8;
	shl.b16 	%rs4, %rs2, 8;
	add.f32 	%f156, %f154, %f155;
	abs.f32 	%f158, %f154;
	add.f32 	%f190, %f188, %f189;
	abs.f32 	%f192, %f188;
	add.f32 	%f225, %f223, %f224;
	abs.f32 	%f227, %f223;
	add.f32 	%f259, %f257, %f258;
	abs.f32 	%f261, %f257;
	add.f32 	%f294, %f292, %f293;
	abs.f32 	%f296, %f292;
	add.f32 	%f328, %f326, %f327;
	abs.f32 	%f330, %f326;
	add.f32 	%f363, %f361, %f362;
	abs.f32 	%f365, %f361;
	add.f32 	%f397, %f395, %f396;
	abs.f32 	%f399, %f395;
	add.f32 	%f446, %f444, %f445;
	abs.f32 	%f448, %f444;
	add.f32 	%f498, %f496, %f497;
	abs.f32 	%f500, %f496;
	cvt.rzi.f32.f32 	%f553, %f552;
	setp.gt.f32 	%p114, %f554, 0f4B000000;
	cvt.rzi.f32.f32 	%f605, %f604;
	setp.gt.f32 	%p134, %f606, 0f4B000000;
	add.f32 	%f657, %f655, %f656;
	abs.f32 	%f659, %f655;
	or.b16  	%rs5, %rs4, %rs3;
	shl.b16 	%rs7, %rs2, 4;
	cvt.rzi.f32.f32 	%f157, %f156;
	setp.gt.f32 	%p14, %f158, 0f4B000000;
	cvt.rzi.f32.f32 	%f191, %f190;
	setp.gt.f32 	%p20, %f192, 0f4B000000;
	cvt.rzi.f32.f32 	%f226, %f225;
	setp.gt.f32 	%p26, %f227, 0f4B000000;
	cvt.rzi.f32.f32 	%f260, %f259;
	setp.gt.f32 	%p32, %f261, 0f4B000000;
	cvt.rzi.f32.f32 	%f295, %f294;
	setp.gt.f32 	%p38, %f296, 0f4B000000;
	cvt.rzi.f32.f32 	%f329, %f328;
	setp.gt.f32 	%p44, %f330, 0f4B000000;
	cvt.rzi.f32.f32 	%f364, %f363;
	setp.gt.f32 	%p50, %f365, 0f4B000000;
	cvt.rzi.f32.f32 	%f398, %f397;
	setp.gt.f32 	%p56, %f399, 0f4B000000;
	cvt.rzi.f32.f32 	%f447, %f446;
	setp.gt.f32 	%p74, %f448, 0f4B000000;
	cvt.rzi.f32.f32 	%f499, %f498;
	setp.gt.f32 	%p94, %f500, 0f4B000000;
	selp.f32 	%f555, %f550, %f553, %p114;
	cvt.rzi.f32.f32 	%f556, %f550;
	setp.lt.f32 	%p115, %f554, 0f3F000000;
	selp.f32 	%f607, %f602, %f605, %p134;
	cvt.rzi.f32.f32 	%f608, %f602;
	setp.lt.f32 	%p135, %f606, 0f3F000000;
	cvt.rzi.f32.f32 	%f658, %f657;
	setp.gt.f32 	%p156, %f659, 0f4B000000;
	shl.b16 	%rs6, %rs5, 4;
	and.b16  	%rs8, %rs7, 3840;
	selp.f32 	%f159, %f154, %f157, %p14;
	cvt.rzi.f32.f32 	%f160, %f154;
	setp.lt.f32 	%p15, %f158, 0f3F000000;
	selp.f32 	%f193, %f188, %f191, %p20;
	cvt.rzi.f32.f32 	%f194, %f188;
	setp.lt.f32 	%p21, %f192, 0f3F000000;
	selp.f32 	%f228, %f223, %f226, %p26;
	cvt.rzi.f32.f32 	%f229, %f223;
	setp.lt.f32 	%p27, %f227, 0f3F000000;
	selp.f32 	%f262, %f257, %f260, %p32;
	cvt.rzi.f32.f32 	%f263, %f257;
	setp.lt.f32 	%p33, %f261, 0f3F000000;
	selp.f32 	%f297, %f292, %f295, %p38;
	cvt.rzi.f32.f32 	%f298, %f292;
	setp.lt.f32 	%p39, %f296, 0f3F000000;
	selp.f32 	%f331, %f326, %f329, %p44;
	cvt.rzi.f32.f32 	%f332, %f326;
	setp.lt.f32 	%p45, %f330, 0f3F000000;
	selp.f32 	%f366, %f361, %f364, %p50;
	cvt.rzi.f32.f32 	%f367, %f361;
	setp.lt.f32 	%p51, %f365, 0f3F000000;
	selp.f32 	%f400, %f395, %f398, %p56;
	cvt.rzi.f32.f32 	%f401, %f395;
	setp.lt.f32 	%p57, %f399, 0f3F000000;
	selp.f32 	%f449, %f444, %f447, %p74;
	cvt.rzi.f32.f32 	%f450, %f444;
	setp.lt.f32 	%p75, %f448, 0f3F000000;
	selp.f32 	%f501, %f496, %f499, %p94;
	cvt.rzi.f32.f32 	%f502, %f496;
	setp.lt.f32 	%p95, %f500, 0f3F000000;
	selp.f32 	%f557, %f556, %f555, %p115;
	selp.f32 	%f609, %f608, %f607, %p135;
	selp.f32 	%f660, %f655, %f658, %p156;
	cvt.rzi.f32.f32 	%f661, %f655;
	setp.lt.f32 	%p157, %f659, 0f3F000000;
	or.b16  	%rs9, %rs8, %rs6;
	selp.f32 	%f161, %f160, %f159, %p15;
	selp.f32 	%f195, %f194, %f193, %p21;
	selp.f32 	%f230, %f229, %f228, %p27;
	selp.f32 	%f264, %f263, %f262, %p33;
	selp.f32 	%f299, %f298, %f297, %p39;
	selp.f32 	%f333, %f332, %f331, %p45;
	selp.f32 	%f368, %f367, %f366, %p51;
	selp.f32 	%f402, %f401, %f400, %p57;
	selp.f32 	%f451, %f450, %f449, %p75;
	selp.f32 	%f503, %f502, %f501, %p95;
	fma.rn.f32 	%f558, %f557, 0fBF000000, %f761;
	fma.rn.f32 	%f610, %f609, 0fBF000000, %f765;
	selp.f32 	%f662, %f661, %f660, %p157;
	and.b16  	%rs11, %rs9, 13104;
	fma.rn.f32 	%f162, %f161, 0fBF000000, %f153;
	fma.rn.f32 	%f196, %f195, 0fBF000000, %f187;
	fma.rn.f32 	%f231, %f230, 0fBF000000, %f222;
	fma.rn.f32 	%f265, %f264, 0fBF000000, %f256;
	fma.rn.f32 	%f300, %f299, 0fBF000000, %f291;
	fma.rn.f32 	%f334, %f333, 0fBF000000, %f325;
	fma.rn.f32 	%f369, %f368, 0fBF000000, %f360;
	fma.rn.f32 	%f403, %f402, 0fBF000000, %f394;
	fma.rn.f32 	%f452, %f451, 0fBF000000, %f753;
	fma.rn.f32 	%f504, %f503, 0fBF000000, %f757;
	mul.f32 	%f559, %f558, %f558;
	mul.f32 	%f611, %f610, %f610;
	fma.rn.f32 	%f663, %f662, 0fBF000000, %f769;
	shr.u16 	%rs10, %rs9, 2;
	shl.b16 	%rs12, %rs11, 2;
	mul.f32 	%f163, %f162, %f162;
	mul.f32 	%f197, %f196, %f196;
	mul.f32 	%f232, %f231, %f231;
	mul.f32 	%f266, %f265, %f265;
	mul.f32 	%f301, %f300, %f300;
	mul.f32 	%f335, %f334, %f334;
	mul.f32 	%f370, %f369, %f369;
	mul.f32 	%f404, %f403, %f403;
	mul.f32 	%f453, %f452, %f452;
	mul.f32 	%f505, %f504, %f504;
	fma.rn.f32 	%f560, %f559, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f561, %f559, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f612, %f611, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f613, %f611, 0f3E684E12, 0fBFAAD2E0;
	mul.f32 	%f664, %f663, %f663;
	or.b16  	%rs13, %rs10, %rs12;
	cvt.rzi.s32.f32 	%r174, %f161;
	fma.rn.f32 	%f164, %f163, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f165, %f163, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r181, %f195;
	fma.rn.f32 	%f198, %f197, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f199, %f197, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r192, %f230;
	fma.rn.f32 	%f233, %f232, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f234, %f232, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r199, %f264;
	fma.rn.f32 	%f267, %f266, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f268, %f266, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r210, %f299;
	fma.rn.f32 	%f302, %f301, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f303, %f301, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r217, %f333;
	fma.rn.f32 	%f336, %f335, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f337, %f335, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r228, %f368;
	fma.rn.f32 	%f371, %f370, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f372, %f370, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r235, %f402;
	fma.rn.f32 	%f405, %f404, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f406, %f404, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f454, %f453, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f455, %f453, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f506, %f505, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f507, %f505, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r298, %f557;
	fma.rn.f32 	%f562, %f560, %f559, 0fC0A55DF6;
	fma.rn.f32 	%f563, %f561, %f559, 0f4081E0CF;
	fma.rn.f32 	%f564, %f559, %f558, 0f00000000;
	cvt.rzi.s32.f32 	%r330, %f609;
	fma.rn.f32 	%f614, %f612, %f611, 0fC0A55DF6;
	fma.rn.f32 	%f615, %f613, %f611, 0f4081E0CF;
	fma.rn.f32 	%f616, %f611, %f610, 0f00000000;
	fma.rn.f32 	%f665, %f664, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f666, %f664, 0f3E684E12, 0fBFAAD2E0;
	and.b16  	%rs14, %rs13, 20480;
	shl.b16 	%rs16, %rs11, 1;
	add.s32 	%r175, %r174, 1;
	fma.rn.f32 	%f166, %f164, %f163, 0fC0A55DF6;
	fma.rn.f32 	%f167, %f165, %f163, 0f4081E0CF;
	fma.rn.f32 	%f168, %f163, %f162, 0f00000000;
	add.s32 	%r182, %r181, 1;
	fma.rn.f32 	%f200, %f198, %f197, 0fC0A55DF6;
	fma.rn.f32 	%f201, %f199, %f197, 0f4081E0CF;
	fma.rn.f32 	%f202, %f197, %f196, 0f00000000;
	add.s32 	%r193, %r192, 1;
	fma.rn.f32 	%f235, %f233, %f232, 0fC0A55DF6;
	fma.rn.f32 	%f236, %f234, %f232, 0f4081E0CF;
	fma.rn.f32 	%f237, %f232, %f231, 0f00000000;
	add.s32 	%r200, %r199, 1;
	fma.rn.f32 	%f269, %f267, %f266, 0fC0A55DF6;
	fma.rn.f32 	%f270, %f268, %f266, 0f4081E0CF;
	fma.rn.f32 	%f271, %f266, %f265, 0f00000000;
	add.s32 	%r211, %r210, 1;
	fma.rn.f32 	%f304, %f302, %f301, 0fC0A55DF6;
	fma.rn.f32 	%f305, %f303, %f301, 0f4081E0CF;
	fma.rn.f32 	%f306, %f301, %f300, 0f00000000;
	add.s32 	%r218, %r217, 1;
	fma.rn.f32 	%f338, %f336, %f335, 0fC0A55DF6;
	fma.rn.f32 	%f339, %f337, %f335, 0f4081E0CF;
	fma.rn.f32 	%f340, %f335, %f334, 0f00000000;
	add.s32 	%r229, %r228, 1;
	fma.rn.f32 	%f373, %f371, %f370, 0fC0A55DF6;
	fma.rn.f32 	%f374, %f372, %f370, 0f4081E0CF;
	fma.rn.f32 	%f375, %f370, %f369, 0f00000000;
	add.s32 	%r236, %r235, 1;
	fma.rn.f32 	%f407, %f405, %f404, 0fC0A55DF6;
	fma.rn.f32 	%f408, %f406, %f404, 0f4081E0CF;
	fma.rn.f32 	%f409, %f404, %f403, 0f00000000;
	cvt.rzi.s32.f32 	%r253, %f451;
	fma.rn.f32 	%f456, %f454, %f453, 0fC0A55DF6;
	fma.rn.f32 	%f457, %f455, %f453, 0f4081E0CF;
	fma.rn.f32 	%f458, %f453, %f452, 0f00000000;
	cvt.rzi.s32.f32 	%r276, %f503;
	fma.rn.f32 	%f508, %f506, %f505, 0fC0A55DF6;
	fma.rn.f32 	%f509, %f507, %f505, 0f4081E0CF;
	fma.rn.f32 	%f510, %f505, %f504, 0f00000000;
	fma.rn.f32 	%f565, %f563, %f559, 0fC09DE9E6;
	fma.rn.f32 	%f566, %f562, %f564, 0f00000000;
	and.b32  	%r299, %r298, 1;
	fma.rn.f32 	%f617, %f615, %f611, 0fC09DE9E6;
	fma.rn.f32 	%f618, %f614, %f616, 0f00000000;
	and.b32  	%r331, %r330, 1;
	cvt.rzi.s32.f32 	%r345, %f662;
	fma.rn.f32 	%f667, %f665, %f664, 0fC0A55DF6;
	fma.rn.f32 	%f668, %f666, %f664, 0f4081E0CF;
	fma.rn.f32 	%f669, %f664, %f663, 0f00000000;
	shl.b16 	%rs15, %rs14, 1;
	and.b16  	%rs17, %rs16, 16384;
	fma.rn.f32 	%f169, %f167, %f163, 0fC09DE9E6;
	fma.rn.f32 	%f170, %f166, %f168, 0f00000000;
	and.b32  	%r176, %r175, 1;
	fma.rn.f32 	%f203, %f201, %f197, 0fC09DE9E6;
	fma.rn.f32 	%f204, %f200, %f202, 0f00000000;
	and.b32  	%r183, %r182, 1;
	fma.rn.f32 	%f238, %f236, %f232, 0fC09DE9E6;
	fma.rn.f32 	%f239, %f235, %f237, 0f00000000;
	and.b32  	%r194, %r193, 1;
	fma.rn.f32 	%f272, %f270, %f266, 0fC09DE9E6;
	fma.rn.f32 	%f273, %f269, %f271, 0f00000000;
	and.b32  	%r201, %r200, 1;
	fma.rn.f32 	%f307, %f305, %f301, 0fC09DE9E6;
	fma.rn.f32 	%f308, %f304, %f306, 0f00000000;
	and.b32  	%r212, %r211, 1;
	fma.rn.f32 	%f341, %f339, %f335, 0fC09DE9E6;
	fma.rn.f32 	%f342, %f338, %f340, 0f00000000;
	and.b32  	%r219, %r218, 1;
	fma.rn.f32 	%f376, %f374, %f370, 0fC09DE9E6;
	fma.rn.f32 	%f377, %f373, %f375, 0f00000000;
	and.b32  	%r230, %r229, 1;
	fma.rn.f32 	%f410, %f408, %f404, 0fC09DE9E6;
	fma.rn.f32 	%f411, %f407, %f409, 0f00000000;
	and.b32  	%r237, %r236, 1;
	fma.rn.f32 	%f459, %f457, %f453, 0fC09DE9E6;
	fma.rn.f32 	%f460, %f456, %f458, 0f00000000;
	and.b32  	%r254, %r253, 1;
	fma.rn.f32 	%f511, %f509, %f505, 0fC09DE9E6;
	fma.rn.f32 	%f512, %f508, %f510, 0f00000000;
	and.b32  	%r277, %r276, 1;
	fma.rn.f32 	%f567, %f565, %f559, 0f3F800000;
	fma.rn.f32 	%f568, %f558, 0f40490FDB, %f566;
	setp.eq.b32 	%p116, %r299, 1;
	fma.rn.f32 	%f619, %f617, %f611, 0f3F800000;
	fma.rn.f32 	%f620, %f610, 0f40490FDB, %f618;
	setp.eq.b32 	%p136, %r331, 1;
	fma.rn.f32 	%f670, %f668, %f664, 0fC09DE9E6;
	fma.rn.f32 	%f671, %f667, %f669, 0f00000000;
	and.b32  	%r346, %r345, 1;
	or.b16  	%rs18, %rs17, %rs15;
	fma.rn.f32 	%f171, %f169, %f163, 0f3F800000;
	fma.rn.f32 	%f172, %f162, 0f40490FDB, %f170;
	setp.eq.b32 	%p16, %r176, 1;
	fma.rn.f32 	%f205, %f203, %f197, 0f3F800000;
	fma.rn.f32 	%f206, %f196, 0f40490FDB, %f204;
	setp.eq.b32 	%p22, %r183, 1;
	fma.rn.f32 	%f240, %f238, %f232, 0f3F800000;
	fma.rn.f32 	%f241, %f231, 0f40490FDB, %f239;
	setp.eq.b32 	%p28, %r194, 1;
	fma.rn.f32 	%f274, %f272, %f266, 0f3F800000;
	fma.rn.f32 	%f275, %f265, 0f40490FDB, %f273;
	setp.eq.b32 	%p34, %r201, 1;
	fma.rn.f32 	%f309, %f307, %f301, 0f3F800000;
	fma.rn.f32 	%f310, %f300, 0f40490FDB, %f308;
	setp.eq.b32 	%p40, %r212, 1;
	fma.rn.f32 	%f343, %f341, %f335, 0f3F800000;
	fma.rn.f32 	%f344, %f334, 0f40490FDB, %f342;
	setp.eq.b32 	%p46, %r219, 1;
	fma.rn.f32 	%f378, %f376, %f370, 0f3F800000;
	fma.rn.f32 	%f379, %f369, 0f40490FDB, %f377;
	setp.eq.b32 	%p52, %r230, 1;
	fma.rn.f32 	%f412, %f410, %f404, 0f3F800000;
	fma.rn.f32 	%f413, %f403, 0f40490FDB, %f411;
	setp.eq.b32 	%p58, %r237, 1;
	fma.rn.f32 	%f461, %f459, %f453, 0f3F800000;
	fma.rn.f32 	%f462, %f452, 0f40490FDB, %f460;
	setp.eq.b32 	%p76, %r254, 1;
	fma.rn.f32 	%f513, %f511, %f505, 0f3F800000;
	fma.rn.f32 	%f514, %f504, 0f40490FDB, %f512;
	setp.eq.b32 	%p96, %r277, 1;
	selp.f32 	%f569, %f567, %f568, %p116;
	and.b32  	%r300, %r298, 2;
	selp.f32 	%f621, %f619, %f620, %p136;
	and.b32  	%r332, %r330, 2;
	fma.rn.f32 	%f672, %f670, %f664, 0f3F800000;
	fma.rn.f32 	%f673, %f663, 0f40490FDB, %f671;
	setp.eq.b32 	%p158, %r346, 1;
	shr.u16 	%rs1, %rs18, 13;
	selp.f32 	%f173, %f171, %f172, %p16;
	and.b32  	%r177, %r175, 2;
	selp.f32 	%f207, %f205, %f206, %p22;
	and.b32  	%r184, %r182, 2;
	selp.f32 	%f242, %f240, %f241, %p28;
	and.b32  	%r195, %r193, 2;
	selp.f32 	%f276, %f274, %f275, %p34;
	and.b32  	%r202, %r200, 2;
	selp.f32 	%f311, %f309, %f310, %p40;
	and.b32  	%r213, %r211, 2;
	selp.f32 	%f345, %f343, %f344, %p46;
	and.b32  	%r220, %r218, 2;
	selp.f32 	%f380, %f378, %f379, %p52;
	and.b32  	%r231, %r229, 2;
	selp.f32 	%f414, %f412, %f413, %p58;
	and.b32  	%r238, %r236, 2;
	selp.f32 	%f463, %f461, %f462, %p76;
	and.b32  	%r255, %r253, 2;
	selp.f32 	%f515, %f513, %f514, %p96;
	and.b32  	%r278, %r276, 2;
	setp.eq.s32 	%p117, %r300, 0;
	neg.f32 	%f571, %f569;
	add.s32 	%r301, %r298, 1;
	cvt.rzi.f32.f32 	%f576, %f761;
	setp.eq.s32 	%p137, %r332, 0;
	neg.f32 	%f623, %f621;
	add.s32 	%r333, %r330, 1;
	cvt.rzi.f32.f32 	%f628, %f765;
	selp.f32 	%f674, %f672, %f673, %p158;
	and.b32  	%r347, %r345, 2;
	and.b16  	%rs19, %rs1, 6;
	shl.b32 	%r167, %r4, 1;
	setp.eq.s32 	%p17, %r177, 0;
	sub.f32 	%f175, %f174, %f173;
	setp.eq.s32 	%p23, %r184, 0;
	sub.f32 	%f209, %f174, %f207;
	setp.eq.s32 	%p29, %r195, 0;
	sub.f32 	%f244, %f174, %f242;
	setp.eq.s32 	%p35, %r202, 0;
	sub.f32 	%f278, %f174, %f276;
	setp.eq.s32 	%p41, %r213, 0;
	sub.f32 	%f313, %f174, %f311;
	setp.eq.s32 	%p47, %r220, 0;
	sub.f32 	%f347, %f174, %f345;
	setp.eq.s32 	%p53, %r231, 0;
	sub.f32 	%f382, %f174, %f380;
	setp.eq.s32 	%p59, %r238, 0;
	sub.f32 	%f416, %f174, %f414;
	setp.eq.s32 	%p77, %r255, 0;
	neg.f32 	%f465, %f463;
	add.s32 	%r256, %r253, 1;
	cvt.rzi.f32.f32 	%f470, %f753;
	setp.eq.s32 	%p97, %r278, 0;
	neg.f32 	%f517, %f515;
	add.s32 	%r279, %r276, 1;
	cvt.rzi.f32.f32 	%f522, %f757;
	selp.f32 	%f570, %f568, %f567, %p116;
	selp.f32 	%f572, %f569, %f571, %p117;
	and.b32  	%r302, %r301, 2;
	setp.eq.f32 	%p119, %f576, %f761;
	mul.f32 	%f577, %f761, 0f00000000;
	selp.f32 	%f622, %f620, %f619, %p136;
	selp.f32 	%f624, %f621, %f623, %p137;
	and.b32  	%r334, %r333, 2;
	setp.eq.f32 	%p139, %f628, %f765;
	mul.f32 	%f629, %f765, 0f00000000;
	setp.eq.s32 	%p159, %r347, 0;
	neg.f32 	%f676, %f674;
	add.s32 	%r348, %r345, 1;
	cvt.rzi.f32.f32 	%f681, %f769;
	cvt.u32.u16 	%r12, %rs19;
	and.b32  	%r13, %r167, 504;
	selp.f32 	%f176, %f173, %f175, %p17;
	selp.f32 	%f210, %f207, %f209, %p23;
	selp.f32 	%f245, %f242, %f244, %p29;
	selp.f32 	%f279, %f276, %f278, %p35;
	selp.f32 	%f314, %f311, %f313, %p41;
	selp.f32 	%f348, %f345, %f347, %p47;
	selp.f32 	%f383, %f380, %f382, %p53;
	selp.f32 	%f417, %f414, %f416, %p59;
	selp.f32 	%f464, %f462, %f461, %p76;
	selp.f32 	%f466, %f463, %f465, %p77;
	and.b32  	%r257, %r256, 2;
	setp.eq.f32 	%p79, %f470, %f753;
	mul.f32 	%f471, %f753, 0f00000000;
	selp.f32 	%f516, %f514, %f513, %p96;
	selp.f32 	%f518, %f515, %f517, %p97;
	and.b32  	%r280, %r279, 2;
	setp.eq.f32 	%p99, %f522, %f757;
	mul.f32 	%f523, %f757, 0f00000000;
	setp.eq.s32 	%p118, %r302, 0;
	sub.f32 	%f574, %f174, %f570;
	selp.f32 	%f91, %f577, %f572, %p119;
	abs.f32 	%f578, %f761;
	setp.eq.s32 	%p138, %r334, 0;
	sub.f32 	%f626, %f174, %f622;
	selp.f32 	%f630, %f629, %f624, %p139;
	abs.f32 	%f631, %f765;
	selp.f32 	%f675, %f673, %f672, %p158;
	selp.f32 	%f677, %f674, %f676, %p159;
	and.b32  	%r349, %r348, 2;
	setp.eq.f32 	%p161, %f681, %f769;
	mul.f32 	%f682, %f769, 0f00000000;
	or.b32  	%r168, %r13, %r12;
	mul.f32 	%f2, %f176, %f176;
	mul.f32 	%f7, %f210, %f210;
	mul.f32 	%f11, %f245, %f245;
	mul.f32 	%f16, %f279, %f279;
	mul.f32 	%f20, %f314, %f314;
	mul.f32 	%f25, %f348, %f348;
	mul.f32 	%f29, %f383, %f383;
	mul.f32 	%f34, %f417, %f417;
	setp.eq.s32 	%p78, %r257, 0;
	sub.f32 	%f468, %f174, %f464;
	selp.f32 	%f55, %f471, %f466, %p79;
	abs.f32 	%f472, %f753;
	setp.eq.s32 	%p98, %r280, 0;
	sub.f32 	%f520, %f174, %f516;
	selp.f32 	%f524, %f523, %f518, %p99;
	abs.f32 	%f525, %f757;
	selp.f32 	%f575, %f570, %f574, %p118;
	setp.gt.f32 	%p120, %f578, 0f4B800000;
	add.f32 	%f579, %f91, 0f3F800000;
	selp.f32 	%f627, %f622, %f626, %p138;
	setp.gt.f32 	%p140, %f631, 0f4B800000;
	add.f32 	%f632, %f630, 0f3F800000;
	setp.eq.s32 	%p160, %r349, 0;
	sub.f32 	%f679, %f174, %f675;
	selp.f32 	%f683, %f682, %f677, %p161;
	abs.f32 	%f684, %f769;
	shr.u32 	%r169, %r168, 1;
	mul.f32 	%f180, %f2, 0f3D87E86B;
	mul.f32 	%f214, %f7, 0f3D87E86B;
	mul.f32 	%f249, %f11, 0f3D87E86B;
	mul.f32 	%f283, %f16, 0f3D87E86B;
	mul.f32 	%f318, %f20, 0f3D87E86B;
	mul.f32 	%f352, %f25, 0f3D87E86B;
	mul.f32 	%f387, %f29, 0f3D87E86B;
	mul.f32 	%f420, %f34, 0f3D87E86B;
	selp.f32 	%f469, %f464, %f468, %p78;
	setp.gt.f32 	%p80, %f472, 0f4B800000;
	add.f32 	%f473, %f55, 0f3F800000;
	selp.f32 	%f521, %f516, %f520, %p98;
	setp.gt.f32 	%p100, %f525, 0f4B800000;
	add.f32 	%f526, %f524, 0f3F800000;
	selp.f32 	%f92, %f579, %f575, %p120;
	selp.f32 	%f633, %f632, %f627, %p140;
	setp.eq.s32 	%p155, %r49, %r12;
	selp.f32 	%f680, %f675, %f679, %p160;
	setp.gt.f32 	%p162, %f684, 0f4B800000;
	add.f32 	%f685, %f683, 0f3F800000;
	ld.param.u64 	%rd1, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_5];
	mul.wide.u32 	%rd70, %r169, 4;
	mul.f32 	%f6, %f180, %f743;
	mul.f32 	%f215, %f214, %f744;
	mul.f32 	%f15, %f249, %f745;
	mul.f32 	%f284, %f283, %f746;
	mul.f32 	%f24, %f318, %f747;
	mul.f32 	%f353, %f352, %f748;
	mul.f32 	%f33, %f387, %f749;
	mul.f32 	%f421, %f420, %f750;
	selp.f32 	%f56, %f473, %f469, %p80;
	selp.f32 	%f527, %f526, %f521, %p100;
	mov.b32 	%r317, %f633;
	mov.b32 	%r316, %f92;
	mov.b32 	%r323, %f630;
	mov.b32 	%r322, %f91;
	or.b16  	%rs20, %rs1, 1;
	selp.f32 	%f686, %f685, %f680, %p162;
	selp.f32 	%f687, 0f3F800000, 0f00000000, %p155;
	add.s64 	%rd71, %rd1, %rd70;
	mov.b32 	%r187, %f215;
	mov.b32 	%r186, %f6;
	mov.b32 	%r205, %f284;
	mov.b32 	%r204, %f15;
	mov.b32 	%r223, %f353;
	mov.b32 	%r222, %f24;
	mov.b32 	%r241, %f421;
	mov.b32 	%r240, %f33;
	mov.b32 	%r269, %f527;
	mov.b32 	%r268, %f56;
	mov.b32 	%r272, %f524;
	mov.b32 	%r271, %f55;
	xor.b32  	%r320, %r323, -2147483648;
	xor.b32  	%r319, %r322, -2147483648;
	cvt.u32.u16 	%r71, %rs20;
	mul.f32 	%f127, %f686, %f687;
	mul.f32 	%f128, %f683, %f687;
	ld.param.u64 	%rd2, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_6];
	ld.param.u64 	%rd3, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_7];
	shl.b32 	%r10, %r1, 2;
	and.b32  	%r11, %r1, 2;
	ld.global.u32 	%r14, [%rd71];
	// begin inline asm
	cvt.rn.f16x2.f32 %r185, %r187, %r186;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r203, %r205, %r204;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r221, %r223, %r222;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r239, %r241, %r240;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r267, %r269, %r268;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r270, %r272, %r271;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r315, %r317, %r316;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r318, %r320, %r319;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r321, %r323, %r322;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r324, %r317, %r316;
	// end inline asm
	setp.eq.s32 	%p175, %r49, %r71;
	add.f32 	%f708, %f773, %f773;
	mov.b32 	%r368, %f708;
	and.b32  	%r369, %r368, -2147483648;
	or.b32  	%r370, %r369, 1056964608;
	mov.b32 	%f709, %r370;
	add.f32 	%f710, %f708, %f709;
	cvt.rzi.f32.f32 	%f711, %f710;
	abs.f32 	%f712, %f708;
	setp.gt.f32 	%p176, %f712, 0f4B000000;
	selp.f32 	%f713, %f708, %f711, %p176;
	cvt.rzi.f32.f32 	%f714, %f708;
	setp.lt.f32 	%p177, %f712, 0f3F000000;
	selp.f32 	%f715, %f714, %f713, %p177;
	cvt.rzi.s32.f32 	%r371, %f715;
	fma.rn.f32 	%f716, %f715, 0fBF000000, %f773;
	mul.f32 	%f717, %f716, %f716;
	fma.rn.f32 	%f718, %f717, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f719, %f717, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f720, %f718, %f717, 0fC0A55DF6;
	fma.rn.f32 	%f721, %f719, %f717, 0f4081E0CF;
	fma.rn.f32 	%f722, %f717, %f716, 0f00000000;
	fma.rn.f32 	%f723, %f721, %f717, 0fC09DE9E6;
	fma.rn.f32 	%f724, %f720, %f722, 0f00000000;
	fma.rn.f32 	%f725, %f723, %f717, 0f3F800000;
	fma.rn.f32 	%f726, %f716, 0f40490FDB, %f724;
	and.b32  	%r372, %r371, 1;
	setp.eq.b32 	%p178, %r372, 1;
	selp.f32 	%f727, %f725, %f726, %p178;
	selp.f32 	%f728, %f726, %f725, %p178;
	and.b32  	%r373, %r371, 2;
	setp.eq.s32 	%p179, %r373, 0;
	neg.f32 	%f729, %f727;
	selp.f32 	%f730, %f727, %f729, %p179;
	add.s32 	%r374, %r371, 1;
	and.b32  	%r375, %r374, 2;
	setp.eq.s32 	%p180, %r375, 0;
	sub.f32 	%f732, %f174, %f728;
	selp.f32 	%f733, %f728, %f732, %p180;
	cvt.rzi.f32.f32 	%f734, %f773;
	setp.eq.f32 	%p181, %f734, %f773;
	mul.f32 	%f735, %f773, 0f00000000;
	selp.f32 	%f736, %f735, %f730, %p181;
	abs.f32 	%f737, %f773;
	setp.gt.f32 	%p182, %f737, 0f4B800000;
	add.f32 	%f738, %f736, 0f3F800000;
	selp.f32 	%f739, %f738, %f733, %p182;
	selp.f32 	%f740, 0f3F800000, 0f00000000, %p175;
	mul.f32 	%f741, %f739, %f740;
	mul.f32 	%f742, %f736, %f740;
	mov.b32 	%r358, %f741;
	mov.b32 	%r357, %f127;
	// begin inline asm
	cvt.rn.f16x2.f32 %r356, %r358, %r357;
	// end inline asm
	mov.b32 	%r364, %f742;
	xor.b32  	%r361, %r364, -2147483648;
	mov.b32 	%r363, %f128;
	xor.b32  	%r360, %r363, -2147483648;
	// begin inline asm
	cvt.rn.f16x2.f32 %r359, %r361, %r360;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r362, %r364, %r363;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r365, %r358, %r357;
	// end inline asm
	shl.b32 	%r377, %r6, 13;
	and.b32  	%r378, %r5, 7168;
	shl.b32 	%r379, %r4, 5;
	and.b32  	%r104, %r379, 64;
	and.b32  	%r380, %r10, 28;
	and.b32  	%r381, %r379, 32;
	and.b32  	%r105, %r2, 1;
	shl.b32 	%r382, %r2, 2;
	and.b32  	%r106, %r382, 24;
	or.b32  	%r383, %r378, %r377;
	or.b32  	%r384, %r383, %r104;
	or.b32  	%r385, %r384, %r381;
	or.b32  	%r107, %r385, %r380;
	add.s32 	%r108, %r107, 262144;
	add.s32 	%r109, %r107, 524288;
	add.s32 	%r110, %r107, 786432;
	add.s32 	%r111, %r107, 1048576;
	add.s32 	%r112, %r107, 1310720;
	add.s32 	%r113, %r107, 1572864;
	add.s32 	%r114, %r107, 1835008;
	and.b32  	%r115, %r1, 8;
	shl.b32 	%r386, %r1, 4;
	or.b32  	%r387, %r386, %r115;
	shr.u32 	%r388, %r387, 2;
	and.b32  	%r389, %r388, 30;
	mul.lo.s32 	%r390, %r105, 130;
	shr.u32 	%r391, %r2, 1;
	mul.lo.s32 	%r392, %r391, 289;
	shr.u32 	%r393, %r1, 4;
	mul.lo.s32 	%r394, %r393, 65;
	add.s32 	%r395, %r389, %r390;
	add.s32 	%r396, %r395, %r392;
	add.s32 	%r397, %r396, %r394;
	mul.wide.u32 	%rd72, %r397, 4;
	mov.u64 	%rd73, shmem;
	add.s64 	%rd11, %rd73, %rd72;
	cvt.u64.u32 	%rd74, %r394;
	cvt.u64.u32 	%rd75, %r392;
	cvt.u64.u32 	%rd76, %r389;
	cvt.u64.u32 	%rd77, %r390;
	add.s64 	%rd78, %rd77, %rd76;
	add.s64 	%rd79, %rd78, %rd75;
	add.s64 	%rd80, %rd79, %rd74;
	shl.b64 	%rd81, %rd80, 2;
	add.s64 	%rd12, %rd73, %rd81;
	or.b32  	%r398, %r391, 4;
	mul.lo.s32 	%r399, %r398, 289;
	add.s32 	%r400, %r395, %r399;
	add.s32 	%r401, %r400, %r394;
	mul.wide.u32 	%rd82, %r401, 4;
	add.s64 	%rd13, %rd73, %rd82;
	cvt.u64.u32 	%rd83, %r399;
	add.s64 	%rd84, %rd78, %rd83;
	add.s64 	%rd85, %rd84, %rd74;
	shl.b64 	%rd86, %rd85, 2;
	add.s64 	%rd14, %rd73, %rd86;
	or.b32  	%r402, %r391, 8;
	mul.lo.s32 	%r403, %r402, 289;
	add.s32 	%r404, %r395, %r403;
	add.s32 	%r405, %r404, %r394;
	mul.wide.u32 	%rd87, %r405, 4;
	add.s64 	%rd15, %rd73, %rd87;
	cvt.u64.u32 	%rd88, %r403;
	add.s64 	%rd89, %rd78, %rd88;
	add.s64 	%rd90, %rd89, %rd74;
	shl.b64 	%rd91, %rd90, 2;
	add.s64 	%rd16, %rd73, %rd91;
	or.b32  	%r406, %r391, 12;
	mul.lo.s32 	%r407, %r406, 289;
	add.s32 	%r408, %r395, %r407;
	add.s32 	%r409, %r408, %r394;
	mul.wide.u32 	%rd92, %r409, 4;
	add.s64 	%rd17, %rd73, %rd92;
	cvt.u64.u32 	%rd93, %r407;
	add.s64 	%rd94, %rd78, %rd93;
	add.s64 	%rd95, %rd94, %rd74;
	shl.b64 	%rd96, %rd95, 2;
	add.s64 	%rd18, %rd73, %rd96;
	or.b32  	%r410, %r391, 16;
	mul.lo.s32 	%r411, %r410, 289;
	add.s32 	%r412, %r395, %r411;
	add.s32 	%r413, %r412, %r394;
	mul.wide.u32 	%rd97, %r413, 4;
	add.s64 	%rd19, %rd73, %rd97;
	cvt.u64.u32 	%rd98, %r411;
	add.s64 	%rd99, %rd78, %rd98;
	add.s64 	%rd100, %rd99, %rd74;
	shl.b64 	%rd101, %rd100, 2;
	add.s64 	%rd20, %rd73, %rd101;
	or.b32  	%r414, %r391, 20;
	mul.lo.s32 	%r415, %r414, 289;
	add.s32 	%r416, %r395, %r415;
	add.s32 	%r417, %r416, %r394;
	mul.wide.u32 	%rd102, %r417, 4;
	add.s64 	%rd21, %rd73, %rd102;
	cvt.u64.u32 	%rd103, %r415;
	add.s64 	%rd104, %rd78, %rd103;
	add.s64 	%rd105, %rd104, %rd74;
	shl.b64 	%rd106, %rd105, 2;
	add.s64 	%rd22, %rd73, %rd106;
	or.b32  	%r418, %r391, 24;
	mul.lo.s32 	%r419, %r418, 289;
	add.s32 	%r420, %r395, %r419;
	add.s32 	%r421, %r420, %r394;
	mul.wide.u32 	%rd107, %r421, 4;
	add.s64 	%rd23, %rd73, %rd107;
	cvt.u64.u32 	%rd108, %r419;
	add.s64 	%rd109, %rd78, %rd108;
	add.s64 	%rd110, %rd109, %rd74;
	shl.b64 	%rd111, %rd110, 2;
	add.s64 	%rd24, %rd73, %rd111;
	or.b32  	%r422, %r391, 28;
	mul.lo.s32 	%r423, %r422, 289;
	add.s32 	%r424, %r395, %r423;
	add.s32 	%r425, %r424, %r394;
	mul.wide.u32 	%rd112, %r425, 4;
	add.s64 	%rd25, %rd73, %rd112;
	cvt.u64.u32 	%rd113, %r423;
	add.s64 	%rd114, %rd78, %rd113;
	add.s64 	%rd115, %rd114, %rd74;
	shl.b64 	%rd116, %rd115, 2;
	add.s64 	%rd26, %rd73, %rd116;
	and.b32  	%r426, %r10, 16;
	shl.b32 	%r427, %r4, 7;
	and.b32  	%r428, %r427, 128;
	or.b32  	%r429, %r428, %r426;
	shl.b32 	%r430, %r1, 3;
	and.b32  	%r431, %r430, 64;
	or.b32  	%r432, %r429, %r431;
	and.b32  	%r433, %r58, 32;
	or.b32  	%r434, %r432, %r433;
	shl.b32 	%r435, %r2, 1;
	or.b32  	%r436, %r434, %r435;
	bfe.u32 	%r437, %r436, 2, 5;
	and.b32  	%r438, %r3, 32;
	mul.lo.s32 	%r439, %r16, 65;
	or.b32  	%r440, %r11, %r10;
	bfe.u32 	%r441, %r440, 1, 2;
	add.s32 	%r442, %r392, %r389;
	add.s32 	%r443, %r399, %r389;
	add.s32 	%r444, %r403, %r389;
	add.s32 	%r445, %r407, %r389;
	add.s32 	%r446, %r411, %r389;
	add.s32 	%r447, %r415, %r389;
	add.s32 	%r448, %r419, %r389;
	add.s32 	%r449, %r423, %r389;
	and.b32  	%r116, %r2, 6;
	shl.b32 	%r450, %r8, 16;
	add.s32 	%r451, %r450, -196608;
	and.b32  	%r452, %r382, 4;
	or.b32  	%r453, %r46, %r452;
	or.b32  	%r454, %r453, %r13;
	shl.b32 	%r117, %r454, 7;
	or.b32  	%r118, %r381, %r380;
	shl.b32 	%r455, %r2, 15;
	and.b32  	%r119, %r455, 196608;
	cvt.s64.s32 	%rd27, %r451;
	and.b32  	%r456, %r435, 2;
	or.b32  	%r457, %r393, %r456;
	mul.lo.s32 	%r458, %r457, 65;
	add.s32 	%r459, %r442, %r458;
	mul.wide.u32 	%rd117, %r459, 4;
	add.s64 	%rd28, %rd73, %rd117;
	cvt.u64.u32 	%rd118, %r458;
	add.s64 	%rd119, %rd76, %rd75;
	add.s64 	%rd120, %rd119, %rd118;
	shl.b64 	%rd121, %rd120, 2;
	add.s64 	%rd29, %rd73, %rd121;
	add.s32 	%r460, %r443, %r458;
	mul.wide.u32 	%rd122, %r460, 4;
	add.s64 	%rd30, %rd73, %rd122;
	add.s64 	%rd123, %rd76, %rd83;
	add.s64 	%rd124, %rd123, %rd118;
	shl.b64 	%rd125, %rd124, 2;
	add.s64 	%rd31, %rd73, %rd125;
	add.s32 	%r461, %r444, %r458;
	mul.wide.u32 	%rd126, %r461, 4;
	add.s64 	%rd32, %rd73, %rd126;
	add.s64 	%rd127, %rd76, %rd88;
	add.s64 	%rd128, %rd127, %rd118;
	shl.b64 	%rd129, %rd128, 2;
	add.s64 	%rd33, %rd73, %rd129;
	add.s32 	%r462, %r445, %r458;
	mul.wide.u32 	%rd130, %r462, 4;
	add.s64 	%rd34, %rd73, %rd130;
	add.s64 	%rd131, %rd76, %rd93;
	add.s64 	%rd132, %rd131, %rd118;
	shl.b64 	%rd133, %rd132, 2;
	add.s64 	%rd35, %rd73, %rd133;
	add.s32 	%r463, %r446, %r458;
	mul.wide.u32 	%rd134, %r463, 4;
	add.s64 	%rd36, %rd73, %rd134;
	add.s64 	%rd135, %rd76, %rd98;
	add.s64 	%rd136, %rd135, %rd118;
	shl.b64 	%rd137, %rd136, 2;
	add.s64 	%rd37, %rd73, %rd137;
	add.s32 	%r464, %r447, %r458;
	mul.wide.u32 	%rd138, %r464, 4;
	add.s64 	%rd38, %rd73, %rd138;
	add.s64 	%rd139, %rd76, %rd103;
	add.s64 	%rd140, %rd139, %rd118;
	shl.b64 	%rd141, %rd140, 2;
	add.s64 	%rd39, %rd73, %rd141;
	add.s32 	%r465, %r448, %r458;
	mul.wide.u32 	%rd142, %r465, 4;
	add.s64 	%rd40, %rd73, %rd142;
	add.s64 	%rd143, %rd76, %rd108;
	add.s64 	%rd144, %rd143, %rd118;
	shl.b64 	%rd145, %rd144, 2;
	add.s64 	%rd41, %rd73, %rd145;
	add.s32 	%r466, %r449, %r458;
	mul.wide.u32 	%rd146, %r466, 4;
	add.s64 	%rd42, %rd73, %rd146;
	add.s64 	%rd147, %rd76, %rd113;
	add.s64 	%rd148, %rd147, %rd118;
	shl.b64 	%rd149, %rd148, 2;
	add.s64 	%rd43, %rd73, %rd149;
	mad.lo.s32 	%r467, %r441, 65, %r438;
	add.s32 	%r468, %r467, %r437;
	mul.wide.u32 	%rd150, %r468, 4;
	add.s64 	%rd44, %rd73, %rd150;
	mad.lo.s32 	%r469, %r17, 130, %r439;
	add.s32 	%r470, %r469, %r438;
	add.s32 	%r471, %r470, %r437;
	mul.wide.u32 	%rd151, %r471, 4;
	add.s64 	%rd45, %rd73, %rd151;
	setp.eq.s32 	%p184, %r115, 0;
	mov.u16 	%rs86, 25600;
	mov.u16 	%rs60, 21504;
	mov.u16 	%rs94, 18432;
	mov.u16 	%rs82, -14592;
	setp.eq.s32 	%p210, %r116, 6;
	mov.u32 	%r72, %r1372;
	mov.u32 	%r1389, %r1372;
	mov.u32 	%r1384, %r1372;
	mov.u32 	%r1385, %r1372;
	bra.uni 	LBB0_85;
LBB0_121:                               // %pass11676
                                        //   in Loop: Header=BB0_85 Depth=1
	add.s32 	%r1364, %r1394, 1835008;
	or.b32  	%r1365, %r1364, %r104;
	add.s32 	%r1366, %r1365, %r117;
	or.b32  	%r1367, %r1366, %r118;
	add.s32 	%r1368, %r1367, %r119;
	cvt.s64.s32 	%rd252, %r1368;
	add.s64 	%rd253, %rd252, %rd27;
	shr.u64 	%rd254, %rd253, 38;
	add.s64 	%rd255, %rd253, %rd254;
	shr.s64 	%rd256, %rd255, 26;
	and.b64  	%rd257, %rd255, -67108864;
	setp.ne.s64 	%p237, %rd257, %rd253;
	setp.lt.s64 	%p238, %rd253, 0;
	and.pred  	%p239, %p238, %p237;
	selp.u64 	%rd258, 1, 0, %p239;
	sub.s64 	%rd259, %rd258, %rd256;
	shl.b64 	%rd260, %rd259, 26;
	add.s64 	%rd261, %rd260, %rd253;
	shl.b64 	%rd262, %rd261, 2;
	add.s64 	%rd263, %rd3, %rd262;
	st.global.v4.u32 	[%rd263], {%r152, %r154, %r153, %r155};
	setp.ne.s32 	%p240, %r72, 7936;
	add.s32 	%r72, %r72, 256;
	add.s32 	%r1369, %r72, %r6;
	setp.gt.s32 	%p241, %r7, %r1369;
	and.pred  	%p242, %p240, %p241;
	@%p242 bra 	LBB0_85;
	bra.uni 	LBB0_122;
LBB0_85:                                // %L1346
                                        // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_86 Depth 2
	or.b32  	%r601, %r105, %r72;
	or.b32  	%r602, %r601, %r47;
	or.b32  	%r603, %r602, %r48;
	or.b32  	%r604, %r603, %r106;
	shl.b32 	%r605, %r604, 13;
	add.s32 	%r606, %r107, %r605;
	shr.s32 	%r607, %r606, 31;
	shr.u32 	%r608, %r607, 6;
	add.s32 	%r609, %r606, %r608;
	shr.s32 	%r610, %r609, 26;
	and.b32  	%r611, %r609, -67108864;
	setp.ne.s32 	%p185, %r611, %r606;
	setp.lt.s32 	%p186, %r606, 0;
	and.pred  	%p187, %p186, %p185;
	selp.u32 	%r612, 1, 0, %p187;
	sub.s32 	%r613, %r612, %r610;
	shl.b32 	%r614, %r613, 26;
	add.s32 	%r615, %r614, %r606;
	mul.wide.s32 	%rd152, %r615, 4;
	add.s64 	%rd153, %rd2, %rd152;
	ld.global.v4.u32 	{%r616, %r617, %r618, %r619}, [%rd153];
	add.s32 	%r620, %r108, %r605;
	shr.s32 	%r621, %r620, 31;
	shr.u32 	%r622, %r621, 6;
	add.s32 	%r623, %r620, %r622;
	shr.s32 	%r624, %r623, 26;
	and.b32  	%r625, %r623, -67108864;
	setp.ne.s32 	%p188, %r625, %r620;
	setp.lt.s32 	%p189, %r620, 0;
	and.pred  	%p190, %p189, %p188;
	selp.u32 	%r626, 1, 0, %p190;
	sub.s32 	%r627, %r626, %r624;
	shl.b32 	%r628, %r627, 26;
	add.s32 	%r629, %r628, %r620;
	mul.wide.s32 	%rd154, %r629, 4;
	add.s64 	%rd155, %rd2, %rd154;
	ld.global.v4.u32 	{%r630, %r631, %r632, %r633}, [%rd155];
	add.s32 	%r634, %r109, %r605;
	shr.s32 	%r635, %r634, 31;
	shr.u32 	%r636, %r635, 6;
	add.s32 	%r637, %r634, %r636;
	shr.s32 	%r638, %r637, 26;
	and.b32  	%r639, %r637, -67108864;
	setp.ne.s32 	%p191, %r639, %r634;
	setp.lt.s32 	%p192, %r634, 0;
	and.pred  	%p193, %p192, %p191;
	selp.u32 	%r640, 1, 0, %p193;
	sub.s32 	%r641, %r640, %r638;
	shl.b32 	%r642, %r641, 26;
	add.s32 	%r643, %r642, %r634;
	mul.wide.s32 	%rd156, %r643, 4;
	add.s64 	%rd157, %rd2, %rd156;
	ld.global.v4.u32 	{%r644, %r645, %r646, %r647}, [%rd157];
	add.s32 	%r648, %r110, %r605;
	shr.s32 	%r649, %r648, 31;
	shr.u32 	%r650, %r649, 6;
	add.s32 	%r651, %r648, %r650;
	shr.s32 	%r652, %r651, 26;
	and.b32  	%r653, %r651, -67108864;
	setp.ne.s32 	%p194, %r653, %r648;
	setp.lt.s32 	%p195, %r648, 0;
	and.pred  	%p196, %p195, %p194;
	selp.u32 	%r654, 1, 0, %p196;
	sub.s32 	%r655, %r654, %r652;
	shl.b32 	%r656, %r655, 26;
	add.s32 	%r657, %r656, %r648;
	mul.wide.s32 	%rd158, %r657, 4;
	add.s64 	%rd159, %rd2, %rd158;
	ld.global.v4.u32 	{%r658, %r659, %r660, %r661}, [%rd159];
	add.s32 	%r662, %r111, %r605;
	shr.s32 	%r663, %r662, 31;
	shr.u32 	%r664, %r663, 6;
	add.s32 	%r665, %r662, %r664;
	shr.s32 	%r666, %r665, 26;
	and.b32  	%r667, %r665, -67108864;
	setp.ne.s32 	%p197, %r667, %r662;
	setp.lt.s32 	%p198, %r662, 0;
	and.pred  	%p199, %p198, %p197;
	selp.u32 	%r668, 1, 0, %p199;
	sub.s32 	%r669, %r668, %r666;
	shl.b32 	%r670, %r669, 26;
	add.s32 	%r671, %r670, %r662;
	mul.wide.s32 	%rd160, %r671, 4;
	add.s64 	%rd161, %rd2, %rd160;
	ld.global.v4.u32 	{%r672, %r673, %r674, %r675}, [%rd161];
	add.s32 	%r676, %r112, %r605;
	shr.s32 	%r677, %r676, 31;
	shr.u32 	%r678, %r677, 6;
	add.s32 	%r679, %r676, %r678;
	shr.s32 	%r680, %r679, 26;
	and.b32  	%r681, %r679, -67108864;
	setp.ne.s32 	%p200, %r681, %r676;
	setp.lt.s32 	%p201, %r676, 0;
	and.pred  	%p202, %p201, %p200;
	selp.u32 	%r682, 1, 0, %p202;
	sub.s32 	%r683, %r682, %r680;
	shl.b32 	%r684, %r683, 26;
	add.s32 	%r685, %r684, %r676;
	mul.wide.s32 	%rd162, %r685, 4;
	add.s64 	%rd163, %rd2, %rd162;
	ld.global.v4.u32 	{%r686, %r687, %r688, %r689}, [%rd163];
	add.s32 	%r690, %r113, %r605;
	shr.s32 	%r691, %r690, 31;
	shr.u32 	%r692, %r691, 6;
	add.s32 	%r693, %r690, %r692;
	shr.s32 	%r694, %r693, 26;
	and.b32  	%r695, %r693, -67108864;
	setp.ne.s32 	%p203, %r695, %r690;
	setp.lt.s32 	%p204, %r690, 0;
	and.pred  	%p205, %p204, %p203;
	selp.u32 	%r696, 1, 0, %p205;
	sub.s32 	%r697, %r696, %r694;
	shl.b32 	%r698, %r697, 26;
	add.s32 	%r699, %r698, %r690;
	mul.wide.s32 	%rd164, %r699, 4;
	add.s64 	%rd165, %rd2, %rd164;
	ld.global.v4.u32 	{%r700, %r701, %r702, %r703}, [%rd165];
	add.s32 	%r704, %r114, %r605;
	shr.s32 	%r705, %r704, 31;
	shr.u32 	%r706, %r705, 6;
	add.s32 	%r707, %r704, %r706;
	shr.s32 	%r708, %r707, 26;
	and.b32  	%r709, %r707, -67108864;
	setp.ne.s32 	%p206, %r709, %r704;
	setp.lt.s32 	%p207, %r704, 0;
	and.pred  	%p208, %p207, %p206;
	selp.u32 	%r710, 1, 0, %p208;
	sub.s32 	%r711, %r710, %r708;
	shl.b32 	%r712, %r711, 26;
	add.s32 	%r713, %r712, %r704;
	mul.wide.s32 	%rd166, %r713, 4;
	add.s64 	%rd167, %rd2, %rd166;
	ld.global.v4.u32 	{%r714, %r715, %r716, %r717}, [%rd167];
	selp.b32 	%r718, %r618, %r616, %p184;
	shfl.sync.bfly.b32	%r719, %r718, 8, 31, -1;
	selp.b32 	%r473, %r616, %r719, %p184;
	selp.b32 	%r474, %r719, %r618, %p184;
	selp.b32 	%r720, %r619, %r617, %p184;
	shfl.sync.bfly.b32	%r721, %r720, 8, 31, -1;
	selp.b32 	%r481, %r617, %r721, %p184;
	selp.b32 	%r482, %r721, %r619, %p184;
	selp.b32 	%r722, %r632, %r630, %p184;
	shfl.sync.bfly.b32	%r723, %r722, 8, 31, -1;
	selp.b32 	%r489, %r630, %r723, %p184;
	selp.b32 	%r490, %r723, %r632, %p184;
	selp.b32 	%r724, %r633, %r631, %p184;
	shfl.sync.bfly.b32	%r725, %r724, 8, 31, -1;
	selp.b32 	%r497, %r631, %r725, %p184;
	selp.b32 	%r498, %r725, %r633, %p184;
	selp.b32 	%r726, %r646, %r644, %p184;
	shfl.sync.bfly.b32	%r727, %r726, 8, 31, -1;
	selp.b32 	%r505, %r644, %r727, %p184;
	selp.b32 	%r506, %r727, %r646, %p184;
	selp.b32 	%r728, %r647, %r645, %p184;
	shfl.sync.bfly.b32	%r729, %r728, 8, 31, -1;
	selp.b32 	%r513, %r645, %r729, %p184;
	selp.b32 	%r514, %r729, %r647, %p184;
	selp.b32 	%r730, %r660, %r658, %p184;
	shfl.sync.bfly.b32	%r731, %r730, 8, 31, -1;
	selp.b32 	%r521, %r658, %r731, %p184;
	selp.b32 	%r522, %r731, %r660, %p184;
	selp.b32 	%r732, %r661, %r659, %p184;
	shfl.sync.bfly.b32	%r733, %r732, 8, 31, -1;
	selp.b32 	%r529, %r659, %r733, %p184;
	selp.b32 	%r530, %r733, %r661, %p184;
	selp.b32 	%r734, %r674, %r672, %p184;
	shfl.sync.bfly.b32	%r735, %r734, 8, 31, -1;
	selp.b32 	%r537, %r672, %r735, %p184;
	selp.b32 	%r538, %r735, %r674, %p184;
	selp.b32 	%r736, %r675, %r673, %p184;
	shfl.sync.bfly.b32	%r737, %r736, 8, 31, -1;
	selp.b32 	%r545, %r673, %r737, %p184;
	selp.b32 	%r546, %r737, %r675, %p184;
	selp.b32 	%r738, %r688, %r686, %p184;
	shfl.sync.bfly.b32	%r739, %r738, 8, 31, -1;
	selp.b32 	%r553, %r686, %r739, %p184;
	selp.b32 	%r554, %r739, %r688, %p184;
	selp.b32 	%r740, %r689, %r687, %p184;
	shfl.sync.bfly.b32	%r741, %r740, 8, 31, -1;
	selp.b32 	%r561, %r687, %r741, %p184;
	selp.b32 	%r562, %r741, %r689, %p184;
	selp.b32 	%r742, %r702, %r700, %p184;
	shfl.sync.bfly.b32	%r743, %r742, 8, 31, -1;
	selp.b32 	%r569, %r700, %r743, %p184;
	selp.b32 	%r570, %r743, %r702, %p184;
	selp.b32 	%r744, %r703, %r701, %p184;
	shfl.sync.bfly.b32	%r745, %r744, 8, 31, -1;
	selp.b32 	%r577, %r701, %r745, %p184;
	selp.b32 	%r578, %r745, %r703, %p184;
	selp.b32 	%r746, %r716, %r714, %p184;
	shfl.sync.bfly.b32	%r747, %r746, 8, 31, -1;
	selp.b32 	%r585, %r714, %r747, %p184;
	selp.b32 	%r586, %r747, %r716, %p184;
	selp.b32 	%r748, %r717, %r715, %p184;
	shfl.sync.bfly.b32	%r749, %r748, 8, 31, -1;
	selp.b32 	%r593, %r715, %r749, %p184;
	selp.b32 	%r594, %r749, %r717, %p184;
	mov.u32 	%r595, 21520;
	// begin inline asm
	prmt.b32 %r472, %r473, %r474, %r595;
	// end inline asm
	mov.u32 	%r599, 30258;
	// begin inline asm
	prmt.b32 %r476, %r473, %r474, %r599;
	// end inline asm
	// begin inline asm
	prmt.b32 %r480, %r481, %r482, %r595;
	// end inline asm
	// begin inline asm
	prmt.b32 %r484, %r481, %r482, %r599;
	// end inline asm
	// begin inline asm
	prmt.b32 %r488, %r489, %r490, %r595;
	// end inline asm
	// begin inline asm
	prmt.b32 %r492, %r489, %r490, %r599;
	// end inline asm
	// begin inline asm
	prmt.b32 %r496, %r497, %r498, %r595;
	// end inline asm
	// begin inline asm
	prmt.b32 %r500, %r497, %r498, %r599;
	// end inline asm
	// begin inline asm
	prmt.b32 %r504, %r505, %r506, %r595;
	// end inline asm
	// begin inline asm
	prmt.b32 %r508, %r505, %r506, %r599;
	// end inline asm
	// begin inline asm
	prmt.b32 %r512, %r513, %r514, %r595;
	// end inline asm
	// begin inline asm
	prmt.b32 %r516, %r513, %r514, %r599;
	// end inline asm
	// begin inline asm
	prmt.b32 %r520, %r521, %r522, %r595;
	// end inline asm
	// begin inline asm
	prmt.b32 %r524, %r521, %r522, %r599;
	// end inline asm
	// begin inline asm
	prmt.b32 %r528, %r529, %r530, %r595;
	// end inline asm
	// begin inline asm
	prmt.b32 %r532, %r529, %r530, %r599;
	// end inline asm
	// begin inline asm
	prmt.b32 %r536, %r537, %r538, %r595;
	// end inline asm
	// begin inline asm
	prmt.b32 %r540, %r537, %r538, %r599;
	// end inline asm
	// begin inline asm
	prmt.b32 %r544, %r545, %r546, %r595;
	// end inline asm
	// begin inline asm
	prmt.b32 %r548, %r545, %r546, %r599;
	// end inline asm
	// begin inline asm
	prmt.b32 %r552, %r553, %r554, %r595;
	// end inline asm
	// begin inline asm
	prmt.b32 %r556, %r553, %r554, %r599;
	// end inline asm
	// begin inline asm
	prmt.b32 %r560, %r561, %r562, %r595;
	// end inline asm
	// begin inline asm
	prmt.b32 %r564, %r561, %r562, %r599;
	// end inline asm
	// begin inline asm
	prmt.b32 %r568, %r569, %r570, %r595;
	// end inline asm
	// begin inline asm
	prmt.b32 %r572, %r569, %r570, %r599;
	// end inline asm
	// begin inline asm
	prmt.b32 %r576, %r577, %r578, %r595;
	// end inline asm
	// begin inline asm
	prmt.b32 %r580, %r577, %r578, %r599;
	// end inline asm
	// begin inline asm
	prmt.b32 %r584, %r585, %r586, %r595;
	// end inline asm
	// begin inline asm
	prmt.b32 %r588, %r585, %r586, %r599;
	// end inline asm
	// begin inline asm
	prmt.b32 %r592, %r593, %r594, %r595;
	// end inline asm
	// begin inline asm
	prmt.b32 %r596, %r593, %r594, %r599;
	// end inline asm
	st.shared.u32 	[%rd11], %r472;
	st.shared.u32 	[%rd12+128], %r476;
	st.shared.u32 	[%rd12+4], %r480;
	st.shared.u32 	[%rd12+132], %r484;
	st.shared.u32 	[%rd13], %r488;
	st.shared.u32 	[%rd14+128], %r492;
	st.shared.u32 	[%rd14+4], %r496;
	st.shared.u32 	[%rd14+132], %r500;
	st.shared.u32 	[%rd15], %r504;
	st.shared.u32 	[%rd16+128], %r508;
	st.shared.u32 	[%rd16+4], %r512;
	st.shared.u32 	[%rd16+132], %r516;
	st.shared.u32 	[%rd17], %r520;
	st.shared.u32 	[%rd18+128], %r524;
	st.shared.u32 	[%rd18+4], %r528;
	st.shared.u32 	[%rd18+132], %r532;
	st.shared.u32 	[%rd19], %r536;
	st.shared.u32 	[%rd20+128], %r540;
	st.shared.u32 	[%rd20+4], %r544;
	st.shared.u32 	[%rd20+132], %r548;
	st.shared.u32 	[%rd21], %r552;
	st.shared.u32 	[%rd22+128], %r556;
	st.shared.u32 	[%rd22+4], %r560;
	st.shared.u32 	[%rd22+132], %r564;
	st.shared.u32 	[%rd23], %r568;
	st.shared.u32 	[%rd24+128], %r572;
	st.shared.u32 	[%rd24+4], %r576;
	st.shared.u32 	[%rd24+132], %r580;
	st.shared.u32 	[%rd25], %r584;
	st.shared.u32 	[%rd26+128], %r588;
	st.shared.u32 	[%rd26+4], %r592;
	st.shared.u32 	[%rd26+132], %r596;
	bar.sync 	0;
	mov.u32 	%r1386, 256;
	mov.u64 	%rd266, %rd45;
	mov.u64 	%rd267, %rd44;
	mov.u32 	%r1387, %r1385;
	mov.u32 	%r1388, %r1384;
LBB0_86:                                // %L19429
                                        //   Parent Loop BB0_85 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	mov.u32 	%r1384, %r1389;
	mov.u32 	%r1385, %r1388;
	ld.shared.u32 	%r1389, [%rd266];
	// begin inline asm
	mov.b32 %r755, {%rs86, %rs86};
	// end inline asm
	// begin inline asm
	mov.b32 %r766, {%rs60, %rs60};
	// end inline asm
	xor.b32  	%r754, %r1389, -2004318072;
	mov.u32 	%r753, 983055;
	// begin inline asm
	lop3.b32 %r752, %r753, %r754, %r755, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r756, {%rs94, %rs94};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r757, %r755, %r756;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r760, %r752, %r757;
	// end inline asm
	mov.u32 	%r764, 15728880;
	// begin inline asm
	lop3.b32 %r763, %r764, %r754, %r766, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r767, {%rs94, %rs94};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r768, %r766, %r767;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r771, %r763, %r768;
	// end inline asm
	shr.u32 	%r776, %r754, 8;
	// begin inline asm
	lop3.b32 %r774, %r753, %r776, %r755, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r778, {%rs94, %rs94};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r779, %r755, %r778;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r782, %r774, %r779;
	// end inline asm
	// begin inline asm
	lop3.b32 %r785, %r764, %r776, %r766, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r789, {%rs94, %rs94};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r790, %r766, %r789;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r793, %r785, %r790;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r796, %r239;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r798, %r796, %r760;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r801, %r239;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r803, %r801, %r771;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r806, %r239;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r808, %r806, %r782;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r811, %r239;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r813, %r811, %r793;
	// end inline asm
	// begin inline asm
	mov.b32 %r821, {%rs86, %rs86};
	// end inline asm
	// begin inline asm
	mov.b32 %r832, {%rs60, %rs60};
	// end inline asm
	xor.b32  	%r820, %r1387, -2004318072;
	// begin inline asm
	lop3.b32 %r818, %r753, %r820, %r821, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r822, {%rs94, %rs94};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r823, %r821, %r822;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r826, %r818, %r823;
	// end inline asm
	// begin inline asm
	lop3.b32 %r829, %r764, %r820, %r832, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r833, {%rs94, %rs94};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r834, %r832, %r833;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r837, %r829, %r834;
	// end inline asm
	shr.u32 	%r842, %r820, 8;
	// begin inline asm
	lop3.b32 %r840, %r753, %r842, %r821, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r844, {%rs94, %rs94};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r845, %r821, %r844;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r848, %r840, %r845;
	// end inline asm
	// begin inline asm
	lop3.b32 %r851, %r764, %r842, %r832, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r855, {%rs94, %rs94};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r856, %r832, %r855;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r859, %r851, %r856;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r862, %r185, %r826, %r798;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r866, %r185, %r837, %r803;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r870, %r185, %r848, %r808;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r874, %r185, %r859, %r813;
	// end inline asm
	// begin inline asm
	mov.b32 %r883, {%rs86, %rs86};
	// end inline asm
	// begin inline asm
	mov.b32 %r894, {%rs60, %rs60};
	// end inline asm
	xor.b32  	%r882, %r1385, -2004318072;
	// begin inline asm
	lop3.b32 %r880, %r753, %r882, %r883, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r884, {%rs94, %rs94};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r885, %r883, %r884;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r888, %r880, %r885;
	// end inline asm
	// begin inline asm
	lop3.b32 %r891, %r764, %r882, %r894, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r895, {%rs94, %rs94};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r896, %r894, %r895;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r899, %r891, %r896;
	// end inline asm
	shr.u32 	%r904, %r882, 8;
	// begin inline asm
	lop3.b32 %r902, %r753, %r904, %r883, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r906, {%rs94, %rs94};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r907, %r883, %r906;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r910, %r902, %r907;
	// end inline asm
	// begin inline asm
	lop3.b32 %r913, %r764, %r904, %r894, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r917, {%rs94, %rs94};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r918, %r894, %r917;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r921, %r913, %r918;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r924, %r203;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r926, %r924, %r888, %r862;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r930, %r203;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r932, %r930, %r899, %r866;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r936, %r203;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r938, %r936, %r910, %r870;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r942, %r203;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r944, %r942, %r921, %r874;
	// end inline asm
	// begin inline asm
	mov.b32 %r953, {%rs86, %rs86};
	// end inline asm
	// begin inline asm
	mov.b32 %r964, {%rs60, %rs60};
	// end inline asm
	xor.b32  	%r952, %r1384, -2004318072;
	// begin inline asm
	lop3.b32 %r950, %r753, %r952, %r953, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r954, {%rs94, %rs94};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r955, %r953, %r954;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r958, %r950, %r955;
	// end inline asm
	// begin inline asm
	lop3.b32 %r961, %r764, %r952, %r964, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r965, {%rs94, %rs94};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r966, %r964, %r965;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r969, %r961, %r966;
	// end inline asm
	shr.u32 	%r974, %r952, 8;
	// begin inline asm
	lop3.b32 %r972, %r753, %r974, %r953, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r976, {%rs94, %rs94};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r977, %r953, %r976;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r980, %r972, %r977;
	// end inline asm
	// begin inline asm
	lop3.b32 %r983, %r764, %r974, %r964, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r987, {%rs94, %rs94};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r988, %r964, %r987;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r991, %r983, %r988;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1017, %r221, %r958, %r926;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1014, %r221, %r969, %r932;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1026, %r221, %r980, %r938;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1023, %r221, %r991, %r944;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1010, %r270;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1012, %r1010, %r1014;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1015, %r267, %r1017, %r1012;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1019, %r270;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1021, %r1019, %r1023;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1024, %r267, %r1026, %r1021;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1028, %r270, %r1017;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1031, %r267, %r1014, %r1028;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1035, %r270, %r1026;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1038, %r267, %r1023, %r1035;
	// end inline asm
	mov.u32 	%r1050, 0;
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1042, %r1043}, {%r315, %r321, %r318, %r324}, {%r1015, %r1031}, {%r1050, %r1050};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1052, %r1053}, {%r315, %r321, %r318, %r324}, {%r1024, %r1038}, {%r1050, %r1050};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1062, %r1063}, {%r356, %r362, %r359, %r365}, {%r1042, %r1043}, {%r1050, %r1050};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1072, %r1073}, {%r356, %r362, %r359, %r365}, {%r1052, %r1053}, {%r1050, %r1050};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1082, %r14, %r1062;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1085, %r14, %r1063;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1088, %r14, %r1072;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1091, %r14, %r1073;
	// end inline asm
	// begin inline asm
	mov.b32 %r1094, {%rs82, %rs82};
	// end inline asm
	mov.u16 	%rs71, 18176;
	// begin inline asm
	mov.b32 %r1095, {%rs71, %rs71};
	// end inline asm
	// begin inline asm
	max.f16x2 %r1096, %r1082, %r1094;
	// end inline asm
	// begin inline asm
	min.f16x2 %r1099, %r1096, %r1095;
	// end inline asm
	// begin inline asm
	mov.b32 %r1102, {%rs82, %rs82};
	// end inline asm
	// begin inline asm
	mov.b32 %r1103, {%rs71, %rs71};
	// end inline asm
	// begin inline asm
	max.f16x2 %r1104, %r1085, %r1102;
	// end inline asm
	// begin inline asm
	min.f16x2 %r1107, %r1104, %r1103;
	// end inline asm
	// begin inline asm
	mov.b32 %r1110, {%rs82, %rs82};
	// end inline asm
	// begin inline asm
	mov.b32 %r1111, {%rs71, %rs71};
	// end inline asm
	// begin inline asm
	max.f16x2 %r1112, %r1088, %r1110;
	// end inline asm
	// begin inline asm
	min.f16x2 %r1115, %r1112, %r1111;
	// end inline asm
	// begin inline asm
	mov.b32 %r1118, {%rs82, %rs82};
	// end inline asm
	// begin inline asm
	mov.b32 %r1119, {%rs71, %rs71};
	// end inline asm
	// begin inline asm
	max.f16x2 %r1120, %r1091, %r1118;
	// end inline asm
	// begin inline asm
	min.f16x2 %r1123, %r1120, %r1119;
	// end inline asm
	// begin inline asm
	mov.b32 %r1129, {%rs86, %rs86};
	// end inline asm
	// begin inline asm
	mov.b32 %r1127, {%rs94, %rs94};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1128, %r1129, %r1127;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1131, %r1099, %r1128;
	// end inline asm
	// begin inline asm
	mov.b32 %r1134, {%rs94, %rs94};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1135, %r1129, %r1134;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1138, %r1107, %r1135;
	// end inline asm
	// begin inline asm
	mov.b32 %r1141, {%rs94, %rs94};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1142, %r1129, %r1141;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1145, %r1115, %r1142;
	// end inline asm
	// begin inline asm
	mov.b32 %r1148, {%rs94, %rs94};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1149, %r1129, %r1148;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1152, %r1123, %r1149;
	// end inline asm
	mov.u32 	%r1158, 25152;
	// begin inline asm
	prmt.b32 %r1155, %r1131, %r1145, %r1158;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1159, %r1138, %r1152, %r1158;
	// end inline asm
	shl.b32 	%r1166, %r1159, 4;
	mov.u32 	%r1164, 252645135;
	// begin inline asm
	lop3.b32 %r1163, %r1164, %r1155, %r1166, 202;
	// end inline asm
	xor.b32  	%r1167, %r1163, -2004318072;
	st.shared.u32 	[%rd267], %r1167;
	add.s32 	%r1386, %r1386, -8;
	add.s64 	%rd267, %rd267, 1156;
	add.s64 	%rd266, %rd266, 1156;
	setp.eq.s32 	%p209, %r1386, 0;
	mov.u32 	%r1387, %r1385;
	mov.u32 	%r1388, %r1384;
	@%p209 bra 	LBB0_87;
	bra.uni 	LBB0_86;
LBB0_87:                                // %guard_pass11890
                                        //   in Loop: Header=BB0_85 Depth=1
	bar.sync 	0;
	ld.shared.u32 	%r1173, [%rd28];
	ld.shared.u32 	%r1174, [%rd29+128];
	ld.shared.u32 	%r1181, [%rd29+4];
	ld.shared.u32 	%r1182, [%rd29+132];
	ld.shared.u32 	%r1189, [%rd30];
	ld.shared.u32 	%r1190, [%rd31+128];
	ld.shared.u32 	%r1197, [%rd31+4];
	ld.shared.u32 	%r1198, [%rd31+132];
	ld.shared.u32 	%r1205, [%rd32];
	ld.shared.u32 	%r1206, [%rd33+128];
	ld.shared.u32 	%r1213, [%rd33+4];
	ld.shared.u32 	%r1214, [%rd33+132];
	ld.shared.u32 	%r1221, [%rd34];
	ld.shared.u32 	%r1222, [%rd35+128];
	ld.shared.u32 	%r1229, [%rd35+4];
	ld.shared.u32 	%r1230, [%rd35+132];
	ld.shared.u32 	%r1237, [%rd36];
	ld.shared.u32 	%r1238, [%rd37+128];
	ld.shared.u32 	%r1245, [%rd37+4];
	ld.shared.u32 	%r1246, [%rd37+132];
	ld.shared.u32 	%r1253, [%rd38];
	ld.shared.u32 	%r1254, [%rd39+128];
	ld.shared.u32 	%r1261, [%rd39+4];
	ld.shared.u32 	%r1262, [%rd39+132];
	ld.shared.u32 	%r1269, [%rd40];
	ld.shared.u32 	%r1270, [%rd41+128];
	ld.shared.u32 	%r1277, [%rd41+4];
	ld.shared.u32 	%r1278, [%rd41+132];
	ld.shared.u32 	%r1285, [%rd42];
	ld.shared.u32 	%r1286, [%rd43+128];
	ld.shared.u32 	%r1293, [%rd43+4];
	ld.shared.u32 	%r1294, [%rd43+132];
	// begin inline asm
	prmt.b32 %r1168, %r1173, %r1174, %r595;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1172, %r1173, %r1174, %r599;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1176, %r1181, %r1182, %r595;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1180, %r1181, %r1182, %r599;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1184, %r1189, %r1190, %r595;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1188, %r1189, %r1190, %r599;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1192, %r1197, %r1198, %r595;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1196, %r1197, %r1198, %r599;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1200, %r1205, %r1206, %r595;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1204, %r1205, %r1206, %r599;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1208, %r1213, %r1214, %r595;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1212, %r1213, %r1214, %r599;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1216, %r1221, %r1222, %r595;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1220, %r1221, %r1222, %r599;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1224, %r1229, %r1230, %r595;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1228, %r1229, %r1230, %r599;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1232, %r1237, %r1238, %r595;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1236, %r1237, %r1238, %r599;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1240, %r1245, %r1246, %r595;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1244, %r1245, %r1246, %r599;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1248, %r1253, %r1254, %r595;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1252, %r1253, %r1254, %r599;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1256, %r1261, %r1262, %r595;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1260, %r1261, %r1262, %r599;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1264, %r1269, %r1270, %r595;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1268, %r1269, %r1270, %r599;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1272, %r1277, %r1278, %r595;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1276, %r1277, %r1278, %r599;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1280, %r1285, %r1286, %r595;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1284, %r1285, %r1286, %r599;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1288, %r1293, %r1294, %r595;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1292, %r1293, %r1294, %r599;
	// end inline asm
	selp.b32 	%r1296, %r1172, %r1168, %p184;
	shfl.sync.bfly.b32	%r126, %r1296, 8, 31, -1;
	selp.b32 	%r1297, %r1180, %r1176, %p184;
	shfl.sync.bfly.b32	%r127, %r1297, 8, 31, -1;
	selp.b32 	%r1298, %r1188, %r1184, %p184;
	shfl.sync.bfly.b32	%r1299, %r1298, 8, 31, -1;
	selp.b32 	%r128, %r1184, %r1299, %p184;
	selp.b32 	%r129, %r1299, %r1188, %p184;
	selp.b32 	%r1300, %r1196, %r1192, %p184;
	shfl.sync.bfly.b32	%r1301, %r1300, 8, 31, -1;
	selp.b32 	%r130, %r1192, %r1301, %p184;
	selp.b32 	%r131, %r1301, %r1196, %p184;
	selp.b32 	%r1302, %r1204, %r1200, %p184;
	shfl.sync.bfly.b32	%r1303, %r1302, 8, 31, -1;
	selp.b32 	%r1304, %r1212, %r1208, %p184;
	shfl.sync.bfly.b32	%r1305, %r1304, 8, 31, -1;
	selp.b32 	%r1306, %r1220, %r1216, %p184;
	shfl.sync.bfly.b32	%r1307, %r1306, 8, 31, -1;
	selp.b32 	%r1308, %r1228, %r1224, %p184;
	shfl.sync.bfly.b32	%r1309, %r1308, 8, 31, -1;
	selp.b32 	%r1310, %r1236, %r1232, %p184;
	shfl.sync.bfly.b32	%r1311, %r1310, 8, 31, -1;
	selp.b32 	%r1312, %r1244, %r1240, %p184;
	shfl.sync.bfly.b32	%r1313, %r1312, 8, 31, -1;
	selp.b32 	%r1314, %r1252, %r1248, %p184;
	shfl.sync.bfly.b32	%r1315, %r1314, 8, 31, -1;
	selp.b32 	%r1316, %r1260, %r1256, %p184;
	shfl.sync.bfly.b32	%r1317, %r1316, 8, 31, -1;
	selp.b32 	%r1318, %r1268, %r1264, %p184;
	shfl.sync.bfly.b32	%r1319, %r1318, 8, 31, -1;
	selp.b32 	%r1320, %r1276, %r1272, %p184;
	shfl.sync.bfly.b32	%r1321, %r1320, 8, 31, -1;
	selp.b32 	%r1322, %r1284, %r1280, %p184;
	shfl.sync.bfly.b32	%r1323, %r1322, 8, 31, -1;
	selp.b32 	%r1324, %r1292, %r1288, %p184;
	shfl.sync.bfly.b32	%r1325, %r1324, 8, 31, -1;
	@%p210 bra 	LBB0_117;
	bra.uni 	LBB0_88;
LBB0_117:                               // %L31227
                                        //   in Loop: Header=BB0_85 Depth=1
	selp.b32 	%r1326, %r127, %r1180, %p184;
	selp.b32 	%r1327, %r1176, %r127, %p184;
	selp.b32 	%r1328, %r126, %r1172, %p184;
	selp.b32 	%r1329, %r1168, %r126, %p184;
	shl.b32 	%r1394, %r72, 13;
	or.b32  	%r1330, %r104, %r1394;
	or.b32  	%r1331, %r1330, %r117;
	or.b32  	%r1332, %r1331, %r118;
	add.s32 	%r1333, %r1332, %r119;
	cvt.s64.s32 	%rd168, %r1333;
	add.s64 	%rd169, %rd168, %rd27;
	shr.u64 	%rd170, %rd169, 38;
	add.s64 	%rd171, %rd169, %rd170;
	shr.s64 	%rd172, %rd171, 26;
	and.b64  	%rd173, %rd171, -67108864;
	setp.ne.s64 	%p213, %rd173, %rd169;
	setp.lt.s64 	%p214, %rd169, 0;
	and.pred  	%p215, %p214, %p213;
	selp.u64 	%rd174, 1, 0, %p215;
	sub.s64 	%rd175, %rd174, %rd172;
	shl.b64 	%rd176, %rd175, 26;
	add.s64 	%rd177, %rd176, %rd169;
	shl.b64 	%rd178, %rd177, 2;
	add.s64 	%rd179, %rd3, %rd178;
	st.global.v4.u32 	[%rd179], {%r1329, %r1327, %r1328, %r1326};
	bra.uni 	LBB0_118;
LBB0_88:                                // %guard_pass11890.pass11052_crit_edge
                                        //   in Loop: Header=BB0_85 Depth=1
	shl.b32 	%r1394, %r72, 13;
LBB0_118:                               // %pass11052
                                        //   in Loop: Header=BB0_85 Depth=1
	selp.b32 	%r136, %r1216, %r1307, %p184;
	selp.b32 	%r137, %r1307, %r1220, %p184;
	selp.b32 	%r138, %r1224, %r1309, %p184;
	selp.b32 	%r139, %r1309, %r1228, %p184;
	add.s32 	%r1334, %r1394, 262144;
	or.b32  	%r1335, %r1334, %r104;
	add.s32 	%r1336, %r1335, %r117;
	or.b32  	%r1337, %r1336, %r118;
	add.s32 	%r1338, %r1337, %r119;
	cvt.s64.s32 	%rd180, %r1338;
	add.s64 	%rd181, %rd180, %rd27;
	shr.u64 	%rd182, %rd181, 38;
	add.s64 	%rd183, %rd181, %rd182;
	shr.s64 	%rd184, %rd183, 26;
	and.b64  	%rd185, %rd183, -67108864;
	setp.ne.s64 	%p217, %rd185, %rd181;
	setp.lt.s64 	%p218, %rd181, 0;
	and.pred  	%p219, %p218, %p217;
	selp.u64 	%rd186, 1, 0, %p219;
	sub.s64 	%rd187, %rd186, %rd184;
	shl.b64 	%rd188, %rd187, 26;
	add.s64 	%rd189, %rd188, %rd181;
	shl.b64 	%rd190, %rd189, 2;
	add.s64 	%rd191, %rd3, %rd190;
	st.global.v4.u32 	[%rd191], {%r128, %r130, %r129, %r131};
	@%p210 bra 	LBB0_89;
	bra.uni 	LBB0_119;
LBB0_89:                                // %L31778
                                        //   in Loop: Header=BB0_85 Depth=1
	selp.b32 	%r132, %r1200, %r1303, %p184;
	selp.b32 	%r133, %r1303, %r1204, %p184;
	selp.b32 	%r134, %r1208, %r1305, %p184;
	selp.b32 	%r135, %r1305, %r1212, %p184;
	add.s32 	%r1339, %r1394, 524288;
	or.b32  	%r1340, %r1339, %r104;
	add.s32 	%r1341, %r1340, %r117;
	or.b32  	%r1342, %r1341, %r118;
	add.s32 	%r1343, %r1342, %r119;
	cvt.s64.s32 	%rd192, %r1343;
	add.s64 	%rd193, %rd192, %rd27;
	shr.u64 	%rd194, %rd193, 38;
	add.s64 	%rd195, %rd193, %rd194;
	shr.s64 	%rd196, %rd195, 26;
	and.b64  	%rd197, %rd195, -67108864;
	setp.ne.s64 	%p220, %rd197, %rd193;
	setp.lt.s64 	%p221, %rd193, 0;
	and.pred  	%p222, %p221, %p220;
	selp.u64 	%rd198, 1, 0, %p222;
	sub.s64 	%rd199, %rd198, %rd196;
	shl.b64 	%rd200, %rd199, 26;
	add.s64 	%rd201, %rd200, %rd193;
	shl.b64 	%rd202, %rd201, 2;
	add.s64 	%rd203, %rd3, %rd202;
	st.global.v4.u32 	[%rd203], {%r132, %r134, %r133, %r135};
LBB0_119:                               // %pass11260
                                        //   in Loop: Header=BB0_85 Depth=1
	selp.b32 	%r144, %r1248, %r1315, %p184;
	selp.b32 	%r145, %r1315, %r1252, %p184;
	selp.b32 	%r146, %r1256, %r1317, %p184;
	selp.b32 	%r147, %r1317, %r1260, %p184;
	add.s32 	%r1344, %r1394, 786432;
	or.b32  	%r1345, %r1344, %r104;
	add.s32 	%r1346, %r1345, %r117;
	or.b32  	%r1347, %r1346, %r118;
	add.s32 	%r1348, %r1347, %r119;
	cvt.s64.s32 	%rd204, %r1348;
	add.s64 	%rd205, %rd204, %rd27;
	shr.u64 	%rd206, %rd205, 38;
	add.s64 	%rd207, %rd205, %rd206;
	shr.s64 	%rd208, %rd207, 26;
	and.b64  	%rd209, %rd207, -67108864;
	setp.ne.s64 	%p224, %rd209, %rd205;
	setp.lt.s64 	%p225, %rd205, 0;
	and.pred  	%p226, %p225, %p224;
	selp.u64 	%rd210, 1, 0, %p226;
	sub.s64 	%rd211, %rd210, %rd208;
	shl.b64 	%rd212, %rd211, 26;
	add.s64 	%rd213, %rd212, %rd205;
	shl.b64 	%rd214, %rd213, 2;
	add.s64 	%rd215, %rd3, %rd214;
	st.global.v4.u32 	[%rd215], {%r136, %r138, %r137, %r139};
	@%p210 bra 	LBB0_90;
	bra.uni 	LBB0_120;
LBB0_90:                                // %L32330
                                        //   in Loop: Header=BB0_85 Depth=1
	selp.b32 	%r140, %r1232, %r1311, %p184;
	selp.b32 	%r141, %r1311, %r1236, %p184;
	selp.b32 	%r142, %r1240, %r1313, %p184;
	selp.b32 	%r143, %r1313, %r1244, %p184;
	add.s32 	%r1349, %r1394, 1048576;
	or.b32  	%r1350, %r1349, %r104;
	add.s32 	%r1351, %r1350, %r117;
	or.b32  	%r1352, %r1351, %r118;
	add.s32 	%r1353, %r1352, %r119;
	cvt.s64.s32 	%rd216, %r1353;
	add.s64 	%rd217, %rd216, %rd27;
	shr.u64 	%rd218, %rd217, 38;
	add.s64 	%rd219, %rd217, %rd218;
	shr.s64 	%rd220, %rd219, 26;
	and.b64  	%rd221, %rd219, -67108864;
	setp.ne.s64 	%p227, %rd221, %rd217;
	setp.lt.s64 	%p228, %rd217, 0;
	and.pred  	%p229, %p228, %p227;
	selp.u64 	%rd222, 1, 0, %p229;
	sub.s64 	%rd223, %rd222, %rd220;
	shl.b64 	%rd224, %rd223, 26;
	add.s64 	%rd225, %rd224, %rd217;
	shl.b64 	%rd226, %rd225, 2;
	add.s64 	%rd227, %rd3, %rd226;
	st.global.v4.u32 	[%rd227], {%r140, %r142, %r141, %r143};
LBB0_120:                               // %pass11468
                                        //   in Loop: Header=BB0_85 Depth=1
	selp.b32 	%r152, %r1280, %r1323, %p184;
	selp.b32 	%r153, %r1323, %r1284, %p184;
	selp.b32 	%r154, %r1288, %r1325, %p184;
	selp.b32 	%r155, %r1325, %r1292, %p184;
	add.s32 	%r1354, %r1394, 1310720;
	or.b32  	%r1355, %r1354, %r104;
	add.s32 	%r1356, %r1355, %r117;
	or.b32  	%r1357, %r1356, %r118;
	add.s32 	%r1358, %r1357, %r119;
	cvt.s64.s32 	%rd228, %r1358;
	add.s64 	%rd229, %rd228, %rd27;
	shr.u64 	%rd230, %rd229, 38;
	add.s64 	%rd231, %rd229, %rd230;
	shr.s64 	%rd232, %rd231, 26;
	and.b64  	%rd233, %rd231, -67108864;
	setp.ne.s64 	%p231, %rd233, %rd229;
	setp.lt.s64 	%p232, %rd229, 0;
	and.pred  	%p233, %p232, %p231;
	selp.u64 	%rd234, 1, 0, %p233;
	sub.s64 	%rd235, %rd234, %rd232;
	shl.b64 	%rd236, %rd235, 26;
	add.s64 	%rd237, %rd236, %rd229;
	shl.b64 	%rd238, %rd237, 2;
	add.s64 	%rd239, %rd3, %rd238;
	st.global.v4.u32 	[%rd239], {%r144, %r146, %r145, %r147};
	@%p210 bra 	LBB0_91;
	bra.uni 	LBB0_121;
LBB0_91:                                // %L32882
                                        //   in Loop: Header=BB0_85 Depth=1
	selp.b32 	%r148, %r1264, %r1319, %p184;
	selp.b32 	%r149, %r1319, %r1268, %p184;
	selp.b32 	%r150, %r1272, %r1321, %p184;
	selp.b32 	%r151, %r1321, %r1276, %p184;
	add.s32 	%r1359, %r1394, 1572864;
	or.b32  	%r1360, %r1359, %r104;
	add.s32 	%r1361, %r1360, %r117;
	or.b32  	%r1362, %r1361, %r118;
	add.s32 	%r1363, %r1362, %r119;
	cvt.s64.s32 	%rd240, %r1363;
	add.s64 	%rd241, %rd240, %rd27;
	shr.u64 	%rd242, %rd241, 38;
	add.s64 	%rd243, %rd241, %rd242;
	shr.s64 	%rd244, %rd243, 26;
	and.b64  	%rd245, %rd243, -67108864;
	setp.ne.s64 	%p234, %rd245, %rd241;
	setp.lt.s64 	%p235, %rd241, 0;
	and.pred  	%p236, %p235, %p234;
	selp.u64 	%rd246, 1, 0, %p236;
	sub.s64 	%rd247, %rd246, %rd244;
	shl.b64 	%rd248, %rd247, 26;
	add.s64 	%rd249, %rd248, %rd241;
	shl.b64 	%rd250, %rd249, 2;
	add.s64 	%rd251, %rd3, %rd250;
	st.global.v4.u32 	[%rd251], {%r148, %r150, %r149, %r151};
	bra.uni 	LBB0_121;
LBB0_122:                               // %L33414
	st.global.u32 	[%rd4], %r1372;
	ret;
LBB0_7:                                 // %L291
	mov.u32 	%r1371, 2;
	st.global.u32 	[%rd4], %r1371;
	mov.u64 	%rd264, exception2656;
	cvta.global.u64 	%rd265, %rd264;
	{ // callseq 2, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd265;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 2
	{ // callseq 3, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd46;
	st.param.b32 	[param0+8], %r157;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 3
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
LBB0_1:                                 // %L9
	mov.u64 	%rd67, exception1;
	cvta.global.u64 	%rd68, %rd67;
	{ // callseq 0, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd68;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 0
	{ // callseq 1, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd46;
	st.param.b32 	[param0+8], %r157;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 1
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
                                        // -- End function
}
