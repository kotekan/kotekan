// PTX kernel code for CUDA baseband beamformer
// This file has been generated automatically by `bb.jl`.
// Do not modify this file, your changes will be lost.

// PTX CompilerJob of MethodInstance for bb(::Int32, ::Int32, ::CuDeviceVector{Int8x4, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Int32, 1}) for sm_86, minthreads=128, blocks_per_sm=8

//
// Generated by LLVM NVPTX Back-End
//

.version 8.2
.target sm_86
.address_size 64

	// .globl	_Z2bb5Int32S_13CuDeviceArrayI6Int8x4Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS_Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EES0_IS_Li1ELi1EE // -- Begin function _Z2bb5Int32S_13CuDeviceArrayI6Int8x4Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS_Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EES0_IS_Li1ELi1EE
.func gpu_report_exception
(
	.param .b64 gpu_report_exception_param_0
)
.noreturn
{
	trap;
}
.func gpu_signal_exception
(
	.param .align 8 .b8 gpu_signal_exception_param_0[16]
)
.noreturn
{
	trap;
}
.extern .shared .align 32 .b8 shmem[];
.global .align 1 .b8 exception2743[6] = {101, 114, 114, 111, 114, 0};
.global .align 1 .b8 exception12749[10] = {101, 120, 99, 101, 112, 116, 105, 111, 110, 0};
                                        // @_Z2bb5Int32S_13CuDeviceArrayI6Int8x4Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS_Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EES0_IS_Li1ELi1EE
.visible .entry _Z2bb5Int32S_13CuDeviceArrayI6Int8x4Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS_Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EES0_IS_Li1ELi1EE(
	.param .align 8 .b8 _Z2bb5Int32S_13CuDeviceArrayI6Int8x4Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS_Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EES0_IS_Li1ELi1EE_param_0[16],
	.param .u32 _Z2bb5Int32S_13CuDeviceArrayI6Int8x4Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS_Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EES0_IS_Li1ELi1EE_param_1,
	.param .u32 _Z2bb5Int32S_13CuDeviceArrayI6Int8x4Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS_Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EES0_IS_Li1ELi1EE_param_2,
	.param .align 8 .b8 _Z2bb5Int32S_13CuDeviceArrayI6Int8x4Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS_Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EES0_IS_Li1ELi1EE_param_3[32],
	.param .align 8 .b8 _Z2bb5Int32S_13CuDeviceArrayI6Int8x4Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS_Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EES0_IS_Li1ELi1EE_param_4[32],
	.param .align 8 .b8 _Z2bb5Int32S_13CuDeviceArrayI6Int8x4Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS_Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EES0_IS_Li1ELi1EE_param_5[32],
	.param .align 8 .b8 _Z2bb5Int32S_13CuDeviceArrayI6Int8x4Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS_Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EES0_IS_Li1ELi1EE_param_6[32],
	.param .align 8 .b8 _Z2bb5Int32S_13CuDeviceArrayI6Int8x4Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS_Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EES0_IS_Li1ELi1EE_param_7[32],
	.param .align 8 .b8 _Z2bb5Int32S_13CuDeviceArrayI6Int8x4Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS_Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EES0_IS_Li1ELi1EE_param_8[32]
)
.reqntid 128, 1, 1
.minnctapersm 8
{
	.reg .pred 	%p<70>;
	.reg .b32 	%r<2456>;
	.reg .b64 	%rd<344>;

// %bb.0:                               // %conversion
	ld.param.u32 	%r114, [_Z2bb5Int32S_13CuDeviceArrayI6Int8x4Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS_Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EES0_IS_Li1ELi1EE_param_0+8];
	ld.param.u64 	%rd25, [_Z2bb5Int32S_13CuDeviceArrayI6Int8x4Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS_Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EES0_IS_Li1ELi1EE_param_0];
	// begin inline asm
	mov.u32 %r117, %dynamic_smem_size;
	// end inline asm
	setp.gt.u32 	%p6, %r117, 32895;
	@%p6 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:                              // %L10
	// begin inline asm
	mov.u32 %r118, %dynamic_smem_size;
	// end inline asm
	setp.gt.u32 	%p7, %r118, 43135;
	@%p7 bra 	$L__BB0_4;
	bra.uni 	$L__BB0_3;
$L__BB0_4:                              // %L26
	ld.param.u32 	%r115, [_Z2bb5Int32S_13CuDeviceArrayI6Int8x4Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS_Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EES0_IS_Li1ELi1EE_param_1];
	ld.param.u64 	%rd5, [_Z2bb5Int32S_13CuDeviceArrayI6Int8x4Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS_Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EES0_IS_Li1ELi1EE_param_7];
	mov.u32 	%r1, %tid.y;
	shl.b32 	%r2, %r1, 5;
	mov.u32 	%r3, %ctaid.x;
	shl.b32 	%r119, %r3, 7;
	mov.u32 	%r4, %tid.x;
	or.b32  	%r120, %r119, %r4;
	or.b32  	%r121, %r120, %r2;
	mul.wide.u32 	%rd30, %r121, 4;
	add.s64 	%rd7, %rd5, %rd30;
	mov.u32 	%r122, 1;
	st.global.u32 	[%rd7], %r122;
	setp.gt.u32 	%p8, %r115, 65535;
	@%p8 bra 	$L__BB0_7;
// %bb.5:                               // %L131
	ld.param.u32 	%r116, [_Z2bb5Int32S_13CuDeviceArrayI6Int8x4Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS_Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EES0_IS_Li1ELi1EE_param_2];
	setp.lt.s32 	%p9, %r116, %r115;
	setp.gt.s32 	%p10, %r116, 131071;
	or.pred  	%p11, %p9, %p10;
	@%p11 bra 	$L__BB0_7;
// %bb.6:                               // %L138
	sub.s32 	%r123, %r116, %r115;
	and.b32  	%r124, %r123, 127;
	setp.eq.s32 	%p12, %r124, 0;
	@%p12 bra 	$L__BB0_20;
	bra.uni 	$L__BB0_7;
$L__BB0_20:                             // %pass109
	ld.param.u64 	%rd3, [_Z2bb5Int32S_13CuDeviceArrayI6Int8x4Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS_Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EES0_IS_Li1ELi1EE_param_5];
	shl.b32 	%r125, %r1, 2;
	shl.b32 	%r126, %r3, 4;
	shr.u32 	%r110, %r4, 3;
	or.b32  	%r111, %r125, %r110;
	or.b32  	%r127, %r111, %r126;
	mul.wide.u32 	%rd31, %r127, 4;
	add.s64 	%rd32, %rd3, %rd31;
	ld.global.u32 	%r128, [%rd32];
	add.s32 	%r113, %r128, -5;
	setp.lt.u32 	%p13, %r113, 31;
	@%p13 bra 	$L__BB0_8;
	bra.uni 	$L__BB0_21;
$L__BB0_8:                              // %L457
	ld.param.u64 	%rd1, [_Z2bb5Int32S_13CuDeviceArrayI6Int8x4Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS_Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EES0_IS_Li1ELi1EE_param_3];
	ld.param.u64 	%rd6, [_Z2bb5Int32S_13CuDeviceArrayI6Int8x4Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS_Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EES0_IS_Li1ELi1EE_param_8];
	add.s32 	%r112, %r128, -4;
	or.b32  	%r130, %r4, %r1;
	setp.ne.s32 	%p1, %r130, 0;
	mul.wide.u32 	%rd35, %r3, 4;
	add.s64 	%rd8, %rd6, %rd35;
	mov.u32 	%r2447, 0;
	@%p1 bra 	$L__BB0_10;
// %bb.9:                               // %L480
	st.global.u32 	[%rd8], %r2447;
$L__BB0_10:                             // %L526
	ld.param.u64 	%rd2, [_Z2bb5Int32S_13CuDeviceArrayI6Int8x4Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS_Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EES0_IS_Li1ELi1EE_param_4];
	ld.param.u64 	%rd4, [_Z2bb5Int32S_13CuDeviceArrayI6Int8x4Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS_Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EES0_IS_Li1ELi1EE_param_6];
	bar.sync 	0;
	shl.b32 	%r645, %r3, 13;
	shl.b32 	%r646, %r4, 5;
	and.b32  	%r647, %r646, 96;
	shl.b32 	%r648, %r1, 7;
	or.b32  	%r649, %r647, %r648;
	shl.b32 	%r650, %r4, 7;
	and.b32  	%r651, %r650, 3584;
	or.b32  	%r652, %r651, %r645;
	or.b32  	%r653, %r652, %r649;
	mul.wide.u32 	%rd36, %r653, 4;
	add.s64 	%rd37, %rd1, %rd36;
	ld.global.u32 	%r137, [%rd37];
	or.b32  	%r654, %r652, 4096;
	or.b32  	%r655, %r654, %r649;
	mul.wide.u32 	%rd38, %r655, 4;
	add.s64 	%rd39, %rd1, %rd38;
	ld.global.u32 	%r145, [%rd39];
	or.b32  	%r656, %r649, 1;
	or.b32  	%r657, %r652, %r656;
	mul.wide.u32 	%rd40, %r657, 4;
	add.s64 	%rd41, %rd1, %rd40;
	ld.global.u32 	%r138, [%rd41];
	or.b32  	%r658, %r654, %r656;
	mul.wide.u32 	%rd42, %r658, 4;
	add.s64 	%rd43, %rd1, %rd42;
	ld.global.u32 	%r146, [%rd43];
	or.b32  	%r659, %r649, 2;
	or.b32  	%r660, %r652, %r659;
	mul.wide.u32 	%rd44, %r660, 4;
	add.s64 	%rd45, %rd1, %rd44;
	ld.global.u32 	%r153, [%rd45];
	or.b32  	%r661, %r654, %r659;
	mul.wide.u32 	%rd46, %r661, 4;
	add.s64 	%rd47, %rd1, %rd46;
	ld.global.u32 	%r161, [%rd47];
	or.b32  	%r662, %r649, 3;
	or.b32  	%r663, %r652, %r662;
	mul.wide.u32 	%rd48, %r663, 4;
	add.s64 	%rd49, %rd1, %rd48;
	ld.global.u32 	%r154, [%rd49];
	or.b32  	%r664, %r654, %r662;
	mul.wide.u32 	%rd50, %r664, 4;
	add.s64 	%rd51, %rd1, %rd50;
	ld.global.u32 	%r162, [%rd51];
	or.b32  	%r665, %r649, 4;
	or.b32  	%r666, %r652, %r665;
	mul.wide.u32 	%rd52, %r666, 4;
	add.s64 	%rd53, %rd1, %rd52;
	ld.global.u32 	%r169, [%rd53];
	or.b32  	%r667, %r654, %r665;
	mul.wide.u32 	%rd54, %r667, 4;
	add.s64 	%rd55, %rd1, %rd54;
	ld.global.u32 	%r177, [%rd55];
	or.b32  	%r668, %r649, 5;
	or.b32  	%r669, %r652, %r668;
	mul.wide.u32 	%rd56, %r669, 4;
	add.s64 	%rd57, %rd1, %rd56;
	ld.global.u32 	%r170, [%rd57];
	or.b32  	%r670, %r654, %r668;
	mul.wide.u32 	%rd58, %r670, 4;
	add.s64 	%rd59, %rd1, %rd58;
	ld.global.u32 	%r178, [%rd59];
	or.b32  	%r671, %r649, 6;
	or.b32  	%r672, %r652, %r671;
	mul.wide.u32 	%rd60, %r672, 4;
	add.s64 	%rd61, %rd1, %rd60;
	ld.global.u32 	%r185, [%rd61];
	or.b32  	%r673, %r654, %r671;
	mul.wide.u32 	%rd62, %r673, 4;
	add.s64 	%rd63, %rd1, %rd62;
	ld.global.u32 	%r193, [%rd63];
	or.b32  	%r674, %r649, 7;
	or.b32  	%r675, %r652, %r674;
	mul.wide.u32 	%rd64, %r675, 4;
	add.s64 	%rd65, %rd1, %rd64;
	ld.global.u32 	%r186, [%rd65];
	or.b32  	%r676, %r654, %r674;
	mul.wide.u32 	%rd66, %r676, 4;
	add.s64 	%rd67, %rd1, %rd66;
	ld.global.u32 	%r194, [%rd67];
	or.b32  	%r677, %r649, 8;
	or.b32  	%r678, %r652, %r677;
	mul.wide.u32 	%rd68, %r678, 4;
	add.s64 	%rd69, %rd1, %rd68;
	ld.global.u32 	%r201, [%rd69];
	or.b32  	%r679, %r654, %r677;
	mul.wide.u32 	%rd70, %r679, 4;
	add.s64 	%rd71, %rd1, %rd70;
	ld.global.u32 	%r209, [%rd71];
	or.b32  	%r680, %r649, 9;
	or.b32  	%r681, %r652, %r680;
	mul.wide.u32 	%rd72, %r681, 4;
	add.s64 	%rd73, %rd1, %rd72;
	ld.global.u32 	%r202, [%rd73];
	or.b32  	%r682, %r654, %r680;
	mul.wide.u32 	%rd74, %r682, 4;
	add.s64 	%rd75, %rd1, %rd74;
	ld.global.u32 	%r210, [%rd75];
	or.b32  	%r683, %r649, 10;
	or.b32  	%r684, %r652, %r683;
	mul.wide.u32 	%rd76, %r684, 4;
	add.s64 	%rd77, %rd1, %rd76;
	ld.global.u32 	%r217, [%rd77];
	or.b32  	%r685, %r654, %r683;
	mul.wide.u32 	%rd78, %r685, 4;
	add.s64 	%rd79, %rd1, %rd78;
	ld.global.u32 	%r225, [%rd79];
	or.b32  	%r686, %r649, 11;
	or.b32  	%r687, %r652, %r686;
	mul.wide.u32 	%rd80, %r687, 4;
	add.s64 	%rd81, %rd1, %rd80;
	ld.global.u32 	%r218, [%rd81];
	or.b32  	%r688, %r654, %r686;
	mul.wide.u32 	%rd82, %r688, 4;
	add.s64 	%rd83, %rd1, %rd82;
	ld.global.u32 	%r226, [%rd83];
	or.b32  	%r689, %r649, 12;
	or.b32  	%r690, %r652, %r689;
	mul.wide.u32 	%rd84, %r690, 4;
	add.s64 	%rd85, %rd1, %rd84;
	ld.global.u32 	%r233, [%rd85];
	or.b32  	%r691, %r654, %r689;
	mul.wide.u32 	%rd86, %r691, 4;
	add.s64 	%rd87, %rd1, %rd86;
	ld.global.u32 	%r241, [%rd87];
	or.b32  	%r692, %r649, 13;
	or.b32  	%r693, %r652, %r692;
	mul.wide.u32 	%rd88, %r693, 4;
	add.s64 	%rd89, %rd1, %rd88;
	ld.global.u32 	%r234, [%rd89];
	or.b32  	%r694, %r654, %r692;
	mul.wide.u32 	%rd90, %r694, 4;
	add.s64 	%rd91, %rd1, %rd90;
	ld.global.u32 	%r242, [%rd91];
	or.b32  	%r695, %r649, 14;
	or.b32  	%r696, %r652, %r695;
	mul.wide.u32 	%rd92, %r696, 4;
	add.s64 	%rd93, %rd1, %rd92;
	ld.global.u32 	%r249, [%rd93];
	or.b32  	%r697, %r654, %r695;
	mul.wide.u32 	%rd94, %r697, 4;
	add.s64 	%rd95, %rd1, %rd94;
	ld.global.u32 	%r257, [%rd95];
	or.b32  	%r698, %r649, 15;
	or.b32  	%r699, %r652, %r698;
	mul.wide.u32 	%rd96, %r699, 4;
	add.s64 	%rd97, %rd1, %rd96;
	ld.global.u32 	%r250, [%rd97];
	or.b32  	%r700, %r654, %r698;
	mul.wide.u32 	%rd98, %r700, 4;
	add.s64 	%rd99, %rd1, %rd98;
	ld.global.u32 	%r258, [%rd99];
	or.b32  	%r701, %r649, 16;
	or.b32  	%r702, %r652, %r701;
	mul.wide.u32 	%rd100, %r702, 4;
	add.s64 	%rd101, %rd1, %rd100;
	ld.global.u32 	%r265, [%rd101];
	or.b32  	%r703, %r654, %r701;
	mul.wide.u32 	%rd102, %r703, 4;
	add.s64 	%rd103, %rd1, %rd102;
	ld.global.u32 	%r273, [%rd103];
	or.b32  	%r704, %r649, 17;
	or.b32  	%r705, %r652, %r704;
	mul.wide.u32 	%rd104, %r705, 4;
	add.s64 	%rd105, %rd1, %rd104;
	ld.global.u32 	%r266, [%rd105];
	or.b32  	%r706, %r654, %r704;
	mul.wide.u32 	%rd106, %r706, 4;
	add.s64 	%rd107, %rd1, %rd106;
	ld.global.u32 	%r274, [%rd107];
	or.b32  	%r707, %r649, 18;
	or.b32  	%r708, %r652, %r707;
	mul.wide.u32 	%rd108, %r708, 4;
	add.s64 	%rd109, %rd1, %rd108;
	ld.global.u32 	%r281, [%rd109];
	or.b32  	%r709, %r654, %r707;
	mul.wide.u32 	%rd110, %r709, 4;
	add.s64 	%rd111, %rd1, %rd110;
	ld.global.u32 	%r289, [%rd111];
	or.b32  	%r710, %r649, 19;
	or.b32  	%r711, %r652, %r710;
	mul.wide.u32 	%rd112, %r711, 4;
	add.s64 	%rd113, %rd1, %rd112;
	ld.global.u32 	%r282, [%rd113];
	or.b32  	%r712, %r654, %r710;
	mul.wide.u32 	%rd114, %r712, 4;
	add.s64 	%rd115, %rd1, %rd114;
	ld.global.u32 	%r290, [%rd115];
	or.b32  	%r713, %r649, 20;
	or.b32  	%r714, %r652, %r713;
	mul.wide.u32 	%rd116, %r714, 4;
	add.s64 	%rd117, %rd1, %rd116;
	ld.global.u32 	%r297, [%rd117];
	or.b32  	%r715, %r654, %r713;
	mul.wide.u32 	%rd118, %r715, 4;
	add.s64 	%rd119, %rd1, %rd118;
	ld.global.u32 	%r305, [%rd119];
	or.b32  	%r716, %r649, 21;
	or.b32  	%r717, %r652, %r716;
	mul.wide.u32 	%rd120, %r717, 4;
	add.s64 	%rd121, %rd1, %rd120;
	ld.global.u32 	%r298, [%rd121];
	or.b32  	%r718, %r654, %r716;
	mul.wide.u32 	%rd122, %r718, 4;
	add.s64 	%rd123, %rd1, %rd122;
	ld.global.u32 	%r306, [%rd123];
	or.b32  	%r719, %r649, 22;
	or.b32  	%r720, %r652, %r719;
	mul.wide.u32 	%rd124, %r720, 4;
	add.s64 	%rd125, %rd1, %rd124;
	ld.global.u32 	%r313, [%rd125];
	or.b32  	%r721, %r654, %r719;
	mul.wide.u32 	%rd126, %r721, 4;
	add.s64 	%rd127, %rd1, %rd126;
	ld.global.u32 	%r321, [%rd127];
	or.b32  	%r722, %r649, 23;
	or.b32  	%r723, %r652, %r722;
	mul.wide.u32 	%rd128, %r723, 4;
	add.s64 	%rd129, %rd1, %rd128;
	ld.global.u32 	%r314, [%rd129];
	or.b32  	%r724, %r654, %r722;
	mul.wide.u32 	%rd130, %r724, 4;
	add.s64 	%rd131, %rd1, %rd130;
	ld.global.u32 	%r322, [%rd131];
	or.b32  	%r725, %r649, 24;
	or.b32  	%r726, %r652, %r725;
	mul.wide.u32 	%rd132, %r726, 4;
	add.s64 	%rd133, %rd1, %rd132;
	ld.global.u32 	%r329, [%rd133];
	or.b32  	%r727, %r654, %r725;
	mul.wide.u32 	%rd134, %r727, 4;
	add.s64 	%rd135, %rd1, %rd134;
	ld.global.u32 	%r337, [%rd135];
	or.b32  	%r728, %r649, 25;
	or.b32  	%r729, %r652, %r728;
	mul.wide.u32 	%rd136, %r729, 4;
	add.s64 	%rd137, %rd1, %rd136;
	ld.global.u32 	%r330, [%rd137];
	or.b32  	%r730, %r654, %r728;
	mul.wide.u32 	%rd138, %r730, 4;
	add.s64 	%rd139, %rd1, %rd138;
	ld.global.u32 	%r338, [%rd139];
	or.b32  	%r731, %r649, 26;
	or.b32  	%r732, %r652, %r731;
	mul.wide.u32 	%rd140, %r732, 4;
	add.s64 	%rd141, %rd1, %rd140;
	ld.global.u32 	%r345, [%rd141];
	or.b32  	%r733, %r654, %r731;
	mul.wide.u32 	%rd142, %r733, 4;
	add.s64 	%rd143, %rd1, %rd142;
	ld.global.u32 	%r353, [%rd143];
	or.b32  	%r734, %r649, 27;
	or.b32  	%r735, %r652, %r734;
	mul.wide.u32 	%rd144, %r735, 4;
	add.s64 	%rd145, %rd1, %rd144;
	ld.global.u32 	%r346, [%rd145];
	or.b32  	%r736, %r654, %r734;
	mul.wide.u32 	%rd146, %r736, 4;
	add.s64 	%rd147, %rd1, %rd146;
	ld.global.u32 	%r354, [%rd147];
	or.b32  	%r737, %r649, 28;
	or.b32  	%r738, %r652, %r737;
	mul.wide.u32 	%rd148, %r738, 4;
	add.s64 	%rd149, %rd1, %rd148;
	ld.global.u32 	%r361, [%rd149];
	or.b32  	%r739, %r654, %r737;
	mul.wide.u32 	%rd150, %r739, 4;
	add.s64 	%rd151, %rd1, %rd150;
	ld.global.u32 	%r369, [%rd151];
	or.b32  	%r740, %r649, 29;
	or.b32  	%r741, %r652, %r740;
	mul.wide.u32 	%rd152, %r741, 4;
	add.s64 	%rd153, %rd1, %rd152;
	ld.global.u32 	%r362, [%rd153];
	or.b32  	%r742, %r654, %r740;
	mul.wide.u32 	%rd154, %r742, 4;
	add.s64 	%rd155, %rd1, %rd154;
	ld.global.u32 	%r370, [%rd155];
	or.b32  	%r743, %r649, 30;
	or.b32  	%r744, %r652, %r743;
	mul.wide.u32 	%rd156, %r744, 4;
	add.s64 	%rd157, %rd1, %rd156;
	ld.global.u32 	%r377, [%rd157];
	or.b32  	%r745, %r654, %r743;
	mul.wide.u32 	%rd158, %r745, 4;
	add.s64 	%rd159, %rd1, %rd158;
	ld.global.u32 	%r385, [%rd159];
	or.b32  	%r746, %r649, 31;
	or.b32  	%r747, %r652, %r746;
	mul.wide.u32 	%rd160, %r747, 4;
	add.s64 	%rd161, %rd1, %rd160;
	ld.global.u32 	%r378, [%rd161];
	or.b32  	%r748, %r654, %r746;
	mul.wide.u32 	%rd162, %r748, 4;
	add.s64 	%rd163, %rd1, %rd162;
	ld.global.u32 	%r386, [%rd163];
	mov.u32 	%r135, 21520;
	// begin inline asm
	prmt.b32 %r389, %r137, %r138, %r135;
	// end inline asm
	mov.u32 	%r139, 30258;
	// begin inline asm
	prmt.b32 %r390, %r137, %r138, %r139;
	// end inline asm
	// begin inline asm
	prmt.b32 %r397, %r145, %r146, %r135;
	// end inline asm
	// begin inline asm
	prmt.b32 %r398, %r145, %r146, %r139;
	// end inline asm
	// begin inline asm
	prmt.b32 %r405, %r153, %r154, %r135;
	// end inline asm
	// begin inline asm
	prmt.b32 %r406, %r153, %r154, %r139;
	// end inline asm
	// begin inline asm
	prmt.b32 %r413, %r161, %r162, %r135;
	// end inline asm
	// begin inline asm
	prmt.b32 %r414, %r161, %r162, %r139;
	// end inline asm
	// begin inline asm
	prmt.b32 %r421, %r169, %r170, %r135;
	// end inline asm
	// begin inline asm
	prmt.b32 %r422, %r169, %r170, %r139;
	// end inline asm
	// begin inline asm
	prmt.b32 %r429, %r177, %r178, %r135;
	// end inline asm
	// begin inline asm
	prmt.b32 %r430, %r177, %r178, %r139;
	// end inline asm
	// begin inline asm
	prmt.b32 %r437, %r185, %r186, %r135;
	// end inline asm
	// begin inline asm
	prmt.b32 %r438, %r185, %r186, %r139;
	// end inline asm
	// begin inline asm
	prmt.b32 %r445, %r193, %r194, %r135;
	// end inline asm
	// begin inline asm
	prmt.b32 %r446, %r193, %r194, %r139;
	// end inline asm
	// begin inline asm
	prmt.b32 %r453, %r201, %r202, %r135;
	// end inline asm
	// begin inline asm
	prmt.b32 %r454, %r201, %r202, %r139;
	// end inline asm
	// begin inline asm
	prmt.b32 %r461, %r209, %r210, %r135;
	// end inline asm
	// begin inline asm
	prmt.b32 %r462, %r209, %r210, %r139;
	// end inline asm
	// begin inline asm
	prmt.b32 %r469, %r217, %r218, %r135;
	// end inline asm
	// begin inline asm
	prmt.b32 %r470, %r217, %r218, %r139;
	// end inline asm
	// begin inline asm
	prmt.b32 %r477, %r225, %r226, %r135;
	// end inline asm
	// begin inline asm
	prmt.b32 %r478, %r225, %r226, %r139;
	// end inline asm
	// begin inline asm
	prmt.b32 %r485, %r233, %r234, %r135;
	// end inline asm
	// begin inline asm
	prmt.b32 %r486, %r233, %r234, %r139;
	// end inline asm
	// begin inline asm
	prmt.b32 %r493, %r241, %r242, %r135;
	// end inline asm
	// begin inline asm
	prmt.b32 %r494, %r241, %r242, %r139;
	// end inline asm
	// begin inline asm
	prmt.b32 %r501, %r249, %r250, %r135;
	// end inline asm
	// begin inline asm
	prmt.b32 %r502, %r249, %r250, %r139;
	// end inline asm
	// begin inline asm
	prmt.b32 %r509, %r257, %r258, %r135;
	// end inline asm
	// begin inline asm
	prmt.b32 %r510, %r257, %r258, %r139;
	// end inline asm
	// begin inline asm
	prmt.b32 %r517, %r265, %r266, %r135;
	// end inline asm
	// begin inline asm
	prmt.b32 %r518, %r265, %r266, %r139;
	// end inline asm
	// begin inline asm
	prmt.b32 %r525, %r273, %r274, %r135;
	// end inline asm
	// begin inline asm
	prmt.b32 %r526, %r273, %r274, %r139;
	// end inline asm
	// begin inline asm
	prmt.b32 %r533, %r281, %r282, %r135;
	// end inline asm
	// begin inline asm
	prmt.b32 %r534, %r281, %r282, %r139;
	// end inline asm
	// begin inline asm
	prmt.b32 %r541, %r289, %r290, %r135;
	// end inline asm
	// begin inline asm
	prmt.b32 %r542, %r289, %r290, %r139;
	// end inline asm
	// begin inline asm
	prmt.b32 %r549, %r297, %r298, %r135;
	// end inline asm
	// begin inline asm
	prmt.b32 %r550, %r297, %r298, %r139;
	// end inline asm
	// begin inline asm
	prmt.b32 %r557, %r305, %r306, %r135;
	// end inline asm
	// begin inline asm
	prmt.b32 %r558, %r305, %r306, %r139;
	// end inline asm
	// begin inline asm
	prmt.b32 %r565, %r313, %r314, %r135;
	// end inline asm
	// begin inline asm
	prmt.b32 %r566, %r313, %r314, %r139;
	// end inline asm
	// begin inline asm
	prmt.b32 %r573, %r321, %r322, %r135;
	// end inline asm
	// begin inline asm
	prmt.b32 %r574, %r321, %r322, %r139;
	// end inline asm
	// begin inline asm
	prmt.b32 %r581, %r329, %r330, %r135;
	// end inline asm
	// begin inline asm
	prmt.b32 %r582, %r329, %r330, %r139;
	// end inline asm
	// begin inline asm
	prmt.b32 %r589, %r337, %r338, %r135;
	// end inline asm
	// begin inline asm
	prmt.b32 %r590, %r337, %r338, %r139;
	// end inline asm
	// begin inline asm
	prmt.b32 %r597, %r345, %r346, %r135;
	// end inline asm
	// begin inline asm
	prmt.b32 %r598, %r345, %r346, %r139;
	// end inline asm
	// begin inline asm
	prmt.b32 %r605, %r353, %r354, %r135;
	// end inline asm
	// begin inline asm
	prmt.b32 %r606, %r353, %r354, %r139;
	// end inline asm
	// begin inline asm
	prmt.b32 %r613, %r361, %r362, %r135;
	// end inline asm
	// begin inline asm
	prmt.b32 %r614, %r361, %r362, %r139;
	// end inline asm
	// begin inline asm
	prmt.b32 %r621, %r369, %r370, %r135;
	// end inline asm
	// begin inline asm
	prmt.b32 %r622, %r369, %r370, %r139;
	// end inline asm
	// begin inline asm
	prmt.b32 %r629, %r377, %r378, %r135;
	// end inline asm
	// begin inline asm
	prmt.b32 %r630, %r377, %r378, %r139;
	// end inline asm
	// begin inline asm
	prmt.b32 %r637, %r385, %r386, %r135;
	// end inline asm
	// begin inline asm
	prmt.b32 %r638, %r385, %r386, %r139;
	// end inline asm
	mov.u32 	%r391, 25152;
	// begin inline asm
	prmt.b32 %r1139, %r389, %r390, %r391;
	// end inline asm
	mov.u32 	%r395, 29521;
	// begin inline asm
	prmt.b32 %r1145, %r389, %r390, %r395;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1657, %r397, %r398, %r391;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1663, %r397, %r398, %r395;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1171, %r405, %r406, %r391;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1177, %r405, %r406, %r395;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1689, %r413, %r414, %r391;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1695, %r413, %r414, %r395;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1203, %r421, %r422, %r391;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1209, %r421, %r422, %r395;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1721, %r429, %r430, %r391;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1727, %r429, %r430, %r395;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1235, %r437, %r438, %r391;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1241, %r437, %r438, %r395;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1753, %r445, %r446, %r391;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1759, %r445, %r446, %r395;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1267, %r453, %r454, %r391;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1273, %r453, %r454, %r395;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1785, %r461, %r462, %r391;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1791, %r461, %r462, %r395;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1299, %r469, %r470, %r391;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1305, %r469, %r470, %r395;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1817, %r477, %r478, %r391;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1823, %r477, %r478, %r395;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1331, %r485, %r486, %r391;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1337, %r485, %r486, %r395;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1849, %r493, %r494, %r391;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1855, %r493, %r494, %r395;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1363, %r501, %r502, %r391;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1369, %r501, %r502, %r395;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1881, %r509, %r510, %r391;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1887, %r509, %r510, %r395;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1395, %r517, %r518, %r391;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1401, %r517, %r518, %r395;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1913, %r525, %r526, %r391;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1919, %r525, %r526, %r395;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1427, %r533, %r534, %r391;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1433, %r533, %r534, %r395;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1945, %r541, %r542, %r391;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1951, %r541, %r542, %r395;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1459, %r549, %r550, %r391;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1465, %r549, %r550, %r395;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1977, %r557, %r558, %r391;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1983, %r557, %r558, %r395;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1491, %r565, %r566, %r391;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1497, %r565, %r566, %r395;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2009, %r573, %r574, %r391;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2015, %r573, %r574, %r395;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1523, %r581, %r582, %r391;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1529, %r581, %r582, %r395;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2041, %r589, %r590, %r391;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2047, %r589, %r590, %r395;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1555, %r597, %r598, %r391;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1561, %r597, %r598, %r395;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2073, %r605, %r606, %r391;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2079, %r605, %r606, %r395;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1587, %r613, %r614, %r391;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1593, %r613, %r614, %r395;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2105, %r621, %r622, %r391;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2111, %r621, %r622, %r395;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1619, %r629, %r630, %r391;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1625, %r629, %r630, %r395;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2137, %r637, %r638, %r391;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2143, %r637, %r638, %r395;
	// end inline asm
	shl.b32 	%r69, %r115, 13;
	shl.b32 	%r749, %r3, 8;
	shl.b32 	%r750, %r4, 2;
	and.b32  	%r751, %r750, 28;
	or.b32  	%r70, %r751, %r2;
	or.b32  	%r71, %r749, %r70;
	or.b32  	%r72, %r71, 128;
	or.b32  	%r73, %r70, 128;
	or.b32  	%r74, %r70, 129;
	or.b32  	%r75, %r70, 130;
	or.b32  	%r76, %r70, 131;
	shl.b32 	%r752, %r4, 4;
	and.b32  	%r753, %r752, 48;
	shl.b32 	%r754, %r1, 6;
	or.b32  	%r77, %r753, %r754;
	shr.u32 	%r78, %r4, 2;
	mul.lo.s32 	%r755, %r1, 640;
	shl.b32 	%r756, %r4, 1;
	and.b32  	%r79, %r756, 6;
	or.b32  	%r80, %r755, %r78;
	or.b32  	%r81, %r80, 8;
	and.b32  	%r757, %r4, 7;
	or.b32  	%r758, %r111, 640;
	or.b32  	%r759, %r111, 1280;
	or.b32  	%r760, %r111, 1920;
	shl.b32 	%r762, %r122, %r113;
	setp.gt.u32 	%p15, %r113, 31;
	selp.b32 	%r82, 0, %r762, %p15;
	min.u32 	%r83, %r112, 31;
	and.b32  	%r84, %r4, 1;
	and.b32  	%r85, %r4, 2;
	and.b32  	%r86, %r4, 4;
	shl.b32 	%r763, %r3, 14;
	shl.b32 	%r764, %r1, 21;
	shl.b32 	%r765, %r4, 16;
	and.b32  	%r766, %r765, 1572864;
	and.b32  	%r87, %r646, 64;
	shl.b32 	%r767, %r4, 3;
	and.b32  	%r88, %r767, 32;
	or.b32  	%r768, %r766, %r764;
	or.b32  	%r89, %r768, %r763;
	or.b32  	%r769, %r4, 24;
	mul.lo.s32 	%r770, %r769, 20;
	add.s32 	%r771, %r770, %r760;
	mul.wide.u32 	%rd164, %r771, 4;
	mov.u64 	%rd165, shmem;
	add.s64 	%rd166, %rd165, 32896;
	add.s64 	%rd9, %rd166, %rd164;
	mul.lo.s32 	%r772, %r757, 20;
	add.s32 	%r773, %r772, %r111;
	mul.wide.u32 	%rd167, %r773, 4;
	add.s64 	%rd10, %rd166, %rd167;
	add.s32 	%r774, %r772, %r758;
	mul.wide.u32 	%rd168, %r774, 4;
	add.s64 	%rd11, %rd166, %rd168;
	add.s32 	%r775, %r772, %r759;
	mul.wide.u32 	%rd169, %r775, 4;
	add.s64 	%rd12, %rd166, %rd169;
	add.s32 	%r776, %r772, %r760;
	mul.wide.u32 	%rd170, %r776, 4;
	add.s64 	%rd13, %rd166, %rd170;
	add.s32 	%r777, %r772, 160;
	add.s32 	%r778, %r777, %r111;
	mul.wide.u32 	%rd171, %r778, 4;
	add.s64 	%rd14, %rd166, %rd171;
	add.s32 	%r779, %r777, %r758;
	mul.wide.u32 	%rd172, %r779, 4;
	add.s64 	%rd15, %rd166, %rd172;
	add.s32 	%r780, %r777, %r759;
	mul.wide.u32 	%rd173, %r780, 4;
	add.s64 	%rd16, %rd166, %rd173;
	add.s32 	%r781, %r777, %r760;
	mul.wide.u32 	%rd174, %r781, 4;
	add.s64 	%rd17, %rd166, %rd174;
	add.s32 	%r782, %r772, 320;
	add.s32 	%r783, %r782, %r111;
	mul.wide.u32 	%rd175, %r783, 4;
	add.s64 	%rd18, %rd166, %rd175;
	add.s32 	%r784, %r782, %r758;
	mul.wide.u32 	%rd176, %r784, 4;
	add.s64 	%rd19, %rd166, %rd176;
	add.s32 	%r785, %r782, %r759;
	mul.wide.u32 	%rd177, %r785, 4;
	add.s64 	%rd20, %rd166, %rd177;
	add.s32 	%r786, %r782, %r760;
	mul.wide.u32 	%rd178, %r786, 4;
	add.s64 	%rd21, %rd166, %rd178;
	add.s32 	%r787, %r770, %r111;
	mul.wide.u32 	%rd179, %r787, 4;
	add.s64 	%rd22, %rd166, %rd179;
	add.s32 	%r788, %r770, %r758;
	mul.wide.u32 	%rd180, %r788, 4;
	add.s64 	%rd23, %rd166, %rd180;
	add.s32 	%r789, %r770, %r759;
	mul.wide.u32 	%rd181, %r789, 4;
	add.s64 	%rd24, %rd166, %rd181;
	and.b32  	%r90, %r752, 16;
	mov.pred 	%p69, 0;
$L__BB0_11:                             // %L10000
                                        // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_13 Depth 2
                                        //       Child Loop BB0_14 Depth 3
	add.s32 	%r790, %r2447, %r115;
	setp.ge.s32 	%p16, %r790, %r116;
	@%p16 bra 	$L__BB0_17;
// %bb.12:                              // %L10008.preheader
                                        //   in Loop: Header=BB0_11 Depth=1
	mov.u32 	%r1141, 0;
	mov.u32 	%r2448, %r1141;
	mov.u32 	%r2449, %r1141;
	mov.u32 	%r2450, %r1141;
	mov.u32 	%r2451, %r1141;
	mov.u32 	%r2452, %r1141;
	mov.u32 	%r2453, %r1141;
	mov.u32 	%r2454, %r1141;
$L__BB0_13:                             // %L10008
                                        //   Parent Loop BB0_11 Depth=1
                                        // =>  This Loop Header: Depth=2
                                        //       Child Loop BB0_14 Depth 3
	or.b32  	%r793, %r2448, %r110;
	add.s32 	%r794, %r793, %r2447;
	shl.b32 	%r795, %r794, 13;
	and.b32  	%r796, %r795, 536633344;
	or.b32  	%r797, %r71, %r796;
	add.s32 	%r798, %r797, %r69;
	shr.s32 	%r799, %r798, 31;
	shr.u32 	%r800, %r799, 3;
	add.s32 	%r801, %r798, %r800;
	shr.s32 	%r802, %r801, 29;
	setp.lt.s32 	%p17, %r798, 0;
	and.b32  	%r803, %r801, -536870912;
	setp.ne.s32 	%p18, %r803, %r798;
	and.pred  	%p19, %p17, %p18;
	selp.u32 	%r804, 1, 0, %p19;
	sub.s32 	%r805, %r804, %r802;
	shl.b32 	%r806, %r805, 29;
	or.b32  	%r807, %r798, 1;
	add.s32 	%r808, %r807, %r806;
	mul.wide.s32 	%rd182, %r808, 4;
	add.s64 	%rd183, %rd2, %rd182;
	ld.global.v4.u32 	{%r809, %r810, %r811, %r812}, [%rd183+-4];
	or.b32  	%r813, %r72, %r796;
	add.s32 	%r814, %r813, %r69;
	shr.s32 	%r815, %r814, 31;
	shr.u32 	%r816, %r815, 3;
	add.s32 	%r817, %r814, %r816;
	shr.u32 	%r818, %r817, 29;
	shr.u32 	%r819, %r814, 31;
	sub.s32 	%r820, %r819, %r818;
	shl.b32 	%r821, %r820, 29;
	or.b32  	%r822, %r814, 1;
	add.s32 	%r823, %r822, %r821;
	mul.wide.s32 	%rd184, %r823, 4;
	add.s64 	%rd185, %rd2, %rd184;
	ld.global.v4.u32 	{%r824, %r825, %r826, %r827}, [%rd185+-4];
	or.b32  	%r828, %r793, 4;
	add.s32 	%r829, %r828, %r2447;
	shl.b32 	%r830, %r829, 13;
	and.b32  	%r831, %r830, 536666112;
	or.b32  	%r832, %r71, %r831;
	add.s32 	%r833, %r832, %r69;
	shr.s32 	%r834, %r833, 31;
	shr.u32 	%r835, %r834, 3;
	add.s32 	%r836, %r833, %r835;
	shr.s32 	%r837, %r836, 29;
	setp.lt.s32 	%p20, %r833, 0;
	and.b32  	%r838, %r836, -536870912;
	setp.ne.s32 	%p21, %r838, %r833;
	and.pred  	%p22, %p20, %p21;
	selp.u32 	%r839, 1, 0, %p22;
	sub.s32 	%r840, %r839, %r837;
	shl.b32 	%r841, %r840, 29;
	or.b32  	%r842, %r833, 1;
	add.s32 	%r843, %r842, %r841;
	mul.wide.s32 	%rd186, %r843, 4;
	add.s64 	%rd187, %rd2, %rd186;
	ld.global.v4.u32 	{%r844, %r845, %r846, %r847}, [%rd187+-4];
	or.b32  	%r848, %r72, %r831;
	add.s32 	%r849, %r848, %r69;
	shr.s32 	%r850, %r849, 31;
	shr.u32 	%r851, %r850, 3;
	add.s32 	%r852, %r849, %r851;
	shr.u32 	%r853, %r852, 29;
	shr.u32 	%r854, %r849, 31;
	sub.s32 	%r855, %r854, %r853;
	shl.b32 	%r856, %r855, 29;
	or.b32  	%r857, %r849, 1;
	add.s32 	%r858, %r857, %r856;
	mul.wide.s32 	%rd188, %r858, 4;
	add.s64 	%rd189, %rd2, %rd188;
	ld.global.v4.u32 	{%r859, %r860, %r861, %r862}, [%rd189+-4];
	or.b32  	%r863, %r793, 8;
	add.s32 	%r864, %r863, %r2447;
	shl.b32 	%r865, %r864, 13;
	and.b32  	%r866, %r865, 536698880;
	or.b32  	%r867, %r71, %r866;
	add.s32 	%r868, %r867, %r69;
	shr.s32 	%r869, %r868, 31;
	shr.u32 	%r870, %r869, 3;
	add.s32 	%r871, %r868, %r870;
	shr.s32 	%r872, %r871, 29;
	setp.lt.s32 	%p23, %r868, 0;
	and.b32  	%r873, %r871, -536870912;
	setp.ne.s32 	%p24, %r873, %r868;
	and.pred  	%p25, %p23, %p24;
	selp.u32 	%r874, 1, 0, %p25;
	sub.s32 	%r875, %r874, %r872;
	shl.b32 	%r876, %r875, 29;
	or.b32  	%r877, %r868, 1;
	add.s32 	%r878, %r877, %r876;
	mul.wide.s32 	%rd190, %r878, 4;
	add.s64 	%rd191, %rd2, %rd190;
	ld.global.v4.u32 	{%r879, %r880, %r881, %r882}, [%rd191+-4];
	or.b32  	%r883, %r72, %r866;
	add.s32 	%r884, %r883, %r69;
	shr.s32 	%r885, %r884, 31;
	shr.u32 	%r886, %r885, 3;
	add.s32 	%r887, %r884, %r886;
	shr.u32 	%r888, %r887, 29;
	shr.u32 	%r889, %r884, 31;
	sub.s32 	%r890, %r889, %r888;
	shl.b32 	%r891, %r890, 29;
	or.b32  	%r892, %r884, 1;
	add.s32 	%r893, %r892, %r891;
	mul.wide.s32 	%rd192, %r893, 4;
	add.s64 	%rd193, %rd2, %rd192;
	ld.global.v4.u32 	{%r894, %r895, %r896, %r897}, [%rd193+-4];
	or.b32  	%r898, %r793, 12;
	add.s32 	%r899, %r898, %r2447;
	shl.b32 	%r900, %r899, 13;
	and.b32  	%r901, %r900, 536731648;
	or.b32  	%r902, %r71, %r901;
	add.s32 	%r903, %r902, %r69;
	shr.s32 	%r904, %r903, 31;
	shr.u32 	%r905, %r904, 3;
	add.s32 	%r906, %r903, %r905;
	shr.s32 	%r907, %r906, 29;
	setp.lt.s32 	%p26, %r903, 0;
	and.b32  	%r908, %r906, -536870912;
	setp.ne.s32 	%p27, %r908, %r903;
	and.pred  	%p28, %p26, %p27;
	selp.u32 	%r909, 1, 0, %p28;
	sub.s32 	%r910, %r909, %r907;
	shl.b32 	%r911, %r910, 29;
	or.b32  	%r912, %r903, 1;
	add.s32 	%r913, %r912, %r911;
	mul.wide.s32 	%rd194, %r913, 4;
	add.s64 	%rd195, %rd2, %rd194;
	ld.global.v4.u32 	{%r914, %r915, %r916, %r917}, [%rd195+-4];
	or.b32  	%r918, %r72, %r901;
	add.s32 	%r919, %r918, %r69;
	shr.s32 	%r920, %r919, 31;
	shr.u32 	%r921, %r920, 3;
	add.s32 	%r922, %r919, %r921;
	shr.u32 	%r923, %r922, 29;
	shr.u32 	%r924, %r919, 31;
	sub.s32 	%r925, %r924, %r923;
	shl.b32 	%r926, %r925, 29;
	or.b32  	%r927, %r919, 1;
	add.s32 	%r928, %r927, %r926;
	mul.wide.s32 	%rd196, %r928, 4;
	add.s64 	%rd197, %rd2, %rd196;
	ld.global.v4.u32 	{%r929, %r930, %r931, %r932}, [%rd197+-4];
	or.b32  	%r933, %r793, 16;
	add.s32 	%r934, %r933, %r2447;
	shl.b32 	%r935, %r934, 13;
	and.b32  	%r936, %r935, 536764416;
	or.b32  	%r937, %r71, %r936;
	add.s32 	%r938, %r937, %r69;
	shr.s32 	%r939, %r938, 31;
	shr.u32 	%r940, %r939, 3;
	add.s32 	%r941, %r938, %r940;
	shr.s32 	%r942, %r941, 29;
	setp.lt.s32 	%p29, %r938, 0;
	and.b32  	%r943, %r941, -536870912;
	setp.ne.s32 	%p30, %r943, %r938;
	and.pred  	%p31, %p29, %p30;
	selp.u32 	%r944, 1, 0, %p31;
	sub.s32 	%r945, %r944, %r942;
	shl.b32 	%r946, %r945, 29;
	or.b32  	%r947, %r938, 1;
	add.s32 	%r948, %r947, %r946;
	mul.wide.s32 	%rd198, %r948, 4;
	add.s64 	%rd199, %rd2, %rd198;
	ld.global.v4.u32 	{%r949, %r950, %r951, %r952}, [%rd199+-4];
	or.b32  	%r953, %r72, %r936;
	add.s32 	%r954, %r953, %r69;
	shr.s32 	%r955, %r954, 31;
	shr.u32 	%r956, %r955, 3;
	add.s32 	%r957, %r954, %r956;
	shr.u32 	%r958, %r957, 29;
	shr.u32 	%r959, %r954, 31;
	sub.s32 	%r960, %r959, %r958;
	shl.b32 	%r961, %r960, 29;
	or.b32  	%r962, %r954, 1;
	add.s32 	%r963, %r962, %r961;
	mul.wide.s32 	%rd200, %r963, 4;
	add.s64 	%rd201, %rd2, %rd200;
	ld.global.v4.u32 	{%r964, %r965, %r966, %r967}, [%rd201+-4];
	or.b32  	%r968, %r793, 20;
	add.s32 	%r969, %r968, %r2447;
	shl.b32 	%r970, %r969, 13;
	and.b32  	%r971, %r970, 536797184;
	or.b32  	%r972, %r71, %r971;
	add.s32 	%r973, %r972, %r69;
	shr.s32 	%r974, %r973, 31;
	shr.u32 	%r975, %r974, 3;
	add.s32 	%r976, %r973, %r975;
	shr.s32 	%r977, %r976, 29;
	setp.lt.s32 	%p32, %r973, 0;
	and.b32  	%r978, %r976, -536870912;
	setp.ne.s32 	%p33, %r978, %r973;
	and.pred  	%p34, %p32, %p33;
	selp.u32 	%r979, 1, 0, %p34;
	sub.s32 	%r980, %r979, %r977;
	shl.b32 	%r981, %r980, 29;
	or.b32  	%r982, %r973, 1;
	add.s32 	%r983, %r982, %r981;
	mul.wide.s32 	%rd202, %r983, 4;
	add.s64 	%rd203, %rd2, %rd202;
	ld.global.v4.u32 	{%r984, %r985, %r986, %r987}, [%rd203+-4];
	or.b32  	%r988, %r72, %r971;
	add.s32 	%r989, %r988, %r69;
	shr.s32 	%r990, %r989, 31;
	shr.u32 	%r991, %r990, 3;
	add.s32 	%r992, %r989, %r991;
	shr.u32 	%r993, %r992, 29;
	shr.u32 	%r994, %r989, 31;
	sub.s32 	%r995, %r994, %r993;
	shl.b32 	%r996, %r995, 29;
	or.b32  	%r997, %r989, 1;
	add.s32 	%r998, %r997, %r996;
	mul.wide.s32 	%rd204, %r998, 4;
	add.s64 	%rd205, %rd2, %rd204;
	ld.global.v4.u32 	{%r999, %r1000, %r1001, %r1002}, [%rd205+-4];
	or.b32  	%r1003, %r793, 24;
	add.s32 	%r1004, %r1003, %r2447;
	shl.b32 	%r1005, %r1004, 13;
	and.b32  	%r1006, %r1005, 536829952;
	or.b32  	%r1007, %r71, %r1006;
	add.s32 	%r1008, %r1007, %r69;
	shr.s32 	%r1009, %r1008, 31;
	shr.u32 	%r1010, %r1009, 3;
	add.s32 	%r1011, %r1008, %r1010;
	shr.s32 	%r1012, %r1011, 29;
	setp.lt.s32 	%p35, %r1008, 0;
	and.b32  	%r1013, %r1011, -536870912;
	setp.ne.s32 	%p36, %r1013, %r1008;
	and.pred  	%p37, %p35, %p36;
	selp.u32 	%r1014, 1, 0, %p37;
	sub.s32 	%r1015, %r1014, %r1012;
	shl.b32 	%r1016, %r1015, 29;
	or.b32  	%r1017, %r1008, 1;
	add.s32 	%r1018, %r1017, %r1016;
	mul.wide.s32 	%rd206, %r1018, 4;
	add.s64 	%rd207, %rd2, %rd206;
	ld.global.v4.u32 	{%r1019, %r1020, %r1021, %r1022}, [%rd207+-4];
	or.b32  	%r1023, %r72, %r1006;
	add.s32 	%r1024, %r1023, %r69;
	shr.s32 	%r1025, %r1024, 31;
	shr.u32 	%r1026, %r1025, 3;
	add.s32 	%r1027, %r1024, %r1026;
	shr.u32 	%r1028, %r1027, 29;
	shr.u32 	%r1029, %r1024, 31;
	sub.s32 	%r1030, %r1029, %r1028;
	shl.b32 	%r1031, %r1030, 29;
	or.b32  	%r1032, %r1024, 1;
	add.s32 	%r1033, %r1032, %r1031;
	mul.wide.s32 	%rd208, %r1033, 4;
	add.s64 	%rd209, %rd2, %rd208;
	ld.global.v4.u32 	{%r1034, %r1035, %r1036, %r1037}, [%rd209+-4];
	or.b32  	%r1038, %r793, 28;
	add.s32 	%r1039, %r1038, %r2447;
	shl.b32 	%r1040, %r1039, 13;
	and.b32  	%r1041, %r1040, 536862720;
	or.b32  	%r1042, %r71, %r1041;
	add.s32 	%r1043, %r1042, %r69;
	shr.s32 	%r1044, %r1043, 31;
	shr.u32 	%r1045, %r1044, 3;
	add.s32 	%r1046, %r1043, %r1045;
	shr.s32 	%r1047, %r1046, 29;
	setp.lt.s32 	%p38, %r1043, 0;
	and.b32  	%r1048, %r1046, -536870912;
	setp.ne.s32 	%p39, %r1048, %r1043;
	and.pred  	%p40, %p38, %p39;
	selp.u32 	%r1049, 1, 0, %p40;
	sub.s32 	%r1050, %r1049, %r1047;
	shl.b32 	%r1051, %r1050, 29;
	or.b32  	%r1052, %r1043, 1;
	add.s32 	%r1053, %r1052, %r1051;
	mul.wide.s32 	%rd210, %r1053, 4;
	add.s64 	%rd211, %rd2, %rd210;
	ld.global.v4.u32 	{%r1054, %r1055, %r1056, %r1057}, [%rd211+-4];
	or.b32  	%r1058, %r72, %r1041;
	add.s32 	%r1059, %r1058, %r69;
	shr.s32 	%r1060, %r1059, 31;
	shr.u32 	%r1061, %r1060, 3;
	add.s32 	%r1062, %r1059, %r1061;
	shr.u32 	%r1063, %r1062, 29;
	shr.u32 	%r1064, %r1059, 31;
	sub.s32 	%r1065, %r1064, %r1063;
	shl.b32 	%r1066, %r1065, 29;
	or.b32  	%r1067, %r1059, 1;
	add.s32 	%r1068, %r1067, %r1066;
	mul.wide.s32 	%rd212, %r1068, 4;
	add.s64 	%rd213, %rd2, %rd212;
	ld.global.v4.u32 	{%r1069, %r1070, %r1071, %r1072}, [%rd213+-4];
	and.b32  	%r1073, %r794, 3;
	mul.lo.s32 	%r1074, %r1073, 257;
	add.s32 	%r1075, %r70, %r1074;
	mul.wide.u32 	%rd214, %r1075, 4;
	add.s64 	%rd216, %rd165, %rd214;
	st.shared.u32 	[%rd216], %r809;
	cvt.u64.u32 	%rd217, %r1074;
	cvt.u64.u32 	%rd218, %r70;
	add.s64 	%rd219, %rd218, %rd217;
	shl.b64 	%rd220, %rd219, 2;
	add.s64 	%rd221, %rd165, %rd220;
	st.shared.u32 	[%rd221+4], %r810;
	st.shared.u32 	[%rd221+8], %r811;
	st.shared.u32 	[%rd221+12], %r812;
	add.s32 	%r1076, %r1074, %r73;
	mul.wide.u32 	%rd222, %r1076, 4;
	add.s64 	%rd223, %rd165, %rd222;
	st.shared.u32 	[%rd223], %r824;
	add.s32 	%r1077, %r1074, %r74;
	mul.wide.u32 	%rd224, %r1077, 4;
	add.s64 	%rd225, %rd165, %rd224;
	st.shared.u32 	[%rd225], %r825;
	add.s32 	%r1078, %r1074, %r75;
	mul.wide.u32 	%rd226, %r1078, 4;
	add.s64 	%rd227, %rd165, %rd226;
	st.shared.u32 	[%rd227], %r826;
	add.s32 	%r1079, %r1074, %r76;
	mul.wide.u32 	%rd228, %r1079, 4;
	add.s64 	%rd229, %rd165, %rd228;
	st.shared.u32 	[%rd229], %r827;
	and.b32  	%r1080, %r829, 7;
	mul.lo.s32 	%r1081, %r1080, 257;
	add.s32 	%r1082, %r70, %r1081;
	mul.wide.u32 	%rd230, %r1082, 4;
	add.s64 	%rd231, %rd165, %rd230;
	st.shared.u32 	[%rd231], %r844;
	cvt.u64.u32 	%rd232, %r1081;
	add.s64 	%rd233, %rd218, %rd232;
	shl.b64 	%rd234, %rd233, 2;
	add.s64 	%rd235, %rd165, %rd234;
	st.shared.u32 	[%rd235+4], %r845;
	st.shared.u32 	[%rd235+8], %r846;
	st.shared.u32 	[%rd235+12], %r847;
	add.s32 	%r1083, %r1081, %r73;
	mul.wide.u32 	%rd236, %r1083, 4;
	add.s64 	%rd237, %rd165, %rd236;
	st.shared.u32 	[%rd237], %r859;
	add.s32 	%r1084, %r1081, %r74;
	mul.wide.u32 	%rd238, %r1084, 4;
	add.s64 	%rd239, %rd165, %rd238;
	st.shared.u32 	[%rd239], %r860;
	add.s32 	%r1085, %r1081, %r75;
	mul.wide.u32 	%rd240, %r1085, 4;
	add.s64 	%rd241, %rd165, %rd240;
	st.shared.u32 	[%rd241], %r861;
	add.s32 	%r1086, %r1081, %r76;
	mul.wide.u32 	%rd242, %r1086, 4;
	add.s64 	%rd243, %rd165, %rd242;
	st.shared.u32 	[%rd243], %r862;
	and.b32  	%r1087, %r864, 11;
	mul.lo.s32 	%r1088, %r1087, 257;
	add.s32 	%r1089, %r70, %r1088;
	mul.wide.u32 	%rd244, %r1089, 4;
	add.s64 	%rd245, %rd165, %rd244;
	st.shared.u32 	[%rd245], %r879;
	cvt.u64.u32 	%rd246, %r1088;
	add.s64 	%rd247, %rd218, %rd246;
	shl.b64 	%rd248, %rd247, 2;
	add.s64 	%rd249, %rd165, %rd248;
	st.shared.u32 	[%rd249+4], %r880;
	st.shared.u32 	[%rd249+8], %r881;
	st.shared.u32 	[%rd249+12], %r882;
	add.s32 	%r1090, %r1088, %r73;
	mul.wide.u32 	%rd250, %r1090, 4;
	add.s64 	%rd251, %rd165, %rd250;
	st.shared.u32 	[%rd251], %r894;
	add.s32 	%r1091, %r1088, %r74;
	mul.wide.u32 	%rd252, %r1091, 4;
	add.s64 	%rd253, %rd165, %rd252;
	st.shared.u32 	[%rd253], %r895;
	add.s32 	%r1092, %r1088, %r75;
	mul.wide.u32 	%rd254, %r1092, 4;
	add.s64 	%rd255, %rd165, %rd254;
	st.shared.u32 	[%rd255], %r896;
	add.s32 	%r1093, %r1088, %r76;
	mul.wide.u32 	%rd256, %r1093, 4;
	add.s64 	%rd257, %rd165, %rd256;
	st.shared.u32 	[%rd257], %r897;
	and.b32  	%r1094, %r899, 15;
	mul.lo.s32 	%r1095, %r1094, 257;
	add.s32 	%r1096, %r70, %r1095;
	mul.wide.u32 	%rd258, %r1096, 4;
	add.s64 	%rd259, %rd165, %rd258;
	st.shared.u32 	[%rd259], %r914;
	cvt.u64.u32 	%rd260, %r1095;
	add.s64 	%rd261, %rd218, %rd260;
	shl.b64 	%rd262, %rd261, 2;
	add.s64 	%rd263, %rd165, %rd262;
	st.shared.u32 	[%rd263+4], %r915;
	st.shared.u32 	[%rd263+8], %r916;
	st.shared.u32 	[%rd263+12], %r917;
	add.s32 	%r1097, %r1095, %r73;
	mul.wide.u32 	%rd264, %r1097, 4;
	add.s64 	%rd265, %rd165, %rd264;
	st.shared.u32 	[%rd265], %r929;
	add.s32 	%r1098, %r1095, %r74;
	mul.wide.u32 	%rd266, %r1098, 4;
	add.s64 	%rd267, %rd165, %rd266;
	st.shared.u32 	[%rd267], %r930;
	add.s32 	%r1099, %r1095, %r75;
	mul.wide.u32 	%rd268, %r1099, 4;
	add.s64 	%rd269, %rd165, %rd268;
	st.shared.u32 	[%rd269], %r931;
	add.s32 	%r1100, %r1095, %r76;
	mul.wide.u32 	%rd270, %r1100, 4;
	add.s64 	%rd271, %rd165, %rd270;
	st.shared.u32 	[%rd271], %r932;
	and.b32  	%r1101, %r934, 19;
	mul.lo.s32 	%r1102, %r1101, 257;
	add.s32 	%r1103, %r70, %r1102;
	mul.wide.u32 	%rd272, %r1103, 4;
	add.s64 	%rd273, %rd165, %rd272;
	st.shared.u32 	[%rd273], %r949;
	cvt.u64.u32 	%rd274, %r1102;
	add.s64 	%rd275, %rd218, %rd274;
	shl.b64 	%rd276, %rd275, 2;
	add.s64 	%rd277, %rd165, %rd276;
	st.shared.u32 	[%rd277+4], %r950;
	st.shared.u32 	[%rd277+8], %r951;
	st.shared.u32 	[%rd277+12], %r952;
	add.s32 	%r1104, %r1102, %r73;
	mul.wide.u32 	%rd278, %r1104, 4;
	add.s64 	%rd279, %rd165, %rd278;
	st.shared.u32 	[%rd279], %r964;
	add.s32 	%r1105, %r1102, %r74;
	mul.wide.u32 	%rd280, %r1105, 4;
	add.s64 	%rd281, %rd165, %rd280;
	st.shared.u32 	[%rd281], %r965;
	add.s32 	%r1106, %r1102, %r75;
	mul.wide.u32 	%rd282, %r1106, 4;
	add.s64 	%rd283, %rd165, %rd282;
	st.shared.u32 	[%rd283], %r966;
	add.s32 	%r1107, %r1102, %r76;
	mul.wide.u32 	%rd284, %r1107, 4;
	add.s64 	%rd285, %rd165, %rd284;
	st.shared.u32 	[%rd285], %r967;
	and.b32  	%r1108, %r969, 23;
	mul.lo.s32 	%r1109, %r1108, 257;
	add.s32 	%r1110, %r70, %r1109;
	mul.wide.u32 	%rd286, %r1110, 4;
	add.s64 	%rd287, %rd165, %rd286;
	st.shared.u32 	[%rd287], %r984;
	cvt.u64.u32 	%rd288, %r1109;
	add.s64 	%rd289, %rd218, %rd288;
	shl.b64 	%rd290, %rd289, 2;
	add.s64 	%rd291, %rd165, %rd290;
	st.shared.u32 	[%rd291+4], %r985;
	st.shared.u32 	[%rd291+8], %r986;
	st.shared.u32 	[%rd291+12], %r987;
	add.s32 	%r1111, %r1109, %r73;
	mul.wide.u32 	%rd292, %r1111, 4;
	add.s64 	%rd293, %rd165, %rd292;
	st.shared.u32 	[%rd293], %r999;
	add.s32 	%r1112, %r1109, %r74;
	mul.wide.u32 	%rd294, %r1112, 4;
	add.s64 	%rd295, %rd165, %rd294;
	st.shared.u32 	[%rd295], %r1000;
	add.s32 	%r1113, %r1109, %r75;
	mul.wide.u32 	%rd296, %r1113, 4;
	add.s64 	%rd297, %rd165, %rd296;
	st.shared.u32 	[%rd297], %r1001;
	add.s32 	%r1114, %r1109, %r76;
	mul.wide.u32 	%rd298, %r1114, 4;
	add.s64 	%rd299, %rd165, %rd298;
	st.shared.u32 	[%rd299], %r1002;
	and.b32  	%r1115, %r1004, 27;
	mul.lo.s32 	%r1116, %r1115, 257;
	add.s32 	%r1117, %r70, %r1116;
	mul.wide.u32 	%rd300, %r1117, 4;
	add.s64 	%rd301, %rd165, %rd300;
	st.shared.u32 	[%rd301], %r1019;
	cvt.u64.u32 	%rd302, %r1116;
	add.s64 	%rd303, %rd218, %rd302;
	shl.b64 	%rd304, %rd303, 2;
	add.s64 	%rd305, %rd165, %rd304;
	st.shared.u32 	[%rd305+4], %r1020;
	st.shared.u32 	[%rd305+8], %r1021;
	st.shared.u32 	[%rd305+12], %r1022;
	add.s32 	%r1118, %r1116, %r73;
	mul.wide.u32 	%rd306, %r1118, 4;
	add.s64 	%rd307, %rd165, %rd306;
	st.shared.u32 	[%rd307], %r1034;
	add.s32 	%r1119, %r1116, %r74;
	mul.wide.u32 	%rd308, %r1119, 4;
	add.s64 	%rd309, %rd165, %rd308;
	st.shared.u32 	[%rd309], %r1035;
	add.s32 	%r1120, %r1116, %r75;
	mul.wide.u32 	%rd310, %r1120, 4;
	add.s64 	%rd311, %rd165, %rd310;
	st.shared.u32 	[%rd311], %r1036;
	add.s32 	%r1121, %r1116, %r76;
	mul.wide.u32 	%rd312, %r1121, 4;
	add.s64 	%rd313, %rd165, %rd312;
	st.shared.u32 	[%rd313], %r1037;
	and.b32  	%r1122, %r1039, 31;
	mul.lo.s32 	%r1123, %r1122, 257;
	add.s32 	%r1124, %r70, %r1123;
	mul.wide.u32 	%rd314, %r1124, 4;
	add.s64 	%rd315, %rd165, %rd314;
	st.shared.u32 	[%rd315], %r1054;
	cvt.u64.u32 	%rd316, %r1123;
	add.s64 	%rd317, %rd218, %rd316;
	shl.b64 	%rd318, %rd317, 2;
	add.s64 	%rd319, %rd165, %rd318;
	st.shared.u32 	[%rd319+4], %r1055;
	st.shared.u32 	[%rd319+8], %r1056;
	st.shared.u32 	[%rd319+12], %r1057;
	add.s32 	%r1125, %r1123, %r73;
	mul.wide.u32 	%rd320, %r1125, 4;
	add.s64 	%rd321, %rd165, %rd320;
	st.shared.u32 	[%rd321], %r1069;
	add.s32 	%r1126, %r1123, %r74;
	mul.wide.u32 	%rd322, %r1126, 4;
	add.s64 	%rd323, %rd165, %rd322;
	st.shared.u32 	[%rd323], %r1070;
	add.s32 	%r1127, %r1123, %r75;
	mul.wide.u32 	%rd324, %r1127, 4;
	add.s64 	%rd325, %rd165, %rd324;
	st.shared.u32 	[%rd325], %r1071;
	add.s32 	%r1128, %r1123, %r76;
	mul.wide.u32 	%rd326, %r1128, 4;
	add.s64 	%rd327, %rd165, %rd326;
	st.shared.u32 	[%rd327], %r1072;
	bar.sync 	0;
	mov.u32 	%r2455, %r1141;
$L__BB0_14:                             // %L21792
                                        //   Parent Loop BB0_11 Depth=1
                                        //     Parent Loop BB0_13 Depth=2
                                        // =>    This Inner Loop Header: Depth=3
	or.b32  	%r2165, %r78, %r2455;
	mad.lo.s32 	%r2166, %r2165, 257, %r77;
	mul.wide.u32 	%rd328, %r2166, 4;
	add.s64 	%rd330, %rd165, %rd328;
	ld.shared.u32 	%r1130, [%rd330];
	mov.u32 	%r1131, 134744072;
	mov.u32 	%r1132, 252645135;
	// begin inline asm
	lop3.b32 %r1129, %r1130, %r1131, %r1132, 40;
	// end inline asm
	add.s32 	%r2167, %r1129, 2021161080;
	xor.b32  	%r1140, %r2167, -2139062144;
	shr.u32 	%r1134, %r1130, 4;
	// begin inline asm
	lop3.b32 %r1133, %r1134, %r1131, %r1132, 40;
	// end inline asm
	add.s32 	%r2168, %r1133, 2021161080;
	xor.b32  	%r1146, %r2168, -2139062144;
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1137, %r1138}, {%r1139}, {%r1140}, {%r1141, %r1141};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1143, %r1144}, {%r1145}, {%r1146}, {%r1141, %r1141};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1149, %r1150}, {%r1139}, {%r1146}, {%r1141, %r1141};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1155, %r1156}, {%r1145}, {%r1140}, {%r1149, %r1150};
	// end inline asm
	ld.shared.u32 	%r1162, [%rd330+4];
	// begin inline asm
	lop3.b32 %r1161, %r1162, %r1131, %r1132, 40;
	// end inline asm
	add.s32 	%r2169, %r1161, 2021161080;
	xor.b32  	%r1172, %r2169, -2139062144;
	shr.u32 	%r1166, %r1162, 4;
	// begin inline asm
	lop3.b32 %r1165, %r1166, %r1131, %r1132, 40;
	// end inline asm
	add.s32 	%r2170, %r1165, 2021161080;
	xor.b32  	%r1178, %r2170, -2139062144;
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1169, %r1170}, {%r1171}, {%r1172}, {%r1137, %r1138};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1175, %r1176}, {%r1177}, {%r1178}, {%r1143, %r1144};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1181, %r1182}, {%r1171}, {%r1178}, {%r1155, %r1156};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1187, %r1188}, {%r1177}, {%r1172}, {%r1181, %r1182};
	// end inline asm
	ld.shared.u32 	%r1194, [%rd330+8];
	// begin inline asm
	lop3.b32 %r1193, %r1194, %r1131, %r1132, 40;
	// end inline asm
	add.s32 	%r2171, %r1193, 2021161080;
	xor.b32  	%r1204, %r2171, -2139062144;
	shr.u32 	%r1198, %r1194, 4;
	// begin inline asm
	lop3.b32 %r1197, %r1198, %r1131, %r1132, 40;
	// end inline asm
	add.s32 	%r2172, %r1197, 2021161080;
	xor.b32  	%r1210, %r2172, -2139062144;
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1201, %r1202}, {%r1203}, {%r1204}, {%r1169, %r1170};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1207, %r1208}, {%r1209}, {%r1210}, {%r1175, %r1176};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1213, %r1214}, {%r1203}, {%r1210}, {%r1187, %r1188};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1219, %r1220}, {%r1209}, {%r1204}, {%r1213, %r1214};
	// end inline asm
	ld.shared.u32 	%r1226, [%rd330+12];
	// begin inline asm
	lop3.b32 %r1225, %r1226, %r1131, %r1132, 40;
	// end inline asm
	add.s32 	%r2173, %r1225, 2021161080;
	xor.b32  	%r1236, %r2173, -2139062144;
	shr.u32 	%r1230, %r1226, 4;
	// begin inline asm
	lop3.b32 %r1229, %r1230, %r1131, %r1132, 40;
	// end inline asm
	add.s32 	%r2174, %r1229, 2021161080;
	xor.b32  	%r1242, %r2174, -2139062144;
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1233, %r1234}, {%r1235}, {%r1236}, {%r1201, %r1202};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1239, %r1240}, {%r1241}, {%r1242}, {%r1207, %r1208};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1245, %r1246}, {%r1235}, {%r1242}, {%r1219, %r1220};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1251, %r1252}, {%r1241}, {%r1236}, {%r1245, %r1246};
	// end inline asm
	ld.shared.u32 	%r1258, [%rd330+16];
	// begin inline asm
	lop3.b32 %r1257, %r1258, %r1131, %r1132, 40;
	// end inline asm
	add.s32 	%r2175, %r1257, 2021161080;
	xor.b32  	%r1268, %r2175, -2139062144;
	shr.u32 	%r1262, %r1258, 4;
	// begin inline asm
	lop3.b32 %r1261, %r1262, %r1131, %r1132, 40;
	// end inline asm
	add.s32 	%r2176, %r1261, 2021161080;
	xor.b32  	%r1274, %r2176, -2139062144;
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1265, %r1266}, {%r1267}, {%r1268}, {%r1233, %r1234};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1271, %r1272}, {%r1273}, {%r1274}, {%r1239, %r1240};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1277, %r1278}, {%r1267}, {%r1274}, {%r1251, %r1252};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1283, %r1284}, {%r1273}, {%r1268}, {%r1277, %r1278};
	// end inline asm
	ld.shared.u32 	%r1290, [%rd330+20];
	// begin inline asm
	lop3.b32 %r1289, %r1290, %r1131, %r1132, 40;
	// end inline asm
	add.s32 	%r2177, %r1289, 2021161080;
	xor.b32  	%r1300, %r2177, -2139062144;
	shr.u32 	%r1294, %r1290, 4;
	// begin inline asm
	lop3.b32 %r1293, %r1294, %r1131, %r1132, 40;
	// end inline asm
	add.s32 	%r2178, %r1293, 2021161080;
	xor.b32  	%r1306, %r2178, -2139062144;
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1297, %r1298}, {%r1299}, {%r1300}, {%r1265, %r1266};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1303, %r1304}, {%r1305}, {%r1306}, {%r1271, %r1272};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1309, %r1310}, {%r1299}, {%r1306}, {%r1283, %r1284};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1315, %r1316}, {%r1305}, {%r1300}, {%r1309, %r1310};
	// end inline asm
	ld.shared.u32 	%r1322, [%rd330+24];
	// begin inline asm
	lop3.b32 %r1321, %r1322, %r1131, %r1132, 40;
	// end inline asm
	add.s32 	%r2179, %r1321, 2021161080;
	xor.b32  	%r1332, %r2179, -2139062144;
	shr.u32 	%r1326, %r1322, 4;
	// begin inline asm
	lop3.b32 %r1325, %r1326, %r1131, %r1132, 40;
	// end inline asm
	add.s32 	%r2180, %r1325, 2021161080;
	xor.b32  	%r1338, %r2180, -2139062144;
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1329, %r1330}, {%r1331}, {%r1332}, {%r1297, %r1298};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1335, %r1336}, {%r1337}, {%r1338}, {%r1303, %r1304};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1341, %r1342}, {%r1331}, {%r1338}, {%r1315, %r1316};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1347, %r1348}, {%r1337}, {%r1332}, {%r1341, %r1342};
	// end inline asm
	ld.shared.u32 	%r1354, [%rd330+28];
	// begin inline asm
	lop3.b32 %r1353, %r1354, %r1131, %r1132, 40;
	// end inline asm
	add.s32 	%r2181, %r1353, 2021161080;
	xor.b32  	%r1364, %r2181, -2139062144;
	shr.u32 	%r1358, %r1354, 4;
	// begin inline asm
	lop3.b32 %r1357, %r1358, %r1131, %r1132, 40;
	// end inline asm
	add.s32 	%r2182, %r1357, 2021161080;
	xor.b32  	%r1370, %r2182, -2139062144;
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1361, %r1362}, {%r1363}, {%r1364}, {%r1329, %r1330};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1367, %r1368}, {%r1369}, {%r1370}, {%r1335, %r1336};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1373, %r1374}, {%r1363}, {%r1370}, {%r1347, %r1348};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1379, %r1380}, {%r1369}, {%r1364}, {%r1373, %r1374};
	// end inline asm
	ld.shared.u32 	%r1386, [%rd330+32];
	// begin inline asm
	lop3.b32 %r1385, %r1386, %r1131, %r1132, 40;
	// end inline asm
	add.s32 	%r2183, %r1385, 2021161080;
	xor.b32  	%r1396, %r2183, -2139062144;
	shr.u32 	%r1390, %r1386, 4;
	// begin inline asm
	lop3.b32 %r1389, %r1390, %r1131, %r1132, 40;
	// end inline asm
	add.s32 	%r2184, %r1389, 2021161080;
	xor.b32  	%r1402, %r2184, -2139062144;
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1393, %r1394}, {%r1395}, {%r1396}, {%r1361, %r1362};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1399, %r1400}, {%r1401}, {%r1402}, {%r1367, %r1368};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1405, %r1406}, {%r1395}, {%r1402}, {%r1379, %r1380};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1411, %r1412}, {%r1401}, {%r1396}, {%r1405, %r1406};
	// end inline asm
	ld.shared.u32 	%r1418, [%rd330+36];
	// begin inline asm
	lop3.b32 %r1417, %r1418, %r1131, %r1132, 40;
	// end inline asm
	add.s32 	%r2185, %r1417, 2021161080;
	xor.b32  	%r1428, %r2185, -2139062144;
	shr.u32 	%r1422, %r1418, 4;
	// begin inline asm
	lop3.b32 %r1421, %r1422, %r1131, %r1132, 40;
	// end inline asm
	add.s32 	%r2186, %r1421, 2021161080;
	xor.b32  	%r1434, %r2186, -2139062144;
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1425, %r1426}, {%r1427}, {%r1428}, {%r1393, %r1394};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1431, %r1432}, {%r1433}, {%r1434}, {%r1399, %r1400};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1437, %r1438}, {%r1427}, {%r1434}, {%r1411, %r1412};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1443, %r1444}, {%r1433}, {%r1428}, {%r1437, %r1438};
	// end inline asm
	ld.shared.u32 	%r1450, [%rd330+40];
	// begin inline asm
	lop3.b32 %r1449, %r1450, %r1131, %r1132, 40;
	// end inline asm
	add.s32 	%r2187, %r1449, 2021161080;
	xor.b32  	%r1460, %r2187, -2139062144;
	shr.u32 	%r1454, %r1450, 4;
	// begin inline asm
	lop3.b32 %r1453, %r1454, %r1131, %r1132, 40;
	// end inline asm
	add.s32 	%r2188, %r1453, 2021161080;
	xor.b32  	%r1466, %r2188, -2139062144;
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1457, %r1458}, {%r1459}, {%r1460}, {%r1425, %r1426};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1463, %r1464}, {%r1465}, {%r1466}, {%r1431, %r1432};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1469, %r1470}, {%r1459}, {%r1466}, {%r1443, %r1444};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1475, %r1476}, {%r1465}, {%r1460}, {%r1469, %r1470};
	// end inline asm
	ld.shared.u32 	%r1482, [%rd330+44];
	// begin inline asm
	lop3.b32 %r1481, %r1482, %r1131, %r1132, 40;
	// end inline asm
	add.s32 	%r2189, %r1481, 2021161080;
	xor.b32  	%r1492, %r2189, -2139062144;
	shr.u32 	%r1486, %r1482, 4;
	// begin inline asm
	lop3.b32 %r1485, %r1486, %r1131, %r1132, 40;
	// end inline asm
	add.s32 	%r2190, %r1485, 2021161080;
	xor.b32  	%r1498, %r2190, -2139062144;
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1489, %r1490}, {%r1491}, {%r1492}, {%r1457, %r1458};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1495, %r1496}, {%r1497}, {%r1498}, {%r1463, %r1464};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1501, %r1502}, {%r1491}, {%r1498}, {%r1475, %r1476};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1507, %r1508}, {%r1497}, {%r1492}, {%r1501, %r1502};
	// end inline asm
	ld.shared.u32 	%r1514, [%rd330+48];
	// begin inline asm
	lop3.b32 %r1513, %r1514, %r1131, %r1132, 40;
	// end inline asm
	add.s32 	%r2191, %r1513, 2021161080;
	xor.b32  	%r1524, %r2191, -2139062144;
	shr.u32 	%r1518, %r1514, 4;
	// begin inline asm
	lop3.b32 %r1517, %r1518, %r1131, %r1132, 40;
	// end inline asm
	add.s32 	%r2192, %r1517, 2021161080;
	xor.b32  	%r1530, %r2192, -2139062144;
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1521, %r1522}, {%r1523}, {%r1524}, {%r1489, %r1490};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1527, %r1528}, {%r1529}, {%r1530}, {%r1495, %r1496};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1533, %r1534}, {%r1523}, {%r1530}, {%r1507, %r1508};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1539, %r1540}, {%r1529}, {%r1524}, {%r1533, %r1534};
	// end inline asm
	ld.shared.u32 	%r1546, [%rd330+52];
	// begin inline asm
	lop3.b32 %r1545, %r1546, %r1131, %r1132, 40;
	// end inline asm
	add.s32 	%r2193, %r1545, 2021161080;
	xor.b32  	%r1556, %r2193, -2139062144;
	shr.u32 	%r1550, %r1546, 4;
	// begin inline asm
	lop3.b32 %r1549, %r1550, %r1131, %r1132, 40;
	// end inline asm
	add.s32 	%r2194, %r1549, 2021161080;
	xor.b32  	%r1562, %r2194, -2139062144;
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1553, %r1554}, {%r1555}, {%r1556}, {%r1521, %r1522};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1559, %r1560}, {%r1561}, {%r1562}, {%r1527, %r1528};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1565, %r1566}, {%r1555}, {%r1562}, {%r1539, %r1540};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1571, %r1572}, {%r1561}, {%r1556}, {%r1565, %r1566};
	// end inline asm
	ld.shared.u32 	%r1578, [%rd330+56];
	// begin inline asm
	lop3.b32 %r1577, %r1578, %r1131, %r1132, 40;
	// end inline asm
	add.s32 	%r2195, %r1577, 2021161080;
	xor.b32  	%r1588, %r2195, -2139062144;
	shr.u32 	%r1582, %r1578, 4;
	// begin inline asm
	lop3.b32 %r1581, %r1582, %r1131, %r1132, 40;
	// end inline asm
	add.s32 	%r2196, %r1581, 2021161080;
	xor.b32  	%r1594, %r2196, -2139062144;
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1585, %r1586}, {%r1587}, {%r1588}, {%r1553, %r1554};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1591, %r1592}, {%r1593}, {%r1594}, {%r1559, %r1560};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1597, %r1598}, {%r1587}, {%r1594}, {%r1571, %r1572};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1603, %r1604}, {%r1593}, {%r1588}, {%r1597, %r1598};
	// end inline asm
	ld.shared.u32 	%r1610, [%rd330+60];
	// begin inline asm
	lop3.b32 %r1609, %r1610, %r1131, %r1132, 40;
	// end inline asm
	add.s32 	%r2197, %r1609, 2021161080;
	xor.b32  	%r1620, %r2197, -2139062144;
	shr.u32 	%r1614, %r1610, 4;
	// begin inline asm
	lop3.b32 %r1613, %r1614, %r1131, %r1132, 40;
	// end inline asm
	add.s32 	%r2198, %r1613, 2021161080;
	xor.b32  	%r1626, %r2198, -2139062144;
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1617, %r1618}, {%r1619}, {%r1620}, {%r1585, %r1586};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1623, %r1624}, {%r1625}, {%r1626}, {%r1591, %r1592};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1629, %r1630}, {%r1619}, {%r1626}, {%r1603, %r1604};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1635, %r1636}, {%r1625}, {%r1620}, {%r1629, %r1630};
	// end inline asm
	sub.s32 	%r2199, %r1617, %r1623;
	add.s32 	%r2200, %r2199, 8;
	shr.s32 	%r1643, %r2200, 4;
	add.s32 	%r2201, %r1635, 8;
	shr.s32 	%r1642, %r2201, 4;
	sub.s32 	%r2202, %r1618, %r1624;
	add.s32 	%r2203, %r2202, 8;
	shr.s32 	%r1646, %r2203, 4;
	add.s32 	%r2204, %r1636, 8;
	shr.s32 	%r1645, %r2204, 4;
	// begin inline asm
	cvt.pack.sat.s16.s32 %r1641, %r1642, %r1643;
	// end inline asm
	// begin inline asm
	cvt.pack.sat.s16.s32 %r1644, %r1645, %r1646;
	// end inline asm
	or.b32  	%r2205, %r79, %r2455;
	mul.lo.s32 	%r2206, %r2205, 20;
	add.s32 	%r2207, %r2206, %r80;
	mul.wide.u32 	%rd331, %r2207, 4;
	add.s64 	%rd333, %rd166, %rd331;
	st.shared.u32 	[%rd333], %r1641;
	add.s32 	%r2208, %r2206, 20;
	add.s32 	%r2209, %r2208, %r80;
	mul.wide.u32 	%rd334, %r2209, 4;
	add.s64 	%rd335, %rd166, %rd334;
	st.shared.u32 	[%rd335], %r1644;
	ld.shared.u32 	%r1648, [%rd330];
	// begin inline asm
	lop3.b32 %r1647, %r1648, %r1131, %r1132, 40;
	// end inline asm
	add.s32 	%r2210, %r1647, 2021161080;
	xor.b32  	%r1658, %r2210, -2139062144;
	shr.u32 	%r1652, %r1648, 4;
	// begin inline asm
	lop3.b32 %r1651, %r1652, %r1131, %r1132, 40;
	// end inline asm
	add.s32 	%r2211, %r1651, 2021161080;
	xor.b32  	%r1664, %r2211, -2139062144;
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1655, %r1656}, {%r1657}, {%r1658}, {%r1141, %r1141};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1661, %r1662}, {%r1663}, {%r1664}, {%r1141, %r1141};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1667, %r1668}, {%r1657}, {%r1664}, {%r1141, %r1141};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1673, %r1674}, {%r1663}, {%r1658}, {%r1667, %r1668};
	// end inline asm
	ld.shared.u32 	%r1680, [%rd330+4];
	// begin inline asm
	lop3.b32 %r1679, %r1680, %r1131, %r1132, 40;
	// end inline asm
	add.s32 	%r2212, %r1679, 2021161080;
	xor.b32  	%r1690, %r2212, -2139062144;
	shr.u32 	%r1684, %r1680, 4;
	// begin inline asm
	lop3.b32 %r1683, %r1684, %r1131, %r1132, 40;
	// end inline asm
	add.s32 	%r2213, %r1683, 2021161080;
	xor.b32  	%r1696, %r2213, -2139062144;
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1687, %r1688}, {%r1689}, {%r1690}, {%r1655, %r1656};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1693, %r1694}, {%r1695}, {%r1696}, {%r1661, %r1662};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1699, %r1700}, {%r1689}, {%r1696}, {%r1673, %r1674};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1705, %r1706}, {%r1695}, {%r1690}, {%r1699, %r1700};
	// end inline asm
	ld.shared.u32 	%r1712, [%rd330+8];
	// begin inline asm
	lop3.b32 %r1711, %r1712, %r1131, %r1132, 40;
	// end inline asm
	add.s32 	%r2214, %r1711, 2021161080;
	xor.b32  	%r1722, %r2214, -2139062144;
	shr.u32 	%r1716, %r1712, 4;
	// begin inline asm
	lop3.b32 %r1715, %r1716, %r1131, %r1132, 40;
	// end inline asm
	add.s32 	%r2215, %r1715, 2021161080;
	xor.b32  	%r1728, %r2215, -2139062144;
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1719, %r1720}, {%r1721}, {%r1722}, {%r1687, %r1688};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1725, %r1726}, {%r1727}, {%r1728}, {%r1693, %r1694};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1731, %r1732}, {%r1721}, {%r1728}, {%r1705, %r1706};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1737, %r1738}, {%r1727}, {%r1722}, {%r1731, %r1732};
	// end inline asm
	ld.shared.u32 	%r1744, [%rd330+12];
	// begin inline asm
	lop3.b32 %r1743, %r1744, %r1131, %r1132, 40;
	// end inline asm
	add.s32 	%r2216, %r1743, 2021161080;
	xor.b32  	%r1754, %r2216, -2139062144;
	shr.u32 	%r1748, %r1744, 4;
	// begin inline asm
	lop3.b32 %r1747, %r1748, %r1131, %r1132, 40;
	// end inline asm
	add.s32 	%r2217, %r1747, 2021161080;
	xor.b32  	%r1760, %r2217, -2139062144;
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1751, %r1752}, {%r1753}, {%r1754}, {%r1719, %r1720};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1757, %r1758}, {%r1759}, {%r1760}, {%r1725, %r1726};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1763, %r1764}, {%r1753}, {%r1760}, {%r1737, %r1738};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1769, %r1770}, {%r1759}, {%r1754}, {%r1763, %r1764};
	// end inline asm
	ld.shared.u32 	%r1776, [%rd330+16];
	// begin inline asm
	lop3.b32 %r1775, %r1776, %r1131, %r1132, 40;
	// end inline asm
	add.s32 	%r2218, %r1775, 2021161080;
	xor.b32  	%r1786, %r2218, -2139062144;
	shr.u32 	%r1780, %r1776, 4;
	// begin inline asm
	lop3.b32 %r1779, %r1780, %r1131, %r1132, 40;
	// end inline asm
	add.s32 	%r2219, %r1779, 2021161080;
	xor.b32  	%r1792, %r2219, -2139062144;
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1783, %r1784}, {%r1785}, {%r1786}, {%r1751, %r1752};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1789, %r1790}, {%r1791}, {%r1792}, {%r1757, %r1758};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1795, %r1796}, {%r1785}, {%r1792}, {%r1769, %r1770};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1801, %r1802}, {%r1791}, {%r1786}, {%r1795, %r1796};
	// end inline asm
	ld.shared.u32 	%r1808, [%rd330+20];
	// begin inline asm
	lop3.b32 %r1807, %r1808, %r1131, %r1132, 40;
	// end inline asm
	add.s32 	%r2220, %r1807, 2021161080;
	xor.b32  	%r1818, %r2220, -2139062144;
	shr.u32 	%r1812, %r1808, 4;
	// begin inline asm
	lop3.b32 %r1811, %r1812, %r1131, %r1132, 40;
	// end inline asm
	add.s32 	%r2221, %r1811, 2021161080;
	xor.b32  	%r1824, %r2221, -2139062144;
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1815, %r1816}, {%r1817}, {%r1818}, {%r1783, %r1784};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1821, %r1822}, {%r1823}, {%r1824}, {%r1789, %r1790};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1827, %r1828}, {%r1817}, {%r1824}, {%r1801, %r1802};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1833, %r1834}, {%r1823}, {%r1818}, {%r1827, %r1828};
	// end inline asm
	ld.shared.u32 	%r1840, [%rd330+24];
	// begin inline asm
	lop3.b32 %r1839, %r1840, %r1131, %r1132, 40;
	// end inline asm
	add.s32 	%r2222, %r1839, 2021161080;
	xor.b32  	%r1850, %r2222, -2139062144;
	shr.u32 	%r1844, %r1840, 4;
	// begin inline asm
	lop3.b32 %r1843, %r1844, %r1131, %r1132, 40;
	// end inline asm
	add.s32 	%r2223, %r1843, 2021161080;
	xor.b32  	%r1856, %r2223, -2139062144;
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1847, %r1848}, {%r1849}, {%r1850}, {%r1815, %r1816};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1853, %r1854}, {%r1855}, {%r1856}, {%r1821, %r1822};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1859, %r1860}, {%r1849}, {%r1856}, {%r1833, %r1834};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1865, %r1866}, {%r1855}, {%r1850}, {%r1859, %r1860};
	// end inline asm
	ld.shared.u32 	%r1872, [%rd330+28];
	// begin inline asm
	lop3.b32 %r1871, %r1872, %r1131, %r1132, 40;
	// end inline asm
	add.s32 	%r2224, %r1871, 2021161080;
	xor.b32  	%r1882, %r2224, -2139062144;
	shr.u32 	%r1876, %r1872, 4;
	// begin inline asm
	lop3.b32 %r1875, %r1876, %r1131, %r1132, 40;
	// end inline asm
	add.s32 	%r2225, %r1875, 2021161080;
	xor.b32  	%r1888, %r2225, -2139062144;
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1879, %r1880}, {%r1881}, {%r1882}, {%r1847, %r1848};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1885, %r1886}, {%r1887}, {%r1888}, {%r1853, %r1854};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1891, %r1892}, {%r1881}, {%r1888}, {%r1865, %r1866};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1897, %r1898}, {%r1887}, {%r1882}, {%r1891, %r1892};
	// end inline asm
	ld.shared.u32 	%r1904, [%rd330+32];
	// begin inline asm
	lop3.b32 %r1903, %r1904, %r1131, %r1132, 40;
	// end inline asm
	add.s32 	%r2226, %r1903, 2021161080;
	xor.b32  	%r1914, %r2226, -2139062144;
	shr.u32 	%r1908, %r1904, 4;
	// begin inline asm
	lop3.b32 %r1907, %r1908, %r1131, %r1132, 40;
	// end inline asm
	add.s32 	%r2227, %r1907, 2021161080;
	xor.b32  	%r1920, %r2227, -2139062144;
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1911, %r1912}, {%r1913}, {%r1914}, {%r1879, %r1880};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1917, %r1918}, {%r1919}, {%r1920}, {%r1885, %r1886};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1923, %r1924}, {%r1913}, {%r1920}, {%r1897, %r1898};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1929, %r1930}, {%r1919}, {%r1914}, {%r1923, %r1924};
	// end inline asm
	ld.shared.u32 	%r1936, [%rd330+36];
	// begin inline asm
	lop3.b32 %r1935, %r1936, %r1131, %r1132, 40;
	// end inline asm
	add.s32 	%r2228, %r1935, 2021161080;
	xor.b32  	%r1946, %r2228, -2139062144;
	shr.u32 	%r1940, %r1936, 4;
	// begin inline asm
	lop3.b32 %r1939, %r1940, %r1131, %r1132, 40;
	// end inline asm
	add.s32 	%r2229, %r1939, 2021161080;
	xor.b32  	%r1952, %r2229, -2139062144;
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1943, %r1944}, {%r1945}, {%r1946}, {%r1911, %r1912};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1949, %r1950}, {%r1951}, {%r1952}, {%r1917, %r1918};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1955, %r1956}, {%r1945}, {%r1952}, {%r1929, %r1930};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1961, %r1962}, {%r1951}, {%r1946}, {%r1955, %r1956};
	// end inline asm
	ld.shared.u32 	%r1968, [%rd330+40];
	// begin inline asm
	lop3.b32 %r1967, %r1968, %r1131, %r1132, 40;
	// end inline asm
	add.s32 	%r2230, %r1967, 2021161080;
	xor.b32  	%r1978, %r2230, -2139062144;
	shr.u32 	%r1972, %r1968, 4;
	// begin inline asm
	lop3.b32 %r1971, %r1972, %r1131, %r1132, 40;
	// end inline asm
	add.s32 	%r2231, %r1971, 2021161080;
	xor.b32  	%r1984, %r2231, -2139062144;
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1975, %r1976}, {%r1977}, {%r1978}, {%r1943, %r1944};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1981, %r1982}, {%r1983}, {%r1984}, {%r1949, %r1950};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1987, %r1988}, {%r1977}, {%r1984}, {%r1961, %r1962};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r1993, %r1994}, {%r1983}, {%r1978}, {%r1987, %r1988};
	// end inline asm
	ld.shared.u32 	%r2000, [%rd330+44];
	// begin inline asm
	lop3.b32 %r1999, %r2000, %r1131, %r1132, 40;
	// end inline asm
	add.s32 	%r2232, %r1999, 2021161080;
	xor.b32  	%r2010, %r2232, -2139062144;
	shr.u32 	%r2004, %r2000, 4;
	// begin inline asm
	lop3.b32 %r2003, %r2004, %r1131, %r1132, 40;
	// end inline asm
	add.s32 	%r2233, %r2003, 2021161080;
	xor.b32  	%r2016, %r2233, -2139062144;
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r2007, %r2008}, {%r2009}, {%r2010}, {%r1975, %r1976};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r2013, %r2014}, {%r2015}, {%r2016}, {%r1981, %r1982};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r2019, %r2020}, {%r2009}, {%r2016}, {%r1993, %r1994};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r2025, %r2026}, {%r2015}, {%r2010}, {%r2019, %r2020};
	// end inline asm
	ld.shared.u32 	%r2032, [%rd330+48];
	// begin inline asm
	lop3.b32 %r2031, %r2032, %r1131, %r1132, 40;
	// end inline asm
	add.s32 	%r2234, %r2031, 2021161080;
	xor.b32  	%r2042, %r2234, -2139062144;
	shr.u32 	%r2036, %r2032, 4;
	// begin inline asm
	lop3.b32 %r2035, %r2036, %r1131, %r1132, 40;
	// end inline asm
	add.s32 	%r2235, %r2035, 2021161080;
	xor.b32  	%r2048, %r2235, -2139062144;
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r2039, %r2040}, {%r2041}, {%r2042}, {%r2007, %r2008};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r2045, %r2046}, {%r2047}, {%r2048}, {%r2013, %r2014};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r2051, %r2052}, {%r2041}, {%r2048}, {%r2025, %r2026};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r2057, %r2058}, {%r2047}, {%r2042}, {%r2051, %r2052};
	// end inline asm
	ld.shared.u32 	%r2064, [%rd330+52];
	// begin inline asm
	lop3.b32 %r2063, %r2064, %r1131, %r1132, 40;
	// end inline asm
	add.s32 	%r2236, %r2063, 2021161080;
	xor.b32  	%r2074, %r2236, -2139062144;
	shr.u32 	%r2068, %r2064, 4;
	// begin inline asm
	lop3.b32 %r2067, %r2068, %r1131, %r1132, 40;
	// end inline asm
	add.s32 	%r2237, %r2067, 2021161080;
	xor.b32  	%r2080, %r2237, -2139062144;
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r2071, %r2072}, {%r2073}, {%r2074}, {%r2039, %r2040};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r2077, %r2078}, {%r2079}, {%r2080}, {%r2045, %r2046};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r2083, %r2084}, {%r2073}, {%r2080}, {%r2057, %r2058};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r2089, %r2090}, {%r2079}, {%r2074}, {%r2083, %r2084};
	// end inline asm
	ld.shared.u32 	%r2096, [%rd330+56];
	// begin inline asm
	lop3.b32 %r2095, %r2096, %r1131, %r1132, 40;
	// end inline asm
	add.s32 	%r2238, %r2095, 2021161080;
	xor.b32  	%r2106, %r2238, -2139062144;
	shr.u32 	%r2100, %r2096, 4;
	// begin inline asm
	lop3.b32 %r2099, %r2100, %r1131, %r1132, 40;
	// end inline asm
	add.s32 	%r2239, %r2099, 2021161080;
	xor.b32  	%r2112, %r2239, -2139062144;
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r2103, %r2104}, {%r2105}, {%r2106}, {%r2071, %r2072};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r2109, %r2110}, {%r2111}, {%r2112}, {%r2077, %r2078};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r2115, %r2116}, {%r2105}, {%r2112}, {%r2089, %r2090};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r2121, %r2122}, {%r2111}, {%r2106}, {%r2115, %r2116};
	// end inline asm
	ld.shared.u32 	%r2128, [%rd330+60];
	// begin inline asm
	lop3.b32 %r2127, %r2128, %r1131, %r1132, 40;
	// end inline asm
	add.s32 	%r2240, %r2127, 2021161080;
	xor.b32  	%r2138, %r2240, -2139062144;
	shr.u32 	%r2132, %r2128, 4;
	// begin inline asm
	lop3.b32 %r2131, %r2132, %r1131, %r1132, 40;
	// end inline asm
	add.s32 	%r2241, %r2131, 2021161080;
	xor.b32  	%r2144, %r2241, -2139062144;
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r2135, %r2136}, {%r2137}, {%r2138}, {%r2103, %r2104};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r2141, %r2142}, {%r2143}, {%r2144}, {%r2109, %r2110};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r2147, %r2148}, {%r2137}, {%r2144}, {%r2121, %r2122};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m8n8k16.row.col.satfinite.s32.s8.s8.s32 {%r2153, %r2154}, {%r2143}, {%r2138}, {%r2147, %r2148};
	// end inline asm
	sub.s32 	%r2242, %r2135, %r2141;
	add.s32 	%r2243, %r2242, 8;
	shr.s32 	%r2161, %r2243, 4;
	add.s32 	%r2244, %r2153, 8;
	shr.s32 	%r2160, %r2244, 4;
	sub.s32 	%r2245, %r2136, %r2142;
	add.s32 	%r2246, %r2245, 8;
	shr.s32 	%r2164, %r2246, 4;
	add.s32 	%r2247, %r2154, 8;
	shr.s32 	%r2163, %r2247, 4;
	// begin inline asm
	cvt.pack.sat.s16.s32 %r2159, %r2160, %r2161;
	// end inline asm
	// begin inline asm
	cvt.pack.sat.s16.s32 %r2162, %r2163, %r2164;
	// end inline asm
	add.s32 	%r2248, %r2206, %r81;
	mul.wide.u32 	%rd336, %r2248, 4;
	add.s64 	%rd337, %rd166, %rd336;
	st.shared.u32 	[%rd337], %r2159;
	add.s32 	%r2249, %r2208, %r81;
	mul.wide.u32 	%rd338, %r2249, 4;
	add.s64 	%rd339, %rd166, %rd338;
	st.shared.u32 	[%rd339], %r2162;
	add.s32 	%r2455, %r2455, 8;
	setp.ne.s32 	%p41, %r2455, 32;
	@%p41 bra 	$L__BB0_14;
// %bb.15:                              // %L28385
                                        //   in Loop: Header=BB0_13 Depth=2
	bar.sync 	0;
	ld.shared.u32 	%r2268, [%rd10];
	ld.shared.u32 	%r2269, [%rd11];
	ld.shared.u32 	%r2270, [%rd12];
	ld.shared.u32 	%r2271, [%rd13];
	ld.shared.u32 	%r2272, [%rd14];
	ld.shared.u32 	%r2273, [%rd15];
	ld.shared.u32 	%r2274, [%rd16];
	ld.shared.u32 	%r2275, [%rd17];
	ld.shared.u32 	%r2276, [%rd18];
	ld.shared.u32 	%r2277, [%rd19];
	ld.shared.u32 	%r2278, [%rd20];
	ld.shared.u32 	%r2279, [%rd21];
	ld.shared.u32 	%r2280, [%rd22];
	ld.shared.u32 	%r2281, [%rd23];
	ld.shared.u32 	%r2282, [%rd24];
	ld.shared.u32 	%r2283, [%rd9];
	cvt.s32.s16 	%r2284, %r2268;
	shr.s32 	%r2285, %r2268, 16;
	cvt.s32.s16 	%r2286, %r2269;
	shr.s32 	%r2287, %r2269, 16;
	cvt.s32.s16 	%r2288, %r2270;
	shr.s32 	%r2289, %r2270, 16;
	cvt.s32.s16 	%r2290, %r2271;
	shr.s32 	%r2291, %r2271, 16;
	cvt.s32.s16 	%r2292, %r2272;
	shr.s32 	%r2293, %r2272, 16;
	cvt.s32.s16 	%r2294, %r2273;
	shr.s32 	%r2295, %r2273, 16;
	cvt.s32.s16 	%r2296, %r2274;
	shr.s32 	%r2297, %r2274, 16;
	cvt.s32.s16 	%r2298, %r2275;
	shr.s32 	%r2299, %r2275, 16;
	cvt.s32.s16 	%r2300, %r2276;
	shr.s32 	%r2301, %r2276, 16;
	cvt.s32.s16 	%r2302, %r2277;
	shr.s32 	%r2303, %r2277, 16;
	cvt.s32.s16 	%r2304, %r2278;
	shr.s32 	%r2305, %r2278, 16;
	cvt.s32.s16 	%r2306, %r2279;
	shr.s32 	%r2307, %r2279, 16;
	cvt.s32.s16 	%r2308, %r2280;
	shr.s32 	%r2309, %r2280, 16;
	cvt.s32.s16 	%r2310, %r2281;
	shr.s32 	%r2311, %r2281, 16;
	cvt.s32.s16 	%r2312, %r2282;
	shr.s32 	%r2313, %r2282, 16;
	cvt.s32.s16 	%r2314, %r2283;
	shr.s32 	%r2315, %r2283, 16;
	add.s32 	%r2316, %r2284, %r82;
	add.s32 	%r2317, %r2316, %r2286;
	add.s32 	%r2318, %r2317, %r2288;
	add.s32 	%r2319, %r2318, %r2290;
	shr.s32 	%r2320, %r2319, %r83;
	add.s32 	%r2321, %r2285, %r82;
	add.s32 	%r2322, %r2321, %r2287;
	add.s32 	%r2323, %r2322, %r2289;
	add.s32 	%r2324, %r2323, %r2291;
	shr.s32 	%r2325, %r2324, %r83;
	add.s32 	%r2326, %r2292, %r82;
	add.s32 	%r2327, %r2326, %r2294;
	add.s32 	%r2328, %r2327, %r2296;
	add.s32 	%r2329, %r2328, %r2298;
	shr.s32 	%r2330, %r2329, %r83;
	add.s32 	%r2331, %r2293, %r82;
	add.s32 	%r2332, %r2331, %r2295;
	add.s32 	%r2333, %r2332, %r2297;
	add.s32 	%r2334, %r2333, %r2299;
	shr.s32 	%r2335, %r2334, %r83;
	add.s32 	%r2336, %r2300, %r82;
	add.s32 	%r2337, %r2336, %r2302;
	add.s32 	%r2338, %r2337, %r2304;
	add.s32 	%r2339, %r2338, %r2306;
	shr.s32 	%r2340, %r2339, %r83;
	add.s32 	%r2341, %r2301, %r82;
	add.s32 	%r2342, %r2341, %r2303;
	add.s32 	%r2343, %r2342, %r2305;
	add.s32 	%r2344, %r2343, %r2307;
	shr.s32 	%r2345, %r2344, %r83;
	add.s32 	%r2346, %r2308, %r82;
	add.s32 	%r2347, %r2346, %r2310;
	add.s32 	%r2348, %r2347, %r2312;
	add.s32 	%r2349, %r2348, %r2314;
	shr.s32 	%r2350, %r2349, %r83;
	add.s32 	%r2351, %r2309, %r82;
	add.s32 	%r2352, %r2351, %r2311;
	add.s32 	%r2353, %r2352, %r2313;
	add.s32 	%r2354, %r2353, %r2315;
	shr.s32 	%r2355, %r2354, %r83;
	max.s32 	%r2356, %r2320, -7;
	min.s32 	%r2255, %r2356, 7;
	setp.ne.s32 	%p42, %r2255, %r2320;
	or.pred  	%p43, %p69, %p42;
	max.s32 	%r2357, %r2325, -7;
	min.s32 	%r2262, %r2357, 7;
	setp.ne.s32 	%p44, %r2262, %r2325;
	or.pred  	%p45, %p44, %p43;
	max.s32 	%r2358, %r2330, -7;
	min.s32 	%r2254, %r2358, 7;
	setp.ne.s32 	%p46, %r2254, %r2330;
	or.pred  	%p47, %p45, %p46;
	max.s32 	%r2359, %r2335, -7;
	min.s32 	%r2261, %r2359, 7;
	setp.ne.s32 	%p48, %r2261, %r2335;
	or.pred  	%p49, %p48, %p47;
	max.s32 	%r2360, %r2340, -7;
	min.s32 	%r2252, %r2360, 7;
	setp.ne.s32 	%p50, %r2252, %r2340;
	or.pred  	%p51, %p49, %p50;
	max.s32 	%r2361, %r2345, -7;
	min.s32 	%r2259, %r2361, 7;
	setp.ne.s32 	%p52, %r2259, %r2345;
	or.pred  	%p53, %p52, %p51;
	max.s32 	%r2362, %r2350, -7;
	min.s32 	%r2251, %r2362, 7;
	setp.ne.s32 	%p54, %r2251, %r2350;
	or.pred  	%p55, %p53, %p54;
	max.s32 	%r2363, %r2355, -7;
	min.s32 	%r2258, %r2363, 7;
	setp.ne.s32 	%p56, %r2258, %r2355;
	or.pred  	%p69, %p56, %p55;
	// begin inline asm
	cvt.pack.sat.s8.s32.b32 %r2250, %r2251, %r2252, 0;
	// end inline asm
	// begin inline asm
	cvt.pack.sat.s8.s32.b32 %r2253, %r2254, %r2255, %r2250;
	// end inline asm
	// begin inline asm
	cvt.pack.sat.s8.s32.b32 %r2257, %r2258, %r2259, 0;
	// end inline asm
	// begin inline asm
	cvt.pack.sat.s8.s32.b32 %r2260, %r2261, %r2262, %r2257;
	// end inline asm
	shl.b32 	%r2267, %r2260, 4;
	// begin inline asm
	lop3.b32 %r2374, %r1132, %r2253, %r2267, 202;
	// end inline asm
	setp.eq.s32 	%p57, %r2448, 0;
	selp.b32 	%r2453, %r2374, %r2453, %p57;
	selp.b32 	%r2454, %r2374, %r2454, %p57;
	setp.eq.s32 	%p58, %r2448, 32;
	selp.b32 	%r2449, %r2374, %r2449, %p58;
	selp.b32 	%r2450, %r2374, %r2450, %p58;
	setp.eq.s32 	%p59, %r2448, 64;
	selp.b32 	%r2451, %r2374, %r2451, %p59;
	selp.b32 	%r2452, %r2374, %r2452, %p59;
	add.s32 	%r108, %r2448, 32;
	setp.ne.s32 	%p60, %r2448, 96;
	mov.u32 	%r2448, %r108;
	@%p60 bra 	$L__BB0_13;
// %bb.16:                              // %L30791.L30797_crit_edge
                                        //   in Loop: Header=BB0_11 Depth=1
	setp.eq.s32 	%p61, %r86, 0;
	setp.eq.s32 	%p62, %r85, 0;
	setp.eq.s32 	%p63, %r84, 0;
	// begin inline asm
	prmt.b32 %r2364, %r2453, %r2449, %r391;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2368, %r2454, %r2450, %r395;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2372, %r2451, %r2374, %r391;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2376, %r2452, %r2374, %r395;
	// end inline asm
	selp.b32 	%r2412, %r2368, %r2364, %p63;
	shfl.sync.bfly.b32	%r2413, %r2412, 1, 31, -1;
	selp.b32 	%r2381, %r2364, %r2413, %p63;
	selp.b32 	%r2382, %r2413, %r2368, %p63;
	selp.b32 	%r2414, %r2376, %r2372, %p63;
	shfl.sync.bfly.b32	%r2415, %r2414, 1, 31, -1;
	selp.b32 	%r2389, %r2372, %r2415, %p63;
	selp.b32 	%r2390, %r2415, %r2376, %p63;
	// begin inline asm
	prmt.b32 %r2380, %r2381, %r2382, %r391;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2384, %r2381, %r2382, %r395;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2388, %r2389, %r2390, %r391;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2392, %r2389, %r2390, %r395;
	// end inline asm
	selp.b32 	%r2416, %r2388, %r2380, %p62;
	shfl.sync.bfly.b32	%r2417, %r2416, 2, 31, -1;
	selp.b32 	%r2397, %r2380, %r2417, %p62;
	selp.b32 	%r2398, %r2417, %r2388, %p62;
	selp.b32 	%r2418, %r2392, %r2384, %p62;
	shfl.sync.bfly.b32	%r2419, %r2418, 2, 31, -1;
	selp.b32 	%r2405, %r2384, %r2419, %p62;
	selp.b32 	%r2406, %r2419, %r2392, %p62;
	// begin inline asm
	prmt.b32 %r2396, %r2397, %r2398, %r135;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2400, %r2397, %r2398, %r139;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2404, %r2405, %r2406, %r135;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2408, %r2405, %r2406, %r139;
	// end inline asm
	selp.b32 	%r2420, %r2404, %r2396, %p61;
	shfl.sync.bfly.b32	%r2421, %r2420, 4, 31, -1;
	selp.b32 	%r2422, %r2396, %r2421, %p61;
	selp.b32 	%r2423, %r2421, %r2404, %p61;
	selp.b32 	%r2424, %r2408, %r2400, %p61;
	shfl.sync.bfly.b32	%r2425, %r2424, 4, 31, -1;
	selp.b32 	%r2426, %r2400, %r2425, %p61;
	selp.b32 	%r2427, %r2425, %r2408, %p61;
	selp.b32 	%r2428, %r2426, %r2422, %p63;
	shfl.sync.bfly.b32	%r2429, %r2428, 1, 31, -1;
	selp.b32 	%r2430, %r2422, %r2429, %p63;
	selp.b32 	%r2431, %r2429, %r2426, %p63;
	selp.b32 	%r2432, %r2427, %r2423, %p63;
	shfl.sync.bfly.b32	%r2433, %r2432, 1, 31, -1;
	selp.b32 	%r2434, %r2423, %r2433, %p63;
	selp.b32 	%r2435, %r2433, %r2427, %p63;
	and.b32  	%r2436, %r2447, 16256;
	or.b32  	%r2437, %r2436, %r87;
	or.b32  	%r2438, %r2437, %r90;
	or.b32  	%r2439, %r2438, %r88;
	or.b32  	%r2440, %r89, %r2439;
	cvt.u64.u32 	%rd340, %r2440;
	add.s64 	%rd341, %rd4, %rd340;
	st.global.v4.u32 	[%rd341], {%r2430, %r2434, %r2431, %r2435};
	add.s32 	%r109, %r2447, 128;
	setp.ne.s32 	%p64, %r2447, 65408;
	mov.u32 	%r2447, %r109;
	@%p64 bra 	$L__BB0_11;
$L__BB0_17:                             // %L31177
	selp.u32 	%r2441, 1, 0, %p69;
	{ 
	.reg .pred 	%p1; 
	.reg .pred 	%p2; 
	setp.ne.u32 	%p1, %r2441, 0; 
	bar.red.or.pred 	%p2, 0, %p1; 
	selp.u32 	%r2442, 1, 0, %p2; 
	}
	setp.eq.s32 	%p65, %r2442, 0;
	or.pred  	%p66, %p65, %p1;
	@%p66 bra 	$L__BB0_19;
// %bb.18:                              // %L31207
	st.global.u32 	[%rd8], %r122;
$L__BB0_19:                             // %L31253
	mov.u32 	%r2444, 0;
	st.global.u32 	[%rd7], %r2444;
	ret;
$L__BB0_7:                              // %L149
	mov.u32 	%r2445, 2;
	st.global.u32 	[%rd7], %r2445;
	mov.u64 	%rd342, exception2743;
	cvta.global.u64 	%rd343, %rd342;
	{ // callseq 6, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd343;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 6
	{ // callseq 7, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd25;
	st.param.b32 	[param0+8], %r114;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 7
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
$L__BB0_1:                              // %L8
	mov.u64 	%rd26, exception12749;
	cvta.global.u64 	%rd27, %rd26;
	{ // callseq 0, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd27;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 0
	{ // callseq 1, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd25;
	st.param.b32 	[param0+8], %r114;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 1
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
$L__BB0_3:                              // %L24
	mov.u64 	%rd28, exception12749;
	cvta.global.u64 	%rd29, %rd28;
	{ // callseq 2, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd29;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 2
	{ // callseq 3, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd25;
	st.param.b32 	[param0+8], %r114;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 3
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
$L__BB0_21:                             // %L365
	mov.u32 	%r129, 3;
	st.global.u32 	[%rd7], %r129;
	mov.u64 	%rd33, exception2743;
	cvta.global.u64 	%rd34, %rd33;
	{ // callseq 4, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd34;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 4
	{ // callseq 5, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd25;
	st.param.b32 	[param0+8], %r114;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 5
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
                                        // -- End function
}
